         TITLE 'IGG03001 - RENAME - LOAD 3 - RENAME DSCB'        A38860
IGG03001 CSECT
*          VS2 RELEASE 01 DELETIONS
*0000                                                            YM2930
*          RELEASE 21 DELETIONS
*0000000200-000280,002600,007600,012600-012800,014780,025800,    A38860
*0000030862-030942,031800-032000,036400,036600-036800,037200,    A38860
*0000039200-039500,040160,074800,076400-077000                   A38860
*0980014992-014994,035640                                        A43188
*0000031200                                                     SA49351
*0000026600-027200                                               A52462
*          RELEASE 21.7 DELETIONS/CHANGES
*0000019600-019800,023400                                       SA56390
*0000000310-000390,002060-002120,012250-012550,031010-031120,   SA53147
*0000040130                                                     SA53147
*0000019000,045800                                              SA48172
*          RELEASE 20 DELETIONS
*3451025000                                                      M0013
*3451000360-000640,000760-001000,030824-030952                   S20201
*          RELEASE 19 DELETIONS
*1056013800,035800,079800                                        S19028
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000250,000266,001010,001200,003000-003200,004400-005000,    Y02080
*0000006500-006550,012650-012750,013400,014700-014800,014900,    Y02080
*0000014940,014990,014992,015044,015055,019200,019600,021850,    Y02080
*0000023200,024000,024400,024800,026000,026500,028200,030720,    Y02080
*0000030872,031000,031160,031195-031600,035416,035600-035680,    Y02080
*0000036200,036400,037000-037200,040000,040150,043200,048400-    Y02080
*0000048600,052200,054020-054060,054200-076800,078800            Y02080
*0000010900,020000,021000,076800-083800                          Y02078
*0000000030-000150,001600-006400,006500-006550,008600,009000,    Y02082
*0000009400,009800,010200,010640,013770-013840,014830-014840,    Y02082
*0000014870,014982-015171,015900-016000,021800-021950,023600-    Y02082
*0000024800,026000-026200,030660-037000,039100,039900,040100,    Y02082
*0000054010-054300                                               Y02082
*0000015140                                                      Y02144
*0000025000                                                      Y02134
*0000015020,015100,022200,025200,033460,033620,034420,035040     YM1337
*0000033620                                                      YM2880
*0000039050,039150                                               YM2887
*0000023530,023680,024370                                        YM4653
*
*            VS2 RELEASE 808 CHANGES
*C033550,033560                                                @ZA17061
*                                                              @G60ASBJ
*            SU60 CHANGES/DELETIONS                            @G60ASBJ
*                                                              @G60ASBJ
*A 012819-012822,024806-024824,035640-035650,035670-035680     @G60ASBJ
*C 024611,024621,024631,024805,024825,033540                   @G60ASBJ
*D 035660-035680                                               @G60ASBJ
*                                                              @G60ASBJ
* STATUS CHANGE LEVEL 008
*
*MODULE NAME - IGG03001
*
*DESCRIPTIVE NAME - RENAME - LOAD 3 - RENAME DSCB
*
*COPYRIGHT - NONE
*
*CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING CSECT CARD
*
*ATTRIBUTES - REENTRANT
*
*FUNCTION - THIS MODULE READS THE DATA PORTION OF THE FORMAT 1
*          DSCB TO BE RENAMED.  IF THE ENQ ON THE DATA SET NAME
*          (ISSUED IN MODULE IGC00030) INDICATED THAT SOMEONE COULD
*          BE OPEN TO THE DATA SET, THIS MODULE THEN SEARCHES THE
*          JOB'S DEBS TO ENSURE THAT NO ONE IS CURRENTLY OPEN TO
*          THE DATA SET.  IF THE DATA SET IS PASSWORD PROTECTED,
*          CONTROL IS GIVEN TO MODULE SECLOADA.  IF NO ONE IS OPEN
*          TO THE DATA SET, THIS MODULE THEN WRITES THE DSCB BACK
*          TO THE VTOC WITH THE NEW NAME IN ITS KEY.
*          AFTER THE DSCB HAS BEEN WRITTEN BACK, THE VTOC IS DEQ'ED.
*          IF THE UNIT WAS DYNAMICALLY ALLOCATED, DYNAMIC ALLOCATION
*          IS CALLED TO DEALLOCATE THE UNIT.  IF THERE ARE MORE
*          VOLUMES TO BE PROCESSED, CONTROL IS RETURNED TO IGG03002.
*          AFTER ALL THE VOLUMES HAVE BEEN PROCESSED, THIS MODULE
*          TESTS IF A VOLUME WAS ENQ'ED AND MOUNTED BY IGG0300F.
*          IF YES, CONTROL IS GIVEN TO IGG0300F TO DEMOUNT AND DEQ
*          THE VOLUME.  IF RENAME ENQ'ED ON THE DATA SET NAME OR
*          THE TIOT, CORRESPONDING DEQ'S ARE ISSUED.  IF DATA SET
*          RECORDING FOR SMF IS REQUIRED, THIS MODULE BUILDS AN
*          SMF RECORD TYPE 18.  IT THEN FREES THE WORK AREA AND
*          RETURNS TO THE CALLER.
*          RENAMES PROFILES OF RAC DEFINED DATASETS.           @Z40RSGD
*          RENAME OF MULTIVOLUME RAC DEFINED DATA SETS IS NOT  @Z40RSGD
*          ALLOWED.                                            @Z40RSGD
*
*ENTRIES - THE ONLY ENTRY POINT TO THIS MODULE IS IGG03001.  ENTRY
*          IS MADE FROM THE SECOND LOAD OF RENAME (IGG03002), FROM
*          SECLOADA, OR FROM IGG0300F.
*
*SUPERVISOR CALLS AND EXTERNAL ROUTINES IN THIS MODULE -
*          EXCP(0)  - READS FROM OR WRITES TO A DIRECT ACCESS DEVICE
*          WAIT(1)  - WAITS ON AN EVENT CONTROL BLOCK
*          TIME(11) - OBTAINS THE CURRENT TIME AND DATE
*          DEQ(48)  - DEQ'S FROM SYSVTOC, SYSZTIOT, AND/OR SYSDSN
*          RESERVE  - ENQ'S ON THE VTOC (SVC 56)
*          SMFWTM   - WRITES AN SMF RECORD (SVC 83)
*          DYNALLOC - DYNAMICALLY DEALLOCATES THE UNIT (SVC 99)
*          SETLOCK  - OBTAINS/RELEASES THE LOCAL MEMORY LOCK
*          MODESET  - SWITCHES TO THE CALLER'S KEY
*          IECRES   - LOADS/BRANCHES TO ANOTHER MODULE
*                   - OBTAINS/FREES WORK AREA(S)
*
*OTHER MACROS ISSUED -
*          IECDSECS - EXPANDS THE CVT, DSAB, IEZDEB, JMR, JSCB,
*                     PSA, QDB, RB, RRPL, SMF, SMFTCT, TCB, TIOT,
*                     AND UCB DSECTS
*          IECSDSL1 - ENABLES SYMBOLIC ADDRESSING OF DSCB'S
*          IECRENWA - EXPANDS THE RENAME WORK AREA
*          IEFZB4D0 - EXPANDS THE DYNAMIC ALLOCATION REQUEST BLOCK
*          IEFZB4D2 - EXPANDS THE DYNAMIC ALLOCATION TEST UNIT KEYS
*          IFASMFR  - BUILDS AN SMF RECORD TYPE 18
*          XCTLTABL - BUILDS A LIST OF MODULE NAMES AND ADDRESSES
*
*INPUT -   AT ENTRY TO THIS MODULE REGISTER 13 POINTS TO THE WORK
*          AREA.  REGISTER 8 POINTS TO THE CURRENT ENTRY IN THE
*          VOLUME LIST.  REGISTER 10 POINTS TO THE PARAMETER LIST.
*          IF REENTRY FROM SECLOADA, REGISTER 10 CONTAINS ONE OF
*          THE FOLLOWING RETURN CODES:
*          X'00000000' - SUCCESSFUL PASSWORD CHECKING
*          X'01000000' - UNSUCCESSFUL PASSWORD CHECKING
*          X'02000000' - I/O ERROR OR NO PASSWORD DATA SET ON SYSRES
*
*OUTPUT -  THE RENAMED FORMAT 1 DSCB IS WRITTEN TO THE VTOC.
*          THE FOLLOWING INFORMATION IS PASSED TO MODULE IGG03002:
*          REGISTER 10 POINTS TO THE PARAMETER LIST, AND REGISTER
*          13 POINTS TO THE WORK AREA, IN WHICH 'VOLNUM' CONTAINS
*          THE NUMBER OF VOLUME LIST ENTRIES REMAINING TO BE RENAMED,
*          AND 'VOLPTR' CONTAINS THE ADDRESS OF THE NEXT ENTRY.
*          THE FOLLOWING INFORMATION IS PASSED TO SECLOADA:
*          REGISTER 1 CONTAINS THE DSAB ADDRESS.
*          REGISTER 4 POINTS TO THE DATA PORTION OF THE FORMAT 1 DSCB.
*          REGISTER 5 POINTS TO THE IOB.
*          REGISTER 10 CONTAINS THE VALUE X'02000000'.
*          REGISTER 11 POINTS TO THE DATA SET NAME.
*          REGISTER 13 POINTS TO THE EXTENDED PREFIX OF THE WORK AREA.
*          THE FOLLOWING INFORMATION IS PASSED TO IGG0300F:
*          REGISTER 2 POINTS TO THE DEB.
*          REGISTER 3 POINTS TO THE VOLUME SERIAL NUMBER.
*          REGISTER 4 CONTAINS THE CHARACTERS '3001'.
*          REGISTER 8 POINTS TO THE CURRENT VOLUME LIST ENTRY.
*          REGISTER 11 CONTAINS THE PRIMARY (DEMOUNTABLE) UCB ADDRESS.
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = 676 BYTES
*
*ERROR CONDITIONS - OLD NAME DSCB NOT FOUND IN VTOC
*                   NEW NAME DSCB ALREADY EXISTS IN VTOC
*                   IMPROPER PASSWORD PRESENTED
*                   PERMANENT I/O ERROR
*                   DATA SET IS OPEN
*                   RENAME OF RAC DEFINED MULTI-VOLUME DATA    @Z40RSGD
*
*REGISTER USAGE
R0       EQU   0
R1       EQU   1
RPARM    EQU   2                        PARAMETER LIST POINTER   Y02082
R2       EQU   2
RDSAB    EQU   2                        POINTER TO THE DSAB      Y02082
RWRK     EQU   3                        WORK REGISTER            Y02082
RTIOT    EQU   3                        POINTER TO THE TIOT      Y02082
R3       EQU   3
VOLCTR   EQU   5                        NUMBER OF VOLUMES        Y02082
R4       EQU   4
RTEXT    EQU   4                        POINTER TO TEXT UNIT     Y02082
R5       EQU   5
R6       EQU   6
R7       EQU   7
VOLISTX  EQU   8
RERRSAVE EQU   8                        ERROR CODE REGISTER      Y02080
RCVT     EQU   9
R9       EQU   9
PL       EQU   10
RA       EQU   10                                                S19028
R11      EQU   11
RUCB     EQU   11
RBASE    EQU   12
RWKAREA  EQU   13
RETURN   EQU   14
WORKREG  EQU   15
*
* OTHER EQUATES
*
K0       EQU   0                        CONSTANT OF ZERO         Y02082
K1       EQU   1                        CONSTANT OF 1            Y02078
K2       EQU   2                        CONSTANT OF 2            Y02082
K3       EQU   3                        CONSTANT OF 3            Y02082
K4       EQU   4                        CONSTANT OF 4            Y02078
K6       EQU   6                        CONSTANT OF 6            Y02078
K8       EQU   8                        CONSTANT OF 8            Y02082
K12      EQU   12                       CONSTANT OF 12           Y02080
FW       EQU   4                        LENGTH OF A FULLWORD     Y02082
X00      EQU   X'00'                    ONE BYTE OF BINARY ZEROS Y02080
DOSBIT   EQU   X'80'                    DOS BIT IN DS4VTOCI      Y02078
DIRFBIT  EQU   X'04'                    DIRF BIT IN DS4VTOCI     Y02078
RTNCODE8 EQU   8                        RETURN CODE OF 8         Y02082
F1       EQU   C'1'                     FORMAT 1 DSCB ID         Y02080
PSWDDS   EQU   X'10'                    PASSWORD-PROTECTED D/S   Y02080
SMFREC18 EQU   18                       SMF RECORD TYPE 18       Y02082
UCBADDR  EQU   32                       DISP. TO UCB ADDR IN DEB Y02082
VOLSER   EQU   4                        OFFSET TO THE VOL SER IN Y02082
*                                       A VOLUME LIST ENTRY      Y02082
STATUS   EQU   11                       DISP. TO VOLIST STATUS   Y02078
ENTRYL   EQU   12                       VOL LIST ENTRY LENGTH    Y02082
NOF1     EQU   X'01'                    F1 DSCB NOT FOUND ERROR  Y02078
PSWDERR  EQU   X'02'                    PASSWORD ERROR           Y02082
DUPNAME  EQU   X'03'                    DUPLICATE NAME ERROR     Y02078
IOERR    EQU   X'04'                    I/O ERROR CODE           Y02078
OPENDS   EQU   X'07'                    OPEN DATA SET ERROR      Y02082
CSWAD    EQU   8                        CSW OFFSET IN IOB       SA56390
ALLBITS  EQU   X'FF'                    MASK OF ALL ONES         Y02082
BLANK    EQU   C' '                     EBCDIC BLANK             YM2880
DEBDADEV EQU   X'04'                    DEB EXTENT SCALE FOR DA  Y02082
DS1EXTUL EQU   X'40'                    USER LABEL BIT IN EXTENT Y02082
SKIP     EQU   X'10'                    CCW SKIP FLAG           SA48172
SLI      EQU   X'20'                    CCW SUPPRESS LENGTH     SA48172
*                                       INDICATOR               SA48172
RACPASS  EQU   X'40'                    BYPASS RACDEF CAMLST   @G60ASBJ
*                                       BIT                    @G60ASBJ
DS1RACDF EQU   X'40'                    DS1DSIND-DATA SET IS   @Z40RSGD
*                                       RAC DEFINED            @Z40RSGD
RACERROR EQU   X'08'                    ERROR CODE RENAME NOT  @Z40RSGD
*                                       ALLOWED                @Z40RSGD
*
         BALR  RBASE,R0
         USING BEGIN,RBASE
         USING RENAMWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         USING CVT,RCVT
         USING UCB,RUCB
*
BEGIN    EQU   *                        START HERE               Y02134
         TM    SISW2,DEMNTSW            TEST IF ENTERED FROM     Y02134
*                                       IGG0300F AFTER DEMOUNT   Y02134
         BO    RETURNPT                 BRANCH IF YES            Y02134
         CLI   STATUS(VOLISTX),X00      TEST IF ERROR ENTRY FROM Y02082
*                                       IGG03002                 Y02082
         BNE   TSTALLOC                 BRANCH IF YES            Y02082
         LTR   PL,PL                    TEST FOR PASSWORD        S19028
         BZ    PSWDOKAY                 BR IF RETURN WITH PROPER PSWD
         ST    PL,FIELD1
         TM    FIELD1,X'03'             WAS THIS AN ERROR RETURN PSWD
         BM    PSWDEXIT                 BR IF PSWD PROBLEM TO EXIT
*
* IF THIS SECTION IS ENTERED ENTRY WAS MADE FROM THE SECOND LOAD
*
         L     WORKREG,CVTPCNVT         LOAD CONVT ROUTINE ADDRESS
NOSUBUCB L     R0,SRTEFSCT              LOAD TTRO FROM UCB
         LA    R1,WKADEB                LOAD DEB ADDRESS         Y02082
         LA    R2,SEEK                  PUT MBBCCHHR IN SEEK FIELD
         LR    R3,RWKAREA               SAVE WORK AREA POINTER
         STM   R9,RWKAREA,IECREGSV+K12  SAVE VOLATILE REGS       Y02080
         BALR  RETURN,WORKREG           CONVERT TTRO TO MBBCCHHR
         LM    R9,RWKAREA,IECREGSV+K12-RENAMWKA(R3)  RESTORE     Y02080
         MVC   VTOCADR(5),SEEK+3        STORE VTOC ADDRESS
         MVC   INCCHHR(5),VTOCADR       SET UP SEARCH I.D. ADDRESS
         MVC   MJNAME(L'VTOCNAME),VTOCNAME  MAJOR RESOURCE NAME  Y02082
         MVI   ENQAREA,X'FF'            SET LAST ENTRY INDICATOR Y02082
         SR    R1,R1                    ZERO REGISTER            Y02082
         STH   R1,ENQAREA+K2            CLEAR FOR RESERVE MACRO  Y02082
         RESERVE (MJNAME,PVOLSER,E,6,SYSTEMS),                   YM3022X
               MF=(E,ENQAREA),UCB=WKADEB+32  ISSUE ENQ ON VTOC   Y02082
*
         OI    DSMADTB2,DSMVTOCR        SET VTOC ENQ'ED BIT      Y02144
         L     R1,IECRRPRM              RECOVERY RTN LIST ADDR   Y02144
         USING RRPLIST,R1               PARM LIST ADDRESSABILITY Y02144
         ST    RUCB,RRUCBPTR            SAVE THE UCB ADDRESS     Y02144
         DROP  R1                                                Y02144
*
* THIS SECTION RELOCATES THE CHANNEL PROGRAM.
*
         LM    R0,R7,CHANPROG           LOAD CCW1 TO CCW4 CONSTANTS
         AR    R0,RWKAREA              RESOLVE ADDR IN CCW1
         AR    R2,RWKAREA              RESOLVE ADDR IN CCW2
         AR    R4,RWKAREA              RESOLVE ADDR IN CCW3
         AR    R6,RWKAREA              RESOLVE ADDR IN CCW4
         STM   R0,R7,CCW1               STORE CCW1 - CCW4        Y02082
         LA    WORKREG,CCW9-CCW1
         AR    R2,WORKREG              RESOLVE ADDR IN CCW5
         STM   R2,R3,CCW5              STORE CCW5
         LA    WORKREG,CCW11-CCW9
         AR    R2,WORKREG              RESOLVE ADDR IN CCW8
         STM   R2,R3,CCW8              STORE CCW8
         LM    R0,R7,CHANPROG+32       LOAD CCW9 TO CCW12 CONSTANTS
         L     WORKREG,8(0,PL)         LOAD ADDR OF NEW DATA SET NAME
         AR    R0,WORKREG              RESOLVE ADDR IN CCW9
         AR    R2,RWKAREA              RESOLVE ADDR IN CCW10
         AR    R4,RWKAREA              RESOLVE ADDR IN CCW11
         AR    R6,RWKAREA              RESOLVE ADDR IN CCW12
         STM   R0,R7,CCW9              STORE CCW9 TO CCW12
         STM   R0,R1,CCW6              STORE CCW6
         STM   R4,R5,CCW7              STORE CCW7               SA48172
         MVI   CCW7+4,SLI+SKIP         SET SLI, SKIP BITS       SA48172
         MVI   DS1FMTID,X00            ZERO FORMAT ID            Y02080
*
* THIS SECTION SEARCHES FOR A DUPLICATE NAME DSCB.
*
EXECUTE1 BAL   RETURN,EXECIO           SEARCH FOR DUPLICATE NAME DSCB
         L     R2,IOB+CSWAD            GET CCW COMMAND ADDRESS  SA56390
         LA    R2,0(R2)                CLEAR HIGH BYTE          SA56390
         LA    R3,CCW8                 GET CCW8 ADDRESS         SA56390
         CLR   R2,R3                   DOES CSW POINT TO CCW8   SA56390
         BE    NODSNAME                BRANCH IF YES            SA56390
         CLI   DS1FMTID,F1             TEST FOR DUP NAME DSCB   SA56390
         BE    SAMENAME                YES, DUP NAME ERROR      SA56390
         B     PERMERR                 BAD VTOC - I/O ERR CODE  SA56390
NODSNAME EQU   *                                                SA56390
         TM    DS4VTOCI,DOSBIT+DIRFBIT  TEST IF DOS OR DIRF SET  Y02078
         BZ    NAMEOKAY                BR IF NOT
         TM    ERCODE,X'80'            TEST FOR SECOND PASS
         BO    NAMEOKAY                BR IF YES
         OI    ERCODE,X'80'            TURN ON FIRST PASS INDICATOR
         CLC   DS4HPCHR(K4),DS4VTOCE+K6  TEST IF CCHH OF 'HIGH   Y02078
*                                       WATER' MARK IS THE LAST  Y02078
*                                       TRACK IN THE VTOC        Y02078
         BNE   NEWHIGH                  BRANCH IF NOT            Y02078
         CLC   DS4HPCHR+K4(K1),DS4DEVDT  TEST IF R OF THE 'HIGH  Y02078
*                                       WATER' MARK IS THE LAST  Y02078
*                                       RECORD ON THE TRACK      Y02078
         BE    NAMEOKAY                 BRANCH IF YES            Y02078
NEWHIGH  EQU   *                       NEW CCHHR                 Y02078
         MVC   DS4HPCHR(K4),DS4VTOCE+K6  MOVE IN NEW CCHH        Y02078
         MVC   DS4HPCHR+4(1),DS4DEVDT  PICK UP NEW R
         MVI   CCW3+4,X'50'            STORE NEW CCW3
         B     EXECUTE1
*
* THIS SECTION READS THE DATA PORTION OF THE OLD DSCB.
*
NAMEOKAY L     R0,CHANPROG+32          LOAD CCW9
         LA    WORKREG,PDSNAME         LOAD ADDR OF OLD DSNAME   YM1337
         AR    R0,WORKREG              RESOLVE ADDR IN CCW9
         ST    R0,CCW9                 STORE CCW9
         ST    R0,CCW6                 STORE CCW6
EXECUTE2 BAL   RETURN,EXECIO           SEARCH FOR AND READ OLD DSCB
         L     R2,IOB+CSWAD            GET CCW COMMAND ADDRESS  SA56390
         LA    R2,0(R2)                CLEAR HIGH BYTE          SA56390
         LA    R3,CCW8                 GET CCW8 ADDRESS         SA56390
         CLR   R2,R3                   DOES CSW POINT TO CCW8   SA56390
         BE    NODSCB                  YES, NO DSCB FOUND       SA56390
         CLI   DS1FMTID,F1             TEST FOR F1 DSCB IN CORE  Y02080
         BNE   PERMERR                 BAD VTOC - I/O ERR CODE  SA56390
         MVI   ERCODE,X00              RESET 1ST PASS INDICATOR  Y02082
*
* THIS SECTION SEARCHES THE JOB'S DEBS IF NECESSARY IN ORDER TO
* ENSURE THAT NO ONE IS OPEN TO THE DATA SET BEING RENAMED.
*
F1FOUND  EQU   *                        F1 DSCB FOUND            Y02082
         TM    SISW1,DEBSRCH            IS A DEB SEARCH NEEDED   Y02082
         BZ    PSWDCHK                  BRANCH IF NOT            Y02082
         L     R1,TCBADDR               CURRENT TCB ADDRESS      Y02082
         USING TCB,R1                                            Y02082
         L     R1,TCBJSCB               JSCB ADDRESS             Y02082
         USING IEZJSCB,R1                                        Y02082
         STM   R11,RETURN,IECREGSV+K12  SAVE SETLOCK REGISTERS   Y02082
         LR    R2,RWKAREA               SAVE WORKAREA BASE       Y02082
GETLOCK  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,  PREVENT DEBCHK  Y02082*
               RELATED=(DEBTBL,IGG03001(FREELOCK))               Y02082
         LR    RWKAREA,R2               RESTORE WORKAREA BASE    Y02082
         LM    R11,RETURN,IECREGSV+K12  RESTORE SETLOCK REGS     Y02082
*
         L     R1,JSCBDBTB              ADDR OF DEB TABLE        Y02082
         LTR   R1,R1                    IS ADDR ZERO             Y02082
         BZ    NOPENDS                  BRANCH IF YES            Y02082
         LH    R2,K0(,R1)               LAST ENTRY OFFSET        Y02082
         AR    R2,R1                    ADDRESS OF LAST ENTRY    Y02082
NXTDEB   EQU   *                        NEXT DEB                 Y02082
         LA    R1,K4(,R1)               POINT TO NEXT ENTRY      Y02082
         CR    R1,R2                    END OF DEB TABLE         Y02082
         BE    NOPENDS                  BRANCH IF YES            YM4653
         OC    K0(K4,R1),K0(R1)         EMPTY ENTRY              Y02082
         BZ    NOPENDS                  BRANCH IF YES            Y02082
         TM    K3(R1),ALLBITS           DELETED ENTRY            Y02082
         BO    NXTDEB                   BRANCH IF YES            Y02082
*                                       R1 POINTS TO A FULLWORD  Y02082
*                                       CONTAINING A DEB POINTER Y02082
         L     R3,K0(,R1)               LOAD DEB ADDRESS         Y02082
         USING DEBBASIC,R3                                       Y02082
         LA    R4,DEBBASIC-DEBAMTYP     OFFSET BACK TO DEBAMTYP  Y02082
         LCR   R4,R4                    MAKE OFFSET NEGATIVE     Y02082
         AR    R4,R3                    R4 POINTS TO DEBAMTYP    Y02082
         USING DEBAMTYP,R4                                       Y02082
         CLI   DEBAMTYP,K0              AMTYP ABSENT             Y02082
         BE    AMVALID                  BRANCH IF YES--VALID     Y02082
         CLC   DEBAMTYP,AMBPAM          BPAM DEB                 Y02082
         BE    AMVALID                  BRANCH IF YES--VALID     Y02082
         CLC   DEBAMTYP,AMBDAM          BDAM DEB                 Y02082
         BE    AMVALID                  BRANCH IF YES            Y02082
         CLC   DEBAMTYP,AMSAM           SAM DEB                  Y02082
         BE    AMVALID                  BRANCH IF YES            Y02082
         CLC   DEBAMTYP,AMEXCP          EXCP DEB                 Y02082
         BE    AMVALID                  BRANCH IF YES            Y02082
         CLC   DEBAMTYP,AMISAM          ISAM DEB                 Y02082
         BNE   NXTDEB                   BRANCH IF NO-THIS DEB    Y02082
*                                       NEED NOT BE CHECKED      Y02082
         CLI   DEBNMEXT,K1              0 OR ONE EXTENT IN ISAM  Y02082
*                                       DEB                      Y02082
         BNH   NXTDEB                   INVALID ISAM DEB         Y02082
         DROP  R4                                                Y02082
         SR    R4,R4                    ZERO FOR IC              Y02082
         IC    R4,DEBNMEXT              INSERT NUMBER OF EXTENTS Y02082
         BCTR  R4,K0                    REDUCE BY ONE            Y02082
         LA    R3,DEBNMTRK-DEBUCBAD+L'DEBNMTRK(,R3)  SKIP FIRST  Y02082
*                                       EXTENT FOR ISAM          Y02082
         B     CHKEXTNT                 GO TO CHECK EACH EXTENT  Y02082
AMVALID  EQU   *                        VALID AM TYPE            Y02082
         CLI   DEBNMEXT,K0              ARE THERE ANY EXTENTS    Y02082
         BZ    NXTDEB                   BRANCH IF NO             Y02082
         CLI   DEBEXSCL,DEBDADEV        IS EXTENT SCALE 4 FOR DA Y02082
         BNE   NXTDEB                   BRANCH IF NO             Y02082
         L     R4,DEBSUCBA              GET UCB ADDRESS          Y02082
         USING UCBOB,R4                                          Y02082
         LA    R4,K0(,R4)               CLEAR HIGH BYTE          Y02082
         LTR   R4,R4                    IS THERE A UCB           Y02082
         BZ    NXTDEB                   BRANCH IF NO             Y02082
         TM    UCBTBYT3,UCB3DACC        IS IT DIRECT ACCESS      Y02082
         BZ    NXTDEB                   BRANCH IF NO             Y02082
         DROP  R4                                                Y02082
         SR    R4,R4                    ZERO FOR IC              Y02082
         IC    R4,DEBNMEXT              NUMBER OF EXTENTS        Y02082
CHKEXTNT EQU   *                        CHECK EXTENT             Y02082
         LA    R3,DEBBASND              INCREMENT PAST BASIC     Y02082
*                                       SECTION OF DEB           Y02082
         USING DEBDASD,R3                                        Y02082
CMPREXTS EQU   *                        CHECK CCHH               Y02082
         CLC   DEBUCBA,WKADEB+UCBADDR+K1  TEST IF SAME UCB       YM4653
         BNE   NEXTXTNT                 BRANCH IF NOT            YM4653
         TM    DS1EXT1,DS1EXTUL         IS FIRST EXTENT USER LBL Y02082
         BZ    NOTUL                    BRANCH IF NOT            Y02082
         CLC   DEBSTRCC(L'DEBSTRCC+L'DEBSTRHH),DS1EXT2+K2 IS THE Y02082
*                                       DEB'S STARTING CCHH      Y02082
*                                       EQUAL TO THE DSCBS       Y02082
         BE    NORENAME                 BRANCH IF YES            Y02082
         B     NEXTXTNT                 GET NEXT EXTENT          Y02082
NOTUL    EQU   *                        NOT USER LBL EXTENT      Y02082
         CLC   DEBSTRCC(L'DEBSTRCC+L'DEBSTRHH),DS1EXT1+K2  IS    Y02082
*                                       THE DEB'S STARTING CCHH  Y02082
*                                       EQUAL TO THE DSCB'S      Y02082
         BE    NORENAME                 BRANCH IF YES            Y02082
NEXTXTNT EQU   *                        NEXT EXTENT              Y02082
         LA    R3,DEBNMTRK+L'DEBNMTRK   INCREMENT TO NEXT EXTENT YM4653
         BCT   R4,CMPREXTS              TRY NEXT EXTENT          Y02082
         B     NXTDEB                   NO MORE EXTENTS          Y02082
NORENAME EQU   *                        OPEN DATA SET ERROR      Y02082
         LA    R3,OPENERR               SET UP BRANCH ADDRESS AS Y02082
*                                       THE DATA SET IS OPEN AND Y02082
*                                       CANNOT BE RENAMED        Y02082
         B     FREELOCK                 FREE THE LOCAL LOCK      Y02082
NOPENDS  EQU   *                        GET BRANCH ADDR          Y02082
         LA    R3,PSWDCHK               SET UP BRANCH ADDRESS    Y02082
*
FREELOCK EQU   *                        RELEASE LOCAL LOCK       Y02082
         LR    R1,RWKAREA               SAVE WORKAREA BASE       Y02082
         STM   R11,RETURN,IECREGSV+K12  SAVE SETLOCK REGISTERS   Y02082
         SETLOCK RELEASE,TYPE=LOCAL,    RELEASE LOCAL LOCK       Y02082*
               RELATED=(DEBTBL,IGG03001(GETLOCK))                Y02082
         LR    RWKAREA,R1               RESTORE WORKAREA BASE    Y02082
         LM    R11,RETURN,IECREGSV+K12  RESTORE SETLOCK REGS     Y02082
         BR    R3                       RETURN                   Y02082
*
* SECLOADA IS GIVEN CONTROL IF THE DATA SET IS PASSWORD PROTECTED.
*
PSWDCHK  EQU   *                        PASSWORD CHECK           Y02082
         TM    DS1DSIND,DS1RACDF+PSWDDS IS DATA SET RAC        @Z40RSGD
*                                       DEFINED OR PASSWORD    @Z40RSGD
*                                       PROTECTED              @Z40RSGD
         BZ    SKIPPSWD                 BRANCH IF NOT            Y02082
         TM    DS1DSIND,DS1RACDF        RAC DEFINED            @Z40RSGD
         BZ    CHECKPSW                 NO- PASSWORD           @Z40RSGD
* BYPASS RACHECK IF JCSBPASS = SET                             @Z40RSGD
         L     WORKREG,TCBADDR         TCB ADDRESSABILITY      @Z40RSGD
         L     RWRK,TCBJSCB-TCB(WORKREG) JSCB ADDR             @G60ASBJ
         USING IEZJSCB,RWRK                                    @G60ASBJ
         L     RWRK,JSCBACT            JSCB ACTIVE             @G60ASBJ
         TM    JSCBSWT1,JSCBPASS       SKIP RACHECK            @Z40RSGD
         BO    NORACHK                 YES                     @Z40RSGD
*   CHECK AUTHORIZATION TO RENAME.                             @Z40RSGD
         MVC   RACHECK(LRACHECK),MRACHECK SET UP PARM LIST     @Z40RSGD
         RACHECK ENTITY=PDSNAME,        DATASET NAME           @Z40RSGDX
               VOLSER=PVOLSER,          VOLUME SERIAL NUMBER   @Z40RSGDX
               MF=(E,RACHECK)                                  @Z40RSGD
         LTR   WORKREG,WORKREG          IS HE AUTHORIZED       @Z40RSGD
         BNZ   RACERR                   NO - REJECT RENAME     @Z40RSGD
NORACHK  EQU   *                       RENAME PROFILE          @Z40RSGD
*   RENAME RAC PROFILE                                         @Z40RSGD
         MVC   RACDEF(LRACDEF),MRACDEF SET UP PARM LIST        @Z40RSGD
         L     PL,OLDPLPTR              POINTER TO NEWNAME     @G60ASBJ
************************************************************** @G60ASBJ
*                                                            * @G60ASBJ
*  THE RACDEF RENAME WILL BE BYPASSED IF THE FOLLOWING       * @G60ASBJ
*  CONDITIONS ARE MET:                                       * @G60ASBJ
*                      (1) THE CALLER IS AUTHORIZED.         * @G60ASBJ
*                      (2) THE JSCBPASS BIT IS SET TO 1.     * @G60ASBJ
*                      (3) THE SECOND BIT OF THE SECOND      * @G60ASBJ
*                          BYTE OF THE RENAME (CAMLST)       * @G60ASBJ
*                          PARAMETER LIST IS SET TO 1.       * @G60ASBJ
*                                                            * @G60ASBJ
************************************************************** @G60ASBJ
         TM    JSCBSWT1,JSCBPASS        SKIP RACDEF (JFCBPASS) @G60ASBJ
         BNO   RACDEF1                  NO - ISSUE RACDEF      @G60ASBJ
         TM    K1(PL),RACPASS           BYPASS RACDEF ?        @G60ASBJ
         BO    SKIPPSWD                 YES, BYPASS RACDEF     @G60ASBJ
RACDEF1  DS    0H                       ISSUE RACDEF           @G60ASBJ
         L     WORKREG,8(PL)            GET VOL SER ADDRESS    @G60ASBJ
         RACDEF ENTITY=PDSNAME,         DATASET NAME           @Z40RSGDX
               VOLSER=PVOLSER,          VOLUME SERIAL NUMBER   @Z40RSGDX
               NEWNAME=(WORKREG),       NEW DATASET NAME       @Z40RSGDX
               MF=(E,RACDEF)                                   @Z40RSGD
         LTR   WORKREG,WORKREG          WAS DEFINITION OK      @Z40RSGD
         BNZ   RACERR                   NO - REJECT RENAME     @Z40RSGD
         B     SKIPPSWD                 AUTH-BYPASS PASSWORD   @Z40RSGD
CHECKPSW EQU   *                        CONTINUE PASSWORD      @Z40RSGD
*                                       CHECKING               @Z40RSGD
         TM    RTYPEFLG,PSWDCHKD        TEST IF ALREADY CHECKED  Y02082
         BO    SKIPPSWD                 BRANCH IF NOT 1ST VOLUME Y02082
         OI    RTYPEFLG,PSWDCHKD        SET PASSWORD CHECKED BIT Y02082
         LA    R4,DS1FMTID              ADDRESS OF THE F1 DSCB   Y02134
         LA    R11,PDSNAME              ADDRESS OF DATA SET NAME YM1337
         L     PL,SECCODE               SET RENAME CODE FOR SECURITY
         LA    R5,IOB                   IOB ADDRESS
         L     R1,DSABADDR              DSAB ADDR IN REGISTER 1  Y02082
         LA    R7,SECLOAD               POINT TO SECLOADA        Y02082
         SR    RETURN,RETURN            SET ENTRY OFFSET         Y02134
         B     LOADEXIT                 GO BRANCH TO SECLOADA    Y02082
*
* THIS SECTION WRITES THE NEW DSCB OVER THE OLD ONE.
*
PSWDOKAY L     PL,OLDPLPTR             RESTORE POINTER
SKIPPSWD EQU   *                                                 A52462
         SR    WORKREG,WORKREG         ZERO OUT REGISTER         A52462
         IC    WORKREG,NEWCCHHR+4      PICK UP R OF NEXT RECORD  A52462
         BCT   WORKREG,NOTLAST         BRANCH IF NOT LAST ON     A52462
*                                      TRACK                     A52462
         IC    WORKREG,DS4DEVDT        SET R TO LAST DSCB ON THE TRACK
NOTLAST  STC   WORKREG,NEWCCHHR+4      STORE R OF DSCB READ INTO CORE
         MVC   SEEK+3(5),NEWCCHHR
         L     WORKREG,8(0,PL)         LOAD ADDR OF NEW DATA SET NAME
         MVC   DS1DSNAM,0(WORKREG)     MOVE IN NEW NAME          Y02080
         LA    WORKREG,F1DSCB           POINT TO OUTPUT AREA     Y02080
         ST    WORKREG,CCW3             WRITE FROM F1DSCB        Y02080
         MVI   CCW3+7,X'8C'            SET UP CCW3
         MVI   CCW3,X'0D'              STORE CCW3
         MVC   CCW4(8),CCW1            STORE CCW4
         LA    WORKREG,CCW4             SET UP CCW5 FOR TIC
         ST    WORKREG,CCW5
         MVI   CCW5,X'08'
         XC    CCW5+4(4),CCW5
         MVC   CCW6(8),CHALPROG        STORE CCW6
         LA    WORKREG,CCW1             SET STARTING ADDRESS IN IOB
         ST    WORKREG,IOB+16
         BAL   RETURN,EXECIO           WRITE NEW NAME DSCB OVER OLD
         NI    SISW1,X'FF'-NOSMFRCD     RESET NO SMF RCD SWITCH  Y02082
*                                       SINCE AT LEAST ONE       Y02082
*                                       RENAME IS SUCCESSFUL     Y02082
         B     FINISH
*
* WHEN A DEB HAS BEEN FOUND OPEN TO THE DATA SET BEING RENAMED,
* THIS SECTION STORES AN ERROR CODE OF X'07' IN THE CURRENT AND
* ALL SUBSEQUENT VOLUME LIST ENTRIES. IF A PASSWORD ERROR OCCURS,
* X'02' IS STORED IN THE CURRENT AND ALL SUBSEQUENT ENTRIES.
*
* FOR OTHER ERROR CONDITIONS, THIS SECTION STORES THE APPROPRIATE
* ERROR CODE IN THE STATUS BYTE OF THE CURRENT VOLUME LIST ENTRY.
*
OPENERR  EQU   *                        OPEN DATA SET ERROR      Y02082
         LA    R3,OPENDS                OPEN DATA SET ERROR      Y02082
         B     SETEXIT                  GO STORE THE ERROR CODE  Y02082
PSWDEXIT EQU   *                        PASSWORD ERROR           Y02082
         LA    R3,PSWDERR               PASSWORD ERROR           Y02082
SETEXIT  EQU   *                        SET EXIT BIT             Y02082
         OI    RTYPEFLG,EXITBIT         SET EXIT BIT             Y02082
         LH    VOLCTR,VOLNUM            LOAD NBR OF VOLUMES LEFT Y02082
         LA    VOLCTR,K1(,VOLCTR)       INCREMENT BY ONE         Y02082
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
ERRLOOP  EQU   *                        ERROR LOOP               Y02082
         STC   R3,STATUS(VOLISTX)       STORE CODE IN VOLIST     Y02082
         LA    VOLISTX,ENTRYL(VOLISTX)  POINT TO NEXT ENTRY      Y02082
         BCT   VOLCTR,ERRLOOP           BRANCH IF MORE VOLUMES   Y02082
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         LA    WORKREG,ENTRYL           VOL LIST ENTRY LENGTH    Y02082
         SR    VOLISTX,WORKREG          POINT TO LAST ENTRY      Y02082
         B     SETCODE                  GO SET CALLER'S ERR CODE Y02082
         SPACE 2                                               @Z40RSGD
RACERR   EQU   *                        UNABLE TO RENAME PROF  @Z40RSGD
         LA    R3,RACERROR              UNAUTHORIZED RENAME    @Z40RSGD
         B     SETERROR                 BRANCH TO SET ERROR    @Z40RSGD
*
SAMENAME EQU   *                        DUPLICATE NAME           Y02078
         LA    R3,DUPNAME               DUPLICATE NAME ERROR     Y02078
         B     SETERROR                 BRANCH TO SET ERROR CODE Y02078
*
NODSCB   EQU   *                        NO F1 DSCB               Y02078
         LA    R3,NOF1                  NO F1 DSCB ERROR         Y02078
         B     SETERROR                 BRANCH TO SET ERROR CODE Y02078
*
PERMERR  EQU   *                        I/O ERROR                Y02078
         LA    R3,IOERR                 I/O ERROR                Y02078
*
SETERROR EQU   *                        SET ERROR CODE           Y02078
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
         STC   R3,STATUS(VOLISTX)       STORE CODE IN VOL LIST   Y02078
         DROP  R1                                                Y02078
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02078
SETCODE  EQU   *                        SET ERROR CODE           Y02082
         LA    WORKREG,RTNCODE8         SET ERROR CODE OF 8      Y02082
         STH   WORKREG,ERCODE           SAVE CALLER'S ERROR CODE Y02082
*
* THIS SECTION DEQ'S THE VTOC.
*
FINISH   EQU   *                        DEQ VTOC                 Y02082
         MVC   MJNAME(L'VTOCNAME),VTOCNAME  MAJOR RESOURCE NAME  Y02082
         L     RUCB,WKADEB+UCBADDR      LOAD UCB ADDR FROM DEB   Y02082
         USING UCB,RUCB                 UCB ADDRESSABILITY       Y02082
         MVC   MINAME(L'SRTEVOLI),SRTEVOLI  MINOR RESOURCE NAME  Y02082
         MVI   ENQAREA,X'FF'            SET LAST ENTRY INDICATOR Y02082
         SR    R1,R1                    ZERO REGISTER
         STH   R1,ENQAREA+K2            CLEAR FOR DEQ MACRO      Y02082
         DEQ   (MJNAME,MINAME,6,SYSTEMS),MF=(E,ENQAREA)          Y02082
*
         NI    DSMADTB2,X'FF'-DSMVTOCR  RESET VTOC ENQ'ED SWITCH Y02144
*                                                                Y02144
* IF THE UNIT WAS DYNAMICALLY ALLOCATED, THIS SECTION BUILDS THE
* REQUEST BLOCK TO INTERFACE WITH DYNAMIC ALLOCATION (SVC 99) TO
* UNALLOCATE THE UNIT.
*
TSTALLOC EQU   *                        TEST ALLOCATION          Y02082
         TM    SISW1,UCBALLOC           TEST IF UCB ALLOCATED    Y02082
*                                       BY DYNAMIC ALLOCATION    Y02082
         BNO   TESTLAST                 BRANCH IF NOT            Y02082
         LA    RPARM,VTOCDSCB           PARAMETER LIST BASE      Y02082
         USING S99RBP,RPARM                                      Y02082
         LA    RWRK,K4(,RPARM)          INCREMENT BY FOUR        Y02082
         ST    RWRK,S99RBPTR            SET UP REQUEST BLOCK PTR Y02082
         OI    S99RBPTR,S99RBPND        TURN ON HIGH ORDER BIT   Y02082
         LR    RPARM,RWRK               ADDRESS OF REQUEST BLOCK Y02082
         USING S99RB,RPARM              REQ BLOCK ADDRESSABILITY Y02082
         XC    S99RB(S99RBEND-S99RB),S99RB  ZERO REQ BLOCK CORE  Y02082
         MVI   S99RBLN,S99RBEND-S99RB   LENGTH OF REQUEST BLOCK  Y02082
         MVI   S99VERB,S99VRBUN         INDICATE UNALLOCATION    Y02082
         LA    RWRK,S99RBEND            ADDR OF TEXT POINTERS    Y02082
         ST    RWRK,S99TXTPP            PLACE IN REQUEST BLOCK   Y02082
         OI    S99FLG21,S99TIONQ        INDICATE TIOT ENQ'ED     Y02082
         LR    RPARM,RWRK               ADDRESS OF TEXT PTRS     Y02082
         USING S99TUPL,RPARM            TEXT PTRS ADDRESSABILITY Y02082
         LA    RTEXT,FW(,RPARM)         ADDRESS OF TEXT UNIT     Y02082
         ST    RTEXT,S99TUPTR           POINTER TO TEXT UNIT     Y02082
         OI    S99TUPTR,S99TUPLN        INDICATE LAST TEXT PTR   Y02082
         USING S99TUNIT,RTEXT           TEXT UNIT ADDRESSABILITY Y02082
         LH    RWRK,DDNAMEKY                                     Y02082
         STH   RWRK,S99TUKEY            INDICATE DDNAME SPEC     Y02082
         LA    RWRK,K1                                           Y02082
         STH   RWRK,S99TUNUM            INDICATE 1 DDNAME ENTRY  Y02082
         LA    RWRK,L'TIOEDDNM                                   Y02082
         STH   RWRK,S99TULNG            LENGTH OF TEXT PARM      Y02082
         L     RDSAB,DSABADDR           GET DSAB ADDRESS         Y02082
         USING DSAB,RDSAB               DSAB ADDRESSABILITY      Y02082
         L     RTIOT,DSABTIOT           LOAD TIOT ADDRESS        Y02082
         USING TIOENTRY,RTIOT           TIOT ADDRESSABILITY      Y02082
         MVC   S99TUPAR(L'TIOEDDNM),TIOEDDNM  COPY TIOT'S DDNAME Y02082
         LA    R1,VTOCDSCB              POINT TO REQUEST BLK PTR Y02082
         DYNALLOC                                                Y02082
*
         NI    SISW1,X'FF'-UCBALLOC     RESET ALLOCATED BIT      Y02082
         NI    DSMADTB1,X'FF'-DSMUCBAL  RESET UCB ALLOCATED BIT  Y02144
*
* THIS SECTION BRANCHES BACK TO IGG03002 IF THE DATA SET MUST BE
* RENAMED ON ANOTHER VOLUME.
*
TESTLAST EQU   *                        LAST VOL                 Y02082
         TM    RTYPEFLG,EXITBIT         IS EXIT BIT SET          Y02082
         BO    DEQTEST1                 BRANCH IF SET            Y02082
         L     PL,OLDPLPTR              RELOAD PARM LIST ADDR    Y02082
         LA    R7,LOAD2                 POINT TO IGG03002        Y02082
*
* THIS SECTION LOADS AND/OR BRANCHES TO ANOTHER MODULE.
*
LOADEXIT EQU   *                        EXIT                     Y02082
         IECRES LOAD,EXTPR=(RWKAREA),MODNM=(R7),BRANCH=DIRECT    Y02082
*
* IF A VOLUME WAS ENQ'ED AND MOUNTED BY IGG0300F, THIS SECTION
* BRANCHES TO IGG0300F TO DEMOUNT AND DEQ THE VOLUME.
*
DEQTEST1 EQU   *                        DEQ VOL TEST             Y02082
         TM    SISW1,VOLDEQ             TEST IF VOL TO BE DEQ'ED Y02082
         BNO   DEQTEST2                 BRANCH IF NOT            Y02082
         OI    SISW2,DEMNTSW            SET DEMOUNT SWITCH       Y02134
         LA    R2,WKADEB                DEB ADDRESS IN REG 2     Y02134
         L     RUCB,PRUCBPTR            UCB ADDRESS IN REG 11    Y02134
         LA    R3,SRTEVOLI              VOLSER ADDR IN REG 3     Y02134
         L     R4,RETNAME               RETURN MODULE NAME       Y02134
         LA    R7,MNTLOAD               POINT TO ID OF IGG0300F  Y02134
         B     LOADEXIT                 GO BRANCH TO IGG0300F    Y02134
RETURNPT EQU   *                        RETURN HERE              Y02134
         NI    SISW2,X'FF'-DEMNTSW      RESET DEMOUNT SWITCH     Y02134
*
* IF RENAME ENQ'ED ON THE DSNAME, THIS SECTION ISSUES A DEQ
* DIRECTED TO THE INITIATOR'S TCB.
*
DEQTEST2 EQU   *                        DEQ SYSDSN TEST          Y02082
         TM    SISW1,DSNENQ             TEST IF ENQ'ED ON SYSDSN Y02082
         BNO   DEQTEST3                 BRANCH IF NOT            Y02082
         LA    R4,PDSNAME+L'PDSNAME-K1  LAST BYTE OF DSNAME      YM2880
TESTDSN  EQU   *                        SEARCH FOR NON-BLANK     YM2880
         CLI   K0(R4),BLANK             IS THIS ONE A BLANK      YM2880
         BNE   GETLNGTH                 BRANCH IF NO TO COMPUTE  YM2880X
                                        LENGTH OF NAME FOR DEQ   YM2880
         BCT   R4,TESTDSN               TRY NEXT BYTE            YM2880
GETLNGTH EQU   *                        CALCULATE LENGTH         YM2880
         LA    R2,PDSNAME-K1            BYTE PRECEDING DSNAME    YM2880
         SR    R4,R2                    R4 HAS LENGTH FOR DEQ    YM2880
         L     R2,TCBADDR               LOAD TCB ADDRESS         Y02082
         USING TCB,R2                   TCB ADDRESSABILITY       Y02082
         L     R2,TCBJSCB               LOAD JSCB ADDRESS        Y02082
         DROP  RWRK                                            @G60ASBJ
         USING IEZJSCB,R2               JSCB ADDRESSABILITY      Y02082
         L     R2,JSCBACT              GET ACTIVE JSCB ADDRESS @ZA17061
         L     R2,JSCBTCBP             ADDR OF INITIATOR'S TCB @ZA17061
         MVC   ENQAREA(DEQLTH1),DEQLIST1  MOVE IN DEQ PARM LIST  Y02082
         MVC   MJNAME(L'DSNMJR),DSNMJR  MAJOR RESOURCE NAME      Y02082
         DEQ   (MJNAME,PDSNAME,(R4)),TCB=(R2),MF=(E,ENQAREA)     YM2880X
                                        ISSUE DEQ                YM1337
         NI    DSMADTB2,X'FF'-DSMDSNE   RESET DSN ENQ'ED SWITCH  Y02144
*
* IF RENAME ENQ'ED ON THE TIOT, THIS SECTION ISSUES A DEQ.
*
DEQTEST3 EQU   *                        DEQ TIOT TEST            Y02082
         TM    SISW1,TIOTENQ            TEST IF ENQ'ED ON TIOT   Y02082
         BNO   TESTSMF                  BRANCH IF NOT            Y02082
         MVC   ENQAREA(DEQLTH2),DEQLIST2  MOVE IN DEQ PARM LIST  Y02082
         MVC   MJNAME(L'TIOTMJR),TIOTMJR  MAJOR RESOURCE NAME    Y02082
         DEQ   (MJNAME,TIOTMNR),MF=(E,ENQAREA)  DEQ FROM TIOT    Y02082
*
         NI    DSMADTB2,X'FF'-DSMTIOTE  RESET TIOT ENQ'ED SWITCH Y02144
*
* THIS SECTION DETERMINES IF AN SMF RECORD TYPE 18 MUST BE BUILT.
*
TESTSMF  EQU   *                        IS SMF RECORD NEEDED     Y02082
         TM    SISW1,NOSMFRCD           TEST IF RENAME TOTALLY   Y02082
*                                       OR PARTIALLY SUCCESSFUL  Y02082
         BO    EXIT                     BRANCH IF NOT            Y02082
         L     RCVT,CVTPTR              LOAD CVT ADDRESS         Y02082
         L     R2,TCBADDR               LOAD TCB ADDRESS         Y02082
         USING TCB,R2                   TCB ADDRESSABILITY       Y02082
         L     R2,TCBTCT                LOAD TCT ADDRESS         Y02082
         LTR   R2,R2                    IS THERE A TCT           Y02082
         BZ    EXIT                     BRANCH IF NOT            Y02082
         USING SMFTCT,R2                TCT ADDRESSABILITY       Y02082
         L     R2,TCTJMR                LOAD JMR ADDRESS         Y02082
         LTR   R2,R2                    IS THERE A JMR           Y02082
         BZ    EXIT                     BRANCH IF NOT            Y02082
         USING JMRJOB,R2                JMR ADDRESSABILITY       Y02082
         L     RA,CVTSMCA               LOAD SMCA ADDRESS        Y02082
         LTR   RA,RA                    IS THIS AN SMF SYSTEM    Y02082
         BZ    EXIT                     BRANCH IF NOT            Y02082
         USING SMCABASE,RA                                       Y02082
         TM    SMCAOPT,SMCADSA          IS DS RECORDING REQUIRED Y02082
         BNO   EXIT                     BRANCH IF NOT            Y02082
*
* THIS SECTION CALCULATES IF ANOTHER WORK AREA MUST BE OBTAINED
* TO BUILD THE SMF RECORD TYPE 18.
*
BUILDSMF EQU   *                        WORK AREA TEST           Y02082
         L     R6,OLDPLPTR                                       S19028
         LM    R7,VOLISTX,K8(R6)        GET PARM POINTERS        YM1337
         LH    VOLCTR,K0(VOLISTX)       GET THE NBR OF VOLUMES   Y02082
         LA    VOLISTX,K2(VOLISTX)      POINT TO FIRST ENTRY     Y02082
         LA    R4,WKADEB-SMF18RV2       TEST IF ALL VOLUMES      Y02080
         SRL   R4,3                     WILL FIT IN WORK AREA    Y02080
         LA    R3,SMF18HDR              POINT TO SMF RECORD      Y02080
         CR    R4,VOLCTR                WILL ALL VOLS FIT IN THE Y02082
*                                       RENAME WORK AREA         Y02082
         BNL   COREOK                   BRANCH IF YES            S19028
         LR    R4,VOLCTR                CALCULATE CORE NEEDED    Y02082
         SLL   R4,3                     8 BYTES PER VOLIST ENTRY Y02082
         LA    R4,SMF18RV2-SMF18HDR(R4)  SET UP TO GET CORE      S19028
         IECRES GET,EXTPR=(RWKAREA),ID=REWA,LV=(R4),             Y02080X
               STM=(R2,RETURN,IECREGSV+K12)                      Y02080
         LR    R3,R1                    GET SMF RECORD ADDRESS   Y02080
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO AFTER Y02082X
                                        ISSUING THE IECRES GET   Y02082
         USING SMF18HDR,R3              ADDRESSABILITY           Y02080
*
* THIS SECTION BUILDS THE TYPE 18 SMF RECORD.
*
COREOK   EQU   *                                                 A38860
         XC    SMF18HDR(6),SMF18HDR     ZERO RECORD HEADER       A38860
         MVI   SMF18RTY,SMFREC18        SET RECORD TYPE          A38860
         TIME  BIN                                               S19028
         STM   R0,R1,SMF18TME+2         TIME OF RECORD           S19028
         MVC   SMF18TME(8),SMF18TME+2                            S19028
         MVC   SMF18SID(4),SMCASID                               S19028
         DROP  RA                                                S19028
         MVC   SMF18JBN(SMF18UID-SMF18JBN),JMRJOB  JOB NAME      Y02082
         MVC   SMF18UID,JMRUSEID        USER ID FIELD            Y02082
         DROP  R2                                                Y02082
         XC    SMF18RIN,SMF18RIN        ZERO RECORD INDICATORS   Y02082
         MVC   SMF18ODS,PDSNAME         OLD DS NAME              YM1337
         MVC   SMF18NDS,0(R7)           NEW DS NAME              Y02082
         XC    SMF18RV1,SMF18RV1        ZERO RESERVED AREA       Y02082
         XR    R7,R7                    ZERO VOL COUNTER         S19028
         LA    R2,SMF18RV2                                       S19028
         USING SMF18RV2,R2                                       S19028
TESTVOL  EQU   *                        WAS RENAME SUCCESSFUL    Y02082
         CLI   STATUS(VOLISTX),X00      WAS RENAME SUCCESSFUL    Y02082
         BNE   NEXTVOL                  BRANCH IF NOT            Y02082
         XC    SMF18RV2,SMF18RV2                                 Y02082
         MVC   SMF18FVL,VOLSER(VOLISTX)  MOVE VOL SER TO RECORD  Y02082
         LA    R7,1(R7)                 INCREMENT VOLUME COUNT   S19028
         LA    R2,SMF18LNV(R2)          INCREMENT RECORD PTR     S19028
NEXTVOL  EQU   *                        NEXT VOL                 Y02082
         LA    VOLISTX,ENTRYL(VOLISTX)  INCREMENT VOLIST PTR     Y02082
         BCT   VOLCTR,TESTVOL           BRANCH IF MORE VOLUMES   Y02082
         LTR   R7,R7                    IS VOLUME COUNT ZERO     S19028
         BZ    EXIT                     BRANCH IF YES            Y02082
         STC   R7,SMF18NVL              NUMBER OF RENAMED VOLS   S19028
         DROP  R2                                                S19028
         SR    R2,R3                    GET RECORD LENGTH        Y02080
         STH   R2,SMF18LEN                                       S19028
         DROP  R3                                                Y02080
         LR    R1,R3                    POINT TO SMF RECORD      Y02080
         SMFWTM (1)                     WRITE SMF RECORD TYPE 18 A38860
*
* THIS SECTION FREES ALL WORK AREAS AND RETURNS TO THE CALLER.
*
EXIT     EQU   *                        RETURN TO CALLER         Y02082
         LH    RERRSAVE,ERCODE          SAVE RETURN CODE         Y02082
         L     R9,RENSAVE               RESTORE ORIGINAL R14   @G60ASBJX
                                        TO R9                  @G60ASBJ
         IECRES FREE,PREFIX=FIRST,A=(RWKAREA)  FREE WORK AREA    Y02082
         LR    RETURN,R9                RESTORE R14 WITH       @G60ASBJX
                                        ORIGINAL R14           @G60ASBJ
         LR    WORKREG,RERRSAVE         RESTORE RETURN CODE      Y02082
         RETURN ,                       RETURN TO CALLER         Y02082
*
* THIS SECTION EXECUTES A CHANNEL PROGRAM.
*
EXECIO   EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,X'20'               TEST ECB FOR PERMANENT ERROR
         BZ    PERMERR                 BR IF ERROR
         BR    RETURN
*
*** PROGRAM CONSTANTS
*
DEQLIST1 DEQ   (,,,SYSTEM),TCB=0,MF=L   SYSDSN DEQ LIST          YM2887
DEQLTH1  EQU   *-DEQLIST1               LENGTH OF DEQ LIST       Y02082
DEQLIST2 DEQ   (,,6,SYSTEM),MF=L        SYSZTIOT DEQ LIST        YM2887
DEQLTH2  EQU   *-DEQLIST2               LENGTH OF DEQ LIST       Y02082
TIOTMJR  DC    CL8'SYSZTIOT'            TIOT MAJOR RESOURCE NAME Y02082
DSNMJR   DC    CL8'SYSDSN'              DSN MINOR RESOURCE NAME  Y02082
VTOCNAME DC    CL8'SYSVTOC'             VTOC MAJOR RESOURCE NAME Y02082
         DS    0F                                                A38860
RETNAME  DC    CL4'3001'                RETURN NAME FOR IGG0300F Y02134
SECCODE  DC    X'02000000'              CODE FOR SECURITY LOAD
DDNAMEKY DC    AL2(DUNDDNAM)            DDNAME UNALLOCATION KEY  Y02082
*
*        DEB ACCESS METHOD TYPE VALUES
*
AMBPAM   DEBCHK AM=BPAM,MF=L            BPAM AMTYPE              Y02082
AMBDAM   DEBCHK AM=BDAM,MF=L            BDAM AMTYPE              Y02082
AMSAM    DEBCHK AM=SAM,MF=L             SAM AMTYPE               Y02082
AMEXCP   DEBCHK AM=EXCP,MF=L            EXCP AMTYPE              Y02082
AMISAM   DEBCHK AM=ISAM,MF=L            ISAM AMTYPE              Y02082
*
*** THE FOLLOWING CHANNEL PROGRAM SEARCHES THE VTOC FOR THE NAMED DSCB.
*** THE VTOC DSCB AND THE NAMED DSCB ARE READ INTO THE INPUT AREAS.
*
CHANPROG DS    0F
*CCW1
         DC    X'31'                   SEARCH EQUAL ID (SEEK+3)
         DC    AL3(3+SEEK-FIRST)
         DC    X'4000'
         DC    H'5'
*CCW2
         DC    X'08'                   TIC TO CCW1
         DC    AL3(0+CCW1-FIRST)
         DC    F'0'
*CCW3
         DC    X'06'                   READ DATA (VTOC DSCB)
         DC    AL3(VTOCDSCB-FIRST)     DATA ADDR                 Y02080
         DC    X'4000'
         DC    H'96'
*CCW4
         DC    X'B1'                   SEARCH EQUAL ID (LAST FMT 1)
         DC    AL3(0+DS4HPCHR-FIRST)
         DC    X'4000'
         DC    H'5'
*CCW5                                   TO BE CONSTRUCTED
*                                       TIC TO CCW9
*CCW6                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL KEY (DS NAME)
*CCW7                                   TO BE CONSTRUCTED
*                                       READ DATA OF THE LAST   SA48172
*                                       FORMAT 1 WITH THE SKIP  SA48172
*                                       BIT SET IN ORDER TO END SA48172
*                                       THE CHANNEL PROGRAM     SA48172
*CCW8                                   TO BE CONSTRUCTED
*                                       TIC TO CCW11
*CCW9
         DC    X'29'                   SEARCH EQUAL KEY (DS NAME)
         DC    AL3(0)
         DC    X'6000'
         DC    H'44'
*CCW10
         DC    X'08'                   TIC TO CCW4
         DC    AL3(0+CCW4-FIRST)
         DC    F'0'
*CCW11
         DC    X'06'                   READ DATA INTO F1DSCB+44  Y02080
         DC    AL3(DS1FMTID-FIRST)     DATA ADDR                 Y02080
         DC    X'4000'
         DC    H'96'
*CCW12
         DC    X'12'                   READ COUNT (NEWCCHHR)
         DC    AL3(0+NEWCCHHR-FIRST)
         DC    X'2000'
         DC    H'5'
*
*** THE FOLLOWING CHANNEL PROGRAM WRITES THE NEW NAME DSCB OVER THE
*** OLD NAME DSCB IN THE VTOC ON THE DIRECT ACCESS DEVICE.
*
CHALPROG DS    0F
*CCW1                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID (SEEK+3)
*CCW2                                   TO BE CONSTRUCTED
*                                       TIC TO CCW1
*CCW3                                   TO BE CONSTRUCTED
*                                       WRITE KEY AND DATA FROM F1DSCB
*CCW4                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID (SEEK+3)
*CCW5                                   TO BE CONSTRUCTED
*                                       TIC TO CCW4
*CCW6
         DC    X'0E'                   READ KEY AND DATA (WRITE CHECK)
         DC    AL3(0)
         DC    X'1000'
         DC    H'140'
*   RACHECK PARAMETER LIST MASTER
MRACHECK RACHECK ATTR=ALTER,            ALTER AUTHORIZATION    @Z40RSGDX
               CLASS=CDATASET,          DATASET CLASS          @Z40RSGDX
               DSTYPE=N,                NONVSAM DATASET        @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACHECK EQU   *-MRACHECK               LENGTH OF PARM LIST    @Z40RSGD
CDATASET DC    AL1(7),C'DATASET'        CLASS FOR RACHECK      @Z40RSGD
*   RACDEF PARAMETER LIST MASTER
MRACDEF  RACDEF DSTYPE=N,               DASD DATASET           @Z40RSGDX
               TYPE=DEFINE,             DEFINE A NEWNAME       @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACDEF  EQU   *-MRACDEF                LENGTH OF PARM LIST    @Z40RSGD
*
* TABLE OF MODULE NAMES AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LOAD2,IGG03002,MNTLOAD,IGG0300F,           Y02134*
               SECLOAD,SECLOADA),SVC=030,LENGTH=,BRT=YES         Y02134
         SPACE 2                                                 Y02082
         IECDSECS CVT,DSAB,JMR,QDB,RB,SMF,SMFTCT,TCB,TIOT,UCB,   Y02082*
               IEZDEB,JSCB,PSA,RRPL,EXPAND=YES                   Y02144
WORKAREA IECRENWA EP,F4,D1=(1),ADT=YES  RENAME WORK AREA         Y02082
         SPACE 2                                                 Y02082
RACHECK  EQU   IECREGSV                 RACHECK PARAMETER LIST @Z40RSGD
RACDEF   EQU   IECREGSV                 RACDEF PARAMETER LIST  @Z40RSGD
         SPACE 2
         ORG   VTOCDSCB                                          Y02082
         IFASMFR (18)                                            Y02082
         EJECT                                                   Y02082
*
* DSECTS FOR INVOCATING DYNAMIC ALLOCATION (SVC 99)
*
         IEFZB4D0                       DYNAMIC ALLOCATION DSECT Y02082
         EJECT                                                   Y02082
         IEFZB4D2                       DYNAMIC ALLOCATION KEYS  Y02082
*                   SETS FAILED                                @Z40RSGD
         END
