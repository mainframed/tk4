         TITLE 'IGG0299A - DADSM SCRATCH - REMOVE DSCB(S)'
IGG0299A CSECT
*                                                                     *
*0000003400,007200-007600,008000,009400,036600,084700,093200-    A37199
*0000093600                                                      A37199
*          RELEASE 21.7 DELETIONS
*0000000520-000620,079240-080800,089000,090200                 SA56400
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000001000,003800,005200-005400,006800,008000-008200,009700,    Y02080
*0000014570,014780,015600,016000,022200,041200,041720,042000,    Y02080
*0000045200-046000,048200,049800,050600,051200,051500,051900,    Y02080
*0000054200,055800,076400,079120,080700-093400,094000            Y02080
*0000006400,008600-009200,043400,057600-057800,093500-094000     Y02078
*0000050800                                                      Y02082
*          VS2 RELEASE 03 DELETIONS/CHANGES                    @ZM30032
*0000                                                          @Y30LSTG
*          VS2 SU32 DELETIONS/CHANGES                          @G32DSFS
*D028188-028196,                                               @G32DSFS
*          VS2 RELEASE 037 CHANGES
*A015183,A036300-036310,C036315                                @ZA16029
*                                                              @G60ASBJ
*          VS2 SU60 DELETIONS/CHANGES                          @G60ASBJ
*                                                              @G60ASBJ
*A 006520,015121-015122,021200-021830,022240-022560            @G60ASBJ
*C 022040                                                      @G60ASBJ
*                                                              @G60ASBJ
* MODULE NAME - IGG0299A
*
* DESCRIPTIVE NAME - DADSM SCRATCH - REMOVE DSCB(S)
*
* COPYRIGHT - NONE
*
* CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING CSECT CARD
*
* STATUS CHANGE LEVEL 001
*
*ATTRIBUTES - REENTRANT
*
*FUNCTION - THE MODULE EXTRACTS THE EXTENTS FROM THE FORMAT 1 OR 3 DSCB
*           RECORDS.  THESE EXTENTS ARE THEN CONVERTED FROM CCHHCCHH TO
*           BEGINNING RTA AND ENDING RTA+1, AND ARE STORED IN A TABLE
*           IN THE WORKAREA.  THE FORMAT 1, 2, AND 3 DSCB RECORDS IN
*           THE VTOC ARE ZEROED OUT.  IF THE DATA SET TO BE    @Y30LSTG
*           SCRATCHED RESIDES ON A VIRTUAL MSS  VOLUME, THIS   @Y30LSTG
*           MODULE WILL SET UP THE PARAMETER LIST WHICH WILL   @Y30LSTG
*           LATER BE USED IN IGG0290D TO RELINQUISH THE DASD   @Y30LSTG
*           SPACE.                                             @Y30LSTG
*           THE RAC DEFINITIONS ARE DELETED FOR RAC DEFINED    @Z40RSGD
*           DATA SETS (RACDEF).                                @Z40RSGD
*
*ENTRIES - THE ONLY ENTRY POINT TO THIS MODULE IS IGG0299A.  ENTRY IS
*          MADE FROM THE FOURTH LOAD OF SCRATCH - IGG0290A.
*
*
*SUPERVISOR CALLS AND MACROS. THE FOLLOWING ARE SUPERVISOR CALLS
*          ISSUED IN THE MACRO EXPANSIONS:
*                    EXCP(0) READ FROM OR WRITE TO DIRECT ACCESS DEVICE
*                    WAIT(1) WAIT ON EVENT CONTROL BLOCK
*
*
*OTHER MACROS USED
*                    IECSDSL1 - ENABLES SYMBOLIC ADDRESSING OF DSCBS
*                    IECSCRWA - SCRATCH WORK AREA EXPANSION
*                    IECDSECS - EXPANDS THE CVT, RB, AND TCB DSECTS
*                    IECRES - GET CORE FOR RIDDING DASD SPACE  @Y30LSTG
*
*INPUT - AT ENTRY TO THIS MODULE REGISTER 13 POINTS TO THE WORKAREA
*        AND REGISTER 9 POINTS TO THE CVT.
*
*OUTPUT - THE FORMAT 1, 2, AND 3 DSCB'S FOR THE DATA SET ARE ZEROED
*          OUT. WHEN CONTROL IS TRANSFERRED TO THE NEXT LOAD, MODULE
*          IGG0290B, REGISTER 13 POINTS TO THE WORK AREA. THE DADSM
*          TABLE IN THE WORK AREA CONTAINS THE EXTENTS OF THE DATA SET.
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 1024 BYTES
*          WORK AREA = 900 BYTES                               @Y30LSTG
*          RPS WORK AREA = 128 BYTES
*
*ERROR CONDITIONS - PERMANENT I/O ERROR
*         - ERROR IN RACDEF                                   @Z40RSGD
*
*
*NOTES - THIS MODULE WAS SPLIT IN RELEASE 21.  THE FIRST HALF IS
*        MODULE IGG0290A.  AFTER THE REWRITE OF THE FORMAT 4 DSCB
*        (UNLIKE THE ALLOCATE, EXTEND, AND PARTIAL RELEASE FUNCTIONS
*        OF DADSM), IF THE DIRF BIT IS SET IN THE FORMAT 4 DSCB IN
*        THE SCRATCH WORK AREA, THIS INDICATES THAT THE DIRF BIT
*        WAS PREVIOUSLY SET IN THE FORMAT 4 DSCB.
*
*REGISTER USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
EXTCTR   EQU   4
R5       EQU   5
R6       EQU   6
INDEX1   EQU   6
INDEX2   EQU   7
R7       EQU   7
R8       EQU   8
VOLISTX  EQU   8
RCVT     EQU   9
R10      EQU   10
R11      EQU   11
RBASE    EQU   12
RWKAREA  EQU   13
RETURN   EQU   14
WORKREG  EQU   15
*
* OTHER EQUATES
*
DIRFBIT  EQU   X'04'                    VTOC INTERRUPT BIT       O19117
DOSBIT   EQU   X'80'                    DOS BIT IN F4
NOCC     EQU   X'00'                    SUPPRESS COMMAND CHAIN.
WRITE    EQU   X'05'                    WRITE DATA COMMAND
D4       EQU   4                        DISPLACEMENT OF 4
K16      EQU   16                       CONSTANT
L90      EQU   90                       LENGTH OF 90
K2       EQU   2                        CONSTANT OF 2            Y02080
K3       EQU   3                        CONSTANT OF 3            Y02080
CCHHL    EQU   4                        LENGTH OF CCHH           Y02080
K6       EQU   6                        CONSTANT OF 6            Y02080
K12      EQU   12                       CONSTANT OF 12           Y02080
RACPASS  EQU   X'40'                    BYPASS RACDEF -        @G60ASBJX
                                        CAMLST SWITCH          @G60ASBJ
DS1RACDF EQU   X'40'                    DS1DSIND-RAC DEFINED   @Z40RSGD
RACERR08 EQU   8                        NOT-RAC DEFINED        @Z40RSGD
RACERR09 EQU   9                        DATA SET ASSOCIATED    @Z40RSGD
*                                       WITH OTHER RAC         @Z40RSGD
*                                       ENTITIES               @Z40RSGD
ZERO     EQU   0                        QUANTITY OF ZERO       @Y30LSTG
D0       EQU   0                        DISPLACEMENT OF ZERO   @Y30LSTG
D1       EQU   1                        DISPLACEMENT OF ONE    @Y30LSTG
D2       EQU   2                        DISPLACEMENT OF TWO    @Y30LSTG
D3       EQU   3                        DISPLACEMENT OF THREE  @Y30LSTG
D6       EQU   6                        DISPLACEMENT OF SIX    @Y30LSTG
D7       EQU   7                        DISPLACEMENT OF SEVEN  @Y30LSTG
D8       EQU   8                        DISPLACEMENT OF EIGHT  @Y30LSTG
D10      EQU   10                       DISPLACEMENT OF TEN    @Y30LSTG
D28      EQU   28                       TWENTY-EIGHT           @Y30LSTG
L1       EQU   1                        LENGTH OF ONE          @Y30LSTG
L2       EQU   2                        LENGTH OF TWO          @Y30LSTG
LABELS   EQU   X'40'                    MASK FOR USER LABELS   @Y30LSTG
VIRTDASD EQU   X'08'                    MASK FOR VIRTUAL DASD  @Y30LSTG
RECROUND EQU   X'41'                    RECORD ROUND OPTION    @ZA16029
CYL      EQU   X'C0'                    CYL ALLOC COMPARATOR   @Y30LSTG
RELINQ   EQU   X'04'                    RELINQUISH OP CODE     @Y30LSTG
ISAMDS   EQU   X'80'                    ISAM INDICATOR         @Y30LSTG
SPLTCYL  EQU   X'80'                    SPLIT CYLINDERS IND    @Y30LSTG
ACQPLN   EQU   96                       LENGTH OF PARM LIST    @Y30LSTG
UCBPTR   EQU   32                       POINTER TO UCB IN DEB  @Y30LSTG
*                                                              @Y30LSTG
*
STATUS   EQU   11                       OFFSET TO ERROR FLAG   @Z40RSGD
         BALR  RBASE,R0
         USING BEGIN,RBASE
         USING SCRTHWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         USING CVT,RCVT
*
* THIS SECTION SETS UP TO ADD THE EXTENTS IN THE FORMAT 1 DSCB
* TO THE DADSM TABLE.
*
BEGIN    EQU   *
* IF DATASET IS RAC-DEFINED DELETE DEFINITION BEFORE           @Z40RSGD
* UPDATING DSCBS.                                              @Z40RSGD
*                                                              @Z40RSGD
         TM    DS1DSIND,DS1RACDF        IS IT RAC DEFINED      @Z40RSGD
         BZ    BEGIN2                   NO-CONTINUE            @Z40RSGD
         L     R1,TCBADDR               LOCATE TCB             @Z40RSGD
         USING TCB,R1                                          @Z40RSGD
         L     R1,TCBJSCB               LOCATE JSCB            @Z40RSGD
         USING IEZJSCB,R1                                      @Z40RSGD
         L     R1,JSCBACT               GET ACTIVE JSCB        @G32DSPD
*************************************************************  @G60ASBJ
*                                                           *  @G60ASBJ
*  THE RACDEF WILL BE BYPASSED IF THE FOLLOWING CONDITIONS  *  @G60ASBJ
*  ARE MET:                                                 *  @G60ASBJ
*           (1) THE CALLER IS AUTHORIZED.                   *  @G60ASBJ
*           (2) JSCBPASS BIT IS SET TO 1.                   *  @G60ASBJ
*           (3) THE SECOND BIT OF THE SECOND BYTE OF THE    *  @G60ASBJ
*               SCRATCH (CAMLST) PARAMETER LIST IS 1.       *  @G60ASBJ
*                                                           *  @G60ASBJ
*************************************************************  @G60ASBJ
         TM    JSCBSWT1,JSCBPASS        IS RAC PROCESSING TO   @Z40RSGD
*                                       BE BYPASSED            @Z40RSGD
         BNO   BEGIN1                   NO - DON'T BYPASS      @G60ASBJ
*                                                              @G60ASBJ
* TEST CAMLST PARAMETER LIST BYTE 1 BIT 1.                     @G60ASBJ
* IF SET TO 1, BYPASS THE RACDEF.                              @G60ASBJ
*                                                              @G60ASBJ
         L     R1,OLDPLPTR              GET PARAMETER LIST     @G60ASBJX
                                        POINTER                @G60ASBJ
         TM    D1(R1),RACPASS           BYPASS RACDEF ?        @G60ASBJ
         BO    BEGIN2                   YES, BYPASS RACDEF     @G60ASBJ
BEGIN1   DS    0H                       CONTINUE WITH DELETE   @G60ASBJ
* DELETE DEFINITION                                            @Z40RSGD
         MVC   RACDEF(LRACDEF),MRACDEF  SET UP PARM LIST       @Z40RSGD
         RACDEF ENTITY=PDSNAME,                                @Z40RSGDX
               VOLSER=PVOLSER,                                 @Z40RSGDX
               DSTYPE=N,                                       @Z40RSGDX
               MF=(E,RACDEF)                                   @Z40RSGD
         LTR   WORKREG,WORKREG          TEST RACDEF COMPLETION @Z40RSGD
         BZ    BEGIN2 STATUS            OK-CONTINUE            @Z40RSGD
* PROFILE DELETE FAILED,BUT SCRATCH ANYWAY IF USER HAS ALTER   @G32DSPD
* AUTHORIZATION FOR THE VOLUME                                 @G32DSPD
         TM    SISW1,VOLRACHK           USER HAS VOLUME ACCESS @G32DSPD
         BO    BEGIN2                   YES,OK-CONTINUE        @G32DSPD
         L     R1,TCBADDR               TCB ADDRESSABILITY     @Z40RSGD
         USING TCB,R1                                          @Z40RSGD
         MODESET EXTKEY=RBT234,WORKREG=2  RESET KEY            @Z40RSGD
         DROP  R1                                              @Z40RSGD
         MVI   11(VOLISTX),RACERR08     ASSUME RETURN CODE 4   @Z40RSGD
         B     SETCODE2                 ERROR-TERMINATE        @Z40RSGD
BEGIN2   EQU   *                        CONTINUE               @Z40RSGD
         TM    DADSMTBL,DOSPACK         TEST FOR DOS PACK
         BO    MOVECCW                 BR IF YES.
BLDTAB   MVC   INDSCB+4(30),DS1EXT1     SET UP BOUNDARIES
         LA    INDEX2,ENTRIES           LOAD DADSM TABLE INDEX
         SR    EXTCTR,EXTCTR
         IC    EXTCTR,DS1NOEPV         PICK UP NO. OF EXTENTS.
         CH    EXTCTR,SIXTEEN           MORE THAN 16 EXTENTS
         BNH   GOON                     IF NO, CONTINUE
         OI    DS4VTOCI,DOSBIT          IF YES, SET DOS BIT, F4
         LA    EXTCTR,K16               16 TO NO. OF EXTS CNTR
         MVI   CCW3,WRITE               SET CCW TO WRITE F4
         MVI   CCW3+D4,NOCC             SUPPRESS COMMAND CHAIN.
         BAL   RETURN,EXCPIO            GO WT F4 WITH DOS BIT ON
GOON     EQU   *
         CLI   DS1EXT1,X'40'   USER LABELS                        22833
         BNE   NOUSER           NO,                               22833
         LA    EXTCTR,1(EXTCTR) YES, INCR EXT CNT+1 FOR INTRNL USE22833
NOUSER   EQU   *                                                  22833
         STC   EXTCTR,EXTNUM           SAVE FOR LATER.
         CLI   EXTNUM,3                CHECK THEIR NUMBER.
         BNH   ONLYF1                  BRIF ONLY F1 DSCB.
         LA    EXTCTR,3                SET LIMIT FOR EXT CONVERT.
ONLYF1   EQU   *                                               @Y30LSTG
*                                                              @Y30LSTG
* THIS SECTION GETS CORE FOR A PARAMETER LIST, ASSUMING ONE    @Y30LSTG
* DOESN'T ALREADY EXIST, TO BE USED LATER BY THE ICBACREL MACRO@Y30LSTG
* THIS IS DONE ONLY IF THE DATA SET TO BE SCRATCHED IS ON MSS  @Y30LSTG
* VIRTUAL DASD.                                                @Y30LSTG
*                                                              @Y30LSTG
         L     R1,WKADEB+UCBPTR        POINT TO UCB            @Y30LSTG
         USING UCB,R1                  ESTABLISH ADDRESSABILITY@Y30LSTG
         TM    UCBTBYT2,VIRTDASD       VIRTUAL DASD            @Y30LSTG
         BNO   NOVIRTD                 NO, DONT DO ANYTHING    @ZM30032
         TM    DS1SCALO,CYL            CYL ALLOCATIONS         @Y30LSTG
         BO    TEST2                   YES,GO TO NEXT CHECK    @ZA16029
         TM    DS1SCALO,RECROUND       RECORD ROUND OPTION?    @ZA16029
         BNO   NOVIRTD                 NO,DON'T RELINQUISH     @ZA16029
TEST2    CLI   DS1EXT1,SPLTCYL         SPLIT CYLINDERS?        @Y30LSTG
         BE    NOVIRTD                 YES, DONT DO ANYTHING   @Y30LSTG
         CLI   DS1NOEPV,ZERO           ANY EXTENTS             @Y30LSTG
         BE    NOVIRTD                 NO, BRANCH OUT          @ZM30032
         TM    DS1DSORG,ISAMDS         IS IT ISAM DATA SET     @Y30LSTG
         BO    NOVIRTD                 YES, DON'T REQINQUISH   @Y30LSTG
         L     R1,RELQADR              GET ADDR OF PARM LIST   @Y30LSTG
         LTR   R1,R1                   FROM PREV. VOL.         @Y30LSTG
         BNZ   VIRTD                   YES, DONT NEED ANOTHER  @ZM30032
         IECRES GET,EXTPR=(RWKAREA),ID=SCWA,LV=ACQPLN,         @Y30LSTG.
               STM=(R2,RETURN,IECREGSV+K12)                    @Y30LSTG
         ST    R1,RELQADR              SAVE ADDRESS OF AREA    @Y30LSTG
         MODESET EXTKEY=ZERO            RE-ESTABLISH KEY ZERO  @Y30LSTG
*                                                              @Y30LSTG
* THIS SECTION FILLS THE PARM LIST FROM THE FORMAT 1 DSCB      @Y30LSTG
* WHEN THE DATA SET RESIDES ON MSS  VIRTUAL DASD.              @Y30LSTG
*                                                              @Y30LSTG
VIRTD    EQU   *                                               @Y30LSTG
         MVC   D7(L1,R1),DS1NOEPV      PUT IN # OF EXTENTS     @Y30LSTG
         MVI   D4(R1),RELINQ           MOVE IN OP CODE         @Y30LSTG
         MVI   D3(R1),ACQPLN           MOVE IN LENGTH          @Y30LSTG
         LA    R10,D28(,R1)            POINT TO START OF EXTS. @Y30LSTG
         LA    R6,INDSCB+D4            POINT TO 1ST DSCB EXT   @Y30LSTG
         LR    R5,EXTCTR               GET # EXTENTS IN DSCB   @Y30LSTG
         CLI   DS1EXT1,LABELS          ARE THERE USER LABELS   @Y30LSTG
         BNE   NOLABELS                NO, EVERYTHING ALL SET  @Y30LSTG
         BCTR  R5,R0                   YES, CANNOT FREE IT     @Y30LSTG
         LA    R6,D10(,R6)             SKIP OVER LABEL EXTENT  @Y30LSTG
NOLABELS EQU   *                                               @Y30LSTG
         STC   R5,D0(,R1)              SAVE NUM EXTS -THIS DSCB@Y30LSTG
         BAL   RETURN,EXTBUILD         GO FILL THE EXTENTS     @Y30LSTG
NOVIRTD  EQU   *                                               @Y30LSTG
*                                                              @Y30LSTG
         BAL   RETURN,CVTEXTS          CONVERT CCHH'S TO RTA'S.
*
* THIS SECTION WRITES BACK THE FORMAT 4 DSCB, IF NECESSARY.
*
MOVECCW  EQU   *                                                 O19117
         XI    DS4VTOCI,DIRFBIT         SET/RESET DIRF BIT       O19117
         TM    DS4VTOCI,DIRFBIT         TEST RESULTS             O19117
         BZ    SKPWR                    BR IF PREVIOUS INTERRUPT O19117
         MVI   CCW3,X'05'               SET WR DATA CMMD         O19117
         MVI   CCW3+4,X'00'             RESET CMMD CHAIN         O19117
         BAL   RETURN,EXCPIO            GO WRITE BACK F4         O19117
*
* THIS SECTION MODIFIES THE CHANNEL PROGRAM TO READ AND WRITE DSCB'S.
*
SKPWR    EQU   *                                                 O19117
         XI    DS4VTOCI,DIRFBIT         RESET/SET DIRF BIT       O19117
         EX    0,ISAMDSCB               STORE CONT PNTR          O19117
         MVC   CCW9(8),CCW1             STORE CCW9               O19117
         MVC   CCW5(8),CCW10       STORE CCW5
         L     R1,CCW10
         LA    WORKREG,CCW9-CCW4
         AR    R1,WORKREG               RESOLVE ADDR IN CCW10
         ST    R1,CCW10            STORE CCW10
         L     R1,CCW1
         LA    WORKREG,5
         AR    R1,WORKREG               RESOLVE ADDR IN CCW1
         ST    R1,CCW1             STORE CCW1
         MVC   CCW4(8),CCW1        STORE CCW4
         LM    R0,R5,CHANLPRG      LOAD CCW CONSTANTS
         AR    R0,RWKAREA          RESOLVE ADDR IN CCW6
         AR    R2,RWKAREA          RESOLVE ADDR IN CCW7
         STM   R0,R5,CCW6               STORE CCW6 TO CCW8
         STM   R0,R1,CCW11              SET UP CCW11
         MVI   CCW11+4,X'00'            STORE CCW11
         LA    R0,SEEK                 M OF SEEK ADDR MUST BE ZERO.
         LA    R1,1
         STM   R0,R1,CCW3               SET UP CCW3
         MVI   CCW3,X'0D'
         MVI   CCW3+4,X'60'             STORE CCW3
*
TESTPTR  TM    INCCHHR+4,X'FF'          TEST  CONT POINTER
         BZ    LASTDSCB
*
* THIS SECTION WRITES A FORMAT 0 DSCB OVER A FORMAT 1, FORMAT 2,
* OR FORMAT 3 DSCB OR READS THE FIRST FORMAT 5 OR FORMAT 6 DSCB
* BEFORE BRANCHING TO THE NEXT LOAD OF SCRATCH - IGG0290B.
*
ZEROUT   MVI   OUTDSCB,X'00'            ZERO FIRST BYTE OF OUTPUT DSCB
         MVC   INLINESK+K2(CCHHL),INCCHHR  SET UP SEEK ADDRESS   Y02080
         MVC   SEEK+3(5),OUTCCHHR      SET UP SEEK FOR IOS.
         BAL   RETURN,EXCPIO            ZERO DSCB.
         LH    WORKREG,DADSMTBL+2       LOAD COUNT OF DSCBS
         LA    WORKREG,1(WORKREG)       INCREMENT DSCB COUNTER
         STH   WORKREG,DADSMTBL+2       STORE COUNT OF DSCBS
         CLI   DS3FMTID,X'F2'           TEST FOR F2 DSCB OR LESS M4504
         BL    IOERROR                  BRANCH IF LESS THAN F2   Y02078
         MVC   OUTCCHHR(5),INCCHHR      STORE INPUT DSCB CCHHR   M4504
         BE    ISAMDSCB                 BR IF F2                 M4504
         CLI   DS3FMTID,X'F3'           TEST FOR F3 DSCB         M4504
         BE    MOREXTS                  BR IF F3                 M4504
FINISH   EQU   *
         NI    DADSMTBL,X'EF'           TURN OFF NO VOLUME MOUNTED BIT
         LA    R2,LOAD3                 POINT TO PROPER ID.
XCTLEXIT EQU   *                        EXIT TO NEXT LOAD        Y02080
         IECRES LOAD,EXTPR=(RWKAREA),MODID=(R2),BRANCH=DIRECT    Y02080
*
* THIS SECTION SETS UP TO ADD THE EXTENTS IN THE FORMAT 3 DSCB
* TO THE DADSM TABLE.  IF THE DATA SET RESIDES ON MSS  VIRTUAL @Y30LSTG
* DASD, THIS ROUTINE ALSO COMPLETES THE PARAMETER LIST FOR     @Y30LSTG
* RELINQUISHING THE REAL DASD SPACE.                           @Y30LSTG
*
MOREXTS  MVC   DS3FMTID(L90),DS3ADEXT   SET UP BOUNDARIES
*                                                              @Y30LSTG
         L     R1,RELQADR               GET ADDR OF PARAM LIST @Y30LSTG
         LTR   R1,R1                    IS THERE ONE           @Y30LSTG
         BZ    SETCTRS                  NO, BRANCH OUT         @ZM30032
         CLI   D4(R1),RELINQ            VALID PARM LIST        @Y30LSTG
         BNE   SETCTRS                  NO, BRANCH OUT         @ZM30032
         SR    R6,R6                    ZERO A WORK REG        @Y30LSTG
         LR    R5,R6                    ZERO ANOTHER           @Y30LSTG
         IC    R6,D0(,R1)               GET # EXT IN F1        @Y30LSTG
         IC    R5,D7(,R1)               GET TOTAL # EXTENTS    @Y30LSTG
         SR    R5,R6                    GET # EXTS IN F3       @Y30LSTG
         LA    R6,INDSCB+D4             POINT TO DSCB ENTRIES  @Y30LSTG
         L     R10,D8(,R1)              POINT TO WHERE LEFT OFF@Y30LSTG
         LA    RETURN,SETCTRS           SET UP RETURN REG      @Y30LSTG
*                                                              @Y30LSTG
* THIS SECTION FILLS IN THE EXTENT ENTRIES FROM F1 AND F3 DSCBS@Y30LSTG
* INTO THE RELINQUISH PARAMETER LIST TO BE USED IN IGG0290D.   @Y30LSTG
*                                                              @Y30LSTG
EXTBUILD EQU   *                                               @Y30LSTG
         MVC   D0(L2,R10),D2(R6)        MOVE IN LOW CC         @Y30LSTG
         MVC   D2(L2,R10),D6(R6)        MOVE IN HIGH CC        @Y30LSTG
         LA    R10,D4(R10)              INCR TO NEXT PARM ENTRY@Y30LSTG
         LA    R6,D10(R6)               TO NEXT DSCB ENTRY     @Y30LSTG
         BCT   R5,EXTBUILD              GO BACK FOR MORE EXTS  @Y30LSTG
         ST    R10,D8(R1)               SAVE PTR TO NEXT       @Y30LSTG
         BR    RETURN                   RETURN TO CALLING RTINE@Y30LSTG
SETCTRS  EQU   *                                               @Y30LSTG
*                                                              @Y30LSTG
         LA    INDEX2,ENTRIES+12        LOAD DADSM TABLE INDEX
         SR    EXTCTR,EXTCTR
         IC    EXTCTR,EXTNUM           GET TOTAL NO. OF EXTENTS.
         SH    EXTCTR,THREE            NUMBER OF EXTENTS IN F3 DSCB.
         BAL   RETURN,CVTEXTS
         B     ISAMDSCB                 THIS BR WAS INSERTED TO
*                                        FACILITATE SCRATCHING A DATA
*                                        SET OF MORE THAN 16 EXTENTS.
*                                        IT CAUSES A RETURN TO READ AND
*                                        PROCESS THE NEXT FMT 3 DSCB.
*
* THIS SECTION INITIALIZES THE POINTERS NEEDED TO READ THE FIRST
* FORMAT 5 OR FORMAT 6 DSCB.
*
LASTDSCB TM    DS4VTOCI,DOSBIT          TEST FOR SPECIAL SUPPORT
         BO    NOSHRCYL                 PACK AND BRANCH IF YES
         TM    DADSMTBL,SHRCYL          TEST FOR SHARED CYLS
         BZ    NOSHRCYL
         MVC   INCCHHR,DS4F6PTR         SET UP ADDR OF F6 DSCB   Y02080
         B     ZEROUT
ISAMDSCB MVC   INCCHHR(5),DS3PTRDS      STORE CONT POINTER
         B     TESTPTR
NOSHRCYL EQU   *
         MVC   INCCHHR(5),DADSMADR      GET DADSM CCHHR.
         B     ZEROUT
*
* THIS SECTION CONVERTS THE EXTENTS TO RTA/RTA+1 FORMAT AND ADDS
* THEM TO THE DADSM TABLE.
*
CVTEXTS  LA    INDEX1,INDSCB+4          LOAD EXTENTS INDEX
         XC    FIELD1,FIELD1            CLEAR CONVERSION AREA    Y02080
         LTR   EXTCTR,EXTCTR           TEST EXTENT COUNTER.
         BCR   13,RETURN               BR IF NO EXTENTS.
         LR    R5,RWKAREA               SAVE WORK AREA POINTER.
         STM   RCVT,R3,IECREGSV+K12     SAVE REGISTERS 9 - 3     Y02080
         LA    R1,WKADEB                POINTER TO DEB           Y02082
         LA    R2,FIELD1                POINT TO CONVERSION AREA Y02080
FIRSTCVT EQU   *                                                 A31333
         LA    R3,2                     SET LOOP CONTROL         A31333
         MVC   FIELD1+K3(CCHHL),K2(R6)  INSERT CCHH TO CONVERT   Y02080
CVTLOOP  L     WORKREG,CVTPRLTV        GET ENTRY TO THE CONVERT RTNE.
         BALR  RETURN,WORKREG           CONVERT CCHH TO TTR0.
         LM    RCVT,RWKAREA,IECREGSV+K12-SCRTHWKA(R5)  RESTORE   Y02080
*                                       REGS                     A31333
         SRA   R3,1                     DECREMENT LOOP COUNTER   A31333
         SRL   R0,16                    GET TT. TT = RTA.
         CLI   0(R6),X'80'             IS THIS A SHARED CYLINDER EXT.
         BE    SHAREXTS                 BRANCHIF SHARED CYLINDER
         LTR   R3,R3                    WAS UPPER CCHH CONVERTED A31333
         BZ    CONT                     BRANCH IF YES            A31333
         STH   R0,0(INDEX2)             STORE LOWER RTA          A31333
         MVC   FIELD1+K3(CCHHL),K6(R6)  PICK UP HIGH CCHH        Y02080
         B     CVTLOOP                  GO CONVERT UPPER CCHH    A31333
CONT     EQU   *                                                 A31333
         LA    R11,1                                             A31333
         AR    R0,R11                   ADD 1 TO RTA             A31333
         STH   R0,2(INDEX2)             STORE UPPER RTA+1        A31333
INCRINDX LA    R6,10(R6)                UPDATE CCHH INDEX.
         LA    R7,4(R7)                 UPDATE RTA INDEX.
         BCT   EXTCTR,FIRSTCVT          BR IF ANOTHER EXTENT.
         LM    RCVT,R3,IECREGSV+K12     RESTORE REGISTERS 9 - 3  Y02080
         BR    RETURN                   RETURM.
*
SHAREXTS OI    DADSMTBL,8              INDICATE SHARED CYL'S.
         MVI   2(INDEX2),X'FF'         INDICATE SHARED CYL EXTENTS.
         STH   R0,0(INDEX2)             STORE RTA                A31333
         B     INCRINDX                INCREMENT INDICES.
*
* THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
EXCPIO   EQU   *
         EXCP  IOB                      EXECUTE CHANNEL PROGRAM.
         WAIT  ECB=ECB                  WAIT FOR COMPLETION.
         TM    ECB,X'20'                TEST FOR I/O ERROR.
         BCR   7,RETURN                 RETURN IF OKAY.
IOERROR  EQU   *                        I/O ERROR                Y02078
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
         MVI   11(VOLISTX),X'04'        SET I/O ERR IN VOL LST   M3097
SETCODE2 EQU   *                        RESET KEY              @Z40RSGD
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         DROP  R1                                                Y02078
SETCODE  EQU   *                                                 M3097
         MVI   ERCODE+1,X'08'           SET ERROR INDICATION     M3097
         LA    R2,LOAD4                 POINT TO PROPER ID.
         B     XCTLEXIT
*
*** PROGRAM CONSTANTS
*
THREE    DC    H'3'                     NUMBER OF EXTENTS IN F1
SIXTEEN  DC    H'16'                    MAX NO. OF EXTENTS IF OS
RET04    DC    H'4'                     USED TO TEST RETURN    @Z40RSGD
*                                       CODE FROM RACDEF       @Z40RSGD
*
*** THE FOLLOWING CHANNEL PROGRAM WRITES A FORMAT 0 DSCB RECORD.
*** THE FIRST DADSM DSCB IS READ INTO THE INPUT AREA.
*
CHANLPRG DS    0F
*CCW1                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID (OUTCCHHR)
*CCW2                                   TO BE CONSTRUCTED
*                                       TIC TO CCW1
*CCW3                                   TO BE CONSTRUCTED
*                                       WRITE KEY AND DATA (OUTDSCB)
*CCW4                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID (OUTCCHHR)
*CCW5                                   TO BE CONSTRUCTED
*                                       TIC TO CCW4
*CCW6
         DC    X'0E'                   READ KEY AND DATA (INDSCB)
         DC    AL3(0+INDSCB-FIRST)
         DC    X'5000'
         DC    H'140'
*CCW7
         DC    X'07'                    SEEK                     A34916
         DC    AL3(INLINESK-FIRST)      SEEK ADDR                Y02080
         DC    X'4000'
         DC    H'6'
*CCW8
         DC    X'1A'                    READ HOME ADDRESS
         DC    AL3(0)
         DC    X'5000'
         DC    H'5'
*CCW9                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID
*CCW10                                  TO BE CONSTRUCTED
*                                       TIC TO CCW9
*CCW11                                  TO BE CONSTRUCTED
*                                       READ KEY AND DATA
MRACDEF  RACDEF TYPE=DELETE,            RACDEF MASTER PARM     @Z40RSGDX
               DSTYPE=N,                LIST                   @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACDEF  EQU   *-MRACDEF                LENGTH PARM LIST       @Z40RSGD
*
*** TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LOAD3,0B,LOAD4,0D),SVC=029,LENGTH=,BRT=YES Y02080
         SPACE 2                                                 Y02078
         IECDSECS CVT,RB,TCB,JSCB,UCB,EXPAND=YES CVT, RB, JSCB @Z40RSGD
*                                       AND TCB                @Z40RSGD
*                                       UCB DSECTS.            @Y30LSTG
WORKAREA IECSCRWA EP,F4,D1=(1,3)        SCRATCH WORK AREA        Y02080
RACDEF   EQU   SCRTHWKA                 RACDEF PARAMETER LIST  @Z40RSGD
         END
