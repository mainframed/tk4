 TITLE 'IGG032I3 - ISAM ALLOCATE - BUILDS F1,F2,F3 DSCBS'
IGG032I3 CSECT
*
*MODULE NAME = IGG032I3
*
*DESCRIPTIVE NAME = ISAM ALLOCATE - BUILDS F1, F2, AND F3 DSCB'S
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 16 DELETIONS
*1462098200                                                        AAAA
*1462029200,058200-058400                                         13559
*1462                                                             15708
*          RELEASE 17 DELETIONS
*          RELEASE 18 DELETIONS
*1662031200,031400,048200                                         23475
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*1291033400,041700-041800,047200-047600,053200-055600            S20016
*          RELEASE 21 DELETIONS
*0000003400,017200,018200-018800,020800,026200-026400,           A38860
*0000026800-027000,034800-035000,037000-038400,038480,           A38860
*0000038600-039600,043220-043340,066600,069000-069200,           A38860
*0000070000-070600,070800,100600                                 A38860
*0000030800,031100-031800,034400-034600,036200,087700            M0184
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,000920-001000,002800,003400,005600,006000,    Y02080
*0000017800,018300-018600,025600,029400,030200,040800,041650-    Y02080
*0000042800,043360,043600,045000,048000,056600,061200,061900,    Y02080
*0000064400,069400-069800,070700-070800,088100,088650-088800,    Y02080
*0000089200,089600-103600                                        Y02080
*0000005200,008400,024640,024710,038480,039320-041400,088000     Y02134
*0000                                                            Y02144
*0000                                                            Y02082
*0000006200,060800-062200,089720-088600,089500,097800-098000     YM3995
*                                                                     *
*          VS2 RELEASE 03.0 DELETIONS/CHANGES                         *
*0000087900                                                     ZA00704
*          VS2 RELEASE 03.7 CHANGES/SU8
*A038045-038051                                                @ZA15055
*
*STATUS CHANGE LEVEL 005
*FUNCTION - THIS MODULE CHECKS FOR EMBEDDED INDEX AND AN EXISTING DSCB
*           FORMAT1 AND MAKES THE APPROPRIATE TRANSFER OF CONTROL. IF
*           NEITHER IS THE CASE IT BUILDS A DSCB FORMAT1 AND IF NECES-
*           SARY A DSCB FORMAT2 AND/OR FORMAT 3. THE DSCB'S CREATED ARE
*           WRITTEN OUT AND A TRANSFER OF CONTROL TO THE MODULE
*           IGG032I6 IS MADE.
*
*ENTRIES - THE ONLY ENTRY POINT TO THIS MODULE IS IGG032I3. ENTRY IS
*           MADE FROM THE SECOND LOAD OF ISAM ALLOCATE VIA A BRANCH.
*
*INPUT - AT ENTRY TO THIS MODULE REG 11 POINTS TO A JFCB. REGISTER
*        13 POINTS TO THE ALLOCATE WORK AREA CONTAINING THE VTOCADR,
*        THE DADSMADR, AND A FORMAT 1 DSCB IF ONE EXISTS. A SORTED
*        DADSM TABLE WILL BE IN THE WORK AREA.
*
*        IF MORE THAN ONE DD STATEMENT IS USED IN REQUESTING SPACE,
*        THE SEVEN LOW-ORDER BYTES OF THE DDNAME FIELD IN ALL BUT THE
*        FIRST ISAM DD ENTRY ARE USED TO CREATE THE FOLLOWING SPECIAL
*        ISAM ALLOCATE INTERFACE:
*
*              BYTE 1
*                   BITS 0 AND 1   00 - ABSOLUTE TRACK REQUEST
*                                  01 - BLANK SPACE REQUEST
*                                  11 - CONTIGUOUS SPACE REQUEST
*
*                   BIT 2          THIS IS THE SECOND DD CARD.
*
*                   BIT 5          OVFLOW HAS BEEN ALLOCATED.
*
*                   BIT 6          PRIME HAS BEEN ALLOCATED.
*
*                   BIT 7          INDEX HAS BEEN ALLOCATED.
*
*              BYTES 2 - 3         CURRENT VOLUME SEQUENCE NUMBER
*                                  FOR SECOND OR THIRD DD ENTRY
*
*              BYTES 4 - 7         POINTER TO THE FIRST TIOT ENTRY
*                                  FOR THIS REQUEST
*
*
*OUTPUT - UPON TRANSFERRING TO THE NEXT MODULE IGG032I6,THE  WORK AREA
*         WILL CONTAIN A SORTED DADSM TABLE, THE VTOCADR AND DADSMADR.
*
*EXTERNAL ROUTINES - THE FOLLOWING ARE SUPERVISOR CALLS ISSUED IN THE
*   MACRO EXPANSIONS
*   EXCP(0) READ FROM OR WRITE TO DIRECT ACCESS DEVICE
*   WAIT(1) WAIT ON EVENT CONTROL BLOCK
*
*   OTHER MACROS ISSUED - IEFJFCBN - BUILDS JFCB
*                         IECALLWA - ALLOCATE WORK AREA EXPANSION
*                         IECSDSL1 - BUILDS DSCBS
*                         IECDSECS - EXPANDS CVT, PSA, SCVT, UCB DSECTS
*
*
*EXITS - NORMAL - TO IGG032I4 WHEN F1,F2,F3 ALREADY EXIST
*               - TO IGG032I5 FOR EMBEDDED INDEX
*               - TO IGG032I6 WHEN F1,F2,F3 ARE BUILT
*      - ERROR - TO IGG032I7 WITH ERROR CODE IN REG5
*
*              0C   PERMANENT I/O ERROR
*
*              1C - WRONG DSORG OR DISP
*
*
*TABLES/WORK AREAS - DADSM WORK AREA DESCRIBED BY MACRO IECALLWA
*
*
*              ***************************************
*              *             DADSM TABLE             *
*              ***************************************
*
*              ***************************************
*              *        *         *                  *
*              *  TYPE  *  NO OF  *     USED HOLE    *
*              *  FLAG  * ENTRIES *      COUNTER     *
*              *        *         *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*
*
*              TYPE FLAG = 02 - BPAM DIRECTORIES REQUESTED.
*
*                        = 40 - USER LABELS REQUESTED
*
*                        = 80 - SET MUST COMPLETE IS ACTIVE
*
*
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.
*
*
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.
*
*
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT.
*
*
*ATTRIBUTES - REENTRANT
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = AS DEFINED IN THE IECALLWA MACRO
*          RPS WORK AREA = AS DEFINED IN THE IECRPS MACRO
*
*
*REGISTER USAGE
*              REGISTERS 0-9 WORK REGISTERS
*              REGISTER 10 - TIOT SET UP TABLE POINTER
*              REGISTER 11 - JFCB POINTER
*              REGISTER 12 - BASE REGISTER
*              REGISTER 13 - WORK AREA POINTER
*              REGISTER 14 SUBROUTINE LINKAGE AND WORK REGISTER
*              REGISTER 15 WORK REGISTER
***** REGISTER NAMES *****
RZERO    EQU   0
RONE     EQU   1
RTWO     EQU   2
RTHREE   EQU   3
RFOUR    EQU   4
RFIVE    EQU   5
RSIX     EQU   6
RSEVEN   EQU   7
REIGHT   EQU   8
RNINE    EQU   9
DRBAK   EQU   9
RTEN     EQU   10
RJFCB    EQU   11
RBASE    EQU   12
RWORK    EQU   13
RETURN   EQU   14
RFTEN    EQU   15
*
* OTHER EQUATES
*
ZERO     EQU   0                        CONSTANT OF 0            Y02134
K1       EQU   1                        CONSTANT OF 1            Y02082
F1ID     EQU   C'1'                     FORMAT ONE IDENTIFIER    M0184
STEPMC   EQU   1                        STATUS STEP MC INDICATOR YM3995
K12      EQU   12                       CONSTANT OF 12           YM3995
TIOEVOLS EQU   2                        DISP TO NBR OF DEVICES   A38860
TIOEDDNM EQU   4                        OFFSET TO DDNAME         A38860
ISAMSTAT EQU   5                        DISP TO ALLOCAT'N STATUS A38860
VOLSQCTR EQU   6                        OFFSET TO DS1VOLSQ CTR   A38860
TIOTPTR  EQU   8                        PTR TO 1ST TIOT ENTRY    A38860
UCBENTRY EQU   16                       OFFSET TO 1ST UCB ENTRY  A38860
BLANK    EQU   X'40'                    EBCDIC BLANK             A38860
RDWOPSWD EQU   X'04'                    READ-W/O-PASSWORD SWITCH Y02080
TWO      EQU   2                        CONSTANT OF TWO          Y02080
FOUR     EQU   4                        CONSTANT OF FOUR         Y02134
FIVE     EQU   5                        CONSTANT OF FIVE         Y02080
RESBITS  EQU   X'13'                    DSORG RESERVE BITS       Y02080
DS1RACDF EQU   X'40'                    DS1DSIND-DATA SET IS   @Z40RSGD
*                                       RAC DEFINED            @Z40RSGD
F2NEEDED EQU   X'80'                    FORMAT 2 NOT WRITTEN   @Z40RSGD
RACERR   EQU   X'A4'                    RAC ERROR CODE BASE    @Z40RSGD
TIOEFSRT EQU   X'10'                    OFFSET TO UCB          @Z40RSGD
*
         BALR  RBASE,0
         USING BETA,RBASE
         USING ALLOCWKA,RWORK           WORK AREA ADDRESSABILITY Y02080
         USING JFCBKEN,RJFCB
*
* THIS SECTION RELOCATES THE CHANNEL PROGRAM TO BE USED BY IGG032I3,
* IGG032I4, AND IGG032I5. THIS CHANNEL PROGRAM WILL BE USED TO SEARCH
* FOR HOLES IN THE VTOC AND TO WRITE OUT OR READ IN FORMAT 1, 2, AND 3
* DSCB'S.
*
BETA     LM    RZERO,RNINE,CHANNPR      RELOCATE CHANNEL PROGRAM
         ALR   RZERO,RWORK
         ALR   RFOUR,RWORK
         ALR   RSIX,RWORK
         STM   RZERO,RNINE,CCW1
         LM    RZERO,RNINE,CHANNPR+40    PICK UP 5 CCW'S
         ALR   RTWO,RWORK
         ALR   REIGHT,RWORK
         STM   RZERO,RNINE,CCW6
         LM    RZERO,RONE,CHANNPR+80
         STM   RZERO,RONE,CCW11
FINE     CLI   DS1FMTID,X'F1'           CHECK FOR EXISTENCE OF LEGAL
*                                          DUPLICATE NAME FORMAT 1 DSCB
         BNE   FROMJFCB                 BRANCH IF THERE IS NO F 1
         LA    RTWO,MOD32I4             POINT TO ID OF IGG032I4  Y02080
         B     XCT
* THIS SECTION BUILDS ALL BUT THE EXTENT FIELDS OF A FORMAT 1 DSCB
FROMJFCB EQU   *                                                 M0184
         XC    DS1FMTID(DS1END-DS1FMTID),DS1FMTID  CLEAR F1 DSCB M0184
*                                                              @Z40RSGD
*   SET RAC DEFINED BIT IN FORMAT 1 DSCB IF AUTOMATIC DATA SET @Z40RSGD
*   PROTECTION REQUESTED IN JFCB.                              @Z40RSGD
*                                                              @Z40RSGD
         USING CVT,RFTEN                                       @ZA15055
         L     RFTEN,CVTPTR             GET ADDRESS OF CVT     @ZA15055
         L     RFTEN,CVTRAC             LOAD ACCESS CNTL ADDR  @ZA15055
         LA    RFTEN,0(,RFTEN)          CLEAR HI-ORD           @ZA15055
         LTR   RFTEN,RFTEN              RAC ACTIVE?            @ZA15055
         DROP  RFTEN                                           @ZA15055
         BZ    NORACBIT                 NO-CONTINUE            @ZA15055
         TM    JFCFLGS1,JFCBADSP        AUTO DATA SET PROTECT  @Z40RSGD
         BZ    NORACBIT                 NO-CONTINUE            @Z40RSGD
         OI    DS1DSIND,DS1RACDF        YES-SET RAC PROTECTED  @Z40RSGD
*                                       INDICATOR              @Z40RSGD
NORACBIT EQU   *                                               @Z40RSGD
         MVI   DS1FMTID,F1ID            MOVE IN F1 IDENTIFIER    M0184
         MVC   DS1CREDT(6),JFCBCRDT     CREATION AND EXPIRATION DATES
         MVC   DS1SYSCD(13),SYSCODE     MOVE IN SYSTEM CODE      M0184
         MVC   DS1DSORG(8),JFCDSORG     SET UP DATA SET ORGANIZATION
*                                       RECORD FORMAT
*                                       OPTION CODE
*                                       BLOCK LENGTH
*                                       RECORD LENGTH
         NI    DS1DSORG+K1,X'FF'-RESBITS CLEAR THE RESERVED BITS Y02082
         MVC   DS1KEYL(1),JFCKEYLE      RELATIVE KEY FIELD
         MVC   DS1RKP(2),JFCRKP         FLAG FIELD AND SECONDARY QTY
         TM    JFCBIND2,JFCBSCTY        DOES JFCB SPEC SECURITY  S20016
         BZ    NOSECTY                  BRANCH IF NO
         OI    DS1DSIND,X'10'           SET SECURITY BIT IN DSCB F1
         TM    JFCBIND2,JFCBRWPW        DOES JFCB SPEC RWPW OPTN S20016
         BNO   NOSECTY                  BRANCH IF NO             S20016
         OI    DS1DSIND,RDWOPSWD        IND SECTY IS FOR WR ONLY S20016
NOSECTY  MVC   DS1SCALO(4),JFCBCTRI     SET REQUEST TYPE AND SECONDARY
*                                          QUANTITY
         CLI   TIOEDDNM(RTEN),BLANK     CHECK FOR DDNAME FOR     A38860
*                                       THIS ENTRY IN THE TIOT   A38860
         BE    NOTFIRST                 BRANCH IF THIS NOT THE FIRST
         MVC   DS1DSSN(6),JFCBVOLS      MOVE IN DATA SET VOL SEQ NUM
         IC    RSIX,CTR                 PICK UP NUMBER OF VOLUMES
         LA    RSIX,1(RSIX)                COUNTER
         STC   RSIX,DS1VOLSQ+1          SET VOLUME SEQUENCE NUMBER
         B     FILLEXTS
* THIS SECTION CALCULATES THE VOLUME SEQUENCE NUMBER AND PICKS UP THE
* DATA SET SERIAL NUMBER FOR THE SECOND OR THIRD DD ENTRY
NOTFIRST EQU   *                                                 A38860
         LH    RSIX,VOLSQCTR(,RTEN)     GET NUMBER OF DEVICES    A38860
         LA    RSIX,1(RSIX)             INCREMENT THIS NUMBER    A38860
         STH   RSIX,VOLSQCTR(,RTEN)                              A38860
         MVC   DS1VOLSQ(2),VOLSQCTR(RTEN)  MOVE IN VOL SEQ NBR   A38860
*                                                                 15708
*              NO DDNAME IMPLIES CONCATENATION WITH A             15708
*              PREVIOUS DD CARD.  A BLANK TIOT POINTER ENTRY      15708
*              INDICATES THAT AN INVALID CONDITION EXISTS,        15708
*              DSORG=IS WAS NOT SPECIFIED FOR THE PRECEEDING      15708
*              DD CARD.                                           15708
*                                                                 15708
         CLC   TIOTPTR(FOUR,RTEN),BLANKS  CHECK PTR FOR BLANKS   Y02134
         BC    7,CONTINUE         BRANCH IF NOT EQUAL TO BLANKS   15708
         LA    RFIVE,28           INVALID REQUEST                 15708
         B     ERRORXCT                                           15708
CONTINUE EQU   *                                                  15708
         L     RSIX,TIOTPTR(,RTEN)      PTR TO 1ST TIOT ENTRY    A38860
         L     RTWO,UCBENTRY(,RSIX)     GET 1ST UCB ADDRESS      Y02134
         LA    RTWO,ZERO(,RTWO)         CLEAR HIGH BYTE          Y02134
         USING UCB,RTWO
         MVC   DS1DSSN(6),SRTEVOLI      PICK UP VOLUME SERIAL    S20016
*                                       NO.                      S20016
FILLEXTS EQU   *                        BRANCH LABEL             Y02080
         LA    RTWO,AENTRIES            PICK UP DADSMTBL POINTER Y02080
         LA    RTHREE,DS1EXT1           PICK UP F1 EXTENT POINTER
         LA    RFOUR,3                  SET UP EXTENT COUNTER
         MVC   DS1NOEPV,AENTRYNM        STORE NUMBER OF EXTENTS  Y02080
         SR    RNINE,RNINE
         IC    RNINE,AENTRYNM           LOAD THE NBR OF ENTRIES  Y02080
*                                          IN THE DADSM TABLE
*
TEST1    OC    DIRQTY(2),DIRQTY         CHECK FOR EMBEDDED INDEX
*                                          QUANTITY
         BZ    GOOD                     BRANCH IF NO EMBEDDED INDEX
*                                          QUANTITY REQUESTED
         LA    RTWO,MOD32I5             POINT TO ID OF IGG032I5  Y02080
         B     XCT
GOOD     SR    RFIVE,RFIVE              SET EXTENT SEQUENCE NUMBER
         XC    F5IN+135(5),F5IN+135     CLEAR CHAIN FIELD
* THIS SECTION FILLS IN THE EXTENT FIELDS OF THE FORMAT 1
LOOP1    BAL   RETURN,LOOP
         BCTR  RNINE,0                  REDUCE NUMBER OF ENTRIES
         LTR   RNINE,RNINE              CHECK FOR THE LAST ENTRY
         BZ    ENTERED                  BRANCH IF ON LAST ENTRY
         BCTR  RFOUR,0                  REDUCE NUMBER OF SPACES IN F1
         LTR   RFOUR,RFOUR              CHECK FOR THE LAST F1 ENTRY
         BNZ   LOOP1                    BRANCH IF F1 NOT FULL    S20016
         SPACE 1                                                 S20016
* THIS SECTION BUILDS A DSCB FORMAT 3
         SPACE 1                                                 S20016
         MVI   IECSDSL3,X'03'           BUILD A DSCB F3          S20016
         MVC   IECSDSL3+1(3),IECSDSL3                            S20016
         XC    IECSDSL3+4(131),IECSDSL3+4                        S20016
         MVI   DS3FMTID,X'F3'           MOVE IN FORMAT           S20016
*                                       IDENTIFIER               S20016
         LA    RTHREE,DS3EXTNT                                   S20016
         SPACE 1                                                 S20016
* THIS SECTION FILLS IN THE EXTENT FIELDS OF THE FORMAT 3
         SPACE 1                                                 S20016
LOOP2    EQU   *                                                 S20016
         BAL   RETURN,LOOP              CALCULATE F3 EXTENTS     S20016
         BCTR  RNINE,RZERO              DECREMENT ENTRY COUNT    S20016
         LTR   RNINE,RNINE              CHECK FOR LAST ENTRY     S20016
         BNZ   LOOP2                    BRANCH IF NOT LAST DADSM S20016
*                                       TABLE ENTRY
         BAL   DRBAK,WRITEF3            WRITE OUT DSCB F3        S20016
         MVC   F5IN+135(5),SAVEADR+5    SET UP F3 ADDRESS
         MVC   DS1PTRDS,SAVEADR+FIVE                             Y02080
NOSPACE  EQU   *                                                  23475
ENTERED  EQU   *                                                  23475
         TM    F2,X'80'                 TEST F2 BYTE FOR NEED     23475
*                                          A FORMAT 2 DSCB
         BC    8,ONEONLY                BRANCH IF NO FORMAT 2 DSCB
*                                          NEEDED
* THIS SECTION BUILDS A DSCB FORMAT 2.
BUILDF2  MVI   F5IN,X'02'               BUILD A DSCB FORMAT 2
         XC    F5IN+1(134),F5IN+1
         MVC   DS2NOTRK(1),JFCNTM       PICK UP NUMBER OF TRACKS FOR
*                                          HIGHEST LEVEL INDEX
         MVC   DS2CYLOV(1),JFCCYLOF     PICK UP NUMBER OF TRACKS FOR
*                                          CYLINDER OVERFLOW
         MVI   DS2FMTID,X'F2'           SET FORMAT IDENTIFIER
        BAL   DRBAK,WRITEF2            WRITE OUT DSCB F2
         MVC   DS1PTRDS(5),TTRLL        MOVE F2 POINTER INTO F1
ONEONLY  EQU   *                        NEXT DSCB              @Z40RSGD
*                                                              @Z40RSGD
*   DEFINE CURRENT VOLUME OF THIS DATA SET TO RAC IF DATA SET  @Z40RSGD
*   IS TO BE RAC PROTECTED.                                    @Z40RSGD
*                                                              @Z40RSGD
         TM    DS1DSIND,DS1RACDF        IS IT RAC DEFINED      @Z40RSGD
         BZ    RACDEFOK                 NO-CONTINUE            @Z40RSGD
         L     RTHREE,DEB+32            CURRENT UCB            @Z40RSGD
         MVC   RACDEF(LRACDEF),MRACDEF  SETUP RACDEF PARM LIST @Z40RSGD
*   CHECK FOR FIRST VOLUME                                     @Z40RSGD
         CLI   F2,F2NEEDED              FIRST                  @Z40RSGD
         BNE   RACNEXTD                 NO-PROCESS SUBSEQUENT  @Z40RSGD
         RACDEF TYPE=DEFINE,                                   @Z40RSGDX
               ENTITY=JFCBDSNM,                                @Z40RSGDX
               VOLSER=UCBVOLI-UCB(RTHREE),                     @Z40RSGDX
               MF=(E,RACDEF)                                   @Z40RSGD
         B     RACCHKIT                 CHECK RESULTS          @Z40RSGD
RACNEXTD EQU   *                        PROCESS NON-FIRST VOL  @Z40RSGD
*   LOCATE FIRST UCB FOR FIRST DD                              @Z40RSGD
         L     RTWO,ADSABLST            DSAB LIST              @Z40RSGD
         L     RTWO,FIRSDSAB-DSABLIST(RTWO) FIRST DSAB         @Z40RSGD
         L     RTWO,DSABTIOT-DSAB(RTWO) TIOT ENTRY             @Z40RSGD
         L     RTWO,TIOEFSRT(RTWO)      UCB POINTER            @Z40RSGD
         RACDEF TYPE=ADDVOL,                                   @Z40RSGDX
               ENTITY=JFCBDSNM,                                @Z40RSGDX
               VOLSER=UCBVOLI-UCB(RTHREE),                     @Z40RSGDX
               OLDVOL=UCBVOLI-UCB(RTWO),                       @Z40RSGDX
               MF=(E,RACDEF)                                   @Z40RSGD
RACCHKIT LTR   RFTEN,RFTEN                                     @Z40RSGD
         BZ    RACDEFOK                                        @Z40RSGD
         LA    RFIVE,RACERR(RFTEN)      SET ERROR CODE         @Z40RSGD
         B     ERRORXCT                 GO TO ERROR EXIT 32I7  @Z40RSGD
RACDEFOK EQU   *                        RACDEF COMPLETE        @Z40RSGD
         BAL   DRBAK,WRITEF1            WRITE OUT DSCB F1      @Z40RSGD
         TM    DS4VTOCI,X'80'           CHECK FOR THE VTOC BEING IN AN
*                                          UNEXPECTED CONDITION
         BC    1,XCTLDADS               BRANCH IF VTOC NOT IN THE
*                                          EXPECTED CONDITION
         CLC   SAVEADR(5),DS4HPCHR      CHECK FOR NEED TO UPDATE THE
*                                          POINTER IN F4 TO THE LAST F1
         BNH   XCTLDADS                 BRANCH IF POINTER DOESN'T NEED
*                                          UPDATING
         MVC   DS4HPCHR(5),SAVEADR      MOVE IN POINTER TO LAST FORMAT1
         B     XCTLDADS
* THIS SECTION SETS UP THE CHANNEL PROGRAM FOR WRITING OUT DSCB FORMAT
* 1,2, AND 3.
WRITEF1  LA    RFOUR,SAVEADR            PICK UP POINTER TO ADDRESS FOR
*                                          FORMAT 1
         LA    RTHREE,DS1DSNAM          ADDRESS TO WRITE FROM    Y02080
         MVC   DS1DSNAM(44),JFCBDSNM   RESET DSNAME PORTION OF F1 AFTER
*                                         USING IT FOR THE CONVERT RTN
CHANGE2  LA    RTWO,CCW1                START PROGRAM TO SEARCH FOR A
*                                          HOLE IN THE VTOC
         IC    RONE,UHOLECTR+1          PICK UP NUMBER OF DSCB'S
         LA    RONE,1(RONE)                WRITTEN AND UPDATE IT
         STC   RONE,UHOLECTR+1
         ST    RTWO,IOB+16             SET ENTRY TO CHNL PGM      13559
         ST    RFOUR,CCW2              SET ADDR TO SEARCH ON IN   13559
*                                          THE FOLLOWING CCW'S
         MVI   CCW2,X'92'              RESTORE COMMAND CODE       13559
         MVC   CCW6+1(FOUR),CCW2+1                                13559
         MVC   CCW9+1(FOUR),CCW2+1                                13559
         ST    RTHREE,PDLIST
         MVC   CCW5+1(3),PDLIST+1      MOVE IN READ INTO AND WRITE OUT
         MVC   CCW8+1(3),PDLIST+1          OF AREA ADDRESS
         MVC   CCW11+1(3),PDLIST+1
         MVC   SEEK+3(4),VTOCADR       START SEARCH AT VTOC ADR   13559
         ST    DRBAK,CCW7+4            SAVE RETURN ADDRESS        13559
         BAL   DRBAK,CHKSMC            SEARCH FOR F0              13559
         L     DRBAK,CCW7+4            RESTORE RETURN ADDRESS     13559
         MVC   SEEK+3(4),0(RFOUR)      SEEK TO FOUND F0           13559
         LA    RZERO,CCW6              START CHANNEL PROGRAM ...  13559
         ST    RZERO,IOB+16                 AT   CCW6             13559
CHKSMC   EQU   *                                                  13559
         TM    TYPEFLG,SMCDONE          IS SET MUST COMPLETE ON
         BO    CLRECB                   BRANCH IF YES
*
* LINK TO THE STATUS ROUTINE TO PERFORM A STEP MUST COMPLETE
*
         STM   RJFCB,RETURN,IECREGSV+K12  SAVE REGISTERS 11-14   YM3995
         LR    RTHREE,RWORK             SAVE WORK AREA ADDRESS   YM3995
GETLOCK  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  YM3995X
               RELATED=(LOCAL,IGG032I3(RLSELOCK))  OBTAIN LOCK   YM3995
         LM    RJFCB,RETURN,IECREGSV+K12-ALLOCWKA(RTHREE)        YM3995
*
         USING CVT,RFTEN                CVT ADDRESSABILITY       YM3995
         L     RFTEN,CVTPTR             LOAD CVT ADDRESS         YM3995
         L     RFTEN,CVTABEND           LOAD SECONDARY CVT PTR   YM3995
         USING SCVTSECT,RFTEN           2NDRY CVT ADDRESSABILITY YM3995
         L     RFTEN,SCVTSTAT           LOAD STATUS EP ADDRESS   YM3995
         DROP  RFTEN                                             YM3995
         LA    RZERO,STEPMC             INDICATE STEP MC         YM3995
         XR    RONE,RONE                INDICATE STATUS SET      YM3995
*
         BALR  RETURN,RFTEN             LINK TO STATUS ROUTINE   YM3995
*
RLSELOCK EQU   *                        RELEASE THE LOCK         YM3395
         STM   RJFCB,RETURN,IECREGSV+K12  SAVE REGISTERS 11-14   YM3995
         LR    RTHREE,RWORK             SAVE WORK AREA ADDRESS   YM3995
         SETLOCK RELEASE,TYPE=LOCAL,                             YM3995X
               RELATED=(LOCAL,IGG032I3(GETLOCK))  RELEASE LOCK   YM3995
         LM    RJFCB,RETURN,IECREGSV+K12-ALLOCWKA(RTHREE)        YM3995
*
         OI    DSMADTB2,DSMSMCE         SET ENQ'ED SMC SWITCH    Y02144
         OI    TYPEFLG,SMCDONE          TURN ON SMC INDICATOR
CLRECB   EQU   *                                                  15708
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,X'20'                TEST FOR A PERMANENT I/O ERROR
        BCR   7,DRBAK                  BRANCH IF NO PERMANENT
*                                          ERROR
         LA    RFIVE,12                 SET ERROR CODE FOR PERMANENT
*                                          I/O ERROR
ERRORXCT EQU   *                                                  15708
         LA    RTWO,ERRORLD             POINT TO ID OF IGG032I7  Y02080
         B     XCT
WRITEF2  LA    RFOUR,TTRLL              PICK UP POINTER TO ADDRESS FOR
*                                          FORMAT 2
WRITE    LA    RTHREE,F5IN              PICK UP ADDRESS TO WRITE FROM
         B     CHANGE2
WRITEF3  LA    RFOUR,SAVEADR+5          PICK UP POINTER TO ADDRESS FOR
*                                          FORMAT 3
         B     WRITE
*
* THIS SECTION RELOCATES THE CHANNEL PROGRAM FOR THE FORMAT 5 UPDATING
* OF IGG032I6.
*
XCTLDADS LA    RTWO,TTRLL               PICK UP POINTER TO ADDRESS FOR
         ST    RTWO,PDLIST                 FORMAT 5
         MVC   CCW1+1(3),PDLIST+1
         MVC   CCW2+1(3),PDLIST+1
         MVC   CCW6+1(3),PDLIST+1
         MVC   CCW9+1(3),PDLIST+1
         LA    RTWO,DS1DSNAM            PICK UP ADDRESS TO READ INTO
         ST    RTWO,PDLIST
         MVC   CCW5+1(3),PDLIST+1
         MVC   CCW8+1(3),PDLIST+1
         LA    RTWO,140(RTWO)           PICK UP ADDRESS TO WRITE FROM
         ST    RTWO,CCW11                                        A38860
         MVI   CCW11,X'0E'              RESTORE RD COMMAND CODE  A38860
*
* THIS SECTION BRANCHES TO ANOTHER MODULE.
*
         LA    RTWO,F5LOAD              POINT TO ID OF IGG032I6  Y02080
XCT      EQU   *                                                 A38860
         IECRES LOAD,EXTPR=(RWORK),MODID=(RTWO),BRANCH=DIRECT    Y02080
*
*THIS SECTION SET UP AND BRANCHES TO CONVERT ROUTINE TO CONVERT FROM
*RTA TO CCHH
LOOP     MVC   0(1,RTHREE),TYPE        SET EXTENT TYPE
         STC   RFIVE,1(RTHREE)         SET EXTENT SEQUENCE NUMBER
         LA    RFIVE,1(RFIVE)
         L     RSIX,CVTPTR             PICK UP CVT POINTER
         USING CVT,RSIX
         STM   RZERO,RTWO,DS1DSNAM      SAVE REGISTERS ZERO THRU TWO
         STM   RNINE,RETURN,DS1DSNAM+12   AND NINE THRU 15 BEFORE
*                                         BRANCHING TO THE CONVERT RTN
         L     RFTEN,CVTPCNVT          CONVERT ROUTINE ADDRESS
         LA    RONE,DEB                R1=DEB ADDRESS
         LH    RZERO,0(RTWO)           R0=RTN TO BE CONVERTED
         SLL   RZERO,16
         LA    RTWO,DS1DSNAM+36        R2=ADDRESS OF 8 BYTE RESULT AREA
         LR    REIGHT,RWORK            SAVE AREA ADDRESS
         BALR  RETURN,RFTEN
         MVC   2(4,RTHREE),39+DS1DSNAM-FIRST(REIGHT)
         L     RSEVEN,8+DS1DSNAM-FIRST(REIGHT) CONVERT RTA+1 IN THE
         LH    RZERO,2(RSEVEN)            SAME MANNER AS RTA
         BCTR  RZERO,0
         SLL   RZERO,16
         L     RFTEN,CVTPCNVT           PICK UP CONVERT ROUTINE ADDRESS
         BALR  RETURN,RFTEN
         MVC   6(4,RTHREE),39+DS1DSNAM-FIRST(REIGHT)
         LM    RZERO,RTWO,DS1DSNAM-FIRST(REIGHT)
         LM    RNINE,RETURN,DS1DSNAM+12-FIRST(REIGHT)
         LA    RTHREE,10(RTHREE)       UPDATE DSCB POINTER
         LA    RTWO,4(RTWO)            UPDATE EXTENT POINTER
         BR    RETURN
         EJECT                                                 @Z40RSGD
*                                                              @Z40RSGD
*   MASTER RACDEF PARAMETER LIST                               @Z40RSGD
*                                                              @Z40RSGD
MRACDEF  RACDEF DSTYPE=N,                                      @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACDEF  EQU   *-MRACDEF                LENGTH RACDEF PARMLIST @Z40RSGD
*
* CHANNEL PROGRAM
*
         DS    0D
CHANNPR  EQU   *
*CCW1
         DC    X'16'                   READ RECORD ZERO           13559
         DC    AL3(0+F5IN-FIRST)
         DC    X'7000'
         DC    H'4'
*CCW2
         DC    X'92'                    READ COUNT
         DC    AL3(000000)
         DC    X'6000'
         DC    H'5'
*CCW3
         DC    X'A9'                    SEARCH EQUAL KEY
         DC    AL3(4+CCW4-FIRST)
         DC    X'6000'
         DC    H'4'
*CCW4
         DC    X'08'                    TIC
         DC    AL3(0+CCW2-FIRST)
ZEROS    DC    F'0'
*CCW5
         DC    X'06'                    READ DATA
         DC    AL3(000000)
         DC    X'3000'                 BREAK CHANNEL PROGRAM HERE 13559
         DC    H'8'
*CCW6
         DC    X'31'                    SEARCH EQUAL ID
         DC    AL3(000000)
         DC    X'4000'
         DC    H'5'
*CCW7
         DC    X'08'                    TIC
         DC    AL3(0+CCW6-FIRST)
         DC    F'0'
*CCW8
         DC    X'0D'                    WRITE KEY AND DATA
         DC    AL3(000000)
         DC    X'4000'
         DC    H'140'
*CCW9
         DC    X'31'                    SEARCH EQUAL ID
         DC    AL3(000000)
         DC    X'4000'
         DC    H'5'
*CCW10
         DC    X'08'                    TIC
         DC    AL3(0+CCW9-FIRST)
         DC    F'0'
*CCW11
         DC    X'0E'                    READ KEY AND DATA
         DC    AL3(000000)
         DC    X'1000'
         DC    H'140'
*
* CONSTANTS
*
SYSCODE  DC    CL13'IBMOSVS2'           SYSTEM CODE             ZA00704
BLANKS   DC    CL4' '                   FOUR BLANKS              YM3995
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(MOD32I4,I4,MOD32I5,I5,F5LOAD,I6,           Y02080X
               ERRORLD,I7),SVC=032,LENGTH=,BRT=YES               Y02080
DSABLIST DSECT ,                                               @Z40RSGD
CURRDSAB DS    A                        CURRENT DSAB           @Z40RSGD
FIRSDSAB DS    A                        FIRST DSAB             @Z40RSGD
         EJECT                                                   Y02080
JFCBKEN  DSECT
         IEFJFCBN
         SPACE 2                                                 Y02080
         IECDSECS CVT,PSA,SCVT,UCB,DSAB,EXPAND=YES             @Z40RSGD
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(2,3),ADT=YES  WORK AREA       Y02144
RACDEF   EQU   IECREGSV                 RACDEF PARM LIST       @Z40RSGD
         END
