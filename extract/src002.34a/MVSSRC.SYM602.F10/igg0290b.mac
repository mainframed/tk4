         TITLE 'IGG0290B - DADSM SCRATCH - UPDATE FORMAT 6 DSCB' A36312
IGG0290B CSECT
*TITLE   DADSM SCRATCH  UPDATE FORMAT 6 DSCB
*          RELEASE 17 DELETIONS
*          RELEASE 18 DELETIONS
*0095031800,033800,034800,035800-041200,043200                    20344
*0095028600,029000                                                20873
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*1021025200,057400,059000                                        A31333
*          RELEASE 21 DELETIONS
*1198000200,001800-002200,002600-002800,003600-005000,005400-    A36312
*1198005600,010800-011200,025420-025500,026000,029400,031400,    A36312
*1198034660,035000-035200,036400-036700,037300-038700,041600,    A36312
*1198071400                                                      A36312
*          RELEASE 21.7 DELETIONS
*0000000680-000860,006200,057300-059000,066600-068000           SA56400
*          VS1 RELEASE 2 DELETIONS
*0000                                                           XM1038
*
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,001000,003200,004600,011800-012000,035800,    Y02080
*0000036000,047860,048600-049600,057240,059050-070600,071000-    Y02080
*0000071200                                                      Y02080
*0000002240,011040,016400-016600                                 Y02078
*0000                                                            Y02082
*                 VS2 RELEASE 030 CHANGES
*0000                                                          @ZA07591
*
*
* MODULE NAME - IGG0290B
*
* DESCRIPTIVE NAME - DADSM SCRATCH - UPDATE FORMAT 6 DSCB
*
* COPYRIGHT - NONE
*
* CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING CSECT CARD
*
* STATUS CHANGE LEVEL 003
*ATTRIBUTES - REENTRANT
*
*FUNCTION - THIS MODULE UPDATES THE EXTENTS IN THE FORMAT 6 DSCB
*          RECORDS. THE NEW EXTENTS ARE PASSED TO THIS MODULE IN
*          A TABLE IN THE WORK AREA. FOR EACH SPLIT CYLINDER DATA SET
*          ENTRY IN THIS DADSM TABLE, THE CORRESPONDING EXTENT IS
*          FOUND IN A FORMAT 6 DSCB, AND ITS DATA SET COUNT IS
*          DECREMENTED BY ONE. IF THIS BYTE BECOMES ZERO, THE SPACE
*          DESCRIBED BY THE FORMAT 6 EXTENT IS FREED, AND ITS
*          RTA/RTA+1 IS PLACED IN THE DADSM TABLE SO THAT A LATER
*          LOAD OF SCRATCH CAN ADD THIS AVAILABLE SPACE TO A
*          FORMAT 5 DSCB. IF THE DOS BIT OR DIRF BIT IS SET IN THE
*          FORMAT 4 DSCB, THE EXTENTS WILL NOT BE RETURNED TO THE
*          FORMAT 5 DSCB, AND CONTROL IS PASSED DIRECTLY TO THE
*          LAST LOAD OF SCRATCH.
*
*ENTRIES - THE ONLY ENTRY POINT TO THIS MODULE IS IGG0290B. ENTRY
*          IS MADE FROM IGG0299A.
*
*
*SUPERVISOR CALLS ISSUED:
*          EXCP(0)  READ FROM OR WRITE TO A DIRECT ACCESS DEVICE
*          WAIT(1)  WAIT ON AN EVENT CONTROL BLOCK
*
*MACROS USED:
*          IECDSECS - EXPANDS THE CVT, RB, AND TCB DSECTS
*          IECSDSL1 - ENABLES SYMBOLIC ADDRESSING OF DSCBS
*          IECSCRWA - SCRATCH WORK AREA EXPANSION
*
*INPUT - AT ENTRY TO THIS MODULE REGISTER 13 POINTS TO THE WORK AREA.
*
*OUTPUT - UPDATED FORMAT 6 DSCB. REGISTER 9 INDICATES NUMBER OF
*         EXTENTS IN DADSM TABLE.
*
*ERROR CONDITION - THE ONLY ERROR INDICATED IS PERMANENT I/O ERROR.
*
*NOTES - UNLIKE THE ALLOCATE, EXTEND, AND PARTIAL RELEASE FUNCTIONS
*        OF DADSM, IF THE DIRF BIT IS SET IN THE FORMAT 4 DSCB IN
*        THE SCRATCH WORK AREA, THIS INDICATES THAT THE DIRF BIT
*        WAS PREVIOUSLY SET IN THE FORMAT 4 DSCB.
*
*REGISTER USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
INDEX2   EQU   2
R3       EQU   3
INDEX3   EQU   3
INDEX4   EQU   4
COUNT1   EQU   5
EXTCTR   EQU   6
COUNT3   EQU   7
VOLISTX  EQU   8
COUNT4   EQU   9
INDEX1   EQU   10
RTA      EQU   11
RBASE    EQU   12
RWKAREA  EQU   13
RETURN   EQU   14
WORKREG  EQU   15
*
* OTHER EQUATES
*
ONE      EQU   1                        VALUE ONE                A36312
K5       EQU   5                        CONSTANT OF FIVE        SA56400
DOSBIT   EQU   X'80'                    TEST FOR DOS VOLUME      Y02078
DIRFBIT  EQU   X'04'                    TEST FOR DIRF BIT        Y02078
*
         BALR  RBASE,R0
         USING BEGIN,RBASE
         USING SCRTHWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
*
* THIS SECTION MODIFIES THE CHANNEL PROGRAM TO READ AND WRITE
* FORMAT 6 DSCB'S.
*
BEGIN    MVC   CCW5(8),CCW7            STORE CCW5
         LM    R0,R1,CCW2              PICK UP TIC CONSTANT
         LA    WORKREG,CCW2-CCW1
         AR    R0,WORKREG              RESOLVE ADDR IN CCW4
         STM   R0,R1,CCW4              STORE CCW4
         LA    WORKREG,CCW6-CCW2
         AR    R0,WORKREG              RESOLVE ADDR IN CCW7
         STM   R0,R1,CCW7              STORE CCW7
         MVC   CCW2(8),CCW12           SET UP CCW2
         MVI   CCW2,X'92'
         MVI   CCW2+4,X'60'            STORE CCW2
*                                       RETAIN CCW10
*                                       RETAIN CCW11
         MVC   CCW6(8),CCW1            STORE CCW6
         MVC   CCW9(8),CCW1            STORE CCW9
         MVC   CCW1(8),CCW8            STORE CCW1
         LM    R0,R3,CHALPROG          LOAD CCW CONSTANTS
         AR    R0,RWKAREA              RESOLVE ADDR IN CCW3
         AR    R2,RWKAREA              RESOLVE ADDR IN CCW8
         STM   R0,R1,CCW3              STORE CCW3
         STM   R2,R3,CCW8              STORE CCW8
         TM    DS4VTOCI,DOSBIT+DIRFBIT  TEST IF DOS AND/OR DIRF  Y02078
*                                      BIT IS SET IN THE F4 DSCB Y02078
         BNZ   LEAVE                   IF EITHER IS SET, DO NOT  Y02078
*                                      RETURN EXTENTS TO THE F5  Y02078
         SR    R0,R0                   ZERO REG
         LR    EXTCTR,R0               ZERO EXTENT COUNTER
         IC    EXTCTR,EXTNUM           PICK UP NUMBER OF ENTRIES
         LTR   EXTCTR,EXTCTR           TEST FOR NO ENTRIES
         BZ    LEAVE                   BR IF NONE               SA56400
*
* THIS SECTION SORTS THE DADSM TABLE ENTRIES INTO ASCENDING ORDER.
*
NEWPASS  LA    INDEX1,ENTRIES          POINT INDEX1 TO FIRST ENTRY
         LA    INDEX2,4(INDEX1)        POINT INDEX2 TO SECOND ENTRY
         LA    INDEX3,1                INITIALIZE COMPARE COUNTER
         BCT   EXTCTR,NEWPAIR          DECREMENT EXTENT COUNTER
         B     TESTCYLS                BRANCH WHEN NUM OF EXTS = 1
*
SHIFT    LR    INDEX1,INDEX2           POINT INDEX1 TO ITS NEXT ENTRY
         LA    INDEX2,4(INDEX2)        POINT INDEX2 TO ITS NEXT ENTRY
         CLR   INDEX3,EXTCTR           IS NUM COMPARES = NUM OF EXTS-1
         BE    NEWPASS                 BR IF YES
         LA    INDEX3,1(INDEX3)        INCREMENT COMPARE COUNTER
NEWPAIR  CLC   0(2,INDEX1),0(INDEX2)   COMPARE ON LOW RTA
         BNH   SHIFT                   BR IF PROPER ORDER
EXCHANGE MVC   FIELD1(4),0(INDEX1)     TEMP STORE THE INDEX1 ENTRY
         MVC   0(4,INDEX1),0(INDEX2)   MOVE INDEX2 ENTRY TO INDEX1
         MVC   0(4,INDEX2),FIELD1      MOVE INDEX1 ENTRY TO INDEX2
         B     SHIFT
*
* THIS SECTION INITIALIZES THE EXTENT POINTERS AND EXTENT COUNTERS FOR
* THE FORMAT 6 INPUT DSCB, FORMAT 6 OUTPUT DSCB, AND DADSMTBL ENTRIES.
*
TESTCYLS TM    DADSMTBL,X'08'          TEST FOR SHARED CYLINDERS
         BZ    FINISH
         IC    EXTCTR,EXTNUM           PICK UP NUMBER OF ENTRIES
         MVC   INDSCB+44(90),INDSCB+45 OVERLAY FORMAT BYTE
         MVI   INDSCB+134,X'00'                                   20344
         XC    OUTDSCB(140),OUTDSCB    ZERO OUTPUT DSCB
         LA    INDEX2,ENTRIES          POINT TO FIRST ENTRY IN TABLE
         LA    COUNT1,26               PICK UP NUMBER OF EXTENTS (IN)
         LA    INDEX1,INDSCB+4         POINT TO EXTENTS IN INPUT DSCB
         LR    COUNT3,COUNT1           PICK UP NUMBER OF EXTENTS (OUT)
         LA    INDEX3,OUTDSCB+5        POINT TO EXTENTS IN OUTPUT DSCB
         LR    INDEX4,INDEX2           POINT TO ENTRIES IN TABLE
         LR    COUNT4,R0               ZERO REG
         LR    RTA,R0                  ZERO REG
         MVC   OUTCCHHR(5),INCCHHR     PICK UP OUTPUT CCHHR
         MVC   NEXTDADS(5),INCCHHR     HOLD OUTPUT CCHHR
         MVC   INCCHHR(5),DS5PTRDS     PICK UP CONT POINTER
*
* THIS SECTION COMPARES THE DADSMTBL ENTRY TO A FORMAT 6 INPUT EXTENT.
*
COMPARE  CLI   2(INDEX2),X'FF'         CHECK EXTENT TYPE
         BNE   NOTSPLIT                BR IF NOT SPLIT CYL
         CLC   0(2,INDEX2),0(INDEX1)   CHECK RTA OF ENTRY WITH F6
         BL    PERMERR                 BR IF PAST RIGHT ONE
         BE    DECRMENT                 BRANCH IF EQUAL          A31333
         CLC   0(4,INDEX2),FAKEXT       IS THIS A DUMMY EXTENT?  A36312
         BE    MOVEEXT                  BRANCH IF YES            A36312
         BAL   RETURN,WITHINF6          CALCULATE RTA+1 OF F6    A36312
*                                       EXTENT                   A36312
         CH    R1,0(INDEX2)             TEST IF ENTRY LIES       A36312
*                                       WITHIN THE F6 EXTENT     A36312
         BNH   MOVEEXT                  BRANCH IF NO             A36312
*
* THIS SECTION DECREMENTS THE DATA SET COUNT BYTE IN THE F6 EXTENT.
*
DECRMENT EQU   *                                                 A31333
         SR    WORKREG,WORKREG         ZERO REG
         IC    WORKREG,4(INDEX1)       PICK UP Z (NUM OF DATA SETS)
         BCT   WORKREG,LOOKAHED         DECREMENT DATA SET CTR   A36312
*                                       BRANCH IF GREATER THAN 0 A36312
*
* THIS SECTION MOVES THE RTA/RTA+1 OF THE F6 EXTENT TO THE DADSMTBL.
*
         MVC   0(4,INDEX4),0(INDEX1)   MOVE XXYY TO DADSMTBL
         LH    RTA,2(INDEX4)           PICKUP NO. OF CYLS (YY)
         MH    RTA,DS4DEVSZ+2          MULT BY TKS PER CYL
         AH    RTA,0(INDEX4)           ADD BEGIN RTA
         STH   RTA,2(INDEX4)           STORE END RTA+1 IN DADSM TABLE
INCINDX  EQU   *
         LA    COUNT4,1(COUNT4)        INCREMENT ENTRY COUNTER
         LA    COUNT3,1(COUNT3)         INCREMENT OUTPUT COUNTER  20344
         LA    INDEX4,4(INDEX4)        INCREMENT ENTRY POINTER (NEW)
         BCT   EXTCTR,NXTENTRY         DECREMENT ENTRY COUNTER
         B     ENDENTRY
*
* THIS SECTION INCREMENTS THE DADSMTBL POINTERS AND COUNTER.
*
NOTSPLIT EQU   *
         MVC   0(4,INDEX4),0(INDEX2)    COMPACT DADSM TABLE.
         LA    COUNT4,1(COUNT4)         INCREMENT ENTRY COUNTER   20873
         LA    INDEX4,4(INDEX4)         INCREMENT ENTRY PTR(NEW)  20873
         LA    INDEX2,4(INDEX2)                                   20873
         BCT   EXTCTR,COMPARE                                     20873
         MVC   0(5,INDEX3),0(INDEX1)   MOVE XXYYZ TO OUT DSCB  @ZA07591
         B     ENDENTRY                                           20873
*
* THIS SECTION TESTS IF THE NEXT ENTRY LIES WITHIN THE SAME F6 EXTENT.
* IF NOT, IT MOVES THE XXYY OF THE F6 EXTENT AND THE NEW Z INTO THE
* OUTPUT F6 DSCB.
*
LOOKAHED EQU   *                                                 A36312
         CH    EXTCTR,ONEENTRY          IS THIS THE LAST ENTRY   A36312
         BE    MOVEXXYY                 BRANCH IF LAST ENTRY     A36312
         BAL   RETURN,WITHINF6          CALCULATE RTA+1 OF F6    A36312
*                                       EXTENT                   A36312
         CH    R1,4(INDEX2)             DOES NEXT ENTRY LIE      A36312
*                                       WITHIN SAME F6 EXTENT    A36312
         BH    SAVENEWZ                 BRANCH IF YES            A36312
MOVEXXYY EQU   *                                                 A36312
         MVC   0(4,INDEX3),0(INDEX1)    MOVE XXYY TO OUTPUT DSCB A36312
         STC   WORKREG,4(INDEX3)       STORE NEW Z IN OUTPUT DSCB
         BCT   EXTCTR,NXTENTRY         DECREMENT ENTRY COUNTER
*
ENDENTRY LA    INDEX2,FAKEXT           POINT TO PSEUDO ENTRY
         B     CHECKIN
*
NXTENTRY LA    INDEX2,4(INDEX2)        INCREMENT ENTRY POINTER (OLD)
         B     CHECKIN
*
SAVENEWZ EQU   *                                                 A36312
         STC   WORKREG,4(INDEX1)        STORE NEW DATA SET COUNT A36312
         BCTR  EXTCTR,0                 DECREMENT NO OF ENTRIES  A36312
         LA    INDEX2,4(INDEX2)         POINT TO NEXT ENTRY      A36312
         B     COMPARE                  GO COMPARE               A36312
*
* THIS SECTION CHECKS TO SEE IF THERE ARE ANY MORE EXTENTS IN THE F6
* INPUT DSCB. IF NOT, IT READS THE NEXT F6 IN THE CHAIN.
*
MOVEEXT  MVC   0(5,INDEX3),0(INDEX1)   MOVE XXYYZ TO OUTPUT DSCB
CHECKIN  EQU   *                                                 A36312
         BCT   COUNT1,MOREIN            DECREMENT INPUT EXTENT   A36312
*                                       COUNTER                  A36312
         TM    INCCHHR+4,X'FF'         TEST FOR CONT POINTER
         BZ    LASTEXT1                                           20344
         LA    WORKREG,INCCHHR         SET UP NEW CCW9
         ST    WORKREG,CCW9
         MVI   CCW9,X'31'              STORE CCW9
         LA    WORKREG,CCW9
         NI    CCW11+4,X'EF'           TURN OFF SKIP FLAG
         MVC   SEEK+3(5),INCCHHR       SET UP IOS SEEK
         BAL   RETURN,EXECUTIO         READ NEXT DSCB
         MVC   CCW9(4),CCW6            RESTORE CCW9
         MVC   NEXTDADS(5),INCCHHR     HOLD CCHHR
         MVC   INDSCB+44(90),INDSCB+45 OVERLAY FORMAT BYTE
         MVI   INDSCB+134,X'00'                                   20344
         LA    COUNT1,26               PICK UP NUMBER OF EXTENTS (IN)
         LA    INDEX1,INDSCB+4         POINT TO EXTENTS IN INPUT DSCB
         B     CHECKOUT
LASTEXT1 EQU   *                                                  20344
         CLC   OUTDSCB+5(4),ZERO        ANY EXTENTS               20344
         BE    LASTEXT3                 BRANCH IF NO EXTENTS     A36312
         LA    RETURN,ENDUPD2                                     20344
*
* THIS SECTION WRITES FORMAT 6 AND FORMAT 0 DSCBS.
*
WRTFMT6  EQU   *                                                  20344
         MVC   OUTDSCB(4),SIX           MOVE IN 06060606          20344
         MVC   OUTDSCB+4(40),OUTDSCB+5  SHIFT KEY PORTION         20344
         MVI   OUTDSCB+44,X'F6'         INSERT FMT6 ID            20344
WRTFMT62 EQU   *                                                  20344
         MVC   SEEK+3(5),OUTCCHHR       SET UP IOS SEEK           20344
         LA    WORKREG,CCW6             PICK UP START CCW,S       20344
         OI    CCW11+4,X'10'            TURN ON SKIP FLAG         20344
         B     EXECUTIO                 EXCP                      20344
*
* THIS SECTION TESTS IF THERE ARE ANY MORE EXTENTS IN THE OUTPUT DSCB.
* IF NOT, IT WRITES OUT THE OUTPUT FORMAT 6 DSCB.
*
MOREIN   EQU   *                                                 A36312
         LA    INDEX1,5(INDEX1)         INCREMENT INPUT EXTENT   A36312
*                                       POINTER                  A36312
CHECKOUT EQU   *                                                 A36312
         BCT   COUNT3,MOREOUT           DECREMENT EXTENT CTR     A36312
*                                       BRANCH IF MORE EXTENTS   A36312
*
* THIS SECTION TESTS IF THE FORMAT 6 POINTER IN THE FORMAT 4 DSCB
* NEEDS TO BE ZEROED.
*
LASTEXT2 CLC   OUTDSCB+5(4),ZERO       TEST FOR NO EXTENTS
         BNE   DADSOUT1                BR IF AN EXTENT
LASTEXT3 EQU   *                                                  20344
         CLC   OUTCCHHR,DS4F6PTR        TEST IF FIRST F6 DSCB    Y02080
         BNE   ENDUPDAT                                           20344
         XC    DS4F6PTR,DS4F6PTR        ZERO F6 PTR IN F4 DSCB   Y02080
         B     ENDUPDAT                                           20344
*
* THIS SECTION TESTS IF THE CHAINING POINTER OF THE FORMAT 6 DSCB
* NEEDS TO BE FILLED IN. IF THERE IS ONLY ONE ENTRY LEFT IN THE
* DADSMTBL, THIS LAST ENTRY IS A SPLIT CYLINDER ENTRY, THERE IS
* ONLY ONE EXTENT LEFT IN THE INPUT FORMAT 6 DSCB, ITS DATA SET
* COUNT IS ONE, AND THE RTA/RTA+1 OF THE ENTRY IS CONTAINED IN
* THE RTA/RTA+1 OF THE INPUT FORMAT 6 EXTENT, THEN THE CHAINING
* POINTER IN THE OUTPUT FORMAT 6 IS ZERO.
*
DADSOUT1 EQU   *                                                  20344
         TM    4(INDEX1),X'FF'          ANY ENTRIES LEFT          20344
         BZ    DADSOUT2                 BRANCH IF NOT            A36312
         LTR   EXTCTR,EXTCTR            ANY ENTRIES LEFT         A36312
         BZ    NEWF6                    BRANCH IF NOT            A36312
         TM    9(INDEX1),X'FF'          IS THERE A SECOND EXTENT A36312
*                                       IN THE INPUT AREA        A36312
         BC    7,NEWF6                  BRANCH IF YES            A36312
         CLI   4(INDEX1),ONE            IS THE DATA SET COUNT 1  A36312
         BNE   NEWF6                    BRANCH IF NOT            A36312
         CLI   2(INDEX2),X'FF'          IS IT A SPLIT CYLINDER   A36312
*                                       ENTRY?                   A36312
         BNE   NEWF6                    BRANCH IF NOT            A36312
         CLC   0(2,INDEX2),0(INDEX1)    COMPARE RTA TO F6 EXTENT A36312
         BE    WRITEF6                  BRANCH WITHOUT PLACING   A36312
*                                       CHAINING PTR IN DSCB     A36312
         BAL   RETURN,WITHINF6          CALCULATE RTA+1 OF F6    A36312
*                                       EXTENT                   A36312
         CH    R1,0(INDEX2)             TEST IF ENTRY LIES       A36312
*                                       WITHIN THE F6 EXTENT     A36312
         BH    WRITEF6                  BRANCH IF YES WITHOUT    A36312
*                                       PLACING CHAINING PTR     A36312
NEWF6    EQU   *                                                 A36312
         MVC   OUTDSCB+135(5),NEXTDADS  MOVE IN CHAIN POINTER    A36312
WRITEF6  EQU   *                                                 A36312
         BAL   RETURN,WRTFMT6           WRITE FORMAT 6           A36312
         MVC   OUTCCHHR(5),INCCHHR      UPDATE POINTERS          A36312
         MVC   INCCHHR(5),DS5PTRDS                                20344
         XC    OUTDSCB(140),OUTDSCB     ZERO OUTPUT AREA          20344
         LA    COUNT3,26                NO. OF OUTPUT EXTENDS     20344
         LA    INDEX3,OUTDSCB+5         POINT TO OUTPUT EXTEND    20344
         B     COMPARE                                            20344
*
* THIS SECTION TESTS IF ANY EXTENT HAS BEEN MOVED TO THE OUTPUT DSCB.
*
MOREOUT  EQU   *                                                 A36312
         LTR   RTA,RTA                  ANY MOVE TO OUTPUT DSCB? A36312
         BZ    NEXTEXT                 BR IF YES
         SR    RTA,RTA                 ZERO REG
         B     COMPARE
*
NEXTEXT  LA    INDEX3,5(INDEX3)        INCREMENT OUTPUT EXTENT POINTER
         B     COMPARE
*
* THIS SECTION WRITES OUT THE LAST FORMAT 6 DSCB.
*
DADSOUT2 EQU   *                                                  20344
         BAL   RETURN,WRTFMT6           WRITE FMT 6               20344
         MVC   OUTCCHHR(5),INCCHHR      UPDATE PTR                20344
ENDUPDAT EQU   *                                                  20344
         LH    WORKREG,HOLENUM          LOAD NO OF HOLES          20344
         LA    WORKREG,1(WORKREG)       ADD 1                     20344
         STH   WORKREG,HOLENUM          RESTORE                   20344
         XC    OUTDSCB(140),OUTDSCB     ZERO OUTPUT AREA          20344
         BAL   RETURN,WRTFMT62          WRITE FMT 0               20344
ENDUPD2  EQU   *                                                  20344
         STC   COUNT4,EXTNUM            STORE NO. OF ENTRIES      20344
         MVC   INCCHHR(5),DADSMADR      INSERT FMT 5 CCHHR.
         LA    WORKREG,INCCHHR         SET UP NEW CCW9
         ST    WORKREG,CCW9
         MVI   CCW9,X'31'              STORE CCW9
         LA    WORKREG,CCW9
         NI    CCW11+4,X'EF'           TURN OFF SKIP FLAG
         MVC   SEEK+3(5),INCCHHR       SET UP IOS SEEK
         BAL   RETURN,EXECUTIO         READ FIRST F5 DSCB
         MVC   CCW9(4),CCW6            RESTORE CCW9
FINISH   EQU   *
         SR    COUNT4,COUNT4           ZERO ENTRIES COUNTER     SA56400
         IC    COUNT4,EXTNUM           SET ENTRIES COUNTER TO   SA56400
*                                      THE NUMBER OF ENTRIES IN SA56400
*                                      DADSMTBL                 SA56400
         LTR   COUNT4,COUNT4           CHECK NUMBER OF ENTRIES  SA56400
         BZ    LEAVE                   NO ENTRIES EXIT          SA56400
         MVC   OUTCCHHR(K5),DADSMADR   OUTCCHHR = 1ST FORMAT    SA56400
*                                      5 DSCB                   SA56400
         MVC   INCCHHR(K5),DS5PTRDS    SET NEXT FORMAT 5 CCHHR  SA56400
*                                      FOR NEXT DADSM INPUT     SA56400
         MVC   NEXTDADS(K5),INCCHHR    INIT NEXT DADSM PTR      SA56400
         LA    R2,LOAD4                 POINT TO PROPER ID.
         B     XCTLEXIT
*
* THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
EXECUTIO ST    WORKREG,IOB+16          SET UP CCW PTR IN IOB
         MVI   ECB,0                    CLEAR ECB FLAGS.
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,X'20'               TEST FOR PERMANENT I/O ERROR
         BCR   5,RETURN                 RETURN IF NO I/O ERROR.
*
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
PERMERR  MVI   11(VOLISTX),X'04'       STORE ERROR CODE IN VOL LIST
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         DROP  R1                                                Y02078
         LA    WORKREG,8
         STH   WORKREG,ERCODE          STORE ERROR CODE IN WORK AREA
*
* THIS SECTION BRANCHES TO IGG0290C OR IGG0290D.
*
LEAVE    EQU   *
         LA    R2,LOAD5                 POINT TO PROPER ID.
XCTLEXIT EQU   *
         IECRES LOAD,EXTPR=(RWKAREA),MODID=(R2),BRANCH=DIRECT    Y02080
*
* THIS ROUTINE CALCULATES THE RTA+1 OF THE FORMAT 6 EXTENT.
*
WITHINF6 EQU   *                                                 A36312
         MVC   FIELD1(2),2(INDEX1)      GET NO. OF SHARED CYLS   A36312
         LH    R1,FIELD1                                         A36312
         MH    R1,DS4DEVSZ+2            FIND NO. OF SHARED TRKS  A36312
         MVC   FIELD1(2),0(INDEX1)      GET BEGINNING TRACK ADDR A36312
         AH    R1,FIELD1                R1 CONTAINS RTA+1        A36312
         BR    RETURN                   RETURN                   A36312
*
*** PROGRAM CONSTANTS
*
FAKEXT   DC    X'FFFFFFFF'
SIX      DC    X'06060606'
ONEENTRY DC    H'1'                     VALUE ONE                A36312
*
*** THE FOLLOWING CHANNEL PROGRAM SEARCHES FOR A FORMAT 0 DSCB RECORD
*** AND WRITES OR READS A DADSM DSCB.
*
CHALPROG DS    0F
*CCW1                                   TO BE CONSTRUCTED
*                                       READ HOME ADDRESS
*CCW2                                   TO BE CONSTRUCTED
*                                       READ COUNT (INTO OUTDSCB+136)
*CCW3
         DC    X'29'                   SEARCH EQUAL KEY (FMT 0 DSCB)
         DC    AL3(4+CCW4-FIRST)
         DC    X'6000'
         DC    H'4'
*CCW4                                   TO BE CONSTRUCTED
*                                       TIC TO CCW2
*CCW5                                   TO BE CONSTRUCTED
*                                       CONTROL SEEK
*CCW6                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID (OUTCCHHR)
*CCW7                                   TO BE CONSTRUCTED
*                                       TIC TO CCW6
*CCW8
         DC    X'0D'                   WRITE KEY AND DATA (OUTDSCB)
         DC    AL3(0+OUTDSCB-FIRST)
         DC    X'4000'
         DC    H'140'
*CCW9                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL ID (OUTCCHHR)
*CCW10                                  TO BE CONSTRUCTED
*                                       TIC TO CCW9
*CCW11                                  TO BE CONSTRUCTED
*                                       READ KEY DATA (INDSCB)
*
*** TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LOAD4,0C,LOAD5,0D),SVC=029,LENGTH=,BRT=YES Y02080
         SPACE 2                                                 Y02078
         IECDSECS CVT,RB,TCB,EXPAND=YES  CVT, RB, AND TCB DSECTS Y02078
WORKAREA IECSCRWA EP,F4,D1=(5)          SCRATCH WORK AREA        Y02080
ZERO     EQU   CCW4+4
         END   IGG0290B                                          A36312
