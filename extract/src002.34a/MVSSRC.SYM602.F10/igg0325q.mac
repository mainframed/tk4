 TITLE 'IGG0325Q - SPLIT CYLINDER DATA SET PROCESSING'           Y02080
IGG0325Q CSECT
*
* MODULE NAME = IGG0325Q
*
* DESCRIPTIVE NAME = SPLIT CYLINDER DATA SET PROCESSING
*
* COPYRIGHT = NONE
*
* CHANGE ACTIVITY = SEE BELOW
*                                                                     *
*          RELEASE 19 DELETIONS                                       *
*          RELEASE 20 DELETIONS                                       *
*1026062000,108000,630000,658000-660000                          A31534
*1026012000-022000,028000-032000,036000-044000,060000,084000,    A31333
*1026092000,142000,216000,224000,242000-246000,250000-282000,    A31333
*1026286000-548000,568000-594000,604000,648000-652000,654000-    A31333
*1026656000,668000                                               A31333
*          RELEASE 21 DELETIONS                                       *
*1191011000-017000,618000,622000-624000,638000,678000,682000-    M0124
*1191700000,704000-726000,730000,736000-782000,786000-790000,    M0124
*1191802000,808000,812000-816000,830000                          M0124
*1191062000,186000,658000                                        S21040
*          RELEASE 22 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000300-002000,004500-004900,054000,058800-059600,062200,    Y02080
*0000066000,070000,122000-124000,128000,132000,138000,144000,    Y02080
*0000146000,152000-154000,158000-162000,166000-184000,192000,    Y02080
*0000222300,224400,232000-234000,239000-239200,251600,264400,    Y02080
*0000266400,267600-268000,270000,270800,276800-277200,354000,    Y02080
*0000384000-404000,434000,474000-494000,556000-562000,600000,    Y02080
*0000626000-636800,640000-646000,648400,649000-668000,672000-    Y02080
*0000702000,730000-846000,850000,856000-858000,862000-986000     Y02080
*0000028000-032000,034400-045600,060400-061200,064400-065600,    Y02078
*0000096000,214000,218000-222000                                 Y02078
*                                                                     *
*STATUS CHANGE LEVEL 003
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* FUNCTION/OPERATION  IGG0325Q READS EACH DSCB IN THE VTOC AND CHECKS *
*   FOR SPLIT CYLINDER DATA SETS. IF IT FINDS A SPLIT CYLINDER DATA   *
*   SET, IT BUILDS THE FIRST EXTENT IN THE FIRST FORMAT 6 DSCB. IF    *
*   THE FIRST EXTENT IS ALREADY BUILT, IT XCTL'S TO IGG0325U TO BUILD *
*   MORE FORMAT 6 ENTRIES OR TO UPDATE THE COUNT BYTE OF AN EXISTING  *
*   FORMAT 6 ENTRY. WHEN ALL SPLIT CYLINDER DATA SET EXTENTS HAVE     *
*   BEEN READ AND PROCESSED, IT XCTL'S TO IGG0325W.                   *
*                                                                     *
* ENTRY POINTS                                                        *
*        IGG0325Q - FROM IGG0325P IF SPLIT CYLINDER DATA SETS ARE     *
*                                 FOUND DURING THE BUILDING OF        *
*                                 THE FORMAT 5 DSCB'S                 *
*                                                                     *
*                   FROM IGG0325U AFTER A FORMAT 6 ENTRY IS BUILT     *
*                                 OR A DATA SET COUNT INCREMENTED     *
*                                                                     *
* INPUT  FROM IGG0325P                                                *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB WITH A VALID      *
*              HIGH WATER MARK.  'FMTOUTAD' CONTAINS THE CCHHR OF     *
*              THE FIRST FORMAT 5 DSCB.                               *
*                                                                     *
*        FROM IGG0325U                                                *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1 OR  *
*              FORMAT 3 CURRENTLY BEING PROCESSED IN 'DSCBF1', AND    *
*              THE FIRST FORMAT 6 DSCB IN 'DSCBF5'. 'COUNT' CONTAINS  *
*              THE CCHHR OF THE NEXT DSCB TO BE READ. REGISTER 1 WILL *
*              BE ZERO TO INDICATE REENTRY FROM IGG0325U.             *
*                                                                     *
* OUTPUT TO IGG0325U                                                  *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1     *
*              OR 3 DSCB CURRENTLY BEING PROCESSED, AND THE FIRST     *
*              FORMAT 6 DSCB IN 'DSCBF5'.  'CCHHRSAV' CONTAINS THE    *
*              CCHHR OF THE FORMAT 1 OR 3 DSCB BEING PROCESSED.       *
*              REGISTER 6 WILL POINT TO THE RTA/RTA+1 OF THE DATA     *
*              SET AND REGISTER 8 WILL POINT TO THE  FIRST F6 EXTENT. *
*                                                                     *
*        TO IGG0325W                                                  *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB AND THE FIRST     *
*              FORMAT 6 DSCB IN 'DSCBF5'.  'FMTOUTAD' CONTAINS THE    *
*              CCHHR OF THE FIRST FORMAT 5 DSCB.                      *
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*        EXCP(0)                                                      *
*        WAIT(1)                                                      *
*                                                                     *
*                                                                     *
* EXITS NORMAL BRANCH TO IGG0325U TO BUILD MORE F6 ENTRIES            *
*              BRANCH TO IGG0325W TO SUBTRACT THE F6 EXTENTS          *
*                               FROM THE F5 FREE SPACE AND TO         *
*                               CONVERT THE F6 TO FINAL FORM          *
*       ERROR  BRANCH TO IGG0325T                                     *
*                                                                     *
*       ERROR CODES ISSUED BY THIS MODULE -                           *
*                                                                     *
*       0C - PERMANENT I/O ERROR                                      *
*                                                                     *
* TABLES/WORKAREAS  DADSM ALLOCATE WORK AREA                          *
*                                                                     *
* ATTRIBUTES  REENTRANT                                               *
*                                                                     *
*                                                                     *
REGZERO  EQU   0                       WORK REGISTER
REENTRY  EQU   1                        REENTRY FROM IGG0325U    A31333
REGONE   EQU   1                       WORK REGISTER
REGTWO   EQU   2                       WORK REGISTER
REGTHREE EQU   3                       WORK REGISTER
FORMATCT EQU   4                        MAX NO EXTENTS IN DSCB   A31333
EXTPTR   EQU   5                        PTR TO EXTENT BEING      A31333
*                                       CONVERTED                A31333
RTAPTR   EQU   6                        PTR TO CONVERTED EXTENT  A31333
NEXTPTR  EQU   6                        PTR TO NEXT EXTENT       A31333
REGSIX   EQU   6                       WORK REGISTER
F6EXTCTR EQU   7                       CTR OF NO. EXTENTS IN F6
REGEIGHT EQU   8                       WORK REGISTER
F6PTR    EQU   8                        ADDR OF EXTENT IN F6     A31333
RERRPASS EQU   8                        ERROR CODE REGISTER      A31534
RTNREG2  EQU   9                       BRANCH REGISTER
LSTF6CTR EQU   10                       NO. EXTENTS IN LAST F6   A31333
BASEREG  EQU   12                      BASE REGISTER
REGTHIRT EQU   13                      WORK REGISTER
RWKAREA  EQU   13                      WORK AREA BASE REGISTER
RETRNREG EQU   14                      BRANCH REGISTER
RCVT     EQU   15                      CVT BASE REGISTER
*
* OTHER EQUATES
*
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
K4       EQU   4                        CONSTANT OF 4            Y02080
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
EIGHT    EQU   8                        VALUE EIGHT
TEN      EQU   10                       VALUE TEN                A31333
K12      EQU   12                       VALUE TWELVE             Y02080
FOURTEEN EQU   14                       VALUE FOURTEEN           A31333
SIXTEEN  EQU   16                       VALUE SIXTEEN
F1ID     EQU   X'F1'                    F1 DSCB INDICATOR
SPEXT    EQU   X'80'                    SPLIT CYL EXTENT INDICATOR
F3ID     EQU   X'F3'                    F3 DSCB INDICATOR
F6INDIC  EQU   X'06'                    F6 DSCB INDICATOR        A31333
GOODIO   EQU   X'20'                    TEST VALUE FOR SUCCESSFUL I/O
ERRCD    EQU   X'0C'                    ERROR CODE FOR UNSUCCESSFUL I/O
C140     EQU   140
NOCC     EQU   X'00'                    NO COMMAND CHAINING      Y02080
CC       EQU   X'40'                    COMMAND CHAINING BIT     Y02080
SLI      EQU   X'20'                    SUPPRESS INCORRECT LNGTH Y02080
SKIP     EQU   X'10'                    SUPPRESS DATA TRANSFER   Y02080
READCOMD EQU   X'0E'                    READ COMMAND CODE
*
         BALR  BASEREG,ZERO             INIT BASE REGISTER
         USING *,BASEREG
         USING ALLOCWKA,RWKAREA         BASE FOR WORK AREA       Y02080
         USING CVT,RCVT                 BASE FOR CVT
*
         LTR   REENTRY,REENTRY          IS THIS REENTRY          A31333
         BE    TESTNEXT                 BRANCH IF YES            A31333
*
* FIND THE FIRST HOLE IN THE VTOC AND INITIALIZE THE F6 POINTER
* IN THE FORMAT 4 DSCB.
*
BUILDF6  MVC   SEEKCYL(FIVE),VTOCADR    MOVE ADDR VTOC TO CHANNEL
*                                       PROGRAM                       *
         BAL   RTNREG2,FINDHOLE         FIND FIRST HOLE IN VTOC
         MVC   DADSMADR(FIVE),COUNT     INT.ADDR. OF PRESENT F6
         MVC   DS4F6PTR(FIVE),COUNT     SAVE FIRST F6 PTR IN F4
         MVC   SEEKCYL(FIVE),COUNT      MOVE ADDR FIRST F6 TO CHANNEL
*                                       PROGRAM                       *
         BAL   RTNREG2,FINDHOLE         FIND NEXT HOLE IN VTOC
         MVC   FMTINAD(FIVE),COUNT      SAVE ADDR OF NEXT HOLE
         MVC   COUNT,FMTOUTAD           INITIALIZE COUNT FIELD   Y02078
         SR    LSTF6CTR,LSTF6CTR        INIT CTR OF EXTENTS      A31333
         NI    ASWITCH,X'FF'-EOVSW      TURN EOV SWITCH OFF      Y02080
*
* READ THE NEXT DSCB IN THE VTOC IF ALL THE EXTENTS IN THE
* PREVIOUS FORMAT 1 OR 3 DSCB HAVE BEEN TESTED FOR SPLIT
* CYLINDER DATA SETS.
*
READNEXT EQU   *                                                 A31333
         TM    ASWITCH,EOVSW            IS EOV SWITCH ON         Y02080
         BO    XCTL325W                 BRANCH IF YES            A31333
         LA    REGONE,DSCBF1                                     A31333
         ST    REGONE,CCW6              PUT ADDR. OF F1 AREA INTO
*                                       CHANNEL PROGRAM READ          *
         MVI   CCW6,READCOMD            PUT READ COMMAND IN CCW6
         MVI   CCW6+K4,CC               CHAIN READ TO READ COUNT Y02080
         MVI   CCW7+K4,SLI              UNCHAIN RD CNT FROM SKE  Y02080
         MVC   SEEKCYL(FIVE),COUNT      MOVE ADDR. NEXT DSCB TO
*                                       CHANNEL PROGRAM               *
         CLC   SEEKCYL(FOUR),DS4VTOC6   LAST TRACK IN VTOC       A31333
         BNE   NOTLAST                  BRANCH IF NOT            A31333
         CLC   SEEKREC(ONE),DS4DEVDT    LAST RECORD ON TRACK     A31333
         BNE   NOTLAST                  BRANCH IF NOT            A31333
         OI    ASWITCH,EOVSW            TURN ON EOV SWITCH       Y02080
         MVI   CCW6+K4,NOCC             BREAK READ COUNT FROM    Y02080
*                                       CHAIN
NOTLAST  EQU   *                                                 A31333
         LA    REGONE,CCW4                                       Y02078
         ST    REGONE,CHNPGADR          CHANNEL PROGRAM ADDRESS  Y02078
         BAL   RETRNREG,EXCHANPG        READ NEXT DSCB IN VTOC
*
* IF THIS IS A FORMAT 1 OR 3 DSCB, TEST THE EXTENTS FOR SPLIT
* CYLINDER DATA SETS.
*
TESTF1   EQU   *                                                 A31333
         CLI   DS1FMTID,F1ID            IS THIS A FORMAT 1 DSCB
         BNE   TESTF3                   BRANCH IF NO             A31333
         LA    FORMATCT,FOUR            INITIALIZE FOR 4 EXTENTS A31333
         LA    EXTPTR,DS1EXT1           POINT TO FIRST F1 EXTENT A31333
         B     SAVEPTR                  GO SAVE THIS POINTER     A31333
TESTF3   EQU   *                                                 A31333
         CLI   DS1FMTID,F3ID            TEST IF FORMAT 3 DSCB    A31333
         BNE   READNEXT                 BRANCH IF NOT            A31333
         LA    FORMATCT,FOURTEEN        INITIALIZE FOR 14 XTENTS A31333
         LA    EXTPTR,DS3EXTNT          POINT TO FIRST F3 EXTENT Y02080
SAVEPTR  EQU   *                                                 A31333
         ST    EXTPTR,NEXTEXTN          SAVE EXTENT POINTER      A31333
*
* TEST IF THE NEXT EXTENT IS A SPLIT CYLINDER DATA SET
*
TESTNEXT EQU   *                                                 A31333
         LTR   FORMATCT,FORMATCT        WERE ALL EXTENTS TESTED  A31333
         BE    READNEXT                 BRANCH IF YES            A31333
         L     NEXTPTR,NEXTEXTN         GET PTR TO NEXT EXTENT   A31333
         BCTR  FORMATCT,ZERO            DECREMENT NO OF EXTENTS  A31333
         CH    FORMATCT,EXTSIX          WAS PREVIOUS EXTENT NO 6 A31333
         BNE   TESTZERO                 BRANCH IF NOT            A31333
         LA    NEXTPTR,ONE(NEXTPTR)     INCREMENT PAST F3 ID     A31333
TESTZERO EQU   *                                                 A31333
         LR    EXTPTR,NEXTPTR                                    A31333
         CLI   ZERO(EXTPTR),ZERO        IS NEW EXTENT UNUSED     A31333
         BE    READNEXT                 GO READ NEXT EXTENT      A31333
INCRMENT EQU   *                                                 A31333
         LA    NEXTPTR,TEN(NEXTPTR)     POINT TO NEXT EXTENT     A31333
         ST    NEXTPTR,NEXTEXTN         SAVE PTR TO NEXT EXTENT  A31333
         CLI   ZERO(EXTPTR),SPEXT       TEST IF SPLIT CYLINDER   A31333
*                                       DATA SET
         BNE   TESTNEXT                 BRANCH IF NOT            A31333
         MVC   FOUR(TWO,EXTPTR),ZEROS   MOVE MIN TRACK IN EXTENT A31333
         MVC   EIGHT(TWO,EXTPTR),MAXTRK MOVE MAX TRACK IN EXTENT A31333
*
* CONVERT THE EXTENT FROM CCHH/CCHH TO RTA/RTA+1 USING THE
* RESIDENT CONVERSION ROUTINE.
*
CONVERT  EQU   *                                                 A31333
         LA    REGTHREE,TWO             SET LOOP CONTROL         A31333
         LA    RTAPTR,PDLIST5           POINT TO OUTPUT AREA     Y02080
         AR    EXTPTR,REGTHREE          GET PTR TO FIRST CCHH    A31333
         LA    REGTWO,CCW12             GET PTR TO MBBCCHHR      A31333
*                                       INPUT                    A31333
         LA    REGONE,DEB               GET PTR TO DEB           A31333
ROUTINE  EQU   *                        BRANCH LABEL             Y02080
         STM   REGEIGHT,REGTHIRT,IECREGSV+K12  SAVE REGISTERS    Y02080
         LR    REGEIGHT,REGTHIRT                                 A31333
         DROP  REGTHIRT                                          A31333
         USING ALLOCWKA,REGEIGHT        WORK AREA ADDRESSABILITY Y02080
         MVC   CCW12+THREE(FOUR),ZERO(EXTPTR)  MOVE IN CCHH      Y02080
         L     RCVT,CVTPTR              LOAD CVT BASE            A31333
         L     RCVT,CVTPRLTV            LOAD TTR CONVERT RTN     A31333
*                                       BASE                     A31333
         BALR  RETRNREG,RCVT            CONVERT EXTENT           A31333
         LM    REGEIGHT,REGTHIRT,IECREGSV+K12  RESTORE REGISTERS Y02080
         DROP  REGEIGHT                                          A31333
         USING ALLOCWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         SRA   REGTHREE,ONE             DECREMENT LOOP CONTROL   A31333
         SRL   REGZERO,SIXTEEN          POSITION RTA FOR STORING A31333
         LTR   REGTHREE,REGTHREE        HAS UPPER CCHH BEEN      A31333
*                                       CONVERTED                A31333
         BNE   CONT                     BRANCH IF NO             A31333
         LA    REGEIGHT,ONE                                      A31333
         AR    REGZERO,REGEIGHT         ADD 1 TO UPPER RTA       A31333
CONT     EQU   *                                                 A31333
         STH   REGZERO,ZERO(RTAPTR)     STORE RTA OR RTA+1       A31333
         LA    RTAPTR,TWO(RTAPTR)       UPDATE PTR TO NEXT SPACE A31333
         LA    EXTPTR,FOUR(EXTPTR)      UPDATE PTR TO EXTENT TO  A31333
*                                       BE CONVERTED
         LTR   REGTHREE,REGTHREE        HAS RTA+1 BEEN STORED    A31333
         BNE   ROUTINE                  BRANCH IF NO             A31333
         LA    RTAPTR,PDLIST5           POINT TO RTA/RTA+1       Y02080
         LA    F6PTR,DS6AVEXT           POINT TO FIRST F6 EXTENT Y02080
         LTR   LSTF6CTR,LSTF6CTR        IS THIS THE FIRST SPLIT  A31333
*                                       CYLINDER DATA SET
         BNE   XCTL325U                 BRANCH IF NO             A31333
         XC    DSCBF5(C140),DSCBF5      CLEAR F5 AREA
         MVC   ZERO(FOUR,F6PTR),ZERO(RTAPTR) MOVE RTA/RTA+1      A31333
         LA    REGTWO,ONE                                        A31333
         STC   REGTWO,FOUR(F6PTR)       DATA SET COUNT SET TO 1  A31333
         LA    LSTF6CTR,ONE             INIT CTR OF EXTENTS      A31333
         B     TESTNEXT                 GO TO TEST NEXT EXTENT   A31333
*
* BRANCH TO IGG0325U TO ADD MORE F6 EXTENTS
*
XCTL325U EQU   *                                                 A31333
         MVC   CCHHRSAV,SEEKCYL         SAVE CCHHR OF F1 OR F3   Y02078
*                                       DSCB BEING PROCESSED     Y02078
         LA    REGTWO,NEXTLOAD          POINT TO ID OF IGG0325U  Y02080
         B     XCTLHERE                 GO XCTL                  A31333
*
* BRANCH TO IGG0325W TO SUBTRACT THE F6 EXTENTS FROM THE F5.
*
XCTL325W EQU   *                                                 A31333
         BAL   RTNREG2,WRITEF6          WRITE OUT THE F6         A31333
         LA    REGTWO,F6LOAD            POINT TO ID OF IGG0325W  Y02080
         B     XCTLHERE                 GO XCTL                  A31333
*
* FIND THE ADDRESS OF THE NEXT F0 DSCB.
*
FINDHOLE LA    REGONE,CCW4              GET ADDR. CHANNEL PROGRAM TO
*                                       BE EXECUTED                   *
         ST    REGONE,CHNPGADR          STORE IN IOB
         MVI   CCW6+K4,CC+SKIP          SET SKIP BIT IN READ     Y02080
         MVI   CCW7+K4,CC+SLI           CHAIN READ COUNT TO      Y02080
*                                       SEARCH KEY EQUAL         Y02080
         MVI   CCW8+K4,CC+SLI           SET SLI BIT IN SKE       Y02080
         BAL   RETRNREG,EXCHANPG        FINDHOLE
         BR    RTNREG2                  RETURN
*
* WRITE A FORMAT 6 DSCB.
*
WRITEF6  LA    REGONE,CCW1
         ST    REGONE,CHNPGADR          GET ADDR. WRITE CHANNEL PROGRAM
         MVI   CCW3+K4,NOCC             UNCHAIN WRITE FROM SID   Y02080
         MVC   SEEKCYL(FIVE),DADSMADR
         MVI   DSCBF5,F6INDIC           PUT F6 INDICATOR IN      A31333
*                                       RECORD                   A31333
         BAL   RETRNREG,EXCHANPG        WRITE F6
         BR    RTNREG2                  RETURN
*
* THIS ROUTINE EXECUTES THE CHANNEL PROGRAM THAT HAS BEEN SET UP
* BY ANOTHER ROUTINE.
*
EXCHANPG MVI   ECB,ZERO
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,GOODIO               WAS I/O SUCCESSFUL
         BCR   1,RETRNREG               RETURN IF I/O SUCESSFUL  M0124
         LA    RERRPASS,ERRCD           SET ERROR RETURN CODE
ERREXIT  EQU   *                        BRANCH LABEL             Y02080
         LA    REGTWO,ERRLOAD           POINT TO ID OF IGG0325T  Y02080
XCTLHERE EQU   *                        BRANCH LABEL             Y02080
        IECRES LOAD,EXTPR=(RWKAREA),MODID=(REGTWO),BRANCH=DIRECT Y02080
*
* CONSTANTS
*
         DS    0H                       HALF WORD BOUNDARY       A31333
EXTSIX   DC    X'0009'                  TEST FOR EXTENT 6        A31333
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(NEXTLOAD,5U,F6LOAD,5W,ERRLOAD,5T),SVC=032, Y02080X
               LENGTH=,BRT=YES                                   Y02080
         EJECT                                                   Y02080
CVT      DSECT
         CVT                                                     Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1,3),D2=(6)  ALLOCATE WORK AREA      Y02080
DS4VTOC6 EQU   DS4VTOCE+6
CHNPGADR EQU   IOB+16                   ADDR. CHANNEL PROGRAM IN IOB
SEEKCYL  EQU   SEEK+3
SEEKREC  EQU   SEEK+7
ZEROS    EQU   CCW2+4                   FULL WORD OF ZERO
         END
