 TITLE 'IGG0553E - EXTEND - DADSM UPDATE LOAD 2'
IGG0553E CSECT
*
*MODULE NAME = IGG0553E
*
*DESCRIPTIVE NAME = EXTEND - DADSM UPDATE LOAD 2
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          VS1 RELEASE 01 DELETIONS/CHANGES
*0000                                                            YM0924
*          VS1 RELEASE 02 DELETIONS/CHANGES
*0000001785,031000                                               X02989
*3478                                                             MCS
*3478029400-030000                                                25999
*          RELEASE 19 DELETIONS
*2580014400-014600,020000,020400-021800,022400,024000-024200,    O19117
*2580040216-040400                                               O19117
*2580038600                                                      A30538
*2580035600,038400                                               A29269
*          RELEASE 20 DELETIONS
*0930026100-026300,026800                                        A35385
*0930                                                            M3294
*0930000260-000320                                               S20201
*          RELEASE 21 DELETIONS
*1193000230,000600-006200,009800,010200,010800-011000,011600,    M0130
*1193012200,012400,013000-013200,014000,015000-015200,015600,    M0130
*1193018800-019000,024800-025200,026800,027600,028020-028300,    M0130
*1193028800,032000,032400-032600,033850-033900,035260,035507-    M0130
*1193035521,036400,038300-039200,040200,040580,041000,041800,    M0130
*1193045800,047400-049400,051000,051200-053150                   M0130
*1193005400,012350,028200,034200,038400-039000                   S21040
*0000027830-027860,040408-040560                                 M2281
*0000026040,026200,026280                                        A51505
*          RELEASE 21.7 DELETIONS
*0000026760,034880-034920,035528-035591,038600,041000-041760    SA53147
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000261,000409,001398-001441,001914-002000,002086,002774-    Y02080
*0000003330,003805,004065-004130,004455,004940-005471,005690,    Y02080
*0000005743,006195-006730,007600-007800,009200,011200-012000,    Y02080
*0000012280,012320-012348,012352-012360,012420,012460-012500,    Y02080
*0000013800-014000,014214,014260-014410,014500,014600,014620-    Y02080
*0000014650,015800,018800-019000,019400-020200,020500-020700,    Y02080
*0000021000-021100,022200-024000,025000,025630-025730,025750,    Y02080
*0000026000-026240,026680,026840,027000-027800,028120,028240,    Y02080
*0000028800,029600,030200-030920,030984,032000,032300-036000,    Y02080
*0000038700-039380,039384-039800,040208,040348,040408,040456,    Y02080
*0000040528,040576-040588,040800,041000-041760,042200-042400,    Y02080
*0000045800-046000,046400-047200,050400-053020,053400-053600     Y02080
*0000000030-000150,004721,005592,026200,026320                   Y02078
*0000                                                            Y02072
*0000                                                            Y02144
*0000026750                                                      YM1089
*0000012240-012250,026730-026760,040264                          YM3048
*0000006575-006706,015800,051400                                 XM2969
*0000029700,032000                                               YM3047
*0000025900,025940                                               YM3995
*0000026700,026810-026812,030620                                 YM3997
*
*STATUS CHANGE LEVEL 009
*                                                                     *
*FUNCTION/OPERATION:                                                  *
*   THIS MODULE WRITES THE UPDATED FORMAT 4 DSCB IF NECESSARY. IT     *
*   ALSO TESTS AN INDICATOR IN THE I/O SUPPORT WORK AREA TO DETERMINE *
*   IF A FORMAT 0 DSCB MUST BE WRITTEN OVER A FORMER FORMAT 5 DSCB.   *
*   IT THEN DEQ'S THE VTOC, FREES THE CORE GOTTEN FOR THE EXTEND WORK *
*   AREA, AND RETURNS TO THE CALLER.                                  *
*   IF AN I/O ERROR HAS OCCURRED IN AN EXTEND MODULE OR DURING VTOC   *
*   CONVERSION, THIS MODULE ISSUES MESSAGE IEC603I WITH CODE=0.       *
*                                                                     *
*ENTRY POINT:                                                         *
*   IGG0553E - ENTRY IS MADE UNDER NORMAL CONDITIONS FROM IGG0553D.   *
*   ENTRY IS ALSO MADE FROM ALL LOADS OF EXTEND WHEN AN ERROR OCCURS. *
*                                                                     *
*INPUT:                                                               *
*   REGISTER 4 POINTS TO THE I/O SUPPORT WORK AREA.                   *
*   REGISTER 11 POINTS TO THE EXTEND WORD AREA.                       *
*   REGISTER 13 IS NON-ZERO IF AN ERROR HAS OCCURRED.                 *
*   THE I/O SUPPORT WORK AREA IS LAID OUT AS FOLLOWS:                 *
*                                                                     *
*          BYTES          AREA                                        *
*         *******        ******                                       *
*          100            DSCB FIELD                                  *
*          176            JFCB                                        *
*            4            ECB                                         *
*           40            IOB                                         *
*           44            DEB                                         *
*            4            DCB                                         *
*           96            CCW'S                                       *
*                                                                     *
*OUTPUT:                                                              *
*   IF NECESSARY, THE UPDATED FORMAT 4 DSCB IS WRITTEN TO THE VTOC.   *
*   A FORMAT 0 DSCB MAY BE WRITTEN OVER A FORMER FORMAT 5 DSCB.       *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        EXCP(0) - READ OR WRITE ON A DIRECT ACCESS DEVICE            *
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        *
*        XCTL(7) - TRANSFER CONTROL TO ANOTHER MODULE                 *
*        DEQ(48) - DEQ THE VTOC                                       *
*        IECRES  - FREE CORE FOR THE EXTEND WORK AREA                 *
*        WTO(35) - WRITE MESSAGE TO OPERATOR                          *
*                                                                     *
*EXITS:                                                               *
*   TO EOV -                                                          *
*   NORMAL - BRANCH TO IFG0554P WITH ONE OF THE FOLLOWING             *
*            CODES IN REGISTER 13:                                    *
*            1 - SUCCESSFUL SECONDARY ALLOCATION ON THE CURRENT VOLUME*
*            4 - SUCCESSFUL SECONDARY ALLOCATION ON A NEW VOLUME      *
*                                                                     *
*   ERROR  - BRANCH TO IFG0554P WITH ONE OF THE FOLLOWING             *
*            ERROR CODES IN REGISTER 13:                              *
*           -1 - ERROR IN SECONDARY ALLOCATION ON THE CURRENT VOLUME  *
*           -4 - ERROR IN SECONDARY ALLOCATION ON THE NEW VOLUME      *
*           -8 - UNABLE TO CONVERT THE VTOC BECAUSE OF ONE OF THE     *
*                FOLLOWING ERRORS:                                    *
*              - OVERLAPPING EXTENTS IN THE VTOC                      *
*              - OVERLAPPING DOS SPLIT CYLINDER EXTENTS IN THE VTOC   *
*              - IGG0325Z ZAPPED TO PREVENT VTOC CONVERSION WHEN THE  *
*                DIRF BIT IS SET IN THE FORMAT 4 DSCB.                *
*              - DOS STACKED PACK FORMAT                              *
*          -16 - PERMANENT I/O ERROR                                  *
*                                                                     *
*   TO OS CVOL CATALOG -                                              *
*   NORMAL - XCTL TO IGC0002H WITH THE FOLLOWING CODE IN REGISTER 13: *
*            2 - SUCCESSFUL SECONDARY ALLOCATION OF THE OS CATALOG    *
*                ON THE CURRENT VOLUME                                *
*                                                                     *
*   ERROR  - XCTL TO IGC0002H WITH ONE OF THE FOLLOWING ERROR CODES   *
*            IN REGISTER 13:                                          *
*           -2 - ERROR IN SECONDARY ALLOCATION OF THE OS CATALOG      *
*           -8 - UNABLE TO CONVERT THE VTOC BECAUSE OF ONE OF THE     *
*                FOLLOWING ERRORS:                                    *
*              - OVERLAPPING EXTENTS IN THE VTOC                      *
*              - OVERLAPPING DOS SPLIT CYLINDER EXTENTS IN THE VTOC   *
*              - IGG0325Z ZAPPED TO PREVENT VTOC CONVERSION WHEN THE  *
*                DIRF BIT IS SET IN THE FORMAT 4 DSCB.                *
*              - DOS STACKED PACK FORMAT                              *
*          -16 - PERMANENT I/O ERROR                                  *
*                                                                     *
*   TO VSAM CATALOG - IN ALL CASES, REGISTER 1 CONTAINS ZERO TO  X02989
*            INDICATE A RECURSIVE CALL AND REGISTER 14 IS SET    X02989
*            TO ZERO TO REFLECT THAT THE RETURN IS FROM DADSM    X02989
*            EXTEND.                                             X02989
*   NORMAL - XCTL TO IGG0CLA1 WITH THE FOLLOWING CODE IN         XO2989
*            REGISTER 13:                                        X02989
*          129 - SUCCESSFUL SECONDARY ALLOCATION OF THE VSAM     X02989
*                DATA SPACE ON THE CURRENT VOLUME                X02989
*                                                                X02989
*   ERROR  - XCTL TO IGG0CLA1 WITH ONE OF THE FOLLOWING ERROR    X02989
*            CODES IN REGISTER 13:                               X02989
*           -8 - UNABLE TO CONVERT THE VTOC BECAUSE OF ONE OF THE     *
*                FOLLOWING ERRORS:                                    *
*              - OVERLAPPING EXTENTS IN THE VTOC                      *
*              - OVERLAPPING DOS SPLIT CYLINDER EXTENTS IN THE VTOC   *
*              - IGG0325Z ZAPPED TO PREVENT VTOC CONVERSION WHEN THE  *
*                DIRF BIT IS SET IN THE FORMAT 4 DSCB.                *
*              - DOS STACKED PACK FORMAT                              *
*          -12 - UNABLE TO RAC DEFINE NEW VOLUME FOR A RAC     @Z40RSGD
*                DEFINED DATA SET.                             @Z40RSGD
*          -16 - PERMANENT I/O ERROR                             X02989
*         -129 - ERROR IN SECONDARY ALLOCATION OF THE VSAM DATA  X02989
*                SPACE                                           X02989
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*OTHER MACROS USED:                                                   *
*   CVT - TO REFERENCE THE CVT                                        *
*   UCB - TO REFERENCE THE UCB                                        *
*   IECDSECT - TO DEFINE THE I/O SUPPORT WORK AREA                    *
*   IECSDSL1 - TO SYMBOLICALLY ADDRESS DSCB'S                         *
*   IECEXTWA - TO DEFINE THE EXTEND WORK AREA                         *
*                                                                     *
*STORAGE: PROGRAM CODE CSECT - LESS THAN 1024 BYTES                   *
*         EXTEND WORK AREA - AS DEFINED IN THE IECEXTWA MACRO    XM2969
*         RPS WORK AREA - LENGTH IS DEFINED IN THE IECRPS MACRO  XM2969
*         I/O SUPPORT WORK AREA                                       *
*
*REGISTER USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
RBASE    EQU   3                        BASE REGISTER            Y02080
RCORE    EQU   4                        EOV WKA ADDRESSABILITY   Y02080
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
EXWKA    EQU   11                       EXTEND WORK AREA ADDRESS Y02080
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
RWRK     EQU   15
*
* OTHER EQUATES
*
K2       EQU   2                        CONSTANT OF 2            Y02080
K4       EQU   4                        CONSTANT OF 4            XM2969
K7       EQU   7                        CONSTANT OF 7            XM2969
K96      EQU   96                       CONSTANT OF 96           Y02080
C4       EQU   4                        FOUR CHARACTERS          S20201
CA       EQU   120                      DISP TO AVT PTR IN W.A.  S20201
DW       EQU   8                        EIGHT BYTES              Y02080
DIRFBIT  EQU   X'04'                    VTOC INTERRUPT BIT       O19117
CATALOG  EQU   X'02'                    EXTENDING AN OS CATALOG  YM3047
VSAMID   EQU   X'81'                    VSAM CATALOG ID          X02989
WRZERO   EQU   X'80'                    WRITE FORMAT 0 DSCB      M0130
X08      EQU   X'08'                    CONSTANT OF X'08'        S21040
X10      EQU   X'10'                    I/O ERROR                S21040
X20      EQU   X'20'                    EOV I/O ERROR TEST       Y02078
UUU      EQU   37                       DISP. TO UUU IN MESSAGE  Y02078
VOLSER   EQU   41                       DISP. TO VOLSER IN MSG   Y02078
FRSTF5   EQU   X'08'                    IST F5 IN CORE SW        XM2969
ZEROFLAG EQU   X'00'                    ZERO FLAGS FOR READ      XM2969
RDCOUNT  EQU   X'8C'                    READ COUNT               XM2969
WRTCCW   EQU   X'0D'                    WRITE CCW CODE           XM2969
READCCW  EQU   X'0E'                    READ CCW CODE            XM2969
RACERROR EQU   X'40'                    RACDEF FAILED          @Z40RSGD
RACCODE  EQU   12                       RACDEF FAILED          @Z40RSGD
*
         BALR  RBASE,0
         USING CHKIOERR,RBASE
         USING EOVWKA,RCORE             EOV W/A ADDRESSABILITY   Y02080
         USING EXTNDWKA,EXWKA           WORK AREA ADDRESSABILITY Y02080
         USING CVT,RF                   CVT BASE
*
* THIS SECTION DETERMINES IF THE FORMAT 4 DSCB MUST BE REWRITTEN.
*
CHKIOERR EQU   *                                                 O19117
         XI    DS4VTOCI,DIRFBIT         SET/RESET DIRF BIT       Y02080
         LTR   RD,RD                    TEST FOR NORMAL ENTRY    O19117
         BZ    START                    IF NORMAL, BR            O19117
         TM    DS4VTOCI,DIRFBIT         TEST IF DIRF BIT WAS     Y02080
*                                       PREVIOUSLY SET           Y02080
         BO    EXITHERE                 IF YES, BR               O19117
         TM    ECB,X'20'                Q - I/O ERROR            O19117
         BZ    EXITHERE                 IF YES, BR               O19117
         TM    DXEXTSW,X10              TEST FOR I/O ERROR       Y02080
         BO    EXITHERE                 BRANCH IF I/O ERROR      M0130
         TM    DXEXTSW,X08              TEST IF VTOC COULD NOT   Y02078
*                                       BE CONVERTED             Y02078
         BO    EXITHERE                 YES, DO NOT REWRITE F4   Y02078
         B     WRITEF4                                           O19117
*
* THIS SECTION DETERMINES IF A FORMAT 0 DSCB MUST BE WRITTEN.
* IF SO, IT WRITES IT.
*
START    EQU   *                                                 M0130
         TM    SWITCH,WRZERO            MUST AN F0 BE WRITTEN?   M0130
         BNZ   WRITEF0                  BRANCH IF F0 MUST BE     XM2969
*                                       WRITTEN                  XM2969
         TM    ESWITCH2,EF5ZERO         DOES F5 WITH ALL ZERO    XM2969
*                                       EXTENTS EXIST            XM2969
         BNO   WRITEF4                  BR TO CHECK F4 UPDATE IF XM2969
*                                       A F5 WITH ALL ZERO       XM2969
*                                       EXTENTS DOES NOT EXIST   XM2969
         TM    SWITCH,FRSTF5            IS FIRST F5 IN CORE      XM2969
*                                       INDICATOR SET            XM2969
         BO    WRITEF4                  BRANCH IF INDICATOR SET  XM2969
         MVI   CCW11+K4,ZEROFLAG        ZERO FLAGS ON READ CCW   XM2969
         MVI   CCW11+K7,RDCOUNT         INSURE CORRECT COUNT     XM2969
         MVC   IDAREA,EXTCCHHR          MOVE CCHHR OF PREV F5    XM2969
         LA    R0,CCW9                  START OF CHANNEL PGM     XM2969
         BAL   R7,CHANNLGO              BAL TO READ PREVIOUS F5  XM2969
         MVC   COUNT,DS5PTRDS           SAVE CHAIN ADDR TO WRITE XM2969
         XC    DS5PTRDS,DS5PTRDS        ZERO CHAIN POINTER       XM2969
         MVI   CCW11,WRTCCW             CHANGE READ CCW TO WRITE XM2969
         LA    R0,CCW9                  START OF CHANNEL PGM     XM2969
         BAL   R7,CHANNLGO              BAL TO WRITE F5          XM2969
         MVI   CCW11,READCCW            RESTORE READ CCW         XM2969
WRITEF0  EQU   *                        WRITE AN F0 DSCB         XM2969
         MVC   IDAREA(5),FIVESP   MOVE IN SAVED ADDRESS
         LA    R0,CCW4+4                PICK UP ZERO FIELD ADDR.
         ST    R0,CCW8             STORE IN SEARCH ID EQ CCW.
         MVI   CCW8,X'0D'         RESTORE THE OP CODE.
         MVI   CCW8+7,X'01'       INSERT COUNT FIELD
         MVI   CCW8+4,X'60'
         MVI   CCW11+4,X'10'      TURN ON SKIP FLAG.
         MVI   CCW11+7,X'8C'      INSURE CORRECT COUNT FOR WRITE CHECK.
         LA    R0,CCW6            START SEARCH AT CCW6
         BAL   R7,CHANNLGO        EXECUTE CHANNEL PROGRAM
         LH    RWRK,UHOLECTR
         BCTR  RWRK,0
         STH   RWRK,UHOLECTR      UPDATE USED HOLES COUNTER.
*
* THIS SECTION UPDATES THE FORMAT 4 DSCB AND WRITES IT BACK.
*
WRITEF4  EQU   *                                                 O19117
         LH    RWRK,DS4DSREC            LOAD NUMBER OF F0 DSCB'S Y02080
         SH    RWRK,UHOLECTR            SUBTRACT USED F0 DSCB'S  Y02080
         STH   RWRK,DS4DSREC            STORE NEW NUMBER OF F0'S Y02080
         LM    R5,RA,CHANPROG           FETCH CCW'S 1 THRU 3     O19117
         ALR   R5,EXWKA                 RESOLVE                  Y02080
         ALR   R7,RCORE                   CORE                   Y02080
         ALR   R9,RCORE                     ADDRESSES            Y02080
         STM   R5,RA,CCW1               STORE CCW'S 1 THRU 3     O19117
         LM    R7,RA,CHANPROG+24        FETCH CCW'S 5 THRU 6     O19117
         ALR   R7,RCORE                 RESOLVE CORE             Y02080
         ALR   R9,RCORE                   ADDRESSES              Y02080
         STM   R5,RA,CCW4               STORE CCW'S 4 THRU 6     O19117
         MVC   IDAREA(5),VTOCADR        SEARCH ADDRESS FOR IOB
         LA    R0,CCW1                  START AT CCW1            O19117
         BAL   R7,CHANNLGO              GO TO WRITE FORMAT 4
*
* THIS SECTION DEQ'S THE VTOC.
*
EXITHERE MVC   MAJOR(8),VTOCNAME
         L     R7,DXDEBUCB             R7 = POINTER TO UCB         AAAA
         USING UCBOB,R7                                            AAAA
NOSUB    MVC   MINOR(6),SRTEVOLI       SAVE VOLUME SERIAL NUMBER   AAAA
         MVI   ENQAREA,X'FF'
         SR    R1,R1                    ZERO REGISTER            Y02080
         STH   R1,ENQAREA+K2            CLEAR FOR DEQ MACRO      Y02080
         TM    ETYPEFLG,RSMC            LEAVE SMC FOR USER       Y02080
         BNO   DEQVTOC                  BRANCH IF YES            Y02080
         DEQ   (MAJOR,MINOR,6,SYSTEMS),RMC=STEP,MF=(E,ENQAREA)   YM3995
*
         NI    DSMADTB2,X'FF'-DSMSMCE-DSMVTOCR  RESET VTOC       YM3995X
                                        ENQ'ED SMC SWITCHES      YM3995
         B     TSTIOERR                 GO TEST FOR I/O ERROR    YM3995
*
DEQVTOC  EQU   *                        DEQ THE VTOC NON-SMC     Y02080
         DEQ   (MAJOR,MINOR,6,SYSTEMS),MF=(E,ENQAREA)  DEQ VTOC  Y02080
*
         NI    DSMADTB2,X'FF'-DSMVTOCR  RESET VTOC ENQ'ED SWITCH Y02144
*
* IF AN I/O ERROR HAS OCCURRED, THIS SECTION ISSUES MESSAGE IEC603I.
*
TSTIOERR EQU   *                        TEST FOR I/O ERROR       Y02078
         TM    ECB,X20                  TEST FOR EOV I/O ERROR   Y02078
         BZ    BUILDMSG                 BRANCH IF EOV I/O ERROR  Y02078
         TM    DXEXTSW,X10              TEST IF ALLOCATE I/O ERR Y02078
         BNO   RESTRIOB                 BRANCH IF NO I/O ERROR   Y02078
BUILDMSG EQU   *                        BUILD THE MESSAGE        Y02078
         MVC   F5DSCB(MSGEND-ERRMSG),ERRMSG  MOVE IN MESSAGE     Y02078
         MVC   F5DSCB+UUU(L'UCBNAME),UCBNAME  MOVE IN EBCDIC UCB Y02078
*                                       CHANNEL/UNIT ADDRESS     Y02078
         MVC   F5DSCB+VOLSER(L'SRTEVOLI),SRTEVOLI  MOVE IN VOLID Y02078
         WTO   MF=(E,F5DSCB)            ISSUE ERROR MESSAGE      Y02078
*
RESTRIOB EQU   *                        RESTORE CCW ADDR IN IOB  Y02078
         LA    R7,DXCCW
         ST    R7,IOBSTART-1      RESTORE START ADDRESS FOR EOV
*
* THIS SECTION RESTORES THE DEB AVT POINTER IF AN RPS WORK AREA EXISTS.
*
         TM    DSMADTB1,DSMRPSAP        TEST IF RPS APPENDAGE    YM3048X
                                        WAS LOADED               YM3048
         BNO   CONTINUE                 BRANCH IF NOT            YM3048
         L     R1,DXDEBAPP              GET PTR TO RPS WORK AREA YM3048
         MVC   DXDEBAPP(C4),CA(R1)      RESTORE DEB AVT POINTER SA53147
         NI    DSMADTB1,X'FF'-DSMRPSAP  RESET RPS APP LOADED BIT Y02144
*
* THIS SECTION PREPARES TO BRANCH TO EOV BY LOADING THE ENTRY
* POINT ADDRESS.
*
CONTINUE EQU   *                                                SA53147
         TM    DXEXTSW,CATALOG          TEST FOR CVOL CATALOG    YM3047
         BO    LOADCODE                 BRANCH IF YES            YM3047
         TM    DXEXTSW,VSAMID           TEST FOR ENTRY FROM VSAM Y02080
         BO    LOADCODE                 BRANCH IF YES            Y02080
         IECRES LOAD,EXTPR=(EXWKA),MODNM=EOVLOAD,BRANCH=NO       Y02080
         L     RE,WTGMODEP              LOAD ENTRY POINT ADDRESS Y02080
*
* THIS SECTION LOADS THE PROPER EOV RETURN CODE.
*
LOADCODE EQU   *                        LOAD ERROR CODE          Y02080
         TM    ECB,X'20'                TEST FOR EOV I/O ERROR
         BZ    EOVIOERR                 BRANCH IF AN I/O ERROR   M0130
         TM    DXEXTSW,X10              TEST IF ALLOCATE I/O ERR Y02080
         BO    EOVIOERR                 BRANCH IF YES            M0130
         TM    DXEXTSW,X08              TEST IF UNABLE TO        Y02080
*                                       CONVERT THE VTOC         Y02080
         BO    DOSVTOC                  BRANCH IF YES            M0130
         TM    DXEXTSW,RACERROR         RACDEF FAIL ON EXTEND  @Z40RSGD
         BZ    NORACERR                 NO-CONTINUE            @Z40RSGD
         LA    RD,RACCODE               YES-MARK RAC ERROR     @Z40RSGD
NORACERR EQU   *                        CONTINUE               @Z40RSGD
         LTR   RD,RD                    TEST FOR NORMAL EXIT
         BP    SETNEG                   BR IF NOT TO SET NEGATIVE CODE
         IC    RD,DXEXTSW               INSERT ENTRY CODE        Y02080
         B     TESTRTRN                 TEST RETURN
EOVIOERR EQU   *                                                 M0130
         LA    RD,X10                   LOAD I/O ERROR CODE      M0130
         B     SETNEG                   GO NEGATE REGISTER 13    M0130
DOSVTOC  EQU   *                                                 M0130
         LA    RD,X08                   UNCONVERTIBLE VTOC ERROR M0130
SETNEG   LNR   RD,RD                    SET NEGATIVE CODE
*
* THIS SECTION FREES THE EXTEND WORK AREA(S), RESTORES REGISTERS,
* AND XCTL'S TO VSAM CATALOG OR OS CVOL CATALOG OR BRANCHES TO EOV.
*
TESTRTRN EQU   *                        DETERMINE RETURN MODULE  Y02080
         LR    R8,RCORE                 SAVE EOV WORK AREA ADDR  Y02080
         STM   RBASE,RE,DXLBL           SAVE REGISTERS 3-14      Y02080
         IECRES FREE,PREFIX=FIRST,A=(EXWKA)  FREE EXTEND WKAS    Y02080
         LM    RBASE,RE,DXLBL-DXLBL(R8)  RESTORE REGISTERS 3-14  Y02080
*
         XC    FIELD1(DW),FIELD1        PREPARE TO XCTL          Y02080
         LA    RF,FIELD1+DW             POINT TO XCTL NAME       Y02080
         ST    RF,FIELD1                                         Y02080
         TM    DXEXTSW,CATALOG          TEST FOR ENTRY FROM OS   YM3047X
                                        CVOL CATALOG             YM3047
         BNO   VSAMTEST                 BRANCH IF NOT            YM3047
         MVC   FIELD1+DW(X08),CVOLMOD   SET UP TO XCTL TO CVOL   YM3047
         B     NOTVSAM                  GO RESTORE REGISTERS     YM3047
VSAMTEST EQU   *                        TEST IF ENTRY FROM VSAM  YM3047
         TM    DXEXTSW,VSAMID           TEST IF ENTRY FROM VSAM  Y02080
         BNO   NOTVSAM                  BRANCH IF NOT VSAM       X02989
         MVC   FIELD1+X08(X08),VSAMMOD  SET UP TO XCTL TO VSAM   X02989
         SR    R1,R1                    INDICATE RECURSIVE CALL  X02989
         SR    RE,RE                    RETURN FROM DADSM EXTEND X02989
NOTVSAM  EQU   *                        BRANCH POINT IF NOT VSAM X02989
         L     RF,CVTPTR                CVT POINTER              X02989
         L     RF,CVTTCBP               TCB ADDRESS
         L     RF,4(RF)                 POINTER TO SVRB ADDRESS
         L     RF,0(RF)
         TM    DXEXTSW,VSAMID           TEST IF ENTRY FROM VSAM  Y02080
         BO    VSAMRTRN                 BRANCH IF FROM VSAM      Y02080
         TM    DXEXTSW,CATALOG          TEST FOR CVOL CATALOG    YM3047
         BO    VSAMRTRN                 BRANCH IF ENTRY FROM     YM3047X
                                        OS CVOL CATALOG          YM3047
*
         LM    R2,RC,96(RF)             RESTORE  REGISTERS FOR EOV
         IECRES BRANCH,EPA=(RE)         RETURN TO EOV            Y02080
*
VSAMRTRN EQU   *                        XCTL TO VSAM OR CATALOG  YM3047
         LM    R2,RC,K96(RF)            RESTORE REGS FOR VSAM    Y02080
         XCTL  MF=(E,(1)),SF=(E,FIELD1)
*
* THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
CHANNLGO MVI   ECB,X'00'
         MVC   SEEK+3(4),IDAREA        INSERT SEEK ADDR INTO IOB.
         ST    R0,IOB+16
         EXCP  IOB
         WAIT  ECB=ECB
         TM    ECB,X'20'                TEST FOR I/O ERROR
         BCR   1,R7                     BR IF NO ERROR
         B     EXITHERE                 GO TO EXIT ROUTINE
*
* CONSTANTS
*
ERRMSG   WTO   'IEC603I VTOC ERRORS MAY EXIST ON UUU,VOLSER,0',  Y02078X
               ROUTCDE=(4,10),DESC=4,MF=L                        Y02078
MSGEND   EQU   *                        MSG DELIMITER            Y02078
CVOLMOD  DC    CL8'IGC0002H'            CATALOG RETURN MOD NAME  YM3047
VSAMMOD  DC    CL8'IGG0CLA1'            VSAM RETURN MODULE NAME  X02989
VTOCNAME DC    C'SYSVTOC '
*
* CHANNEL PROGRAMS
*
CHANPROG DS    0F                                                O19117
*CCW1 - SEARCH ID
         DC    X'31'                                             O19117
         DC    AL3(IDAREA-EXTNDWKA)     SID ON F4 CCHHR          Y02080
         DC    X'4000'                                           O19117
         DC    H'5'                                              O19117
*CCW2 - TIC
         DC    X'08'                                             O19117
         DC    AL3(DXCCW1-DXLBL)        TIC TO CCW1              Y02080
         DC    F'0'                                              O19117
*CCW3 - WRITE DATA
         DC    X'05'                                             O19117
         DC    AL3(IECSDSF4-DXLBL)      WRITE FORMAT 4 DSCB      Y02080
         DC    X'4000'                                           O19117
         DC    H'96'                                             O19117
*CCW4 - SEARCH ID (WILL BE DUPLICATED FROM CCW1)
*CCW5 - TIC
         DC    X'08'                                             O19117
         DC    AL3(DXCCW4-DXLBL)        TIC BACK TO CCW4         Y02080
         DC    F'0'                                              O19117
*CCW6 - READ DATA
         DC    X'06'                                             O19117
         DC    AL3(IECSDSF4-DXLBL)      WRITE CHECK CCW          Y02080
         DC    X'1000'                  SUPPRESS DATA TRANSFER   Y02080
         DC    H'96'                    WRITE LENGTH             Y02080
*
* TABLE OF MODULE NAMES AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(EOVLOAD,IFG0554P),SVC=055,LENGTH=,BRT=YES  Y02080
         EJECT                                                   Y02080
*
* I/O SUPPORT WORK AREA
*
EOVWKA   DSECT                          EOV WORK AREA            Y02080
         IECDSECT
         EJECT                                                   Y02144
CCW1     EQU   DXCCW1
CCW2     EQU   DXCCW2
CCW3     EQU   DXCCW3
CCW4     EQU   DXCCW4
CCW5     EQU   DXCCW5
CCW6     EQU   DXCCW6
CCW7     EQU   DXCCW7
CCW8     EQU   DXCCW8
CCW9     EQU   DXCCW9
CCW10    EQU   DXCCW10
CCW11    EQU   DXCCW11
CCW12    EQU   DXCCW12
*
         ORG   DXLBL
         IECSDSL1 (4)
*
SEEK     EQU   DXDAADDR
ECB      EQU   DXECB
DEB      EQU   DXDEB
IOB      EQU   DXIOB
DCB      EQU   DXDCB
FIELD1   EQU   DXLBL                    XCTL PARAMETER LIST      Y02080
ENQAREA  EQU   DXLBL                    DEQ PARAMETER LIST       Y02080
MAJOR    EQU   ENQAREA+16               DEQ MAJOR NAME           Y02080
MINOR    EQU   ENQAREA+24               DEQ MINOR NAME           Y02080
         EJECT                                                   Y02080
WORKAREA IECEXTWA EP,D1=(5),ADT=YES     EXTEND WORK AREA         XM2969
SWITCH   EQU   ESWITCH                  EQUATE FOR ESWITCH       Y02080
COUNT    EQU   ECOUNT                   EQUATE FOR ECOUNT        Y02080
VTOCADR  EQU   EVTOCADR                 EQUATE FOR EVTOCADR      Y02080
IDAREA   EQU   EIDAREA                  EQUATE FOR EIDAREA       Y02080
UHOLECTR EQU   EHOLECTR                 EQUATE FOR EHOLECTR      Y02080
FIVESP   EQU   COUNT2                   EQUATE FOR COUNT2        Y02080
         EJECT                                                   Y02080
CVT      DSECT
         CVT                            CVT DSECT                Y02080
         EJECT                                                   Y02080
UCB      DSECT                                                     AAAA
         IEFUCBOB                                                  AAAA
         END   IGG0553E
