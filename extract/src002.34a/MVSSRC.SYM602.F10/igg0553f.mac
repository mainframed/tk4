   TITLE 'IGG0553F - EXTEND - INTERFACE TO VTOC CONVERSION ROUTINE'
IGG0553F CSECT
*
* MODULE NAME = IGG0553F
*
* DESCRIPTIVE NAME = EXTEND - INTERFACE TO VTOC CONVERSION ROUTINE
*
* COPYRIGHT = NONE
*
* CHANGE ACTIVITY = SEE BELOW
*
*         RELEASE 21 - NEW MODULE
*0000                                                            M0124
*         RELEASE 22 - DELETIONS/CHANGES
*         VS2 RELEASE 02 - DELETIONS/CHANGES
*0000000500-000700,008000,017000,020000-021000,025000,027500,    Y02080
*0000028400-028600,031000-033436,037000,043000,043600-044200,    Y02080
*0000047000,049000,051000-054000,062000,063100,063800-065388,    Y02080
*0000066200,076000-077000,090000-091000,098200,108000-109000,    Y02080
*0000111000-114000,117000-122000,125000-128000,131000-135000,    Y02080
*0000141000-142500,151000-154000,156200,159000,161000,162100-    Y02080
*0000168000,170000,172000-173000,175000,177000-205000,207000-    Y02080
*0000253000,260000-262000,264000,266000,275000,284000,286000,    Y02080
*0000290000,293000,296000-297000,304000-307000,321000-323000,    Y02080
*0000323600,324400,324800,325200,327000-330000,333000-334500,    Y02080
*0000336000,337600-351000,370000-371000,374000-554600            Y02080
*0000072000-073000,273000,332000                                 Y02078
*0000021000-021600,172000-173000,261000-266500                   Y02144
*0000                                                            YM3047
*
*
*         STATUS CHANGE LEVEL 000
*0000001000-002000,029000-031000,034000-037000,040000-042000,    M0130
*0000044000,046000-058000,064000-068000,084000,098000,119000,    M0130
*0000136000-138000,148000,150000,156000,161000,166000-168000,    M0130
*0000172000-173000,212000-238000,240000-241000,246000-247000,    M0130
*0000261000-262000,266000,281000,283000,286000-289000,296000,    M0130
*0000298000-300000,302000-318000,324000-325000,338000,342000,    M0130
*0000353000-369000,374000-377000,532000-533000,548000            M0130
*
***********************************************************************
*
* FUNCTION - THIS MODULE IS THE INTERFACE BETWEEN THE EXTEND ROUTINE
*    AND THE ALLOCATE VTOC CONVERT ROUTINE.  IT ISSUES A GETMAIN FOR
*    THE ALLOCATE WORK AREA (VIA AN IECRES GET) AND INITIALIZES IT.
*    THIS MODULE STORES THE EXTEND REGISTERS AND PASSES CONTROL TO THE
*    CONVERT ROUTINE.  UPON COMPLETION THE CONVERT ROUTINE PASSES
*    CONTROL BACK TO THIS MODULE.  IT WILL THEN RELOAD THE EXTEND
*    REGISTERS AND RE-EXECUTE THE CHANNEL PROGRAM TO READ IN THE
*    FORMAT 4 DSCB AND SEARCH FOR A DUPLICATE NAME DSCB IF EXTENDING
*    ON A NEW VOLUME.
*
* ENTRY POINTS -
*         IGG0553F - ONLY ENTRY POINT TO THIS MODULE.  ENTRY IS MADE
*         FROM IGG0553A OR THE ALLOCATE CONVERT ROUTINE VIA A BRANCH.
*
*
* INPUT -
*    INPUT FROM EXTEND MODULE IGG0553A:
*    REGISTER 4 POINTS TO THE I/O SUPPORT WORK AREA, WHICH CONTAINS
*    THE FORMAT 4 DSCB.
*    REGISTER 11 POINTS TO THE EXTEND WORK AREA, WHICH CONTAINS THE
*    ADDRESSES OF THE FORMAT 4 AND FORMAT 5 DSCBS.
*    THE I/O SUPPORT WORK AREA IS LAID OUT AS FOLLOWS:
*
*          BYTES          AREA
*         *******        ******
*          100            DSCB FIELD
*          176            JFCB
*            4            ECB
*           40            IOB
*           44            DEB
*            4            DCB
*           96            CCW'S
*
*    INPUT FROM THE VTOC CONVERSION ROUTINES:
*    REGISTER 4 POINTS TO THE I/O SUPPORT WORK AREA.
*    REGISTER 8 CONTAINS A RETURN CODE.
*    REGISTER 13 POINTS TO THE ALLOCATE WORK AREA.
*
* OUTPUT -
*    OUTPUT TO THE DOS VTOC CONVERSION ROUTINE:
*    REGISTER 7 POINTS TO THE UCB.
*    REGISTER 13 POINTS TO THE ALLOCATE WORK AREA, WHICH CONTAINS A
*    DEB/DCB, IOB, ECB, THE FORMAT 4 DSCB, AND THE ADDRESSES OF THE
*    FORMAT 4 AND 5 DSCB'S.
*
*    OUTPUT TO IGG0553G:
*    THE I/O SUPPORT WORK AREA WILL CONTAIN THE CONVERTED FORMAT 4
*    DSCB.  THE EXTEND WORK AREA WILL CONTAIN THE ADDRESSES OF THE
*    FORMAT 4 AND FORMAT 5 DSCB'S.
*
* EXTERNAL ROUTINES
*         EXCP(0) EXECUTE A CHANNEL PROGRAM
*         WAIT(1) WAIT ON AN EVENT CONTROL BLOCK
*         IECRES - GET/FREE THE WORK AREA, BRANCH TO OTHER MODULES
*
* EXITS -
*    NORMAL - BRANCH TO IGG0325Z TO CONVERT THE VTOC
*             BRANCH TO IGG0553G TO CONTINUE THE EXTEND FUNCTION
*
*    ERROR  - BRANCH TO IGG0553E WITH THE ENTRY CODE IN REGISTER 13
*    THE ENTRY CODE BYTE WILL BE MODIFIED FOR THE FOLLOWING ERRORS:
*    X'11' - I/O ERROR (EOV ENTRY TO EXTEND ON THE SAME VOLUME)
*    X'12' - I/O ERROR (CVOL CATALOG ENTRY TO EXTEND AN OS CATALOG)
*    X'14' - I/O ERROR (EOV ENTRY TO EXTEND ON A NEW VOLUME)
*    X'91' - I/O ERROR (VSAM ENTRY TO EXTEND A DATA SPACE)
*    X'09' - UNABLE TO CONVERT THE VTOC (EOV ENTRY FOR SAME VOLUME)
*    X'0A' - UNABLE TO CONVERT THE VTOC (CVOL CATALOG ENTRY TO EXTEND)
*    X'0C' - UNABLE TO CONVERT THE VTOC (EOV ENTRY FOR NEW VOLUME)
*    X'89' - UNABLE TO CONVERT THE VTOC (VSAM ENTRY TO EXTEND)
*
* ATTRIBUTES
*    REENTRANT
*
* STORAGE -
*    PROGRAM CODE CSECT - LESS THAN 1024 BYTES
*    ALLOCATE WORK AREA    - AS DEFINED BY THE IECALLWA MACRO
*    EXTEND WORK AREA      - AS DEFINED BY THE IECEXTWA MACRO
*    RPS WORK AREA         - LENGTH IS DEFINED IN THE IECRPS MACRO
*    I/O SUPPORT WORK AREA
*
* OTHER MACROS USED -
*    CVT - TO REFERENCE THE CVT
*    IECALLWA - TO DEFINE THE ALLOCATE WORK AREA
*    IECEXTWA - TO DEFINE THE EXTEND WORK AREA
*    IECDSECT - TO DEFINE THE I/O SUPPORT WORK AREA
*    IECSDSL1 - TO SYMBOLICALLY ADDRESS DSCB'S
*
* NOTES -
*    EXTEND WILL ACCEPT THE FOLLOWING ERROR CODES FROM THE VTOC CONVERT
*    ROUTINE (PASSED IN REGISTER 8)
*       X'0C' - PERMANENT I/O ERROR.
*       X'48' - VTOC CANNOT BE CONVERTED BECAUSE OF ONE OF THE
*               FOLLOWING ERRORS:
*               1. OVERLAPPING EXTENTS IN THE VTOC.
*               2. AN OVERLAPPING DOS SPLIT CYLINDER EXTENT.
*               3. IGG0325Z WAS MODIFIED TO PREVENT VTOC CONVERSION
*                  WHEN THE DIRF BIT WAS PREVIOUSLY SET.
*    FOR ANY CHANGES OR ADDITIONS TO THE ERROR CODES PASSED BY THE VTOC
*    CONVERT ROUTINE, INTERFACES WILL HAVE TO BE MADE WITH EOV AND
*    VSAM CATALOG/DADSM.
*
*
***********************************************************************
*
*        REGISTER EQUATES
*
REG0     EQU   0                        WORK REGISTER            M0130
REG1     EQU   1                        WORK REGISTER
REG2     EQU   2                        WORK REGISTER
REG3     EQU   3                        WORK REGISTER
REG4     EQU   4                        WORK REGISTER
RCORE    EQU   4                        EOV WORK AREA ADDRESS
RDEB     EQU   5                        DEB POINTER              Y02080
REG6     EQU   6                        WORK REGISTER
REG7     EQU   7                        WORK REGISTER
RUCB     EQU   7                        UCB BASE REG
REGERROR EQU   8                        ERROR CODE PASSED IN REG
BASEREG  EQU   9                        BASE REG FOR THIS MODULE
REG10    EQU   10                       WORK REGISTER            M0130
EXWKA    EQU   11                       EXTEND WORK AREA ADDRESS Y02080
REG12    EQU   12                       WORK REGISTER
REG13    EQU   13                       WORK REG AND PASS ERROR CODES
RWKAREA  EQU   13                       ALLOCATE WORK AREA REG
RBACK    EQU   14                       RETURN REGISTER
RCVT     EQU   15                       CVT BASE
*
*        CONSTANT EQUATES
*
K0       EQU   0                        CONSTANT OF 0
K2       EQU   2                        CONSTANT OF 2            Y02080
K4       EQU   4                        CONSTANT OF 4
K8       EQU   8                        CONSTANT OF 8            Y02144
K12      EQU   12                       CONSTANT OF 12           Y02080
K16      EQU   16                       CONSTANT OF 16
K24      EQU   24                       CONSTANT OF 24
X00      EQU   X'00'                    TEST FOR DUPLICATE NAME
*                                       TURN ON COMMAND CHAINING
X04      EQU   X'04'                    TEST FOR NEW VOLUME      Y02080
X10      EQU   X'10'                    I/O ERROR INDICATOR
X20      EQU   X'20'                    PERM I/O ERROR IN ECB
DIRFBIT  EQU   X'04'                    DIRFBIT IN DS4VTOCI      Y02080
E2NDNTRY EQU   X'08'                    SECOND ENTRY TO IGG0553F
*                                       VTOC NOT CONVERTIBLE ERR CODE
*
*
***********************************************************************
*
*
         BALR  BASEREG,REG0             SET UP BASE REG
         USING BEGIN,BASEREG            USE REG 9 AS BASE REG    M0130
         USING EOVWKA,RCORE             EOV WORK AREA POINTER    Y02080
         USING EXTNDWKA,EXWKA           EXTEND WORK AREA POINTER Y02080
*
BEGIN    EQU   *                                                 M0130
         TM    DXEXTSW,E2NDNTRY         IS THIS THE SECOND ENTRY Y02080
         BO    ERRORTST                 YES, GO TEST FOR ERRORS
*
* THIS SECTION OBTAINS CORE FOR THE ALLOCATE WORK AREA.
*
         IECRES GET,EXTPR=(EXWKA),LV=WKALNGTH,ID=ALWA,           Y02080X
               STM=(REG2,REG12,IECREGSV+K12)                     Y02080
         LR    RWKAREA,REG1             SET UP WORK AREA ADDRESS
         DROP  EXWKA                                             Y02080
         USING IECEXTPR,RWKAREA         ADDRESSABILITY TO THE    Y02080
*                                       EXTENDED PREFIX          Y02080
         LA    REG1,WTGMODNM            POINT TO ALLOCATE WTGTBL Y02080
         ST    REG1,IECWTGTB            FILL IN PTR TO WTG TABLE Y02080
         MVC   WTGWTOPR(L'WTOFLAGS),WTOFLAGS  FLAGS FOR RES WTO  Y02078
         DROP  RWKAREA                                           Y02080
         USING EXTNDWKA,EXWKA           EXTEND WORK AREA POINTER Y02080
         USING ALLOCWKA,RWKAREA         ALLOCATE WORK AREA PTR   Y02080
*
* THIS SECTION SAVES EXTEND'S REGISTERS.
*
         STM   RCORE,RDEB,ALLADTRL      SAVE EOV WKA & DEB ADDR  Y02144
         ST    EXWKA,ALLADTRL+K8        SAVE EXTEND WKA ADDRESS  Y02144
*
* THIS SECTION BUILDS THE DCB/DEB, IOB, AND ECB.
*
         MVC   DEB+K4(DXDCBDEB-DYYYY),DYYYY  MOVE IN EOV DEB     Y02080
         LA    REG1,DCB                 POINT TO ALLOCATE'S DCB  Y02080
         ST    REG1,DEB+K24             FILL IN DEB PTR TO DCB   Y02080
         LA    REG1,DEB                 PUT IN DEB POINTER       Y02080
         ST    REG1,DEBPTR              STORE IN DCB
         MVC   IOB(DYYYY-DXIOB),DXIOB   MOVE IN EOV'S IOB        Y02080
         LA    REG2,ECB                 PUT IN ECB POINTER       Y02080
         ST    REG2,IOB+K4              STORE IN IOB             Y02080
         LA    REG2,CCW1                PUT IN CHANNEL PROGRAM POINTER
         LA    REG3,DCB                 PUT IN DCB POINTER       Y02080
         STM   REG2,REG3,IOB+K16        STORE IN IOB             Y02080
         L     RUCB,DXDEBUCB            LOAD UCB ADDRESS         Y02080
         MVC   VTOCADR,EVTOCADR         CCHHR OF THE F4 DSCB     Y02080
         MVC   DADSMADR,EDADSMAD        CCHHR OF THE 1ST F5 DSCB Y02080
         MVC   FMTOUTAD,EDADSMAD        INIT 1ST F5 OUTPUT ADDR  Y02080
         OI    DXEXTSW,E2NDNTRY         SET SECOND ENTRY BIT     Y02080
         OI    ACNVSW,EXTENDID          ENTRY IS FROM EXTEND     Y02080
         MVC   ADSCBF4(L'ADSCBF4),DXLBL  MOVE IN FORMAT 4 DSCB   Y02080
         TM    DS4VTOCI,DIRFBIT         TEST IF DIRF BIT WAS     Y02078
*                                       PREVIOUSLY SET           Y02078
         BO    GOCNVERT                 BRANCH IF NOT            Y02078
         OI    ACNVSW,DIRFSET           ENTRY DUE TO DIRF        Y02078
         OI    ADSCBF4+AF4VTOCI,DIRFBIT  SET THE DIRF BIT        Y02080
         DROP  EXWKA                                             Y02080
         USING IECEXTPR,RWKAREA         ADDRESSABILITY TO THE    Y02080
*                                       EXTENDED PREFIX          Y02080
GOCNVERT EQU   *                        BRANCH LABEL             Y02078
        IECRES LOAD,EXTPR=(RWKAREA),MODNM=CONVLOAD,BRANCH=DIRECT Y02080
         DROP  RWKAREA                                           Y02080
         USING EXTNDWKA,EXWKA           EXTEND WORK AREA POINTER Y02080
         USING ALLOCWKA,RWKAREA         ALLOCATE WORK AREA PTR   Y02080
*
*
ERRORTST EQU   *
*
*        RESTORE REGISTERS
*
         L     RDEB,ALLADTRL+K4         RESTORE DEB ADDRESS      Y02144
         L     EXWKA,ALLADTRL+K8        RESTORE EXTEND WKA ADDR  Y02144
*
*        TEST FOR ERRORS FROM THE CONVERT ROUTINE
*
         CH    REGERROR,PERMIO          IS THERE A PERMANENT I/O ERROR
         BE    ERROR                    YES, GO PROCESS ERROR
         CH    REGERROR,NOCONV          WAS THE VTOC CONVERTIBLE -
         BE    ERROR2                   NO, GO PROCESS ERROR
*
*        READ FORMAT 4 BACK INTO EOV WORKAREA
*                   AND
*              CONTINUE DUPLICATE NAME SEARCH
*
         BAL   RBACK,EXECUT             GO READ F4
         CLI   ECOUNT+K4,X00            TEST FOR DUPLICATE NAME  Y02080
         BE    GOAHEAD                  NO,SKIP NEW VOLUME TEST
         TM    DXEXTSW,X04              TEST FOR NEW VOLUME      Y02080
         BO    ERROR1                   BRANCH IF YES            M0130
         SR    RBACK,RBACK                                       M0130
         IC    RBACK,ECOUNT+K4          CCHHR OF F1 MUST BE DECR Y02080
         BCT   RBACK,STORER             BR IF NOT ZERO FOR STORE
         IC    RBACK,DS4DEVDT           SET TO LAST RECORD ON TRACK
STORER   EQU   *                        BRANCH LABEL             Y02080
         STC   RBACK,ECOUNT+K4          SET UP R OF F1 CCHHR     Y02080
GOAHEAD  EQU   *
*
         NI    DXEXTSW,X'FF'-E2NDNTRY   TURN OFF 2ND PASS INDIC  Y02080
         LA    REG2,NEXTLOAD            POINT TO ID OF IGG0553G  Y02080
XCTLNOW  EQU   *
         IECRES LOAD,EXTPR=(EXWKA),MODID=(REG2),BRANCH=DIRECT    Y02080
*
*        THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
EXECUT   EQU   *
         EXCP  DXIOB                    EXECUTE CHANNEL PROGRAM  Y02080
         WAIT  1,ECB=DXECB              WAIT UNTIL COMPLETED     Y02080
         TM    DXECB,X20                CHECK FOR PERM IO ERROR  Y02080
         BCR   1,RBACK                  RETURN IF I/O SUCCESSFUL M0130
ERROR    EQU   *                                                 M0130
         OI    DXEXTSW,X10              X'10' INDICATES TO       Y02080
*                                       IGG0553E THAT AN I/O     M0130
*                                       ERROR OCCURRED           M0130
ERROR1   EQU   *                                                 M0130
         NI    DXEXTSW,X'FF'-E2NDNTRY   TURN OFF 2ND PASS INDIC  Y02080
ERROR2   EQU   *                                                 M0130
         LA    REG2,ERRORMOD            POINT TO ID OF IGG0553E  Y02080
         SR    REG13,REG13              CLEAR ERROR REGISTER     M0130
         IC    REG13,DXEXTSW            PICK UP ENTRY CODE       Y02080
         B     XCTLNOW                  GO XCTL                  M0130
*
*        CONSTANTS
*
WTOFLAGS DS    X'000C0000'              MCS FLAGS FOR RES WTO    Y02078
         DS    0H                       HALFWORD BOUNDARY        Y02080
PERMIO   DC    X'000C'                  PERM I/O ERROR FROM CNVRT RTN
NOCONV   DC    X'0048'                  UNABLE TO CONVERT VTOC   Y02078
*
* TABLE OF MODULE IDS, MODULE NAMES, AND ENTRY POINT ADDRESSES
*
XCTLTABL XCTLTABL ID=(CONVLOAD,IGG0325Z,ERRORMOD,3E,             Y02080X
               NEXTLOAD,3G),SVC=055,LENGTH=,BRT=YES              Y02080
         EJECT                                                   Y02080
EOVWKA   DSECT                                                   Y02080
         IECDSECT
         EJECT                                                   Y02144
         ORG   DXLBL
         IECSDSL1 (4)
AF4VTOCI EQU   DS4VTOCI-DS4IDFMT        OFFSET TO DS4VTOCI FIELD Y02080
         EJECT                                                   Y02080
WORKAREA IECEXTWA EP                    EXTEND WORK AREA         Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA ,                     ALLOCATE WORK AREA       Y02080
WKALNGTH EQU   ALLWAEND-ALLOCWKA        ALLOCATE WKAREA LENGTH   Y02080
         EJECT                                                   Y02080
CVT      DSECT                          CVT DSECT                Y02080
         CVT                                                     Y02080
         END
