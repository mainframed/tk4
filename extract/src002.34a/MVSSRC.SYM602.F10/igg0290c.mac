         TITLE 'IGG0290C - DADSM - SCRATCH UPDATE DADSM.'
IGG0290C CSECT
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000030-000150,001000,003400,004800-005000,007400-007600,    Y02080
*0000014515-014520,015400-015600,038100,038400-039600,065200,    Y02080
*0000072720,072880,073980-086200,086600-086800                   Y02080
*0000009600                                                      Y02078
*0000                                                            Y02082
*0000023860-023880,034000                                       XA01999
*          RELEASE 17 DELETIONS                                       *
*3144000400-000600,056800                                         20055
*          RELEASE 18 DELETIONS                                       *
*          RELEASE 19 DELETIONS                                       *
*          RELEASE 20 DELETIONS                                       *
*          RELEASE 21 DELETIONS                                       *
*1198002800-003000,005200,006600-007000,007400,008400,014200-    A37199
*1198014800,072800,074000,087000                                 A37199
*          RELEASE 21.7 DELETIONS
*0000000550-000700,015800-018000,024000-024200,025600,028200-   SA56400
*0000029600,036800,044400,072840-073920,081600-083000           SA56400
*          VS1-2 DELETIONS
*0000025700-025720                                               XM0835
*
* MODULE NAME - IGG0290C
*
* DESCRIPTIVE NAME - DADSM - SCRATCH UPDATE DADSM
*
* COPYRIGHT - NONE
*
* CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING CSECT CARD
*
* STATUS CHANGE LEVEL 004
*
*ATTRIBUTES - REENTRANT
*
*FUNCTION - THIS MODULE UPDATES THE EXTENTS IN THE FORMAT 5 DSCB
*           RECORDS. THE NEW EXTENTS ARE PASSED TO THIS MODULE IN
*           A TABLE IN THE WORK AREA. WHEN AN EXTENT FROM THE TABLE
*           IS CONTIGUOUS WITH ONE OR TWO OF THE EXTENTS IN A FORMAT
*           5 DSCB RECORD, THE EXTENTS IN THAT RECORD ARE REPLACED
*           WITH ONE EXTENT THAT DESCRIBES THE ENTIRE AREA.
*
*ENTRIES - THE ONLY ENTRY POINT IS IGG0290C. ENTRY IS MADE FROM
*          MODULE IGG0290B.
*
*
*SUPERVISOR CALLS AND MACROS. THE FOLLOWING ARE SUPERVISOR CALLS
*          ISSUED IN THE MACRO EXPANSIONS:
*                    EXCP(0) READ FROM OR WRITE TO DIRECT ACCESS DEVICE
*                    WAIT(1) WAIT ON EVENT CONTROL BLOCK
*
*
*OTHER MACROS USED
*                    IECSCRWA - SCRATCH WORK AREA EXPANSION
*                    IECSDSL1 - ENABLES SYMBOLIC ADDRESSING OF DSCBS
*                    IECDSECS - EXPANDS THE CVT, RB, AND TCB DSECTS
*
*INPUT - AT ENTRY TO THIS MODULE REGISTER 13 POINTS TO THE WORK AREA
*
*OUTPUT - UPDATED FORMAT 5 DSCB'S.
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = 896 BYTES
*          RPS WORK AREA = 128 BYTES
*
*ERROR CONDITIONS - PERMANENT I/O ERROR
*
*NOTES - UNLIKE THE ALLOCATE, EXTEND, AND PARTIAL RELEASE FUNCTIONS
*        OF DADSM, IF THE DIRF BIT IS SET IN THE FORMAT 4 DSCB IN
*        THE SCRATCH WORK AREA, THIS INDICATES THAT THE DIRF BIT
*        WAS PREVIOUSLY SET IN THE FORMAT 4 DSCB.
*
*REGISTER USAGE
TEMP     EQU   0
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
HOLE     EQU   5
COUNT    EQU   5
R6       EQU   6
COUNT1   EQU   6
WORKREG1 EQU   6
INDEX3   EQU   7
RTKK     EQU   7
VOLISTX  EQU   8
EXTCTR   EQU   9
RINSCAN  EQU   9
INDEX1   EQU   10
ROUTSCAN EQU   10
INDEX2   EQU   11
RINEND   EQU   11
RX       EQU   11
R11      EQU   11
WRKAREA  EQU   13
BRANCH   EQU   14
WORKREG2 EQU   15
*
*** OTHER EQUATES
*
K0       EQU   0                        ZERO DISPLACEMENT       SA56400
TWO      EQU   2                        DISPLACEMENT OF TWO     SA56400
K2       EQU   2                        LENGTH OF TWO           SA56400
K4       EQU   4                        DISPLACEMENT OF FOUR    SA56400
K6       EQU   6                        DISPLACEMENT OF SIX     SA56400
*
         BALR  12,0
         USING BEGUN,12
         USING SCRTHWKA,WRKAREA         WORK AREA ADDRESSABILITY Y02080
*
* THIS SECTION INITIALIZES POINTERS NECESSARY FOR MERGING THE EXTENTS
* IN THE DADSM TABLE WITH THE EXTENTS IN THE FORMAT 5 DSCB(S).
*
BEGUN    EQU   *
         LA    INDEX1,ENTRIES                SET INDEX FOR DADSMTBL
*                                            ENTRIES.
         BAL   BRANCH,CVTORTA0               BRANCH TO CONVERT EXTENTS
*                                            OF INPUT FORMAT 5 FROM
*                                            XXYYZ TO RTA-RTA+1.
         LA    COUNT1,26                     LOAD TRANSFER DADSM COUNT
*                                            TO OUTPUT FOR 26 EXTENTS.
         EX    R0,SETOUT                ZERO OUTPUT AREA.
         LA    INDEX3,OUTDSCB+36             SET INDEX FOR OUTPUT AREA.
         LTR   COUNT,COUNT             ALL SPACE ALLOCATED
         BZ    OUTPUT4                 YES
*
* THIS SECTION COMPARES THE RTA/RTA+1 OF THE DADSM TABLE ENTRIES WITH
* THE RTA/RTA+1 OF THE FORMAT 5 EXTENTS TO DETERMINE WHERE TO MERGE
* THE DADSM TABLE ENTRIES.
*
MERGE1   CLC   2(2,INDEX1),0(INDEX2)         COMPARE FOR CONTIGUOUS
*                                            EXTENTS BETWEEN RTA+1 OF
*                                            ENTRY AND RTA OF EXTENT.
         BH    MERGE3                       THE RTA+1 OF ENTRY IS
*                                            GREATER THAN THE RTA OF
*                                            THE EXTENT.
         BL    MERGE8                        ENTRY GOES BEFORE 1ST
*                                            EXTENT.
         MVC   0(2,INDEX2),0(INDEX1)         ENTRY AND DADSM ARE
*                                            CONTIGUOUS SET RTA+1 OF
*                                            EXTENT=RTA OF ENTRY.
MERGE2   LA    INDEX1,4(INDEX1)             INCREMENT DADSMTBL INDEX
*                                            FOR NEXT ENTRY.
         BCT   EXTCTR,MERGE3                 DECREMENT THE NUMBER OF
*                                            ENTRIES IN DADSMTBL AND
*                                            BRANCH IF MORE ENTRIES
*                                            TO CHECK FOR CONTIGUOUS
*                                            EXTENTS.
MERGE6   MVC   K0(K4,INDEX3),K0(INDEX2) TRANSFER INPUT          SA56400
*                                       EXTENT TO OUTPUT        SA56400
         LTR   COUNT,COUNT              ALL SPACE ALLOCATED     XA01999
         BZ    OUTPUT3                  BRANCH IF YES           XA01999
MERGE6A  LA    INDEX2,K4(INDEX2)        INCREMENT INPUT INDEX   SA56400
         BCT   COUNT,MERGE10            REDUCE EXTENT COUNT     SA56400
         BCTR  COUNT1,R0                REDUCE TRANSFER COUNT   SA56400
         B     OUTPUT2                  TEST FOR MORE F5'S      SA56400
MERGE3   CLC   0(2,INDEX1),2(INDEX2)         COMPARE FOR CONTIGUOUS
*                                            EXTENTS BETWEEN RTA+1 OF
*                                            EXTENT AND RTA OF ENTRY.
         BH    MERGE6                        ENTRY GREATER THAN EXTENT
         BL    OVERLAP                  BRANCH IF EXTENT        SA56400
*                                       IN ENTRIES OVERLAPS     SA56400
*                                       EXTENT IN F5            SA56400
         CLC   2(2,INDEX1),4(INDEX2)         COMPARE FOR A COLLAPSE
*                                            BETWEEN ENTRY AND EXTENTS.
         BL    MERGE5                   NO COLLAPSE             SA56400
         BH    CHECK                    CHECK IF OVERLAPPING     XM0835
*                                       EXTENTS WERE FOUND       XM0835
MERGE4   MVC   4(2,INDEX2),0(INDEX2)         DADSM COLLAPSE-MOVE RTA
*                                            OF EXTENT TO RTA OF NEXT
*                                            EXTENT.
         LA    INDEX2,4(INDEX2)              INCREMENT INPUT FORMAT 5
*                                            INDEX FOR NEXT EXTENT.
         BCT   COUNT,MERGE2                  REDUCE NUMBER OF EXTENTS
*                                            AND CHECK NEXT ENTRY.
         LA    COUNT,1                       LAST EXTENT.
MERGE5   MVC   2(2,INDEX2),2(INDEX1)         RTA+1 OF EXTENT=RTA OF
*                                            ENTRY MOVE RTA OF ENTRY
         B     MERGE2                  CHECK FOR CONTIGUOUS
*                                      DADSMTBL ENTRIES
MERGE8   LA    R1,4                    SET
         SR    INDEX2,R1               ENTRY INDEX.
         MVC   0(4,INDEX2),0(INDEX1)   MOVE INTRY BEFORE EXTENT.
         LA    COUNT,1(COUNT)          INCREMENT EXTENT COUNT.
         B     MERGE2                  CHECK FOR CONTIG DADSMTBL
CHECK    EQU   *                                                 XM0835
         NC    K4(K4,INDEX2),K4(INDEX2) IS NEXT EXTENT IN F5     XM0835
*                                       ALL ZEROES               XM0835
         BZ    MERGE5                   IF YES, NO OVERLAPPING   XM0835
*                                       EXTENTS WERE FOUND       XM0835
         LTR   COUNT,COUNT              ALL SPACE ALLOCATED     XA01999
         BZ    MERGE5                   BRANCH IF YES           XA01999
*
*** THIS SECTION MERGES ENTRIES FROM THE DADSM EXTENT TABLE
*   WITH ENTRIES FROM INPUT FORMAT 5 DSCB WHEN OVERLAPPING
*   EXTENTS HAVE BEEN DETECTED AND SETS A SWITCH SO THAT THE DIRF
*   BIT WILL REMAIN ON AT EXIT FROM SCRATCH
*
OVERLAP  EQU   *                                                SA56400
         OI    DADSMTBL,ERXTENT         INDICATE OVERLAPPING    SA56400
*                                       EXTENTS EXIST           SA56400
         CLC   K0(TWO,INDEX1),K0(INDEX2)  IS RTA IN ENTRIES     SA56400
*                                       LOWER THAN RTA IN F5    SA56400
         BNL   NEXTRTA                  BR IF ENTRIES RTA IS    SA56400
*                                       HIGH OR EQUAL           SA56400
         MVC   K0(TWO,INDEX2),K0(INDEX1)  MOVE ENTRIES RTA      SA56400
*                                       OVER FORMAT 5 RTA       SA56400
NEXTRTA  EQU   *                                                SA56400
         CLC   K2(TWO,INDEX1),K2(INDEX2)  IS RTA+1 IN ENTRIES   SA56400
*                                       HIGHER THAN RTA+1 IN F5 SA56400
         BNH   MERGE2                   IF HI OR EQUAL, BRANCH  SA56400
         MVC   K2(TWO,INDEX2),K2(INDEX1)  MOVE ENTRIES RTA+1    SA56400
*                                       OVER F5 RTA+1           SA56400
         NC    K4(K4,INDEX2),K4(INDEX2) IS IT END OF INPUT F5   SA56400
         BZ    MERGE6                   BRANCH IF YES           SA56400
         CLC   K2(TWO,INDEX2),K4(INDEX2)  SHOULD EXTENTS        SA56400
*                                       BE COLLAPSED            SA56400
         BL    MERGE2                   BRANCH IF NO            SA56400
         CLC   K2(TWO,INDEX2),K6(INDEX2)  DOES CURRENT EXTENT   SA56400
*                                       IN FORMAT 5 ENGULF NEXT SA56400
*                                       EXTENT IN FORMAT 5      SA56400
         BNH   MERGE4                   BRANCH IF NO            SA56400
         MVC   K6(TWO,INDEX2),K2(INDEX2)  MOVE ENDING ADDRESS   SA56400
*                                       INTO NEXT EXTENT        SA56400
         B     MERGE4                                           SA56400
*
* THIS SECTION DETERMINES WHEN A FORMAT 5 DSCB NEEDS TO BE WRITTEN
* TO THE VTOC AND WHEN A NEW FORMAT 5 MUST BE READ.
*
MERGE10  BCT   COUNT1,OUTPUT7                REDUCE OUTPUT XFER COUNT
*                                            AND BRANCH TO OUTPUT CHECK
OUTPUT1  LTR   COUNT,COUNT                   CHECK NUMBER EXTENTS.
         BP    COLLAPSE                      EXTENTS LEFT.
OUTPUT2  CLI   INCCHHR+4,X'00'               ANY MORE FORMAT 5 DSCBS.
         BNE   DADSMIN                       YES.
OUTPUT3  LA    INDEX3,4(INDEX3)        INCREMENT OUTPUT INDEX.
         LTR   EXTCTR,EXTCTR           ANY MORE ENTRIES.
         BZ    OUTPUT5                      NO
         LTR   COUNT1,COUNT1                ARE 26 EXTENTS IN OUTPUT
         BP    OUTPUT4                      NO
         BAL   BRANCH,DADSMOUT              OUTPUT DADSM
         SR    HOLE,HOLE
OUTPUT4  EQU   *
         BCTR  COUNT1,0                      DECREMENT XFER COUNT
         LR    INDEX2,INDEX1           SET INDEX FOR XFER ENTRY.
*                                                                     $
         B     MERGE2                   CHK FOR CONTIG DADSM ENTRIES
OUTPUT5  EQU   *
         BAL   BRANCH,DADSMOUT              WRITE FORMAT 5.
         TM    CCW7+7,1                     IS FORMAT 0 PENDING
         BZ    FINISH                   BRANCH IF NO
         LH    WORKREG2,HOLENUM             INCREMENT HOLE COUNT
         LA    WORKREG2,1(WORKREG2)           IN DADSM TABLE.
         STH   WORKREG2,HOLENUM
         LA    WORKREG1,FINISH          SET RETURN ADDRESS.
         B     SETSEEK
*
* THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
EXECUTIO EQU   *
         ST    WORKREG2,IOB+16              SET CCW POINTER IN IOB.
         EXCP  IOB
         WAIT  ECB=ECB
         TM    ECB,X'20'                    TEST FOR I/O ERROR.
         BCR   5,BRANCH                     BRANCH IF NO ERROR.
         MVI   ERCODE+1,8                   SET ECRODE
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
         MVI   11(VOLISTX),4            SET ERROR CODE IN VOLIST.
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         DROP  R1                                                Y02078
*
* THIS SECTION BRANCHES TO THE LAST LOAD OF SCRATCH - IGG0290D.
*
FINISH   EQU   *
         IECRES LOAD,EXTPR=(WRKAREA),MODID=LOAD5,BRANCH=DIRECT   Y02080
*
OUTPUT6  EQU   *
         LTR   COUNT,COUNT                  ANY MORE EXTENTS       8105
         BZ    OUTPUT2                      NO, BRANCH             8105
         LA    BRANCH,BYINDEX               SET RETURN FROM DADSMOUT.
         LTR   COUNT1,COUNT1                26 EXTS XFERED TO OUTPUT.
         BZ    DADSMOUT                     YES-WRITE DADSM RECORD.
OUTPUT7  EQU   *
         LA    INDEX3,4(INDEX3)             NO-INCREMENT OUTPUT INDEX.
BYINDEX  EQU   *
         LTR   EXTCTR,EXTCTR           ANY MORE ENTRIES.
         BZ    MERGE6                        XFER EXTENTS TO OUTPUT.
         B     MERGE1                       CHECK EXTENTS AND ENTRIES
*
* THIS SECTION READS IN THE SECOND AND SUBSEQUENT FORMAT 5 DSCB'S.
*
DADSMIN  LA    WORKREG2,INCCHHR              MODIFY SEARCH ID EQUAL
         ST    WORKREG2,CCW9                 CHANNEL PROGRAM FOR
         MVI   CCW9,X'31'                    READING IN FORMAT 5.
         LA    WORKREG2,CCW9                READ KEY AND DATA ADDR.
         NI    CCW11+4,X'EF'                 TURN OFF SKIP FLAG ON
*                                            READ WRITE CHECK.
         MVC   SEEK+3(5),INCCHHR             CCHHR OF NEXT FORMAT5 IN
*                                            SEEK ADDRESS.
         BAL   BRANCH,EXECUTIO               READ IN NEXT FORMAT5.
         BAL   BRANCH,CVTORTA0               CONVERT FORMAT5 EXTENTS
         CLC   0(2,INDEX2),2(INDEX3)    ARE EXTENTS CONTIGUOUS.
         BH    NEXTOUT                  BRANCH IF NOT           SA56400
*                                       CONTIGUOUS              SA56400
         EX    R0,COLLAPS3
         LA    INDEX2,4(INDEX2)         UPDATE INPUT DSCB INDEX.
         BCTR  COUNT,0
NEXTOUT  EQU   *
*                                            TO RTA-RTA+1.
         MVC   NEXTDADS(5),INCCHHR           SET NEXT OUTPUT FORMAT5.
         MVC   INCCHHR(5),DS5PTRDS           SET NEXT INPUT FORMAT5.
         MVC   CCW9(4),CCW6                  RESET CHANNEL PROGRAM ADR.
*
* THIS SECTION DETERMINES WHETHER TWO FORMAT 5 OUTPUT EXTENTS ARE
* CONTIGUOUS AND, IF SO, COMBINES THEM INTO A SINGLE EXTENT.
*
COLLAPSE LTR   EXTCTR,EXTCTR                 ANY MORE ENTRIES.
         BZ    OUTPUT6                       NO.
COLLAPS1 CLC   0(2,INDEX1),2(INDEX3)         COMPARE FOR DADSM COLLAPSE
         BNE   OUTPUT6                       NO
         CLC   2(2,INDEX1),0(INDEX2)        COLLAPSE
         BNE   OUTPUT6                       NO
COLLAPS3 EQU   *
         MVC   2(2,INDEX3),2(INDEX2)         YES
         LA    INDEX1,4(INDEX1)              INCREMENT DADSMTBL INDEX.
         LA    INDEX2,4(INDEX2)              INCREMENT INPUT INDEX.
         BCT   EXTCTR,COLLAPS2
         BCT   COUNT,OUTPUT6                 NO MORE ENTRIES-OUTPUT
         B     OUTPUT2
COLLAPS2 BCT   COUNT,COLLAPS1               CHECK FOR ANOTHER COLLAPSE
         B     OUTPUT2
*
* THIS ROUTINE CONVERTS THE FORMAT 5 OUTPUT EXTENTS FROM RTA/RTA+1
* TO XXYYZ FORMAT AND WRITES THE FORMAT 5 DSCB TO THE VTOC.
*
DADSMOUT LR    WORKREG1,BRANCH               SAVE BRANCH ADDRESS
         STM   R6,R11,SAVEREGS          SAVE VOLATILE REGS.
         OI    CCW11+4,X'10'                 TURN ON SKIP FLAG.
         LA    RINEND,26                     SET COUNT INDEX
         LA    ROUTSCAN,OUTDSCB+5            SET OUTPUT INDEX
         LA    RINSCAN,OUTDSCB+36            SET INPUT INDEX
NEXTEXT  LH    RTKK,DS4DEVSZ+2               LOAD TRACKS PER CYLINDER
         LH    R1,0(RINSCAN)                 R1= RTA
         LH    R3,2(RINSCAN)                 R3= RTA+1
         SR    R0,R0                         ZERO
         LR    R2,R0                         DIVIDE REGS.
         LR    R4,R3
         SR    R4,R1                         R4=RTA+1-RTA
         CLR   R4,RTKK
         BNL   MORETH1                       MORE THAN ONE CYL POSSIBLE
         MVC   2(2,ROUTSCAN),ZERO            ZERO YY.
         STC   R4,4(ROUTSCAN)                SET Z.
         B     MOVEXTA
MORETH1  DR    R0,RTKK                       RTA  /RTKK
         DR    R2,RTKK                       RTA+1/RTKK
         SR    R3,R1
         LTR   R0,R0                         EXCESS TRACKS
         BP    NOTCYL                        YES
         STC   R2,4(ROUTSCAN)                SET Z
         B     STORECYL
NOTCYL   SR    RTKK,R0
         LTR   R3,R3
         BZ    ADD2
         BCTR  R3,0
ADD2     AR    RTKK,R2
         STC   RTKK,4(ROUTSCAN)              SET Z
STORECYL STH   R3,HOLD
         MVC   2(2,ROUTSCAN),HOLD            SET YY.
MOVEXTA  MVC   0(2,ROUTSCAN),0(RINSCAN)      SET XX
         LA    ROUTSCAN,5(ROUTSCAN)          INCREMENT OUTPUT INDEX
         LA    RINSCAN,4(RINSCAN)            INCREMENT INPUT INDEX
         BCT   RINEND,NEXTEXT                BACK FOR NEXT EXTENT
         LM    R6,R11,SAVEREGS               RESET REGISTERS
         OC    OUTDSCB+5(130),OUTDSCB+5  OUTPUT AREA ZERO         20055
         BE    ZEROUT                        YES
         MVC   OUTDSCB(4),FIVE               SET UP FORMAT 5
         MVC   OUTDSCB+4(40),OUTDSCB+5       MOVE OVER ID BYTE
         MVI   OUTDSCB+44,X'F5'              INSERT ID BYTE.
ZEROUT   EQU   *
         MVC   OUTDSCB+135(5),NEXTDADS      SET DADSM POINTER.
         EX    R0,COMPNEXT              IS THIS CHAIN ADDR VALID.
         BNE   SKIPFLAG                 YES-DON'T MODIFY CHAIN.
         EX    R0,ZEROPTR               NO-INSERT CORRECT CHAIN.
SKIPFLAG EQU   *
         OI    CCW11+4,X'10'            TURN ON SKIP FLAG.
         CLI   INCCHHR+4,X'00'              ANY MORE FORMAT 5
         BE    FINDHOLE                     FIND HOLE
SETSEEK  MVC   SEEK+3(5),OUTCCHHR            SET SEEK ADDRESS.
         LA    WORKREG2,CCW6                 SET CCW ADDRESS FOR WRITE.
         BAL   BRANCH,EXECUTIO               WRITE OUT UPDATED DADSM.
COMPNEXT EQU   *
         CLC   OUTCCHHR(5),NEXTDADS          NEXT OUTPUT EQU THIS OUT
         BE    NXTOUTIN
SETNXT   MVC   OUTCCHHR(5),NEXTDADS     SET NEXT DADSM CCHHR.
         B     TESTZERO                     TEST FOR FORMAT 0 PENDING
NXTOUTIN MVC   OUTCCHHR(5),INCCHHR           SET NEXT OUTPUT
TESTZERO TM    OUTDSCB+139,X'FF'            TEST FOR END OF OUTPUT.
         BNE   SETOUT                       BRANCH IF NO.
         TM    OUTCCHHR+4,X'FF'             TEST FOR END OF INPUT.
         BZ    SETOUT                       BRANCH IF YES.
         OI    CCW7+7,1                     INDICATE FORMAT 0 PENDING.
SETOUT   XC    OUTDSCB(140),OUTDSCB          ZERO OUTPUT AREA
         LA    INDEX3,OUTDSCB+36             SET OUTPUT INDEX.
         LR    BRANCH,WORKREG1               RESET BRANCH REG.
         LA    COUNT1,26                     SET INDEX FOR OUTPUT XFER.
         BR    BRANCH                        EXIT FROM SUBROUTINE.
*
* THIS ROUTINE SEARCHES FOR AN UNUSED DSCB IN THE VTOC.
*
FINDHOLE LR    TEMP,COUNT                   ANY EXTENTS
         ALR   TEMP,EXTCTR                  OR ENTRIES LEFT
         BZ    ZEROPTR                      NO
         CLC   OUTCCHHR(5),NEXTDADS         NEED HOLE
         BE    SEARCHOL                 YES-SEARCH FOR A HOLE.
         CLI   NEXTDADS+4,0             IS THERE ANOTHER F5 DSCB.
         BNE   SETSEEK                  YES-NO HOLE IS NEEDED.
SEARCHOL EQU   *
         MVC   SEEK+3(5),VTOCADR            YES SET SEEK ADDRESS
         MVC   INLINESK+K2(K4),OUTCCHHR  INSERT OLD F5 CCHHR     Y02080
         LA    WORKREG2,CCW1                 SET UP CHANNEL PROG.ADD.
         BAL   BRANCH,EXECUTIO               FIND HOLE FOR NEXT OUTPUT
*                                            AND OUTPUT DADSM.
         LH    WORKREG2,HOLENUM
         BCTR  WORKREG2,0
         STH   WORKREG2,HOLENUM         SAVE NO OF AVAIL HOLES.
         MVC   NEXTDADS(5),OUTDSCB+135       SET NEXT OUTPUT
         B     SETNXT
ZEROPTR  MVC   OUTDSCB+135(5),INCCHHR        ZERO POINTER
         B     SETSEEK
*
* THIS ROUTINE CONVERTS THE FORMAT 5 DSCB EXTENTS FROM XXYYZ TO
* RTA/RTA+1 FORMAT.
*
CVTORTA0 STM   R6,R11,SAVEREGS               SAVE REGS.
         SR    R2,R2                         ZERO R2.
         SR    COUNT,COUNT                   AND COUNT.
         MVC   INDSCB+44(90),INDSCB+45       MOVE INPUT OVER ID BYTE.
         LA    RINSCAN,INDSCB+4             SET INPUT INDEX
         LA    ROUTSCAN,INDSCB+4       SET OUTPUT INDEX.
         LA    RX,26                         SET CONVERT COUNT.
TEST0    CLC   0(2,RINSCAN),ZERO             EXTENT ZERO.
         BE    INCRIN                        YES.
         MVC   HOLD(5),0(RINSCAN)            HOLD XXYYZ.
         LH    R1,HOLD+2                     R1=YY.
         MH    R1,DS4DEVSZ+2                 MULT BY TRACKS PER CYL.
         IC    R2,HOLD+4                     R2=Z.
         ALR   R1,R2                         R1= TRACKS+Z.
         AH    R1,HOLD                       R1=RTA+1.
         STH   R1,2(ROUTSCAN)                SET RTA+1 IN OUTPUT.
         MVC   0(2,ROUTSCAN),HOLD            SET RTA IN OUTPUT.
         LA    ROUTSCAN,4(ROUTSCAN)          INCREMENT OUTPUT INDEX.
         LA    COUNT,1(COUNT)                INCREMENT CONVERT COUNT.
INCRIN   LA    RINSCAN,5(RINSCAN)            INCREMENT INPUT INDEX.
         BCT   RX,TEST0                      BACK FOR NEXT CONVERT
         ST    RX,0(ROUTSCAN)           CLEAR NEXT ENTRY.
         LM    R6,R11,SAVEREGS               RESET REGS.
         LA    INDEX2,INDSCB+4         SET INPUT INDEX.
         BR    BRANCH                        BRANCH OUT.
*
*** CONSTANTS
*
         DS    0F
FIVE     DC    X'05050505'
*
*** TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LOAD5,0D),SVC=029,LENGTH=,BRT=YES          Y02080
         SPACE 2                                                 Y02078
         IECDSECS CVT,RB,TCB,EXPAND=YES  CVT, RB, AND TCB DSECTS Y02078
WORKAREA IECSCRWA EP,F4,D1=(5)          SCRATCH WORK AREA        Y02080
SAVEREGS EQU   IECREGSV+12              REGISTER SAVE AREA       Y02080
ZERO     EQU   CCW4+4
         END   IGG0290C                                          A37199
