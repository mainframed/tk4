 TITLE ' IGG032I6 - ISAM ALLOCATE - UPDATE DADSM'
IGG032I6 CSECT
*
*MODULE NAME = IGG032I6
*
*DESCRIPTIVE NAME = ISAM ALLOCATE - UPDATE DADSM
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*1231000800-001000,002800-003200,032800-033600,074800,076600     A38860
*
*          RELEASE 16 DELETIONS
*1463036400,038000,062600                                         16787
*          RELEASE 17 DELETIONS
*2136000740,036800                                                18916
*          RELEASE 18 DELETIONS
*3123024200,029800-030000,031400-031600,038200,043400             23214
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*          RELEASE 21 DELETIONS
*1231000400,001400-001600,015400,022000,022400,023200            S21042
*1231000400,015400,022000,023800,028000,029000,029400,029800,    A42208
*1231030200,030800,031300,031660-031800,033800,034200,035000,    A42208
*1231036000,036600-038400,042600-043400,044400,047800,048200,    A42208
*1231048600,056200-056400,057200,062400-062700                   A42208
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,000680-000690,002000,002700,004600,005000,    Y02080
*0000005600-005800,006450-006500,006800,016000,021880-022080,    Y02080
*0000022600,022806-022807,022809,022812,022817,022819,022840-    Y02080
*0000022920,023200-023600,024400,024800,030680,032000,032530,    Y02080
*0000032600-033100,034600,035400,047400,047680-047720,049000,    Y02080
*0000054400,054900,056300,057200,063600-063800,064800-065000,    Y02080
*0000066600-066760,067040-076740,076780                          Y02080
*0000022821,023000                                               Y02082
*0000006500-006520,032250-032510,050800                          XM2969
*
*STATUS CHANGE LEVEL 006
*
*FUNCTION - THIS MODULE REDUCES THE FORMAT 5 DSCB(S) BY THE SPACE THAT
*           WAS JUST ALLOCATED. IT ALSO CONVERTS THE CCHHR OF THE
*           FORMAT 1 DSCB (FOR THE FIRST VOLUME ONLY) TO A TTR AND
*           STORES IT IN THE JFCB.
*
*ENTRIES - ENTRY POINT IGG032I6 - ENTRY IS MADE VIA A BRANCH FROM
*          IGG032I3,IGG032I4, IGG032I5.
*
*
*INPUT - AT ENTRY TO THIS MODULE REGISTER 13 POINTS TO THE ALLOCATE
*        WORKAREA WHICH CONTAINS THE FORMAT 4 DSCB, THE VTOCADR,
*        THE DADSMADR, AND A SORTED DADSM TABLE CONTAINING THE
*        EXTENTS THAT WERE ACTUALLY ALLOCATED.
*
*OUTPUT - UPDATED FORMAT 5 DSCB'S
*
*
*EXTERNAL ROUTINES
*   SVCS  ISSUED IN MACRO EXPANSIONS
*   EXCP(0) READ FROM OR WRITE TO DIRECT ACCESS DEVICE
*   WAIT(1) WAIT FOR EVENT CONTROL BLOCK
*
*
*EXIT - NORMAL - BRANCH TO IGG032I7
*     - ERROR - BRANCH TO IGG032I7 WITH ERROR CODE IN REGISTER 5
*
*              0C   PERMANENT I/O ERROR
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = AS DEFINED IN THE IECALLWA MACRO          XM2969
*          RPS WORK AREA = AS DEFINED IN THE IECRPS MACRO        XM2969
*
*
*TABLES/WORK AREAS - DADSM WORK AREA DESCRIBED BY MACRO IECALLWA
*
*              ***************************************
*              *             DADSM TABLE             *
*              ***************************************
*
*              ***************************************
*              *        *         *                  *
*              *  TYPE  *  NO OF  *     USED HOLE    *
*              *  FLAG  * ENTRIES *      COUNTER     *
*              *        *         *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*
*
*              TYPE FLAG = 02 - BPAM DIRECTORIES REQUESTED.
*
*                        = 40 - USER LABELS REQUESTED
*
*                        = 80 - SET MUST COMPLETE IS ACTIVE
*
*
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.
*
*
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.
*
*
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT.
*
*
*ATTRIBUTES - REENTRANT
*
*
*REGISTER USAGE:
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
ALTRWKA  EQU   8                  ALTERNATE WORKAREA PTR         S21042
R9       EQU   9
RA       EQU   10
RB       EQU   11
RJFCB    EQU   11                 POINTER TO JFCB                S21042
RC       EQU   12
RWKA     EQU   13                 WORK AREA POINTER.
RBAK     EQU   14                 RETURN REGISTER
RWRK     EQU   15                 WORK REGISTER
RF       EQU   15
RERR     EQU   15                 ERROR CODE REGISTER
RCVT     EQU   15                 POINTER TO CVT                 S21042
RMSGL    EQU   11                 ERROR MESSAGE LENGTH REGISTER.
RMA      EQU   10                 ERROR MESSAGE ADDRESS REGISTER
RBASE    EQU   12                 BASE REGISTER.
RCNT     EQU   1                  COUNT REGISTER
RTAB     EQU   2                  DADSM ENTRY POINTER
RIN      EQU   3                  INPUT EXTENT POINTER
ROUT     EQU   4                  OUTPUT HOLE POINTER
ROEND    EQU   5                  OUTPUT END POINTER
*
* OTHER EQUATES
*
FIVE     EQU   5                   CONSTANT OF FIVE              Y02080
K12      EQU   12                  CONSTANT OF TWELVE            Y02080
CHAINED  EQU   X'FF'               CHAINING POINTER MASK         A42208
*
         BALR  RBASE,0
         USING CONVERT,RBASE                                     S21042
         USING CVT,RCVT                                          S21042
         USING JFCBKEN,RJFCB                                     S21042
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080
*
CONVERT  EQU   *                                                 S21042
         CLI   CTR,X'00'                IS THIS THE FIRST VOLUME S21042
         BNE   DADSMSTR                 BRANCH IF NOT            S21042
         LA    R1,DEB                   POINTER TO DEB           S21042
         LA    R2,MBBCCHHR              POINTER TO MBBCCHHR      S21042
         XC    MBBCCHHR,MBBCCHHR        CLEAR CONVERT AREA       Y02080
         MVC   MBBCCHHR+3(5),SAVEADR    MOVE IN CCHHR OF F1      S21042
         STM   R8,RWKA,IECREGSV+K12     SAVE VOLATILE REGISTERS  Y02080
         LR    ALTRWKA,RWKA             GET POINTER TO WORKAREA  S21042
         DROP  RWKA                                              S21042
         USING ALLOCWKA,ALTRWKA         WORK AREA ADDRESSABILITY Y02080
         L     RCVT,CVTPTR              LOAD CVT BASE            S21042
         L     RCVT,CVTPRLTV            LOAD CONVERT ROUTINE     S21042
*                                       BASE                     S21042
         BALR  RBAK,RCVT                CONVERT CCHHR            S21042
         LM    R8,RWKA,IECREGSV+K12     RESTORE VOLATILE REGS    Y02080
         DROP  ALTRWKA                                           S21042
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080
         ST    R0,PDLIST                                         S21042
         MVC   JFCBDSCB,PDLIST          MOVE TTR TO JFCB         Y02082
*
* THIS SECTION INITIALIZES THE FORMAT 5 DSCB OUTPUT RECORD,
* THE FORMAT 5 INPUT AND OUTPUT ADDRESSES, PLUS VARIOUS POINTERS
* AND SWITCHES.
*
DADSMSTR EQU   *                        BRANCH LABEL             Y02082
         MODESET EXTKEY=DATAMGT         SWITCH TO DATAMGT KEY    Y02082
         MVC   DS1DSNAM(L'DS5KEYID),FIVES  MOVE IN F5 KEY ID     Y02082
         XC    CCHHRSAV,CCHHRSAV        CLEAR CCHHR AREA         Y02080
         MVI   SWITCH,OUTBYP+FRSTF5     SET THE FIRST F5 AND     A42208
*                                       READ/WRITE SWITCH        A42208
         SR    RCNT,RCNT
         IC    RCNT,AENTRYNM           NBR OF DADSMTBL ENTRIES   Y02080
         LA    ROEND,F5OUT+108    PICK END OF OUTPUT POINTER.
         LA    RTAB,AENTRIES           PTR TO FIRST ENTRY        Y02080
RESTOUT  LA    ROUT,F5OUT+4       GET POINTER TO START OF OUTPUT AREA
RESTORE  XC    IECSDSL1+4(136),IECSDSL1+4        CLEAR INDICATED BYTES
         MVC   TTRLL(5),DADSMADR   INSERT CCHHR FOR FIRST DADSM RECORD
         MVC   SAVEADR(5),TTRLL
         MVC   SAVEADR+5(5),TTRLL
FSTRD    BAL   RBAK,READF5
*
* THIS SECTION DETERMINES WHEN THE DADSM TABLE EXTENTS SHOULD BE
* MERGED INTO THE OUTPUT FORMAT 5 DSCB.
*
DUELOOP  CLR   ROEND,ROUT         IS OUTPUT AREA FULL.
         BNH   TEST1
COMZE    CLC   0(4,RIN),ZEROS
         BE    CHEND
         LTR   RCNT,RCNT          IS TABLE EMPTY
         BZ    MOVEOUT            YES MOVE INPUT TO OUTPUT
         CLC   2(2,RTAB),2(RIN)   IS THIS SPACE ALLOCATED.
         BL    ALTEREX            CHECK FOR MIDDLE OR FRONT ALL.IF LOW.
         BE    TOTALL             CHECK FOR TOTAL OR REAR  ALL. IF EQ.
*
* THIS SECTION MOVES FORMAT 5 DSCB EXTENTS TO THE OUTPUT AREA.
*
MOVEOUT  EQU   *                                                 A42208
         TM    SWITCH,DADBYP            IS A F5 WRITE PENDING?   A42208
         BO    CHEXTRTN                 BRANCH IF YES
         MVC   0(4,ROUT),0(RIN)         INSERT INPUT INTO OUTPUT
INPUT    BCT   RWRK,UPDATEPT      UPDATE POINTER IF NOT EMPTY
         LA    ROUT,4(ROUT)
         OI    SWITCH,PRCNTL            SET PROCESS CNTRL SWITCH A42208
*
* THIS SECTION TESTS FOR MULTIPLE FORMAT 5 DSCB'S.
*
CHECHAIN TM    DS5PTRDS+4,CHAINED       IS INPUT F5 CHAINED?     A42208
         BZ    CHECALT            NO-CHECK TO SEE IF RECORD WAS ALTERED
         MVC   ALLCCHHR,TTRLL           SAVE CCHHR OF F5         XM2969
         TM    SWITCH,RCDALT            WAS THE F5 ALTERED?      A42208
         BO    BRTORDF5                 IF YES, BRANCH            23214
         XI    SWITCH,OUTBYP            FLIP/FLOP RD/WR SWITCH   A42208
*
* THIS SECTION IS EXECUTED IF THE OUTPUT F5 IS THE SAME AS THE
* INPUT F5 RECORD. THE WRITING OF THE OUTPUT F5 IS BYPASSED, AND
* THE OUTPUT AREA IS CLEARED.
*
AROUND   EX    0,RESTORE
         LA    ROUT,F5OUT+4
         NI    SWITCH,X'FF'-PRCNTL      CLEAR PROCESS CONTROL    Y02080
*
* THIS SECTION LINKS TO READ THE NEXT FORMAT 5 DSCB.
*
BRTORDF5 BAL   RBAK,SAVEID
         B     DUELOOP
*
* THIS SECTION TESTS IF THE LAST FORMAT 5 OUTPUT RECORD WAS ALTERED.
* IF IT WAS ALTERED, THE FORMAT 5 IS WRITTEN. IF NOT, THE WRITING
* OF THE F5 IS BYPASSED.
*
CHECALT  EQU   *                                                 A42208
         TM    SWITCH,RCDALT            WAS THE F5 ALTERED?      A42208
         BZ    EXIT1                    IF NOT, BRANCH            23214
WRITEFNL EQU   *                                                 A42208
         OI    SWITCH,WRTFNL            SET WRITE LAST F5 SWITCH A42208
         XC    CCHHRSAV,CCHHRSAV        CLEAR CHAIN ADDR BEFORE  Y02080
         BAL   RBAK,WRITEF5            WRITING FINAL RECORD.
*
* THIS SECTION BRANCHES TO THE NEXT LOAD OF ISAM ALLOCATE.
*
EXIT1    EQU   *                        BRANCH LABEL             XM2969
         OI    ACNVSW,AI7CNTRL          SET BIT TO INDICATE      XM2969
*                                       NORMAL ENTRY TO IGG032I7 XM2969
*                                       FROM IGG032I6            XM2969
XCT      EQU   *                        BRANCH LABEL             Y02080
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         IECRES LOAD,EXTPR=(RWKA),MODID=LASTLOAD,BRANCH=DIRECT   Y02080
*
* THIS SECTION TESTS IF ANY FORMAT 5 OTHER THAN THE FIRST HAS
* BEEN READ IN.
*
TEST1    EQU   *                                                 A42208
         TM    SWITCH,PRCNTL            IS PROCESS CONTROL       A42208
*                                       SWITCH ON?               A42208
         BZ    TSTCH
         TM    SWITCH,OUTBYP            IS THE NUMBER OF WRITES  A42208
*                                       EQUAL TO THE NBR OF RDS? A42208
         BZ    TSTCH                    BRANCH IF READ BEFORE WRITE
         MVC   CCHHRSAV,SAVEADR+FIVE    MOVE IN CHAIN ADDRESS    Y02080
         B     BRTOWR5
*
* THIS SECTION TESTS IF THERE IS ANOTHER F5 IN THE CHAIN.
*
TSTCH    EQU   *                                                 A42208
         TM    DS5PTRDS+4,CHAINED       IS THE INPUT F5 CHAINED? A42208
         BZ    CHEXT              NO-CHECK TO SEE IF NEXT EXTENT ZERO.
WRITE1   EQU   *                        BRANCH LABEL             Y02080
         MVC   CCHHRSAV,DS5PTRDS        INSERT CHAIN ADDRESS     Y02080
BRTOWR5  BAL   RBAK,WRITEF5
         B     DUELOOP
*
* THIS SECTION TESTS IF THERE HAVE BEEN MORE INPUT F5 DSCB'S THAN
* OUTPUT F5 DSCB'S. IF SO, IT SETS UP TO WRITE A FORMAT 0 DSCB
* OVER THE LAST INPUT F5.
*
CHEND    EQU   *                                                 A42208
         TM    SWITCH,FRSTF5            IS THE FIRST F5 IN CORE? A42208
         BO    WRITEFNL
         TM    SWITCH,OUTBYP            IS THE NUMBER OF WRITES  A42208
*                                       EQUAL TO THE NBR OF RDS? A42208
         BO    WRITEZER                 BRANCH IF NO             A42208
LASTADDR EQU   *                                                 A42208
         MVC   TTRLL(5),SAVEADR+5       SET UP SEARCH ID ADDR    A42208
         B     WRITEFNL                 GO WRITE THE LAST F5     A42208
WRITEZER EQU   *                                                 A42208
         TM    SWITCH,NEWF5             TEST IF NEW F5 CREATED   A42208
         BO    LASTADDR                 BRANCH IF YES            A42208
         OI    SWITCH,WRZERO            SET WRITE F0 SWITCH      A42208
         B     WRITEFNL                 GO WRITE LAST F5         A42208
*
* THIS SECTION MERGES A DADSM TABLE ENTRY THAT IS ALLOCATED SPACE
* FROM THE BEGINNING OR THE MIDDLE OF THE INPUT F5 EXTENT.
*
ALTEREX  EQU   *                                                 A42208
         OI    SWITCH,RCDALT            SET F5 ALTERED SWITCH    A42208
         TM    SWITCH,DADBYP            IS THE F5 WRITE BYPASS   A42208
*                                       SWITCH ON?               A42208
         BO    CHEXTRTN                 BRANCH IF ON
         CLC   0(2,RTAB),0(RIN)   TEST FOR MIDDLE OR FRONT ALLOCATION
         BNE   MIDDLE             LOW NOT EQUAL MIDDLE ALLOCATION
FRONT    MVC   0(2,ROUT),2(RTAB)  FRONT ALLOCATE INSERT NEW  LOW RTA
         MVC   2(2,ROUT),2(RIN)   KEEP OLD UPPER RTA
DECRMNT  BCTR  RCNT,0             DECREMENT TABLE ENTRY COUNTER
         LA    RTAB,4(RTAB)       UPDATE POINTER TO NEXT TABLE ENTRY
         B     INPUT
UPDATEPT LA    ROUT,4(ROUT)
UPDATIN  LA    RIN,4(RIN)                    UPDATE INPUT POINTER
         B     DUELOOP
MIDDLE   MVC   0(2,ROUT),0(RIN)   MIDDLE ALLOCATE INSERT LOW OLD RTA
         MVC   2(2,ROUT),0(RTAB)  INSERT NEW UPPER RTA
         LA    ROUT,4(ROUT)       UPDATE OUTPUT AREA POINTER
         CLR   ROEND,ROUT         IS OUTPUT AREA FULL
         BH    FRONT              NO - INSERT NEXT EXTENT
         MVC   0(2,RIN),2(RTAB)
         LA    RTAB,4(RTAB)
         BCTR  RCNT,0
         B     TEST1
*
* THIS SECTION MERGES A DADSM TABLE ENTRY THAT IS ALLOCATED SPACE
* FROM THE ENTIRE INPUT F5 EXTENT OR FROM THE END OF THIS EXTENT.
*
TOTALL   EQU   *                                                 A42208
         OI    SWITCH,RCDALT            SET F5 ALTERED SWITCH    A42208
         CLC   0(2,RIN),0(RTAB)   IS ENTIRE EXTENT ALLOCATED.
         BNE   NOTALL              NO-GO ND INSERT LOW OLD RTA
         SH    ROUT,FOUR
         B     DECRMNT
NOTALL   EQU   *                                                 A42208
         TM    SWITCH,DADBYP            IS A F5 WRITE PENDING?   A42208
         BO    CHEXTRTN                 BRANCH IF ON
         MVC   0(2,ROUT),0(RIN)         INSERT LOW OLD RTA
         MVC   2(2,ROUT),0(RTAB)  INSERT NEW UPPER RTA
         B     DECRMNT
*
* THIS SECTION SEARCHES FOR A HOLE IN THE VTOC TO WRITE THE NEW F5.
*
CHEXT    CLC   0(4,RIN),ZEROS
         BE    WRITEFNL           WRITE LAST DADSM
SEARCH   MVC   SAVEADR(5),TTRLL         SAVE PREVIOUS DADSM CCHHR
         MVC   TTRLL(5),VTOCADR
         LA    R0,CCW1
         MVI   CCW5+4,X'30'
         BAL   RB,CHANNLGO        SEARCH FOR HOLE
         LA    R0,1
         AH    R0,UHOLECTR
         STH   R0,UHOLECTR        UPDATE USED HOLE COUNTER
         MVC   CCHHRSAV,TTRLL                                    Y02080
         MVC   TTRLL(5),SAVEADR        INSERT ID OF THIS DADSM
         BAL   RBAK,WRITEF5             WRITE THE NEW F5         A42208
         MVC   TTRLL,CCHHRSAV                                    Y02080
         MVC   SAVEADR+FIVE(FIVE),CCHHRSAV  INIT OUTPUT F5 ADDR  Y02080
         OI    SWITCH,NEWF5             SET NEW F5 CREATED BIT   A42208
         B     DUELOOP                                           A42208
*
* THIS SECTION CONVERTS DADSM ENTRIES FROM RTA/RTA+1 BACK TO XXYYZ
* BEFORE WRITING THE FORMAT 5 DSCB.
*
WRITEF5  LA    ROUT,F5OUT+4             LOAD POINTER TO OUTPUT AREA
         TM    SWITCH,WRTFNL            IS WRITE FINAL RECORD    A42208
*                                       SWITCH ON?               A42208
         BO    CHEXTRTN                 BRANCH IF YES
         OI    SWITCH,DADBYP            SET DADSM WRITE PENDING  A42208
         B     DUELOOP                  GO PROCESS DADSM
CHEXTRTN EQU   *                        BRANCH LABEL             Y02080
         ST    R4,FULLWORD              SAVE OUTPUT POINTER      Y02080
         LA    R5,DS1DSNAM+5            LOAD POINTER TO CONVERTED AREA
         LA    RA,26                    SET TO MAXIMUN NBR OF EXTENTS
         LH    R0,DS4DEVSZ+2            GET NBR OF TRKS/CYL
NEXTEXT  SR    R6,R6                    CLEAR HIGH DIVIDEND REGISTERS
         SR    R8,R8
         SR    R9,R9                    CLEAR FULL CYLINDER REGISTER
         LH    R7,0(ROUT)               GET EXTENT RTA
         LTR   R7,R7                    IS THIS EXTENT ZERO
         BNZ   CVNT                     BRANCH, EXTENT NOT ZERO  XM2969
         CH    RA,H26                   IF R10 = 26, THEN ALL    XM2969
*                                       EXTENTS ARE ZERO         XM2969
         BNZ   STORE                    BRANCH IF NOT 26         XM2969
         OI    ACNVSW,AF5ZERO           SET BIT TO INDICATE F5   XM2969
*                                       WITH ALL ZERO EXTENTS    XM2969
         B     STORE                    CONTINUE                 XM2969
CVNT     EQU   *                        BRANCH LABEL             XM2969
         LH    R9,2(ROUT)               GET EXTENT RTA+1
         DR    R6,R0                    CONVERT RTA TO CYL/TRK
         DR    R8,R0                    CONVERT RTA+1 TO CYL/TRKS
         SR    R9,R7                    CALCULATE CYL DIFFERENCE
         SR    R8,R6                    CALCULATE TRK DIFFERENCE
         LTR   R9,R9                    IS CYL DIFFERENCE ZERO
         BZ    STORE                    BRANCH IF YES
         LTR   R6,R6                    IS RTA TRK REMAINDER ZERO
         BZ    STORE                    BRANCH IF YES
         AR    R8,R0                    ADD TRK CONSTANT TO TRK DIFF
         BCTR  R9,0                     DECREMENT NBR OF CYLS
STORE    STH   R9,2(ROUT)               STORE NBR OF FULL CYLINDERS
         MVC   0(4,R5),0(ROUT)          MOVE RTA AND CYLS TO OUTPUT
         STC   R8,4(R5)                 STORE NBR OF EXCESS TRKS
         LA    R5,5(R5)                 STEP CONVERTED AREA POINTER
         LA    ROUT,4(ROUT)             STEP OUTPUT POINTER
         BCT   RA,NEXTEXT               BRANCH IF MORE OUTPUT TO PROC
         MVC   DS1PTRDS,CCHHRSAV        INSERT CHAIN ADDRESS     Y02080
INSERTF5 MVC   DS1DSNAM+4(40),DS1DSNAM+5  OPEN F5 HOLE
         MVI   DS1FMTID,X'F5'           INSERT FORMAT ID
         L     R4,FULLWORD              RESTORE OUTPUT POINTER   Y02080
         LA    ROEND,F5OUT+108          RELOAD END OF OUTPUT POINTER
SKIPF5   EQU   *                                                  16787
         MVI   CCW11+4,X'10'            SET SKIP FLAG FOR WRITE CHECK
         LA    R0,CCW6                  START CHANNEL PROG AT CCW6
         BAL   RB,CHANNLGO              GO WRITE THIS DADSM RECORD
         MVC   TTRLL(5),DS1PTRDS        SET UP NEXT OUTPUT DADSM ADR
         EX    0,RESTORE                CLEAR OUTPUT AREA
         XI    SWITCH,OUTBYP            FLIP/FLOP RD/WR SWITCH   A42208
WRTRTN   EQU   *                                                 A42208
         NI    SWITCH,X'FF'-DADBYP      CLEAR F5 WRITE PENDING   Y02080
         BR    RBAK
*
* THIS SECTION READS IN A FORMAT 5 DSCB AND CONVERTS THE EXTENTS
* FROM XXYYZ TO RTA/RTA+1.
*
SAVEID   MVC   SAVEADR(5),TTRLL
         MVC   SAVEADR+5(5),DS5PTRDS
         NI    SWITCH,X'FF'-FRSTF5      CLEAR FIRST F5 SWITCH    Y02080
         MVC   TTRLL(5),DS5PTRDS
READF5   LA    RIN,DS5AVEXT       RESET INPUT POINTER.
         LR    R8,RIN             SET UP POINTER FOR CONVERTED EXTENT.
         LA    RWRK,26            INSERT MAX NUMBER OF EXTENTE.
         LA    R0,CCW9
         MVI   CCW11+4,X'00'
         BAL   RB,CHANNLGO        READ DADSM.
         MVC   DS5KEYID+44(90),DS5KEYID+45   REMOVE ID
         SR    R6,R6
TEST0    CLC   0(2,RIN),ZEROS     EXTENT ZERO
         BE    INCRIN             YES  INCREMENT REGISTER
         MVC   CCW12(5),0(RIN)     ALIGN EXTENT TO FULL WORD
         LH    R7,CCW12+2         LOAD NUMBER OF CYLINDERS
         MH    R7,DS4DEVSZ+2      MULTIPLY BY TRACK CONSTANT
         IC    R6,CCW12+4         ODD TRACKS.
         AR    R7,R6              ADD ODD TRACKS FOR TOAL TRACKS
         AH    R7,CCW12           ADD RTA
         STH   R7,2(R8)        STORE RTA+1 INTO INPUT CONVERTED AREA.
         MVC   0(2,R8),CCW12      MOVE RTA TO CONVERTED INPUT AREA.
         LA    R8,4(R8)           UPDATE POINTER TO NEXT SPACE.
INCRIN   LA    RIN,5(RIN)         INCREMENT INPUT POINTER
         BCT   RF,TEST0           PROCESS NEXT EXTENT
         LA    RIN,DS5AVEXT       RESET INPUT POINTER.
         XC    0(26,R8),0(R8)      CLEAR EXCESS BITS
         LA    RWRK,26            RESET COUNT OF EXTENTS.
         XI    SWITCH,OUTBYP            FLIP/FLOP RD/WR SWITCH   A42208
         BZ    LABEL                    BRANCH IF NBR OF READS   A42208
*                                       EQUALS NBR OF WRITES     A42208
         MVC   TTRLL(5),SAVEADR
LABEL    BR    RBAK                     RETURN TO CALLING ROUTINE
*
* THIS SECTION EXECUTES A CHANNEL PROGRAM.
*
CHANNLGO MVC   SEEK+3(5),TTRLL          INSERT SEEK ADDRESS FOR IOS
         STM   RF,R1,IECREGSV+K12       SAVE REGISTERS 15 - 0    Y02080
         ST    R0,IOB+16          STORE STARTING CCW INTO IOB.
         MVI   ECB,X'00'          CLEAR STATUS BYTE OF ECB.
         EXCP  IOB                EXECUTE CHHNNEL PROGRAM.
         WAIT  ECB=ECB
         LM    RF,R1,IECREGSV+K12       RESTORE REGISTERS        Y02080
         TM    ECB,X'20'          TEST FOR PERM IO ERROR
         BCR   5,RB               NO - CONTINUE PROCESSING
         LA    ROEND,12
         B     XCT
*
* CONSTANTS
*
ZEROS    DC    F'0'
FIVES    DC    X'05050505'
FOUR     DC    H'4'
H26      DC    H'26'                    CONSTANT OF 26           XM2969
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LASTLOAD,I7),SVC=032,LENGTH=,BRT=YES       Y02080
         EJECT                                                   Y02080
JFCBKEN  DSECT
         IEFJFCBN
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(5)   ALLOCATE WORK AREA       Y02080
SWITCH   EQU   ASWITCH                  ALLOCATE SWITCH          Y02080
         EJECT                                                   Y02080
CVT      DSECT
         CVT                            CVT DSECT                Y02080
         END
