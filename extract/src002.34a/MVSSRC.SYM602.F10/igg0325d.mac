 TITLE 'IGG0325D - DADSM - CYLINDER, TRACK, RECORD ALLOCATION'   Y02080
IGG0325D CSECT
*
*MODULE NAME = IGG0325D
*
*DESCRIPTIVE NAME = DADSM - CYLINDER, TRACK, RECORD ALLOCATION
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 17 DELETIONS
*1462000400,001800,027600,045400-050400,060200,072400,072420-      UL17
*    072520,078000,079400,084200,086000.                           UL17
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*2410                                                            A34038
*          RELEASE 21 DELETIONS
*1192001600-001800,002400-002600,003800,005400,007300,017200,    A42477
*1192019000-019200,019600-019800,025200-025600,029800-030000,    A42477
*1192031200-031400,042200-042400,072320-072340,074400,083200-    A42477
*1192083400,084200,086000,089600,107400                          A42477
*0000000200,000220,000600-001700,004200,007800,028000-028200,    A46776
*0000039400,039800,040200,050600,051000,072400,077860,084200-    A46776
*0000086000,107200                                               A46776
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000200,000220,000400-000440,001600-001700,002400-    Y02080
*0000002600,004800,006800,007200-007400,009400,017600,019400-    Y02080
*0000019700,027200,028400-029400,033600,036400,038000,038400,    Y02080
*0000039000,041800-042300,052400-052800,061400,065400,072000,    Y02080
*0000072400-073600,074000,074400,083800,084500-091400,091800-    Y02080
*0000094600,094800-105600                                        Y02080
*
* STATUS CHANGE LEVEL 004
*FUNCTION/OPERATION:  THIS MODULE PROCESSES CYLINDER, TRACK, AND      *
*   AVERAGE/RECORD SPACE REQUESTS WITH ANY OF THESE OPTIONS: MXIG,    *
*   ALX, CONTIG, BLANK.  IT ALSO PROCESSES IEHMOVE'S SPACE REQUESTS.  *
*   IT DETERMINES IF THE REQUESTED SPACE IS AVAILABLE ON THIS VOLUME  *
*   AND IF YES, ALLOCATES IT.  IT INSURES THAT CYLINDER REQUESTS ARE  *
*   ON CYLINDER BOUNDARIES.  IT CREATES THE DADSM TABLE ENTRIES TO    *
*   BE USED BY THE 'F1 AND F3 BUILD' AND 'DADSM UPDATE' ROUTINES.     *
*                                                                     *
*ENTRY POINTS:                                                        *
*   IGG0325D - ENTRY IS MADE FROM IGG0325B OR FROM IGG0325K.          *
*                                                                     *
*INPUT: AT ENTRY TO THIS MODULE THE WORK AREA CONTAINS THE DATA       *
*   PORTION OF THE FORMAT 4 DSCB AND ITS ADDRESS, THE FIRST DADSM     *
*   RECORD (F5) AND ITS ADDRESS, A DEB, AN IOB, AN ECB, AND A CHANNEL *
*   PROGRAM TO READ DADSM RECORDS.                                    *
*   THE FIRST FORMAT 5 DSCB IN CORE SWITCH WILL BE ON.                *
*   REGISTER 10 WILL CONTAIN THE SPACE REQUEST IN TRACKS.             *
*   REGISTER 11 WILL POINT TO A JFCB OR PARTIAL DSCB.                 *
*   REGISTER 13 WILL POINT TO THE WORK AREA.                          *
*                                                                     *
*OUTPUT: UPON TRANSFER OF CONTROL, THE WORK AREA AND REGISTERS WILL   *
*   BE AS AT INPUT WITH THE FOLLOWING ADDITIONS.                      *
*   REGISTER 10 WILL NO LONGER CONTAIN THE SPACE REQUEST.             *
*   THE FIRST FORMAT 5 DSCB IN CORE SWITCH WILL BE OFF IF ALLOCATION  *
*   WAS NOT FROM THE FIRST DADSM RECORD.                              *
*   THE DADSM TABLE WILL CONTAIN THE EXTENTS ALLOCATED.               *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        EXCP(0) - READ FROM OR WRITE TO DIRECT ACCESS DEVICE         *
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        *
*        IECRES  - BRANCH TO OTHER MODULES                            *
*                                                                     *
*EXITS-NORMAL: BRANCH TO IGG0325E TO BUILD AND WRITE OUT F1'S AND F3'S*
*   -ERROR: BRANCH TO IGG0325H WITH CODE IN ERROR CODE PASS REGISTER  *
*                                                                     *
*   ERROR CODES THAT CAN BE ISSUED BY THIS MODULE:                    *
*                                                                     *
*   08 - NO ROOM AVAILABLE IN THE VTOC                                *
*                                                                     *
*   0C - PERMANENT I/O ERROR                                          *
*                                                                     *
*   14 - REQUESTED QUANTITY NOT AVAILABLE                             *
*                                                                     *
*TABLES/WORK AREAS: DADSM WORK AREA DESCRIBED BY MACRO 'IECALLWA'     *
*                                                                     *
*              ***************************************                *
*              *             DADSM TABLE             *                *
*              ***************************************                *
*                                                                     *
*              ***************************************                *
*              *        *         *                  *                *
*              *  TYPE  *  NO OF  *     USED HOLE    *                *
*              *  FLAG  * ENTRIES *      COUNTER     *                *
*              *        *         *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*                                                                     *
*              TYPEFLG  =  02 - BPAM DIRECTORIES REQUESTED.           *
*                                                                     *
*                       =  40 - USER LABELS REQUESTED                 *
*                                                                     *
*                       =  80 - SET MUST COMPLETE IS ACTIVE           *
*                                                                     *
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.  *
*                                                                     *
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.      *
*                                                                     *
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT*
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*NOTES:                                                               *
*   OTHER MACROS USED                                                 *
*   IECALLWA - ALLOCATE WORK AREA EXPANSION                           *
*   IECSDSL1 - BUILD DSCB'S                                           *
*   IEFJFCBN - BUILD JFCB                                             *
*   CVT - BUILD CVT                                                   *
*                                                                     *
*STORAGE: PROGRAM CODE CSECT - LESS THAN 1024 BYTES                   *
*   WORK AREA - AS DEFINED IN THE IECALLWA MACRO                      *
*   RPS WORK AREA - AS DEFINED IN THE IECRPS MACRO                    *
*                                                                     *
*
*REGISTER USAGE:
*
R1       EQU   1                                                 A42477
RCNT     EQU   1                        LOOP COUNTER
ROUT     EQU   2                        OUTPUT POINTER
RIN      EQU   3                        DADSM POINTER
RTA1     EQU   4                        CONVERSION ROUTINE RTA+1 REG
R4       EQU   4                                                 A42477
R5       EQU   5
RTA      EQU   5                       CONVERSION ROUTINE RTA REG
R6       EQU   6
RHH      EQU   6                        CONVERSION ROUTINE TRK REG
R7       EQU   7
RCC      EQU   7                        CONVERSION ROUTINE CYL REG
RTTRPTR  EQU   7                        PTR TO XCTL BY TTR TABLE ENTRY
R8       EQU   8
RTRK     EQU   8                        CONTAINS NBR OF TRKS/CYL
RERRPASS EQU   8                        ERROR PASS REGISTER
R9       EQU   9
RA       EQU   10
REQ      EQU   10                 PRIMARY QUANTITY PASSED FROM CTR
RJFCB    EQU   11                       JFCB POINTER
RBASE    EQU   12                       BASE REGISTER
RWKA     EQU   13                       WORK AREA POINTER
RBAK     EQU   14                 RETURN REGISTER
RF       EQU   15
*
* OTHER EQUATES
*
TWO      EQU   2                        CONSTANT OF TWO          Y02080
FOUR     EQU   4                                                   UL17
EIGHT    EQU   8                                                   UL17
*
*
*        THIS SECT INITIALIZES REGISTERS AND WORK AREAS,CHECKS
*        DADSM HOLES, CONVERTS THE FIRST DADSM RECORD THAT IS
*        ALREADY IN CORE, AND CALLS SUBROUTINES TO FILL THE REQUEST.
*
         BALR  RBASE,0
         USING START,RBASE
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080
         USING JFCBFLD,RJFCB
*
START    TM    TYPEFLG,X'40'            TEST FOR USER LABEL        UL17
         BO    CONTINUE                 BRANCH IF YES              UL17
         BAL   RBAK,NOTIOERR            CONVERT FIRST FORMAT 5     UL17
CONTINUE LA    RF,2                     INITIALIZE FOR HOLE CHECK
         LTR   RJFCB,RJFCB              TEST FOR PARTIAL DSCB    A46776
         BM    PARTIAL                  BRANCH IF YES            A46776
TSTCONT  CH    RF,DS4DSREC              CONTIG/MXIG - ARE 2 HOLES AVAIL
         BH    SETERR                   BRANCH IF NOT            A42477
TSTCONTA TM    JFCBCTRI,X'08'           IS THIS A CONTIG REQUEST
         BO    CONTIG                   BRANCH IF YES
         TM    JFCBCTRI,X'04'           IS THIS A MXIG REQUEST
         BO    MXIG                     BRANCH IF YES
         CH    RF,DS4DSREC              BLANK/ALX - ARE 3 HOLES AVAIL
         BNL   SETERR                   BRANCH IF NOT            A42477
TSTCONTB TM    JFCBCTRI,X'02'           IS THIS AN ALX REQUEST
         BO    ALX                      BRANCH IF YES
         B     BLANK                    NO-GO TO BLANK OPTION
SETERR   LA    RERRPASS,X'08'           SET ERROR CODE 'INSUFFICIENT
*                                       HOLES IN THE VTOC
         B     ERROR                    GO FREE WORK AREA
*
* EXECUTE CHANNEL PROGRAM TO READ DADSM-CHECK FOR PERM I/O ERROR
*
READF5   MVC   IDAREA(5),DS5PTRDS
         NI    ASWITCH,X'FF'-FRSTF5     CLEAR 1ST F5 IN CORE SW  Y02080
READF5A  MVC   SEEK+3(4),IDAREA
         LA    RF,CCW9
         ST    RF,IOB+16
         MVI   ECB,X'00'
         EXCP  IOB
         WAIT  ECB=ECB
         TM    ECB,X'20'          TEST FOR PERM I/O ERROR
         BC    1,NOTIOERR
         LA    RERRPASS,X'0C'           SET ERROR CODE 'PERM I/O ERROR
         B     ERROR
NOTIOERR MVC   DS5FMTID(90),DS5MAVET    REMOVE ID FROM DADSM RECORD
*
*THIS SECTION CONVERTS DADSM FROM XXYYZ TO RTA - NO OF TRACKS. ASSURES
*THAT CYLINDER REQUESTS AND AVERAGE RECORD LENGTH REQUESTS WITH ROUND
*OPTION ARE ALIGNED ON CYLINDER BOUNDARIES
*
CONVF5   LA    RCNT,26                 SET TO MAX NBR OF EXTENTS
         LH    RTRK,DS4DEVSZ+2         LOAD NBR OF TRKS/CYL
         LA    RIN,DS5AVEXT        SET INPUT PTR TO 1ST EXTENT
         LA    ROUT,DS1DSNAM       SET UP OUTPUT PTR FOR CONVERTED EXTS
       XC      DS1DSNAM(140),DS1DSNAM  CLEAR OUTPUT AREA
TESTO    EQU   *                       BRANCH LABEL              Y02080
         MVC   FULLWORD(FOUR),0(RIN)   ALIGN RTA AND NBR CYLS    Y02080
         SR    RTA1,RTA1               CLEAR HIGH DIVIDEND REGISTER
         LH    RTA,FULLWORD            GET RTA                   Y02080
         LTR   RTA,RTA                 IS THIS EXTENT ZERO
         BZ    INCRIN                  BRANCH IF YES
         LH    RCC,FULLWORD+TWO        GET NUMBER OF FULL CYLS   Y02080
         MR    RHH,RTRK                CONVERT CYLS TO TRKS
         LTR   RJFCB,RJFCB             TEST FOR PARTIAL DSCB     A46776
         BP    TESTYPE                 BRANCH IF NO
         TM    PD1SCALO,JFCBCYL        TEST FOR CYLINDER REQUEST A46776
         BC    1,CYLREQ                BRANCH IF YES
         TM    PD1SCALO,JFCBAVR+JFCROUND  TEST IF A RECORD       A46776
*                                      ROUNDED REQUEST           A46776
         BC    1,CYLREQ                BRANCH IF YES
ADD      IC    RHH,4(RIN)              GET EXCESS TRKS
         AR    RCC,RHH                 CALCULATE TOTAL TRKS THIS EXT
         B     ADDA                    GO STORE RTA AND NBR TRKS
TESTYPE  TM    JFCBCTRI,X'C0'          IS THIS A CYL REQUEST
         BO    CYLREQ                  BRANCH IF YES
         TM    JFCBCTRI,X'41'          IS THIS A RCD ROUNDED REQ
         BNO   ADD                     BRANCH IF NO              Y02080
CYLREQ   DR    RTA1,RTRK               CONVERT RTA TO CYLS AND TRKS
         LR    RHH,RTA1                SAVE TRK REMAINDER
         MR    RTA1,RTRK               RECONVERT CYLS TO TRKS
         LTR   RHH,RHH                 WAS THERE A TRK REMAINDER
         BZ    ADDA                    BRANCH IF NO
         AR    RTA,RTRK                YES-STEP RTA UP TO NEXT CYL
ADDA     STH   RTA,0(ROUT)             STORE RTA IN OUTPUT
         STH   RCC,2(ROUT)             STORE NBR OF TRKS AVAIL
CONT     LA    ROUT,4(ROUT)            STEP OUTPUT POINTER
INCRIN   LA    RIN,5(RIN)              STEP INPUT POINTER
         BCT   RCNT,TESTO              BRANCH IF MORE EXTENTS
         LA    ROUT,DS1DSNAM           RESET OUTPUT POINTER
         BR    RBAK
*
* THIS SECTION TESTS THAT THERE ARE SUFFICIENT UNUSED DSCB'S
* TO SATISFY A SPACE REQUEST FROM IEHMOVE.
*
PARTIAL  EQU   *                                                 A46776
         CH    RF,DS4DSREC             ASSUME CONTIG - TEST FOR  A46776
*                                      TWO AVAILABLE DSCB'S      A46776
         BH    SETERR                  BRANCH IF NO
         TM    PD1SCALO,JFCONTIG+JFCMIXG  TEST IF CONTIG OR MXIG A46776
         BNE   CONTIG                  BRANCH IF YES
         CH    RF,DS4DSREC             PROCESS AS BLANK - ARE 3
*                                      HOLES AVAILABLE
         BL    BLANK                   BRANCH IF YES
         B     SETERR                  NO-GO SET ERROR CODE
*
* THIS SECTION FINDS THE EXTENT IF CONTIG WAS SPECIFIED.  IT IS
* ALSO USED FOR THE BLANK OPTION, TO FIND THE AVAILABLE EXTENT
* WHICH IS LARGER BUT CLOSEST IN SIZE TO THE REQUESTED QUANTITY.
*
CONTIG   MVI   DADSMTBL+6,X'FF'
COMPARE  CH    REQ,2(ROUT)        COMPARE REQUEST TO EXTENT
         BH    UPREGS             REQUEST TO HIGH GO UPDATE POINTER
TESTEQ   BE    FILLREQ
         CLC   2(2,ROUT),DADSMTBL+6    LOW-COMPARE TO DADSM VALUE
         BNL   UPREGS                  TO HIGH UPDATE POINTER
BLKENTRY MVC   DADSMTBL+4(4),0(ROUT)   MOVE EXTENT TO DADSMTAB
UPREGS   LA    ROUT,4(ROUT)
         CLC   0(2,ROUT),ZEROS          IS THIS THE END OF EXTENTS
         BH    COMPARE            NO- GET NEXT
         TM    DS5PTRDS+4,X'FF'   IS A CHAIN ADDRESS AVAILABLE
         BZ    FILLCONT           FILL REQUEST
         BAL   RBAK,READF5        READ NEXT DADSM RECORD
         B     COMPARE            RETURN FOR MORE
BLANK    CH    REQ,2(ROUT)        COMPARE REQUEST TO EXTENT
         BE    FILLREQ            GO FILL REQUEST
         BL    BLKENTRY           REQUEST CAN BE FILLED AS CONTIGUOUS
         BAL   14,PSHDOWN         GO TO PUSHDOWN LIST
         LA    ROUT,4(ROUT)       INCREMENT EXTENT POINTER
         CLC   0(2,ROUT),ZEROS          IS THIS THE END OF EXTENTS
         BH    BLANK              NO- GET NEXT
         TM    DS5PTRDS+4,X'FF'   IS A CHAIN AVAILABLE
         BZ    FINDEXT            NO-PROCESS PUSHDOWN LIST
         BAL   14,READF5          YES-READ NEW DADSM DSCB
         B     BLANK              RETURN FOR MORE
*
* ALX OPTION SPECIFIED
*
MXIG     EQU   *                                                   UL17
ALX      CH    REQ,2(ROUT)        COMPARE REQUEST TO EXTENT
         BH    HIREQ              HIGH REQUEST
         BAL   14,PSHDOWN         GO TO PUSHDOWN LIST
HIREQ    LA    ROUT,4(ROUT)       INCREMENT POINTER
         CLC   0(2,ROUT),ZEROS          IS THIS THE END OF EXTENTS
         BH    ALX                NO- GET NEXT
         TM    DS5PTRDS+4,X'FF'   IS A CHAIN AVAILABLE
         BZ    CKETYPE                  BRANCH IF NO               UL17
         BAL   14,READF5          READ NEXT DADSM DSCB
         B     ALX                RETURN FOR MORE
CKETYPE  TM    JFCBCTRI,X'04'           IS THIS MXIG REQUEST       UL17
         BO    FINDEXT                  BRANCH IF YES              UL17
         TM    TYPEFLG,X'40'            TEST FOR USER LABEL      A34038
         BNO   MOVELIST                 BRANCH IF NOT            A34038
         LA    RF,4                     INITIALIZE FOR 4 ENTRIES A34038
         B     TABLEPTR                 GO POINT TO DADSM TABLE  A34038
MOVELIST LA    RF,5
TABLEPTR EQU   *                                                 A34038
         LA    R8,DADSMTBL+4      START OF DADSM TABLE POINTER
         SR    R9,R9
         LA    R6,PDLIST1               POINT TO PUSHDOWN LIST   Y02080
         CLC   0(4,R6),ZEROS            IS LIST BLANK
         BE    QTYNOTAV           REQUEST CAN NOT BE FILLED
ALXMOVE  LH    R5,0(R6)           MOVE EXTENTS TO DADSM TABLE
         STH   R5,0(R8)
         AH    R5,2(R6)
         STH   R5,2(R8)
         LA    R9,1(R9)           ADD ONE TO NUMBER OF EXTENTS
         LA    R8,4(R8)           UPDATE POINTER
         LA    R6,4(R6)           UPDATE LIST POINTER
         CLC   0(4,R6),ZEROS            ARE THERE MORE EXTENTS
         BE    EXTNO              GO TO ENTER NUMBER OF EXTENTS
         BCT   RF,ALXMOVE
         ST    RF,PDLIST5               CLEAR LAST SLOT IN PDLIST
         B     EXTNO              END OF TABLE
*
* THIS ROUTINE BUILDS A PUSHDOWN LIST WHEN MORE THAN ONE EXTENT IS
* NEEDED TO FILL QTY REQUESTED (BLANK OR ALX OPTION)
*
PSHDOWN  LA    R5,4
         LA    R6,PDLIST1               ADDRESS OF PUSHDOWN LIST Y02080
         LA    R7,4(R6)      POINT  TO SECOND EXTENT IN LIST
FINDLOW  CLC   2(2,R6),2(R7)
         BNH   UPREG
         LR    R6,R7
UPREG    LA    R7,4(R7)
         BCT   R5,FINDLOW
         CLC   2(2,ROUT),2(R6)    EXTENT IN LIST LOWER THAN NEW
         BNH   PSHRTRN
         MVC   0(4,R6),0(ROUT)    REPLACE LOW EXTENT IN LIST
PSHRTRN  BR    RBAK               RETURN
*
*   EXIT ROUTINES
*
QTYNOTAV LA    RERRPASS,X'14'           SET ERROR CODE 'QTY NOT AVAIL
*
* TRANSFER CONTROL TO THE LAST MODULE OF SPACE ALLOCATION TO RELEASE
* THE WORK AREA,DEQ THE VTOC,PASS THE ERROR CODE,AND EXIT TO CALLER.
*
ERROR    LA    RTTRPTR,ALLOCD2          LOAD PTR TO LAST ALLOC LOAD
         B     XCTLHERE
*
FILLCONT TM    DADSMTBL+6,X'FF'     IS DADSM TABLE EMPTY.
         BO    QTYNOTAV           YES QUANTITY NOT AVAILABLE
         STH   REQ,DADSMTBL+6          ENTER REQUEST
         B     RTARTA1                 GO CHANGE FORMAT
FILLREQ  STH   REQ,DADSMTBL+6          FILL REQUEST FROM POINTER
         MVC   DADSMTBL+4(2),0(ROUT)
RTARTA1  LH    R5,DADSMTBL+4      ENTER EXTENTS IN DADSMTBL FORMAT
         AH    R5,DADSMTBL+6
         STH   R5,DADSMTBL+6
         MVI   DADSMTBL+1,X'01'   ENTER ONE EXTENT
*
* SET UP WTG TABLE TO BRANCH TO THE F1/F3 SPACE ALLOCATION MODULE.
*
EXRQFILL TM    TYPEFLG,X'40'            TEST FOR USER LABEL        UL17
         BZ    LOADPTR                  BRANCH IF NOT              UL17
         IC    R9,DADSMTBL+1            NUMBER OF ENTRIES IN TABLE UL17
         LA    R9,1(R9)                 INCREMENT FOR USER LABEL   UL17
         STC   R9,DADSMTBL+1            PLACE IN TABLE             UL17
         LM    R1,R4,DADSMTBL+4         MOVE ENTRIES             A42477
         STM   R1,R4,DADSMTBL+EIGHT       FOR USER LABEL         A42477
         MVC   DADSMTBL+4(FOUR),USERLBL                            UL17
LOADPTR  LA    RTTRPTR,ALLOCA3                                     UL17
*
* BRANCH TO A SUBSEQUENT DADSM ALLOCATE MODULE.
*
XCTLHERE EQU   *                        BRANCH LABEL             Y02080
         IECRES LOAD,EXTPR=(RWKA),MODID=(RTTRPTR),BRANCH=DIRECT  Y02080
*
FINDEXT  LA    R8,DADSMTBL+4      DADSMTBL POINTER
         TM    TYPEFLG,X'40'            TEST FOR USER LABEL      A34038
         BNO   INIT5ENT                 BRANCH IF NOT            A34038
         LA    RF,4                     INITIALIZE FOR 4 ENTRIES A34038
         B     ZEROREG9                 GO ZERO REGISTER 9       A34038
INIT5ENT EQU   *                                                 A34038
         LA    RF,5
ZEROREG9 EQU   *                                                 A34038
         SR    R9,R9
FINDMLTI LR    R5,RF                    LOAD INNER LOOP COUNTER
         LA    R6,4(R8)                 PUSHDOWN LIST POINTER
         LA    R7,4(R6)           POINTER TO NEXT VALUE
COMPVAL  BCTR  R5,0                     DECREMENT COUNT
         CLC   2(2,R6),2(R7)            FIND LOW ENTRY
         BNL   UPPTR2             UPDATE POINTER TO NEXT VALUE
         LR    R6,R7              UPDATE OLD TO NEW HIGH
UPPTR2   LA    R7,4(R7)
         LTR   R5,R5                    IS LOOP COMPLETED
         BNE   COMPVAL                  BRANCH IF NO
         CLC   2(2,R6),ZEROS            TEST FOR ZERO QUANTITY
         BE    QTYNOTAV
         LH    R7,2(R6)           LOAD TRACK VALUE OF HIGH EXTENT
         LTR   RJFCB,RJFCB              TEST FOR PARTIAL DSCB    A46776
         BM    BLKREQ                   BRANCH IF YES              UL17
         TM    JFCBCTRI,X'04'           TEST FOR MXIG              UL17
         BO    LASTFILL                 BRANCH TO FILL MXIG        UL17
BLKREQ   SR    REQ,R7                                              UL17
         LTR   REQ,REQ            TEST
         BZ    LASTFILL           ZERO LAST EXTENT FILLS REQUEST
         BM    SHAVE              EXTENT EXCEEDS REQUEST
         MVC   0(2,R8),0(R6)      MORE EXTENTS NEEDED
         AH    R7,0(R8)
         STH   R7,2(R8)           STORE RTA+1 IN DADSM TABLE
         LA    R9,1(R9)                 ADD 1 TO NUMBER TO ALLOCATEUL17
         LA    R8,4(R8)           UPDATE DADSMTBL POINTER
         MVC   0(4,R6),0(R8)            PDLIST 1ST ENTRY TO USED ENTRY
         MVC   0(4,R8),ZEROS            CLEAR NEXT DADSM ENTRY
         BCT   RF,FINDMLTI        GET NEXT EXTENT
         B     QTYNOTAV
SHAVE    AR    R7,REQ
LASTFILL MVC   0(2,R8),0(R6)
         AH    R7,0(R8)
         STH   R7,2(R8)           STORE RTA+1 IN DADSM TABLE
         LA    R9,1(R9)
EXTNO    STC   R9,DADSMTBL+1      STORE NUMBER OF EXTENTS ALLOCATED
         B     EXRQFILL           GO TO EXIT
*
* * * * * * * * * * * * *
*
***   CONSTANTS
*
* * * * * * * * * * * * *
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(ALLOCA3,5E,ALLOCD2,5H),SVC=032,BRT=YES,    Y02080C
               LENGTH=                                           Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(5)   ALLOCATE WORK AREA       Y02080
ZEROS    EQU   CCW4+4
USERLBL  EQU   CCW10+4                                             UL17
         EJECT                                                   Y02080
CVT      DSECT                          CVT DSECT                Y02080
         CVT                                                     Y02080
         EJECT                                                   Y02080
*
* * * * * * * * * * * * *
*
* * * * * * * * * * * * *
*
JFCBFLD  DSECT
         IEFJFCBN
         EJECT                                                   Y02080
*
* * * * * * * * * * * * *
*
***   DSECT FOR THE PARTIAL DSCB PASSED TO ALLOCATE BY IEHMOVE   A46776
*
* * * * * * * * * * * * *
*
         ORG   INFMJFCB
PD1DSNAM DS    CL44                DATA SET NAME
PD1FMTID DS    CL1                 FORMAT IDENTIFIER
PD1DSSN  DS    CL6                 DATA SET SERIAL NUMBER
PD1VOLSQ DS    XL2                 VOLUME SEQUENCE NUMBER
PD1CREDT DS    XL3                 CREATION DATE
PD1EXPDT DS    XL3                 EXPIRATION DATE
PD1NOEPV DS    XL1                 NUMBER OF EXTENTS ON VOLUME
PD1NOBDB DS    XL1                 NUMBER OF BYTES USED IN LAST
*                                     DIRECTORY BLOCK
         DS    XL1                 RESERVED
PD1SYSCD DS    CL13                SYSTEM CODE
         DS    XL7                 RESERVED
PD1DSORG DS    XL2                 DATA SET ORGANIZATION
PD1RECFM DS    XL1                 RECORD FORMAT
PD1OPTCD DS    XL1                 OPTION CODE
PD1BLKL  DS    XL2                 BLOCK LENGTH
PD1LRECL DS    XL2                 RECORD LENGTH
PD1KEYL  DS    XL1                 KEY LENGTH
PD1RKP   DS    XL2                 RELATIVE KEY POSITION
PD1DSIND DS    XL1                 DATA SET INDICATORS
PD1SCALO DS    XL4                 SECONDARY ALLOCATION
PD1LSTAR DS    XL3                 LAST USED TRACK AND BLOCK ON TRACK
PD1TRBAL DS    XL2                 BYTES REMAINING ON LAST TRACK USED
         DS    XL2                 RESERVED
PD1EXT1  DS    XL1                 EXTENT TYPE INDICATOR
         DS    XL2                 UNUSED
PDPRIQTY DS    F                   PRIMARY SPACE REQUEST IN TRACKS
PDDIRQTY DS    F                   NUMBER OF DIRECTORY BLOCKS
         END   IGG0325D                                          A42477
