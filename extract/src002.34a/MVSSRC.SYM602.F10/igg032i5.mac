 TITLE 'IGG032I5 - ISAM ALLOCATE - EMBEDDED INDEX'
IGG032I5 CSECT
*
*MODULE NAME = IGG032I5
*
*DESCRIPTIVE NAME = ISAM ALLOCATE - EMBEDDED INDEX
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 16 DELETIONS
*1463097800                                                        AAAA
*1463064600,065800,070800-071000,071400,072400                    13559
*          RELEASE 17 DELETIONS
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*1682027400-027600                                               M0227
*                                                                S20201
*          RELEASE 21 DELETIONS
*1194001400,003400,004000,016800,017800-018400,065600-066000,    A38860
*1194066400-067000,067400-068200,075400-075600,077000,087800-    A38860
*1194088000,100200                                               A38860
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,001100-001200,002600,003400,006000,006600,    Y02080
*0000007000-007200,017400,017900-018200,021200,025330-025360,    Y02080
*0000025600,030200,066800-067200,067800-068100,069000,073800,    Y02080
*0000074500,077000,088000,088250-088400,088800,089200-102400,    Y02080
*0000102800                                                      Y02080
*0000                                                            Y02144
*0000006600,073400-074800,087700-088200,097400-102800            YM3995
*           VS2 RELEASE 037 CHANGES
*0000                                                          @ZA12697
*
*STATUS CHANGE LEVEL 004
*
*FUNCTION - THIS MODULE BUILDS FORMAT 1 AND FORMAT 2 DSCB'S AND IF
*           NECESSARY A FORMAT 3.  IT DIVIDES THE ENTRIES IN THE DADSM
*           TABLE INTO PRIME AND INDEX EXTENTS. THE INDEX EXTENTS ARE
*           THE FIRST TO BE PUT IN THE DSCB FORMAT 1.
*           THE DATA SET WILL BE RAC DEFINED USING A RACDEF    @Z40RSGD
*           IF IGG032I3 SET THE RAC PROTECTED BIT IN THE       @Z40RSGD
*           FORMAT 1.                                          @Z40RSGD
*
*ENTRIES - THE ONLY ENTRY POINT TO THIS MODULE IS IGG032I5.  ENTRY IS
*          MADE FROM THE THIRD LOAD OF ISAM ALLOCATE VIA A BRANCH.
*
*
*INPUT - AT ENTRY TO THIS MODULE REGISTER 11 POINTS TO A JFCB.  REG 13
*        POINTS TO THE ALLOCATE WORK AREA WHICH CONTAINS A PTR TO THE
*        ENTRY IN THE TIOT FOR THIS ALLOCATE AND ALL BUT THE EXTENT
*        FIELDS OF THE FORMAT 1 DSCB, VTOCADR, AND DADSMADR.
*
*OUTPUT - UPON TRANSFERRING TO THE NEXT MODULE IGG032I6, THE WORK AREA
*         WILL CONTAIN A SORTED DADSM TABLE.
*
*
*EXTERNAL ROUTINES - THE FOLLOWING ARE SUPERVISOR CALLS ISSUED IN THE
*   MACRO EXPANSIONS
*   EXCP(0) READ FROM OR WRITE TO DIRECT ACCESS DEVICES
*   WAIT(1) WAIT ON EVENT CONTROL BLOCK
*   RACDEF DEFINE DATA SET TO RAC.                             @Z40RSGD
*   OTHER MACROS USED - IEFJFCBN BUILDS JFCB
*                       IECALLWA - ALLOCATE WORK AREA EXPANSION
*                       IECSDSL1 BUILDS DSCBS
*                       IECDSECS - EXPANDS CVT, PSA,SCVT DSECTS
*
*EXITS NORMAL - BRANCH TO IGG032I6
*      ERROR - BRANCH TO IGG032I7 WITH ERROR CODE IN REGISTER 5
*
*              0C   PERMANENT I/O ERROR
*
*
*TABLES/WORK AREAS - DADSM WORK AREA DESCRIBED BY DSECT DSCBWKAR
*
*              ***************************************
*              *             DADSM TABLE             *
*              ***************************************
*
*              ***************************************
*              *        *         *                  *
*              *  TYPE  *  NO OF  *     USED HOLE    *
*              *  FLAG  * ENTRIES *      COUNTER     *
*              *        *         *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*              *                  *                  *
*              *       RTA        *      RTA+1       *
*              *                  *                  *
*              ***************************************
*
*
*              TYPE FLAG = 02 - BPAM DIRECTORIES REQUESTED.
*
*                        = 40 - USER LABELS REQUESTED
*
*                        = 80 - SET MUST COMPLETE IS ACTIVE
*
*
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.
*
*
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.
*
*
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT.
*
*
*ATTRIBUTES - REENTRANT
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = AS DEFINED IN THE IECALLWA MACRO
*          RPS WORK AREA = AS DEFINED IN THE IECRPS MACRO
*
*
*REGISTER USAGE
*              REGISTER 0-9 WORK REGISTERS
*              REGISTER 10 - TIOT SET UP TABLE
*              REGISTER 11 - JFCB POINTER
*              REGISTER 12 - BASE REGISTER
*              REGISTER 13 - WORK AREA POINTER
*              REGISTER 14 SUBROUTINE LINKAGE AND WORK REGISTER
*              REGISTER 15 WORK REGISTER
         BALR  RBASE,0
         USING OMEGA,RBASE
         USING ALLOCWKA,RWORK           WORK AREA ADDRESSABILITY Y02080
         USING JFCBKEN,RJFCB
***** REGISTER NAMES *****
RZERO    EQU   0
RONE     EQU   1
RTWO     EQU   2
RTHREE   EQU   3
RFOUR    EQU   4
RFIVE    EQU   5
RSIX     EQU   6
RSEVEN   EQU   7
REIGHT   EQU   8
RNINE    EQU   9
DRBAK   EQU   9
RTEN     EQU   10
RJFCB    EQU   11
RBASE    EQU   12
RWORK    EQU   13
RETURN   EQU   14
REVEN    EQU   14                  EVEN REGISTER FOR DIVIDE      M0227
RFTEN    EQU   15
*
* OTHER EQUATES
*
TWO      EQU   2                        CONSTANT OF TWO          Y02080
DIVISOR  EQU   2                        DIVIDE BY 2              M0227
STEPMC   EQU   1                        STATUS STEP MC INDICATOR YM3995
K12      EQU   12                       CONSTANT OF 12           YM3995
DS1RACDF EQU   X'40'                    DS1DSIND-DATA SET IS   @Z40RSGD
*                                       RAC DEFINED            @Z40RSGD
RACERR   EQU   X'A4'                    CONSTANT FOR BUILDING  @Z40RSGD
*                                       RAC ERROR CODES        @Z40RSGD
*
OMEGA    EQU   *                        BRANCH LABEL             Y02080
         LH    RFTEN,PRIQTY             PICK UP PRIMARY QUANTITY
         LH    RONE,DIRQTY              PICK UP INDEX QUANTITY
         TM    JFCBCTRI,X'DF'           CHECK REQUEST TYPE FIELD
         BC    8,NEXTA                  BRANCH IF THIS IS AN ABSOLUTE
*                                          TRACK REQUEST
         MH    RONE,DS4DEVSZ+2          CONVERT CYLINDERS TO TRACKS
         MH    RFTEN,DS4DEVSZ+2
* THIS SECTION SETS UP POINTERS FOR SEARCHING THE DADSM TABLE
NEXTA    EQU   *                                                 M0227
         SR    REVEN,REVEN         CLEAR EVEN REG FOR DIVIDE     M0227
         LA    RTWO,DIVISOR        DIVISOR OF 2                  M0227
         DR    REVEN,RTWO          DIVIDE TRACKS BY 2            M0227
          SR   RZERO,RZERO              INITIALIZE TOTAL TRACKS TO
*                                          THIS POINT
         LR    RSIX,RZERO
         LR    RSEVEN,RFTEN             SET UP EVEN ODD PAIR FOR DIVIDE
         LH    RFIVE,DS4DEVSZ+2        PICK UP NUMBER OF TRACKS PER
*                                      CYLINDER
         DR    RSIX,RFIVE
         AR    RFTEN,RSIX               FORCE TO CYLINDER BOUNDARY
         AR    RFTEN,REVEN         ADD ANY REMAINDER FROM        M0227
*                                  FIRST DIVISION
ZEROOUT  LR    RFIVE,RZERO             INITIALIZE PRIME EXTENT
*                                          COUNTER
          LR   RSIX,RZERO               INITIALIZE INDEX EXTENT
*                                          COUNTER
         LA    RTWO,AENTRIES            POINT TO DADSM TABLE     Y02080
         LA    RTHREE,PDLIST            SET UP LOCATION POINTERS FOR
         LA    RFOUR,DS3ADEXT+1        PRIME AND INDEX EXTENTS
* THIS SECTION CHECKS FOR MID WAY
HOOP     LH    RSEVEN,2(RTWO)           PICK UP RTA+1
         SH    RSEVEN,0(RTWO)           SUBTRACT RTA FROM IT
         AR    RZERO,RSEVEN
         CR    RZERO,RFTEN              CHECK FOR MIDWAY
         BNL   HERETIS                  BRANCH IF AT OR BEYOND THE
*                                          MIDWAY POINT
         MVC   0(4,RTHREE),0(RTWO)      MOVE IN PRIME EXTENT
         BAL   RETURN,UP235             UPDATE POINTERS AND COUNTERS
         B     HOOP
*
HERETIS  BH    CHEEK                    BRANCH IF BEYOND THE HALF WAY
*                                          MARK
         MVC   0(4,RTHREE),0(RTWO)      CONSIDER AS A PRIME EXTENT
         BAL   RETURN,UP235             UPDATE POINTERS AND COUNTERS
* THIS SECTION PICKS UP NEXT EXTENT AND CHECKS TO SEE HOW MUCH OF IT
* IS NEEDED FOR INDEX.
ICK      LH    RSEVEN,2(RTWO)           NEED MORE EXTENTS FOR INDEX
         SH    RSEVEN,0(RTWO)
          CR   RSEVEN,RONE              CHECK FOR ENOUGH QUANTITY FOR
*                                          INDEX
          BNL  THISIT                   BRANCH IF THERE IS ENOUGH
*                                          QUANTITY
         MVC   0(4,RFOUR),0(RTWO)       STILL NEED ANOTHER EXTENT
          SR   RONE,RSEVEN              SUBTRACT AMOUNT AVAILABLE FROM
*                                          AMOUNT NEEDED
         BAL   RETURN,UP246             UPDATE POINTERS AND COUNTERS
         B     ICK
* THIS SECTION CHECKS LAST EXTENT FOR INDEX TO SEE IF ANOTHER PRIME
* EXTENT IS LEFT
THISIT    BH   REDUCE                   BRANCH IF AMOUNT AVAILABLE IS
*                                          LARGER THAN AMOUNT NEEDED
         MVC   0(4,RFOUR),0(RTWO)       JUST NEED THIS ENTIRE EXTENT TO
*                                          FULFILL REMAINING INDEX
*                                          REQUEST
* THIS SECTION CONVERTS THE REST OF THE DADSM TABLE ENTRIES INTO
* PRIME EXTENTS
GETTHEM  BAL   RETURN,UP246             UPDATE POINTERS AND COUNTERS
         LA    RNINE,PDLIST5           SET TO END OF TABLE     @ZA12697
GETTHEMM OC    0(4,RTWO),0(RTWO)       ANY MORE ENTRIES        @ZA12697
         BZ    OUTPULL                 NO GET OUT              @ZA12697
         CR    RTWO,RNINE              AT END OF THE TABLE     @ZA12697
         BZ    OUTPULL                GET OUT                  @ZA12697
         MVC   0(4,RTHREE),0(RTWO)        LIST OF PRIME EXTENTS
         BAL   RETURN,UP235             UPDATE POINTERS AND COUNTERS
         B     GETTHEMM
* ONLY PART OF THE EXTENT IS NEEDED FOR INDEX
REDUCE   MVC   0(2,RFOUR),0(RTWO)       ONLY NEED PART OF THIS EXTENT
         LH    RSEVEN,0(RTWO)
         AR    RSEVEN,RONE
          STH  RSEVEN,2(RFOUR)          CALCULATE LAST PART OF INDEX
*                                          EXTENT
         MVC   0(2,RTHREE),2(RFOUR)     REST OF EXTENT WILL BE A PRIME
         MVC   2(2,RTHREE),2(RTWO)         EXTENT
         B     UPTHEM
* ONE EXTENT IS SPLIT INTO AT LEAST TWO PARTS THAT IS BOTH PRIME AND
* INDEX IN THE SAME EXTENT
CHEEK    LR    REIGHT,RZERO             MORE THAN ONE TRACK FOR INDEX
         SR    REIGHT,RFTEN                EXTISTS IN THIS EXTENT
         LH    RSEVEN,2(RTWO)
         SR    RSEVEN,REIGHT
          STH  RSEVEN,2(RTHREE)         BUILD LAST PART OF PRIME EXTENT
         STH   RSEVEN,0(RFOUR)          SET UP INDEX BEGINNING
         MVC   0(2,RTHREE),0(RTWO)
          CR   REIGHT,RONE              CHECK FOR AVAILABLE SPACE BEING
*                                          ENOUGH TO FULFILL REQUEST
          BL   MORETHAN                 BRANCH IF NOT ENOUGH QUANTITY
          BH   SPLIT                    BRANCH IF QUANTITY MORE THAN
*                                          THAT REQUESTED
          MVC  2(2,RFOUR),2(RTWO)       BUILD LAST PART OF INDEX EXTENT
*
UPTHEM   BAL   RETURN,UP35              UPDATE POINTERS AND COUNTERS
         B     GETTHEM
* ONE EXTENT IS SPLIT INTO THREE EXTENTS PRIME,INDEX,PRIME
SPLIT    LH    RSEVEN,2(RTHREE)         NEED TO TAKE THE INDEX OUT OF
         AR    RSEVEN,RONE                 THE MIDDLE OF AN EXTENT
         STH   RSEVEN,2(RFOUR)
         BAL   RETURN,UP35              UPDATE POINTERS AND COUNTERS
          MVC  0(2,RTHREE),2(RFOUR)     BUILD THE BEGINNING AND ENDING
          MVC  2(2,RTHREE),2(RTWO)         RTA'S FOR THIS PRIME EXTENT
         B     UPTHEM
* NEED MORE THAN JUST THE END OF AN EXTENT
MORETHAN SR    RONE,REIGHT              NEED THE END OF THIS EXTENT AND
         MVC   2(2,RFOUR),2(RTWO)          MORE FOR THE INDEX
         BAL   RETURN,UP246             UPDATE POINTERS AND COUNTERS
         BAL   RETURN,UP35              UPDATE POINTERS AND COUNTERS
         B     ICK
* THIS SECTION SETS UP POINTERS TO START BUILDING F1 WITH INDEX EXTENTS
OUTPULL  LA    RTWO,DS3ADEXT+1         GET INDEX ENTRIES SET UP TO BE
         LA    RTHREE,DS1EXT1              CONVERTED AND PLUGGED INTO
         LA    RFOUR,3                     THEIR PLACES IN THE FORMAT 1
         LR    RNINE,RSIX
         LR    RZERO,RFIVE
         AR    RSIX,RFIVE               COLLECT TOTAL NUMBER OF EXTENTS
         STC   RSIX,DS1NOEPV               AND PUT IN FORMAT 1 DSCB
         SR    RFIVE,RFIVE              INITIALIZE SEQUENCE NUMBER
         MVI   TYPE,X'04'               INITIALIZE EXTENT TYPE
* THIS SECTION CONVERTS INDEX ENTRIES FOR F1
LIMP     BAL   RETURN,LOOP
         BCTR  RNINE,0                  REDUCE NUMBER OF INDEX EXTENTS
         LTR   RNINE,RNINE              CHECK FOR LAST EXTENT
         BZ    GETPRIME                 BRANCH IF LAST INDEX EXTENT
         BCTR  RFOUR,0                  REDUCE NUMBER OF EXTENTS IN
*                                          FORMAT 1 THAT ARE AVAILABLE
         LTR   RFOUR,RFOUR              CHECK FOR ROOM IN FORMAT 1
         BC    7,LIMP                  BRANCH IF MORE ROOM IN F1
NOROOM   BAL   RETURN,ROUTINE
* THIS SECTION CONVERTS INDEX EXTENTS FOR F3
LIMPED   BAL   RETURN,LOOP
         BCTR  RNINE,0                  REDUCE NUMBER OF INDEX EXTENTS
         LTR   RNINE,RNINE              CHECK FOR THE LAST INDEX EXTENT
         BC    7,LIMPED                BRANCH IF NOT LAST INDEX EXTENT
PRIMEGET LA    RTWO,PDLIST             SET UP TO FINISH FILLING IN THE
         LR    RNINE,RZERO                DSCB FORMAT 3
         MVI   TYPE,X'01'
LAMP     B     LUMPED
*
* SET UP TO PLUG OUT PRIME ENTRIES FOR DSCB FORMAT 1
GETPRIME LR    RNINE,RZERO
         LA    RTWO,PDLIST
         MVI   TYPE,X'01'              INITIALIZE ESTENT TYPE
         BCTR  RFOUR,0                  REDUCE NUMBER OF EXTENTS
*                                          AVAILABLE IN THE FORMAT 1
         LTR   RFOUR,RFOUR             BRANCH IF NO MORE ROOM IN F1
         BC    7,LUMP
         B     ROOMNONE
* THIS SECTION CONVERTS PRIME EXTENTS FOR F1
LUMP     BAL   RETURN,LOOP
         XC    DS2PTRDS(5),DS2PTRDS
         BCTR  RNINE,0                  REDUCE NUMBER OF PRIME EXTENTS
         LTR   RNINE,RNINE              CHECK FOR END OF PRIME EXTENTS
         BZ    BUILDF2                  BRANCH IF LAST PRIME EXTENT -
*                                          GO TO BUILD A DSCB FORMAT 2
         BCTR  RFOUR,0                  REDUCE FORMAT 1 EXTENT COUNT
         LTR   RFOUR,RFOUR              CHECK FOR LAST AVAILABLE F1
*                                          EXTENT
         BC    7,LUMP                  BRANCH IF FORMAT 1 IS NOT FULL
ROOMNONE BAL   RETURN,ROUTINE
* THIS SECTION CONVERTS PRIME FOR F3
LUMPED   BAL   RETURN,LOOP
         BCTR  RNINE,0                  REDUCE NUMBER OF PRIME EXTENTS
         LTR   RNINE,RNINE              CHECK FOR LAST PRIME EXTENT
         BC    7,LUMPED                BRANCH IF STILL MORE PRIME
*                                         EXTENTS
ENT     BAL   DRBAK,WRITEF3            WRITE OUT DSCB F3
         MVC   DS2PTRDS(5),SAVEADR+5    PUT POINTER TO F3 IN F2
* THIS SECTION BUILDS A F2
BUILDF2  MVI   F5IN,X'02'               PUT INDICATOR IN KEY
         XC    F5IN+1(134),F5IN+1       CLEAR OUT FORMAT 2 AREA
         MVC   DS2NOTRK(1),JFCNTM       MOVE IN NUMBER OF TRACKS FOR
*                                          HIGHEST LEVEL INDEX
         MVC   DS2CYLOV(1),JFCCYLOF     MOVE IN NUMBER OF TRACKS FOR
*                                          CYLINDER OVERFLOW AREA
         MVI   DS2FMTID,X'F2'           PUT IN FORMAT IDENTIFIER
*                                                              @Z40RSGD
*   DEFINE DATA SET TO RAC IF REQUESTED.                       @Z40RSGD
*                                                              @Z40RSGD
         TM    DS1DSIND,DS1RACDF        IS A RACDEF NEEDED     @Z40RSGD
         BZ    RACDEFOK                 NO-CONTINUE            @Z40RSGD
         MVC   RACDEF(LRACDEF),MRACDEF  SETUP RACDEF PARM LIST @Z40RSGD
         RACDEF ENTITY=JFCBDSNM,        RAC DEFINE DATA SET    @Z40RSGDX
               VOLSER=DS1DSSN,                                 @Z40RSGDX
               MF=(E,RACDEF)                                   @Z40RSGD
         LTR   RFTEN,RFTEN              SUCCESSFUL             @Z40RSGD
         BZ    RACDEFOK                 YES-CONTINUE           @Z40RSGD
         LA    RFIVE,RACERR(RFTEN)      SET ERROR CODE         @Z40RSGD
         B     EXIT32I7                 ERROR EXIT             @Z40RSGD
RACDEFOK EQU   *                        RAC PROCESSING OK      @Z40RSGD
         BAL   DRBAK,WRITEF2            WRITE OUT DSCB F2
         MVC   DS1PTRDS(5),TTRLL        PUT POINTER TO F2 IN F1
* THIS SECTION WRITES OUT A F1
ONEONLY BAL   DRBAK,WRITEF1            WRITE OUT DSCB F1
         TM    DS4VTOCI,X'80'           CHECK THE CONDITION OF THE
*                                          VOLUME - BOS
         BC    1,XCTLDADS               BRANCH IF VTOC NOT IN CONDITION
*                                          EXPECTED
         CLC   SAVEADR(5),DS4HPCHR      CHECK FOR NEED TO UPDATE
*                                          POINTER IN F4 TO LAST F1
         BNH   XCTLDADS                 BRANCH IF POINTER DOESN'T NEED
*                                          TO BE CHANGED
         MVC   DS4HPCHR(5),SAVEADR      REPLACE POINTER IN F4 TO LAST
*                                          F1
* THIS SECTION RELOCATES THE CHANNEL PROGRAM FOR FORMAT 5 UPDATING
* OF IGG032I5
XCTLDADS LA    RTWO,TTRLL              PICK UP THE ADDRESS TO SEARCH ON
         ST    RTWO,PDLIST
         MVC   CCW2+1(3),PDLIST+1
         MVC   CCW6+1(3),PDLIST+1
         MVC   CCW9+1(3),PDLIST+1
         LA    RTWO,DS1DSNAM           PICK UP ADDRESS OF AREA TO READ
         ST    RTWO,CCW8                INTO                     A38860
         MVI   CCW8,X'0D'               RESTORE WR COMMAND CODE  A38860
         LA    RTWO,140(RTWO)          PICK UP ADDRESS OF AREA TO
         ST    RTWO,CCW11               WRITE FROM               A38860
         MVI   CCW11,X'0E'              RESTORE RD COMMAND CODE  A38860
         LA    RTWO,NEXTLOAD            BRANCH TO IGG032I6       Y02080
* THIS SECTION BRANCHES TO ANOTHER MODULE.
XCT      EQU   *                                                 A38860
         IECRES LOAD,EXTPR=(RWORK),MODID=(RTWO),BRANCH=DIRECT    Y02080
*
* THIS SECTION RELOCATES THE CHANNEL PROGRAM FOR WRITING F1,F2,F3
WRITEF1  LA    RFOUR,SAVEADR            PICK UP ADDRESS OF ADDRESS TO
*                                          SEARCH ON
         LA    RTHREE,DS1DSNAM          PICK UP ADDR OF AREA TO  Y02080
*                                          WRITE FROM
         MVC   DS1DSNAM(44),JFCBDSNM   RESET DSNAME PORTION OF F1 AFTER
*                                      USING IT FOR THE CONVERT RTN
CHANGE2  LA    RTWO,CCW1                PICK UP ADDRESS OF FIRST CCW
*                                          TO BE EXECUTED
         IC    RONE,UHOLECTR+1          UPDATE NUMBER OF DSCB'S BUILT
         LA    RONE,1(RONE)
         STC   RONE,UHOLECTR+1
         ST    RTWO,IOB+16                                        13559
         ST    RFOUR,PDLIST            STORE ID AREA ADDRESS      13559
         MVC   CCW2+1(3),PDLIST+1
         MVC   CCW6+1(3),PDLIST+1
         MVC   CCW9+1(3),PDLIST+1
         ST    RTHREE,PDLIST            STORE ADDRESS OF WRITE OUT AREA
         MVC   CCW8+1(3),PDLIST+1
         MVC   CCW11+1(3),PDLIST+1
         MVC   SEEK+3(4),VTOCADR       START SEARCH AT VTOC ADDR  13559
         ST    DRBAK,CCW7+4            SAVE RETURN ADDRESS        13559
         BAL   DRBAK,SEARCHF0          SEARCH FOR FORMAT 0        13559
         L     DRBAK,CCW7+4            RESTORE RETURN ADDRESS     13559
         MVC   SEEK+3(4),0(RFOUR)      SEEK TO FOUND FORMAT 0     13559
         LA    RZERO,CCW6              START CHANNEL PROGRAM ...  13559
         ST    RZERO,IOB+16               AT CCW6                 13559
SEARCHF0 EQU   *                                                  13559
         TM    TYPEFLG,SMCDONE          IS SET MUST COMPLETE ON
         BO    CLRECB                   BRANCH IF YES
*
* LINK TO THE STATUS ROUTINE TO PERFORM A STEP MUST COMPLETE
*
         STM   RJFCB,RETURN,IECREGSV+K12  SAVE REGISTERS 11-14   YM3995
         LR    RTHREE,RWORK             SAVE WORK AREA ADDRESS   YM3995
GETLOCK  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  YM3995X
               RELATED=(LOCAL,IGG032I5(RLSELOCK))  OBTAIN LOCK   YM3995
         LM    RJFCB,RETURN,IECREGSV+K12-ALLOCWKA(RTHREE)        YM3995
*
         USING CVT,RFTEN                CVT ADDRESSABILITY       YM3995
         L     RFTEN,CVTPTR             LOAD CVT ADDRESS         YM3995
         L     RFTEN,CVTABEND           LOAD SECONDARY CVT PTR   YM3995
         USING SCVTSECT,RFTEN           2NDRY CVT ADDRESSABILITY YM3995
         L     RFTEN,SCVTSTAT           LOAD STATUS EP ADDRESS   YM3995
         DROP  RFTEN                                             YM3995
         LA    RZERO,STEPMC             INDICATE STEP MC         YM3995
         XR    RONE,RONE                INDICATE STATUS SET      YM3995
*
         BALR  RETURN,RFTEN             LINK TO STATUS ROUTINE   YM3995
*
RLSELOCK EQU   *                        RELEASE THE LOCK         YM3395
         STM   RJFCB,RETURN,IECREGSV+K12  SAVE REGISTERS 11-14   YM3995
         LR    RTHREE,RWORK             SAVE WORK AREA ADDRESS   YM3995
         SETLOCK RELEASE,TYPE=LOCAL,                             YM3995X
               RELATED=(LOCAL,IGG032I5(GETLOCK))  RELEASE LOCK   YM3995
         LM    RJFCB,RETURN,IECREGSV+K12-ALLOCWKA(RTHREE)        YM3995
*
         OI    DSMADTB2,DSMSMCE         SET ENQ'ED SMC SWITCH    Y02144
         OI    TYPEFLG,SMCDONE          TURN ON SMC INDICATOR
*
* THIS SECTION EXECUTES THE CHANNEL PROGRAMS.
*
CLRECB   EQU   *                                                 A38860
         MVI   ECB,X'00'                CLEAR THE ECB            A38860
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,X'20'                TEST FOR A PERMANENT I/O ERROR
        BCR   7,DRBAK                  BRANCH IF NO PERMANENT I/O ERR
         LA    RFIVE,12                 SET ERROR CODE FOR PERMANENT
*                                          I/O ERROR
EXIT32I7 EQU   *                        EXIT TO IGG032I7       @Z40RSGD
         LA    RTWO,ERROR               BRANCH TO IGG032I7       Y02080
         B     XCT
*
* THIS SECTION SETS UP TO WRITE FORMAT 2 AND FORMAT 3 DSCB'S.
*
WRITEF2  LA    RFOUR,TTRLL              PICK UP ADDRESS FOR F2
WRITE    LA    RTHREE,F5IN              PICK UP ADDRESS TO WRITE FROM
         B     CHANGE2
WRITEF3  LA    RFOUR,SAVEADR+5          PICK UP ADDRESS FOR F3
         XC    DS3ADEXT(95),DS3ADEXT
         B     WRITE
*
*THIS SECTION SET UP AND BRANCHES TO CONVERT ROUTINE TO CONVERT FROM
*RTA TO CCHH
LOOP     MVC   0(1,RTHREE),TYPE        SET EXTENT TYPE
         STC   RFIVE,1(RTHREE)         SET EXTENT SEQUENCE NUMBER
         LA    RFIVE,1(RFIVE)
         L     RSIX,CVTPTR             PICK UP CVT POINTER
         USING CVT,RSIX
         STM   RZERO,RTWO,DS1DSNAM      SAVE REGISTERS ZERO THRU TWO
         STM   RNINE,RETURN,DS1DSNAM+12   AND NINE THRU 15 BEFORE
*                                         BRANCHING TO THE CONVERT RTN
         L     RFTEN,CVTPCNVT          CONVERT ROUTINE ADDRESS
         LA    RONE,DEB                R1=DEB ADDRESS
         LH    RZERO,0(RTWO)           R0=RTN TO BE CONVERTED
         SLL   RZERO,16
         LA    RTWO,DS1DSNAM+36        R2=ADDRESS OF 8 BYTE RESULT AREA
         LR    REIGHT,RWORK            SAVE AREA ADDRESS
         BALR  RETURN,RFTEN
         MVC   2(4,RTHREE),39+DS1DSNAM-FIRST(REIGHT)
         L     RSEVEN,8+DS1DSNAM-FIRST(REIGHT) CONVERT RTA+1 IN THE
         LH    RZERO,2(RSEVEN)            SAME MANNER AS RTA
         BCTR  RZERO,0
         SLL   RZERO,16
         L     RFTEN,CVTPCNVT           PICK UP CONVERT ROUTINE ADDRESS
         BALR  RETURN,RFTEN
         MVC   6(4,RTHREE),39+DS1DSNAM-FIRST(REIGHT)
         LM    RZERO,RTWO,DS1DSNAM-FIRST(REIGHT)
         LM    RNINE,RETURN,DS1DSNAM+12-FIRST(REIGHT)
         LA    RTHREE,10(RTHREE)       UPDATE DSCB POINTER
         LA    RTWO,4(RTWO)            UPDATE EXTENT POINTER
         BR    RETURN
* THIS SECTION BUILDS A FORMAT 3 DSCB
ROUTINE  LA    RTHREE,DS3EXTNT          SET UP TO FILL IN DSCB FORMAT3
         MVI   IECSDSL3,X'03'
         MVC   IECSDSL3+1(3),IECSDSL3
         XC    IECSDSL3+4(40),IECSDSL3+4   CLEAR OUT FORMAT 3 AREA
         MVI   DS3FMTID,X'F3'           SET FORMAT IDENTIFIER
         BR    RETURN
*
* THIS SECTION UPDATES VARIOUS POINTERS.
*
UP235    LA    RTWO,4(RTWO)             UPDATE DADSM TABLE POINTER
UP35     LA    RTHREE,4(RTHREE)         UPDATE PRIME EXTENT POINTER
         LA    RFIVE,1(RFIVE)           UPDATE PRIME EXTENT POINTER
         BR    RETURN
UP246    LA    RTWO,4(RTWO)             UPDATE DADSM TABLE POINTER
         LA    RFOUR,4(RFOUR)           UPDATE INDEX EXTENT POINTER
         LA    RSIX,1(RSIX)             UPDATE INDEX EXTENT POINTER
         BR    RETURN
*                                                              @Z40RSGD
*   MASTER RACDEF PARAMETER LIST.                              @Z40RSGD
*                                                              @Z40RSGD
MRACDEF  RACDEF TYPE=DEFINE,                                   @Z40RSGDX
               DSTYPE=N,                                       @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACDEF  EQU   *-MRACDEF                LENGTH RACDEF          @Z40RSGD
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(NEXTLOAD,I6,ERROR,I7),SVC=032,LENGTH=,     Y02080X
               BRT=YES                                           Y02080
         SPACE 2                                                 Y02080
         IECDSECS CVT,PSA,SCVT,EXPAND=YES                        YM3995
JFCBKEN  DSECT
         IEFJFCBN
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(2,3),ADT=YES  WORK AREA       Y02144
RACDEF   EQU   IECREGSV                 RACDEF PARAMETER LIST  @Z40RSGD
         END
