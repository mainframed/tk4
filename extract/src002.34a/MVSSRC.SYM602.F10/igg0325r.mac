 TITLE 'IGG0325R - FORMAT 5 DSCB PROCESSING'
IGG0325R CSECT
*
* MODULE NAME = IGG0325R
*
* DESCRIPTIVE NAME = FORMAT 5 DSCB PROCESSING
*
* COPYRIGHT = NONE
*
* CHANGE ACTIVITY = SEE BELOW
*                                                                     *
*          RELEASE 19 DELETIONS                                       *
*          RELEASE 20 DELETIONS                                       *
*1026033000,054000,345000-346000                                 A31534
*1026008000-010000,013000-014000,016000-026000,032000-034000,    A31333
*1026114000,116000-118000,186000,201000-206000,223000,226000,    A31333
*1026269000,271000-274000,340000-342000,350000                   A31333
*1026190000-191000,311000,313000-315000,332000,335000            A36311
*          RELEASE 21 DELETIONS                                       *
*1191005000-010000,012500-014500,173000-175000,196000,353000,    M0124
*1191355000-364000,366000-376000,378000,381000-404000,406000-    M0124
*1191408000,414000,417000,419000-421000,428000                   M0124
*1191032800,093000,345000-346000                                 S21040
*0000001000,222000                                               A53183
*          RELEASE 22 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000100-000500,002350-002630,015900-016200,019200-019500,    Y02080
*0000030000,031600,032200,032700,037000,045000,064000-071000,    Y02080
*0000073000,076000,080000,084000-092000,096000,100000-103000,    Y02080
*0000108000,121000,132000,135000,138000,142000-143000,145000-    Y02080
*0000146000,148000,160000-161000,165000-166000,170000,181000,    Y02080
*0000183100-183200,184000,185000,189000-191300,192000-193000,    Y02080
*0000193600-195600,197000-199000,225000,227000,229000,257000-    Y02080
*0000259000,261000,263000-265000,284000,286000,288000-289000,    Y02080
*0000293000,298000-299000,310300,310800,311000,318000,336000-    Y02080
*0000339000,339400,341000-365000,378000-405000,411500-418000,    Y02080
*0000424000-436000,438000,441000-442000,444000-506000            Y02080
*0000015300-024600,031300-031900,032500,033100-034600,039000,    Y02078
*0000049500-050000,072000,075500,082300-082600,086000,100000-    Y02078
*0000100100,108000-110000,132000,139000,141000-144000,149000-    Y02078
*0000151000,153000-154000,156000-158000,160000-162000,164000-    Y02078
*0000166000,182000-183100,183700,185000-187000,196600,225000,    Y02078
*0000227000-228000,230000-231000,253000,255000-261000,264000-    Y02078
*0000266000,280000,286000,288000-289000,294000-296000,306000-    Y02078
*0000320000,326000-327000,443500                                 Y02078
*                                                                     *
*STATUS CHANGE LEVEL 003
*                                                                     *
*                                                                     *
*                                                                     *
* FUNCTION/OPERATION  THIS MODULE SUBTRACTS THE ENTRIES IN THE DADSM  *
*   TABLE FROM THE FREE SPACE IN THE FORMAT 5 DSCB(S). IT CREATES THE *
*   2ND...NTH FORMAT 5 DSCB'S AS NECESSARY.                           *
*                                                                     *
* ENTRY POINTS                                                        *
*   IGG0325R - FROM IGG0325P TO SUBTRACT NON SPLIT-CYLINDER DATA SET  *
*                            EXTENTS FROM MULTIPLE FORMAT 5 DSCB'S    *
*              FROM IGG0325W TO SUBTRACT FORMAT 6 EXTENTS FROM THE    *
*                            FREE SPACE IN THE FORMAT 5 DSCB(S)       *
*                                                                     *
* INPUT  FROM IGG0325P                                                *
*              REGISTER 13 POINTS TO THE ALLOCATE WORK AREA, WHICH    *
*              CONTAINS THE FORMAT 4 DSCB, THE LAST FORMAT 1 OR 3     *
*              DSCB READ, AND THE FIRST FORMAT 5 DSCB.  THE SEEK      *
*              ADDRESS IN THE IOB CONTAINS THE CCHHR OF THE DSCB      *
*              BEING PROCESSED.  'CCW12' CONTAINS A TWO WORD          *
*              PARAMETER LIST CONSISTING OF THE NUMBER OF EXTENTS     *
*              IN THE DADSMTBL TO BE SUBTRACTED AND THE ADDRESS       *
*              OF THE FIRST EXTENT TO BE SUBTRACTED.                  *
*                                                                     *
*        FROM IGG0325W                                                *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 6     *
*              DSCB BEING PROCESSED IN 'DSCBF1', AND THE FIRST FORMAT *
*              5 DSCB IN 'DSCBF5'.  'SEEKCYL' CONTAINS THE CCHHR OF   *
*              THE FORMAT 6 DSCB IN 'DSCBF1'.  'CCW12' WILL CONTAIN   *
*              A TWO WORD PARAMETER LIST CONSISTING OF THE NUMBER     *
*              OF EXTENTS IN THE DADSMTABLE TO BE SUBTRACTED AND      *
*              THE ADDRESS OF THE FIRST EXTENT TO BE SUBTRACTED.      *
*                                                                     *
* OUTPUT TO IGG0325P                                                  *
*              REGISTER 13 POINTS TO THE ALLOCATE WORK AREA, WHICH    *
*              CONTAINS THE FORMAT 4 DSCB, THE LAST FORMAT 1 OR 3     *
*              DSCB READ, AND THE FIRST FORMAT 5 DSCB IN THE CHAIN.   *
*              'COUNT' CONTAINS THE CCHHR OF THE NEXT DSCB TO BE READ.*
*              REGISTER 1 IS ZERO TO INDICATE REENTRY FROM IGG0325R.  *
*                                                                     *
*        TO IGG0325W                                                  *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 6     *
*              DSCB CURRENTLY BEING PROCESSED IN 'DSCBF1', AND THE    *
*              FIRST FORMAT 5 DSCB IN 'DSCBF5'.  REGISTER 1 WILL BE   *
*              ZERO TO INDICATE REENTRY FROM IGG0325R.                *
*                                                                     *
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*          EXCP(0)                                                    *
*          WAIT(1)                                                    *
*          IECRES - TO GET AND FREE WORK AREA EXTENSIONS              *
*                                                                     *
* EXITS NORMAL BRANCH TO IGG0325P TO ADD MORE NON SPLIT CYLINDER      *
*                    DATA SET EXTENTS TO THE DADSM EXTENT TABLE       *
*              BRANCH TO IGG0325W TO ADD MORE F6 EXTENTS TO THE       *
*                    DADSM EXTENT TABLE                               *
*       ERROR  BRANCH TO IGG0325T                                     *
*                                                                     *
*       ERROR CODES ISSUED BY THIS MODULE -                           *
*                                                                     *
*       0C - PERMANENT I/O ERROR                                      *
*                                                                     *
*       94 - OVERLAPPING EXTENTS IN THE VTOC                          *
*                                                                     *
*       98 - OVERLAPPING DOS SPLIT CYLINDER EXTENTS IN THE VTOC       *
*                                                                     *
* TABLES/WORKAREAS - DADSM WORKAREA                                   *
*                                                                     *
* ATTRIBUTES  REENTRANT                                               *
*                                                                     *
REGZERO  EQU   0                        WORK REGISTER            A31333
REGONE   EQU   1                        WORK REGISTER            Y02078
REENTRY  EQU   1                       INDICATES RETURN TO SECOND LOAD
F5ADDR   EQU   2                       ADDR EXTENT IN F5
REGTWO   EQU   2                        EQUATE FOR REGISTER 2    Y02080
DADSMCTR EQU   3                       COUNTER OF EXTENTS IN DADSMTBL
RTNREG2  EQU   4                       BRANCH REGISTER
REGFOUR  EQU   4                        WORK REGISTER            Y02078
ALLOCADR EQU   5                       ADDR EXTENT IN DADSMTBL
LSTF5CTR EQU   6                       CTR OF EXTENTS IN LAST F5 Y02080
F5EXTCTR EQU   7                       NO. OF EXTENT IN F5
REGEIGHT EQU   8                       WORK REGISTER
RERRPASS EQU   8                        ERROR CODE REGISTER      A31534
REGNINE  EQU   9                       WORK REGISTER
REGTEN   EQU   10                      WORK REGISTER
RVTOCWKA EQU   11                       VTOC CONVERSION W/A PTR  Y02078
BASEREG  EQU   12                      BASE REGISTER
RWKAREA  EQU   13                      WORK AREA BASE REGISTER
RETRNREG EQU   14                      RETURN REG
REG14    EQU   14                       WORK REGISTER            Y02078
REG15    EQU   15                       WORK REGISTER            Y02078
*                                                                     *
* OTHER EQUATES                                                       *
*                                                                     *
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
K4       EQU   4                        CONSTANT OF 4            Y02080
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
TWELVE   EQU   12                       VALUE TWELVE             Y02078
DOSBIT   EQU   X'80'                    DOS BIT IN DS4VTOCI      Y02078
VTOCERR  EQU   X'94'                    OVERLAPPING XTENTS ERROR Y02078
DOSERR   EQU   X'98'                    DOS OVERLAPPING EXTENTS  Y02078
GOODIO   EQU   X'20'                    TEST VALUE FOR SUCCESSFUL I/O
ERRCD    EQU   X'0C'                    ERROR CODE FOR UNSUCCESSFUL I/O
C26      EQU   26
C140     EQU   140
C125     EQU   125                      VALUE 125
C27      EQU   27                       VALUE 27
READCOMD EQU   X'0E'                    READ COMMAND CODE
C25      EQU   25                       VALUE 25
NOCC     EQU   X'00'                    NO COMMAND CHAINING      Y02080
SLI      EQU   X'20'                    SUPPRESS WRONG LENGTH    Y02080
CC       EQU   X'40'                    COMMAND CHAINING BIT     Y02080
*                                                                     *
          BALR  BASEREG,ZERO           INITIALIZE BASE REGISTER
         USING *,BASEREG
         USING ALLOCWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         USING VTOCWKA,RVTOCWKA         VTOC W/A ADDRESSABILITY  Y02078
*                                                                     *
* INITIALIZE REGISTERS
*                                                                     *
         LH    DADSMCTR,CCW12+TWO       NBR EXTENTS TO SUBTRACT  Y02080
         L     ALLOCADR,CCW12+FOUR      GET PTR TO EXTENT        Y02080
         LH    LSTF5CTR,LSTF5CT         NBR EXTENTS IN LAST F5   Y02080
*                                                                     *
* SAVE ADDRESS OF FORMAT 5 CURRENTLY BEING PROCESSED AND PUT THIS     *
* ADDRESS IN WHERE TO WRITE 1ST F5 IN MERGE OR EXPAND ROUTINE
*                                                                     *
         BAL   RETRNREG,LOC1STF5        FIND ADDRESS OF 1ST F5   Y02078
         ST    RVTOCWKA,PREVF5AD        INIT. PREVIOUS F5 ADDR   Y02078
         ST    RVTOCWKA,FMTINAD         SAVE WHERE-TO-WRITE ADDR Y02078
         ST    RVTOCWKA,CURRF5AD        SAVE ADDRESS OF THE F5   Y02078
*                                       NOW BEING COMPARED       Y02078
STARTCOM LA    F5EXTCTR,ONE             INT. NO. F5 EXTENT BEING CMP
         LA    F5ADDR,DS5AVEXT          GET ADDR 1ST EXTENT IN F5
BEGNCOMP CLC   ZERO(TWO,ALLOCADR),ZERO(F5ADDR) COMPARE BEGIN OF EXTENTS
         BL    DSERROR                  BRANCH IF LOW            A31333
         BH    MORECK                   BRANCH IF ALLOCATED EXTENT HIGH
         CLC   TWO(TWO,ALLOCADR),TWO(F5ADDR) COMPARE ENDS OF     A31333
*                                       EXTENTS                  A31333
         BH    DSERROR                  ERROR IF EXTENT TO BE    A31333
*                                       SUBTRACTED IS GREATER
*                                       THAN FREE EXTENT
         BL    REPLACE                  BRANCH IF LOWER          A31333
*                                                                     *
* MOVE ALL EXTENTW IN CURRENT FORMAT 5 DSCB'S FOWARD TO WIPE OUT      *
* EXTENT JUST ALLOCATED AND UPDATE LSTF5CTR TO REFLECT ONE LESS       *
* EXTENT (MERGE ROUTINE)                                              *
*                                *                                    *
WIPEOUT  LA    REGEIGHT,C26             GET MAX. NO. EXTENTS IN F5
         SR    REGEIGHT,F5EXTCTR        CALCULATE LOOP CONTROL
         BZ    COMPLAST                BRANCH IF LAST EXTENT IN THIS
*                                      F5 TO BE WIPED OUT
         LR    REGNINE,F5ADDR           GET ADDR FREE EXTENT AFFECTED
MOVEFLD  MVC   ZERO(FIVE,REGNINE),FIVE(REGNINE) MOVE A FIELD
         LA    REGNINE,FIVE(REGNINE)   POINT TO NEXT EXTENT
         BCT   REGEIGHT,MOVEFLD         BRANCH IF MORE EXTENTS TO MOVE
COMPLAST EQU   *                        BRANCH LABEL             Y02080
         CLC   DS5PTRDS+ONE(FOUR),ZEROS  TEST IF LAST IN CHAIN   Y02078
         BNE   MERGERTN                 BRANCH IF NO
         LA    REGEIGHT,C26
         CR    REGEIGHT,LSTF5CTR        26 EXTENTS IN LAST F5    Y02080
         BNE   NEXTCOMP                BRANCH IF LAST F5 NOT FULL
         MVC   F5EXT16(FIVE),F5EXT16+FIVE     ZERO LAST EXTENT
NEXTCOMP EQU   *                        BRANCH LABEL             Y02080
         BCT   LSTF5CTR,WRITENOW        BR IF LAST F5 NOT ZERO   Y02080
         L     REGTEN,FMTINAD           ADDR OF F5 TO BE ZEROED  Y02078
*                                      IN CHANNEL PROGRAM             *
         XC    ZERO(L'VTC1STF5+L'VTCBPTR1,REGTEN),ZERO(REGTEN)   Y02078
*                                       ZERO LAST FORMAT 5 AND   Y02078
*                                       ITS BACKWARD POINTER     Y02078
         LH    REGONE,F5BLDCT           LOAD COUNT OF BUILT F5'S Y02078
         BCTR  REGONE,ZERO              DECREMENT BY ONE         Y02078
         STH   REGONE,F5BLDCT           SAVE UPDATED COUNT       Y02078
         LTR   REGONE,REGONE            TEST IF NO REBUILT F5'S  Y02078
         BZ    UPDATPTR                 BRANCH IF YES            Y02078
         XR    REGZERO,REGZERO          ZERO REGISTER FOR DIVIDE Y02078
         D     REGZERO,FW3              3 F5 SLOTS PER WORK AREA Y02078
         LTR   REGZERO,REGZERO          TEST IF LAST WORK AREA   Y02078
*                                       HAS ANY REBUILT F5'S     Y02078
         BNZ   NEWLAST                  BRANCH IF YES            Y02078
         CLC   F5FNDCT,F5BLDCT          TEST IF WKAREA IS EMPTY  Y02078
         BH    NEWLAST                  BRANCH IF NOT            Y02078
         IECRES FREE,PREFIX=YES,A=(REGTEN),                      Y02078X
               STM=(REGONE,RWKAREA,IECREGSV+TWELVE)  FREE THE    Y02078X
                                        LAST WORK AREA EXTENSION Y02078X
                                        IF IT IS TOTALLY EMPTY   Y02078
NEWLAST  EQU   *                        BRANCH LABEL             Y02078
         L     REGTEN,PREVF5AD          ADDRESS OF NEW LAST F5   Y02078
         ST    REGTEN,LASTF5AD          UPDATE ADDR OF LAST F5   Y02078
         MVC   DSCBF5,ZERO(REGTEN)      MOVE IN NEW LAST F5      Y02078
         MVI   DS5PTRDS,ZERO                                     Y02080
         MVC   DS5PTRDS+ONE(FOUR),DS5PTRDS  ZERO OUT F5 CHAIN    Y02080
*                                       ADDRESS IN NEW LAST F5   Y02080
         BAL   RTNREG2,WRITEF5          WRITE NEW LAST F5
         LA    LSTF5CTR,C26             26 EXTENTS IN LAST F5    Y02080
         B     READNOW5                 GO TO READ F5 NOW BEING CMP
WRITENOW EQU   *                        BRANCH LABEL             Y02078
         L     REGTEN,FMTINAD           WHERE-TO-WRITE ADDRESS   Y02078
         BAL   RTNREG2,WRITEF5          WRITE F5
READNOW5 EQU   *                        BRANCH LABEL             Y02078
         L     REGTEN,CURRF5AD          ADDRESS OF F5 NOW BEING  Y02078
*                                       COMPARED                 Y02078
         ST    REGTEN,FMTINAD           INIT WHERE-TO-WRITE ADDR Y02078
         MVC   DSCBF5,ZERO(REGTEN)      MOVE IN F5 TO COMPARE    Y02078
         B     UPDATPTR                 GO TO SUBT NEXT EXTENT
MERGERTN EQU   *                        BRANCH LABEL             Y02080
         L     REGTEN,DS5PTRDS+ONE      LOAD CHAINING ADDRESS    Y02078
         MVC   DSCBF1,ZERO(REGTEN)      MOVE IN NEXT F5 IN CHAIN Y02078
         MVC   F5EXT16(FIVE),DSF3EXT1   MERGE EXTENT TO PREVIOUS F5
         L     REGTEN,FMTINAD           GET WHERE-TO-WRITE ADDR  Y02078
         MVC   FMTINAD(FOUR),DS5PTRDS+ONE  NEW WHERE-TO-WR ADDR  Y02078
         ST    REGTEN,PREVF5AD          NEW PREVIOUS F5 ADDRESS  Y02078
         BAL   RTNREG2,WRITEF5          WRITE PREVIOUS F5
         XC    DSCBF5(C140),DSCBF5      ZERO F5 AREA
         MVC   DS5AVEXT(C125),DSF3EXT2  UPDATE NEXT F5 IN CHAIN
         MVC   DS5PTRDS,DS1PTRDS        SAVE CHAINING POINTER    Y02080
         B     COMPLAST                 GO TO CHECK FOR LAST F5
*                                                                     *
* THIS ROUTINE MODIFIES A FORMAT 5 EXTENT WHEN THE ALLOCATED EXTENT   *
* BEGINS AT THE BEGINNING OF THE FORMAT 5 EXTENT.                     *
*                                                                     *
REPLACE  MVC   ZERO(TWO,F5ADDR),TWO(ALLOCADR) UPDATE LOWER EXTENT BOUND
         B     WRITENOW                 GO TO WRITE F5
UPDATPTR LA    ALLOCADR,FOUR(ALLOCADR)  UPDATE PTR TO EXTENT TO BE SUBT
         BCT   DADSMCTR,BEGNCOMP        BRANCH IF MORE EXTENTS TO SUBT
         STH   LSTF5CTR,LSTF5CT         SAVE LAST F5 EXTENT CTR  Y02080
         BAL   RETRNREG,LOC1STF5        FIND ADDRESS OF 1ST F5   Y02078
         MVC   DSCBF5,VTC1STF5          MOVE IN FIRST F5         Y02078
         CLI   CCW12,ZERO               ENTRY FROM IGG0325P      Y02080
         BNE   UNCHAIND                 BRANCH IF NO             A31333
         CLC   SEEKCYL(FOUR),DS4VTOC6   LAST TRACK IN VTOC       A31333
         BNE   NOTLAST                  BRANCH IF NOT            A31333
         CLC   SEEKREC(ONE),DS4DEVDT    LAST RECORD ON TRACK     A31333
         BNE   NOTLAST                  BRANCH IF NOT            Y02078
         MVI   CCW6+K4,NOCC             UNCHAIN READ FROM RD CNT Y02078
         B     UNCHAIND                 BRANCH TO REREAD DSCB    Y02078
NOTLAST  EQU   *                                                 A31333
         MVI   CCW6+K4,CC               CHAIN READ TO READ COUNT Y02080
UNCHAIND EQU   *                                                 A31333
         BAL   RETRNREG,READTOF1        READ LAST F1 OR F3 READ  Y02078
         SR    REENTRY,REENTRY          ZERO PARAMETER REG
         CLI   CCW12,ZERO               ENTRY FROM IGG0325P      Y02080
         BNE   LOAD325W                 BRANCH IF NO             A31333
         LA    REGTWO,F5LOAD            POINT TO ID OF IGG0325P  Y02080
         B     XCTLHERE                 GO XCTL                  A31333
LOAD325W EQU   *                                                 A31333
         LA    REGTWO,F6LOAD            POINT TO ID OF IGG0325W  Y02080
XCTLHERE EQU   *                        BRANCH LABEL             Y02080
        IECRES LOAD,EXTPR=(RWKAREA),MODID=(REGTWO),BRANCH=DIRECT Y02080
DSERROR  EQU   *                                                 A31333
         LA    RERRPASS,VTOCERR         OVERLAPPING EXTENTS ERR  Y02078
         CLI   CCW12,ZERO               ENTRY FROM IGG0325P      Y02078
         BE    ERREXIT                  BRANCH IF YES            Y02078
         TM    DS4VTOCI,DOSBIT          TEST IF DOS VOLUME       Y02078
         BNO   ERREXIT                  BRANCH IF NOT            Y02078
         LA    RERRPASS,DOSERR          DOS SPLIT/CYL EXTENT ERR Y02078
ERREXIT  EQU   *                        BRANCH LABEL             Y02080
         LA    REGTWO,LASTLOAD          POINT TO ID OF IGG0325T  Y02080
         B     XCTLHERE                 GO TO XCTL
*                                                                     *
* THIS SECTION CHECKS TO SEE IF ALLOCATED EXTENT DIVIDES FREE EXTENT  *
* IN TWO PARTS,IF THE UPPER BOUNDRY OF THE FREE EXTENT MUST BE UPDATED*
* OR IF THE ALLOCATED EXTENT MUST BE COMPARED AGAINST THE NEXT FREE   *
* EXTENT                                                              *
*                                                                     *
MORECK   CLC   ZERO(TWO,ALLOCADR),TWO(F5ADDR) IS ALLOCATED EXT IN THIS
*                                       FREE EXTENT                   *
         BL    EXPANDCK                 BRANCH IF YES
         LA    F5EXTCTR,ONE(F5EXTCTR)
         LA    REGEIGHT,C27
         CR    F5EXTCTR,REGEIGHT        HAS LAST EXTENT IN THIS F5
*                                       BEEN COMPARED                 *
         BE    READNXT                  BRANCH IF YES
         LA    F5ADDR,FIVE(F5ADDR)      POINT TO NEXT EXTENT
         CLC   ZERO(FOUR,F5ADDR),ZEROS  IS THIS EXTENT ZERO      A53183
         BE    DSERROR                  ERROR IF EXTENT TO BE    A31333
*                                       SUBTRACTED IS NOT WITHIN
*                                       ANY FREE EXTENT
         B     BEGNCOMP                 BRANCH TO BEGIN COMPARISON
READNXT  EQU   *                        BRANCH LABEL             Y02080
         CLC   DS5PTRDS+ONE(FOUR),ZEROS  IS THIS THE LAST F5     Y02078
         BE    DSERROR                  ERROR IF EXTENT TO BE    A31333
*                                       SUBTRACTED IS NOT WITHIN
*                                       ANY FREE EXTENT
         L     REGTEN,DS5PTRDS+ONE      LOAD NEXT F5 ADDRESS     Y02078
         MVC   DSCBF5,ZERO(REGTEN)      MOVE IN NEXT F5          Y02078
         MVC   PREVF5AD,FMTINAD         SAVE PREVIOUS F5 ADDR    Y02080
         ST    REGTEN,FMTINAD           SAVE WHERE-TO-WRITE ADDR Y02078
UPDATNXT EQU   *                        BRANCH LABEL             Y02078
         ST    REGTEN,CURRF5AD          ADDR F5 BEING COMPARED   Y02078
         B     STARTCOM                 BRANCH TO BEGIN COMPARISON
EXPANDCK CLC   TWO(TWO,ALLOCADR),TWO(F5ADDR) ARE ENDS OF EXTENTS EQUAL
         BE    REPLACE2                 BRANCH IF YES
         BH    DSERROR                  ERROR IF EXTENT TO BE    A31333
*                                       SUBTRACTED IS GREATER
*                                       THAN FREE EXTENT
         MVC   DSCBF1(FIVE),F5EXT16
         LA    REGNINE,C26              GET MAX.NO. EXTENTS IN F5
         CR    REGNINE,F5EXTCTR         IS LAST EXTENT IN F5 BEING
*                                       DIVIDED                       *
         BE    SETUP                    BRANCH IF YES
         LA    REGNINE,FIVE
         LA    REGEIGHT,F5EXT15
MOVE     MVC   FIVE(FIVE,REGEIGHT),ZERO(REGEIGHT) MOVE A FIELD
         CR    REGEIGHT,F5ADDR          HAVE ALL FIELDS BEEN MOVED
         BE    CONT                     BRANCH IF YES
         SR    REGEIGHT,REGNINE         UPDATE POINTER TO NEXT FIELD
         B     MOVE                     GO TO MOVE NEXT FIELD
SETUP    MVC   TWO(TWO,F5ADDR),ZERO(ALLOCADR) SET UP NEW BOUND TO EXT
         MVC   DSCBF1(TWO),TWO(ALLOCADR)
         B     LASTF5CK                 GO TO SEE IF THIS IS LAST F5
CONT     MVC   SEVEN(TWO,F5ADDR),TWO(F5ADDR) SET UP
         MVC   TWO(TWO,F5ADDR),ZERO(ALLOCADR)    NEW BOUNDS FOR
         MVC   FIVE(TWO,F5ADDR),TWO(ALLOCADR)               DIVIDED EXT
LASTF5CK EQU   *                        BRANCH LABEL             Y02078
         L     REGTEN,FMTINAD           GET WHERE-TO-WRITE ADDR  Y02078
         BAL   RTNREG2,WRITEF5          WRITE F5
         CLC   DS5PTRDS+ONE(FOUR),ZEROS  IS THIS LAST F5 DSCB    Y02078
         BE    FINXPAND                 BRANCH IF YES
         MVC   PREVF5AD,FMTINAD         SAVE PREVIOUS F5 ADDR    Y02080
         L     REGTEN,DS5PTRDS+ONE      GET NEXT F5 ADDRESS      Y02078
         ST    REGTEN,FMTINAD           SAVE WHERE-TO-WRITE ADDR Y02078
         MVC   DSCBF5,ZERO(REGTEN)      MOVE IN NEXT F5          Y02078
         MVC   DSF3SAVE(FIVE),F5EXT16   SAVE LAST EXTENT IN F5 JUST
*                                       READ                          *
         LA    REGZERO,FIVE             GET POINTER DECREMENT    A31333
         LA    REGEIGHT,C25             LOAD LOOP CONTROL
         LA    REGNINE,F5EXT15          POINT TO EXTENT TO BE    A31333
*                                       MOVED                    A31333
MOVE2    EQU   *                                                 A31333
         MVC   FIVE(FIVE,REGNINE),ZERO(REGNINE) MOVE A FIELD     A31333
         SR    REGNINE,REGZERO          DECREMENT PTR TO FIELD   A31333
         BCT   REGEIGHT,MOVE2           BRANCH IF MORE FIELDS TO MOVE
         MVC   DS5AVEXT(FIVE),DSCBF1    MOVE IN NEW FIRST EXTENT
         MVC   DSCBF1(FIVE),DSF3SAVE    POSITION EXTENT SAVED FROMF5
         B     LASTF5CK                 GO TO WRITE F5 JUST EXPANDED
REPLACE2 MVC   TWO(TWO,F5ADDR),ZERO(ALLOCADR) SET UP NEW UPPER BOUND
         L     REGTEN,FMTINAD           GET WHERE-TO-WRITE ADDR  Y02078
         BAL   RTNREG2,WRITEF5          WRITE F5
         B     UPDATPTR                 GO TO SUBT NEXT EXTENT
FINXPAND LA    REGEIGHT,C26
         CR    LSTF5CTR,REGEIGHT        IS LAST F5 FULL          Y02080
         BL    INCRCTR                  BRANCH IF NO
         XR    REGTEN,REGTEN            INDICATE NEED OF NEW F5  Y02078
*                                       SLOT IN A W/A EXTENSION  Y02078
         BAL   RTNREG2,WRITEF5          WRITE F5 JUST EXPANDED
*                                       REGTEN POINTS TO F5 SLOT Y02078
         XC    DSCBF5(C140),DSCBF5      CLEAR F5 AREA
         MVC   DS5AVEXT(FIVE),DSCBF1    MOVE EXTENT TO NEW F5
         BAL   RTNREG2,WRITEF5          WRITE NEW F5
         LA    LSTF5CTR,ONE             INITIALIZE LAST F5 CTR   Y02080
         B     READNOW5                 READ F5 BEING COMPARED
INCRCTR  EQU   *                        BRANCH LABEL             Y02080
         LA    LSTF5CTR,ONE(LSTF5CTR)   UPDATE CTR OF EXTENTS IN Y02080
*                                       LAST F5                  Y02080
         CR    REGEIGHT,F5EXTCTR        IS FREE EXTENT JUST DIVIDED
*                                       THE LAST EXTENT IN THAT F5
         BNH   READNOW5                 BRANCH IF YES
PTRUPDAT LA    F5ADDR,FIVE(F5ADDR)      POINT TO NEXT FREE EXTENT
         LA    F5EXTCTR,ONE(F5EXTCTR)   UPDATE CTR OF FREE EXTENT
         B     READNOW5                 READ F5 NOW BEING COMPARED
*
* THIS ROUTINE LOCATES THE ADDRESS OF THE FIRST FORMAT 5 DSCB IN
* THE VTOC EXTENSION WORK AREA(S) AND RETURNS ITS ADDRESS IN
* REGISTER RVTOCWKA.
*
LOC1STF5 EQU   *                        BRANCH LABEL             Y02078
         LA    REGEIGHT,ZERO(RWKAREA)   INITIAL WORK AREA ADDR   Y02078
         LA    REGONE,IECEXTPR-IECPREFX  LENGTH OF PREFIX        Y02078
         SR    REGEIGHT,REGONE          CALCULATE PREFIX ADDRESS Y02078
NXTPREFX EQU   *                        BRANCH LABEL             Y02078
         USING IECPREFX,REGEIGHT        PREFIX ADDRESSABILITY    Y02078
         L     REGEIGHT,IECCORP2        LOAD ADDR OF NEXT PREFIX Y02078
         CLC   IECCORID,VCWKAID         TEST IF VTOC WORK AREA   Y02078
         BNE   NXTPREFX                 BRANCH IF NOT            Y02078
         L     RVTOCWKA,IECCORAD        LOAD ADDR OF EXTENSION   Y02078
         BR    RETRNREG                 RETURN                   Y02078
         DROP  REGEIGHT                                          Y02078
*
* THIS ROUTINE MOVES A FORMAT 5 DSCB FROM 'DSCBF5' TO THE LOCATION
* POINTED TO BY REGISTER 10.  IF REGISTER 10 IS ZERO, THIS INDICATES
* THAT A FORMAT 5 DSCB IS BEING EXPANDED AND THAT A NEW FORMAT 5 SLOT
* MUST BE FOUND IN AN EXISTING WORK AREA EXTENSION OR THAT A NEW WORK
* AREA EXTENSION MUST BE OBTAINED.  THE ADDRESS OF THE NEW SLOT IS
* INSERTED INTO THE CHAINING FIELD OF THE FORMAT 5 IN 'DSCBF5' BEFORE
* IT IS WRITTEN TO THE LOCATION WHOSE ADDRESS IS IN 'FMTINAD'.  THEN
* THE ADDRESS OF THE NEW FORMAT 5 SLOT IN RETURNED IN REGISTER 10.
*
WRITEF5  EQU   *                        BRANCH LABEL             Y02078
         LTR   REGTEN,REGTEN            TEST IF A NEW F5 SLOT    Y02078
*                                       MUST BE FOUND            Y02078
         BZ    BLDNEWF5                 BRANCH IF YES            Y02078
         MVC   ZERO(L'DSCBF5,REGTEN),DSCBF5  MOVE OUT UPDATED F5 Y02078
         BR    RTNREG2                  RETURN                   Y02078
BLDNEWF5 EQU   *                        BRANCH LABEL             Y02078
         XR    REGEIGHT,REGEIGHT        PREPARE FOR DIVISION     Y02078
         LH    REGNINE,F5BLDCT          GET NBR OF REBUILT F5'S  Y02078
         D     REGEIGHT,FW3             3 F5'S PER WKA EXTENSION Y02078
         L     REGONE,FMTINAD           LOAD WHERE-TO-WRITE ADDR Y02078
         LTR   REGEIGHT,REGEIGHT        TEST IF NO FREE F5 SLOT  Y02078
         BNZ   FREESLOT                 BRANCH IF A FREE SLOT    Y02078
         CLC   F5BLDCT,F5FNDCT          TEST FOR AN EXTENSION    Y02078
*                                       WITHOUT ANY REBUILT F5'S Y02078
         BNL   NEWKAREA                 BRANCH IF NOT            Y02078
NEXTWKA  EQU   *                        BRANCH LABEL             Y02078
         LR    REG14,REGONE             LOAD WHERE-TO-WRITE ADDR Y02078
         LA    REG15,VTC3RDF5-VTC1STF5  OFFSET TO W/A BEGINNING  Y02078
         LA    REG15,IECEXTPR-IECPREFX(REG15)  PREFIX LENGTH     Y02078
         SR    REG14,REG15              POINT TO WKAREA PREFIX   Y02078
         USING IECPREFX,REG14           PREFIX ADDRESSABILITY    Y02078
         L     REG14,IECCORP2           LOAD ADDR OF NEXT PREFIX Y02078
         L     REGTEN,IECCORAD          LOAD ADDR OF EXTENSION   Y02078
*                                       WHICH IS FREE SLOT ADDR  Y02078
         DROP  REG14                                             Y02078
MOVEF5IN EQU   *                        BRANCH LABEL             Y02078
         ST    REGTEN,DS5PTRDS+ONE      INSERT CHAINING ADDRESS  Y02078
         MVC   ZERO(L'DSCBF5,REGONE),DSCBF5  MOVE OUT UPDATED F5 Y02078
         LH    REGNINE,F5BLDCT          GET NBR OF REBUILT F5'S  Y02078
         LA    REGNINE,ONE(REGNINE)     INCREMENT COUNT          Y02078
         STH   REGNINE,F5BLDCT          SAVE UPDATED COUNT       Y02078
         ST    REGTEN,LASTF5AD          UPDATED PTR TO LAST SLOT Y02078
         ST    REGONE,VTCBPTR(REGTEN)   INSERT BACKWARD POINTER  Y02078
         BR    RTNREG2                  RETURN                   Y02078
FREESLOT EQU   *                        BRANCH LABEL             Y02078
         LA    REGTEN,VTCNXTF5(REGONE)  POINT TO NEXT W/A SLOT   Y02078
         B     MOVEF5IN                 GO MOVE IN UPDATED F5    Y02078
NEWKAREA EQU   *                        BRANCH LABEL             Y02078
         LR    REG14,REGONE             SAVE WHERE-TO-WRITE ADDR Y02078
         IECRES GET,EXTPR=(RWKAREA),LV=VWALNGTH,ID=VCWA,         Y02078X
               STM=(F5ADDR,REG14,IECREGSV+12)  OBTAIN NEXT WKA   Y02078
         LR    REGTEN,REGONE            ADDR OF NEW EXTENSION    Y02078
         LR    REGONE,REG14             RESTORE WHERE-TO-WR ADDR Y02078
         B     MOVEF5IN                 GO MOVE IN UPDATED F5    Y02078
*
* THIS ROUTINE REREADS THE FORMAT 1, 3, OR 6 DSCB BEING PROCESSED.
*
READTOF1 LA    REGEIGHT,DSCBF1          GET ADDR OF F1 AREA
FURTHER  ST    REGEIGHT,CCW6            STORE ADDR OF AREA RECEIVING F5
         LA    REGEIGHT,CCW4
         ST    REGEIGHT,CHNPGADR        SET CHANNEL PROGRAM TO READ
         MVI   CCW6,READCOMD            MOVE IN READ CODE
EXCHANPG MVI   ECB,ZERO
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,GOODIO
         BCR   ONE,RETRNREG        RETURN IF GOOD I/O            A36311
         LA    RERRPASS,ERRCD
         B     ERREXIT                  BRANCH IF ERROR
*                                                                     *
* CONSTANTS                                                           *
*                                                                     *
VCWKAID  DC    C'VCWA'                  VTOC WORK AREA PREFIX ID Y02078
FW3      DC    F'3'                     3 F5'S PER WKA EXTENSION Y02078
*                                                                     *
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES                       *
*                                                                     *
         XCTLTABL ID=(F5LOAD,5P,F6LOAD,5W,LASTLOAD,5T),          Y02080X
               SVC=032,LENGTH=,BRT=YES                           Y02080
         EJECT                                                   Y02080
CVT      DSECT                          CVT DSECT                Y02080
         CVT                                                     Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(5)   ALLOCATE WORK AREA       Y02080
DS4VTOC6 EQU   DS4VTOCE+6
DSF3EXT1 EQU   DSCBF1+4
DSF3EXT2 EQU   DSCBF1+9
DSF3SAVE EQU   DSCBF1+5
F5EXT15  EQU   DSCBF5+124               EXTENT 15 IN F5 DSCB
F5EXT16  EQU   DSCBF5+129               EXTENT 16 IN F5 DSCB
CHNPGADR EQU   IOB+16                   ADDR. CHANNEL PROGRAM IN IOB
SEEKCYL  EQU   SEEK+3
SEEKREC  EQU   SEEK+7
ZEROS    EQU   CCW2+4                   FULL WORD OF ZERO
CURRF5AD EQU   TTRLL                    CURRENT FORMAT 5 ADDRESS Y02078
         EJECT                                                   Y02078
VWKAREA  IECVTCWA                       VTOC CONVERSION WORKAREA Y02078
         END
