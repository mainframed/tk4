 TITLE 'IGG020D1 - PARTIAL RELEASE - DADSM UPDATE'
IGG020D1 CSECT
*          RELEASE 16 DELETIONS
*3001090600                                                        AAAA
*          RELEASE 17 DELETIONS
*0762001100,045000,083000                                         DM0D
*0762064200                                                       20055
*          RELEASE 18 DELETIONS
*3462                                                             22500
*3462                                                             MCS
*          RELEASE 19 DELETIONS
*0945039600-044800,072400,076800                                 O19117
*          RELEASE 20 DELETIONS
*3043                                                            A35327
*          RELEASE 21 DELETIONS
*0980005400,006400-006600,007000-008600,009800,011000,036800,    A37199
*0980045400,056000-056200,076600,082800,084000,084400,087600,    A37199
*0980090800-091000                                               A37199
*0980000280,007600,015800-016000,089400-090000,090400            A39292
*          RELEASE 21.7 DELETIONS
*0000003200,016200-016400,017800-018400,072600,075700,083050-   SA54549
*0000083150,084800,086000-086800                                SA54549
*0000000840-001000,018600,019000,027000,028400,031000-          SA56400
*0000032400,050400,075600                                       SA56400
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,000850,001200,003400-003600,004800-005200,    Y02080
*0000007100-007200,007500-007600,015730-015740,016800,041600,    Y02080
*0000043000-045280,083000,083040,083050,083400,083600-088800     Y02080
*0000026630-026640,037600                                       XA01999
*0000                                                           YA02385
*          VS1 RELEASE 02 DELETIONS/CHANGES
*0000028410-028430                                               XM0835
*
* MODULE NAME - IGG020D1
*
* DESCRIPTIVE NAME - PARTIAL RELEASE / DADSM UPDATE
*
* COPYRIGHT - NONE
*
* CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING THE CSECT CARD
*
*STATUS CHANGE LEVEL 010
*ATTRIBUTES - REENTRANT
*
*FUNCTION - THIS MODULE UPDATES THE EXTENTS IN THE FORMAT 5 DSCB
*           RECORDS. THE NEW EXTENTS ARE PASSED TO THIS MODULE IN
*           A TABLE IN THE WORK AREA. WHEN AN EXTENT FROM THE TABLE
*           IS CONTIGUOUS WITH ONE OR TWO OF THE EXTENTS IN A FORMAT
*           5 DSCB RECORD, THE EXTENTS IN THAT RECORD ARE REPLACED
*           WITH ONE EXTENT THAT DESCRIBES THE ENTIRE AREA.
*
*ENTRIES-THE ONLY ENTRY POINT TO THIS MODULE IS IGG020D1. ENTRY
*        IS MADE FROM IGG020D0.
*
*SUPERVISOR CALLS AND MACROS. THE FOLLOWING ARE SUPERVISOR CALLS
*          ISSUED IN THE MACRO EXPANSIONS:
*                    EXCP(0) READ FROM OR WRITE TO DIRECT ACCESS DEVICE
*                    WAIT(1) WAIT ON EVENT CONTROL BLOCK
*
*OTHER MACROS USED
*                    IECPRLWA - DEFINES THE PARTIAL RELEASE WORK AREA
*                    IECSDSL1 - ENABLES SYMBOLIC ADDRESSING OF DSCBS
*                    IECDSECT - DEFINES THE CLOSE WORK AREA
*
*INPUT - AT ENTRY TO THIS MODULE, REGISTER 11 POINTS TO THE RELEASE
*        WORK AREA, WHICH CONTAINS THE FORMAT 4 DSCB, THE FIRST
*        FORMAT 5 DSCB, AND THE DADSM EXTENT TABLE. REGISTER 13
*        POINTS TO THE I/O SUPPORT WORK AREA, WHICH CONTAINS THE
*        UPDATED FORMAT 1 DSCB.
*        REGISTER 9 REFLECTS THE NUMBER OF EXTENTS IN THE
*        DADSM TABLE.
*
*OUTPUT - UPDATED FORMAT 5 DSCB'S.
*
*STORAGE - PROGRAM CODE CSECT    = LESS THAN 2048 BYTES
*          RELEASE WORK AREA     = 620 BYTES
*          RPS WORK AREA         = 128 BYTES
*          I/O SUPPORT WORK AREA
*
*EXITS -
*        NORMAL - BRANCH TO IGG020P3 WITH ZERO IN REGISTER 2
*        ERROR  - BRANCH TO IGG020P3 WITH THE FOLLOWING ERROR
*                 CODE IN REGISTER 2:
*
*        X'10' - PERMANENT I/O ERROR
*
*
*REGISTER USAGE
R0       EQU   0
TEMP     EQU   0
R1       EQU   1
ERRETREG EQU   2
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
COUNT    EQU   5
R6       EQU   6
INDEX3   EQU   6
WORKREG1 EQU   7
COUNT1   EQU   7
INDEX2   EQU   8
RTKK     EQU   8
EXTCTR   EQU   9
RINSCAN  EQU   9
R10      EQU   10
INDEX1   EQU   10
ROUTSCAN EQU   10
WRKAREA  EQU   11
RXBASE   EQU   12
R13      EQU   13
RXCLOWKA EQU   13
BRANCH   EQU   14
RINEND   EQU   15
R15      EQU   15
WORKREG  EQU   15
WORKREG2 EQU   15
RX       EQU   15
*
*** OTHER EQUATES
*
IOERROR  EQU   X'10'                    I/O ERROR CODE           A37199
K0       EQU   0                        ZERO DISPLACEMENT       SA56400
TWO      EQU   2                        DISPLACEMENT OF TWO     SA56400
K2       EQU   2                        LENGTH OF TWO           SA56400
K4       EQU   4                        DISPLACEMENT OF FOUR    SA56400
K6       EQU   6                        DISPLACEMENT IS SIX     SA56400
*
         BALR  RXBASE,0                 LOAD BASE REGISTER      SA54549
         USING *,RXBASE                 BASE FOR MODULE         SA54549
         USING CLOSEWKA,RXCLOWKA
         USING PRLSEWKA,WRKAREA         WORK AREA ADDRESSABILITY Y02080
         USING CVT,R15
*
*** THIS SECTION INITIALIZES DSCB CCHHR'S AND COUNTERS.
*
SETICCHH EQU   *
         MVC   INCCHHR(5),DS5PTRDS           SET NEXT FORMAT 5 CCHHR
*                                            FOR NEXT DADSM INPUT.
SETNCCHH EQU   *
         MVC   NEXTDADS(5),INCCHHR          INITIALIZE NEXT DADSM PTR
*                                            DADSM.
         LA    INDEX1,ENTRIES                SET INDEX FOR DADSMTBL
*                                            ENTRIES.
         BAL   BRANCH,CVTORTA0               BRANCH TO CONVERT EXTENTS
*                                            OF INPUT FORMAT 5 FROM
*                                            XXYYZ TO RTA-RTA+1.
         LA    COUNT1,26                     LOAD TRANSFER DADSM COUNT
*                                            TO OUTPUT FOR 26 EXTENTS.
         EX    R0,SETOUT                    CLEAR OUTPUT DADSM AREA.
         LA    INDEX3,OUTDSCB+36             SET INDEX FOR OUTPUT AREA.
         LTR   COUNT,COUNT             ALL SPACE ALLOCATED
         BZ    OUTPUT4                 YES
*
*** THIS SECTION MERGES ENTRIES FROM THE DADSM EXTENT TABLE WITH
*   ENTRIES FROM INPUT FORMAT 5 DSCB.
*
MERGE1   CLC   2(2,INDEX1),0(INDEX2)         COMPARE FOR CONTIGUOUS
*                                            EXTENTS BETWEEN RTA+1 OF
*                                            ENTRY AND RTA OF EXTENT.
         BH    MERGE3                        THE RTA OF THE ENTRY IS
*                                            GREATER THAN THE RTA OF
*                                            THE EXTENT.
         BL    MERGE8                        ENTRY GOES BEFORE 1ST
*                                            EXTENT.
         MVC   0(2,INDEX2),0(INDEX1)         ENTRY AND DADSM ARE
*                                            CONTIGUOUS SET RTA+1 OF
*                                            EXTENT=RTA OF ENTRY.
MERGE2   LA    INDEX1,4(INDEX1)              INCREMENT DADSMTBL INDEX
*                                            FOR NEXT ENTRY.
         BCT   EXTCTR,MERGE3                 DECREMENT THE NUMBER OF
*                                            ENTRIES IN DADSMTBL AND
*                                            BRANCH IF MORE ENTRIES
*                                            TO CHECK FOR CONTIGUOUS
*                                            EXTENTS.
MERGE6   EQU   *
         MVC   K0(K4,INDEX3),K0(INDEX2) XFER INPUT TO           SA56400
*                                       OUTPUT                  SA56400
         LTR   COUNT,COUNT              ALL SPACE ALLOCATED     XA01999
         BZ    OUTPUT3                  BRANCH IF YES           XA01999
MERGE6A  LA    INDEX2,K4(INDEX2)        INCREMENT INPUT INDEX   SA56400
         BCT   COUNT,MERGE10            REDUCE EXTENT COUNT     SA56400
         BCTR  COUNT1,R0                REDUCE XFER COUNT       SA56400
         B     OUTPUT2                                          SA56400
MERGE3   CLC   0(2,INDEX1),2(INDEX2)         COMPARE FOR CONTIGUOUS
*                                            EXTENTS BETWEEN RTA+1 OF
*                                            EXTENT AND RTA OF ENTRY.
         BH    MERGE6                        ENTRY GREATER THAN EXTENT
         BL    OVERLAP                  BRANCH IF EXTENT        SA56400
*                                       IN ENTRIES OVERLAPS     SA56400
*                                       EXTENT IN F5            SA56400
         CLC   2(2,INDEX1),4(INDEX2)         COMPARE FOR A COLLAPSE
*                                            BETWEEN ENTRY AND EXTENTS.
         BL    MERGE5                   NO COLLAPSE             SA56400
         BH    CHECK                    CHECK IF OVERLAPPING     XM0835
*                                       EXTENTS WERE FOUND       XM0835
MERGE4   MVC   4(2,INDEX2),0(INDEX2)         DADSM COLLAPSE-MOVE RTA
*                                            OF EXTENT TO RTA OF NEXT
*                                            EXTENT.
         LA    INDEX2,4(INDEX2)              INCREMENT INPUT FORMAT 5
*                                            INDEX FOR NEXT EXTENT.
         BCT   COUNT,MERGE2                  REDUCE NUMBER OF EXTENTS
*                                            AND CHECK NEXT ENTRY.
         LA    COUNT,1                       LAST EXTENT.
MERGE5   MVC   2(2,INDEX2),2(INDEX1)         RTA+1 OF EXTENT=RTA OF
*                                            ENTRY MOVE RTA OF ENTRY
         B     MERGE2                  CHECK FOR CONTIGUOUS
*                                      DADSMTBL ENTRIES
MERGE8   LA    R1,4                    SET
         SR    INDEX2,R1               ENTRY INDEX.
         MVC   0(4,INDEX2),0(INDEX1)   MOVE ENTRY BEFORE EXTENT.
         LA    COUNT,1(COUNT)          INCREMENT EXTENT COUNT
         B     MERGE2                  CHECK FOR CONTIG DADSMTBL
CHECK    EQU   *                                                 XM0835
         NC    K4(K4,INDEX2),K4(INDEX2) IS NEXT EXTENT IN F5     XM0835
*                                       ALL ZEROES               XM0835
         BZ    MERGE5                   IF YES, NO OVERLAPPING   XM0835
*                                       EXTENTS WERE FOUND       XM0835
         LTR   COUNT,COUNT              ALL SPACE ALLOCATED     XA01999
         BZ    MERGE5                   BRANCH IF YES           XA01999
*
*** THIS SECTION MERGES ENTRIES FROM THE DADSM EXTENT TABLE
*   WITH ENTRIES FROM INPUT FORMAT 5 DSCB WHEN OVERLAPPING
*   EXTENTS HAVE BEEN DETECTED AND SETS A SWITCH SO THAT THE DIRF
*   BIT WILL REMAIN ON AT EXIT FROM PARTIAL RELEASE
*
OVERLAP  EQU   *
         OI    DADSMTBL,ERXTENT         INDICATE OVERLAPPING    SA56400
*                                       EXTENTS                 SA56400
         CLC   K0(TWO,INDEX1),K0(INDEX2) IS RTA IN ENTRIES      SA56400
*                                       LOWER THAN RTA IN F5    SA56400
         BNL   NEXTRTA                  BR IF ENTRIES RTA IS    SA56400
*                                       HIGH OF EQUAL           SA56400
         MVC   K0(TWO,INDEX2),K0(INDEX1)  MOVE ENTRIES RTA      SA56400
*                                       OVER FORMAT 5 RTA       SA56400
NEXTRTA  EQU   *                                                SA56400
         CLC   K2(TWO,INDEX1),K2(INDEX2)  IS RTA+1 IN ENTRIES   SA56400
*                                       HIGHER THAN RTA+1 IN F5 SA56400
         BNH   MERGE2                   IF HI OR EQAL, BRANCH   SA56400
         MVC   K2(TWO,INDEX2),K2(INDEX1)  MOVE ENTRIES RTA+1    SA56400
*                                       OVER F5 RTA+1           SA56400
         NC    K4(K4,INDEX2),K4(INDEX2) IS IT END OF INPUT F5   SA56400
         BZ    MERGE6                   BRANCH IF YES           SA56400
         CLC   K2(TWO,INDEX2),K4(INDEX2)  SHOULD EXTENTS        SA56400
*                                       BE COLLAPSED            SA56400
         BL    MERGE2                   BRANCH IF NO            SA56400
         CLC   K2(TWO,INDEX2),K6(INDEX2)  DOES CURRENT EXTENT   SA56400
*                                       IN FORMAT 5 ENGULF NEXT SA56400
*                                       EXTENT IN FORMAT 5      SA56400
         BNH   MERGE4                   BRANCH IF NO
         MVC   K6(TWO,INDEX2),K2(INDEX2)  MOVE ENDING ADDRESS   SA56400
*                                       INTO NEXT EXTENT        SA56400
         B     MERGE4                                           SA54600
MERGE10  BCT   COUNT1,OUTPUT7                REDUCE OUTPUT XFER COUNT
*                                            AND BRANCH TO OUTPUT CHECK
*
*** THIS SECTION DETERMINES WHEN AND WHAT TYPE OF DSCB (FORMAT 0,
*   FORMAT 4 OR FORMAT 5) SHOULD BE WRITTEN.
*
OUTPUT1  LTR   COUNT,COUNT                   CHECK NUMBER EXTENTS.
         BP    COLLAPSE                      EXTENTS LEFT.
OUTPUT2  CLI   INCCHHR+4,X'00'               ANY MORE FORMAT 5 DSCBS.
         BNE   DADSMIN                       YES.
OUTPUT3  LA    INDEX3,4(INDEX3)        INCREMENT OUTPUT INDEX.
         LTR   EXTCTR,EXTCTR           ANY MORE ENTRIES
         BZ    OUTPUT5                      NO
         LTR   COUNT1,COUNT1                ARE 26 EXTENTS IN OUTPUT
         BP    OUTPUT4                      NO
         BAL   BRANCH,DADSMOUT              OUTPUT DADSM
         SR    COUNT,COUNT                                       A37199
OUTPUT4  EQU   *
         BCTR  COUNT1,0                      DECREMENT XFER COUNT
         LR    INDEX2,INDEX1           SET INDEX FOR XFER ENTRY.
         B     MERGE2
OUTPUT5  EQU   *
         BAL   BRANCH,DADSMOUT              WRITE FORMAT 5.
         TM    DXCCW7+7,1                   IS FORMAT 0 PENDING.
         BZ    WRTVTOC                      BRANCH IF NO
         LH    WORKREG2,HOLENUM             INCREMENT HOLE COUNT
         LA    WORKREG2,1(WORKREG2)           IN DADSM TABLE.
         STH   WORKREG2,HOLENUM
         BAL   WORKREG1,SETSEEK             OUTPUT  FORMAT 0.
WRTVTOC  EQU   *                                                 O19117
         SR    ERRETREG,ERRETREG        ZERO ERROR CODE          O19117
*
*** THIS SECTION BRANCHES TO THE LAST LOAD OF PARTIAL RELEASE.
*
XCTL     EQU   *                                                 O19117
        IECRES LOAD,EXTPR=(WRKAREA),MODID=PRECLOSE,BRANCH=DIRECT Y02080
*
*** THIS SECTION TESTS IF A FORMAT 5 DSCB MUST BE WRITTEN TO THE VTOC.
*
OUTPUT6  EQU   *
         LTR   COUNT,COUNT        ANY MORE EXTENTS                22500
         BZ    OUTPUT2            NO,BRANCH                       22500
         LA    BRANCH,BYINDEX               SET RETURN FROM DADSMOUT.
         LTR   COUNT1,COUNT1                26 EXTS XFERED TO OUTPUT.
         BZ    DADSMOUT                     YES-WRITE DADSM RECORD.
OUTPUT7  EQU   *
         LA    INDEX3,4(INDEX3)             NO-INCREMENT OUTPUT INDEX.
BYINDEX  EQU   *
         LTR   EXTCTR,EXTCTR           ANY MORE ENTRIES
         BZ    MERGE6                        XFER EXTENTS TO OUTPUT.
         B     MERGE1                        CHECK EXTENTS AND ENTRIES.
*
*** THIS MODIFIES THE CHANNEL PROGRAM TO READ IN A FORMAT 5 DSCB.
*
DADSMIN  LA    WORKREG2,INCCHHR              MODIFY SEARCH ID EQUAL
         ST    WORKREG,DXCCW9               CHANNEL PROGRAM FOR
         MVI   DXCCW9,X'31'                 READING IN FMT 5 DSCB.
         NI    DXCCW11+4,X'EF'              TURN OFF SKIP FLAG IN
         MVC   DXDAADDR+3(5),INCCHHR        CCHHR OF NEXT FMT 5 IN
*                                            SEEK ADDRESS.
         LA    WORKREG,DXCCW9               GET STARTING CCW ADDRESS.
         BAL   BRANCH,EXECUTIO               READ IN NEXT FORMAT5.
         BAL   BRANCH,CVTORTA0               CONVERT FORMAT5 EXTENTS
*                                            TO RTA-RTA+1.
         CLC   2(2,INDEX3),0(INDEX2)        ARE EXTS CONTIGUOUS.
         BL    NEXTOUT                  BRANCH IF NOT CONTIG    SA56400
         EX    R0,COLLAPS3                  MERGE CONTIGUOUS EXTENTS.
         LA    INDEX2,4(INDEX2)             INCREMENT INPUT INDEX.
         BCTR  COUNT,0                      DECREMENT INPUT EXTS CTR.
NEXTOUT  EQU   *
         EX    R0,SETNCCHH             SET NEXT OUTPUT FORMAT 5.
         EX    R0,SETICCHH             SET NEXT INPUT  FORMAT 5.
         MVC   DXCCW9(4),DXCCW6             RESET CHANNEL PROGRAM ADDR.
*
*** THIS SECTION CREATES A SINGLE EXTENT FOR EACH SET OF CONTIGUOUS
*   EXTENTS.
*
COLLAPSE LTR   EXTCTR,EXTCTR                 ANY MORE ENTRIES.
         BZ    OUTPUT6                       NO.
COLLAPS1 CLC   0(2,INDEX1),2(INDEX3)         COMPARE FOR DADSM COLLAPSE
         BNE   OUTPUT6                       NO
         EX    R0,MERGE1                    COMPARE ENTRY AND EXTENT.
         BNE   OUTPUT6                       NO
COLLAPS3 EQU   *
         MVC   2(2,INDEX3),2(INDEX2)         YES
         LA    INDEX1,4(INDEX1)              INCREMENT DADSMTBL INDEX.
         LA    INDEX2,4(INDEX2)              INCREMENT INPUT INDEX.
         BCT   EXTCTR,COLLAPS2
         BCT   COUNT,OUTPUT6                 NO MORE ENTRIES-OUTPUT
         B     OUTPUT2
COLLAPS2 BCT   COUNT,COLLAPS1                CHECK FOR ANOTHER COLLAPSE
         B     OUTPUT2
*
*** THIS SECTION CONVERTS THE FORMAT 5 DSCB FROM RTA/RTA+1 FORMAT
*   TO ITS FINAL XXYYZ FORMAT AND WRITES IT TO THE VTOC.
*
DADSMOUT LR    WORKREG1,BRANCH               SAVE BRANCH ADDRESS
         STM   R6,R10,SAVEREGS
         OI    DXCCW11+4,X'10'              TURN ON SKIP FLAG.
         LA    RINEND,26                     SET COUNT INDEX
         LA    ROUTSCAN,OUTDSCB+5            SET OUTPUT INDEX
         LA    RINSCAN,OUTDSCB+36            SET INPUT INDEX
NEXTEXT  LH    RTKK,DS4DEVSZ+2               LOAD TRACKS PER CYLINDER
         LH    R1,0(RINSCAN)                 R1= RTA
         LH    R3,2(RINSCAN)                 R3= RTA+1
         SR    R0,R0                         ZERO
         LR    R2,R0                         DIVIDE REGS.
         LR    R4,R3
         SR    R4,R1                         R4=RTA+1-RTA
         CLR   R4,RTKK
         BNL   MORETH1                       MORE THAN ONE CYL POSSIBLE
         MVC   2(2,ROUTSCAN),ZERO            ZERO YY.
         STC   R4,4(ROUTSCAN)                SET Z.
         B     MOVEXTA
MORETH1  DR    R0,RTKK                       RTA  /RTKK
         DR    R2,RTKK                       RTA+1/RTKK
         SR    R3,R1
         LTR   R0,R0                         EXCESS TRACKS
         BP    NOTCYL                        YES
         STC   R2,4(ROUTSCAN)                SET Z
         B     STORECYL
NOTCYL   SR    RTKK,R0
         LTR   R3,R3
         BZ    ADD2
         BCTR  R3,0
ADD2     AR    RTKK,R2
         STC   RTKK,4(ROUTSCAN)              SET Z
STORECYL STH   R3,HOLD
         MVC   2(2,ROUTSCAN),HOLD            SET YY.
MOVEXTA  MVC   0(2,ROUTSCAN),0(RINSCAN)      SET XX
         LA    ROUTSCAN,5(ROUTSCAN)          INCREMENT OUTPUT INDEX
         LA    RINSCAN,4(RINSCAN)            INCREMENT INPUT INDEX
         BCT   RINEND,NEXTEXT                BACK FOR NEXT EXTENT
         LM    R6,R10,SAVEREGS               RESET REGISTERS
         OC    OUTDSCB+5(130),OUTDSCB+5  OUTPUT AREA ZERO         20055
         BE    ZEROUT                        YES
         MVC   OUTDSCB(4),FIVE               SET UP FORMAT 5
         MVC   OUTDSCB+4(40),OUTDSCB+5       MOVE OVER ID BYTE
         MVI   OUTDSCB+44,X'F5'              INSERT ID BYTE.
ZEROUT   EQU   *
         MVC   OUTDSCB+135(5),NEXTDADS      SET DADSM POINTER.
         EX    R0,COMPOUT               IS THIS A VALID CHAIN ADDR.
         BNE   SKIPFLAG                 YES-DONT MODIFY CHAIN.
         EX    R0,ZEROPTR               NO-POINT TO NEXT F5 DSCB.
SKIPFLAG EQU   *
         OI    DXCCW11+4,X'10'              TURN ON SKIP FLAG.
         CLI   INCCHHR+4,X'00'               ANY MORE FORMAT 5
         BE    FINDHOLE                     FIND HOLE
SETSEEK  MVC   DXDAADDR+3(5),OUTCCHHR       SET UP SEEK ADDRESS.
         LA    WORKREG,DXCCW6               SET CHANNEL PROGRAM START.
         BAL   BRANCH,EXECUTIO               WRITE OUT UPDATED DADSM.
COMPOUT  EQU   *
         CLC   OUTCCHHR(5),NEXTDADS          NEXT OUTPUT EQU THIS OUT
         BE    NXTOUTIN
SETNEXT  MVC   OUTCCHHR(5),NEXTDADS         SET NEXT DADSM POINTER.
         B     TESTZERO                     TEST FOR FORMAT 0 PENDING
NXTOUTIN MVC   OUTCCHHR(5),INCCHHR           SET NEXT OUTPUT
TESTZERO TM    OUTDSCB+139,X'FF'            TEST FOR END OF OUTPUT.
         BNE   SETOUT                       BRANCH IF NO.
         TM    OUTCCHHR+4,X'FF'             TEST FOR END OF INPUT.
         BZ    SETOUT                       BRANCH IF YES.
         OI    DXCCW7+7,1                   INDICATE FORMAT 0 NEEDED.
SETOUT   XC    OUTDSCB(140),OUTDSCB          ZERO OUTPUT AREA
         LA    INDEX3,OUTDSCB+36             SET OUTPUT INDEX.
         LR    BRANCH,WORKREG1               RESET BRANCH REG.
         LA    COUNT1,26                     SET INDEX FOR OUTPUT XFER.
         BR    BRANCH                        EXIT FROM SUBROUTINE.
FINDHOLE LR    TEMP,COUNT                   ANY EXTENTS
         ALR   TEMP,EXTCTR                  OR ENTRIES LEFT
         BZ    ZEROPTR                      NO
         EX    R0,COMPOUT              NEED  A HOLE.
         BE    SEARCHOL                 BRANCH IF EQUAL
         CLI   NEXTDADS+4,0             IS CHAIN ADDRESS ZERO
         BNE   SETSEEK                  BRANCH IF NO.
SEARCHOL EQU   *
         MVC   DXDAADDR+3(4),VTOCADR    INSERT VTOC ADR INTO IOB O19117
         LA    WORKREG,DXCCW1               SET UP CHANNEL PROGRM STRT.
         BAL   BRANCH,EXECUTIO               FIND HOLE FOR NEXT OUTPUT
*                                            AND OUTPUT DADSM.
         MVC   DXDAADDR+3(L'OUTCCHHR),OUTCCHHR  UPDATE IOB SEEK YA02385
         LA    WORKREG,DXCCW6           SET UP TO READ          SA54549
         BAL   BRANCH,EXECUTIO          IN FORMAT ZERO          SA54549
         LH    WORKREG,HOLENUM          GET NO OF F0'S CREATED.
         BCTR  WORKREG,0
         STH   WORKREG,HOLENUM          SAVE NO IN DADSM TABLE.
         MVC   NEXTDADS(5),OUTDSCB+135       SET NEXT OUTPUT
         B     SETNEXT
ZEROPTR  MVC   OUTDSCB+135(5),INCCHHR        ZERO POINTER
         B     SETSEEK
*
*** THIS IS THE CHANNEL PROGRAM INITIATING SECTION.
*
EXECUTIO ST    WORKREG,IOBSIOCC             SET CCW PTR INTO IOB.
         EXCP  DXIOB
         WAIT  ECB=DXECB
         TM    DXECB,X'20'                  TEST FOR PERM I/O ERROR.
         BCR   5,BRANCH                     RETURN IF NO I/O ERROR
         LA    ERRETREG,IOERROR         LOAD I/O ERROR CODE      A37199
         B     XCTL                     ADVANCE TO NEXT LOAD     O19117
*
*** THIS SECTION CONVERTS THE FORMAT 5 DSCB FROM ITS VTOC FMT (XXYYZ)
*   TO A WORKABLE FMT (STARTING RTA-ENDING RTA+1).
*
CVTORTA0 STM   R6,R10,SAVEREGS               SAVE REGS.
         SR    R2,R2                         ZERO R2.
         SR    COUNT,COUNT                   AND COUNT.
         MVC   INDSCB+44(90),INDSCB+45       MOVE INPUT OVER ID BYTE.
         LA    RINSCAN,INDSCB+4             SET INPUT INDEX
         LR    ROUTSCAN,RINSCAN             SET OUTPUT INDEX.
         LA    RX,26                         SET CONVERT COUNT.
TEST0    CLC   0(2,RINSCAN),ZERO             EXTENT ZERO.
         BE    INCRIN                        YES.
         MVC   HOLD(5),0(RINSCAN)            HOLD XXYYZ.
         LH    R1,HOLD+2                     R1=YY.
         MH    R1,DS4DEVSZ+2                 MULT BY TRACKS PER CYL.
         IC    R2,HOLD+4                     R2=Z.
         ALR   R1,R2                         R1= TRACKS+Z.
         AH    R1,HOLD                       R1=RTA+1.
         STH   R1,2(ROUTSCAN)                SET RTA+1 IN OUTPUT.
         MVC   0(2,ROUTSCAN),HOLD            SET RTA IN OUTPUT.
         LA    ROUTSCAN,4(ROUTSCAN)          INCREMENT OUTPUT INDEX.
         LA    COUNT,1(COUNT)                INCREMENT CONVERT COUNT.
INCRIN   LA    RINSCAN,5(RINSCAN)            INCREMENT INPUT INDEX.
         BCT   RX,TEST0                      BACK FOR NEXT CONVERT
         ST    RX,0(ROUTSCAN)           CLEAR NEXT ENTRY         O19117
         LM    R6,R10,SAVEREGS               RESET REGS.
         LA    INDEX2,INDSCB+4         SET EXTENT INPUT INDEX.
         BR    BRANCH                        BRANCH OUT.
*
*** CONSTANTS
*
FIVE     DC    X'05050505'
*
*** TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(PRECLOSE,P3),SVC=020,LENGTH=,BRT=YES       Y02080
         EJECT                                                  SA54549
*
*** CVT DSECT
*
CVT      DSECT
         CVT                            CVT DSECT                Y02080
         EJECT                                                  SA54549
*
*** RELEASE WORK AREA
*
WORKAREA IECPRLWA EP,F4,D1=(5)          RELEASE WORK AREA        Y02080
SAVEREGS EQU   IECREGSV+12              REGISTER SAVE AREA       Y02080
         EJECT                                                  SA54549
*
*** I/O SUPPORT WORK AREA
*
CLOSEWKA DSECT
         IECDSECT
ZERO     EQU   DXCCW4+4
         END
