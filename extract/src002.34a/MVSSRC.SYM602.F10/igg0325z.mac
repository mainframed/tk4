 TITLE 'IGG0325Z - VTOC CONVERSION INITIALIZATION'               Y02080
IGG0325Z CSECT
*
* MODULE NAME = IGG0325Z
*
* DESCRIPTIVE NAME = VTOC CONVERSION INITIALIZATION
*
* COPYRIGHT = NONE
*
* CHANGE ACTIVITY = SEE BELOW
*                                                                     *
*          RELEASE 19 DELETIONS                                       *
*          RELEASE 20 DELETIONS                                       *
*2753269000-270000,331000-333000,341000                          A29936
*2753027000,062000,101000,308000-310000,336000-337000            A31534
*2753014000-015000,116000                                        A35328
*          RELEASE 21 DELETIONS                                       *
*1191032000,036000-038000,306000,348000,350000-359000,361000-    M0124
*1191372000,374000,377000-400000,402000-404000,410000,413000,    M0124
*1191415000-417000,424000                                        M0124
*1191009000,027000,109000,336000-337000                          S21040
*1191009000-010000,013600-015400,115000,133000,155000,158000,    A37239
*1191160000,169000-170000,267000-270100                          A37239
*          RELEASE 22 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000100-001000,002350-002630,013700-015100,024000,026000-    Y02080
*0000027000,032000,034000,039000-042000,051000,074000,076000-    Y02080
*0000080000,086000-087000,089000-103000,106000,112000-113000,    Y02080
*0000116000-117000,131960,136000,141000,149000,157000,178000,    Y02080
*0000185000-199000,212000,214000-216000,223000-225000,227000,    Y02080
*0000239000,245000,249000,251000,253000,264000,272000,277000,    Y02080
*0000282000-283000,286000,288000-289000,301000-311000,321000,    Y02080
*0000327000-330000,330400,331000-355000,373000-412000,418000-    Y02080
*0000427000,429000-432000,434000,436000-502000                   Y02080
*0000199000                                                      Y02130
*0000003000                                                      Y02082
*0000003000-005000,009000-010000,012000-013700,017000,028000-    Y02078
*0000030000,081000,083000,104000,110000,132600,138000,146000-    Y02078
*0000148000,159000-167000,172000-174000,207000,213000,236200-    Y02078
*0000236800,283400,317000                                        Y02078
*                                                                     *
*            VS2 RELEASE 03 CHANGES                            @ZA02214
*0000200000                                                    @ZA02214
*0000                                                          @ZA07209
*STATUS CHANGE LEVEL 003
*                                                                     *
* FUNCTION/OPERATION  THIS MODULE DOES THE INITIALIZATION PROCESSES   *
* FOR THE VTOC CONVERSION ROUTINES.  IF THESE ROUTINES WERE ENTERED   *
* FROM IGG0325A (ALLOCATE), THIS MODULE SWITCHES THE PSW KEY TO THE   *
* DATA MANAGEMENT KEY.  IF THE SECOND BYTE OF THIS MODULE HAS NOT     *
* BEEN MODIFIED TO PREVENT VTOC CONVERSION, IT ISSUES MESSAGE IEC604I *
* WITH EITHER CODE=DIRF (IF THE VTOC CONVERSION ROUTINES WERE ENTERED *
* BECAUSE THE DIRF BIT WAS PREVIOUSLY SET) OR WITH CODE=DOS (IF THE   *
* CONVERSION ROUTINES WERE ENTERED BECAUSE THE DOS CONTAMINATION      *
* BIT WAS SET).  IGG0325Z THEN RELOCATES A NEW CHANNEL PROGRAM        *
* TO THE ALLOCATE WORK AREA.  IT THEN ZEROS OUT EXISTING FORMAT       *
* 6 DSCB'S. FINALLY IT INITIALIZES THE FIRST FORMAT 5 DSCB AND        *
* TAKES IPL TRACKS INTO CONSIDERATION.                                *
*                                                                     *
* ENTRY POINTS                                                        *
*        IGG0325Z - ENTRY IS MADE FROM IGG0325A (ALLOCATE) OR FROM    *
*                   IGG0553F (EXTEND) WHEN EITHER THE DOS BIT OR      *
*                   THE DIRF BIT IS SET IN THE FORMAT 4 DSCB.         *
*                                                                     *
* INPUT  ON ENTRY REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,   *
*        WHICH WILL CONTAIN THE DATA PORTION OF THE FORMAT 4 DSCB.    *
*        'DADSMADR' AND 'FMTOUTAD' CONTAIN THE CCHHR OF THE FIRST     *
*        FORMAT 5 DSCB. 'VTOCADR' CONTAINS THE CCHHR OF THE FORMAT 4. *
*        ON ENTRY FROM ALLOCATE, REGISTER 11 POINTS TO THE JFCB.      *
*        REGISTER 7 WILL POINT TO THE UCB.                            *
*                                                                     *
* OUTPUT  REGISTER 13 WILL BE THE SAME AS ON INPUT.  THE              *
*         DADSM WORK AREA WILL CONTAIN THE FIRST RE-INITIALIZED       *
*         FORMAT 5 DSCB,THE FORMAT4 DSCB,AND THE CHANNEL PROGRAM.     *
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*          EXCP(0)                                                    *
*          WAIT(1)                                                    *
*          WTO(35)                                                    *
*                                                                     *
* EXITS  NORMAL  BRANCH TO IGG0325P                                   *
*        ERROR   BRANCH TO IGG0325T                                   *
*                                                                     *
*        ERROR CODES ISSUES BY THIS MODULE -                          *
*                                                                     *
*        0C - PERMANENT I/O ERROR                                     *
*                                                                     *
*        9C - DADSM ALLOCATION TERMINATED DUE TO POSSIBLE VTOC ERRORS *
*                                                                     *
* TABLES/WORK AREAS - DADSM WORK AREA DESCRIBED BY MACRO 'IECALLWA'   *
*                                                                     *
* ATTRIBUTES REENTRANT                                                *
*                                                                     *
*                                                                     *
* REGISTER EQUATES                                                    *
*                                                                     *
REGZERO  EQU   0                        WORK REGISTER
REGONE   EQU   1                        WORK REGISTER
REGTWO   EQU   2                        WORK REGISTER
REGTHREE EQU   3                        WORK REGISTER
REGFOUR  EQU   4                        WORK REGISTER
REGFIVE  EQU   5                       WORK REGISTER             8M3261
REGSIX   EQU   6                        WORK REGISTER
LSTF5CTR EQU   6                        NBR OF EXTENTS IN 1ST F5 Y02080
RUCBPTR  EQU   7                        PTR. TO UCB
REGSEVEN EQU   7                        WORK REGISTER
REGEIGHT EQU   8                        WORK REGISTER
DADSMPTR EQU   8                        PTR  TO EXTENT IN DADSMTBL
RERRPASS EQU   8                        ERROR CODE REGISTER      A31534
REGNINE  EQU   9                        WORK REGISTER
RJFCBPTR EQU   11                       PTR. TO JFCB
BASEREG  EQU   12                       BASE REGISTER
REGTHIRT EQU   13                       WORK REGISTER
RWKAREA  EQU   13                       WORK AREA BASE REGISTER
RETRNREG EQU   14                       RETURN REGISTER
RCVT     EQU   15                       CVT POINTER
*                                                                     *
* OTHER EQUATES                                                       *
*                                                                     *
K0       EQU   0                        CONSTANT OF 0            Y02080
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
K4       EQU   4                        CONSTANT OF 4            Y02080
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
TWELVE   EQU   12                       VALUE 12
SIXTEEN  EQU   16                       VALUE SIXTEEN
RDDATA   EQU   X'06'                    READ DATA COMMAND        Y02078
F5INDIC  EQU   X'05'                    F5 DSCB INDICATOR
GOODIO   EQU   X'20'                    TEST VALUE FOR SUCCESSFUL I/O
ERRCD    EQU   X'0C'                    ERROR CODE FOR UNSUCCESSFUL I/O
UUU      EQU   44                       DISP. TO UUU IN MESSAGE  Y02078
VOLSER   EQU   48                       DISP. TO VOLSER IN MSG   Y02078
MSGCODE  EQU   55                       DISP. TO CODE IN MESSAGE Y02078
BYPASS   EQU   X'01'                    CONVERSION BYPASS BIT    Y02078
NOCONVT  EQU   X'9C'                    CONVERSION BYPASS ERROR  Y02078
C140     EQU   140
ONE16    EQU   116                      116 CYLINDERS            Y02130
DA3340   EQU   X'0A'                    3340 DEVICE TYPE         Y02130
DA2305I  EQU   X'06'                    2305 MOD 1 DEVICE TYPE @ZA07209
DA2305II EQU   X'07'                    2305 MOD 2 DEVICE TYPE @ZA07209
NOCC     EQU   X'00'                    NO COMMAND CHAINING      Y02080
SKIP     EQU   X'10'                    SUPPRESS DATA TRANSFER   Y02080
CC       EQU   X'40'                    COMMAND CHAINING BIT     Y02080
C40      EQU   40                      VALUE 40
C144     EQU   144                     VALUE 144
C24      EQU   24                      VALUE 24
*                                                                     *
         USING *,BASEREG
         USING ALLOCWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         USING UCB,RUCBPTR              UCB ADDRESSABILITY       Y02080
         USING CVT,RCVT
*                                                                     *
* THE FIRST INSTRUCTION ASSEMBLES AS X'0700'.  YOU CAN DISABLE        *
* CONVERSION OF YOUR VOLUMES THAT HAVE THE DIRF BIT SET BY CHANGING   *
* THESE TWO BYTES TO X'0701'.  WITH THIS CHANGE, VTOC CONVERSION WILL *
* NOT OCCUR FOR A VOLUME ON WHICH THE DIRF BIT WAS PREVIOUSLY SET.    *
*                                                                     *
CONVTEST BCR   K0,K0                    CONVERSION TEST          Y02078
         BALR  BASEREG,ZERO             INITIALIZE THE BASE REG  Y02078
ADJUSTRG EQU   *                        BRANCH LABEL             Y02078
         LA    REGEIGHT,ADJUSTRG-CONVTEST  PREPARE TO ADJUST REG Y02078
         LA    BASEREG,0(BASEREG)       CLEAR HIGH ORDER BYTE    Y02078
         SR    BASEREG,REGEIGHT         ADJUST THE BASE REGISTER Y02078
         TM    ACNVSW,ALLOCID           TEST IF ENTERED FROM     Y02082
*                                       ALLOCATE (IGG0325A)      Y02082
         BNO   BUILDMSG                 BRANCH IF NOT            Y02082
         MODESET EXTKEY=DATAMGT         ASSUME DATAMGT KEY       Y02082
*                                                                     *
* THIS SECTION TESTS IF THE VTOC IS TO BE CONVERTED.  IF YES,         *
* IT ISSUES MESSAGE IEC604I.                                          *
*                                                                     *
BUILDMSG EQU   *                        BRANCH LABEL             Y02078
         MVC   CCW1(MSGEND-VTOCMSG),VTOCMSG  MOVE IN MESSAGE     Y02078
         MVC   CCW1+UUU(L'UCBNAME),UCBNAME  MOVE IN EBCDIC UCB   Y02078
*                                       CHANNEL/UNIT ADDRESS     Y02078
         MVC   CCW1+VOLSER(L'SRTEVOLI),SRTEVOLI  MOVE IN VOLID   Y02078
         TM    ACNVSW,DIRFSET           TEST IF THE DIRF BIT WAS Y02078
*                                       PREVIOUSLY SET           Y02078
         BNO   DOSMSG                   BRANCH IF NOT            Y02078
         TM    CONVTEST+ONE,BYPASS      TEST FOR NO CONVERSION   Y02078
         BNO   ISSUEMSG                 BRANCH IF CONVERSION     Y02078
         LA    RERRPASS,NOCONVT         LOAD ERROR CODE          Y02078
         B     ERREXIT                  GO BRANCH TO IGG0325T    Y02078
DOSMSG   EQU   *                        BRANCH LABEL             Y02078
         MVC   CCW1+MSGCODE(L'DOSCODE),DOSCODE  MOVE IN CODE=DOS Y02078
ISSUEMSG EQU   *                        BRANCH LABEL             Y02078
         WTO   MF=(E,CCW1)              ISSUE MESSAGE IEC604I    Y02078
*                                                                     *
* THIS SECTION RELOCATES THE CHANNEL PROGRAM TO THE WORKAREA.         *
*                                                                     *
BUILDCHP EQU   *                        BRANCH LABEL             Y02078
         XC    CCW11(ATIOTPTR-CCW11),CCW11  ZERO WORK AREA       Y02080
         ST    RUCBPTR,PDLIST5          SAVE THE UCB POINTER     Y02080
         LM    REGZERO,REGNINE,CHANPROG GET FIRST 5 CCW'S
         ALR   REGZERO,RWKAREA          ADD RELOCATION FACTOR TO CCW1
         ALR   REGTWO,RWKAREA           ADD RELOCATION FACTOR TO CCW2
         ALR   REGFOUR,RWKAREA          ADD RELOCATION FACTOR TO CCW3
         ALR   REGSIX,RWKAREA           ADD RELOCATION FACTOR TO CCW4
         ALR   REGEIGHT,RWKAREA         ADD RELOCATION FACTOR TO CCW5
         STM   REGZERO,REGNINE,CCW1     STORE CCW'S
         LM    REGZERO,REGNINE,CHANPROG+C40 LOAD 2ND 5 CCW'S
         ALR   REGZERO,RWKAREA          ADD RELOCATION FACTOR TO CCW6
         ALR   REGTWO,RWKAREA           ADD RELOCATION FACTOR TO CCW7
         ALR   REGFOUR,RWKAREA          ADD RELOCATION FACTOR TO CCW8
         ALR   REGSIX,RWKAREA           ADD RELOCATION FACTOR TO CCW9
         ALR   REGEIGHT,RWKAREA         ADD RELOCATION FACTOR TO CCW10
         STM   REGZERO,REGNINE,CCW6     STORE CCW'S IN WORK AREA
*                                                                     *
* THIS SECTION CALCULATES THE NUMBER OF DSCB'S IN THE VTOC.           *
*                                                                     *
         SR    REGFIVE,REGFIVE         CLEAR WORK REGISTER       8M3261
         MVC   SEEK(EIGHT),DS4VTOCE+TWO POSITION EXTENTS         8M3261
         LH    REGONE,SEEK             PICK UP BEGINNING CC      8M3261
         LH    REGTWO,SEEK+TWO         PICK UP BEGINNING  HH     8M3261
         LH    REGTHREE,SEEK+FOUR      PICK UP ENDING CC         8M3261
         LH    REGFOUR,SEEK+SIX        PICK UP ENDING  HH        8M3261
         CLI   DS4VTOCE+FIVE,ZERO       DOES EXTENT BEGIN ON CYL 8M3261
*                                       BOUND                    8M3261
         BE    NOCYL                   BRANCH IF YES             8M3261
         LA    REGONE,ONE(REGONE)      OBTAIN CYLINDER BOUNDRY   8M3261
         LH    REGFIVE,DS4DEVSZ+TWO                              8M3261
         SR    REGFIVE,REGTWO          CALCULATE TRKS BEFORE     8M3261
*                                       FULL CYL                 8M3261
NOCYL    SR    REGTHREE,REGONE         GET NUM OF FULL CYLS      8M3261
         MH    REGTHREE,DS4DEVSZ+TWO   GET NUM TRKS IN FULL CYLS 8M3261
         AR    REGTHREE,REGFIVE        ADD TRACKS BEFORE FULL    8M3261
*                                       CYL                      8M3261
         LA    REGFOUR,ONE(REGFOUR)                              8M3261
         AR    REGTHREE,REGFOUR        GET TOTAL NO. TRACKS IN   8M3261
*                                       VTOC                     8M3261
         SR    REGFIVE,REGFIVE         CLEAR WORK REGISTER       8M3261
         IC    REGFIVE,DS4DEVDT        GET NUM DSCB'S PER TRACK  8M3261
         MR    REGTWO,REGFIVE          GET TOTAL NO DSCB'S       8M3261
         L     REGONE,SEEK                                       8M3261
         LTR   REGONE,REGONE           DOES VTOC BEGIN ON CYL 0  8M3261
*                                       TRK 0                    8M3261
         BNE   SUBTF4                  BRANCH IF NOE ZERO        8M3261
         LA    REGTWO,THREE                                      8M3261
         SR    REGTHREE,REGTWO         SUBTRACT VOLUME RECORDS   8M3261
SUBTF4   BCTR  REGTHREE,REGZERO        SUBTRACT F4               8M3261
         STH   REGTHREE,DS4DSREC       STORE HOLE COUNT          8M3261
         XC    SEEK,SEEK                ZERO OUT IOB SEEK ADDR   Y02080
*                                                                     *
* THIS SECTION ZEROES OUT EXISTING FORMAT 6 DSCB'S.                   *
*                                                                     *
ZEROF6   EQU   *                        BRANCH LABEL             Y02078
         CLI   DS4F6PTR+FOUR,ZERO       DO F6 DSCB'S EXIST       Y02078
         BZ    STARTF5                  BRANCH IF NO             Y02078
         MVC   DADSMADR,DS4F6PTR        MOVE IN CCHHR OF 1ST F6  Y02078
         MVI   DS4F6PTR,ZERO            ZERO OUT F4 PTR TO F6    Y02078
         MVC   DS4F6PTR+ONE(FOUR),DS4F6PTR
READNEXT LA    REGZERO,CCW4             GET ADDR  READ  CHANNEL PROGRAM
         ST    REGZERO,CHNPGADR         PUT ADDR IN IOB
         MVC   SEEKCYL(FIVE),DADSMADR   PICK UP CCHHR
         BAL   RETRNREG,EXCHANPG        READ A FORMAT 6 DSCB     Y02078
ZEROF5   LA    REGZERO,CCW1             GET ADDR WRITE CHANNEL PROGRAM
         ST    REGZERO,CHNPGADR         PUT ADDR IN IOB
         MVI   CCW6+K4,SKIP             SET SKIP BIT IN READ K&D Y02080
         BAL   RETRNREG,EXCHANPG        WRITE ZERO RECORD OVER DSCB
         CLI   DS6PTRDS+FOUR,ZERO       TEST IF LAST FORMAT 6    Y02078
         BZ    STARTF5                  BRANCH IF YES            Y02078
         MVC   DADSMADR,DS6PTRDS        MOVE IN CCHHR OF NEXT F6 Y02078
         MVI   CCW6+K4,NOCC             RESET SKIP BIT           Y02080
         B     READNEXT                 CONTINUE ZEROING PROCESS
*                                                                     *
* THIS SECTION EXECUTES A CHANNEL PROGRAM.                            *
*                                                                     *
EXCHANPG MVI   ECB,ZERO                 INITIALIZE ECB
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,GOODIO               TEST FOR SUCCESSFUL I/O
         BCR   1,RETRNREG               RETURN IF OK             A37239
         LA    RERRPASS,ERRCD           LOAD ERROR CODE
ERREXIT  EQU   *                        BRANCH LABEL             Y02078
         LA    REGTWO,LASTLOAD          POINT TO ID OF IGG0325T  Y02080
         B     LOADMOD                  BRANCH IF ERROR          Y02080
*                                                                     *
* THIS SECTION CALCULATES THE HIGHEST ALLOCATABLE TRACK FROM THE      *
* DEVICE CHARACTERISTICS TABLE.                                       *
*                                                                     *
STARTF5  XC    DSCBF5(C140),DSCBF5     ZERO F5 AREA
         L     RCVT,CVTPTR              GET PTR TO CVT
         L     RCVT,CVTZDTAB           GET PTR TO DEVICE ENTRY
*                                       CHARACTERISTICS TABLE
         L     RUCBPTR,PDLIST5          GET UCB PTR              Y02080
         CLI   UCBTBYT4,DA3340          TEST IF 3340             Y02130
         BNE   NOT3340                  BRANCH IF NOT            Y02130
         MVC   MAXTRK,DS4TKCYL          GET NBR TRACKS/CYLINDER  Y02130
         SR    REGTWO,REGTWO            CLEAR FOR DIVIDE         Y02130
         LH    REGTHREE,DS4DEVSZ        NBR OF CYLS ON VOLUME    Y02130
         LA    REGFOUR,ONE16            4 ALTERNATE TRACKS       Y02130
         DR    REGTWO,REGFOUR           FOR EVERY 116 CYLINDERS  Y02130
*                                       SO DIVIDE CYL BY 116,    Y02130
         SLL   REGTHREE,TWO             MULTIPLY QUOTIENT BY 4   Y02130
*                                       EQUALS TOTAL ALTERNATES  Y02130
GETCYLS  EQU   *                        BRANCH LABEL             Y02130
         LH    REGFOUR,DS4DEVSZ         NBR OF CYLS FOR DEVICE   Y02130
         B     HIGHTRK                  GO COMPLETE CALCULATION  Y02130
NOT3340  EQU   *                        BRANCH LABEL             Y02130
         SR    REGONE,REGONE            CLEAR WORK REGISTER
         IC    REGONE,UCBTYP+THREE     GET DEVICE TYPE
         LA    REGTWO,ZERO(REGONE,RCVT)  GET ADDR OF DEVICE TYPE OFFSET
         IC    REGONE,ZERO(REGTWO)     GET DEVICE OFFSETINTO DEVICE
*                                      CHARACTERISTICS TABLE          *
         LA    REGTWO,ZERO(REGONE,RCVT)  GET ADDR DEVICE ENTRY
         LH    REGFOUR,ZERO(REGTWO)     GET NO. OF CYLINDERS     Y02080
         MVC   MAXTRK,TWO(REGTWO)       GET NBR TRACKS/CYLINDER  Y02080
         CH    REGFOUR,DS4DEVSZ         COMPARE HI CYL         @ZA02214
         BE    NORMAL                                          @ZA02214
         LH    REGFOUR,DS4DEVSZ         GET TRK/CYL FROM FMT 4 @ZA02214
         LH    REGTHREE,DS4NOATK        GET ALT FROM FMT 4     @ZA02214
         B     HIGHTRK                  USE FMT 4 FOR CALC     @ZA02214
NORMAL   LH    REGTHREE,TWELVE(REGTWO)  GET NO. ALTERNATE TRACK@ZA02214
HIGHTRK  EQU   *                        BRANCH LABEL             Y02130
         MH    REGFOUR,MAXTRK           GET TOTAL NBR OF TRACKS  Y02130
         CLI   UCBTBYT4,DA2305I         IS DEVICE 2305 MOD 1   @ZA07209
         BE    SAVEALC                                         @ZA07209
         CLI   UCBTBYT4,DA2305II        IS DEVICE 2305 MOD 2   @ZA07209
         BE    SAVEALC                                         @ZA07209
         SR    REGFOUR,REGTHREE         GET HIGHEST ALOCATABLE TRACK
SAVEALC  STH   REGFOUR,EXT1RTA1         STORE HIGHEST          @ZA07209
*                                       ALLOCATABLE TRACK IN NE@ZA07209
         LA    REGONE,ONE
         STH   REGONE,DS5AVEXT          SUBTRACT VOLUME LABEL TRACK
*                                                                     *
* THIS SECTION DETERMINES WHETHER THE VOLUME CONTAINS IPL TEXTS.      *
*                                                                     *
         LA    REGZERO,CCW4             GET ADDR READ CHANNEL PROGRAM
         ST    REGZERO,CHNPGADR
         LA    REGTWO,C24               GET LENGTH IPL BOOTSTRAP RECORD
         STH   REGTWO,CCW6+SIX          STORE IN READ CCW        Y02080
         MVI   CCW6,RDDATA              SET TO READ DATA ONLY    Y02078
         MVI   CCW6+K4,NOCC             DO NOT READ COUNT        Y02080
         XR    REGZERO,REGZERO          ZERO REGISTER ZERO       Y02080
         LA    REGONE,ONE               GET CCHHR
         STM   REGZERO,REGONE,SEEK      STORE MBBCCHHR
         BAL   RETRNREG,EXCHANPG       READ 1ST IPL RECORD
         CLI   DSCBF1+SIXTEEN,ZERO      IS THIS IPLABLE VOLUME
         BE    SUBTVTOC                 BRANCH IF NOT IPLABLE
         LA    REGTWO,C144              GET LENGTH 2ND IPL BOOTSTRAP
         STH   REGTWO,CCW6+SIX          STORE IN READ CCW
         LA    REGONE,TWO               GET CCHHR 2ND IPL BOOTSTRAP
         ST    REGONE,SEEK+FOUR         STORE RECORD NUMBER      Y02080
         BAL   RETRNREG,EXCHANPG        READ 2ND IPL BOOTSTRAP
         LH    REGZERO,DSCBF1+C40
         LTR   REGZERO,REGZERO          IS IPL TRACK ZERO
         BE    SUBTVTOC                 BRANCH IF NO IPL TRACK
         LA    REGZERO,TWO
         STH   REGZERO,DS5AVEXT         CHANGE BEGIN OF EXTENT IN F5
*                                                                     *
* THIS SECTION CONVERTS THE VTOC EXTENT FROM CCHH/CCHH FORMAT         *
* TO RTA/RTA+1 FORMAT.                                                *
*                                                                     *
SUBTVTOC LM    REGZERO,REGONE,CHANPROG+C40 GET CCW6
         ALR   REGZERO,RWKAREA          ADD RELOCATION FACTOR
         STM   REGZERO,REGONE,CCW6      RESTORE CCW6
         LA    DADSMPTR,DADSMTBL        GET ADDR DADSMTBL
         LA    REGSEVEN,TWO             SET UP LOOP COUNT
         MVC   CCW12+THREE(FOUR),DS4VTOCE+TWO  MOVE IN CCHH      Y02080
SUBTSEC  LA    REGTWO,CCW12
         LA    REGONE,DEB
         L     RCVT,CVTPTR              GET CVT POINTER
         L     RCVT,CVTPRLTV            GET ADDR RESIDENT CCHH TO TTR
*                                       CONVERT ROUTINE               *
         STM   REGNINE,REGTHIRT,IECREGSV+TWELVE  SAVE REGISTERS  Y02080
         LR    REGSIX,RWKAREA           SET UP TEMPORARY BASE REG FOR
*                                       WORK AREA                     *
         DROP  RWKAREA
         USING ALLOCWKA,REGSIX          WORK AREA ADDRESSABILITY Y02080
         BALR  RETRNREG,RCVT            BRANCH TO CCHH CONVERT RTN
         LM    REGNINE,REGTHIRT,IECREGSV+TWELVE  RESTORE REGS    Y02080
         DROP  REGSIX
         USING ALLOCWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         SRA   REGSEVEN,ONE             DECREMENT LOOP COUNT
         SRL   REGZERO,SIXTEEN          POSITION TT FOR STORING
         LTR   REGSEVEN,REGSEVEN        HAS UPPER CCHH BEEN CONVERTED
         BNE   CONT                     BRANCH IF THIS NOT UPPER CCHH
         LA    REGSIX,ONE
         AR    REGZERO,REGSIX           ADD ONE TO UPPER RTA TO MAKE
*                                       RTA+1                         *
CONT     STH   REGZERO,ZERO(DADSMPTR)   STORE RTA OR RTA+1
         LA    REGZERO,TWO              GET INCREMENT
         AR    DADSMPTR,REGZERO         ADD INCREMENT TO DADSMTBL PTR
         MVC   CCW12+THREE(FOUR),DS4VTOCE+SIX MOVE IN UPPER CCHH Y02080
         LTR   REGSEVEN,REGSEVEN        MUST UPPER CCHH BE CONVERTED
         BNE   SUBTSEC                  BRANCH TO CONVERT UPPER CCHH
*                                                                     *
* THIS SECTION SUBTRACTS THE VTOC EXTENT FROM THE FORMAT 5 DSCB.      *
*                                                                     *
         CLC   DS5AVEXT(TWO),DADSMTBL   DOES THE VTOC BEGIN ON   A37239
*                                       TRK 0 OR TRK 1 OF CYL 0? A37239
         BL    CHECK2                   BRANCH IF NOT            A37239
         MVC   DS5AVEXT(TWO),DADSMT2    UPDATE EXTENT
         LA    LSTF5CTR,ONE             INIT CTR EXTENTS IN F5   Y02080
         B     HOLECNT                  BRANCH TO READ 1ST F5
CHECK2   CLC   EXT1RTA1(TWO),DADSMT2    IS VTOC AT END OF VOLUME
         BNE   TWOEXT                   BRANCH IF VTOC NOT AT END PACK
         MVC   EXT1RTA1(TWO),DADSMTBL   UPDATE UPPER BOUND
         LA    LSTF5CTR,ONE             INIT CTR EXTENTS IN F5   Y02080
         B     HOLECNT                  BRANCH TO READ 1ST F5
TWOEXT   MVC   EXT1RTA1+FIVE(TWO),EXT1RTA1 SUBTRACT
         MVC   EXT1RTA1(TWO),DADSMTBL             VTOC
         MVC   DS5EXTAV(TWO),DADSMT2                 EXTENT
         LA    LSTF5CTR,TWO             INIT CTR EXTENTS IN F5   Y02080
HOLECNT  EQU   *                        BRANCH LABEL             Y02080
         STH   LSTF5CTR,LSTF5CT         SAVE CTR EXTENTS IN F5   Y02080
*                                                                     *
* THIS SECTION INITIALIZES THE CHANNEL PROGRAM TO READ EVERY DSCB.    *
*                                                                     *
INITCHPG EQU   *                        BRANCH LABEL             Y02078
         LA    REGZERO,CCW4             GET ADDR READ CHANNEL PROGRAM
         ST    REGZERO,CHNPGADR
         MVI   CCW6+K4,CC               CHAIN READ TO READ COUNT Y02080
         LA    REGZERO,C140             GET LENGTH 140
         STH   REGZERO,CCW6+SIX         READ 140 BYTE RECORDS    Y02080
         MVC   SEEKCYL(FIVE),FMTOUTAD   GET ADDR 1ST F5 DSCB
         BAL   RETRNREG,EXCHANPG        READ 1ST F5 DSCB
         MVC   DS4HPCHR,COUNT           INITIALIZE 'HIGH-WATER'  Y02078
*                                       MARK TO 3RD DSCB IN VTOC Y02078
         LA    REGONE,ONE                                        Y02078
         STH   REGONE,F5BLDCT           INITIALIZE TO ONE        Y02078
         STH   REGONE,F5FNDCT           INITIALIZE TO ONE        Y02078
         XC    DADSMTBL(C24),DADSMTBL   CLEAR DADSMTBL
         MVC   MAXTRK(TWO),DS4TKCYL     GET MAX. TRK NO  ON A CYLINDER
         LH    REGONE,MAXTRK
         BCTR  REGONE,ZERO              GET MAX. TRK IN ZERO ORIGIN
*                                       INDEX                         *
         STH   REGONE,MAXTRK            SAVE ZERO ORIGIN MAX TRK
         LM    REGZERO,REGONE,ALTCCW3
         ALR   REGZERO,RWKAREA          ADD RELOCATION FACTOR
         STM   REGZERO,REGONE,CCW3      STORE NEW CCW3
         LA    REGTWO,NEXTLOAD          POINT TO ID OF IGG0325P  Y02080
LOADMOD  EQU   *                        BRANCH LABEL             Y02080
        IECRES LOAD,EXTPR=(RWKAREA),MODID=(REGTWO),BRANCH=DIRECT Y02080
*                                                                     *
*  CONSTANTS                                                          *
*                                                                     *
DOSCODE  DC    CL4'DOS'                 CODE=DOS FOR MESSAGE     Y02078
VTOCMSG  WTO 'IEC604I VTOC CONVERT ROUTINE ENTERED ON UUU,VOLSER,DIRF',X
               ROUTCDE=(4,10),DESC=4,MF=L                        Y02078
MSGEND   EQU   *                             MSG DELIMITER       Y02078
*                                                                     *
* CHANNEL PROGRAM                                                     *
*                                                                     *
CCWP1    CCW   X'31',SEEK+3-FIRST,X'40',5    SEARCH EQUAL ID FOR F5
CCWP2    CCW   X'08',CCW1-FIRST,0,0          TIC BACK TO SEARCH
CCWP3    CCW   X'0D',CCW2+4-FIRST,X'60',1    WRITE FORMAT 0 DSCB Y02078
CCWP4    CCW   X'31',SEEK+3-FIRST,X'40',5    SEARCH EQ ID FOR NEXT DSCB
CCWP5    CCW   X'08',CCW4-FIRST,0,0          TIC BACK TO SEARCH
CCWP6    CCW   X'0E',DSCBF1-FIRST,0,140        READ KEY AND DATA
CCWP7    CCW   X'92',COUNT-FIRST,X'20',5     RD 5 BYTES OF COUNT Y02080
CCWP8    CCW   X'29',CCW2+4-FIRST,X'60',4    SEARCH KEY EQ FOR F0 DSCB
CCWP9    CCW   X'08',CCW7-FIRST,0,0          TIC TO READ COUNT
CCWP10   CCW   X'03',0,0,1                   NOP
ALTCCW3  CCW   X'0D',DSCBF5-FIRST,X'00',140
CHANPROG EQU   CCWP1
*                                                                     *
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES                       *
*                                                                     *
         XCTLTABL ID=(NEXTLOAD,5P,LASTLOAD,5T),SVC=032,LENGTH=,  Y02080X
               BRT=YES                                           Y02080
         SPACE 2                                                 Y02080
         IECDSECS CVT,UCB,EXPAND=YES    CVT AND UCB DSECTS       Y02080
DSCBWKAR IECALLWA EP,F4,D1=(6),D2=(5)   ALLOCATE WORK AREA       Y02078
DS4TKCYL EQU   DS4DEVSZ+2
EXT1RTA1 EQU   DSCBF5+6
DADSMT2  EQU   DADSMTBL+2
CHNPGADR EQU   IOB+16                   ADDR. CHANNEL PROGRAM IN IOB
SEEKCYL  EQU   SEEK+3
         END
