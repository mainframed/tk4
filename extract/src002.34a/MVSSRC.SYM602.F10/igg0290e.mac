   TITLE 'IGG0290E - DADSM SCRATCH - LOCATE VOLUME TO BE PROCESSED'
IGG0290E CSECT                                                     DM0Q
*          RELEASE 16 DELETIONS
*1665                                                              AAAA
*          RELEASE 17 DELETIONS
*          RELEASE 18 DELETIONS
*0762284000-286000,322000,406000-418000                           8M603
*    002700,204000-206000,286000,356000,396000,400000,669000-670000DM0Q
*0762670000                                                       21488
*0762                                                             21421
*0762228000                                                       25512
*          RELEASE 19 DELETIONS
*2175                                                            A27090
*2175002000,267200-279200,288000-306000,324000-346000,384000-    S19028
*2175524000,530000-534000,540000-644000,652000,710000-718000,    S19028
*2175726000,870000                                               S19028
*2175276500,324000                                               M4900
*2175                                                            A28896
* 276300                                                          M3041
*2175                                                            A29244
*          RELEASE 20 DELETIONS
*0792232000,242000                                               S20201
*          RELEASE 21 DELETIONS
*1198148000,277700-278600,294000                                 A41439
*1198014000-046000,082000-098000,128000-144000,148000,158000,    A38841
*1198271400-271700,711000,726000,846000-852000                   A38841
*          RELEASE 21.7 DELETIONS
*0000007600-009000,532000,712000-725200,802000-814000           SA56400
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000100-000500,010000,050000,058000-072000,090000-095000,    Y02080
*0000136000-138000,148000-150000,186000,212000-214000,220000-    Y02080
*0000221000,271130-271160,271500-275000,278900,280000-282000,    Y02080
*0000294000-324000,350000-354900,355500-356500,360000,364000,    Y02080
*0000526000,526400,528000-538000,710000,712000,725800-838000,    Y02080
*0000842000-854000,860000-866000,869000                          Y02080
*0000                                                            Y02078
*0000014000-034000,052000-136600,148000-150000,154000-156000,    Y02082
*0000172000,176000,182000,197000,219800-221000,229200-230000,    Y02082
*0000246000-248000,266900-268400,275600,276400-276800,278100-    Y02082
*0000528000,656000-708000,712000-712500,725800-870000            Y02082
*0000                                                            Y02134
*0000                                                            Y02144
*0000266600,267690,275300,282200,302000,303200,328700            YM1337
*0000062000,294200-294500,712000-713000                          YM3997
*0000267660,275600                                               YM1063
*0000292700-293600                                               YM5371
*0000268260,350300                                               YM7036
*0000275600-275650                                               YM7377
*0000268460                                                      YM7515
*0000294600-294800                                               YM6546
*          VS2 RELEASE 03 DELETIONS/CHANGES
*0000                                                           ZA00119
*0000269000                                                    @ZA01347
*
*          VS2 RELEASE 04 DELETIONS/CHANGES
*0000269300-269600                                              ZA05225
*
*MODULE NAME - IGG0290E
*
*DESCRIPTIVE NAME - DADSM SCRATCH - LOCATE VOLUME TO BE PROCESSED
*
*COPYRIGHT - NONE
*
*CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING CSECT CARD
*
*STATUS CHANGE LEVEL 005
*
*ATTRIBUTES - REENTRANT
*
*FUNCTION - AFTER BUILDING THE DEB/DCB AND THE IOB, THIS MODULE
*          SEARCHES THE TIOT TO SEE IF THE CURRENT VOLUME IN THE
*          VOLUME LIST IS MOUNTED ON A UNIT ALLOCATED TO THE JOB.
*          IF THE VOLUME IS NOT MOUNTED ON AN ALLOCATED UNIT, IT
*          SEARCHES THE UCB LOOKUP TABLE TO DETERMINE IF THE VOLUME
*          IS MOUNTED ANYWHERE.  IF IT IS MOUNTED, DYNAMIC ALLOCATION
*          IS CALLED TO TRY TO ALLOCATE THE UNIT.  IF THE VOLUME IS
*          NOT MOUNTED ANYWHERE OR IF THE UNIT CANNOT BE DYNAMICALLY
*          ALLOCATED, AND THERE IS A PRIMARY UCB, CONTROL IS GIVEN TO
*          THE SCRATCH/RENAME DEMOUNT/MOUNT/VERIFY ROUTINE TO MOUNT
*          THE VOLUME.  IF THERE IS NO PRIMARY UCB OR IF THE VOLUME
*          CANNOT BE MOUNTED, THE NEXT VOLUME IN THE VOLUME LIST IS
*          PROCESSED.  IF THE VOLUME WAS FOUND TO BE MOUNTED ON AN
*          ALLOCATED UNIT, BUT THE UNIT IS NOT READY AND THE    ZA00119
*          MOUNT BIT IS ON, THE VOLUME CAN NOT BE MOUNTED.      ZA00119
*          IF THE VOLUME WAS FOUND TO BE MOUNTED ON AN ALLOCATEDZA00119
*          UNIT AFTER THE UNIT CONTAINING THE VOLUME IS         ZA00119
*          DYNAMICALLY ALLOCATED, OR AFTER THE VOLUME IS MOUNTED ON
*          THE PRIMARY UCB, THIS MODULE INITIALIZES FOR RPS PROCESSING
*          IF THE DEVICE HAS THE RPS FEATURE.  IT THEN ENQ'S ON THE
*          VTOC BEFORE GIVING CONTROL TO THE NEXT LOAD OF SCRATCH.
*          IF ALL THE VOLUME LIST ENTRIES HAVE BEEN PROCESSED, CONTROL
*          IS GIVEN TO THE LAST LOAD OF SCRATCH.
*
*ENTRIES - THE ONLY ENTRY POINT IS IGG0290E. ENTRY IS MADE FROM
*          IGC0002I, IGG0290F, OR IGG0290D.
*
*SUPERVISOR CALLS AND EXTERNAL ROUTINES -
*          RESERVE  - ENQ'S ON THE VTOC (SVC 56)
*          DYNALLOC - DYNAMICALLY ALLOCATES THE UNIT (SVC 99)
*          MODESET  - SWITCHES TO THE CALLER'S KEY
*          IECRES   - BRANCHES TO OTHER SCRATCH MODULES
*          IECRPS   - USES IECRES TO OBTAIN THE RPS WORK AREA
*                   - LOCATES THE RPS SIO APPENDAGE IGG019EK
*
*OTHER MACROS ISSUED -
*          IECDSECS - EXPANDS THE CVT, DSAB, QDB, RB, RRPL, TCB,
*                     TIOT, AND UCB DSECTS
*          IECSCRWA - EXPANDS THE SCRATCH WORK AREA
*          IEFZB4D0 - EXPANDS THE DYNAMIC ALLOCATION REQUEST BLOCK
*          IEFZB4D2 - EXPANDS THE DYNAMIC ALLOCATION TEST UNIT KEYS
*          XCTLTABL - BUILDS A LIST OF MODULE ID'S AND ADDRESSES
*
*INPUT -   AT ENTRY TO THIS MODULE REGISTER 9 POINTS TO THE CVT.
*          REGISTER 10 POINTS TO THE PARAMETER LIST.  REGISTER 13
*          POINTS TO THE WORK AREA, IN WHICH 'VOLNUM' CONTAINS THE
*          NUMBER OF VOLUMES REMAINING TO BE SCRATCHED, AND 'VOLPTR'
*          CONTAINS THE ADDRESS OF THE CURRENT ENTRY IN THE VOLUME
*          LIST.
*          IF REENTRY FROM IGG0290F, REGISTER 14 CONTAINS ONE OF
*          THE FOLLOWING RETURN CODES:
*          00 - VOLUME WAS SUCCESSFULLY MOUNTED AND/OR VERIFIED
*          04 - VOLUME COUND NOT BE DEMOUNTED
*          08 - VOLUME COULD NOT BE MOUNTED
*          0C - I/O ERROR OCCURRED WHEN READING THE VOLUME LABEL
*          ALSO, REGISTER 5 CONTAINS THE NUMBER OF VOLUMES REMAINING
*          TO BE SCRATCHED, AND REGISTER 8 POINTS TO THE CURRENT ENTRY
*          IN THE VOLUME LIST.
*
*OUTPUT - REGISTER 8 POINTS TO THE CURRENT ENTRY IN THE VOLUME LIST.
*         REGISTER 9 POINTS TO THE CVT, AND REGISTER 10 POINTS TO
*         THE PARAMETER LIST.  REGISTER 13 POINTS TO THE WORK AREA,
*         IN WHICH THE DEB CONTAINS THE UCB ADDRESS OF THE VOLUME
*         WHOSE DATA SET IS TO BE SCRATCHED.
*         THE FOLLOWING ADDITIONAL INFORMATION IS PASSED TO IGG0290F:
*         REGISTER 2 POINTS TO THE DEB.
*         REGISTER 3 POINTS TO THE VOLUME SERIAL NUMBER.
*         REGISTER 4 CONTAINS THE CHARACTERS '290E'.
*         REGISTER 11 CONTAINS THE PRIMARY (DEMOUNTABLE) UCB ADDRESS.
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = 896 BYTES
*          RPS WORK AREA = 128 BYTES
*
*ERROR CONDITIONS - NO DEVICE AVAILABLE FOR MOUNTING THE VOLUME
*
*REGISTER USAGE:
R0       EQU   0
R1       EQU   1
RPARM    EQU   2                        PTR TO SVC 99 PARM LIST  Y02082
R2       EQU   2
RDSAB    EQU   2                        POINTER TO DSAB          Y02082
R3       EQU   3
RWRK     EQU   3                        WORK REGISTER            Y02082
RTIOT    EQU   3                        POINTER TO TIOT          Y02082
RTEXT    EQU   4                        POINTER TO TEXT UNIT     Y02082
R4       EQU   4
REND     EQU   4                        POINTER TO END OF ENTRY  Y02082
R5       EQU   5
VOLCTR   EQU   5
R6       EQU   6                        WORK REGISTER            Y02082
R7       EQU   7                                                 S19028
VOLISTX  EQU   8
RCVT     EQU   9
PL       EQU   10
RUCB     EQU   11
RBASE    EQU   12
RWKAREA  EQU   13
RETURN   EQU   14
RTNCODE  EQU   15                       RETURN CODE REGISTER     Y02082
WORKREG  EQU   15
*
         BALR  RBASE,R0
         USING BLDBLKS,RBASE
         USING SCRTHWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
         USING UCB,RUCB
         USING CVT,RCVT
*
*** OTHER EQUATES
*
K3       EQU   3                        CONSTANT OF 3           SA56400
K4       EQU   4                        CONSTANT OF 4            Y02080
K0       EQU   0                        CONSTANT OF 0            Y02082
K1       EQU   1                        CONSTANT OF 1            Y02082
K2       EQU   2                        CONSTANT OF 2            Y02082
K6       EQU   6                        CONSTANT OF 6            Y02082
K7       EQU   7                        CONSTANT OF 7            Y02082
K8       EQU   8                        CONSTANT OF 8            Y02082
K12      EQU   12                       CONSTANT OF 12           Y02082
FW4      EQU   16                       LENGTH OF 4 FW'S         Y02082
STATEXTL EQU   8                        STATUS TEXT UNIT LENGTH  Y02082
UNITEXTL EQU   10                       UNIT TEXT UNIT LENGTH    Y02082
VOLTEXTL EQU   12                       VOLSER TEXT UNIT LENGTH  Y02082
RTNCODE4 EQU   4                        ERROR RETURN CODE OF 4   Y02082
RTNCODE8 EQU   8                        ERROR RETURN CODE OF 8   Y02082
SIODISP  EQU   4                        DISP: TO SIO APPENDAGE   Y02082
AVTDISP  EQU   28                       DISP: TO AVT IN DEB      Y02082
RPSIDLOC EQU   62                       RPS ID DISPLACEMENT      Y02082
VOLSER   EQU   4                        OFFSET TO VOLSER IN A    Y02082
*                                       VOLUME LIST ENTRY        Y02082
STATUS   EQU   11                       OFFSET TO STATUS BYTE    Y02082
ENTRYL   EQU   12                       VOL LIST ENTRY LENGTH    Y02082
UCBADDR  EQU   32                       DISP. TO UCB ADDR IN DEB Y02082
DEVMOD   EQU   X'C0'                    DEB DEVICE MODIFIER      Y02082
IOERR    EQU   X'04'                    I/O ERROR IN VOL LIST    Y02082
NODEVERR EQU   X'05'                    NO DEVICE ERROR          Y02082
NOMNTERR EQU   X'06'                    VOLUME NOT MOUNTED ERROR Y02082
STATOLD  EQU   X'01'                    DISP=OLD INDICATOR       Y02082
DYNUNALL EQU   X'80'                    DO NOT ISSUE SVC 99 BIT  YM1063
*
*** BUILD CONTROL BLOCKS
*
BLDBLKS  EQU   *                                                  25512
         TM    SISW2,DEMNTSW+MOUNTSW+VERIFYSW  TEST IF RETURN    Y02134
*                                       FROM DEMOUNT, MOUNT,     Y02134
*                                       AND/OR VERIFY FUNCTION   Y02134
         BNZ   RETURNPT                 BRANCH IF YES            Y02134
         XC    HOLENUM,HOLENUM          INITIALIZE HOLE COUNT FOR 25512
*                                       OTHER THAN 1ST VOLUME
         LA    R1,WKADEB                BUILD THE WORK AREA DEB  Y02082
         MVI   16(R1),X'01'                  NUM OF EXTS = 1
         LA    R2,DCB
         ST    R2,24(R1)                     INSERT DCB ADDR
         MVI   24(R1),X'0F'                  INSERT DEB ID
         MVI   28(R1),X'04'                  INSERT EXT SCALE
         MVC   42(6,R1),EXTCONST             INSERT EXTS AND TK COUNT
         ST    R1,DEBPTR                BUILD DCB
         LA    WORKREG,ECB              BUILD IOB
         ST    WORKREG,IOB+4                 INSERT ECB ADDR
         LA    RETURN,CCW1              GET CCW POINTER FOR IOB.
         LA    WORKREG,DCB
         STM   RETURN,WORKREG,IOB+16    STORE DCB AND CCW PTR INTO IOB.
         OI    IOB,X'02'               SET UNRELATED BIT IN IOB  A29244
NEXTVOL  EQU   *                        NEXT VOLUME              Y02134
         LH    VOLCTR,VOLNUM            LOAD NUMBER OF VOLUMES LEFT
         L     VOLISTX,VOLPTR           LOAD VOLUME LIST INDEX
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
         MVI   11(VOLISTX),X'00'        CLEAR THIS VOL'S RET     A27090
*                                       CODE                     A27090
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         DROP  R1                                                Y02078
         MVC   PVOLSER,VOLSER(VOLISTX)  SAVE VOLSER IN WRK AREA  YM1337
         OC    PVOLSER,PVOLSER          TEST FOR VALID VOLSER    YM1337
         BZ    NODEVICE                 NO UNIT IF ZERO          Y02082
*
* THE FOLLOWING SECTIONS TRY TO FIND THE UCB ADDRESS OF THE CURRENT
* VOLUME IN THE VOLUME LIST. FIRST, IT SEARCHES THE TIOT TO SEE IF
* THE VOLUME IS MOUNTED ON A UNIT ALLOCATED TO THE JOB. IF NOT, IT
* SEARCHES THE UCB LOOKUP TABLE TO DETERMINE IF THE VOLUME IS MOUNTED
* ANYWHERE. IF IT IS MOUNTED, DYNAMIC ALLOCATION IS CALLED TO TRY TO
* ALLOCATE THE UNIT. IF THE VOLUME IS NOT MOUNTED ANYWHERE OR IF IT
* CANNOT BE DYNAMICALLY ALLOCATED, THE VOLUME WILL BE MOUNTED ON THE
* PRIMARY UCB, IF ONE EXITS.
*
FINDUCB  EQU   *                        FIND UCB                 Y02082
         L     RDSAB,DSABQDB            LOAD DSAB QDB ADDRESS    Y02082
         USING QDB,RDSAB                QDB ADDRESSABILITY       Y02082
         L     RDSAB,QDBFELMP           GET FIRST DSAB ADDRESS   Y02082
         USING DSAB,RDSAB               DSAB ADDRESSABILITY      Y02082
DSABTEST EQU   *                        IS THERE ANOTHER DSAB    Y02082
         LTR   RDSAB,RDSAB              IS THERE ANOTHER DSAB    Y02082
         BZ    TABLSRCH                 BRANCH IF NOT            Y02082
         L     RTIOT,DSABTIOT           GET TIOT POINTER         Y02082
         USING TIOENTRY,RTIOT           TIOT ADDRESSABILITY      Y02082
         SR    REND,REND                ZERO REGISTER FOR IC     Y02082
         IC    REND,TIOELNGH            LENGTH OF TIOT ENTRY     Y02082
         AR    REND,RTIOT               ADDRESS OF FIRST BYTE    Y02082
*                                       PAST THE TIOT ENTRY      Y02082
         LA    RTIOT,TIOEFSRT-K1        ADDR OF FIRST UCB ADDR   Y02082
UCBTEST  EQU   *                        TEST IF AT END           Y02082
         CR    RTIOT,REND               TEST IF AT END OF ENTRY  Y02082
         BNL   NEXTDSAB                 BRANCH IF YES            Y02082
         L     RUCB,K0(,RTIOT)          GET UCB ADDRESS          Y02082
         LA    RUCB,K0(RUCB)            CLEAR HIGH BYTE          Y02082
         LTR   RUCB,RUCB                IS THERE A UCB ADDRESS   Y02082
         BZ    NXTENTRY                 BRANCH IF NOT            YM1063
         CLC   SRTEVOLI,PVOLSER         COMPARE VOL SER NUMBERS  YM1337
         BNE   NXTENTRY                 BRANCH IF NOT EQUAL      Y02082
         CLC   UCBTBYT3(K2),K2(VOLISTX)  COMPARE DEVICE TYPES    Y02082
         BNE   NXTENTRY                 BRANCH IF NOT EQUAL      Y02082
         TM    UCBTBYT3,UCB3DACC        TEST IF DIRECT ACCESS    Y02082
         BZ    NXTENTRY                 BRANCH IF NOT            Y02082
         TM    SRTESTAT,SRTEONLI        TEST IF ONLINE           Y02082
         BO    FOUNDUCB                 BRANCH IF ONLINE         Y02082
NXTENTRY EQU   *                        NEXT UCB ADDRESS IN TIOT Y02082
         LA    RTIOT,L'TIOESTTB+L'TIOEFSRT(,RTIOT)  INCREMENT TO Y02082
*                                       NEXT UCB ADDRESS IN TIOT Y02082
         B     UCBTEST                  GO TEST NEXT UCB ADDRESS Y02082
NEXTDSAB EQU   *                        NEXT DSAB                Y02082
         L     RDSAB,DSABFCHN           GET NEXT DSAB ADDRESS    Y02082
         B     DSABTEST                 GO TEST IT               Y02082
FOUNDUCB EQU   *                        FOUND IT                 Y02082
         ST    RDSAB,DSABADDR           SAVE DSAB ADDRESS        Y02082
         ST    RUCB,WKADEB+UCBADDR      SAVE UCB ADDRESS IN DEB  Y02082
         MVI   WKADEB+UCBADDR,DEVMOD    INSERT DEVICE MODIFIER   Y02082
         L     RETURN,DSABTIOT          LOAD TIOT ENTRY ADDRESS  YM7036
         LA    RETURN,TIOEJFCB-TIOENTRY(,RETURN)  POINT TO JFCB  YM7036X
                                        PREFIX ADDRESS           YM7036
         IECRES LOCJFCB,(RETURN)        LOCATE THE JFCB          YM7036
         CLC   PDSNAME,JFCBDSNM-INFMJFCB(RETURN)  CHECK IF       YM7036X
                                        THIS IS THE RIGHT TIOT   YM7036X
                                        ENTRY FOR THIS DSNAME    YM7036
         BE    MOUNTED                  BRANCH IF CORRECT        YM7036
         OI    SISW2,UCBFNDSW           SET THE UCB FOUND SWITCH YM7036
         B     NXTENTRY                 GO TRY NEXT TIOT ENTRY   YM7036
*                                                                Y02082
* THIS SECTION SEARCHES THE UCB LOOKUP TABLE TO DETERMINE IF THE Y02082
* VOLUME IS MOUNTED ANYWHERE.                                    Y02082
*                                                                Y02082
TABLSRCH EQU   *                        UCB TABLE SEARCH         Y02082
         TM    SISW2,UCBFNDSW           TEST IF A UCB WAS FOUND  YM7036
         BNO   LDLOOKUP                 BRANCH IF NOT            YM7515
         L     RUCB,WKADEB+UCBADDR      LOAD FOUND UCB ADDRESS   YM7515
         LA    RUCB,K0(RUCB)            CLEAR HIGH BYTE          YM7515
         B     MOUNTED                  GO TEST IF VERIFIED      YM7515
LDLOOKUP EQU   *                        LOAD UCB LOOKUP TABL ADR YM7515
         L     R2,CVTILK2               UCB LOOKUP TABLE ADDRESS Y02082
UCBLOOP  EQU   *                                                 S19028
         SR    RUCB,RUCB                CLEAR REG              @ZA01347
         ICM   RUCB,K3,K0(R2)           GET UCB ADDR           @ZA01347
         CLM   RUCB,K3,EXTCONST         IS THIS THE END OF     @ZA05225
*                                       TABLE.                 @ZA05225
         BE    ENDADDR                                           S19028
         LTR   RUCB,RUCB                UCB TABLE MAY HAVE HOLES S19028
         BZ    NEXTADDR                                          S19028
         TM    UCBTBYT3,UCB3DACC        TEST FOR DIRECT ACCESS   S19028
         BZ    NEXTADDR                                          S19028
         TM    SRTESTAT,SRTEONLI        TEST FOR ONLINE DEVICE   A28896
         BZ    NEXTADDR                 BRANCH IF NOT ONLINE     A28896
         CLC   SRTEVOLI,PVOLSER         COMPARE VOL SER NUMBERS  YM1337
         BNE   NEXTADDR                 BRANCH IF NOT EQUAL      Y02082
         CLC   UCBTBYT3(K2),K2(VOLISTX)  COMPARE DEVICE TYPES    Y02082
         BNE   NEXTADDR                 BRANCH IF NOT EQUAL      YM1063
         TM    UCBSTAB,UCBBSVL          TEST IF NONSHAREABLE     YM7377
         BZ    ALLOCVOL                 BRANCH IF SHAREABLE TO   YM7377X
                                        TRY TO ALLOCATE THE UNIT YM1063
         B     ENDADDR                  DON'T TRY TO DYNAMICALLY YM1063
*                                       ALLOCATE IF NONSHAREABLE YM1063
NEXTADDR LA    R2,2(R2)            TRY NEXT ADDR IN UCB TABLE    S19028
         B     UCBLOOP                                           S19028
*
ENDADDR  L     RUCB,PRUCBPTR            LOAD UCB POINTER         S19028
         LTR   RUCB,RUCB                TEST FOR PRIMARY UCB     S19028
         BZ    NODEVICE                 BRANCH IF NO PRIMARY UCB Y02082
         CLC   UCBTBYT3(K2),K2(VOLISTX)  COMPARE DEVICE TYPES    Y02082
         BNE   NODEVICE                 BRANCH IF NOT EQUAL      Y02082
*                                                                Y02082
* THIS SECTION PREPARES TO BRANCH TO IGG0290F TO DEMOUNT (IF REQUIRED)
* AND MOUNT AND/OR VERIFY THE NEXT VOLUME.
*
MOUNTVOL EQU   *                        MOUNT VOLUME             Y02134
         ST    RUCB,WKADEB+UCBADDR      MODIFY UCB ADDR IN DEB   Y02134
         MVI   WKADEB+UCBADDR,DEVMOD    INSERT DEVICE MODIFIER   Y02134
         OI    SISW2,DEMNTSW+MOUNTSW    SET DEMOUNT & MOUNT SW   Y02134
         MVC   DSABADDR,PRDSABAD        INITIALIZE DSAB ADDRESS  Y02134
VERIFY   EQU   *                        SET ADDRESSES            Y02134
         LA    R2,WKADEB                DEB ADDR IN REGISTER 2   Y02134
         LA    R3,PVOLSER               VOLSER ADDR IN REG 3     YM1337
         L     R4,RETNAME               RETURN NAME IN REG 4     Y02134
         LA    R7,MNTLOAD               POINT TO ID OF IGG0290F  Y02134
         B     LOADEXIT                 GO BRANCH TO IGG0290F    Y02134
*                                                                Y02134
* THIS SECTION TESTS THE RETURN CODE FROM THE DEMOUNT/MOUNT ROUTINE.
*
RETURNPT EQU   *                        TEST RETURN CODE         Y02134
         NI    SISW2,X'FF'-DEMNTSW-MOUNTSW-VERIFYSW  RESET SW    Y02134
         B     TESTERR(RETURN)          RETURN CODE BRANCH TABLE Y02134
TESTERR  EQU   *                        VOLUME MOUNTED/VERIFIED  Y02134
         B     MOUNTED                  VOLUME MOUNTED/VERIFIED  Y02134
         B     NODEVICE                 UNSUCCESSFUL DEMOUNT     Y02134
         B     NOMOUNT                  MOUNT/VERIFY FAILED      Y02134
         B     PERMERR                  I/O ERROR OCCURRED       Y02134
*
* THIS SECTION INITIALIZES FOR RPS PROCESSING IF THE DEVICE HAS THE
* RPS FEATURE.
*
MOUNTED  EQU   *                        TEST MOUNT BIT           Y02134
         NI    SISW2,X'FF'-UCBFNDSW     TURN OFF UCB FOUND SWTCH YM7036
         TM    UCBDMCT,UCBMOUNT         TEST MOUNT BIT           Y02134
         BNO   VERIFIED                 BRANCH IF VERIFIED       Y02134
         TM    UCBFL1,UCBNOTRD          IS UNIT NOT-READY       ZA00119
         BO    NODEVICE                 BRANCH IF NOT-READY     ZA00119
         OI    SISW2,VERIFYSW           SET VERIFY SWITCH        Y02134
         B     VERIFY                   GO VERIFY THE VOLUME     Y02134
VERIFIED EQU   *                        VERIFIED                 Y02134
         NI    STYPEFLG,X'FF'-NOMNTDEV  RESET THE 'NO DEVICE FOR Y02082
*                                       MOUNTING' SWITCH AS AT   Y02082
*                                       LEAST ONE VOL IS MOUNTED Y02082
         BCT   VOLCTR,MOREVOLS          TEST FOR LAST VOLUME     Y02134
         OI    STYPEFLG,EXITBIT         SET EXIT BIT IF LAST VOL Y02134
MOREVOLS EQU   *                        MOER VOLS TO PROCESS     Y02134
         LA    R1,ENTRYL(VOLISTX)       NEXT VOL LIST ENTRY ADDR Y02134
         ST    R1,VOLPTR                SAVE NEXT ENTRY ADDRESS  Y02134
         STH   VOLCTR,VOLNUM            SAVE UPDATED VOL COUNT   Y02134
         TM    UCBTBYT2,UCB2OPT3        TEST FOR RPS DEVICE      Y02134
         BZ    LOADTTR0                 BRANCH IF NOT            Y02134
         TM    DSMADTB1,DSMRPSAP        TEST IF IGG019EK LOADED  YM5371
         BO    LOADTTR0                 BRANCH IF YES            YM5371
         LA    R3,WKADEB                POINTER TO DEB           Y02134
         IECRPS RDEB=R3,WKREG1=R4,EXTPR=RWKAREA  INITIALIZE      YM3997X
                                        FOR RPS PROCESSING       YM3997
         MVC   WTGMODNM,THISLOAD        RESTORE MODULE NAME      YM5371
*
* THIS SECTION INITIALIZES THE CCHHR'S OF THE FORMAT 4 AND 5 DSCB'S.
*
LOADTTR0 EQU   *                        INITIALIZE THE CCHHR'S   Y02134
         L     R0,SRTEFSCT              LOAD TTR0 OF F4 FROM UCB Y02134
         LA    R1,WKADEB                POINTER TO DEB           Y02134
         LA    R2,SEEK                  MBBCCHHR ADDRESS         Y02134
         LR    R3,RWKAREA               SAVE WORK AREA ADDRESS   Y02134
         STM   RCVT,RETURN,IECREGSV+K12 SAVE REGISTERS 9-14      Y02134
         L     WORKREG,CVTPCNVT         ADDRESS OF CONVERT RTN   Y02134
         BALR  RETURN,WORKREG           LINK TO CONVERT ROUTINE  Y02134
         LM    RCVT,RETURN,IECREGSV+K12-SCRTHWKA(R3)  RESTORE    Y02134
         MVC   VTOCADR,SEEK+K3          SET UP FORMAT 4 CCHHR    Y02134
         MVC   INCCHHR,VTOCADR          SET UP SEARCH ID CCHHR   Y02134
         MVC   DADSMADR,VTOCADR         SET UP FORMAT 5 CCHHR    Y02134
         SR    WORKREG,WORKREG          ZERO REGISTER            Y02134
         IC    WORKREG,DADSMADR+K4      LOAD F4 RECORD NUMBER    Y02134
         LA    WORKREG,K1(WORKREG)      INCREMENT BY ONE         Y02134
         STC   WORKREG,DADSMADR+K4      SAVE F5 RECORD NUMBER    Y02134
*
* THIS SECTION ENQ'S ON THE VTOC WITH THE SET-MUST-COMPLETE OPTION.
*
ISSUENQ  EQU   *                        ENQ ON THE VTOC          Y02134
         MVC   MJNAME(L'VTOCNAME),VTOCNAME  MAJOR RESOURCE NAME  Y02134
         MVI   ENQAREA,X'FF'            INDICATE LAST ENQ AREA   Y02134
         SR    R1,R1                    ZERO REGISTER            Y02134
         STH   R1,ENQAREA+K2            CLEAR FOR RESERVE MACRO  Y02134
         RESERVE (MJNAME,PVOLSER,E,6,SYSTEMS),SMC=STEP,          YM3022X
               MF=(E,ENQAREA),UCB=WKADEB+32  ENQ ON SYSVTOC      Y02134
*
         OI    STYPEFLG,VTOCENQ         SET VTOC ENQ'ED SWITCH   Y02134
         OI    DSMADTB2,DSMVTOCR+DSMSMCE  SET VTOC ENQ'ED SMC    Y02144
         L     R1,IECRRPRM              RECOVERY RTN LIST ADDR   Y02144
         USING RRPLIST,R1               PARM LIST ADDRESSABILITY Y02144
         ST    RUCB,RRUCBPTR            SAVE THE UCB ADDRESS     Y02144
         DROP  R1                                                Y02144
*
         LA    R7,NEXTLOAD              POINT TO ID OF IGG0290A  Y02134
*
* THIS SECTION BRANCHES TO ANOTHER LOAD OF SCRATCH.
*
LOADEXIT EQU   *                        EXIT TO NEXT LOAD        Y02134
         IECRES LOAD,EXTPR=(RWKAREA),MODID=(R7),BRANCH=DIRECT    Y02134
*
* THIS SECTION SETS AN APPROPRIATE ERROR CODE IN THE STATUS BYTE
* OF THE CURRENT VOLUME LIST ENTRY. IF THE LAST VOLUME HAS BEEN
* PROCESSED, CONTROL IS PASSED TO THE LAST LOAD OF SCRATCH. IF NOT,
* THE NEXT VOLUME LIST ENTRY IS PROCESSED.
*
PERMERR  EQU   *                        I/O ERROR                Y02134
         LA    R3,IOERR                 I/O ERROR                Y02134
         B     SETCODE                  BRANCH TO SET ERROR CODE Y02134
NODEVICE EQU   *                        NO UNIT FOR MOUNTING     Y02134
         LA    R3,NODEVERR              NO UNIT FOR MOUNTING ERR Y02134
         B     SETCODE                  BRANCH TO SET ERROR CODE Y02134
NOMOUNT  EQU   *                        VOLUME NOT MOUNTED       Y02134
         LA    R3,NOMNTERR              VOLUME NOT MOUNTED ERROR Y02134
SETCODE  EQU   *                        SET CODE                 Y02134
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
         DROP  R1                                                Y02078
         STC   R3,STATUS(VOLISTX)       PUT ERROR CODE IN VOLIST Y02078
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         BCT   VOLCTR,NOTLAST           TEST IF LAST VOLUME      Y02134
         OI    STYPEFLG,EXITBIT         SET EXIT BIT IF LAST VOL Y02134
NOTLAST  EQU   *                        NOT LAST VOL             Y02134
         LA    R1,ENTRYL(VOLISTX)       NEXT VOL LIST ENTRY ADDR Y02134
         ST    R1,VOLPTR                SAVE NEXT ENTRY ADDR     Y02134
         STH   VOLCTR,VOLNUM            SAVE UPDATED VOL COUNT   Y02134
         LA    RTNCODE,RTNCODE8         NORMAL ERROR RETURN CODE Y02134
         STH   RTNCODE,ERCODE           SAVE ERROR RETURN CODE   Y02134
         TM    STYPEFLG,EXITBIT         TEST IF LAST VOLUME      Y02134
         BZ    NEXTVOL                  BRANCH IF NOT TO PROCESS Y02134
*                                       THE NEXT VOLUME          Y02134
         TM    STYPEFLG,NOMNTDEV        TEST IF AN ERROR CODE OF Y02134
*                                       4 MUST BE RETURNED TO    Y02134
*                                       CALLER IN REGISTER 15    Y02134
         BZ    LEAVE                    BRANCH IF NOT            Y02134
         MVI   ERCODE+K1,RTNCODE4       SET RETURN CODE TO 4     Y02134
LEAVE    EQU   *                        GO TO IGG0290D           Y02134
         LA    R7,LASTLOAD              POINT TO ID OF IGG0290D  Y02134
         B     LOADEXIT                 GO BRANCH TO IGG0290D    Y02134
*
* THIS SECTION BUILDS THE REQUEST BLOCK TO INTERFACE WITH DYNAMIC
* ALLOCATION (SVC 99) TO TRY TO ALLOCATE THE UNIT ON WHICH THE
* CURRENT VOLUME IN THE VOLUME LIST IS MOUNTED, UNLESS SCRATCH HAS
* BEEN CALLED BY DYNAMIC UNALLOCATION OR JOB OR STEP TERMINATION
* (IF THE CALLER IS IN KEY ZERO AND BIT 0 OF THE SECOND OPTION BYTE
* IN THE FIRST WORD OF THE PARAMETER LIST IS SET).
*
ALLOCVOL EQU   *                        TRY TO ALLOCATE THE UNIT Y02082
         TESTAUTH FCTN=1,KEY=YES,BRANCH=YES  TEST IF CALLER IS   YM1063X
                                        AUTHORIZED OR KEY ZERO   YM1063
*                                                                YM1063
         LTR   RTNCODE,RTNCODE          TEST IF EITHER TRUE      YM1063
         BNZ   BUILDRB                  BRANCH IF NOT            YM1063
         TM    K1(PL),DYNUNALL          TEST IF ENTERED FROM     YM1063X
                                        DYNAMIC UNALLOCATION OR  YM1063X
                                        JOB OR STEP TERMINATION  YM1063
         BO    ENDADDR                  BRANCH IF YES            YM1063
*                                                                YM1063
BUILDRB  EQU   *                        BUILD THE REQUEST BLOCK  YM1063
         LA    RPARM,VTOCDSCB           PARAMETER LIST BASE      Y02082
         USING S99RBP,RPARM                                      Y02082
         LA    RWRK,K4(,RPARM)          INCREMENT BY FOUR        Y02082
         ST    RWRK,S99RBPTR            SET UP REQUEST BLOCK PTR Y02082
         OI    S99RBPTR,S99RBPND        TURN ON HIGH ORDER BIT   Y02082
         LR    RPARM,RWRK               ADDRESS OF REQUEST BLOCK Y02082
         USING S99RB,RPARM              REQ BLOCK ADDRESSABILITY Y02082
         XC    S99RB(S99RBEND-S99RB),S99RB  ZERO REQ BLOCK CORE  Y02082
         MVI   S99RBLN,S99RBEND-S99RB   LENGTH OF REQUEST BLOCK  Y02082
         MVI   S99VERB,S99VRBAL         INDICATE ALLOCATION      Y02082
         LA    RWRK,S99RBEND            ADDR OF TEXT POINTERS    Y02082
         ST    RWRK,S99TXTPP            PLACE IN REQUEST BLOCK   Y02082
         OI    S99FLG11,S99NOMNT        INDICATE THAT VOL MUST   Y02082
*                                       BE MOUNTED IF ALLOCATED  Y02082
         OI    S99FLG21,S99TIONQ+S99NORES  INDICATE TIOT ENQ'ED  Y02082
*                                       AND NO D/S RESERVATION   Y02082
         LR    RPARM,RWRK               ADDRESS OF TEXT POINTERS Y02082
         USING S99TUPL,RPARM            TEXT PTR ADDRESSABILITY  Y02082
*
* THIS SECTION BUILDS THE VOLSER TEXT UNIT.
*
         LA    RTEXT,FW4(,RPARM)        BASE FOR TEXT UNIT       Y02082
         ST    RTEXT,S99TUPTR           PTR TO VOLSER TEXT UNIT  Y02082
         USING S99TUNIT,RTEXT           TEXT UNIT ADDRESSABILITY Y02082
         LH    RWRK,VOLSERKY            INDICATE VOLSER TEXT     Y02082
         STH   RWRK,S99TUKEY                                     Y02082
         LA    RWRK,K1                  ONE TEXT PARM            Y02082
         STH   RWRK,S99TUNUM                                     Y02082
         LA    RWRK,L'SRTEVOLI          LENGTH OF VOLSER         Y02082
         STH   RWRK,S99TULNG                                     Y02082
         MVC   S99TUPAR(L'SRTEVOLI),PVOLSER  GET VOLSER          YM1337
*
* THIS SECTION BUILDS THE UNIT TEXT UNIT.
*
         LA    RTEXT,VOLTEXTL(,RTEXT)   INCREMENT BASE           Y02082
         ST    RTEXT,S99TUPTR+K4        POINT TO UNIT TEXT UNIT  Y02082
         LH    RWRK,UNITKEY             INDICATE UNIT SPECIFIED  Y02082
         STH   RWRK,S99TUKEY                                     Y02082
         LA    RWRK,K1                  ONE TEXT PARM            Y02082
         STH   RWRK,S99TUNUM                                     Y02082
         LA    RWRK,L'UCBNAME           LENGTH OF UCBNAME        Y02082
         STH   RWRK,S99TULNG                                     Y02082
         MVC   S99TUPAR(L'UCBNAME),UCBNAME  GET UNIT NUMBER      Y02082
*
* THIS SECTION BUILDS THE STATUS TEXT UNIT.
*
         LA    RTEXT,UNITEXTL(,RTEXT)   UPDATE TEXT UNIT BASE    Y02082
         ST    RTEXT,S99TUPTR+K8        PTR TO STATUS TEXT UNIT  Y02082
         LH    RWRK,STATUSKY                                     Y02082
         STH   RWRK,S99TUKEY            INDICATE STATUS TEXT     Y02082
         LA    RWRK,K1                                           Y02082
         STH   RWRK,S99TUNUM            ONE TEXT PARM            Y02082
         STH   RWRK,S99TULNG            LENGTH OF TEXT PARM      Y02082
         MVI   S99TUPAR,STATOLD         INDICATE DISP=OLD        Y02082
*
* THIS SECTION BUILDS THE RETURN DDNAME TEXT UNIT.
*
         LA    RTEXT,STATEXTL(,RTEXT)   INCREMENT TEXT UNIT BASE Y02082
         ST    RTEXT,S99TUPTR+K12       PTR TO DDNAME TEXT UNIT  Y02082
         LH    RWRK,RTNDDKEY            INDICATE RETURN DDNAME   Y02082
         STH   RWRK,S99TUKEY            SPECIFICATION            Y02082
         LA    RWRK,K1                  ONE TEXT PARM            Y02082
         STH   RWRK,S99TUNUM                                     Y02082
         LA    RWRK,L'TIOEDDNM                                   Y02082
         STH   RWRK,S99TULNG            LENGTH OF DDNAME         Y02082
         XC    S99TUPAR(L'TIOEDDNM),S99TUPAR  CLEAR FOR DDNAME   Y02082
         OI    S99TUPTR+K12,S99TUPLN    INDICATE END OF LIST     Y02082
         LA    R1,VTOCDSCB              POINT TO REQ BLOCK PTR   Y02082
         DYNALLOC                       ISSUE DYNAMIC ALLOCATION Y02082
         LTR   RTNCODE,RTNCODE          TEST IF SUCCESSFUL       Y02082
         BNZ   ENDADDR                  BRANCH IF NOT            Y02082
*
* THIS SECTION SEARCHES THE DSAB CHAIN TO FIND THE ADDRESS OF THE DSAB
* WHICH POINTS TO THE TIOT ENTRY CONTAINING THE DYNAMICALLY ALLOCATED
* DDNAME. RTEXT STILL POINTS TO THE DDNAME TEXT UNIT.
*
         L     RDSAB,DSABQDB            LOAD DSAB QDB ADDRESS    Y02082
         USING QDB,RDSAB                QDB ADDRESSABILITY       Y02082
         L     RDSAB,QDBFELMP           GET FIRST DSAB ADDRESS   Y02082
         USING DSAB,RDSAB               DSAB ADDRESSABILITY      Y02082
FINDDSAB EQU   *                        IS THERE ANOTHER DSAB    Y02082
         LTR   RDSAB,RDSAB              IS THERE ANOTHER DSAB    Y02082
         BZ    ENDADDR                  BRANCH IF NOT            Y02082
         L     RTIOT,DSABTIOT           GET TIOT POINTER         Y02082
         USING TIOENTRY,RTIOT           TEST IF CORRECT DSAB     Y02082
         CLC   TIOEDDNM,S99TUPAR        TEST IF CORRECT DSAB     Y02082
         BE    FOUNDSAB                 BRANCH IF YES            Y02082
         L     RDSAB,DSABFCHN           GET NEXT DSAB ADDRESS    Y02082
         B     FINDDSAB                 CONTINUE SEARCH          Y02082
FOUNDSAB EQU   *                        FOUND IT                 Y02082
         OI    SISW1,UCBALLOC           SET UCB ALLOCATED BIT    Y02082
*
         OI    DSMADTB1,DSMUCBAL        SET UCB ALLOCATED BIT    Y02144
         ST    RDSAB,DSMADTW4           SAVE DSAB ADDRESS        Y02144
         ST    RDSAB,DSABADDR           SAVE DSAB ADDRESS        YM7036
         ST    RUCB,WKADEB+UCBADDR      SAVE UCB ADDRESS IN DEB  YM7036
         MVI   WKADEB+UCBADDR,DEVMOD    INSERT DEVICE MODIFIER   YM7036
         B     MOUNTED                  CONTINUE WITH SCRATCH    YM7036
*
*** PROGRAM CONSTANTS
*
EXTCONST DC    X'FFFFFFFF7FFF'          LAST CCHH AND NBR OF TRACKS
         DS    0F                       FULLWORD BOUNDARY        Y02134
RETNAME  DC    CL4'290E'                RETURN NAME FOR IGG0290F Y02134
RPSID    DC    CL4'RPSA'                RPS APPENDAGE ID         Y02134
VTOCNAME DC    CL8'SYSVTOC'             SYSVTOC MAJOR ENQ NAME   Y02134
VOLSERKY DC    AL2(DALVLSER)            VOLSER TEXT UNIT KEY     Y02082
UNITKEY  DC    AL2(DALUNIT)             UNIT TEXT UNIT KEY       Y02082
STATUSKY DC    AL2(DALSTATS)            STATUS TEXT UNIT KEY     Y02082
RTNDDKEY DC    AL2(DALRTDDN)            RETURN DDNAME KEY        Y02082
*
*** TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(NEXTLOAD,0A,LASTLOAD,0D,MNTLOAD,0F,        YM3997X
               THISLOAD,IGG0290E,                                YM5371X
               RPS19EK,IGG019EK),SVC=029,LENGTH=,BRT=YES         YM3997
         SPACE 2
         IECDSECS CVT,DSAB,QDB,RB,RRPL,TCB,TIOT,UCB,EXPAND=YES   Y02144
WORKAREA IECSCRWA EP,ADT=YES            SCRATCH WORK AREA        Y02144
         EJECT                                                   Y02082
*
* DSECTS FOR INVOCATING DYNAMIC ALLOCATION (SVC 99)
*
         IEFZB4D0                       DYNAMIC ALLOCATION DSECT Y02082
         EJECT                                                   Y02082
         IEFZB4D2                       DYNAMIC ALLOCATION KEYS  Y02082
         EJECT                                                   YM7036
         IEFJFCBN                       JFCB DSECT               YM7036
         END
