 TITLE 'IGG0325E - DADSM - BUILD F1/F3 ROUTINE'
IGG0325E CSECT
*
*MODULE NAME = IGG0325E
*
*DESCRIPTIVE NAME = DADSM - BUILD F1/F3 ROUTINE
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 16 DELETIONS
*009206610662-0668                                                 7493
*1462086400,113200                                                 AAAA
*1462                                                             13559
*          RELEASE 17 DELETIONS
*1708000230,000550,009600,009800,033600,046200-046800,052200-      UL17
*    054000,054800,067400,068200-069000,070600,073800-077400,      UL17
*    090800-091000.                                                UL17
*          RELEASE 18 DELETIONS
*2410054680,054920,056000,059800                                  22833
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*1027063200                                                      A36720
*1027054650-054920,064200                                        A32526
*1027062200                                                      S20016
*1027                                                            A31576
*          RELEASE 21 DELETIONS
* 063200                                                         M1769
*1192002600,003800-004000,021600-021800,022200-022400,066600-    A42477
*1192067400,073400,090400,092600,096800                          A42477
*1192060000                                                      M0184
*1192000210,019600,028800-029400,089400-089600,090400,092600,    S21042
*1192117200                                                      S21042
*0000001600-002000,006000,040800,054400,055400,055800,056400-    A46776
*0000058200,067000-069800,070860,071400,072200-072400,084600-    A46776
*0000084800,085800-086200,090400-092600,115200-115800            A46776
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,000640-000704,004000,006600,007200,008800,    Y02080
*0000009400-010200,011800,020000,022000-022300,027544,030200,    Y02080
*0000031400,070200,072400-072600,073000,073400-073600,090000,    Y02080
*0000090300-098600,099000-114600,115896-116600,117000            Y02080
*0000                                                            Y02144
*0000                                                            Y02082
*0000009000,021200,084700,085000-086600,089200-089500,112800-    YM3995
*0000113000,116600-117000                                        YM3995
*                                                                     *
*          VS2 SU32 DELETIONS                                  @G32DSFS
*D055920-056140,055920-056040                                  @G32DSFS
*          VS2 RELEASE 03.0 DELETIONS/CHANGES                         *
*0000089500                                                     ZA00704
*          VS2 RELEASE 03.7 CHANGES/SU808
*A064312-064330,C064333                                        @ZA15055
*
*STATUS CHANGE LEVEL 007
*FUNCTION/OPERATION: THIS MODULE BUILDS AND WRITES FORMAT 1 AND       *
*   FORMAT 3 DSCB'S AS REQUIRED.  IT PROCESSES THE ALLOCATED SPACE    *
*   EXTENTS IN THE DADSM TABLE TO GENERATE THE F1/F3 EXTENTS.  THIS IS*
*   ACCOMPLISHED BY LINKING TO THE 'TTR CONVERT ROUTINE' TO CONVERT   *
*   THE DADSM TABLE 'RTA' FORM EXTENTS INTO 'CCHH' FORM.  THE         *
*   OTHER APPROPRIATE FORMAT 1 DSCB FIELDS ARE FILLED WITH DATA       *
*   TAKEN FROM EITHER A JFCB OR A PARTIAL DSCB.  IF A DIRECTORY       *
*   IS REQUESTED, A CHECK IS MADE TO DETERMINE IF THE DIRECTORY       *
*   QUANTITY REQUESTED WILL FIT INTO THE LARGEST EXTENT ALLOCATED     *
*   TO THIS REQUEST.                                                  *
*   THE VTOC HAS BEEN ENQ'ED BY IGG0325A, AND AS THIS MODULE CHANGES  *
*   SPACE EXTENTS IN THE VTOC IT WILL PERFORM A 'SET MUST COMPLETE'   *
*   FUNCTION PRIOR TO THE FIRST WRITE.                                *
*   DEFINES DATA SETS TO RAC IF AUTOMATIC DATA SET PROTECTION  @Z40RSGD
*   IS INDICATED IN THE JFCB.                                  @Z40RSGD
*                                                                     *
*ENTRY POINTS:                                                        *
*        IGG0325E - ENTRY IS MADE FROM IGG0325B ON A ZERO QUANTITY    *
*   REQUEST, FROM IGG0325K FOR A ZERO QUANTITY REQUEST SPECIFYING     *
*   USER LABELS, FROM IGG0325C FOR AN ABSOLUTE TRACK REQUEST, AND     *
*   FROM IGG0325D FOR CYLINDER, TRACK, OR RECORD SPACE REQUESTS.      *
*                                                                     *
*INPUT: UPON ENTRY TO THIS MODULE THE WORK AREA CONTAINS THE DATA     *
*   PORTION OF THE FORMAT 4 DSCB AND ITS ADDRESS, THE ADDRESS OF THE  *
*   FIRST DADSM RECORD (F5), A DEB, AN IOB, AN ECB, AND A CHANNEL     *
*   PROGRAM TO SEARCH FOR HOLES AND WRITE FORMAT 1 AND FORMAT 3       *
*   DSCB'S.  IF THE FIRST DADSM RECORD IS STILL IN CORE THE 'FIRST    *
*   FORMAT 5 DSCB IN CORE SWITCH' WILL BE ON.                         *
*   THE DADSM TABLE WILL CONTAIN THE ACTUAL SPACE ALLOCATED TO THIS   *
*   REQUEST IF OTHER THAN A ZERO QUANTITY REQUEST.                    *
*   REGISTER 11 WILL POINT TO A JFCB OR A PARTIAL DSCB.               *
*   REGISTER 13 WILL POINT TO THE WORK AREA.                          *
*                                                                     *
*OUTPUT: UPON TRANSFER OF CONTROL, THE WORK AREA AND REGISTERS WILL   *
*   BE AS AT INPUT.  FORMAT 1 DSCB'S AND FORMAT 3 DSCB'S WILL BE      *
*   WRITTEN OUT ON THIS VOLUME AS REQUIRED.                           *
*   IF NOT AN ERROR EXIT THE 'SET MUST COMPLETE INDICATOR' WILL BE ON.*
*   IF DIRECTORIES WERE REQUESTED THE LOW CCHH OF THE FIRST FORMAT 1  *
*   DSCB EXTENT WILL BE SAVED IN THE WORK AREA.                       *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        CVTPCNVT - TTR CONVERSION ROUTINE                            *
*        EXCP(0) - READ FROM OR WRITE TO DIRECT ACCESS DEVICE         *
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        *
*        STATUS  - SET STEP MUST COMPLETE IN THE TCB                  *
*        IECRES  - BRANCH TO OTHER MODULES                            *
*                                                                     *
*EXITS-NORMAL: BRANCH TO IGG0325H WITH ZERO IN THE ERROR CODE PASS    *
*              REGISTER ON ZERO QUANTITY REQUESTS.  BRANCH TO         *
*              IGG0325G ON ALL OTHER REQUESTS TO UPDATE F5 DSCBS.     *
*   -ERROR: BRANCH TO IGG0325H WITH CODE IN ERROR CODE PASS REGISTER. *
*                                                                     *
*   ERROR CODES THAT CAN BE ISSUED BY 'BUILD F1/F3 ROUTINE'           *
*                                                                     *
*   0C - PERMANENT I/O ERROR                                          *
*                                                                     *
*   38 - DIRECTORY QUANTITY REQUEST ERROR                             *
*                                                              @Z40RSGD
*   A8 - RACDEF FAILED DATA SET ALREADY DEFINED.               @Z40RSGD
*                                                              @Z40RSGD
*   AC - USER NOT AUTHORIZED TO DEFINE DATA SET.               @Z40RSGD
*                                                                     *
*TABLES/WORK AREAS: DADSM WORK AREA DESCRIBED BY MACRO 'IECALLWA'     *
*                                                                     *
*              ***************************************                *
*              *             DADSM TABLE             *                *
*              ***************************************                *
*                                                                     *
*              ***************************************                *
*              *        *         *                  *                *
*              *  TYPE  *  NO OF  *     USED HOLE    *                *
*              *  FLAG  * ENTRIES *      COUNTER     *                *
*              *        *         *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*                                                                     *
*              TYPEFLG  =  02 - BPAM DIRECTORIES REQUESTED.           *
*                                                                     *
*                       =  40 - USER LABELS REQUESTED                 *
*                                                                     *
*                       =  80 - SET MUST COMPLETE IS ACTIVE           *
*                                                                     *
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.  *
*                                                                     *
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.      *
*                                                                     *
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT*
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*NOTES:                                                               *
*   OTHER MACROS USED                                                 *
*   IECALLWA - ALLOCATE WORK AREA EXPANSION                           *
*   IECSDSL1 - BUILD DSCB'S                                           *
*   IEFJFCBN - BUILD JFCB                                             *
*   IECDSECS - EXPANDS THE CVT, PSA,TCB,JFCB, AND SCVT DSECTS         *
*                                                                     *
*                                                                     *
*STORAGE: PROGRAM CODE CSECT - LESS THAN 1024 BYTES                   *
*   WORK AREA - AS DEFINED IN THE IECALLWA MACRO                      *
*   RPS WORK AREA - AS DEFINED IN THE IECRPS MACRO                    *
*                                                                     *
*
*REGISTER USAGE:
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
RHH      EQU   2                        ALIGN CHECK WORK REG
R3       EQU   3
RCC      EQU   3                        ALIGN CHECK WORK REG
RTABL    EQU   4                        POINTER TO DADSM TABLE
RXNUM    EQU   5                        EXTENT SEQUENCE NUMBER
RXPTR    EQU   6                        POINTER TO F1/F3 EXTENT FIELD
RCNT     EQU   7                        NUMBER OF ENTRIES IN DADSM TBL
RTTRPTR  EQU   7                        PTR TO XCTL BY TTR TABLE ENTRY
RTRK     EQU   8                        CONTAINS TRKS/CYL
RERRPASS EQU   8                        ERROR PASS REGISTER
DRBAK    EQU   9                        CHAN PROG RETURN REGISTER
RWORK    EQU   9                        WORK REGISTER          @ZM43025
RJFCBA   EQU   10                       ALTERNATE JFCB POINTER
RJFCB    EQU   11
RBASE    EQU   12                 BASE REGISTER
RWKA     EQU   13                 WORK AREA BASE
RBAK     EQU   14                 RETURN REGISTER
RERR     EQU   15                 ERROR CODE REGISTER
RCVT     EQU   15                       CONVERSION ROUTINE LINK REG
*
* OTHER EQUATES
*
ONEENTRY EQU   1                        ONE DADSMTBL ENTRY       A46776
K1       EQU   1                        CONSTANT OF ONE          Y02082
STEPMC   EQU   1                        STATUS STEP MC INDICATOR YM3995
TWO      EQU   2                        CONSTANT OF TWO          A46776
FOUR     EQU   4                        CONSTANT OF FOUR       @ZM43025
DSORGPO  EQU   X'02'                    DSORG = PO IN F1 DSCB    A36720
DSORGU   EQU   X'01'                    UNMOVABLE BIT IN DSORG   M1769
RDWOPSWD EQU   X'04'                    DSCB RD-W/O-PASSWORD BIT Y02080
* EQUATES FOR RACDEF SUPPORT                                   @Z40RSGD
DS1RACDF EQU   X'40'                    DS1DSIND-DATA SET IS   @Z40RSGD
*                                       RAC DEFINED            @Z40RSGD
RACERR   EQU   X'A4'                    USED TO CONSTRUCT RAC  @Z40RSGD
*                                       ERROR CODES            @Z40RSGD
RESBITS  EQU   X'13'                    DSORG RESERVE BITS       Y02080
*
* * * * * * * * * * * * *
*
*
* * * * * * * * * * * * *
*
* REGISTER USAGE
*
         BALR  RBASE,0
         USING BLDF1F3,RBASE
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080
         USING CVT,RCVT
         USING JFCBFLD,RJFCB
*
BLDF1F3  MVI   CCW11+4,X'10'            SET SKIP FLAG IN WRT CK CCW
         XC    DS1DSNAM(140),DS1DSNAM   CLEAR FORMAT 1 DSCB AREA
         NI    SWITCH,X'FF'-PRCNTL      CLEAR CONTROL SWITCH     Y02080
         LR    RJFCBA,RJFCB             INITIALIZE ALTERNATE JFCB PTR
         SR    RCNT,RCNT
         IC    RCNT,ENTRYNUM           GET NBR OF DADSMTBL ENTRIES
         LTR   RCNT,RCNT               IS THIS A ZERO QTY REQUEST
         BZ    BLDF1                   BRANCH IF YES
*
* THIS SECTION CHECKS IF THE FIRST ENTRY IN THE DADSMTBL WILL FILL
* THE DIRECTORY QUANTITY REQUESTED.  BLANK AND ALX OPTION
*
         LA    R2,ENTRIES              POINT TO FIRST DADSMTBL ENTRY
       TM      TYPEFLG,X'42'            DIRECTORIES OR USER LABEL UL17
         BZ    FIRSTPAS                BRANCH IF NO
         LA    R2,ENTRIES+4            BYPASS THE FIRST DADSMTBL ENTRY
         LH    R0,ENTRIES+2            GET 1ST ENTRY RTA+1
         SH    R0,ENTRIES              CALCULATE NBR OF TRKS
         CH    R0,TTRLL                WILL THE 1ST ENTRY FILL DIR REQ
         BNH   DIRERR                   BRANCH IF NO
         BCT   RCNT,FIRSTPAS           DECREMENT COUNT AND GO SORT
         B     START1                  ONE ENTRY - BYPASS SORT
*
* DIRECTORY ERROR - BLANK OR ALX OPTION.  THE FIRST ENTRY IN THE
* DADSMTBL WILL NOT FILL THE DIRECTORY QUANTITY REQUESTED.
*
DIRERR   LA    RERRPASS,X'38'           SET ERROR CODE 'DIR QTY ERROR
         B     ERREXIT
*
*
* ROUTINE TO SORT DADSM TABLE INTO ASCENDING RTA SEQUENCE
*
FIRSTPAS LR    RTABL,R2                SET UP DADSMTBL POINTER
         LR    R3,RCNT                 LOAD SORT LOOP COUNTER
DCOUNT   BCT   R3,NEWPAIR              ARE THERE MORE COMPARISIONS
         BCT   RCNT,FIRSTPAS           NO-ANY MORE SORT PASSES
         B     START1                  BRANCH IF NO
NEWPAIR  CLC   0(2,RTABL),4(RTABL)     FIRST HIGHER THAN SECOND
         BL    SHIFT                   BRANCH IF NO
         LM    R0,R1,0(RTABL)          LOAD THESE TWO ENTRIES
         ST    R0,4(RTABL)             EXCHANGE THESE
         ST    R1,0(RTABL)                  TWO ENTRIES
SHIFT    LA    RTABL,4(RTABL)          STEP DADSMTBL PTR TO NEXT PAIR
         B     DCOUNT
*
* THIS SECTION CALCULATES CCHHCCHH OF EACH EXTENT AND STORES THEM IN
* THE F1 DSCB. THE EXTENT NUMBER IS ALSO STORED HERE.
*
START1   TM    SWITCH,PRCNTL           IS PROCESS CONTROL SWITCH ON
         BO    EXIT6A                   BRANCH IF YES            A46776
         IC    RCNT,ENTRYNUM      PICK UP NUMBER OF ENTRIES IN TABLE
RESET1   LA    RTABL,ENTRIES-2          POINT TO 1ST ENTRY IN DADSM TBL
         LA    RXPTR,DS1EXT1-4          INITIALIZE EXTENT POINTER
         SR    RXNUM,RXNUM        CLEAR EXTENT SEQ REGISTER
         LA    R1,3               INSERT MAXIMUM EXTENTS IN F1 DSCB.
         CLR   R1,RCNT                 IS FORMAT 3 DSCB NEEDED.
         BL    BLDF3              YES- GO AND CREATE F3 DSCB.
RETURNF1 LA    DRBAK,BLDF1             INSERT RETURN ADDRESS
BIGLOOP  LA    RBAK,UPPEREXT      INSERT RETURN ADDRESS
CALEXT   STC   RXNUM,5(RXPTR)           INSERT EXTENT NUMBER
CALOOP   LH    R0,2(RTABL)              GET LOW RTA
GOCVT    SLL   R0,16                   POSITION RTA TO 'TT' OF TTR0
         STM   DRBAK,RWKA,REGSAVEA     SAVE REGISTERS
         ST    RBAK,PDLIST5            SAVE RETURN REGISTER
         LA    R1,DEB                   LOAD DEB POINTER
         LA    R2,MBBCCHHR              LOAD POINTER TO 8 BYTE AREA
         L     RCVT,CVTPTR              LOAD COMM VECT TABLE BASE
         L     RCVT,CVTPCNVT            LOAD CONVERSION ROUTINE BASE
         LR    R3,RWKA                  SAVE WORKAREA POINTER
         BALR  RBAK,RCVT                GO TO CONVERSION ROUTINE
         LM    DRBAK,RWKA,REGSAVEA-FIRST(R3)  RESTORE REGISTERS
         L     RBAK,PDLIST5            RESTORE RETURN REGISTER
         MVC   6(4,RXPTR),MBBCCHHR+3    MOVE CCHH TO EXTENT
         BR    RBAK
UPPEREXT LA    RTABL,2(RTABL)           UPDATE POINTER FOR UPPER RTA
         LA    RXPTR,4(RXPTR)           UPDATE POINTER FOR UPPER CCHH
NOTSPLIT LH    R0,2(RTABL)              GET UPPER RTA+1
         BCTR  R0,0                     DECREMENT TO HIGH RTA
         BAL   RBAK,GOCVT               GO TO CONVERSION ROUTINE
*
* THIS ROUTINE TESTS WHETHER EXTENT IS CYLINDER ALIGNED AND SETS
* THE ALIGNMENT CODE IN THE EXTENT TYPE FIELD.
*
ALIGNCHK SR    RHH,RHH                  CLEAR DIVIDION REG
         LH    RCC,0(RTABL)             GET LOW RTA
         LH    RTRK,DS4DEVSZ+2          GET TRKS/CYL
         DR    RHH,RTRK                 CONVERT TO CCHH
         LTR   RHH,RHH                  IS THERE A TRK REMAINDER
         BNE   NOTALIGN                 BRANCH IF YES
         LH    RCC,2(RTABL)             GET HIGH RTA
         DR    RHH,RTRK                 CONVERT TO CCHH
         LTR   RHH,RHH                  IS THERE A TRK REMAINDER
         BNE   NOTALIGN                 BRANCH IF NO
         MVI   0(RXPTR),X'81'           SET ALIGN CODE
         B     ALIGNRTN
NOTALIGN MVI   0(RXPTR),X'01'           SET NOT ALIGN CODE
ALIGNRTN BCT   RCNT,UPDATE1
         BR    DRBAK                    RETURN TO CALLING ROUTINE
UPDATE1  LA    RTABL,2(RTABL)     UPDATE DADSM TABLE POINTER
         LA    RXNUM,1(RXNUM)     INCREMENT EXTENT SEQUENCE CTR
         LA    RXPTR,6(RXPTR)
         B     BIGLOOP            BRANCH TO CLACULATE NEXT EXTENT
*
* THIS SECTION BUILDS A FORMAT 1 DSCB FROM A PARTIAL F1 DSCB.
*
BLDF1    EQU   *                                                 A32526
         TM    TYPEFLG,SMCDONE     HAS MUST CMPLT BEEN SET        22833
         BO    BLDF1B                   BRANCH IF YES
         BAL   DRBAK,DOSMC              GO SET MUST COMPLETE
BLDF1B   EQU   *                                                 A46776
         LTR   RJFCB,RJFCB              TEST IF PARTIAL DSCB     A46776
         BP    BLDF1A
         MVC   DS1DSNAM(PD1LSTAR-PD1DSNAM),PD1DSNAM  MOVE IN     A46776
*                                       THE FORMAT 1 DSCB FIELDS A46776
         MVC   DS1LSTAR(5),TTRLL
         B     EXIT5A
*
* BUILD FORMAT 1 DSCB ROUTINE
*
BLDF1A   MVI   DS1FMTID,X'F1'
         MVC   DS1DSSN(6),JFCBVOLS      INSERT FILE SERIAL NUMBER
         MVI   DS1VOLSQ+1,X'01'        INSERT VOLUME SEQUENCE NUMBER
         MVC   DS1SYSCD(13),SYSCODE     MOVE IN SYSTEM CODE      M0184
         MVC   DS1LSTAR(5),TTRLL       INSERT LAST TRACK USED AND
*                                      SPACE REMAINING ON LAST TRACK
         MVC   DS1SCALO(4),JFCBCTRI     MOVE IN SPACE PARAMETERS
*
* SET RAC PROTECTED INDICATOR IF REQUESTED.                    @Z40RSGD
*
         TM    JFCFLGS1,JFCBADSP        AUTO DATA SET PROTECT  @Y40RSGD
         BZ    NORACBIT                 NO-CONTINUE            @Z40RSGD
         OI    DS1DSIND,DS1RACDF        YES-SET RAC PROTECTED  @Z40RSGD
*                                       BIT                    @Z40RSGD
NORACBIT EQU   *                        RAC INDICATOR IN DSCB  @Z40RSGD
*                                       CORRECT                @Z40RSGD
         DROP  RJFCB
         USING JFCBFLD,RJFCBA
EXIT5    MVC   DS1DSNAM(44),JFCBDSNM
         MVC   DS1CREDT(6),JFCBCRDT     INSERT CREATION AND EXPIRATION
         MVC   DS1DSORG(8),JFCDSORG     INSERT DSORG FIELD
*                                       RECORD FORMAT, OPTION CODE,
*                                       BLOCK AND RECORD LENGTH.
         NI    DS1DSORG+K1,X'FF'-RESBITS CLEAR THE RESERVED BITS Y02082
         TM    JFCBIND2,JFCBSCTY        DOES JFCB SPEC SECURITY  S20016
         BZ    NOSECTY                  BRANCH IF NO
         OI    DS1DSIND,X'10'           SET SECURITY BIT IN DSCB F1
         TM    JFCBIND2,JFCBRWPW        DOES JFCB SPEC RWPW OPTN S20016
         BNO   NOSECTY                  BRANCH IF NO             S20016
         OI    DS1DSIND,RDWOPSWD        IND SECTY IS FOR WR ONLY S20016
NOSECTY  CLC   JFCBDQTY(3),ZEROS        IS THIS A DIRECTORY REQUEST
         BE    MOVEKEY                  BRANCH IF NO
         NI    DS1DSORG,DSORGU          LEAVE UNMOVABLE BIT ON   M1769
         OI    DS1DSORG,DSORGPO         SET DSORG=PO IN F1 DSCB  M1769
MOVEKEY  MVC   DS1KEYL(1),JFCKEYLE      INSERT KEY LENGTH
         MVC   DS1RKP(2),JFCRKP         INSERT RELATIVE KEY POSITION
         DROP  RJFCBA
         USING JFCBFLD,RJFCB
EXIT5A   EQU   *                                                 A32526
         IC    R0,ENTRYNUM              PICK UP NO. EXTENTS      A32526
         TM    TYPEFLG,X'40'            USER LABELS REQUESTED    A32526
         BZ    NOUSER                   BRANCH IF NO             A32526
         MVI   DS1EXT1,X'40'            INSERT USER LABEL IND    A32526
         BCTR  R0,0                     DO NOT COUNT U.L. EXTENT A32526
NOUSER   EQU   *                                                 A32526
         STC   R0,DS1NOEPV              PUT # EXTENTS IN DSCB  @Z40RSGD
*
* DEFINE DATA SET TO RAC IF REQUESTED                          @Z40RSGD
*
         LTR   RJFCB,RJFCB              TEST FOR PARTIAL DSCB  @G32DSFS
         BNP   RACDEFOK                 YES,SKIP RACDEF        @G32DSFS
         L     RCVT,CVTPTR              GET CVT ADDRESS        @ZA15055
         L     RCVT,CVTRAC              LOAD ACCESS CNTL       @ZA15055
         LA    RCVT,0(,RCVT)            CLEAR HI-ORD           @ZA15055
         LTR   RCVT,RCVT                RAC ACTIVE?            @ZA15055
         BNZ   TST2                     YES-GO TO NEXT TEST    @ZA15055
         NI    DS1DSIND,X'FF'-DS1RACDF  INSURE RAC PROTECT OFF @ZA15055
         B     RACDEFOK                 NO-RAC CONTINUE        @ZA15055
TST2     TM    DS1DSIND,DS1RACDF        RACDEF NECESSARY       @ZA15055
         BZ    RACDEFOK                 NO-CONTINUE            @Z40RSGD
         MVC   RACDEF(LRACDEF),MRACDEF  INITIALIZE RACDEF      @Z40RSGD
*                                       PARAMETER LIST         @Z40RSGD
         RACDEF ENTITY=DS1DSNAM,        DEFINE NEW DS TO RAC   @Z40RSGDX
               VOLSER=MIELNAME,                                @Z40RSGDX
               MF=(E,RACDEF)                                   @Z40RSGD
         LTR   RERR,RERR                RACDEF SUCCESSFUL      @Z40RSGD
         BZ    RACDEFOK                 YES-CONTINUE           @Z40RSGD
* RACDEF FAILED SET ERROR CODE X'A8' FOR PREVIOUSLY DEFINED    @Z40RSGD
* AND X'AC' IF USER NOT AUTHORIZED TO ISSUE RACDEF             @Z40RSGD
         LA    RERRPASS,RACERR(RERR)    SET ERROR CODE         @Z40RSGD
         B     ERREXIT                  ERROR TERMINATE ALLOC  @Z40RSGD
RACDEFOK EQU   *                        RACDEF PROCESSING      @Z40RSGD
*                                       COMPLETE               @Z40RSGD
         BAL   DRBAK,BCHNLGO            WRITE F1 DSCB            A32526
*
* THIS SECTION UPDATES THE HIGH WATER MARK AND THE HOLE COUNT IN
* THE VTOC DSCB
*
         CLC   IDAREA(5),DS4HPCHR      TEST FOR HI WATER MARK
         BNH   OLDHIWAT
         MVC   DS4HPCHR(5),IDAREA      MOVE IN NEW HI WATER MARK
OLDHIWAT LH    RTABL,DS4DSREC           GET NUMBER OF AVAIL HOLES
         BCTR  RTABL,0                  DECREMENT COUNT BY ONE
         STH   RTABL,DS4DSREC           RESET NUMBER OF AVAIL HOLES
         MVC   CCHHR(5),IDAREA     SAVE CCHHR OF F1 DSCB         S21042
         CLI   ENTRYNUM,X'00'           IS THIS A ZERO QTY REQUEST
         BNE   TSTDIR                   BRANCH IF NO             A46776
         SR    RERRPASS,RERRPASS        ZERO ERROR PASS REGISTER A46776
ERREXIT  EQU   *                                                 A46776
         LA    RTTRPTR,ALLOCD2          POINT TO LAST LOAD       A46776
         B     EXIT6B                   GO XCTL                  A46776
TSTDIR   EQU   *                                                 A46776
         TM    TYPEFLG,DIRREQ           IS THIS A DIRECTORY REQ  A46776
         BZ    EXIT6                    BRANCH IF NO             A46776
         MVC   SLOWCCHH,DS1EXT1+TWO     SAVE LOW CCHH            A46776
*
* THIS SECTION DETERMINES IF THE DADSMTBL MUST BE RESORTED.
*
EXIT6    TM    TYPEFLG,X'42'            DIRECTORIES OR USER LABEL UL17
         BZ    EXIT6A                  BRANCH IF NO
         CLI   ENTRYNUM,ONEENTRY        TEST FOR ONE ENTRY       A46776
         BE    EXIT6A                   YES, DO NOT SORT EXTENTS A31576
         OI    SWITCH,PRCNTL           SET PROCESS CONTROL SWITCH
         LA    R2,ENTRIES               LOAD PTR TO DADSMTBL ENTRIES
         SR    RCNT,RCNT
         IC    RCNT,ENTRYNUM           GET NBR OF DADSMTBL ENTRIES
         B     FIRSTPAS                GO RE-SORT THE DADSMTBL
EXIT6A   EQU   *                                                 A46776
         LA    RTTRPTR,ALLOCD1          POINT TO UPDATE MODULE   A46776
EXIT6B   EQU   *                                                 A46776
*
* BRANCH TO A SUBSEQUENT SPACE ALLOCATION MODULE.
*
         IECRES LOAD,EXTPR=(RWKA),MODID=(RTTRPTR),BRANCH=DIRECT  Y02080
*
* THIS ROUTINE BUILDS AND WRITES F3 DSCB
*
BLDF3    MVC   DS1DSNAM(4),THREES INSERT FORMAT THREE KEY.
         MVI   DS1FMTID,X'F3'
         LA    RTABL,12(RTABL)
         SR    RCNT,R1            COMPUTE NUMBER OF EXTENTS REMAINING.
         LA    RXPTR,DS1DSNAM           SET PTR TO EXTENT FIELD OF F3
         LA    RXNUM,3            GET EXTENT SEQ NUMBER.
         BAL   DRBAK,BIGLOOP            CREATE F3 EXTENTS
         BAL   DRBAK,DOSMC              GO SET MUST COMPLETE
WRTF3    BAL   DRBAK,BCHNLGO            WRITE F3 DSCB
         MVC   DS1PTRDS(5),IDAREA       MOVE CHAIN ADDRESS TO F1
         XC    DS1DSNAM+45(90),DS1DSNAM+45    ZERO DSCB.
         LA    RCNT,3             INSERT NUMBER OF EXT IN F1
         LH    RTABL,DS4DSREC           GET NUMBER OF AVAIL HOLES
         BCTR  RTABL,0                  DECREMENT COUNT BY ONE
         STH   RTABL,DS4DSREC           RESET NUMBER OF AVAIL HOLES
         B     RESET1
*
* THIS SECTION LINKS WITH IOS FOR ALL I/O OPERATIONS
*
BCHNLGO  EQU   *                                                  13559
         MVC   SEEK+3(4),VTOCADR       INSERT SEEK ADDRESS        13559
         LA    R0,CCW1                 START CHANNEL PROGRAM ...  13559
         ST    R0,IOB+16                  AT CCW1.                13559
         MVI   ECB,X'00'               CLEAR STATUS BYTE          13559
         EXCP  IOB                     SEARCH FOR F0              13559
         WAIT  ECB=ECB            WAIT FOR COMPLETION.
         TM    ECB,X'20'               TEST FOR PERMANENT I/O ERROR.
         BZ    IOERROR                 BRANCH IF ERROR            13559
         MVC   CCW7+4(4),CCW2          SAVE CCW2                  13559
         LA    R0,CCW6                                            13559
         ST    R0,CCW2                 PREPARE TO TIC TO CCW6     13559
         MVI   CCW2,X'08'              INSERT TIC OP CODE         13559
         MVI   CCW6,X'B1'              MULTI-TRACK SEARCH         13559
         MVI   ECB,X'00'               CLEAR STATUS BYTE          13559
         EXCP  IOB                     WRITE DSCB                 13559
         WAIT  ECB=ECB                                            13559
         MVC   CCW2(4),CCW7+4          RESTORE CCW2               13559
         MVI   CCW6,X'31'              SINGLE TRACK SEARCH        13559
         TM    ECB,X'20'               TEST FOR PERM I/O ERROR    13559
         BCR   5,DRBAK                 RETURN IF NO ERROR         13559
*
* ERROR - PERMANENT I/O ERROR
*
IOERROR  EQU   *                                                  13559
         LA    RERRPASS,X'0C'           SET ERROR CODE 'PERM I/O ERROR
         B     ERREXIT                  GO XCTL                  A46776
*
* LINK TO THE STATUS ROUTINE TO PERFORM A STEP MUST COMPLETE
*
DOSMC    EQU   *                        SET STEP MUST COMPLETE   YM3995
         STM   RJFCB,RBAK,REGSAVEA      SAVE REGISTERS 11-14     YM3995
         LR    R3,RWKA                  SAVE WORK AREA ADDRESS   YM3995
GETLOCK  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  YM3995X
               RELATED=(LOCAL,IGG0325E(RLSELOCK))  OBTAIN LOCK   YM3995
         LM    RJFCB,RBAK,REGSAVEA-ALLOCWKA(R3)  RESTORE REGS    YM3995
*
         L     RCVT,CVTPTR              LOAD CVT ADDRESS         YM3995
         L     RCVT,CVTABEND            LOAD SECONDARY CVT PTR   YM3995
         USING SCVTSECT,RCVT            2NDRY CVT ADDRESSABILITY YM3995
         L     RCVT,SCVTSTAT            LOAD STATUS EP ADDRESS   YM3995
         LA    R0,STEPMC                INDICATE STEP MC         YM3995
         XR    R1,R1                    INDICATE STATUS SET      YM3995
*
         BALR  RBAK,RCVT                LINK TO STATUS ROUTINE   YM3995
*
RLSELOCK EQU   *                        RELEASE THE LOCK         YM3395
         STM   RJFCB,RBAK,REGSAVEA      SAVE REGISTERS 11-14     YM3995
         LR    R3,RWKA                  SAVE WORK AREA ADDRESS   YM3995
         SETLOCK RELEASE,TYPE=LOCAL,                             YM3995X
               RELATED=(LOCAL,IGG0325E(GETLOCK))  RELEASE LOCK   YM3995
         LM    RJFCB,RBAK,REGSAVEA-ALLOCWKA(R3)  RESTORE REGS    YM3995
*
         OI    DSMADTB2,DSMSMCE         SET ENQ'ED SMC SWITCH    Y02144
         OI    TYPEFLG,SMCDONE          TURN ON SMC SWITCH
         BR    DRBAK
*
* * * * * * * * * * * * *
*
***   CONSTANTS
*
* * * * * * * * * * * * *
*
FIVE     DC    H'5'
THREES   DC    X'03030303'
SYSCODE  DC    CL13'IBMOSVS2'           SYSTEM CODE             ZA00704
MRACDEF  RACDEF DSTYPE=N,               RACDEF MASTER          @Z40RSGDX
               TYPE=DEFINE,             PARAMETER LIST         @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACDEF  EQU   *-MRACDEF                LENGTH RACDEF          @Z40RSGD
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(ALLOCD1,5G,ALLOCD2,5H),SVC=032,BRT=YES,    Y02080X
               LENGTH=                                           Y02080
*                                       PARAMETER LIST         @Z40RSGD
         SPACE 2                                                 Y02080
         IECDSECS CVT,PSA,SCVT,TCB,JSCB,EXPAND=YES               YM3995
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(5),ADT=YES  ALLOCATE WORKAREA Y02144
ZEROS    EQU   CCW4+4
SWITCH   EQU   ASWITCH                  ALLOCATE SWITCH EQUATE   Y02080
ENTRYNUM EQU   AENTRYNM                 NUMBER OF ENTRIES EQUATE Y02080
ENTRIES  EQU   AENTRIES                 EQUATE FOR AENTRIES      Y02080
REGSAVEA EQU   IECREGSV+12              REGISTER SAVE AREA       Y02080
RACDEF   EQU   REGSAVEA                 RACDEF PARAMETER LIST  @Z40RSGD
         EJECT                                                   Y02080
JFCBFLD  DSECT
         IEFJFCBN
         EJECT                                                   Y02080
*
* * * * * * * * * * * * *
*
***   DSECT FOR THE PARTIAL DSCB PASSED TO ALLOCATE BY IEHMOVE   A46776
*
* * * * * * * * * * * * *
*
         ORG   INFMJFCB
PD1DSNAM DS    CL44                DATA SET NAME
PD1FMTID DS    CL1                 FORMAT IDENTIFIER
PD1DSSN  DS    CL6                 DATA SET SERIAL NUMBER
PD1VOLSQ DS    XL2                 VOLUME SEQUENCE NUMBER
PD1CREDT DS    XL3                 CREATION DATE
PD1EXPDT DS    XL3                 EXPIRATION DATE
PD1NOEPV DS    XL1                 NUMBER OF EXTENTS ON VOLUME
PD1NOBDB DS    XL1                 NUMBER OF BYTES USED IN LAST
*                                     DIRECTORY BLOCK
         DS    XL1                 RESERVED
PD1SYSCD DS    CL13                SYSTEM CODE
         DS    XL7                 RESERVED
PD1DSORG DS    XL2                 DATA SET ORGANIZATION
PD1RECFM DS    XL1                 RECORD FORMAT
PD1OPTCD DS    XL1                 OPTION CODE
PD1BLKL  DS    XL2                 BLOCK LENGTH
PD1LRECL DS    XL2                 RECORD LENGTH
PD1KEYL  DS    XL1                 KEY LENGTH
PD1RKP   DS    XL2                 RELATIVE KEY POSITION
PD1DSIND DS    XL1                 DATA SET INDICATORS
PD1SCALO DS    XL4                 SECONDARY ALLOCATION
PD1LSTAR DS    XL3                 LAST USED TRACK AND BLOCK ON TRACK
PD1TRBAL DS    XL2                 BYTES REMAINING ON LAST TRACK USED
         DS    XL2                 RESERVED
PD1EXT1  DS    XL1                 EXTENT TYPE INDICATOR
         DS    XL2                 UNUSED
PDPRIQTY DS    F                   PRIMARY SPACE REQUEST IN TRACKS
PDDIRQTY DS    F                   NUMBER OF DIRECTORY BLOCKS
         END   IGG0325E                                          S21042
