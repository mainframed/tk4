 TITLE 'IGG0325B - DADSM - ALLOCATE REQUEST CALCULATION'
IGG0325B CSECT
*
*MODULE NAME = IGG0325B
*
*DESCRIPTIVE NAME = DADSM - ALLOCATE REQUEST CALCULATION
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 16 DELETIONS
*1028                                                             13559
*1028035000                                                       14112
*          RELEASE 17 DELETIONS
*1684000400,117200,120200.                                         UL17
*1684053800,058000                                                16866
*          RELEASE 18 DELETIONS
*2412                                                             OC058
*          RELEASE 19 DELETIONS
*1025035430                                                      A27563
*          RELEASE 20 DELETIONS
*3519                                                            A33097
*3519029000,072000-072600,077800-078800,097200-098000,100400,    S20201
*3519115600                                                      S20201
*          RELEASE 21 DELETIONS
*1192022000-022200,022800-023000,052200,073600,127400            A37199
*1192000210,001600,002000-004000,004600-004800,009600,011400-    S21016
*1192012200,020400,022800,028900,030000-030600,032660-033200,    S21016
*1192044520,066800-067000,116200-116400,117200,120200,144000     S21016
*0000065800,117200-120200                                       SA53163
*0000000280,001000,006400,033600-033800,035500,040200,040600-    A46776
*0000041200,041600,042000,059600,061200-062200,074600,118200,    A46776
*0000123200-123600                                               A46776
*          RELEASE 21.7 DELETIONS/CHANGES
*0000000288,087400                                              SA59784
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,000290-000300,001200,001800,004700,006200,    Y02080
*0000007000,007400-007800,008400,009200,009600-010600,011400-    Y02080
*0000011500,012600,020800,022600,022800-022900,028200,031800,    Y02080
*0000034600,042200,043600,044460,045200,049400,049610-049690,    Y02080
*0000050200-051400,052200,053000-061000,064000,067600-067800,    Y02080
*0000068200-068400,073200,073600-075200,092400-092600,100600,    Y02080
*0000105000,113300,114200,116800,117700,121400,123800-143800     Y02080
*0000                                                           SA65999
*          VS2 RELEASE 03.0 DELETIONS/CHANGES
*0000102800,102900                                              ZA00010
*          VS2 RELEASE 03.7 CHANGES
*0000110800,111000                                             @ZA10233
*C102800,D102820-102900                                        @ZA16895
*
*STATUS CHANGE LEVEL 007
*FUNCTION/OPERATION: THIS MODULE DETERMINES THE TYPE OF REQUEST MADE  *
*   AND CALCULATES THE SPACE REQUIREMENTS IN TRACKS FOR ALL REQUESTS. *
*   IT ALSO CALCULATES THE 'TTRLL' FIELD FOR ANY BPAM DATA SETS. IT   *
*   DETERMINES TO WHICH ALLOCATE MODULE TO PASS CONTROL.  CONTROL     *
*   MAY BE PASSED TO A SUBSEQUENT MODULE OF DADSM ALLOCATE OR TO      *
*   SUBALLOCATE. A NEW CHANNEL PROGRAM IS RELOCATED TO THE WORK AREA  *
*   PRIOR TO A BRANCH TO A SUBSEQUENT DADSM ALLOCATE MODULE.          *
*                                                                     *
*ENTRY POINTS:                                                        *
*   IGG0325B - ENTRY IS MADE FROM IGG0325A VIA A BRANCH.              *
*                                                                     *
*INPUT: UPON ENTRY TO THIS MODULE THE WORK AREA WILL CONTAIN THE      *
*   DATA PORTION OF THE FORMAT 4 DSCB, THE KEY AND DATA OF THE FIRST  *
*   FORMAT 5 DSCB, AND THE ABSOLUTE ADDRESS OF THE FORMAT 4 AND       *
*   FORMAT 5 DSCB'S.                                                  *
*   THE WORK AREA WILL ALSO CONTAIN A DEB, AN IOB, AND AN ECB.        *
*   THE FIRST FORMAT 5 DSCB IN CORE SWITCH WILL BE SET.               *
*   REGISTER 11 WILL POINT TO THE JFCB OR PARTIAL DSCB.               *
*   REGISTER 13 WILL POINT TO THE WORK AREA.                          *
*                                                                     *
*OUTPUT: UPON TRANSFER OF CONTROL THE WORK AREA AND REGISTERS WILL BE *
*   AS AT INPUT WITH THE FOLLOWING ADDITIONS.  REGISTER 10 WILL       *
*   CONTAIN THE SPACE REQUESTED IN TRACKS.  FOR A DIRECTORY           *
*   REQUEST, FIELD 'TTRLL' WILL CONTAIN THE NUMBER OF TRACKS          *
*   AND RECORDS REQUIRED FOR THE DIRECTORY SPACE AND THE NUMBER       *
*   OF UNUSED BYTES REMAINING ON THE LAST DIRECTORY TRACK.  UPON      *
*   A BRANCH TO A SUBSEQUENT ALLOCATE MODULE, THE WORK AREA WILL      *
*   ALSO CONTAIN A NEW CHANNEL PROGRAM.                               *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        IECRES - BRANCH TO ANOTHER MODULE                            *
*                                                                     *
*EXITS:                                                               *
*   -NORMAL: BRANCH TO IGG0325C FOR ABSTR REQUESTS                    *
*   BRANCH TO IGG0325D FOR NON-ZERO QUANTITY REQUESTS.                *
*   BRANCH TO IGG0325E FOR ZERO QUANTITY REQUESTS.                    *
*   BRANCH TO IGG0325K FOR USER LABEL TRACK REQUESTS.                 *
*   -ERRORS: BRANCH TO IGG0325H WITH CODE IN ERROR CODE PASS REGISTER.*
*                                                                     *
*   ERROR CODES THAT CAN BE ISSUED BY 'ALLOCATE REQUEST CALCULATION'. *
*                                                                     *
*   08 - NO AVAILABLE DSCB'S IN THE VTOC                              *
*                                                                     *
*   38 - NOT ENOUGH SPACE ON VOLUME FOR DIRECTORY                     *
*                                                                     *
*   80 - DIRECTORY SPACE REQUESTED IS LARGER THAN PRIMARY SPACE       *
*                                                                     *
*TABLES/WORK AREAS: DADSM WORK AREA DESCRIBED BY MACRO 'IECALLWA'     *
*                                                                     *
*              ***************************************                *
*              *             DADSM TABLE             *                *
*              ***************************************                *
*                                                                     *
*              ***************************************                *
*              *        *         *                  *                *
*              *  TYPE  *  NO OF  *     USED HOLE    *                *
*              *  FLAG  * ENTRIES *      COUNTER     *                *
*              *        *         *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*                                                                     *
*              TYPEFLG  =  02 - BPAM DIRECTORIES REQUESTED.           *
*                                                                     *
*                       =  40 - USER LABELS REQUESTED                 *
*                                                                     *
*                       =  80 - SET MUST COMPLETE IS ACTIVE           *
*                                                                     *
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.  *
*                                                                     *
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.      *
*                                                                     *
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT*
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*NOTES:                                                               *
*   OTHER MACROS USED                                                 *
*   IECALLWA - ALLOCATE WORK AREA EXPANSION                           *
*   IECSDSL1 - BUILD DSCB'S                                           *
*   IEFJFCBN - BUILD JFCB                                             *
*   CVT - BUILD CVT                                                   *
*                                                                     *
*                                                                     *
*STORAGE: PROGRAM CODE - LESS THAN 1024 BYTES                         *
*   WORK AREA - AS DEFINED IN THE IECALLWA MACRO                      *
*   RPS WORK AREA - AS DEFINED IN THE IECRPS MACRO                    *
*                                                                     *
*
*REGISTER NAMES-
*
R0       EQU   0                        CHANNEL PROGRAM RELOCATION
EXTRPAS1 EQU   0                        CONVERTED REGISTER
R1       EQU   1                        CHANNEL PROGRAM RELOCATION
R2       EQU   2                        CHANNEL PROGRAM RELOCATION
FREEREGE EQU   2                        EVEN WORK REGISTER
FREEREGO EQU   3                        ODD WORK REGISTER
R4       EQU   4                        CHANNEL PROGRAM RELOCATION
FREEREGA EQU   4                        WORK REGISTER
FREEREGB EQU   5                        WORK REGISTER
R6       EQU   6                        CHANNEL PROGRAM RELOCATION
FREEREGC EQU   6                        WORK REGISTER
RTTRPTR  EQU   7                        PTR TO XCTL BY TTR TABLE ENTRY
R8       EQU   8                        CHANNEL PROGRAM RELOCATION
REGEIGHT EQU   8                        WORK REGISTER
RERRPASS EQU   8                        ERROR CODE PASS REGISTER
R9       EQU   9                        CHANNEL PROGRAM RELOCATION
REGNINE  EQU   9                        WORK REGISTER
REGTEN   EQU   10                       REQUEST PASS REGISTER
RJFCBPTR EQU   11                       JFCB POINTER
BASEREG  EQU   12                       BASE REGISTER
RWKA     EQU   13                       CHANNEL PROGRAM WORKAREA PTR
RETNREG  EQU   14                       RETURN REGISTER
REGFTEN  EQU   15                       WORK REGISTER
*
* OTHER EQUATES
*
DSORGPO  EQU   X'02'                    DSORG = PO               A46776
TBOVHD   EQU   X'08'                    TWO BYTE OVERHEAD FLAG   S20201
TOOLARGE EQU   X'38'                    DIRECTORY SPACE REQUEST  S21016
*                                       IS TOO LARGE FOR VOLUME  S21016
GRTHPRIM EQU   X'80'                    DIRECTORY SPACE REQUEST  S21016
*                                       IS GREATER THAN PRIMARY  S21016
C0       EQU   0                        CONSTANT OF 0            S20201
C1       EQU   1                        CONSTANT OF 1            S20201
R5       EQU   5                        EQU FOR STM              S20201
THRE     EQU   3                        EQUATE FOR THREE         S20201
C8       EQU   8                        CONSTANT OF 8            S20201
K1       EQU   1                        CONSTANT OF 1           SA65999
K2       EQU   2                        EQUATE FOR 2            SA53163
K3       EQU   3                        CONSTANT OF 3            Y02080
K6       EQU   6                        CONSTANT OF 6            Y02080
K12      EQU   12                       CONSTANT OF 12           Y02080
*
*
* * * * * * * * * * * * *
*
*
*REGISTER USAGE-
*
         BALR  BASEREG,0
         USING *,BASEREG                                           OC58
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080
         USING JFCBKEN,RJFCBPTR
*
* INITIALIZE THE TTRLL FIELD TO RELATIVE TRACK = 0, ACTUAL RECORD = 0,
* AND BYTES REMAINING = DEVICE TRACK LENGTH.
*
CYLTRKRC EQU   *                                                 S21016
         MVC   TTRLL+3(2),DS4DEVTK      SET LL TO TRACK LENGTH
         LTR   RJFCBPTR,RJFCBPTR        TEST FOR PARTIAL DSCB    A46776
         BM    PARTIAL                  BRANCH IF YES            A46776
         CLC   JFCBPQTY(3),ZEROS        TEST FOR ZERO QTY REQUEST
         BNE   NOTZQTY                  BRANCH IF NOT ZERO QTY
*
* ZERO QUANTITY - SET BRANCH TO BUILD FORMAT 1 DSCB.
*
         TM    JFCBCTRI,X'C0'          CHECK IF ABSTR REQUESTED    8158
         BZ    CLEANUP                 BRANCH IF ABSTR REQUESTED   8158
DSCBTEST EQU   *                                                 A46776
         OC    DS4DSREC(2),DS4DSREC     ANY HOLES                A27563
         BNE   CONT                     YES, BRANCH              A27563
         LA    RERRPASS,X'08'           SET ERROR CODE           A27563
         B     ERREXIT                  GO XCTL                  A27563
CONT     TM    TYPEFLG,USRLBL           USER LABELS REQ.         A27563
         BO    USERZERO                 BRANCH IF YES              UL17
         LA    RTTRPTR,ALLOCA3          LOAD PTR TO F1/F3 TTR ENTRY
         B     XCTLHERE
*
* A TEST OF THE FIELD JFCBDQTY IS MADE TO DETERMINE IF THE DATA SET IS
* A BPAM DATA SET
*
NOTZQTY  L     FREEREGO,JFCBDQTY        GET DIRECTORY QUANTITY
         SRL   FREEREGO,8               POSITION
         LTR   FREEREGO,FREEREGO        ARE DIRECTORIES REQUESTED
         BP    DIRCAL                   BRANCH IF YES
*
* DATA SET IS NOT BPAM - TEST FOR PRIMARY QUANTITY IN RECORDS.
*
         L     EXTRPAS1,JFCBPQTY        GET REQ PRIMARY QUANTITY
         SRL   EXTRPAS1,8               POSITION
         TM    JFCBCTRI,X'C0'           IS PRIMARY QTY IN CYLINDERS
         BC    1,MULT                   BRANCH IF YES
         TM    JFCBCTRI,X'40'           IS PRIMARY QTY IN AVG RCD LGTH
         BC    1,NOCAL                  BRANCH IF YES
         B     CLEANUP                  PRIMARY QUANTITY IS IN TRACKS
MULT     MH    EXTRPAS1,DS4DEVSZ+2      CONVERT CYLS TO TRKS
         B     CLEANUP
*
* UTILITY SPACE REQUEST - TEST FOR DSORG = PO IN THE PARTIAL F1 DSCB
*
PARTIAL  EQU   *                                                 A46776
         CLC   PDPRIQTY,ZEROS           TEST IF ZERO QTY REQUEST A46776
         BE    DSCBTEST                 BRANCH IF ZERO QUANTITY  A46776
         TM    PD1DSORG,DSORGPO         TEST FOR DIRECTORIES     A46776
         BC    1,CALCDIR                BRANCH IF DIRECTORIES REQUESTED
GOOUT    EQU   *                                                 A46776
         L     REGTEN,PDPRIQTY          LOAD PRIMARY QUANTITY    A46776
         B     REGULAR
CALCDIR  EQU   *                                                 A46776
         L     FREEREGO,PDDIRQTY        LOAD DIRECTORY QUANTITY  A46776
         OI    ASWITCH,PRCNTL           SET PROCESS CONTROL SW   Y02080
*
* DATA SET IS BPAM
*
* THIS SECTION CALCULATES THE TOTAL NUMBER OF TRACKS AND RECORDS
* NEEDED TO FILL THE DIRECTORY QUANTITY REQUESTED.
*
DIRCAL   EQU   *                        BRANCH LABEL             Y02080
         OI    TYPEFLG,DIRREQ           SET DIRECTORIES REQ FLAG Y02080
         SR    FREEREGE,FREEREGE        CLEAR HIGH DIVIDEND REGISTER
         SR    FREEREGA,FREEREGA
         IC    FREEREGA,DS4DEVDB        GET NBR OF DIR BLKS PER TRK
         DR    FREEREGE,FREEREGA        CALCULATE NBR OF TRKS REQUIRED
         CH    FREEREGO,MAXTRACK        TEST IF TOO MANY TRACKS  Y02080
         BH    TOOMANY                  BRANCH IF TOO MANY TRKS  S21016
         STH   FREEREGO,TTRLL           STORE NBR OF TRACKS
         LA    FREEREGE,1(FREEREGE)     ACCOUNT FOR EOD MARK
         STC   FREEREGE,TTRLL+2         STORE NBR OF ADDITIONAL RCDS
         TM    ASWITCH,PRCNTL           IS PROCESS CONTROL SW ON Y02080
         BO    MOVEBCK                  BRANCH IF YES
*
* THIS SECTION CONVERTS THE PRIMARY QUANTITY TO TRACKS
*
DIRCAL1  L     EXTRPAS1,JFCBPQTY        GET PRIMARY QUANTITY
         SRL   EXTRPAS1,8               POSITION
         TM    JFCBCTRI,X'C0'           IS THIS A CYLINDER REQUEST
         BC    1,MULTA                  BRANCH IF YES
         TM    JFCBCTRI,X'40'           IS THIS AN AVG RCD REQUEST
         BC    1,INRECRDS               BRANCH IF YES
         B     MOVEBCK                  PRIMARY QUANTIRY IS IN TRACKS
MULTA    MH    EXTRPAS1,DS4DEVSZ+2      CONVERT CYL REQ TO TRACKS
*
* THIS SECTION CALCULATES IN BYTES THE LENGTH OF A DIRECTORY BLOCK.
* IT CALCULATES THE NUMBER OF BYTES REMAINING ON THE LAST DIRECTORY
* TRACK AND STORES THIS VALUE IN 'LL' OF THE TTRLL FIELD.
*
MOVEBCK  LA    FREEREGA,8               SET UP KL AND DL FOR
         LA    FREEREGB,256             DIRECTORY RECORD
         BAL   REGTEN,TTRCAL            GO CALCULATE DIR RECD LENGTH
         TM    ASWITCH,PRCNTL           IS PROCESS CONTROL SW ON Y02080
         BO    GOOUT                    BRANCH IF YES
*
CLEANUP  LR    REGTEN,EXTRPAS1          LOAD COMMUNICATION REGISTER
*                                       WITH NUMBER OF TRACKS REQUIRED.
         TM    JFCBCTRI,X'C0'           IS THIS A CYL OF TRK REQUEST
         BC    5,REGULAR                BRANCH IF CYL OR TRK REQUEST
*
* ABSOLUTE TRACK REQUEST - SET UP BRANCH TO IGG0325C.
*
         LA    RTTRPTR,ALLOCA1          LOAD PTR TO ABS/TRK TTR ENTRY
         B     XCTLHERE
*
* TRANSFER CONTROL TO THE LAST MODULE OF SPACE ALLOCATION TO RELEASE
* THE WORK AREA,DEQ THE VTOC,PASS THE ERROR CODE,AND EXIT TO CALLER.
*
ERREXIT  LA    RTTRPTR,ALLOCD2          LOAD PTR TO LAST ALLOC ENTRY
         LR    REGFTEN,RERRPASS         HOLD ERROR CODE
         B     XCTLH
*
* THIS SECTION SETS UP A BRANCH TO MODULE IGG0325D.
*
REGULAR  LA    RTTRPTR,ALLOCA2          LOAD PTR TO CYL/TRK TTR ENTRY
         TM    TYPEFLG,USRLBL           IS THIS USER LABEL         UL17
         BZ    XCTLHERE                 BRANCH IF NO               UL17
         LA    RTTRPTR,ALLOCA4          USER LABEL LOAD            UL17
*
* THIS SECTION DETERMINES IF THE PRIMARY QUANTITY REQUESTED IS
* SUFFICIENT TO FILL THE DIRECTORY QUANTITY REQUESTED.
*
XCTLHERE SR    REGFTEN,REGFTEN          CLEAR ERROR HOLD REGISTER
         CH    REGTEN,TTRLL             IS PRI QTY EQ/GRTR THAN DIR QTY
         BH    XCTLH                    BRANCH IF YES           SA53163
         BL    DIRERR                   IF NOT, REQUEST IS IN   SA53163
*                                       ERROR                   SA53163
         CLI   TTRLL+2,C0               ARE THERE MORE DIR BLKS SA53163
*                                       THAN WILL FIT ON FULL   SA53163
*                                       TRACK(S) INDICATED BY   SA53163
*                                       TTRLL                   SA53163
         BE    XCTLH                    NO, CONTINUE NORMALLY   SA53163
*
* ERROR - PRIMARY QUANTITY REQUESTED IS LESS THAN THE DIRECTORY
* QUANTITY REQUESTED.
*
DIRERR   EQU   *                                                 S21016
         LA    RERRPASS,GRTHPRIM        DIRECTORY ERROR CODE     S21016
         B     ERREXIT
*
* ERROR - DIRECTORY SPACE REQUEST IS LARGER THAN THE AMOUNT
* AVAILABLE ON THE VOLUME.
*
TOOMANY  EQU   *                                                 S21016
         LA    RERRPASS,TOOLARGE        LOAD ERROR CODE          S21016
         B     ERREXIT                                           S21016
*
* SET UP THE WTG TABLE IN THE WORK AREA WITH THE ID AND ENTRY
* POINT ADDRESS OF THE NEXT CSECT.
*
USERZERO LA    RTTRPTR,ALLOCA4          POINTER TO USER LABEL LOAD UL17
         SR    REGFTEN,REGFTEN          CLEAR ERROR HOLD REGISTER  UL17
         SR    REGTEN,REGTEN            CLEAR QUANTITY REQUEST REG UL17
XCTLH    EQU   *                        BRANCH LABEL             Y02080
         MVC   WTGMODNM+K6(K2),0(RTTRPTR)  MOVE IN MODULE ID     Y02080
         MVC   WTGMODEP+C1(K3),K2(RTTRPTR)  MOVE IN MODULE ADDR  Y02080
*
* THIS SECTION INITIALIZES AND RELOCATED TO THE WORKAREA A NEW CHANNEL
* PROGRAM FOR SUBSEQUENT SPACE ALLOCATION MODULES.
*
         LM    R0,R9,CCWORD1            LOAD FIRST 5 CCWS
         ALR   R0,RWKA
         ALR   R2,RWKA
        ALR   R4,RWKA
         ALR   R6,RWKA
         ALR   R8,RWKA
         STM   R0,R9,CCW1               STORE FIRST 5 CCWS
         LM    R0,R9,CCWORD6            LOAD NEXT FIVE CCWS
         ALR   R0,RWKA
         ALR   R2,RWKA
         ALR   R4,RWKA
         ALR   R6,RWKA
         ALR   R8,RWKA
         STM   R0,R5,CCW6               CCWS 6,7 AND 8           S20201
         STM   R0,R1,CCW9               CCW 9                    S20201
         STM   R6,R9,CCW10              CCWS 10 AND 11           S20201
         LR    RERRPASS,REGFTEN         LOAD ERROR PASS REGISTER
*
* THIS SECTION BRANCHES TO A SUBSEQUENT ALLOCATE MODULE.
*
EXITXCTL EQU   *                                                 A37199
         IECRES LOAD,EXTPR=(RWKA),BRANCH=DIRECT                  Y02080
*
* THIS AREA CHECKS FOR SPACE ON THE TRACK PARTIALLY FILLED BY THE
* DIRECTORY QUANTITY FOR ONE OR MORE DATA RECORDS.
* A BRANCH IS MADE TO TTRCAL TO CALCULATE THE NEW TTRLL
*
INRECRDS LA    FREEREGA,8               SET UP KL AND DL FOR
         LA    FREEREGB,256             DIRECTORY RECORD
         BAL   REGTEN,TTRCAL            GO CALCULATE AVG RCD LENGTH
*
* A BRANCH IS MADE TO RECCAL TO CALCULATE THE LENGTH IN BYTES
* OF AN AVERAGE RECORD NOT LAST AND LAST.
*
*
         LA    RETNREG,RET1ADDR         SET UP RETURN REG        S20201
         B     RECCSET                  GO SET UP FOR CALC       S20201
*
RET1ADDR EQU   *                                                 S20201
*
         SR    FREEREGE,FREEREGE        CLEAR HIGH DIVIDEND REGISTER
         SR    FREEREGO,FREEREGO
         IC    FREEREGO,TTRLL+3         PICK UP NBR OF BYTES REMAINING
         SLL   FREEREGO,8               ON LAST
         IC    FREEREGO,TTRLL+4         DIRECTORY TRACK
         DR    FREEREGE,FREEREGA        CALCULATE THE NBR OF AVG RCDS
*                                       THAT WILL FIT ON LAST DIR TRK
         LR    RETNREG,FREEREGO         SAVE VALUE
         LR    FREEREGO,FREEREGE        LOAD BYTES REMAINING
         SR    FREEREGE,FREEREGE        CLEAR HIGH DIVIDEND REGISTER
         DR    FREEREGE,FREEREGB        WILL AVG RCD LAST ON TRK
         LTR   FREEREGO,FREEREGO        FIT IN BYTES REMAINING
         BZ    LOADDIRT                 BRANCH IF NO
         LA    RETNREG,1(RETNREG)       YES-INCREMENT NBR OF RCDS
LOADDIRT LA    EXTRPAS1,1               INITIALIZE NBR OF TRKS TO ONE
         AH    EXTRPAS1,TTRLL           ADD NBR OF TRKS REQUIRED
SUBTRACT L     FREEREGC,JFCBPQTY        GET PRIMARY QUANTITY
         SRL   FREEREGC,8               POSITION
         CR    RETNREG,FREEREGC         CHECK TO SEE IF ROOM FOR PRI
*                                       QTY ON DIR TRACK
         BNL   CLEANUP                  BRANCH IF ROOM FOR ALL PRI QTY
         SR    FREEREGC,RETNREG         CALCULATE NBR OF AVG RCDS
*                                       THAT WILL NOT FIT ON DIR TRK
*
* TRKCAL ----  THIS ROUTINE CALCULATES HOW MANY RECORDS OF A GIVEN
* SIZE WILL FIT ON A TRACK.
* THE LENGTH IN BYTES OF AN AVERAGE RECORD AND OF A LAST RECORD ON A
* TRACK ARE TO BE IN REGISTERS 4(FREEREGA) AND 5(FREEREGB)
* RESPECTIVELY
* THE NUMBER OF BYTES PER TRACK FOR THE DEVICE IS OBTAINED FROM THE
* DEVICE ENTRY OF THE FORMAT4 DSCB.
* RECORDS PER TRACK = 1 + (TRACK LENGTH-Y) / X
*
* THE LENGTH OF A LAST RECORD ON A TRACK IS SUBTRACTED FROM THE TRACK
* LENGTH
*
         LH    FREEREGO,DS4DEVTK        GET NBR OF BYTES PER TRACK
         SR    FREEREGO,FREEREGB        SUBTRACT Y FROM TRACK LENGTH
         BNL   SHORTREC                BRANCH IF REMAINDER IS NOT MINUS
*
* THIS SECTION SETS UP REGISTERS FOR THE AVG/RCD CALCULATION ROUTINE
* FOR AVG/RCD REQUESTS SPECIFYING AN AVG/RCD GREATER THAN A LAST RCD.
*
         SR    R1,R1                    CLEAR REGISTER          SA59784
         IC    R1,JFCKEYLE              GET KEY LENGTH          SA59784
         MVC   FULLWORD+C1(L'JFCBDRLH),JFCBDRLH  ALIGN LENGTH   SA59784
         L     FREEREGO,FULLWORD        LOAD DATA LENGTH        SA59784
         LA    FREEREGO,0(FREEREGO)     CLEAR HIGH BYTE         SA59784
         AR    FREEREGO,R1              ADD KEY AND DATA LENGTH SA59784
         IC    R1,DS4DEVI               GET OVERHEAD FOR KEYED  SA59784
*                                       NOT LAST RECORD         SA59784
         TM    DS4DEVFG,TBOVHD          TWO BYTE OVERHEAD       SA59784
         BZ    NOTTB00                  BRANCH IF NOT           SA59784
         LH    R1,DS4DEVI               GET TWO BYTE OVERHEAD   SA59784
NOTTB00  EQU   *                                                SA59784
         LH    REGEIGHT,DS4DEVTK        GET TRACK CAPACITY      SA59784
         SR    REGEIGHT,R1              SUBTRACT OVERHEAD       SA59784
         SR    FREEREGE,FREEREGE        CLEAR FOR DIVIDE        SA59784
         DR    FREEREGE,REGEIGHT        CALCULATE NUMBER OF     SA59784
*                                       TRACKS/RECORD           SA59784
         LTR   FREEREGE,FREEREGE        TEST FOR REMAINDER      SA59784
         BZ    DONTINCR                 BRANCH IF NONE          SA59784
         LA    FREEREGO,0(FREEREGO)     MAXIMUM NBR OF TRKS/RCD SA59784
DONTINCR EQU   *                                                SA59784
         MR    FREEREGE,R1              CALCULATE TOTAL OVER-   SA59784
*                                       HEAD FOR EACH RECORD    SA59784
         AR    FREEREGA,FREEREGO        ADD TO BLOCKSIZE        SA59784
         LR    FREEREGB,FREEREGA       LOAD NOT LAST RCD LENGTH
         MR    FREEREGA,FREEREGC       NBR OF RCD REQ TIMES NOT LAST
         LR    FREEREGO,FREEREGB       SET UP FOR AVG/RCD ROUTINE
         LH    FREEREGA,DS4DEVTK       GET NBR OF BYTES PER TRACK
         B     LONGREC                 REC LNGTH MORE THAN TRK/LNGTH
*
* THE RESULT IS DIVIDED BY THE LENGTH OF AN AVERAGE RECORD
*
SHORTREC SR    FREEREGE,FREEREGE       CLEAR HIGH DIVIDEND REGISTER
         DR    FREEREGE,FREEREGA        CALC NBR OF AVG RCDS PER TRK
         LR    FREEREGA,FREEREGO
         LA    FREEREGA,1(FREEREGA)     INCREMENT RESULT BY ONE
         LR    FREEREGO,FREEREGC        LOAD NBR OF RCDS REQUESTED
LONGREC  SR    FREEREGE,FREEREGE       CLEAR HIGH DIVIDEND REGISTER
         DR    FREEREGE,FREEREGA        DETERMINE NBR OF TRACKS NEEDED
         LTR   FREEREGE,FREEREGE        IS THERE A REMAINDER
         BZ    DONTINC                  BRANCH IF NO
         LA    FREEREGO,1(FREEREGO)     ADD 1 IF REMAINDER EXISTS
DONTINC  AR    EXTRPAS1,FREEREGO        ADD PRI QTY TO DIR QTY
*
* A TEST IS MADE TO SEE IF THE ROUND TO CYLINDER OPTION IS SPECIFIED
*
         TM    JFCBCTRI,X'01'           IS ROUND OPTION REQUESTED
         BC    1,ROUNDUP                BRANCH IF YES
         B     CLEANUP
*
* WHEN THE ROUND TO FULL CYLINDERS OPTION IS GIVEN, THE NUMBER OF
* TRACKS IS DIVIDED BY THE NUMBER OF TRACKS PER CYLINDER TO SEE IF
* THERE ARE ANY EXCESS TRACKS, AND IF SO THE NUMBER OF CYLINDERS IS
* INCREMENTED BY ONE AND RECONVERT TO TRACKS.
*
ROUNDUP  LR    FREEREGB,EXTRPAS1        LOAD NBR OF TRACKS REQUESTED
         SR    FREEREGA,FREEREGA        CLEAR HIGH DIVIDEND REGISTER
         LH    FREEREGE,DS4DEVSZ+2      GET THE NBR OF TRKS/CYL
         DR    FREEREGA,FREEREGE        CONVERT TRK QTY TO CYLS/TRKS
         LTR   FREEREGA,FREEREGA        IF THERE IS A TRACK REMAINDER
         BZ    DONOTINC                 BRANCH IF NO
         LA    FREEREGB,1(FREEREGB)     INCREMENT THE NBR OF CYLS
DONOTINC MH    FREEREGB,DS4DEVSZ+2      RECONVERT CYLS TO TRKS
         LR    EXTRPAS1,FREEREGB        MOVE REQUEST TO COMM REGISTER
         B     CLEANUP
*
* THIS SECTION SETS UP TO CALCULATE THE NUMBER OF BYTES REQUIRED
* FOR AN AVERAGE RECORD NOT LAST AND LAST ON A TRACK FOR NON
* DIRECTORY REQUESTS.
*
*
NOCAL    EQU   *                                                 S20201
*
         LA    RETNREG,RET2ADDR         SETUP RETURN REG         S20201
         B     RECCSET                  GO SET UP FOR CALC       S20201
*
RET2ADDR EQU   *                                                 S20201
*
         SR    RETNREG,RETNREG          SET NBR OF AVG RCDS ON LAST
*                                       DIRECTORY TRK TO ZERO
         LR    EXTRPAS1,RETNREG         SET NBR OF DIR TRKS TO ZERO
         B     SUBTRACT
*
* RECCAL - - - THIS SUBROUTINE CALCULATES THE LENGTH OF AN AVERAGE
* RECORD AND A RECORD TO BE LAST ON A TRACK
* THE ROUTINE NEEDS THE KEYLENGTH AND DATA LENGTH OF A RECORD IN REGIS-
* TERS 4 (FREEREGA) AND 5 (FREEREGB) RESPECTIVELY
* OVERHEAD CONSTANTS AND DEVICE CONSTANTS ARE ADDRESSED SYMBOLICALLY
* SO ADDRESSIBILITY MUST HAVE BEEN ESTABLISHED.
*
RECCSET  EQU   *                                                 S20201
         SR    FREEREGA,FREEREGA        CLR REG                  S20201
         IC    FREEREGA,JFCKEYLE        PICK UP KEY LEN          S20201
         MVC   FULLWORD+C1(THRE),JFCBDRLH MOVE DATA LEN          S20201
         L     FREEREGB,FULLWORD        PUT IN REG               S20201
         LA    FREEREGB,C0(FREEREGB)    CLR HI BYTE              S20201
RECCAL   EQU   *                        BRANCH LABEL             Y02080
         STM   FREEREGE,FREEREGO,IECREGSV+K12  SAVE REGISTERS    Y02080
         SR    FREEREGO,FREEREGO        CLEAR WORK REGISTERS
         SR    REGEIGHT,REGEIGHT
         IC    FREEREGO,DS4DEVI         GET OVERHEAD FOR KEYED NOT LAST
         IC    REGEIGHT,DS4DEVL         GET OVERHEAD FOR KEYED LAST
         TM    DS4DEVFG,TBOVHD          TWO BYTE OVERHEAD        S20201
         BZ    NOTTB10                  BRANCH NO                S20201
         LH    FREEREGO,DS4DEVI         PICK UP TWO BYTES        S20201
         LR    REGEIGHT,FREEREGO        USE FOR LAST ALSO        S20201
NOTTB10  EQU   *                                                 S20201
*
         LTR   FREEREGA,FREEREGA        TEST FOR KEY LENGTH EQUAL TO 0
         BZ    CALOVHD                  BRANCH IF ZERO
ADDKLDL  AR    FREEREGB,FREEREGA        ADD DATA LENGTH TO KEY LENGTH
         LR    REGNINE,FREEREGB         SAVE VALUE
         LH    FREEREGE,DS4DEVTL        GET DEVICE TOLERANCE FACTOR
         MR    FREEREGA,FREEREGE        (KL+DL)TOL FACTOR - NOT LAST
         SRDA  FREEREGA,9               SHIFT OUT REMAINDER    @ZA16276
         AR    FREEREGB,FREEREGO        ADD IN OVERHEAD - NOT LAST
         LR    FREEREGA,FREEREGB        LOAD IN COMMUNICATION REGISTER
         B     COMPLETE
CALOVHD  SR    FREEREGE,FREEREGE        CLEAR WORK REGISTER
         IC    FREEREGE,DS4DEVK         GET UNKEYED RECORD CONSTANT
         SR    FREEREGO,FREEREGE        ADJUST KEYED - NOT LAST
         SR    REGEIGHT,FREEREGE        ADJUST KEYED - LAST
         B     ADDKLDL
COMPLETE AR    REGNINE,REGEIGHT         (KL+DL)  LAST RECORD
         LR    FREEREGB,REGNINE         LOAD IN COMMUNICATION REGISTER
         LM    FREEREGE,FREEREGO,IECREGSV+K12  RESTORE REGISTERS Y02080
         BR    RETNREG
*
* TTRCAL ---- THIS ROUTINE UPDATES THE TTRLL OF FORMAT 1 DSCB. IT
* INCREMENTS TTR AND CALCULATES THE LL = TO THE NUMBER OF BYTES LEFT ON
* THE LAST USED TRACK.
* INFORMATION IS PASSED AS FOLLOWS
*        1. NUMBER OF RECORDS USED ON LAST DIR TRACK - FREEREGE = 2
*        2. NUMBER OF FULL TRACKS - FREEREGO = 3
*        3. KEYLENGTH - FREEREGA = 4
*        4. DATA LENGTH - FREEREGB = 5
* A BRANCH IS MADE TO RECCAL TO CALCULATE THE LENGTH IN BYTES OF AN
* AVERAGE RECORD AND A LAST RECORD ON A TRACK (FOR A DIRECTORY BLOCK)
*
TTRCAL   BAL   RETNREG,RECCAL           GO CALCULATE AVG RCD LENGTH
         LR    FREEREGO,FREEREGE        LOAD NBR OF RCDS USED ON
*                                       LAST DIRECTORY TRACK
*
* THE LENGTH OF AN AVERAGE RECORD IS MULTIPLIED TIMES THE NUMBER OF
* EXCESS RECORDS ON THIS PARTIALLY FILLED TRACK. THE NUMBER OF BYTES
* USED IS THEN SUBTRACTED FROM THE TOTAL TRACK LENGTH TO DETERMINE THE
* NUMBER OF AVAILABLE BYTES LEFT
*
         BCTR  FREEREGO,0               ACCOUNT FOR EOD
         MR    FREEREGE,FREEREGA        MULT NBR OF RCDS BY AVG RCD
         LH    FREEREGA,DS4DEVTK        GET NBR OF BYTES PER TRACK
         SR    FREEREGA,FREEREGO        CALC NBR OF UNUSED BYTES
         SR    FREEREGO,FREEREGO
         IC    FREEREGO,DS4DEVI         PICK UP OVERHEAD
         TM    DS4DEVFG,TBOVHD          TWO BYTE OVERHEAD        S20201
         BZ    NOTTB40                  BRANCH NO                S20201
         LH    FREEREGO,DS4DEVI         GET TWO BYTES            S20201
*
NOTTB40  EQU   *                                                 S20201
         SR    FREEREGA,FREEREGO        ACCOUNT FOR OVERHEAD   @ZA10233
         SR    FREEREGO,FREEREGO        CLEAR WK REG           @ZA10233
         IC    FREEREGO,DS4DEVK         GET UNKEYED VALUE      @ZA10233
         AR    FREEREGA,FREEREGO        ADJUST FOR UNKEYED     @ZA10233
         BCTR  FREEREGA,0               ACCOUNT FOR EOF BYTE   @ZA10233
         STC   FREEREGA,TTRLL+4         SAVE BYTES REMAINING FOR
         SRL   FREEREGA,8               FORMAT 1 DSCB
         STC   FREEREGA,TTRLL+3
         BR    REGTEN
*
* * * * * * * * * * * * *
*
***   CONSTANTS
*
* * * * * * * * * * * * *
*
MAXTRACK DC    H'32767'                 MAX POSITIVE NBR IN HW   Y02080
*
***   CHANNEL PROGRAM FOR SUBSEQUENT SPACE ALLOCATION MODULES.
*
CCWORD1  CCW   X'16',IDAREA-FIRST,X'70',5   READ R0
CCWORD2  CCW   X'92',IDAREA-FIRST,X'60',5   READ COUNT           Y02080
CCWORD3  CCW   X'A9',CCW4+4-FIRST,X'60',4   SEARCH EQUAL KEY
CCWORD4  CCW   X'08',CCW2-FIRST,0,0         TIC TO READ COUNT
CCWORD5  CCW   X'03',0,X'20',1              END SEARCH WITH NOP   13559
*   BREAK CHANNEL PROGRAM TO PREVENT CREATION OF DUPLICATE DSCBS  13559
*   ON ERROR RETRIES.                                             13559
CCWORD6  CCW   X'31',IDAREA-FIRST,X'40',5   SEARCH ID EQUAL
CCWORD7  CCW   X'08',CCW6-FIRST,0,0         TIC TO SEARCH ID EQUAL
CCWORD8  CCW   X'0D',DSCBF1-FIRST,X'40',140 WRITE KEY AND DATA
CCWORD10 CCW   X'08',CCW9-FIRST,0,0         TIC TO SEARCH ID EQUAL
CCWORD11 CCW   X'0E',DSCBF5-FIRST,X'00',140 READ KEY AND DATA
ZEROS    EQU   CCWORD10+4               FOUR BYTES OF ZEROS      Y02080
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
TTRTABLE XCTLTABL ID=(ALLOCA1,5C,ALLOCA2,5D,ALLOCA3,5E,         SA53163X
               ALLOCD2,5H,ALLOCA4,5K),SVC=032,LENGTH=,BRT=YES    Y02080
         EJECT                                                   Y02080
*
* * * * * * * * * * * * *
*
*
JFCBKEN  DSECT
         IEFJFCBN
         EJECT                                                   Y02080
*
* * * * * * * * * * * * *
*
***   DSECT FOR THE PARTIAL DSCB PASSED TO ALLOCATE BY IEHMOVE   A46776
*
* * * * * * * * * * * * *
*
         ORG   INFMJFCB
PD1DSNAM DS    CL44                DATA SET NAME
PD1FMTID DS    CL1                 FORMAT IDENTIFIER
PD1DSSN  DS    CL6                 DATA SET SERIAL NUMBER
PD1VOLSQ DS    XL2                 VOLUME SEQUENCE NUMBER
PD1CREDT DS    XL3                 CREATION DATE
PD1EXPDT DS    XL3                 EXPIRATION DATE
PD1NOEPV DS    XL1                 NUMBER OF EXTENTS ON VOLUME
PD1NOBDB DS    XL1                 NUMBER OF BYTES USED IN LAST
*                                     DIRECTORY BLOCK
         DS    XL1                 RESERVED
PD1SYSCD DS    CL13                SYSTEM CODE
         DS    XL7                 RESERVED
PD1DSORG DS    XL2                 DATA SET ORGANIZATION
PD1RECFM DS    XL1                 RECORD FORMAT
PD1OPTCD DS    XL1                 OPTION CODE
PD1BLKL  DS    XL2                 BLOCK LENGTH
PD1LRECL DS    XL2                 RECORD LENGTH
PD1KEYL  DS    XL1                 KEY LENGTH
PD1RKP   DS    XL2                 RELATIVE KEY POSITION
PD1DSIND DS    XL1                 DATA SET INDICATORS
PD1SCALO DS    XL4                 SECONDARY ALLOCATION
PD1LSTAR DS    XL3                 LAST USED TRACK AND BLOCK ON TRACK
PD1TRBAL DS    XL2                 BYTES REMAINING ON LAST TRACK USED
         DS    XL2                 RESERVED
PD1EXT1  DS    XL1                 EXTENT TYPE INDICATOR
         DS    XL2                 UNUSED
PDPRIQTY DS    F                   PRIMARY SPACE REQUEST IN TRACKS
PDDIRQTY DS    F                   NUMBER OF DIRECTORY BLOCKS
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4                 ALLOCATE WORK AREA       Y02080
         EJECT                                                   Y02080
CVT      DSECT                          CVT DSECT                Y02080
         CVT                                                     Y02080
         END   IGG0325B                                          S21016
