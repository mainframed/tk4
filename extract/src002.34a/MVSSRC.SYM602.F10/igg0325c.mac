 TITLE 'IGG0325C - ABSOLUTE TRACK ALLOCATION'                    Y02080
IGG0325C CSECT
*
*MODULE NAME = IGG0325C
*
*DESCRIPTIVE NAME = ABSOLUTE TRACK ALLOCATION
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 17 DELETIONS
*0092000400.                                                       UL17
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*          RELEASE 20 DELETIONS
*          RELEASE 21 DELETIONS
*1192019600-019800,020400-020600,054200,068400                   A37199
*1192010060,025300,028200,028500-028700                          M0705
*1192000230,000600-002400,003000-003200,004400,018000,020400,    S21016
*1192026000-026400,028200-029400,054400-055600,062400,062800,    S21016
*1192064600,086200                                               S21016
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000200,000470-000530,001560,003100,005400,007200,    Y02080
*0000007600-007800,008200,010200,018400,020200-020500,027600,    Y02080
*0000053000,053800-054900,060600,062400,062800-070200,070600-    Y02080
*0000084400                                                      Y02080
*
*STATUS CHANGE LEVEL 003
*FUNCTION/OPERATION:                                                  *
*   THIS MODULE PROCESSES ABSTR SPACE ALLOCATION REQUESTS. IT FIRST   *
*   DETERMINES IF ANY SPACE IS REQUESTED. IF SO, IT DETERMINES IF THE *
*   QUANTITY REQUESTED IS AVAILABLE AT THE TRACK ADDRESS SPECIFIED.   *
*   IF THESE CONDITIONS ARE SATISFIED, THIS MODULE CREATES APPROPRIATE*
*   ENTRIES IN THE DADSM TABLE TO BE USED BY MODULE IGG0325E TO BUILD *
*   FORMAT 1/FORMAT 3 DSCB'S AND BY MODULE IGG0325G TO UPDATE THE     *
*   FORMAT 4 AND FORMAT 5 DSCB'S. IF ANY OF THE CONDITIONS CANNOT BE  *
*   SATISFIED, AN APPROPRIATE ERROR CODE IS LOADED INTO THE ERROR CODE*
*   PASS REGISTER, AND A BRANCH IS MADE TO THE LAST LOAD OF SPACE     *
*   ALLOCATION.                                                       *
*                                                                     *
*ENTRY POINTS:                                                        *
*   IGG0325C - ENTRY IS MADE FROM IGG0325B VIA A BRANCH.              *
*                                                                     *
*INPUT: UPON ENTRY FROM IGG0325B THE WORK AREA CONTAINS THE DATA      *
*   PORTION OF THE FORMAT 4 DSCB AND ITS ADDRESS, THE FIRST DADSM     *
*   RECORD (F5) AND ITS ADDRESS, A CHANNEL PROGRAM TO READ DADSM      *
*   RECORDS, A DEB, AN IOB, AND AN ECB.                               *
*   REGISTER 10 WILL CONTAIN THE QUANTITY REQUESTED IN TRACKS.        *
*   REGISTER 11 WILL POINT TO A JFCB.                                 *
*   REGISTER 13 WILL POINT TO THE WORK AREA.                          *
*                                                                     *
*OUTPUT: UPON TRANSFER OF CONTROL THE WORK AREA AND REGISTERS WILL BE *
*   AS AT INPUT WITH THE FOLLOWING ADDITIONS.                         *
*   THE FIRST FORMAT 5 DSCB IN CORE SWITCH WILL BE OFF IF ALLOCATION  *
*   WAS NOT FROM THE FIRST DADSM RECORD.                              *
*   THE DADSM TABLE WILL CONTAIN THE EXTENT ALLOCATED.                *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        EXCP(0) - READ FROM OR WRITE TO DIRECT ACCESS DEVICE         *
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        *
*        IECRES  - BRANCH TO OTHER MODULES                            *
*                                                                     *
*EXITS-NORMAL: BRANCH TO IGG0325E 'F1F3 BUILD'                        *
*   -ERROR: BRANCH TO IGG0325H WITH CODE IN ERROR PASS REGISTER       *
*                                                                     *
*   ERROR CODES THAT CAN BE ISSUED BY MODULE IGG0325C:                *
*                                                                     *
*   08 - NO ROOM AVAILABLE IN THE VTOC                                *
*                                                                     *
*   0C - PERMANENT I/O ERROR                                          *
*                                                                     *
*   10 - REQUESTED ABSOLUTE TRACK NOT AVAILABLE                       *
*                                                                     *
*   14 - REQUESTED QUANTITY NOT AVAILABLE                             *
*                                                                     *
*   4C - NO SPACE PARAMETER GIVEN FOR A NEW DATA SET OR               *
*        ZERO SPACE REQUESTED AT ABSOLUTE TRACK ZERO                  *
*                                                                     *
*   6C - PRIMARY SPACE REQUEST FOR AN ISAM DATA SET IS ZERO OR        *
*        PRIMARY SPACE IS ZERO FOR AN ABSTR REQUEST                   *
*                                                                     *
*TABLES/WORK AREAS: DADSM WORK AREA DESCRIBED BY MACRO 'IECALLWA'     *
*                                                                     *
*              ***************************************                *
*              *             DADSM TABLE             *                *
*              ***************************************                *
*                                                                     *
*              ***************************************                *
*              *        *         *                  *                *
*              *  TYPE  *  NO OF  *     USED HOLE    *                *
*              *  FLAG  * ENTRIES *      COUNTER     *                *
*              *        *         *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*              *                  *                  *                *
*              *       RTA        *      RTA+1       *                *
*              *                  *                  *                *
*              ***************************************                *
*                                                                     *
*              TYPEFLG  =  02 - BPAM DIRECTORIES REQUESTED.           *
*                                                                     *
*                       =  40 - USER LABELS REQUESTED                 *
*                                                                     *
*                       =  80 - SET MUST COMPLETE IS ACTIVE           *
*                                                                     *
*              NO OF ENTRIES = NUMBER OF ENTRIES WITHIN DADSM TABLE.  *
*                                                                     *
*              RTA = THE STARTING TRACK OF THE ALLOCATED EXTENT.      *
*                                                                     *
*              RTA+1 = THE STARTING TRACK OF THE NEXT AVAILABLE EXTENT*
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*NOTES:                                                               *
*   OTHER MACROS USED                                                 *
*   IECALLWA - ALLOCATE WORK AREA EXPANSION                           *
*   IECSDSL1 - BUILD DSCB'S                                           *
*   IEFJFCBN - BUILD JFCB                                             *
*   CVT - BUILD CVT                                                   *
*                                                                     *
*STORAGE: PROGRAM CODE - LESS THAN 1024 BYTES                         *
*   WORK AREA - AS DEFINED IN THE IECALLWA MACRO                      *
*   RPS WORK AREA - AS DEFINED IN THE IECRPS MACRO                    *
*                                                                     *
*
*REGISTER NAMES-
*
R0       EQU   0                        WORK REGISTER              UL17
R1       EQU   1                       WORK REGISTER
R2       EQU   2                       WORK REGISTER
RCNT     EQU   2                       DADSM PROCESS LOOP CONTROL
RIN      EQU   3                       INPUT AREA SCAN REGISTER
ROUT     EQU   4                       OUTPUT AREA SCAN REGISTER
R7       EQU   7                       WORK REGISTER
RTTRPTR  EQU   7                        PTR TO XCTL BY TTR TABLE ENTRY
RERRPASS EQU   8                        ERROR PASS REGISTER
RA       EQU   10                      REQUESTED QUANTITY PASS REGISTER
RJFCB    EQU   11                      JFCB POINTER
RBASE    EQU   12                      BASE REGISTER
RWKA     EQU   13                      WORK AREA POINTER
RBAK     EQU   14                      RETURN REGISTER.
RERR     EQU   15                      ERROR CODE REGISTER.
RWRK     EQU   15                      WORK REGISTER.
RF       EQU   15                      CHANNEL PROGRAM START POINTER
*
*OTHER EQUATES
*
NOPARAM  EQU   X'4C'                    NO SPACE PARAMETER ERROR M0705
ZEROSPCE EQU   X'6C'                    ZERO SPACE REQUEST ERROR M0705
EIGHT    EQU   8                                                   UL17
TEN      EQU   10                                                  UL17
*
* * * * * * * * * * * * *
*
*
* * * * * * * * * * * * *
*
*
*REGISTER USAGE-
*
         BALR  RBASE,0                 SET UP BASE REGISTER.
         USING START,RBASE
         USING ALLOCWKA,RWKA            WORK AREA ADDRESSABILITY Y02080
         USING JFCBFLD,RJFCB
*
* THIS SECTION TESTS IF ANY SPACE WAS REQUESTED. IF SO, A CHECK
* IS MADE OF THE AVAILABLE HOLES IN THE VTOC. IF NO SPACE WAS
* REQUESTED, THE ABSOLUTE TRACK ADDRESS IS TESTED FOR ZERO TO
* DETERMINE IF A SPACE PARAMETER WAS GIVEN FOR THIS DATA SET.
*
START    EQU   *                                                 S21016
         OC    JFCBPQTY,JFCBPQTY        ANY SPACE REQUESTED      M0705
         BNZ   CHEKVTOC                 BRANCH IF YES            M0705
         LA    RERRPASS,NOPARAM         NO SPACE PARAM ERR CODE  M0705
         OC    JFCBABST(2),JFCBABST     IS ABSOLUTE TRACK ZERO   M0705
         BZ    ERREXIT                  BRANCH IF YES            M0705
         LA    RERRPASS,ZEROSPCE        NO SPACE REQUESTED ERROR M0705
         B     ERREXIT                                           S21016
CHEKVTOC EQU   *                                                 S21016
         LH    RWRK,DS4DSREC           PICK UP VTOC AVAILABLE HOLES.
         LA    R1,2                    SET TO CHECK FOR TWO HOLES
         CLR   R1,RWRK                 ARE TWO HOLES AVAILABLE
         BNH   READ1ST                 BRANCH IF 2 OR MORE HOLES AVAIL
*
* ERROR - INSUFFICIENT HOLES AVAILABLE IN THE VTOC
*
         LA    RERRPASS,X'08'           SET ERROR CODE 'NO ROOM IN VTOC
         B     ERREXIT
*
* THIS SECTION INITIALIZES IDAREA AND READS DADSM RECORDS AS REQUIRED.
*
READ1ST  MVC   IDAREA(5),DADSMADR      SET SRCH/SEEK TO 1ST F5
         EX    0,MOVEF5                REMOVE IDENTIFIER
         B     RESET
PREPRD   BAL   RBAK,READF5             READ DADSM RECORD.
*
* THIS SECTION SEARCHES THE CURRENT DADSM RECORD FOR THE ABSOLUTE
* TRACK REQUESTED.  IT SEARCHES UNTIL IT FINDS AN RTA EQUAL TO OR
* GREATER THAN THE REQUESTED RTA.  IF GREATER THAN IT CHECKS THE PRIOR
* EXTENT FOR THE REQUESTED RTA AND NUMBER OF TRACKS.
*
RESET    LA    RIN,DS5KEYID-1          SET UP POINTER TO SCAN FOR RTA.
         LA    RCNT,26                 SET TO MAX NUMBER OF EXTENTS
         LR    RWRK,RIN                SAVE BEGINNING ADDRESS OF F5.
COMPLOOP CLC   JFCBABST(2),5(RIN)      IS NEXT EXTENT RTA EQUAL TO
*                                      OR GREATER THAN REQUESTED RTA
         BL    TEST1                   YES - GO CHECK FOR 1ST ENTRY
         BE    CHKQTY1                 CHECK TO SEE IF QTY IS AVAILABLE
         CLC   5(2,RIN),ZEROS          NO - IS NEXT EXTENT ZERO
         BE    CHECKEXT                BRANCH IF YES
         LA    RIN,5(RIN)              UPDATE PTR TO POINT TO NEXT EXT
         BCT   RCNT,COMPLOOP           IS THIS THE LAST EXT IN RECORD
*
* THIS SECTION CONVERTS THE LAST DADSM EXTENT INTO RTA AND NUMBER
* OF TRACKS.  IT CHECKS IF THE REQUESTED RTA IS IN THIS EXTENT.
* IF SO IT CHECKS IF THE REQUESTED QUANTITY CAN BE FILLED.
*
CHECKEXT MVC   CCW12+2(4),0(RIN)       ALIGN TO A HALF WORD.
         LH    R2,CCW12+4              PICK UP CYLINDERS AVAIL IN EXT
         MH    R2,DS4DEVSZ+2           CONVERT CYLINDERS TO TRACKS.
         AH    R2,CCW12+2              COMPUTE  RTA(UPPER)+1.
         SR    R7,R7                   CLEAR REGISTER.
         IC    R7,4(RIN)               PICK UP NUMBER OF TRACKS
         AR    R2,R7                   ADD NBR OF TRACKS TO RTA
         MVC   CCW12(2),JFCBABST       GET REQUESTED RTA
         LH    R7,CCW12                PICK UP REQUESTED RTA.
         AR    R7,RA                   COMPUTE REQUESTED RTA(UPPER)+1.
         CLR   R2,R7                   IS EXTENT RTA+1 EQUAL TO OR
*                                      GREATER THAN REQUESTED RTA+1
         BNL   MORETST                 YES-CHECK FOR RTA.
         TM    DS5PTRDS+4,X'FF'        NO-IS THIS THE LAST RECORD.
         BZ    NOQTY                   YES-QTY IS NOT AVAILABLE.
         MVC   IDAREA(5),DS5PTRDS      INSERT NEW ADDRESS FOR READ F5.
         B     PREPRD                  GO READ NEXT RCD AND TEST
*
* CHECK FOR REQUESTED RTA
*
MORETST  CLC   CCW12+2(2),CCW12        IS RTA IN THIS EXRENT.
         BH    NORTA                   BRANCH IF NO
         STH   R7,DADSMTBL+6           STORE UPPR RTA INTO DADSMTBL
         B     INSERTLO                GO AND INSERT LOW RTA.
*
* IF THE NEXT EXTENT IS THE FIRST DADSN RECORD EXTENT AND THE EXTENT
* RTA IS GREATER THAN THE REQUESTED RTA THEN RTA IS NOT AVAILABLE
*
TEST1    CLR   RWRK,RIN                IS THIS THE 1ST EXTENT
         BL    CHKQTY                  NO-CHECK FOR QUANTITY AVAILABLE.
*
* ERROR - REQUESTED RTA IS NOT AVAILABLE
*
NORTA    LA    RERRPASS,X'10'           SET ERROR CODE 'RTA NOT AVAIL
         B     ERREXIT
*
* ERROR - QUANTITY REQUESTED IS NOT AVAILABLE
*
NOQTY    LA    RERRPASS,X'14'           SET ERROR CODE 'QTY NOT AVAIL
         B     ERREXIT
*
* NEXT DADSM EXTENT RTA IS EQUAL TO REQUESTED RTA.  STEP INPUT SCAN
* POINTER TO ALLOCATE FROM THE NEXT EXTENT.
*
CHKQTY1  LA    RIN,5(RIN)              STEP TO EXTENT TO BE CONVERTED.
*
* THIS SECTION CONVERTS THE DADSM EXTENT THAT CONTAINS THE REQUESTED
* RTA INTO RTA AND NUMBER OF TRACKS.  IT CHECKS IF THE SPACE IS
* SUFFICIENT TO FILL THE REQUESTED QUANTITY.  IF SO IT CHECKS IF THE
* REQUESTED QUANTITY CAN BE FILLED STARTING WITH THE REQUESTED RTA.
*
CHKQTY   LA    ROUT,F5OUT              INSERT ADDRESS FOR CONV EXTENTS
         SR    R2,R2                   CLEAR REGISTER
         MVC   CCW12(5),0(RIN)         ALIGN EXTENT TO HALF WORD
         LH    R7,CCW12+2              LOAD NUMBER OF CYLINDERS IN EXT
         MH    R7,DS4DEVSZ+2           CONVERT TO TRACKS
         IC    R2,CCW12+4              GET NBR OF EXCESS TRACKS
         AR    R7,R2                   ADD FOR TOTAL TRACKS AVAILABLE
         STH   R7,2(ROUT)              TOTAL TRACKS TO OUTPUT AREA
         MVC   0(2,ROUT),CCW12         MOVE RTA TO OUTPUT AREA
         CH    RA,2(ROUT)              IS QUANTITY AVAILABLE.
         BH    NOQTY                   BRANCH IF NO
         LH    RWRK,0(ROUT)            PICK UP CONVERTED EXTENT.
         AH    RWRK,2(ROUT)            COMPUTE UPPER RTA OF CONV EXT
         MVC   4(2,ROUT),JFCBABST      MOVE REQUESTED RTA TO OUTPUT
         LH    R1,4(ROUT)              PICK UP REQUEST RTA.
         CR    RWRK,R1                 EXT RTA1 EQ/LESS THAN ABSTR UL17
         BNH   NORTA                    BRANCH IF YES              UL17
         AR    R1,RA                   COMPUTE UPPER RTA FOR REQUEST
         CR    R1,RWRK                 IS QUANTITY AVAILABLE STARTING
*                                      AT THIS TRACK
         BH    NOQTY                   BRANCH IF NO
*
* THIS SECTION STORES THE RTA AND RTA+1 FOR THIS REQUEST IN THE
* DADSM TABLE FOR USE BY THE DADSM UPDATE MODULE.
*
         STH   R1,DADSMTBL+6           PLACE UPPER RTA OF ALLOCATED
*                                      SPACE INTO DADSMTBL
INSERTLO MVC   DADSMTBL+4(2),JFCBABST  INSERT LOW RTA INTO DADSMTBL.
INSERTNO MVI   DADSMTBL+1,X'01'        INSERT NUMBER OF ENTRIES.
*
* SUCCESSFUL ABSOLUTE TRACK ALLOCATION EXIT.  BRANCH TO A SUBSEQUENT
* DADSM SPACE ALLOCATION MODULE TO BUILD THE FORMAT 1 DSCB.
*
         LA    RTTRPTR,ALLOCA3          LOAD XCTL PTR TO F1/F3 ENTRY
         TM    TYPEFLG,USRLBL           USER LABELS REQUESTED      UL17
         BZ    XCTLHERE                 BRANCH IF NO               UL17
         LH    R1,DADSMTBL+4            PICK UP ALLOCATED RTA      UL17
         LH    R0,DADSMTBL+6            PICK UP ALLOCATED RTA+1    UL17
         LA    R1,1(R1)                                            UL17
         CR    R1,R0                   U.L. TRKS EQ TO REQ RTA+1   UL17
         BE    XCTLHERE                 BRANCH IF EQUAL            UL17
         STH   R1,DADSMTBL+6            STORE USER LABEL RTA+1     UL17
         STH   R1,DADSMTBL+EIGHT        STORE REQUEST RTA          UL17
         STH   R0,DADSMTBL+TEN          STORE REQUEST RTA+1        UL17
         MVI   DADSMTBL+1,X'02'        SET NMBR ENTRIES TO 2       UL17
XCTLHERE EQU   *                       BRANCH LABEL              Y02080
         IECRES LOAD,EXTPR=(RWKA),MODID=(RTTRPTR),BRANCH=DIRECT  Y02080
*
* EXECUTE CHANNEL PROGRAM TO READ FORMAT 5 DSCB - DADSM
*
READF5   LA    RF,CCW9                 START CHAN PROG AT CCW9
         ST    RF,IOB+16               PLACE START CCW INTO IOB
         MVC   SEEK+3(4),IDAREA        INSERT SEEK ADDRESS INTO IOB.
         MVI   ECB,X'00'               CLEAR STATUS BYTE.
*
* THIS SECTION LINKS TO IOS FOR ALL I/O OPERATIONS.
*
         EXCP  IOB                     EXECUTE CHANNEL PROGRAM.
         WAIT  ECB=ECB                 WAIT FOR COMPLETION.
         TM    ECB,X'20'               WAS THERE A PERM I/O ERROR
         BC    7,MOVEF5                BRANCH IF NO ERROR
*
* ERROR - PERMANENT I/O ERROR.  FREE WORKAREA,SET ERROR CODE,AND EXIT
*
         LA    RERRPASS,X'0C'           SET ERROR CODE 'PERM I/O ERROR
ERREXIT  LA    RTTRPTR,ALLOCD2          LOAD PTR TO LAST ALLOC LOAD
         B     XCTLHERE
*
* PREPARE DADSM RECORD FOR RTA SEARCH ROUTINE
*
MOVEF5   MVC   DS5FMTID(90),DS5MAVET   REMOVE ID FROM DADSM RECORD
         NI    ASWITCH,X'FF'-FRSTF5    CLEAR 1ST F5 IN CORE SW   Y02080
         BR    RBAK                    RETURN TO CALLING SEQUENCE.
*
* * * * * * * * * * * * *
*
***   CONSTANTS
*
* * * * * * * * * * * * *
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(ALLOCA3,5E,ALLOCD2,5H),SVC=032,BRT=YES,    Y02080X
               LENGTH=                                           Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(5)   ALLOCATE WORK AREA       Y02080
ZEROS    EQU   CCW4+4
         EJECT                                                   Y02080
CVT      DSECT                          CVT DSECT                Y02080
         CVT                                                     Y02080
         EJECT                                                   Y02080
*
* * * * * * * * * * * * *
*
*
* * * * * * * * * * * * *
*
JFCBFLD  DSECT
         IEFJFCBN
         END   IGG0325C                                          S21016
