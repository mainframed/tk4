         TITLE 'IGG0325V - CHECK FOR FORMAT 6 EXTENT OVERLAP'    Y02080
IGG0325V CSECT
*
* MODULE NAME = IGG0325V
*
* DESCRIPTIVE NAME = CHECK FOR FORMAT 6 EXTENT OVERLAP
*
* COPYRIGHT = NONE
*
* CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 21 DELETIONS                                       *
*1190560000,564000-568000,584000,642000,646000-664000,668000-    M0124
*1190690000,694000,700000-746000,750000-754000,768000,774000,    M0124
*1190778000-782000,796000                                        M0124
*1190096000,608000-610000                                        S21040
*          RELEASE 22 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000300-002000,012000-020000,088000,092000,096000,114000,    Y02080
*0000198000,202000,208000,226000,230000-234000,240000,252000,    Y02080
*0000282000,290000-294000,362000,378000,384000-386000,394000-    Y02080
*0000396000,412000,440000,446000-448000,452000,464000-466000,    Y02080
*0000485000,498600,499200,532000,572000-576000,580000-584000,    Y02080
*0000592000-598000,599000,600000-628000,632000-748000,758000-    Y02080
*0000760000,763000-784000,788000-812000,816000,820000-824000,    Y02080
*0000828000-954000                                               Y02080
*0000054000-070000,104000-106000,146000,180000-182000,320000-    Y02078
*0000328000,402000-406000                                        Y02078
*                                                                     *
*0000478000-490000,504000-508000                                 A36311
*                                                                     *
*STATUS CHANGE LEVEL 002
*                                                                     *
*                                                                     *
* FUNCTION/OPERATION  THIS MODULE TESTS TO SEE IF A SPLIT CYLINDER    *
* DATA SET EXTENT OVERLAPS TWO EXISTING FORMAT 6 EXTENTS. IF THIS     *
* OVERLAPPING EXISTS, THE TWO FORMAT 6 EXTENTS ARE MERGED INTO ONE    *
* EXTENT AND THEIR DATA SET COUNTS ARE ADDED TOGETHER. WHEN IT IS     *
* DETERMINED THAT THE SPLIT CYLINDER DATA SET EXTENT DOES NOT OVERLAP,*
* THE MODULE XCTL'S TO IGG0325U TO RESUME BUILDING THE F6 EXTENTS.    *
*                                                                     *
* ENTRY POINTS                                                        *
*        IGG0325V- FROM IGG0325U TO TEST FOR OVERLAPPING EXTENTS      *
*                                                                     *
* INPUT FROM IGG0325U                                                 *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1 OR  *
*              3 DSCB BEING PROCESSED IN 'DSCBF1', AND THE FORMAT 6   *
*              DSCB BEING COMPARED IN 'DSCBF5'.  'COUNT' CONTAINS     *
*              THE CCHHR OF THE NEXT DSCB TO BE READ.  'CCHHRSAV'     *
*              CONTAINS THE CCHHR OF THE FORMAT 1 OR 3 DSCB IN        *
*              'DSCBF1'.  AND 'DADSMADR' CONTAINS THE CCHHR OF THE    *
*              FORMAT 6 IN 'DSCBF5'.  REGISTER 6 WILL POINT TO THE    *
*              RTA/RTA+1 OF THE DATA SET, REGISTER 7 WILL CONTAIN     *
*              THE NUMBER OF THE EXTENT BEING COMPARED, REGISTER 8    *
*              WILL POINT TO THE CURRENT EXTENT, AND REGISTER 10 WILL *
*              CONTAIN THE NUMBER OF EXTENTS IN THE LAST FORMAT 6.    *
*                                                                     *
* OUTPUT TO IGG0325U                                                  *
*              SAME AS ON INPUT. ALSO, REGISTER 1 WILL BE ZERO TO     *
*              INDICATE REENTRY FROM IGG0325V.                        *
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*        EXCP (0)                                                     *
*        WAIT (1)                                                     *
*                                                                     *
* EXITS NORMAL BRANCH TO IGG0325U TO RESUME BUILDING FORMAT 6 EXTENTS *
*                                                                     *
*       ERROR  BRANCH TO IGG0325T                                     *
*              ERROR CODES ISSUED BY THIS MODULE -                    *
*                                                                     *
*              0C - PERMANENT I/O ERROR                               *
*                                                                     *
* TABLES/WORKAREAS  DADSM WORKAREA                                    *
*                                                                     *
* ATTRIBUTES  REENTRANT                                               *
*                                                                     *
* NOTES - THIS MODULE WAS SPLIT FROM IGG0325Q IN RELEASE 20.          *
*                                                                     *
*                                                                     *
REGZERO  EQU   0                        WORK REGISTER
REGONE   EQU   1                        WORK REGISTER
REENTRY  EQU   1                        REENTRY TO IGG0325U
REGTWO   EQU   2                        WORK REGISTER
REGTHREE EQU   3                        WORK REGISTER
REGFOUR  EQU   4                        WORK REGISTER
REGFIVE  EQU   5                        WORK REGISTER
RTAPTR   EQU   6                        PTR TO RTA/RTA+1 OF DATA SET
F6EXTCTR EQU   7                        CTR OF NO OF EXTENTS IN F6
F6PTR    EQU   8                        ADDR OF CURRENT EXTENT IN F6
RERRPASS EQU   8                        ERROR CODE REGISTER
RTNREG2  EQU   9                        BRANCH REGISTER
LSTF6CTR EQU   10                       CTR OF EXTENTS IN LAST F6
BASEREG  EQU   12                       BASE REGISTER
RWKAREA  EQU   13                       WORK AREA BASE REGISTER
RETRNREG EQU   14                       BRANCH REGISTER
RCVT     EQU   15                       CVT BASE REGISTER
*                                                                     *
* OTHER EQUATES                                                       *
*                                                                     *
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
K4       EQU   4                        CONSTANT OF 4            Y02080
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
C26      EQU   26                       VALUE 26
C32      EQU   32                       VALUE 32
C125     EQU   125                      VALUE 125
C140     EQU   140                      VALUE 140
GOODIO   EQU   X'20'                    TEST VALUE FOR SUCCESSFUL I/O
ERRCD    EQU   X'0C'                    ERROR CODE FOR UNSUCCESSFUL I/O
F6INDIC  EQU   X'06'                    F6 DSCB INDICATOR
NOCC     EQU   X'00'                    NO COMMAND CHAINING      Y02080
READCOMD EQU   X'0E'                    READ COMMAND CODE
WRITCOMD EQU   X'0D'               WRITE COMMAND CODE            A36311
SLIBIT   EQU   X'20'               SLI BIT IN CCW                A36311
*                                                                     *
         BALR  BASEREG,ZERO             INITIALIZE BASE REGISTER
         USING *,BASEREG
         USING ALLOCWKA,RWKAREA         BASE FOR ALLOCATE W/A    Y02080
         USING CVT,RCVT                 BASE FOR CVT
*
         STM   F6EXTCTR,F6PTR,CCW11     SAVE CURRENT EXTENT PTR  Y02080
         MVC   SAVEXTNT(FIVE),ZERO(F6PTR) SAVE CONTENTS OF
*                                       THE CURRENT F6 EXTENT
         MVC   F6CCHHR,DADSMADR         SAVE ADDR OF CURRENT F6  Y02080
*
* THIS SECTION TESTS IF THE SPLIT CYLINDER DATA SET EXTENT ENDS BEFORE
* THE NEXT F6 EXTENT BEGINS.
*
AGAIN    EQU   *
         LA    REGTHREE,C26             GET MAX NO EXTENTS IN F6
         CR    F6EXTCTR,REGTHREE        WAS LAST EXTENT COMPARED
         BL    UPDATPTR                 BRANCH IF NO
         CLI   DS6PTRDS+FOUR,ZERO       IS THIS THE LAST F6      Y02080
         BE    RESTORE                  BRANCH IF YES
         MVC   SAVEPT,F6CCHHR           SAVE ADDR OF OLD F6      Y02080
         MVC   F6CCHHR,DS6PTRDS         UPDATE PTR TO CURRENT F6 Y02080
         MVC   SEEKCYL(FIVE),DS6PTRDS   MOVE ADDR OF F6 TO BE    Y02080
*                                       READ TO CHANNEL PROGRAM
         BAL   RTNREG2,READTOF5         GO READ THE NEXT F6
         LA    F6PTR,DS6AVEXT           POINT TO FIRST EXTENT    Y02080
         LA    F6EXTCTR,ONE             INITIALIZE NO OF EXTENTS
         B     COMPARE                  GO COMPARE
UPDATPTR EQU   *
         LA    F6PTR,FIVE(F6PTR)        POINT TO NEXT EXTENT
         LA    F6EXTCTR,ONE(F6EXTCTR)   INCREMENT CTR OF EXTENTS
         CLC   ZERO(TWO,F6PTR),ZEROS    IS NEXT EXTENT UNUSED    Y02080
         BE    RESTORE                  BRANCH IF YES
COMPARE  EQU   *
         CLC   TWO(TWO,RTAPTR),ZERO(F6PTR) DOES THE SPLIT CYLINDER
*                                       DATA SET END BEFORE THE
*                                       NEXT F6 EXTENT BEGINS
         BH    COMBINE                  BRANCH IF NO
*
* THIS SECTION RESTORES THE ORIGINAL F6 AND THE ORIGINAL CONTENTS OF
* REGISTERS 7 AND 8 BEFORE XCTLING TO IGG0325U.
*
RESTORE  EQU   *
         MVC   SEEKCYL(FIVE),DADSMADR   MOVE ADDR OF ORIGINAL F6
*                                       TO CHANNEL PROGRAM
         CLC   DADSMADR,F6CCHHR         TEST IF ORIGINAL F6 IS   Y02078
*                                       STILL IN THE WORK AREA   Y02078
         BE    CKDSCBF1                 IF YES, DO NOT REREAD    Y02078
         BAL   RTNREG2,READTOF5         GO READ THIS F6
CKDSCBF1 EQU   *                        BRANCH LABEL             Y02078
         CLI   DSCBF1,F6INDIC           TEST IF AN F6 WAS READ   Y02078
*                                       INTO DSCBF1              Y02078
         BNE   LOADRGS1                 BRANCH IF NOT            Y02078
         MVC   SEEKCYL(FIVE),CCHHRSAV   MOVE IN CCHHR OF F1 OR   Y02078
*                                       F3 BEING PROCESSED       Y02078
         BAL   RTNREG2,READTOF1         GO READ F1 OR F3 DSCB    Y02078
LOADRGS1 EQU   *                        BRANCH LABEL             Y02078
         LM    F6EXTCTR,F6PTR,CCW11     RESTORE THE EXTENT PTR   Y02080
         MVC   ZERO(FIVE,F6PTR),SAVEXTNT MOVE IN NEW EXTENT
*                                       BOUNDARIES AND D/S COUNT
         SR    REENTRY,REENTRY          ZERO REGISTER 1
         LA    REGTWO,MOD325U           POINT TO ID OF IGG0325U  Y02080
         B     XCTLHERE                 GO XCTL
*
* THIS SECTION COMBINES TWO F6 EXTENTS.
*
COMBINE  EQU   *
         MVC   SAVEXTNT+TWO(TWO),TWO(F6PTR) MOVE IN NEW UPPER EXTENT
         SR    REGTWO,REGTWO            ZERO REGISTER
         IC    REGTWO,FOUR(F6PTR)       GET NEW F6 D/S COUNT
         SR    REGONE,REGONE            ZERO REGISTER
         IC    REGONE,SAVEXTNT+FOUR     GET RUNNING F6 D/S COUNT
         AR    REGONE,REGTWO            GET NEW TOTAL D/S COUNT
         STC   REGONE,SAVEXTNT+FOUR     SAVE NEW TOTAL D/S COUNT
*
* THIS SECTION MOVES ALL EXTENTS IN THE CURRENT F6 DSCB FORWARD TO
* WIPE OUT THE EXTENT THAT WAS JUST COMBINED AND UPDATES F6EXTCTR TO
* REFLECT ONE LESS EXTENT.
*
WIPEOUT  EQU   *
         LA    REGTWO,C26               GET MAX NO EXTENTS IN F6
         SR    REGTWO,F6EXTCTR          CALCULATE LOOP CONTROL
         BZ    COMPLAST                 BRANCH IF LAST EXTENT IN
*                                       THIS F6 TO BE WIPED OUT
         LR    REGONE,F6PTR             GET ADDR OF FREE EXTENT
MOVEFLD  EQU   *
         MVC   ZERO(FIVE,REGONE),FIVE(REGONE) MOVE A FIELD
         LA    REGONE,FIVE(REGONE)      POINT TO NEXT EXTENT
         BCT   REGTWO,MOVEFLD           BRANCH IF MORE TO MOVE
COMPLAST EQU   *
         CLI   DS6PTRDS+FOUR,ZERO       IS THIS LAST F6 IN CHAIN Y02080
         BNE   MERGERTN                 BRANCH IF NO
         LA    REGTWO,C26
         CR    REGTWO,LSTF6CTR          ARE THERE 26 EXTENTS IN LAST F6
         BNE   NEXTCOMP                 BRANCH IF F6 NOT FULL
         MVC   F5EXT16(FIVE),F5EXT16+FIVE ZERO LAST EXTENT
NEXTCOMP EQU   *
         BCT   LSTF6CTR,WRITENOW        BRANCH IF F6 NOT TO BE ZEROED
         MVC   SEEKCYL(FIVE),F6CCHHR    PUT ADDR OF F6 TO BE     Y02080
*                                       ZEROED IN CHANNEL PROG
         BAL   RTNREG2,WRTZERO          WRITE ZERO RECORD
         MVC   FMTINAD,F6CCHHR          SET NEW HOLE ADDRESS     Y02080
         MVC   F6CCHHR,SAVEPT           UPDATE PTR TO CURRENT F6 Y02080
         MVC   SEEKCYL(FIVE),SAVEPT     PUT ADDR OF PREVIOUS F6
*                                       IN CHANNEL PROGRAM
         BAL   RTNREG2,READTOF5         READ NEW LAST F6
         MVI   DS6PTRDS,ZERO                                     Y02080
         MVC   DS6PTRDS+ONE(FOUR),DS6PTRDS  ZERO OUT F6 PTR      Y02080
         BAL   RTNREG2,WRITEF6          WRITE NEW LAST F6
         LA    LSTF6CTR,C26             INIT CTR OF EXTENTS IN LAST F6
         B     LASTCOMP                 GO TEST NEXT EXTENT
WRITENOW EQU   *
         MVC   SEEKCYL(FIVE),F6CCHHR    MOVE IN ADDR OF F6 TO BE Y02080
*                                       WRITTEN
         BAL   RTNREG2,WRITEF6          GO WRITE THIS F6
*
* THIS SECTION TESTS IF THE SPLIT CYLINDER DATA SET EXTENT ENDS WITHIN
* THE UPDATED F6 EXTENT.
*
LASTCOMP EQU   *
         CLC   TWO(TWO,RTAPTR),SAVEXTNT+TWO TEST IF SPLIT CYL
*                                       DATA SET ENDS WITHIN THE
*                                       UPDATED F6 EXTENT
         BNH   RESTORE                  BRANCH IF YES
         CLC   DADSMADR,F6CCHHR         TEST IF ORIGINAL F6 IS   Y02078
*                                       STILL IN THE WORK AREA   Y02078
         BE    LOADRGS2                 IF YES, DO NOT REREAD    Y02078
         MVC   SEEKCYL(FIVE),DADSMADR   GET CCHHR OF ORIGINAL F6
         BAL   RTNREG2,READTOF5         GO READ FIRST F6
LOADRGS2 EQU   *                        BRANCH LABEL             Y02078
         LM    F6EXTCTR,F6PTR,CCW11     RESTORE EXTENT POINTERS  Y02080
         B     AGAIN                    GO COMPARE AGAIN
MERGERTN EQU   *
         MVC   SAVEPT,F6CCHHR           SAVE ADDR OF LAST F6     Y02080
         MVC   SEEKCYL(FIVE),DS6PTRDS   MOVE ADDR OF NEXT F6     Y02080
*                                       INTO CHANNEL PROGRAM
         MVC   F6CCHHR,DS6PTRDS         MOVE ADDR OF CURRENT F6  Y02080
         BAL   RTNREG2,READTOF1         READ NEXT F6 IN CHAIN
         MVC   F5EXT16(FIVE),DSF3EXT1   MERGE EXTENT TO PREVIOUS F6
         MVC   SEEKCYL(FIVE),SAVEPT     MOVE IN ADDR OF F6
         BAL   RTNREG2,WRITEF6          WRITE PREVIOUS F6
         XC    DSCBF5(C140),DSCBF5      ZERO F5 AREA
         MVC   DS6AVEXT(C125),DSF3EXT2  UPDATE NEXT F6 IN CHAIN  Y02080
         MVC   DS6PTRDS,DS1PTRDS        MOVE IN CHAINING ADDR    Y02080
         B     COMPLAST                 GO TEST IF LAST IN CHAIN
*
* THIS ROUTINE WRITES A ZERO RECORD.
*
WRTZERO  EQU   *
         LA    REGTHREE,ONE        CCW COUNT IS ONE              A36311
         LA    REGZERO,ZEROS       WRITE A BYTE OF ZEROS         A36311
         MVI   CCW3+K4,SLIBIT           SET SLI BIT              Y02080
         B     CONTINUE            SKIP NEXT INSTRUCTIONS        A36311
*
* WRITE A FORMAT 6 DSCB.
*
WRITEF6  EQU   *
         LA    REGTHREE,C140       CCW COUNT IS 140              A36311
         LA    REGZERO,DSCBF5      WRITE FROM DSCBF5 AREA        A36311
         MVI   CCW3+K4,NOCC             UNCHAIN CCW3 FROM CCW4   Y02080
         MVI   DSCBF5,F6INDIC      PUT F6 INDICATOR IN RECORD    A36311
CONTINUE EQU   *                                                 A36311
         STH   REGTHREE,CCW3+SIX        MOVE IN COUNT            Y02080
         ST    REGZERO,CCW3        MOVE IN DATA ADDRESS          A36311
         MVI   CCW3,WRITCOMD       MOVE IN WRITE CODE            A36311
         LA    REGONE,CCW1
         ST    REGONE,CHNPGADR          GET ADDR WRITE CHANNEL PROGRAM
         BAL   RETRNREG,EXCHANPG   WRITE A F6 OR F0 RECORD       A36311
         BR    RTNREG2                  RETURN
*
* THIS ROUTINE READS A F6 DSCB INTO EITHER THE F1 OR F5 AREA.
*
READTOF5 EQU   *
         LA    REGTHREE,DSCBF5          GET ADDR OF F5 AREA
         B     FURTHER                  SKIP NEXT INSTRUCTION
READTOF1 EQU   *
         LA    REGTHREE,DSCBF1          GET ADDR OF F1 AREA
FURTHER  EQU   *
         ST    REGTHREE,CCW6            STORE ADDR OF AREA RECEIVING F6
         MVI   CCW6+K4,NOCC             DON'T READ COUNT         Y02080
         LA    REGTHREE,CCW4
         ST    REGTHREE,CHNPGADR        SET CHANNEL PROGRAM TO READ
         MVI   CCW6,READCOMD            MOVE IN READ CODE
         BAL   RETRNREG,EXCHANPG        EXECUTE CHANNEL PROGRAM
         BR    RTNREG2                  RETURN
*
* THIS ROUTINE EXECUTES THE CHANNEL PROGRAM.
*
EXCHANPG EQU   *
         MVI   ECB,ZERO
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,GOODIO               WAS I/O SUCCESSFUL
         BCR   1,RETRNREG               RETURN IF I/O SUCESSFUL  M0124
         LA    RERRPASS,ERRCD           SET ERROR RETURN CODE
ERREXIT  EQU   *
         LA    REGTWO,LASTLOAD          POINT TO ID OF IGG0325T  Y02080
XCTLHERE EQU   *
        IECRES LOAD,EXTPR=(RWKAREA),MODID=(REGTWO),BRANCH=DIRECT Y02080
*
* CONSTANTS
*
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(MOD325U,5U,LASTLOAD,5T),SVC=032,BRT=YES,   Y02080X
               LENGTH=                                           Y02080
         EJECT                                                   Y02080
CVT      DSECT
         CVT                                                     Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D1=(1),D2=(6)   ALLOCATE WORK AREA       Y02080
DSF3EXT1 EQU   DSCBF1+4
DSF3EXT2 EQU   DSCBF1+9
F5EXT16  EQU   DSCBF5+129               EXTENT 16 IN F5 DSCB
CHNPGADR EQU   IOB+16                   ADDRESS CHANNEL PROGRAM IN IOB
SEEKCYL  EQU   SEEK+3
ZEROS    EQU   CCW2+4                   FULL WORD OF ZERO
SAVEPT   EQU   TTRLL                    CCHHR OF PREVIOUS F6     Y02080
F6CCHHR  EQU   PREVF5AD                 CURRENT F6 CCHHR         Y02080
         END
