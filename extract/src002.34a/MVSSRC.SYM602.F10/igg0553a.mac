 TITLE 'IGG0553A - EXTEND INITIALIZATION'
IGG0553A CSECT
*
*MODULE NAME = IGG0553A
*
*DESCRIPTIVE NAME = EXTEND INITIALIZATION
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          VS1 RELEASE 01 DELETIONS                                   *
*0000                                                            XM5887
*                                                                     *
*          VS1 RELEASE 02 DELETIONS/CHANGES                           *
*0000007686,021500-021600                                        X02989
*          VS2 RELEASE 01 DELETIONS                                   *
*0000                                                            YM2930
*          RELEASE 19 DELETIONS                                       *
*0853045000                                                      O19117
*          RELEASE 20 DELETIONS                                       *
*3034035000                                                      A35385
*3034000213-000227,021000                                        S20201
*3034037080,082600,083700,084600-085000,085600                   M4027
*          RELEASE 21 DELETIONS                                       *
*1194000340,000600-002600,009800,010800-011000,013600,014400,    S21040
*1194037080,040000-044000,044960-045040,046600-071400,071900,    S21040
*1194082500-082600                                               S21040
*0000079400-080000                                              SA48172
*1194000205,001040,003200-003400,003800-005200,007600-008200,    M0130
*1194008800,009700-010600,011600-013000,013400-013800,014600-    M0130
*1194014800,015200,015600,020414,020428,020463-020484,020600-    M0130
*1194021200,021600,022000,022200,024400,025400,029800-030000,    M0130
*1194034600,035000,035400-035420,037000-037020,037800,038000,    M0130
*1194038100,038600-039000,041800,044400-044600,044880,045140,    M0130
*1194045180-046000,046400-072200,084000,085800,087000-087620,    M0130
*1194088400-091200,091800-092200,095400                          M0130
*          RELEASE 21.7 DELETIONS
*0000000296-000300,016000,025200,025800,028600,028800,          SA53147
*0000084600-085600                                              SA53147
*          RELEASE 22 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000205,000217,001040,001440-001640,003300-003500,003620,    Y02080
*0000004100-004300,007385-007460,007494-008209,008293,008800,    Y02080
*0000009400-009600,009900-010000,010200,011400,013300-013900,    Y02080
*0000013940-014192,015000-016100,016200-019900,020000-020400,    Y02080
*0000020530-020660,020860,021500-021800,021960-022050,022250-    Y02080
*0000023400,024300-028400,028600,028740-029200,030400-035400,    Y02080
*0000036600-036660-036980,037064-037120,037260-037356,038100,    Y02080
*0000038400-039800,042200,043400,044500,045120-045360,045760-    Y02080
*0000045960,073000,074000,074800,075400,075800,076800,077800,    Y02080
*0000078200,078600,079600,080600,081000,081400,082400,083200,    Y02080
*0000084060-084200,084500,084600-088000,089200,091800-093800,    Y02080
*0000094600-755200                                               Y02080
*0000001540,009900-010000,041000                                 Y02078
*0000000030-000150,036846-036908,036936-036956,037023,037055     Y02082
*0000012000-012200,023600-023800                                 Y02144
*0000                                                            Y02072
*0000                                                            YM3047
*0000023000,028520-028562,084600                                 YM3997
*0000028564                                                      YM6546
*0000                                                            YM5371
*0000013600-013800                                               XM2969
*
*   EXTENDED MVS CVOL SUPPORT                                  @Z40CSRC
*                                                                     *
*STATUS CHANGE LEVEL 008                                              *
*                                                                     *
* THIS MODULE SPLIT INTO IGG0553G IN RELEASE 21                       *
*                                                                     *
*FLAG DESCRIPTION                                                  MC1E
*   MC1E - ELIMINATION OF THE F1 SEARCH WHILE EXTENDING ON         MC1E
*          THE SAME VOLUME.                                        MC1E
*                                                                  MC1E
*FUNCTION/OPERATION:                                                  *
*   THIS MODULE IS THE ENTRY POINT FOR EXTEND (SECONDARY SPACE        *
*   ALLOCATION).  IT PERFORMS THE FOLLOWING FUNCTIONS:                *
*   - GOES TO RESIDENT CONVERT ROUTINE TO GET CCHHR FOR THE VTOC.     *
*   - OBTAINS THE EXTEND WORK AREA.                                   *
*   - ISSUES IECRPS TO INITIALIZE FOR RPS PROCESSING.                 *
*   - ISSUES AN ENQ WITH THE SET-MUST-COMPLETE OPTION FOR THE VTOC.   *
*   - EXECUTES A CHANNEL PROGRAM TO READ IN THE FORMAT 4 AND IF       *
*     EXTENDING ON A NEW VOLUME TO PERFORM A DUPLICATE NAME SEARCH.   *
*   - IF A DUPLICATE NAME EXISTS ON THE NEW VOLUME, GOES TO IGG0553E. *
*   - IF THE FORMAT 4 HAS THE DOS OR DIRF BIT ON, GOES TO IGG0553F.   *
*   - OTHERWISE BRANCH TO IGG0553G TO CONTINUE PROCESSING.            *
*                                                                     *
*ENTRY POINTS:                                                        *
*   IGG0553A - ENTRY MADE FROM END OF VOLUME OR FROM VSAM CATALOG.    *
*                                                                     *
*INPUT:                                                               *
*   UPON ENTRY TO THIS MODULE, REGISTER 13 WILL CONTAIN ONE OF THE    *
*   FOLLOWING ENTRY CODES:                                            *
*        1 - EOV ENTRY TO EXTEND ON THE LAST (CURRENT) VOLUME         *
*        2 - CVOL CATALOG ENTRY TO EXTEND AN OS CATALOG               *
*        4 - EXTEND ENTRY TO EXTEND ON A NEW VOLUME                   *
*      129 - VSAM CATALOG ENTRY TO EXTEND AN EXISTING VSAM            *
*            DATA SPACE                                               *
*   REGISTER 4 POINTS TO THE I/O SUPPORT WORK AREA.                   *
*   REGISTER 5 POINTS TO THE USER'S DEB.                              *
*   REGISTER 10 POINTS TO THE UCB.                                    *
*   THE I/O SUPPORT WORK AREA IS LAID OUT AS FOLLOWS:                 *
*                                                                     *
*          BYTES          AREA                                        *
*         *******        ******                                       *
*          100           DSCB FIELD                                   *
*          176           JFCB                                         *
*            4           ECB                                          *
*           40           IOB                                          *
*           44           DEB                                          *
*            4           DCB                                          *
*           96           CCW'S                                        *
*                                                                     *
*OUTPUT:                                                              *
*   THE I/O SUPPORT WORK AREA WILL CONTAIN THE DATA PORTION OF THE    *
*   FORMAT 4 DSCB.  THE EXTEND WORK AREA WILL CONTAIN THE ADDRESSES   *
*   OF THE FORMAT 4 AND FORMAT 5 DSCB'S.                              *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        IECRES  - GET CORE FOR THE EXTEND WORK AREA                  *
*        EXCP(0) - READ OR WRITE A DIRECT ACCESS DEVICE               *
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        *
*        RESERVE(56) - ENQ ON THE VTOC                                *
*                                                                     *
*EXITS:                                                               *
*   NORMAL - BRANCH TO IGG0553F IF EXTENDING ON A VOLUME ON WHICH     *
*            THE DOS AND/OR DIRF BIT IS SET.                          *
*            BRANCH TO IGG0553G OTHERWISE.                            *
*                                                                     *
*   ERROR  - BRANCH TO IGG0553E WITH THE ENTRY CODE IN REGISTER 13    *
*   ERRORS MAY BE:  I/O ERROR, DUPLICATE NAME ON NEW VOLUME, OR       *
*                   DOS STACKED PACK.                                 *
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*OTHER MACROS USED:                                                   *
*   IECDSECS - TO EXPAND THE CVT, PSA, RRPL, AND UCB DSECTS           *
*   IECDSECT - TO DEFINE THE I/O SUPPORT WORK AREA                    *
*   IECEXTWA - TO DEFINE THE EXTEND WORK AREA                         *
*   IECSDSL1 - TO SYMBOLICALLY ADDRESS DSCB'S                         *
*   IECRPS - GENERATES CODE TO INITIALIZE FOR RPS PROCESSING          *
*                                                                     *
*STORAGE: PROGRAM CODE CSECT - LESS THAN 1024 BYTES                   *
*         EXTEND WORK AREA - AS DEFINED IN THE IECEXTWA MACRO    XM2969
*         RPS WORK AREA - LENGTH IS DEFINED IN THE IECRPS MACRO  XM2969
*         I/O SUPPORT WORK AREA                                       *
*
         BALR  RBASE,K0                 ESTABLISH BASE REG       Y02080
         USING BEGIN,RBASE                                       Y02080
         USING EOVWKA,RCORE             EOV W/A ADDRESSABILITY   Y02080
         USING EXTNDWKA,EXWKA                                    Y02080
         USING UCB,RUCB                 UCB ADDRESSABILITY       Y02080
*
* REGISTER EQUATES
*
REG0     EQU   0                        EQUATE FOR REGISTER 0    Y02080
REG1     EQU   1                        EQUATE FOR REGISTER 1    Y02080
REG2     EQU   2                        EQUATE FOR REGISTER 2    Y02080
RBASE    EQU   3                        BASE REGISTER            Y02080
RCORE    EQU   4                        EOV WORK AREA POINTER    Y02080
REG5     EQU   5                        EQUATE FOR REGISTER 5    Y02080
RDEB     EQU   5                        DEB POINTER              Y02080
REG6     EQU   6                        EQUATE FOR REGISTER 6    Y02080
REG7     EQU   7                        EQUATE FOR REGISTER 7    Y02080
ALTWKA   EQU   7                        ALTERNATE WORK AREA PTR  Y02080
REG8     EQU   8                        EQUATE FOR REGISTER 8    Y02080
REG9     EQU   9                        EQUATE FOR REGISTER 9    Y02080
RUCB     EQU   10                       UCB POINTER              Y02080
EXWKA    EQU   11                       EXTEND WORK AREA POINTER Y02080
REG12    EQU   12                       EQUATE FOR REGISTER 12   Y02080
RCODE    EQU   13                       EXTEND CODE REGISTER     Y02080
REG13    EQU   13                       EQUATE FOR REGISTER 13   Y02080
RETNREG  EQU   14
REG15    EQU   15                       EQUATE FOR REGISTER 15   Y02080
*
* OTHER EQUATES
*
DOSBIT   EQU   X'80'                    DOS VTOC BIT             S21040
K0       EQU   0                        CONSTANT OF 0            Y02080
K2       EQU   2                        CONSTANT OF 2            Y02080
K3       EQU   3                        CONSTANT OF 3            S21040
K4       EQU   4                        CONSTANT OF 4            Y02080
K7       EQU   7                        CONSTANT OF 7            S21040
K8       EQU   8                        CONSTANT OF 8            S21040
K12      EQU   12                       CONSTANT OF 12           Y02080
DIRFBIT  EQU   X'04'                    VTOC INTERRUPT BIT       O19117
DOSSTKPK EQU   X'10'                    DOS STACKED PACK         Y02072
STACKERR EQU   X'08'                    DOS STACKED PACK FORMAT  Y02072
CC       EQU   X'40'                    CCW COMMAND CHAINING BIT Y02080
SAMEVOL  EQU   X'01'                    EXTENDING ON SAME VOLUME M0130
CATALOG  EQU   X'02'                    EXTENDING AN OS CATALOG  YM3047
NEWVOL   EQU   X'04'                    EXTENDING ON NEW VOLUME  M0130
VSAMID   EQU   X'81'                    ENTRY FROM VSAM          Y02080
RPSMSK   EQU   X'10'                    INDICATES RPS DEVICE     A53147
*                                       IN UCBTBYT2              A53147
*
* THIS SECTION PREPARES TO SAVE THE CALLER'S REGISTERS 2 AND 4 - 12
* IN THE SVRB EXTENDED SAVE AREA.
*
BEGIN    EQU   *                                                 M0130
         STC   RCODE,DXEXTSW            SAVE THE ENTRY CODE      Y02080
         LA    RCORE,0(RCORE)           ZERO HIGH ORDER BYTE     Y02080
*                                         SO CHANNEL PROGRAM WILL
*                                         BE RELOCATED CORRECTLY
         L     REG15,CVTPTR             LOAD CVT ADDRESS         Y02080
         USING CVT,REG15                BASE FOR CVT             Y02080
         L     REG15,CVTTCBP            LOAD TCB DW ADDRESS      Y02080
         L     REG15,K4(,REG15)         LOAD TCB ADDRESS         Y02080
         L     RETNREG,0(,REG15)        LOAD SVRB ADDRESS        Y02080
         MODESET EXTKEY=ZERO            SWITCH TO KEY 0 BEFORE   Y02082X
                                        SAVING REGISTERS IN SVRB Y02082
*
* THIS SECTION OBTAINS THE EXTEND WORK AREA AND SAVES THE REGISTERS.
*
         IECRES GET,PREFIX=FIRST,LV=EWALNGTH,ID=EXWA,            Y02080X
               STM=(REG2,REG12,96(RETNREG))  OBTAIN WORK AREA    Y02080
*                                       IGG0553A IS NOW RUNNING  Y02082
*                                       IN DATAMGT KEY AFTER     Y02082
*                                       ISSUING THE IECRES GET   Y02082
         LR    EXWKA,REG1               SET UP BASE REGISTER     Y02080
         MVC   WTGMODNM,FIRSTLD         MOVE IN MODULE NAME      YM5371
*
         CLI   DXEXTSW,CATALOG          TEST IF ENTRY FROM OS    YM3047X
                                        CVOL CATALOG             YM3047
         BE    PRNTNAME                 BRANCH IF YES            YM3047
         CLI   DXEXTSW,VSAMID           TEST IF ENTRY FROM VSAM  Y02080
         BNE   INITRRPL                 BRANCH IF NOT            Y02080
PRNTNAME EQU   *                        PRINT THIS MODULE'S NAME YM3047
         IECRES LOAD,EXTPR=(EXWKA),MODNM=FIRSTLD,BRANCH=NO       Y02080X
                                        LET OPTIONAL TRACE PRINT Y02080X
                                        THIS MODULE'S NAME       Y02080
*
INITRRPL EQU   *                        INITIALIZE RECOVERY RTN  Y02080
         L     REG1,IECRRPRM            RECOVERY RTN LIST ADDR   Y02144
         USING RRPLIST,REG1             PARM LIST ADDRESSABILITY Y02144
         OI    RRFUNCTN,RRFEXTND        SET EXTEND FUNCTION BIT  Y02144
         ST    RUCB,RRUCBPTR            SAVE UCB ADDRESS         Y02144
         DROP  REG1                                              Y02144
*
         XC    ECB,ECB                  SET ECB TO ZERO          Y02144
         MVC   DEB+38(4),ECB            SET BEGINNING ADDRESS TO ZEROS
         MVC   DEB+42(6),ALLFS          SET END OF DEB EXTENT
*
* THIS SECTION INTIALIZES FOR RPS PROCESSING.
*
         TM    UCBTBYT2,RPSMSK          EXTENDING ON RPS DEVICE  A53147
         BNO   NORPS                    NO, BYPASS RPS           A53147
*                                       INITIALIZATION           A53147
         LA    REG9,DEB                 LOAD PTR TO DEB          Y02080
         IECRPS RDEB=REG9,WKREG1=REG8,EXTPR=EXWKA  INITIALIZE    YM3997X
                                        FOR RPS PROCESSING       YM3997
*
         MVC   WTGMODNM,FIRSTLD         RESTORE MODULE NAME      YM5371
         CLI   DXEXTSW,CATALOG          TEST IF ENTRY FROM OS    YM6546X
                                        CVOL CATALOG             YM6546
         BE    NORPS                    BRANCH IF YES            YM6546
         MODESET EXTKEY=DATAMGT         RETURN TO DATAMGT KEY    YM6546X
                                        IF EOV OR VSAM CATALOG   YM6546
*
* THIS SECTION USES THE RESIDENT CONVERT ROUTINE TO CALCULATE VTOCADR.
*
NORPS    EQU   *                                                 A53147
         STM   REG9,REG13,IECREGSV+K12  SAVE REGISTERS           Y02080
         LA    REG2,SEEK                POINT TO CONVERSION AREA Y02080
         L     REG0,SRTEFSCT            LOAD TTR FROM UCB        Y02080
         MVC   MINOR(6),SRTEVOLI       SAVE VOLUME SERIAL NUMBER   AAAA
         L     REG15,CVTPTR             LOAD CVT ADDRESS         Y02080
         L     REG15,CVTPCNVT           LOAD CONVT ROUTINE ADDR  Y02080
         LA    REG1,DEB                 SET POINTER TO DEB       Y02080
         LR    ALTWKA,EXWKA             SAVE EXTEND W/A ADDRESS  Y02080
         BALR  RETNREG,REG15            GO TO CONVERT ROUTINE    Y02080
         LM    REG9,REG13,IECREGSV+K12-EXTNDWKA(ALTWKA)  RESTORE Y02080
         MVC   VTOCADR(5),SEEK+3   SET UP VTOC ADDRESS
*
* THIS SECTION RELOCATES THE CHANNEL PROGRAM TO READ IN THE
* FORMAT 4 DSCB AND TO PERFORM A DUPLICATE NAME SEARCH.
*
         LR    REG2,RDEB                SAVE THE DEB ADDRESS     Y02080
         LM    REG5,RUCB,CHANPROG       LOAD FIRST 3 CCW'S       Y02080
         ALR   REG5,EXWKA                                        Y02080
         ALR   REG7,RCORE                                        Y02080
         ALR   REG9,RCORE                                        Y02080
         STM   REG5,RUCB,DXCCW1         STORE FIRST 3 CCW'S      Y02080
         LM    REG5,RUCB,CCW4           LOAD NEXT 3 CCW'S        Y02080
         ALR   REG5,EXWKA                                        Y02080
         ALR   REG7,RCORE                                        Y02080
         ALR   REG9,RCORE                                        Y02080
         STM   REG5,RUCB,DXCCW4         STORE NEXT 3 CCW'S       Y02080
         LM    REG5,RUCB,CCW7           LOAD NEXT 3 CCW'S        Y02080
         ALR   REG5,RCORE                                        Y02080
         ALR   REG7,RCORE                                        Y02080
         ALR   REG9,RCORE                                        Y02080
         STM   REG5,RUCB,DXCCW7         STORE NEXT 3 CCW'S       Y02080
         LM    REG5,RUCB,CCW10          LOAD LAST 3 CCW'S        Y02080
         ALR   REG5,RCORE                                        Y02080
         ALR   REG7,RCORE                                        Y02080
         ALR   REG9,EXWKA                                        Y02080
         STM   REG5,RUCB,DXCCW10        STORE LAST 3 CCW'S       Y02080
         LR    RDEB,REG2                RESTORE DEB ADDRESS      Y02080
*
* THIS SECTION PERFORMS ENQ ON CURRENT VTOC
*
         MVC   MAJOR(8),VTOCNAME        MOVE SYSVTOC TO WORK AREA
         MVI   ENQAREA,X'FF'            SET START OF TABLE FOR ENQ
         SR    REG1,REG1                ZERO REGISTER            Y02080
         STH   REG1,ENQAREA+K2          CLEAR FOR RESERVE MACRO  Y02080
         RESERVE (MAJOR,MINOR,E,6,SYSTEMS),                      YM3022X
               MF=(E,ENQAREA),UCB=DXDEBUCB                       Y02080
*
         OI    DSMADTB2,DSMVTOCR        SET VTOC ENQ'ED SWITCH   Y02144
*
         TM    DXEXTSW,SAMEVOL          EXTENDING ON SAME VOLUME Y02080
         BZ    EXECUT                   BRANCH IF NOT            Y02080
         LA    REG15,0(RDEB)            LOAD DEB ADDRESS         Y02080
         SH    REG15,K16                SET PTR TO DEB PREFIX    Y02080
         MVC   COUNT,K3(REG15)          OBTAIN F1 CCHHR FROM DEB Y02080
         NI    DXCCW4+K4,X'FF'-CC       ELIMINATE F1 SEARCH      Y02080
*
EXECUT   EQU   *                        BRANCH LABEL             Y02080
         EXCP  IOB                      EXECUTE CHANNEL PROGRAM  Y02080
         WAIT  1,ECB=ECB
         TM    ECB,X'20'                CHECK FOR PERMANENT I/O ERROR
         BZ    ERREXIT                  BRANCH IF I/O ERROR      M0130
         TM    DXCCW3+4,X'40'           LAST I/O WAS FOR         O19117
         BZ    WRCOMP                     WRITING F4             O19117
         XI    DS4VTOCI,DIRFBIT         SET/RESET DIRF BIT       O19117
         TM    DS4VTOCI,DOSSTKPK        PACK IN STACKED FORMAT?  Y02072
         BO    STKERR                   YES - ERROR              Y02072
         TM    DS4VTOCI,DIRFBIT         TEST RESULTS             O19117
         BZ    SKIPWR                   BR IF PREVIOUS INTERRUPT O19117
         MVI   DXCCW3,X'05'             SET WR DATA CMMD         O19117
         MVI   DXCCW3+4,X'00'           RESET CMMD CHAIN         O19117
         B     EXECUT                   GO WRITE BACK F4         O19117
WRCOMP   EQU   *                                                 O19117
         MVI   DXCCW3,X'06'             RESTORE RD DATA CMMD     O19117
         MVI   DXCCW3+4,X'40'           RESTORE CMMD CHAIN       O19117
SKIPWR   EQU   *                                                 O19117
         OI    DXCCW4+4,X'40'   TURN ON COMM CHAIN FLAG            MC1E
         TM    DXEXTSW,SAMEVOL          EXTENDING ON SAME VOLUME Y02080
         BO    GOAHEAD   YES,CCHHR ALREADY SET UP                  MC1E
         CLI   COUNT+4,X'00'            TEST FOR DUPLICATE NAME
         BE    GOAHEAD                  NO, SKIP NEW VOL TEST  @Z40CSRC
         TM    DXEXTSW,NEWVOL           EXTENDING ON NEW VOL   @Z40CSRC
         BO    ERREXIT                  BRANCH IF NEW VOLUME   @Z40CSRC
*
*   UPDATE CCHHR FOR A SYSCTLG (CVOL) F1 DSCB
*
         SR    REG12,REG12              CLEAR REGISTER         @Z40CSRC
         IC    REG12,COUNT+K4           GET R OF F1 CCHHR      @Z40CSRC
         BCT   REG12,STORER             DECR AND TEST FOR 0    @Z40CSRC
         IC    REG12,DS4DEVDT           SET TO LAST REC ON TRK @Z40CSRC
STORER   EQU   *                        UPDATE F1 CCHHR        @Z40CSRC
         STC   REG12,COUNT+K4           SET UP R OF F1 CCHHR   @Z40CSRC
*
GOAHEAD  EQU   *                                                 S21040
         TM    DS4VTOCI,DOSBIT          TEST FOR DOS VOL         S21040
         BO    DOSPAK                   BRANCH IF DOS BIT SET    Y02078
         TM    DS4VTOCI,DIRFBIT         TEST IF DIRF BIT WAS     Y02078
*                                       PREVIOUSLY SET           Y02078
         BO    PASTDOS                  BRANCH IF NOT            Y02078
DOSPAK   EQU   *                                                 S21040
         LA    REG9,DOSLOAD             POINT TO IGG0553F        Y02080
         B     PREPXCTL                 GO XCTL                  S21040
PASTDOS  EQU   *                                                 S21040
         LA    REG9,NEXTLOAD            POINT TO IGG0553G        Y02080
         B     PREPXCTL                                          S21040
STKERR   EQU   *                        BRANCH LABEL             Y02072
         OI    DXEXTSW,STACKERR         TURN ON UNCONVERTIBLE    Y02072
*                                       VTOC INDICATOR           Y02072
*
* THIS SECTION BRANCHES TO ANOTHER MODULE.
*
ERREXIT  EQU   *                                                 M0130
         LA    REG9,LASTLOAD            POINT TO IGG0553E        Y02080
         SR    RCODE,RCODE        CLEAR ERROR REG          S21040
         IC    RCODE,DXEXTSW            PICK UP ENTRY CODE       Y02080
PREPXCTL EQU   *                                                 M0130
         IECRES LOAD,EXTPR=(EXWKA),MODNM=(REG9),BRANCH=DIRECT    Y02080
*
* CHANNEL PROGRAM
*
         DS    0F                                                M0130
CHANPROG EQU   *
*CCW1
         DC    X'31'                    SEARCH EQUAL ID FOR VTOC DSCB
         DC    AL3(0+VTOCADR-EXTNDWKA)  SEARCH ARG ADDR          Y02080
         DC    X'4000'
         DC    H'5'
*CCW2
         DC    X'08'                    TIC BACK TO SEARCH
         DC    AL3(0+DXCCW1-DXLBL)      TIC ADDR                 Y02080
         DC    F'0'
*CCW3
         DC    X'06'                    READ DATA FOR VTOC DSCB
         DC    AL3(0+DS4IDFMT-DXLBL)    BUFFER ADDR              Y02080
         DC    X'4000'
         DC    H'96'
CCW4     EQU   *                        CCW4                     Y02080
         DC    X'92'                    READ COUNT OF FORMAT 5
         DC    AL3(EDADSMAD-EXTNDWKA)   BUFFER ADDR              Y02080
         DC    X'6000'
         DC    H'5'
*CCW5
         DC    X'F1'                    SEARCH EQ OR HIGH FORMAT 1
         DC    AL3(0+DS4HPCHR-DXLBL)    SEARCH ARG ADDR          Y02080
         DC    X'4000'
         DC    H'5'
*CCW6
         DC    X'08'                    TIC TO CCW10
         DC    AL3(DXCCW10-DXLBL)       TIC ADDR                 Y02080
         DC    F'0'
CCW7     EQU   *                        CCW7                     Y02080
         DC    X'A9'
         DC    AL3(JFCBDSNM-DXLBL)      SEARCH FOR THIS NAME     Y02080
         DC    X'6000'
         DC    H'44'
*CCW8
         DC    X'06'                    READ DATA OF THE LAST   SA48172
         DC    AL3(0+DS4IDFMT-DXLBL)    FORMAT 1 WITH THE SKIP   Y02080
         DC    X'3000'                  BIT SET IN ORDER TO END SA48172
         DC    H'96'                    THE CHANNEL PROGRAM.    SA48172
*CCW9
         DC    X'08'                    TIC TO CCW12
         DC    AL3(DXCCW12-DXLBL)       TIC ADDR                 Y02080
         DC    F'0'
CCW10    EQU   *                        CCW10                    Y02080
         DC    X'A9'                    SEARCH EQ KEY FOR DATA SET
         DC    AL3(JFCBDSNM-DXLBL)      SEARCH ARG ADDR          Y02080
         DC    X'6000'
         DC    H'44'
*CCW11
         DC    X'08'                    TIC TO CCW5
         DC    AL3(DXCCW5-DXLBL)        TIC ADDR                 Y02080
         DC    F'0'                                              S21040
*CCW12
         DC    X'12'                    READ COUNT - CCHHR FOR F1+1
         DC    AL3(0+COUNT-EXTNDWKA)    BUFFER ADDR              Y02080
         DC    X'2000'
         DC    H'5'
*
* CONSTANTS
*
K16      DC    H'16'                                             S21040
ALLFS    DC    X'FFFFFFFF7FFF'          END OF DEB EXTENT
VTOCNAME DC    C'SYSVTOC '              ENQ MAJOR NAME
*
* TABLE OF MODULE NAMES AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LASTLOAD,IGG0553E,DOSLOAD,IGG0553F,        Y02080X
               NEXTLOAD,IGG0553G,FIRSTLD,IGG0553A,               YM3997X
               RPS19EK,IGG019EK),                                YM3997X
               SVC=055,LENGTH=,BRT=YES                           Y02080
         SPACE 2                                                 Y02080
         IECDSECS CVT,RRPL,UCB,EXPAND=YES                        Y02144
WORKAREA IECEXTWA EP,ADT=YES            EXTEND WORK AREA         Y02144
VTOCADR  EQU   EVTOCADR                 EQUATE FOR VTOCADR       Y02080
COUNT    EQU   ECOUNT                   EQUATE FOR COUNT         Y02080
         EJECT                                                   Y02080
EOVWKA   DSECT                          EOV WORK AREA            Y02080
         IECDSECT
         EJECT                                                   Y02080
         ORG   DXLBL
         IECSDSL1 (4)
ECB      EQU   DXECB
DEB      EQU   DXDEB
IOB      EQU   DXIOB
SEEK     EQU   DXDAADDR                                          M0130
ENQAREA  EQU   DXLBL                    ENQ PARAMETER LIST       Y02080
MAJOR    EQU   ENQAREA+16               MAJOR NAME ADDRESS       Y02080
MINOR    EQU   ENQAREA+24               MINOR NAME ADDRESS       Y02080
         END
