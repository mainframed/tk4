         TITLE 'IGG0325U - BUILD FORMAT 6 DSCBS'                 Y02080
IGG0325U CSECT
*
* MODULE NAME = IGG0325U
*
* DESCRIPTIVE NAME = BUILD FORMAT 6 DSCB'S
*
* COPYRIGHT = NONE
*
* CHANGE ACTIVITY = SEE BELOW
*                                                                     *
*          RELEASE 21 DELETIONS                                       *
*1190340000,342000-344000,352000,373000-374000,383000,385000-    M0124
*1190394000,396000-407000,409000,412000-435000,437000-439000,    M0124
*1190446000,449000,451000-453000,460000                          M0124
*1190069000,364000-365000                                        S21040
*          RELEASE 22 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000000100-001000,006000-010000,065000,067000-069000,077000,    Y02080
*0000112000-114000,122000,150000,152000-153000,156000,164000,    Y02080
*0000167000,173000,176000,228000,230000,232000,242000-243000,    Y02080
*0000249000,252000,274000-276000,283000-285000,303000,315000-    Y02080
*0000316000,318000,327000,346000-348000,350000-352000,356000-    Y02080
*0000359000,359400,360000-376000,378000-450000,456000-462000,    Y02080
*0000464000,466000-468000,470000,472000-474000,476000-538000     Y02080
*0000025000-029000,033000-036000,045000-049000,052000-055000,    Y02078
*0000095000,177000-179000,193000,247000,267000-268000,463000     Y02078
*                                                                     *
*STATUS CHANGE LEVEL 002
*                                                                     *
*                                                                     *
*                                                                     *
* FUNCTION/OPERATION  THIS MODULE BUILDS A NEW FORMAT 6 EXTENT OR     *
* INCREMENTS THE DATA SET COUNT OF AN EXISTING FORMAT 6 ENTRY.        *
*                                                                     *
* ENTRY POINTS                                                        *
*        IGG0325U- FROM IGG0325Q TO BUILD FORMAT 6 ENTRIES            *
*                  FROM IGG0325V TO INCREMENT THE DATA SET COUNT      *
*                                AND WRITE OUT THE F6                 *
*                                                                     *
* INPUT  FROM IGG0325Q                                                *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1     *
*              OR 3 DSCB THAT IS BEING PROCESSED IN 'DSCBF1', AND     *
*              THE FIRST FORMAT 6 DSCB IN 'DSCBF5'.  'CCHHRSAV'       *
*              CONTAINS THE CCHHR OF THE FORMAT 1 OR FORMAT 3 DSCB.   *
*              REGISTER 6 WILL POINT TO THE RTA/RTA+1 OF THE DATA     *
*              SET AND REGISTER 8 WILL POINT TO THE FIRST F6 EXTENT.  *
*              'COUNT' CONTAINS THE CCHHR OF THE NEXT DSCB TO BE READ.*
*                                                                     *
*        FROM IGG0325V                                                *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1 OR  *
*              3 DSCB BEING PROCESSED IN 'DSCBF1', AND THE FORMAT 6   *
*              DSCB CURRENTLY BEING COMPARED IN 'DSCBF5'.  'CCHHRSAV' *
*              CONTAINS THE CCHHR OF THE FORMAT 1 OR FORMAT 3 DSCB.   *
*              'COUNT' CONTAINS THE CCHHR OF THE NEXT DSCB TO BE READ.*
*              'DADSMADR' CONTAINS THE CCHHR OF THE F6 IN 'DSCBF5'.   *
*              REGISTER 6 WILL POINT TO THE RTA/RTA+1 OF THE DATA SET,*
*              REGISTER 7 WILL CONTAIN THE NUMBER OF THE EXTENT BEING *
*              COMPARED, REGISTER 8 WILL POINT TO THE CURRENT F6      *
*              EXTENT, AND REGISTER 10 WILL CONTAIN THE NUMBER OF     *
*              EXTENTS IN THE LAST F6. REGISTER 1 WILL BE ZERO TO     *
*              INDICATE REENTRY FROM IGG0325V.                        *
*                                                                     *
* OUTPUT TO IGG0325Q                                                  *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1     *
*              OR 3 DSCB BEING PROCESSED IN 'DSCBF1', AND THE FIRST   *
*              FORMAT 6 DSCB IN 'DSCBF5'.  'CCHHRSAV' CONTAINS THE    *
*              CCHHR OF THE FORMAT 1 OR 3 DSCB.  'COUNT' CONTAINS     *
*              THE CCHHR OF THE NEXT DSCB TO BE READ.  REGISTER 1     *
*              WILL BE ZERO TO INDICATE REENTRY FROM IGG0325U.        *
*                                                                     *
*        TO IGG0325V                                                  *
*              REGISTER 13 WILL POINT TO THE ALLOCATE WORK AREA,      *
*              WHICH WILL CONTAIN THE FORMAT 4 DSCB, THE FORMAT 1 OR  *
*              3 DSCB BEING PROCESSED IN 'DSCBF1', AND THE FORMAT     *
*              DSCB CURRENTLY BEING COMPARED IN 'DSCBF5'.  'CCHHRSAV' *
*              CONTAINS THE CCHHR OF THE FORMAT 1 OR FORMAT 3 DSCB.   *
*              'COUNT' CONTAINS THE CCHHR OF THE NEXT DSCB TO BE READ.*
*              'DADSMADR' CONTAINS THE CCHHR OF THE F6 IN 'DSCBF5'.   *
*              REGISTER 6 WILL POINT TO THE RTA/RTA+1 OF THE DATA SET,*
*              REGISTER 7 WILL CONTAIN THE NUMBER OF THE EXTENT BEING *
*              COMPARED, REGISTER 8 WILL POINT TO THE CURRENT F6      *
*              EXTENT, AND REGISTER 10 WILL CONTAIN THE NUMBER OF     *
*              EXTENTS IN THE LAST F6.                                *
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*        EXCP (0)                                                     *
*        WAIT (1)                                                     *
*                                                                     *
* EXITS NORMAL BRANCH TO IGG0325Q TO READ THE NEXT DSCB IN THE VTOC   *
*              BRANCH TO IGG0325V TO TEST FOR OVERLAPPING F6 EXTENTS  *
*       ERROR  BRANCH TO IGG0325T                                     *
*                                                                     *
*       ERROR CODES ISSUED BY THIS MODULE -                           *
*                                                                     *
*       0C - PERMANENT I/O ERROR                                      *
*                                                                     *
* TABLES/WORKAREAS  DADSM WORKAREA                                    *
*                                                                     *
* ATTRIBUTES  REENTRANT                                               *
*                                                                     *
* NOTES - THIS MODULE WAS SPLIT FROM IGG0325Q IN RELEASE 20.          *
*                                                                     *
*                                                                     *
REGZERO  EQU   0                        WORK REGISTER
REGONE   EQU   1                        WORK REGISTER
REENTRY  EQU   1                        REENTRY FROM IGG0325V
REGTWO   EQU   2                        WORK REGISTER
REGTHREE EQU   3                        WORK REGISTER
FORMATCT EQU   4                        MAXIMUM NO OF EXTENTS IN DSCB
EXTPTR   EQU   5                        PTR TO EXTENT BEING CONVERTED
RTAPTR   EQU   6                        PTR TO CONVERTED EXTENT
NEXTPTR  EQU   6                        PTR TO NEXT F6 EXTENT
REGSIX   EQU   6                        WORK REGISTER
F6EXTCTR EQU   7                        CTR OF NO OF EXTENTS IN F6
RERRPASS EQU   8                        ERROR CODE REGISTER
F6PTR    EQU   8                        ADDR OF EXTENT IN F6
RTNREG2  EQU   9                        BRANCH REGISTER
LSTF6CTR EQU   10                       NO. OF EXTENTS IN LAST F6
BASEREG  EQU   12                       BASE REGISTER
RWKAREA  EQU   13                       WORK AREA BASE REGISTER
RETRNREG EQU   14                       BRANCH REGISTER
RCVT     EQU   15                       CVT BASE REGISTER
*                                                                     *
* OTHER EQUATES                                                       *
*                                                                     *
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
K4       EQU   4                        CONSTANT OF 4            Y02080
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
C25      EQU   25                       VALUE 25
C26      EQU   26                       VALUE 26
C32      EQU   32                       VALUE 32
C140     EQU   140                      VALUE 140
NOCC     EQU   X'00'                    NO COMMAND CHAINING      Y02080
CC       EQU   X'40'                    COMMAND CHAINING BIT     Y02080
SLI      EQU   X'20'                    SUPPRESS INCORRECT LNGTH Y02080
SKIP     EQU   X'10'                    SUPPRESS TRANSFER BIT    Y02080
GOODIO   EQU   X'20'                    TEST VALUE FOR SUCCESSFUL I/O
ERRCD    EQU   X'0C'                    ERROR CODE FOR UNSUCCESSFUL I/O
F6INDIC  EQU   X'06'                    F6 DSCB INDICATOR
READCOMD EQU   X'0E'                    READ COMMAND CODE
*                                                                     *
         BALR  BASEREG,ZERO             INITIALIZE BASE REGISTER
         USING *,BASEREG
         USING ALLOCWKA,RWKAREA         BASE FOR ALLOCATE W/A    Y02080
         USING CVT,RCVT                 BASE FOR CVT
*
         LTR   REENTRY,REENTRY          IS THIS REENTRY
         BE    INCDSCNT                 BRANCH IF YES
         LA    F6EXTCTR,ONE             INIT NO. OF EXTENT BEING COMP
*
* COMPARE THE JUST CONVERTED RTA/RTA+1 TO THE F6 EXTENT.
*
COMPARE  EQU   *
         CLC   ZERO(TWO,RTAPTR),ZERO(F6PTR) COMPARE LOWER XTENTS
         BE    NEWDSCNT                 BRANCH IF EQUAL
         BL    NEWENTRY                 BRANCH TO CREATE NEW ENTRY
*
* TEST IF THIS SPLIT CYLINDER EXTENT LIES WITHIN THE F6 EXTENT.
* IF NOT, GO TEST IT AGAINST THE NEXT F6 EXTENT.
*
         CLC   ZERO(TWO,RTAPTR),TWO(F6PTR) TEST FOR NO OVERLAP
         BNL   NOLAP                    BRANCH IF NO OVERLAP
         CLC   TWO(TWO,RTAPTR),TWO(F6PTR) TEST IF THIS EXTENT
*                                       LIES WITHIN F6 EXTENT
         BNH   INCDSCNT                 BRANCH IF YES
         MVC   TWO(TWO,F6PTR),TWO(RTAPTR) MOVE IN NEW UPPER EXTENT
         B     XCTL325V                 TEST FOR F6 OVERLAPPING
NOLAP    EQU   *
         LA    REGTHREE,C26             GET MAX. NO. EXTENTS IN F6
         CR    F6EXTCTR,REGTHREE        HAS LAST EXTENT IN F6 BEEN
*                                       COMPARED
         BL    UPDATPTR                 BRANCH IF NO
         CLI   DS6PTRDS+FOUR,ZERO       IS THIS THE LAST F6      Y02080
         BE    NEWF6                    BRANCH IF YES
         MVC   DADSMADR,DS6PTRDS        UPDATE PTR TO PRESENT F6 Y02080
         MVC   SEEKCYL(FIVE),DS6PTRDS   MOVE ADDR OF F6 TO READ  Y02080
*                                       TO CHANNEL PROGRAM
         BAL   RTNREG2,READF6           READ NEXT F6
         LA    F6PTR,DS6AVEXT           POINT TO FIRST F6 EXTENT Y02080
         LA    F6EXTCTR,ONE             INITIALIZE COUNTER OF EXTENTS
         B     COMPARE                  GO BEGIN COMPARISON
*
* WRITE THE LAST F6, FIND THE NEXT HOLE IN THE VTOC, AND BUILD
* A NEW F6.
*
NEWF6    EQU   *
         MVC   DS6PTRDS,FMTINAD         MOVE ADDR OF NEW F6      Y02080
*                                       TO PREVIOUS F6           Y02080
         BAL   RTNREG2,WRITEF6          WRITE LAST F6
         XC    DSCBF5(C140),DSCBF5      CLEAR F6 AREA
         LA    F6PTR,DS6AVEXT           POINT TO FIRST EXTENT    Y02080
         BAL   RTNREG2,NEWEXTST         MOVE IN NEW EXTENT
WRITENEW EQU   *
         LA    LSTF6CTR,ONE             INIT CTR OF EXTENTS IN LAST F6
         MVC   DADSMADR(FIVE),FMTINAD   UPDATE PTR TO PRESENT F6
         BAL   RTNREG2,WRITEF6          WRITE NEW F6
         MVC   SAVEPT,COUNT             SAVE ADDRESS OF NEXT     Y02080
*                                       DSCB TO BE READ          Y02080
         BAL   RTNREG2,FINDHOLE         FIND NEXT HOLE
         MVC   FMTINAD(FIVE),COUNT      INITIALIZE NEXT HOLE POINTER
         MVC   COUNT,SAVEPT             RESTORE ADDRESS OF NEXT  Y02080
*                                       DSCB TO BE READ          Y02080
RD1STF6  EQU   *
         MVC   SEEKCYL(FIVE),DS4F6PTR   MOVE ADDR OF FIRST F6 TO
*                                       CHANNEL PROGRAM
         CLC   DADSMADR,DS4F6PTR        TEST IF 1ST F6 IN CORE   Y02078
         BE    XCTL325Q                 IF YES, DO NOT REREAD    Y02078
         BAL   RTNREG2,READF6           READ FIRST F6
         MVC   DADSMADR(FIVE),DS4F6PTR  UPDATE PTR TO PRESENT F6
         B     XCTL325Q                 XCTL TO IGG0325Q
*
* UPDATE THE POINTER TO THE F6 EXTENT AND INCREMENT THE COUNTER
* OF EXTENTS.
*
UPDATPTR EQU   *
         LA    F6PTR,FIVE(F6PTR)        POINT TO NEXT EXTENT
         LA    F6EXTCTR,ONE(F6EXTCTR)   UPDATE COUNTER OF EXTENTS
         CLC   ZERO(TWO,F6PTR),ZEROS    IS THIS EXTENT UNUSED    Y02078
         BNE   COMPARE                  BRANCH IF NO
         LA    LSTF6CTR,ONE(LSTF6CTR)   INCREMENT CTR OF EXTENTS
         BAL   RTNREG2,NEWEXTST         MOVE IN NEW EXTENT
GOWRTF6  EQU   *                        BRANCH LABEL             Y02078
         BAL   RTNREG2,WRITEF6          WRITE F6
         B     RD1STF6                  GO TO READ FIRST F6
*
* CREATE A NEW F6 EXTENT IF THE NEW EXTENT DOES NOT OVERLAP THE
* PRESENT F6 EXTENT.
*
NEWENTRY EQU   *
         CLC   TWO(TWO,RTAPTR),ZERO(F6PTR) TEST FOR OVERLAPPING
         BNH   NEWONE                   BRANCH IF NO OVERLAP
         MVC   ZERO(TWO,F6PTR),ZERO(RTAPTR) MOVE IN NEW LOWER EXTENT
         CLC   TWO(TWO,RTAPTR),TWO(F6PTR) COMPARE UPPER EXTENTS
         BNH   INCDSCNT                 BRANCH IF LOW OR EQUAL
         MVC   TWO(TWO,F6PTR),TWO(RTAPTR) MOVE IN NEW UPPER EXTENT
         B     XCTL325V                 TEST FOR F6 OVERLAPPING
NEWONE   EQU   *
         MVC   DADSMTBL(FIVE),F5EXT16   SAVE LAST EXTENT OF F6
         LA    REGONE,FIVE              GET ADDRESS DECREMENT
         LA    REGTHREE,F5EXT15
MOVE     EQU   *
         MVC   FIVE(FIVE,REGTHREE),ZERO(REGTHREE) MOVE A FIELD
         CR    REGTHREE,F6PTR           HAVE ALL THE NECESSARY
*                                       FIELDS BEEN MOVED
         BE    SETUPEXT                 BRANCH IF YES
         SR    REGTHREE,REGONE          DECREMENT MOVE ADDRESS
         B     MOVE                     BRANCH TO MOVE ANOTHER FIELD
SETUPEXT EQU   *
         LA    LSTF6CTR,ONE(LSTF6CTR)   INCREMENT CTR OF EXTENTS
         BAL   RTNREG2,NEWEXTST         MOVE IN NEW SPLIT DATA SET
LASTWT   EQU   *
         BAL   RTNREG2,WRITEF6          WRITE F6
LASTF6CK EQU   *
         CLI   DS6PTRDS+FOUR,ZERO       IS THIS THE LAST F6      Y02080
         BE    LASTCK                   BRANCH IF YES
         MVC   SEEKCYL(FIVE),DS6PTRDS   MOVE ADDR OF NEXT F6 TO  Y02080
*                                       CHANNEL PROGRAM
         MVC   DADSMADR,DS6PTRDS        UPDATE PRESENT F6 PTR    Y02080
         BAL   RTNREG2,READF6           READ NEXT F6
         MVC   DADSMT5(FIVE),F5EXT16    SAVE LAST EXTENT FROM THIS F6
         LA    REGTHREE,C25             LOAD LOOP CONTROL
         LA    REGONE,FIVE              GET ADDRESS DECREMENT
         LA    REGTWO,F5EXT15
MOVE2    EQU   *
         MVC   FIVE(FIVE,REGTWO),ZERO(REGTWO) MOVE A FIELD
         SR    REGTWO,REGONE            DECREMENT ADDRESS
         BCT   REGTHREE,MOVE2           BRANCH IF MORE FIELDS TO MOVE
         MVC   DS6AVEXT(FIVE),DADSMTBL  MOVE IN OVERFLOW FIELD   Y02080
*                                       FROM EXPANDED F6         Y02080
         MVC   DADSMTBL(FIVE),DADSMT5
         B     LASTWT                   GO TO WRITE EXPANDED F6
LASTCK   EQU   *
         CLC   DADSMTBL(TWO),ZEROS      HAS LAST F6 OVERFLOWED   Y02078
         BE    RD1STF6                  BRANCH IF NOT
         MVC   DS6PTRDS,FMTINAD         MOVE ADDR OF NEW F6 TO   Y02080
*                                       PREVIOUS F6              Y02080
         BAL   RTNREG2,WRITEF6          WRITE LAST F6
         XC    DSCBF5(C140),DSCBF5      CLEAR F6 AREA
         MVC   DS6AVEXT(FIVE),DADSMTBL  MOVE IN OVERFLOW EXTENT  Y02080
         B     WRITENEW                 GO WRITE THE NEW F6
*
* INCREMENT THE DATA SET COUNT BY ONE.
*
NEWDSCNT EQU   *
         CLC   TWO(TWO,RTAPTR),TWO(F6PTR) COMPARE UPPER EXTENTS
         BNH   INCDSCNT                 BRANCH IF LOW OR EQUAL
         MVC   TWO(TWO,F6PTR),TWO(RTAPTR) MOVE IN NEW UPPER EXTENT
         B     XCTL325V                 TEST FOR F6 OVERLAPPING
INCDSCNT EQU   *
         SR    REGTWO,REGTWO            ZERO REGISTER
         IC    REGTWO,FOUR(F6PTR)       GET OLD DATA SET COUNT
         LA    REGTWO,ONE(REGTWO)       UPDATE DATA SET COUNT
         STC   REGTWO,FOUR(F6PTR)       SAVE NEW DATA SET COUNT
         B     GOWRTF6                  GO WRITE THE FORMAT 6    Y02078
*
* XCTL TO IGG0325Q TO READ THE NEXT DSCB.
*
XCTL325Q EQU   *
         MVC   SEEKCYL(FIVE),CCHHRSAV   RESTORE F1 OR F3 CCHHR   Y02078
         SR    REENTRY,REENTRY          ZERO REGISTER ONE
         LA    REGTWO,MOD325Q           POINT TO ID OF IGG0325Q  Y02080
         B     XCTLHERE                 BRANCH TO XCTL
*
* XCTL TO IGG0325V TO TEST IF THE SPLIT CYLINDER DATA SET EXTENT
* OVERLAPS ONE OR MORE F6 EXTENTS.
*
XCTL325V EQU   *
         LA    REGTWO,MOD325V           POINT TO ID OF IGG0325V  Y02080
         B     XCTLHERE                 BRANCH TO XCTL
*
* MOVE THE RTA/RTA+1 OF THE SPLIT CYLINDER DATA SET INTO THE F6
* AND INITIALIZE THE DATA SET COUNT TO ONE.
*
NEWEXTST EQU   *
         MVC   ZERO(FOUR,F6PTR),ZERO(RTAPTR) MOVE RTA/RTA+1
         LA    REGTWO,ONE
         STC   REGTWO,FOUR(F6PTR)       DATA SET COUNT SET TO 1
         BR    RTNREG2                  RETURN
*
* READ THE NEXT F6 DSCB.
*
READF6   EQU   *
         LA    REGONE,DSCBF5            GET ADDR OF F6 AREA
         ST    REGONE,CCW6              STORE F6 ADDR IN READ
         MVI   CCW6,READCOMD            RESTORE READ COMMAND CODE
         MVI   CCW6+K4,NOCC             UNCHAIN READ FROM RD CNT Y02080
         LA    REGONE,CCW4
         ST    REGONE,CHNPGADR          GET ADDR OF READ CHANNEL PROG
         BAL   RETRNREG,EXCHANPG        READ F6
         BR    RTNREG2                  RETURN
*
* FIND THE ADDRESS OF THE NEXT F0 DSCB.
*
FINDHOLE EQU   *
         LA    REGONE,CCW4              GET ADDR OF CHANNEL PROGRAM
*                                       TO BE EXECUTED
         ST    REGONE,CHNPGADR          STORE IN IOB
         MVI   CCW6+K4,CC+SKIP          SET SKIP BIT IN READ     Y02080
         MVI   CCW7+K4,CC+SLI           CHAIN RD COUNT TO SEARCH Y02080
*                                       KEY EQUAL
         MVI   CCW8+K4,CC+SLI           SET SLI BIT IN SKE       Y02080
         BAL   RETRNREG,EXCHANPG        EXECUTE THE CHANNEL PROGRAM
         BR    RTNREG2                  RETURN
*
* WRITE A FORMAT 6 DSCB.
*
WRITEF6  EQU   *
         LA    REGONE,CCW1
         ST    REGONE,CHNPGADR          GET ADDR WRITE CHANNEL PROGRAM
         MVI   CCW3+K4,NOCC             UNCHAIN READ FROM RD CNT Y02080
         MVC   SEEKCYL(FIVE),DADSMADR   MOVE IN ADDR OF F6
         MVI   DSCBF5,F6INDIC           PUT F6 INDICATOR IN RECORD
         BAL   RETRNREG,EXCHANPG        WRITE F6
         BR    RTNREG2                  RETURN
*
* THIS ROUTINE EXECUTES THE CHANNEL PROGRAM.
*
EXCHANPG EQU   *
         MVI   ECB,ZERO
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,GOODIO               WAS I/O SUCCESSFUL
         BCR   1,RETRNREG               RETURN IF I/O SUCESSFUL  M0124
         LA    RERRPASS,ERRCD           SET ERROR RETURN CODE
ERREXIT  EQU   *
         LA    REGTWO,LASTLOAD          POINT TO ID OF IGG0325T  Y02080
XCTLHERE EQU   *
        IECRES LOAD,EXTPR=(RWKAREA),MODID=(REGTWO),BRANCH=DIRECT Y02080
*
* CONSTANTS
*
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(MOD325Q,5Q,MOD325V,5V,LASTLOAD,5T),        Y02080X
               SVC=032,LENGTH=,BRT=YES                           Y02080
         EJECT                                                   Y02080
CVT      DSECT
         CVT                                                     Y02080
         EJECT                                                   Y02080
DSCBWKAR IECALLWA EP,F4,D2=(6)          ALLOCATE WORK AREA       Y02080
F5EXT15  EQU   DSCBF5+124               EXTENT 15 IN F5 DSCB
F5EXT16  EQU   DSCBF5+129               EXTENT 16 IN F5 DSCB
DADSMT5  EQU   DADSMTBL+5
CHNPGADR EQU   IOB+16                   ADDRESS CHANNEL PROGRAM IN IOB
SEEKCYL  EQU   SEEK+3
SAVEPT   EQU   TTRLL                    CCHHR SAVE AREA          Y02080
ZEROS    EQU   CCW2+4                   FULL WORD OF ZERO
         END
