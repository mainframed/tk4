         TITLE '*********  IDCDB02:  DEBUGGING AIDS  (SYMBOLIC DUMP)  **
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCDB02  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCDB02   75.077'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(8),0(@01)                                  0002
*                                      /*PATCH AREA FOR MAINTENANCE  */
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE 'UPRINT' MACRO ARGUMENTS                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0189
*        OUTLINE = BLANK;                                          0189
         MVI   OUTLINE+1,C' '                                      0189
         MVC   OUTLINE+2(118),OUTLINE+1                            0189
         MVI   OUTLINE,C' '                                        0189
*        OUTPTR = ADDR(OUTLINE);                                   0190
*                                                                  0190
         LA    @10,OUTLINE                                         0190
         LR    OUTPTR,@10                                          0190
*        DDSTRU = ADDR(PRNTLIST);                                  0191
         LA    @09,PRNTLIST                                        0191
         LR    DDSTRU,@09                                          0191
*        PRNTPTR = ADDR(PRNTLIST);                                 0192
         ST    @09,PRNTPTR                                         0192
*        PRNTLIST = '00'X;                                         0193
         XC    PRNTLIST+1(19),PRNTLIST+1                           0193
         MVI   PRNTLIST,X'00'                                      0193
*        DARGDBP = ADDR(OUTLINE);                                  0194
         ST    @10,DARGDBP(,DDSTRU)                                0194
*        DARGILP = LENGTH(OUTLINE);                                0195
*                                                                  0195
         LA    @10,120                                             0195
         STH   @10,DARGILP(,DDSTRU)                                0195
*        FSADDR = ADDR(FRMTLIST);                                  0196
         LA    @09,FRMTLIST                                        0196
         ST    @09,FSADDR                                          0196
*        FRMTLIST = '00'X;                                         0197
         XC    FRMTLIST+1(11),FRMTLIST+1                           0197
         MVI   FRMTLIST,X'00'                                      0197
*        FMTEOLF = '1'B;                                           0198
*        FMTBDF = '1'B;                                            0199
         OI    FMTEOLF(@09),B'10010000'                            0199
*        FMTILEN = LENGTH(OUTLINE);                                0200
         STH   @10,FMTILEN(,@09)                                   0200
*        FMTOCOL = 1;                                              0201
         MVC   FMTOCOL(2,@09),@CH00210                             0201
*        FMTOLEN = LENGTH(OUTLINE);                                0202
*                                                                  0202
         STH   @10,FMTOLEN(,@09)                                   0202
*        DDSTRU = ADDR(MSGLIST);                                   0203
         LA    @10,MSGLIST                                         0203
         LR    DDSTRU,@10                                          0203
*        MSGPTR = ADDR(MSGLIST);                                   0204
         ST    @10,MSGPTR                                          0204
*        MSGLIST = '00'X;                                          0205
*                                                                  0205
         XC    MSGLIST+1(19),MSGLIST+1                             0205
         MVI   MSGLIST,X'00'                                       0205
*        CALL AMSTP011(GDTTBL,PRTFILE,PRNTPTR,FSADDR);             0206
*                                                                  0206
         L     @10,@PC00001                                        0206
         ST    @10,@AL00001                                        0206
         LA    @09,@CF00108                                        0206
         ST    @09,@AL00001+4                                      0206
         LA    @09,PRNTPTR                                         0206
         ST    @09,@AL00001+8                                      0206
         LA    @09,FSADDR                                          0206
         ST    @09,@AL00001+12                                     0206
         MVI   @AL00001+12,X'80'                                   0206
         L     @15,GDTPRT(,@10)                                    0206
         LA    @01,@AL00001                                        0206
         BALR  @14,@15                                             0206
*        /************************************************************/
*        /*                                                          */
*        /*  SCAN THE DUMP LIST - PROCESS EACH DUMP LIST ELEMENT,    */
*        /*  FORMAT THE OUTPUT, AND PRINT THE SYMBOLIC DUMP UNTIL    */
*        /*  THE END OF THE DUMP LIST IS ENCOUNTERED                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0207
*        LINEFILL = 0;                                             0207
         SLR   @10,@10                                             0207
         LR    LINEFILL,@10                                        0207
*        ARRYINDX = 0;                                             0208
*                                                                  0208
         LR    ARRYINDX,@10                                        0208
*SCANLIST:DO LISTINDX = DUMPLIST BY ITEMSIZE WHILE(DUMPTERM^=TERMFLAG);
*                                                                  0209
SCANLIST L     @10,@PC00001+4                                      0209
         L     LISTINDX,DUMPLIST(,@10)                             0209
         B     @DE00209                                            0209
@DL00209 DS    0H                                                  0210
*          /**********************************************************/
*          /*                                                        */
*          /*  DETERMINE IF THE CURRENT DUMP LIST ELEMENT IS AN      */
*          /*  ARRAY HEADER OR AN INDIVIDUAL DUMP ELEMENT            */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0210
*          IF ITEMTYPE = TYPEARRY                                  0210
*            THEN                                                  0210
         CLI   ITEMTYPE(LISTINDX),C'A'                             0210
         BNE   @RF00210                                            0210
*              DO;                                                 0211
*                /****************************************************/
*                /*                                                  */
*                /*  PROCESS ARRAY HEADER                            */
*                /*                                                  */
*                /****************************************************/
*                                                                  0212
*                CALL ARRAYHDR;                                    0212
         BAL   @14,ARRAYHDR                                        0212
*              END;                                                0213
*            ELSE                                                  0214
*              DO;                                                 0214
         B     @RC00210                                            0214
@RF00210 DS    0H                                                  0215
*                /****************************************************/
*                /*                                                  */
*                /*  PROCESS INDIVIDUAL DUMP ELEMENT                 */
*                /*                                                  */
*                /****************************************************/
*                                                                  0215
*                CALL ITEMDUMP;                                    0215
         BAL   @14,ITEMDUMP                                        0215
*              END;                                                0216
*                                                                  0216
*          /**********************************************************/
*          /*                                                        */
*          /*  DETERMINE IF DUMP LIST PROCESSING IS CURRENTLY        */
*          /*  WITHIN AN ARRAY SPECIFICATION                         */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0217
*          IF ARRYINDX ^= 0                                        0217
*            THEN                                                  0217
@RC00210 LTR   ARRYINDX,ARRYINDX                                   0217
         BZ    @RF00217                                            0217
*INARRAY:      DO;                                                 0218
INARRAY  DS    0H                                                  0219
*                /****************************************************/
*                /*                                                  */
*                /*  DETERMINE IF THE END OF THE ARRAY ITEMS         */
*                /*  HAS BEEN REACHED (FOR ONE ITERATION)            */
*                /*                                                  */
*                /****************************************************/
*                                                                  0219
*                IF LISTINDX = ARRYEND                             0219
*                  THEN                                            0219
         CR    LISTINDX,ARRYEND                                    0219
         BNE   @RF00219                                            0219
*                    DO;                                           0220
*                      /**********************************************/
*                      /*                                            */
*                      /*  DETERMINE IF THE END OF THE ARRAY         */
*                      /*  HAS BEEN REACHED (FOR EVERY EXTENT)       */
*                      /*                                            */
*                      /**********************************************/
*                                                                  0221
*                      IF (ARRYSTRT -> ARRYEXT) = ARRYINDX         0221
*                        THEN                                      0221
         L     @10,ARRYSTRT                                        0221
         CH    ARRYINDX,ARRYEXT(,@10)                              0221
         BNE   @RF00221                                            0221
*                          ARRYINDX = 0;                           0222
         SLR   ARRYINDX,ARRYINDX                                   0222
*                        ELSE                                      0223
*                          DO;                                     0223
         B     @RC00221                                            0223
@RF00221 DS    0H                                                  0224
*                            /****************************************/
*                            /*                                      */
*                            /*  FURTHER ITERATIONS THROUGH ARRAY    */
*                            /*  REMAIN - INCREMENT THE ARRAY INDEX, */
*                            /*  AND RESET THE DUMP LIST INDEX TO    */
*                            /*  THE START OF THE ARRAY              */
*                            /*                                      */
*                            /****************************************/
*                                                                  0224
*                            ARRYINDX = ARRYINDX + 1;              0224
         AL    ARRYINDX,@CF00210                                   0224
*                            LISTINDX = ARRYSTRT;                  0225
         L     LISTINDX,ARRYSTRT                                   0225
*                          END;                                    0226
*                                                                  0226
*                    END;                                          0227
*                                                                  0227
@RC00221 DS    0H                                                  0228
*              END INARRAY;                                        0228
*                                                                  0228
@RF00219 DS    0H                                                  0229
*        END SCANLIST;                                             0229
*                                                                  0229
@RF00217 AL    LISTINDX,@CF00464                                   0229
@DE00209 CLI   DUMPTERM(LISTINDX),X'FF'                            0229
         BNE   @DL00209                                            0229
*        /************************************************************/
*        /*                                                          */
*        /*  PRINT THE FINAL OUTPUT LINE OF SYMBOLIC DUMP ITEMS      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0230
*        CALL AMSTP011(GDTTBL,PRTFILE,PRNTPTR,FSADDR);             0230
*                                                                  0230
         L     @10,@PC00001                                        0230
         ST    @10,@AL00001                                        0230
         LA    @15,@CF00108                                        0230
         ST    @15,@AL00001+4                                      0230
         LA    @15,PRNTPTR                                         0230
         ST    @15,@AL00001+8                                      0230
         LA    @15,FSADDR                                          0230
         ST    @15,@AL00001+12                                     0230
         MVI   @AL00001+12,X'80'                                   0230
         L     @15,GDTPRT(,@10)                                    0230
         LA    @01,@AL00001                                        0230
         BALR  @14,@15                                             0230
*        /************************************************************/
*        /*                                                          */
*        /*  RETURN TO THE MAIN IDCAMS DUMP ROUTINE (IDCDB01)        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0231
*        CALL IDCSAEP0(GDTTBL,MODID);                              0231
         L     @10,@PC00001                                        0231
         ST    @10,@AL00001                                        0231
         LA    @15,MODID                                           0231
         ST    @15,@AL00001+4                                      0231
         MVI   @AL00001+4,X'80'                                    0231
         L     @15,GDTEPL(,@10)                                    0231
         LA    @01,@AL00001                                        0231
         BALR  @14,@15                                             0231
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - ARRAYHDR                                       */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE PROCESSES ANY ARRAY HEADER ELEMENTS   */
*/*             (TYPE = 'A') OCCURRING IN THE DUMP LIST              */
*/*                                                                  */
*/*  INPUT - DUMPARRY (THE ARRAY HEADER ELEMENT ENCOUNTERED IN THE   */
*/*                   DUMP LIST)                                     */
*/*          ARRYINDX (THE ARRAY INDEX - INITIALLY SET TO ZERO)      */
*/*                                                                  */
*/*  OUTPUT - INITIALIZED ARRAY PARAMETERS                           */
*/*               ARRYINDX (THE ARRAY INDEX - SET TO ONE)            */
*/*               ARRYSTRT (ARRAY STARTING ADDRESS IN THE DUMP LIST) */
*/*               ARRYEND  (ARRAY ENDING   ADDRESS IN THE DUMP LIST) */
*/*                                                                  */
*/*           ANY PARTIALLY FILLED OUTPUT LINE IS PRINTED, AND THE   */
*/*           ARRAY NAME IS INSERTED AT THE BEGINNING OF A NEW       */
*/*           OUTPUT LINE.  THE ARRAY PARAMETERS (ABOVE) ARE USED    */
*/*           WHEN PROCEEDING THROUGH THE SUBSEQUENT ARRAY ELEMENTS  */
*/*           IN THE DUMP LIST.                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0232
*ARRAYHDR: PROCEDURE;                                              0232
*                                                                  0232
@EL00001 L     @13,4(,@13)                                         0232
@EF00001 L     @00,@SIZDATD                                        0232
         LR    @01,@11                                             0232
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0232
         BR    @14                                                 0232
ARRAYHDR STM   @14,@01,@SA00002                                    0232
         ST    @03,@SA00002+16                                     0232
         ST    @05,@SA00002+20                                     0232
         ST    @07,@SA00002+24                                     0232
         STM   @09,@12,@SA00002+28                                 0232
*        OLDERID2 = NEWERID2;                                      0233
         L     @10,@PC00001                                        0233
         L     @10,GDTTR2(,@10)                                    0233
         MVC   @TS00001(95),NEWERID2(@10)                          0233
         MVC   OLDERID2(95,@10),@TS00001                           0233
*        NEWID2 = 'DB2A';                                          0234
*                                                                  0234
         MVC   NEWID2(4,@10),@CC00660                              0234
*        /************************************************************/
*        /*                                                          */
*        /*  PROCESS ARRAY HEADER IF PARAMETERS ARE VALID            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0235
*        IF ARRYEXT > 0 & ARRYEXT <= 99 & ARRYINDX = 0 & ARRYITEM > 0
*          THEN                                                    0235
         SLR   @10,@10                                             0235
         LH    @09,ARRYEXT(,LISTINDX)                              0235
         CR    @09,@10                                             0235
         BNH   @RF00235                                            0235
         C     @09,@CF00661                                        0235
         BH    @RF00235                                            0235
         CR    ARRYINDX,@10                                        0235
         BNE   @RF00235                                            0235
         CH    @10,ARRYITEM(,LISTINDX)                             0235
         BNL   @RF00235                                            0235
*VALIDHDR:   DO;                                                   0236
VALIDHDR DS    0H                                                  0237
*              /******************************************************/
*              /*                                                    */
*              /*  BEGIN ARRAY DUMPING ON NEW OUTPUT LINE            */
*              /*                                                    */
*              /******************************************************/
*                                                                  0237
*              IF LINEFILL ^= 0                                    0237
*                THEN                                              0237
         LTR   LINEFILL,LINEFILL                                   0237
         BZ    @RF00237                                            0237
*                  DO;                                             0238
*                    CALL AMSTP011(GDTTBL,PRTFILE,PRNTPTR,FSADDR); 0239
*                                                                  0239
         L     @10,@PC00001                                        0239
         ST    @10,@AL00001                                        0239
         LA    @09,@CF00108                                        0239
         ST    @09,@AL00001+4                                      0239
         LA    @09,PRNTPTR                                         0239
         ST    @09,@AL00001+8                                      0239
         LA    @09,FSADDR                                          0239
         ST    @09,@AL00001+12                                     0239
         MVI   @AL00001+12,X'80'                                   0239
         L     @15,GDTPRT(,@10)                                    0239
         LA    @01,@AL00001                                        0239
         BALR  @14,@15                                             0239
*                    LINEFILL = 0;                                 0240
         SLR   LINEFILL,LINEFILL                                   0240
*                    OUTLINE = BLANK;                              0241
         MVI   OUTLINE+1,C' '                                      0241
         MVC   OUTLINE+2(118),OUTLINE+1                            0241
         MVI   OUTLINE,C' '                                        0241
*                    OUTPTR = ADDR(OUTLINE);                       0242
         LA    OUTPTR,OUTLINE                                      0242
*                  END;                                            0243
*                                                                  0243
*              /******************************************************/
*              /*                                                    */
*              /*  OBTAIN THE SYMBOLIC NAME OF ARRAY                 */
*              /*  AND PLACE IT IN THE OUTPUT LINE                   */
*              /*                                                    */
*              /******************************************************/
*                                                                  0244
*              SYMNAME = BLANK;                                    0244
@RF00237 MVI   SYMNAME+1,C' '                                      0244
         MVC   SYMNAME+2(13),SYMNAME+1                             0244
         MVI   SYMNAME,C' '                                        0244
*              SYMNAME(1:8) = ARRYNAME;                            0245
*                                                                  0245
         MVC   SYMNAME(8),ARRYNAME(LISTINDX)                       0245
*              NAMESCAN = ON;                                      0246
*                                                                  0246
         OI    NAMESCAN,B'10000000'                                0246
*              DO NAMEINDX = 8 TO 1 BY -1 WHILE (NAMESCAN = ON);   0247
*                                                                  0247
         LA    NAMEINDX,8                                          0247
@DL00247 TM    NAMESCAN,B'10000000'                                0247
         BNO   @DC00247                                            0247
*                IF SYMNAME(NAMEINDX) ^= BLANK                     0248
*                  THEN                                            0248
         LA    @10,SYMNAME-1(NAMEINDX)                             0248
         CLI   0(@10),C' '                                         0248
         BE    @RF00248                                            0248
*                    DO;                                           0249
*                      SYMNAME(NAMEINDX+1) = ':';                  0250
         LA    @10,SYMNAME(NAMEINDX)                               0250
         MVI   0(@10),C':'                                         0250
*                      NAMESCAN = OFF;                             0251
         NI    NAMESCAN,B'01111111'                                0251
*                    END;                                          0252
*              END;                                                0253
*                                                                  0253
@RF00248 BCTR  NAMEINDX,0                                          0253
         LTR   NAMEINDX,NAMEINDX                                   0253
         BP    @DL00247                                            0253
@DC00247 DS    0H                                                  0254
*              OUTSEG(6:13) = 'IN ARRAY';                          0254
         MVC   OUTSEG+5(8,OUTPTR),@CC00667                         0254
*              OUTSEG(15:23) = SYMNAME;                            0255
         MVC   OUTSEG+14(9,OUTPTR),SYMNAME                         0255
*              OUTPTR = OUTPTR + 23;                               0256
         AL    OUTPTR,@CF00668                                     0256
*              LINEFILL = 1;                                       0257
*                                                                  0257
         LA    @10,1                                               0257
         LR    LINEFILL,@10                                        0257
*              /******************************************************/
*              /*                                                    */
*              /*  INITIALIZE ARRAY PROCESSING POINTERS AND COUNTS   */
*              /*                                                    */
*              /******************************************************/
*                                                                  0258
*              ARRYINDX = 1;                                       0258
         LR    ARRYINDX,@10                                        0258
*              ARRYSTRT = LISTINDX;                                0259
         ST    LISTINDX,ARRYSTRT                                   0259
*              ARRYEND = ARRYSTRT + ITEMSIZE * ARRYITEM;           0260
*                                                                  0260
         L     @10,ARRYSTRT                                        0260
         LH    ARRYEND,ARRYITEM(,LISTINDX)                         0260
         SLA   ARRYEND,4                                           0260
         ALR   @10,ARRYEND                                         0260
         LR    ARRYEND,@10                                         0260
*            END VALIDHDR;                                         0261
*                                                                  0261
*          ELSE                                                    0262
*BADHDR:     DO;                                                   0262
         B     @RC00235                                            0262
@RF00235 DS    0H                                                  0262
BADHDR   DS    0H                                                  0263
*              /******************************************************/
*              /*                                                    */
*              /*  ARRAY HEADER PARAMETERS ARE INVALID -             */
*              /*  PRINT MESSAGE AND IGNORE ARRAY SPECIFICATION      */
*              /*                                                    */
*              /******************************************************/
*                                                                  0263
*              DARGSMOD = MSGMOD;                                  0263
         MVC   DARGSMOD(3,DDSTRU),@CC00642                         0263
*              DARGSENT = ARRYMSG;                                 0264
         MVI   DARGSENT(DDSTRU),X'06'                              0264
*              DARGDBP = ADDR(ARRYNAME);                           0265
         ST    LISTINDX,DARGDBP(,DDSTRU)                           0265
*              DARGILP = LENGTH(ARRYNAME);                         0266
*                                                                  0266
         MVC   DARGILP(2,DDSTRU),@CH00170                          0266
*              CALL AMSTP011(GDTTBL,PRTFILE,MSGPTR);               0267
*                                                                  0267
         L     @10,@PC00001                                        0267
         ST    @10,@AL00001                                        0267
         LA    @09,@CF00108                                        0267
         ST    @09,@AL00001+4                                      0267
         LA    @09,MSGPTR                                          0267
         ST    @09,@AL00001+8                                      0267
         MVI   @AL00001+8,X'80'                                    0267
         L     @15,GDTPRT(,@10)                                    0267
         LA    @01,@AL00001                                        0267
         BALR  @14,@15                                             0267
*            END BADHDR;                                           0268
*                                                                  0268
*        RETURN;                                                   0269
*                                                                  0269
@EL00002 DS    0H                                                  0269
@EF00002 DS    0H                                                  0269
@ER00002 LM    @14,@01,@SA00002                                    0269
         L     @03,@SA00002+16                                     0269
         L     @05,@SA00002+20                                     0269
         L     @07,@SA00002+24                                     0269
         LM    @09,@12,@SA00002+28                                 0269
         BR    @14                                                 0269
*        END ARRAYHDR;                                             0270
         B     @EL00002                                            0270
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - ITEMDUMP                                       */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE PROCESSES ANY INDIVIDUAL DUMP LIST    */
*/*             ELEMENTS IN THE DUMP LIST (INCLUDING THOSE WITHIN    */
*/*             THE SCOPE OF AN ARRAY HEADER SPECIFICATION)          */
*/*                                                                  */
*/*  INPUT - DUMPITEM (THE INDIVIDUAL DUMP ELEMENT ENCOUNTERED IN    */
*/*                   THE DUMP LIST)                                 */
*/*                                                                  */
*/*  OUTPUT - THE DUMP ITEM IS CONVERTED TO THE SPECIFIED OUTPUT     */
*/*           FORMAT, AND PLACED IN THE OUTPUT LINE FOLLOWING ITS    */
*/*           SYMBOLIC NAME.                                         */
*/*           AS EACH OUTPUT LINE IS FILLED, IT IS PRINTED.          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0271
*ITEMDUMP: PROCEDURE;                                              0271
*                                                                  0271
ITEMDUMP STM   @14,@01,@SA00003                                    0271
         STM   @03,@07,@SA00003+16                                 0271
         STM   @09,@12,@SA00003+36                                 0271
*        OLDERID2 = NEWERID2;                                      0272
         L     @10,@PC00001                                        0272
         L     @10,GDTTR2(,@10)                                    0272
         MVC   @TS00001(95),NEWERID2(@10)                          0272
         MVC   OLDERID2(95,@10),@TS00001                           0272
*        NEWID2 = 'DB2I';                                          0273
*                                                                  0273
         MVC   NEWID2(4,@10),@CC00674                              0273
*        /************************************************************/
*        /*                                                          */
*        /*  DETERMINE ITEM TYPE - HEX, BINARY, CHARACTER, FIXED     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0274
*        TYPEMTCH = NO;                                            0274
*                                                                  0274
         NI    TYPEMTCH,B'01111111'                                0274
*        DO TYPEINDX = 0 TO TYPECNT-1 WHILE (TYPEMTCH = NO);       0275
*                                                                  0275
         SLR   TYPEINDX,TYPEINDX                                   0275
@DL00275 TM    TYPEMTCH,B'10000000'                                0275
         BNZ   @DC00275                                            0275
*          IF OUTTYPE(TYPEINDX+1) = ITEMTYPE                       0276
*            THEN                                                  0276
         LR    @10,TYPEINDX                                        0276
         SLA   @10,3                                               0276
         LA    @01,OUTTYPE(@10)                                    0276
         CLC   0(1,@01),ITEMTYPE(LISTINDX)                         0276
         BNE   @RF00276                                            0276
*              TYPEMTCH = YES;                                     0277
*                                                                  0277
         OI    TYPEMTCH,B'10000000'                                0277
*        END;                                                      0278
*                                                                  0278
@RF00276 AL    TYPEINDX,@CF00210                                   0278
         C     TYPEINDX,@CF00153                                   0278
         BNH   @DL00275                                            0278
@DC00275 DS    0H                                                  0279
*        /************************************************************/
*        /*                                                          */
*        /*  DETERMINE IF ITEM TYPE IS VALID AND ITEM LENGTH IS      */
*        /*  VALID FOR SPECIFIED ITEM TYPE                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0279
*        IF TYPEMTCH = YES & ITEMLEN > 0 & ITEMLEN <= MAXLEN(TYPEINDX)
*          THEN                                                    0279
         TM    TYPEMTCH,B'10000000'                                0279
         BNO   @RF00279                                            0279
         LH    @10,ITEMLEN(,LISTINDX)                              0279
         LTR   @10,@10                                             0279
         BNP   @RF00279                                            0279
         LR    @15,TYPEINDX                                        0279
         SLA   @15,3                                               0279
         CH    @10,MAXLEN-8(@15)                                   0279
         BH    @RF00279                                            0279
*ITEMOKAY:   DO;                                                   0280
ITEMOKAY DS    0H                                                  0281
*              /******************************************************/
*              /*                                                    */
*              /*  PROCESS THE DUMP ITEM UNTIL CONVERTED             */
*              /*  AND FORMATTED INTO THE OUTPUT LINE                */
*              /*                                                    */
*              /******************************************************/
*                                                                  0281
*              IF ARRYINDX = 0                                     0281
*                THEN                                              0281
         SLR   @10,@10                                             0281
         CR    ARRYINDX,@10                                        0281
         BNE   @RF00281                                            0281
*                  ITEMOFST = 0;                                   0282
         SLR   @15,@15                                             0282
         LR    ITEMOFST,@15                                        0282
*                ELSE                                              0283
*                  ITEMOFST = (ARRYINDX - 1) * (ARRYSTRT -> ARRYSIZE);
*                                                                  0283
         B     @RC00281                                            0283
@RF00281 LR    @01,ARRYINDX                                        0283
         BCTR  @01,0                                               0283
         L     @15,ARRYSTRT                                        0283
         MH    @01,ARRYSIZE(,@15)                                  0283
         LR    ITEMOFST,@01                                        0283
*              VALUEPTR = ITEMPTR + ITEMOFST;                      0284
*                                                                  0284
@RC00281 LR    VALUEPTR,ITEMOFST                                   0284
         AL    VALUEPTR,ITEMPTR(,LISTINDX)                         0284
*              CNVRTLEN = 0;                                       0285
*                                                                  0285
         SLR   CNVRTLEN,CNVRTLEN                                   0285
*ITEMOUT:      DO WHILE (VALUEPTR < (ITEMPTR + ITEMOFST) + ITEMLEN);
*                                                                  0286
ITEMOUT  B     @DE00286                                            0286
@DL00286 DS    0H                                                  0287
*                CNVRTLEN = (ITEMPTR + ITEMOFST + ITEMLEN) - VALUEPTR;
*                                                                  0287
         LR    CNVRTLEN,ITEMOFST                                   0287
         AL    CNVRTLEN,ITEMPTR(,LISTINDX)                         0287
         AH    CNVRTLEN,ITEMLEN(,LISTINDX)                         0287
         SLR   CNVRTLEN,VALUEPTR                                   0287
*                /****************************************************/
*                /*                                                  */
*                /*  DETERMINE IF AT START OF NEW OUTPUT LINE, OR IF */
*                /*  (BASED UPON ITEM LENGTH AND TYPE) ITEM WILL FIT */
*                /*  ON CURRENT LINE                                 */
*                /*                                                  */
*                /****************************************************/
*                                                                  0288
*                OUTLEN = MAXLINE(TYPEINDX)-OUTEXP(TYPEINDX)*LINEFILL;
*                                                                  0288
         LR    @15,TYPEINDX                                        0288
         SLA   @15,3                                               0288
         LR    OUTLEN,LINEFILL                                     0288
         MH    OUTLEN,OUTEXP-8(@15)                                0288
         LCR   OUTLEN,OUTLEN                                       0288
         AH    OUTLEN,MAXLINE-8(@15)                               0288
*                IF CNVRTLEN > OUTLEN & LINEFILL ^= 0              0289
*                  THEN                                            0289
         CR    CNVRTLEN,OUTLEN                                     0289
         BNH   @RF00289                                            0289
         LTR   LINEFILL,LINEFILL                                   0289
         BZ    @RF00289                                            0289
*                    DO;                                           0290
*                      /**********************************************/
*                      /*                                            */
*                      /*  CURRENT OUTPUT LINE FULL - PRINT THE LINE */
*                      /*                                            */
*                      /**********************************************/
*                                                                  0291
*                      CALL AMSTP011(GDTTBL,PRTFILE,PRNTPTR,FSADDR);
*                                                                  0291
         L     @02,@PC00001                                        0291
         ST    @02,@AL00001                                        0291
         LA    @15,@CF00108                                        0291
         ST    @15,@AL00001+4                                      0291
         LA    @15,PRNTPTR                                         0291
         ST    @15,@AL00001+8                                      0291
         LA    @15,FSADDR                                          0291
         ST    @15,@AL00001+12                                     0291
         MVI   @AL00001+12,X'80'                                   0291
         L     @15,GDTPRT(,@02)                                    0291
         LA    @01,@AL00001                                        0291
         BALR  @14,@15                                             0291
*                      LINEFILL = 0;                               0292
*                                                                  0292
         SLR   LINEFILL,LINEFILL                                   0292
*                      OUTLINE = BLANK;                            0293
         MVI   OUTLINE+1,C' '                                      0293
         MVC   OUTLINE+2(118),OUTLINE+1                            0293
         MVI   OUTLINE,C' '                                        0293
*                    END;                                          0294
*                                                                  0294
*                /****************************************************/
*                /*                                                  */
*                /*  CONVERT AND FORMAT DUMP ITEM INTO OUTPUT LINE   */
*                /*                                                  */
*                /****************************************************/
*                                                                  0295
*                CNVRTLEN = MIN(CNVRTLEN,MAXLINE(TYPEINDX));       0295
*                                                                  0295
@RF00289 LR    @15,TYPEINDX                                        0295
         SLA   @15,3                                               0295
         LH    @15,MAXLINE-8(@15)                                  0295
         CR    CNVRTLEN,@15                                        0295
         BNH   *+6
         LR    CNVRTLEN,@15                                        0295
*                OUTPTR = ADDR(OUTLINE) + 27 * LINEFILL;           0296
*                                                                  0296
         LA    OUTPTR,OUTLINE                                      0296
         LR    @15,LINEFILL                                        0296
         MH    @15,@CH00606                                        0296
         ALR   OUTPTR,@15                                          0296
*                /****************************************************/
*                /*                                                  */
*                /*  PLACE SYMBOLIC NAME OF DUMP ITEM IN OUTPUT LINE */
*                /*                                                  */
*                /****************************************************/
*                                                                  0297
*                CALL NAMEFLD;                                     0297
*                                                                  0297
         BAL   @14,NAMEFLD                                         0297
*                OUTPTR = OUTPTR + 14;                             0298
*                                                                  0298
         AL    OUTPTR,@CF00681                                     0298
*                /****************************************************/
*                /*                                                  */
*                /*  PERFORM CONVERSION ON DUMP ITEM VALUE AND       */
*                /*  FORMAT INTO THE OUTPUT LINE - CONVERSION        */
*                /*  DEPENDENT UPON ITEM TYPE                        */
*                /*                                                  */
*                /****************************************************/
*                                                                  0299
*                IF ITEMTYPE = TYPEHEX                             0299
*                  THEN                                            0299
         CLI   ITEMTYPE(LISTINDX),C'H'                             0299
         BNE   @RF00299                                            0299
*                    CALL HCONVERT;                                0300
*                                                                  0300
         BAL   @14,HCONVERT                                        0300
*                IF ITEMTYPE = TYPEBIN                             0301
*                  THEN                                            0301
@RF00299 CLI   ITEMTYPE(LISTINDX),C'B'                             0301
         BNE   @RF00301                                            0301
*                    CALL BCONVERT;                                0302
*                                                                  0302
         BAL   @14,BCONVERT                                        0302
*                IF ITEMTYPE = TYPECHAR                            0303
*                  THEN                                            0303
@RF00301 CLI   ITEMTYPE(LISTINDX),C'C'                             0303
         BNE   @RF00303                                            0303
*                    CALL CCONVERT;                                0304
*                                                                  0304
         BAL   @14,CCONVERT                                        0304
*                IF ITEMTYPE = TYPEFIX                             0305
*                  THEN                                            0305
@RF00303 CLI   ITEMTYPE(LISTINDX),C'F'                             0305
         BNE   @RF00305                                            0305
*                    CALL FCONVERT;                                0306
*                                                                  0306
         BAL   @14,FCONVERT                                        0306
*                LINEFILL = (OUTPTR - ADDR(OUTLINE))/27 + 1;       0307
*                                                                  0307
@RF00305 LA    @00,OUTLINE                                         0307
         LCR   @00,@00                                             0307
         ALR   @00,OUTPTR                                          0307
         SRDA  @00,32                                              0307
         D     @00,@CF00606                                        0307
         AL    @01,@CF00210                                        0307
         LR    LINEFILL,@01                                        0307
*              END ITEMOUT;                                        0308
*                                                                  0308
@DE00286 LR    @04,ITEMOFST                                        0308
         AL    @04,ITEMPTR(,LISTINDX)                              0308
         AH    @04,ITEMLEN(,LISTINDX)                              0308
         CR    VALUEPTR,@04                                        0308
         BL    @DL00286                                            0308
*            END ITEMOKAY;                                         0309
*                                                                  0309
*          ELSE                                                    0310
*ITEMBAD:    DO;                                                   0310
         B     @RC00279                                            0310
@RF00279 DS    0H                                                  0310
ITEMBAD  DS    0H                                                  0311
*              /******************************************************/
*              /*                                                    */
*              /*  ITEM TYPE OR LENGTH INVALID - IGNORE DUMP ITEM    */
*              /*                                                    */
*              /******************************************************/
*                                                                  0311
*              DARGSMOD = MSGMOD;                                  0311
         MVC   DARGSMOD(3,DDSTRU),@CC00642                         0311
*              DARGSENT = ITEMMSG;                                 0312
         MVI   DARGSENT(DDSTRU),X'05'                              0312
*              DARGDBP = ADDR(ITEMNAME);                           0313
         ST    LISTINDX,DARGDBP(,DDSTRU)                           0313
*              DARGILP = LENGTH(ITEMNAME);                         0314
*                                                                  0314
         MVC   DARGILP(2,DDSTRU),@CH00170                          0314
*              CALL AMSTP011(GDTTBL,PRTFILE,MSGPTR);               0315
*                                                                  0315
         L     @10,@PC00001                                        0315
         ST    @10,@AL00001                                        0315
         LA    @09,@CF00108                                        0315
         ST    @09,@AL00001+4                                      0315
         LA    @09,MSGPTR                                          0315
         ST    @09,@AL00001+8                                      0315
         MVI   @AL00001+8,X'80'                                    0315
         L     @15,GDTPRT(,@10)                                    0315
         LA    @01,@AL00001                                        0315
         BALR  @14,@15                                             0315
*            END ITEMBAD;                                          0316
*                                                                  0316
*        RETURN;                                                   0317
@EL00003 DS    0H                                                  0317
@EF00003 DS    0H                                                  0317
@ER00003 LM    @14,@01,@SA00003                                    0317
         LM    @03,@07,@SA00003+16                                 0317
         LM    @09,@12,@SA00003+36                                 0317
         BR    @14                                                 0317
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - NAMEFLD                                        */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE INSERTS THE SYMBOLIC NAME OF THE DUMP */
*/*             ELEMENT INTO THE PROPER POSITION IN THE OUTPUT LINE. */
*/*             IF THE ELEMENT IS WITHIN AN ARRAY SPECIFICATION,     */
*/*             A SUBSCRIPT IS INSERTED FOLLOWING THE SYMBOLIC NAME. */
*/*             IF THE ELEMENT IS CONTINUED FROM THE PREVIOUS OUTPUT */
*/*             LINE, AN OFFSET VALUE IS INSERTED FOLLOWING THE      */
*/*             SYMBOLIC NAME.                                       */
*/*                                                                  */
*/*  INPUT - DUMPITEM (THE INDIVIDUAL DUMP ELEMENT CURRENTLY BEING   */
*/*                   PROCESSED)                                     */
*/*                                                                  */
*/*  OUTPUT - THE SYMBOLIC NAME OF THE DUMP ITEM AND ANY ARRAY INDEX */
*/*           OR CONTINUATION OFFSET IS INSERTED IN THE OUTPUT LINE  */
*/*           (THE OUTPUT LINE INDICES ARE UPDATED TO REFLECT THE    */
*/*            INSERTION OF THE SYMBOLIC NAME)                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0318
*NAMEFLD: PROCEDURE;                                               0318
*                                                                  0318
NAMEFLD  STM   @14,@12,@SA00004                                    0318
*        OLDERID2 = NEWERID2;                                      0319
         L     @10,@PC00001                                        0319
         L     @10,GDTTR2(,@10)                                    0319
         MVC   @TS00001(95),NEWERID2(@10)                          0319
         MVC   OLDERID2(95,@10),@TS00001                           0319
*        NEWID2 = 'DB2N';                                          0320
*                                                                  0320
         MVC   NEWID2(4,@10),@CC00691                              0320
*        /************************************************************/
*        /*                                                          */
*        /*  OBTAIN SYMBOLIC NAME OF ITEM AND RIGHT-JUSTIFY THE      */
*        /*  NAME FOR PLACEMENT IN THE OUTPUT LINE                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0321
*        SYMNAME = BLANK;                                          0321
*                                                                  0321
         MVI   SYMNAME+1,C' '                                      0321
         MVC   SYMNAME+2(13),SYMNAME+1                             0321
         MVI   SYMNAME,C' '                                        0321
*        SYMNAME(8:15) = ITEMNAME;                                 0322
*                                                                  0322
         MVC   SYMNAME+7(8),ITEMNAME(LISTINDX)                     0322
*        NAMESCAN = ON;                                            0323
*                                                                  0323
         OI    NAMESCAN,B'10000000'                                0323
*        DO NAMEINDX = 8 TO 1 BY -1 WHILE (NAMESCAN = ON);         0324
*                                                                  0324
         LA    NAMEINDX,8                                          0324
@DL00324 TM    NAMESCAN,B'10000000'                                0324
         BNO   @DC00324                                            0324
*          IF ITEMNAME(NAMEINDX) ^= BLANK                          0325
*            THEN                                                  0325
         LR    @10,LISTINDX                                        0325
         ALR   @10,NAMEINDX                                        0325
         AL    @10,@CF00664                                        0325
         CLI   ITEMNAME(@10),C' '                                  0325
         BE    @RF00325                                            0325
*              NAMESCAN = OFF;                                     0326
*                                                                  0326
         NI    NAMESCAN,B'01111111'                                0326
*        END;                                                      0327
*                                                                  0327
@RF00325 BCTR  NAMEINDX,0                                          0327
         LTR   NAMEINDX,NAMEINDX                                   0327
         BP    @DL00324                                            0327
@DC00324 DS    0H                                                  0328
*        SYMNAME(8-NAMEINDX:8) = SYMNAME(8:8+NAMEINDX);            0328
*                                                                  0328
         LA    @10,8                                               0328
         LR    @07,@10                                             0328
         SLR   @07,NAMEINDX                                        0328
         LA    @01,SYMNAME-1(@07)                                  0328
         SLR   @10,@07                                             0328
         MVC   @TS00001(15),SYMNAME+7                              0328
         EX    @10,@SM00726                                        0328
*        /************************************************************/
*        /*                                                          */
*        /*  PLACE THE SYMBOLIC ITEM NAME IN THE OUTPUT LINE         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0329
*        IF ARRYINDX = 0                                           0329
*          THEN                                                    0329
         LTR   ARRYINDX,ARRYINDX                                   0329
         BNZ   @RF00329                                            0329
*NAMEITEM:   DO;                                                   0330
NAMEITEM DS    0H                                                  0331
*              /******************************************************/
*              /*                                                    */
*              /*  ITEM IS NOT WITHIN AN ARRAY (NO SUBSCRIPT NEEDED) */
*              /*                                                    */
*              /******************************************************/
*                                                                  0331
*              IF VALUEPTR = ITEMPTR                               0331
*                THEN                                              0331
         C     VALUEPTR,ITEMPTR(,LISTINDX)                         0331
         BNE   @RF00331                                            0331
*                  DO;                                             0332
*                    /************************************************/
*                    /*                                              */
*                    /*  ITEM IS NOT CONTINUED FROM PREVIOUS LINE    */
*                    /*                                              */
*                    /************************************************/
*                                                                  0333
*                    OUTSEG(4:11) = SYMNAME;                       0333
         MVC   OUTSEG+3(8,OUTPTR),SYMNAME                          0333
*                  END;                                            0334
*                                                                  0334
*                ELSE                                              0335
*                  DO;                                             0335
         B     @RC00331                                            0335
@RF00331 DS    0H                                                  0336
*                    /************************************************/
*                    /*                                              */
*                    /*  ITEM IS CONTINUED FROM PREVIOUS LINE -      */
*                    /*  INSERT OFFSET FOLLOWING SYMBOLIC NAME       */
*                    /*                                              */
*                    /************************************************/
*                                                                  0336
*                    OUTSEG(1:8) = SYMNAME;                        0336
         MVC   OUTSEG(8,OUTPTR),SYMNAME                            0336
*                    OUTSEG(9) = '+';                              0337
*                                                                  0337
         MVI   OUTSEG+8(OUTPTR),C'+'                               0337
*                    RESPECIFY (REG7,REG8) RESTRICTED;             0338
*                                                                  0338
*                    REG7 = VALUEPTR - ITEMPTR;                    0339
         LR    REG7,VALUEPTR                                       0339
         SL    REG7,ITEMPTR(,LISTINDX)                             0339
*                    REG8 = OUTPTR;                                0340
*                                                                  0340
         LR    REG8,OUTPTR                                         0340
*                    GEN(CVD   REG7,DOUBLE);                       0341
         CVD   REG7,DOUBLE
*                    GEN(OI    DOUBLE+7,X'0F');                    0342
         OI    DOUBLE+7,X'0F'
*                    GEN(UNPK  9(3,REG8),DOUBLE+6(2));             0343
*                                                                  0343
         UNPK  9(3,REG8),DOUBLE+6(2)
*                    RESPECIFY (REG7,REG8) UNRESTRICTED;           0344
*                  END;                                            0345
*                                                                  0345
*            END NAMEITEM;                                         0346
*                                                                  0346
*          ELSE                                                    0347
*NAMEARRY:   DO;                                                   0347
         B     @RC00329                                            0347
@RF00329 DS    0H                                                  0347
NAMEARRY DS    0H                                                  0348
*              /******************************************************/
*              /*                                                    */
*              /*  ITEM IS WITHIN AN ARRAY - INSERT ARRAY SUBSCRIPT  */
*              /*  FOLLOWING SYMBOLIC NAME                           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0348
*              OUTSEG(1:8) = SYMNAME;                              0348
         MVC   OUTSEG(8,OUTPTR),SYMNAME                            0348
*              OUTSEG(9:12) = '(  )';                              0349
*                                                                  0349
         MVC   OUTSEG+8(4,OUTPTR),@CC00698                         0349
*              RESPECIFY (REG7,REG8) RESTRICTED;                   0350
*                                                                  0350
*              REG7 = ARRYINDX;                                    0351
         LR    REG7,ARRYINDX                                       0351
*              REG8 = OUTPTR;                                      0352
*                                                                  0352
         LR    REG8,OUTPTR                                         0352
*              GEN(CVD   REG7,DOUBLE);                             0353
         CVD   REG7,DOUBLE
*              GEN(OI    DOUBLE+7,X'0F');                          0354
         OI    DOUBLE+7,X'0F'
*              GEN(UNPK  9(2,REG8),DOUBLE+6(2));                   0355
*                                                                  0355
         UNPK  9(2,REG8),DOUBLE+6(2)
*              RESPECIFY (REG7,REG8) UNRESTRICTED;                 0356
*                                                                  0356
*              IF ARRYINDX < 10                                    0357
*                THEN                                              0357
         C     ARRYINDX,@CF00434                                   0357
         BNL   @RF00357                                            0357
*                  OUTSEG(10:12) = OUTSEG(11:13);                  0358
*                                                                  0358
         MVC   @TS00001(3),OUTSEG+10(OUTPTR)                       0358
         MVC   OUTSEG+9(3,OUTPTR),@TS00001                         0358
*            END NAMEARRY;                                         0359
*                                                                  0359
@RF00357 DS    0H                                                  0360
*        OUTSEG(13) = '=';                                         0360
*                                                                  0360
@RC00329 MVI   OUTSEG+12(OUTPTR),C'='                              0360
*        RETURN;                                                   0361
*                                                                  0361
@EL00004 DS    0H                                                  0361
@EF00004 DS    0H                                                  0361
@ER00004 LM    @14,@12,@SA00004                                    0361
         BR    @14                                                 0361
*        END NAMEFLD;                                              0362
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - HCONVERT                                       */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE CONVERTS THE VALUE OF THE CURRENT     */
*/*             DUMP ITEM TO HEXIDECIMAL REPRESENTATION              */
*/*                                                                  */
*/*  INPUT - VALUEPTR (THE ADDRESS OF THE DUMP ITEM TO BE CONVERTED) */
*/*          CNVRTLEN (THE LENGTH  OF THE DUMP ITEM TO BE CONVERTED) */
*/*          OUTPTR   (THE ADDRESS IN THE OUTPUT LINE TO PLACE       */
*/*                    THE CONVERTED VALUE)                          */
*/*                                                                  */
*/*  OUTPUT - THE CONVERTED (HEXIDECIMAL) REPRESENTATION IS INSERTED */
*/*           IN THE OUTPUT LINE (OUTPTR IS UPDATED TO REFLECT THE   */
*/*           LENGTH OF THE CONVERTED VALUE IN THE OUTPUT LINE)      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0363
*HCONVERT: PROCEDURE;                                              0363
*                                                                  0363
HCONVERT STM   @14,@01,@SA00005                                    0363
         STM   @03,@04,@SA00005+16                                 0363
         STM   @06,@12,@SA00005+24                                 0363
*        OLDERID2 = NEWERID2;                                      0364
         L     @10,@PC00001                                        0364
         L     @10,GDTTR2(,@10)                                    0364
         MVC   @TS00001(95),NEWERID2(@10)                          0364
         MVC   OLDERID2(95,@10),@TS00001                           0364
*        NEWID2 = 'DB2H';                                          0365
*                                                                  0365
         MVC   NEWID2(4,@10),@CC00703                              0365
*        /************************************************************/
*        /*                                                          */
*        /*  CONVERT DUMP ITEM VALUE TO HEXIDECIMAL FORM (FOUR BYTES */
*        /*  AT A TIME) INTO OUTPUT LINE                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0366
*        RESPECIFY (REG7,REG8) RESTRICTED;                         0366
*                                                                  0366
*        DO CVRTINDX = CNVRTLEN TO 1 BY -4;                        0367
*                                                                  0367
         LR    CVRTINDX,CNVRTLEN                                   0367
         B     @DE00367                                            0367
@DL00367 DS    0H                                                  0368
*          REG7 = OUTPTR;                                          0368
         LR    REG7,OUTPTR                                         0368
*          REG8 = VALUEPTR;                                        0369
*                                                                  0369
         LR    REG8,VALUEPTR                                       0369
*        /************************************************************/
*        /*                                                          */
*        /*  CHECK FOR UNPK GOING OUT OF RANGE                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0370
*          IF CNVRTLEN <= 4 &                              /*@Y30SSLO*/
*             CNVRTLEN >  0                                /*@Y30SSLO*/
*            THEN                                          /*@Y30SSLO*/
         C     CNVRTLEN,@CF00037                                   0370
         BH    @RF00370                                            0370
         LTR   CNVRTLEN,CNVRTLEN                                   0370
         BNP   @RF00370                                            0370
*              DO;                                         /*@Y30SSLO*/
*                WRKAREA(1:CNVRTLEN) = REG8 -> CORE(1:CNVRTLEN) ;  0372
         LR    @10,CNVRTLEN                                        0372
         BCTR  @10,0                                               0372
         EX    @10,@SM00728                                        0372
*                GEN(UNPK 0(9,REG7),WRKAREA(5));           /*@Y30SSLO*/
         UNPK 0(9,REG7),WRKAREA(5)
*                GEN(TR   0(8,REG7),HEXTRANS-240);         /*@Y30SSLO*/
         TR   0(8,REG7),HEXTRANS-240
*                GEN(MVI  8(REG7),C' ');                   /*@Y30SSLO*/
         MVI  8(REG7),C' '
*              END;                                        /*@Y30SSLO*/
*                                                          /*@Y30SSLO*/
*            ELSE                                          /*@Y30SSLO*/
*              DO;                                         /*@Y30SSLO*/
         B     @RC00370                                            0377
@RF00370 DS    0H                                                  0378
*                GEN(UNPK  0(9,REG7),0(5,REG8));                   0378
         UNPK  0(9,REG7),0(5,REG8)
*                GEN(TR    0(8,REG7),HEXTRANS-240);                0379
         TR    0(8,REG7),HEXTRANS-240
*                GEN(MVI   8(REG7),C' ');                          0380
         MVI   8(REG7),C' '
*              END;                                        /*@Y30SSLO*/
*                                                                  0381
*          OUTPTR = OUTPTR + 9;                                    0382
@RC00370 AL    OUTPTR,@CF00694                                     0382
*          VALUEPTR = VALUEPTR + 4;                                0383
         AL    VALUEPTR,@CF00037                                   0383
*        END;                                                      0384
*                                                                  0384
         AL    CVRTINDX,@CF00704                                   0384
@DE00367 LTR   CVRTINDX,CVRTINDX                                   0384
         BP    @DL00367                                            0384
*        RESPECIFY (REG7,REG8) UNRESTRICTED;                       0385
*                                                                  0385
*        /************************************************************/
*        /*                                                          */
*        /*  BLANK OUT EXTRANEOUS DATA (IF ANY) OBTAINED DURING THE  */
*        /*  FINAL FOUR-BYTE CONVERSION                              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0386
*        IF CVRTINDX < 0                                           0386
*          THEN                                                    0386
         LTR   CVRTINDX,CVRTINDX                                   0386
         BNM   @RF00386                                            0386
*            DO;                                                   0387
*              OUTPTR = OUTPTR - 1 + 2 * CVRTINDX;                 0388
*                                                                  0388
         LR    @10,OUTPTR                                          0388
         BCTR  @10,0                                               0388
         LR    @15,CVRTINDX                                        0388
         ALR   @15,@15                                             0388
         ALR   @10,@15                                             0388
         LR    OUTPTR,@10                                          0388
*              OUTSEG(1:6) = '      ';                             0389
*                                                                  0389
         MVC   OUTSEG(6,OUTPTR),@CC00705                           0389
*              OUTPTR = OUTPTR + 1;                                0390
         AL    OUTPTR,@CF00210                                     0390
*            END;                                                  0391
*                                                                  0391
*        RETURN;                                                   0392
*                                                                  0392
@EL00005 DS    0H                                                  0392
@EF00005 DS    0H                                                  0392
@ER00005 LM    @14,@01,@SA00005                                    0392
         LM    @03,@04,@SA00005+16                                 0392
         LM    @06,@12,@SA00005+24                                 0392
         BR    @14                                                 0392
*        END HCONVERT;                                             0393
         B     @EL00005                                            0393
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - BCONVERT                                       */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE CONVERTS THE VALUE OF THE CURRENT     */
*/*             DUMP ITEM TO BIT (BINARY) REPRESENTATION             */
*/*                                                                  */
*/*  INPUT - VALUEPTR (THE ADDRESS OF THE DUMP ITEM TO BE CONVERTED) */
*/*          CNVRTLEN (THE LENGTH  OF THE DUMP ITEM TO BE CONVERTED) */
*/*          OUTPTR   (THE ADDRESS IN THE OUTPUT LINE TO PLACE       */
*/*                    THE CONVERTED VALUE)                          */
*/*                                                                  */
*/*  OUTPUT - THE CONVERTED (BIT) REPRESENTATION IS INSERTED INTO    */
*/*           THE OUTPUT LINE (OUTPTR IS UPDATED TO REFLECT THE      */
*/*           LENGTH OF THE CONVERTED VALUE IN THE OUTPUT LINE)      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0394
*BCONVERT: PROCEDURE;                                              0394
*                                                                  0394
BCONVERT STM   @14,@01,12(@13)                                     0394
         STM   @03,@04,32(@13)                                     0394
         STM   @06,@12,44(@13)                                     0394
*        OLDERID2 = NEWERID2;                                      0395
         L     @10,@PC00001                                        0395
         L     @10,GDTTR2(,@10)                                    0395
         MVC   @TS00001(95),NEWERID2(@10)                          0395
         MVC   OLDERID2(95,@10),@TS00001                           0395
*        NEWID2 = 'DB2B';                                          0396
*                                                                  0396
         MVC   NEWID2(4,@10),@CC00709                              0396
*        OUTSEG(1) = '''';                                         0397
         MVI   OUTSEG(OUTPTR),C''''                                0397
*        CNVRTVAL = 0;                                             0398
*                                                                  0398
         SLR   @10,@10                                             0398
         ST    @10,CNVRTVAL                                        0398
*        /************************************************************/
*        /*                                                          */
*        /*  CONVERT DUMP ITEM TO BINARY FORM (ONE BYTE AT A TIME)   */
*        /*  INTO THE OUTPUT LINE                                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0399
*        DO CVRTINDX = CNVRTLEN TO 1 BY -1;                        0399
*                                                                  0399
         LR    CVRTINDX,CNVRTLEN                                   0399
         B     @DE00399                                            0399
@DL00399 DS    0H                                                  0400
*          OUTPTR = OUTPTR + 1;                                    0400
         AL    OUTPTR,@CF00210                                     0400
*          OUTSEG(1:8) = '00000000';                               0401
*                                                                  0401
         MVC   OUTSEG(8,OUTPTR),@CC00711                           0401
*          CVRTCHAR(4) = INSEG(1);                                 0402
*                                                                  0402
         MVC   CVRTCHAR+3(1),INSEG(VALUEPTR)                       0402
*          /**********************************************************/
*          /*                                                        */
*          /*  SCAN EACH BIT OF THE INPUT BYTE AND SET OUTPUT BYTE   */
*          /*  ACCORDINGLY TO '1' OR '0'                             */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0403
*          DO OUTINDX = 8 TO 1 BY -1 WHILE(CNVRTVAL ^= 0);         0403
*                                                                  0403
         LA    OUTINDX,8                                           0403
@DL00403 L     @10,CNVRTVAL                                        0403
         LTR   @10,@10                                             0403
         BZ    @DC00403                                            0403
*            IF CNVRTVAL // 2 = 1                                  0404
*              THEN                                                0404
         LR    @00,@10                                             0404
         SRDA  @00,32                                              0404
         D     @00,@CF00144                                        0404
         C     @00,@CF00210                                        0404
         BNE   @RF00404                                            0404
*                OUTSEG(OUTINDX) = '1';                            0405
*                                                                  0405
         LR    @10,OUTPTR                                          0405
         ALR   @10,OUTINDX                                         0405
         AL    @10,@CF00664                                        0405
         MVI   OUTSEG(@10),C'1'                                    0405
*            CNVRTVAL = CNVRTVAL / 2;                              0406
@RF00404 L     @00,CNVRTVAL                                        0406
         SRDA  @00,32                                              0406
         D     @00,@CF00144                                        0406
         ST    @01,CNVRTVAL                                        0406
*          END;                                                    0407
*                                                                  0407
         BCTR  OUTINDX,0                                           0407
         LTR   OUTINDX,OUTINDX                                     0407
         BP    @DL00403                                            0407
@DC00403 DS    0H                                                  0408
*          OUTPTR = OUTPTR + 8;                                    0408
         AL    OUTPTR,@CF00170                                     0408
*          VALUEPTR = VALUEPTR + 1;                                0409
*                                                                  0409
         AL    VALUEPTR,@CF00210                                   0409
*        END;                                                      0410
*                                                                  0410
         BCTR  CVRTINDX,0                                          0410
@DE00399 LTR   CVRTINDX,CVRTINDX                                   0410
         BP    @DL00399                                            0410
*        OUTSEG(1) = '''';                                         0411
         MVI   OUTSEG(OUTPTR),C''''                                0411
*        OUTPTR = OUTPTR + 1;                                      0412
*                                                                  0412
         AL    OUTPTR,@CF00210                                     0412
*        RETURN;                                                   0413
*                                                                  0413
@EL00006 DS    0H                                                  0413
@EF00006 DS    0H                                                  0413
@ER00006 LM    @14,@01,12(@13)                                     0413
         LM    @03,@04,32(@13)                                     0413
         LM    @06,@12,44(@13)                                     0413
         BR    @14                                                 0413
*        END BCONVERT;                                             0414
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - CCONVERT                                       */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE CONVERTS THE VALUE OF THE CURRENT     */
*/*             DUMP ITEM TO CHARACTER REPRESENTATION                */
*/*                                                                  */
*/*  INPUT - VALUEPTR (THE ADDRESS OF THE DUMP ITEM TO BE CONVERTED) */
*/*          CNVRTLEN (THE LENGTH  OF THE DUMP ITEM TO BE CONVERTED) */
*/*          OUTPTR   (THE ADDRESS IN THE OUTPUT LINE TO PLACE       */
*/*                    THE CONVERTED VALUE)                          */
*/*                                                                  */
*/*  OUTPUT - THE CONVERTED (CHARACTER) REPRESENTATION IS INSERTED   */
*/*           IN THE OUTPUT LINE (OUTPTR IS UPDATED TO REFLECT THE   */
*/*           LENGTH OF THE CONVERTED VALUE IN THE OUTPUT LINE)      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0415
*CCONVERT: PROCEDURE;                                              0415
*                                                                  0415
CCONVERT STM   @14,@01,12(@13)                                     0415
         STM   @03,@04,32(@13)                                     0415
         STM   @06,@12,44(@13)                                     0415
*        OLDERID2 = NEWERID2;                                      0416
         L     @10,@PC00001                                        0416
         L     @10,GDTTR2(,@10)                                    0416
         MVC   @TS00001(95),NEWERID2(@10)                          0416
         MVC   OLDERID2(95,@10),@TS00001                           0416
*        NEWID2 = 'DB2C';                                          0417
*                                                                  0417
         MVC   NEWID2(4,@10),@CC00716                              0417
*        OUTSEG(1) = '''';                                         0418
*                                                                  0418
         MVI   OUTSEG(OUTPTR),C''''                                0418
*        /************************************************************/
*        /*                                                          */
*        /*  CONVERT DUMP ITEM TO CHARACTER FORM INTO OUTPUT LINE    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0419
*        OUTSEG(2:CNVRTLEN+1) = INSEG(1:CNVRTLEN);                 0419
*                                                                  0419
         LR    @10,CNVRTLEN                                        0419
         BCTR  @10,0                                               0419
         EX    @10,@SM00730                                        0419
*        OUTSEG(CNVRTLEN+2) = '''';                                0420
*                                                                  0420
         LR    @10,OUTPTR                                          0420
         ALR   @10,CNVRTLEN                                        0420
         MVI   OUTSEG+1(@10),C''''                                 0420
*        OUTPTR = OUTPTR + CNVRTLEN + 2;                           0421
         LR    @10,OUTPTR                                          0421
         ALR   @10,CNVRTLEN                                        0421
         AL    @10,@CF00144                                        0421
         LR    OUTPTR,@10                                          0421
*        VALUEPTR = VALUEPTR + CNVRTLEN;                           0422
*                                                                  0422
         ALR   VALUEPTR,CNVRTLEN                                   0422
*        RETURN;                                                   0423
*                                                                  0423
@EL00007 DS    0H                                                  0423
@EF00007 DS    0H                                                  0423
@ER00007 LM    @14,@01,12(@13)                                     0423
         LM    @03,@04,32(@13)                                     0423
         LM    @06,@12,44(@13)                                     0423
         BR    @14                                                 0423
*        END CCONVERT;                                             0424
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - FCONVERT                                       */
*/*                                                                  */
*/*  FUNCTION - THIS PROCEDURE CONVERTS THE VALUE OF THE CURRENT     */
*/*             DUMP ITEM TO FIXED (INTEGER) REPRESENTATION          */
*/*                                                                  */
*/*  INPUT - VALUEPTR (THE ADDRESS OF THE DUMP ITEM TO BE CONVERTED) */
*/*          CNVRTLEN (THE LENGTH  OF THE DUMP ITEM TO BE CONVERTED) */
*/*          OUTPTR   (THE ADDRESS IN THE OUTPUT LINE TO PLACE       */
*/*                    THE CONVERTED VALUE)                          */
*/*                                                                  */
*/*  OUTPUT - THE CONVERTED (FIXED) REPRESENTATION IS INSERTED INTO  */
*/*           THE OUTPUT LINE (OUTPTR IS UPDATED TO REFLECT THE      */
*/*           LENGTH OF THE CONVERTED VALUE IN THE OUTPUT LINE)      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0425
*FCONVERT: PROCEDURE;                                              0425
*                                                                  0425
FCONVERT STM   @14,@01,@SA00008                                    0425
         STM   @03,@04,@SA00008+16                                 0425
         STM   @06,@12,@SA00008+24                                 0425
*        OLDERID2 = NEWERID2;                                      0426
         L     @10,@PC00001                                        0426
         L     @10,GDTTR2(,@10)                                    0426
         MVC   @TS00001(95),NEWERID2(@10)                          0426
         MVC   OLDERID2(95,@10),@TS00001                           0426
*        NEWID2 = 'DB2F';                                          0427
*                                                                  0427
         MVC   NEWID2(4,@10),@CC00720                              0427
*        OUTPTR = OUTPTR - 1;                                      0428
         BCTR  OUTPTR,0                                            0428
*        CNVRTVAL = 0;                                             0429
*                                                                  0429
         SLR   @10,@10                                             0429
         ST    @10,CNVRTVAL                                        0429
*        /************************************************************/
*        /*                                                          */
*        /*  OBTAIN DUMP ITEM VALUE FOR 'FIXED' FORMAT CONVERSION    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0430
*        CVRTCHAR(5-CNVRTLEN:4) = INSEG(1:CNVRTLEN);               0430
*                                                                  0430
         LA    @10,5                                               0430
         SLR   @10,CNVRTLEN                                        0430
         LA    @03,CVRTCHAR-1(@10)                                 0430
         LCR   @10,@10                                             0430
         AL    @10,@CF00037                                        0430
         EX    @10,@SM00732                                        0430
*        /************************************************************/
*        /*                                                          */
*        /*  PROPAGATE THE SIGN BIT IF A TWO-BYTE FIELD IS SPECIFIED */
*        /*  (A SIGNED-VALUE IS ASSUMED FOR FIELD LENGTHS OF 2 OR 4) */
*        /*                                                          */
*        /************************************************************/
*                                                                  0431
*        IF CNVRTLEN = 2                                           0431
*          THEN                                                    0431
         C     CNVRTLEN,@CF00144                                   0431
         BNE   @RF00431                                            0431
*            CNVRTVAL = CVRTHALF;                                  0432
*                                                                  0432
         LH    @10,CVRTHALF                                        0432
         ST    @10,CNVRTVAL                                        0432
*        /************************************************************/
*        /*                                                          */
*        /*  CONVERT DUMP ITEM TO 'FIXED' OUTPUT REPRESENTATION      */
*        /*  AND PLACE INTO THE OUTPUT LINE                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0433
*        IF CNVRTVAL ^= 0                                          0433
*          THEN                                                    0433
@RF00431 L     @10,CNVRTVAL                                        0433
         LTR   @10,@10                                             0433
         BZ    @RF00433                                            0433
*            DO;                                                   0434
*              RESPECIFY (REG7,REG8) RESTRICTED;                   0435
*                                                                  0435
*              REG7 = CNVRTVAL;                                    0436
         LR    REG7,@10                                            0436
*              REG8 = OUTPTR;                                      0437
*                                                                  0437
         LR    REG8,OUTPTR                                         0437
*              GEN(CVD   REG7,DOUBLE);                             0438
         CVD   REG7,DOUBLE
*              GEN(OI    DOUBLE+7,X'0F');                          0439
         OI    DOUBLE+7,X'0F'
*              GEN(UNPK  1(11,REG8),DOUBLE+2(6));                  0440
*                                                                  0440
         UNPK  1(11,REG8),DOUBLE+2(6)
*              RESPECIFY (REG7,REG8) UNRESTRICTED;                 0441
*                                                                  0441
*              /******************************************************/
*              /*                                                    */
*              /*  INSERT PRECEDING MINUS SIGN IF VALUE IS NEGATIVE  */
*              /*                                                    */
*              /******************************************************/
*                                                                  0442
*              IF CNVRTVAL < 0                                     0442
*                THEN                                              0442
         L     @10,CNVRTVAL                                        0442
         LTR   @10,@10                                             0442
         BNM   @RF00442                                            0442
*                  OUTSEG(1) = '-';                                0443
*                                                                  0443
         MVI   OUTSEG(OUTPTR),C'-'                                 0443
*              /******************************************************/
*              /*                                                    */
*              /*  SUPPRESS LEADING ZEROES IN THE OUTPUT LINE VALUE  */
*              /*                                                    */
*              /******************************************************/
*                                                                  0444
*              DO WHILE (OUTSEG(2) = '0');                         0444
*                                                                  0444
@RF00442 B     @DE00444                                            0444
@DL00444 DS    0H                                                  0445
*                OUTSEG(2:12) = OUTSEG(3:13);                      0445
*                                                                  0445
         MVC   @TS00001(11),OUTSEG+2(OUTPTR)                       0445
         MVC   OUTSEG+1(11,OUTPTR),@TS00001                        0445
*              END;                                                0446
*                                                                  0446
@DE00444 CLI   OUTSEG+1(OUTPTR),C'0'                               0446
         BE    @DL00444                                            0446
*            END;                                                  0447
*                                                                  0447
*          ELSE                                                    0448
*            OUTSEG(2) = '0';                                      0448
*                                                                  0448
         B     @RC00433                                            0448
@RF00433 MVI   OUTSEG+1(OUTPTR),C'0'                               0448
*        OUTPTR = OUTPTR + 13;                                     0449
@RC00433 AL    OUTPTR,@CF00666                                     0449
*        VALUEPTR = VALUEPTR + CNVRTLEN;                           0450
*                                                                  0450
         ALR   VALUEPTR,CNVRTLEN                                   0450
*        RETURN;                                                   0451
*                                                                  0451
@EL00008 DS    0H                                                  0451
@EF00008 DS    0H                                                  0451
@ER00008 LM    @14,@01,@SA00008                                    0451
         LM    @03,@04,@SA00008+16                                 0451
         LM    @06,@12,@SA00008+24                                 0451
         BR    @14                                                 0451
*        END FCONVERT;                                             0452
*                                                                  0452
*                                                                  0452
*      END ITEMDUMP;                                               0453
*                                                                  0453
*                                                                  0453
         B     @EL00003                                            0453
*    END IDCDB02                                                   0454
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*;                                                                 0454
@DATA    DS    0H
@SM00726 MVC   0(0,@01),@TS00001
@SM00728 MVC   WRKAREA(0),CORE(REG8)
@SM00730 MVC   OUTSEG+1(0,OUTPTR),INSEG(VALUEPTR)
@SM00732 MVC   0(0,@03),INSEG(VALUEPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00002 DS    11F
@SA00003 DS    13F
@SA00004 DS    15F
@SA00005 DS    13F
@SA00008 DS    13F
@AL00001 DS    4A
IDCDB02  CSECT
         DS    0F
@CF00108 DC    F'0'
@CF00210 DC    F'1'
@CH00210 EQU   @CF00210+2
@CF00144 DC    F'2'
@CF00153 DC    F'3'
@CF00037 DC    F'4'
@CF00170 DC    F'8'
@CH00170 EQU   @CF00170+2
@CF00694 DC    F'9'
@CF00434 DC    F'10'
@CF00666 DC    F'13'
@CF00681 DC    F'14'
@CF00464 DC    F'16'
@CF00668 DC    F'23'
@CF00606 DC    F'27'
@CH00606 EQU   @CF00606+2
@CF00661 DC    F'99'
@CF00704 DC    F'-4'
@CF00664 DC    F'-1'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
CNVRTVAL DS    F
ARRYSTRT DS    A
PRNTPTR  DS    A
MSGPTR   DS    A
LISTPTR  DS    A
SETRC    DS    H
TESTRC   DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
TYPEMTCH DS    BL1
OUTLINE  DS    CL120
SYMNAME  DS    CL15
NAMESCAN DS    BL1
         DS    CL3
WRKAREA  DS    CL5
         DS    CL3
PRNTLIST DS    CL20
MSGLIST  DS    CL20
FRMTLIST DS    CL12
DOUBLE   DS    CL8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCDB02  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00667 DC    C'IN ARRAY'
@CC00711 DC    C'00000000'
@CC00705 DC    C'      '
@CC00660 DC    C'DB2A'
@CC00674 DC    C'DB2I'
@CC00691 DC    C'DB2N'
@CC00698 DC    C'(  )'
@CC00703 DC    C'DB2H'
@CC00709 DC    C'DB2B'
@CC00716 DC    C'DB2C'
@CC00720 DC    C'DB2F'
@CC00642 DC    C'EX0'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'DB02'
HEXTRANS DC    CL16'0123456789ABCDEF'
FIXAREA  DS    CL150
         ORG   FIXAREA
@NM00038 DC    150X'00'
         ORG   FIXAREA+150
TYPELEN  DS    CL8
         ORG   TYPELEN+0
OUTTYPE  DC    CL1'H'
@NM00037 DC    CL1' '
MAXLEN   DC    H'256'
MAXLINE  DC    H'44'
OUTEXP   DC    H'12'
         ORG   TYPELEN+8
         ORG   TYPELEN+8
         DC    CL1'B'
         DS    CL1
         DC    H'256'
         DC    H'11'
         DC    H'3'
         ORG   TYPELEN+16
         ORG   TYPELEN+16
         DC    CL1'C'
         DS    CL1
         DC    H'256'
         DC    H'100'
         DC    H'27'
         ORG   TYPELEN+24
         ORG   TYPELEN+24
         DC    CL1'F'
         DS    CL1
         DC    H'4'
         DC    H'108'
         DC    H'27'
         ORG   TYPELEN+32
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ITEMOFST EQU   @10
ARRYINDX EQU   @06
ARRYEND  EQU   @04
OUTINDX  EQU   @06
CVRTINDX EQU   @03
CNVRTLEN EQU   @04
VALUEPTR EQU   @05
NAMEINDX EQU   @04
LINEFILL EQU   @08
OUTLEN   EQU   @02
OUTPTR   EQU   @02
TYPEINDX EQU   @09
LISTINDX EQU   @03
DDSTRU   EQU   @07
REG7     EQU   @07
REG8     EQU   @08
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG9     EQU   @09
RTNREG   EQU   @15
IDCSAEP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTEOLF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTOLEN  EQU   FMTLIST+8
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
DMPITM   EQU   0
DMPARY   EQU   0
DUMPITEM EQU   0
ITEMNAME EQU   DUMPITEM
ITEMPTR  EQU   DUMPITEM+8
ITEMLEN  EQU   DUMPITEM+12
ITEMTYPE EQU   DUMPITEM+14
DUMPARRY EQU   0
ARRYNAME EQU   DUMPARRY
ARRYSIZE EQU   DUMPARRY+8
ARRYITEM EQU   DUMPARRY+10
ARRYEXT  EQU   DUMPARRY+12
DUMPTERM EQU   0
OUTSEG   EQU   0
CORE     EQU   0
INSEG    EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCDB010 EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
DUMPLIST EQU   0
CVRTCHAR EQU   CNVRTVAL
CVRTHALF EQU   CNVRTVAL+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
ARRYTYPE EQU   DUMPARRY+14
@NM00036 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00035 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00034 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00033 EQU   ERCNVTAB+4
@NM00032 EQU   ERCNVTAB+2
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGRETP EQU   DARGLIST+4
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00235 EQU   @EL00002
@RC00279 EQU   @EL00003
@RC00331 EQU   @RC00329
@RF00386 EQU   @EL00005
@PB00003 EQU   @EL00001
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCDB02,(C'PLS1843',0602,75077)
