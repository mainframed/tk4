         TITLE '*********** IDCDL01:  DELETE FUNCTION SUPPORT ROUTINE **
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCDL01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCDL01   78.251'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  LA    @11,4095(,@12)                                      0002
         LA    @10,4095(,@11)                                      0002
         USING @PSTART,@12                                         0002
         USING @PSTART+4095,@11                                    0002
         USING @PSTART+8190,@10                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @09,@01                                             0002
         USING @DATD,@09                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @09,8(,@13)                                         0002
         LR    @13,@09                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                      /*CATALOG WORK AREA   @Y30SSFR*/
*                                                                  0259
*        /************************************************************/
*        /*                                                          */
*        /*  THIS IS THE CENTRAL SECTION OF THE DELETE ROUTINE.      */
*        /*  THIS SECTION PERFORMS INITIALIZATION AND TERMINATION    */
*        /*  FUNCTIONS AND ROUTES CONTROL AMONG THE SUB-PROCEDURES.  */
*        /*  ALL EXITS FROM THE DELETE ROUTINE OCCUR FROM HERE       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0259
*        OLDERID2 = NEWERID2;                                      0259
         L     @08,@PC00001                                        0259
         L     @15,GDTTR2(,@08)                                    0259
         MVC   @TS00001(95),NEWERID2(@15)                          0259
         MVC   OLDERID2(95,@15),@TS00001                           0259
*        NEWID2 = 'DLBG';                                          0260
*                                                                  0260
         MVC   NEWID2(4,@15),@CC00940                              0260
*        IF GDTDBG = NULLPTR                                       0261
*          THEN;                                                   0261
         L     @08,GDTDBG(,@08)                                    0261
         LTR   @08,@08                                             0261
         BZ    @RT00261                                            0261
*          ELSE                                                    0263
*            CALL IDCDB010 (GDTTBL,'DLBG');                        0263
*                                                                  0263
         L     @08,@PC00001                                        0263
         ST    @08,@AL00001                                        0263
         LA    @15,@CC00940                                        0263
         ST    @15,@AL00001+4                                      0263
         MVI   @AL00001+4,X'80'                                    0263
         L     @15,GDTDBG(,@08)                                    0263
         LA    @01,@AL00001                                        0263
         BALR  @14,@15                                             0263
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE PRINT ARGUMENT LIST AND CATALOG PARAMETER    */
*        /*  LIST POINTERS AND REMOVE THE CATALOG DNAME PTR  @YL026UA*/
*        /*  SO THE CATALOG CAN BE DYNAMICALLY ALLOCATED BY  @YL026UA*/
*        /*  VSAM CATALOG MGMT.                              @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0264
*        DDSTRU = ADDR(PRINTTAB);                                  0264
@RT00261 LA    @08,PRINTTAB                                        0264
         ST    @08,DDSTRU                                          0264
*        PRINTTAB = ''B;                                           0265
         XC    PRINTTAB(20),PRINTTAB                               0265
*        CTGPLPTR = ADDR(CPLSTOR);                                 0266
         LA    @08,CPLSTOR                                         0266
         ST    @08,CTGPLPTR                                        0266
*        CTGFLPTR = ADDR(FPLTYPE);                         /*@YL026UA*/
         LA    CTGFLPTR,FPLTYPE                                    0267
*        FDTPTR(4) = NULLPTR;                              /*@YL026UA*/
*                                                                  0268
         SLR   @08,@08                                             0268
         L     @15,@PC00001+4                                      0268
         ST    @08,FDTPTR+12(,@15)                                 0268
*        /************************************************************/
*        /*                                                          */
*        /*  SET A FLAG IF THE TYPE FIELD WAS SPECIFIED ON THE       */
*        /*  DELETE COMMAND.                                         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0269
*        IF ADDR(CLUST) ^= NULLPTR × ADDR(UCAT) ^= NULLPTR ×       0269
*           ADDR(MCAT) ^= NULLPTR × ADDR(ALIEN) ^= NULLPTR ×       0269
*           ADDR(SPACE) ^= NULLPTR ×                               0269
*           ADDR(GDG) ^= NULLPTR × ADDR(PGSPC) ^= NULLPTR ×        0269
*           ADDR(ALIAS) ^= NULLPTR ×                       /*@Y30SSFR*/
*           ADDR(AIX) ^= NULLPTR ×                         /*@Y30SSFR*/
*           ADDR(PATH) ^= NULLPTR                          /*@Y30SSFR*/
*          THEN                                                    0269
         C     @08,FDTPTR+40(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+48(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+52(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+56(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+44(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+72(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+68(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+76(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+80(,@15)                                 0269
         BNE   @RT00269                                            0269
         C     @08,FDTPTR+84(,@15)                                 0269
         BE    @RF00269                                            0269
@RT00269 DS    0H                                                  0270
*            TYPEFLAG = ON;                                /*@YL026UA*/
         OI    TYPEFLAG,B'10000000'                                0270
*          ELSE                                                    0271
*            TYPEFLAG = OFF;                                       0271
*                                                                  0271
         B     @RC00269                                            0271
@RF00269 NI    TYPEFLAG,B'01111111'                                0271
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE ACB AND ALLOCATION INDICATORS.       @YL026UA*/
*        /*  INDICATE THAT THE DELETE CPL HAS NOT BEEN INITIALIZED   */
*        /*  INDICATE THAT THE LOCATE CPL HAS NOT BEEN INITIALIZED   */
*        /*  ESTABLISH BASE POINTERS FOR ALLAGL AND CIRAGL   @YL026UA*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0272
*        ACBFLAG = OFF;                                    /*@YL026UA*/
@RC00269 NI    ACBFLAG,B'01111111'                                 0272
*        DEALLOC = OFF;                                    /*@YL026UA*/
         NI    DEALLOC,B'01111111'                                 0273
*        DCPLINIT = OFF;                                   /*@YL026UA*/
         NI    DCPLINIT,B'01111111'                                0274
*        LCPLINIT = OFF;                                   /*@YL026UA*/
         NI    LCPLINIT,B'01111111'                                0275
*        RESPECIFY ALLAGL BASED(ALLPTR);                   /*@YL026UA*/
*        RESPECIFY CIRAGL BASED(CIRPTR);                   /*@YL026UA*/
*                                                                  0277
*        /************************************************************/
*        /*                                                          */
*        /*  FOR EACH ENTRY TO BE DELETED, DETERMINE THE TYPE OF     */
*        /*  ENTRY TO BE DELETED, BUILD THE CATALOG PARAMETER        */
*        /*  LIST AND CALL THE CATALOG TO DELETE THE ENTRY.          */
*        /*  CONTINUE DELETING ENTRIES UNTIL A TERMINATING           */
*        /*  CONDITION OCCURS.                                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0278
*NTRYLOOP: DO INDEX = 1 TO NTRYCNT WHILE LASTCOND < LASTCC12;      0278
*                                                                  0278
NTRYLOOP LA    @08,1                                               0278
         B     @DE00278                                            0278
@DL00278 L     @08,@PC00001+8                                      0278
         LH    @08,LASTCOND(,@08)                                  0278
         C     @08,@CF00035                                        0278
         BNL   @DC00278                                            0278
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  SAVE THE CATALOG NAME IF GIVEN IN THE FDT     @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0279
*          IF ADDR(CAT) ^= NULLPTR                                 0279
*            THEN                                                  0279
         L     @08,@PC00001+4                                      0279
         L     @08,FDTPTR+8(,@08)                                  0279
         LTR   @08,@08                                             0279
         BZ    @RF00279                                            0279
*              CATNAME = CATVAL;                           /*@Y30SSFR*/
         MVC   CATNAME(44),CATVAL(@08)                             0280
*            ELSE                                                  0281
*              CATNAME = ' ';                              /*@Y30SSFR*/
*                                                                  0281
         B     @RC00279                                            0281
@RF00279 MVI   CATNAME+1,C' '                                      0281
         MVC   CATNAME+2(42),CATNAME+1                             0281
         MVI   CATNAME,C' '                                        0281
*          /**********************************************************/
*          /*                                                        */
*          /*  INITIALIZE THE CONDITION CODE FOR THIS ENTRY.         */
*          /*  CONTINUE ALL THE OPERATIONS FOR AN ENTRY IF THE ENTRY */
*          /*  CONDITION CODE INDICATES NO SEVERE ERRORS.            */
*          /*  ASSIGN ENTRYNAME & LENGTH TO WORK AREAS SO    @YL026UA*/
*          /*  THE FDT ISN'T MODIFIED.                       @YL026UA*/
*          /*                                                @YL026UA*/
*          /**********************************************************/
*                                                                  0282
*          ENTRYRC = 0;                                            0282
@RC00279 SLR   ENTRYRC,ENTRYRC                                     0282
*          ENTRYLEN = NTRYLEN(INDEX);                      /*@YL026UA*/
         LH    @08,INDEX                                           0283
         MH    @08,@CH01079                                        0283
         L     @02,@PC00001+4                                      0283
         L     @02,FDTPTR(,@02)                                    0283
         LA    @01,0(@08,@02)                                      0283
         AL    @01,@CF01096                                        0283
         SLR   @00,@00                                             0283
         IC    @00,NTRYLEN-22(,@01)                                0283
         STH   @00,ENTRYLEN                                        0283
*          ENTRYVAL = NTRYVAL(INDEX);                      /*@YL026UA*/
*                                                                  0284
         ST    @08,@TF00001                                        0284
         ALR   @08,@02                                             0284
         AL    @08,@CF01097                                        0284
         MVC   ENTRYVAL(44),NTRYVAL-23(@08)                        0284
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  IF THE ENTRY IS NOT FULLY QUALIFIED - ISSUE   @Y30SSFR*/
*          /*  THE UQUAL MACRO TO OBTAIN THE TRAILING QUALIFIER      */
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0285
*          IF NTRYFUQ(INDEX) = ON                                  0285
*            THEN                                                  0285
         LR    @08,@02                                             0285
         AL    @08,@TF00001                                        0285
         AL    @08,@CF01098                                        0285
         TM    NTRYFUQ-12(@08),B'10000000'                         0285
         BNO   @RF00285                                            0285
*              DO;                                         /*@YL026UA*/
*                                                                  0286
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  CLEAR THE STORAGE THAT IS TO BE OCCUPIED  @Y30SSFR*/
*              /*  BY THE PARAMETER LIST PASSED TO UQUAL.    @Y30SSFR*/
*              /*  PLACE THE ADDRESS OF THE ENTRY NAME TO    @Y30SSFR*/
*              /*  BE QUALIFIED AND THE PASSWORD INTO THE    @Y30SSFR*/
*              /*  PARAMETER LIST.                           @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0287
*              QUALLIST = ''B;                             /*@Y30SSFR*/
         XC    QUALLIST(12),QUALLIST                               0287
*              QUALADDR = ADDR(ENTRYVAL);                  /*@Y30SSFR*/
         LA    @08,ENTRYVAL                                        0288
         ST    @08,QUALADDR                                        0288
*              IF NTRYPLN(INDEX) ^= 0                      /*@Y30SSFR*/
*                THEN                                      /*@Y30SSFR*/
         L     @08,@TF00001                                        0289
         AL    @08,@CF01099                                        0289
         SLR   @15,@15                                             0289
         IC    @15,NTRYPLN-2(@08,@02)                              0289
         C     @15,@CF00115                                        0289
         BE    @RF00289                                            0289
*                  QUALPAS = ADDR(NTRYPAS(INDEX));         /*@Y30SSFR*/
*                                                                  0290
         L     @08,@TF00001                                        0290
         AL    @02,@CF01100                                        0290
         LA    @08,NTRYPAS-3(@08,@02)                              0290
         ST    @08,QUALPAS                                         0290
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  IF THE USER HAS SPECIFIED THE CATALOG     @Y30SSFR*/
*              /*  PARAMETER ON THE AMS DELETE COMMAND,      @Y30SSFR*/
*              /*  PLACE THIS INFORMATION IN THE UQUAL       @Y30SSFR*/
*              /*  PARAMETER LIST.                           @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0291
*              IF ADDR(CAT) ^= NULLPTR & CATLEN ^= 0       /*@Y30SSFR*/
*                THEN                                      /*@Y30SSFR*/
@RF00289 L     @08,@PC00001+4                                      0291
         L     @08,FDTPTR+8(,@08)                                  0291
         LTR   @08,@08                                             0291
         BZ    @RF00291                                            0291
         CLI   CATLEN(@08),0                                       0291
         BE    @RF00291                                            0291
*                  DO;                                     /*@Y30SSFR*/
*                  QUALCAT = ADDR(CATVAL);                 /*@Y30SSFR*/
         LA    @02,CATVAL(,@08)                                    0293
         ST    @02,QUALCAT                                         0293
*                  IF CATPLN ^= 0                          /*@Y30SSFR*/
*                    THEN                                  /*@Y30SSFR*/
         CLI   CATPLN(@08),0                                       0294
         BE    @RF00294                                            0294
*                      QUALPAS = ADDR(CATPAS);             /*@Y30SSFR*/
         LA    @08,CATPAS(,@08)                                    0295
         ST    @08,QUALPAS                                         0295
*                  END;                                    /*@Y30SSFR*/
*                                                                  0296
@RF00294 DS    0H                                                  0297
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  ISSUE THE UQUAL MACRO OF THE SYSTEM       @Y30SSFR*/
*              /*  ADAPTER TO OBTAIN THE FULLY QUALIFIED     @Y30SSFR*/
*              /*  ENTRY NAME.  TEST THE RETURN, AND IF AN   @Y30SSFR*/
*              /*  ERROR IS INDICATED, SET ENTRYRC TO 8.     @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0297
*              CALL IDCSAQL0(GDTTBL,QUALADDR,ENTRYLEN,QUALCAT,QUALPAS);
@RF00291 L     @08,@PC00001                                        0297
         ST    @08,@AL00001                                        0297
         LA    @15,QUALADDR                                        0297
         ST    @15,@AL00001+4                                      0297
         LA    @15,ENTRYLEN                                        0297
         ST    @15,@AL00001+8                                      0297
         LA    @15,QUALCAT                                         0297
         ST    @15,@AL00001+12                                     0297
         LA    @15,QUALPAS                                         0297
         ST    @15,@AL00001+16                                     0297
         MVI   @AL00001+16,X'80'                                   0297
         L     @15,GDTQAL(,@08)                                    0297
         LA    @01,@AL00001                                        0297
         BALR  @14,@15                                             0297
*                                                          /*#YL026UA*/
*              RESPECIFY RTNREG RSTD;                              0298
*              TESTRC = RTNREG;                                    0299
         LR    TESTRC,RTNREG                                       0299
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30SSFR*/
*              IF TESTRC ^= 0                              /*@Y30SSFR*/
*                THEN                                      /*@Y30SSFR*/
         LTR   TESTRC,TESTRC                                       0301
         BZ    @RF00301                                            0301
*                  ENTRYRC = LASTCC08;                     /*@Y30SSFR*/
         LA    ENTRYRC,8                                           0302
*              END;                                        /*#YL026UA*/
*                                                                  0303
@RF00301 DS    0H                                                  0304
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  IF THE ENTRY IS FOR PDS MEMBER DELETION -     @Y30SSFR*/
*          /*  DELETE THE MEMBER FROM ITS DIRECTORY          @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0304
*          IF NTRYMLN(INDEX) ^= 0                                  0304
*            THEN                                                  0304
@RF00285 LH    @08,INDEX                                           0304
         MH    @08,@CH01079                                        0304
         L     @02,@PC00001+4                                      0304
         L     @02,FDTPTR(,@02)                                    0304
         AL    @02,@CF01101                                        0304
         SLR   @15,@15                                             0304
         IC    @15,NTRYMLN-13(@08,@02)                             0304
         C     @15,@CF00115                                        0304
         BE    @RF00304                                            0304
*              DO;                                         /*#YL026UA*/
*              CALL MEMDLETE;                              /*@Y30SSFR*/
         BAL   @14,MEMDLETE                                        0306
*              RESPECIFY RTNREG RSTD;                              0307
*              TESTRC = RTNREG;                                    0308
         LR    TESTRC,RTNREG                                       0308
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30SSFR*/
*              LASTCOND = MAX(TESTRC,LASTCOND);            /*@Y30SSFR*/
         L     @08,@PC00001+8                                      0310
         LH    @15,LASTCOND(,@08)                                  0310
         CR    @15,TESTRC                                          0310
         BNL   *+6
         LR    @15,TESTRC                                          0310
         STH   @15,LASTCOND(,@08)                                  0310
*              END;                                        /*#YL026UA*/
*            ELSE                                                  0312
*                                                                  0312
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  IF THE ENTRY IS FOR PDS MEMBER DELETION -       #YL026UA*/
*        /*  PROCESSING IS COMPLETE AT THIS POINT            #YL026UA*/
*        /*                                                  #YL026UA*/
*        /************************************************************/
*                                                                  0312
*NOTPDS:       DO;                                         /*@Y30SSFR*/
*                                                                  0312
         B     @RC00304                                            0312
@RF00304 DS    0H                                                  0312
NOTPDS   DS    0H                                                  0313
*              GENCNT = 0;             /* SET # GENERIC  *//*@ZA00605*/
         SLR   GENCNT,GENCNT                                       0313
*                                      /* ENTRIES TO 0   *//*@ZA00605*/
*                                                                  0314
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  IF THE ENTRY NAME GIVEN BY THE USER IS    @Y30SSFR*/
*              /*  GENERIC, THEN ISSUE THE UCIR MACRO TO     @Y30SSFR*/
*              /*  OBTAIN THE LIST OF NAMES DESCRIBED BY     @Y30SSFR*/
*              /*  THE GENERIC NAME.                         @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0314
*              IF NTRYPOS(INDEX) ^= 0                              0314
*                THEN                                              0314
         LH    @08,INDEX                                           0314
         MH    @08,@CH01079                                        0314
         L     @05,@PC00001+4                                      0314
         L     @05,FDTPTR(,@05)                                    0314
         AL    @05,@CF01102                                        0314
         SLR   @02,@02                                             0314
         IC    @02,NTRYPOS-11(@08,@05)                             0314
         C     @02,@CF00115                                        0314
         BE    @RF00314                                            0314
*GENLOC:           DO;                                     /*@Y30SSFR*/
*                                                                  0315
GENLOC   DS    0H                                                  0316
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  POINT TO THE STORAGE FOR THE CIRAGL,  @Y30SSFR*/
*                  /*  AND ZERO OUT THAT AREA OF CORE.       @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0316
*                  CIRPTR = ADDR(CIRLIST);                 /*@Y30SSFR*/
         LA    CIRPTR,CIRLIST                                      0316
*                  CIRLIST = ''B;                          /*@Y30SSFR*/
*                                                                  0317
         XC    CIRLIST(32),CIRLIST                                 0317
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  INDICATE THAT ONLY ASTERISK IS        @Y30SSFR*/
*                  /*  PRESENT IN THE ENTRY NAME.            @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0318
*                  CIRTYP1Q = ON;                          /*@Y30SSFR*/
*                                                                  0318
         OI    CIRTYP1Q(CIRPTR),B'10000000'                        0318
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  SET THE LENGTH AND ADDRESS OF THE     @Y30SSFR*/
*                  /*  HEADER (THE PART OF THE NAME PRIOR    @Y30SSFR*/
*                  /*  TO THE ASTERISK).                     @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0319
*                  CIRHLN = NTRYPOS(INDEX) - 1;            /*@Y30SSFR*/
         LH    @08,INDEX                                           0319
         MH    @08,@CH01079                                        0319
         L     @05,@PC00001+4                                      0319
         L     @05,FDTPTR(,@05)                                    0319
         AL    @05,@CF01102                                        0319
         SLR   @15,@15                                             0319
         IC    @15,NTRYPOS-11(@08,@05)                             0319
         LR    @08,@15                                             0319
         BCTR  @08,0                                               0319
         STH   @08,CIRHLN(,CIRPTR)                                 0319
*                  CIRHDR = ADDR(ENTRYVAL);                /*@Y30SSFR*/
*                                                                  0320
         LA    @08,ENTRYVAL                                        0320
         ST    @08,CIRHDR(,CIRPTR)                                 0320
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  SET THE LENGTH AND ADDRESS OF THE     @Y30SSFR*/
*                  /*  TRAILER IF ANY.                       @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0321
*                  IF ENTRYLEN ^= NTRYPOS(INDEX)                   0321
*                    THEN                                          0321
         LH    @05,ENTRYLEN                                        0321
         CR    @05,@15                                             0321
         BE    @RF00321                                            0321
*                      DO;                                 /*@Y30SSFR*/
*                      CIRTLR = CIRHDR + NTRYPOS(INDEX);   /*@Y30SSFR*/
         ALR   @08,@15                                             0323
         ST    @08,CIRTLR(,CIRPTR)                                 0323
*                      CIRTLN = ENTRYLEN - NTRYPOS(INDEX); /*@Y30SSFR*/
         SLR   @05,@15                                             0324
         STH   @05,CIRTLN(,CIRPTR)                                 0324
*                      END;                                /*@Y30SSFR*/
*                                                                  0325
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  SET THE ADDRESS OF THE POINTER FOR    @Y30SSFR*/
*                  /*  THE LIST OF NAMES RETURNED BY GENERIC @Y30SSFR*/
*                  /*  LOCATE.                               @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0326
*                  CIRWKP = ADDR(GENWKPTR);                /*@Y30SSFR*/
*                                                                  0326
@RF00321 LA    @08,GENWKPTR                                        0326
         ST    @08,CIRWKP(,CIRPTR)                                 0326
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  PLACE PASSWORD AND CATALOG            @Y30SSFR*/
*                  /*  INFORMATION IN THE CIRAGL IF THEY     @Y30SSFR*/
*                  /*  ARE AVAILABLE.                        @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0327
*                  IF NTRYPLN(INDEX) ^= NULLPTR            /*@Y30SSFR*/
*                    THEN                                          0327
         LH    @08,INDEX                                           0327
         MH    @08,@CH01079                                        0327
         L     @05,@PC00001+4                                      0327
         L     @05,FDTPTR(,@05)                                    0327
         LA    @01,0(@08,@05)                                      0327
         AL    @01,@CF01099                                        0327
         SLR   @00,@00                                             0327
         IC    @00,NTRYPLN-2(,@01)                                 0327
         C     @00,@CF00115                                        0327
         BE    @RF00327                                            0327
*                      CIRPWD = ADDR(NTRYPAS(INDEX));      /*@Y30SSFR*/
         AL    @05,@CF01100                                        0328
         LA    @08,NTRYPAS-3(@08,@05)                              0328
         ST    @08,CIRPWD(,CIRPTR)                                 0328
*                  IF ADDR(CAT) ^= NULLPTR & CATLEN ^= 0           0329
*                    THEN                                          0329
@RF00327 L     @08,@PC00001+4                                      0329
         L     @08,FDTPTR+8(,@08)                                  0329
         LTR   @08,@08                                             0329
         BZ    @RF00329                                            0329
         CLI   CATLEN(@08),0                                       0329
         BE    @RF00329                                            0329
*                      DO;                                 /*@Y30SSFR*/
*                      CIRCAT = ADDR(CATVAL);              /*#YL026UA*/
         LA    @05,CATVAL(,@08)                                    0331
         ST    @05,CIRCAT(,CIRPTR)                                 0331
*                      IF CATPLN ^= 0                              0332
*                        THEN                                      0332
         CLI   CATPLN(@08),0                                       0332
         BE    @RF00332                                            0332
*                          CIRPWD = ADDR(CATPAS);          /*#YL026UA*/
         LA    @08,CATPAS(,@08)                                    0333
         ST    @08,CIRPWD(,CIRPTR)                                 0333
*                      END;                                /*@Y30SSFR*/
*                                                                  0334
@RF00332 DS    0H                                                  0335
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  PLACE THE GETPOOL ID TO BE USED BY    @Y30SSFR*/
*                  /*  GENERIC LOCATE IN GETTING THE         @Y30SSFR*/
*                  /*  STORAGE FOR THE LIST OF NAMES TO BE   @Y30SSFR*/
*                  /*  RETURNED IN THE CIRAGL.               @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0335
*                  CIRPID = DLGPID;                        /*@Y30SSFR*/
*                                                                  0335
@RF00329 MVC   CIRPID(4,CIRPTR),DLGPID                             0335
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  ISSUE THE UCIR AND TEST THE RETURN    @Y30SSFR*/
*                  /*  CODE.  IF IT IS NONZERO, INDICATE     @Y30SSFR*/
*                  /*  AN ERROR.                             @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0336
*                  CALL IDCSACR0(GDTTBL,CIRAGL);           /*@Y30SSFR*/
*                                                                  0336
         L     @08,@PC00001                                        0336
         ST    @08,@AL00001                                        0336
         ST    CIRPTR,@AL00001+4                                   0336
         MVI   @AL00001+4,X'80'                                    0336
         L     @15,GDTCIR(,@08)                                    0336
         LA    @01,@AL00001                                        0336
         BALR  @14,@15                                             0336
*                  RESPECIFY RTNREG RSTD;                          0337
*                  TESTRC = RTNREG;                                0338
         LR    TESTRC,RTNREG                                       0338
*                  RESPECIFY RTNREG UNRSTD;                /*@Y30SSFR*/
*                  IF TESTRC ^= 0                                  0340
*                    THEN                                          0340
         LTR   TESTRC,TESTRC                                       0340
         BZ    @RF00340                                            0340
*                      ENTRYRC = MAX(ENTRYRC,LASTCC08);    /*@Y30SSFR*/
         LA    @08,8                                               0341
         CR    ENTRYRC,@08                                         0341
         BNL   *+6
         LR    ENTRYRC,@08                                         0341
*                    ELSE                                          0342
*                                                                  0342
*                    /************************************************/
*                    /*                                      @Y30SSFR*/
*                    /*  SET THE VALUE OF THE GENERIC LOOP   @Y30SSFR*/
*                    /*  COUNTER ON THE BASIS OF THE NUMBER  @Y30SSFR*/
*                    /*  OF NAMES RETURNED BY GENERIC        @Y30SSFR*/
*                    /*  LOCATE.                             @Y30SSFR*/
*                    /*  IF THE ENTRY NAME WAS NOT GENERIC,  @Y30SSFR*/
*                    /*  THE LOOP CONTROL IS SET TO 1.       @Y30SSFR*/
*                    /*                                      @Y30SSFR*/
*                    /************************************************/
*                                                                  0342
*                      GENCNT = GENNUM;                    /*@Y30SSFR*/
         B     @RC00340                                            0342
@RF00340 L     @08,GENWKPTR                                        0342
         L     GENCNT,GENNUM(,@08)                                 0342
*                  END GENLOC;                             /*@Y30SSFR*/
*                ELSE                                              0344
*                                                                  0344
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  THE ENTRY NAME GIVEN WAS NOT GENERIC, @Y30SSFR*/
*                  /*  SO THAT THE COUNTER VALUE IS SET TO   @Y30SSFR*/
*                  /*  ONE.  ALSO, THE GENERIC WORKAREA      @Y30SSFR*/
*                  /*  POINTER IS SET TO POINT TO THE AREA   @Y30SSFR*/
*                  /*  OF STORAGE THAT HOLDS THE ENTRY NAME  @Y30SSFR*/
*                  /*  OF THE OBJECT TO BE DELETED.          @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0344
*                  DO;                                     /*@Y30SSFR*/
         B     @RC00314                                            0344
@RF00314 DS    0H                                                  0345
*                  GENCNT = 1;                             /*@Y30SSFR*/
         LA    GENCNT,1                                            0345
*                  ATYPE = 0;                              /*@Y30SSFR*/
         MVI   ATYPE,X'00'                                         0346
*                  GENWKPTR = ADDR(ENTRIES);               /*@Y30SSFR*/
         LA    @08,ENTRIES                                         0347
         ST    @08,GENWKPTR                                        0347
*                  END;                                    /*@Y30SSFR*/
*                                                                  0348
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  LOOP, DELETING THE CATALOG ENTRIES FOR    @Y30SSFR*/
*              /*  FOR THE NAMES IN THE GENERIC WORK AREA.   @Y30SSFR*/
*              /*  THE SECOND LEVEL PROCESSOR DELTPROC       @Y30SSFR*/
*              /*  ACTUALLY SETS UP THE DELETES.             @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0349
*GENLOOP:      DO ENT = 1 TO GENCNT                        /*@Y30SSFR*/
*                 WHILE LASTCOND < LASTCC12;               /*@Y30SSFR*/
@RC00314 DS    0H                                                  0349
GENLOOP  LA    ENT,1                                               0349
         B     @DE00349                                            0349
@DL00349 L     @08,@PC00001+8                                      0349
         LH    @08,LASTCOND(,@08)                                  0349
         C     @08,@CF00035                                        0349
         BNL   @DC00349                                            0349
*                CALL DELTPROC;                            /*@Y30SSFR*/
         BAL   @14,DELTPROC                                        0350
*              END GENLOOP;                                /*@Y30SSFR*/
         AL    ENT,@CF00219                                        0351
@DE00349 CR    ENT,GENCNT                                          0351
         BNH   @DL00349                                            0351
@DC00349 DS    0H                                                  0352
*            END NOTPDS;                                   /*@Y30SSFR*/
*                                                                  0352
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  SET THE LAST CONDITION CODE TO THE MAXIMUM    @Y30SSFR*/
*          /*  VALUE ENCOUNTERRED FOR THIS ENTRY.  THIS IS   @Y30SSFR*/
*          /*  DONE TO PICK UP THE VALUE ENCOUNTERED IN      @Y30SSFR*/
*          /*  A FAILING GENERIC LOCATE IF ANY.              @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0353
*          LASTCOND = MAX(ENTRYRC,LASTCOND);               /*@Y30SSFR*/
@RC00304 L     @08,@PC00001+8                                      0353
         LH    @02,LASTCOND(,@08)                                  0353
         CR    @02,ENTRYRC                                         0353
         BNL   *+6
         LR    @02,ENTRYRC                                         0353
         STH   @02,LASTCOND(,@08)                                  0353
*          ENTRYRC = 0;                                    /*@Y30SSFR*/
         SLR   ENTRYRC,ENTRYRC                                     0354
*        END NTRYLOOP;                                     /*#Y30SSFR*/
*                                                                  0355
         LA    @08,1                                               0355
         AH    @08,INDEX                                           0355
@DE00278 STH   @08,INDEX                                           0355
         L     @15,@PC00001+4                                      0355
         L     @01,FDTPTR(,@15)                                    0355
         CH    @08,NTRYCNT(,@01)                                   0355
         BNH   @DL00278                                            0355
@DC00278 DS    0H                                                  0356
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  ISSUE A COMPLETION MESSAGE IF SOME FUNCTION HAS BEEN    */
*        /*  COMPLETED.                                      #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0356
*        IF (LASTCOND > LASTCC00) & (GDTECT ^= NULLPTR)    /*#Y30SSFR*/
*          THEN                                                    0356
         SLR   @08,@08                                             0356
         L     @15,@PC00001+8                                      0356
         CH    @08,LASTCOND(,@15)                                  0356
         BNL   @RF00356                                            0356
         L     @14,@PC00001                                        0356
         C     @08,GDTECT(,@14)                                    0356
         BE    @RF00356                                            0356
*            DO;                                           /*#Y30SSFR*/
*            DARGSMOD = UNIVMSG;                           /*#Y30SSFR*/
         L     @08,DDSTRU                                          0358
         MVC   DARGSMOD(3,@08),@CC00892                            0358
*            DARGSENT = TSOCOMP;                           /*#Y30SSFR*/
         MVI   DARGSENT(@08),X'0F'                                 0359
*            DARGILP = 2;                                  /*#Y30SSFR*/
         MVC   DARGILP(2,@08),@CH00153                             0360
*            DARGDBP = ADDR(LASTCOND);                     /*#Y30SSFR*/
*                                                                  0361
         ST    @15,DARGDBP(,@08)                                   0361
*            CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);         /*#Y30SSFR*/
*                                                                  0362
         ST    @14,@AL00001                                        0362
         LA    @08,@CF00115                                        0362
         ST    @08,@AL00001+4                                      0362
         LA    @08,DDSTRU                                          0362
         ST    @08,@AL00001+8                                      0362
         MVI   @AL00001+8,X'80'                                    0362
         L     @15,GDTPRT(,@14)                                    0362
         LA    @01,@AL00001                                        0362
         BALR  @14,@15                                             0362
*            END;                                          /*#Y30SSFR*/
*          ELSE                                            /*#Y30SSFR*/
*            DO;                                           /*#Y30SSFR*/
         B     @RC00356                                            0364
@RF00356 DS    0H                                                  0365
*            DARGSMOD = UNIVMSG;                           /*#Y30SSFR*/
         L     @08,DDSTRU                                          0365
         MVC   DARGSMOD(3,@08),@CC00892                            0365
*            IF LASTCOND = LASTCC12                        /*#Y30SSFR*/
*              THEN                                                0366
         L     @15,@PC00001+8                                      0366
         CLC   LASTCOND(2,@15),@CH00035                            0366
         BNE   @RF00366                                            0366
*                DARGSENT = TERMMSG;                       /*#Y30SSFR*/
         MVI   DARGSENT(@08),X'03'                                 0367
*              ELSE                                        /*#Y30SSFR*/
*                DARGSENT = ENDMSG;                        /*#Y30SSFR*/
         B     @RC00366                                            0368
@RF00366 L     @08,DDSTRU                                          0368
         MVI   DARGSENT(@08),X'01'                                 0368
*            DARGDBP = ADDR(LASTCOND);                     /*#Y30SSFR*/
@RC00366 L     @08,DDSTRU                                          0369
         L     @15,@PC00001+8                                      0369
         ST    @15,DARGDBP(,@08)                                   0369
*            DARGILP = 2;                                  /*#Y30SSFR*/
*                                                                  0370
         MVC   DARGILP(2,@08),@CH00153                             0370
*            CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);        /*#Y30SSFR*/
*                                                                  0371
         L     @08,@PC00001                                        0371
         ST    @08,@AL00001                                        0371
         LA    @15,@CF00115                                        0371
         ST    @15,@AL00001+4                                      0371
         LA    @15,DDSTRU                                          0371
         ST    @15,@AL00001+8                                      0371
         MVI   @AL00001+8,X'80'                                    0371
         L     @15,GDTPRT(,@08)                                    0371
         LA    @01,@AL00001                                        0371
         BALR  @14,@15                                             0371
*            END;                                          /*#Y30SSFR*/
*                                                                  0372
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  RETURN TO THE AMS EXECUTIVE                     #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0373
*        CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);                     0373
@RC00356 L     @08,@PC00001                                        0373
         ST    @08,@AL00001                                        0373
         LA    @15,MODID                                           0373
         ST    @15,@AL00001+4                                      0373
         L     @15,@PC00001+8                                      0373
         ST    @15,@AL00001+8                                      0373
         MVI   @AL00001+8,X'80'                                    0373
         L     @15,GDTEPL(,@08)                                    0373
         LA    @01,@AL00001                                        0373
         BALR  @14,@15                                             0373
*       /*#Y30SSFR*/                                               0374
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  PROCEDURE NAME - DELTPROC (SECOND               #Y30SSFR*/
*        /*      LEVEL PROCESSOR)                            #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /*  FUNCTION - DELTPROC HANDLES THE DELETION OF ONE #Y30SSFR*/
*        /*  ENTRY FROM THE CATALOG.  THAT ENTRY IS EITHER   #Y30SSFR*/
*        /*  ONE SPECIFIED DIRECTLY BY THE USER OR ONE THAT  #Y30SSFR*/
*        /*  IS PART OF A GENERIC LIST RETURNED BY GENERIC   #Y30SSFR*/
*        /*  LOCATE.                                         #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /*  INPUT - NONE                                    #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /*  OUTPUT - THE CATALOG ENTRY IS DELETED OR        #Y30SSFR*/
*        /*  APPROPRIATE ERROR MESSAGES ARE PRINTED.         #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0374
*DELTPROC: PROCEDURE;                                      /*#Y30SSFR*/
*                                                                  0374
@EL00001 L     @13,4(,@13)                                         0374
@EF00001 L     @00,@SIZDATD                                        0374
         LR    @01,@09                                             0374
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0374
         BR    @14                                                 0374
DELTPROC STM   @14,@02,@SA00002                                    0374
         STM   @04,@12,@SA00002+20                                 0374
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  SET WAPTR TO POINT TO THAT PART OF CORE THAT    #Y30SSFR*/
*        /*  SERVES AS THE FIRST WORKAREA ON ANY CALL TO CMS #Y30SSFR*/
*        /*  DELETE.                                         #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0375
*        WAPTR = ADDR(WORKAREA);                           /*#Y30SSFR*/
*                                                                  0375
         LA    @08,WORKAREA                                        0375
         ST    @08,WAPTR                                           0375
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  IF THE ENTRY IS GENERIC - GET THE CATALOG NAME  #YL026UA*/
*        /*  FROM THE LIST TO USE IN DIRECTING THE DELETE    #YL026UA*/
*        /*                                                  #YL026UA*/
*        /************************************************************/
*                                                                  0376
*        IF ENTTYP(ENT) = '0'                                      0376
*          THEN                                                    0376
         L     @08,GENWKPTR                                        0376
         LR    @04,ENT                                             0376
         MH    @04,@CH01066                                        0376
         ST    @04,@TF00001                                        0376
         ALR   @04,@08                                             0376
         AL    @04,@CF01103                                        0376
         CLI   ENTTYP-4(@04),C'0'                                  0376
         BNE   @RF00376                                            0376
*            CATNAME = ENTVAL(ENT);                        /*#YL026UA*/
         AL    @08,@TF00001                                        0377
         AL    @08,@CF01104                                        0377
         MVC   CATNAME(44),ENTVAL-5(@08)                           0377
*          ELSE                                                    0378
*SAMECAT:    DO;                                           /*#Y30SSFR*/
         B     @RC00376                                            0378
@RF00376 DS    0H                                                  0378
SAMECAT  DS    0H                                                  0379
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  INITIALIZE THE NOTFOUND FLAG TO OFF.  IF    #Y30SSFR*/
*            /*  THE CATALOG LOCATE DONE IN FINDTYPE RETURNS #Y30SSFR*/
*            /*  INDICATING THAT THE ENTRY WAS NOT IN THE    #Y30SSFR*/
*            /*  CATALOG, THIS FLAG IS SET TO ON.            #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0379
*            NOTFOUND = OFF;                               /*#Y30SSFR*/
*                                                                  0379
         NI    NOTFOUND,B'01111111'                                0379
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  SET COREFLAG TO OFF TO INDICATE THAT WE     #Y30SSFR*/
*            /*  HAVE NOT GOTTEN ANY CORE AS YET DURING THE  #Y30SSFR*/
*            /*  DELETION OF THIS ENTRY.                     #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0380
*            COREFLAG = OFF;                               /*#Y30SSFR*/
*                                                                  0380
         NI    COREFLAG,B'01111111'                                0380
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  IF THE ENTRY TYPE WAS NOT SPECIFIED ON THE DELETE   */
*            /*  COMMAND, DO A CATALOG LOCATE TO DETERMINE THE TYPE. */
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0381
*            IF TYPEFLAG = OFF & ENTRYRC < LASTCC08                0381
*              THEN                                                0381
*                                                                  0381
         TM    TYPEFLAG,B'10000000'                                0381
         BNZ   @RF00381                                            0381
         C     ENTRYRC,@CF00179                                    0381
         BNL   @RF00381                                            0381
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  TEST TO DETERMINE IF A GENERIC LOCATE   @Y30SSFR*/
*                /*  HAS ALREADY BEEN DONE.  IF SO, THEN     @Y30SSFR*/
*                /*  THE ENTRY TYPE HAS BEEN RETURNED BY     @Y30SSFR*/
*                /*  GENERIC LOCATE, AND SO THERE IS NO      @Y30SSFR*/
*                /*  NEED TO DO AN ORDINARY VSAM LOCATE.     @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  0382
*                IF NTRYPOS(INDEX) = 0                             0382
*                  THEN                                            0382
         LH    @08,INDEX                                           0382
         MH    @08,@CH01079                                        0382
         L     @04,@PC00001+4                                      0382
         L     @04,FDTPTR(,@04)                                    0382
         AL    @04,@CF01102                                        0382
         SLR   @02,@02                                             0382
         IC    @02,NTRYPOS-11(@08,@04)                             0382
         C     @02,@CF00115                                        0382
         BNE   @RF00382                                            0382
*                    DO;                                   /*@Y30SSFR*/
*                                                                  0383
*                    /************************************************/
*                    /*                                      @Y30SSFR*/
*                    /*  THE NAME GIVEN BY THE USER WAS AN   @Y30SSFR*/
*                    /*  ORDINARY, NON-GENERIC NAME.  AS NO  @Y30SSFR*/
*                    /*  TYPE WAS SPECIFIED, CALL FINDTYPE   @Y30SSFR*/
*                    /*  TO DO A VSAM LOCATE.  TEST THE      @Y30SSFR*/
*                    /*  RETURN CODE FROM FINDTYPE, AND SET  @Y30SSFR*/
*                    /*  ENTRYRC ACCORDINGLY.                @Y30SSFR*/
*                    /*                                      @Y30SSFR*/
*                    /************************************************/
*                                                                  0384
*                    CALL FINDTYPE (INDEX,LOCTYPE);        /*@Y30SSFR*/
         LA    @08,INDEX                                           0384
         ST    @08,@AL00001                                        0384
         LA    @08,LOCTYPE                                         0384
         ST    @08,@AL00001+4                                      0384
         LA    @01,@AL00001                                        0384
         BAL   @14,FINDTYPE                                        0384
*                    RESPECIFY RTNREG RSTD;                        0385
*                    TESTRC = RTNREG;                              0386
         LR    TESTRC,RTNREG                                       0386
*                    RESPECIFY RTNREG UNRSTD;              /*@Y30SSFR*/
*                    ENTRYRC = MAX(ENTRYRC,TESTRC);        /*@Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0388
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0388
*                    END;                                  /*@Y30SSFR*/
*                  ELSE                                            0390
*                                                                  0390
*                    /************************************************/
*                    /*                                      @Y30SSFR*/
*                    /*  SET LOCTYPE FROM THE VALUE FOR THE  @Y30SSFR*/
*                    /*  TYPE RETURNED BY THE GENERIC LOCATE @Y30SSFR*/
*                    /*                                      @Y30SSFR*/
*                    /************************************************/
*                                                                  0390
*                    LOCTYPE = ENTTYP(ENT);                /*@Y30SSFR*/
         B     @RC00382                                            0390
@RF00382 LR    @08,ENT                                             0390
         MH    @08,@CH01066                                        0390
         L     @04,GENWKPTR                                        0390
         ALR   @04,@08                                             0390
         AL    @04,@CF01103                                        0390
         MVC   LOCTYPE(1),ENTTYP-4(@04)                            0390
*                ELSE                                              0391
*                                                                  0391
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  SET LOCTYPE TO BLANK TO INDICATE THAT @Y30SSFR*/
*                  /*  THE TYPE WAS SPECIFIED ON THE DELETE  @Y30SSFR*/
*                  /*  COMMAND.                              @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0391
*                  LOCTYPE = ' ';                          /*@Y30SSFR*/
*                                                                  0391
         B     @RC00381                                            0391
@RF00381 MVI   LOCTYPE,C' '                                        0391
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  DETERMINE IF THERE ARE ANY INVALID OR INSUFFICIENT  */
*            /*  PARAMETERS FOR THE DELETE FUNCTION WHICH WERE NOT   */
*            /*  CHECKED BY THE READER/INTERPRETER BECAUSE THE TYPE  */
*            /*  FIELD WAS NOT SPECIFIED ON THE DELETE COMMAND.      */
*            /*  ALSO CHECK FOR INSUFFICIENT PARAMETERS IF NON-VSAM  */
*            /*  TYPE WAS SPECIFIED BECAUSE READER/INTERPRETER DOES  */
*            /*  NOT DO ALL PARAMETER CHECKING FOR NON-VSAM ENTRIES  */
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0392
*            IF ENTRYRC < LASTCC08 &                               0392
*              ((ADDR(NSCR) = NULLPTR  & ADDR(ALIEN) ^= NULLPTR) × 0392
*              TYPEFLAG = OFF)                                     0392
*              THEN                                                0392
@RC00381 C     ENTRYRC,@CF00179                                    0392
         BNL   @RF00392                                            0392
         SLR   @08,@08                                             0392
         L     @04,@PC00001+4                                      0392
         C     @08,FDTPTR+64(,@04)                                 0392
         BNE   @GL00015                                            0392
         C     @08,FDTPTR+56(,@04)                                 0392
         BNE   @RT00392                                            0392
@GL00015 TM    TYPEFLAG,B'10000000'                                0392
         BNZ   @RF00392                                            0392
@RT00392 DS    0H                                                  0393
*                DO;                                       /*@Y30SSFR*/
*                CALL PARAMCHK (LOCTYPE);                  /*@Y30SSFR*/
         LA    @08,LOCTYPE                                         0394
         ST    @08,@AL00001                                        0394
         LA    @01,@AL00001                                        0394
         BAL   @14,PARAMCHK                                        0394
*                RESPECIFY RTNREG RSTD;                            0395
*                TESTRC = RTNREG;                                  0396
         LR    TESTRC,RTNREG                                       0396
*                RESPECIFY RTNREG UNRSTD;                  /*@Y30SSFR*/
*                ENTRYRC = MAX(ENTRYRC,TESTRC);            /*@Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0398
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0398
*                END;                                      /*@Y30SSFR*/
*                                                                  0399
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  BUILD THE CATALOG PARAMETER LIST FROM PARAMETERS    */
*            /*  SPECIFIED ON THE DELETE COMMAND.            @Y30SSFR*/
*            /*  CALL THE VSAM CATALOG TO DELETE THE CATALOG ENTRIES.*/
*            /*  EXAMINE THE RETURN CODE AND ISSUE DELETION MESSAGES */
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0400
*            IF ENTRYRC < LASTCC08                                 0400
*              THEN                                                0400
@RF00392 C     ENTRYRC,@CF00179                                    0400
         BNL   @RF00400                                            0400
*                DO;                                       /*@Y30SSFR*/
*                NODEL = OFF;                              /*@Y30SSFR*/
         NI    NODEL,B'01111111'                                   0402
*                CALL BUILDCPL (INDEX,LOCTYPE);            /*@Y30SSFR*/
         LA    @08,INDEX                                           0403
         ST    @08,@AL00001                                        0403
         LA    @08,LOCTYPE                                         0403
         ST    @08,@AL00001+4                                      0403
         LA    @01,@AL00001                                        0403
         BAL   @14,BUILDCPL                                        0403
*                RESPECIFY RTNREG RSTD;                            0404
*                TESTRC = RTNREG;                                  0405
         LR    TESTRC,RTNREG                                       0405
*                RESPECIFY RTNREG UNRSTD;                  /*@Y30SSFR*/
*                ENTRYRC = MAX(TESTRC,ENTRYRC);            /*@Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0407
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0407
*                IF ENTRYRC < LASTCC08 & NODEL = OFF       /*@Y30SSFR*/
*                  THEN                                            0408
         C     ENTRYRC,@CF00179                                    0408
         BNL   @RF00408                                            0408
         TM    NODEL,B'10000000'                                   0408
         BNZ   @RF00408                                            0408
*                    DO;                                   /*@Y30SSFR*/
*                    CALL CATCALL;                         /*@Y30SSFR*/
         BAL   @14,CATCALL                                         0410
*                    RESPECIFY RTNREG RSTD;                        0411
*                    TESTRC = RTNREG;                              0412
         LR    TESTRC,RTNREG                                       0412
*                    RESPECIFY RTNREG UNRSTD;              /*@Y30SSFR*/
*                    ENTRYRC = MAX(TESTRC,ENTRYRC);        /*@Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0414
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0414
*                    END;                                  /*@Y30SSFR*/
*                END;                                      /*@Y30SSFR*/
*                                                                  0416
@RF00408 DS    0H                                                  0417
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  IF THE ENTRY HAS BEEN DYNAMICALLY ALLOCATED @Y30SSFR*/
*            /*  ISSUE THE UDEALLOC MACRO TO DEALLOCATE IT   @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0417
*            IF DEALLOC = ON                                       0417
*              THEN                                                0417
@RF00400 TM    DEALLOC,B'10000000'                                 0417
         BNO   @RF00417                                            0417
*                DO;                                       /*@Y30SSFR*/
*                                                                  0418
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  IF THE OBJECT THAT WAS DELETED WAS A    @Y30SSFR*/
*                /*  NON-VSAM OBJECT,                        @Y30SSFR*/
*                /*  SET ALLOPTUN TO BE ON TO INDICATE       @Y30SSFR*/
*                /*  TO THE SYSTEM ADAPTOR THAT UDEALLOC     @Y30SSFR*/
*                /*  IS TO OVERRIDE THE PERMANENT            @Y30SSFR*/
*                /*  ALLOCATION DONE BY TSO ALLOCATE.        @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  0419
*                IF (ADDR(ALIEN) ^= NULLPTR) ×                     0419
*                   (LOCTYPE = CTGTALIN)                           0419
*                  THEN                                            0419
         L     @08,@PC00001+4                                      0419
         L     @08,FDTPTR+56(,@08)                                 0419
         LTR   @08,@08                                             0419
         BNZ   @RT00419                                            0419
         CLI   LOCTYPE,C'A'                                        0419
         BNE   @RF00419                                            0419
@RT00419 DS    0H                                                  0420
*                    ALLOPTUN = ON;                        /*@Y30SSFR*/
*                                                                  0420
         L     @08,ALLPTR                                          0420
         OI    ALLOPTUN(@08),B'00010000'                           0420
*                /****************************************************/
*                /*                                          #Y30SSFR*/
*                /*  TURN DEALLOC OFF TO INDICATE THAT AN    #Y30SSFR*/
*                /*  ATTEMPT HAS BEEN MADE TO UNALLOCATE     #Y30SSFR*/
*                /*  THE OBJECT.  THEN ISSUE THE UDEALLOC    #Y30SSFR*/
*                /*  MACRO TO DYNAMICALLY UNALLOCATE THE     #Y30SSFR*/
*                /*  OBJECT USING THE SAME ALLAGL THAT WAS   #Y30SSFR*/
*                /*  USED TO ALLOCATE IT.                    #Y30SSFR*/
*                /*                                          #Y30SSFR*/
*                /****************************************************/
*                                                                  0421
*                DEALLOC = OFF;                            /*#Y30SSFR*/
*                                                                  0421
@RF00419 NI    DEALLOC,B'01111111'                                 0421
*                CALL IDCSADL0(GDTTBL,ALLAGL);             /*#Y30SSFR*/
*                                                                  0422
         L     @08,@PC00001                                        0422
         ST    @08,@AL00001                                        0422
         L     @04,ALLPTR                                          0422
         ST    @04,@AL00001+4                                      0422
         MVI   @AL00001+4,X'80'                                    0422
         L     @15,GDTDLC(,@08)                                    0422
         LA    @01,@AL00001                                        0422
         BALR  @14,@15                                             0422
*                /****************************************************/
*                /*                                          #Y30SSFR*/
*                /*  TEST THE RETURN CODE FROM UDEALLOC,     #Y30SSFR*/
*                /*  AND SET ENTRYRC TO BE THE MAXIMUM OF    #Y30SSFR*/
*                /*  ITS CURRENT VALUE AND THE RETURN CODE   #Y30SSFR*/
*                /*  FROM UDEALLOC.                          #Y30SSFR*/
*                /*                                          #Y30SSFR*/
*                /****************************************************/
*                                                                  0423
*                RESPECIFY RTNREG RSTD;                            0423
*                TESTRC = RTNREG;                                  0424
         LR    TESTRC,RTNREG                                       0424
*                RESPECIFY RTNREG UNRSTD;                  /*#Y30SSFR*/
*                ENTRYRC = MAX(TESTRC,ENTRYRC);            /*#Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0426
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0426
*                END;                                      /*#Y30SSFR*/
*                                                                  0427
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  IF THE DATA SET WAS ALREADY ALLOCATED AND   #Y30SSFR*/
*            /*  ONE OF THE FOLLOWING THREE CONDITIONS IS    #Y30SSFR*/
*            /*  MET, DEALLOCATE IT WITH THE UDEALLOC MACRO. #Y30SSFR*/
*            /*  1.  THE DATA SET WAS NOT FOUND BY LOCATE.   #Y30SSFR*/
*            /*  2.  THE DATA SET IS DECLARED BY THE USER TO #Y30SSFR*/
*            /*  BE NONVSAM.                                 #Y30SSFR*/
*            /*  3. THE LOCATE DONE IN FINDTYPE SHOWS THE    #Y30SSFR*/
*            /*  DATA SET TO BE NONVSAM.                     #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0428
*            ELSE                                          /*#Y30SSFR*/
*              IF ((NOTFOUND = ON)                         /*@OZ11656*/
*                × (ADDR (ALIEN) ^= NULLPTR)               /*@Y30SSFR*/
*                × (LOCTYPE = CTGTALIN)) & DEALLOC = ON    /*@OZ11656*/
*                THEN                                      /*#Y30SSFR*/
         B     @RC00417                                            0428
@RF00417 TM    NOTFOUND,B'10000000'                                0428
         BO    @GL00019                                            0428
         L     @08,@PC00001+4                                      0428
         L     @08,FDTPTR+56(,@08)                                 0428
         LTR   @08,@08                                             0428
         BNZ   @GL00019                                            0428
         CLI   LOCTYPE,C'A'                                        0428
         BNE   @RF00428                                            0428
@GL00019 TM    DEALLOC,B'10000000'                                 0428
         BNO   @RF00428                                            0428
*                  DO;                                     /*#Y30SSFR*/
*                  ALLPTR = ADDR(ALLLIST);                 /*#Y30SSFR*/
         LA    @08,ALLLIST                                         0430
         ST    @08,ALLPTR                                          0430
*                  ALLAGL = ''B;                           /*#Y30SSFR*/
         XC    ALLAGL(31,@08),ALLAGL(@08)                          0431
*                  ALLDSN = ADDR(ENTVAL(ENT));             /*#Y30SSFR*/
*                                                                  0432
         LR    @04,ENT                                             0432
         MH    @04,@CH01066                                        0432
         L     @02,GENWKPTR                                        0432
         AL    @02,@CF01104                                        0432
         LA    @04,ENTVAL-5(@04,@02)                               0432
         ST    @04,ALLDSN(,@08)                                    0432
*                  /**************************************************/
*                  /*                                        #Y30SSFR*/
*                  /*  SET ALLOPTUN TO BE ON TO INDICATE     #Y30SSFR*/
*                  /*  TO THE SYSTEM ADAPTOR THAT UDEALLOC   #Y30SSFR*/
*                  /*  IS TO OVERRIDE THE PERMANENT          #Y30SSFR*/
*                  /*  ALLOCATION DONE BY TSO ALLOCATE.      #Y30SSFR*/
*                  /*                                        #Y30SSFR*/
*                  /**************************************************/
*                                                                  0433
*                  ALLOPTUN = ON;                          /*#Y30SSFR*/
*                                                                  0433
         OI    ALLOPTUN(@08),B'00010000'                           0433
*                  /**************************************************/
*                  /*                                        #Y30SSFR*/
*                  /*  IF THE USER SPECIFIED NOSCRATCH       #Y30SSFR*/
*                  /*  EXPLICITLY, THEN DEALLOCATE WITH      #Y30SSFR*/
*                  /*  DISPOSITION KEEP.  OTHERWISE,         #Y30SSFR*/
*                  /*  DEALLOCATE WITH DISPOSITION DELETE.   #Y30SSFR*/
*                  /*                                        #Y30SSFR*/
*                  /**************************************************/
*                                                                  0434
*                  IF ADDR(NSCR) ^= NULLPTR                /*#Y30SSFR*/
*                    THEN                                  /*#Y30SSFR*/
         L     @04,@PC00001+4                                      0434
         L     @04,FDTPTR+64(,@04)                                 0434
         LTR   @04,@04                                             0434
         BZ    @RF00434                                            0434
*                      ALLDSPKP = ON;                      /*#Y30SSFR*/
         OI    ALLDSPKP(@08),B'00001000'                           0435
*                    ELSE                                  /*#Y30SSFR*/
*                      ALLDSPDE = ON;                      /*#Y30SSFR*/
*                                                                  0436
         B     @RC00434                                            0436
@RF00434 L     @08,ALLPTR                                          0436
         OI    ALLDSPDE(@08),B'00000100'                           0436
*                  /**************************************************/
*                  /*                                        #Y30SSFR*/
*                  /*  ISSUE THE UDEALLOC AND SAVE THE       #Y30SSFR*/
*                  /*  RETURN CODE.                          #Y30SSFR*/
*                  /*                                        #Y30SSFR*/
*                  /**************************************************/
*                                                                  0437
*                  CALL IDCSADL0(GDTTBL,ALLAGL);           /*#Y30SSFR*/
@RC00434 L     @08,@PC00001                                        0437
         ST    @08,@AL00001                                        0437
         L     @04,ALLPTR                                          0437
         ST    @04,@AL00001+4                                      0437
         MVI   @AL00001+4,X'80'                                    0437
         L     @15,GDTDLC(,@08)                                    0437
         LA    @01,@AL00001                                        0437
         BALR  @14,@15                                             0437
*                  RESPECIFY RTNREG RSTD;                          0438
*                  TESTRC = RTNREG;                                0439
         LR    TESTRC,RTNREG                                       0439
*                  RESPECIFY RTNREG UNRSTD;                /*#Y30SSFR*/
*                  ENTRYRC = MAX(TESTRC,ENTRYRC);          /*#Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0441
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0441
*                  END;                                    /*#Y30SSFR*/
*                                                                  0442
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  IF ANY CORE HAS BEEN GOTTEN WHILE DELETING  #Y30SSFR*/
*            /*  THE PRESENT ITEM, ISSUE A UFPOOL TO FREE    #Y30SSFR*/
*            /*  IT PRIOR TO GOING ON TO THE NEXT ITEM.      #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0443
*            IF COREFLAG = ON                              /*#Y30SSFR*/
*              THEN                                        /*#Y30SSFR*/
@RF00428 DS    0H                                                  0443
@RC00417 TM    COREFLAG,B'10000000'                                0443
         BNO   @RF00443                                            0443
*                DO;                                       /*#Y30SSFR*/
*                                                                  0444
*                /****************************************************/
*                /*                                          #Y30SSFR*/
*                /*  ISSUE THE UFPOOL, AND TEST THE RETURN   #Y30SSFR*/
*                /*  CODE.  IDCDL01 WILL ATTEMPT TO DELETE   #Y30SSFR*/
*                /*  ANY REMAINING ITEMS ALTHOUGH ITS CHANCES#Y30SSFR*/
*                /*  OF SUCCESS ARE POOR IF STORAGE CANNOT   #Y30SSFR*/
*                /*  BE FREED.                               #Y30SSFR*/
*                /*                                          #Y30SSFR*/
*                /****************************************************/
*                                                                  0445
*                CALL IDCSAFP0(GDTTBL,DLUGPFG1);           /*#Y30SSFR*/
*                                                                  0445
         L     @08,@PC00001                                        0445
         ST    @08,@AL00001                                        0445
         LA    @04,DLUGPFG1                                        0445
         ST    @04,@AL00001+4                                      0445
         MVI   @AL00001+4,X'80'                                    0445
         L     @15,GDTFPL(,@08)                                    0445
         LA    @01,@AL00001                                        0445
         BALR  @14,@15                                             0445
*                RESPECIFY RTNREG RSTD;                            0446
*                TESTRC = RTNREG;                                  0447
         LR    TESTRC,RTNREG                                       0447
*                RESPECIFY RTNREG UNRSTD;                  /*#Y30SSFR*/
*                IF TESTRC ^= 0                            /*#Y30SSFR*/
*                  THEN                                    /*#Y30SSFR*/
         LTR   TESTRC,TESTRC                                       0449
         BZ    @RF00449                                            0449
*                    ENTRYRC = MAX(TESTRC,ENTRYRC);        /*#Y30SSFR*/
         CR    ENTRYRC,TESTRC                                      0450
         BNL   *+6
         LR    ENTRYRC,TESTRC                                      0450
*                    END;                                  /*#Y30SSFR*/
*                                                                  0451
@RF00449 DS    0H                                                  0452
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  IF THE RETURN CODE FOR THIS ENTRY INDICATES NO ENTRY*/
*            /*  WAS DELETED, ISSUE A MESSAGE THAT THE ENTRY WAS NOT */
*            /*  DELETED.                                    #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0452
*            IF ENTRYRC = LASTCC08                         /*#Y30SSFR*/
*              THEN                                        /*#Y30SSFR*/
@RF00443 C     ENTRYRC,@CF00179                                    0452
         BNE   @RF00452                                            0452
*                DO;                                       /*#Y30SSFR*/
*                DARGSMOD = DELMSG;                        /*#Y30SSFR*/
         L     @08,DDSTRU                                          0454
         MVC   DARGSMOD(3,@08),@CC00888                            0454
*                DARGSENT = NODELMSG;                      /*#Y30SSFR*/
         MVI   DARGSENT(@08),X'08'                                 0455
*                DARGDBP = ADDR (ENTVAL(ENT));             /*#Y30SSFR*/
         LR    @04,ENT                                             0456
         MH    @04,@CH01066                                        0456
         L     @02,GENWKPTR                                        0456
         AL    @02,@CF01104                                        0456
         LA    @04,ENTVAL-5(@04,@02)                               0456
         ST    @04,DARGDBP(,@08)                                   0456
*                DARGILP = LENGTH(ENTVAL(ENT));            /*#Y30SSFR*/
*                                                                  0457
         MVC   DARGILP(2,@08),@CH00605                             0457
*                CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);    /*#Y30SSFR*/
*                                                                  0458
         L     @08,@PC00001                                        0458
         ST    @08,@AL00001                                        0458
         LA    @04,@CF00115                                        0458
         ST    @04,@AL00001+4                                      0458
         LA    @04,DDSTRU                                          0458
         ST    @04,@AL00001+8                                      0458
         MVI   @AL00001+8,X'80'                                    0458
         L     @15,GDTPRT(,@08)                                    0458
         LA    @01,@AL00001                                        0458
         BALR  @14,@15                                             0458
*                END;                                      /*#Y30SSFR*/
*                                                                  0459
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  SET THE LAST CONDITION CODE TO THE MAXIMUM CODE     */
*            /*  ENCOUNTERED FOR THIS ENTRY.                 #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0460
*            LASTCOND = MAX(ENTRYRC,LASTCOND);             /*#Y30SSFR*/
@RF00452 L     @08,@PC00001+8                                      0460
         LH    @04,LASTCOND(,@08)                                  0460
         CR    @04,ENTRYRC                                         0460
         BNL   *+6
         LR    @04,ENTRYRC                                         0460
         STH   @04,LASTCOND(,@08)                                  0460
*            ENTRYRC = 0;                                  /*#Y30SSFR*/
         SLR   ENTRYRC,ENTRYRC                                     0461
*            END SAMECAT;                                  /*#Y30SSFR*/
*                                                                  0462
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  RETURN TO THE CALLING PROCESSOR.                @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0463
*        RETURN;                                           /*@Y30SSFR*/
*                                                                  0463
@EL00002 DS    0H                                                  0463
@EF00002 DS    0H                                                  0463
@ER00002 LM    @14,@02,@SA00002                                    0463
         LM    @04,@12,@SA00002+20                                 0463
         BR    @14                                                 0463
*END DELTPROC;                                             /*@Y30SSFR*/
         B     @EL00002                                            0464
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - FINDTYPE                               */
*        /*                                                          */
*        /*  FUNCTION - BUILD A CATALOG PARAMETER LIST AND A FIELD   */
*        /*  PARAMETER LIST FOR A CATALOG LOCATE TO DETERMINE THE    */
*        /*  TYPE OF ENTRY TO BE DELETED.  CALL THE CATALOG AND      */
*        /*  ISSUE A MESSAGE IF THE RETURN CODE IS NOT OK.           */
*        /*                                                          */
*        /*  INPUT - FUNCTION DEFINITION TABLE, PRINT ARGUMENT LIST, */
*        /*  AND AN INDEX TO THE ENTRY TO BE DELETED.                */
*        /*                                                          */
*        /*  OUTPUT - POINTER TO THE TYPE RETURNED BY THE CATALOG    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0465
*FINDTYPE: PROCEDURE (ENTID,           /*INDEX TO THE ENTRY TO DELETE*/
*                    LTYPE);           /*TYPE OF ENTRY               */
*                                                                  0465
FINDTYPE STM   @14,@12,@SA00003                                    0465
         MVC   @PC00003(8),0(@01)                                  0465
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  ARGUMENTS OF INVOCATION                         @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0466
*        DCL ENTID FIXED(15);          /*INDEX TO THE ENTRY TO DELETE*/
*        DCL LTYPE CHAR(1);            /*TYPE OF ENTRY RETURNED      */
*                                      /*BY THIS PROCEDURE   @Y30SSFR*/
*                                                                  0468
*        /************************************************************/
*        /*                                                          */
*        /*  LOCAL DECLARATIONS                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0468
*        DCL LCPLSAVE CHAR(LENGTH(CPLSTOR)) BDY(WORD);             0468
*                                      /*SAVE AREA FOR CPL BUILT FOR */
*                                      /*LOCATE REQUEST              */
*        DCL CATRC FIXED(15);          /*RETURN CODE FROM LOCATE     */
*        DCL TYPEAREA CHAR(1) BASED(CTGFLPT(1));                   0470
*                                      /*TYPE RETURNED IN CATALOG    */
*                                      /*LOCATE WORK AREA            */
*        DCL NOTFNDRC FIXED(15) CONSTANT(8);               /*@YM06134*/
*                        /*CATALOG RETURN CODE               @YM06134*/
*                        /*AFTER LOCATE WHEN                 @YM06134*/
*                        /*ENTRY IS NOT IN                   @YM06134*/
*                        /*CATALOG.                          @YM06134*/
*                                                                  0472
*        DCL ONE BIT(8) CONSTANT('01'X);                   /*@YM07850*/
*                                      /*VALUE OF CATTR      @YM07850*/
*                                      /*FIELD FOR PAGESPACE @YM07850*/
*        OLDERID2 = NEWERID2;                                      0473
         L     @08,@PC00001                                        0473
         L     @08,GDTTR2(,@08)                                    0473
         MVC   @TS00001(95),NEWERID2(@08)                          0473
         MVC   OLDERID2(95,@08),@TS00001                           0473
*        NEWID2 = 'DLLC';                                          0474
*                                                                  0474
         MVC   NEWID2(4,@08),@CC00980                              0474
*        /************************************************************/
*        /*                                                          */
*        /*  IF THIS IS THE FIRST TIME A LOCATE IS ISSUED, SET UP    */
*        /*  THE BASIC INFORMATION IN THE CATALOG PARAMETER LIST.    */
*        /*  OTHERWISE, RESTORE THE SAVED PARAMETER LIST AND ONLY    */
*        /*  SET UP THE ENTRY NAME,PASSWORD AND FIELD PARAMETER LIST.*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0475
*        IF LCPLINIT = OFF                                 /*@YL026UA*/
*          THEN                                                    0475
         TM    LCPLINIT,B'10000000'                                0475
         BNZ   @RF00475                                            0475
*ONETIME:    DO;                                                   0476
ONETIME  DS    0H                                                  0477
*            LCPLINIT = ON;                                /*@YL026UA*/
*                                                                  0477
         OI    LCPLINIT,B'10000000'                                0477
*            /********************************************************/
*            /*                                                      */
*            /*  INITIALIZE THE CATALOG PARAMETER LIST TO ZEROES     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0478
*            CPLSTOR = ''B;                                        0478
*                                                                  0478
         XC    CPLSTOR(40),CPLSTOR                                 0478
*            /********************************************************/
*            /*                                                      */
*            /*  SET FLAGS IN CATALOG PARAMETER LIST TO INDICATE     */
*            /*  LOCATE REQUEST.                                     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0479
*            CTGNAME = ON;                                         0479
         L     @08,CTGPLPTR                                        0479
         OI    CTGNAME(@08),B'00000100'                            0479
*            CTGFUNC = CTGCMS;                             /*@YL026UA*/
         NI    CTGFUNC(@08),B'10011111'                            0480
         OI    CTGFUNC(@08),B'10000000'                            0480
*            CTGNUM = ON;                                          0481
*            CTGAM0 = ON;                                          0482
         OI    CTGNUM(@08),B'00000011'                             0482
*            CTGOPTNS = CTGLTCAT;                          /*@YL026UA*/
*                                                                  0483
         NI    CTGOPTNS(@08),B'00100111'                           0483
         OI    CTGOPTNS(@08),B'00100000'                           0483
*            /********************************************************/
*            /*                                                      */
*            /*  INDICATE THE NUMBER OF FIELD PARAMETER LISTS AND    */
*            /*  SET UP THE POINTER TO THE FIELD PARAMETER LIST.     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0484
*            CTGNOFLD = 3;                                 /*@YL026UA*/
         MVI   CTGNOFLD(@08),X'03'                                 0484
*            CTGFIELD(1) = ADDR(FPLTYPE);                  /*@YL026UA*/
         LA    @04,FPLTYPE                                         0485
         ST    @04,CTGFIELD(,@08)                                  0485
*            CTGFIELD(2) = ADDR(FPLACB);                   /*@YL026UA*/
         LA    @04,FPLACB                                          0486
         ST    @04,CTGFIELD+4(,@08)                                0486
*            CTGFIELD(3) = ADDR(FPLCATTR);                 /*@YL026UA*/
*                                                                  0487
         LA    @04,FPLCATTR                                        0487
         ST    @04,CTGFIELD+8(,@08)                                0487
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE CATALOG NAME (IF ANY) AND THE CATALOG       */
*            /*  PASSWORD (IF ANY) IN THE CATALOG PARAMETER LIST.    */
*            /*                                                      */
*            /********************************************************/
*                                                                  0488
*            IF ADDR(CATDD) = NULLPTR                              0488
*              THEN                                                0488
         L     @04,@PC00001+4                                      0488
         L     @04,FDTPTR+12(,@04)                                 0488
         LTR   @04,@04                                             0488
         BNZ   @RF00488                                            0488
*                DO;                                               0489
*                CTGCNAME = ON;        /*INDICATE NO ACB     @Y30SSFR*/
         OI    CTGCNAME(@08),B'00000010'                           0490
*                IF CATNAME ^= BLANKS                              0491
*                  THEN                                            0491
         CLC   CATNAME(44),BLANKS                                  0491
         BE    @RF00491                                            0491
*                    CTGCAT = ADDR(CATNAME);               /*@YL026UA*/
         LA    @04,CATNAME                                         0492
         ST    @04,CTGCAT(,@08)                                    0492
*                END;                                              0493
*              ELSE                                                0494
*                CTGCAT = ADDR(IOCCBP);                            0494
*                                                                  0494
         B     @RC00488                                            0494
@RF00488 L     @08,IOCSPTR                                         0494
         LA    @08,IOCCBP(,@08)                                    0494
         L     @04,CTGPLPTR                                        0494
         ST    @08,CTGCAT(,@04)                                    0494
*            IF ADDR(CAT) ^= NULLPTR & CATPLN ^= 0                 0495
*              THEN                                                0495
@RC00488 L     @08,@PC00001+4                                      0495
         L     @08,FDTPTR+8(,@08)                                  0495
         LTR   @08,@08                                             0495
         BZ    @RF00495                                            0495
         CLI   CATPLN(@08),0                                       0495
         BE    @RF00495                                            0495
*                CTGPSWD = ADDR(CATPAS);                           0496
*                                                                  0496
         LA    @08,CATPAS(,@08)                                    0496
         L     @04,CTGPLPTR                                        0496
         ST    @08,CTGPSWD(,@04)                                   0496
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE ADDRESS OF THE WORK AREA IN THE CATALOG     */
*            /*  PARAMETER LIST.                                     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0497
*            CTGWKA = ADDR(WORKAREA);                              0497
*                                                                  0497
@RF00495 LA    @08,WORKAREA                                        0497
         L     @04,CTGPLPTR                                        0497
         ST    @08,CTGWKA(,@04)                                    0497
*            /********************************************************/
*            /*                                                      */
*            /*  IF MORE THAN ONE LOCATE MUST BE ISSUED FOR MORE     */
*            /*  THAN ONE ENTRY TO BE DELETED, SAVE THE CATALOG      */
*            /*  PARAMETER LIST.                                     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0498
*            IF NTRYCNT > 1                                        0498
*              THEN                                                0498
         L     @08,@PC00001+4                                      0498
         L     @08,FDTPTR(,@08)                                    0498
         LH    @08,NTRYCNT(,@08)                                   0498
         C     @08,@CF00219                                        0498
         BNH   @RF00498                                            0498
*                LCPLSAVE = CPLSTOR;                               0499
         MVC   LCPLSAVE(40),CPLSTOR                                0499
*            END ONETIME;                                          0500
*                                                                  0500
*          /**********************************************************/
*          /*                                                        */
*          /*  IF THIS IS NOT THE FIRST LOCATE REQUEST, RESTORE THE  */
*          /*  CATALOG PARAMETER LIST THAT WAS CONSTRUCTED FOR THE   */
*          /*  FIRST LOCATE REQUEST.                                 */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0501
*          ELSE                                                    0501
*            CPLSTOR = LCPLSAVE;                                   0501
*                                                                  0501
         B     @RC00475                                            0501
@RF00475 MVC   CPLSTOR(40),LCPLSAVE                                0501
*        /************************************************************/
*        /*                                                          */
*        /*  SET THE ADDRESS OF THE ENTRY NAME AND THE ADDRESS OF    */
*        /*  ENTRY PASSWORD IF THE CATALOG PASSWORD WAS NOT ALREADY  */
*        /*  SPECIFIED.                                              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0502
*        CTGENT = ADDR(ENTVAL(ENT));                       /*@YL026UA*/
@RC00475 L     @08,CTGPLPTR                                        0502
         LR    @04,ENT                                             0502
         MH    @04,@CH01066                                        0502
         L     @01,GENWKPTR                                        0502
         AL    @01,@CF01104                                        0502
         LA    @04,ENTVAL-5(@04,@01)                               0502
         ST    @04,CTGENT(,@08)                                    0502
*        IF CTGPSWD = NULLPTR & NTRYPLN(ENTID) ^= 0                0503
*          THEN                                                    0503
         SLR   @04,@04                                             0503
         C     @04,CTGPSWD(,@08)                                   0503
         BNE   @RF00503                                            0503
         L     @15,@PC00003                                        0503
         LH    @15,ENTID(,@15)                                     0503
         MH    @15,@CH01079                                        0503
         L     @14,@PC00001+4                                      0503
         L     @14,FDTPTR(,@14)                                    0503
         LA    @01,0(@15,@14)                                      0503
         AL    @01,@CF01099                                        0503
         SLR   @00,@00                                             0503
         IC    @00,NTRYPLN-2(,@01)                                 0503
         CR    @04,@00                                             0503
         BE    @RF00503                                            0503
*            CTGPSWD = ADDR(NTRYPAS(ENTID));                       0504
*                                                                  0504
         AL    @14,@CF01100                                        0504
         LA    @04,NTRYPAS-3(@15,@14)                              0504
         ST    @04,CTGPSWD(,@08)                                   0504
*        /************************************************************/
*        /*                                                          */
*        /*  BUILD THREE FPL'S--ONE FOR ENTYPE, ONE FOR      @Y30SSFR*/
*        /*  CATACB, AND ONE FOR CATTR.                      @Y30SSFR*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0505
*        CTGFLPTR = ADDR(FPLTYPE);                         /*@YL026UA*/
@RF00503 LA    CTGFLPTR,FPLTYPE                                    0505
*        FPLTYPE = ''B;                                    /*@YL026UA*/
         XC    FPLTYPE(24),FPLTYPE                                 0506
*        CTGFLDNO = 1;                                             0507
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0507
*        CTGFLDNM = ADDR(ENTTYPE);                                 0508
         LA    @08,ENTTYPE                                         0508
         ST    @08,CTGFLDNM(,CTGFLPTR)                             0508
*        CTGFLPTR = ADDR(FPLACB);                          /*@YL026UA*/
         LA    CTGFLPTR,FPLACB                                     0509
*        FPLACB = ''B;                                     /*@YL026UA*/
         XC    FPLACB(24),FPLACB                                   0510
*        CTGFLDNO = 1;                                     /*@YL026UA*/
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0511
*        CTGFLDNM = ADDR(ACBADDR);                         /*@YL026UA*/
         LA    @08,ACBADDR                                         0512
         ST    @08,CTGFLDNM(,CTGFLPTR)                             0512
*        CTGFLPTR = ADDR(FPLCATTR);                        /*@YL026UA*/
         LA    CTGFLPTR,FPLCATTR                                   0513
*        FPLCATTR = ''B;                                   /*@YL026UA*/
         XC    FPLCATTR(24),FPLCATTR                               0514
*        CTGFLDNO = 1;                                     /*@YL026UA*/
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0515
*        CTGFLDNM = ADDR(CLUSATTR);                        /*@YL026UA*/
         LA    @08,CLUSATTR                                        0516
         ST    @08,CTGFLDNM(,CTGFLPTR)                             0516
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE THE CATALOG WORK AREA TO ZEROES AND CALL     */
*        /*  THE VSAM CATALOG.                                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0517
*        DO IND1 = 1 TO 2;                                 /*@Y30SSFR*/
         LA    IND1,1                                              0517
@DL00517 DS    0H                                                  0518
*          ENTITEM(IND1) = ''B;                            /*@Y30SSFR*/
         LR    @08,IND1                                            0518
         MH    @08,@CH01066                                        0518
         L     @04,WAPTR                                           0518
         ALR   @04,@08                                             0518
         AL    @04,@CF01103                                        0518
         XC    ENTITEM-4(45,@04),ENTITEM-4(@04)                    0518
*        END;                                              /*@Y30SSFR*/
         AL    IND1,@CF00219                                       0519
         C     IND1,@CF00153                                       0519
         BNH   @DL00517                                            0519
*        RETURNLN = 0;                                     /*@Y30SSFR*/
         SLR   @08,@08                                             0520
         L     @04,WAPTR                                           0520
         STH   @08,RETURNLN(,@04)                                  0520
*        AREALN = 2*LENGTH(ENTITEM)+4;                     /*@Y30SSFR*/
         MVC   AREALN(2,@04),@CH01081                              0521
*        IF GDTDBG = NULLPTR                                       0522
*          THEN;                                                   0522
         L     @04,@PC00001                                        0522
         C     @08,GDTDBG(,@04)                                    0522
         BE    @RT00522                                            0522
*          ELSE                                                    0524
*            CALL IDCDB010 (GDTTBL,'DLLB');                        0524
         L     @08,@PC00001                                        0524
         ST    @08,@AL00001                                        0524
         LA    @04,@CC00983                                        0524
         ST    @04,@AL00001+4                                      0524
         MVI   @AL00001+4,X'80'                                    0524
         L     @15,GDTDBG(,@08)                                    0524
         LA    @01,@AL00001                                        0524
         BALR  @14,@15                                             0524
*                                                          /*@YL026UA*/
*                                                                  0525
*        CALL IDCSACA0 (GDTTBL,CTGPLPTR);                          0525
*                                                                  0525
@RT00522 L     @08,@PC00001                                        0525
         ST    @08,@AL00001                                        0525
         LA    @04,CTGPLPTR                                        0525
         ST    @04,@AL00001+4                                      0525
         L     @15,GDTCAT(,@08)                                    0525
         LA    @01,@AL00001                                        0525
         BALR  @14,@15                                             0525
*        RESPECIFY REG15 RSTD;                             /*@Y30SSFR*/
*        CATRC = REG15;                                            0527
         LR    CATRC,REG15                                         0527
*        RESPECIFY REG15 UNRSTD;                           /*@Y30SSFR*/
*                                                                  0528
*        IF GDTDBG = NULLPTR                                       0529
*          THEN;                                                   0529
         L     @08,@PC00001                                        0529
         L     @08,GDTDBG(,@08)                                    0529
         LTR   @08,@08                                             0529
         BZ    @RT00529                                            0529
*          ELSE                                                    0531
*            CALL IDCDB010 (GDTTBL,'DLLA');                        0531
         L     @08,@PC00001                                        0531
         ST    @08,@AL00001                                        0531
         LA    @04,@CC00984                                        0531
         ST    @04,@AL00001+4                                      0531
         MVI   @AL00001+4,X'80'                                    0531
         L     @15,GDTDBG(,@08)                                    0531
         LA    @01,@AL00001                                        0531
         BALR  @14,@15                                             0531
*                                                          /*@YL026UA*/
*                                                                  0532
*        /************************************************************/
*        /*                                                          */
*        /*  IF THE CATALOG RETURN CODE IS NOT SUCCESSFUL, ISSUE A   */
*        /*  MESSAGE INDICATING THE RETURN CODE.                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0532
*        IF CATRC ^= 0                                             0532
*          THEN                                                    0532
@RT00529 LTR   CATRC,CATRC                                         0532
         BZ    @RF00532                                            0532
*            DO;                                           /*@Y30SSFR*/
*                                                                  0533
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  CLEAR THE STORAGE TO BE OCCUPIED BY THE     @Y30SSFR*/
*            /*  ERROR CONVERSION TABLE.                     @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0534
*            ERRORTAB = ''B;                               /*@Y30SSFR*/
*                                                                  0534
*                                                                  0534
         XC    ERRORTAB(32),ERRORTAB                               0534
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET ERCNVADR TO POINT TO THE STORAGE FOR    @Y30SSFR*/
*            /*  THE ERROR CONVERSION TABLE.                 @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0535
*            ERCNVADR = ADDR(ERRORTAB);                    /*@Y30SSFR*/
*                                                                  0535
         LA    @08,ERRORTAB                                        0535
         ST    @08,ERCNVADR                                        0535
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET ERCATLG TO BE ON TO INDICATE THAT THIS  @Y30SSFR*/
*            /*  IS A CATALOG ERROR.  SET ERCATLC TO BE ON   @Y30SSFR*/
*            /*  TO INDICATE THAT THE ERROR OCCURRED ON A    @Y30SSFR*/
*            /*  CATALOG LOCATE OPERATION.                   @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0536
*            ERCATLG = ON;                                 /*@Y30SSFR*/
         OI    ERCATLG(@08),B'10000000'                            0536
*            ERCATLC = ON;                                 /*@Y30SSFR*/
*                                                                  0537
         OI    ERCATLC(@08),B'10000000'                            0537
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET ERCATRC TO CATRC, AND SET ERCPLPT TO    @Y30SSFR*/
*            /*  POINT TO THE CPL FOR THE LOCATE OPERATION.  @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0538
*            ERCATRC = CATRC;                              /*@Y30SSFR*/
         ST    CATRC,ERCATRC(,@08)                                 0538
*            ERCPLPT = CTGPLPTR;                           /*@Y30SSFR*/
*                                                                  0539
         L     @04,CTGPLPTR                                        0539
         ST    @04,ERCPLPT(,@08)                                   0539
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET A POINTER TO THE ENTRY NAME BEING       @Y30SSFR*/
*            /*  LOCATED AGAINST IN THE ERROR CONVERSION     @Y30SSFR*/
*            /*  TABLE.                                      @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0540
*            ERDSNM = CTGENT;                              /*@Y30SSFR*/
*                                                                  0540
         L     @04,CTGENT(,@04)                                    0540
         ST    @04,ERDSNM(,@08)                                    0540
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  INVOKE THE UERROR ROUTINE BY ISSUING THE    @Y30SSFR*/
*            /*  UERROR MACRO OF THE AMS TEXT PROCESSOR.     @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0541
*            CALL IDCTPER0(GDTTBL,ERCNVADR);               /*@Y30SSFR*/
*                                                                  0541
         L     @08,@PC00001                                        0541
         ST    @08,@AL00001                                        0541
         LA    @04,ERCNVADR                                        0541
         ST    @04,@AL00001+4                                      0541
         MVI   @AL00001+4,X'80'                                    0541
         L     @15,GDTERR(,@08)                                    0541
         LA    @01,@AL00001                                        0541
         BALR  @14,@15                                             0541
*            IF CATRC = NOTFNDRC                                   0542
*              THEN                                                0542
         C     CATRC,@CF00179                                      0542
         BNE   @RF00542                                            0542
*                NOTFOUND = ON;                            /*#YM06134*/
         OI    NOTFOUND,B'10000000'                                0543
*            SETRC = LASTCC08;                                     0544
@RF00542 LA    SETRC,8                                             0544
*            END;                                                  0545
*                                                                  0545
*          /**********************************************************/
*          /*                                                        */
*          /*  IF THE LOCATE WAS SUCCESSFUL, SET THE ENTRY TYPE      */
*          /*  TO RETURN TO THE MAIN PROCEDURE.                      */
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0546
*          ELSE                                                    0546
*                                                                  0546
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  IF THE TYPE RETURNED BY CATALOG IS 'C', AND #Y30SSFR*/
*            /*  THE PAGESPACE BIT OF THE CATTR FIELD IS ON, @Y30SSFR*/
*            /*  THEN THE OBJECT TO BE DELETED IS REALLY A   @Y30SSFR*/
*            /*  PAGESPACE, AND LTYPE MUST BE SET TO 'P'.    @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0546
*            DO;                                                   0546
         B     @RC00532                                            0546
@RF00532 DS    0H                                                  0547
*            CTGFLPTR = ADDR(FPLCATTR);                    /*#YL026UA*/
         LA    CTGFLPTR,FPLCATTR                                   0547
*            IF CTGFLPT(1) ^= NULLPTR &                            0548
*               LOCCATTR = ONE &                           /*#YM07850*/
*               CTGFLNG(1) ^= NULLPTR &                    /*#YM07850*/
*               ADDR(FPLTYPE) ->                           /*#YM07851*/
*               CTGFLPT(1) -> TYPEAREA = 'C'               /*#YM07851*/
*             THEN                                                 0548
         SLR   @08,@08                                             0548
         L     @04,CTGFLPT(,CTGFLPTR)                              0548
         CR    @04,@08                                             0548
         BE    @RF00548                                            0548
         CLI   LOCCATTR(@04),X'01'                                 0548
         BNE   @RF00548                                            0548
         C     @08,CTGFLNG(,CTGFLPTR)                              0548
         BE    @RF00548                                            0548
         LA    @04,FPLTYPE                                         0548
         L     @04,CTGFLPT(,@04)                                   0548
         CLI   TYPEAREA(@04),C'C'                                  0548
         BNE   @RF00548                                            0548
*              DO;                                         /*#YL026UA*/
*              LTYPE = 'P';                                /*@Y30SSFR*/
*                                                                  0550
         L     @04,@PC00003+4                                      0550
         MVI   LTYPE(@04),C'P'                                     0550
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  IF THE OBJECT TO BE DELETED IS A PAGE     @Y30SSFR*/
*              /*  SPACE, IT CANNOT BE ERASED.  PRINT AN     @Y30SSFR*/
*              /*  ERROR MESSAGE, AND RETURN TO DELTPROC.    @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0551
*              IF ADDR(ERASE) ^= NULLPTR                           0551
*                THEN                                              0551
         L     @04,@PC00001+4                                      0551
         C     @08,FDTPTR+28(,@04)                                 0551
         BE    @RF00551                                            0551
*                  DO;                                     /*@Y30SSFR*/
*                  DARGSMOD = DELMSG;                      /*#YL026UA*/
         L     @04,DDSTRU                                          0553
         MVC   DARGSMOD(3,@04),@CC00888                            0553
*                  DARGSENT = ERAPARM;                     /*#YL026UA*/
         MVI   DARGSENT(@04),X'03'                                 0554
*                  DARGDBP = NULLPTR;                      /*#YL026UA*/
         ST    @08,DARGDBP(,@04)                                   0555
*                  DARGILP = 0;                            /*#YL026UA*/
*                                                                  0556
         STH   @08,DARGILP(,@04)                                   0556
*                  CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);   /*@Y30SSFR*/
*                                                                  0557
         L     @08,@PC00001                                        0557
         ST    @08,@AL00001                                        0557
         LA    @04,@CF00115                                        0557
         ST    @04,@AL00001+4                                      0557
         LA    @04,DDSTRU                                          0557
         ST    @04,@AL00001+8                                      0557
         MVI   @AL00001+8,X'80'                                    0557
         L     @15,GDTPRT(,@08)                                    0557
         LA    @01,@AL00001                                        0557
         BALR  @14,@15                                             0557
*                  RETURN CODE(LASTCC08);                  /*#YL026UA*/
         LA    @15,8                                               0558
         L     @14,@SA00003                                        0558
         LM    @00,@12,@SA00003+8                                  0558
         BR    @14                                                 0558
*                  END;                                    /*@Y30SSFR*/
*              END;                                        /*#YL026UA*/
*            ELSE                                                  0561
*                                                                  0561
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  THE OBJECT TO BE DELETED IS NOT A PAGE    @Y30SSFR*/
*              /*  SPACE.  SET THE VALUE OF LTYPE DIRECTLY   @Y30SSFR*/
*              /*  FROM THE ENTYPE FIELD RETURNED BY         @Y30SSFR*/
*              /*  CATALOG.                                  @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0561
*              DO;                                         /*#YL026UA*/
         B     @RC00548                                            0561
@RF00548 DS    0H                                                  0562
*              CTGFLPTR = ADDR(FPLTYPE);                   /*#YL026UA*/
         LA    CTGFLPTR,FPLTYPE                                    0562
*              LTYPE = TYPEAREA;                           /*#YL026UA*/
         L     @08,@PC00003+4                                      0563
         L     @04,CTGFLPT(,CTGFLPTR)                              0563
         MVC   LTYPE(1,@08),TYPEAREA(@04)                          0563
*              END;                                        /*#YL026UA*/
*                                                                  0564
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  POINT TO THE CATACB FPL, AND DETERMINE IF AN  @Y30SSFR*/
*          /*  ACB ADDRESS FOR THE CATALOG HAS BEEN RETURNED @Y30SSFR*/
*          /*  BY VSAM.  IF SO, SAVE THAT ADDRESS, AND SET   @Y30SSFR*/
*          /*  A FLAG.                                       @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0565
*            CTGFLPTR = ADDR(FPLACB);                      /*#YL026UA*/
@RC00548 LA    CTGFLPTR,FPLACB                                     0565
*            IF ADDR(CATDD) = NULLPTR & CTGFLPT(1) ^= NULLPTR      0566
*              THEN                                                0566
         SLR   @08,@08                                             0566
         L     @04,@PC00001+4                                      0566
         C     @08,FDTPTR+12(,@04)                                 0566
         BNE   @RF00566                                            0566
         L     @04,CTGFLPT(,CTGFLPTR)                              0566
         CR    @04,@08                                             0566
         BE    @RF00566                                            0566
*                DO;                                       /*#YL026UA*/
*                  ACBPTR = CTGFLPT(1) -> LOCACBPT;        /*#YL026UA*/
         L     @08,LOCACBPT(,@04)                                  0568
         ST    @08,ACBPTR                                          0568
*                  ACBFLAG = ON;                           /*#YL026UA*/
         OI    ACBFLAG,B'10000000'                                 0569
*                END;                                      /*#YL026UA*/
*            SETRC = LASTCC00;                                     0571
@RF00566 SLR   SETRC,SETRC                                         0571
*            END;                                                  0572
*                                                                  0572
*        RETURN CODE(SETRC);                                       0573
*                                                                  0573
@RC00532 LR    @15,SETRC                                           0573
         L     @14,@SA00003                                        0573
         LM    @00,@12,@SA00003+8                                  0573
         BR    @14                                                 0573
*END FINDTYPE;                                                     0574
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - PARAMCHK                               */
*        /*                                                          */
*        /*  FUNCTION - DETERMINE WHETHER ANY INVALID OR             */
*        /*  INSUFFICIENT PARAMETERS WERE SPECIFIED ON THE DELETE    */
*        /*  COMMAND AND WERE NOT DETECTED BY THE READER/INTERPRETER */
*        /*  BECAUSE THE TYPE HAD NOT BEEN SPECIFIED.                */
*        /*                                                          */
*        /*  INPUT - TYPE OF ENTRY AS DETERMINED BY LOCATE.          */
*        /*                                                          */
*        /*  OUTPUT - A MESSAGE INDICATING ANY INVALID PARAMETERS.   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0575
*PARAMCHK: PROCEDURE (ETYPE);          /*TYPE OF ENTRY               */
*                                                                  0575
PARAMCHK STM   @14,@12,@SA00004                                    0575
         MVC   @PC00004(4),0(@01)                                  0575
*        /************************************************************/
*        /*                                                          */
*        /*  LOCAL DECLARATIONS                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0576
*        DCL ETYPE CHAR(1);            /*TYPE OF ENTRY TO BE DELETED */
*                                                                  0577
*        OLDERID2 = NEWERID2;                                      0577
         L     @08,@PC00001                                        0577
         L     @15,GDTTR2(,@08)                                    0577
         MVC   @TS00001(95),NEWERID2(@15)                          0577
         MVC   OLDERID2(95,@15),@TS00001                           0577
*        NEWID2 = 'DLPC';                                          0578
         MVC   NEWID2(4,@15),@CC00990                              0578
*        SETRC = 0;                                        /*@Y30SSFR*/
*                                                                  0579
         SLR   SETRC,SETRC                                         0579
*        /************************************************************/
*        /*                                                          */
*        /*  DETERMINE WHETHER THE TYPE IS INVALID FOR A DELETE.     */
*        /*  IF THE TYPE IS INVALID, ISSUE AN ERROR MESSAGE.         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0580
*        IF ETYPE ^= CTGTCL & ETYPE ^= CTGTUCAT            /*@Y30SSFR*/
*        & ETYPE ^= CTGTALIN & ETYPE ^= CTGTPGSP           /*@Y30SSFR*/
*        & ETYPE ^= CTGTGBS & ETYPE ^= CTGTANM             /*@Y30SSFR*/
*        & ETYPE ^= CTGTAIX & ETYPE ^= CTGTPTH             /*@Y30SSFR*/
*        & ETYPE ^= ' '                                    /*@Y30SSFR*/
*          THEN                                                    0580
         L     @15,@PC00004                                        0580
         CLI   ETYPE(@15),C'C'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'U'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'A'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'P'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'B'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'X'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'G'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C'R'                                     0580
         BE    @RF00580                                            0580
         CLI   ETYPE(@15),C' '                                     0580
         BE    @RF00580                                            0580
*            DO;                                                   0581
*            DARGSENT = BADTYPE;                                   0582
         L     @15,DDSTRU                                          0582
         MVI   DARGSENT(@15),X'02'                                 0582
*            DARGSMOD = DELMSG;                            /*@Y30SSFR*/
         MVC   DARGSMOD(3,@15),@CC00888                            0583
*            DARGDBP = NULLPTR;                                    0584
         SLR   @14,@14                                             0584
         ST    @14,DARGDBP(,@15)                                   0584
*            DARGILP = 0;                                          0585
*                                                                  0585
         STH   @14,DARGILP(,@15)                                   0585
*            CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);                0586
*                                                                  0586
         ST    @08,@AL00001                                        0586
         LA    @15,@CF00115                                        0586
         ST    @15,@AL00001+4                                      0586
         LA    @15,DDSTRU                                          0586
         ST    @15,@AL00001+8                                      0586
         MVI   @AL00001+8,X'80'                                    0586
         L     @15,GDTPRT(,@08)                                    0586
         LA    @01,@AL00001                                        0586
         BALR  @14,@15                                             0586
*            SETRC = LASTCC08;                                     0587
         LA    SETRC,8                                             0587
*            END;                                                  0588
*                                                                  0588
*        /************************************************************/
*        /*                                                          */
*        /*  DETERMINE WHETHER THE ERASE OPTION WAS SPECIFIED FOR    */
*        /*  A NON-VSAM, A MASTER CATALOG, A USER CATALOG,   #Y30SSFR*/
*        /*  A PATH, A PAGESPACE, A GDG BASE, OR AN ALIAS.   #Y30SSFR*/
*        /*  IF SO, ISSUE AN ERROR MESSAGE.                  #Y30SSFR*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0589
*        IF ETYPE ^= 'C' & ETYPE ^= 'G' &                  /*#Y30SSFR*/
*        ADDR(ERASE) ^= NULLPTR                                    0589
*          THEN                                                    0589
@RF00580 L     @08,@PC00004                                        0589
         CLI   ETYPE(@08),C'C'                                     0589
         BE    @RF00589                                            0589
         CLI   ETYPE(@08),C'G'                                     0589
         BE    @RF00589                                            0589
         SLR   @08,@08                                             0589
         L     @15,@PC00001+4                                      0589
         C     @08,FDTPTR+28(,@15)                                 0589
         BE    @RF00589                                            0589
*            DO;                                                   0590
*            DARGSMOD = DELMSG;                                    0591
         L     @15,DDSTRU                                          0591
         MVC   DARGSMOD(3,@15),@CC00888                            0591
*            DARGSENT = ERAPARM;                                   0592
         MVI   DARGSENT(@15),X'03'                                 0592
*            DARGDBP = NULLPTR;                                    0593
         ST    @08,DARGDBP(,@15)                                   0593
*            DARGILP = 0;                                          0594
*                                                                  0594
         STH   @08,DARGILP(,@15)                                   0594
*            CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);                0595
*                                                                  0595
         L     @08,@PC00001                                        0595
         ST    @08,@AL00001                                        0595
         LA    @15,@CF00115                                        0595
         ST    @15,@AL00001+4                                      0595
         LA    @15,DDSTRU                                          0595
         ST    @15,@AL00001+8                                      0595
         MVI   @AL00001+8,X'80'                                    0595
         L     @15,GDTPRT(,@08)                                    0595
         LA    @01,@AL00001                                        0595
         BALR  @14,@15                                             0595
*            SETRC = LASTCC08;                                     0596
         LA    SETRC,8                                             0596
*            END;                                                  0597
*                                                                  0597
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  DETERMINE WHETHER THE SCRATCH OPTION WAS        #YL026UA*/
*        /*  SPECIFIED FOR A TYPE OTHER THAN NONVSAM,        #Y30SSFR*/
*        /*  AIX, CLUSTER, PAGESPACE, OR SPACE.  IF SO,      @Y30SSFR*/
*        /*  ISSUE AN ERROR MESSAGE.                         #YL026UA*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0598
*        IF (ETYPE ^= CTGTALIN &                           /*@Y30SSFR*/
*            ETYPE ^= CTGTCL &                             /*@Y30SSFR*/
*            ETYPE ^= CTGTAIX &                            /*@Y30SSFR*/
*            ETYPE ^= CTGTPGSP) &                          /*@Y30SSFR*/
*           ADDR(SCR) ^= NULLPTR &                         /*#Y30SSFR*/
*          (ADDR(ALIEN) ^= NULLPTR &                       /*#Y30SSFR*/
*           ADDR(CLUST) ^= NULLPTR &                       /*#Y30SSFR*/
*           ADDR(AIX) ^= NULLPTR &                         /*@Y30SSFR*/
*           ADDR(PGSPC) ^= NULLPTR &                       /*#Y30SSFR*/
*           ADDR(SPACE) ^= NULLPTR)                        /*#Y30SSFR*/
*          THEN                                            /*#YL026UA*/
@RF00589 L     @08,@PC00004                                        0598
         CLI   ETYPE(@08),C'A'                                     0598
         BE    @RF00598                                            0598
         CLI   ETYPE(@08),C'C'                                     0598
         BE    @RF00598                                            0598
         CLI   ETYPE(@08),C'G'                                     0598
         BE    @RF00598                                            0598
         CLI   ETYPE(@08),C'P'                                     0598
         BE    @RF00598                                            0598
         SLR   @08,@08                                             0598
         L     @15,@PC00001+4                                      0598
         C     @08,FDTPTR+60(,@15)                                 0598
         BE    @RF00598                                            0598
         C     @08,FDTPTR+56(,@15)                                 0598
         BE    @RF00598                                            0598
         C     @08,FDTPTR+40(,@15)                                 0598
         BE    @RF00598                                            0598
         C     @08,FDTPTR+80(,@15)                                 0598
         BE    @RF00598                                            0598
         C     @08,FDTPTR+68(,@15)                                 0598
         BE    @RF00598                                            0598
         C     @08,FDTPTR+44(,@15)                                 0598
         BE    @RF00598                                            0598
*            DO;                                           /*#YL026UA*/
*                                                                  0599
*            DARGSMOD = DELMSG;                            /*#YL026UA*/
         L     @15,DDSTRU                                          0600
         MVC   DARGSMOD(3,@15),@CC00888                            0600
*            DARGSENT = SCRPARM;                           /*#YL026UA*/
         MVI   DARGSENT(@15),X'07'                                 0601
*            DARGDBP = NULLPTR;                            /*#YL026UA*/
         ST    @08,DARGDBP(,@15)                                   0602
*            DARGILP = 0;                                  /*#YL026UA*/
*                                                                  0603
         STH   @08,DARGILP(,@15)                                   0603
*            CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);        /*#YL026UA*/
*                                                                  0604
         L     @08,@PC00001                                        0604
         ST    @08,@AL00001                                        0604
         LA    @15,@CF00115                                        0604
         ST    @15,@AL00001+4                                      0604
         LA    @15,DDSTRU                                          0604
         ST    @15,@AL00001+8                                      0604
         MVI   @AL00001+8,X'80'                                    0604
         L     @15,GDTPRT(,@08)                                    0604
         LA    @01,@AL00001                                        0604
         BALR  @14,@15                                             0604
*            SETRC = LASTCC08;                             /*#YL026UA*/
         LA    SETRC,8                                             0605
*            END;                                          /*#YL026UA*/
*                                                                  0606
*        /************************************************************/
*        /*                                                          */
*        /*  DETERMINE WHETHER THE FILE PARAMETER WAS SPECIFIED FOR  */
*        /*  AN ALIEN TYPE WHEN THE SCRATCH OPTION WAS ALSO SPECIFIED*/
*        /*  IF FILE WAS NOT SPECIFIED AND COULD NOT BE ALLOCATED,   */
*        /*  ISSUE AN ERROR MESSAGE.                         #YL026UA*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0607
*        IF (ETYPE = CTGTALIN × ADDR(ALIEN) ^= NULLPTR) & ADDR(NSCR) =
*        NULLPTR & ADDR(INDD)=NULLPTR                              0607
*          THEN                                                    0607
*                                                                  0607
@RF00598 L     @08,@PC00004                                        0607
         CLI   ETYPE(@08),C'A'                                     0607
         BE    @GL00048                                            0607
         L     @08,@PC00001+4                                      0607
         L     @08,FDTPTR+56(,@08)                                 0607
         LTR   @08,@08                                             0607
         BZ    @RF00607                                            0607
@GL00048 SLR   @08,@08                                             0607
         L     @15,@PC00001+4                                      0607
         C     @08,FDTPTR+64(,@15)                                 0607
         BNE   @RF00607                                            0607
         C     @08,FDTPTR+16(,@15)                                 0607
         BNE   @RF00607                                            0607
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  SINCE FILE WAS NOT SPECIFIED ON THE DELETE COMMAND      */
*        /*  THE DATA SET MUST BE DYNAMICALLY ALLOCATED.     #YL026UA*/
*        /*  CALL ALLOPROC TO DO THE ACTUAL DYNAMIC          #Y30SSFR*/
*        /*  ALLOCATION.                                     #Y30SSFR*/
*        /*                                                  #YL026UA*/
*        /************************************************************/
*                                                                  0608
*            CALL ALLOPROC (ADDR(ENTVAL(ENT)),NULLPARM);   /*@Y30SSFR*/
*                                                                  0608
         LR    @08,ENT                                             0608
         MH    @08,@CH01066                                        0608
         L     @01,GENWKPTR                                        0608
         AL    @01,@CF01104                                        0608
         LA    @08,ENTVAL-5(@08,@01)                               0608
         ST    @08,@AFTEMPS                                        0608
         LA    @08,@AFTEMPS                                        0608
         ST    @08,@AL00001                                        0608
         LA    @08,@CF00115                                        0608
         ST    @08,@AL00001+4                                      0608
         LA    @01,@AL00001                                        0608
         BAL   @14,ALLOPROC                                        0608
*        RETURN CODE(SETRC);                               /*@Y30SSFR*/
*                                                                  0609
@RF00607 LR    @15,SETRC                                           0609
         L     @14,@SA00004                                        0609
         LM    @00,@12,@SA00004+8                                  0609
         BR    @14                                                 0609
*END PARAMCHK;                                             /*@Y30SSFR*/
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - BUILDCPL                               */
*        /*                                                          */
*        /*  FUNCTION - CONSTRUCT THE CATALOG PARAMETER LIST FROM    */
*        /*  PARAMETERS SPECIFIED ON THE DELETE COMMAND AND INDICATED*/
*        /*  IN THE FUNCTION DEFINITION TABLE.                       */
*        /*                                                          */
*        /*  INPUT - FUNCTION DEFINITION TABLE, PRINT ARGUMENT LIST, */
*        /*  AN INDEX TO THE ENTRY TO BE DELETED, AND THE TYPE OF    */
*        /*  ENTRY TO BE DELETED.                                    */
*        /*                                                          */
*        /*  OUTPUT - CATALOG PARAMETER LIST AND WORK AREA.          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0611
*BUILDCPL:  PROCEDURE (ENTRYID,        /*INDEX TO THE ENTRY TO DELETE*/
*                     TYPE);           /*TYPE OF ENTRY TO DELETE     */
*                                                                  0611
BUILDCPL STM   @14,@03,@SA00005                                    0611
         STM   @05,@12,@SA00005+24                                 0611
         MVC   @PC00005(8),0(@01)                                  0611
*        /************************************************************/
*        /*                                                          */
*        /*  LOCAL DECLARATIONS                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0612
*        DCL ENTRYID  FIXED(15);       /*INDEX TO THE ENTRY IN THE   */
*                                      /*FDT TO BE DELETED           */
*        DCL DCPLSAVE CHAR(LENGTH(CTGPL)) BDY(WORD);               0613
*                                      /*SAVE AREA FOR CATALOG       */
*                                      /*PARAMETER LIST BECAUSE IT IS*/
*                                      /*DESTROYED BY VSAM CATALOG   */
*        DCL TYPE    CHAR(1);          /*TYPE OF ENTRY TO DELETE AS  */
*                                      /*SET IN CATALOG ENTRY        */
*                                                                  0615
*        OLDERID2 = NEWERID2;                                      0615
         L     @08,@PC00001                                        0615
         L     @08,GDTTR2(,@08)                                    0615
         MVC   @TS00001(95),NEWERID2(@08)                          0615
         MVC   OLDERID2(95,@08),@TS00001                           0615
*        NEWID2 = 'DLBC';                                          0616
         MVC   NEWID2(4,@08),@CC01000                              0616
*        SETRC = 0;                                        /*@YL026UA*/
*                                                                  0617
         SLR   SETRC,SETRC                                         0617
*        /************************************************************/
*        /*                                                          */
*        /*  IF THIS IS THE FIRST TIME THE CATALOG PARAMETER LIST    */
*        /*  IS BUILT, SET UP THE BASIC INFORMATION.  OTHERWISE,     */
*        /*  ONLY SET UP THE ENTRY NAME, PASSWORD, AND TYPE          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0618
*        IF DCPLINIT = OFF                                         0618
*          THEN                                                    0618
         TM    DCPLINIT,B'10000000'                                0618
         BNZ   @RF00618                                            0618
*INITIAL:    DO;                                                   0619
INITIAL  DS    0H                                                  0620
*            DCPLINIT = ON;                                        0620
*                                                                  0620
         OI    DCPLINIT,B'10000000'                                0620
*            /********************************************************/
*            /*                                                      */
*            /*  INITIALIZE THE CATALOG PARAMETER LIST TO ZEROES     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0621
*            CTGPL = ''B;                                          0621
*                                                                  0621
         L     @08,CTGPLPTR                                        0621
         XC    CTGPL(28,@08),CTGPL(@08)                            0621
*            /********************************************************/
*            /*                                                      */
*            /*  SET APPROPRIATE FLAGS IN CATALOG PARAMETER LIST     */
*            /*  TO INDICATE DELETE FUNCTION.                        */
*            /*                                                      */
*            /********************************************************/
*                                                                  0622
*            CTGOPTNS = CTGDELET;                                  0622
         NI    CTGOPTNS(@08),B'00011111'                           0622
         OI    CTGOPTNS(@08),B'00011000'                           0622
*            CTGFUNC = CTGCMS;                                     0623
         NI    CTGFUNC(@08),B'10011111'                            0623
         OI    CTGFUNC(@08),B'10000000'                            0623
*            CTGNAME = ON;                                         0624
         OI    CTGNAME(@08),B'00000100'                            0624
*            CTGAM0 = ON;                                          0625
*                                                                  0625
         OI    CTGAM0(@08),B'00000001'                             0625
*            /********************************************************/
*            /*                                                      */
*            /*  SET ADDRESS                                         */
*            /*  OF DD NAME FOR ENTRY (IF ANY) IN PARAMETER LIST.    */
*            /*                                                      */
*            /********************************************************/
*                                                                  0626
*            IF ADDR(INDD) ^= NULLPTR                              0626
*              THEN                                                0626
         L     @15,@PC00001+4                                      0626
         L     @15,FDTPTR+16(,@15)                                 0626
         LTR   @15,@15                                             0626
         BZ    @RF00626                                            0626
*                CTGDDNM = ADDR(INDDVAL);                          0627
*                                                                  0627
         LA    @15,INDDVAL(,@15)                                   0627
         ST    @15,CTGDDNM(,@08)                                   0627
*            /********************************************************/
*            /*                                                      */
*            /*  SET TYPE OF ENTRY TO BE DELETED                     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0628
*            IF TYPEFLAG = ON                                      0628
*              THEN                                                0628
@RF00626 TM    TYPEFLAG,B'10000000'                                0628
         BNO   @RF00628                                            0628
*                DO;                                               0629
*                IF ADDR(CLUST) ^= NULLPTR                         0630
*                  THEN                                            0630
         L     @08,@PC00001+4                                      0630
         L     @08,FDTPTR+40(,@08)                                 0630
         LTR   @08,@08                                             0630
         BZ    @RF00630                                            0630
*                    CTGTYPE = CTGTCL;                             0631
         L     @08,CTGPLPTR                                        0631
         MVI   CTGTYPE(@08),C'C'                                   0631
*                IF ADDR(UCAT) ^= NULLPTR                          0632
*                  THEN                                            0632
@RF00630 L     @08,@PC00001+4                                      0632
         L     @08,FDTPTR+48(,@08)                                 0632
         LTR   @08,@08                                             0632
         BZ    @RF00632                                            0632
*                    CTGTYPE = CTGTUCAT;                           0633
         L     @08,CTGPLPTR                                        0633
         MVI   CTGTYPE(@08),C'U'                                   0633
*                IF ADDR(MCAT) ^= NULLPTR                          0634
*                  THEN                                            0634
@RF00632 L     @08,@PC00001+4                                      0634
         L     @08,FDTPTR+52(,@08)                                 0634
         LTR   @08,@08                                             0634
         BZ    @RF00634                                            0634
*                    CTGTYPE = CTGTMCAT;                           0635
         L     @08,CTGPLPTR                                        0635
         MVI   CTGTYPE(@08),C'M'                                   0635
*                IF ADDR(ALIEN) ^= NULLPTR                         0636
*                  THEN                                            0636
@RF00634 L     @08,@PC00001+4                                      0636
         L     @08,FDTPTR+56(,@08)                                 0636
         LTR   @08,@08                                             0636
         BZ    @RF00636                                            0636
*                    CTGTYPE = CTGTALIN;                           0637
         L     @08,CTGPLPTR                                        0637
         MVI   CTGTYPE(@08),C'A'                                   0637
*                IF ADDR(SPACE) ^=NULLPTR                          0638
*                  THEN                                            0638
@RF00636 L     @08,@PC00001+4                                      0638
         L     @08,FDTPTR+44(,@08)                                 0638
         LTR   @08,@08                                             0638
         BZ    @RF00638                                            0638
*                    CTGTYPE = CTGTVOL;                            0639
         L     @08,CTGPLPTR                                        0639
         MVI   CTGTYPE(@08),C'V'                                   0639
*                IF ADDR(PGSPC) ^= NULLPTR                         0640
*                  THEN                                            0640
@RF00638 L     @08,@PC00001+4                                      0640
         L     @08,FDTPTR+68(,@08)                                 0640
         LTR   @08,@08                                             0640
         BZ    @RF00640                                            0640
*                    CTGTYPE = CTGTPGSP;                   /*@Y30SSFR*/
         L     @08,CTGPLPTR                                        0641
         MVI   CTGTYPE(@08),C'P'                                   0641
*                IF ADDR(ALIAS) ^= NULLPTR                         0642
*                  THEN                                            0642
@RF00640 L     @08,@PC00001+4                                      0642
         L     @08,FDTPTR+76(,@08)                                 0642
         LTR   @08,@08                                             0642
         BZ    @RF00642                                            0642
*                    CTGTYPE = CTGTANM;                    /*@YL026UA*/
         L     @08,CTGPLPTR                                        0643
         MVI   CTGTYPE(@08),C'X'                                   0643
*                IF ADDR(GDG) ^=NULLPTR                            0644
*                  THEN                                            0644
@RF00642 L     @08,@PC00001+4                                      0644
         L     @08,FDTPTR+72(,@08)                                 0644
         LTR   @08,@08                                             0644
         BZ    @RF00644                                            0644
*                    CTGTYPE = CTGTGBS;                    /*@YL026UA*/
         L     @08,CTGPLPTR                                        0645
         MVI   CTGTYPE(@08),C'B'                                   0645
*                IF ADDR(AIX) ^= NULLPTR                           0646
*                  THEN                                            0646
@RF00644 L     @08,@PC00001+4                                      0646
         L     @08,FDTPTR+80(,@08)                                 0646
         LTR   @08,@08                                             0646
         BZ    @RF00646                                            0646
*                    CTGTYPE = CTGTAIX;                    /*@Y30SSFR*/
         L     @08,CTGPLPTR                                        0647
         MVI   CTGTYPE(@08),C'G'                                   0647
*                IF ADDR(PATH) ^= NULLPTR                          0648
*                  THEN                                            0648
@RF00646 L     @08,@PC00001+4                                      0648
         L     @08,FDTPTR+84(,@08)                                 0648
         LTR   @08,@08                                             0648
         BZ    @RF00648                                            0648
*                    CTGTYPE = CTGTPTH;                    /*@Y30SSFR*/
         L     @08,CTGPLPTR                                        0649
         MVI   CTGTYPE(@08),C'R'                                   0649
*                END;                                              0650
*                                                                  0650
@RF00648 DS    0H                                                  0651
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE PURGE OPTION FLAG IF PURGE WAS SPECIFIED    */
*            /*  ON THE DELETE COMMAND                               */
*            /*                                                      */
*            /********************************************************/
*                                                                  0651
*            IF ADDR(PURGE) ^= NULLPTR                             0651
*              THEN                                                0651
@RF00628 L     @08,@PC00001+4                                      0651
         L     @08,FDTPTR+20(,@08)                                 0651
         LTR   @08,@08                                             0651
         BZ    @RF00651                                            0651
*                CTGPURG = ON;                                     0652
*                                                                  0652
         L     @08,CTGPLPTR                                        0652
         OI    CTGPURG(@08),B'00100000'                            0652
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE SCRATCH OPTION FLAG IF SCRATCH WAS SPECIFIED*/
*            /*  ON THE DELETE COMMAND AND THE ENTRY IS NON-VSAM     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0653
*            IF ADDR(NSCR) = NULLPTR & ADDR(ALIEN) ^= NULLPTR      0653
*              THEN                                                0653
@RF00651 SLR   @08,@08                                             0653
         L     @15,@PC00001+4                                      0653
         C     @08,FDTPTR+64(,@15)                                 0653
         BNE   @RF00653                                            0653
         C     @08,FDTPTR+56(,@15)                                 0653
         BE    @RF00653                                            0653
*                CTGSCR = ON;                                      0654
*                                                                  0654
         L     @08,CTGPLPTR                                        0654
         OI    CTGSCR(@08),B'00000010'                             0654
*            /********************************************************/
*            /*  SET NOSCRATCH VOLUME CLEANUP OPTION IF NO SCRATCH   */
*            /*  WAS SPECIFIED AND THE CLUSTER, PAGESPACE, OR SPACE  */
*            /*  TYPE WAS SPECIFIED.                                 */
*            /********************************************************/
*                                                                  0655
*            IF ADDR(NSCR) ^= NULLPTR &                    /*@ZA00605*/
*               ( ADDR(CLUST) ^= NULLPTR ×                 /*@ZA00605*/
*                 ADDR(AIX) ^= NULLPTR ×                   /*@Y30SSFR*/
*                 ADDR(PGSPC) ^= NULLPTR ×                 /*@ZA00605*/
*                 ADDR(SPACE) ^= NULLPTR )                 /*@ZA00605*/
*              THEN                                        /*@ZA00605*/
@RF00653 SLR   @08,@08                                             0655
         L     @15,@PC00001+4                                      0655
         C     @08,FDTPTR+64(,@15)                                 0655
         BE    @RF00655                                            0655
         C     @08,FDTPTR+40(,@15)                                 0655
         BNE   @RT00655                                            0655
         C     @08,FDTPTR+80(,@15)                                 0655
         BNE   @RT00655                                            0655
         C     @08,FDTPTR+68(,@15)                                 0655
         BNE   @RT00655                                            0655
         C     @08,FDTPTR+44(,@15)                                 0655
         BE    @RF00655                                            0655
@RT00655 DS    0H                                                  0656
*                CTGNSVS = ON;                             /*@ZA00605*/
*                                                                  0656
         L     @08,CTGPLPTR                                        0656
         OI    CTGNSVS(@08),B'10000000'                            0656
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE ERASE OPTION FLAG IF ERASE WAS SPECIFIED.   */
*            /*  SET THE NOERASE OPTION FLAG IF NOERASE WAS SPECIFIED*/
*            /*                                                      */
*            /********************************************************/
*                                                                  0657
*            IF ADDR(ERASE) ^= NULLPTR                             0657
*              THEN                                                0657
@RF00655 L     @08,@PC00001+4                                      0657
         L     @08,FDTPTR+28(,@08)                                 0657
         LTR   @08,@08                                             0657
         BZ    @RF00657                                            0657
*                DO;                                               0658
*                CTGOVRID = ON;                                    0659
*                CTGERASE = ON;                                    0660
         L     @08,CTGPLPTR                                        0660
         OI    CTGOVRID(@08),B'01000100'                           0660
*                END;                                              0661
*            IF ADDR(NOERA) ^= NULLPTR                             0662
*              THEN                                                0662
@RF00657 L     @08,@PC00001+4                                      0662
         L     @08,FDTPTR+32(,@08)                                 0662
         LTR   @08,@08                                             0662
         BZ    @RF00662                                            0662
*                CTGOVRID = ON;                                    0663
*                                                                  0663
         L     @08,CTGPLPTR                                        0663
         OI    CTGOVRID(@08),B'00000100'                           0663
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  IF THE USER SPECIFIED FORCE DELETE FOR      @Y30SSFR*/
*            /*  EITHER USERCATALOG OR SPACE, SET THE CTGSCR @Y30SSFR*/
*            /*  AND THE CTGPURG BITS OF THE CPL TO ON.      @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0664
*            IF ADDR(FRC) ^= NULLPTR                       /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
@RF00662 L     @08,@PC00001+4                                      0664
         L     @08,FDTPTR+88(,@08)                                 0664
         LTR   @08,@08                                             0664
         BZ    @RF00664                                            0664
*                DO;                                       /*@Y30SSFR*/
*                CTGPURG = ON;                             /*@Y30SSFR*/
*                CTGSCR = ON;                              /*@Y30SSFR*/
         L     @08,CTGPLPTR                                        0667
         OI    CTGPURG(@08),B'00100010'                            0667
*                END;                                      /*@Y30SSFR*/
*                                                                  0668
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE CATALOG NAME (IF ANY) AND CATALOG PASSWORD  */
*            /*  (IF ANY) IN THE PARAMETER LIST.                     */
*            /*  SET THE ADDRESS OF THE ACB IN THE                   */
*            /*  PARAMETER LIST IF THE CATALOG DD NAME WAS SPECIFIED */
*            /*  AND THE CATALOG IS ALREADY OPENED.                  */
*            /*                                                      */
*            /********************************************************/
*                                                                  0669
*            IF ADDR(CATDD) = NULLPTR                              0669
*              THEN                                                0669
@RF00664 L     @08,@PC00001+4                                      0669
         L     @08,FDTPTR+12(,@08)                                 0669
         LTR   @08,@08                                             0669
         BNZ   @RF00669                                            0669
*                DO;                                               0670
*                CTGCNAME = ON;            /*INDICATE NO ACB         */
         L     @08,CTGPLPTR                                        0671
         OI    CTGCNAME(@08),B'00000010'                           0671
*                IF CATNAME ^= BLANKS                              0672
*                  THEN                                            0672
         CLC   CATNAME(44),BLANKS                                  0672
         BE    @RF00672                                            0672
*                    CTGCAT = ADDR(CATNAME);               /*@YL026UA*/
         LA    @15,CATNAME                                         0673
         ST    @15,CTGCAT(,@08)                                    0673
*                END;                                              0674
*              ELSE                                                0675
*                CTGCAT = ADDR(IOCCBP);                            0675
*                                                                  0675
         B     @RC00669                                            0675
@RF00669 L     @08,IOCSPTR                                         0675
         LA    @08,IOCCBP(,@08)                                    0675
         L     @01,CTGPLPTR                                        0675
         ST    @08,CTGCAT(,@01)                                    0675
*            IF ADDR(CAT) ^= NULLPTR & CATPLN ^= 0                 0676
*              THEN                                                0676
@RC00669 L     @08,@PC00001+4                                      0676
         L     @08,FDTPTR+8(,@08)                                  0676
         LTR   @08,@08                                             0676
         BZ    @RF00676                                            0676
         CLI   CATPLN(@08),0                                       0676
         BE    @RF00676                                            0676
*                CTGPSWD = ADDR(CATPAS);                           0677
*                                                                  0677
         LA    @08,CATPAS(,@08)                                    0677
         L     @01,CTGPLPTR                                        0677
         ST    @08,CTGPSWD(,@01)                                   0677
*            /********************************************************/
*            /*                                                      */
*            /*  SET THE ADDRESS OF THE WORK AREA IN THE PARAMETER   */
*            /*  LIST                                                */
*            /*                                                      */
*            /********************************************************/
*                                                                  0678
*            CTGWKA = ADDR(WORKAREA);                              0678
*                                                                  0678
@RF00676 L     @08,CTGPLPTR                                        0678
         LA    @15,WORKAREA                                        0678
         ST    @15,CTGWKA(,@08)                                    0678
*            /********************************************************/
*            /*                                                      */
*            /*  IF MORE THAN ONE ENTRY IS TO BE DELETED, SAVE       */
*            /*  THE CATALOG PARAMTER LIST FOR FUTURE ENTRIES.       */
*            /*                                                      */
*            /********************************************************/
*                                                                  0679
*            DCPLSAVE = CTGPL;                               /*YM5775*/
         MVC   DCPLSAVE(28),CTGPL(@08)                             0679
*            END INITIAL;                                          0680
*                                                                  0680
*          /**********************************************************/
*          /*                                                        */
*          /*  IF THIS IS NOT THE FIRST ENTRY TO BE DELETED, RESTORE */
*          /*  THE CATALOG PARAMETER LIST THAT WAS CONSTRUCTED FOR   */
*          /*  THE FIRST ENTRY DELETED.                              */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0681
*          ELSE                                                    0681
*            CTGPL = DCPLSAVE;                                     0681
*                                                                  0681
         B     @RC00618                                            0681
@RF00618 L     @08,CTGPLPTR                                        0681
         MVC   CTGPL(28,@08),DCPLSAVE                              0681
*        /************************************************************/
*        /*                                                          */
*        /*  SET THE ADDRESS OF THE ENTRY NAME TO BE DELETED AND THE */
*        /*  ADDRESS OF THE ENTRY PASSWORD IF THE CATALOG PASSWORD   */
*        /*  WAS NOT ALREADY SPECIFIED.                              */
*        /*  IF THE ENTRY IS A SPACE ENTRY, PAD THE NAME WITH ZEROES */
*        /*                                                          */
*        /************************************************************/
*                                                                  0682
*        IF ADDR(SPACE) ^= NULLPTR                                 0682
*          THEN                                                    0682
@RC00618 SLR   @08,@08                                             0682
         L     @15,@PC00001+4                                      0682
         C     @08,FDTPTR+44(,@15)                                 0682
         BE    @RF00682                                            0682
*           DO;                                            /*@YL026UA*/
*            SERNAME = '0'B;                                       0684
         XC    SERNAME+1(43),SERNAME+1                             0684
         MVI   SERNAME,B'00000000'                                 0684
*            SERNAME (1:SERLN) = ENTVAL(ENT,1:SERLN);      /*@YL026UA*/
*                                                                  0685
         LR    @14,ENT                                             0685
         MH    @14,@CH01066                                        0685
         L     @01,GENWKPTR                                        0685
         ALR   @01,@14                                             0685
         AL    @01,@CF01104                                        0685
         MVC   SERNAME(6),ENTVAL-5(@01)                            0685
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  IF FILE AND NOSCRATCH WERE NOT SPECIFIED,   @Y30SSFR*/
*            /*  CALL ALLOPROC TO DYNAMICALLY                @Y30SSFR*/
*            /*  ALLOCATE THE VOLUMES.                       @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0686
*            IF ADDR(INDD) = NULLPTR & ADDR(NSCR) = NULLPTR        0686
*              THEN                                                0686
         C     @08,FDTPTR+16(,@15)                                 0686
         BNE   @RF00686                                            0686
         C     @08,FDTPTR+64(,@15)                                 0686
         BNE   @RF00686                                            0686
*                DO;                                       /*@Y30SSFR*/
*                CALL ALLOPROC(NULLPARM,ADDR(SERNAME));    /*@Y30SSFR*/
         LA    @08,@CF00115                                        0688
         ST    @08,@AL00001                                        0688
         LA    @08,SERNAME                                         0688
         ST    @08,@AFTEMPS+4                                      0688
         LA    @08,@AFTEMPS+4                                      0688
         ST    @08,@AL00001+4                                      0688
         LA    @01,@AL00001                                        0688
         BAL   @14,ALLOPROC                                        0688
*                CTGDDNM = ADDR(ALLDDN);                   /*@Y30SSFR*/
         L     @08,ALLPTR                                          0689
         LA    @08,ALLDDN(,@08)                                    0689
         L     @01,CTGPLPTR                                        0689
         ST    @08,CTGDDNM(,@01)                                   0689
*                END;                                      /*@Y30SSFR*/
*                                                                  0690
*            CTGENT = ADDR(SERNAME);                               0691
@RF00686 LA    @08,SERNAME                                         0691
         L     @01,CTGPLPTR                                        0691
         ST    @08,CTGENT(,@01)                                    0691
*            END;                                          /*@Y30SSFR*/
*          ELSE                                                    0693
*            CTGENT = ADDR(ENTVAL(ENT));                   /*#YL026UA*/
*                                                                  0693
         B     @RC00682                                            0693
@RF00682 LR    @08,ENT                                             0693
         MH    @08,@CH01066                                        0693
         L     @01,GENWKPTR                                        0693
         AL    @01,@CF01104                                        0693
         LA    @08,ENTVAL-5(@08,@01)                               0693
         L     @01,CTGPLPTR                                        0693
         ST    @08,CTGENT(,@01)                                    0693
*        IF CTGPSWD = 0 & NTRYPLN(ENTRYID) ^= 0                    0694
*          THEN                                                    0694
@RC00682 SLR   @08,@08                                             0694
         L     @15,CTGPLPTR                                        0694
         C     @08,CTGPSWD(,@15)                                   0694
         BNE   @RF00694                                            0694
         L     @14,@PC00005                                        0694
         LH    @14,ENTRYID(,@14)                                   0694
         MH    @14,@CH01079                                        0694
         L     @07,@PC00001+4                                      0694
         L     @07,FDTPTR(,@07)                                    0694
         LA    @01,0(@14,@07)                                      0694
         AL    @01,@CF01099                                        0694
         SLR   @00,@00                                             0694
         IC    @00,NTRYPLN-2(,@01)                                 0694
         CR    @08,@00                                             0694
         BE    @RF00694                                            0694
*            CTGPSWD = ADDR (NTRYPAS(ENTRYID));                    0695
*                                                                  0695
         AL    @07,@CF01100                                        0695
         LA    @08,NTRYPAS-3(@14,@07)                              0695
         ST    @08,CTGPSWD(,@15)                                   0695
*        /************************************************************/
*        /*                                                  #YM07852*/
*        /*  IF DELETING A USERCATALOG, SET                  @Y30SSFR*/
*        /*  THE CTGCAT FIELD TO THE ADDRESS OF THE NAME OF  #YM07852*/
*        /*  THE USERCATALOG TO BE DELETED.  ALSO SET THE    #YM07852*/
*        /*  CTGCNAME FIELD TO INDICATE THAT THE ADDRESS OF  #YM07852*/
*        /*  A CATALOG NAME IS GIVEN RATHER THAN A CATALOG   #YM07852*/
*        /*  ACB ADDRESS.                                    #YM07852*/
*        /*                                                  #YM07852*/
*        /************************************************************/
*                                                                  0696
*        IF ADDR(CAT) = NULLPTR & ADDR(UCAT) ^= NULLPTR    /*#YM07852*/
*          THEN                                            /*#YM07852*/
@RF00694 SLR   @08,@08                                             0696
         L     @15,@PC00001+4                                      0696
         C     @08,FDTPTR+8(,@15)                                  0696
         BNE   @RF00696                                            0696
         C     @08,FDTPTR+48(,@15)                                 0696
         BE    @RF00696                                            0696
*            DO;                                           /*#YM07852*/
*            CTGCNAME = ON;                                /*#YM07852*/
         L     @08,CTGPLPTR                                        0698
         OI    CTGCNAME(@08),B'00000010'                           0698
*            CTGCAT = CTGENT;                              /*#YM07852*/
         L     @15,CTGENT(,@08)                                    0699
         ST    @15,CTGCAT(,@08)                                    0699
*            END;                                          /*#YM07852*/
*                                                                  0700
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  IF THE USER SPECIFIED THE TYPE ON THE DELETE    @Y30SSFR*/
*        /*  AND PROVIDED A GENERIC NAME, COMPARE THE TYPE   @Y30SSFR*/
*        /*  GIVEN WITH THAT RETURNED BY GENERIC LOCATE.  IF @Y30SSFR*/
*        /*  THEY ARE EQUAL, PROCEED.  OTHERWISE, RETURN TO  @Y30SSFR*/
*        /*  THE CALLING PROCESSOR.  THIS IS NOT, HOWEVER,   @Y30SSFR*/
*        /*  CONSIDERED TO BE AN ERROR.                      @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0701
*        IF TYPEFLAG = ON                                  /*@Y30SSFR*/
*          THEN                                            /*@Y30SSFR*/
@RF00696 TM    TYPEFLAG,B'10000000'                                0701
         BNO   @RF00701                                            0701
*            IF NTRYPOS(INDEX) ^= 0                        /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
         SLR   @08,@08                                             0702
         LH    @15,INDEX                                           0702
         MH    @15,@CH01079                                        0702
         L     @14,@PC00001+4                                      0702
         L     @01,FDTPTR(,@14)                                    0702
         AL    @01,@CF01102                                        0702
         SLR   @14,@14                                             0702
         IC    @14,NTRYPOS-11(@15,@01)                             0702
         CR    @08,@14                                             0702
         BE    @RF00702                                            0702
*                IF CTGTYPE ^= ENTTYP(ENT)                 /*@Y30SSFR*/
*                  THEN                                    /*@Y30SSFR*/
         LR    @15,ENT                                             0703
         MH    @15,@CH01066                                        0703
         L     @01,CTGPLPTR                                        0703
         L     @14,GENWKPTR                                        0703
         ALR   @14,@15                                             0703
         AL    @14,@CF01103                                        0703
         CLC   CTGTYPE(1,@01),ENTTYP-4(@14)                        0703
         BE    @RF00703                                            0703
*                    DO;                                   /*@Y30SSFR*/
*                    NODEL = ON;                           /*@Y30SSFR*/
         OI    NODEL,B'10000000'                                   0705
*                    RETURN CODE(LASTCC00);                /*@Y30SSFR*/
         LR    @15,@08                                             0706
         L     @14,@SA00005                                        0706
         LM    @00,@03,@SA00005+8                                  0706
         LM    @05,@12,@SA00005+24                                 0706
         BR    @14                                                 0706
*                    END;                                  /*@Y30SSFR*/
*                                                                  0707
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  IF TYPE WAS NOT SPECIFIED ON THE DELETE COMMAND, SET    */
*        /*  THE TYPE FIELD FROM THE TYPE FOUND IN THE CATALOG ENTRY */
*        /*  IF THE TYPE IS NON-VSAM SET THE SCRATCH FLAG (IF        */
*        /*  IF FILE WAS NOT SPECIFIED ON THE DELETE COMMAND AND     */
*        /*  NOSCRATCH WAS NOT SPECIFIED).                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0708
*        IF TYPEFLAG = OFF                                         0708
*          THEN                                                    0708
@RF00703 DS    0H                                                  0708
@RF00702 DS    0H                                                  0708
@RF00701 TM    TYPEFLAG,B'10000000'                                0708
         BNZ   @RF00708                                            0708
*            DO;                                                   0709
*            CTGTYPE = TYPE;                                       0710
         L     @08,CTGPLPTR                                        0710
         L     @15,@PC00005+4                                      0710
         MVC   CTGTYPE(1,@08),TYPE(@15)                            0710
*            IF ADDR(NSCR) = NULLPTR & TYPE = CTGTALIN             0711
*              THEN                                                0711
         L     @14,@PC00001+4                                      0711
         L     @14,FDTPTR+64(,@14)                                 0711
         LTR   @14,@14                                             0711
         BNZ   @RF00711                                            0711
         CLI   TYPE(@15),C'A'                                      0711
         BNE   @RF00711                                            0711
*                CTGSCR = ON;                              /*@Y30SSFR*/
*                                                                  0712
         OI    CTGSCR(@08),B'00000010'                             0712
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET NOSCRATCH CATALOG CLEANUP OPTION FOR CLUSTER    */
*            /*  AND PAGESPACE WHEN NOSCRATCH IS SPECIFIED.  @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  0713
*            IF ADDR(NSCR) ^= NULLPTR &                    /*@ZA00605*/
*               ( TYPE = CTGTCL × TYPE = CTGTAIX ×         /*@ZA00605*/
*                 TYPE = CTGTPGSP)                         /*@ZA00605*/
*              THEN                                        /*@ZA00605*/
@RF00711 L     @08,@PC00001+4                                      0713
         L     @08,FDTPTR+64(,@08)                                 0713
         LTR   @08,@08                                             0713
         BZ    @RF00713                                            0713
         L     @08,@PC00005+4                                      0713
         CLI   TYPE(@08),C'C'                                      0713
         BE    @RT00713                                            0713
         CLI   TYPE(@08),C'G'                                      0713
         BE    @RT00713                                            0713
         CLI   TYPE(@08),C'P'                                      0713
         BNE   @RF00713                                            0713
@RT00713 DS    0H                                                  0714
*                CTGNSVS = ON;                             /*@ZA00605*/
         L     @08,CTGPLPTR                                        0714
         OI    CTGNSVS(@08),B'10000000'                            0714
*            END;                                          /*@Y30SSFR*/
*                                                                  0715
@RF00713 DS    0H                                                  0716
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  IF FILE WAS NOT SPECIFIED ON THE DELETE COMMAND AND     */
*        /*  THE OBJECT IS TO BE ERASED,                     @Y30SSFR*/
*        /*  DYNAMICALLY ALLOCATE THE DATA SET               #YL026UA*/
*        /*                                                  #YL026UA*/
*        /************************************************************/
*                                                                  0716
*        IF (TYPE = CTGTCL × TYPE = CTGTAIX) &             /*@Y30SSFR*/
*        ADDR(ERASE) ^= NULLPTR & ADDR(INDD) = NULLPTR     /*@Y30SSFR*/
*          THEN                                            /*#YL026UA*/
@RF00708 L     @08,@PC00005+4                                      0716
         CLI   TYPE(@08),C'C'                                      0716
         BE    @GL00064                                            0716
         CLI   TYPE(@08),C'G'                                      0716
         BNE   @RF00716                                            0716
@GL00064 SLR   @08,@08                                             0716
         L     @15,@PC00001+4                                      0716
         C     @08,FDTPTR+28(,@15)                                 0716
         BE    @RF00716                                            0716
         C     @08,FDTPTR+16(,@15)                                 0716
         BNE   @RF00716                                            0716
*            DO;                                           /*@Y30SSFR*/
*            CALL ALLOPROC(ADDR(ENTVAL(ENT)),NULLPARM);    /*@Y30SSFR*/
         LR    @08,ENT                                             0718
         MH    @08,@CH01066                                        0718
         L     @01,GENWKPTR                                        0718
         AL    @01,@CF01104                                        0718
         LA    @08,ENTVAL-5(@08,@01)                               0718
         ST    @08,@AFTEMPS+4                                      0718
         LA    @08,@AFTEMPS+4                                      0718
         ST    @08,@AL00001                                        0718
         LA    @08,@CF00115                                        0718
         ST    @08,@AL00001+4                                      0718
         LA    @01,@AL00001                                        0718
         BAL   @14,ALLOPROC                                        0718
*            CTGDDNM = ADDR(ALLDDN);                       /*@Y30SSFR*/
         L     @08,ALLPTR                                          0719
         LA    @08,ALLDDN(,@08)                                    0719
         L     @01,CTGPLPTR                                        0719
         ST    @08,CTGDDNM(,@01)                                   0719
*            END;                                          /*@Y30SSFR*/
*                                                                  0720
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  IF THE ACB ADDRESS WAS OBTAINED BY FINDTYPE     #YL026UA*/
*        /*  SET THE ADDRESS OF THE ACB IN THE CPL           #YL026UA*/
*        /*                                                  #YL026UA*/
*        /************************************************************/
*                                                                  0721
*        IF ACBFLAG = ON & ADDR(CATDD) = NULLPTR                   0721
*          THEN                                                    0721
@RF00716 TM    ACBFLAG,B'10000000'                                 0721
         BNO   @RF00721                                            0721
         L     @08,@PC00001+4                                      0721
         L     @08,FDTPTR+12(,@08)                                 0721
         LTR   @08,@08                                             0721
         BNZ   @RF00721                                            0721
*            DO;                                           /*#YL026UA*/
*            ACBFLAG = OFF;                                /*@Y30SSFR*/
         NI    ACBFLAG,B'01111111'                                 0723
*            CTGCNAME = OFF;                               /*@Y30SSFR*/
         L     @08,CTGPLPTR                                        0724
         NI    CTGCNAME(@08),B'11111101'                           0724
*            CTGCAT = ADDR(ACBPTR);                        /*@Y30SSFR*/
         LA    @15,ACBPTR                                          0725
         ST    @15,CTGCAT(,@08)                                    0725
*            END;                                          /*#YL026UA*/
*        RETURN CODE (SETRC);                              /*#YL026UA*/
@RF00721 LR    @15,SETRC                                           0727
         L     @14,@SA00005                                        0727
         LM    @00,@03,@SA00005+8                                  0727
         LM    @05,@12,@SA00005+24                                 0727
         BR    @14                                                 0727
*END BUILDCPL;                                                     0728
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - CATCALL                                */
*        /*                                                          */
*        /*  FUNCTION - CALL THE VSAM CATALOG TO DELETE THE          */
*        /*  CATALOG ENTRIES. EXAMINE THE RETURN CODE FROM THE       */
*        /*  CATALOG AND ISSUE APPROPRIATE DELETION MESSAGES.        */
*        /*  CERTAIN VSAM CATALOG RETURN CODES CAUSE CATCALL @Y30SSFR*/
*        /*  TO INVOKE SERVICE ROUTINES TO HANDLE SPECIAL    @Y30SSFR*/
*        /*  FUNCTIONS FOR IT.  A CATALOG RETURN CODE OF     @Y30SSFR*/
*        /*  40 INDICATES THAT THE WORKAREA FOR CMS IS TOO   @Y30SSFR*/
*        /*  SMALL.  MORESP IS INVOKED TO GET A LARGER WORK  @Y30SSFR*/
*        /*  AREA.  CATALOG RETURN CODES OF 72 AND 240 CAUSE @Y30SSFR*/
*        /*  CATCALL TO INVOKE ALLOPROC TO DYNAMICALLY ALLO- @Y30SSFR*/
*        /*  CATE THE OBJECT REQUIRED BY CMS.                @Y30SSFR*/
*        /*                                                          */
*        /*  INPUT - NONE                                            */
*        /*                                                          */
*        /*  OUTPUT - IF AN ERROR IS FOUND, THE RETURN CODE IS SET   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0729
*CATCALL: PROCEDURE;                                               0729
*                                                                  0729
CATCALL  STM   @14,@12,@SA00006                                    0729
*        /************************************************************/
*        /*                                                          */
*        /*  LOCAL DECLARATIONS                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0730
*        DCL I        FIXED(31);       /*LOOP CONTROL INDEX  @Y30SSFR*/
*        DCL IX       FIXED(31);       /*LOOP CONTROL INDEX  @Y30SSFR*/
*                                      /*FOR PRINTING NAMES  @Y30SSFR*/
*                                      /*FROM THE WORKAREA   @Y30SSFR*/
*        DCL ALLOINDX FIXED(31);       /*INDEX INTO THE WORK @Y30SSFR*/
*                                      /*AREA FOR THE NAME   @Y30SSFR*/
*                                      /*OF THE THING TO BE  @Y30SSFR*/
*                                      /*ALLOCATED           @Y30SSFR*/
*        DCL MNOENT   FIXED(31);       /*PARAMETER PASSED TO @Y30SSFR*/
*                                      /*MORESP INDICATING   @Y30SSFR*/
*                                      /*HOW MANY ENTRIES    @Y30SSFR*/
*                                      /*ARE IN THE CURRENT  @Y30SSFR*/
*                                      /*WORK AREA           @Y30SSFR*/
*        DCL BLANK    CHAR(1) CONSTANT(' ');               /*@OZ02293*/
*        OLDERID2 = NEWERID2;                                      0735
         L     @08,@PC00001                                        0735
         L     @08,GDTTR2(,@08)                                    0735
         MVC   @TS00001(95),NEWERID2(@08)                          0735
         MVC   OLDERID2(95,@08),@TS00001                           0735
*        NEWID2 = 'DLCT';                                          0736
*                                                                  0736
         MVC   NEWID2(4,@08),@CC01011                              0736
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE THE CATALOG WORK AREA TO ZEROES AND          */
*        /*  SET THE LENGTH OF THE WORK AREA IN THE WORK AREA.       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0737
*        DO IND1 = 1 TO 12;                                /*#Y30SSFR*/
         LA    IND1,1                                              0737
@DL00737 DS    0H                                                  0738
*          ENTITEM(IND1) = ''B;                            /*#Y30SSFR*/
         LR    @08,IND1                                            0738
         MH    @08,@CH01066                                        0738
         L     @03,WAPTR                                           0738
         ALR   @03,@08                                             0738
         AL    @03,@CF01103                                        0738
         XC    ENTITEM-4(45,@03),ENTITEM-4(@03)                    0738
*        END;                                              /*#Y30SSFR*/
         AL    IND1,@CF00219                                       0739
         C     IND1,@CF00035                                       0739
         BNH   @DL00737                                            0739
*        RETURNLN = 0;                                     /*#Y30SSFR*/
         L     @08,WAPTR                                           0740
         SLR   @15,@15                                             0740
         STH   @15,RETURNLN(,@08)                                  0740
*        AREALN = LENGTH (WORKAREA);                               0741
         MVC   AREALN(2,@08),@CH01085                              0741
*        DEFINED = ON;                                     /*#YL026UA*/
*                                                                  0742
         OI    DEFINED,B'10000000'                                 0742
*        /************************************************************/
*        /*                                                          */
*        /*  CALL THE VSAM CATALOG WITH REGISTER 1 POINTING TO THE   */
*        /*  CATALOG PARAMETER LIST.                         #Y30SSFR*/
*        /*  THE CATALOG IS CALLED ITERATIVELY UNTIL A       #Y30SSFR*/
*        /*  TERMINATING ERROR OCCURS OR UNTIL THE ENTIRE    #Y30SSFR*/
*        /*  STRUCTURE ASSOCIATED WITH THE ENTRY BEING       #Y30SSFR*/
*        /*  DELETED HAS BEEN REMOVED FROM THE CATALOG.      #Y30SSFR*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0743
*CATALOG: DO WHILE DEFINED = ON;                           /*#YL026UA*/
*                                                                  0743
CATALOG  B     @DE00743                                            0743
@DL00743 DS    0H                                                  0744
*          /**********************************************************/
*          /*                                                #Y30SSFR*/
*          /*  SET THE LOOP CONTROL VARIABLE TO OFF AND SAVE #Y30SSFR*/
*          /*  THE CTGPL BEFORE INVOKING VSAM CATALOG        #Y30SSFR*/
*          /*  MANAGEMENT.                                   #Y30SSFR*/
*          /*                                                #Y30SSFR*/
*          /**********************************************************/
*                                                                  0744
*          DEFINED = OFF;                                  /*#Y30SSFR*/
         NI    DEFINED,B'01111111'                                 0744
*          RENEWCPL = CTGPL;                               /*#Y30SSFR*/
*                                                                  0745
         L     @08,CTGPLPTR                                        0745
         MVC   RENEWCPL(28),CTGPL(@08)                             0745
*          IF GDTDBG = NULLPTR                                     0746
*            THEN;                                                 0746
         L     @08,@PC00001                                        0746
         L     @08,GDTDBG(,@08)                                    0746
         LTR   @08,@08                                             0746
         BZ    @RT00746                                            0746
*            ELSE                                                  0748
*              CALL IDCDB010 (GDTTBL,'DLDB');                      0748
         L     @08,@PC00001                                        0748
         ST    @08,@AL00001                                        0748
         LA    @15,@CC01014                                        0748
         ST    @15,@AL00001+4                                      0748
         MVI   @AL00001+4,X'80'                                    0748
         L     @15,GDTDBG(,@08)                                    0748
         LA    @01,@AL00001                                        0748
         BALR  @14,@15                                             0748
*                                                          /*#Y30SSFR*/
*                                                                  0749
*          CALL IDCSACA0 (GDTTBL,CTGPLPTR);                /*#Y30SSFR*/
*                                                                  0749
@RT00746 L     @08,@PC00001                                        0749
         ST    @08,@AL00001                                        0749
         LA    @15,CTGPLPTR                                        0749
         ST    @15,@AL00001+4                                      0749
         L     @15,GDTCAT(,@08)                                    0749
         LA    @01,@AL00001                                        0749
         BALR  @14,@15                                             0749
*          RESPECIFY REG15 RSTD;                           /*#Y30SSFR*/
*          CATLGRC = REG15;                                /*#Y30SSFR*/
         STH   REG15,CATLGRC                                       0751
*          RESPECIFY REG15 UNRSTD;                         /*#Y30SSFR*/
*                                                                  0752
*          IF GDTDBG = NULLPTR                                     0753
*            THEN;                                                 0753
         L     @08,@PC00001                                        0753
         L     @08,GDTDBG(,@08)                                    0753
         LTR   @08,@08                                             0753
         BZ    @RT00753                                            0753
*            ELSE                                                  0755
*              CALL IDCDB010 (GDTTBL,'DLDA');                      0755
         L     @08,@PC00001                                        0755
         ST    @08,@AL00001                                        0755
         LA    @15,@CC01015                                        0755
         ST    @15,@AL00001+4                                      0755
         MVI   @AL00001+4,X'80'                                    0755
         L     @15,GDTDBG(,@08)                                    0755
         LA    @01,@AL00001                                        0755
         BALR  @14,@15                                             0755
*                                                          /*#Y30SSFR*/
*                                                                  0756
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  INITIALIZE MNOENT TO 0 TO HANDLE THE CASE IN  @Y30SSFR*/
*          /*  CATALOG MANAGEMENT RETURNS WITH A RETURN CODE @Y30SSFR*/
*          /*  OF 40 AND A RETURNLN OF 4.  THIS MAY HAPPEN   @Y30SSFR*/
*          /*  ON THE INITIAL CALL TO CMS DURING THE         @Y30SSFR*/
*          /*  OF A VERY LARGE STRUCTURE.                    @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0756
*          MNOENT = 0;                                     /*@Y30SSFR*/
*                                                                  0756
@RT00753 SLR   @08,@08                                             0756
         ST    @08,MNOENT                                          0756
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  IF CATALOG HAS SET RETURNLN TO A VALUE        @Y30SSFR*/
*          /*  GREATER THAN 4, THERE ARE NAMES IN THE WORK   @Y30SSFR*/
*          /*  AREA TO BE PRINTED.  EXACTLY HOW MANY OF      @Y30SSFR*/
*          /*  THESE ARE TO BE PRINTED IS A FUNCTION OF THE  @Y30SSFR*/
*          /*  RETURN CODE.  IF THE VSAM CATALOG RETURN CODE @Y30SSFR*/
*          /*  IS ANYTHING OTHER THAN 72 OR 76, ALL OF THE   @Y30SSFR*/
*          /*  NAMES ARE TO BE PRINTED.  IF THE RETURN CODE  @Y30SSFR*/
*          /*  IS 72 OR 76, THEN THE LAST ITEM IN THE WORK   @Y30SSFR*/
*          /*  AREA IS IS THE THING TO BE ALLOCATED, AND IT  @Y30SSFR*/
*          /*  AND ITS ASSOCIATIONS IN THE WORK AREA ARE     @Y30SSFR*/
*          /*  NOT TO BE PRINTED.                            @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0757
*          IF RETURNLN > 4                                         0757
*            THEN                                                  0757
*                                                                  0757
         L     @08,WAPTR                                           0757
         LH    @08,RETURNLN(,@08)                                  0757
         C     @08,@CF00042                                        0757
         BNH   @RF00757                                            0757
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  IF THE VSAM CATALOG RETURN CODE IS 40,    @Y30SSFR*/
*              /*  THE VALUE IN RETURNLN IS THE SUM OF THE   @Y30SSFR*/
*              /*  AMOUNT OF SPACE USED FOR NAMES OF DELETED @Y30SSFR*/
*              /*  OBJECTS AND THE AMOUNT NEEDED TO DELETE   @Y30SSFR*/
*              /*  THE NEXT PART OF THE STRUCTURE.  HENCE,   @Y30SSFR*/
*              /*  THE VALUE OF RETURNLN MUST BE ADJUSTED    @Y30SSFR*/
*              /*  PRIOR TO USING IT AS A LIMIT ON THE       @Y30SSFR*/
*              /*  ON THE NUMBER OF NAMES TO PRINT.          @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0758
*              IF CATLGRC = NEEDCORE                               0758
*                 THEN                                             0758
         CLC   CATLGRC(2),@CH00912                                 0758
         BNE   @RF00758                                            0758
*MPRTLP:            DO;                                     /*@Y30SSFR*
*                                                                  0759
MPRTLP   DS    0H                                                  0760
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  SET UP THE DARGLIST FOR THE ENTRY     @Y30SSFR*/
*                  /*  DELETED MESSAGE.                      @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0760
*                  DARGSMOD = DELMSG;                      /*@Y30SSFR*/
         L     @08,DDSTRU                                          0760
         MVC   DARGSMOD(3,@08),@CC00888                            0760
*                  DARGSENT = ENTRYMSG;                    /*@Y30SSFR*/
*                                                                  0761
         MVI   DARGSENT(@08),X'01'                                 0761
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  CALCULATE THE MAXIMUM NUMBER OF ITEMS @Y30SSFR*/
*                  /*  THAT CAN FIT INTO THE EXISTING WORK   @Y30SSFR*/
*                  /*  AREA.  THEN LOOP UNTIL AN EMPTY       @Y30SSFR*/
*                  /*  SLOT IS FOUND IN THE WORKAREA OR      @Y30SSFR*/
*                  /*  UNTIL THE MAXIMUM NUMBER OF ITEMS     @Y30SSFR*/
*                  /*  HAS BEEN PRINTED.                     @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0762
*                  LIMIT = (AREALN - 4) / LENGTH(ENTITEM); /*@Y30SSFR*/
         L     @08,WAPTR                                           0762
         LH    @00,AREALN(,@08)                                    0762
         SL    @00,@CF00042                                        0762
         SRDA  @00,32                                              0762
         D     @00,@CF01066                                        0762
         ST    @01,LIMIT                                           0762
*                  IX = 1;                                 /*@Y30SSFR*/
*                                                                  0763
         LA    IX,1                                                0763
*                  DO WHILE IX <= LIMIT &                  /*@Y30SSFR*/
*                  ENTRYTYP(IX) ^= 0;                      /*@Y30SSFR*/
         B     @DE00764                                            0764
@DL00764 DS    0H                                                  0765
*                    DARGDBP = ADDR(ENTLIST(IX));          /*@Y30SSFR*/
         L     @08,DDSTRU                                          0765
         L     @03,WAPTR                                           0765
         LR    @15,IX                                              0765
         MH    @15,@CH01066                                        0765
         LA    @01,0(@15,@03)                                      0765
         AL    @01,@CF01103                                        0765
         ST    @01,DARGDBP(,@08)                                   0765
*                    IF ENTRYTYP (IX) = CTGTVOL            /*@Y30SSFR*/
*                      THEN                                /*@Y30SSFR*/
         ALR   @03,@15                                             0766
         AL    @03,@CF01103                                        0766
         CLI   ENTRYTYP-4(@03),C'V'                                0766
         BNE   @RF00766                                            0766
*                        DARGILP = SERLN +                 /*@Y30SSFR*/
*                        LENGTH(ENTRYTYP(1));              /*@Y30SSFR*/
         MVC   DARGILP(2,@08),@CH00472                             0767
*                      ELSE                                        0768
*                        DARGILP = LENGTH(ENTLIST(1));     /*@Y30SSFR*/
*                                                                  0768
         B     @RC00766                                            0768
@RF00766 L     @08,DDSTRU                                          0768
         MVC   DARGILP(2,@08),@CH01066                             0768
*                    CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU); /*@Y30SSFR*/
*                                                                  0769
@RC00766 L     @08,@PC00001                                        0769
         ST    @08,@AL00001                                        0769
         LA    @03,@CF00115                                        0769
         ST    @03,@AL00001+4                                      0769
         LA    @03,DDSTRU                                          0769
         ST    @03,@AL00001+8                                      0769
         MVI   @AL00001+8,X'80'                                    0769
         L     @15,GDTPRT(,@08)                                    0769
         LA    @01,@AL00001                                        0769
         BALR  @14,@15                                             0769
*                    IX = IX + 1;                          /*@Y30SSFR*/
         AL    IX,@CF00219                                         0770
*                  END;                                    /*@Y30SSFR*/
*                                                                  0771
@DE00764 C     IX,LIMIT                                            0771
         BH    @DC00764                                            0771
         LR    @08,IX                                              0771
         MH    @08,@CH01066                                        0771
         L     @03,WAPTR                                           0771
         AL    @03,@CF01103                                        0771
         SLR   @15,@15                                             0771
         IC    @15,ENTRYTYP-4(@08,@03)                             0771
         C     @15,@CF00115                                        0771
         BNE   @DL00764                                            0771
@DC00764 DS    0H                                                  0772
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  IX IS, UPON EXITING THE LOOP, ONE MORE@Y30SSFR*/
*                  /*  THAN THE ACTUAL NUMBER OF ITEMS IN    @Y30SSFR*/
*                  /*  WORKAREA.  THUS THE VALUE THAT IS     @Y30SSFR*/
*                  /*  PASSED TO MORESP AS THE NUMBER OF     @Y30SSFR*/
*                  /*  ITEMS IN THE WORKAREA IS IX MINUS 1.  @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0772
*                  MNOENT = IX - 1;                        /*@Y30SSFR*/
*                                                                  0772
         LR    @08,IX                                              0772
         BCTR  @08,0                                               0772
         ST    @08,MNOENT                                          0772
*                  END MPRTLP;                             /*@Y30SSFR*/
*                                                                  0773
*                ELSE                                      /*@Y30SSFR*/
*                                                                  0774
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  IF THE VSAM CATALOG RETURN CODE IS 72 @Y30SSFR*/
*                  /*  OR 76, THE LAST ENTRY IN THE WORKAREA @Y30SSFR*/
*                  /*  IS TO BE DYNAMICALLY ALLOCATED, AND   @Y30SSFR*/
*                  /*  HAS NOT YET BEEN DELETED.  THAT       @Y30SSFR*/
*                  /*  ENTRY AND EITHER THE PRECEDING ENTRY  @Y30SSFR*/
*                  /*  OR THE TWO PRECEDING ENTRIES ARE NOT  @Y30SSFR*/
*                  /*  NOT TO BE PRINTED.                    @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0774
*                  IF (CATLGRC = ALLORC1) ×                /*@Y30SSFR*/
*                       (CATLGRC = ALLORC3)                /*@Y30SSFR*/
*                    THEN                                  /*#Y30SSFR*/
         B     @RC00758                                            0774
@RF00758 LH    @08,CATLGRC                                         0774
         C     @08,@CF00914                                        0774
         BE    @RT00774                                            0774
         C     @08,@CF00916                                        0774
         BNE   @RF00774                                            0774
@RT00774 DS    0H                                                  0775
*A1PRTLP:              DO;                                 /*#Y30SSFR*/
*                                                                  0775
A1PRTLP  DS    0H                                                  0776
*                      /**********************************************/
*                      /*                                    #Y30SSFR*/
*                      /*  CALCULATE THE MAXIMUM NUMBER OF   #Y30SSFR*/
*                      /*  ENTRIES THAT CAN FIT INTO THE     #Y30SSFR*/
*                      /*  WORK AREA.  THE NUMBER            @Y30SSFR*/
*                      /*  TO BE PRINTED IS ONE LESS THAN    #Y30SSFR*/
*                      /*  THE TOTAL NUMBER OF ITEMS IN      #Y30SSFR*/
*                      /*  WORKAREA.                         @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0776
*                      LIMIT = ((RETURNLN - 4) /           /*@Y30SSFR*/
*                      LENGTH(ENTITEM)) -1 ;               /*@Y30SSFR*/
*                                                                  0776
         L     @08,WAPTR                                           0776
         LH    @00,RETURNLN(,@08)                                  0776
         SL    @00,@CF00042                                        0776
         SRDA  @00,32                                              0776
         D     @00,@CF01066                                        0776
         BCTR  @01,0                                               0776
         ST    @01,LIMIT                                           0776
*                      /**********************************************/
*                      /*                                    @Y30SSFR*/
*                      /*  LOOP, PRINTING THE NAMES OF THE   @Y30SSFR*/
*                      /*  ENTRIES DELETED SO FAR.           @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0777
*                      DARGSMOD = DELMSG;                  /*@Y30SSFR*/
         L     @08,DDSTRU                                          0777
         MVC   DARGSMOD(3,@08),@CC00888                            0777
*                      DARGSENT = ENTRYMSG;                /*@Y30SSFR*/
         MVI   DARGSENT(@08),X'01'                                 0778
*                      IX = 1;                             /*@Y30SSFR*/
*                                                                  0779
         LA    IX,1                                                0779
*                      DO WHILE IX <= LIMIT & ENTRYTYP(IX) /*@Y30SSFR*/
*                      ^= 0;                               /*@Y30SSFR*/
         B     @DE00780                                            0780
@DL00780 DS    0H                                                  0781
*                        DARGDBP = ADDR(ENTLIST(IX));      /*@Y30SSFR*/
         L     @08,DDSTRU                                          0781
         L     @03,WAPTR                                           0781
         LR    @15,IX                                              0781
         MH    @15,@CH01066                                        0781
         LA    @01,0(@15,@03)                                      0781
         AL    @01,@CF01103                                        0781
         ST    @01,DARGDBP(,@08)                                   0781
*                        IF ENTRYTYP(IX) = CTGTVOL         /*@Y30SSFR*/
*                          THEN                            /*@Y30SSFR*/
         ALR   @03,@15                                             0782
         AL    @03,@CF01103                                        0782
         CLI   ENTRYTYP-4(@03),C'V'                                0782
         BNE   @RF00782                                            0782
*                            DARGILP = SERLN +             /*@Y30SSFR*/
*                            LENGTH(ENTRYTYP(1));          /*@Y30SSFR*/
         MVC   DARGILP(2,@08),@CH00472                             0783
*                          ELSE                            /*@Y30SSFR*/
*                            DARGILP = LENGTH(ENTLIST(1)); /*@Y30SSFR*/
*                                                                  0784
         B     @RC00782                                            0784
@RF00782 L     @08,DDSTRU                                          0784
         MVC   DARGILP(2,@08),@CH01066                             0784
*                        CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*   0785
*                                                            @Y30SSFR*/
*                                                                  0785
@RC00782 L     @08,@PC00001                                        0785
         ST    @08,@AL00001                                        0785
         LA    @03,@CF00115                                        0785
         ST    @03,@AL00001+4                                      0785
         LA    @03,DDSTRU                                          0785
         ST    @03,@AL00001+8                                      0785
         MVI   @AL00001+8,X'80'                                    0785
         L     @15,GDTPRT(,@08)                                    0785
         LA    @01,@AL00001                                        0785
         BALR  @14,@15                                             0785
*                        IX = IX + 1;                      /*@Y30SSFR*/
         AL    IX,@CF00219                                         0786
*                      END;                                /*@Y30SSFR*/
@DE00780 C     IX,LIMIT                                            0787
         BH    @DC00780                                            0787
         LR    @08,IX                                              0787
         MH    @08,@CH01066                                        0787
         L     @03,WAPTR                                           0787
         AL    @03,@CF01103                                        0787
         SLR   @15,@15                                             0787
         IC    @15,ENTRYTYP-4(@08,@03)                             0787
         C     @15,@CF00115                                        0787
         BNE   @DL00780                                            0787
@DC00780 DS    0H                                                  0788
*                      END A1PRTLP;                        /*@Y30SSFR*/
*                                                                  0788
*                    ELSE                                  /*@Y30SSFR*/
*                                                                  0789
*                      /**********************************************/
*                      /*                                    @Y30SSFR*/
*                      /*  FOR ALL OF THE REMAINING CASES,   @Y30SSFR*/
*                      /*  THE NUMBER OF NAMES TO PRINT CAN  @Y30SSFR*/
*                      /*  BE CALCULATED DIRECTLY FROM THE   @Y30SSFR*/
*                      /*  VALUE OF RETURNLN.                @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0789
*OTPRTLP:              DO;                                 /*@Y30SSFR*/
*                                                                  0789
         B     @RC00774                                            0789
@RF00774 DS    0H                                                  0789
OTPRTLP  DS    0H                                                  0790
*                      /**********************************************/
*                      /*                                    @Y30SSFR*/
*                      /*  IF THE VSAM CATALOG RETURN CODE   @Y30SSFR*/
*                      /*  IS 160, ANY EMPTY DATA SPACES ON  @Y30SSFR*/
*                      /*  THE VOLUME BEING DELETED HAVE     @Y30SSFR*/
*                      /*  BEEN SCRATCHED, BUT THERE WERE    @Y30SSFR*/
*                      /*  ALSO SOME NON-EMPTY DATA SPACES   @Y30SSFR*/
*                      /*  ON THE VOLUME WHICH WERE NOT      @Y30SSFR*/
*                      /*  DELETED.  VSAM HAS NOT GIVEN UP   @Y30SSFR*/
*                      /*  VOLUME OWNERSHIP, AND AMS MUST    @Y30SSFR*/
*                      /*  ISSUE AN INFORMATIONAL MESSAGE    @Y30SSFR*/
*                      /*  TO THE USER.                      @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0790
*                      IF CATLGRC = VOLNODEL               /*@Y30SSFR*/
*                        THEN                              /*@Y30SSFR*/
         CLC   CATLGRC(2),@CH00920                                 0790
         BNE   @RF00790                                            0790
*                          DO;                             /*@Y30SSFR*/
*                          /******************************************/
*                          /*                                @Y30SSFR*/
*                          /*  PRINT A MESSAGE INDICATING    @Y30SSFR*/
*                          /*  THAT VSAM HAS NOT DELETED     @Y30SSFR*/
*                          /*  THE VOLUME ENTRY RECORD FROM  @Y30SSFR*/
*                          /*  THE CATALOG.                  @Y30SSFR*/
*                          /*                                @Y30SSFR*/
*                          /******************************************/
*                                                                  0792
*                          DARGDBP = ADDR(SERNAME);        /*@Y30SSFR*/
         L     @08,DDSTRU                                          0792
         LA    @15,SERNAME                                         0792
         ST    @15,DARGDBP(,@08)                                   0792
*                          DARGILP = SERLN;                /*@Y30SSFR*/
         MVC   DARGILP(2,@08),@CH00156                             0793
*                          DARGSENT = DELMSG;              /*@Y30SSFR*/
         L     @15,@CF00888                                        0794
         STC   @15,DARGSENT(,@08)                                  0794
*                          DARGSMOD = VOLMSG;              /*@Y30SSFR*/
*                                                                  0795
         MVC   DARGSMOD(3,@08),@CF00286+1                          0795
*                          CALL AMSTP011(GDTTBL, PRTFILE,DDSTRU);/*
*                                                            @Y30SSFR*/
*                                                                  0796
         L     @08,@PC00001                                        0796
         ST    @08,@AL00001                                        0796
         LA    @15,@CF00115                                        0796
         ST    @15,@AL00001+4                                      0796
         LA    @15,DDSTRU                                          0796
         ST    @15,@AL00001+8                                      0796
         MVI   @AL00001+8,X'80'                                    0796
         L     @15,GDTPRT(,@08)                                    0796
         LA    @01,@AL00001                                        0796
         BALR  @14,@15                                             0796
*                          END;                            /*@Y30SSFR*/
*                                                                  0797
*                      /**********************************************/
*                      /*                                    @Y30SSFR*/
*                      /*  CALCULATE THE NUMBER OF NAMES TO  @Y30SSFR*/
*                      /*  BE PRINTED, AND SET UP THE        @Y30SSFR*/
*                      /*  MODULE AND MESSAGE ID'S IN THE    @Y30SSFR*/
*                      /*  DARGLIST.                         @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0798
*                      ENTRYNO = (RETURNLN - 4)/           /*@Y30SSFR*/
*                      LENGTH(ENTLIST);                    /*@Y30SSFR*/
@RF00790 L     @08,WAPTR                                           0798
         LH    @00,RETURNLN(,@08)                                  0798
         SL    @00,@CF00042                                        0798
         SRDA  @00,32                                              0798
         D     @00,@CF01066                                        0798
         LR    ENTRYNO,@01                                         0798
*                      DARGSMOD = DELMSG;                  /*@Y30SSFR*/
         L     @08,DDSTRU                                          0799
         MVC   DARGSMOD(3,@08),@CC00888                            0799
*                      DARGSENT = ENTRYMSG;                /*@Y30SSFR*/
*                                                                  0800
         MVI   DARGSENT(@08),X'01'                                 0800
*                      /**********************************************/
*                      /*                                    @Y30SSFR*/
*                      /*  NOW LOOP PRINTING THE NAMES OF    @Y30SSFR*/
*                      /*  THE OBJECTS DELETED FROM THE CMS  @Y30SSFR*/
*                      /*  WORKAREA.                         @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0801
*                      DO I = 1 TO ENTRYNO;                /*@Y30SSFR*/
         LA    I,1                                                 0801
         B     @DE00801                                            0801
@DL00801 DS    0H                                                  0802
*                        DARGDBP = ADDR(ENTLIST(I));       /*@Y30SSFR*/
         L     @08,DDSTRU                                          0802
         L     @15,WAPTR                                           0802
         LR    @14,I                                               0802
         MH    @14,@CH01066                                        0802
         LA    @01,0(@14,@15)                                      0802
         AL    @01,@CF01103                                        0802
         ST    @01,DARGDBP(,@08)                                   0802
*                        IF ENTRYTYP(I) = CTGTVOL          /*@Y30SSFR*/
*                          THEN                            /*@Y30SSFR*/
         ALR   @15,@14                                             0803
         AL    @15,@CF01103                                        0803
         CLI   ENTRYTYP-4(@15),C'V'                                0803
         BNE   @RF00803                                            0803
*                            DARGILP = SERLN +             /*@Y30SSFR*/
*                            LENGTH(ENTRYTYP(1));          /*@Y30SSFR*/
         MVC   DARGILP(2,@08),@CH00472                             0804
*                          ELSE                            /*@Y30SSFR*/
*                            DARGILP = LENGTH(ENTLIST(1)); /*@Y30SSFR*/
         B     @RC00803                                            0805
@RF00803 L     @08,DDSTRU                                          0805
         MVC   DARGILP(2,@08),@CH01066                             0805
*                        IF ENTRYTYP(I) = BLANK            /*@OZ02293*/
*                          THEN;                           /*@OZ02293*/
@RC00803 LR    @08,I                                               0806
         MH    @08,@CH01066                                        0806
         L     @01,WAPTR                                           0806
         ALR   @01,@08                                             0806
         AL    @01,@CF01103                                        0806
         CLI   ENTRYTYP-4(@01),C' '                                0806
         BE    @RT00806                                            0806
*                          ELSE                            /*@OZ02293*/
*                           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);  0808
*                                                                  0808
         L     @08,@PC00001                                        0808
         ST    @08,@AL00001                                        0808
         LA    @15,@CF00115                                        0808
         ST    @15,@AL00001+4                                      0808
         LA    @15,DDSTRU                                          0808
         ST    @15,@AL00001+8                                      0808
         MVI   @AL00001+8,X'80'                                    0808
         L     @15,GDTPRT(,@08)                                    0808
         LA    @01,@AL00001                                        0808
         BALR  @14,@15                                             0808
*                      END;                                /*@Y30SSFR*/
*                                                                  0809
@RT00806 AL    I,@CF00219                                          0809
@DE00801 CR    I,ENTRYNO                                           0809
         BNH   @DL00801                                            0809
*                      END OTPRTLP;                        /*@Y30SSFR*/
*                                                                  0810
*          /**********************************************************/
*          /*                                                @Y30SSFR*/
*          /*  DETERMINE THE COURSE OF FURTHER PROCESSING    @Y30SSFR*/
*          /*  BY AGAIN EXAMINING THE VSAM CATALOG RETURN    @Y30SSFR*/
*          /*  CODE.  CURRENTLY, RETURN CODES 40, 72, 76 AND @Y30SSFR*/
*          /*  240 REQUIRE SPECIAL PROCESSING.  RETURN       @Y30SSFR*/
*          /*  CODES 0 AND 160 INDICATE NORMAL TERMINATION   @Y30SSFR*/
*          /*  WHILE ALL OTHER RETURN CODES INDICATE ERROR   @Y30SSFR*/
*          /*  CONDITIONS.                                   @Y30SSFR*/
*          /*                                                @Y30SSFR*/
*          /**********************************************************/
*                                                                  0811
*          IF CATLGRC = NEEDCORE                                   0811
*            THEN                                                  0811
*                                                                  0811
@RC00774 DS    0H                                                  0811
@RC00758 DS    0H                                                  0811
@RF00757 CLC   CATLGRC(2),@CH00912                                 0811
         BNE   @RF00811                                            0811
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  THE VSAM CATALOG RETURN CODE IS 40.       @Y30SSFR*/
*              /*  CALL MORESP TO EITHER CLEAR THE WORKAREA  @Y30SSFR*/
*              /*  OR GET A NEW ONE.  IF MORESP IS SUCCESS-  @Y30SSFR*/
*              /*  FUL, SET DEFINED TO ON TO INDICATE        @Y30SSFR*/
*              /*  ANOTHER ITERATION OF THE LOOP CATALOG.    @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0812
*NCRC:         DO;                                         /*@Y30SSFR*/
NCRC     DS    0H                                                  0813
*              CALL MORESP(MNOENT);                        /*@Y30SSFR*/
         LA    @08,MNOENT                                          0813
         ST    @08,@AL00001                                        0813
         LA    @01,@AL00001                                        0813
         BAL   @14,MORESP                                          0813
*              RESPECIFY RTNREG RSTD;                              0814
*              TESTRC = RTNREG;                                    0815
         LR    TESTRC,RTNREG                                       0815
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30SSFR*/
*              IF TESTRC ^= 0                              /*@Y30SSFR*/
*                THEN                                      /*@Y30SSFR*/
         LTR   TESTRC,TESTRC                                       0817
         BZ    @RF00817                                            0817
*                  DO;                                     /*@Y30SSFR*/
*                  SETRC = LASTCC08;                       /*@Y30SSFR*/
         LA    SETRC,8                                             0819
*                  RETURN CODE(SETRC);                     /*@Y30SSFR*/
         LR    @15,SETRC                                           0820
         L     @14,@SA00006                                        0820
         LM    @00,@12,@SA00006+8                                  0820
         BR    @14                                                 0820
*                  END;                                    /*@Y30SSFR*/
*              DEFINED = ON;                               /*@Y30SSFR*/
@RF00817 OI    DEFINED,B'10000000'                                 0822
*              END NCRC;                                   /*@Y30SSFR*/
*                                                                  0823
*            ELSE                                                  0824
*                                                                  0824
*              /******************************************************/
*              /*                                            @Y30SSFR*/
*              /*  TEST FOR A VSAM CATALOG RETURN CODE OF    @Y30SSFR*/
*              /*  72 OR 76.                                 @Y30SSFR*/
*              /*                                            @Y30SSFR*/
*              /******************************************************/
*                                                                  0824
*              IF (CATLGRC = ALLORC1 & (ADDR(SPACE) = NULLPTR)) ×  0824
*                  (CATLGRC = ALLORC3)                     /*@OZ05919*/
*                THEN                                              0824
*                                                                  0824
         B     @RC00811                                            0824
@RF00811 CLC   CATLGRC(2),@CH00914                                 0824
         BNE   @GL00070                                            0824
         L     @08,@PC00001+4                                      0824
         L     @08,FDTPTR+44(,@08)                                 0824
         LTR   @08,@08                                             0824
         BZ    @RT00824                                            0824
@GL00070 CLC   CATLGRC(2),@CH00916                                 0824
         BNE   @RF00824                                            0824
@RT00824 DS    0H                                                  0825
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  THE VSAM CATALOG RETURN CODE IS       @Y30SSFR*/
*                  /*  EITHER 72 OR 76.                      @Y30SSFR*/
*                  /*  THIS INDICATES THAT VSAM NEEDS SOME-  @Y30SSFR*/
*                  /*  THING DYNAMICALLY ALLOCATED, AND HAS  @Y30SSFR*/
*                  /*  PLACED THE NAME OF THE ITEM TO BE     @Y30SSFR*/
*                  /*  ALLOCATED INTO THE CATALOG WORKAREA.  @Y30SSFR*/
*                  /*  IF ALLOPROC IS SUCCESSFUL, THE        @Y30SSFR*/
*                  /*  CATALOG WORKAREA IS CLEARED, AND      @Y30SSFR*/
*                  /*  DEFINED IS SET TO ON TO INDICATE      @Y30SSFR*/
*                  /*  ANOTHER ITERATION OF THE LOOP         @Y30SSFR*/
*                  /*  CATALOG.                              @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0825
*A1RC:             DO;                                     /*@Y30SSFR*/
A1RC     DS    0H                                                  0826
*                  ALLOINDX = (RETURNLN-4)/                /*@Y30SSFR*/
*                  LENGTH(ENTITEM);                        /*@Y30SSFR*/
*                                                                  0826
         LA    @08,45                                              0826
         L     @15,WAPTR                                           0826
         LH    @00,RETURNLN(,@15)                                  0826
         SL    @00,@CF00042                                        0826
         SRDA  @00,32                                              0826
         DR    @00,@08                                             0826
         LR    ALLOINDX,@01                                        0826
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  RESTORE THE CPL PRIOR TO REQUESTING   @Y30SSFR*/
*                  /*  DYNAMIC ALLOCATION.                   @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0827
*                  CTGPL = RENEWCPL;                       /*@Y30SSFR*/
*                                                                  0827
         L     @02,CTGPLPTR                                        0827
         MVC   CTGPL(28,@02),RENEWCPL                              0827
*                  /**************************************************/
*                  /*                                        #Y30SSFR*/
*                  /*  ALLOINDX IS THE INDEX OF THE LAST     #Y30SSFR*/
*                  /*  ENTRY IN THE CMS WORKAREA.  TEST THE  #Y30SSFR*/
*                  /*  TYPE OF THE ENTRY TO DETERMINE        #Y30SSFR*/
*                  /*  WHETHER THE ALLOCATION IS TO BE BY    #Y30SSFR*/
*                  /*  VOLUME OR DATA SET NAME.              #Y30SSFR*/
*                  /*                                        #Y30SSFR*/
*                  /**************************************************/
*                                                                  0828
*                  IF ENTRYTYP(ALLOINDX) = CTGTVOL         /*#Y30SSFR*/
*                    THEN                                  /*#Y30SSFR*/
         LR    @01,@08                                             0828
         MR    @00,ALLOINDX                                        0828
         ST    @01,@TF00001                                        0828
         ALR   @01,@15                                             0828
         AL    @01,@CF01103                                        0828
         CLI   ENTRYTYP-4(@01),C'V'                                0828
         BNE   @RF00828                                            0828
*                      CALL ALLOPROC(NULLPARM,             /*#Y30SSFR*/
*                      ADDR(ENTRYNM(ALLOINDX)));           /*#Y30SSFR*/
         LA    @08,@CF00115                                        0829
         ST    @08,@AL00001                                        0829
         L     @08,@TF00001                                        0829
         AL    @15,@CF01104                                        0829
         LA    @08,ENTRYNM-5(@08,@15)                              0829
         ST    @08,@AFTEMPS+8                                      0829
         LA    @08,@AFTEMPS+8                                      0829
         ST    @08,@AL00001+4                                      0829
         LA    @01,@AL00001                                        0829
         BAL   @14,ALLOPROC                                        0829
*                    ELSE                                  /*#Y30SSFR*/
*                      CALL ALLOPROC(                      /*#Y30SSFR*/
*                      ADDR(ENTRYNM(ALLOINDX)),            /*#Y30SSFR*/
*                      NULLPARM);                          /*#Y30SSFR*/
*                                                                  0830
         B     @RC00828                                            0830
@RF00828 LR    @08,ALLOINDX                                        0830
         MH    @08,@CH01066                                        0830
         L     @02,WAPTR                                           0830
         AL    @02,@CF01104                                        0830
         LA    @08,ENTRYNM-5(@08,@02)                              0830
         ST    @08,@AFTEMPS+8                                      0830
         LA    @08,@AFTEMPS+8                                      0830
         ST    @08,@AL00001                                        0830
         LA    @08,@CF00115                                        0830
         ST    @08,@AL00001+4                                      0830
         LA    @01,@AL00001                                        0830
         BAL   @14,ALLOPROC                                        0830
*                  RESPECIFY RTNREG RSTD;                          0831
@RC00828 DS    0H                                                  0832
*                  TESTRC = RTNREG;                                0832
         LR    TESTRC,RTNREG                                       0832
*                  RESPECIFY RTNREG UNRSTD;                /*#Y30SSFR*/
*                  IF TESTRC ^= 0                          /*#Y30SSFR*/
*                    THEN                                  /*#Y30SSFR*/
         LTR   TESTRC,TESTRC                                       0834
         BZ    @RF00834                                            0834
*                      DO;                                 /*#Y30SSFR*/
*                      SETRC = LASTCC08;                   /*#Y30SSFR*/
         LA    SETRC,8                                             0836
*                      RETURN CODE(SETRC);                 /*#Y30SSFR*/
         LR    @15,SETRC                                           0837
         L     @14,@SA00006                                        0837
         LM    @00,@12,@SA00006+8                                  0837
         BR    @14                                                 0837
*                      END;                                /*#Y30SSFR*/
*                                                                  0838
*                  /**************************************************/
*                  /*                                        #Y30SSFR*/
*                  /*  ALLOPROC HAS COMPLETED SUCCESSFULLY.  #Y30SSFR*/
*                  /*  INSERT A POINTER TO THE DDNAME        @Y30SSFR*/
*                  /*  RETURNED BY DYNAMIC ALLOCATION        @Y30SSFR*/
*                  /*  IN THE CPL CTGDDNM FIELD.             @Y30SSFR*/
*                  /*  CLEAR THE CATALOG WORKAREA OF THE     #Y30SSFR*/
*                  /*  NAMES PLACED THERE BY THE PREVIOUS    #Y30SSFR*/
*                  /*  CALL TO CATALOG.                      #Y30SSFR*/
*                  /*                                        #Y30SSFR*/
*                  /**************************************************/
*                                                                  0839
*                  CTGDDNM = ADDR(ALLDDN);                 /*@Y30SSFR*/
@RF00834 L     @08,ALLPTR                                          0839
         LA    @08,ALLDDN(,@08)                                    0839
         L     @02,CTGPLPTR                                        0839
         ST    @08,CTGDDNM(,@02)                                   0839
*                  DO IND1 = 1 TO ALLOINDX;                /*#Y30SSFR*/
         LA    IND1,1                                              0840
         B     @DE00840                                            0840
@DL00840 DS    0H                                                  0841
*                    ENTLIST(IND1) = ''B;                  /*#Y30SSFR*/
         LR    @08,IND1                                            0841
         MH    @08,@CH01066                                        0841
         L     @01,WAPTR                                           0841
         ALR   @01,@08                                             0841
         AL    @01,@CF01103                                        0841
         XC    ENTLIST-4(45,@01),ENTLIST-4(@01)                    0841
*                  END;                                    /*#Y30SSFR*/
         AL    IND1,@CF00219                                       0842
@DE00840 CR    IND1,ALLOINDX                                       0842
         BNH   @DL00840                                            0842
*                  RETURNLN = 0;                           /*#Y30SSFR*/
*                                                                  0843
         L     @08,WAPTR                                           0843
         SLR   @15,@15                                             0843
         STH   @15,RETURNLN(,@08)                                  0843
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  SET DEFINED TO BE ON TO INDICATE      @Y30SSFR*/
*                  /*  ANOTHER ITERATION OF THE LOOP         @Y30SSFR*/
*                  /*  CATALOG.                              @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0844
*                  DEFINED = ON;                           /*@Y30SSFR*/
         OI    DEFINED,B'10000000'                                 0844
*                  END A1RC;                               /*@Y30SSFR*/
*                                                                  0845
*                ELSE                                      /*@Y30SSFR*/
*                                                                  0846
*                  /**************************************************/
*                  /*                                        @Y30SSFR*/
*                  /*  TEST FOR A VSAM CATALOG RETURN CODE   @Y30SSFR*/
*                  /*  OF 240.                               @Y30SSFR*/
*                  /*                                        @Y30SSFR*/
*                  /**************************************************/
*                                                                  0846
*                  IF CATLGRC = ALLORC2                    /*@Y30SSFR*/
*                    THEN                                  /*@Y30SSFR*/
*                                                                  0846
         B     @RC00824                                            0846
@RF00824 CLC   CATLGRC(2),@CH00922                                 0846
         BNE   @RF00846                                            0846
*                      /**********************************************/
*                      /*                                    @Y30SSFR*/
*                      /*  THE VSAM CATALOG RETURN CODE IS   @Y30SSFR*/
*                      /*  240.  THIS INDICATES THAT THE     @Y30SSFR*/
*                      /*  OBJECT TO BE DELETED WAS DEFINED  @Y30SSFR*/
*                      /*  WITH THE ERASE ATTRIBUTE,  AND    @Y30SSFR*/
*                      /*  MUST BE DYNAMICALLY ALLOCATED     @Y30SSFR*/
*                      /*  FOR CATALOG.  THE OBJECT TO BE    @Y30SSFR*/
*                      /*  ALLOCATED IS POINTED TO BY THE    @Y30SSFR*/
*                      /*  CTGENT FIELD OF THE CTGPL.        @Y30SSFR*/
*                      /*  TEST TO MAKE SURE THAT THE        @Y30SSFR*/
*                      /*  CATALOG BEING DELETED FROM IS     @Y30SSFR*/
*                      /*  AVAILABLE TO DYNAMIC ALLOCATION.  @Y30SSFR*/
*                      /*                                    @Y30SSFR*/
*                      /**********************************************/
*                                                                  0847
*                      IF ADDR(CAT) ^= NULLPTR             /*@Y30SSFR*/
*                        THEN                              /*@Y30SSFR*/
         L     @08,@PC00001+4                                      0847
         L     @08,FDTPTR+8(,@08)                                  0847
         LTR   @08,@08                                             0847
         BZ    @RF00847                                            0847
*                          CALL RC240PRC;                  /*@Y30SSFR*/
         BAL   @14,RC240PRC                                        0848
*                        ELSE                              /*#Y30SSFR*/
*A2RC2:                    DO;                             /*#Y30SSFR*/
*                                                                  0849
         B     @RC00847                                            0849
@RF00847 DS    0H                                                  0849
A2RC2    DS    0H                                                  0850
*                          /******************************************/
*                          /*                                #Y30SSFR*/
*                          /*  CALL ALLOPROC TO ALLOCATE THE #Y30SSFR*/
*                          /*  OBJECT TO BE ERASED.          #Y30SSFR*/
*                          /*                                #Y30SSFR*/
*                          /******************************************/
*                                                                  0850
*                          CALL ALLOPROC(ADDR(ENTVAL(ENT)),        0850
*                          NULLPARM);                      /*#Y30SSFR*/
*                                                                  0850
         LR    @08,ENT                                             0850
         MH    @08,@CH01066                                        0850
         L     @01,GENWKPTR                                        0850
         AL    @01,@CF01104                                        0850
         LA    @08,ENTVAL-5(@08,@01)                               0850
         ST    @08,@AFTEMPS+8                                      0850
         LA    @08,@AFTEMPS+8                                      0850
         ST    @08,@AL00001                                        0850
         LA    @08,@CF00115                                        0850
         ST    @08,@AL00001+4                                      0850
         LA    @01,@AL00001                                        0850
         BAL   @14,ALLOPROC                                        0850
*                          RESPECIFY RTNREG RSTD;                  0851
*                          TESTRC = RTNREG;                        0852
         LR    TESTRC,RTNREG                                       0852
*                          RESPECIFY RTNREG UNRSTD;        /*#Y30SSFR*/
*                          IF TESTRC ^= 0                  /*#Y30SSFR*/
*                            THEN                          /*#Y30SSFR*/
         LTR   TESTRC,TESTRC                                       0854
         BZ    @RF00854                                            0854
*                              DO;                         /*#Y30SSFR*/
*                              SETRC = LASTCC08;           /*#Y30SSFR*/
         LA    @08,8                                               0856
         LR    SETRC,@08                                           0856
*                              RETURN CODE(LASTCC08);      /*#Y30SSFR*/
         LR    @15,@08                                             0857
         L     @14,@SA00006                                        0857
         LM    @00,@12,@SA00006+8                                  0857
         BR    @14                                                 0857
*                              END;                        /*#Y30SSFR*/
*                                                                  0858
*                          /******************************************/
*                          /*                                #Y30SSFR*/
*                          /*  SET DEFINED TO BE ON TO       #Y30SSFR*/
*                          /*  INDICATE ANOTHER ITERATION    #Y30SSFR*/
*                          /*  OF THE LOOP CATALOG.  ALSO    #Y30SSFR*/
*                          /*  SET CTGDDNM TO POINT TO       #Y30SSFR*/
*                          /*  THE DDNAME RETURNED BY        #Y30SSFR*/
*                          /*  DYNAMIC ALLOCATION.           #Y30SSFR*/
*                          /*                                #Y30SSFR*/
*                          /******************************************/
*                                                                  0859
*                          DEFINED = ON;                   /*#Y30SSFR*/
@RF00854 OI    DEFINED,B'10000000'                                 0859
*                          CTGDDNM = ADDR(ALLDDN);         /*#Y30SSFR*/
         L     @08,ALLPTR                                          0860
         LA    @08,ALLDDN(,@08)                                    0860
         L     @01,CTGPLPTR                                        0860
         ST    @08,CTGDDNM(,@01)                                   0860
*                          END A2RC2;                      /*#Y30SSFR*/
*                                                                  0861
*          /**********************************************************/
*          /*                                                #Y30SSFR*/
*          /*  SAVE THE CURRENT CPL IN RENEWCPL PRIOR TO     #Y30SSFR*/
*          /*  CALLING CATALOG AGAIN.                        #Y30SSFR*/
*          /*                                                #Y30SSFR*/
*          /**********************************************************/
*                                                                  0862
*          IF DEFINED = ON                                 /*#Y30SSFR*/
*            THEN                                          /*#Y30SSFR*/
@RC00847 DS    0H                                                  0862
@RF00846 DS    0H                                                  0862
@RC00824 DS    0H                                                  0862
@RC00811 TM    DEFINED,B'10000000'                                 0862
         BNO   @RF00862                                            0862
*              RENEWCPL = CTGPL;                           /*#Y30SSFR*/
*                                                                  0863
         L     @08,CTGPLPTR                                        0863
         MVC   RENEWCPL(28),CTGPL(@08)                             0863
*        END CATALOG;                                      /*#Y30SSFR*/
*                                                                  0864
@RF00862 DS    0H                                                  0864
@DE00743 TM    DEFINED,B'10000000'                                 0864
         BO    @DL00743                                            0864
*         /***********************************************************/
*         /*                                                 @Z40RSSA*/
*          /* IF THE CATALOG RETURN CODE IS 110, PRINT       @Z40RSSA*/
*          /* THE REASON THE PROFILE COULD NOT               @Z40RSSA*/
*          /* BE DELETED.                                    @Z40RSSA*/
*          /*           REASON CODE 4 - NO PROFILE.          @Z40RSSA*/
*          /*           REASON CODE 8 - PROFILE NOT DELETEABLE       */
*          /*                                                @Z40RSSA*/
*          /**********************************************************/
*                                                                  0865
*          IF CATLGRC = PRNTDEL & ((CTGFBFLG=NFRET) ×              0865
*           (CTGFBFLG=NDRET)) THEN                                 0865
         CLC   CATLGRC(2),@CH00918                                 0865
         BNE   @RF00865                                            0865
         L     @08,CTGPLPTR                                        0865
         CLC   CTGFBFLG(2,@08),@CH00042                            0865
         BE    @RT00865                                            0865
         CLC   CTGFBFLG(2,@08),@CH00179                            0865
         BNE   @RF00865                                            0865
@RT00865 DS    0H                                                  0866
*            DO;                                           /*@Z40RSSA*/
*              DARGLIST = ''B;                             /*@Z40RSSA*/
         L     @08,DDSTRU                                          0867
         XC    DARGLIST(20,@08),DARGLIST(@08)                      0867
*              DARGSMOD = DELMSG;                          /*@Z40RSSA*/
         MVC   DARGSMOD(3,@08),@CC00888                            0868
*              IF CTGFBFLG = NFRET THEN                            0869
         L     @04,CTGPLPTR                                        0869
         CLC   CTGFBFLG(2,@04),@CH00042                            0869
         BNE   @RF00869                                            0869
*                DARGSENT = PFNTFND;                       /*@Z40RSSA*/
         MVI   DARGSENT(@08),X'0D'                                 0870
*              ELSE                                                0871
*                DARGSENT = PFINUSE;                       /*@Z40RSSA*/
         B     @RC00869                                            0871
@RF00869 L     @08,DDSTRU                                          0871
         MVI   DARGSENT(@08),X'0C'                                 0871
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);       /*@Z40RSSA*/
@RC00869 L     @08,@PC00001                                        0872
         ST    @08,@AL00001                                        0872
         LA    @15,@CF00115                                        0872
         ST    @15,@AL00001+4                                      0872
         LA    @15,DDSTRU                                          0872
         ST    @15,@AL00001+8                                      0872
         MVI   @AL00001+8,X'80'                                    0872
         L     @15,GDTPRT(,@08)                                    0872
         LA    @01,@AL00001                                        0872
         BALR  @14,@15                                             0872
*              SETRC = LASTCC04;                           /*@Z40RSSA*/
         LA    SETRC,4                                             0873
*              RETURN CODE(SETRC);                         /*@Z40RSSA*/
         LR    @15,SETRC                                           0874
         L     @14,@SA00006                                        0874
         LM    @00,@12,@SA00006+8                                  0874
         BR    @14                                                 0874
*            END;                                          /*@Z40RSSA*/
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  IF THE VSAM CATALOG RETURN CODE IS 160, THE     #Y30SSFR*/
*        /*  DELETION OF A DATA SPACE ON A VOLUME DID NOT    #Y30SSFR*/
*        /*  CAUSE THE DELETION OF A VOLUME ENTRY RECORD     #Y30SSFR*/
*        /*  FROM THE CATALOG, FOR THERE ARE OTHER, NON-     #Y30SSFR*/
*        /*  EMPTY DATA SPACES ON THE VOLUME.                #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0876
*        IF CATLGRC = VOLNODEL                             /*#Y30SSFR*/
*          THEN                                            /*#Y30SSFR*/
@RF00865 CLC   CATLGRC(2),@CH00920                                 0876
         BNE   @RF00876                                            0876
*            DO;                                           /*#Y30SSFR*/
*                                                                  0877
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  THE VSAM CATALOG RETURN CODE IS 160.        #Y30SSFR*/
*            /*  PRINT A MESSAGE SAYING THE VOLUME ENTRY     #Y30SSFR*/
*            /*  RECORD WAS NOT DELETED, BUT MAKE SETRC 0,   #Y30SSFR*/
*            /*  FOR THIS IS NOT AN ERROR.                   #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0878
*            DARGSENT = VOLMSG;                            /*#Y30SSFR*/
         L     @08,DDSTRU                                          0878
         MVI   DARGSENT(@08),X'05'                                 0878
*            DARGSMOD = DELMSG;                            /*#Y30SSFR*/
         MVC   DARGSMOD(3,@08),@CC00888                            0879
*            DARGILP = SERLN;                              /*#Y30SSFR*/
         MVC   DARGILP(2,@08),@CH00156                             0880
*            DARGDBP = ADDR(SERNAME);                      /*#Y30SSFR*/
*                                                                  0881
         LA    @15,SERNAME                                         0881
         ST    @15,DARGDBP(,@08)                                   0881
*            CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);         /*#Y30SSFR*/
*                                                                  0882
         L     @08,@PC00001                                        0882
         ST    @08,@AL00001                                        0882
         LA    @15,@CF00115                                        0882
         ST    @15,@AL00001+4                                      0882
         LA    @15,DDSTRU                                          0882
         ST    @15,@AL00001+8                                      0882
         MVI   @AL00001+8,X'80'                                    0882
         L     @15,GDTPRT(,@08)                                    0882
         LA    @01,@AL00001                                        0882
         BALR  @14,@15                                             0882
*            SETRC = LASTCC00;                             /*#Y30SSFR*/
         SLR   SETRC,SETRC                                         0883
*            END;                                          /*#Y30SSFR*/
*                                                                  0884
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  IF THE VSAM CATALOG RETURN IS NEITHER 0 OR 160        0885
*        /*  THERE IS AN ERROR CONDITION.  PRINT THE               0885
*        /*  VSAM CATALOG RETURN CODE PROBLEM DETERMINATION  #Y30SSFR*/
*        /*  MESSAGE PROVIDED THAT CATALOG HAS SET A MODULE  #Y30SSFR*/
*        /*  ID IN THE CTGFDBK FIELD OF THE CPL.  OTHERWISE  #Y30SSFR*/
*        /*  SIMPLY PRINT THE VSAM CATALOG RETURN CODE.      #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  0885
*        IF CATLGRC ^= 0 & CATLGRC ^= VOLNODEL             /*#Y30SSFR*/
*          THEN                                            /*#Y30SSFR*/
@RF00876 LH    @08,CATLGRC                                         0885
         LTR   @08,@08                                             0885
         BZ    @RF00885                                            0885
         C     @08,@CF00920                                        0885
         BE    @RF00885                                            0885
*            DO;                                           /*#Y30SSFR*/
*                                                                  0886
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  CLEAR THE STORAGE TO BE OCCUPIED BY THE     #Y30SSFR*/
*            /*  ERROR CONVERSION TABLE.                     #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0887
*            ERRORTAB = ''B;                               /*#Y30SSFR*/
*                                                                  0887
         XC    ERRORTAB(32),ERRORTAB                               0887
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  SET ERCNVADR TO POINT TO THE STORAGE FOR    #Y30SSFR*/
*            /*  THE ERROR CONVERSION TABLE.                 #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0888
*            ERCNVADR = ADDR(ERRORTAB);                    /*#Y30SSFR*/
*                                                                  0888
         LA    @15,ERRORTAB                                        0888
         ST    @15,ERCNVADR                                        0888
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  SET ERCATLG TO BE ON TO INDICATE THAT THIS  #Y30SSFR*/
*            /*  IS A CATALOG ERROR.  SET ERCATDL TO BE ON   #Y30SSFR*/
*            /*  TO INDICATE THAT THE ERROR OCCURRED ON A    #Y30SSFR*/
*            /*  CATALOG DELETE OPERATION.                   #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0889
*            ERCATLG = ON;                                 /*#Y30SSFR*/
         OI    ERCATLG(@15),B'10000000'                            0889
*            ERCATDL = ON;                                 /*#Y30SSFR*/
*                                                                  0890
         OI    ERCATDL(@15),B'00100000'                            0890
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  SET ERCATRC TO CATLGRC, AND SET ERCPLPT TO  #Y30SSFR*/
*            /*  POINT TO THE CPL FOR THE DELETE OPERATION.  #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0891
*            ERCATRC = CATLGRC;                            /*#Y30SSFR*/
         ST    @08,ERCATRC(,@15)                                   0891
*            ERCPLPT = CTGPLPTR;                           /*#Y30SSFR*/
*                                                                  0892
         L     @08,CTGPLPTR                                        0892
         ST    @08,ERCPLPT(,@15)                                   0892
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  SET A POINTER TO THE ENTRY NAME BEING       #Y30SSFR*/
*            /*  DELETED IN THE ERROR CONVERSION TABLE.      #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0893
*            ERDSNM = CTGENT;                              /*#Y30SSFR*/
*                                                                  0893
         L     @08,CTGENT(,@08)                                    0893
         ST    @08,ERDSNM(,@15)                                    0893
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  INVOKE THE UERROR ROUTINE BY ISSUING THE    #Y30SSFR*/
*            /*  UERROR MACRO OF THE AMS TEXT PROCESSOR.     #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0894
*            CALL IDCTPER0(GDTTBL,ERCNVADR);               /*#Y30SSFR*/
*                                                                  0894
         L     @08,@PC00001                                        0894
         ST    @08,@AL00001                                        0894
         LA    @15,ERCNVADR                                        0894
         ST    @15,@AL00001+4                                      0894
         MVI   @AL00001+4,X'80'                                    0894
         L     @15,GDTERR(,@08)                                    0894
         LA    @01,@AL00001                                        0894
         BALR  @14,@15                                             0894
*            SETRC = LASTCC08;                             /*#Y30SSFR*/
         LA    SETRC,8                                             0895
*            END;                                          /*#Y30SSFR*/
*          ELSE                                                    0897
*                                                                  0897
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  MAKE SETRC EQUAL TO 0 TO INDICATE THAT      #Y30SSFR*/
*            /*  THE PRESENT ENTRY (ENTVAL(ENT)) HAS BEEN    #Y30SSFR*/
*            /*  SUCCESSFULLY DELETED.                       #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  0897
*            SETRC = LASTCC00;                             /*#Y30SSFR*/
*                                                                  0897
*                                                                  0897
         B     @RC00885                                            0897
@RF00885 SLR   SETRC,SETRC                                         0897
*        RETURN CODE (SETRC);                                      0898
@RC00885 LR    @15,SETRC                                           0898
         L     @14,@SA00006                                        0898
         LM    @00,@12,@SA00006+8                                  0898
         BR    @14                                                 0898
*END CATCALL;                                                      0899
*        /************************************************************/
*        /*                                                  #YL026UA*/
*        /*  PROCEDURE NAME - MEMDLETE                       #YL026UA*/
*        /*                                                  #YL026UA*/
*        /*  FUNCTION - INVOKE THE USTOW MACRO TO DELETE THE #YL026UA*/
*        /*  SPECIFIED MEMBER FROM THE DIRECTORY OF THE      #YL026UA*/
*        /*  PDS AND ISSUE APPROPRIATE DELETION MESSAGES.    #YL026UA*/
*        /*                                                  #YL026UA*/
*        /*  INPUT - NONE                                    #YL026UA*/
*        /*                                                  #YL026UA*/
*        /*  OUTPUT - IF AN ERROR IS FOUND, THE RETURN CODE IS SET   */
*        /*                                                  #YL026UA*/
*        /************************************************************/
*                                                                  0900
*MEMDLETE: PROCEDURE;                                      /*#YL026UA*/
*                                                                  0900
MEMDLETE STM   @14,@12,@SA00007                                    0900
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  LOCAL DECLARATIONS                              @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0901
*        DCL DLETEMEM CHAR(1) STATIC INIT('D'); /*USTOW DELETE CODE  */
*        DCL PDSIOCS PTR(31);                /*PDS IOCS PTR  @YL026UA*/
*        DCL PDSLIST BIT(LENGTH(OPNAGL)) BDY(WORD); /*STORAGE FOR    */
*                                      /*THE PDS OPNAGL      @YL026UA*/
*                                                                  0904
*        OLDERID2 = NEWERID2;                                      0904
         L     @08,@PC00001                                        0904
         L     @05,GDTTR2(,@08)                                    0904
         MVC   @TS00001(95),NEWERID2(@05)                          0904
         MVC   OLDERID2(95,@05),@TS00001                           0904
*        NEWID2 = 'DLMD';                                  /*@YL026UA*/
         MVC   NEWID2(4,@05),@CC01036                              0905
*        SETRC = 0;                                        /*@YL026UA*/
*                                                                  0906
         SLR   SETRC,SETRC                                         0906
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  IF QUALIFICATION FAILED FOR A MEMBER DELETION   @YL026UA*/
*        /*  THEN ISSUE A MEMBER NOT DELETED MESSAGE         @YL026UA*/
*        /*  AND RETURN WITH AN 8 RETURN CODE                @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0907
*        IF ENTRYRC = LASTCC08                                     0907
*          THEN                                                    0907
         C     ENTRYRC,@CF00179                                    0907
         BNE   @RF00907                                            0907
*            DO;                                           /*@YL026UA*/
*              DARGSMOD = DELMSG;                          /*@YL026UA*/
         L     @02,DDSTRU                                          0909
         MVC   DARGSMOD(3,@02),@CC00888                            0909
*              DARGSENT = NDMEMMSG;                        /*@YL026UA*/
         MVI   DARGSENT(@02),X'0A'                                 0910
*              DARGDBP = ADDR(NTRYMEM(INDEX));             /*@YL026UA*/
         LH    @15,INDEX                                           0911
         MH    @15,@CH01079                                        0911
         L     @14,@PC00001+4                                      0911
         L     @14,FDTPTR(,@14)                                    0911
         LA    @01,0(@15,@14)                                      0911
         AL    @01,@CF01116                                        0911
         ST    @01,DARGDBP(,@02)                                   0911
*              DARGILP = NTRYMLN(INDEX);                   /*@YL026UA*/
*                                                                  0912
         AL    @14,@CF01101                                        0912
         SLR   @07,@07                                             0912
         IC    @07,NTRYMLN-13(@15,@14)                             0912
         STH   @07,DARGILP(,@02)                                   0912
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);       /*@YL026UA*/
         ST    @08,@AL00001                                        0913
         LA    @02,@CF00115                                        0913
         ST    @02,@AL00001+4                                      0913
         LA    @02,DDSTRU                                          0913
         ST    @02,@AL00001+8                                      0913
         MVI   @AL00001+8,X'80'                                    0913
         L     @15,GDTPRT(,@08)                                    0913
         LA    @01,@AL00001                                        0913
         BALR  @14,@15                                             0913
*              RETURN CODE (LASTCC08);                     /*@YL026UA*/
         LA    @15,8                                               0914
         L     @14,@SA00007                                        0914
         LM    @00,@12,@SA00007+8                                  0914
         BR    @14                                                 0914
*            END;                                          /*@YL026UA*/
*                                                                  0915
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  IF A MEMBER WAS SPECIFIED WITH A GENERIC NAME   @YL026UA*/
*        /*  THEN ISSUE BOTH AN ERROR MESSAGE TO THAT        @YL026UA*/
*        /*  AFFECT AND A MEMBER NOT DELETED MESSAGE         @YL026UA*/
*        /*  AND RETURN WITH AN 8 RETURN CODE                @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0916
*        IF NTRYPOS(INDEX) ^= 0                                    0916
*          THEN                                                    0916
@RF00907 SLR   @08,@08                                             0916
         LH    @05,INDEX                                           0916
         MH    @05,@CH01079                                        0916
         L     @02,@PC00001+4                                      0916
         L     @02,FDTPTR(,@02)                                    0916
         AL    @02,@CF01102                                        0916
         SLR   @15,@15                                             0916
         IC    @15,NTRYPOS-11(@05,@02)                             0916
         CR    @08,@15                                             0916
         BE    @RF00916                                            0916
*            DO;                                           /*@YL026UA*/
*              DARGSMOD = DELMSG;                          /*@YL026UA*/
         L     @02,DDSTRU                                          0918
         MVC   DARGSMOD(3,@02),@CC00888                            0918
*              DARGSENT = GNMEMMSG;                        /*@YL026UA*/
         MVI   DARGSENT(@02),X'09'                                 0919
*              DARGDBP = NULLPTR;                          /*@YL026UA*/
         ST    @08,DARGDBP(,@02)                                   0920
*              DARGILP = 0;                                /*@YL026UA*/
*                                                                  0921
         STH   @08,DARGILP(,@02)                                   0921
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);       /*@YL026UA*/
         L     @08,@PC00001                                        0922
         ST    @08,@AL00001                                        0922
         LA    @02,@CF00115                                        0922
         ST    @02,@AL00001+4                                      0922
         LA    @02,DDSTRU                                          0922
         ST    @02,@AL00001+8                                      0922
         MVI   @AL00001+8,X'80'                                    0922
         L     @15,GDTPRT(,@08)                                    0922
         LA    @01,@AL00001                                        0922
         BALR  @14,@15                                             0922
*              DARGSMOD = DELMSG;                          /*@YL026UA*/
         L     @08,DDSTRU                                          0923
         MVC   DARGSMOD(3,@08),@CC00888                            0923
*              DARGSENT = NDMEMMSG;                        /*@YL026UA*/
         MVI   DARGSENT(@08),X'0A'                                 0924
*              DARGDBP = ADDR(NTRYMEM(INDEX));             /*@YL026UA*/
         LH    @02,INDEX                                           0925
         MH    @02,@CH01079                                        0925
         L     @15,@PC00001+4                                      0925
         L     @15,FDTPTR(,@15)                                    0925
         LA    @01,0(@02,@15)                                      0925
         AL    @01,@CF01116                                        0925
         ST    @01,DARGDBP(,@08)                                   0925
*              DARGILP = NTRYMLN(INDEX);                   /*@YL026UA*/
*                                                                  0926
         AL    @15,@CF01101                                        0926
         SLR   @14,@14                                             0926
         IC    @14,NTRYMLN-13(@02,@15)                             0926
         STH   @14,DARGILP(,@08)                                   0926
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);       /*@YL026UA*/
         L     @08,@PC00001                                        0927
         ST    @08,@AL00001                                        0927
         LA    @02,@CF00115                                        0927
         ST    @02,@AL00001+4                                      0927
         LA    @02,DDSTRU                                          0927
         ST    @02,@AL00001+8                                      0927
         MVI   @AL00001+8,X'80'                                    0927
         L     @15,GDTPRT(,@08)                                    0927
         LA    @01,@AL00001                                        0927
         BALR  @14,@15                                             0927
*              RETURN CODE (LASTCC08);                     /*@YL026UA*/
         LA    @15,8                                               0928
         L     @14,@SA00007                                        0928
         LM    @00,@12,@SA00007+8                                  0928
         BR    @14                                                 0928
*            END;                                          /*@YL026UA*/
*                                                                  0929
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  OPEN THE PDS FOR UPDATE AND DYNAMICALLY ALLOCATE IT     */
*        /*  VIA THE UOPEN MACRO IF IT WERE NOT ALREADY      @YL026UA*/
*        /*  ALLOCATED VIA JCL                               @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0930
*        OPNPTR = ADDR(PDSLIST);                           /*@YL026UA*/
@RF00916 LA    OPNPTR,PDSLIST                                      0930
*        PDSLIST = ''B;                                    /*@YL026UA*/
         XC    PDSLIST(48),PDSLIST                                 0931
*        OPNOPTOT = ON;                                    /*@YL026UA*/
*        OPNOPTBK = ON;                                    /*@YL026UA*/
         OI    OPNOPTOT(OPNPTR),B'01010000'                        0933
*        OPNDSOPO = ON;                                    /*@YL026UA*/
         OI    OPNDSOPO(OPNPTR),B'00010000'                        0934
*        OPNIOC = ADDR(PDSIOCS);                           /*@YL026UA*/
         LA    @08,PDSIOCS                                         0935
         ST    @08,OPNIOC(,OPNPTR)                                 0935
*        IF ADDR(INDD) ^= NULLPTR                                  0936
*          THEN                                                    0936
         L     @08,@PC00001+4                                      0936
         L     @08,FDTPTR+16(,@08)                                 0936
         LTR   @08,@08                                             0936
         BZ    @RF00936                                            0936
*            OPNDDN = ADDR(INDDVAL);                       /*@YL026UA*/
         LA    @08,INDDVAL(,@08)                                   0937
         ST    @08,OPNDDN(,OPNPTR)                                 0937
*          ELSE                                                    0938
*            DO;                                           /*@YL026UA*/
         B     @RC00936                                            0938
@RF00936 DS    0H                                                  0939
*              OPNDSN = ADDR(ENTRYVAL);                    /*@YL026UA*/
         LA    @08,ENTRYVAL                                        0939
         ST    @08,OPNDSN(,OPNPTR)                                 0939
*              IF NTRYPLN(INDEX) ^= 0                              0940
*                THEN                                              0940
         LH    @08,INDEX                                           0940
         MH    @08,@CH01079                                        0940
         L     @05,@PC00001+4                                      0940
         L     @05,FDTPTR(,@05)                                    0940
         LA    @01,0(@08,@05)                                      0940
         AL    @01,@CF01099                                        0940
         SLR   @00,@00                                             0940
         IC    @00,NTRYPLN-2(,@01)                                 0940
         C     @00,@CF00115                                        0940
         BE    @RF00940                                            0940
*                  OPNPWA = ADDR(NTRYPAS(INDEX));          /*@YL026UA*/
         AL    @05,@CF01100                                        0941
         LA    @08,NTRYPAS-3(@08,@05)                              0941
         ST    @08,OPNPWA(,OPNPTR)                                 0941
*            END;                                          /*@YL026UA*/
@RF00940 DS    0H                                                  0943
*        CALL IDCIOOP0(GDTTBL,OPNAGL);                     /*@YL026UA*/
@RC00936 L     @08,@PC00001                                        0943
         ST    @08,@AL00001                                        0943
         ST    OPNPTR,@AL00001+4                                   0943
         MVI   @AL00001+4,X'80'                                    0943
         L     @15,GDTOPN(,@08)                                    0943
         LA    @01,@AL00001                                        0943
         BALR  @14,@15                                             0943
*        RESPECIFY RTNREG RSTD;                                    0944
*        TESTRC = RTNREG;                                          0945
         LR    TESTRC,RTNREG                                       0945
*        RESPECIFY RTNREG UNRSTD;                          /*@YL026UA*/
*                                                                  0946
*        IOCSPTR = PDSIOCS;                                        0947
*                                                                  0947
         L     @08,PDSIOCS                                         0947
         ST    @08,IOCSPTR                                         0947
*        IF ENTRYVAL ^= IOCDSN -> DSNAME                   /*@OZ34461*/
*          THEN                                            /*@OZ34461*/
         L     @08,IOCDSN(,@08)                                    0948
         CLC   ENTRYVAL(44),DSNAME(@08)                            0948
         BE    @RF00948                                            0948
*            DO;                                           /*@OZ34461*/
*                                                                  0949
*              CALL IDCIOCL0(GDTTBL,PDSIOCS);              /*@OZ34461*/
*                                                                  0950
         L     @08,@PC00001                                        0950
         ST    @08,@AL00001                                        0950
         LA    @05,PDSIOCS                                         0950
         ST    @05,@AL00001+4                                      0950
         MVI   @AL00001+4,X'80'                                    0950
         L     @15,GDTCLS(,@08)                                    0950
         LA    @01,@AL00001                                        0950
         BALR  @14,@15                                             0950
*              TESTRC = 8;                                 /*@OZ34461*/
         LA    TESTRC,8                                            0951
*              DARGSMOD = DELMSG;                          /*@OZ34461*/
         L     @08,DDSTRU                                          0952
         MVC   DARGSMOD(3,@08),@CC00888                            0952
*              DARGSENT = DLMEMMSG;                        /*@OZ34461*/
         MVI   DARGSENT(@08),X'0B'                                 0953
*              DARGDBP = IOCDSN;                           /*@OZ34461*/
         L     @05,IOCSPTR                                         0954
         L     @05,IOCDSN(,@05)                                    0954
         ST    @05,DARGDBP(,@08)                                   0954
*              DARGILP = 44;                               /*@OZ34461*/
*                                                                  0955
         MVC   DARGILP(2,@08),@CH00605                             0955
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);       /*@OZ34461*/
*                                                                  0956
         L     @08,@PC00001                                        0956
         ST    @08,@AL00001                                        0956
         LA    @05,@CF00115                                        0956
         ST    @05,@AL00001+4                                      0956
         LA    @05,DDSTRU                                          0956
         ST    @05,@AL00001+8                                      0956
         MVI   @AL00001+8,X'80'                                    0956
         L     @15,GDTPRT(,@08)                                    0956
         LA    @01,@AL00001                                        0956
         BALR  @14,@15                                             0956
*            END;                                                  0957
*                                                                  0957
*                                                                  0957
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  IF THE OPEN WAS SUCCESSFUL - DELETE THE MEMBER  @YL026UA*/
*        /*  FROM ITS DIRECTORY VIA THE USTOW MACRO          @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0958
*        IF TESTRC = 0                                             0958
*          THEN                                                    0958
@RF00948 LTR   TESTRC,TESTRC                                       0958
         BNZ   @RF00958                                            0958
*            DO;                                           /*@YL026UA*/
*              PDSIOCS -> IOCMEM = ADDR(NTRYMEM(INDEX));   /*@YL026UA*/
         LH    @08,INDEX                                           0960
         MH    @08,@CH01079                                        0960
         L     @05,@PC00001+4                                      0960
         L     @05,FDTPTR(,@05)                                    0960
         AL    @05,@CF01116                                        0960
         LA    @08,NTRYMEM-14(@08,@05)                             0960
         L     @05,PDSIOCS                                         0960
         ST    @08,IOCMEM(,@05)                                    0960
*              CALL IDCIOST0(GDTTBL,PDSIOCS,DLETEMEM);     /*@YL026UA*/
         L     @08,@PC00001                                        0961
         ST    @08,@AL00001                                        0961
         LA    @05,PDSIOCS                                         0961
         ST    @05,@AL00001+4                                      0961
         LA    @05,DLETEMEM                                        0961
         ST    @05,@AL00001+8                                      0961
         MVI   @AL00001+8,X'80'                                    0961
         L     @15,GDTSTW(,@08)                                    0961
         LA    @01,@AL00001                                        0961
         BALR  @14,@15                                             0961
*              RESPECIFY RTNREG RSTD;                              0962
*              TESTRC = RTNREG;                                    0963
         LR    TESTRC,RTNREG                                       0963
*              RESPECIFY RTNREG UNRSTD;                    /*@YL026UA*/
*                                                                  0964
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  IF THE DELETE WAS SUCCESSFUL - ISSUE A MESSAGE  @YL026UA*/
*        /*  INDICATING THE MEMBER WAS DELETED               @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0965
*              IF TESTRC = 0                                       0965
*                THEN                                              0965
         LTR   TESTRC,TESTRC                                       0965
         BNZ   @RF00965                                            0965
*                  DO;                                     /*@YL026UA*/
*                    DARGSMOD = DELMSG;                    /*@YL026UA*/
         L     @08,DDSTRU                                          0967
         MVC   DARGSMOD(3,@08),@CC00888                            0967
*                    DARGSENT = DLMEMMSG;                  /*@YL026UA*/
         MVI   DARGSENT(@08),X'0B'                                 0968
*                    DARGDBP = ADDR(NTRYMEM(INDEX));       /*@YL026UA*/
         LH    @05,INDEX                                           0969
         MH    @05,@CH01079                                        0969
         L     @02,@PC00001+4                                      0969
         L     @02,FDTPTR(,@02)                                    0969
         LA    @01,0(@05,@02)                                      0969
         AL    @01,@CF01116                                        0969
         ST    @01,DARGDBP(,@08)                                   0969
*                    DARGILP = NTRYMLN(INDEX);             /*@YL026UA*/
*                                                                  0970
         AL    @02,@CF01101                                        0970
         SLR   @15,@15                                             0970
         IC    @15,NTRYMLN-13(@05,@02)                             0970
         STH   @15,DARGILP(,@08)                                   0970
*                    CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU); /*@YL026UA*/
*                                                                  0971
         L     @08,@PC00001                                        0971
         ST    @08,@AL00001                                        0971
         LA    @05,@CF00115                                        0971
         ST    @05,@AL00001+4                                      0971
         LA    @05,DDSTRU                                          0971
         ST    @05,@AL00001+8                                      0971
         MVI   @AL00001+8,X'80'                                    0971
         L     @15,GDTPRT(,@08)                                    0971
         LA    @01,@AL00001                                        0971
         BALR  @14,@15                                             0971
*                  END;                                    /*@YL026UA*/
*                ELSE                                              0973
*                  SETRC = LASTCC08;                       /*@YL026UA*/
*                                                                  0973
         B     @RC00965                                            0973
@RF00965 LA    SETRC,8                                             0973
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  CLOSE THE DATA SET IF IT WAS SUCCESSFULLY OPENED@YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0974
*              CALL IDCIOCL0(GDTTBL,PDSIOCS);              /*@YL026UA*/
@RC00965 L     @08,@PC00001                                        0974
         ST    @08,@AL00001                                        0974
         LA    @05,PDSIOCS                                         0974
         ST    @05,@AL00001+4                                      0974
         MVI   @AL00001+4,X'80'                                    0974
         L     @15,GDTCLS(,@08)                                    0974
         LA    @01,@AL00001                                        0974
         BALR  @14,@15                                             0974
*              RESPECIFY RTNREG RSTD;                              0975
*              TESTRC = RTNREG;                                    0976
         LR    TESTRC,RTNREG                                       0976
*              RESPECIFY RTNREG UNRSTD;                    /*@YL026UA*/
*              SETRC = MAX(SETRC,TESTRC);                  /*@YL026UA*/
         CR    SETRC,TESTRC                                        0978
         BNL   *+6
         LR    SETRC,TESTRC                                        0978
*            END;                                          /*@YL026UA*/
*          ELSE                                                    0980
*            SETRC = LASTCC08;                             /*@YL026UA*/
*                                                                  0980
         B     @RC00958                                            0980
@RF00958 LA    SETRC,8                                             0980
*        /************************************************************/
*        /*                                                  @YL026UA*/
*        /*  IF THE MEMBER WAS NOT SUCCESSFULLY DELETED      @YL026UA*/
*        /*  ISSUE THE SECONDARY MEMBER NOT DELETED MESSAGE  @YL026UA*/
*        /*  AND RETURN WITH A CODE OF 8                     @YL026UA*/
*        /*                                                  @YL026UA*/
*        /************************************************************/
*                                                                  0981
*        IF SETRC = LASTCC08                                       0981
*          THEN                                                    0981
@RC00958 C     SETRC,@CF00179                                      0981
         BNE   @RF00981                                            0981
*            DO;                                           /*@YL026UA*/
*              DARGSMOD = DELMSG;                          /*@YL026UA*/
         L     @08,DDSTRU                                          0983
         MVC   DARGSMOD(3,@08),@CC00888                            0983
*              DARGSENT = NDMEMMSG;                        /*@YL026UA*/
         MVI   DARGSENT(@08),X'0A'                                 0984
*              DARGDBP = ADDR(NTRYMEM(INDEX));             /*@YL026UA*/
         LH    @05,INDEX                                           0985
         MH    @05,@CH01079                                        0985
         L     @02,@PC00001+4                                      0985
         L     @02,FDTPTR(,@02)                                    0985
         LA    @01,0(@05,@02)                                      0985
         AL    @01,@CF01116                                        0985
         ST    @01,DARGDBP(,@08)                                   0985
*              DARGILP = NTRYMLN(INDEX);                   /*@YL026UA*/
*                                                                  0986
         AL    @02,@CF01101                                        0986
         SLR   @15,@15                                             0986
         IC    @15,NTRYMLN-13(@05,@02)                             0986
         STH   @15,DARGILP(,@08)                                   0986
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);       /*@YL026UA*/
*                                                                  0987
         L     @08,@PC00001                                        0987
         ST    @08,@AL00001                                        0987
         LA    @05,@CF00115                                        0987
         ST    @05,@AL00001+4                                      0987
         LA    @05,DDSTRU                                          0987
         ST    @05,@AL00001+8                                      0987
         MVI   @AL00001+8,X'80'                                    0987
         L     @15,GDTPRT(,@08)                                    0987
         LA    @01,@AL00001                                        0987
         BALR  @14,@15                                             0987
*            END;                                          /*@YL026UA*/
*        RETURN CODE (SETRC);                              /*@YL026UA*/
@RF00981 LR    @15,SETRC                                           0989
         L     @14,@SA00007                                        0989
         LM    @00,@12,@SA00007+8                                  0989
         BR    @14                                                 0989
*END MEMDLETE;                                             /*@YL026UA*/
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  PROCEDURE NAME - MORESP                         @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  FUNCTION - HANDLE THE SITUATION IN WHICH VSAM   @Y30SSFR*/
*        /*  MANAGEMENT HAS USED ALL OF ITS WORK AREA        @Y30SSFR*/
*        /*  BY PRINTING THE NAMES OF THE                    @Y30SSFR*/
*        /*  ITEMS ALREADY DELETED.  THEN EITHER THE         @Y30SSFR*/
*        /*  WORK AREA IS CLEARED OR A NEW WORK AREA IS      @Y30SSFR*/
*        /*  OBTAINED.  VSAM CATALOG IS THEN INVOKED         @Y30SSFR*/
*        /*  AGAIN BY CATCALL.                               @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  INPUT - A CPL BUILT BY BUILDCPL, THE            @Y30SSFR*/
*        /*  WORK AREA USED BY VSAM CATALOG,                 @Y30SSFR*/
*        /*  AND THE NUMBER OF ENTRIES FOUND IN THE WORK     @Y30SSFR*/
*        /*  AREA BY CATCALL.                                @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  OUTPUT - EITHER THE SAME CATALOG WORKAREA       @Y30SSFR*/
*        /*  CLEARED OF THE NAMES PLACED THERE BY THE        @Y30SSFR*/
*        /*  PREVIOUS CALL TO CATALOG OR A NEW WORKAREA      @Y30SSFR*/
*        /*  POINTED TO BY AN UPDATED CTGWKA POINTER.        @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0991
*MORESP:  PROCEDURE(MMNOENT);                              /*@Y30SSFR*/
*                                                                  0991
MORESP   STM   @14,@03,@SA00008                                    0991
         STM   @05,@12,@SA00008+24                                 0991
         MVC   @PC00008(4),0(@01)                                  0991
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  ARGUMENT OF INVOCATION                          @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0992
*        DCL MMNOENT FIXED(31);        /*NUMBER OF VALID     @Y30SSFR*/
*                                      /*ENTRIES FOUND IN    @Y30SSFR*/
*                                      /*THE WORK AREA BY    @Y30SSFR*/
*                                      /*CATCALL             @Y30SSFR*/
*                                                                  0993
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  LOCAL DECLARATIONS FOR MORESP                   @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0993
*        DCL J FIXED(31);              /*LOOP CONTROL        @Y30SSFR*/
*                                      /*FOR CLEARING        @Y30SSFR*/
*                                      /*CATALOG WORK AREA   @Y30SSFR*/
*        DCL SIZENEED FIXED(31);       /*SIZE OF WORKAREA    @Y30SSFR*/
*                                      /*NEEDED              @Y30SSFR*/
*        DCL CURSIZE FIXED(15);        /*SIZE OF CURRENT     @Y30SSFR*/
*                                      /*WORK AREA           @Y30SSFR*/
*        OLDERID2 = NEWERID2;                                      0996
         L     @08,@PC00001                                        0996
         L     @05,GDTTR2(,@08)                                    0996
         MVC   @TS00001(95),NEWERID2(@05)                          0996
         MVC   OLDERID2(95,@05),@TS00001                           0996
*        NEWID2 = 'DLMS';                                  /*@Y30SSFR*/
*                                                                  0997
         MVC   NEWID2(4,@05),@CC01045                              0997
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  INTIALIZATIONS FOR THE PROCEDURE                @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  0998
*        CURSIZE = AREALN;                                 /*@Y30SSFR*/
         L     @05,WAPTR                                           0998
         LH    CURSIZE,AREALN(,@05)                                0998
*        COREFLAG = OFF;                                   /*@Y30SSFR*/
*                                                                  0999
         NI    COREFLAG,B'01111111'                                0999
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  RESTORE THE CPL.    SET CTGERASE TO OFF AND     @Y30SSFR*/
*        /*  CTGOVRID TO ON TO PREVENT CMS FROM REERASING    @Y30SSFR*/
*        /*  THE OBJECT ON SUBSEQUENT CALLS TO CATALOG.      @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1000
*        CTGPL = RENEWCPL;                                 /*@Y30SSFR*/
         L     @03,CTGPLPTR                                        1000
         MVC   CTGPL(28,@03),RENEWCPL                              1000
*        CTGERASE = OFF;                                   /*@Y30SSFR*/
*        CTGOVRID = ON;                                    /*@Y30SSFR*/
*                                                                  1002
         OI    CTGOVRID(@03),B'00000100'                           1002
         NI    CTGERASE(@03),B'10111111'                           1002
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  COMPUTE THE SIZE NEEDED AND COMPARE THAT        @Y30SSFR*/
*        /*  TO THE CURRENT SIZE OF THE WORK AREA            @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1003
*        SIZENEED = RETURNLN - (LENGTH(ENTITEM)            /*@Y30SSFR*/
*                        * MMNOENT);                       /*@Y30SSFR*/
*                                                                  1003
         L     @03,@PC00008                                        1003
         L     @03,MMNOENT(,@03)                                   1003
         MH    @03,@CH01066                                        1003
         LCR   @03,@03                                             1003
         AH    @03,RETURNLN(,@05)                                  1003
         ST    @03,SIZENEED                                        1003
*        IF SIZENEED > CURSIZE                             /*@Y30SSFR*/
*          THEN                                            /*@Y30SSFR*/
*                                                                  1004
         CR    @03,CURSIZE                                         1004
         BNH   @RF01004                                            1004
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  IF THE CURRENT WORK AREA IS GOTTEN          @Y30SSFR*/
*            /*  CORE, FREE IT.  THEN GET A WORK AREA OF     @Y30SSFR*/
*            /*  APPROPRIATE SIZE AND CHANGE THE CPL TO      @Y30SSFR*/
*            /*  POINT TO IT.                                @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1005
*            DO;                                           /*@Y30SSFR*/
*            IF COREFLAG = ON                              /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
         TM    COREFLAG,B'10000000'                                1006
         BNO   @RF01006                                            1006
*                CALL IDCSAFS0(GDTTBL,WAPTR);              /*@Y30SSFR*/
         ST    @08,@AL00001                                        1007
         LA    @05,WAPTR                                           1007
         ST    @05,@AL00001+4                                      1007
         L     @15,GDTFSP(,@08)                                    1007
         LA    @01,@AL00001                                        1007
         BALR  @14,@15                                             1007
*            COREFLAG = ON;                                /*@Y30SSFR*/
*                                                                  1008
@RF01006 OI    COREFLAG,B'10000000'                                1008
*            CALL IDCSAGP0(GDTTBL,SIZENEED,                /*@Y30SSFR*/
*                     WAPTR,DLUGPFG1,SETZERO);             /*@Y30SSFR*/
*                                                                  1009
         L     @08,@PC00001                                        1009
         ST    @08,@AL00001                                        1009
         LA    @05,SIZENEED                                        1009
         ST    @05,@AL00001+4                                      1009
         LA    @05,WAPTR                                           1009
         ST    @05,@AL00001+8                                      1009
         LA    @05,DLUGPFG1                                        1009
         ST    @05,@AL00001+12                                     1009
         LA    @05,SETZERO                                         1009
         ST    @05,@AL00001+16                                     1009
         MVI   @AL00001+16,X'80'                                   1009
         L     @15,GDTGPL(,@08)                                    1009
         LA    @01,@AL00001                                        1009
         BALR  @14,@15                                             1009
*            RESPECIFY RTNREG RSTD;                                1010
*            TESTRC = RTNREG;                                      1011
         LR    TESTRC,RTNREG                                       1011
*            RESPECIFY RTNREG UNRSTD;                      /*@Y30SSFR*/
*                                                                  1012
*            IF TESTRC ^= 0                                /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
         SLR   @08,@08                                             1013
         CR    TESTRC,@08                                          1013
         BE    @RF01013                                            1013
*                DO;                                       /*@Y30SSFR*/
*                DARGSMOD = UNIVMSG;                       /*@Y30SSFR*/
         L     @05,DDSTRU                                          1015
         MVC   DARGSMOD(3,@05),@CC00892                            1015
*                DARGSENT = NOSTORAG;                      /*@Y30SSFR*/
         MVI   DARGSENT(@05),X'0C'                                 1016
*                DARGDBP = NULLPTR;                        /*@Y30SSFR*/
         ST    @08,DARGDBP(,@05)                                   1017
*                DARGILP = 0;                              /*@Y30SSFR*/
*                                                                  1018
         STH   @08,DARGILP(,@05)                                   1018
*                CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);     /*@Y30SSFR*/
*                                                                  1019
         L     @08,@PC00001                                        1019
         ST    @08,@AL00001                                        1019
         LA    @05,@CF00115                                        1019
         ST    @05,@AL00001+4                                      1019
         LA    @05,DDSTRU                                          1019
         ST    @05,@AL00001+8                                      1019
         MVI   @AL00001+8,X'80'                                    1019
         L     @15,GDTPRT(,@08)                                    1019
         LA    @01,@AL00001                                        1019
         BALR  @14,@15                                             1019
*                SETRC = LASTCC08;                         /*@Y30SSFR*/
         LA    SETRC,8                                             1020
*                RETURN CODE(SETRC);                       /*@Y30SSFR*/
         LR    @15,SETRC                                           1021
         L     @14,@SA00008                                        1021
         LM    @00,@03,@SA00008+8                                  1021
         LM    @05,@12,@SA00008+24                                 1021
         BR    @14                                                 1021
*                END;                                      /*@Y30SSFR*/
*                                                                  1022
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET CTGWKA TO POINT TO THE NEWLY ACQUIRED   @Y30SSFR*/
*            /*  WORKAREA.  RESET CURSIZE TO BE THE AMOUNT   @Y30SSFR*/
*            /*  OF SPACE IN THE NEW WORKAREA, AND SET       @Y30SSFR*/
*            /*  AREALN TO BE CURSIZE.                       @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1023
*            CTGWKA = WAPTR;                               /*@Y30SSFR*/
@RF01013 L     @08,WAPTR                                           1023
         L     @05,CTGPLPTR                                        1023
         ST    @08,CTGWKA(,@05)                                    1023
*            CURSIZE = SIZENEED;                           /*@Y30SSFR*/
         L     CURSIZE,SIZENEED                                    1024
*            AREALN = CURSIZE;                             /*@Y30SSFR*/
*                                                                  1025
         STH   CURSIZE,AREALN(,@08)                                1025
*            END;                                          /*@Y30SSFR*/
*                                                                  1026
*          ELSE                                                    1027
*                                                                  1027
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  IF CURRENT WORK AREA IS LARGE ENOUGH        @Y30SSFR*/
*            /*  FOR THE NEXT CALL TO CATALOG, CLEAR IT.     @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1027
*              DO;                                         /*@Y30SSFR*/
         B     @RC01004                                            1027
@RF01004 DS    0H                                                  1028
*              RETURNLN = 0;                               /*@Y30SSFR*/
*                                                                  1028
         L     @08,WAPTR                                           1028
         SLR   @05,@05                                             1028
         STH   @05,RETURNLN(,@08)                                  1028
*              DO J = 1 TO LIMIT;                          /*@Y30SSFR*/
         LA    J,1                                                 1029
         B     @DE01029                                            1029
@DL01029 DS    0H                                                  1030
*                ENTLIST(J) = ''B;                         /*@Y30SSFR*/
         LR    @08,J                                               1030
         MH    @08,@CH01066                                        1030
         L     @05,WAPTR                                           1030
         ALR   @05,@08                                             1030
         AL    @05,@CF01103                                        1030
         XC    ENTLIST-4(45,@05),ENTLIST-4(@05)                    1030
*              END;                                        /*@Y30SSFR*/
*                                                                  1031
         AL    J,@CF00219                                          1031
@DE01029 C     J,LIMIT                                             1031
         BNH   @DL01029                                            1031
*              END;                                        /*@Y30SSFR*/
*                                                                  1032
*        RETURN CODE(SETRC);                               /*@Y30SSFR*/
@RC01004 LR    @15,SETRC                                           1033
         L     @14,@SA00008                                        1033
         LM    @00,@03,@SA00008+8                                  1033
         LM    @05,@12,@SA00008+24                                 1033
         BR    @14                                                 1033
*END MORESP;                                               /*@Y30SSFR*/
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  PROCEDURE NAME - ALLOPROC                       @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  FUNCTION - ALLOPROC ISSUES ALL OF THE DYNAMIC   @Y30SSFR*/
*        /*  ALLOCATION REQUESTS FOR IDCDL01, AND IN         @Y30SSFR*/
*        /*  ADDITION, DYNAMICALLY UNALLOCATES ANYTHING      @Y30SSFR*/
*        /*  THAT HAS BEEN DYNAMICALLY ALLOCATED PREVIOUSLY. @Y30SSFR*/
*        /*  IN PARTICULAR, ALLOPROC BUILDS ALLAGLS FOR      @Y30SSFR*/
*        /*  BOTH DYNAMIC ALLOCATION OF VOLUMES AND          @Y30SSFR*/
*        /*  DYNAMIC ALLOCATION OF DATA SETS.                @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  INPUT - ALLOPROC ACCEPTS                        @Y30SSFR*/
*        /*  A POINTER TO THE NAME OF A DATA SET TO BE       @Y30SSFR*/
*        /*  ALLOCATED OR A POINTER TO THE VOLSER OF         @Y30SSFR*/
*        /*  A VOLUME TO BE ALLOCATED.                       @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  OUTPUT - A DDNAME FOR THE THING TO BE           @Y30SSFR*/
*        /*  ALLOCATED IN THE CTGDDNAM FIELD OF THE CPL,     @Y30SSFR*/
*        /*  OR ANY MESSAGES REGARDING THE ALLOCATION        @Y30SSFR*/
*        /*  REQUEST IF IT CANNOT BE FULFILLED.              @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1035
*ALLOPROC: PROCEDURE(ALDSNPT,ALVLSPT);                     /*@Y30SSFR*/
*                                                                  1035
ALLOPROC STM   @14,@03,@SA00009                                    1035
         STM   @05,@12,@SA00009+24                                 1035
         MVC   @PC00009(8),0(@01)                                  1035
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  ARGUMENTS OF INVOCATION                         @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1036
*        DCL ALDSNPT PTR(31);          /*POINTER TO DSN OF   @Y30SSFR*/
*                                      /*OBJECT TO BE ALLOC  @Y30SSFR*/
*        DCL ALVLSPT PTR(31);          /*POINTER TO VOLSER   @Y30SSFR*/
*                                      /*OF OBJECT TO BE     @Y30SSFR*/
*                                      /*ALLOCATED           @Y30SSFR*/
*        OLDERID2 = NEWERID2;                                      1038
         L     @08,@PC00001                                        1038
         L     @08,GDTTR2(,@08)                                    1038
         MVC   @TS00001(95),NEWERID2(@08)                          1038
         MVC   OLDERID2(95,@08),@TS00001                           1038
*        NEWID2 = 'DLAL';                                  /*@Y30SSFR*/
*                                                                  1039
         MVC   NEWID2(4,@08),@CC01053                              1039
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  TEST TO SEE IF DEALLOC IS ON.  IF SO,           @Y30SSFR*/
*        /*  UNALLOCATE THE OBJECT THAT IS CURRENTLY         @Y30SSFR*/
*        /*  USING THE ALLAGL, SO THAT THE NEWLY REQUESTED   @Y30SSFR*/
*        /*  OBJECT MAY BE ALLOCATED USING THE SAME ALLAGL.  @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1040
*        IF DEALLOC = ON                                   /*@Y30SSFR*/
*          THEN                                            /*@Y30SSFR*/
         TM    DEALLOC,B'10000000'                                 1040
         BNO   @RF01040                                            1040
*            DO;                                           /*@Y30SSFR*/
*                                                                  1041
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  IF THE DATA SET TO BE DELETED IS A NONVSAM, @Y30SSFR*/
*            /*  SET ALLOPTUN TO BE ON TO INDICATE THAT      @Y30SSFR*/
*            /*  THE SYSTEM ADAPTOR IS TO OVERRIDE THE       @Y30SSFR*/
*            /*  PERMANENT ALLOCATION DONE BY TSO.           @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1042
*            IF (ADDR(ALIEN) ^= NULLPTR) ×                         1042
*               LOCTYPE = CTGTALIN                                 1042
*              THEN                                                1042
         L     @08,@PC00001+4                                      1042
         L     @08,FDTPTR+56(,@08)                                 1042
         LTR   @08,@08                                             1042
         BNZ   @RT01042                                            1042
         CLI   LOCTYPE,C'A'                                        1042
         BNE   @RF01042                                            1042
@RT01042 DS    0H                                                  1043
*                ALLOPTUN = ON;                            /*@Y30SSFR*/
*                                                                  1043
         L     @08,ALLPTR                                          1043
         OI    ALLOPTUN(@08),B'00010000'                           1043
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  RESET THE DEALLOC FLAG TO INDICATE THAT     #Y30SSFR*/
*            /*  DYNAMIC UNALLOCATION IS BEING ATTEMPTED.    #Y30SSFR*/
*            /*  THEN ISSUE THE UDEALLOC MACRO.              #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  1044
*            DEALLOC = OFF;                                /*#Y30SSFR*/
*                                                                  1044
@RF01042 NI    DEALLOC,B'01111111'                                 1044
*            CALL IDCSADL0(GDTTBL,ALLAGL);                 /*#Y30SSFR*/
*                                                                  1045
         L     @08,@PC00001                                        1045
         ST    @08,@AL00001                                        1045
         L     @05,ALLPTR                                          1045
         ST    @05,@AL00001+4                                      1045
         MVI   @AL00001+4,X'80'                                    1045
         L     @15,GDTDLC(,@08)                                    1045
         LA    @01,@AL00001                                        1045
         BALR  @14,@15                                             1045
*            /********************************************************/
*            /*                                              #Y30SSFR*/
*            /*  TEST THE RETURN CODE FROM DYNAMIC           #Y30SSFR*/
*            /*  ALLOCATION, AND SET THE ENTRYRC ON THE      #Y30SSFR*/
*            /*  BASIS OF THEAT RETURN CODE.                 #Y30SSFR*/
*            /*                                              #Y30SSFR*/
*            /********************************************************/
*                                                                  1046
*            RESPECIFY RTNREG RSTD;                                1046
*            TESTRC = RTNREG;                                      1047
         LR    TESTRC,RTNREG                                       1047
*            RESPECIFY RTNREG UNRSTD;                      /*#Y30SSFR*/
*            SETRC = MAX(TESTRC,SETRC);                    /*#Y30SSFR*/
         CR    SETRC,TESTRC                                        1049
         BNL   *+6
         LR    SETRC,TESTRC                                        1049
*            END;                                          /*#Y30SSFR*/
*                                                                  1050
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  TEST TO DETERMINE IF A POINTER TO A DATA        #Y30SSFR*/
*        /*  SET NAME HAS BEEN PASSED TO ALLOPROC.  IF       #Y30SSFR*/
*        /*  SO, WE MUST DO A DYNAMIC ALLOCATION BY          #Y30SSFR*/
*        /*  DATA SET NAME.                                  #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  1051
*        IF ALDSNPT ^= NULLPTR                             /*@Y30SSFR*/
*          THEN                                            /*@Y30SSFR*/
*                                                                  1051
@RF01040 SLR   @08,@08                                             1051
         L     @05,@PC00009                                        1051
         L     @05,ALDSNPT(,@05)                                   1051
         CR    @05,@08                                             1051
         BE    @RF01051                                            1051
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  DYNAMICALLY ALLOCATE BY DATA SET NAME.      @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1052
*            DO;                                           /*@Y30SSFR*/
*                                                                  1052
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET THE ALLPTR TO POINT TO THE STORAGE      @Y30SSFR*/
*            /*  FOR THE ALLAGL.  THEN CLEAR THIS PART       @Y30SSFR*/
*            /*  OF STORAGE.                                 @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1053
*            ALLPTR = ADDR(ALLLIST);                       /*@Y30SSFR*/
         LA    @15,ALLLIST                                         1053
         ST    @15,ALLPTR                                          1053
*            ALLAGL = ''B;                                 /*@Y30SSFR*/
*                                                                  1054
         XC    ALLAGL(31,@15),ALLAGL(@15)                          1054
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET POINTERS TO THE DSNAME AND PASSWORD     @Y30SSFR*/
*            /*  IN THE ALLAGL.                              @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1055
*            ALLDSN = ALDSNPT;                             /*@Y30SSFR*/
         ST    @05,ALLDSN(,@15)                                    1055
*            IF NTRYPLN(INDEX) ^= 0                        /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
         LH    @05,INDEX                                           1056
         MH    @05,@CH01079                                        1056
         L     @14,@PC00001+4                                      1056
         L     @14,FDTPTR(,@14)                                    1056
         LA    @01,0(@05,@14)                                      1056
         AL    @01,@CF01099                                        1056
         SLR   @00,@00                                             1056
         IC    @00,NTRYPLN-2(,@01)                                 1056
         CR    @08,@00                                             1056
         BE    @RF01056                                            1056
*                ALLPWD = ADDR(NTRYPAS(INDEX));            /*@Y30SSFR*/
*                                                                  1057
         AL    @14,@CF01100                                        1057
         LA    @08,NTRYPAS-3(@05,@14)                              1057
         ST    @08,ALLPWD(,@15)                                    1057
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SELECT ALLOCATION OPTIONS.                  @Y30SSFR*/
*            /*  (1) ALLOCATION BY DATA SET NAME             @Y30SSFR*/
*            /*  (2) DISP = KEEP                             @Y30SSFR*/
*            /*  (3) STATUS = OLD                            @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1058
*            ALLOPTVL = OFF;                               /*@Y30SSFR*/
@RF01056 DS    0H                                                  1059
*            ALLOPTDS = ON;                                /*@Y30SSFR*/
         L     @08,ALLPTR                                          1059
         OI    ALLOPTDS(@08),B'01000000'                           1059
         NI    ALLOPTVL(@08),B'01111111'                           1059
*            ALLSTSOD = ON;                                /*@Y30SSFR*/
         OI    ALLSTSOD(@08),B'00000001'                           1060
*            ALLDSPKP = ON;                                /*@Y30SSFR*/
*                                                                  1061
         OI    ALLDSPKP(@08),B'00001000'                           1061
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  ISSUE THE UALLOC, AND TEST THE              @Y30SSFR*/
*            /*  RETURN CODE.                                @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1062
*            CALL IDCSAAL0(GDTTBL,ALLAGL);                 /*@Y30SSFR*/
*                                                                  1062
         L     @05,@PC00001                                        1062
         ST    @05,@AL00001                                        1062
         ST    @08,@AL00001+4                                      1062
         MVI   @AL00001+4,X'80'                                    1062
         L     @15,GDTALC(,@05)                                    1062
         LA    @01,@AL00001                                        1062
         BALR  @14,@15                                             1062
*            RESPECIFY RTNREG RSTD;                                1063
*            TESTRC = RTNREG;                                      1064
         LR    TESTRC,RTNREG                                       1064
*            RESPECIFY RTNREG UNRSTD;                      /*@Y30SSFR*/
*            IF TESTRC = 0                                 /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
*                                                                  1066
         LTR   TESTRC,TESTRC                                       1066
         BNZ   @RF01066                                            1066
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  THE OBJECT HAS BEEN ALLOCATED           @Y30SSFR*/
*                /*  SUCCESSFULLY.  SET DEALLOC TO ON.       @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1067
*                DEALLOC = ON;                             /*@Y30SSFR*/
*                                                                  1067
         OI    DEALLOC,B'10000000'                                 1067
*              ELSE                                        /*@Y30SSFR*/
*                DO;                                       /*@Y30SSFR*/
*                                                                  1068
         B     @RC01066                                            1068
@RF01066 DS    0H                                                  1069
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  DYNAMIC ALLOCATION HAS FAILED.          @Y30SSFR*/
*                /*  MAKE SETRC 8 TO INDICATE THAT THE       @Y30SSFR*/
*                /*  OBJECT CANNOT BE DELETED.               @Y30SSFR*/
*                /*  RETURN TO THE CALLING PROCESSOR.        @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1069
*                SETRC = MAX(SETRC,LASTCC08);              /*@Y30SSFR*/
         LA    @08,8                                               1069
         CR    SETRC,@08                                           1069
         BNL   *+6
         LR    SETRC,@08                                           1069
*                RETURN CODE(SETRC);                       /*@Y30SSFR*/
         LR    @15,SETRC                                           1070
         L     @14,@SA00009                                        1070
         LM    @00,@03,@SA00009+8                                  1070
         LM    @05,@12,@SA00009+24                                 1070
         BR    @14                                                 1070
*                END;                                      /*@Y30SSFR*/
*            END;                                          /*@Y30SSFR*/
*                                                                  1072
*          ELSE                                            /*@Y30SSFR*/
*                                                                  1073
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  THE REQUEST IS FOR DYNAMIC ALLOCATION       @Y30SSFR*/
*            /*  OF VOLUMES.                                 @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1073
*            DO;                                           /*@Y30SSFR*/
*                                                                  1073
         B     @RC01051                                            1073
@RF01051 DS    0H                                                  1074
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SET THE ALLPTR TO POINT TO THE STORAGE      @Y30SSFR*/
*            /*  FOR THE ALLAGL, AND CLEAR THAT PART OF      @Y30SSFR*/
*            /*  CORE.                                       @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1074
*            ALLPTR = ADDR(ALLLIST);                       /*@Y30SSFR*/
         LA    @08,ALLLIST                                         1074
         ST    @08,ALLPTR                                          1074
*            ALLAGL = ''B;                                 /*@Y30SSFR*/
*                                                                  1075
         XC    ALLAGL(31,@08),ALLAGL(@08)                          1075
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  SELECT OPTIONS--DYNAMIC ALLOCATION OF       @Y30SSFR*/
*            /*  VOLUMES.                                    @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1076
*            ALLOPTVL = ON;                                /*@Y30SSFR*/
*            ALLOPTDS = OFF;                               /*@Y30SSFR*/
*                                                                  1077
         OI    ALLOPTVL(@08),B'10000000'                           1077
         NI    ALLOPTDS(@08),B'10111111'                           1077
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  BUILD THE UNIT AND VOLUME LISTS THAT        @Y30SSFR*/
*            /*  THE ALLAGL POINTS TO WHEN DYNAMICALLY       @Y30SSFR*/
*            /*  ALLOCATING VOLUMES.                         @Y30SSFR*/
*            /*  THIS IS DONE BY FIRST SETTING               @Y30SSFR*/
*            /*  THE ADDRESSES OF THE LISTS IN THE           @Y30SSFR*/
*            /*  ALLAGL.  THEN THE TWO LISTS ARE             @Y30SSFR*/
*            /*  BUILT IN IDCDL01'S AUTOMATIC STORAGE.       @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1078
*            ALLULP = ADDR(ULP);                           /*@Y30SSFR*/
         LA    @05,ULP                                             1078
         ST    @05,ALLULP(,@08)                                    1078
*            ALLVLP = ADDR(VLP);                           /*@Y30SSFR*/
*                                                                  1079
         LA    @05,VLP                                             1079
         ST    @05,ALLVLP(,@08)                                    1079
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  BUILD THE UNIT PARAMETER LIST.              @Y30SSFR*/
*            /*  AMS USES THE GENERIC 'SYSALLDA'             @Y30SSFR*/
*            /*  AS THE UNIT TYPE.                           @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1080
*            ULPNUM = 1;                                   /*@Y30SSFR*/
         LA    @05,1                                               1080
         STH   @05,ULPNUM                                          1080
*            ULPLEN = 8;                                   /*@Y30SSFR*/
         MVC   ULPLEN(2),@CH00179                                  1081
*            ULPVAL = 'SYSALLDA';                          /*@Y30SSFR*/
*                                                                  1082
         MVC   ULPVAL(8),@CC01054                                  1082
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  BUILD THE VOLUME PARAMETER LIST.            @Y30SSFR*/
*            /*  THE VOLSER TO BE ALLOCATED IS THE           @Y30SSFR*/
*            /*  ONE PASSED TO ALLOPROC AS A PARAMETER.      @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1083
*            VLPNUM = 1;                                   /*@Y30SSFR*/
         STH   @05,VLPNUM                                          1083
*            VLPLEN = SERLN;                               /*@Y30SSFR*/
         MVC   VLPLEN(2),@CH00156                                  1084
*            VLPVAL = ALVLSPT -> VOLSER;                   /*@Y30SSFR*/
*                                                                  1085
         L     @05,@PC00009+4                                      1085
         L     @05,ALVLSPT(,@05)                                   1085
         MVC   VLPVAL(6),VOLSER(@05)                               1085
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  ISSUE THE UALLOC MACRO AND TEST             @Y30SSFR*/
*            /*  FOR A ZERO RETURN CODE.                     @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1086
*            CALL IDCSAAL0(GDTTBL,ALLAGL);                 /*@Y30SSFR*/
*                                                                  1086
         L     @05,@PC00001                                        1086
         ST    @05,@AL00001                                        1086
         ST    @08,@AL00001+4                                      1086
         MVI   @AL00001+4,X'80'                                    1086
         L     @15,GDTALC(,@05)                                    1086
         LA    @01,@AL00001                                        1086
         BALR  @14,@15                                             1086
*            RESPECIFY RTNREG RSTD;                                1087
*            TESTRC = RTNREG;                                      1088
         LR    TESTRC,RTNREG                                       1088
*            RESPECIFY RTNREG UNRSTD;                      /*@Y30SSFR*/
*            IF TESTRC = 0                                 /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
*                                                                  1090
         LTR   TESTRC,TESTRC                                       1090
         BNZ   @RF01090                                            1090
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  THE OBJECT HAS BEEN ALLOCATED           @Y30SSFR*/
*                /*  SUCCESSFULLY.  TURN DEALLOC             @Y30SSFR*/
*                /*  ON.                                     @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1091
*                DEALLOC = ON;                             /*@Y30SSFR*/
*                                                                  1091
         OI    DEALLOC,B'10000000'                                 1091
*              ELSE                                        /*@Y30SSFR*/
*                DO;                                       /*@Y30SSFR*/
*                                                                  1092
         B     @RC01090                                            1092
@RF01090 DS    0H                                                  1093
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  THE ALLOCATION REQUEST HAS              @Y30SSFR*/
*                /*  FAILED.  MAKE SETRC 8 TO                @Y30SSFR*/
*                /*  INDICATE THAT THE OBJECT CAN            @Y30SSFR*/
*                /*  NOT BE DELETED.  RETURN TO              @Y30SSFR*/
*                /*  THE CALLING PROCESSOR.                  @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1093
*                SETRC = MAX(SETRC,LASTCC08);              /*@Y30SSFR*/
         LA    @08,8                                               1093
         CR    SETRC,@08                                           1093
         BNL   *+6
         LR    SETRC,@08                                           1093
*                RETURN CODE(SETRC);                       /*@Y30SSFR*/
         LR    @15,SETRC                                           1094
         L     @14,@SA00009                                        1094
         LM    @00,@03,@SA00009+8                                  1094
         LM    @05,@12,@SA00009+24                                 1094
         BR    @14                                                 1094
*                END;                                      /*@Y30SSFR*/
*            END;                                          /*@Y30SSFR*/
@RC01090 DS    0H                                                  1097
*        RETURN CODE(LASTCC00);                            /*@Y30SSFR*/
@RC01051 SLR   @15,@15                                             1097
         L     @14,@SA00009                                        1097
         LM    @00,@03,@SA00009+8                                  1097
         LM    @05,@12,@SA00009+24                                 1097
         BR    @14                                                 1097
*END ALLOPROC;                                             /*@Y30SSFR*/
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  PROCEDURE NAME - RC240PRC                       @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  FUNCTION - HANDLE ALL OF THE CHECKING           @Y30SSFR*/
*        /*  ASSOCIATED WITH THE PRESENCE OF THE CATALOG     @Y30SSFR*/
*        /*  PARAMETER WHEN DYNAMIC ALLOCATION IS REQUIRED.  @Y30SSFR*/
*        /*  THIS PROCEDURE IS CALLED WHEN VSAM CATALOG      @Y30SSFR*/
*        /*  MANAGEMENT RETURNS A RETURN CODE OF 240 TO      @Y30SSFR*/
*        /*  AMS FOLLOWING A DELETE OPERATION.  IN THAT      @Y30SSFR*/
*        /*  SITUATION THIS PROCEDURE IS INVOKED TO          @Y30SSFR*/
*        /*  DETERMINE IF THE CATALOG SPECIFIED VIA THE      @Y30SSFR*/
*        /*  CATALOG PARAMETER IS AVAILABLE TO DYNAMIC       @Y30SSFR*/
*        /*  ALLOCATION.                                     @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  INPUT - NONE                                    @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /*  OUTPUT - IF SUCCESSFUL, A RESTORED DELETE CPL   @Y30SSFR*/
*        /*  WITH A POINTER TO A DDNAME IN CTGDDNM.          @Y30SSFR*/
*        /*  OTHERWISE, AN ERROR INDICATION.                 @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1099
*RC240PRC: PROCEDURE;                                      /*@Y30SSFR*/
*                                                                  1099
RC240PRC STM   @14,@03,@SA00010                                    1099
         STM   @05,@12,@SA00010+24                                 1099
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  DECLARATIONS LOCAL TO RC240PRC.                 @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1100
*        DCL LOCCPL CHAR(LENGTH(CTGPL)+4) BDY(WORD);       /*@Y30SSFR*/
*                                      /*STORAGE FOR LOCATE  @Y30SSFR*/
*                                      /*CPL                 @Y30SSFR*/
*        DCL SAVCPLPT PTR(31);         /*SAVE AREA FOR THE   @Y30SSFR*/
*                                      /*PREVIOUS VALUE OF   @Y30SSFR*/
*                                      /*CTGPLPTR            @Y30SSFR*/
*        DCL CATAREA CHAR(44);         /*RETURN LOCATION     @Y30SSFR*/
*                                      /*FOR THE CATALOG     @Y30SSFR*/
*                                      /*NAME                @Y30SSFR*/
*        DCL LOCFPL CHAR(LENGTH(CTGFL)+8) BDY(WORD);       /*@Y30SSFR*/
*                                      /*STORAGE FOR A       @Y30SSFR*/
*                                      /*A LOCATE FPL        @Y30SSFR*/
*        DCL 1 LOCWKA BDY(WORD),       /*LOCATE WORK AREA    @Y30SSFR*/
*          2 LOCLN FIXED(15),          /*LENGTH OF WORK AREA @Y30SSFR*/
*          2 LOCRN FIXED(15),          /*LENGTH USED         @Y30SSFR*/
*          2 LOCWORK CHAR(45);         /*DATA RETURNED       @Y30SSFR*/
*        DCL ACBSAVE PTR(31);          /*STORAGE FOR FIRST   @Y30SSFR*/
*                                      /*CATALOG ACB FOUND   @Y30SSFR*/
*        OLDERID2 = NEWERID2;                                      1106
         L     @08,@PC00001                                        1106
         L     @08,GDTTR2(,@08)                                    1106
         MVC   @TS00001(95),NEWERID2(@08)                          1106
         MVC   OLDERID2(95,@08),@TS00001                           1106
*        NEWID2 = 'DLAC';                                  /*@Y30SSFR*/
*                                                                  1107
         MVC   NEWID2(4,@08),@CC01068                              1107
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  INITIALIZE THE RETURN AREA                      @Y30SSFR*/
*        /*  FOR THE CATALOG NAME TO 44                      @Y30SSFR*/
*        /*  BLANKS.  INITIALIZE THE                         @Y30SSFR*/
*        /*  STORAGE FOR THE CPL TO BINARY ZEROS.            @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1108
*        CATAREA = BLANKS;                                 /*@Y30SSFR*/
         MVC   CATAREA(44),BLANKS                                  1108
*        LOCCPL = ''B;                                     /*@Y30SSFR*/
*                                                                  1109
         XC    LOCCPL(32),LOCCPL                                   1109
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  SAVE THE VALUE OF CTGPLPTR,                     @Y30SSFR*/
*        /*  SO THAT THE CPL USED TO DO                      @Y30SSFR*/
*        /*  DELETES CAN BE REFERENCED                       @Y30SSFR*/
*        /*  LATER, AND SET CTGPLPTR TO                      @Y30SSFR*/
*        /*  POINT TO THE CPL FOR THE                        @Y30SSFR*/
*        /*  LOCATE.                                         @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1110
*        SAVCPLPT = CTGPLPTR;                              /*@Y30SSFR*/
         L     SAVCPLPT,CTGPLPTR                                   1110
*        CTGPLPTR = ADDR(LOCCPL);                          /*@Y30SSFR*/
*                                                                  1111
         LA    @08,LOCCPL                                          1111
         ST    @08,CTGPLPTR                                        1111
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  THE OPTIONS SELECTED FOR THIS                   @Y30SSFR*/
*        /*  CALL TO CATALOG ARE:                            @Y30SSFR*/
*        /*  (1) CATALOG MANAGEMENT SERVICES                 @Y30SSFR*/
*        /*  (2) LISTCATALOG                                 @Y30SSFR*/
*        /*  (3) VSAM REQUEST                                @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1112
*        CTGFUNC = CTGCMS;                                 /*@Y30SSFR*/
         NI    CTGFUNC(@08),B'10011111'                            1112
         OI    CTGFUNC(@08),B'10000000'                            1112
*        CTGOPTNS = CTGLTCAT;                              /*@Y30SSFR*/
         NI    CTGOPTNS(@08),B'00100111'                           1113
         OI    CTGOPTNS(@08),B'00100000'                           1113
*        CTGAM0 = ON;                                      /*@Y30SSFR*/
*                                                                  1114
         OI    CTGAM0(@08),B'00000001'                             1114
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  INDICATE THAT AN ENTRY NAME                     @Y30SSFR*/
*        /*  IS BEING PASSED BY SETTING                      @Y30SSFR*/
*        /*  CTGNAME TO BE ON.  SET THE                      @Y30SSFR*/
*        /*  THE ADDRESS OF THE ENTRY                        @Y30SSFR*/
*        /*  NAME IN CTGENT.                                 @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1115
*        CTGNAME = ON;                                     /*@Y30SSFR*/
         OI    CTGNAME(@08),B'00000100'                            1115
*        CTGENT = ADDR(ENTVAL(ENT));                       /*@Y30SSFR*/
*                                                                  1116
         LR    @07,ENT                                             1116
         MH    @07,@CH01066                                        1116
         L     @01,GENWKPTR                                        1116
         AL    @01,@CF01104                                        1116
         LA    @07,ENTVAL-5(@07,@01)                               1116
         ST    @07,CTGENT(,@08)                                    1116
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  SET CTGCNAME TO BE ON TO                        @Y30SSFR*/
*        /*  INDICATE A CATALOG NAME IS                      @Y30SSFR*/
*        /*  BEING PASSED.  SET CTGCAT TO                    @Y30SSFR*/
*        /*  POINT TO THE BLANK FIELD.                       @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1117
*        CTGCNAME = ON;                                    /*@Y30SSFR*/
         OI    CTGCNAME(@08),B'00000010'                           1117
*        CTGCAT = ADDR(CATAREA);                           /*@Y30SSFR*/
*                                                                  1118
         LA    @07,CATAREA                                         1118
         ST    @07,CTGCAT(,@08)                                    1118
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  SET CTGWKA TO POINT TO A                        @Y30SSFR*/
*        /*  LOCATE WORK AREA.  CLEAR THE                    @Y30SSFR*/
*        /*  WORK AREA, AND SET THE LENGTH                   @Y30SSFR*/
*        /*  OF THE WORK AREA IN THE FIRST                   @Y30SSFR*/
*        /*  TWO BYTES.                                      @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1119
*        CTGWKA = ADDR(LOCWKA);                            /*@Y30SSFR*/
         LA    @07,LOCWKA                                          1119
         ST    @07,CTGWKA(,@08)                                    1119
*        LOCWKA = ''B;                                     /*@Y30SSFR*/
         XC    LOCWKA(49),LOCWKA                                   1120
*        LOCLN = LENGTH(LOCWKA);                           /*@Y30SSFR*/
*                                                                  1121
         MVC   LOCLN(2),@CH01086                                   1121
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  PLACE PASSWORD INFORMATION IN THE CPL TO        @Y30SSFR*/
*        /*  AVOID PROMPTING.  IF A PASSWORD WAS SPECIFIED   @Y30SSFR*/
*        /*  VIA THE CATALOG PARAMETER, USE THAT.  OTHERWISE @Y30SSFR*/
*        /*  USE THE PASSWORD GIVEN VIA THE ENTRYNAME IF     @Y30SSFR*/
*        /*  ANY.                                            @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1122
*        IF CATPLN ^= 0                                    /*@Y30SSFR*/
*          THEN                                            /*@Y30SSFR*/
         L     @07,@PC00001+4                                      1122
         L     @07,FDTPTR+8(,@07)                                  1122
         CLI   CATPLN(@07),0                                       1122
         BE    @RF01122                                            1122
*            CTGPSWD = ADDR(CATPAS);                       /*@Y30SSFR*/
         LA    @07,CATPAS(,@07)                                    1123
         ST    @07,CTGPSWD(,@08)                                   1123
*          ELSE                                            /*@Y30SSFR*/
*            IF NTRYPLN(INDEX) ^= 0                        /*@Y30SSFR*/
*              THEN                                        /*@Y30SSFR*/
         B     @RC01122                                            1124
@RF01122 LH    @08,INDEX                                           1124
         MH    @08,@CH01079                                        1124
         L     @07,@PC00001+4                                      1124
         L     @07,FDTPTR(,@07)                                    1124
         LA    @01,0(@08,@07)                                      1124
         AL    @01,@CF01099                                        1124
         SLR   @00,@00                                             1124
         IC    @00,NTRYPLN-2(,@01)                                 1124
         C     @00,@CF00115                                        1124
         BE    @RF01124                                            1124
*                CTGPSWD = ADDR(NTRYPAS(INDEX));           /*@Y30SSFR*/
*                                                                  1125
*                                                                  1125
         AL    @07,@CF01100                                        1125
         LA    @08,NTRYPAS-3(@08,@07)                              1125
         L     @07,CTGPLPTR                                        1125
         ST    @08,CTGPSWD(,@07)                                   1125
*        /************************************************************/
*        /*                                                  #Y30SSFR*/
*        /*  SET CTGNOFLD TO BE 1 AND                        #Y30SSFR*/
*        /*  BUILD ONE FPL FOR CATACB.                       #Y30SSFR*/
*        /*                                                  #Y30SSFR*/
*        /************************************************************/
*                                                                  1126
*        CTGNOFLD = 1;                                     /*#Y30SSFR*/
@RF01124 DS    0H                                                  1126
@RC01122 L     @08,CTGPLPTR                                        1126
         MVI   CTGNOFLD(@08),X'01'                                 1126
*        CTGFIELD(1) = ADDR(LOCFPL);                       /*#Y30SSFR*/
         LA    @07,LOCFPL                                          1127
         ST    @07,CTGFIELD(,@08)                                  1127
*        LOCFPL = ''B;                                     /*#Y30SSFR*/
         XC    LOCFPL(24),LOCFPL                                   1128
*        CTGFLPTR = ADDR(LOCFPL);                          /*#Y30SSFR*/
         LA    CTGFLPTR,LOCFPL                                     1129
*        CTGFLDNO = 1;                                     /*@Y30SSFR*/
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            1130
*        CTGFLDNM = ADDR(ACBADDR);                         /*@Y30SSFR*/
*                                                                  1131
         LA    @08,ACBADDR                                         1131
         ST    @08,CTGFLDNM(,CTGFLPTR)                             1131
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  ISSUE THE UCATLG AND TEST THE                   @Y30SSFR*/
*        /*  RETURN CODE FROM VSAM CATALOG                   @Y30SSFR*/
*        /*  COMPARE THE CATALOG NAME                        @Y30SSFR*/
*        /*  GIVEN BY THE USER WITH THAT                     @Y30SSFR*/
*        /*  RETURNED BY VSAM.                               @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1132
*        CALL IDCSACA0(GDTTBL,CTGPLPTR);                   /*@Y30SSFR*/
         L     @08,@PC00001                                        1132
         ST    @08,@AL00001                                        1132
         LA    @07,CTGPLPTR                                        1132
         ST    @07,@AL00001+4                                      1132
         L     @15,GDTCAT(,@08)                                    1132
         LA    @01,@AL00001                                        1132
         BALR  @14,@15                                             1132
*        RESPECIFY RTNREG RSTD;                                    1133
*        TESTRC = RTNREG;                                          1134
         LR    TESTRC,RTNREG                                       1134
*        RESPECIFY RTNREG UNRSTD;                          /*@Y30SSFR*/
*        IF GDTDBG = NULLPTR                                       1136
*          THEN;                                                   1136
         L     @08,@PC00001                                        1136
         L     @08,GDTDBG(,@08)                                    1136
         LTR   @08,@08                                             1136
         BZ    @RT01136                                            1136
*          ELSE                                                    1138
*            CALL IDCDB010(GDTTBL,'DLLY');                         1138
         L     @08,@PC00001                                        1138
         ST    @08,@AL00001                                        1138
         LA    @07,@CC01069                                        1138
         ST    @07,@AL00001+4                                      1138
         MVI   @AL00001+4,X'80'                                    1138
         L     @15,GDTDBG(,@08)                                    1138
         LA    @01,@AL00001                                        1138
         BALR  @14,@15                                             1138
*                                                          /*@Y30SSFR*/
*                                                                  1139
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  IF THE RETURN CODE FROM VSAM CATALOG IS         @Y30SSFR*/
*        /*  NONZERO, THEN RESTORE CTGPLPTR TO POINT TO THE  @Y30SSFR*/
*        /*  DELETE CPL AND RETURN.                          @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1139
*        IF TESTRC ^= 0                                            1139
*          THEN                                                    1139
@RT01136 LTR   TESTRC,TESTRC                                       1139
         BZ    @RF01139                                            1139
*            DO;                                           /*@Y30SSFR*/
*            CTGPLPTR = SAVCPLPT;                          /*@Y30SSFR*/
         ST    SAVCPLPT,CTGPLPTR                                   1141
*            RETURN CODE(LASTCC12);                        /*@Y30SSFR*/
         LA    @15,12                                              1142
         L     @14,@SA00010                                        1142
         LM    @00,@03,@SA00010+8                                  1142
         LM    @05,@12,@SA00010+24                                 1142
         BR    @14                                                 1142
*            END;                                          /*@Y30SSFR*/
*                                                                  1143
*          ELSE                                                    1144
*                                                                  1144
*            /********************************************************/
*            /*                                              @Y30SSFR*/
*            /*  COMPARE THE NAME PASSED BACK BY VSAM AS THE @Y30SSFR*/
*            /*  TRUE NAME OF THE CATALOG IN WHICH THE DATA  @Y30SSFR*/
*            /*  SET CAN BE FOUND BY DYNAMIC ALLOCATION WITH @Y30SSFR*/
*            /*  THAT SUPPLIED BY THE USER.  IF THEY ARE NOT @Y30SSFR*/
*            /*  EQUAL, CHECK TO DETERMINE IF THE NAME       @Y30SSFR*/
*            /*  SPECIFIED BY THE USER IS AN ALIAS OF THE    @Y30SSFR*/
*            /*  CATALOG IN WHICH VSAM FOUND THE DATA SET.   @Y30SSFR*/
*            /*                                              @Y30SSFR*/
*            /********************************************************/
*                                                                  1144
*            IF CATAREA ^= CATVAL                                  1144
*              THEN                                                1144
@RF01139 L     @08,@PC00001+4                                      1144
         L     @08,FDTPTR+8(,@08)                                  1144
         CLC   CATAREA(44),CATVAL(@08)                             1144
         BE    @RF01144                                            1144
*ALIASNAM:       DO;                                       /*@Y30SSFR*/
*                                                                  1145
ALIASNAM DS    0H                                                  1146
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  SAVE THE ACB ADDRESS RETURNED BY THE    @Y30SSFR*/
*                /*  FIRST LISTCATALOG.                      @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1146
*                ACBSAVE = CTGFLPTR -> CTGFLPT(1) -> LOCACBPT;     1146
*                                                                  1146
         L     @08,CTGFLPT(,CTGFLPTR)                              1146
         L     ACBSAVE,LOCACBPT(,@08)                              1146
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  DO A DIRECTED SEARCH ON THIS            @Y30SSFR*/
*                /*  LISTCATALOG, SEARCHING ONLY THE CATALOG @Y30SSFR*/
*                /*  REFERRED TO BY THE CATALOG PARAMETER.   @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1147
*                CTGNUM = ON;                              /*@Y30SSFR*/
         L     @08,CTGPLPTR                                        1147
         OI    CTGNUM(@08),B'00000010'                             1147
*                CTGCAT = ADDR(CATVAL);                    /*@Y30SSFR*/
*                                                                  1148
         L     @15,@PC00001+4                                      1148
         L     @01,FDTPTR+8(,@15)                                  1148
         LA    @15,CATVAL(,@01)                                    1148
         ST    @15,CTGCAT(,@08)                                    1148
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  CLEAR THE LENGTH AND DATA POINTER IN    @Y30SSFR*/
*                /*  THE CATACB FPL.                         @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1149
*                CTGFLPT(1) = NULLPTR;                     /*@Y30SSFR*/
         SLR   @08,@08                                             1149
         ST    @08,CTGFLPT(,CTGFLPTR)                              1149
*                CTGFLNG(1) = 0;                           /*@Y30SSFR*/
*                                                                  1150
         ST    @08,CTGFLNG(,CTGFLPTR)                              1150
*                /****************************************************/
*                /*                                          @Y30SSFR*/
*                /*  ISSUE A UCATLG, AND SAVE THE RETURN     @Y30SSFR*/
*                /*  CODE FROM CATALOG.                      @Y30SSFR*/
*                /*                                          @Y30SSFR*/
*                /****************************************************/
*                                                                  1151
*                CALL IDCSACA0(GDTTBL,CTGPLPTR);           /*@Y30SSFR*/
         L     @08,@PC00001                                        1151
         ST    @08,@AL00001                                        1151
         LA    @15,CTGPLPTR                                        1151
         ST    @15,@AL00001+4                                      1151
         L     @15,GDTCAT(,@08)                                    1151
         LA    @01,@AL00001                                        1151
         BALR  @14,@15                                             1151
*                RESPECIFY RTNREG RSTD;                            1152
*                TESTRC = RTNREG;                                  1153
         LR    TESTRC,RTNREG                                       1153
*                RESPECIFY RTNREG UNRSTD;                  /*@Y30SSFR*/
*                IF GDTDBG = NULLPTR                               1155
*                  THEN;                                           1155
         L     @08,@PC00001                                        1155
         L     @08,GDTDBG(,@08)                                    1155
         LTR   @08,@08                                             1155
         BZ    @RT01155                                            1155
*                  ELSE                                            1157
*                    CALL IDCDB010(GDTTBL,'DLLZ');                 1157
         L     @08,@PC00001                                        1157
         ST    @08,@AL00001                                        1157
         LA    @15,@CC01072                                        1157
         ST    @15,@AL00001+4                                      1157
         MVI   @AL00001+4,X'80'                                    1157
         L     @15,GDTDBG(,@08)                                    1157
         LA    @01,@AL00001                                        1157
         BALR  @14,@15                                             1157
*                                                          /*@Y30SSFR*/
*                IF TESTRC ^= 0                                    1158
*                  THEN                                            1158
@RT01155 LTR   TESTRC,TESTRC                                       1158
         BZ    @RF01158                                            1158
*                    DO;                                   /*@Y30SSFR*/
*                                                                  1159
*                    /************************************************/
*                    /*                                      @Y30SSFR*/
*                    /*  THE CATALOG OPERATION HAS FAILED.   @Y30SSFR*/
*                    /*  RESTORE CTGPLPTR TO POINT THE CPL   @Y30SSFR*/
*                    /*  FOR THE DELETE OPERATION AND        @Y30SSFR*/
*                    /*  RETURN.                             @Y30SSFR*/
*                    /************************************************/
*                                                                  1160
*                    CTGPLPTR = SAVCPLPT;                  /*@Y30SSFR*/
         ST    SAVCPLPT,CTGPLPTR                                   1160
*                    RETURN CODE(LASTCC12);                /*@Y30SSFR*/
         LA    @15,12                                              1161
         L     @14,@SA00010                                        1161
         LM    @00,@03,@SA00010+8                                  1161
         LM    @05,@12,@SA00010+24                                 1161
         BR    @14                                                 1161
*                    END;                                  /*@Y30SSFR*/
*                  ELSE                                            1163
*                                                                  1163
*                    /************************************************/
*                    /*                                      @Y30SSFR*/
*                    /*  COMPARE THE ACB ADDRESSES RETURNED  @Y30SSFR*/
*                    /*  BY THE TWO LISTCATALOGS.  IF THEY   @Y30SSFR*/
*                    /*  ARE NOT EQUAL, RESTORE CTGPLPTR,    @Y30SSFR*/
*                    /*  AND RETURN.                         @Y30SSFR*/
*                    /*                                      @Y30SSFR*/
*                    /************************************************/
*                                                                  1163
*                    IF ACBSAVE ^= CTGFLPTR -> CTGFLPT(1) ->       1163
*                       LOCACBPT                                   1163
*                      THEN                                        1163
@RF01158 L     @08,CTGFLPT(,CTGFLPTR)                              1163
         C     ACBSAVE,LOCACBPT(,@08)                              1163
         BE    @RF01163                                            1163
*                        DO;                               /*@Y30SSFR*/
*                                                                  1164
*                        /********************************************/
*                        /*                                  @Y30SSFR*/
*                        /*  THE CATALOG SPECIFIED BY THE    @Y30SSFR*/
*                        /*  CATALOG PARAMETER IS NOT        @Y30SSFR*/
*                        /*  ACCESSIBLE TO DYNAMIC           @Y30SSFR*/
*                        /*  ALLOCATION.  RESTORE CTGPLPTR,  @Y30SSFR*/
*                        /*  AND RETURN.                     @Y30SSFR*/
*                        /*                                  @Y30SSFR*/
*                        /********************************************/
*                                                                  1165
*                        CTGPLPTR = SAVCPLPT;              /*@Y30SSFR*/
         ST    SAVCPLPT,CTGPLPTR                                   1165
*                        RETURN CODE(LASTCC12);            /*@Y30SSFR*/
         LA    @15,12                                              1166
         L     @14,@SA00010                                        1166
         LM    @00,@03,@SA00010+8                                  1166
         LM    @05,@12,@SA00010+24                                 1166
         BR    @14                                                 1166
*                        END;                              /*@Y30SSFR*/
*                  END ALIASNAM;                           /*@Y30SSFR*/
*                                                                  1168
@RF01163 DS    0H                                                  1169
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  RESTORE CTGPLPTR TO THE                         @Y30SSFR*/
*        /*  VALUE IT HAD PRIOR TO THE                       @Y30SSFR*/
*        /*  LOCATE FOR CATALOG NAME.                        @Y30SSFR*/
*        /*  RESTORE THE CPL PRIOR TO                        @Y30SSFR*/
*        /*  REQUESTING DYNAMIC ALLOCATION.                  @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1169
*        CTGPLPTR = SAVCPLPT;                              /*@Y30SSFR*/
@RF01144 ST    SAVCPLPT,CTGPLPTR                                   1169
*        CTGPL = RENEWCPL;                                 /*@Y30SSFR*/
*                                                                  1170
         L     @08,CTGPLPTR                                        1170
         MVC   CTGPL(28,@08),RENEWCPL                              1170
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  CATALOG HAS RETURNED AN                         @Y30SSFR*/
*        /*  ACB ADDRESS.  PLACE A                           @Y30SSFR*/
*        /*  POINTER TO THAT IN THE CPL.                     @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1171
*        CTGCNAME = OFF;                                   /*@Y30SSFR*/
         NI    CTGCNAME(@08),B'11111101'                           1171
*        CTGCAT = ADDR(CTGFLPTR -> CTGFLPT(1) -> LOCACBPT);/*@Y30SSFR*/
*                                                                  1172
         L     @02,CTGFLPT(,CTGFLPTR)                              1172
         ST    @02,CTGCAT(,@08)                                    1172
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  CALL ALLOPROC TO ALLOCATE                       @Y30SSFR*/
*        /*  THE OBJECT TO BE DELETED.                       @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1173
*        CALL ALLOPROC(ADDR(ENTVAL(ENT)),NULLPARM);        /*@Y30SSFR*/
*                                                                  1173
         LR    @08,ENT                                             1173
         MH    @08,@CH01066                                        1173
         L     @01,GENWKPTR                                        1173
         AL    @01,@CF01104                                        1173
         LA    @08,ENTVAL-5(@08,@01)                               1173
         ST    @08,@AFTEMPS+12                                     1173
         LA    @08,@AFTEMPS+12                                     1173
         ST    @08,@AL00001                                        1173
         LA    @08,@CF00115                                        1173
         ST    @08,@AL00001+4                                      1173
         LA    @01,@AL00001                                        1173
         BAL   @14,ALLOPROC                                        1173
*        RESPECIFY RTNREG RSTD;                                    1174
*        TESTRC = RTNREG;                                          1175
         LR    TESTRC,RTNREG                                       1175
*        RESPECIFY RTNREG UNRSTD;                          /*@Y30SSFR*/
*        IF TESTRC ^= 0                                    /*@Y30SSFR*/
*          THEN                                            /*@Y30SSFR*/
         LTR   TESTRC,TESTRC                                       1177
         BZ    @RF01177                                            1177
*            DO;                                           /*@Y30SSFR*/
*            SETRC = LASTCC08;                             /*@Y30SSFR*/
         LA    @08,8                                               1179
         LR    SETRC,@08                                           1179
*            RETURN CODE(LASTCC08);                        /*@Y30SSFR*/
         LR    @15,@08                                             1180
         L     @14,@SA00010                                        1180
         LM    @00,@03,@SA00010+8                                  1180
         LM    @05,@12,@SA00010+24                                 1180
         BR    @14                                                 1180
*            END;                                          /*@Y30SSFR*/
*                                                                  1181
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  SET DEFINED TO BE ON TO                         @Y30SSFR*/
*        /*  INDICATE ANOTHER ITERATION OF THE LOOP          @Y30SSFR*/
*        /*  CATALOG.  ALSO SET A POINTER TO THE             @Y30SSFR*/
*        /*  DDNAME RETURNED BY DYNAMIC ALLOCATION.          @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1182
*        DEFINED = ON;                                     /*@Y30SSFR*/
@RF01177 OI    DEFINED,B'10000000'                                 1182
*        CTGDDNM = ADDR(ALLDDN);                           /*@Y30SSFR*/
*                                                                  1183
         L     @08,ALLPTR                                          1183
         LA    @08,ALLDDN(,@08)                                    1183
         L     @01,CTGPLPTR                                        1183
         ST    @08,CTGDDNM(,@01)                                   1183
*        /************************************************************/
*        /*                                                  @Y30SSFR*/
*        /*  RETURN TO THE CALLER WITH SUCCESS INDICATED.    @Y30SSFR*/
*        /*                                                  @Y30SSFR*/
*        /************************************************************/
*                                                                  1184
*        RETURN CODE(0);                                   /*@Y30SSFR*/
         SLR   @15,@15                                             1184
         L     @14,@SA00010                                        1184
         LM    @00,@03,@SA00010+8                                  1184
         LM    @05,@12,@SA00010+24                                 1184
         BR    @14                                                 1184
*END RC240PRC;                                             /*@Y30SSFR*/
*END IDCDL01                                               /*@Y30SSFR*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (IDCCSDL )                                        *
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                        *
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                        *
*;                                                                 1186
@DATA    DS    0H
@CH00156 DC    H'6'
@CH00472 DC    H'7'
@CH00912 DC    H'40'
@CH00605 DC    H'44'
@CH01086 DC    H'49'
@CH01079 DC    H'66'
@CH01081 DC    H'94'
@CH00918 DC    H'110'
@CH00922 DC    H'240'
@CH01085 DC    H'544'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00007 DS    15F
@SA00002 DS    14F
@SA00003 DS    15F
@PC00003 DS    2F
@SA00004 DS    15F
@PC00004 DS    1F
@SA00005 DS    14F
@PC00005 DS    2F
@SA00006 DS    15F
@SA00009 DS    14F
@PC00009 DS    2F
@SA00008 DS    14F
@PC00008 DS    1F
@SA00010 DS    14F
@AL00001 DS    5A
@TF00001 DS    F
@AFTEMPS DS    4F
IDCDL01  CSECT
         DS    0F
@CF00115 DC    F'0'
@CF00219 DC    F'1'
@CF00153 DC    F'2'
@CH00153 EQU   @CF00153+2
@CF00042 DC    F'4'
@CH00042 EQU   @CF00042+2
@CF00286 DC    F'5'
@CF00179 DC    F'8'
@CH00179 EQU   @CF00179+2
@CF00035 DC    F'12'
@CH00035 EQU   @CF00035+2
@CF01066 DC    F'45'
@CH01066 EQU   @CF01066+2
@CF00914 DC    F'72'
@CH00914 EQU   @CF00914+2
@CF00916 DC    F'76'
@CH00916 EQU   @CF00916+2
@CF00920 DC    F'160'
@CH00920 EQU   @CF00920+2
@CF01099 DC    F'-64'
@CF01100 DC    F'-63'
@CF01102 DC    F'-55'
@CF01098 DC    F'-54'
@CF01101 DC    F'-53'
@CF01116 DC    F'-52'
@CF01096 DC    F'-44'
@CF01097 DC    F'-43'
@CF01103 DC    F'-41'
@CF01104 DC    F'-40'
@CF00888 DC    XL1'0'
         DC    C'DL0'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
CTGPLPTR DS    A
LIMIT    DS    F
ACBPTR   DS    A
ALLPTR   DS    A
GENWKPTR DS    A
WAPTR    DS    A
MNOENT   DS    F
PDSIOCS  DS    A
SIZENEED DS    F
LISTPTR  DS    A
INDEX    DS    H
CATLGRC  DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
RENEWCPL DS    CL28
TYPEFLAG DS    BL1
DCPLINIT DS    BL1
LCPLINIT DS    BL1
ACBFLAG  DS    BL1
DEFINED  DS    BL1
DEALLOC  DS    BL1
NOTFOUND DS    BL1
COREFLAG DS    BL1
NODEL    DS    BL1
LOCTYPE  DS    CL1
         DS    CL2
FPLTYPE  DS    CL24
         ORG   FPLTYPE
@NM00040 DS    CL16
@NM00041 DS    CL8
         ORG   FPLTYPE+24
FPLACB   DS    CL24
         ORG   FPLACB
@NM00042 DS    CL16
@NM00043 DS    CL8
         ORG   FPLACB+24
FPLCATTR DS    CL24
         ORG   FPLCATTR
@NM00044 DS    CL16
@NM00045 DS    CL8
         ORG   FPLCATTR+24
CPLSTOR  DS    CL40
         ORG   CPLSTOR
@NM00046 DS    CL28
@NM00047 DS    CL12
         ORG   CPLSTOR+40
ALLLIST  DS    CL31
CIRLIST  DS    CL32
CATNAME  DS    CL44
         DS    CL1
ENTRIES  DS    CL49
         ORG   ENTRIES
ENTRYLEN DS    FL2
@NM00049 DS    CL2
ATYPE    DS    CL1
ENTRYVAL DS    CL44
         ORG   ENTRIES+49
         DS    CL3
ULP      DS    CL12
         ORG   ULP
ULPNUM   DS    FL2
ULPLEN   DS    FL2
ULPVAL   DS    CL8
         ORG   ULP+12
VLP      DS    CL10
         ORG   VLP
VLPNUM   DS    FL2
VLPLEN   DS    FL2
VLPVAL   DS    CL6
         ORG   VLP+10
         DS    CL2
QUALLIST DS    CL12
         ORG   QUALLIST
QUALADDR DS    AL4
QUALCAT  DS    AL4
QUALPAS  DS    AL4
         ORG   QUALLIST+12
PRINTTAB DS    CL20
SERNAME  DS    CL44
ERRORTAB DS    CL32
WORKAREA DS    CL544
         ORG   WORKAREA
@NM00052 DS    FL2
@NM00053 DS    FL2
@NM00054 DS    CL45
         ORG   @NM00054+0
@NM00055 DS    CL1
@NM00056 DS    CL44
         ORG   WORKAREA+544
LCPLSAVE DS    CL40
DCPLSAVE DS    CL28
PDSLIST  DS    BL48
LOCCPL   DS    CL32
CATAREA  DS    CL44
LOCFPL   DS    CL24
LOCWKA   DS    CL49
         ORG   LOCWKA
LOCLN    DS    FL2
LOCRN    DS    FL2
LOCWORK  DS    CL45
         ORG   LOCWKA+49
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCDL01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01054 DC    C'SYSALLDA'
@CC00940 DC    C'DLBG'
@CC00980 DC    C'DLLC'
@CC00983 DC    C'DLLB'
@CC00984 DC    C'DLLA'
@CC00990 DC    C'DLPC'
@CC01000 DC    C'DLBC'
@CC01011 DC    C'DLCT'
@CC01014 DC    C'DLDB'
@CC01015 DC    C'DLDA'
@CC01036 DC    C'DLMD'
@CC01045 DC    C'DLMS'
@CC01053 DC    C'DLAL'
@CC01068 DC    C'DLAC'
@CC01069 DC    C'DLLY'
@CC01072 DC    C'DLLZ'
@CC00888 DC    C'DL0'
@CC00892 DC    C'UV0'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'DL01'
DLGPID   DC    CL4'DL00'
DLUGPFG1 DC    CL4'DL01'
ENTTYPE  DC    CL8'ENTYPE  '
ACBADDR  DC    CL8'CATACB'
CLUSATTR DC    CL8'CATTR'
BLANKS   DS    CL44
         ORG   BLANKS
@NM00048 DC    44X'40'
         ORG   BLANKS+44
FIXAREA  DS    CL300
         ORG   FIXAREA
@NM00050 DC    150X'00'
@NM00051 DC    150X'00'
         ORG   FIXAREA+300
DLETEMEM DC    CL1'D'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ACBSAVE  EQU   @07
SAVCPLPT EQU   @06
CURSIZE  EQU   @02
J        EQU   @02
ALLOINDX EQU   @03
IX       EQU   @02
I        EQU   @02
CATRC    EQU   @02
GENCNT   EQU   @04
ENT      EQU   @05
CIRPTR   EQU   @02
IND1     EQU   @02
ENTRYNO  EQU   @03
ENTRYRC  EQU   @03
CTGFLPTR EQU   @03
OPNPTR   EQU   @02
TESTRC   EQU   @02
SETRC    EQU   @04
RTNREG   EQU   @15
REG15    EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAFP0 EQU   0
IDCSACA0 EQU   0
IDCSACR0 EQU   0
IDCSAAL0 EQU   0
IDCSADL0 EQU   0
IDCSAQL0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
CIRTYP1Q EQU   CIRTYPE
CIRHLN   EQU   CIRAGL+4
CIRTLN   EQU   CIRAGL+6
CIRHDR   EQU   CIRAGL+8
CIRTLR   EQU   CIRAGL+12
CIRWKP   EQU   CIRAGL+16
CIRCAT   EQU   CIRAGL+20
CIRPWD   EQU   CIRAGL+24
CIRPID   EQU   CIRAGL+28
ALLAGL   EQU   0
ALLDSN   EQU   ALLAGL
ALLDDN   EQU   ALLAGL+4
ALLULP   EQU   ALLAGL+12
ALLVLP   EQU   ALLAGL+16
ALLPWD   EQU   ALLAGL+20
ALLSTS   EQU   ALLAGL+24
ALLSTSOD EQU   ALLSTS
ALLDSP   EQU   ALLAGL+25
ALLDSPKP EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
ALLOPTVL EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IDCIOST0 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCDSN   EQU   IOCSTR+32
IOCCBP   EQU   IOCSTR+36
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNPWA   EQU   OPNAGL+12
OPNDSN   EQU   OPNAGL+16
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNDSOPO EQU   OPNDSO
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
IDCTPER0 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGFLGS EQU   DARGLIST+19
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
ERCATLG  EQU   ERTYPE
EROPER   EQU   ERCNVTAB+1
ERCATLC  EQU   EROPER
ERCATDL  EQU   EROPER
EROSOPER EQU   ERCNVTAB+2
ERDSNM   EQU   ERCNVTAB+12
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
NTRY     EQU   0
NTRYCNT  EQU   NTRY
@NM00032 EQU   NTRY+2
NTRYPLN  EQU   @NM00032
NTRYPAS  EQU   @NM00032+1
NTRYPOS  EQU   @NM00032+9
NTRYFLG  EQU   @NM00032+10
NTRYFUQ  EQU   NTRYFLG
NTRYMLN  EQU   @NM00032+11
NTRYMEM  EQU   @NM00032+12
NTRYLEN  EQU   @NM00032+20
NTRYVAL  EQU   @NM00032+21
CAT      EQU   0
CATPLN   EQU   CAT
CATPAS   EQU   CAT+1
CATFLG   EQU   CAT+10
CATLEN   EQU   CAT+20
CATVAL   EQU   CAT+21
CATDD    EQU   0
INDD     EQU   0
INDDVAL  EQU   INDD+1
PURGE    EQU   0
ERASE    EQU   0
NOERA    EQU   0
CLUST    EQU   0
SPACE    EQU   0
UCAT     EQU   0
MCAT     EQU   0
ALIEN    EQU   0
SCR      EQU   0
NSCR     EQU   0
PGSPC    EQU   0
GDG      EQU   0
ALIAS    EQU   0
AIX      EQU   0
PATH     EQU   0
FRC      EQU   0
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGNAME  EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGNSVS  EQU   CTGEXT
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGOVRID EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGFUNC  EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGAM0   EQU   CTGOPTN3
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGCAT   EQU   CTGPL+8
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGOPTNS EQU   CTGDSORG
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGPSWD  EQU   CTGJSCB
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDRE EQU   CTGFL+3
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
LOCACBPT EQU   0
LOCCATTR EQU   0
GENLIST  EQU   0
GENNUM   EQU   GENLIST
GENENTRY EQU   GENLIST+4
ENTTYP   EQU   GENENTRY
ENTVAL   EQU   GENENTRY+1
DSNAME   EQU   0
VOLSER   EQU   0
WORKSTR  EQU   0
AREALN   EQU   WORKSTR
RETURNLN EQU   WORKSTR+2
ENTLIST  EQU   WORKSTR+4
ENTITEM  EQU   ENTLIST
ENTRYTYP EQU   ENTITEM
ENTRYNM  EQU   ENTITEM+1
TYPEAREA EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
CATLG    EQU   0
DMPTRM   EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSACL0 EQU   0
IDCSADE0 EQU   0
IDCSADQ0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
NOFRC    EQU   0
NOPUR    EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTECT   EQU   GDTTBL+188
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
ENTID    EQU   0
LTYPE    EQU   0
ETYPE    EQU   0
ENTRYID  EQU   0
TYPE     EQU   0
MMNOENT  EQU   0
ALDSNPT  EQU   0
ALVLSPT  EQU   0
@NM00037 EQU   CTGDDNM
CTGPROB  EQU   @NM00037
CTGREASN EQU   CTGPROB+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
FDTVERB  EQU   FDTTBL
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
PAGESPC  EQU   LOCCATTR
@NM00039 EQU   LOCCATTR
CTGFLCHN EQU   CTGFL+12
CTGFLDWA EQU   CTGFL+4
CTGFLDTS EQU   CTGFLDRE
@NM00038 EQU   CTGFLDRE
CTGFLDGC EQU   CTGFL+2
CTGFLDCD EQU   CTGFL+1
@NM00036 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00035 EQU   CTGDSORG
CTGCVOL  EQU   CTGCAT
CTGFVT   EQU   CTGENT
@NM00034 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
CTGNPROF EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
@NM00033 EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGSWAP  EQU   CTGRCATN
CTGGTALL EQU   CTGREL
CTGGENLD EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
INDDLEN  EQU   INDD
CATDDVAL EQU   CATDD+1
CATDDLEN EQU   CATDD
CATMEM   EQU   CAT+12
CATMLN   EQU   CAT+11
CATFUQ   EQU   CATFLG
CATPOS   EQU   CAT+9
@NM00031 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00030 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00029 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
@NM00028 EQU   ERCNVTAB+4
@NM00027 EQU   ERCNVTAB+3
@NM00026 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00025 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDE  EQU   EROPER
@NM00024 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
@NM00023 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00022 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00021 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00020 EQU   DARGFLGS
DARGFULL EQU   DARGFLGS
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGRETP EQU   DARGLIST+4
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00019 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00018 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00017 EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00016 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00015 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00340 EQU   @RC00314
@RC00382 EQU   @RC00381
@RC00376 EQU   @EL00002
@RF00491 EQU   @RC00488
@RF00498 EQU   @RC00475
@RF00551 EQU   @RC00548
@RF00672 EQU   @RC00669
@RC01066 EQU   @RC01051
@PB00010 EQU   @EL00001
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCDL01,(C'PLS2150',0701,78251)
