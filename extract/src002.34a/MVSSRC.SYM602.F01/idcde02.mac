         TITLE '*********** IDCDE02: IDCAMS DEFINE ROUTINE - LEVEL 3 ***
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
        MACRO
        FREEMAIN &MODE,&LV=,&LA=,&A=,&SP=,&MF=I
        MEND
IDCDE02  CSECT ,                                                   0003
@MAINENT DS    0H                                                  0003
         USING *,@15                                               0003
         B     @PROLOG                                             0003
         DC    AL1(16)                                             0003
         DC    C'IDCDE02   77.228'                                 0003
         DROP  @15
@PROLOG  STM   @14,@06,12(@13)                                     0003
         STM   @08,@12,52(@13)                                     0003
         BALR  @12,0                                               0003
@PSTART  LA    @11,4095(,@12)                                      0003
         LA    @10,4095(,@11)                                      0003
         USING @PSTART,@12                                         0003
         USING @PSTART+4095,@11                                    0003
         USING @PSTART+8190,@10                                    0003
         L     @00,@SIZDATD                                        0003
         GETMAIN  R,LV=(0)
         LR    @07,@01                                             0003
         USING @DATD,@07                                           0003
         ST    @13,@SA00001+4                                      0003
         LM    @00,@01,20(@13)                                     0003
         ST    @07,8(,@13)                                         0003
         LR    @13,@07                                             0003
         MVC   @PC00001(12),0(@01)                                 0003
*                                                                  0623
*        OLDERID2 = NEWERID2;                                      0624
         L     @06,@PC00001                                        0624
         L     @06,GDTTR2(,@06)                                    0624
         MVC   @TS00001(95),NEWERID2(@06)                          0624
         MVC   OLDERID2(95,@06),@TS00001                           0624
*        NEWID2 = 'DE30';                                  /*@Y30SSJH*/
*                                                                  0625
         MVC   NEWID2(4,@06),@CC02513                              0625
*        STM(REG10,REG12,BASESAVE);    /* INTERNAL CODEREG   @Y30SSJH*/
*                                                                  0626
         STM   REG10,REG12,BASESAVE                                0626
*        RETURN;                       /*  RETURN TO IDCDE01 @Y30SSJH*/
*                                                                  0627
@EL00001 L     @13,4(,@13)                                         0627
@EF00001 L     @00,@SIZDATD                                        0627
         LR    @01,@07                                             0627
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@06,12(@13)                                     0627
         LM    @08,@12,52(@13)                                     0627
         BR    @14                                                 0627
*        /************************************************************/
*        /* PROCEDURE NAME - NAMEPROC (LEVEL 3 PARAMETER PROCESSOR)  */
*        /*                                                          */
*        /* FUNCTION - NAMEPROC INITIALIZES THE FOLLOWING ITEMS:     */
*        /*            DSETCRDT FPL - DATA SET CREATION DATE FPL     */
*        /*            DSETEXDT FPL - DATA SET EXPIRATION DATE FPL   */
*        /*            GDG ATTRIBUTES - SCRATCH×NOSCRATCH,   @Y30SSJH*/
*        /*              EMPTY×NOEMPTY AND LIMIT ARE INITIALIZED     */
*        /*              IN THE PSEUDO FIELDS WHICH ARE CONTAINED    */
*        /*              IN THE FPLAREA.                     @Y30SSJH*/
*        /*            ALIAS - THE TRUE NAME IS REFERENCED   @Y30SSJH*/
*        /*              DIRECTLY FROM THE ALIAS FVT.        @Y30SSJH*/
*        /*            EXCPEXIT FPL - EXCEPTION EXIT FPL     @Y30SSJH*/
*        /*            OBJECT NAME IN FVT                            */
*        /*            RELATED NAME/PASSWORD IN AIX FVT      @Y30SSJH*/
*        /*            PATHENTRY NAME/PASSWORD IN PATH FVT   @Y30SSJH*/
*        /*                                                          */
*        /*            THE FVT BEING CONSTRUCTED IS ESTABLISHED PRIOR*/
*        /*            TO ENTERING NAMEPROC, THUS THIS PROCEDURE IS  */
*        /*            BLIND TO THE TYPE OF OBJECT BEING INITIALIZED */
*        /*                                                          */
*        /* INPUT -                                                  */
*        /*            DEFSTID - GLOBAL INTERNAL STATUS COMMUNICATOR */
*        /*            CTGFV - THE CURRENT FVT ADDRESSING IS ESTAB-  */
*        /*              LISHED GLOBALLY IN THE LEVEL TWO PROCESSOR  */
*        /*            SEE DEFINITION OF ARGUMENTS OF INVOCATION FOR */
*        /*            EXPLICIT ARGUMENTS                            */
*        /*                                                          */
*        /* OUTPUT -                                                 */
*        /*            DEFSTID - GLOBAL PROCESSING STATUS, SET ON    */
*        /*              ERROR DETECTION:                            */
*        /*                DEFSTID = NOSTORAG                        */
*        /*            DSETCRDT FPL CREATED AND REFERENCED IN FVT    */
*        /*            DSETEXDT FPL CREATED AND REFERENCED IN FVT    */
*        /*            CTGFVENT - INITIALIZED TO ADDRESS OF OBJECT   */
*        /*              NAME.                                       */
*        /*            CTGFVGAT - REFERENCES THE GDG ATTRIBUTES      */
*        /*            CTGFVLMT - REFERENCES THE GDG LIMIT   @Y30SSJH*/
*        /*            CTGFVNAM - REFERENCES THE ALIAS TRUE NAME     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0628
*NAMEPROC:                                                         0628
*    PROCEDURE(ETRY,ETO,EFOR,EGENSC,EGENEM,EGENLM,EALREL,          0628
*        EEEXT,EREL,EMODLTAB)                                      0628
*          OPTIONS(SAVEAREA);                              /*@Y30SSJH*/
NAMEPROC STM   @14,@12,12(@13)                                     0628
         ST    @13,@SA00002+4                                      0628
         LA    @14,@SA00002                                        0628
         ST    @14,8(,@13)                                         0628
         LR    @13,@14                                             0628
         MVC   @PC00002(40),0(@01)                                 0628
*        GEN (ENTRY NAMEPROC );      /* EXTERNAL ENTRY POINT @Y30SSJH*/
         ENTRY NAMEPROC
*        LM(REG10,REG12,BASESAVE);      /* LOAD PROC CODEREG @Y30SSJH*/
         LM    REG10,REG12,BASESAVE                                0630
*                                                                  0631
*        /************************************************************/
*        /*                                                          */
*        /* ARGUMENTS OF INVOCATION                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0631
*        DCL                                                       0631
*          ETRY,                       /* OBJECT NAME                */
*          ETO,                        /* SPECIFIC EXPIRATION DATE   */
*          EFOR,                       /* EXPIRATION IN DAY INCREMENT*/
*          EGENSC,                     /* GDG SCRATCH OPTION @Y30SSJH*/
*          EGENEM,                     /* GDG EMPTY OPTION   @Y30SSJH*/
*          EGENLM,                     /* GDG LIMIT ATTRIBUTE        */
*          EALREL,                     /* ALIAS TRUE NAME    @Y30SSJH*/
*          EEEXT,                      /* EXCEPTION EXIT NAME@Y30SSJH*/
*          EREL,                       /* RELATED OR PATHENTRY     0631
*                                         NAME               @Y30SSJH*/
*          EMODLTAB;                   /* MODEL TABLE                */
*                                                                  0631
*        /************************************************************/
*        /*                                                          */
*        /* STRUCTURE FOR REFERENCING THE POSSIBLE FPLS BUILT        */
*        /* BY NAMEPROC: DSETCRDT FPL ,DSETEXDT FPL AND      @Y30SSJH*/
*        /*              EXCPEXIT FPL                        @Y30SSJH*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0632
*        DCL                                                       0632
*          NFPLPTR  PTR(31);                                       0632
*        DCL                                                       0633
*          1 FPLAREA BASED(NFPLPTR) BDY(WORD),                     0633
*            2 FPLEEXT   CHAR(LENGTH(CTGFL)),              /*@Y30SSJH*/
*            2 *         CHAR(8),                          /*@Y30SSJH*/
*            2 FPLCRDT   CHAR(LENGTH(CTGFL)),                      0633
*            2 *         CHAR(8),                                  0633
*            2 FPLEXPDT  CHAR(LENGTH(CTGFL)),                      0633
*            2 *         CHAR(8),                                  0633
*            2 EXPIREDT  CHAR(8),                                  0633
*              3 *     CHAR(5),                                    0633
*              3 EXPIRE CHAR(3),       /* EXPDAT REFERENCED BY FPL   */
*                4 EXPIRYR FIXED(8) BDY(BYTE),                     0633
*                4 EXPIRDAY FIXED(15) BDY(BYTE),                   0633
*            2 GENDATTR  CHAR(1),      /* GDG ATTRIBUTES     @Y30SSJH*/
*              3 GENDEPTY BIT(1),      /* GDG EMPTY/NOEMPTY  @Y30SSJH*/
*              3 GENDSCR  BIT(1),      /* GDG SCRATCH/NOSCR  @Y30SSJH*/
*              3 *       BIT(6),       /* RESERVED           @Y30SSJH*/
*            2 GENDLIMT  FIXED(8),     /* GDG LIMIT          @Y30SSJH*/
*            2 ALRELLN   FIXED(15),    /* ALIAS NAME LENGTH  @Y30SSJH*/
*            2 ALRELPTR  PTR(31),      /* PTR TO TRUE NAME   @Y30SSJH*/
*            2 ALRELNM   CHAR(44);     /* HOLDER FOR TRUE NAME       */
*                                                                  0633
*        /************************************************************/
*        /*                                                          */
*        /* FIELD NAMES REFERENCED IN THE FPLS                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0634
*        DCL                                                       0634
*          DSETCRDT CHAR(8) INIT('DSETCRDT') STATIC,               0634
*          DSETEXDT CHAR(8) INIT('DSETEXDT') STATIC,               0634
*          EXCPEXIT CHAR(8) INIT('EXCPEXIT') STATIC;       /*@Y30SSJH*/
*                                                                  0634
*        /************************************************************/
*        /*                                                          */
*        /* AREA FOR RETURN OF TIME AND DATE                         */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       0635
*          1 CREATEDT CHAR(8) BDY(WORD),                           0635
*            2 *       CHAR(1),                                    0635
*            2 XUTYEAR FIXED(8),                                   0635
*            2 XUTDAY  FIXED(15);                                  0635
*        DCL                                                       0636
*          TIMEODAY CHAR(8);                                       0636
*                                                                  0636
*        DCL                                                       0637
*          1 CNVTYEAR BIT(16) BDY(BYTE),                           0637
*            2 CVTYEAR BIT(8),                                     0637
*            2 CVTPACK BIT(8);                                     0637
*                                                                  0637
*        DCL                                                       0638
*          SHIFTVAL FIXED(8) CONSTANT(4);                          0638
*                                                                  0638
*        /************************************************************/
*        /*                                                          */
*        /* TEMPORARY WORKAREAS USED IN COMPUTING AND CONVERTING THE */
*        /* EXPIRATION DATE INTO THE 3 BYTE PACKED DECIMAL FORMAT    */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       0639
*          1 DAYTOTAL    CHAR(8) BDY(DWORD),                       0639
*            2 *     CHAR(6),                                      0639
*            2 DAYTOTL FIXED(15);                                  0639
*        DCL                                                       0640
*          NOWYEAR     FIXED(31);      /* CURRENT LOOP YEAR          */
*                                                                  0640
*        DCL                                                       0641
*          DAYPERYR    FIXED(15);      /* DAYS IN CURRENT YEAR       */
*                                                                  0641
*        DCL                                                       0642
*          DATELOOP    CHAR(1);        /* YRDYLOOP CONTROL FLAG      */
*        /************************************************************/
*        /*                                                          */
*        /* ENTRY POINT OF NAMEPROC                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0643
*        OLDERID2 = NEWERID2;                                      0643
         L     @06,@PC00001                                        0643
         L     @15,GDTTR2(,@06)                                    0643
         MVC   @TS00001(95),NEWERID2(@15)                          0643
         MVC   OLDERID2(95,@15),@TS00001                           0643
*        NEWID2 = 'DE31';                                          0644
*                                                                  0644
         MVC   NEWID2(4,@15),@CC02582                              0644
*        /************************************************************/
*        /*                                                          */
*        /* GET DYNAMIC STORAGE FOR ALL FPLS - THIS IS DONE ON FIRST */
*        /* PASS ONLY IN DATA AND INDEX COMPONENTS                   */
*        /*                                                          */
*        /************************************************************/
*        IF NAMEFLG = GO                                           0645
*          THEN                                                    0645
         L     @15,@PC00001+8                                      0645
         CLI   NAMEFLG(@15),X'00'                                  0645
         BNE   @RF00645                                            0645
*            DO;                                                   0646
*                                                                  0646
*            CALL IDCSAGP0 (GDTTBL,                                0647
*                    (LENGTH(FPLAREA)),  /* LENGTH OF AREA           */
*                    NFPLPTR,            /* ADDRESS OF AREA          */
*                    DEGPID,             /* POOL ID                  */
*                    SETZERO);           /* SET AREA TO ZERO         */
*                                                                  0647
         ST    @06,@AL00001                                        0647
         LA    @09,132                                             0647
         ST    @09,@AFTEMPS                                        0647
         LA    @09,@AFTEMPS                                        0647
         ST    @09,@AL00001+4                                      0647
         LA    @09,NFPLPTR                                         0647
         ST    @09,@AL00001+8                                      0647
         LA    @09,DEGPID                                          0647
         ST    @09,@AL00001+12                                     0647
         LA    @09,SETZERO                                         0647
         ST    @09,@AL00001+16                                     0647
         MVI   @AL00001+16,X'80'                                   0647
         L     @15,GDTGPL(,@06)                                    0647
         LA    @01,@AL00001                                        0647
         BALR  @14,@15                                             0647
*            RESPECIFY RTNREG RSTD;                                0648
*            TESTRC = RTNREG;                                      0649
         LR    TESTRC,RTNREG                                       0649
*            RESPECIFY RTNREG UNRSTD;                              0650
*                                                                  0650
*            IF TESTRC ^= 0                                        0651
*              THEN                                                0651
         LTR   TESTRC,TESTRC                                       0651
         BZ    @RF00651                                            0651
*                DO;                                               0652
*                                                                  0652
*                DEFSTID = NOSTORAG;                               0653
         L     @06,@PC00001+8                                      0653
         MVC   DEFSTID(5,@06),@CB02317                             0653
*                RETURN;                                           0654
*                                                                  0654
@EL00002 L     @13,4(,@13)                                         0654
@EF00002 DS    0H                                                  0654
@ER00002 LM    @14,@12,12(@13)                                     0654
         BR    @14                                                 0654
*                END;                                              0655
*                                                                  0655
*            NAMEFLG = STOP;                                       0656
*                                                                  0656
@RF00651 L     @06,@PC00001+8                                      0656
         MVI   NAMEFLG(@06),X'0F'                                  0656
*            /********************************************************/
*            /*                                                      */
*            /* BUILD DSETCRDT FPL - CREATION DATE                   */
*            /*                                                      */
*            /********************************************************/
*            CTGFLPTR = ADDR(FPLCRDT);                             0657
         L     CTGFLPTR,NFPLPTR                                    0657
         LA    CTGFLPTR,FPLCRDT(,CTGFLPTR)                         0657
*            CTGFVCRE = CTGFLPTR;                                  0658
         L     @06,CTGFVPTR(,@06)                                  0658
         ST    CTGFLPTR,CTGFVCRE(,@06)                             0658
*            CTGFLDNO = 1;                                         0659
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0659
*            CTGFLDNM = ADDR(DSETCRDT);                            0660
         LA    @06,DSETCRDT                                        0660
         ST    @06,CTGFLDNM(,CTGFLPTR)                             0660
*            CTGFLNG(1) = 3;                                       0661
         MVC   CTGFLNG(4,CTGFLPTR),@CF00163                        0661
*            CTGFLPT(1) = ADDR(XUTYEAR);                           0662
*                                                                  0662
         LA    @06,XUTYEAR                                         0662
         ST    @06,CTGFLPT(,CTGFLPTR)                              0662
*            CALL IDCSATI0 (GDTTBL,TIMEODAY,CREATEDT);             0663
*                                                                  0663
         L     @06,@PC00001                                        0663
         ST    @06,@AL00001                                        0663
         LA    @15,TIMEODAY                                        0663
         ST    @15,@AL00001+4                                      0663
         LA    @15,CREATEDT                                        0663
         ST    @15,@AL00001+8                                      0663
         MVI   @AL00001+8,X'80'                                    0663
         L     @15,GDTTIM(,@06)                                    0663
         LA    @01,@AL00001                                        0663
         BALR  @14,@15                                             0663
*            END;                                                  0664
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE POINTER TO ENTRY NAME                         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0665
*        IF (ADDR(ETRY)) ^= NULLPTR                                0665
*          THEN DO;                                                0665
@RF00645 L     @06,@PC00002                                        0665
         LTR   @06,@06                                             0665
         BZ    @RF00665                                            0665
*            FDTTBLPT = ADDR(ETRY);                                0667
         LR    FDTTBLPT,@06                                        0667
*            CTGFVENT = ADDR(NAMVAL);                              0668
*                                                                  0668
         L     @06,@PC00001+8                                      0668
         L     @05,CTGFVPTR(,@06)                                  0668
         LA    @15,NAMVAL(,FDTTBLPT)                               0668
         ST    @15,CTGFVENT(,@05)                                  0668
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* GDG NAMES CANNOT EXCEED 35 CHARACTERS.       @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0669
*            IF CTGFVTYP = CTGFVGBS    &                           0669
*               NAMLEN > MAXGDGNM                                  0669
*              THEN                                                0669
         CLI   CTGFVTYP(@05),C'B'                                  0669
         BNE   @RF00669                                            0669
         CLI   NAMLEN(FDTTBLPT),35                                 0669
         BNH   @RF00669                                            0669
*                DO;                                       /*@Y30SSJH*/
*                                                                  0670
*                DEFSTID = GDGNAMER;                       /*@Y30SSJH*/
         MVC   DEFSTID(5,@06),@CB02350                             0671
*                RETURN;                                   /*@Y30SSJH*/
*                                                                  0672
         B     @EL00002                                            0672
*                END;                                      /*@Y30SSJH*/
*                                                                  0673
*            END;                                                  0674
*                                                                  0674
@RF00669 DS    0H                                                  0675
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE THE DATA SET EXPIRATION DATE FPL - THE DATE   */
*        /* MAY BE SPECIFIED IN THREE WAYS:                          */
*        /*  . USER SPECIFICATION OF A SPECIFIC DATE                 */
*        /*  . USER SPECIFICATION OF AN INCREMENT TO CURRENT DATE    */
*        /*  . FROM THE MODEL OBJECT                                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0675
*        /************************************************************/
*        /*                                                          */
*        /* COMPUTE THE EXPIRATION DATE FROM THAT DATE SPECIFIED BY  */
*        /* THE USER - THE USER DATE RESIDES IN THE FDTTBL IN BINARY */
*        /* THE INITIALIZATION ROUTINE CONVERTS THE VALUE TO PACKED  */
*        /* DECIMAL FOR INSERTION INTO THE VSAM CATALOG      @Y30SSJH*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0675
*        IF (ADDR(ETO)) ^= NULLPTR                                 0675
*          THEN                                                    0675
@RF00665 L     @06,@PC00002+4                                      0675
         LTR   @06,@06                                             0675
         BZ    @RF00675                                            0675
*TOLOOP:     DO;                                                   0676
*                                                                  0676
TOLOOP   DS    0H                                                  0677
*            RFY (REG5,REG6) RESTRICTED;                           0677
*            FDTTBLPT = ADDR(ETO);                                 0678
         L     FDTTBLPT,@PC00002+4                                 0678
*            REG6 = NUMBVAL;                                       0679
         L     REG6,NUMBVAL(,FDTTBLPT)                             0679
*            REG5 = ADDR(EXPIREDT);                                0680
*                                                                  0680
         L     REG5,NFPLPTR                                        0680
         LA    REG5,EXPIREDT(,REG5)                                0680
*            GENERATE(CVD REG6,0(0,REG5));                         0681
*                                                                  0681
         CVD REG6,0(0,REG5)
*            RFY (REG5,REG6) UNRESTRICTED;                         0682
*            CTGFVEXP = ADDR(FPLEXPDT);                            0683
*                                                                  0683
         L     @06,@PC00001+8                                      0683
         L     @06,CTGFVPTR(,@06)                                  0683
         L     @01,NFPLPTR                                         0683
         LA    @15,FPLEXPDT(,@01)                                  0683
         ST    @15,CTGFVEXP(,@06)                                  0683
*            END TOLOOP;                                           0684
*                                                                  0684
*          /**********************************************************/
*          /*                                                        */
*          /* COMPUTE THE EXPIRATION DATE VIA THE USER SPECIFIED     */
*          /* INCREMENT - THIS BINARY VALUE IN THE FDTTBL IS ADDED   */
*          /* TO THE CURRENT DAY VALUE FROM UTIME. THE LOOP WILL     */
*          /* ADJUST THE YEAR AND DAY COMPONENTS ALLOWING FOR BOTH   */
*          /* LEAP YEAR AND NON LEAP YEARS                   @Y30SSJH*/
*          /*                                                        */
*          /**********************************************************/
*          ELSE                                                    0685
*                                                                  0685
*            IF (ADDR(EFOR)) ^= NULLPTR                            0685
*              THEN                                                0685
         B     @RC00675                                            0685
@RF00675 L     @06,@PC00002+8                                      0685
         LTR   @06,@06                                             0685
         BZ    @RF00685                                            0685
*FORLOOP:        DO;                                               0686
*                                                                  0686
FORLOOP  DS    0H                                                  0687
*                FDTTBLPT = ADDR(EFOR);                            0687
         L     FDTTBLPT,@PC00002+8                                 0687
*                CTGFVEXP = ADDR(FPLEXPDT);                        0688
*                                                                  0688
         L     @06,@PC00001+8                                      0688
         L     @06,CTGFVPTR(,@06)                                  0688
         L     @05,NFPLPTR                                         0688
         LA    @15,FPLEXPDT(,@05)                                  0688
         ST    @15,CTGFVEXP(,@06)                                  0688
*                /****************************************************/
*                /*                                                  */
*                /* WHEN THE INCREMENT IS GREATER THAN FIVE YEARS    */
*                /* FROM THE CURRENT DATE THE MAXIMUM EXPIRATION DATE*/
*                /* IS USED                                          */
*                /*                                                  */
*                /****************************************************/
*                IF NUMBVAL >= MAXEXPDT                            0689
*                  THEN                                            0689
         L     @06,NUMBVAL(,FDTTBLPT)                              0689
         C     @06,@CF02367                                        0689
         BL    @RF00689                                            0689
*                    EXPIRE   = '99999F'X;                         0690
*                                                                  0690
         MVC   EXPIRE(3,@05),@CB02587                              0690
*                  /**************************************************/
*                  /*                                                */
*                  /* THE INCREMENT IS NOT WITHIN THE MAXIMUM        */
*                  /* DATE RANGE - COMPUTE THE DATE                  */
*                  /*                                                */
*                  /**************************************************/
*                  ELSE                                            0691
*DAYFORLP:           DO;                                           0691
*                                                                  0691
         B     @RC00689                                            0691
@RF00689 DS    0H                                                  0691
DAYFORLP DS    0H                                                  0692
*                    DATELOOP = GO;                                0692
         MVI   DATELOOP,X'00'                                      0692
*                    RFY (REG5) RESTRICTED;                        0693
*                    DAYTOTAL = ''B;                               0694
         XC    DAYTOTAL(8),DAYTOTAL                                0694
*                    DAYTOTL = XUTDAY;                             0695
*                                                                  0695
         LH    @06,XUTDAY                                          0695
         STH   @06,DAYTOTL                                         0695
*                    GEN(CVB 5,DAYTOTAL);                          0696
*                                                                  0696
         CVB 5,DAYTOTAL
*                    REG5 = REG5 + NUMBVAL;                        0697
         AL    REG5,NUMBVAL(,FDTTBLPT)                             0697
*                    NOWYEAR = XUTYEAR;                    /*@OZ05948*/
         SLR   @06,@06                                             0698
         IC    @06,XUTYEAR                                         0698
         LR    NOWYEAR,@06                                         0698
*                    CVTYEAR = XUTYEAR;                    /*@OZ05948*/
         STC   @06,CVTYEAR                                         0699
*                    CVTPACK = 'F0'X;                      /*@OZ05948*/
         MVI   CVTPACK,X'F0'                                       0700
*                    SRL(CNVTYEAR,SHIFTVAL);               /*@OZ05948*/
         SLR   @06,@06                                             0701
         ICM   @06,3,CNVTYEAR                                      0701
         SRL   @06,4                                               0701
         STCM  @06,3,CNVTYEAR                                      0701
*                    CVB(NOWYEAR,CNVTYEAR);                /*@OZ05948*/
*                                                                  0702
         XC    @TS00001(8),@TS00001                                0702
         MVC   @TS00001+6(2),CNVTYEAR                              0702
         CVB   NOWYEAR,@TS00001                                    0702
*                      /**********************************************/
*                      /*                                            */
*                      /* LOOP THRU THE DAY TOTAL ALLOWING FOR LEAP  */
*                      /* YEARS AS THEY OCCUR                        */
*                      /*                                            */
*                      /**********************************************/
*                                                                  0703
*YRDYLOOP:             DO N = 1 TO 6                               0703
*                         WHILE DATELOOP = GO;                     0703
*                                                                  0703
YRDYLOOP LA    N,1                                                 0703
@DL00703 CLI   DATELOOP,X'00'                                      0703
         BNE   @DC00703                                            0703
*                      IF (NOWYEAR // 4) = 0                       0704
*                        THEN                                      0704
         LR    @00,NOWYEAR                                         0704
         SRDA  @00,32                                              0704
         D     @00,@CF00043                                        0704
         LTR   @00,@00                                             0704
         BNZ   @RF00704                                            0704
*                          DAYPERYR = LEAPYEAR;            /*@OZ05948*/
*                                                                  0705
         LA    DAYPERYR,366                                        0705
*                        ELSE                                      0706
*                          DAYPERYR = NOLEAPYR;                    0706
*                                                                  0706
         B     @RC00704                                            0706
@RF00704 LA    DAYPERYR,365                                        0706
*                      IF (REG5 - DAYPERYR) > 0                    0707
*                        THEN                                      0707
@RC00704 LR    @06,REG5                                            0707
         SLR   @06,DAYPERYR                                        0707
         LTR   @06,@06                                             0707
         BNP   @RF00707                                            0707
*                          DO;                                     0708
*                                                                  0708
*                          REG5 = REG5 - DAYPERYR;                 0709
         SLR   REG5,DAYPERYR                                       0709
*                          NOWYEAR = NOWYEAR +1;                   0710
*                                                                  0710
         AL    NOWYEAR,@CF00220                                    0710
*                          END;                                    0711
*                                                                  0711
*                        ELSE                                      0712
*                          DATELOOP = STOP;                        0712
         B     @RC00707                                            0712
@RF00707 MVI   DATELOOP,X'0F'                                      0712
*                      END YRDYLOOP;                               0713
*                                                                  0713
@RC00707 AL    N,@CF00220                                          0713
         C     N,@CF00157                                          0713
         BNH   @DL00703                                            0713
@DC00703 DS    0H                                                  0714
*                    CVD(NOWYEAR,CNVTYEAR);                /*@OZ05948*/
         CVD   NOWYEAR,@TS00001                                    0714
         MVC   CNVTYEAR(2),@TS00001+6                              0714
*                    SLL(CNVTYEAR,SHIFTVAL);               /*@OZ05948*/
         SLR   @06,@06                                             0715
         ICM   @06,3,CNVTYEAR                                      0715
         SLL   @06,4                                               0715
         STCM  @06,3,CNVTYEAR                                      0715
*                    EXPIRYR = CVTYEAR;                    /*@OZ05948*/
         IC    @06,CVTYEAR                                         0716
         L     @04,NFPLPTR                                         0716
         STC   @06,EXPIRYR(,@04)                                   0716
*                    GEN(CVD 5,DAYTOTAL);                          0717
         CVD 5,DAYTOTAL
*                    EXPIRDAY = DAYTOTL;                           0718
*                                                                  0718
         LH    @06,DAYTOTL                                         0718
         L     @04,NFPLPTR                                         0718
         STH   @06,EXPIRDAY(,@04)                                  0718
*                    END DAYFORLP;                                 0719
*                                                                  0719
*                END FORLOOP;                                      0720
*              /******************************************************/
*              /*                                                    */
*              /* TAKE THE EXPIRATION DATE DIRECTLY FROM THE MODEL   */
*              /* OBJECT                                             */
*              /*                                                    */
*              /******************************************************/
*              ELSE                                                0721
*                IF MDLEXDT ^= NULLPTR   &                         0721
*                   (CTGFVTYP = 'C' ×                      /*@Y30SSJH*/
*                    CTGFVTYP = 'G' ×                      /*@Y30SSJH*/
*                    CTGFVTYP = 'R')                       /*@Y30SSJH*/
*                  THEN                                            0721
         B     @RC00685                                            0721
@RF00685 L     @06,@PC00001+8                                      0721
         L     @04,MDLTBLPT(,@06)                                  0721
         L     @04,MDLEXDT(,@04)                                   0721
         LTR   @04,@04                                             0721
         BZ    @RF00721                                            0721
         L     @06,CTGFVPTR(,@06)                                  0721
         CLI   CTGFVTYP(@06),C'C'                                  0721
         BE    @RT00721                                            0721
         CLI   CTGFVTYP(@06),C'G'                                  0721
         BE    @RT00721                                            0721
         CLI   CTGFVTYP(@06),C'R'                                  0721
         BNE   @RF00721                                            0721
@RT00721 DS    0H                                                  0722
*                    DO;                                           0722
*                                                                  0722
*                    EXPIRE = MDLEXPDT;                            0723
         L     @06,NFPLPTR                                         0723
         L     @04,@PC00001+8                                      0723
         L     @01,MDLTBLPT(,@04)                                  0723
         L     @01,MDLEXDT(,@01)                                   0723
         MVC   EXPIRE(3,@06),MDLEXPDT(@01)                         0723
*                    CTGFVEXP = ADDR(FPLEXPDT);                    0724
*                                                                  0724
         L     @04,CTGFVPTR(,@04)                                  0724
         LA    @06,FPLEXPDT(,@06)                                  0724
         ST    @06,CTGFVEXP(,@04)                                  0724
*                    END;                                          0725
*                                                                  0725
*        /************************************************************/
*        /*                                                          */
*        /* BUILD THE DSETEXDT FPL IF THE EXPIRATION DATE HAS BEEN   */
*        /* SET IN ONE OF THE ABOVE THREE SECTIONS                   */
*        /*                                                          */
*        /************************************************************/
*        IF CTGFVEXP ^= NULLPTR                                    0726
*          THEN                                                    0726
@RF00721 DS    0H                                                  0726
@RC00685 DS    0H                                                  0726
@RC00675 L     @06,@PC00001+8                                      0726
         L     @06,CTGFVPTR(,@06)                                  0726
         L     @06,CTGFVEXP(,@06)                                  0726
         LTR   @06,@06                                             0726
         BZ    @RF00726                                            0726
*            DO;                                                   0727
*                                                                  0727
*            CTGFLPTR = CTGFVEXP;                                  0728
         LR    CTGFLPTR,@06                                        0728
*            CTGFLDNO = 1;                                         0729
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0729
*            CTGFLDNM = ADDR(DSETEXDT);                            0730
         LA    @06,DSETEXDT                                        0730
         ST    @06,CTGFLDNM(,CTGFLPTR)                             0730
*            CTGFLNG(1) = 3;                                       0731
         MVC   CTGFLNG(4,CTGFLPTR),@CF00163                        0731
*            CTGFLPT(1) = ADDR(EXPIRE);                            0732
*                                                                  0732
         L     @06,NFPLPTR                                         0732
         LA    @06,EXPIRE(,@06)                                    0732
         ST    @06,CTGFLPT(,CTGFLPTR)                              0732
*            END;                                                  0733
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* ATTRIBUTES INDIGENOUS TO A GDG BASE ARE SET HERE @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*        IF CTGFVTYP = CTGFVGBS                                    0734
*          THEN                                                    0734
@RF00726 L     @06,@PC00001+8                                      0734
         L     @06,CTGFVPTR(,@06)                                  0734
         CLI   CTGFVTYP(@06),C'B'                                  0734
         BNE   @RF00734                                            0734
*            DO;                                           /*@Y30SSJH*/
*                                                                  0735
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* REFERENCE GDG ATTRIBUTES FIELD FROM FVT      @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0736
*            CTGFVGAT = ADDR(GENDATTR);                    /*@Y30SSJH*/
*                                                                  0736
         L     @04,NFPLPTR                                         0736
         LA    @15,GENDATTR(,@04)                                  0736
         ST    @15,CTGFVGAT(,@06)                                  0736
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* TURN FLAG ON INDICATING GDG SCRATCH OPTION   @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0737
*            IF (ADDR(EGENSC)) ^= NULLPTR                          0737
*              THEN                                                0737
         L     @06,@PC00002+12                                     0737
         LTR   @06,@06                                             0737
         BZ    @RF00737                                            0737
*                GENDSCR = ON;                             /*@Y30SSJH*/
*                                                                  0738
         OI    GENDSCR(@04),B'01000000'                            0738
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* SET EMPTY FLAG IN GDG ATTRIBUTES FIELD       @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0739
*            IF (ADDR(EGENEM)) ^= NULLPTR                          0739
*              THEN                                                0739
@RF00737 L     @06,@PC00002+16                                     0739
         LTR   @06,@06                                             0739
         BZ    @RF00739                                            0739
*                GENDEPTY = ON;                            /*@Y30SSJH*/
*                                                                  0740
         L     @06,NFPLPTR                                         0740
         OI    GENDEPTY(@06),B'10000000'                           0740
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* MOVE THE GDG LIMIT VALUE TO THE ONE BYTE     @Y30SSJH*/
*            /* REQUIRED BY VSAM CATALOG MANAGEMENT AND      @Y30SSJH*/
*            /* REFERENCE THAT AREA FROM THE FVT.            @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0741
*            FDTTBLPT = ADDR(EGENLM);                      /*@Y30SSJH*/
@RF00739 L     FDTTBLPT,@PC00002+20                                0741
*            GENDLIMT = NUMBVAL;                           /*@Y30SSJH*/
         L     @06,NFPLPTR                                         0742
         L     @15,NUMBVAL(,FDTTBLPT)                              0742
         STC   @15,GENDLIMT(,@06)                                  0742
*            CTGFVLMT = ADDR(GENDLIMT);                    /*@Y30SSJH*/
*                                                                  0743
         L     @04,@PC00001+8                                      0743
         L     @04,CTGFVPTR(,@04)                                  0743
         LA    @06,GENDLIMT(,@06)                                  0743
         ST    @06,CTGFVLMT(,@04)                                  0743
*            END;                                          /*@Y30SSJH*/
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* PROCESS THE ALIAS RELATE PARAMETER               @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*        IF (ADDR(EALREL)) ^= NULLPTR                              0745
*          THEN                                                    0745
@RF00734 L     @06,@PC00002+24                                     0745
         LTR   @06,@06                                             0745
         BZ    @RF00745                                            0745
*            DO;                                           /*@Y30SSJH*/
*                                                                  0746
*            FDTTBLPT = ADDR(EALREL);  /* SET OVERLAY BASE   @Y30SSJH*/
         LR    FDTTBLPT,@06                                        0747
*            ALRELNM  = NAMVAL;        /* MOVE TRUE NAME     @Y30SSJH*/
*                                                                  0748
         L     @06,NFPLPTR                                         0748
         MVC   ALRELNM(44,@06),NAMVAL(FDTTBLPT)                    0748
*            IF NAMFUQ = ON                                        0749
*              THEN                                                0749
         TM    NAMFUQ(FDTTBLPT),B'10000000'                        0749
         BNO   @RF00749                                            0749
*                /****************************************************/
*                /*                                          @Y30SSJH*/
*                /* THE NAME IS NOT FULLY QUALIFIED, ISSUE   @Y30SSJH*/
*                /* THE UQUAL MACRO TO FULLY QUALIFY THE     @Y30SSJH*/
*                /* TRUE NAME OF THE ALIAS ENTRY.            @Y30SSJH*/
*                /*                                          @Y30SSJH*/
*                /****************************************************/
*QQUAL01:        DO;                                       /*@Y30SSJH*/
*                                                                  0750
QQUAL01  DS    0H                                                  0751
*                QDSNPTR = ADDR(NAMVAL);                   /*@Y30SSJH*/
         LA    @06,NAMVAL(,FDTTBLPT)                               0751
         ST    @06,QDSNPTR                                         0751
*                QDSNLEN = NAMLEN;                         /*@Y30SSJH*/
*                                                                  0752
         SLR   @06,@06                                             0752
         IC    @06,NAMLEN(,FDTTBLPT)                               0752
         STH   @06,QDSNLEN                                         0752
*                IF (ADDR(CAT)) ^= NULLPTR                         0753
*                  THEN                                            0753
         L     @06,@PC00001+4                                      0753
         L     @04,FDTPTR(,@06)                                    0753
         LTR   @04,@04                                             0753
         BZ    @RF00753                                            0753
*                    DO;                                   /*@Y30SSJH*/
*                                                                  0754
*                    QCATPTR = ADDR(CATLGVAL);             /*@Y30SSJH*/
*                                                                  0755
         L     @06,FDTPTR+4(,@06)                                  0755
         LA    @04,CATLGVAL(,@06)                                  0755
         ST    @04,QCATPTR                                         0755
*                    IF CATLGPLN ^= 0                              0756
*                      THEN                                        0756
         CLI   CATLGPLN(@06),0                                     0756
         BE    @RF00756                                            0756
*                        QCATPSWD = ADDR(CATLGPAS);        /*@Y30SSJH*/
*                                                                  0757
         LA    @06,CATLGPAS(,@06)                                  0757
         ST    @06,QCATPSWD                                        0757
*                    END;                                  /*@Y30SSJH*/
*                  ELSE                                            0759
*                    DO;                                   /*@Y30SSJH*/
*                                                                  0759
         B     @RC00753                                            0759
@RF00753 DS    0H                                                  0760
*                    QCATPTR = NULLPTR;                    /*@Y30SSJH*/
         SLR   @06,@06                                             0760
         ST    @06,QCATPTR                                         0760
*                    QCATPSWD = NULLPTR;                   /*@Y30SSJH*/
*                                                                  0761
         ST    @06,QCATPSWD                                        0761
*                    END;                                  /*@Y30SSJH*/
*                                                                  0762
*                CALL IDCSAQL0 (GDTTBL,                            0763
*                  QDSNPTR,            /* PTR TO DSNAME      @Y30SSJH*/
*                  QDSNLEN,            /* LENGTH OF DSNAME   @Y30SSJH*/
*                  QCATPTR,            /* PTR TO CAT NAME    @Y30SSJH*/
*                  QCATPSWD);          /* PTR TO CAT PSWD    @Y30SSJH*/
*                                                                  0763
@RC00753 L     @09,@PC00001                                        0763
         ST    @09,@AL00001                                        0763
         LA    @06,QDSNPTR                                         0763
         ST    @06,@AL00001+4                                      0763
         LA    @06,QDSNLEN                                         0763
         ST    @06,@AL00001+8                                      0763
         LA    @06,QCATPTR                                         0763
         ST    @06,@AL00001+12                                     0763
         LA    @06,QCATPSWD                                        0763
         ST    @06,@AL00001+16                                     0763
         MVI   @AL00001+16,X'80'                                   0763
         L     @15,GDTQAL(,@09)                                    0763
         LA    @01,@AL00001                                        0763
         BALR  @14,@15                                             0763
*                RESPECIFY RTNREG RSTD;                            0764
*                TESTRC = RTNREG;                                  0765
         LR    TESTRC,RTNREG                                       0765
*                RESPECIFY RTNREG UNRSTD;                  /*@Y30SSJH*/
*                                                                  0766
*                IF TESTRC ^= 0                                    0767
*                  THEN                                            0767
         LTR   TESTRC,TESTRC                                       0767
         BZ    @RF00767                                            0767
*                    DO;                                   /*@Y30SSJH*/
*                                                                  0768
*                    DEFSTID = TERMERR;                    /*@Y30SSJH*/
         L     @06,@PC00001+8                                      0769
         MVC   DEFSTID(5,@06),@CB02326                             0769
*                    RETURN;                               /*@Y30SSJH*/
*                                                                  0770
         B     @EL00002                                            0770
*                    END;                                  /*@Y30SSJH*/
*                END QQUAL01;                              /*@Y30SSJH*/
*                                                                  0772
@RF00767 DS    0H                                                  0773
*            CTGFVNAM = ADDR(ALRELNM);                     /*@Y30SSJH*/
*                                                                  0773
@RF00749 L     @06,@PC00001+8                                      0773
         L     @06,CTGFVPTR(,@06)                                  0773
         L     @04,NFPLPTR                                         0773
         LA    @04,ALRELNM(,@04)                                   0773
         ST    @04,CTGFVNAM(,@06)                                  0773
*            END;                                          /*@Y30SSJH*/
*                                                                  0774
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* BUILD EXCPEXIT FPL - EXCEPTION EXIT NAME         @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  0775
*        CTGFLPTR = ADDR(FPLEEXT);                         /*@Y30SSJH*/
@RF00745 L     CTGFLPTR,NFPLPTR                                    0775
*        CTGFLDNO = 1;                                     /*@Y30SSJH*/
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0776
*        CTGFLNG(1) = 8;                                   /*@Y30SSJH*/
         MVC   CTGFLNG(4,CTGFLPTR),@CF00180                        0777
*        CTGFLDNM = ADDR(EXCPEXIT);                        /*@Y30SSJH*/
*                                                                  0778
         LA    @06,EXCPEXIT                                        0778
         ST    @06,CTGFLDNM(,CTGFLPTR)                             0778
*        IF ADDR(EEEXT) ^= NULLPTR                                 0779
*          THEN                                                    0779
         L     @06,@PC00002+28                                     0779
         LTR   @06,@06                                             0779
         BZ    @RF00779                                            0779
*            DO;                                           /*@Y30SSJH*/
*                                                                  0780
*            CTGFVEXT = CTGFLPTR;                          /*@Y30SSJH*/
         L     @02,@PC00001+8                                      0781
         L     @02,CTGFVPTR(,@02)                                  0781
         ST    CTGFLPTR,CTGFVEXT(,@02)                             0781
*            FDTTBLPT = ADDR(EEEXT);                       /*@Y30SSJH*/
         LR    FDTTBLPT,@06                                        0782
*            CTGFLPT(1) = ADDR(CHARVAL);                   /*@Y30SSJH*/
*                                                                  0783
         LA    @06,CHARVAL(,FDTTBLPT)                              0783
         ST    @06,CTGFLPT(,CTGFLPTR)                              0783
*            END;                                          /*@Y30SSJH*/
*                                                                  0784
*          ELSE                                                    0785
*            IF (ADDR(MCAT)) = NULLPTR &                           0785
*               (ADDR(UCAT)) = NULLPTR &                           0785
*               (ADDR(PGSP)) = NULLPTR &                   /*@Y30SSJH*/
*               (ADDR(PATH)) = NULLPTR &                   /*@Y30SSJH*/
*               MDLEEXIT ^=NULLPTR                                 0785
*              THEN                                                0785
         B     @RC00779                                            0785
@RF00779 SLR   @06,@06                                             0785
         L     @04,@PC00001+4                                      0785
         C     @06,FDTPTR+12(,@04)                                 0785
         BNE   @RF00785                                            0785
         C     @06,FDTPTR+16(,@04)                                 0785
         BNE   @RF00785                                            0785
         C     @06,FDTPTR+24(,@04)                                 0785
         BNE   @RF00785                                            0785
         C     @06,FDTPTR+56(,@04)                                 0785
         BNE   @RF00785                                            0785
         L     @04,@PC00001+8                                      0785
         L     @02,MDLTBLPT(,@04)                                  0785
         L     @02,MDLEEXIT(,@02)                                  0785
         CR    @02,@06                                             0785
         BE    @RF00785                                            0785
*                DO;                                       /*@Y30SSJH*/
*                                                                  0786
*                CTGFVEXT = CTGFLPTR;                      /*@Y30SSJH*/
         L     @06,CTGFVPTR(,@04)                                  0787
         ST    CTGFLPTR,CTGFVEXT(,@06)                             0787
*                CTGFLPT(1) = MDLEEXIT;                    /*@Y30SSJH*/
*                                                                  0788
         ST    @02,CTGFLPT(,CTGFLPTR)                              0788
*                END;                                      /*@Y30SSJH*/
*                                                                  0789
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* INITIALIZE POINTER TO RELATED NAME (AIX) OR      @Y30SSJH*/
*        /* PATHENTRY NAME (PATH) AND ASSOCIATED PASSWORD    @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  0790
*        IF (ADDR(EREL)) ^= NULLPTR                                0790
*          THEN                                                    0790
@RF00785 DS    0H                                                  0790
@RC00779 L     @06,@PC00002+32                                     0790
         LTR   @06,@06                                             0790
         BZ    @RF00790                                            0790
*            DO;                                           /*@Y30SSJH*/
*                                                                  0791
*            FDTTBLPT = ADDR(EREL);                        /*@Y30SSJH*/
         LR    FDTTBLPT,@06                                        0792
*            CTGFVNAM = ADDR(NAMVAL);                      /*@Y30SSJH*/
*                                                                  0793
         L     @06,@PC00001+8                                      0793
         L     @06,CTGFVPTR(,@06)                                  0793
         LA    @15,NAMVAL(,FDTTBLPT)                               0793
         ST    @15,CTGFVNAM(,@06)                                  0793
*            IF NAMPLN ^= 0                                        0794
*              THEN                                                0794
         CLI   NAMPLN(FDTTBLPT),0                                  0794
         BE    @RF00794                                            0794
*                CTGFVPWD = ADDR(NAMPAS);                  /*@Y30SSJH*/
*                                                                  0795
         LA    @15,NAMPAS(,FDTTBLPT)                               0795
         ST    @15,CTGFVPWD(,@06)                                  0795
*            END;                                          /*@Y30SSJH*/
*                                                                  0796
*        /************************************************************/
*        /*                                                          */
*        /* THIS COMPLETES NAMEPROC PROCESSING RETURN TO CALLER      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0797
*        RETURN;                                                   0797
*                                                                  0797
         B     @EL00002                                            0797
*END NAMEPROC;                                                     0798
*                                                                  0798
         B     @EL00002                                            0798
*ALLCPROC:                                                         0799
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME - ALLCPROC (LEVEL 3 PARAMETER PROCESSOR)          */
*/*                                                                  */
*/* FUNCTION - ALLCPROC INITIALIZES THE FOLLOWING ITEMS:             */
*/*      . DSATTR FPL - DATA SET ATTRIBUTES FPL                      */
*/*          UNIQUE/SUBALLOCATE                              @Y30SSJH*/
*/*          SPEED/RECOVERY                                  @Y30SSJH*/
*/*          RECOVERABLE/NOTRECOVERABLE                      @Y30SSJH*/
*/*      . LRECL FPL  - LOGICAL RECORD SIZE FPL                      */
*/*      . BUFSIZE FPL - BUFFERSIZE FPL                              */
*/*      . SPACPARM FPL - SPACE PARAMETER COMBINATION FPL            */
*/*      . DEVTYP FPL - DEVICETYPE FPL                               */
*/*      . AMDSBCAT FIELD IS INITIALIZED BUT NOT CREATED IN ALLCPROC */
*/*        THE FIELDS INITIALIZED ARE:                               */
*/*            AMDPCTCA   - CONTROL AREA FREESPACE                   */
*/*            AMDPCTCI   - CONTROL INTERVAL FREESPACE               */
*/*            AMDLRECL   - MAXIMUM RECORD SIZE                      */
*/*            AMDWCK     - WRITECHECK/NOWRITECHECK OPTION           */
*/*            AMDORDR    - ORDERED/UNORDERED OPTION                 */
*/*            AMDCINV    - CONTROL INTERVAL SIZE                    */
*/*      . CTGFVIND - THE JCL NAME FOR VOLUMES OF THIS OBJECT(IN FVT)*/
*/*      . VOLSER LIST - LIST OF VOLUME SERIAL NUMBERS               */
*/*                                                                  */
*/*      ALLCPROC RECEIVES ATTRIBUTES FROM TWO SOURCES: EXPLICIT     */
*/*      ARGUMENTS DERIVED FROM THE FDTTBL AND FROM AMDTBL ( THE     */
*/*      MODEL TABLE). EXPLICIT ATTRIBUTES OVERRIDE THE MODEL        */
*/*      ATTRIBUTES.                                                 */
*/*                                                                  */
*/*      . DEFSTID - GLOBAL INTERNAL STATUS COMMUNICATOR             */
*/*      . CTGFV   - THE CURRENT FVT IS ESTABLISHED EXTERNALLY BY    */
*/*        LEVEL TWO PROCESSOR                                       */
*/*      . SEE DEFINITION OF ARGUMENTS OF INVOCATION                 */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      . DEFSTID - GLOBAL PROCESSING STATUS, SET ON ERROR DETECTION*/
*/*                  DEFSTID = NOSTORAG                              */
*/*      . CREATION AND/OR INITIALIZATION OF ITEMS MENTIONED ABOVE   */
*/*                                                                  */
*/********************************************************************/
*        PROCEDURE(AINDDN,AVLSR,AORDR,AUORD,ASUBA,AUNIQ,   /*@Y30SSJH*/
*          ATRKS,ACYLD,ARCDS,APTRK,APCYL,APRCD,ASTRK,ASCYL,        0799
*          ASRCD,ACAND,ARSIZ,AARSZ,AMRSZ,AWCHK,ANWCK,ASPED,ARECV,AFSPC,
*          ACIFS,ACAFS,ABFSZ,ACINV,ADEVICE,AAFSNO,         /*@Y30SSJH*/
*          ARVBL,ANRVL,ASTAGE,ABINDD,ACYLFF,ANSTGW,        /*@Y30SSJH*/
*          ASTGWW,AMDTBL)                                          0799
*          OPTIONS(SAVEAREA);                              /*@Y30SSJH*/
ALLCPROC STM   @14,@12,12(@13)                                     0799
         ST    @13,@SA00003+4                                      0799
         LA    @14,@SA00003                                        0799
         ST    @14,8(,@13)                                         0799
         LR    @13,@14                                             0799
         MVC   @PC00003(152),0(@01)                                0799
*        GEN (ENTRY ALLCPROC);     /* EXTERNAL ENTRY POINT   @Y30SSJH*/
         ENTRY ALLCPROC
*        LM(REG10,REG12,BASESAVE);      /* LOAD PROC CODEREG @Y30SSJH*/
         LM    REG10,REG12,BASESAVE                                0801
*        /************************************************************/
*        /*                                                          */
*        /* ARGUMENTS OF INVOCATION                                  */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       0802
*          (AINDDN,                    /* JCL STATEMENT NAME @Y30SSJH*/
*           AVLSR,                     /* ALLOCATION VOLUMES         */
*           AORDR,                     /* ALLOCATE VOLS IN ORDER     */
*           AUORD,                     /* VOLUMES NOT ALLOC IN ORDER */
*           ASUBA,                     /* SUBALLOCATE SPACE          */
*           AUNIQ,                     /* UNIQUE SPACE               */
*           ATRKS,                     /* ALLOCATION IN TRACKS       */
*           ACYLD,                     /* ALLOCATION IN CYLINDERS    */
*           ARCDS,                     /* ALLOCATION IN RECORDS      */
*           APTRK,                     /* PRIMARY TRACK ALLOCATION   */
*           APCYL,                     /* PRIMARY CYLINDER ALLOCATION*/
*           APRCD,                     /* PRIMARY RECORD ALLOCATION  */
*           ASTRK,                     /* SECONDARY TRACK ALLOCATION */
*           ASCYL,                     /* SECONDARY CYL ALLOCATION   */
*           ASRCD,                     /* SECONDARY RECD ALLOCATION  */
*           ACAND,                     /* VOLUME IS CANDIDATE        */
*           ARSIZ,                     /* RECORD SIZE INDICATOR      */
*           AARSZ,                     /* AVERAGE RECORD SIZE        */
*           AMRSZ,                     /* MAXIMUM RECORD SIZE        */
*           AWCHK,                     /* WRITECHECK OPTION          */
*           ANWCK,                     /* NOWRITECHECK OPTION        */
*           ADEVICE,                   /* DEVICETYPES                */
*           AAFSNO,                    /* FILE SEQUENCE NUMBER       */
*           ASPED,                     /* SPEED OPTION               */
*           ARECV,                     /* RECOVERY OPTION            */
*           AFSPC,                     /* FREESPACE INDICATOR        */
*           ACIFS,                     /* CONTROL INTERVAL FREESPACE */
*           ACAFS,                     /* CONTROL AREA FREESPACE     */
*           ABFSZ,                     /* BUFFERSIZE                 */
*           ACINV,                     /* CONTROLINTERVAL SIZE       */
*           ARVBL,                     /* RECOVERABLE        @Y30SSJH*/
*           ANRVL,                     /* NOTRECOVERABLE     @Y30SSJH*/
*           ASTAGE,                    /* SS/1 STAGE         @Y30SSJH*/
*           ABINDD,                    /* SS/1 BIND          @Y30SSJH*/
*           ACYLFF,                    /* SS/1 CYLINDERFAULT @Y30SSJH*/
*           ANSTGW,                    /* SS/1 NODESTAGEWAIT @Y30SSJH*/
*           ASTGWW,                    /* SS/1 DESTAGEWAIT   @Y30SSJH*/
*           AMDLTABL);                 /* MODELTABLE                 */
*                                                                  0803
*        /************************************************************/
*        /*                                                          */
*        /* OVERLAY OF FPLS BUILT BY ALLOCPROC PLUS SPACPARM AND     */
*        /* DATA SET ATTRIBUTES AREA                         @Y30SSJH*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0803
*        DCL                                                       0803
*          1 AFPLAREA  BASED(FPLSTPTR) BDY(WORD),                  0803
*            2 ADSATRFL  CHAR(LENGTH(CTGFL)),                      0803
*            2 *     CHAR(8),                                      0803
*            2 ALRECLFL  CHAR(LENGTH(CTGFL)),                      0803
*            2 *         CHAR(8),                                  0803
*            2 ABFSZFL   CHAR(LENGTH(CTGFL)),                      0803
*            2 *         CHAR(8),                                  0803
*            2 ASPACFL   CHAR(LENGTH(CTGFL)),                      0803
*            2 *         CHAR(8),                                  0803
*            2 ADEVTFL CHAR(LENGTH(CTGFL)),                        0803
*            2 *       CHAR(8),                                    0803
*            2 AFSEQFL  CHAR(LENGTH(CTGFL)),                       0803
*            2 *        CHAR(8),                                   0803
*                                                                  0803
*            2 DSETATTR  CHAR(2),      /* DATA SET ATTRIBUTES        */
*              3 *      CHAR(1),                                   0803
*                4 AASPEED   BIT(1),                               0803
*                4 AAUNIQ    BIT(1),                               0803
*                4 AARUS     BIT(1),                       /*@Y30SSJH*/
*                4 AAERASE   BIT(1),                               0803
*                4 AARVBL    BIT(1),                       /*@Y30SSJH*/
*                4 AAINHIB   BIT(1),                               0803
*                4 *         BIT(1),                               0803
*                4 AATKOVFL  BIT(1),                               0803
*              3 *      CHAR(1),                                   0803
*                4 *         BIT(2),                               0803
*                4 SHRDEFLT  BIT(1),                               0803
*                                                                  0803
*            2 SPACPFLD CHAR(7)BDY(BYTE),   /* SPACEPARM COMBINATION */
*              3 PRIMESPC  PTR(24) BDY(BYTE),                      0803
*              3 SCONDSPC  PTR(24) BDY(BYTE),                      0803
*              3 ASPACOPT  CHAR(1);                                0803
*                                                                  0803
*        /************************************************************/
*        /*                                                          */
*        /* FIELD NAMES OF FPLS BUILT BY ALLCPROC                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0804
*        DCL                                                       0804
*           ALCFLDNM(6) CHAR(8) INIT('DSATTR','LRECL','BUFSIZE',   0804
*            'SPACPARM','DEVTYP','FILESEQ');                       0804
*                                                                  0804
*        /************************************************************/
*        /*                                                          */
*        /* CONTROL FLAG USED IN CONSTRUCTING VOLUMELIST             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0805
*        DCL                                                       0805
*          VOLEXFLG CHAR(1);                                       0805
*                                                                  0805
*        /************************************************************/
*        /*                                                          */
*        /* LENGTH OF GETPOOL AREA                                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0806
*        DCL                                                       0806
*          GPOOLPT PTR(31),                                        0806
*          GPOOLEN FIXED(31);                                      0806
*                                                                  0806
*        DCL                                                       0807
*          VOLSTCNT FIXED(31);                                     0807
*                                                                  0807
*        /************************************************************/
*        /*                                                          */
*        /* OVERLAY OF FILESEQUENCE NUMBER LIAT                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0808
*        DCL                                                       0808
*          1 FSNFIELD BASED BDY(WORD),                             0808
*            2 FSNARRAY(255) BDY(HWORD),                           0808
*              3 FSNUMBER FIXED(15);                               0808
*                                                                  0808
*        /************************************************************/
*        /*                                                          */
*        /* OVERLAY OF DEVICE TYPES LIST REFERENCED BY DEVT FPL      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0809
*        DCL                                                       0809
*          DEVICLST(*) CHAR(12) BASED(GPOOLPT);                    0809
*                                                                  0809
*        /************************************************************/
*        /*                                                          */
*        /* POINTER USED IN PROCESSING UNIQUE ATTRIBUTE              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0810
*        DCL TEMPPTR PTR(31);                                      0810
*        /************************************************************/
*        /*                                                          */
*        /* ENTRY TO ALLCPROC                                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0811
*        OLDERID2 = NEWERID2;                                      0811
         L     @08,@PC00001                                        0811
         L     @06,GDTTR2(,@08)                                    0811
         MVC   @TS00001(95),NEWERID2(@06)                          0811
         MVC   OLDERID2(95,@06),@TS00001                           0811
*        NEWID2 = 'DE32';                                          0812
*                                                                  0812
         MVC   NEWID2(4,@06),@CC02727                              0812
*        /************************************************************/
*        /*                                                          */
*        /* GET DYNAMIC STORAGE FOR FPLS BUILT BY ALLCPROC AND INIT- */
*        /* IALIZE.  THIS IS DONE ON FIRST ALLCPROC PASS OF EACH     */
*        /* APPLICABLE OBJECT.                                       */
*        /*                                                          */
*        /***********************************************************/
*                                                                  0813
*        IF ALLCFLAG = GO                                          0813
*          THEN                                                    0813
         L     @06,@PC00001+8                                      0813
         CLI   ALLCFLAG(@06),X'00'                                 0813
         BNE   @RF00813                                            0813
*            DO;                                                   0814
*                                                                  0814
*            CALL IDCSAGP0 (GDTTBL,                                0815
*                    (LENGTH(AFPLAREA) ),                          0815
*                    FPLSTPTR,DEGPID,SETZERO);                     0815
*                                                                  0815
         L     @06,@PC00001                                        0815
         ST    @06,@AL00001                                        0815
         LA    @15,153                                             0815
         ST    @15,@AFTEMPS+4                                      0815
         LA    @15,@AFTEMPS+4                                      0815
         ST    @15,@AL00001+4                                      0815
         LA    @15,FPLSTPTR                                        0815
         ST    @15,@AL00001+8                                      0815
         LA    @15,DEGPID                                          0815
         ST    @15,@AL00001+12                                     0815
         LA    @15,SETZERO                                         0815
         ST    @15,@AL00001+16                                     0815
         MVI   @AL00001+16,X'80'                                   0815
         L     @15,GDTGPL(,@06)                                    0815
         LA    @01,@AL00001                                        0815
         BALR  @14,@15                                             0815
*            ALLCFLAG = STOP;                                      0816
         L     @06,@PC00001+8                                      0816
         MVI   ALLCFLAG(@06),X'0F'                                 0816
*            RESPECIFY RTNREG RSTD;                                0817
*            TESTRC = RTNREG;                                      0818
         LR    TESTRC,RTNREG                                       0818
*            RESPECIFY RTNREG UNRSTD;                              0819
*            IF TESTRC ^= 0                                        0820
*              THEN                                                0820
         LTR   TESTRC,TESTRC                                       0820
         BZ    @RF00820                                            0820
*                DO;                                               0821
*                                                                  0821
*                DEFSTID = NOSTORAG;                               0822
         MVC   DEFSTID(5,@06),@CB02317                             0822
*                RETURN;                                           0823
*                                                                  0823
@EL00003 L     @13,4(,@13)                                         0823
@EF00003 DS    0H                                                  0823
@ER00003 LM    @14,@12,12(@13)                                     0823
         BR    @14                                                 0823
*                END;                                              0824
*                                                                  0824
*            /********************************************************/
*            /*                                                      */
*            /* INITIALIZE FPLS - FIELD NAME AND DATA/ADDR PAIR #    */
*            /*                                                      */
*            /********************************************************/
*                                                                  0825
*            CTGFLPTR = FPLSTPTR;                                  0825
@RF00820 L     CTGFLPTR,FPLSTPTR                                   0825
*            DO N = 1 TO 6;                                        0826
*                                                                  0826
         LA    N,1                                                 0826
@DL00826 DS    0H                                                  0827
*            CTGFLDNO = 1;                                         0827
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            0827
*            CTGFLDNM = ADDR(ALCFLDNM(N));                         0828
         LR    @06,N                                               0828
         SLA   @06,3                                               0828
         LA    @06,ALCFLDNM-8(@06)                                 0828
         ST    @06,CTGFLDNM(,CTGFLPTR)                             0828
*            ARITHX = (LENGTH(CTGFL) + 8);                         0829
         LA    ARITHX,24                                           0829
*            CTGFLPTR = CTGFLPTR + ARITHX;                         0830
*                                                                  0830
         ALR   CTGFLPTR,ARITHX                                     0830
*            END;                                                  0831
*                                                                  0831
         AL    N,@CF00220                                          0831
         C     N,@CF00157                                          0831
         BNH   @DL00826                                            0831
*            /********************************************************/
*            /*                                              @Z40WSJH*/
*            /* SET UNIQUE DEFAULT FOR PAGESPACE DATA SETS   @Z40WSJH*/
*            /*                                              @Z40WSJH*/
*            /********************************************************/
*            IF (ADDR(PGSP)) ^= NULLPTR                            0832
*              THEN                                                0832
         L     @08,@PC00001+4                                      0832
         L     @08,FDTPTR+24(,@08)                                 0832
         LTR   @08,@08                                             0832
         BZ    @RF00832                                            0832
*                AAUNIQ = ON;                              /*@Z40WSJH*/
*                                                                  0833
         L     @08,FPLSTPTR                                        0833
         OI    AAUNIQ(@08),B'01000000'                             0833
*            /********************************************************/
*            /*                                                      */
*            /* SET SHARE OPTIONS DEFAULT                            */
*            /*                                                      */
*            /********************************************************/
*                                                                  0834
*            SHRDEFLT = ON;                                        0834
*                                                                  0834
@RF00832 L     @08,FPLSTPTR                                        0834
         OI    SHRDEFLT(@08),B'00100000'                           0834
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* INITIALIZE FVT POINTER TO LRECL FPL -        @Y30SSJH*/
*            /* IF THE RECORDSIZE PARAMETER IS NOT           @Y30SSJH*/
*            /* EXPLICITLY SPECIFIED OR MODELED, A DEFAULT   @Y30SSJH*/
*            /* VALUE WILL BE SET UP IN THE INTGDSET         @Y30SSJH*/
*            /* PROCESSING                                   @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0835
*            IF (ADDR(MCAT)) = NULLPTR &                           0835
*               (ADDR(UCAT)) = NULLPTR &                           0835
*               (ADDR(PGSP)) = NULLPTR &                           0835
*               CTGFVTYP = 'D'                                     0835
*              THEN                                                0835
         SLR   @06,@06                                             0835
         L     @15,@PC00001+4                                      0835
         C     @06,FDTPTR+12(,@15)                                 0835
         BNE   @RF00835                                            0835
         C     @06,FDTPTR+16(,@15)                                 0835
         BNE   @RF00835                                            0835
         C     @06,FDTPTR+24(,@15)                                 0835
         BNE   @RF00835                                            0835
         L     @06,@PC00001+8                                      0835
         L     @06,CTGFVPTR(,@06)                                  0835
         CLI   CTGFVTYP(@06),C'D'                                  0835
         BNE   @RF00835                                            0835
*                DO;                                       /*@Y30SSJH*/
*                                                                  0836
*                CTGFLPTR = ADDR(ALRECLFL);                /*@Y30SSJH*/
         LA    CTGFLPTR,ALRECLFL(,@08)                             0837
*                CTGFVLRS = CTGFLPTR;                      /*@Y30SSJH*/
*                                                                  0838
         ST    CTGFLPTR,CTGFVLRS(,@06)                             0838
*                END;                                      /*@Y30SSJH*/
*                                                                  0839
*            END;                                                  0840
@RF00835 DS    0H                                                  0841
*        /************************************************************/
*        /*                                                          */
*        /* SET CONTROLINTERVAL AND CONTROLAREA FREESPACE VALUES IN  */
*        /* AMDSB, UNLESS NONINDEXED OR NUMBERED WAS         @OZ24797*/
*        /* SPECIFIED.                                       @OZ24797*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0841
*        IF ADDR(CNIDX) ^= NULLPTR ×                       /*@OZ24797*/
*           ADDR(CNUMD) ^= NULLPTR                         /*@OZ24797*/
*          THEN;                                           /*@OZ24797*/
@RF00813 SLR   @08,@08                                             0841
         L     @06,@PC00001+4                                      0841
         C     @08,FDTPTR+96(,@06)                                 0841
         BNE   @RT00841                                            0841
         C     @08,FDTPTR+1056(,@06)                               0841
         BNE   @RT00841                                            0841
*          ELSE                                            /*@OZ24797*/
*                                                                  0843
*        IF (ADDR(AFSPC)) ^= NULLPTR   /* FROM FDTTBL                */
*          THEN                                                    0843
         SLR   @08,@08                                             0843
         L     @06,@PC00003+92                                     0843
         CR    @06,@08                                             0843
         BE    @RF00843                                            0843
*            DO;                                                   0844
*                                                                  0844
*            FDTTBLPT = ADDR(ACIFS);                               0845
         L     FDTTBLPT,@PC00003+96                                0845
*            AMDPCTCI = NUMBVAL;                                   0846
*                                                                  0846
         L     @06,@PC00001+8                                      0846
         L     @06,DSBCATPT(,@06)                                  0846
         L     @15,NUMBVAL(,FDTTBLPT)                              0846
         STC   @15,AMDPCTCI(,@06)                                  0846
*            IF (ADDR(ACAFS)) ^= NULLPTR                           0847
*              THEN                                                0847
         L     @15,@PC00003+100                                    0847
         CR    @15,@08                                             0847
         BE    @RF00847                                            0847
*                DO;                                               0848
*                                                                  0848
*                FDTTBLPT = ADDR(ACAFS);                           0849
         LR    FDTTBLPT,@15                                        0849
*                AMDPCTCA = NUMBVAL;                               0850
*                                                                  0850
         L     @08,NUMBVAL(,FDTTBLPT)                              0850
         STC   @08,AMDPCTCA(,@06)                                  0850
*                END;                                              0851
*                                                                  0851
*            END;                                                  0852
*                                                                  0852
*          ELSE                                                    0853
*            IF MDLAMDSB ^= NULLPTR &  /* SET VALUES FROM MODEL      */
*              CTGTYPE ^= CTGTUCAT                                 0853
*              THEN                                                0853
         B     @RC00843                                            0853
@RF00843 L     @08,@PC00001+8                                      0853
         L     @06,MDLTBLPT(,@08)                                  0853
         L     @06,MDLAMDSB(,@06)                                  0853
         LTR   @06,@06                                             0853
         BZ    @RF00853                                            0853
         L     @01,CTGPLPTR(,@08)                                  0853
         CLI   CTGTYPE(@01),C'U'                                   0853
         BE    @RF00853                                            0853
*                DO;                                               0854
*                                                                  0854
*                AMDPCTCA = MDLAMDSB -> AMDPCTCA;                  0855
         L     @08,DSBCATPT(,@08)                                  0855
         IC    @15,AMDPCTCA(,@06)                                  0855
         STC   @15,AMDPCTCA(,@08)                                  0855
*                AMDPCTCI = MDLAMDSB -> AMDPCTCI;                  0856
*                                                                  0856
         IC    @15,AMDPCTCI(,@06)                                  0856
         STC   @15,AMDPCTCI(,@08)                                  0856
*                END;                                              0857
*        /************************************************************/
*        /*                                                          */
*        /* SET LRECL VALUE IN FPL AND MAXRECL IN AMDSB              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0858
*        IF (ADDR(ARSIZ)) ^= NULLPTR   /* TAKE VALUES FROM FDTTBL    */
*          THEN                                                    0858
@RF00853 DS    0H                                                  0858
@RC00843 DS    0H                                                  0858
@RT00841 L     @08,@PC00003+64                                     0858
         LTR   @08,@08                                             0858
         BZ    @RF00858                                            0858
*            DO;                                                   0859
*                                                                  0859
*            /********************************************************/
*            /*                                                      */
*            /* INSURE THAT THE MAXIMUM RECORD SIZE IS NOT LESS THAN */
*            /* THE AVERAGE RECORDSIZE - WHEN THE AVERAGE EXCEEDS MAX*/
*            /* A TERMINAL ERROR CONDITION IS SET AND PROCESSING IS  */
*            /* TERMINATED                                           */
*            /*                                                      */
*            /********************************************************/
*                                                                  0860
*            IF AMRSZ < AARSZ                                      0860
*              THEN                                                0860
         L     @08,@PC00003+72                                     0860
         L     @06,@PC00003+68                                     0860
         L     @08,AMRSZ(,@08)                                     0860
         C     @08,AARSZ(,@06)                                     0860
         BNL   @RF00860                                            0860
*                DO;                                               0861
*                                                                  0861
*                DEFSTID = AVMXERR;                                0862
         L     @06,@PC00001+8                                      0862
         MVC   DEFSTID(5,@06),@CB02335                             0862
*                RETURN;                                           0863
*                                                                  0863
         B     @EL00003                                            0863
*                END;                                              0864
*                                                                  0864
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* INSURE THAT AVERAGE AND MAXIMUM RECORDSIZE   @Y30SSJH*/
*            /* ARE EQUAL FOR A RELATIVE RECORD DATA SET     @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0865
*            IF CTGFVTYP = 'D'                                     0865
*              THEN                                                0865
@RF00860 L     @08,@PC00001+8                                      0865
         L     @06,CTGFVPTR(,@08)                                  0865
         CLI   CTGFVTYP(@06),C'D'                                  0865
         BNE   @RF00865                                            0865
*                IF AMDRRDS = ON                                   0866
*                  THEN                                            0866
         L     @06,DSBCATPT(,@08)                                  0866
         TM    AMDRRDS(@06),B'00000010'                            0866
         BNO   @RF00866                                            0866
*                    IF AMRSZ ^= AARSZ                             0867
*                      THEN                                        0867
         L     @06,@PC00003+72                                     0867
         L     @04,@PC00003+68                                     0867
         CLC   AMRSZ(4,@06),AARSZ(@04)                             0867
         BE    @RF00867                                            0867
*                        DO;                               /*@Y30SSJH*/
*                                                                  0868
*                        DEFSTID = AVMAXUNQ;               /*@Y30SSJH*/
         MVC   DEFSTID(5,@08),@CB02338                             0869
*                        RETURN;                           /*@Y30SSJH*/
*                                                                  0870
         B     @EL00003                                            0870
*                        END;                              /*@Y30SSJH*/
*                                                                  0871
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* SET VALUES IN LRECL FPL AND AMDSB            @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0872
*            CTGFLPTR = ADDR(ALRECLFL); /*INIT OF LRECL FPL          */
@RF00867 DS    0H                                                  0872
@RF00866 DS    0H                                                  0872
@RF00865 L     CTGFLPTR,FPLSTPTR                                   0872
         LA    CTGFLPTR,ALRECLFL(,CTGFLPTR)                        0872
*            CTGFVLRS = CTGFLPTR;                                  0873
         L     @08,@PC00001+8                                      0873
         L     @06,CTGFVPTR(,@08)                                  0873
         ST    CTGFLPTR,CTGFVLRS(,@06)                             0873
*            CTGFLNG(1) = 4;                                       0874
         MVC   CTGFLNG(4,CTGFLPTR),@CF00043                        0874
*            FDTTBLPT = ADDR(AARSZ);                               0875
         L     FDTTBLPT,@PC00003+68                                0875
*            CTGFLPT(1) = ADDR(NUMBVAL);                           0876
*                                                                  0876
         ST    FDTTBLPT,CTGFLPT(,CTGFLPTR)                         0876
*            /* INIT MAXRECL VALUE IN AMDSB                          */
*            IF CTGFVTYP = CTGFVDTA                                0877
*              THEN                                                0877
         CLI   CTGFVTYP(@06),C'D'                                  0877
         BNE   @RF00877                                            0877
*                DO;                                               0878
*                                                                  0878
*                FDTTBLPT = ADDR(AMRSZ);                           0879
         L     FDTTBLPT,@PC00003+72                                0879
*                AMDLRECL = NUMBVAL;                               0880
*                                                                  0880
         L     @08,DSBCATPT(,@08)                                  0880
         L     @06,NUMBVAL(,FDTTBLPT)                              0880
         ST    @06,AMDLRECL(,@08)                                  0880
*                END;                                              0881
*                                                                  0881
*            END;                                                  0882
*                                                                  0882
*          /**********************************************************/
*          /*                                                        */
*          /* MODEL LRECL AND MAXRECL VALUES                         */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0883
*          ELSE                                                    0883
*            DO;                                                   0883
*                                                                  0883
         B     @RC00858                                            0883
@RF00858 DS    0H                                                  0884
*            IF MDLLRECL ^= NULLPTR &  /* INIT LRECL FPL FROM MODEL  */
*               (CTGTYPE ^= CTGTUCAT  &                            0884
*                CTGTYPE ^= CTGTPGSP  )                            0884
*              THEN                                                0884
         SLR   @08,@08                                             0884
         L     @06,@PC00001+8                                      0884
         L     @15,MDLTBLPT(,@06)                                  0884
         L     @14,MDLLRECL(,@15)                                  0884
         CR    @14,@08                                             0884
         BE    @RF00884                                            0884
         L     @03,CTGPLPTR(,@06)                                  0884
         CLI   CTGTYPE(@03),C'U'                                   0884
         BE    @RF00884                                            0884
         CLI   CTGTYPE(@03),C'P'                                   0884
         BE    @RF00884                                            0884
*                DO;                                               0885
*                                                                  0885
*                CTGFLPTR = ADDR(ALRECLFL);                        0886
         L     CTGFLPTR,FPLSTPTR                                   0886
         LA    CTGFLPTR,ALRECLFL(,CTGFLPTR)                        0886
*                CTGFVLRS = CTGFLPTR;                              0887
         L     @02,CTGFVPTR(,@06)                                  0887
         ST    CTGFLPTR,CTGFVLRS(,@02)                             0887
*                CTGFLNG(1) = 4;                                   0888
         MVC   CTGFLNG(4,CTGFLPTR),@CF00043                        0888
*                CTGFLPT(1) = MDLLRECL;                            0889
*                                                                  0889
         ST    @14,CTGFLPT(,CTGFLPTR)                              0889
*                IF MDLAMDSB ^= NULLPTR  /* MAXRECL FROM MODEL AMDSB*/
*                  THEN                                            0890
         L     @15,MDLAMDSB(,@15)                                  0890
         CR    @15,@08                                             0890
         BE    @RF00890                                            0890
*                    AMDLRECL = MDLAMDSB -> AMDLRECL;              0891
*                                                                  0891
         L     @08,DSBCATPT(,@06)                                  0891
         L     @06,AMDLRECL(,@15)                                  0891
         ST    @06,AMDLRECL(,@08)                                  0891
*                END;                                              0892
*                                                                  0892
@RF00890 DS    0H                                                  0893
*            END;                                                  0893
@RF00884 DS    0H                                                  0894
*        /************************************************************/
*        /*                                                          */
*        /* SET WRITECHECK FLAG IN AMDSB                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0894
*        IF (ADDR(AWCHK)) ^= NULLPTR   /*VALUE FROM FDTTBL           */
*          THEN                                                    0894
@RC00858 L     @08,@PC00003+76                                     0894
         LTR   @08,@08                                             0894
         BZ    @RF00894                                            0894
*            AMDWCK = ON;                                          0895
*                                                                  0895
         L     @08,@PC00001+8                                      0895
         L     @08,DSBCATPT(,@08)                                  0895
         OI    AMDWCK(@08),B'01000000'                             0895
*          ELSE                                                    0896
*            IF (ADDR(ANWCK)) ^= NULLPTR                           0896
*              THEN                                                0896
         B     @RC00894                                            0896
@RF00894 L     @08,@PC00003+80                                     0896
         LTR   @08,@08                                             0896
         BZ    @RF00896                                            0896
*                AMDWCK = OFF;                                     0897
*                                                                  0897
         L     @08,@PC00001+8                                      0897
         L     @08,DSBCATPT(,@08)                                  0897
         NI    AMDWCK(@08),B'10111111'                             0897
*              ELSE                                                0898
*                IF MDLAMDSB ^= NULLPTR /*TAKE VALUE FROM MODEL      */
*                  THEN                                            0898
         B     @RC00896                                            0898
@RF00896 L     @08,@PC00001+8                                      0898
         L     @06,MDLTBLPT(,@08)                                  0898
         L     @06,MDLAMDSB(,@06)                                  0898
         LTR   @06,@06                                             0898
         BZ    @RF00898                                            0898
*                    IF MDLAMDSB -> AMDWCK = ON                    0899
*                      THEN                                        0899
         TM    AMDWCK(@06),B'01000000'                             0899
         BNO   @RF00899                                            0899
*                        AMDWCK = ON;                              0900
         L     @08,DSBCATPT(,@08)                                  0900
         OI    AMDWCK(@08),B'01000000'                             0900
*                      ELSE                                        0901
*                        AMDWCK = OFF;                             0901
*                                                                  0901
         B     @RC00899                                            0901
@RF00899 L     @08,@PC00001+8                                      0901
         L     @08,DSBCATPT(,@08)                                  0901
         NI    AMDWCK(@08),B'10111111'                             0901
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* INITIALIZE SS/1 ATTRIBUTES IN THE AMDSB.         @Y30SSJH*/
*        /* TEST EXPLICIT ATTRIBUTES FIRST. IF NO            @Y30SSJH*/
*        /* EXPLICIT ATTRIBUTES, CHECK FOR MODEL             @Y30SSJH*/
*        /* ATTRIBUTES.                                      @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  0902
*        IF (ADDR(ACYLFF)) ^= NULLPTR                              0902
*          THEN                                                    0902
@RC00899 DS    0H                                                  0902
@RF00898 DS    0H                                                  0902
@RC00896 DS    0H                                                  0902
@RC00894 L     @08,@PC00003+136                                    0902
         LTR   @08,@08                                             0902
         BZ    @RF00902                                            0902
*            DO;                                           /*@Y30SSJH*/
*                                                                  0903
*            AMDFAULT = ON;                                /*@Y30SSJH*/
*            AMDBIND = OFF;                                /*@Y30SSJH*/
*                                                                  0905
         L     @08,@PC00001+8                                      0905
         L     @08,DSBCATPT(,@08)                                  0905
         OI    AMDFAULT(@08),B'01000000'                           0905
         NI    AMDBIND(@08),B'11011111'                            0905
*            END;                                          /*@Y30SSJH*/
*          ELSE                                                    0907
*            IF (ADDR(ABINDD)) ^= NULLPTR                          0907
*              THEN                                                0907
         B     @RC00902                                            0907
@RF00902 L     @08,@PC00003+132                                    0907
         LTR   @08,@08                                             0907
         BZ    @RF00907                                            0907
*                DO;                                       /*@Y30SSJH*/
*                                                                  0908
*                AMDFAULT = OFF;                           /*@Y30SSJH*/
*                AMDBIND = ON;                             /*@Y30SSJH*/
*                                                                  0910
         L     @08,@PC00001+8                                      0910
         L     @08,DSBCATPT(,@08)                                  0910
         OI    AMDBIND(@08),B'00100000'                            0910
         NI    AMDFAULT(@08),B'10111111'                           0910
*                END;                                      /*@Y30SSJH*/
*              ELSE                                                0912
*                IF (ADDR(ASTAGE)) ^= NULLPTR                      0912
*                  THEN                                            0912
         B     @RC00907                                            0912
@RF00907 L     @08,@PC00003+128                                    0912
         LTR   @08,@08                                             0912
         BZ    @RF00912                                            0912
*                    DO;                                   /*@Y30SSJH*/
*                                                                  0913
*                    AMDFAULT = OFF;                       /*@Y30SSJH*/
*                    AMDBIND = OFF;                        /*@Y30SSJH*/
*                                                                  0915
         L     @08,@PC00001+8                                      0915
         L     @08,DSBCATPT(,@08)                                  0915
         NI    AMDFAULT(@08),B'10011111'                           0915
*                    END;                                  /*@Y30SSJH*/
*                  ELSE                                            0917
*                    IF MDLAMDSB ^= NULLPTR     &                  0917
*                       (ADDR(CLST) ^= NULLPTR  ×                  0917
*                        ADDR(AIX)  ^= NULLPTR  )                  0917
*                      THEN                                        0917
         B     @RC00912                                            0917
@RF00912 SLR   @08,@08                                             0917
         L     @06,@PC00001+8                                      0917
         L     @06,MDLTBLPT(,@06)                                  0917
         C     @08,MDLAMDSB(,@06)                                  0917
         BE    @RF00917                                            0917
         L     @06,@PC00001+4                                      0917
         C     @08,FDTPTR+20(,@06)                                 0917
         BNE   @RT00917                                            0917
         C     @08,FDTPTR+52(,@06)                                 0917
         BE    @RF00917                                            0917
@RT00917 DS    0H                                                  0918
*                        DO;                               /*@Y30SSJH*/
*                                                                  0918
*                        IF MDLAMDSB -> AMDFAULT = ON              0919
*                          THEN                                    0919
         L     @08,@PC00001+8                                      0919
         L     @06,MDLTBLPT(,@08)                                  0919
         L     @06,MDLAMDSB(,@06)                                  0919
         TM    AMDFAULT(@06),B'01000000'                           0919
         BNO   @RF00919                                            0919
*                            AMDFAULT = ON;                /*@Y30SSJH*/
         L     @08,DSBCATPT(,@08)                                  0920
         OI    AMDFAULT(@08),B'01000000'                           0920
*                          ELSE                                    0921
*                            AMDFAULT = OFF;               /*@Y30SSJH*/
*                                                                  0921
         B     @RC00919                                            0921
@RF00919 L     @08,@PC00001+8                                      0921
         L     @08,DSBCATPT(,@08)                                  0921
         NI    AMDFAULT(@08),B'10111111'                           0921
*                        IF MDLAMDSB -> AMDBIND = ON               0922
*                          THEN                                    0922
@RC00919 L     @08,@PC00001+8                                      0922
         L     @06,MDLTBLPT(,@08)                                  0922
         L     @06,MDLAMDSB(,@06)                                  0922
         TM    AMDBIND(@06),B'00100000'                            0922
         BNO   @RF00922                                            0922
*                            AMDBIND = ON;                 /*@Y30SSJH*/
         L     @08,DSBCATPT(,@08)                                  0923
         OI    AMDBIND(@08),B'00100000'                            0923
*                          ELSE                                    0924
*                            AMDBIND = OFF;                /*@Y30SSJH*/
*                                                                  0924
         B     @RC00922                                            0924
@RF00922 L     @08,@PC00001+8                                      0924
         L     @08,DSBCATPT(,@08)                                  0924
         NI    AMDBIND(@08),B'11011111'                            0924
*                        END;                              /*@Y30SSJH*/
*                                                                  0925
@RC00922 DS    0H                                                  0926
*        IF (ADDR(ANSTGW)) ^= NULLPTR                              0926
*          THEN                                                    0926
@RF00917 DS    0H                                                  0926
@RC00912 DS    0H                                                  0926
@RC00907 DS    0H                                                  0926
@RC00902 L     @08,@PC00003+140                                    0926
         LTR   @08,@08                                             0926
         BZ    @RF00926                                            0926
*            AMDWAIT = OFF;                                /*@Y30SSJH*/
         L     @08,@PC00001+8                                      0927
         L     @08,DSBCATPT(,@08)                                  0927
         NI    AMDWAIT(@08),B'11101111'                            0927
*          ELSE                                                    0928
*            IF (ADDR(ASTGWW)) ^= NULLPTR                          0928
*              THEN                                                0928
         B     @RC00926                                            0928
@RF00926 L     @08,@PC00003+144                                    0928
         LTR   @08,@08                                             0928
         BZ    @RF00928                                            0928
*                AMDWAIT = ON;                             /*@Y30SSJH*/
         L     @08,@PC00001+8                                      0929
         L     @08,DSBCATPT(,@08)                                  0929
         OI    AMDWAIT(@08),B'00010000'                            0929
*              ELSE                                                0930
*                IF MDLAMDSB ^= NULLPTR                            0930
*                  THEN                                            0930
         B     @RC00928                                            0930
@RF00928 L     @08,@PC00001+8                                      0930
         L     @06,MDLTBLPT(,@08)                                  0930
         L     @06,MDLAMDSB(,@06)                                  0930
         LTR   @06,@06                                             0930
         BZ    @RF00930                                            0930
*                    IF MDLAMDSB -> AMDWAIT = ON                   0931
*                      THEN                                        0931
         TM    AMDWAIT(@06),B'00010000'                            0931
         BNO   @RF00931                                            0931
*                        AMDWAIT = ON;                     /*@Y30SSJH*/
         L     @08,DSBCATPT(,@08)                                  0932
         OI    AMDWAIT(@08),B'00010000'                            0932
*                      ELSE                                        0933
*                        AMDWAIT = OFF;                    /*@Y30SSJH*/
*                                                                  0933
         B     @RC00931                                            0933
@RF00931 L     @08,@PC00001+8                                      0933
         L     @08,DSBCATPT(,@08)                                  0933
         NI    AMDWAIT(@08),B'11101111'                            0933
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* IF THE OBJECT BEING ALTERED IS A CATALOG,        @Y30SSJH*/
*        /* INDICATE IT IN THE AMDSB.                        @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  0934
*        IF (ADDR(MCAT)) ^= NULLPTR   ×                            0934
*           (ADDR(UCAT)) ^= NULLPTR                                0934
*          THEN                                                    0934
@RC00931 DS    0H                                                  0934
@RF00930 DS    0H                                                  0934
@RC00928 DS    0H                                                  0934
@RC00926 SLR   @08,@08                                             0934
         L     @06,@PC00001+4                                      0934
         C     @08,FDTPTR+12(,@06)                                 0934
         BNE   @RT00934                                            0934
         C     @08,FDTPTR+16(,@06)                                 0934
         BE    @RF00934                                            0934
@RT00934 DS    0H                                                  0935
*            IF CTGFVTYP = 'D'   ×                                 0935
*               CTGFVTYP = 'I'                                     0935
*              THEN                                                0935
         L     @08,@PC00001+8                                      0935
         L     @08,CTGFVPTR(,@08)                                  0935
         CLI   CTGFVTYP(@08),C'D'                                  0935
         BE    @RT00935                                            0935
         CLI   CTGFVTYP(@08),C'I'                                  0935
         BNE   @RF00935                                            0935
@RT00935 DS    0H                                                  0936
*                AMDBIND = ON;                             /*@Y30SSJH*/
*                                                                  0936
         L     @08,@PC00001+8                                      0936
         L     @08,DSBCATPT(,@08)                                  0936
         OI    AMDBIND(@08),B'00100000'                            0936
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE DATA SET ATTRIBUTES - TAKE COPY FROM MODEL IF */
*        /* ONE EXISTS THEN OVERRIDE WITH EXPLICIT ATTRIBUTES        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0937
*                                                                  0937
*        IF CTGFVTYP = 'D'  ×                                      0937
*           CTGFVTYP = 'I'                                         0937
*          THEN                                                    0937
@RF00935 DS    0H                                                  0937
@RF00934 L     @08,@PC00001+8                                      0937
         L     @08,CTGFVPTR(,@08)                                  0937
         CLI   CTGFVTYP(@08),C'D'                                  0937
         BE    @RT00937                                            0937
         CLI   CTGFVTYP(@08),C'I'                                  0937
         BNE   @RF00937                                            0937
@RT00937 DS    0H                                                  0938
*            DO;                                                   0938
*                                                                  0938
*            CTGFLPTR = ADDR(ADSATRFL);                            0939
         L     @08,FPLSTPTR                                        0939
         LR    CTGFLPTR,@08                                        0939
*            CTGFVATR = CTGFLPTR;                                  0940
         L     @06,@PC00001+8                                      0940
         L     @02,CTGFVPTR(,@06)                                  0940
         ST    CTGFLPTR,CTGFVATR(,@02)                             0940
*            CTGFLNG(1) = 2;                                       0941
         MVC   CTGFLNG(4,CTGFLPTR),@CF00154                        0941
*            CTGFLPT(1) = ADDR(DSETATTR);                          0942
*                                                                  0942
         LA    @02,DSETATTR(,@08)                                  0942
         ST    @02,CTGFLPT(,CTGFLPTR)                              0942
*            IF MDLDSATR ^= NULLPTR    /* COPY DSATTR FROM MODEL     */
*              THEN                                                0943
         L     @06,MDLTBLPT(,@06)                                  0943
         L     @06,MDLDSATR(,@06)                                  0943
         LTR   @06,@06                                             0943
         BZ    @RF00943                                            0943
*                DSETATTR = MDLDATTR;                              0944
*                                                                  0944
         MVC   DSETATTR(2,@08),MDLDATTR(@06)                       0944
*            /********************************************************/
*            /*                                                      */
*            /* SET EXPLICIT DATA SET ATTRIBUTES FROM FDTTBL         */
*            /*                                                      */
*            /********************************************************/
*                                                                  0945
*            IF (ADDR(AUNIQ)) ^= NULLPTR                           0945
*              THEN                                                0945
@RF00943 L     @08,@PC00003+20                                     0945
         LTR   @08,@08                                             0945
         BZ    @RF00945                                            0945
*                DO;                                               0946
*                                                                  0946
*                AAUNIQ = ON;                                      0947
*                                                                  0947
         L     @08,FPLSTPTR                                        0947
         OI    AAUNIQ(@08),B'01000000'                             0947
*                END;                                              0948
*                                                                  0948
*              ELSE                                                0949
*                IF (ADDR(ASUBA)) ^= NULLPTR                       0949
*                  THEN                                            0949
         B     @RC00945                                            0949
@RF00945 L     @08,@PC00003+16                                     0949
         LTR   @08,@08                                             0949
         BZ    @RF00949                                            0949
*                    AAUNIQ = OFF;                                 0950
*                                                                  0950
         L     @08,FPLSTPTR                                        0950
         NI    AAUNIQ(@08),B'10111111'                             0950
*            IF (ADDR(ASPED)) ^= NULLPTR                           0951
*              THEN                                                0951
@RF00949 DS    0H                                                  0951
@RC00945 L     @08,@PC00003+84                                     0951
         LTR   @08,@08                                             0951
         BZ    @RF00951                                            0951
*                AASPEED = ON;                                     0952
*                                                                  0952
         L     @08,FPLSTPTR                                        0952
         OI    AASPEED(@08),B'10000000'                            0952
*              ELSE                                                0953
*                IF (ADDR(ARECV)) ^= NULLPTR                       0953
*                  THEN                                            0953
         B     @RC00951                                            0953
@RF00951 L     @08,@PC00003+88                                     0953
         LTR   @08,@08                                             0953
         BZ    @RF00953                                            0953
*                    AASPEED = OFF;                                0954
*                                                                  0954
         L     @08,FPLSTPTR                                        0954
         NI    AASPEED(@08),B'01111111'                            0954
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* SET RECOVERABLE CATALOG ATTRIBUTE            @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  0955
*            IF (ADDR(ARVBL)) ^= NULLPTR                           0955
*              THEN                                                0955
@RF00953 DS    0H                                                  0955
@RC00951 L     @08,@PC00003+120                                    0955
         LTR   @08,@08                                             0955
         BZ    @RF00955                                            0955
*                AARVBL = ON;                              /*@Y30SSJH*/
*                                                                  0956
         L     @08,FPLSTPTR                                        0956
         OI    AARVBL(@08),B'00001000'                             0956
*              ELSE                                                0957
*                IF (ADDR(ANRVL)) ^= NULLPTR                       0957
*                  THEN                                            0957
         B     @RC00955                                            0957
@RF00955 L     @08,@PC00003+124                                    0957
         LTR   @08,@08                                             0957
         BZ    @RF00957                                            0957
*                    AARVBL = OFF;                         /*@Y30SSJH*/
*                                                                  0958
         L     @08,FPLSTPTR                                        0958
         NI    AARVBL(@08),B'11110111'                             0958
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* SET TRACK OVERFLOW BIT IN DSATTR FOR PAGESPACE       */
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*            IF (ADDR(PGSP)) ^= NULLPTR                            0959
*              THEN                                                0959
@RF00957 DS    0H                                                  0959
@RC00955 SLR   @08,@08                                             0959
         L     @06,@PC00001+4                                      0959
         C     @08,FDTPTR+24(,@06)                                 0959
         BE    @RF00959                                            0959
*                  IF (ADDR(PSWAP)) ^= NULLPTR  ×                  0960
*                     SWAPFLAG = GO                                0960
*                    THEN                                          0960
         C     @08,FDTPTR+992(,@06)                                0960
         BNE   @RT00960                                            0960
         L     @08,@PC00001+8                                      0960
         CLI   SWAPFLAG(@08),X'00'                                 0960
         BNE   @RF00960                                            0960
@RT00960 DS    0H                                                  0961
*                      AATKOVFL = OFF;                     /*@Z40WSJH*/
         L     @08,FPLSTPTR                                        0961
         NI    AATKOVFL(@08),B'11111110'                           0961
*                    ELSE                                          0962
*                      AATKOVFL = ON;                      /*@Z40WSJH*/
*                                                                  0962
         B     @RC00960                                            0962
@RF00960 L     @08,FPLSTPTR                                        0962
         OI    AATKOVFL(@08),B'00000001'                           0962
*            END;                                          /*@Z40WSJH*/
@RC00960 DS    0H                                                  0963
@RF00959 DS    0H                                                  0964
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE VOLUME SERIAL LIST PSEUDO FIELD               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0964
*        VOLEXFLG = GO;                                            0964
@RF00937 MVI   VOLEXFLG,X'00'                                      0964
*        GPOOLEN = 0;                                              0965
         SLR   @08,@08                                             0965
         ST    @08,GPOOLEN                                         0965
*        IF (ADDR(AVLSR)) ^= NULLPTR   /*VOLSERIAL LIST FROM FDTTBL  */
*          THEN                                                    0966
         L     @06,@PC00003+4                                      0966
         CR    @06,@08                                             0966
         BE    @RF00966                                            0966
*            DO;                                                   0967
*                                                                  0967
*            FDTTBLPT = ADDR(AVLSR);                               0968
         LR    FDTTBLPT,@06                                        0968
*            GPOOLEN = (8 * LISTCNT) +2;                           0969
         LH    @08,LISTCNT(,FDTTBLPT)                              0969
         LR    @06,@08                                             0969
         SLA   @06,3                                               0969
         AL    @06,@CF00154                                        0969
         ST    @06,GPOOLEN                                         0969
*            VOLSTCNT = LISTCNT;                                   0970
         LR    VOLSTCNT,@08                                        0970
*            VOLEXFLG = 'F';                                       0971
*                                                                  0971
         MVI   VOLEXFLG,C'F'                                       0971
*            END;                                                  0972
*                                                                  0972
*          ELSE                                                    0973
*            IF MDLVLIST ^= NULLPTR    /* VOLSER LIST FROM MODEL     */
*              THEN                                                0973
         B     @RC00966                                            0973
@RF00966 L     @08,@PC00001+8                                      0973
         L     @08,MDLTBLPT(,@08)                                  0973
         L     @06,MDLVLIST(,@08)                                  0973
         LTR   @06,@06                                             0973
         BZ    @RF00973                                            0973
*                DO;                                               0974
*                                                                  0974
*                VOLSTCNT = MDLVLLEN/6;                            0975
         L     @00,MDLVLLEN(,@08)                                  0975
         SRDA  @00,32                                              0975
         D     @00,@CF00157                                        0975
         LR    VOLSTCNT,@01                                        0975
*                GPOOLEN = (VOLSTCNT * 8) +2;                      0976
         LR    @08,VOLSTCNT                                        0976
         SLA   @08,3                                               0976
         AL    @08,@CF00154                                        0976
         ST    @08,GPOOLEN                                         0976
*                VOLEXFLG = 'M';       /* SET FLG INDICATING LIST IS
*                                         IS FROM THE MODEL          */
*                                                                  0977
         MVI   VOLEXFLG,C'M'                                       0977
*                END;                                              0978
*                                                                  0978
*        IF VOLEXFLG ^= GO                                         0979
*          THEN                                                    0979
@RF00973 DS    0H                                                  0979
@RC00966 CLI   VOLEXFLG,X'00'                                      0979
         BE    @RF00979                                            0979
*            DO;                                                   0980
*                                                                  0980
*            /********************************************************/
*            /*                                                      */
*            /* THE VOLUME LIST MUST BE AT LEAST 130 BYTES LONG, DUE */
*            /* TO DOS CONSIDERATIONS                                */
*            /*                                                      */
*            /********************************************************/
*                                                                  0981
*            IF GPOOLEN < POOLEN1                                  0981
*              THEN                                                0981
         LA    @08,130                                             0981
         C     @08,GPOOLEN                                         0981
         BNH   @RF00981                                            0981
*                GPOOLEN = POOLEN1;                        /*@Y30SSJH*/
*                                                                  0982
         ST    @08,GPOOLEN                                         0982
*            /********************************************************/
*            /*                                                      */
*            /* GET STORAGE FOR VOLUME LIST IF NECESSARY             */
*            /*                                                      */
*            /********************************************************/
*                                                                  0983
*            IF CTGFVVLT = NULLPTR  ×                              0983
*               GPOOLEN  > VLISTLEN                                0983
*              THEN                                                0983
@RF00981 L     @08,@PC00001+8                                      0983
         L     @08,CTGFVPTR(,@08)                                  0983
         L     @08,CTGFVVLT(,@08)                                  0983
         LTR   @08,@08                                             0983
         BZ    @RT00983                                            0983
         L     @06,GPOOLEN                                         0983
         CH    @06,VLISTLEN(,@08)                                  0983
         BNH   @RF00983                                            0983
@RT00983 DS    0H                                                  0984
*                DO;                                               0984
*                                                                  0984
*                CALL IDCSAGP0(GDTTBL,GPOOLEN,CTGFVVLT,DEGPID,SETZERO);
         L     @06,@PC00001                                        0985
         ST    @06,@AL00001                                        0985
         LA    @15,GPOOLEN                                         0985
         ST    @15,@AL00001+4                                      0985
         L     @15,@PC00001+8                                      0985
         L     @01,CTGFVPTR(,@15)                                  0985
         LA    @15,CTGFVVLT(,@01)                                  0985
         ST    @15,@AL00001+8                                      0985
         LA    @15,DEGPID                                          0985
         ST    @15,@AL00001+12                                     0985
         LA    @15,SETZERO                                         0985
         ST    @15,@AL00001+16                                     0985
         MVI   @AL00001+16,X'80'                                   0985
         L     @15,GDTGPL(,@06)                                    0985
         LA    @01,@AL00001                                        0985
         BALR  @14,@15                                             0985
*                RESPECIFY RTNREG RSTD;                            0986
*                TESTRC = RTNREG;                                  0987
         LR    TESTRC,RTNREG                                       0987
*                RESPECIFY RTNREG UNRSTD;                          0988
*                IF TESTRC ^= 0                                    0989
*                  THEN                                            0989
         LTR   TESTRC,TESTRC                                       0989
         BZ    @RF00989                                            0989
*                    DO;                                           0990
*                                                                  0990
*                    DEFSTID = NOSTORAG;                           0991
         L     @06,@PC00001+8                                      0991
         MVC   DEFSTID(5,@06),@CB02317                             0991
*                    RETURN;                                       0992
*                                                                  0992
         B     @EL00003                                            0992
*                    END;                                          0993
*                                                                  0993
*                END;                                              0994
*                                                                  0994
@RF00989 DS    0H                                                  0995
*                VLISTLEN = 0;                                     0995
@RF00983 L     @08,@PC00001+8                                      0995
         L     @08,CTGFVPTR(,@08)                                  0995
         L     @08,CTGFVVLT(,@08)                                  0995
         SLR   @06,@06                                             0995
         STH   @06,VLISTLEN(,@08)                                  0995
*                DO N = 1 TO VOLSTCNT;                             0996
*                                                                  0996
         LA    N,1                                                 0996
         B     @DE00996                                            0996
@DL00996 DS    0H                                                  0997
*                /****************************************************/
*                /*                                                  */
*                /* VOLUME LIST IS INITIALIZED FROM THE FDTTBL       */
*                /*                                                  */
*                /****************************************************/
*                                                                  0997
*                IF VOLEXFLG = 'F'                                 0997
*                  THEN                                            0997
         CLI   VOLEXFLG,C'F'                                       0997
         BNE   @RF00997                                            0997
*                    VLISTSER(N) = LISTVAL(N);                     0998
*                                                                  0998
         LR    @08,N                                               0998
         SLA   @08,3                                               0998
         L     @06,@PC00001+8                                      0998
         L     @06,CTGFVPTR(,@06)                                  0998
         L     @06,CTGFVVLT(,@06)                                  0998
         ALR   @06,@08                                             0998
         AL    @06,@CF03031                                        0998
         ALR   @08,FDTTBLPT                                        0998
         AL    @08,@CF03032                                        0998
         MVC   VLISTSER-4(6,@06),LISTVAL-3(@08)                    0998
*                  /**************************************************/
*                  /*                                                */
*                  /* THE VOLUME LIST IS INITIALIZED FROM THE MODEL  */
*                  /*                                                */
*                  /**************************************************/
*                                                                  0999
*                  ELSE                                            0999
*                    VLISTSER(N) = MDLVOLUM(N);                    0999
*                                                                  0999
         B     @RC00997                                            0999
@RF00997 LR    @08,N                                               0999
         SLA   @08,3                                               0999
         L     @06,@PC00001+8                                      0999
         L     @03,CTGFVPTR(,@06)                                  0999
         L     @03,CTGFVVLT(,@03)                                  0999
         ALR   @03,@08                                             0999
         AL    @03,@CF03031                                        0999
         LR    @08,N                                               0999
         MH    @08,@CH00157                                        0999
         L     @06,MDLTBLPT(,@06)                                  0999
         L     @06,MDLVLIST(,@06)                                  0999
         ALR   @06,@08                                             0999
         AL    @06,@CF03033                                        0999
         MVC   VLISTSER-4(6,@03),MDLVOLUM(@06)                     0999
*                VLISTLEN = VLISTLEN + 8;                          1000
*                                                                  1000
@RC00997 L     @08,@PC00001+8                                      1000
         L     @08,CTGFVPTR(,@08)                                  1000
         L     @08,CTGFVVLT(,@08)                                  1000
         LA    @06,8                                               1000
         AH    @06,VLISTLEN(,@08)                                  1000
         STH   @06,VLISTLEN(,@08)                                  1000
*                END;                                              1001
*                                                                  1001
         AL    N,@CF00220                                          1001
@DE00996 CR    N,VOLSTCNT                                          1001
         BNH   @DL00996                                            1001
*            END;                                                  1002
*                                                                  1002
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE FILE SEQUENCE NUMBER FIELD                    */
*        /*                                                          */
*        /************************************************************/
*        IF (ADDR(AAFSNO)) ^= NULLPTR                              1003
*          THEN                                                    1003
@RF00979 L     @08,@PC00003+116                                    1003
         LTR   @08,@08                                             1003
         BZ    @RF01003                                            1003
*            DO;                                                   1004
*                                                                  1004
*            /********************************************************/
*            /*                                                      */
*            /* THE ELEMENTS IN THE LIST OF FILE SEQUENCE NUMBERS    */
*            /* MUST EQUAL THE ELEMENTS IN THE VOLUME SERIAL LIST -  */
*            /* IF NOT TERMINATE PROCESSING                          */
*            /*                                                      */
*            /********************************************************/
*                                                                  1005
*            IF AFSNOCNT ^= VOLSTCNT                               1005
*              THEN                                                1005
         L     @08,@PC00001+4                                      1005
         L     @08,FDTPTR+500(,@08)                                1005
         C     VOLSTCNT,AFSNOCNT(,@08)                             1005
         BE    @RF01005                                            1005
*                DO;                                               1006
*                                                                  1006
*                DEFSTID = FILSQERR;                               1007
         L     @06,@PC00001+8                                      1007
         MVC   DEFSTID(5,@06),@CB02320                             1007
*                RETURN;                                           1008
*                                                                  1008
         B     @EL00003                                            1008
*                END;                                              1009
*                                                                  1009
*            /********************************************************/
*            /*                                                      */
*            /* GETSTORAGE FOR THE FILE SEQUENCE LIST                */
*            /*                                                      */
*            /********************************************************/
*                                                                  1010
*            CTGFLPTR = ADDR(AFSEQFL);                             1010
@RF01005 L     CTGFLPTR,FPLSTPTR                                   1010
         LA    CTGFLPTR,AFSEQFL(,CTGFLPTR)                         1010
*            CTGFLNG(1) = (AFSNOCNT * 2);                          1011
         L     @09,@PC00001+4                                      1011
         L     @09,FDTPTR+500(,@09)                                1011
         L     @09,AFSNOCNT(,@09)                                  1011
         ALR   @09,@09                                             1011
         ST    @09,CTGFLNG(,CTGFLPTR)                              1011
*            CALL IDCSAGP0 (GDTTBL,                                1012
*                    (CTGFLNG(1)),       /*LENGTH OF STORAGE REQUST  */
*                    CTGFLPT(1),         /* ADDR OF STORAGE IN FVT   */
*                    DEGPID,             /* POOL ID                  */
*                    SETZERO);           /* SET AREA TO ZEROS        */
*                                                                  1012
         L     @09,@PC00001                                        1012
         ST    @09,@AL00001                                        1012
         L     @06,CTGFLNG(,CTGFLPTR)                              1012
         ST    @06,@AFTEMPS+4                                      1012
         LA    @06,@AFTEMPS+4                                      1012
         ST    @06,@AL00001+4                                      1012
         LA    @06,CTGFLPT(,CTGFLPTR)                              1012
         ST    @06,@AL00001+8                                      1012
         LA    @06,DEGPID                                          1012
         ST    @06,@AL00001+12                                     1012
         LA    @06,SETZERO                                         1012
         ST    @06,@AL00001+16                                     1012
         MVI   @AL00001+16,X'80'                                   1012
         L     @15,GDTGPL(,@09)                                    1012
         LA    @01,@AL00001                                        1012
         BALR  @14,@15                                             1012
*            RESPECIFY RTNREG RSTD;                                1013
*            TESTRC = RTNREG;                                      1014
         LR    TESTRC,RTNREG                                       1014
*            RESPECIFY RTNREG UNRSTD;                              1015
*                                                                  1015
*            IF TESTRC ^= 0                                        1016
*              THEN                                                1016
         LTR   TESTRC,TESTRC                                       1016
         BZ    @RF01016                                            1016
*                DO;                                               1017
*                                                                  1017
*                DEFSTID = NOSTORAG;                               1018
         L     @06,@PC00001+8                                      1018
         MVC   DEFSTID(5,@06),@CB02317                             1018
*                RETURN;                                           1019
*                                                                  1019
         B     @EL00003                                            1019
*                END;                                              1020
*                                                                  1020
*            /********************************************************/
*            /*                                                      */
*            /* INITIALIZE THE FILE SEQUENCE LIST                    */
*            /*  . SET LENGTH OF ELEMENTS IN FIRST 2 BYTES OF LIST,  */
*            /*    THE LENGTH DOES NOT INCLUDE ITSELF                */
*            /*  . LOOP INITIALIZES THE ACTUAL SEQUENCE NUMBERS      */
*            /*                                                      */
*            /********************************************************/
*                                                                  1021
*                                                                  1021
*            DO N = 1 TO AFSNOCNT;                                 1021
*                                                                  1021
@RF01016 LA    N,1                                                 1021
         B     @DE01021                                            1021
@DL01021 DS    0H                                                  1022
*               CTGFLPT(1) -> FSNUMBER(N) = AFSNOVAL(N);           1022
*                                                                  1022
         LR    @06,N                                               1022
         ALR   @06,@06                                             1022
         L     @04,CTGFLPT(,CTGFLPTR)                              1022
         LR    @15,N                                               1022
         SLA   @15,2                                               1022
         L     @14,@PC00001+4                                      1022
         L     @01,FDTPTR+500(,@14)                                1022
         L     @15,AFSNOVAL-4(@15,@01)                             1022
         BCTR  @04,0                                               1022
         BCTR  @04,0                                               1022
         STH   @15,FSNUMBER(@06,@04)                               1022
*            END;                                                  1023
*                                                                  1023
         AL    N,@CF00220                                          1023
@DE01021 L     @06,@PC00001+4                                      1023
         L     @06,FDTPTR+500(,@06)                                1023
         C     N,AFSNOCNT(,@06)                                    1023
         BNH   @DL01021                                            1023
*            CTGFVFSN = ADDR(AFSEQFL);                             1024
*                                                                  1024
         L     @06,@PC00001+8                                      1024
         L     @06,CTGFVPTR(,@06)                                  1024
         L     @04,FPLSTPTR                                        1024
         LA    @04,AFSEQFL(,@04)                                   1024
         ST    @04,CTGFVFSN(,@06)                                  1024
*            END;                                                  1025
*                                                                  1026
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE DEVTYPE FPL                                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  1026
*        IF (ADDR(ADEVICE)) ^= NULLPTR                             1026
*          THEN                                                    1026
@RF01003 L     @06,@PC00003+112                                    1026
         LTR   @06,@06                                             1026
         BZ    @RF01026                                            1026
*            DO;                                                   1027
*                                                                  1027
*            FDTTBLPT = ADDR(ADEVICE);                             1028
         LR    FDTTBLPT,@06                                        1028
*            CTGFLPTR = ADDR(ADEVTFL);                             1029
         L     CTGFLPTR,FPLSTPTR                                   1029
         LA    CTGFLPTR,ADEVTFL(,CTGFLPTR)                         1029
*            CTGFVDVT = CTGFLPTR;                                  1030
         L     @09,@PC00001+8                                      1030
         L     @09,CTGFVPTR(,@09)                                  1030
         ST    CTGFLPTR,CTGFVDVT(,@09)                             1030
*            GPOOLEN = LISTCNT1 * 12;                              1031
*                                                                  1031
         LH    @09,LISTCNT1(,FDTTBLPT)                             1031
         MH    @09,@CH00036                                        1031
         ST    @09,GPOOLEN                                         1031
*            CALL IDCSAGP0(GDTTBL,GPOOLEN,GPOOLPT,DEGPID,SETZERO); 1032
         L     @09,@PC00001                                        1032
         ST    @09,@AL00001                                        1032
         LA    @06,GPOOLEN                                         1032
         ST    @06,@AL00001+4                                      1032
         LA    @06,GPOOLPT                                         1032
         ST    @06,@AL00001+8                                      1032
         LA    @06,DEGPID                                          1032
         ST    @06,@AL00001+12                                     1032
         LA    @06,SETZERO                                         1032
         ST    @06,@AL00001+16                                     1032
         MVI   @AL00001+16,X'80'                                   1032
         L     @15,GDTGPL(,@09)                                    1032
         LA    @01,@AL00001                                        1032
         BALR  @14,@15                                             1032
*            RESPECIFY RTNREG RSTD;                                1033
*            TESTRC = RTNREG;                                      1034
         LR    TESTRC,RTNREG                                       1034
*            RESPECIFY RTNREG UNRSTD;                              1035
*            IF TESTRC ^= 0                                        1036
*              THEN                                                1036
         LTR   TESTRC,TESTRC                                       1036
         BZ    @RF01036                                            1036
*                DO;                                               1037
*                                                                  1037
*                DEFSTID = NOSTORAG;                               1038
         L     @06,@PC00001+8                                      1038
         MVC   DEFSTID(5,@06),@CB02317                             1038
*                RETURN;                                           1039
*                                                                  1039
         B     @EL00003                                            1039
*                END;                                              1040
*                                                                  1040
*            CTGFLNG(1) = GPOOLEN;                                 1041
@RF01036 L     @06,GPOOLEN                                         1041
         ST    @06,CTGFLNG(,CTGFLPTR)                              1041
*            CTGFLPT(1) = GPOOLPT;                                 1042
*                                                                  1042
         L     @06,GPOOLPT                                         1042
         ST    @06,CTGFLPT(,CTGFLPTR)                              1042
*            DO N = 1 TO LISTCNT1;                                 1043
*                                                                  1043
         LA    N,1                                                 1043
         B     @DE01043                                            1043
@DL01043 DS    0H                                                  1044
*              DEVICLST(N) = LISTVAL1(N);                          1044
*                                                                  1044
         LR    @06,N                                               1044
         MH    @06,@CH00036                                        1044
         L     @03,GPOOLPT                                         1044
         ALR   @03,@06                                             1044
         AL    @03,@CF03034                                        1044
         MVI   DEVICLST+8(@03),C' '                                1044
         MVC   DEVICLST+9(3,@03),DEVICLST+8(@03)                   1044
         LR    @06,N                                               1044
         MH    @06,@CH00038                                        1044
         ALR   @06,FDTTBLPT                                        1044
         AL    @06,@CF03035                                        1044
         MVC   DEVICLST(8,@03),LISTVAL1-3(@06)                     1044
*            END;                                                  1045
*                                                                  1045
         AL    N,@CF00220                                          1045
@DE01043 CH    N,LISTCNT1(,FDTTBLPT)                               1045
         BNH   @DL01043                                            1045
*            END;                                                  1046
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE BUFFSIZE FPL                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1047
*        IF (ADDR(ABFSZ)) ^= NULLPTR                               1047
*          THEN                                                    1047
@RF01026 L     @06,@PC00003+104                                    1047
         LTR   @06,@06                                             1047
         BZ    @RF01047                                            1047
*            DO;                                                   1048
*                                                                  1048
*            FDTTBLPT = ADDR(ABFSZ);                               1049
         LR    FDTTBLPT,@06                                        1049
*            CTGFLPTR = ADDR(ABFSZFL);                             1050
         L     CTGFLPTR,FPLSTPTR                                   1050
         LA    CTGFLPTR,ABFSZFL(,CTGFLPTR)                         1050
*            CTGFVBUF = CTGFLPTR;                                  1051
         L     @06,@PC00001+8                                      1051
         L     @06,CTGFVPTR(,@06)                                  1051
         ST    CTGFLPTR,CTGFVBUF(,@06)                             1051
*            CTGFLNG(1) = 4;                                       1052
         MVC   CTGFLNG(4,CTGFLPTR),@CF00043                        1052
*            CTGFLPT(1) = ADDR(NUMBVAL);                           1053
*                                                                  1053
         ST    FDTTBLPT,CTGFLPT(,CTGFLPTR)                         1053
*            END;                                                  1054
*                                                                  1054
*          ELSE                                                    1055
*            IF MDLBFSZ ^= NULLPTR                                 1055
*              THEN                                                1055
         B     @RC01047                                            1055
@RF01047 L     @06,@PC00001+8                                      1055
         L     @04,MDLTBLPT(,@06)                                  1055
         L     @04,MDLBFSZ(,@04)                                   1055
         LTR   @04,@04                                             1055
         BZ    @RF01055                                            1055
*                DO;                                               1056
*                                                                  1056
*                CTGFLPTR = ADDR(ABFSZFL);                         1057
         L     CTGFLPTR,FPLSTPTR                                   1057
         LA    CTGFLPTR,ABFSZFL(,CTGFLPTR)                         1057
*                CTGFVBUF = CTGFLPTR;                              1058
         L     @06,CTGFVPTR(,@06)                                  1058
         ST    CTGFLPTR,CTGFVBUF(,@06)                             1058
*                CTGFLNG(1)= 4;                                    1059
         MVC   CTGFLNG(4,CTGFLPTR),@CF00043                        1059
*                CTGFLPT(1) = MDLBFSZ;                             1060
*                                                                  1060
         ST    @04,CTGFLPT(,CTGFLPTR)                              1060
*                END;                                              1061
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE SPACEPARM FPL                                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  1062
*        IF ( (ADDR(ATRKS)) ^= NULLPTR  ×                          1062
*             (ADDR(ACYLD)) ^= NULLPTR  ×                          1062
*             (ADDR(ARCDS)) ^= NULLPTR  ×                          1062
*             (ADDR(ACAND)) ^= NULLPTR  ×                          1062
*             MDLSPARM      ^= NULLPTR )                           1062
*          THEN                                                    1062
@RF01055 DS    0H                                                  1062
@RC01047 SLR   @06,@06                                             1062
         L     @04,@PC00003+24                                     1062
         CR    @04,@06                                             1062
         BNE   @RT01062                                            1062
         L     @04,@PC00003+28                                     1062
         CR    @04,@06                                             1062
         BNE   @RT01062                                            1062
         L     @04,@PC00003+32                                     1062
         CR    @04,@06                                             1062
         BNE   @RT01062                                            1062
         L     @04,@PC00003+60                                     1062
         CR    @04,@06                                             1062
         BNE   @RT01062                                            1062
         L     @04,@PC00001+8                                      1062
         L     @04,MDLTBLPT(,@04)                                  1062
         C     @06,MDLSPARM(,@04)                                  1062
         BE    @RF01062                                            1062
@RT01062 DS    0H                                                  1063
*            DO;                                                   1063
*                                                                  1063
*            CTGFLPTR = ADDR(ASPACFL);                             1064
         L     @06,FPLSTPTR                                        1064
         LA    CTGFLPTR,ASPACFL(,@06)                              1064
*            CTGFVSPC = CTGFLPTR;                                  1065
         L     @04,@PC00001+8                                      1065
         L     @04,CTGFVPTR(,@04)                                  1065
         ST    CTGFLPTR,CTGFVSPC(,@04)                             1065
*            CTGFLNG(1) = 7;                                       1066
         MVC   CTGFLNG(4,CTGFLPTR),@CF00035                        1066
*            CTGFLPT(1) = ADDR(SPACPFLD);                          1067
         LA    @04,SPACPFLD(,@06)                                  1067
         ST    @04,CTGFLPT(,CTGFLPTR)                              1067
*            SPACPFLD = ''B;                                       1068
*                                                                  1068
         XC    SPACPFLD(7,@06),SPACPFLD(@06)                       1068
*            /********************************************************/
*            /*                                                      */
*            /*  CANDIDATE IS SPECIFIED BY A NULL SPACPFLD           */
*            /*                                                      */
*            /********************************************************/
*                                                                  1069
*            /********************************************************/
*            /*                                                      */
*            /* EXPLICIT SPACEPARM FROM FDTTBL OVERRIDES MODEL       */
*            /*                                                      */
*            /********************************************************/
*                                                                  1069
*            IF (ADDR(ATRKS)) ^= NULLPTR                           1069
*              THEN                                                1069
*                                                                  1069
         SLR   @04,@04                                             1069
         L     @15,@PC00003+24                                     1069
         CR    @15,@04                                             1069
         BE    @RF01069                                            1069
*                /****************************************************/
*                /*                                                  */
*                /* PRIMARY SPACE SPECIFIED IN TRACKS                */
*                /*                                                  */
*                /****************************************************/
*                                                                  1070
*                DO;                                               1070
*                                                                  1070
*                ASPACOPT = SPTRACKS;  /* PRIMARY SPACE - TRACKS     */
         MVI   ASPACOPT(@06),X'80'                                 1071
*                FDTTBLPT = ADDR(APTRK);                           1072
         L     FDTTBLPT,@PC00003+36                                1072
*                PRIMESPC = NUMBVAL;                               1073
*                                                                  1073
         MVC   PRIMESPC(3,@06),NUMBVAL+1(FDTTBLPT)                 1073
*                /****************************************************/
*                /*                                                  */
*                /* SECONDARY SPACE IN TRACKS                        */
*                /*                                                  */
*                /****************************************************/
*                                                                  1074
*                IF (ADDR(ASTRK)) ^= NULLPTR                       1074
*                  THEN                                            1074
         SLR   @04,@04                                             1074
         L     @15,@PC00003+48                                     1074
         CR    @15,@04                                             1074
         BE    @RF01074                                            1074
*                    DO;                                           1075
*                                                                  1075
*                    FDTTBLPT = ADDR(ASTRK);                       1076
         LR    FDTTBLPT,@15                                        1076
*                    SCONDSPC = NUMBVAL;                           1077
*                                                                  1077
         MVC   SCONDSPC(3,@06),NUMBVAL+1(FDTTBLPT)                 1077
*                    END;                                          1078
*                END;                                              1079
*                                                                  1079
*              ELSE                                                1080
*                                                                  1080
*                /****************************************************/
*                /*                                                  */
*                /* PRIMARY SPACE SPECIFIED IN CYLINDERS             */
*                /*                                                  */
*                /****************************************************/
*                                                                  1080
*                IF (ADDR(ACYLD)) ^= NULLPTR                       1080
*                  THEN                                            1080
         B     @RC01069                                            1080
@RF01069 SLR   @06,@06                                             1080
         L     @04,@PC00003+28                                     1080
         CR    @04,@06                                             1080
         BE    @RF01080                                            1080
*                    DO;                                           1081
*                                                                  1081
*                    ASPACOPT = SPCYLNDS;                          1082
         L     @15,FPLSTPTR                                        1082
         MVI   ASPACOPT(@15),X'C0'                                 1082
*                    FDTTBLPT = ADDR(APCYL);                       1083
         L     FDTTBLPT,@PC00003+40                                1083
*                    PRIMESPC = NUMBVAL;                           1084
*                                                                  1084
         MVC   PRIMESPC(3,@15),NUMBVAL+1(FDTTBLPT)                 1084
*                    /************************************************/
*                    /*                                              */
*                    /* SECONDARY SPACE IN CYLINDERS                 */
*                    /*                                              */
*                    /************************************************/
*                                                                  1085
*                    IF (ADDR(ASCYL)) ^= NULLPTR                   1085
*                      THEN                                        1085
         L     @04,@PC00003+52                                     1085
         CR    @04,@06                                             1085
         BE    @RF01085                                            1085
*                        DO;                                       1086
*                                                                  1086
         ST    @04,@TF00001                                        1086
*                        FDTTBLPT = ADDR(ASCYL);                   1087
         L     FDTTBLPT,@TF00001                                   1087
*                        SCONDSPC = NUMBVAL;                       1088
*                                                                  1088
         MVC   SCONDSPC(3,@15),NUMBVAL+1(FDTTBLPT)                 1088
*                        END;                                      1089
*                                                                  1089
*                    END;                                          1090
*                                                                  1090
*                  ELSE                                            1091
*                                                                  1091
*                    /************************************************/
*                    /*                                              */
*                    /* PRIMARY SPACE IN RECORDS                     */
*                    /*                                              */
*                    /************************************************/
*                                                                  1091
*                    IF (ADDR(ARCDS)) ^= NULLPTR                   1091
*                      THEN                                        1091
         B     @RC01080                                            1091
@RF01080 SLR   @06,@06                                             1091
         L     @04,@PC00003+32                                     1091
         CR    @04,@06                                             1091
         BE    @RF01091                                            1091
*                        DO;                                       1092
*                                                                  1092
*                        ASPACOPT = SPRECDS;                       1093
         L     @15,FPLSTPTR                                        1093
         MVI   ASPACOPT(@15),X'40'                                 1093
*                        FDTTBLPT = ADDR(APRCD);                   1094
         L     FDTTBLPT,@PC00003+44                                1094
*                        PRIMESPC = NUMBVAL;                       1095
*                                                                  1095
         MVC   PRIMESPC(3,@15),NUMBVAL+1(FDTTBLPT)                 1095
*                        /********************************************/
*                        /*                                          */
*                        /* SECONDARY SPACE IN RECORDS               */
*                        /*                                          */
*                        /********************************************/
*                        IF (ADDR(ASRCD)) ^= NULLPTR               1096
*                          THEN                                    1096
         L     @04,@PC00003+56                                     1096
         CR    @04,@06                                             1096
         BE    @RF01096                                            1096
*                            DO;                                   1097
*                                                                  1097
         ST    @04,@TF00001                                        1097
*                            FDTTBLPT = ADDR(ASRCD);               1098
         L     FDTTBLPT,@TF00001                                   1098
*                            SCONDSPC = NUMBVAL;                   1099
*                                                                  1099
         MVC   SCONDSPC(3,@15),NUMBVAL+1(FDTTBLPT)                 1099
*                            END;                                  1100
*                                                                  1100
*                        END;                                      1101
*                                                                  1101
*                                                                  1101
*                                                                  1101
*                /****************************************************/
*                /*                                                  */
*                /* NO EXPLICIT PICK UP FROM MODEL                   */
*                /*                                                  */
*                /****************************************************/
*                                                                  1102
*                ELSE                                              1102
*                  IF MDLSPARM ^= NULLPTR                          1102
*                    THEN                                          1102
         B     @RC01091                                            1102
@RF01091 SLR   @06,@06                                             1102
         L     @04,@PC00001+8                                      1102
         L     @01,MDLTBLPT(,@04)                                  1102
         C     @06,MDLSPARM(,@01)                                  1102
         BE    @RF01102                                            1102
*                      IF CTGTYPE = CTGTUCAT  ×                    1103
*                        CTGFVT -> CTGFVSPC = NULLPTR              1103
*                          THEN                                    1103
         L     @04,CTGPLPTR(,@04)                                  1103
         CLI   CTGTYPE(@04),C'U'                                   1103
         BE    @RT01103                                            1103
         L     @04,CTGFVT(,@04)                                    1103
         C     @06,CTGFVSPC(,@04)                                  1103
         BNE   @RF01103                                            1103
@RT01103 DS    0H                                                  1104
*                            SPACPFLD = MDLSPACE;                  1104
*                                                                  1104
         L     @06,FPLSTPTR                                        1104
         L     @04,@PC00001+8                                      1104
         L     @04,MDLTBLPT(,@04)                                  1104
         L     @04,MDLSPARM(,@04)                                  1104
         MVC   SPACPFLD(7,@06),MDLSPACE(@04)                       1104
*                          ELSE                                    1105
*                            CTGFVSPC = NULLPTR;                   1105
*                                                                  1105
         B     @RC01103                                            1105
@RF01103 L     @06,@PC00001+8                                      1105
         L     @06,CTGFVPTR(,@06)                                  1105
         SLR   @04,@04                                             1105
         ST    @04,CTGFVSPC(,@06)                                  1105
*            END;                                                  1106
*                                                                  1106
@RC01103 DS    0H                                                  1106
@RF01102 DS    0H                                                  1106
@RC01091 DS    0H                                                  1106
@RC01080 DS    0H                                                  1106
@RC01069 DS    0H                                                  1107
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE ORDERED/UNORDERED ATTRIBUTES IN AMDSB         */
*        /*                                                          */
*        /************************************************************/
*                                                                  1107
*        IF (ADDR(AORDR)) ^= NULLPTR                               1107
*          THEN                                                    1107
@RF01062 L     @06,@PC00003+8                                      1107
         LTR   @06,@06                                             1107
         BZ    @RF01107                                            1107
*            AMDORDER = ON;                                        1108
         L     @06,@PC00001+8                                      1108
         L     @06,DSBCATPT(,@06)                                  1108
         OI    AMDORDER(@06),B'00001000'                           1108
*          ELSE                                                    1109
*            IF (ADDR(AUORD)) ^= NULLPTR                           1109
*              THEN                                                1109
         B     @RC01107                                            1109
@RF01107 L     @06,@PC00003+12                                     1109
         LTR   @06,@06                                             1109
         BZ    @RF01109                                            1109
*                AMDORDER = OFF;                                   1110
*                                                                  1110
         L     @06,@PC00001+8                                      1110
         L     @06,DSBCATPT(,@06)                                  1110
         NI    AMDORDER(@06),B'11110111'                           1110
*              ELSE                                                1111
*                IF MDLAMDSB ^= NULLPTR  &                         1111
*                    CTGTYPE ^= CTGTUCAT                           1111
*                  THEN                                            1111
         B     @RC01109                                            1111
@RF01109 L     @06,@PC00001+8                                      1111
         L     @04,MDLTBLPT(,@06)                                  1111
         L     @04,MDLAMDSB(,@04)                                  1111
         LTR   @04,@04                                             1111
         BZ    @RF01111                                            1111
         L     @01,CTGPLPTR(,@06)                                  1111
         CLI   CTGTYPE(@01),C'U'                                   1111
         BE    @RF01111                                            1111
*                    IF MDLAMDSB -> AMDORDER = ON                  1112
*                      THEN                                        1112
         TM    AMDORDER(@04),B'00001000'                           1112
         BNO   @RF01112                                            1112
*                        AMDORDER = ON;                            1113
         L     @06,DSBCATPT(,@06)                                  1113
         OI    AMDORDER(@06),B'00001000'                           1113
*                      ELSE                                        1114
*                        AMDORDER = OFF;                           1114
*                                                                  1114
         B     @RC01112                                            1114
@RF01112 L     @06,@PC00001+8                                      1114
         L     @06,DSBCATPT(,@06)                                  1114
         NI    AMDORDER(@06),B'11110111'                           1114
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE CONTROL INTERVAL SIZE                         */
*        /*                                                          */
*        /************************************************************/
*                                                                  1115
*        IF (ADDR(ACINV)) ^= NULLPTR                               1115
*          THEN                                                    1115
@RC01112 DS    0H                                                  1115
@RF01111 DS    0H                                                  1115
@RC01109 DS    0H                                                  1115
@RC01107 L     @06,@PC00003+108                                    1115
         LTR   @06,@06                                             1115
         BZ    @RF01115                                            1115
*            DO;                                                   1116
*                                                                  1116
*            FDTTBLPT = ADDR(ACINV);                               1117
         LR    FDTTBLPT,@06                                        1117
*            AMDCINV = NUMBVAL;                                    1118
*                                                                  1118
         L     @06,@PC00001+8                                      1118
         L     @06,DSBCATPT(,@06)                                  1118
         L     @15,NUMBVAL(,FDTTBLPT)                              1118
         ST    @15,AMDCINV(,@06)                                   1118
*            END;                                                  1119
*                                                                  1119
*          ELSE                                                    1120
*            IF MDLAMDSB ^= NULLPTR  &                             1120
*                CTGTYPE ^= CTGTUCAT                               1120
*              THEN                                                1120
         B     @RC01115                                            1120
@RF01115 L     @06,@PC00001+8                                      1120
         L     @04,MDLTBLPT(,@06)                                  1120
         L     @04,MDLAMDSB(,@04)                                  1120
         LTR   @04,@04                                             1120
         BZ    @RF01120                                            1120
         L     @01,CTGPLPTR(,@06)                                  1120
         CLI   CTGTYPE(@01),C'U'                                   1120
         BE    @RF01120                                            1120
*                AMDCINV = MDLAMDSB -> AMDCINV;                    1121
*                                                                  1121
         L     @06,DSBCATPT(,@06)                                  1121
         L     @04,AMDCINV(,@04)                                   1121
         ST    @04,AMDCINV(,@06)                                   1121
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE JCL STATEMENT ADDRESS IN FVT                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1122
*        IF (ADDR(AINDDN)) ^= NULLPTR                      /*@Y30SSJH*/
*          THEN                                                    1122
@RF01120 DS    0H                                                  1122
@RC01115 L     @06,@PC00003                                        1122
         LTR   @06,@06                                             1122
         BZ    @RF01122                                            1122
*            DO;                                                   1123
*                                                                  1123
*            FDTTBLPT = ADDR(AINDDN);                      /*@Y30SSJH*/
         LR    FDTTBLPT,@06                                        1124
*            CTGFVIND = ADDR(CHARVAL);                             1125
*                                                                  1125
         L     @06,@PC00001+8                                      1125
         L     @06,CTGFVPTR(,@06)                                  1125
         LA    @15,CHARVAL(,FDTTBLPT)                              1125
         ST    @15,CTGFVIND(,@06)                                  1125
*            END;                                                  1126
*                                                                  1126
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* INITIALIZE POINTER TO RECOVERY VOLUME SERIAL     @Y30SSJH*/
*        /* WORKAREA                                         @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1127
*        IF CTGFVTYP ^= 'D' &                                      1127
*           CTGFVTYP ^= 'I'                                        1127
*          THEN                                                    1127
@RF01122 L     @06,@PC00001+8                                      1127
         L     @04,CTGFVPTR(,@06)                                  1127
         CLI   CTGFVTYP(@04),C'D'                                  1127
         BE    @RF01127                                            1127
         CLI   CTGFVTYP(@04),C'I'                                  1127
         BE    @RF01127                                            1127
*            DO;                                           /*@Y30SSJH*/
*                                                                  1128
*            CTGFVWKA = ADDR(RECVSWKA);                    /*@Y30SSJH*/
         L     @06,DEPLPTR(,@06)                                   1129
         LA    @15,RECVSWKA(,@06)                                  1129
         ST    @15,CTGFVWKA(,@04)                                  1129
*            RECVSLEN = LENGTH(RECVSWKA);                  /*@Y30SSJH*/
*                                                                  1130
         MVC   RECVSLEN(2,@06),@CH00036                            1130
*            END;                                          /*@Y30SSJH*/
*                                                                  1131
*        /************************************************************/
*        /*                                                          */
*        /* THIS COMPLETES THE ALLOCATION PASS RETURN TO SECOND LEVEL*/
*        /* PROCESSOR WHICH INVOKED ALLCPROC                         */
*        /*                                                          */
*        /************************************************************/
*                                                                  1132
*        RETURN;                                                   1132
*                                                                  1132
         B     @EL00003                                            1132
*END ALLCPROC;                                                     1133
         B     @EL00003                                            1133
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME - KEYPROC (LEVEL THREE INTERNAL PROCEDURE)        */
*/*                                                                  */
*/* FUNCTION - KEYPROC INITIALIZES THE FOLLOWING ITEMS:              */
*/*            . AMDSBCAT FPL - RECORD MANAGEMENT CONTROL BLOCK      */
*/*            . KEY RANGE 'PSEUDO FIELD'                            */
*/*                                                                  */
*/*            KEYPROC RECEIVES ARGUMENTS FROM TWO SOURCES - EXPLICIT*/
*/*            ARGUMENTS DERIVED FROM THE FDTTBL AND FROM THE        */
*/*            MODEL TABLE (KYMDLTAB). EXPLICIT ATTRIBUTES OVERRIDE  */
*/*            THEIR MODEL TABLE COUNTERPARTS.                       */
*/*                                                                  */
*/* INPUT -                                                          */
*/*            DEFSTID - GLOBAL INTERNAL STATUS COMMNUNICATOR        */
*/*            CTGFV   - THE CURRENT FVT IS ESTABLISHED EXTERNALLY   */
*/*              BY THE LEVEL TWO PROCESSOR                          */
*/*            SEE DEFINITION OF ARGUMENTS OF INVOCATION(BELOW)      */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*            DEFSTID - GLOBAL PROCESSING STATUS, SET ON ERROR      */
*/*              DETECTION.                                          */
*/*                . DEFSTID = NOSTORAG                              */
*/*                . DEFSTID = RANGERR                               */
*/*            CREATION OF FIELDS MENTIONED ABOVE                    */
*/*                                                                  */
*/********************************************************************/
*KEYPROC:                                                          1134
*        PROCEDURE(KEY,KYPS,KYLN,RANGE,RANGECNT,                   1134
*              RNGLOPTR,RNGHIPTR,KSPND,KNSPD,KUNQK,KNUQK,  /*@Y30SSJH*/
*              KYMDLTAB)                                   /*@Y30SSJH*/
*          OPTIONS(SAVEAREA);                              /*@Y30SSJH*/
KEYPROC  STM   @14,@12,12(@13)                                     1134
         ST    @13,@SA00004+4                                      1134
         LA    @14,@SA00004                                        1134
         ST    @14,8(,@13)                                         1134
         LR    @13,@14                                             1134
         MVC   @PC00004(48),0(@01)                                 1134
*        GEN (ENTRY KEYPROC);        /* EXTERNAL ENTRY POINT @Y30SSJH*/
         ENTRY KEYPROC
*        LM(REG10,REG12,BASESAVE);      /* LOAD PROC CODEREG @Y30SSJH*/
*                                                                  1136
         LM    REG10,REG12,BASESAVE                                1136
*        /************************************************************/
*        /*                                                          */
*        /* ARGUMENTS OF INVOCATION                                  */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1137
*          KEY,                        /* INDICATOR OF KEYS PARAM   */
*          KYPS,                       /* KEY POSITION              */
*          KYLN,                       /* KEY LENGTH                */
*          RANGE,                      /* INDICATOR OF RANGE PARM    */
*          RANGECNT FIXED(31),         /* PAIRS OF RANGES            */
*          RNGLOPTR(*) PTR(31),        /* LOW RANGE POINTER          */
*          RNGHIPTR(*) PTR(31),        /* HIGH RANGE POINTER         */
*          KSPND,                      /* SPANNED ATTRIBUTE  @Y30SSJH*/
*          KNSPD,                      /* NONSPANNED         @Y30SSJH*/
*          KUNQK,                      /* UNIQUEKEY          @Y30SSJH*/
*          KNUQK,                      /* NONUNIQUEKEY       @Y30SSJH*/
*          KYMDLTAB;                   /* MODEL TABLE                */
*                                                                  1137
*        DCL KEYFPLPT PTR(31);                                     1138
*                                                                  1138
*        /************************************************************/
*        /*                                                          */
*        /* BASIC OVERLAY FOR FPL AND AMDSBCAT FIELD                 */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1139
*          1 FPLAMDSB  BDY(WORD)BASED(KEYFPLPT),                   1139
*            2 KFPLAREA CHAR(LENGTH(CTGFL)),                       1139
*            2 *       CHAR(8),                                    1139
*            2 AMDAREA CHAR(LENGTH(IDAAMDSB));             /*@Y30SSJH*/
*                                                                  1139
*        /************************************************************/
*        /*                                                          */
*        /* AMDSBCAT FIELD NAME                                      */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1140
*          AMDSBNAM CHAR(8) INIT('AMDSBCAT') STATIC;               1140
*                                                                  1140
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* CONSTANTS USED FOR DEFAULT KEYLENGTH AND RKP     @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1141
*        DCL                                                       1141
*          KEYLNDEF FIXED(15) CONSTANT(64),                /*@Y30SSJH*/
*          AIXRKP   FIXED(15) CONSTANT(5);                 /*@Y30SSJH*/
*                                                                  1141
*        /************************************************************/
*        /*                                                          */
*        /* OVERLAY FOR LOW - HIGH KEY FDT SPECIFICATION             */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1142
*          RGFDTPTR PTR(31);                                       1142
*        DCL                                                       1143
*          1 RANGEFDT BASED(RGFDTPTR),                             1143
*            2 RGKEYLN FIXED(8),                           /*@Y30SSJH*/
*            2 RGKEY   CHAR(*);                                    1143
*                                                                  1143
*        DCL                                                       1144
*          RANGLOOP  FIXED(31);        /* RANGE LOOP CONTROL         */
*                                                                  1144
*        DCL                                                       1145
*          RGLSTPT PTR(31);                                        1145
*                                                                  1145
*        DCL                                                       1146
*          1 RANGLIST  BASED(RGLSTPT),                             1146
*            2 RGLISTLN FIXED(15) BDY(BYTE),                       1146
*            2 RANGARRY CHAR(*);                                   1146
*                                                                  1146
*        DCL                                                       1147
*          1 LOHIPAIR BASED(RGLSTPT),                              1147
*            2 LOHIKYLN FIXED(15),                                 1147
*            2 LOHIKEY  CHAR(*);                                   1147
*                                                                  1147
*        /************************************************************/
*        /*                                                          */
*        /* ADDRESSABILITY STRUCTURE TO KEY RANGES AS REQUIRED BY    */
*        /* THE MODELING OF RANGES                                   */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1148
*          RNGFPLLO PTR(31),                                       1148
*          RNGFPLHI PTR(31);                                       1148
*                                                                  1148
*        DCL                                                       1149
*          1 RGKYFPL  BASED(RNGFPLLO),                             1149
*            2 FPLLKYLN FIXED(15),                                 1149
*            2 FPLLOKEY CHAR(*);                                   1149
*                                                                  1149
*        DCL                                                       1150
*          1 RGHKYFPL  BASED(RNGFPLHI),                            1150
*            2 FPLHKYLN FIXED(15),                                 1150
*            2 FPLHIKEY CHAR(*);                                   1150
*                                                                  1150
*        /************************************************************/
*        /*                                                          */
*        /* RANGE COMPUTATION VARIABLES                              */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1151
*          MAXRGADR  PTR(31),          /* END ADDR OF RANGE LIST     */
*          RANGELEN  FIXED(31),        /* LENGTH OF RANGE LIST       */
*          RANGFLAG  CHAR(1);          /* LOOP CONTROL FLAG          */
*                                                                  1151
*        /************************************************************/
*        /*                                                          */
*        /* VARIABLES AND WORKAREAS USED IN CHECKING THE VALIDITY OF */
*        /* KEY RANGE PAIRS WHICH COMPRISE THE KEYRANGE LIST         */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1152
*          CKRANGE   CHAR(1),          /* FLAG WHICH INDICATES A KEY
*                                         RANGE IS TO BE CHECKED     */
*          LKYCHECK  CHAR(64),         /* LOW KEY CHECK AREA         */
*          HKYCHECK  CHAR(64),         /* HIGH KEY CHECK AREA        */
*          LKYCMPR   CHAR(64),         /* LOW KEY COMPARE AREA       */
*          HKYCMPR   CHAR(64),         /* HIGH KEY COMPARE AREA      */
*          LKYCKPTR  PTR(31),          /* PTR TO LOW KEY IN CHECKLIST*/
*          HKYCKPTR  PTR(31),          /* PTR TO HIGHKEY IN CHECKLIST*/
*          LKYCMPTR  PTR(31),          /* PTR TO LOWKEY COMPARELIST  */
*          HKYCMPTR  PTR(31),          /* PTR TO HIGHKEY COMPARELIST */
*          KYMSKPTR  PTR(31);          /* PTR TO MASK USED IN SETTING
*                                         KEY AREAS TO BINARY ONES   */
*                                                                  1152
*        DCL                                                       1153
*          KEYMASK   CHAR(64) BASED(KYMSKPTR); /* MASK FOR ONES INIT */
*                                                                  1153
*        DCL                                                       1154
*          1 *       BASED(LKYCKPTR),  /* LOWKEY CHECK LIST          */
*            2 LKYLEN  FIXED(15),                                  1154
*            2 LOKEY   CHAR(*);                                    1154
*                                                                  1154
*        DCL                                                       1155
*          1 *       BASED(HKYCKPTR),  /* HIGHKEY CHECK LIST         */
*            2 HIKYLEN FIXED(15),                                  1155
*            2 HIKEY   CHAR(*);                                    1155
*                                                                  1155
*        DCL                                                       1156
*          1 *       BASED(LKYCMPTR),  /* LOWKEY COMPARE LIST        */
*            2 LKYCMPLN FIXED(15),                                 1156
*            2 LKYCOMP  CHAR(*);                                   1156
*                                                                  1156
*        DCL                                                       1157
*          1 *       BASED(HKYCMPTR),  /* HIGHKEY COMPARE LIST       */
*            2 HKYCMPLN FIXED(15),                                 1157
*            2 HKYCOMP  CHAR(*);                                   1157
*        /************************************************************/
*        /*                                                          */
*        /* ENTRY POINT TO KEYPROC                                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  1158
*        OLDERID2 = NEWERID2;                                      1158
         L     @06,@PC00001                                        1158
         L     @04,GDTTR2(,@06)                                    1158
         MVC   @TS00001(95),NEWERID2(@04)                          1158
         MVC   OLDERID2(95,@04),@TS00001                           1158
*        NEWID2 = 'DE33';                                          1159
         MVC   NEWID2(4,@04),@CC02811                              1159
*        CKRANGE = STOP;                                           1160
*                                                                  1160
         MVI   CKRANGE,X'0F'                                       1160
*        /************************************************************/
*        /*                                                          */
*        /* GET DYNAMIC STORAGE FOR AMDSBCAT FPL AND AMDSBCAT FIELD  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1161
*        IF KEYFLAG = GO                                           1161
*          THEN                                                    1161
         L     @04,@PC00001+8                                      1161
         CLI   KEYFLAG(@04),X'00'                                  1161
         BNE   @RF01161                                            1161
*            DO;                                                   1162
*                                                                  1162
*            KEYFLAG = STOP;                                       1163
         MVI   KEYFLAG(@04),X'0F'                                  1163
*            CALL IDCSAGP0 (GDTTBL,(LENGTH(FPLAMDSB)),             1164
*              KEYFPLPT,DEGPID,SETZERO);                           1164
*                                                                  1164
         ST    @06,@AL00001                                        1164
         LA    @09,120                                             1164
         ST    @09,@AFTEMPS+8                                      1164
         LA    @09,@AFTEMPS+8                                      1164
         ST    @09,@AL00001+4                                      1164
         LA    @09,KEYFPLPT                                        1164
         ST    @09,@AL00001+8                                      1164
         LA    @09,DEGPID                                          1164
         ST    @09,@AL00001+12                                     1164
         LA    @09,SETZERO                                         1164
         ST    @09,@AL00001+16                                     1164
         MVI   @AL00001+16,X'80'                                   1164
         L     @15,GDTGPL(,@06)                                    1164
         LA    @01,@AL00001                                        1164
         BALR  @14,@15                                             1164
*            RESPECIFY RTNREG RSTD;                                1165
*            TESTRC = RTNREG;                                      1166
         LR    TESTRC,RTNREG                                       1166
*            RESPECIFY RTNREG UNRSTD;                              1167
*            IF TESTRC ^= 0                                        1168
*              THEN                                                1168
         LTR   TESTRC,TESTRC                                       1168
         BZ    @RF01168                                            1168
*                DO;                                               1169
*                                                                  1169
*                DEFSTID = NOSTORAG;                               1170
         L     @06,@PC00001+8                                      1170
         MVC   DEFSTID(5,@06),@CB02317                             1170
*                RETURN;                                           1171
*                                                                  1171
@EL00004 L     @13,4(,@13)                                         1171
@EF00004 DS    0H                                                  1171
@ER00004 LM    @14,@12,12(@13)                                     1171
         BR    @14                                                 1171
*                END;                                              1172
*                                                                  1172
*            /********************************************************/
*            /*                                                      */
*            /* INITIALIZE FPL AND REFERENCE IDAAMDSB        @Y30SSJH*/
*            /*                                                      */
*            /********************************************************/
*                                                                  1173
*            CTGFLPTR = ADDR(KFPLAREA);                            1173
@RF01168 L     @06,KEYFPLPT                                        1173
         LR    CTGFLPTR,@06                                        1173
*            CTGFVAMD = CTGFLPTR;                                  1174
         L     @04,@PC00001+8                                      1174
         L     @02,CTGFVPTR(,@04)                                  1174
         ST    CTGFLPTR,CTGFVAMD(,@02)                             1174
*            CTGFLNG(1) = LENGTH(IDAAMDSB);                /*@Y30SSJH*/
         MVC   CTGFLNG(4,CTGFLPTR),@CF01344                        1175
*            CTGFLPT(1) = ADDR(AMDAREA);                           1176
         LA    @06,AMDAREA(,@06)                                   1176
         ST    @06,CTGFLPT(,CTGFLPTR)                              1176
*            DSBCATPT = CTGFLPT(1);                                1177
         ST    @06,DSBCATPT(,@04)                                  1177
*            CTGFLDNO = 1;                                         1178
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            1178
*            CTGFLDNM = ADDR(AMDSBNAM);                            1179
         LA    @04,AMDSBNAM                                        1179
         ST    @04,CTGFLDNM(,CTGFLPTR)                             1179
*            AMDLEN = CTGFLNG(1);                                  1180
*                                                                  1180
         L     @04,CTGFLNG(,CTGFLPTR)                              1180
         STH   @04,AMDLEN(,@06)                                    1180
*            /********************************************************/
*            /*                                                      */
*            /* SET TYPE - INDEXED OR NONINDEXED                     */
*            /*            OR NUMBERED                       @Y30SSJH*/
*            /*                                                      */
*            /********************************************************/
*                                                                  1181
*            IF ((ADDR(INDEX))  ^= NULLPTR  ×                      1181
*                (ADDR(CINDX))  ^= NULLPTR  ×                      1181
*                (ADDR(MCAT))   ^= NULLPTR  ×                      1181
*                (ADDR(UCAT))   ^= NULLPTR  ×                      1181
*                (ADDR(AIX))    ^= NULLPTR  ×              /*@Y30SSJH*/
*                (ADDR(CNIDX)    = NULLPTR &                       1181
*                 ADDR(PGSP)     = NULLPTR  &                      1181
*                 ADDR(CNUMD)    = NULLPTR &               /*@Y30SSJH*/
*                 ADDR(CMODL)    = NULLPTR) ×                      1181
*                (ADDR(CMODL)   ^= NULLPTR &                       1181
*                 IASCNMID       = 'I'      ) )                    1181
*              THEN                                                1181
*                                                                  1181
         SLR   @06,@06                                             1181
         L     @04,@PC00001+4                                      1181
         C     @06,FDTPTR+32(,@04)                                 1181
         BNE   @RT01181                                            1181
         C     @06,FDTPTR+92(,@04)                                 1181
         BNE   @RT01181                                            1181
         C     @06,FDTPTR+12(,@04)                                 1181
         BNE   @RT01181                                            1181
         C     @06,FDTPTR+16(,@04)                                 1181
         BNE   @RT01181                                            1181
         C     @06,FDTPTR+52(,@04)                                 1181
         BNE   @RT01181                                            1181
         C     @06,FDTPTR+96(,@04)                                 1181
         BNE   @GL00031                                            1181
         C     @06,FDTPTR+24(,@04)                                 1181
         BNE   @GL00031                                            1181
         C     @06,FDTPTR+1056(,@04)                               1181
         BNE   @GL00031                                            1181
         C     @06,FDTPTR+104(,@04)                                1181
         BE    @RT01181                                            1181
@GL00031 L     @06,@PC00001+4                                      1181
         L     @06,FDTPTR+104(,@06)                                1181
         LTR   @06,@06                                             1181
         BZ    @RF01181                                            1181
         L     @06,@PC00001+8                                      1181
         CLI   IASCNMID(@06),C'I'                                  1181
         BNE   @RF01181                                            1181
@RT01181 DS    0H                                                  1182
*                /****************************************************/
*                /*                                          @Y30SSJH*/
*                /* THE TYPE IS INDEXED - SET KSDS INDICATOR @Y30SSJH*/
*                /* AND DEFAULT KEYLENGTH AND RKP            @Y30SSJH*/
*                /*                                          @Y30SSJH*/
*                /****************************************************/
*                                                                  1182
*                DO;                                       /*@Y30SSJH*/
*                AMDDST = ON;                              /*@Y30SSJH*/
*                                                                  1183
         L     @06,@PC00001+8                                      1183
         L     @04,DSBCATPT(,@06)                                  1183
         OI    AMDDST(@04),B'10000000'                             1183
*                IF (ADDR(MCAT)) = NULLPTR &                       1184
*                   (ADDR(UCAT)) = NULLPTR &                       1184
*                    CTGFVTYP = 'D'                                1184
*                  THEN                                            1184
         SLR   @15,@15                                             1184
         L     @14,@PC00001+4                                      1184
         C     @15,FDTPTR+12(,@14)                                 1184
         BNE   @RF01184                                            1184
         C     @15,FDTPTR+16(,@14)                                 1184
         BNE   @RF01184                                            1184
         L     @06,CTGFVPTR(,@06)                                  1184
         CLI   CTGFVTYP(@06),C'D'                                  1184
         BNE   @RF01184                                            1184
*                    DO;                                   /*@Y30SSJH*/
*                                                                  1185
*                    AMDKEYLN = KEYLNDEF;                  /*@Y30SSJH*/
*                                                                  1186
         MVC   AMDKEYLN(2,@04),@CH01127                            1186
*                    IF (ADDR(AIX)) ^= NULLPTR                     1187
*                      THEN                                        1187
         C     @15,FDTPTR+52(,@14)                                 1187
         BE    @RF01187                                            1187
*                        DO;               /* AIX DEFAULT    @Y30SSJH*/
*                                                                  1188
*                        AMDAXRKP = NULLPTR;               /*@Y30SSJH*/
         STH   @15,AMDAXRKP(,@04)                                  1189
*                        AMDRKP = AIXRKP;                  /*@Y30SSJH*/
*                                                                  1190
         MVC   AMDRKP(2,@04),@CH00287                              1190
*                        END;                              /*@Y30SSJH*/
*                                                                  1191
*                      ELSE                /* CLUSTER DEFAULT@Y30SSJH*/
*                        AMDRKP = NULLPTR;                 /*@Y30SSJH*/
*                                                                  1192
         B     @RC01187                                            1192
@RF01187 L     @06,@PC00001+8                                      1192
         L     @06,DSBCATPT(,@06)                                  1192
         SLR   @04,@04                                             1192
         STH   @04,AMDRKP(,@06)                                    1192
*                    END;                                  /*@Y30SSJH*/
*                                                                  1193
*                END;                                      /*@Y30SSJH*/
*                                                                  1194
*              /******************************************************/
*              /*                                            @Y30SSJH*/
*              /* THE TYPE IS NOT INDEXED - DETERMINE IF IT  @Y30SSJH*/
*              /* IS NUMBERED                                @Y30SSJH*/
*              /*                                            @Y30SSJH*/
*              /******************************************************/
*                                                                  1195
*              ELSE                                                1195
*                IF (ADDR(CNUMD)) ^= NULLPTR                       1195
*                  THEN                                            1195
         B     @RC01181                                            1195
@RF01181 L     @06,@PC00001+4                                      1195
         L     @06,FDTPTR+1056(,@06)                               1195
         LTR   @06,@06                                             1195
         BZ    @RF01195                                            1195
*                    AMDRRDS = ON;     /* NUMBERED SPECIFIED @Y30SSJH*/
*                                                                  1196
         L     @06,@PC00001+8                                      1196
         L     @06,DSBCATPT(,@06)                                  1196
         OI    AMDRRDS(@06),B'00000010'                            1196
*                  ELSE                                            1197
*                    IF (ADDR(CNIDX)) = NULLPTR &                  1197
*                       MDLAMDSB ^= NULLPTR                        1197
*                      THEN                                        1197
         B     @RC01195                                            1197
@RF01195 SLR   @06,@06                                             1197
         L     @04,@PC00001+4                                      1197
         C     @06,FDTPTR+96(,@04)                                 1197
         BNE   @RF01197                                            1197
         L     @04,@PC00001+8                                      1197
         L     @01,MDLTBLPT(,@04)                                  1197
         L     @15,MDLAMDSB(,@01)                                  1197
         CR    @15,@06                                             1197
         BE    @RF01197                                            1197
*                        IF MDLAMDSB -> AMDRRDS = ON               1198
*                          THEN                                    1198
         TM    AMDRRDS(@15),B'00000010'                            1198
         BNO   @RF01198                                            1198
*                            AMDRRDS = ON; /* NUMBERED MODEL @Y30SSJH*/
*                                                                  1199
         L     @06,DSBCATPT(,@04)                                  1199
         OI    AMDRRDS(@06),B'00000010'                            1199
*                          ELSE;                           /*@Y30SSJH*/
*                                                                  1200
@RF01198 DS    0H                                                  1201
*                      ELSE;                               /*@Y30SSJH*/
*                                                                  1201
*                                                                  1201
@RF01197 DS    0H                                                  1202
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* SET NONUNIQUEKEY DEFAULT.  IF EXPLICITLY SPECIFIED OR*/
*            /* MODELLED, DEFAULT WILL BE OVERRIDDEN         @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  1202
*            IF (ADDR(AIX)) ^= NULLPTR &                           1202
*              CTGFVTYP = 'D'                                      1202
*              THEN                                                1202
@RC01195 DS    0H                                                  1202
@RC01181 L     @06,@PC00001+4                                      1202
         L     @06,FDTPTR+52(,@06)                                 1202
         LTR   @06,@06                                             1202
         BZ    @RF01202                                            1202
         L     @06,@PC00001+8                                      1202
         L     @04,CTGFVPTR(,@06)                                  1202
         CLI   CTGFVTYP(@04),C'D'                                  1202
         BNE   @RF01202                                            1202
*                AMDUNQ = ON;                              /*@Y30SSJH*/
*                                                                  1203
         L     @06,DSBCATPT(,@06)                                  1203
         OI    AMDUNQ(@06),B'10000000'                             1203
*            END;                                                  1204
*                                                                  1204
*          /**********************************************************/
*          /*                                                        */
*          /* SECOND PASS - RESET PTRS TO AMDSBFPL AND IDAAMDSB      */
*          /*                                                        */
*          /**********************************************************/
*                                                                  1205
*          ELSE                                                    1205
*            DO;                                                   1205
*                                                                  1205
         B     @RC01161                                            1205
@RF01161 DS    0H                                                  1206
*            CTGFLPTR = ADDR(KFPLAREA);                            1206
         L     CTGFLPTR,KEYFPLPT                                   1206
*            DSBCATPT = CTGFLPT(1);                                1207
*                                                                  1207
         L     @06,@PC00001+8                                      1207
         L     @04,CTGFLPT(,CTGFLPTR)                              1207
         ST    @04,DSBCATPT(,@06)                                  1207
*            END;                                                  1208
*                                                                  1208
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* SET THE SPANNED ATTRIBUTE IN THE AMDSB -         @Y30SSJH*/
*        /* AN ALTERNATE INDEX IS ALWAYS SPANNED             @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1209
*        IF (ADDR(AIX)) ^= NULLPTR &                               1209
*           CTGFVTYP = 'D'                                         1209
*          THEN                                                    1209
@RC01161 L     @06,@PC00001+4                                      1209
         L     @06,FDTPTR+52(,@06)                                 1209
         LTR   @06,@06                                             1209
         BZ    @RF01209                                            1209
         L     @06,@PC00001+8                                      1209
         L     @04,CTGFVPTR(,@06)                                  1209
         CLI   CTGFVTYP(@04),C'D'                                  1209
         BNE   @RF01209                                            1209
*            AMDSPAN = ON;                                 /*@Y30SSJH*/
*                                                                  1210
         L     @06,DSBCATPT(,@06)                                  1210
         OI    AMDSPAN(@06),B'00000001'                            1210
*          ELSE                                                    1211
*                                                                  1211
*            IF (ADDR(KSPND)) ^= NULLPTR /* VALUE FROM FDTTBL@Y30SSJH*/
*              THEN                                                1211
         B     @RC01209                                            1211
@RF01209 L     @06,@PC00004+28                                     1211
         LTR   @06,@06                                             1211
         BZ    @RF01211                                            1211
*                AMDSPAN = ON;                             /*@Y30SSJH*/
*                                                                  1212
         L     @06,@PC00001+8                                      1212
         L     @06,DSBCATPT(,@06)                                  1212
         OI    AMDSPAN(@06),B'00000001'                            1212
*              ELSE                                                1213
*                IF (ADDR(KNSPD)) ^= NULLPTR                       1213
*                  THEN                                            1213
         B     @RC01211                                            1213
@RF01211 L     @06,@PC00004+32                                     1213
         LTR   @06,@06                                             1213
         BZ    @RF01213                                            1213
*                    AMDSPAN = OFF;                        /*@Y30SSJH*/
*                                                                  1214
         L     @06,@PC00001+8                                      1214
         L     @06,DSBCATPT(,@06)                                  1214
         NI    AMDSPAN(@06),B'11111110'                            1214
*                  ELSE                  /* VALUE FROM MODEL @Y30SSJH*/
*                    IF MDLAMDSB ^= NULLPTR &                      1215
*                       (ADDR(MCAT)) = NULLPTR &                   1215
*                       (ADDR(UCAT)) = NULLPTR &                   1215
*                       (ADDR(PGSP)) = NULLPTR &                   1215
*                       CTGFVTYP = 'D'                             1215
*                      THEN                                        1215
         B     @RC01213                                            1215
@RF01213 SLR   @06,@06                                             1215
         L     @04,@PC00001+8                                      1215
         L     @01,MDLTBLPT(,@04)                                  1215
         L     @15,MDLAMDSB(,@01)                                  1215
         CR    @15,@06                                             1215
         BE    @RF01215                                            1215
         L     @14,@PC00001+4                                      1215
         C     @06,FDTPTR+12(,@14)                                 1215
         BNE   @RF01215                                            1215
         C     @06,FDTPTR+16(,@14)                                 1215
         BNE   @RF01215                                            1215
         C     @06,FDTPTR+24(,@14)                                 1215
         BNE   @RF01215                                            1215
         L     @06,CTGFVPTR(,@04)                                  1215
         CLI   CTGFVTYP(@06),C'D'                                  1215
         BNE   @RF01215                                            1215
*                        IF MDLAMDSB -> AMDSPAN = ON               1216
*                          THEN                                    1216
         TM    AMDSPAN(@15),B'00000001'                            1216
         BNO   @RF01216                                            1216
*                            AMDSPAN = ON;                 /*@Y30SSJH*/
*                                                                  1217
         L     @06,DSBCATPT(,@04)                                  1217
         OI    AMDSPAN(@06),B'00000001'                            1217
*                          ELSE                                    1218
*                            AMDSPAN = OFF;                /*@Y30SSJH*/
*                                                                  1218
         B     @RC01216                                            1218
@RF01216 L     @06,@PC00001+8                                      1218
         L     @06,DSBCATPT(,@06)                                  1218
         NI    AMDSPAN(@06),B'11111110'                            1218
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* SET THE ALTERNATE INDEX UNIQUE KEY ATTRIBUTE IN  @Y30SSJH*/
*        /* THE AMDSB                                        @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1219
*        IF (ADDR(KUNQK)) ^= NULLPTR   /* VALUE FROM FDTTBL  @Y30SSJH*/
*          THEN                                                    1219
@RC01216 DS    0H                                                  1219
@RF01215 DS    0H                                                  1219
@RC01213 DS    0H                                                  1219
@RC01211 DS    0H                                                  1219
@RC01209 L     @06,@PC00004+36                                     1219
         LTR   @06,@06                                             1219
         BZ    @RF01219                                            1219
*            AMDUNQ = OFF;                                 /*@Y30SSJH*/
*                                                                  1220
         L     @06,@PC00001+8                                      1220
         L     @06,DSBCATPT(,@06)                                  1220
         NI    AMDUNQ(@06),B'01111111'                             1220
*          ELSE                                                    1221
*            IF (ADDR(KNUQK)) ^= NULLPTR                           1221
*              THEN                                                1221
         B     @RC01219                                            1221
@RF01219 L     @06,@PC00004+40                                     1221
         LTR   @06,@06                                             1221
         BZ    @RF01221                                            1221
*                AMDUNQ = ON;                              /*@Y30SSJH*/
*                                                                  1222
         L     @06,@PC00001+8                                      1222
         L     @06,DSBCATPT(,@06)                                  1222
         OI    AMDUNQ(@06),B'10000000'                             1222
*              ELSE                                                1223
*                IF MDLAMDSB ^= NULLPTR &                          1223
*                   (ADDR(AIX)) ^= NULLPTR &                       1223
*                   CTGFVTYP = 'D'                                 1223
*                  THEN                                            1223
         B     @RC01221                                            1223
@RF01221 SLR   @06,@06                                             1223
         L     @04,@PC00001+8                                      1223
         L     @01,MDLTBLPT(,@04)                                  1223
         L     @15,MDLAMDSB(,@01)                                  1223
         CR    @15,@06                                             1223
         BE    @RF01223                                            1223
         L     @14,@PC00001+4                                      1223
         C     @06,FDTPTR+52(,@14)                                 1223
         BE    @RF01223                                            1223
         L     @06,CTGFVPTR(,@04)                                  1223
         CLI   CTGFVTYP(@06),C'D'                                  1223
         BNE   @RF01223                                            1223
*                    IF MDLAMDSB -> AMDUNQ = ON                    1224
*                      THEN                                        1224
         TM    AMDUNQ(@15),B'10000000'                             1224
         BNO   @RF01224                                            1224
*                        AMDUNQ = ON;                      /*@Y30SSJH*/
*                                                                  1225
         L     @06,DSBCATPT(,@04)                                  1225
         OI    AMDUNQ(@06),B'10000000'                             1225
*                      ELSE                                        1226
*                        AMDUNQ = OFF;                     /*@Y30SSJH*/
*                                                                  1226
         B     @RC01224                                            1226
@RF01224 L     @06,@PC00001+8                                      1226
         L     @06,DSBCATPT(,@06)                                  1226
         NI    AMDUNQ(@06),B'01111111'                             1226
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE KEYS AND OPTIONS IN IDAAMDSB -        @Y30SSJH*/
*        /* KEY POSITION AND LENGTH IS SET ONLY FOR DATA     @Y30SSJH*/
*        /* OBJECT OF THE DATA SET                           @Y30SSJH*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1227
*        IF (ADDR(KEY)) ^= NULLPTR                                 1227
*          THEN                                                    1227
@RC01224 DS    0H                                                  1227
@RF01223 DS    0H                                                  1227
@RC01221 DS    0H                                                  1227
@RC01219 SLR   @06,@06                                             1227
         L     @04,@PC00004                                        1227
         CR    @04,@06                                             1227
         BE    @RF01227                                            1227
*            DO;                                                   1228
*                                                                  1228
*            FDTTBLPT = ADDR(KYLN);                                1229
         L     FDTTBLPT,@PC00004+8                                 1229
*            AMDKEYLN = NUMBVAL;                                   1230
*                                                                  1230
         L     @15,@PC00001+8                                      1230
         L     @15,DSBCATPT(,@15)                                  1230
         L     @14,NUMBVAL(,FDTTBLPT)                              1230
         STH   @14,AMDKEYLN(,@15)                                  1230
*            FDTTBLPT = ADDR(KYPS);                        /*@Y30SSJH*/
         L     FDTTBLPT,@PC00004+4                                 1231
*            IF (ADDR(AIX)) ^= NULLPTR                             1232
*              THEN                                                1232
         L     @14,@PC00001+4                                      1232
         C     @06,FDTPTR+52(,@14)                                 1232
         BE    @RF01232                                            1232
*                AMDAXRKP = NUMBVAL;                       /*@Y30SSJH*/
*                                                                  1233
         L     @06,NUMBVAL(,FDTTBLPT)                              1233
         STH   @06,AMDAXRKP(,@15)                                  1233
*              ELSE                                                1234
*                AMDRKP = NUMBVAL;                         /*@Y30SSJH*/
*                                                                  1234
         B     @RC01232                                            1234
@RF01232 L     @06,@PC00001+8                                      1234
         L     @06,DSBCATPT(,@06)                                  1234
         L     @15,NUMBVAL(,FDTTBLPT)                              1234
         STH   @15,AMDRKP(,@06)                                    1234
*            END;                                                  1235
*                                                                  1235
*          ELSE                                                    1236
*            IF MDLAMDSB ^= NULLPTR   &                            1236
*              (ADDR(MCAT)) = NULLPTR  &                           1236
*              (ADDR(UCAT)) = NULLPTR  &                           1236
*              (ADDR(PGSP)) = NULLPTR  &                           1236
*               CTGFVTYP    = 'D'                                  1236
*              THEN                                                1236
         B     @RC01227                                            1236
@RF01227 SLR   @06,@06                                             1236
         L     @04,@PC00001+8                                      1236
         L     @01,MDLTBLPT(,@04)                                  1236
         L     @15,MDLAMDSB(,@01)                                  1236
         CR    @15,@06                                             1236
         BE    @RF01236                                            1236
         L     @14,@PC00001+4                                      1236
         C     @06,FDTPTR+12(,@14)                                 1236
         BNE   @RF01236                                            1236
         C     @06,FDTPTR+16(,@14)                                 1236
         BNE   @RF01236                                            1236
         C     @06,FDTPTR+24(,@14)                                 1236
         BNE   @RF01236                                            1236
         L     @01,CTGFVPTR(,@04)                                  1236
         CLI   CTGFVTYP(@01),C'D'                                  1236
         BNE   @RF01236                                            1236
*                DO;                                               1237
*                                                                  1237
*                AMDKEYLN = MDLAMDSB -> AMDKEYLN;                  1238
*                                                                  1238
         L     @04,DSBCATPT(,@04)                                  1238
         LH    @09,AMDKEYLN(,@15)                                  1238
         STH   @09,AMDKEYLN(,@04)                                  1238
*                IF (ADDR(AIX)) ^= NULLPTR                         1239
*                  THEN                                            1239
         C     @06,FDTPTR+52(,@14)                                 1239
         BE    @RF01239                                            1239
*                    AMDAXRKP = MDLAMDSB -> AMDAXRKP;      /*@Y30SSJH*/
*                                                                  1240
         LH    @06,AMDAXRKP(,@15)                                  1240
         STH   @06,AMDAXRKP(,@04)                                  1240
*                  ELSE                                            1241
*                    AMDRKP = MDLAMDSB -> AMDRKP;          /*@Y30SSJH*/
*                                                                  1241
         B     @RC01239                                            1241
@RF01239 L     @06,@PC00001+8                                      1241
         L     @04,DSBCATPT(,@06)                                  1241
         L     @06,MDLTBLPT(,@06)                                  1241
         L     @06,MDLAMDSB(,@06)                                  1241
         LH    @06,AMDRKP(,@06)                                    1241
         STH   @06,AMDRKP(,@04)                                    1241
*                END;                                              1242
*                                                                  1242
@RC01239 DS    0H                                                  1243
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE THE LOW KEY - HIGH KEY 'PSEUDO' LIST - THE    */
*        /* SOURCE OF KEYS FOR THIS LIST COME FROM EITHER THE FDTTBL */
*        /* OR THE MODEL OBJECT.                                     */
*        /*                                                          */
*        /************************************************************/
*        IF (ADDR(RANGE)) ^= NULLPTR                               1243
*          THEN                                                    1243
@RF01236 DS    0H                                                  1243
@RC01227 L     @06,@PC00004+12                                     1243
         LTR   @06,@06                                             1243
         BZ    @RF01243                                            1243
*            /********************************************************/
*            /*                                                      */
*            /* THE RANGE VALUES ARE TAKEN FROM THE FDTTBL AND       */
*            /* CONVERTED INTO THE 'PSEUDO' FIELD FORMAT REFERENCED  */
*            /* BY THE FVT                                           */
*            /*                                                      */
*            /********************************************************/
*            DO;                                                   1244
*                                                                  1244
*            AMDRANGE = ON;                                        1245
*                                                                  1245
         L     @06,@PC00001+8                                      1245
         L     @06,DSBCATPT(,@06)                                  1245
         OI    AMDRANGE(@06),B'00000100'                           1245
*            /********************************************************/
*            /*                                                      */
*            /* COMPUTE THE LENGTH REQUIRED FOR THE KEY RANGE        */
*            /* 'PSEUDO' LIST                                        */
*            /*                                                      */
*            /********************************************************/
*                                                                  1246
*            RANGELEN = 0;                                         1246
*                                                                  1246
         SLR   RANGELEN,RANGELEN                                   1246
*            DO RANGLOOP = 1 TO RANGECNT;                          1247
*                                                                  1247
         LA    RANGLOOP,1                                          1247
         B     @DE01247                                            1247
@DL01247 DS    0H                                                  1248
*              RANGELEN = (RANGELEN + 4) +                         1248
*                         (RNGLOPTR(RANGLOOP) -> RGKEYLN) +        1248
*                         (RNGHIPTR(RANGLOOP) -> RGKEYLN) ;        1248
*                                                                  1248
         LA    @06,4                                               1248
         ALR   @06,RANGELEN                                        1248
         LR    @02,RANGLOOP                                        1248
         SLA   @02,2                                               1248
         L     @15,@PC00004+20                                     1248
         AL    @15,@CF03031                                        1248
         L     @01,RNGLOPTR(@02,@15)                               1248
         SLR   @00,@00                                             1248
         IC    @00,RGKEYLN(,@01)                                   1248
         ALR   @06,@00                                             1248
         L     @15,@PC00004+24                                     1248
         AL    @15,@CF03031                                        1248
         L     @02,RNGHIPTR(@02,@15)                               1248
         SLR   @15,@15                                             1248
         IC    @15,RGKEYLN(,@02)                                   1248
         ALR   @06,@15                                             1248
         LR    RANGELEN,@06                                        1248
*            END;                                                  1249
*                                                                  1249
         AL    RANGLOOP,@CF00220                                   1249
@DE01247 L     @06,@PC00004+16                                     1249
         C     RANGLOOP,RANGECNT(,@06)                             1249
         BNH   @DL01247                                            1249
*            CALL IDCSAGP0 (GDTTBL,                                1250
*                    (RANGELEN + 50), /* LENGTH OF AREA FOR RANGE   */
*                    RGLSTPT,         /* PTR TO CORE FOR RANGE LIST */
*                    DEGPID,          /* POOL ID                    */
*                    SETZERO);        /* SET AREA TO ZERO           */
*                                                                  1250
         L     @09,@PC00001                                        1250
         ST    @09,@AL00001                                        1250
         LA    @06,50                                              1250
         ALR   @06,RANGELEN                                        1250
         ST    @06,@AFTEMPS+8                                      1250
         LA    @06,@AFTEMPS+8                                      1250
         ST    @06,@AL00001+4                                      1250
         LA    @06,RGLSTPT                                         1250
         ST    @06,@AL00001+8                                      1250
         LA    @06,DEGPID                                          1250
         ST    @06,@AL00001+12                                     1250
         LA    @06,SETZERO                                         1250
         ST    @06,@AL00001+16                                     1250
         MVI   @AL00001+16,X'80'                                   1250
         L     @15,GDTGPL(,@09)                                    1250
         LA    @01,@AL00001                                        1250
         BALR  @14,@15                                             1250
*            RESPECIFY RTNREG RSTD;                                1251
*            TESTRC = RTNREG;                                      1252
         LR    TESTRC,RTNREG                                       1252
*            RESPECIFY RTNREG UNRSTD;                              1253
*                                                                  1253
*            IF TESTRC ^= 0                                        1254
*              THEN                                                1254
         LTR   TESTRC,TESTRC                                       1254
         BZ    @RF01254                                            1254
*                DO;                                               1255
*                                                                  1255
*                DEFSTID = NOSTORAG;                               1256
         L     @06,@PC00001+8                                      1256
         MVC   DEFSTID(5,@06),@CB02317                             1256
*                RETURN;                                           1257
*                                                                  1257
         B     @EL00004                                            1257
*                END;                                              1258
*                                                                  1258
*            /********************************************************/
*            /*                                                      */
*            /* BUILD THE PSEUDO LIST -                              */
*            /*  THE LIST IS COMPOSED OF HIGH/LOW KEY RANGE PAIRS.   */
*            /*  EACH KEY IS PREFIXED BY A TWO BYTE LENGTH FIELD.    */
*            /*  THE LENGTH OF THE ENTIRE LIST RESIDES IN THE FIRST  */
*            /*  TWO BYTES OF THE LIST                               */
*            /*                                                      */
*            /********************************************************/
*                                                                  1259
*            RGLISTLN = RANGELEN + 2;                              1259
@RF01254 L     @06,RGLSTPT                                         1259
         LA    @04,2                                               1259
         ALR   @04,RANGELEN                                        1259
         STCM  @04,3,RGLISTLN(@06)                                 1259
*            CTGFVRNG = ADDR(RANGLIST);                            1260
         L     @04,@PC00001+8                                      1260
         L     @04,CTGFVPTR(,@04)                                  1260
         ST    @06,CTGFVRNG(,@04)                                  1260
*            RGLSTPT  = ADDR(RANGARRY);                            1261
         LA    @06,RANGARRY(,@06)                                  1261
         ST    @06,RGLSTPT                                         1261
*            CKRANGE = GO;                                         1262
*                                                                  1262
         MVI   CKRANGE,X'00'                                       1262
*            DO RANGLOOP = 1 TO RANGECNT;                          1263
*                                                                  1263
         LA    RANGLOOP,1                                          1263
         B     @DE01263                                            1263
@DL01263 DS    0H                                                  1264
*              RGFDTPTR = RNGLOPTR(RANGLOOP);                      1264
*                                                                  1264
         LR    @06,RANGLOOP                                        1264
         SLA   @06,2                                               1264
         L     @15,@PC00004+20                                     1264
         AL    @15,@CF03031                                        1264
         L     RGFDTPTR,RNGLOPTR(@06,@15)                          1264
*              /******************************************************/
*              /*                                                    */
*              /* INTERNAL LOOP -                                    */
*              /*  FIRST ITERATION FOR LOW KEY LENGTH AND VALUE      */
*              /*  SECOND ITERATION FOR HIGH KEY LENGTH AND VALUE    */
*              /*                                                    */
*              /******************************************************/
*                                                                  1265
*              DO N = 1 TO 2;                                      1265
*                                                                  1265
         LA    N,1                                                 1265
@DL01265 DS    0H                                                  1266
*                LOHIKYLN = RGKEYLN;                               1266
         L     @06,RGLSTPT                                         1266
         SLR   @15,@15                                             1266
         IC    @15,RGKEYLN(,RGFDTPTR)                              1266
         STH   @15,LOHIKYLN(,@06)                                  1266
*                LOHIKEY(1 : RGKEYLN)  = RGKEY(1 : RGKEYLN);       1267
         LR    @14,@15                                             1267
         BCTR  @14,0                                               1267
         EX    @14,@SM03038                                        1267
*                RGLSTPT  = RGLSTPT  + RGKEYLN + 2;                1268
         ALR   @06,@15                                             1268
         AL    @06,@CF00154                                        1268
         ST    @06,RGLSTPT                                         1268
*                RGFDTPTR = RNGHIPTR(RANGLOOP);                    1269
*                                                                  1269
         LR    @06,RANGLOOP                                        1269
         SLA   @06,2                                               1269
         L     @15,@PC00004+24                                     1269
         AL    @15,@CF03031                                        1269
         L     RGFDTPTR,RNGHIPTR(@06,@15)                          1269
*              END;                                                1270
*                                                                  1270
         AL    N,@CF00220                                          1270
         C     N,@CF00154                                          1270
         BNH   @DL01265                                            1270
*            END;                                                  1271
*                                                                  1271
         AL    RANGLOOP,@CF00220                                   1271
@DE01263 L     @06,@PC00004+16                                     1271
         C     RANGLOOP,RANGECNT(,@06)                             1271
         BNH   @DL01263                                            1271
*          END;                                                    1272
*                                                                  1272
*            /********************************************************/
*            /*                                                      */
*            /* BUILD THE RANGE LIST FROM THE MODEL OBJECTS LOWKEY-  */
*            /* HIGH KEY FIELDS WHICH HAVE BEEN RETRIEVED BY LOCATE  */
*            /*                                                      */
*            /********************************************************/
*                                                                  1273
*            ELSE                                                  1273
*              IF ( MDLLOKEY ^= NULLPTR  &                         1273
*                   MDLHIKEY ^= NULLPTR  &                         1273
*                   CTGTYPE ^= CTGTUCAT &                          1273
*                   CTGFVTYP  = 'D'      )                         1273
*                THEN                                              1273
         B     @RC01243                                            1273
@RF01243 SLR   @06,@06                                             1273
         L     @04,@PC00001+8                                      1273
         L     @15,MDLTBLPT(,@04)                                  1273
         C     @06,MDLLOKEY(,@15)                                  1273
         BE    @RF01273                                            1273
         C     @06,MDLHIKEY(,@15)                                  1273
         BE    @RF01273                                            1273
         L     @06,CTGPLPTR(,@04)                                  1273
         CLI   CTGTYPE(@06),C'U'                                   1273
         BE    @RF01273                                            1273
         L     @06,CTGFVPTR(,@04)                                  1273
         CLI   CTGFVTYP(@06),C'D'                                  1273
         BNE   @RF01273                                            1273
*RGFPLLP:          DO;                                             1274
*                                                                  1274
RGFPLLP  DS    0H                                                  1275
*                  /**************************************************/
*                  /*                                                */
*                  /* GET STORAGE FOR RANGE LIST BASED ON MODEL      */
*                  /* LENGTH REQUIREMENT                             */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1275
*                  CALL IDCSAGP0 (GDTTBL,                          1275
*                          (MDLLKLEN + MDLHKLEN + 50), /* POOL LENGTH*/
*                          RGLSTPT,                    /* POOL ADDR  */
*                          DEGPID,                     /* POOL ID    */
*                          SETZERO);                   /* SET TO ZERO*/
*                                                                  1275
         L     @09,@PC00001                                        1275
         ST    @09,@AL00001                                        1275
         L     @06,@PC00001+8                                      1275
         L     @06,MDLTBLPT(,@06)                                  1275
         L     @04,MDLLKLEN(,@06)                                  1275
         AL    @04,MDLHKLEN(,@06)                                  1275
         AL    @04,@CF01033                                        1275
         ST    @04,@AFTEMPS+8                                      1275
         LA    @06,@AFTEMPS+8                                      1275
         ST    @06,@AL00001+4                                      1275
         LA    @06,RGLSTPT                                         1275
         ST    @06,@AL00001+8                                      1275
         LA    @06,DEGPID                                          1275
         ST    @06,@AL00001+12                                     1275
         LA    @06,SETZERO                                         1275
         ST    @06,@AL00001+16                                     1275
         MVI   @AL00001+16,X'80'                                   1275
         L     @15,GDTGPL(,@09)                                    1275
         LA    @01,@AL00001                                        1275
         BALR  @14,@15                                             1275
*                  RESPECIFY RTNREG RSTD;                          1276
*                  TESTRC = RTNREG;                                1277
         LR    TESTRC,RTNREG                                       1277
*                  RESPECIFY RTNREG UNRSTD;                        1278
*                                                                  1278
*                  IF TESTRC ^= 0                                  1279
*                    THEN                                          1279
         LTR   TESTRC,TESTRC                                       1279
         BZ    @RF01279                                            1279
*                      DO;                                         1280
*                                                                  1280
*                      DEFSTID = NOSTORAG;                         1281
         L     @06,@PC00001+8                                      1281
         MVC   DEFSTID(5,@06),@CB02317                             1281
*                      RETURN;                                     1282
*                                                                  1282
         B     @EL00004                                            1282
*                      END;                                        1283
*                                                                  1283
*                  /**************************************************/
*                  /*                                                */
*                  /* INITIALIZE POINTERS, CONTROL FLAGS AND INITIAL */
*                  /* VALUES FOR RNGFDTLP                            */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1284
*                  RANGFLAG = GO;                                  1284
@RF01279 MVI   RANGFLAG,X'00'                                      1284
*                  CKRANGE = GO;                                   1285
         MVI   CKRANGE,X'00'                                       1285
*                  CTGFVRNG = ADDR(RANGLIST);                      1286
         L     @09,RGLSTPT                                         1286
         L     @06,@PC00001+8                                      1286
         L     @04,CTGFVPTR(,@06)                                  1286
         ST    @09,CTGFVRNG(,@04)                                  1286
*                  AMDRANGE = ON;                                  1287
         L     @04,DSBCATPT(,@06)                                  1287
         OI    AMDRANGE(@04),B'00000100'                           1287
*                  RGLISTLN = MDLLKLEN + MDLHKLEN +2;              1288
         L     @06,MDLTBLPT(,@06)                                  1288
         L     @04,MDLLKLEN(,@06)                                  1288
         AL    @04,MDLHKLEN(,@06)                                  1288
         AL    @04,@CF00154                                        1288
         STCM  @04,3,RGLISTLN(@09)                                 1288
*                  MAXRGADR = RGLISTLN + (ADDR(RANGLIST));         1289
         ALR   @04,@09                                             1289
         LR    MAXRGADR,@04                                        1289
*                  RGLSTPT  = ADDR(RANGARRY);                      1290
         LA    @09,RANGARRY(,@09)                                  1290
         ST    @09,RGLSTPT                                         1290
*                  RNGFPLLO = MDLLOKEY;                            1291
         L     RNGFPLLO,MDLLOKEY(,@06)                             1291
*                  RNGFPLHI = MDLHIKEY;                            1292
         L     RNGFPLHI,MDLHIKEY(,@06)                             1292
*                  /**************************************************/
*                  /*                                                */
*                  /* BUILD THE LOW/HIGH KEY PSEUDO FIELD BY MERGING */
*                  /* THE LOW AND HIGH KEYS FROM THE MODEL OBJECT'S  */
*                  /* 'LOKEYV' - 'HIKEYV' FIELDS INTO THE PSEUDO     */
*                  /* RANGE FIELD REFERENCED BY THE FVT - EACH       */
*                  /* ITERATION OF THE LOOP RESULTS IN ON LOW/HIGH   */
*                  /* PAIR BEING INITIALIZED                         */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1293
*MERGEFPL:         DO RANGLOOP = 1 TO 255                          1293
*                     WHILE RANGFLAG = GO;                         1293
*                                                                  1293
MERGEFPL LA    RANGLOOP,1                                          1293
@DL01293 CLI   RANGFLAG,X'00'                                      1293
         BNE   @DC01293                                            1293
*                    /************************************************/
*                    /*                                              */
*                    /* INSURE ADDITION TO PSEUDO FIELD DOES NOT     */
*                    /* OVERRUN THE AREA ALLOTTED                    */
*                    /*                                              */
*                    /************************************************/
*                                                                  1294
*                    IF (RGLSTPT + FPLLKYLN + 2) < MAXRGADR        1294
*                      THEN                                        1294
*                                                                  1294
         L     @09,RGLSTPT                                         1294
         LH    @06,FPLLKYLN(,RNGFPLLO)                             1294
         LR    @15,@09                                             1294
         ALR   @15,@06                                             1294
         AL    @15,@CF00154                                        1294
         CR    @15,MAXRGADR                                        1294
         BNL   @RF01294                                            1294
*                        /********************************************/
*                        /*                                          */
*                        /* THE LENGTH IS WITHIN AREA - INITIALIZE   */
*                        /* THE LOWKEY LENGTH AND VALUE              */
*                        /*                                          */
*                        /********************************************/
*                        DO;                                       1295
*                                                                  1295
*                        LOHIKYLN = FPLLKYLN;                      1296
         STH   @06,LOHIKYLN(,@09)                                  1296
*                        LOHIKEY(1:FPLLKYLN) = FPLLOKEY(1: FPLLKYLN);
*                                                                  1297
         BCTR  @06,0                                               1297
         EX    @06,@SM03040                                        1297
*                        END;                                      1298
*                                                                  1298
*                      /**********************************************/
*                      /*                                            */
*                      /* WE HAVE OVERRUN THE ALLOTTED AREA - SINCE  */
*                      /* THE AREA WAS COMPUTED THIS IS A TERMINAL   */
*                      /* ERROR - RETURN WITH STATUS                 */
*                      /*                                            */
*                      /**********************************************/
*                      ELSE                                        1299
*                        DO;                                       1299
*                                                                  1299
         B     @RC01294                                            1299
@RF01294 DS    0H                                                  1300
*                        DEFSTID = RANGERR;                        1300
         L     @06,@PC00001+8                                      1300
         MVC   DEFSTID(5,@06),@CB02323                             1300
*                        RETURN;                                   1301
*                                                                  1301
         B     @EL00004                                            1301
*                        END;                                      1302
*                                                                  1302
*                    /************************************************/
*                    /*                                              */
*                    /* BUMP POINTER WHICH CONTROLS INSERTS INTO THE */
*                    /* RANGELIST (RGLSTPT) - AND BUMP THE POINTER   */
*                    /* TO THE NEXT LOW KEY VALUE                    */
*                    /*                                              */
*                    /************************************************/
*                                                                  1303
*                    RGLSTPT = RGLSTPT + FPLLKYLN + 2;             1303
@RC01294 LA    @09,2                                               1303
         LH    @06,FPLLKYLN(,RNGFPLLO)                             1303
         L     @15,RGLSTPT                                         1303
         ALR   @15,@06                                             1303
         ALR   @15,@09                                             1303
         ST    @15,RGLSTPT                                         1303
*                    RNGFPLLO = RNGFPLLO + FPLLKYLN + 2;           1304
*                                                                  1304
         ALR   @06,RNGFPLLO                                        1304
         ALR   @06,@09                                             1304
         LR    RNGFPLLO,@06                                        1304
*                    /************************************************/
*                    /*                                              */
*                    /* INSURE THAT ADDITION OF HIGH KEY TO THE LIST */
*                    /* DOES NOT OVERRUN THE AREA ALLOTTED           */
*                    /*                                              */
*                    /************************************************/
*                                                                  1305
*                    IF (RGLSTPT + FPLHKYLN + 2) =< MAXRGADR       1305
*                      THEN                                        1305
*                                                                  1305
         LH    @06,FPLHKYLN(,RNGFPLHI)                             1305
         LR    @14,@15                                             1305
         ALR   @14,@06                                             1305
         ALR   @14,@09                                             1305
         CR    @14,MAXRGADR                                        1305
         BH    @RF01305                                            1305
*                        /********************************************/
*                        /*                                          */
*                        /* THE LENGTH IS PROPER INITIALIZE HIGH KEY */
*                        /*                                          */
*                        /********************************************/
*                        DO;                                       1306
*                                                                  1306
*                        LOHIKYLN = FPLHKYLN;                      1307
         STH   @06,LOHIKYLN(,@15)                                  1307
*                        LOHIKEY(1:FPLHKYLN) = FPLHIKEY(1: FPLHKYLN);
*                                                                  1308
         BCTR  @06,0                                               1308
         EX    @06,@SM03042                                        1308
*                        END;                                      1309
*                                                                  1309
*                      /**********************************************/
*                      /*                                            */
*                      /* WE HAVE OVERRUN THE ALLOTTED AREA - SINCE  */
*                      /* THE AREA WAS COMPUTED THIS IS A TERMINAL   */
*                      /* ERROR - RETURN WITH STATUS INDICATED       */
*                      /*                                            */
*                      /**********************************************/
*                      ELSE                                        1310
*                        DO;                                       1310
*                                                                  1310
         B     @RC01305                                            1310
@RF01305 DS    0H                                                  1311
*                        DEFSTID = RANGERR;                        1311
         L     @06,@PC00001+8                                      1311
         MVC   DEFSTID(5,@06),@CB02323                             1311
*                        RETURN;                                   1312
*                                                                  1312
         B     @EL00004                                            1312
*                        END;                                      1313
*                                                                  1313
*                    RGLSTPT = RGLSTPT + FPLHKYLN + 2;             1314
@RC01305 LA    @09,2                                               1314
         LH    @06,FPLHKYLN(,RNGFPLHI)                             1314
         L     @15,RGLSTPT                                         1314
         ALR   @15,@06                                             1314
         ALR   @15,@09                                             1314
         ST    @15,RGLSTPT                                         1314
*                    RNGFPLHI = RNGFPLHI + FPLHKYLN + 2;           1315
*                                                                  1315
         ALR   @06,RNGFPLHI                                        1315
         ALR   @06,@09                                             1315
         LR    RNGFPLHI,@06                                        1315
*                    /************************************************/
*                    /*                                              */
*                    /* HAVE WE EXHAUSTED THE KEYS FROM THE MODEL -  */
*                    /* SET RNAGFLAG TO TERMINATE LOOP               */
*                    /*                                              */
*                    /************************************************/
*                    IF RNGFPLHI => (MDLHIKEY + MDLHKLEN)  ×       1316
*                       RNGFPLLO => (MDLLOKEY + MDLLKLEN)          1316
*                      THEN                                        1316
         L     @09,@PC00001+8                                      1316
         L     @09,MDLTBLPT(,@09)                                  1316
         L     @06,MDLHIKEY(,@09)                                  1316
         AL    @06,MDLHKLEN(,@09)                                  1316
         CR    RNGFPLHI,@06                                        1316
         BNL   @RT01316                                            1316
         L     @06,MDLLOKEY(,@09)                                  1316
         AL    @06,MDLLKLEN(,@09)                                  1316
         CR    RNGFPLLO,@06                                        1316
         BL    @RF01316                                            1316
@RT01316 DS    0H                                                  1317
*                        RANGFLAG = STOP;                          1317
*                                                                  1317
         MVI   RANGFLAG,X'0F'                                      1317
*                  END MERGEFPL;                                   1318
*                                                                  1318
@RF01316 AL    RANGLOOP,@CF00220                                   1318
         C     RANGLOOP,@CF00872                                   1318
         BNH   @DL01293                                            1318
@DC01293 DS    0H                                                  1319
*                END RGFPLLP;                                      1319
*        /************************************************************/
*        /*                                                          */
*        /* VERIFY THAT THERE IS NO OVERLAPPING OF KEY RANGE PAIRS - */
*        /* . BEGINNING WITH THE FIRST PAIR IN THE LIST, EACH PAIR   */
*        /*   IS CHECKED AGAINST THOSE PAIRS LOWER ON THE LIST.      */
*        /* . THE PAIR WHICH IS COMPARED TO THE REMAINING PAIRS IS   */
*        /*   REFERENCED AS THE CHECK PAIR                           */
*        /* . THE CURRENT PAIR OF THE REMAINING PAIR IS REFERENCED   */
*        /*   AS THE COMPARE PAIR                                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  1320
*        IF CTGFVRNG ^= NULLPTR  &                                 1320
*           CKRANGE   = GO                                         1320
*          THEN                                                    1320
@RF01273 DS    0H                                                  1320
@RC01243 L     @06,@PC00001+8                                      1320
         L     @06,CTGFVPTR(,@06)                                  1320
         L     @06,CTGFVRNG(,@06)                                  1320
         LTR   @06,@06                                             1320
         BZ    @RF01320                                            1320
         CLI   CKRANGE,X'00'                                       1320
         BNE   @RF01320                                            1320
*CKRANGE0:   DO;                                                   1321
*                                                                  1321
CKRANGE0 DS    0H                                                  1322
*            RGLSTPT = CTGFVRNG;                                   1322
         L     @09,@PC00001+8                                      1322
         L     @09,CTGFVPTR(,@09)                                  1322
         L     @09,CTGFVRNG(,@09)                                  1322
         ST    @09,RGLSTPT                                         1322
*            LKYCKPTR = ADDR(RANGARRY);                            1323
         LA    @06,RANGARRY(,@09)                                  1323
         LR    LKYCKPTR,@06                                        1323
*            HKYCKPTR = LKYCKPTR + LKYLEN +2;                      1324
*                                                                  1324
         LR    HKYCKPTR,LKYCKPTR                                   1324
         AH    HKYCKPTR,LKYLEN(,LKYCKPTR)                          1324
         AL    HKYCKPTR,@CF00154                                   1324
*            /********************************************************/
*            /*                                                      */
*            /* SET POINTER TO INDICATE THE END OF THE RANGE LIST    */
*            /*                                                      */
*            /********************************************************/
*                                                                  1325
*            MAXRGADR = ADDR(RANGARRY) + RGLISTLN;                 1325
*                                                                  1325
         ICM   MAXRGADR,12,RGLISTLN(@09)                           1325
         SRA   MAXRGADR,16                                         1325
         ALR   @06,MAXRGADR                                        1325
         LR    MAXRGADR,@06                                        1325
*              /******************************************************/
*              /*                                                    */
*              /* VERIFY THAT THE LOW KEY OF THE CHECK PAIR IS NOT   */
*              /* GREATER THAN THE HIGH KEY - THE LOW AND HIGH KEY   */
*              /* ARE MOVED INTO FIXED AREAS (LKYCHECK AND HKYCHECK) */
*              /* THE LOW KEY IS PADDED WITH BINARY ZEROES THE HIGH  */
*              /* KEY WITH BINARY ONES                               */
*              /*                                                    */
*              /******************************************************/
*                                                                  1326
*CKRANGE1:     DO WHILE HKYCKPTR < MAXRGADR;                       1326
*                                                                  1326
CKRANGE1 B     @DE01326                                            1326
@DL01326 DS    0H                                                  1327
*                LKYCHECK = ''B;                                   1327
         XC    LKYCHECK(64),LKYCHECK                               1327
*                LKYCHECK(1 : LKYLEN) = LOKEY(1 : LKYLEN);         1328
         LH    @09,LKYLEN(,LKYCKPTR)                               1328
         BCTR  @09,0                                               1328
         EX    @09,@SM03044                                        1328
*                KYMSKPTR = ADDR(HKYCHECK);                        1329
         LA    KYMSKPTR,HKYCHECK                                   1329
*                HKYCHECK(1) = 'FF'X;                              1330
         MVI   HKYCHECK,X'FF'                                      1330
*                HKYCHECK(2:LENGTH(HKYCHECK)) =                    1331
*                  KEYMASK(1:(LENGTH(HKYCHECK)-1));                1331
         MVC   HKYCHECK+1(63),KEYMASK(KYMSKPTR)                    1331
*                HKYCHECK(1 : HIKYLEN) = HIKEY(1 : HIKYLEN);       1332
*                                                                  1332
         LH    @09,HIKYLEN(,HKYCKPTR)                              1332
         BCTR  @09,0                                               1332
         EX    @09,@SM03046                                        1332
*                /****************************************************/
*                /*                                                  */
*                /* INITIALIZE HKYCMPTR SO THAT BUMPING IN CKRANGE2  */
*                /* WILL REFERENCE THE KEY COMPARE PAIR              */
*                /*                                                  */
*                /****************************************************/
*                                                                  1333
*                HKYCMPTR = HKYCKPTR;                              1333
*                                                                  1333
         LR    HKYCMPTR,HKYCKPTR                                   1333
*                /****************************************************/
*                /*                                                  */
*                /* VERIFY THAT THE LOW KEY OF THE CHECK RANGE PAIR  */
*                /* IS NOT GREATER THAN THE HIGH KEY                 */
*                /*                                                  */
*                /****************************************************/
*                                                                  1334
*                IF LKYCHECK > HKYCHECK                            1334
*                  THEN                                            1334
         CLC   LKYCHECK(64),HKYCHECK                               1334
         BNH   @RF01334                                            1334
*                    DO;                                           1335
*                                                                  1335
*                    DEFSTID = RNGOLPER;                           1336
         L     @06,@PC00001+8                                      1336
         MVC   DEFSTID(5,@06),@CB02329                             1336
*                    RETURN;                                       1337
*                                                                  1337
         B     @EL00004                                            1337
*                    END;                                          1338
*                                                                  1338
*                  /**************************************************/
*                  /*                                                */
*                  /* THE CHECK PAIR IS VALID - NOW COMPARE THIS PAIR*/
*                  /* WITH THOSE PAIRS LOWER ON THE LIST FOR OVERLAP */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1339
*CKRANGE2:         DO WHILE HKYCMPTR < MAXRGADR;                   1339
*                                                                  1339
@RF01334 DS    0H                                                  1339
CKRANGE2 B     @DE01339                                            1339
@DL01339 DS    0H                                                  1340
*                    /************************************************/
*                    /*                                              */
*                    /* LKYCMPTR AND HKYCMPTR REFERENCE THE COMPARE  */
*                    /* KEYS AGAINST WHICH THE CHECKKEYS ARE VERIFIED*/
*                    /*                                              */
*                    /************************************************/
*                                                                  1340
*                    LKYCMPTR = HKYCMPTR + HKYCMPLN + 2;           1340
         LA    @09,2                                               1340
         LR    LKYCMPTR,HKYCMPTR                                   1340
         AH    LKYCMPTR,HKYCMPLN(,HKYCMPTR)                        1340
         ALR   LKYCMPTR,@09                                        1340
*                    HKYCMPTR = LKYCMPTR + LKYCMPLN + 2;           1341
*                                                                  1341
         LH    @06,LKYCMPLN(,LKYCMPTR)                             1341
         LR    HKYCMPTR,LKYCMPTR                                   1341
         ALR   HKYCMPTR,@06                                        1341
         ALR   HKYCMPTR,@09                                        1341
*                    /************************************************/
*                    /*                                              */
*                    /* INSURE THAT THE COMPARE KEY POINTERS ARE     */
*                    /* STILL WITHIN THE RANGE LIST - THEN MOVE THE  */
*                    /* COMPARE KEYS INTO THE FIXED AREA AND PERFORM */
*                    /* THE OVERLAPPING CHECK                        */
*                    /*                                              */
*                    /************************************************/
*                                                                  1342
*                    IF HKYCMPTR < MAXRGADR                        1342
*                      THEN                                        1342
         CR    HKYCMPTR,MAXRGADR                                   1342
         BNL   @RF01342                                            1342
*                        DO;                                       1343
*                                                                  1343
*                        LKYCMPR = ''B;                            1344
         XC    LKYCMPR(64),LKYCMPR                                 1344
*                        LKYCMPR(1 : LKYCMPLN) = LKYCOMP(1: LKYCMPLN);
         BCTR  @06,0                                               1345
         EX    @06,@SM03048                                        1345
*                        KYMSKPTR = ADDR(HKYCMPR);                 1346
         LA    KYMSKPTR,HKYCMPR                                    1346
*                        HKYCMPR(1) = 'FF'X;                       1347
         MVI   HKYCMPR,X'FF'                                       1347
*                        HKYCMPR(2:LENGTH(HKYCMPR)) =              1348
*                          KEYMASK(1:(LENGTH(HKYCMPR) -1));        1348
         MVC   HKYCMPR+1(63),KEYMASK(KYMSKPTR)                     1348
*                        HKYCMPR(1 : HKYCMPLN) = HKYCOMP(1:HKYCMPLN);
*                                                                  1349
         LH    @09,HKYCMPLN(,HKYCMPTR)                             1349
         BCTR  @09,0                                               1349
         EX    @09,@SM03050                                        1349
*                        /********************************************/
*                        /*                                          */
*                        /* PERFORM OVERLAP CHECKING                 */
*                        /* . THE LOW COMPARE KEY CANNOT BE WITHIN   */
*                        /*   THE BOUNDS OF THE CHECK PAIR           */
*                        /* . THE HIGH COMPARE KEY CANNON BE WITHIN  */
*                        /*   THE BOUNDS OF THE CHECK PAIR           */
*                        /* . THE COMPARE KEY BOUNDS CANNOT SPAN THE */
*                        /*   CHECK KEY BOUNDS                       */
*                        /*                                          */
*                        /********************************************/
*                                                                  1350
*                        IF (LKYCMPR >= LKYCHECK  &                1350
*                            LKYCMPR <= HKYCHECK  )  ×             1350
*                           (HKYCMPR <= HKYCHECK  &                1350
*                            HKYCMPR >= LKYCHECK  )  ×             1350
*                           (LKYCMPR <= LKYCHECK  &                1350
*                            HKYCMPR >= HKYCHECK  )                1350
*                          THEN                                    1350
         CLC   LKYCMPR(64),LKYCHECK                                1350
         BL    @GL00062                                            1350
         CLC   LKYCMPR(64),HKYCHECK                                1350
         BNH   @RT01350                                            1350
@GL00062 CLC   HKYCMPR(64),HKYCHECK                                1350
         BH    @GL00061                                            1350
         CLC   HKYCMPR(64),LKYCHECK                                1350
         BNL   @RT01350                                            1350
@GL00061 CLC   LKYCMPR(64),LKYCHECK                                1350
         BH    @RF01350                                            1350
         CLC   HKYCMPR(64),HKYCHECK                                1350
         BL    @RF01350                                            1350
@RT01350 DS    0H                                                  1351
*                            DO;                                   1351
*                                                                  1351
*                            DEFSTID = RNGOLPER;                   1352
         L     @06,@PC00001+8                                      1352
         MVC   DEFSTID(5,@06),@CB02329                             1352
*                            RETURN;                               1353
*                                                                  1353
         B     @EL00004                                            1353
*                            END;                                  1354
*                        END;                                      1355
*                                                                  1355
@RF01350 DS    0H                                                  1356
*                  END CKRANGE2;                                   1356
@RF01342 DS    0H                                                  1356
@DE01339 CR    HKYCMPTR,MAXRGADR                                   1356
         BL    @DL01339                                            1356
*                /****************************************************/
*                /*                                                  */
*                /* BUMP THE LOW KEY POINTER TO THE LOW KEY  @OZ06147*/
*                /* OF THE NEXT CHECK RANGE PAIR.            @OZ06147*/
*                /*                                                  */
*                /****************************************************/
*                                                                  1357
*                LKYCKPTR = HKYCKPTR + HIKYLEN + 2;                1357
*                                                                  1357
         LA    @09,2                                               1357
         LR    LKYCKPTR,HKYCKPTR                                   1357
         AH    LKYCKPTR,HIKYLEN(,HKYCKPTR)                         1357
         ALR   LKYCKPTR,@09                                        1357
*                /****************************************************/
*                /*                                          @OZ06147*/
*                /* TO ENSURE THAT THE KEYRANGE PAIRS ARE IN @OZ06147*/
*                /* ASCENDING ORDER, THE HIGH KEY OF THE PREVIOUS    */
*                /* PAIR MUST NOT BE GREATER THAN THE LOW KEY        */
*                /* OF THE NEW PAIR.                         @OZ06147*/
*                /*                                          @OZ06147*/
*                /****************************************************/
*                                                                  1358
*                IF LKYCKPTR < (MAXRGADR  - 2)  &                  1358
*                   HKYCHECK(1 : LKYLEN) > LOKEY(1 : LKYLEN)       1358
*                  THEN                                    /*@OZ06147*/
         LCR   @09,@09                                             1358
         ALR   @09,MAXRGADR                                        1358
         CR    LKYCKPTR,@09                                        1358
         BNL   @RF01358                                            1358
         LH    @09,LKYLEN(,LKYCKPTR)                               1358
         BCTR  @09,0                                               1358
         EX    @09,@SC03052                                        1358
         BNH   @RF01358                                            1358
*                    DO;                                   /*@OZ06147*/
*                                                                  1359
*                    DEFSTID = KEYRNGER;                   /*@OZ06147*/
         L     @06,@PC00001+8                                      1360
         MVC   DEFSTID(5,@06),@CB02332                             1360
*                    RETURN;                               /*@OZ06147*/
*                                                                  1361
         B     @EL00004                                            1361
*                    END;                                  /*@OZ06147*/
*                                                                  1362
*                /****************************************************/
*                /*                                          @OZ06147*/
*                /* BUMP THE HIGH KEY POINTER TO THE HIGH KEY        */
*                /* OF THE NEXT CHECK RANGE PAIR.            @OZ06147*/
*                /*                                          @OZ06147*/
*                /****************************************************/
*                                                                  1363
*                HKYCKPTR = LKYCKPTR + LKYLEN + 2;         /*@OZ06147*/
*                                                                  1363
@RF01358 LR    HKYCKPTR,LKYCKPTR                                   1363
         AH    HKYCKPTR,LKYLEN(,LKYCKPTR)                          1363
         AL    HKYCKPTR,@CF00154                                   1363
*              END CKRANGE1;                                       1364
*                                                                  1364
@DE01326 CR    HKYCKPTR,MAXRGADR                                   1364
         BL    @DL01326                                            1364
*            END CKRANGE0;                                         1365
*                                                                  1365
*        /************************************************************/
*        /*                                                          */
*        /* RETURN TO LEVEL TWO PROCESSOR                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1366
*        RETURN;                                                   1366
*                                                                  1366
         B     @EL00004                                            1366
*END KEYPROC;                                                      1367
         B     @EL00004                                            1367
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME - IXOPPROC (LEVEL THREE PARAMETER PROCESSOR)      */
*/*                                                                  */
*/* FUNCTION - IXOPPROC INITIALIZES INDEX OPTIONS IN THE AMDSBCAT    */
*/*            FIELD. THE AMDSBCAT IS BUILT BY KEYPROC AND           */
*/*            REFERENCED BY THE CURRENT FVT.                        */
*/*                                                                  */
*/*            IXOPPROC RECEIVES ARGUMENTS FROM TWO SOURCES -        */
*/*            EXPLICIT ATTRIBUTES FROM THE FDTTBL AND MODEL         */
*/*            ATTRIBUTES FROM THE MODEL TABLE(IXMDLTAB)             */
*/*                                                                  */
*/* INPUT -                                                          */
*/*            CTGFV   - THE CURRENT FVT IS ESTABLISHED EXTERNALLY   */
*/*              BY THE LEVEL TWO PROCESSOR                          */
*/*            SEE DEFINITION OF ARGUMENTS OF INVOCATION(BELOW)      */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*            INITIALIZATION OF INDEX OPTIONS IN AMDSBCAT           */
*/*                                                                  */
*/********************************************************************/
*                                                                  1368
*IXOPPROC:                                                         1368
*        PROCEDURE (REPL,NREP,IMBD,NIBD,IXMDLTAB)                  1368
*          OPTIONS(SAVEAREA);                              /*@Y30SSJH*/
IXOPPROC STM   @14,@12,12(@13)                                     1368
         ST    @13,@SA00005+4                                      1368
         LA    @14,@SA00005                                        1368
         ST    @14,8(,@13)                                         1368
         LR    @13,@14                                             1368
         MVC   @PC00005(20),0(@01)                                 1368
*        GEN (ENTRY IXOPPROC);        /*EXTERNAL ENTRY POINT @Y30SSJH*/
         ENTRY IXOPPROC
*        LM(REG10,REG12,BASESAVE);      /* LOAD PROC CODEREG @Y30SSJH*/
         LM    REG10,REG12,BASESAVE                                1370
*                                                                  1371
*        /************************************************************/
*        /*                                                          */
*        /* ARGUMENTS OF INVOCATION                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1371
*        DCL                                                       1371
*          REPL,                       /* REPLICATE THE INDEX        */
*          NREP,                       /* DONT REPLICATE THE INDEX   */
*          IMBD,                       /* IMBED INDEX IN SEQ. SET    */
*          NIBD,                       /* DONT IMBED THE INDEX       */
*          IXMDLTAB;                   /* MODEL TABLE                */
*        /************************************************************/
*        /*                                                          */
*        /* ENTRY POINT TO IXOPPROC - LEVEL 3 INTERNAL PROCEDURE     */
*        /*                                                          */
*        /************************************************************/
*                                                                  1372
*        OLDERID2 = NEWERID2;                                      1372
         L     @06,@PC00001                                        1372
         L     @06,GDTTR2(,@06)                                    1372
         MVC   @TS00001(95),NEWERID2(@06)                          1372
         MVC   OLDERID2(95,@06),@TS00001                           1372
*        NEWID2 = 'DE35';                                          1373
*                                                                  1373
         MVC   NEWID2(4,@06),@CC02836                              1373
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE INDEXOPTIONS FROM MODEL OF AMDSB              */
*        /*                                                          */
*        /************************************************************/
*                                                                  1374
*        IF MDLAMDSB ^= NULLPTR                                    1374
*          THEN                                                    1374
         L     @06,@PC00001+8                                      1374
         L     @04,MDLTBLPT(,@06)                                  1374
         L     @04,MDLAMDSB(,@04)                                  1374
         LTR   @04,@04                                             1374
         BZ    @RF01374                                            1374
*            DO;                                                   1375
*                                                                  1375
*            IF MDLAMDSB -> AMDREPL = ON                           1376
*              THEN                                                1376
         TM    AMDREPL(@04),B'00010000'                            1376
         BNO   @RF01376                                            1376
*                AMDREPL = ON;                                     1377
*                                                                  1377
         L     @06,DSBCATPT(,@06)                                  1377
         OI    AMDREPL(@06),B'00010000'                            1377
*              ELSE                                                1378
*                AMDREPL = OFF;                                    1378
*                                                                  1378
         B     @RC01376                                            1378
@RF01376 L     @06,@PC00001+8                                      1378
         L     @06,DSBCATPT(,@06)                                  1378
         NI    AMDREPL(@06),B'11101111'                            1378
*            IF MDLAMDSB -> AMDSDT = ON                            1379
*              THEN                                                1379
@RC01376 L     @06,@PC00001+8                                      1379
         L     @04,MDLTBLPT(,@06)                                  1379
         L     @04,MDLAMDSB(,@04)                                  1379
         TM    AMDSDT(@04),B'00100000'                             1379
         BNO   @RF01379                                            1379
*                AMDSDT = ON;                                      1380
         L     @06,DSBCATPT(,@06)                                  1380
         OI    AMDSDT(@06),B'00100000'                             1380
*              ELSE                                                1381
*                AMDSDT = OFF;                                     1381
*                                                                  1381
         B     @RC01379                                            1381
@RF01379 L     @06,@PC00001+8                                      1381
         L     @06,DSBCATPT(,@06)                                  1381
         NI    AMDSDT(@06),B'11011111'                             1381
*            END;                                                  1382
*                                                                  1382
@RC01379 DS    0H                                                  1383
*        /************************************************************/
*        /*                                                          */
*        /* EXPLICIT FDTTBL ATTRIBUTES OVERRIDE MODELED ATTRIBUTES   */
*        /*                                                          */
*        /************************************************************/
*                                                                  1383
*        IF (ADDR(REPL)) ^= NULLPTR                                1383
*          THEN                                                    1383
@RF01374 L     @06,@PC00005                                        1383
         LTR   @06,@06                                             1383
         BZ    @RF01383                                            1383
*            AMDREPL = ON;                                         1384
*                                                                  1384
         L     @06,@PC00001+8                                      1384
         L     @06,DSBCATPT(,@06)                                  1384
         OI    AMDREPL(@06),B'00010000'                            1384
*          ELSE                                                    1385
*            IF (ADDR(NREP)) ^= NULLPTR                            1385
*              THEN                                                1385
         B     @RC01383                                            1385
@RF01383 L     @06,@PC00005+4                                      1385
         LTR   @06,@06                                             1385
         BZ    @RF01385                                            1385
*                AMDREPL = OFF;                                    1386
*                                                                  1386
         L     @06,@PC00001+8                                      1386
         L     @06,DSBCATPT(,@06)                                  1386
         NI    AMDREPL(@06),B'11101111'                            1386
*        IF (ADDR(IMBD)) ^= NULLPTR                                1387
*          THEN                                                    1387
@RF01385 DS    0H                                                  1387
@RC01383 L     @06,@PC00005+8                                      1387
         LTR   @06,@06                                             1387
         BZ    @RF01387                                            1387
*            AMDSDT = ON;                                          1388
*                                                                  1388
         L     @06,@PC00001+8                                      1388
         L     @06,DSBCATPT(,@06)                                  1388
         OI    AMDSDT(@06),B'00100000'                             1388
*          ELSE                                                    1389
*            IF (ADDR(NIBD)) ^= NULLPTR                            1389
*              THEN                                                1389
         B     @RC01387                                            1389
@RF01387 L     @06,@PC00005+12                                     1389
         LTR   @06,@06                                             1389
         BZ    @RF01389                                            1389
*                AMDSDT = OFF;                                     1390
*                                                                  1390
*                                                                  1390
*                                                                  1390
         L     @06,@PC00001+8                                      1390
         L     @06,DSBCATPT(,@06)                                  1390
         NI    AMDSDT(@06),B'11011111'                             1390
*        /************************************************************/
*        /*                                                          */
*        /* RETURN TO INVOKER                                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  1391
*        RETURN;                                                   1391
*                                                                  1391
@EL00005 L     @13,4(,@13)                                         1391
@EF00005 DS    0H                                                  1391
@ER00005 LM    @14,@12,12(@13)                                     1391
         BR    @14                                                 1391
*END IXOPPROC;                                                     1392
         B     @EL00005                                            1392
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME - PROTPROC(LEVEL THREE PARAMETER PROCESSOR)       */
*/*                                                                  */
*/* FUNCTION - PROTPROC INITIALIZES THE FOLLOWING ITEMS:             */
*/*            . PASSWALL FPL - SECURITY COMBINATION FIELD           */
*/*            . OWNERID FPL  -                                      */
*/*            . DSATTR FLAGS ARE INITIALIZED - THE DSATTR FPL IS    */
*/*              BUILT IN ALLCPROC                                   */
*/*                SHARE/NOSHARE                                     */
*/*                ERASE/NOERASE                                     */
*/*                REUSE/NOREUSE                             @Y30SSJH*/
*/*            . RGATTR FPL - RG ATTRIBUTES FOR AIX AND PATHS@Y30SSJH*/
*/*                                                                  */
*/* INPUT -                                                          */
*/*            DEFSTID - GLOBAL INTERNAL STATUS COMMUNICATOR         */
*/*            CTGFV   - THE CURRENT FVT IS ESTABLISHED EXTERNALLY   */
*/*              BY THE LEVEL TWO PROCESSOR                          */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*            DEFSTID - GLOBAL PROCESSING STATUS, SET ON ERROR      */
*/*              DETECTION                                           */
*/*                DEFSTID = NOSTORAG                                */
*/*            CREATION AND/OR INITIALIZATION OF ABOVE MENTIONED     */
*/*              FIELDS                                              */
*/*                                                                  */
*/********************************************************************/
*        PROTPROC:                                                 1393
*        PROCEDURE(AMASTER,ACINT,AUPDATE,AREAD,AMXATTMP,APWPRMT,   1393
*          AUSVRNM,AUSERARC,AOWNRID,AERASE,                        1393
*          ANERS,ASHAR1,ASHAR2,ARUS,ANRUS,AUPG,ANUPG,              1393
*          PMDLTABL)                                       /*@Y30SSJH*/
*              OPTIONS(SAVEAREA);                          /*@Y30SSJH*/
*                                                                  1393
PROTPROC STM   @14,@12,12(@13)                                     1393
         ST    @13,@SA00006+4                                      1393
         LA    @14,@SA00006                                        1393
         ST    @14,8(,@13)                                         1393
         LR    @13,@14                                             1393
         MVC   @PC00006(72),0(@01)                                 1393
*        GEN (ENTRY PROTPROC);    /* EXTERNAL ENTRY POINT    @Y30SSJH*/
         ENTRY PROTPROC
*        LM(REG10,REG12,BASESAVE);      /* LOAD PROC CODEREG @Y30SSJH*/
         LM    REG10,REG12,BASESAVE                                1395
*        /************************************************************/
*        /*                                                          */
*        /* ARGUMENTS OF INVOCATION                                  */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1396
*          AMASTER,                    /* MASTER PASSWORD            */
*          ACINT,                      /* CONTROL INTERVAL PASSWORD  */
*          AUPDATE,                    /* UPDATE PASSWORD            */
*          AREAD,                      /* READ PASSWORD              */
*          AMXATTMP,                   /* PASSWORD ATTEMPTS          */
*          APWPRMT,                    /* PASSWORD PROMPTING CODENAME*/
*          AUSVRNM,                    /* VERIFICATION MODULE NAME   */
*          AUSERARC,                   /* AUTHORIZATION RECORD       */
*          AOWNRID,                    /* OWNER IDENTIFICATION       */
*          AERASE,                     /* ERASE OPTION               */
*          ANERS,                      /* NOERASE OPTION             */
*          ASHAR1,                     /* REGION SHARE OPTION        */
*          ASHAR2,                     /* SYSTEM SHARE OPTION        */
*          ARUS,                       /* REUSE OPTION       @Y30SSJH*/
*          ANRUS,                      /* NOREUSE OPTION     @Y30SSJH*/
*          AUPG,                       /* UPGRADE,UPDATE     @Y30SSJH*/
*          ANUPG,                      /* NOUPGRADE,NOUPDATE @Y30SSJH*/
*          PMDLTABL;                   /* MODELTABLE                 */
*                                                                  1396
*        /************************************************************/
*        /*                                                          */
*        /* CONSTANT VALUES USED IN SETTING SHARE OPTIONS            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1397
*        DCL SHROPT1 BIT(2) CONSTANT('00'B);                       1397
*        DCL SHROPT2 BIT(2) CONSTANT('01'B);                       1398
*        DCL SHROPT3 BIT(2) CONSTANT('10'B);                       1399
*        DCL SHROPT4 BIT(2) CONSTANT('11'B);                       1400
*                                                                  1400
*        /************************************************************/
*        /*                                                          */
*        /* ARRAY OF PROTECTION FIELD NAMES                          */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1401
*          PROTPTR   PTR(31),                                      1401
*          PROTFLNM (3) CHAR(8) INIT('PASSWALL','RGATTR',          1401
*                                    'OWNERID');           /*@Y30SSJH*/
*        /************************************************************/
*        /*                                                          */
*        /* OVERLAY OF DYNAMIC AREA CONTAINING FPLS AND DATA AREA    */
*        /* PASSED TO VSAM CATALOG MANAGEMENT                @Z40WSJH*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1402
*        DCL                                                       1402
*          1 PROTAREA BASED(PROTPTR),                              1402
*            2 PASSWFPL CHAR(LENGTH(CTGFL)),                       1402
*            2 *       CHAR(8),                                    1402
*            2 RGATRFPL CHAR(LENGTH(CTGFL)),               /*@Y30SSJH*/
*            2 *       CHAR(8),                                    1402
*            2 OWNIDFPL CHAR(LENGTH(CTGFL)),                       1402
*            2 *       CHAR(8),                                    1402
*            2 SPRMAREA,                                           1402
*              3 PWDOVLAY(4) CHAR(8),                              1402
*              3 PASSPRMT  CHAR(8),                                1402
*              3 PASSATMP  FIXED(15),                              1402
*              3 SVRMDUL   CHAR(8),                                1402
*              3 ARECLEN   FIXED(15),                              1402
*            2 AUTHREC CHAR(255),                          /*@Y30SSJH*/
*            2 RGATTR   BIT(8),                            /*@Y30SSJH*/
*              3 UPGUPD BIT(1),                            /*@Y30SSJH*/
*              3 *      BIT(7),                            /*@Y30SSJH*/
*            2 OWNERUID CHAR(8),                                   1402
*            2 OWNUIDLN FIXED(15);     /* USERID LENGTH      @Y30SSJH*/
*                                                                  1402
*        /************************************************************/
*        /*                                                          */
*        /* ARRAY OF FDTTBL PASSWORD INDICATORS                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  1403
*        DCL                                                       1403
*          PWDPTRS(4) PTR(31);                                     1403
*                                                                  1403
*        /************************************************************/
*        /*                                                          */
*        /* INDEX INDICATOR WHICH INDICATES THE HIGHEST LEVEL OF     */
*        /* OF PASSWORD SPECIFIED. THIS INDICATOR IS SET IN PWINIT   */
*        /* AND USED IN PASSWORD MIGRATION                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  1404
*        DCL                                                       1404
*          PSWDFLAG FIXED(15);                                     1404
*                                                                  1404
*        /************************************************************/
*        /*                                                          */
*        /* OVERLAY OF DATA SET ATTRIBUTES FLAG                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  1405
*        DCL                                                       1405
*          1 PROTATTR CHAR(2) BASED,                               1405
*            2 *       CHAR(1),                                    1405
*              3 *      BIT(2),                            /*@Y30SSJH*/
*              3 PRUS   BIT(1),                            /*@Y30SSJH*/
*              3 PERASE BIT(1),                                    1405
*            2 *       CHAR(1),                                    1405
*              3 PSHARE1 BIT(2),                                   1405
*              3 PSHARE2 BIT(2);                                   1405
*                                                                  1405
*        /************************************************************/
*        /*                                                          */
*        /* INDEX VARIABLES USED IN PASSWORD MIGRATION               */
*        /*                                                          */
*        /************************************************************/
*                                                                  1406
*        DCL                                                       1406
*          I FIXED(15),                                            1406
*          K FIXED(15),                                            1406
*          J FIXED(15);                                            1406
*        /************************************************************/
*        /*                                                          */
*        /* ENTRY POINT TO PROTPROC                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1407
*        OLDERID2 = NEWERID2;                                      1407
         L     @06,@PC00001                                        1407
         L     @06,GDTTR2(,@06)                                    1407
         MVC   @TS00001(95),NEWERID2(@06)                          1407
         MVC   OLDERID2(95,@06),@TS00001                           1407
*        NEWID2 = 'DE34';                                          1408
*                                                                  1408
         MVC   NEWID2(4,@06),@CC02922                              1408
*        /************************************************************/
*        /*                                                          */
*        /* GET DYNAMIC STORAGE FOR FPLS AND DATA PASSED TO CATALOG  */
*        /* MANAGEMENT                                               */
*        /*                                                          */
*        /************************************************************/
*        IF PROTFLAG = GO                                          1409
*         THEN                                                     1409
         L     @06,@PC00001+8                                      1409
         CLI   PROTFLAG(@06),X'00'                                 1409
         BNE   @RF01409                                            1409
*NEWLOOP:  DO;                                                     1410
*                                                                  1410
NEWLOOP  DS    0H                                                  1411
*          PROTFLAG = STOP;                                        1411
*                                                                  1411
         L     @09,@PC00001+8                                      1411
         MVI   PROTFLAG(@09),X'0F'                                 1411
*          CALL IDCSAGP0 (GDTTBL,                                  1412
*                (LENGTH(PROTAREA)),                               1412
*                PROTPTR,DEGPID,SETZERO);                          1412
         L     @09,@PC00001                                        1412
         ST    @09,@AL00001                                        1412
         LA    @06,390                                             1412
         ST    @06,@AFTEMPS+12                                     1412
         LA    @06,@AFTEMPS+12                                     1412
         ST    @06,@AL00001+4                                      1412
         LA    @06,PROTPTR                                         1412
         ST    @06,@AL00001+8                                      1412
         LA    @06,DEGPID                                          1412
         ST    @06,@AL00001+12                                     1412
         LA    @06,SETZERO                                         1412
         ST    @06,@AL00001+16                                     1412
         MVI   @AL00001+16,X'80'                                   1412
         L     @15,GDTGPL(,@09)                                    1412
         LA    @01,@AL00001                                        1412
         BALR  @14,@15                                             1412
*          RESPECIFY RTNREG RSTD;                                  1413
*          TESTRC = RTNREG;                                        1414
         LR    TESTRC,RTNREG                                       1414
*          RESPECIFY RTNREG UNRSTD;                                1415
*                                                                  1415
*          IF TESTRC ^= 0                                          1416
*            THEN                                                  1416
         LTR   TESTRC,TESTRC                                       1416
         BZ    @RF01416                                            1416
*              DO;                                                 1417
*                                                                  1417
*              DEFSTID = NOSTORAG;                                 1418
         L     @06,@PC00001+8                                      1418
         MVC   DEFSTID(5,@06),@CB02317                             1418
*              RETURN;                                             1419
*                                                                  1419
@EL00006 L     @13,4(,@13)                                         1419
@EF00006 DS    0H                                                  1419
@ER00006 LM    @14,@12,12(@13)                                     1419
         BR    @14                                                 1419
*              END;                                                1420
*                                                                  1420
*          /**********************************************************/
*          /*                                                        */
*          /* INITIALIZE BASIC PORTIONS OF FPLS                      */
*          /*                                                        */
*          /**********************************************************/
*                                                                  1421
*          CTGFLPTR = PROTPTR;                                     1421
*                                                                  1421
@RF01416 L     CTGFLPTR,PROTPTR                                    1421
*          DO N = 1 TO 3;                                          1422
*                                                                  1422
         LA    N,1                                                 1422
@DL01422 DS    0H                                                  1423
*          CTGFLDNO = 1;                                           1423
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            1423
*          CTGFLDNM = ADDR(PROTFLNM(N));                           1424
         LR    @09,N                                               1424
         SLA   @09,3                                               1424
         LA    @09,PROTFLNM-8(@09)                                 1424
         ST    @09,CTGFLDNM(,CTGFLPTR)                             1424
*          ARITHX = (LENGTH(CTGFL) + 8);                           1425
         LA    ARITHX,24                                           1425
*          CTGFLPTR = CTGFLPTR + ARITHX;                           1426
*                                                                  1426
         ALR   CTGFLPTR,ARITHX                                     1426
*          END;                                                    1427
         AL    N,@CF00220                                          1427
         C     N,@CF00163                                          1427
         BNH   @DL01422                                            1427
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* ISSUE THE UID MACRO TO INITIALIZE THE OWNERID - THE UID  */
*        /* MACRO WILL ONLY BE EFFECTIVE IN THE TSO ENVIRONMENT      */
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1428
*        OWNERUID = ' ';                                   /*@Z40WSJH*/
*                                                                  1428
         L     @09,PROTPTR                                         1428
         MVI   OWNERUID+1(@09),C' '                                1428
         MVC   OWNERUID+2(6,@09),OWNERUID+1(@09)                   1428
         MVI   OWNERUID(@09),C' '                                  1428
*        CALL IDCSAID0 (GDTTBL,OWNERUID,OWNUIDLN);         /*@Z40WSJH*/
*                                                                  1429
         L     @06,@PC00001                                        1429
         ST    @06,@AL00001                                        1429
         LA    @04,OWNERUID(,@09)                                  1429
         ST    @04,@AL00001+4                                      1429
         LA    @09,OWNUIDLN(,@09)                                  1429
         ST    @09,@AL00001+8                                      1429
         MVI   @AL00001+8,X'80'                                    1429
         L     @15,GDTUID(,@06)                                    1429
         LA    @01,@AL00001                                        1429
         BALR  @14,@15                                             1429
*        RESPECIFY RTNREG RSTD;                                    1430
*        TESTRC = RTNREG;                                          1431
         LR    TESTRC,RTNREG                                       1431
*        RESPECIFY RTNREG UNRSTD;                          /*@Z40WSJH*/
*        IF TESTRC = 0                                             1433
*          THEN                                                    1433
         LTR   TESTRC,TESTRC                                       1433
         BNZ   @RF01433                                            1433
*            DO;                                           /*@Z40WSJH*/
*                                                                  1434
*            CTGFLPTR = ADDR(OWNIDFPL);                    /*@Z40WSJH*/
         L     @06,PROTPTR                                         1435
         LA    CTGFLPTR,OWNIDFPL(,@06)                             1435
*            CTGFVOWN = CTGFLPTR;                          /*@Z40WSJH*/
         L     @04,@PC00001+8                                      1436
         L     @04,CTGFVPTR(,@04)                                  1436
         ST    CTGFLPTR,CTGFVOWN(,@04)                             1436
*            CTGFLNG(1) = 8;                               /*@Z40WSJH*/
         MVC   CTGFLNG(4,CTGFLPTR),@CF00180                        1437
*            CTGFLPT(1) = ADDR(OWNERUID);                  /*@Z40WSJH*/
*                                                                  1438
         LA    @06,OWNERUID(,@06)                                  1438
         ST    @06,CTGFLPT(,CTGFLPTR)                              1438
*            END;                                          /*@Z40WSJH*/
*        /************************************************************/
*        /*                                                  @Z40WSJH*/
*        /* INIT PASSWORD PORTION OF PASSWALL  COMBINATION FIELD     */
*        /*                                                  @Z40WSJH*/
*        /************************************************************/
*                                                                  1440
*        DO N = 1 TO LENGTH(SPRMAREA);                     /*@Z40WSJH*/
*                                                                  1440
@RF01433 LA    N,1                                                 1440
@DL01440 DS    0H                                                  1441
*        SPRMAREA(N) = 'FF'X;                              /*@Z40WSJH*/
*                                                                  1441
         L     @06,PROTPTR                                         1441
         ALR   @06,N                                               1441
         MVI   SPRMAREA-1(@06),X'FF'                               1441
*        END;                                              /*@Z40WSJH*/
*                                                                  1442
         AL    N,@CF00220                                          1442
         C     N,@CF01041                                          1442
         BNH   @DL01440                                            1442
*        ARECLEN = 0;                                      /*@Z40WSJH*/
         L     @06,PROTPTR                                         1443
         SLR   @04,@04                                             1443
         STH   @04,ARECLEN(,@06)                                   1443
*        PASSATMP = 2;                                     /*@Z40WSJH*/
*                                                                  1444
         MVC   PASSATMP(2,@06),@CH00154                            1444
*        END NEWLOOP;                                      /*@Z40WSJH*/
*                                                                  1445
*                                                                  1445
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE ARRAY POINTERS TO PASSWORD VALUES IN THE      */
*        /* FDTTBL, THIS ALLOWS LOOP INITIALIZATION AND MIGRATION    */
*        /*                                                          */
*        /************************************************************/
*                                                                  1446
*        PWDPTRS(1) = ADDR(AMASTER);                               1446
@RF01409 L     @06,@PC00006                                        1446
         ST    @06,PWDPTRS                                         1446
*        PWDPTRS(2) = ADDR(ACINT);                                 1447
         L     @06,@PC00006+4                                      1447
         ST    @06,PWDPTRS+4                                       1447
*        PWDPTRS(3) = ADDR(AUPDATE);                               1448
         L     @06,@PC00006+8                                      1448
         ST    @06,PWDPTRS+8                                       1448
*        PWDPTRS(4) = ADDR(AREAD);                                 1449
*                                                                  1449
         L     @06,@PC00006+12                                     1449
         ST    @06,PWDPTRS+12                                      1449
*        /************************************************************/
*        /*                                                          */
*        /* LOOP INITIALIZES AND MIGRATES UPWARD EACH VALID PASSWD   */
*        /*                                                          */
*        /************************************************************/
*                                                                  1450
*        CTGFLPTR = ADDR(PASSWFPL);                                1450
         L     CTGFLPTR,PROTPTR                                    1450
*        PSWDFLAG = 0;                                             1451
*                                                                  1451
         SLR   PSWDFLAG,PSWDFLAG                                   1451
*PWINIT: DO N = 4 TO 1 BY -1;                                      1452
*                                                                  1452
PWINIT   LA    N,4                                                 1452
@DL01452 DS    0H                                                  1453
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE PASSWALL FIELD FROM FDTTBL                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  1453
*        IF PWDPTRS(N) ^= NULLPTR                                  1453
*          THEN                                                    1453
         LR    @06,N                                               1453
         SLA   @06,2                                               1453
         L     @06,PWDPTRS-4(@06)                                  1453
         LTR   @06,@06                                             1453
         BZ    @RF01453                                            1453
*            DO;                                                   1454
*                                                                  1454
*            FDTTBLPT = PWDPTRS(N);                                1455
         LR    FDTTBLPT,@06                                        1455
*            PWDOVLAY(N) = CHARVAL(1:CHARLEN);                     1456
         LR    @06,N                                               1456
         SLA   @06,3                                               1456
         L     @01,PROTPTR                                         1456
         ALR   @01,@06                                             1456
         MVI   PWDOVLAY-7(@01),C' '                                1456
         MVC   PWDOVLAY-6(6,@01),PWDOVLAY-7(@01)                   1456
         SLR   @06,@06                                             1456
         IC    @06,CHARLEN(,FDTTBLPT)                              1456
         BCTR  @06,0                                               1456
         EX    @06,@SM03054                                        1456
*            PSWDFLAG = N;                                         1457
*                                                                  1457
         LR    PSWDFLAG,N                                          1457
*            END;                                                  1458
*                                                                  1458
*          /**********************************************************/
*          /*                                                        */
*          /* INIT PASSWALL FIELD  FROM THE MODEL TABLE              */
*          /*                                                        */
*          /**********************************************************/
*                                                                  1459
*          ELSE                                                    1459
*            IF MDLPWALL ^= NULLPTR   &                            1459
*               MDLPSWD(N) ^= NULLPSWD                             1459
*              THEN                                                1459
         B     @RC01453                                            1459
@RF01453 L     @06,@PC00001+8                                      1459
         L     @06,MDLTBLPT(,@06)                                  1459
         L     @06,MDLPWALL(,@06)                                  1459
         LTR   @06,@06                                             1459
         BZ    @RF01459                                            1459
         LR    @15,N                                               1459
         SLA   @15,3                                               1459
         ST    @15,@TF00001                                        1459
         ALR   @15,@06                                             1459
         AL    @15,@CF03056                                        1459
         CLC   MDLPSWD(8,@15),@CB02355                             1459
         BE    @RF01459                                            1459
*                DO;                                               1460
*                                                                  1460
*                PWDOVLAY(N) = MDLPSWD(N);                         1461
         L     @01,PROTPTR                                         1461
         AL    @01,@TF00001                                        1461
         AL    @06,@TF00001                                        1461
         AL    @06,@CF03056                                        1461
         MVC   PWDOVLAY-8(8,@01),MDLPSWD(@06)                      1461
*                PSWDFLAG = N;                                     1462
*                                                                  1462
         LR    PSWDFLAG,N                                          1462
*                END;                                              1463
*                                                                  1463
*        END PWINIT;                                               1464
*                                                                  1464
@RF01459 DS    0H                                                  1464
@RC01453 BCTR  N,0                                                 1464
         LTR   N,N                                                 1464
         BP    @DL01452                                            1464
*        /************************************************************/
*        /*                                                          */
*        /* THE INITIALIZATION OF PSWDFLAG IN PWINIT INDICATES A     */
*        /* PASSWORD HAS BEEN INITIALIZED AND THE HIGHEST LEVEL THAT */
*        /* HAS BEEN SET. THE POINTER TO THE PASSWALL FPL IS SET IN  */
*        /* THE FVT.                                                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  1465
*        IF PSWDFLAG ^= 0                                          1465
*          THEN                                                    1465
         LTR   PSWDFLAG,PSWDFLAG                                   1465
         BZ    @RF01465                                            1465
*            DO;                                                   1466
*                                                                  1466
*            CTGFVSTY = ADDR(PASSWFPL);                            1467
*                                                                  1467
         L     @06,PROTPTR                                         1467
         L     @02,@PC00001+8                                      1467
         L     @02,CTGFVPTR(,@02)                                  1467
         ST    @06,CTGFVSTY(,@02)                                  1467
*            /********************************************************/
*            /*                                                      */
*            /* PASSWORDS HAVE BEEN INITIALIZED, THERE MUST BE A     */
*            /* MASTER PASSWORD IF IT HAS NOT BEEN EXPLICITELY SET   */
*            /* MIGRATE THE HIGHEST SPECIFIED LEVEL UP THRU THE      */
*            /* MASTER LEVEL. PSWDFLAG INDICATES THE HIGHEST LEVEL   */
*            /* WHICH HAS BEEN SET.                                  */
*            /*                                                      */
*            /********************************************************/
*                                                                  1468
*            IF PSWDFLAG ^= 1          &                           1468
*               PWDOVLAY(1) = NULLPSWD                             1468
*              THEN                                                1468
         C     PSWDFLAG,@CF00220                                   1468
         BE    @RF01468                                            1468
         CLC   PWDOVLAY(8,@06),@CB02355                            1468
         BNE   @RF01468                                            1468
*                DO N = (PSWDFLAG-1) TO 1 BY -1;                   1469
*                                                                  1469
         LR    N,PSWDFLAG                                          1469
         BCTR  N,0                                                 1469
         B     @DE01469                                            1469
@DL01469 DS    0H                                                  1470
*                PWDOVLAY(N) = PWDOVLAY(PSWDFLAG);                 1470
*                                                                  1470
         L     @06,PROTPTR                                         1470
         LR    @15,N                                               1470
         SLA   @15,3                                               1470
         ALR   @15,@06                                             1470
         LR    @14,PSWDFLAG                                        1470
         SLA   @14,3                                               1470
         ALR   @06,@14                                             1470
         MVC   @TS00001(8),PWDOVLAY-8(@06)                         1470
         MVC   PWDOVLAY-8(8,@15),@TS00001                          1470
*                END;                                              1471
*                                                                  1471
         BCTR  N,0                                                 1471
@DE01469 LTR   N,N                                                 1471
         BP    @DL01469                                            1471
*            END;                                                  1472
@RF01468 DS    0H                                                  1473
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE PASSWORD PROMPTING CODE NAME IN SPACEPARM     */
*        /* COMBINATION FIELD                                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  1473
*        IF (ADDR(APWPRMT)) ^= NULLPTR                             1473
*          THEN                                                    1473
@RF01465 L     @06,@PC00006+20                                     1473
         LTR   @06,@06                                             1473
         BZ    @RF01473                                            1473
*            DO;                                                   1474
*                                                                  1474
*            CTGFVSTY = ADDR(PASSWFPL);                            1475
         L     @02,PROTPTR                                         1475
         L     @15,@PC00001+8                                      1475
         L     @01,CTGFVPTR(,@15)                                  1475
         ST    @02,CTGFVSTY(,@01)                                  1475
*            FDTTBLPT = ADDR(APWPRMT);                             1476
         LR    FDTTBLPT,@06                                        1476
*            PASSPRMT = CHARVAL(1:CHARLEN);                        1477
*                                                                  1477
         MVI   PASSPRMT+1(@02),C' '                                1477
         MVC   PASSPRMT+2(6,@02),PASSPRMT+1(@02)                   1477
         SLR   @06,@06                                             1477
         IC    @06,CHARLEN(,FDTTBLPT)                              1477
         BCTR  @06,0                                               1477
         EX    @06,@SM03057                                        1477
*            END;                                                  1478
*                                                                  1478
*          ELSE                                                    1479
*            IF MDLPWALL ^= NULLPTR                                1479
*              THEN                                                1479
         B     @RC01473                                            1479
@RF01473 L     @06,@PC00001+8                                      1479
         L     @04,MDLTBLPT(,@06)                                  1479
         L     @04,MDLPWALL(,@04)                                  1479
         LTR   @04,@04                                             1479
         BZ    @RF01479                                            1479
*                DO;                                               1480
*                                                                  1480
*                PASSPRMT = MDLPWPMT;                              1481
         L     @02,PROTPTR                                         1481
         MVC   PASSPRMT(8,@02),MDLPWPMT(@04)                       1481
*                CTGFVSTY = ADDR(PASSWFPL);                        1482
*                                                                  1482
         L     @06,CTGFVPTR(,@06)                                  1482
         ST    @02,CTGFVSTY(,@06)                                  1482
*                END;                                              1483
*                                                                  1483
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE MAXIMUM PASSWORD ATTEMPTS                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  1484
*        IF (ADDR(AMXATTMP)) ^= NULLPTR   &                        1484
*           PWDOVLAY(1) ^= NULLPSWD                                1484
*          THEN                                                    1484
@RF01479 DS    0H                                                  1484
@RC01473 L     @06,@PC00006+16                                     1484
         LTR   @06,@06                                             1484
         BZ    @RF01484                                            1484
         L     @04,PROTPTR                                         1484
         CLC   PWDOVLAY(8,@04),@CB02355                            1484
         BE    @RF01484                                            1484
*            DO;                                                   1485
*                                                                  1485
*            FDTTBLPT = ADDR(AMXATTMP);                            1486
         LR    FDTTBLPT,@06                                        1486
*            PASSATMP = NUMBVAL;                                   1487
         L     @06,PROTPTR                                         1487
         L     @02,NUMBVAL(,FDTTBLPT)                              1487
         STH   @02,PASSATMP(,@06)                                  1487
*            CTGFVSTY = ADDR(PASSWFPL);                            1488
*                                                                  1488
         L     @04,@PC00001+8                                      1488
         L     @04,CTGFVPTR(,@04)                                  1488
         ST    @06,CTGFVSTY(,@04)                                  1488
*            END;                                                  1489
*                                                                  1489
*          ELSE                                                    1490
*            IF MDLPWALL ^= NULLPTR                                1490
*              THEN                                                1490
         B     @RC01484                                            1490
@RF01484 L     @06,@PC00001+8                                      1490
         L     @04,MDLTBLPT(,@06)                                  1490
         L     @04,MDLPWALL(,@04)                                  1490
         LTR   @04,@04                                             1490
         BZ    @RF01490                                            1490
*                DO;                                               1491
*                                                                  1491
*                PASSATMP = MDLPWATP;                              1492
         L     @02,PROTPTR                                         1492
         LH    @04,MDLPWATP(,@04)                                  1492
         STH   @04,PASSATMP(,@02)                                  1492
*                CTGFVSTY = ADDR(PASSWFPL);                        1493
*                                                                  1493
         L     @06,CTGFVPTR(,@06)                                  1493
         ST    @02,CTGFVSTY(,@06)                                  1493
*                END;                                              1494
*                                                                  1494
*        /************************************************************/
*        /*                                                          */
*        /* INIT USER SECURITY VERIFICATION MODULE NAME              */
*        /*                                                          */
*        /************************************************************/
*                                                                  1495
*        IF (ADDR(AUSVRNM)) ^= NULLPTR                             1495
*          THEN                                                    1495
@RF01490 DS    0H                                                  1495
@RC01484 L     @06,@PC00006+24                                     1495
         LTR   @06,@06                                             1495
         BZ    @RF01495                                            1495
*            DO;                                                   1496
*                                                                  1496
*            CTGFVSTY = ADDR(PASSWFPL);                            1497
         L     @02,PROTPTR                                         1497
         L     @15,@PC00001+8                                      1497
         L     @01,CTGFVPTR(,@15)                                  1497
         ST    @02,CTGFVSTY(,@01)                                  1497
*            FDTTBLPT = ADDR(AUSVRNM);                             1498
         LR    FDTTBLPT,@06                                        1498
*            SVRMDUL = CHARVAL(1:CHARLEN);                         1499
*                                                                  1499
         MVI   SVRMDUL+1(@02),C' '                                 1499
         MVC   SVRMDUL+2(6,@02),SVRMDUL+1(@02)                     1499
         SLR   @06,@06                                             1499
         IC    @06,CHARLEN(,FDTTBLPT)                              1499
         BCTR  @06,0                                               1499
         EX    @06,@SM03059                                        1499
*            END;                                                  1500
*                                                                  1500
*          ELSE                                                    1501
*            IF MDLPWALL ^= NULLPTR                                1501
*              THEN                                                1501
         B     @RC01495                                            1501
@RF01495 L     @06,@PC00001+8                                      1501
         L     @04,MDLTBLPT(,@06)                                  1501
         L     @04,MDLPWALL(,@04)                                  1501
         LTR   @04,@04                                             1501
         BZ    @RF01501                                            1501
*                DO;                                               1502
*                                                                  1502
*                SVRMDUL = MDLUSVRN;                               1503
         L     @02,PROTPTR                                         1503
         MVC   SVRMDUL(8,@02),MDLUSVRN(@04)                        1503
*                CTGFVSTY = ADDR(PASSWFPL);                        1504
*                                                                  1504
         L     @06,CTGFVPTR(,@06)                                  1504
         ST    @02,CTGFVSTY(,@06)                                  1504
*                END;                                              1505
*                                                                  1505
*        /************************************************************/
*        /*                                                          */
*        /* INIT VARIABLE LENGTH USER AUTHORIZATION RECORD           */
*        /*                                                          */
*        /************************************************************/
*                                                                  1506
*        IF (ADDR(AUSERARC)) ^= NULLPTR                            1506
*          THEN                                                    1506
@RF01501 DS    0H                                                  1506
@RC01495 L     @06,@PC00006+28                                     1506
         LTR   @06,@06                                             1506
         BZ    @RF01506                                            1506
*            DO;                                                   1507
*                                                                  1507
*            FDTTBLPT = ADDR(AUSERARC);                            1508
         LR    FDTTBLPT,@06                                        1508
*            ARECLEN = CHARLEN;                                    1509
         L     @06,PROTPTR                                         1509
         SLR   @02,@02                                             1509
         IC    @02,CHARLEN(,FDTTBLPT)                              1509
         STH   @02,ARECLEN(,@06)                                   1509
*            AUTHREC(1:CHARLEN) = CHARVAL(1 : CHARLEN);            1510
         BCTR  @02,0                                               1510
         EX    @02,@SM03061                                        1510
*            CTGFVSTY = ADDR(PASSWFPL);                            1511
*                                                                  1511
         L     @04,@PC00001+8                                      1511
         L     @04,CTGFVPTR(,@04)                                  1511
         ST    @06,CTGFVSTY(,@04)                                  1511
*            END;                                                  1512
*                                                                  1512
*          ELSE                                                    1513
*            IF MDLPWALL ^= NULLPTR                                1513
*              THEN                                                1513
         B     @RC01506                                            1513
@RF01506 SLR   @06,@06                                             1513
         L     @04,@PC00001+8                                      1513
         L     @02,MDLTBLPT(,@04)                                  1513
         L     @02,MDLPWALL(,@02)                                  1513
         CR    @02,@06                                             1513
         BE    @RF01513                                            1513
*                IF MDLUARLN ^= 0                                  1514
*                  THEN                                            1514
         LH    @15,MDLUARLN(,@02)                                  1514
         CR    @15,@06                                             1514
         BE    @RF01514                                            1514
*                    DO;                                           1515
*                                                                  1515
*                    ARECLEN = MDLUARLN;                           1516
         L     @06,PROTPTR                                         1516
         STH   @15,ARECLEN(,@06)                                   1516
*                    AUTHREC(1:MDLUARLN) = MDLARECD(1 : MDLUARLN); 1517
         BCTR  @15,0                                               1517
         EX    @15,@SM03063                                        1517
*                    CTGFVSTY = ADDR(PASSWFPL);                    1518
*                                                                  1518
         L     @04,CTGFVPTR(,@04)                                  1518
         ST    @06,CTGFVSTY(,@04)                                  1518
*                    END;                                          1519
*                                                                  1519
*        /************************************************************/
*        /*                                                          */
*        /* INIT PASSWALL LENGTH AND POINTER IN FPL                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1520
*        IF CTGFVSTY ^= NULLPTR                                    1520
*          THEN                                                    1520
*                                                                  1520
@RF01514 DS    0H                                                  1520
@RF01513 DS    0H                                                  1520
@RC01506 SLR   @06,@06                                             1520
         L     @04,@PC00001+8                                      1520
         L     @04,CTGFVPTR(,@04)                                  1520
         C     @06,CTGFVSTY(,@04)                                  1520
         BE    @RF01520                                            1520
*            /********************************************************/
*            /* ACTION HAS OCCURRED AGAINST THE PASSWALL FIELD, THIS */
*            /* FIELD IS PASSED ONLY IF SUCH ACTION HAS RESULTED IN  */
*            /* A VALID MASTER PASSWORD BEING IN EXISTANCE AT THIS   */
*            /* TIME                                                 */
*            /********************************************************/
*                                                                  1521
*            IF PWDOVLAY(1) = NULLPSWD                             1521
*              THEN                                                1521
         L     @02,PROTPTR                                         1521
         CLC   PWDOVLAY(8,@02),@CB02355                            1521
         BNE   @RF01521                                            1521
*                CTGFVSTY = NULLPTR;                               1522
*                                                                  1522
         ST    @06,CTGFVSTY(,@04)                                  1522
*              /******************************************************/
*              /*                                                    */
*              /* ACTION HAS OCCURRED AND WE HAVE A VALID MASTER PSWD*/
*              /* THUS SET UP THE PASSWALL FPL SO THAT THIS          */
*              /* INFORMATION IS PASSED TO VSAM CATLG MANAGEMENT     */
*              /*                                                    */
*              /******************************************************/
*                                                                  1523
*              ELSE                                                1523
*                DO;                                               1523
*                                                                  1523
         B     @RC01521                                            1523
@RF01521 DS    0H                                                  1524
*                CTGFLNG(1) = (LENGTH(SPRMAREA) + ARECLEN);        1524
         L     @06,PROTPTR                                         1524
         LA    @04,52                                              1524
         AH    @04,ARECLEN(,@06)                                   1524
         ST    @04,CTGFLNG(,CTGFLPTR)                              1524
*                CTGFLPT(1) = ADDR(SPRMAREA);                      1525
*                                                                  1525
         LA    @06,SPRMAREA(,@06)                                  1525
         ST    @06,CTGFLPT(,CTGFLPTR)                              1525
*                END;                                              1526
*                                                                  1526
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE OWNER ID - NAME OF OWNER OF OBJECT            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1527
*        IF (ADDR(AOWNRID)) ^= NULLPTR                             1527
*          THEN                                                    1527
@RC01521 DS    0H                                                  1527
@RF01520 L     @06,@PC00006+32                                     1527
         LTR   @06,@06                                             1527
         BZ    @RF01527                                            1527
*            DO;                                                   1528
*                                                                  1528
*            CTGFLPTR = ADDR(OWNIDFPL);                            1529
         L     CTGFLPTR,PROTPTR                                    1529
         LA    CTGFLPTR,OWNIDFPL(,CTGFLPTR)                        1529
*            CTGFVOWN = CTGFLPTR;                                  1530
         L     @02,@PC00001+8                                      1530
         L     @02,CTGFVPTR(,@02)                                  1530
         ST    CTGFLPTR,CTGFVOWN(,@02)                             1530
*            CTGFLNG(1) = 8;                                       1531
         MVC   CTGFLNG(4,CTGFLPTR),@CF00180                        1531
*            FDTTBLPT = ADDR(AOWNRID);                             1532
         LR    FDTTBLPT,@06                                        1532
*            CTGFLPT(1) = ADDR(CHARVAL);                           1533
*                                                                  1533
         LA    @06,CHARVAL(,FDTTBLPT)                              1533
         ST    @06,CTGFLPT(,CTGFLPTR)                              1533
*            END;                                                  1534
*                                                                  1534
*          ELSE                                                    1535
*            IF MDLOWNID ^= NULLPTR                                1535
*              THEN                                                1535
         B     @RC01527                                            1535
@RF01527 L     @06,@PC00001+8                                      1535
         L     @04,MDLTBLPT(,@06)                                  1535
         L     @04,MDLOWNID(,@04)                                  1535
         LTR   @04,@04                                             1535
         BZ    @RF01535                                            1535
*                DO;                                               1536
*                                                                  1536
*                CTGFLPTR = ADDR(OWNIDFPL);                        1537
         L     CTGFLPTR,PROTPTR                                    1537
         LA    CTGFLPTR,OWNIDFPL(,CTGFLPTR)                        1537
*                CTGFVOWN = CTGFLPTR;                              1538
         L     @06,CTGFVPTR(,@06)                                  1538
         ST    CTGFLPTR,CTGFVOWN(,@06)                             1538
*                CTGFLNG(1) = 8;                                   1539
         MVC   CTGFLNG(4,CTGFLPTR),@CF00180                        1539
*                CTGFLPT(1) = MDLOWNID;                            1540
*                                                                  1540
         ST    @04,CTGFLPT(,CTGFLPTR)                              1540
*                END;                                              1541
*                                                                  1541
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE DATA SET ATTRIBUTES                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  1542
*        CTGFLPTR = CTGFVATR;                                      1542
*                                                                  1542
*                                                                  1542
@RF01535 DS    0H                                                  1542
@RC01527 L     @06,@PC00001+8                                      1542
         L     @06,CTGFVPTR(,@06)                                  1542
         L     CTGFLPTR,CTGFVATR(,@06)                             1542
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE SHARE OPTIONS PORTION OF DATA SET ATTRIBUTES  */
*        /*                                                          */
*        /************************************************************/
*        IF (ADDR(ASHAR1)) ^= NULLPTR                              1543
*          THEN                                                    1543
         L     @06,@PC00006+44                                     1543
         LTR   @06,@06                                             1543
         BZ    @RF01543                                            1543
*SHARSET:    DO;                                                   1544
*                                                                  1544
SHARSET  DS    0H                                                  1545
*            /********************************************************/
*            /*                                                      */
*            /* SET CROSS REGION SHARE OPTIONS                       */
*            /*                                                      */
*            /********************************************************/
*            FDTTBLPT = ADDR(ASHAR1);                              1545
         L     FDTTBLPT,@PC00006+44                                1545
*            CTGFLPT(1) -> PSHARE2 = SHROPT3;                      1546
*                                                                  1546
         L     @06,CTGFLPT(,CTGFLPTR)                              1546
         NI    PSHARE2(@06),B'11101111'                            1546
         OI    PSHARE2(@06),B'00100000'                            1546
*            /********************************************************/
*            /*                                                      */
*            /* REGION SHARE - ALL READ USERS OR ONE UPDATE/OUTPUT   */
*            /*                                                      */
*            /********************************************************/
*            IF NUMBVAL = 1                                        1547
*              THEN                                                1547
         CLC   NUMBVAL(4,FDTTBLPT),@CF00220                        1547
         BNE   @RF01547                                            1547
*                CTGFLPT(1) -> PSHARE1 = SHROPT1;                  1548
*                                                                  1548
         NI    PSHARE1(@06),B'00111111'                            1548
*              /******************************************************/
*              /*                                                    */
*              /* REGION SHARE - ALL READ & ONE UPDATE/OUTPUT USER   */
*              /*                                                    */
*              /******************************************************/
*              ELSE                                                1549
*                IF NUMBVAL = 2                                    1549
*                  THEN                                            1549
         B     @RC01547                                            1549
@RF01547 CLC   NUMBVAL(4,FDTTBLPT),@CF00154                        1549
         BNE   @RF01549                                            1549
*                    CTGFLPT(1) -> PSHARE1 = SHROPT2;              1550
*                                                                  1550
         L     @06,CTGFLPT(,CTGFLPTR)                              1550
         NI    PSHARE1(@06),B'01111111'                            1550
         OI    PSHARE1(@06),B'01000000'                            1550
*                  /**************************************************/
*                  /*                                                */
*                  /*REGION SHARE - FULL SHARE                       */
*                  /*                                                */
*                  /**************************************************/
*                  ELSE                                            1551
*                    IF NUMBVAL = 3                                1551
*                      THEN                                        1551
         B     @RC01549                                            1551
@RF01549 CLC   NUMBVAL(4,FDTTBLPT),@CF00163                        1551
         BNE   @RF01551                                            1551
*                        CTGFLPT(1) -> PSHARE1 = SHROPT3;          1552
*                                                                  1552
         L     @06,CTGFLPT(,CTGFLPTR)                              1552
         NI    PSHARE1(@06),B'10111111'                            1552
         OI    PSHARE1(@06),B'10000000'                            1552
*                      /**********************************************/
*                      /*                                            */
*                      /* REGION SHARE - FULL SHARE, ACCESS METHOD   */
*                      /* ASSISTANCE                                 */
*                      /*                                            */
*                      /**********************************************/
*                      ELSE                                        1553
*                        IF NUMBVAL = 4                            1553
*                          THEN                                    1553
         B     @RC01551                                            1553
@RF01551 CLC   NUMBVAL(4,FDTTBLPT),@CF00043                        1553
         BNE   @RF01553                                            1553
*                            CTGFLPT(1) -> PSHARE1 = SHROPT4;      1554
*                                                                  1554
         L     @06,CTGFLPT(,CTGFLPTR)                              1554
         OI    PSHARE1(@06),B'11000000'                            1554
*                          ELSE;                                   1555
*                                                                  1555
@RF01553 DS    0H                                                  1556
*            /********************************************************/
*            /*                                                      */
*            /* SET CROSS SYSTEM ATTRIBUTES                          */
*            /*                                                      */
*            /********************************************************/
*            IF (ADDR(ASHAR2)) ^= NULLPTR                          1556
*              THEN                                                1556
@RC01551 DS    0H                                                  1556
@RC01549 DS    0H                                                  1556
@RC01547 L     @06,@PC00006+48                                     1556
         LTR   @06,@06                                             1556
         BZ    @RF01556                                            1556
*                DO;                                               1557
*                                                                  1557
*                FDTTBLPT = ADDR(ASHAR2);                          1558
*                                                                  1558
         LR    FDTTBLPT,@06                                        1558
*                /****************************************************/
*                /*                                                  */
*                /* SYSTEM SHARE - FULL SHARE                        */
*                /*                                                  */
*                /****************************************************/
*                                                                  1559
*                IF NUMBVAL = 3                                    1559
*                  THEN                                            1559
         CLC   NUMBVAL(4,FDTTBLPT),@CF00163                        1559
         BNE   @RF01559                                            1559
*                    CTGFLPT(1) -> PSHARE2 = SHROPT3;              1560
*                                                                  1560
         L     @06,CTGFLPT(,CTGFLPTR)                              1560
         NI    PSHARE2(@06),B'11101111'                            1560
         OI    PSHARE2(@06),B'00100000'                            1560
*                  /**************************************************/
*                  /*                                                */
*                  /* SYSTEM SHARE - FULL SHARE WITH ACCESS METHOD   */
*                  /* ASSISTANCE                                     */
*                  /*                                                */
*                  /**************************************************/
*                  ELSE                                            1561
*                    IF NUMBVAL = 4                                1561
*                      THEN                                        1561
         B     @RC01559                                            1561
@RF01559 CLC   NUMBVAL(4,FDTTBLPT),@CF00043                        1561
         BNE   @RF01561                                            1561
*                        CTGFLPT(1) -> PSHARE2 = SHROPT4;          1562
*                                                                  1562
         L     @06,CTGFLPT(,CTGFLPTR)                              1562
         OI    PSHARE2(@06),B'00110000'                            1562
*                      ELSE;                                       1563
*                                                                  1563
@RF01561 DS    0H                                                  1564
*                END;                                              1564
*                                                                  1564
@RC01559 DS    0H                                                  1565
*            END SHARSET;                                          1565
*                                                                  1565
@RF01556 DS    0H                                                  1566
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* INITIALIZE ERASE/NOERASE AND REUSE/NOREUSE       @Y30SSJH*/
*        /* OPTIONS                                          @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1566
*        IF (ADDR(AERASE)) ^= NULLPTR                              1566
*          THEN                                                    1566
@RF01543 L     @06,@PC00006+36                                     1566
         LTR   @06,@06                                             1566
         BZ    @RF01566                                            1566
*            CTGFLPT(1) -> PERASE = ON;                            1567
         L     @06,CTGFLPT(,CTGFLPTR)                              1567
         OI    PERASE(@06),B'00010000'                             1567
*          ELSE                                                    1568
*            IF (ADDR(ANERS)) ^= NULLPTR                           1568
*              THEN                                                1568
         B     @RC01566                                            1568
@RF01566 L     @06,@PC00006+40                                     1568
         LTR   @06,@06                                             1568
         BZ    @RF01568                                            1568
*                CTGFLPT(1) -> PERASE = OFF;                       1569
*                                                                  1569
         L     @06,CTGFLPT(,CTGFLPTR)                              1569
         NI    PERASE(@06),B'11101111'                             1569
*        IF (ADDR(ARUS)) ^= NULLPTR                                1570
*          THEN                                                    1570
@RF01568 DS    0H                                                  1570
@RC01566 L     @06,@PC00006+52                                     1570
         LTR   @06,@06                                             1570
         BZ    @RF01570                                            1570
*            CTGFLPT(1) -> PRUS = ON;                      /*@Y30SSJH*/
         L     @06,CTGFLPT(,CTGFLPTR)                              1571
         OI    PRUS(@06),B'00100000'                               1571
*          ELSE                                                    1572
*            IF (ADDR(ANRUS)) ^= NULLPTR                           1572
*              THEN                                                1572
         B     @RC01570                                            1572
@RF01570 L     @06,@PC00006+56                                     1572
         LTR   @06,@06                                             1572
         BZ    @RF01572                                            1572
*                CTGFLPT(1) -> PRUS = OFF;                 /*@Y30SSJH*/
*                                                                  1573
         L     @06,CTGFLPT(,CTGFLPTR)                              1573
         NI    PRUS(@06),B'11011111'                               1573
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* INITIALIZE RGATTR FPL FOR ALTERNATE INDEXES AND  @Y30SSJH*/
*        /* PATHS - TAKE COPY FROM MODEL IF ONE EXISTS, THEN @Y30SSJH*/
*        /* OVERRIDE WITH EXPLICIT ATTRIBUTES                @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1574
*        IF CTGFVTYP = 'G' ×                                       1574
*           CTGFVTYP = 'R'                                         1574
*          THEN                                                    1574
@RF01572 DS    0H                                                  1574
@RC01570 L     @06,@PC00001+8                                      1574
         L     @06,CTGFVPTR(,@06)                                  1574
         CLI   CTGFVTYP(@06),C'G'                                  1574
         BE    @RT01574                                            1574
         CLI   CTGFVTYP(@06),C'R'                                  1574
         BNE   @RF01574                                            1574
@RT01574 DS    0H                                                  1575
*            DO;                                           /*@Y30SSJH*/
*                                                                  1575
*            CTGFLPTR = ADDR(RGATRFPL);                    /*@Y30SSJH*/
         L     @06,PROTPTR                                         1576
         LA    CTGFLPTR,RGATRFPL(,@06)                             1576
*            CTGFVUPG = CTGFLPTR;                          /*@Y30SSJH*/
         L     @04,@PC00001+8                                      1577
         L     @02,CTGFVPTR(,@04)                                  1577
         ST    CTGFLPTR,CTGFVUPG(,@02)                             1577
*            CTGFLNG(1) = 1;                               /*@Y30SSJH*/
         MVC   CTGFLNG(4,CTGFLPTR),@CF00220                        1578
*            CTGFLPT(1) = ADDR(RGATTR);                    /*@Y30SSJH*/
*                                                                  1579
         LA    @02,RGATTR(,@06)                                    1579
         ST    @02,CTGFLPT(,CTGFLPTR)                              1579
*            IF MDLRGATR ^= NULLPTR                                1580
*              THEN                                                1580
         L     @04,MDLTBLPT(,@04)                                  1580
         L     @04,MDLRGATR(,@04)                                  1580
         LTR   @04,@04                                             1580
         BZ    @RF01580                                            1580
*                RGATTR = MDLRATTR;    /* COPY FROM MODEL    @Y30SSJH*/
*                                                                  1581
         MVC   RGATTR(1,@06),MDLRATTR(@04)                         1581
*              ELSE                                                1582
*                UPGUPD = ON;          /* UPGRADE, UPDATE IS DEFAULT
*                                                            @Y30SSJH*/
*                                                                  1582
         B     @RC01580                                            1582
@RF01580 L     @06,PROTPTR                                         1582
         OI    UPGUPD(@06),B'10000000'                             1582
*            /********************************************************/
*            /*                                              @Y30SSJH*/
*            /* SET EXPLICIT ATTRIBUTES FROM FDTTBL          @Y30SSJH*/
*            /*                                              @Y30SSJH*/
*            /********************************************************/
*                                                                  1583
*            IF (ADDR(AUPG)) ^= NULLPTR                            1583
*              THEN                                                1583
@RC01580 L     @06,@PC00006+60                                     1583
         LTR   @06,@06                                             1583
         BZ    @RF01583                                            1583
*                UPGUPD = ON;                              /*@Y30SSJH*/
*                                                                  1584
         L     @06,PROTPTR                                         1584
         OI    UPGUPD(@06),B'10000000'                             1584
*              ELSE                                                1585
*                IF (ADDR(ANUPG)) ^= NULLPTR                       1585
*                  THEN                                            1585
         B     @RC01583                                            1585
@RF01583 L     @06,@PC00006+64                                     1585
         LTR   @06,@06                                             1585
         BZ    @RF01585                                            1585
*                    UPGUPD = OFF;                         /*@Y30SSJH*/
*                                                                  1586
         L     @06,PROTPTR                                         1586
         NI    UPGUPD(@06),B'01111111'                             1586
*            END;                                          /*@Y30SSJH*/
*                                                                  1587
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* PROTECTION ATTRIBUTES HAVE BEEN INITIALIZED - RETURN     */
*        /* CONTROL TO CALLER OF PROTPROC                    @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1588
*        RETURN;                                           /*@Y30SSJH*/
*                                                                  1588
         B     @EL00006                                            1588
*END PROTPROC;                                             /*@Y30SSJH*/
         B     @EL00006                                            1589
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME - MODELPRC (LEVEL TWO SERVICE ROUTINE)            */
*/*                                                                  */
*/* FUNCTION - MODELPRC HANDLES THE RETRIEVAL OF MODEL OBJECTS TO    */
*/*            BE USED IN DEFINING COMPONENTS OF VSAM USER CATALOGS  */
*/*            AND VSAM DATA SETS.                                   */
*/*                                                                  */
*/*            MODELPRC OPENS THE USERCATALOGS CONTAINING THE MODEL  */
*/*            WHEN MDNM IS SPECIFIED                                */
*/*                                                                  */
*/*            A CPL-FPL COMPLEX IS BUILT TO TRANSMIT THE THE LOCATE */
*/*            REQUEST TO VSAM CATALOG MANAGEMENT                    */
*/*            MODELPRC ISSUES THE IDCAMS UCATLG MACRO TO INVOKE     */
*/*            VSAM CATALOG MANAGEMENT                               */
*/*                                                                  */
*/*            MODELPRC INITIALIZES THE MODEL TABLE(MDTAB) ON COMP-  */
*/*            LETION OF THE LOCATE REQUEST,  THIS TABLE CONTAINS    */
*/*            THE LENGTH AND ADDRESS OF FIELDS LOCATED.             */
*/*                                                                  */
*/*            MODELPRC RECEIVES CONTROL FROM AND RETURNS TO A       */
*/*            LEVEL TWO PROCESSOR                                   */
*/*                                                                  */
*/* INPUT -                                                          */
*/*            DEFSTID - GLOBAL INTERNAL STATUS COMMUNICATOR         */
*/*            SEE DEFINITION OF ARGUMENTS OF INVOCATION             */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*            DEFSTID GLOBAL PROCESSING STATUS, SET ON ERROR        */
*/*            DETECTION                                             */
*/*              . DEFSTID = NOSTORAG                                */
*/*              . DEFSTID = CATERROR                                */
*/*              . DEFSTID = MDLTYPER                                */
*/*              . DEFSTID = PSWDSUPR                                */
*/*            MDTAB - THE MODEL TABLE                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  1590
*MODELPRC:                                                         1590
*        PROCEDURE (ENAM,ENAMPLN,ENAMPAS,MDCT,MDCTPLN,MDCTPAS,MDNM,
*          ASCNAME,MDLACBPT,MODELTAB)                      /*@Z40WSJH*/
*          OPTIONS(SAVEAREA);                              /*@Z40WSJH*/
MODELPRC STM   @14,@12,12(@13)                                     1590
         ST    @13,@SA00007+4                                      1590
         LA    @14,@SA00007                                        1590
         ST    @14,8(,@13)                                         1590
         LR    @13,@14                                             1590
         MVC   @PC00007(40),0(@01)                                 1590
*        GEN (ENTRY MODELPRC);       /* EXTERNAL ENTRY POINT @Z40WSJH*/
         ENTRY MODELPRC
*        LM (REG10,REG12,BASESAVE);   /* LOAD PROC CODE REGS @Z40WSJH*/
*                                                                  1592
         LM    REG10,REG12,BASESAVE                                1592
*        /************************************************************/
*        /*                                                          */
*        /* ARGUMENTS OF INVOCATION                                  */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1593
*          ENAM,                       /*NAME OF OBJECT TO BE MODELED*/
*          ENAMPLN,                    /* LEN OF ENTRY PASSWORD      */
*          ENAMPAS,                    /*PASSWORD OF NAME            */
*          MDCT,                       /*CATLG NAME OF ENTRY         */
*          MDCTPLN,                    /* LENGTH OF CATALOG PASSWORD */
*          MDCTPAS,                    /*PASSWORD OF CATALOG NAME    */
*          MDNM,                       /*JCL STATEMENT DESCRIBING CTG*/
*          ASCNAME,                    /*ID # OF ENTRY TO BE MODELED */
*          MODELTAB,                   /* MODEL TABLE                */
*          MDLACBPT;                   /* RETN ADDR OF OPENACB       */
*                                                                  1593
*                                                                  1593
*        /************************************************************/
*        /*                                                          */
*        /* LENTABLE GIVES THE LENGTH OF FIXED LENGTH FIELDS WHICH   */
*        /* ARE USED TO DETERMINE RETURN OF NULL DATA                */
*        /*                                                          */
*        /************************************************************/
*                                                                  1594
*        DCL                                                       1594
*          LENTABLE(15) FIXED(8) INIT(                             1594
*            1,                        /* ENTYPE LENGTH              */
*            4,                        /* CATACB LENGTH              */
*            3,                        /* DSETCRDT LENGTH            */
*            8,                        /* OWNERID LENGTH             */
*            2,                        /* DSATTR LENGTH              */
*            (LENGTH(IDAAMDSB)),       /* AMDSBCAT LENGTH            */
*            6,                        /* VOLSER LENGTH              */
*            0,                        /* LOW KEY, VARIABLE LENGTH   */
*            0,                        /* HIGH KEY, VARIABLE LENGTH  */
*            7,                        /* SPACPARM LENGTH            */
*            4,                        /* LRECL LENGTH               */
*            4,                        /* BUFSIZE LENGTH             */
*            4,                        /* ASCNAME LENGTH     @Y30SSJH*/
*            8,                        /* EXCPEXIT LENGTH    @Y30SSJH*/
*            1);                       /* RGATTR LENGTH      @Y30SSJH*/
*                                                                  1594
*        /************************************************************/
*        /*                                                          */
*        /* WORKAREA IN WHICH VSAM LOCATE RETURNS CATLG DATA @Y30SSJH*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1595
*        DCL MDLWKAPT PTR(31);                                     1595
*        DCL                                                       1596
*          1 MODELWKA BASED(MDLWKAPT) BDY(WORD),                   1596
*            2 MDLWKALN FIXED(15),                                 1596
*            2 MDLRQDLN FIXED(15),                                 1596
*            2 MDLDATA  CHAR(*);                                   1596
*                                                                  1596
*        /************************************************************/
*        /*                                                          */
*        /* UGPOOL ID FOR MODEL WORKAREA SPACE                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  1597
*        DCL                                                       1597
*          MDLID   CHAR(4) INIT('DE02');                           1597
*                                                                  1597
*        /************************************************************/
*        /*                                                          */
*        /* IOCS ADDRESS OF OPENCATALOG - USED TO REFERENCE THE ACB  */
*        /* ADDRESS OF THE OPEN CATALOG                              */
*        /*                                                          */
*        /************************************************************/
*                                                                  1598
*        DCL                                                       1598
*          MDIOCSPT PTR(31) BASED(OPNIOC);                         1598
*                                                                  1598
*        /************************************************************/
*        /*                                                          */
*        /* LENGTH OF LOCATE WORKAREA OBTAINED BY UGPOOL             */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1599
*          MWKALEN  FIXED(31);                                     1599
*                                                                  1599
*        /************************************************************/
*        /*                                                          */
*        /* MODEL PROCESSING CONTROL VARIABLES                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  1600
*        DCL                                                       1600
*          CKLEN   FIXED(15),          /* LOOP CONTROL FOR VERIFYING
*                                         NON-NULL LOCATED DATA      */
*          LOOP    FIXED(15),          /* LOOP CONTROL FOR ISOLATING
*                                         ASSOCIATED NAMES   @Y30SSJH*/
*          MDLOOPCT FIXED(15),         /* COUNTER TO PREVENT INFINITE
*                                         LOCATE LOOP                */
*          CKSWITCH CHAR(1),         /* SWITCH USED IN VERIFYING THE
*                                         NON-NULL LOCATED DATA      */
*          MDLFLG   CHAR(1);           /* LOOP CONTROL FOR LOCATE    */
*                                                                  1600
*        /************************************************************/
*        /*                                                          */
*        /* FIELD NAMES OF DATA LOCATED FOR MODEL                    */
*        /*                                                          */
*        /************************************************************/
*        DCL                                                       1601
*           MDLNMTAB(19) CHAR(8) INIT('ENTYPE','CATACB',           1601
*            'DSETEXDT','OWNERID','DSATTR','AMDSBCAT','VOLSER',    1601
*            'LOKEYV','HIKEYV',                                    1601
*            'SPACPARM','LRECL','BUFSIZE','NAMEDS','EXCPEXIT',     1601
*            'RGATTR','PASSWALL','CATTR','ITYPEXT',                1601
*            'CNTREPNO');                                  /*@Y30SSJH*/
*                                                                  1601
*        /************************************************************/
*        /*                                                          */
*        /* MODEL TABLE - CONTAINS POINTERS TO DATA FIELDS AND LENGTH*/
*        /*                                                          */
*        /************************************************************/
*        DCL LOCATPTR PTR(31);         /* PTR TO LOCATE PARM LIST    */
*        DCL MDTBPT PTR(31);                                       1603
*        DCL                                                       1604
*          1 MDTAB BASED(MDTBPT) BDY(WORD),                        1604
*            2 MDLETYPE  CHAR(1),                                  1604
*            2 *     CHAR(3),                                      1604
*            2 *     (16)  CHAR(8)BDY(WORD),                       1604
*              3 MDLFLDLN  FIXED(31),                              1604
*              3 MDLFLDPT  PTR(31);                                1604
*                                                                  1604
*        /************************************************************/
*        /*                                                          */
*        /* POINTER AND MASK USED IN SETTING TEST FOR VOLSER RETRIEVE*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1605
*        DCL                                                       1605
*          TSTFPLVS PTR(31);                               /*@Y30SSJH*/
*                                                                  1605
*        DCL                                                       1606
*          VOLSMASK CHAR(1) INIT('80'X);                           1606
*                                                                  1606
*        /***********************************************************/
*        /*                                                  @Y30SSJH*/
*        /* POINTER AND MASK USED IN SETTING TEST FOR NAMEDS @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /***********************************************************/
*                                                                  1607
*        DCL                                                       1607
*          TSTFPLDS PTR(31);                               /*@Y30SSJH*/
*                                                                  1607
*        DCL                                                       1608
*          NAMEMASK FIXED(15) INIT(2);                     /*@Y30SSJH*/
*                                                                  1608
*        /************************************************************/
*        /*                                                          */
*        /* MASKS USED TO VERIFY A NON-NULL FIELD IN SETTING UP THE  */
*        /* MODEL TABLE                                              */
*        /************************************************************/
*                                                                  1609
*        DCL                                                       1609
*          DATAVAL CHAR(1) BASED;                                  1609
*                                                                  1609
*        DCL                                                       1610
*          KEYFLDLN FIXED(15)BASED;                                1610
*                                                                  1610
*        /************************************************************/
*        /*                                                  @YL026UG*/
*        /* OVERLAY STRUCTURE FOR PAGE ATTR IN THE CATTR FIELD       */
*        /*                                                  @YL026UG*/
*        /************************************************************/
*        DCL                                                       1611
*          1 CLATTR BASED,                                         1611
*            2 *         BIT(6),                           /*@Z40WSJH*/
*            2 SWAPATTR  BIT(1),                           /*@Z40WSJH*/
*            2 PAGEATTR  BIT(1);                           /*@YL026UG*/
*        /************************************************************/
*        /*                                                          */
*        /* ENTRY POINT TO MODELPRC                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1612
*        OLDERID2 = NEWERID2;                                      1612
         L     @06,@PC00001                                        1612
         L     @04,GDTTR2(,@06)                                    1612
         MVC   @TS00001(95),NEWERID2(@04)                          1612
         MVC   OLDERID2(95,@04),@TS00001                           1612
*        NEWID2 = 'DE36';                                          1613
         MVC   NEWID2(4,@04),@CC02997                              1613
*        MDLTABL = ''B;                                            1614
         L     @04,@PC00001+8                                      1614
         L     @04,MDLTBLPT(,@04)                                  1614
         XC    MDLTABL(132,@04),MDLTABL(@04)                       1614
*        MDTBPT = ADDR(MODELTAB);                                  1615
*                                                                  1615
         L     MDTBPT,@PC00007+36                                  1615
*        /************************************************************/
*        /*                                                          */
*        /* GET DYNAMIC STORAGE FOR BUILDING THE CATALOG MANAGEMENT  */
*        /* LOCATE INTERFACE                                         */
*        /*                                                          */
*        /************************************************************/
*                                                                  1616
*        CALL IDCSAGP0 (GDTTBL,                                    1616
*                ((LENGTH(CTGPL) +76) + ((LENGTH(CTGFL)+8) * 19)), 1616
*                LOCATPTR,DEGPID,SETZERO);                 /*@Y30SSJH*/
*                                                                  1616
         ST    @06,@AL00001                                        1616
         LA    @04,560                                             1616
         ST    @04,@AFTEMPS+16                                     1616
         LA    @04,@AFTEMPS+16                                     1616
         ST    @04,@AL00001+4                                      1616
         LA    @04,LOCATPTR                                        1616
         ST    @04,@AL00001+8                                      1616
         LA    @04,DEGPID                                          1616
         ST    @04,@AL00001+12                                     1616
         LA    @04,SETZERO                                         1616
         ST    @04,@AL00001+16                                     1616
         MVI   @AL00001+16,X'80'                                   1616
         L     @15,GDTGPL(,@06)                                    1616
         LA    @01,@AL00001                                        1616
         BALR  @14,@15                                             1616
*        RESPECIFY RTNREG RSTD;                                    1617
*        TESTRC = RTNREG;                                          1618
         LR    TESTRC,RTNREG                                       1618
*        RESPECIFY RTNREG UNRSTD;                                  1619
*        IF TESTRC ^= 0                                            1620
*          THEN                                                    1620
         LTR   TESTRC,TESTRC                                       1620
         BZ    @RF01620                                            1620
*            DO;                                                   1621
*                                                                  1621
*            DEFSTID = NOSTORAG;                                   1622
         L     @06,@PC00001+8                                      1622
         MVC   DEFSTID(5,@06),@CB02317                             1622
*            RETURN;                                               1623
*                                                                  1623
@EL00007 L     @13,4(,@13)                                         1623
@EF00007 DS    0H                                                  1623
@ER00007 LM    @14,@12,12(@13)                                     1623
         BR    @14                                                 1623
*            END;                                                  1624
*        /************************************************************/
*        /*                                                          */
*        /* BUILD CATALOG PARAMETER LIST (CPL) - INTERFACE TO VSAM   */
*        /* CATALOG MANAGEMENT FOR LOCATE                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1625
*        RFY CTGPL BASED(LOCATPTR);    /* RESPECIFY BASE OF CTGPL    */
@RF01620 DS    0H                                                  1626
*        CTGFUNC = CTGLOC;                                         1626
         L     @08,LOCATPTR                                        1626
         NI    CTGFUNC(@08),B'00111111'                            1626
         OI    CTGFUNC(@08),B'00100000'                            1626
*        CTGAM0 = ON;                                              1627
*        CTGSRH = OFF;                                             1628
*        CTGNUM = ON;                                              1629
*                                                                  1629
         OI    CTGAM0(@08),B'00000011'                             1629
         NI    CTGSRH(@08),B'11111011'                             1629
*        /************************************************************/
*        /*                                                          */
*        /* SETCTCNAME & CTGENT TO INDICATE IF THIS IS A LOCAT OF    */
*        /* AN ENTRYNAME OR AN ENTRYID                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  1630
*        IF (ADDR(ENAM)) ^= NULLPTR                                1630
*          THEN                                                    1630
         L     @06,@PC00007                                        1630
         LTR   @06,@06                                             1630
         BZ    @RF01630                                            1630
*            DO;                                                   1631
*                                                                  1631
*            FDTTBLPT = ADDR(ENAM);                                1632
         LR    FDTTBLPT,@06                                        1632
*            CTGNAME = ON;                                         1633
*                                                                  1633
         OI    CTGNAME(@08),B'00000100'                            1633
*            IF NAMFUQ = ON                                        1634
*              THEN                                                1634
         TM    NAMFUQ(FDTTBLPT),B'10000000'                        1634
         BNO   @RF01634                                            1634
*                /****************************************************/
*                /*                                          @YL026UG*/
*                /* THE NAME OF THE MODEL IS UNQUOTED, ISSUE @YL026UG*/
*                /* UQUAL MACRO FOR POSSIBLE QUALIFICATION   @YL026UG*/
*                /* OF THE NAME, THIS IS DONE IN TSO ONLY    @YL026UG*/
*                /*                                          @YL026UG*/
*                /****************************************************/
*QQUAL02:        DO;                                       /*@YL026UG*/
*                                                                  1635
QQUAL02  DS    0H                                                  1636
*                QDSNPTR = ADDR(NAMVAL);                   /*@YL026UG*/
         LA    @08,NAMVAL(,FDTTBLPT)                               1636
         ST    @08,QDSNPTR                                         1636
*                QDSNLEN = NAMLEN;                         /*@YL026UG*/
*                                                                  1637
         SLR   @08,@08                                             1637
         IC    @08,NAMLEN(,FDTTBLPT)                               1637
         STH   @08,QDSNLEN                                         1637
*                IF (ADDR(CAT)) ^= NULLPTR                         1638
*                  THEN                                            1638
         L     @08,@PC00001+4                                      1638
         L     @06,FDTPTR(,@08)                                    1638
         LTR   @06,@06                                             1638
         BZ    @RF01638                                            1638
*                    DO;                                   /*@YL026UG*/
*                                                                  1639
*                    QCATPTR = ADDR(CATLGVAL);             /*@YL026UG*/
*                                                                  1640
         L     @08,FDTPTR+4(,@08)                                  1640
         LA    @06,CATLGVAL(,@08)                                  1640
         ST    @06,QCATPTR                                         1640
*                    IF CATLGPLN ^= 0                              1641
*                      THEN                                        1641
         CLI   CATLGPLN(@08),0                                     1641
         BE    @RF01641                                            1641
*                        QCATPSWD = ADDR(CATLGPAS);        /*@YL026UG*/
*                                                                  1642
         LA    @08,CATLGPAS(,@08)                                  1642
         ST    @08,QCATPSWD                                        1642
*                    END;                                  /*@YL026UG*/
*                                                                  1643
*                  ELSE                                            1644
*                    DO;                                   /*@YL026UG*/
*                                                                  1644
         B     @RC01638                                            1644
@RF01638 DS    0H                                                  1645
*                    QCATPTR = NULLPTR;                    /*@YL026UG*/
         SLR   @08,@08                                             1645
         ST    @08,QCATPTR                                         1645
*                    QCATPSWD = NULLPTR;                   /*@YL026UG*/
*                                                                  1646
         ST    @08,QCATPSWD                                        1646
*                    END;                                  /*@YL026UG*/
*                                                                  1647
*                CALL IDCSAQL0 (GDTTBL,                            1648
*                  QDSNPTR,            /* PTR TO DSNAME      @YL026UG*/
*                  QDSNLEN,            /* LENGTH OF DSNAME   @YL026UG*/
*                  QCATPTR,            /* PTR TO CAT NAME    @YL026UG*/
*                  QCATPSWD);          /* PTR TO CAT PASWD   @YL026UG*/
*                                                                  1648
@RC01638 L     @06,@PC00001                                        1648
         ST    @06,@AL00001                                        1648
         LA    @15,QDSNPTR                                         1648
         ST    @15,@AL00001+4                                      1648
         LA    @15,QDSNLEN                                         1648
         ST    @15,@AL00001+8                                      1648
         LA    @15,QCATPTR                                         1648
         ST    @15,@AL00001+12                                     1648
         LA    @15,QCATPSWD                                        1648
         ST    @15,@AL00001+16                                     1648
         MVI   @AL00001+16,X'80'                                   1648
         L     @15,GDTQAL(,@06)                                    1648
         LA    @01,@AL00001                                        1648
         BALR  @14,@15                                             1648
*                RESPECIFY RTNREG RSTD;                            1649
*                TESTRC = RTNREG;                                  1650
         LR    TESTRC,RTNREG                                       1650
*                RESPECIFY RTNREG UNRSTD;                  /*@YL026UG*/
*                                                                  1651
*                IF TESTRC ^= 0                                    1652
*                  THEN                                            1652
         LTR   TESTRC,TESTRC                                       1652
         BZ    @RF01652                                            1652
*                    DO;                                   /*@YL026UG*/
*                                                                  1653
*                    DEFSTID = TERMERR;                    /*@YL026UG*/
         L     @06,@PC00001+8                                      1654
         MVC   DEFSTID(5,@06),@CB02326                             1654
*                    RETURN;                               /*@YL026UG*/
*                                                                  1655
         B     @EL00007                                            1655
*                    END;                                  /*@YL026UG*/
*                END QQUAL02;                              /*@YL026UG*/
*                                                                  1657
@RF01652 DS    0H                                                  1658
*            CTGENT = ADDR(NAMVAL);                                1658
*                                                                  1658
@RF01634 LA    @08,NAMVAL(,FDTTBLPT)                               1658
         L     @06,LOCATPTR                                        1658
         ST    @08,CTGENT(,@06)                                    1658
*            END;                                                  1659
*                                                                  1659
*          ELSE                                                    1660
*            DO;                                                   1660
*                                                                  1660
         B     @RC01630                                            1660
@RF01630 DS    0H                                                  1661
*            CTGNAME = OFF;                                        1661
         L     @08,LOCATPTR                                        1661
         NI    CTGNAME(@08),B'11111011'                            1661
*            CTGENT = ADDR(ASCNAME);                               1662
*                                                                  1662
         L     @06,@PC00007+28                                     1662
         ST    @06,CTGENT(,@08)                                    1662
*            END;                                                  1663
*                                                                  1663
*        /************************************************************/
*        /*                                                          */
*        /* IDENTIFY THE CATALOG IN WHICH THE MODEL ENTRY RESIDES -  */
*        /* THREE METHODS OF EXPRESSING EXIST:                       */
*        /*  CATLG NAME(MDLCATNM),ACB OF CATALOG(MDLACBPT) OR DEFAULT*/
*        /*  (STEPCAT,JOBCAT,MASTER)                                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  1664
*        IF MDLACBPT = NULLPTR                                     1664
*          THEN                                                    1664
@RC01630 SLR   @08,@08                                             1664
         L     @06,@PC00007+32                                     1664
         C     @08,MDLACBPT(,@06)                                  1664
         BNE   @RF01664                                            1664
*            DO;                                                   1665
*                                                                  1665
*            /********************************************************/
*            /*                                                      */
*            /* SET CTGCAT POINTER TO CATALOG NAME                   */
*            /*                                                      */
*            /********************************************************/
*                                                                  1666
*            IF (ADDR(MDCT)) ^= NULLPTR                            1666
*              THEN                                                1666
         L     @06,@PC00007+12                                     1666
         CR    @06,@08                                             1666
         BE    @RF01666                                            1666
*                DO;                                               1667
*                                                                  1667
*                FDTTBLPT = ADDR(MDCT);                            1668
         LR    FDTTBLPT,@06                                        1668
*                CTGCAT = ADDR(NAMVAL);                            1669
         L     @08,LOCATPTR                                        1669
         LA    @06,NAMVAL(,FDTTBLPT)                               1669
         ST    @06,CTGCAT(,@08)                                    1669
*                CTGCNAME = ON;                                    1670
*                                                                  1670
         OI    CTGCNAME(@08),B'00000010'                           1670
*                END;                                              1671
*                                                                  1671
*              /******************************************************/
*              /*                                                    */
*              /* SET CTGCAT POINTER TO NULLPTR                      */
*              /*                                                    */
*              /******************************************************/
*                                                                  1672
*              ELSE                                                1672
*                DO;                                               1672
*                                                                  1672
         B     @RC01666                                            1672
@RF01666 DS    0H                                                  1673
*                CTGCAT = NULLPTR;                                 1673
         L     @08,LOCATPTR                                        1673
         SLR   @06,@06                                             1673
         ST    @06,CTGCAT(,@08)                                    1673
*                CTGCNAME = ON;                                    1674
*                                                                  1674
         OI    CTGCNAME(@08),B'00000010'                           1674
*                END;                                              1675
*                                                                  1675
*            END;                                                  1676
*                                                                  1676
*          /**********************************************************/
*          /*                                                        */
*          /* SET CTGCAT TO CATALOG ACB ADDRESS                      */
*          /*                                                        */
*          /**********************************************************/
*                                                                  1677
*          ELSE                                                    1677
*            DO;                                                   1677
*                                                                  1677
         B     @RC01664                                            1677
@RF01664 DS    0H                                                  1678
*            CTGCNAME = OFF;                                       1678
         L     @08,LOCATPTR                                        1678
         NI    CTGCNAME(@08),B'11111101'                           1678
*            CTGCAT = MDLACBPT;                            /*@Y30SSJH*/
*                                                                  1679
         L     @06,@PC00007+32                                     1679
         L     @06,MDLACBPT(,@06)                                  1679
         ST    @06,CTGCAT(,@08)                                    1679
*            END;                                                  1680
*                                                                  1680
*        /************************************************************/
*        /*                                                          */
*        /* DENOTE PASSWORD IN CPL                                   */
*        /* THE CATALOG PASSWORD OF THE MODEL PARAMETER OVERRIDES    */
*        /* THE ENTRY PASSWORD WHEN BOTH ARE SPECIFIED               */
*        /*                                                          */
*        /************************************************************/
*                                                                  1681
*        IF (ADDR(MDCT)) ^= NULLPTR                                1681
*                                                                  1681
*          /**********************************************************/
*          /*                                                        */
*          /* INITIALIZE PASSWORD WITH THE CATALOG PASSWORD          */
*          /*                                                        */
*          /**********************************************************/
*          THEN                                                    1681
@RC01664 SLR   @08,@08                                             1681
         L     @06,@PC00007+12                                     1681
         CR    @06,@08                                             1681
         BE    @RF01681                                            1681
*            IF MDCTPLN ^= 0                                       1682
*              THEN                                                1682
         L     @06,@PC00007+16                                     1682
         C     @08,MDCTPLN(,@06)                                   1682
         BE    @RF01682                                            1682
*                CTGPSWD = ADDR(MDCTPAS);                          1683
*                                                                  1683
         L     @08,@PC00007+20                                     1683
         L     @06,LOCATPTR                                        1683
         ST    @08,CTGPSWD(,@06)                                   1683
*              ELSE;                                               1684
*                                                                  1684
@RF01682 DS    0H                                                  1685
*        /************************************************************/
*        /*                                                          */
*        /* CHECK TO SEE IF CTGPSWD IS SET IF NOT AND THERE IS AN    */
*        /* ENTRY PASSWORD-INITIALIZE THE PASSWORD POINTER IN THE CPL*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1685
*        IF CTGPSWD = NULLPTR  &                                   1685
*           ENAMPLN ^= 0                                           1685
*            THEN                                                  1685
@RF01681 SLR   @08,@08                                             1685
         L     @06,LOCATPTR                                        1685
         C     @08,CTGPSWD(,@06)                                   1685
         BNE   @RF01685                                            1685
         L     @04,@PC00007+4                                      1685
         C     @08,ENAMPLN(,@04)                                   1685
         BE    @RF01685                                            1685
*              CTGPSWD = ADDR(ENAMPAS);                            1686
*                                                                  1686
         L     @08,@PC00007+8                                      1686
         ST    @08,CTGPSWD(,@06)                                   1686
*        /************************************************************/
*        /*                                                          */
*        /* CONSTRUCT AND CHAIN THE FPLS TO THE CPL - THE FPLS       */
*        /* INDICATE TO CATALOG MANAGEMENT WHICH FIELDS ARE TO BE    */
*        /* LOCATED                                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1687
*        CTGFLPTR = LOCATPTR + LENGTH(CTGPL) + 76;         /*@Y30SSJH*/
*                                                                  1687
@RF01685 LA    CTGFLPTR,104                                        1687
         AL    CTGFLPTR,LOCATPTR                                   1687
*        DO N = 1 TO 17;                                   /*@Y30SSJH*/
*                                                                  1688
         LA    N,1                                                 1688
@DL01688 DS    0H                                                  1689
*        CTGFLDNO = 1;                                             1689
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            1689
*        CTGFLDNM = ADDR(MDLNMTAB(N));                             1690
         LR    @08,N                                               1690
         SLA   @08,3                                               1690
         LA    @08,MDLNMTAB-8(@08)                                 1690
         ST    @08,CTGFLDNM(,CTGFLPTR)                             1690
*        CTGFIELD(N) = CTGFLPTR;                                   1691
         LR    @08,N                                               1691
         SLA   @08,2                                               1691
         L     @06,LOCATPTR                                        1691
         ST    CTGFLPTR,CTGFIELD-4(@08,@06)                        1691
*        CTGFLPTR = CTGFLPTR + (LENGTH(CTGFL)+8);                  1692
*                                                                  1692
         AL    CTGFLPTR,@CF00311                                   1692
*        END;                                                      1693
*                                                                  1693
         AL    N,@CF00220                                          1693
         C     N,@CF00646                                          1693
         BNH   @DL01688                                            1693
*        CTGNOFLD = 17;                                    /*@Y30SSJH*/
*                                                                  1694
         L     @08,LOCATPTR                                        1694
         MVI   CTGNOFLD(@08),X'11'                                 1694
*        /************************************************************/
*        /*                                                          */
*        /* BUILD TEST FPL FOR VOLSER FPL, THIS GUARANTEES THAT      */
*        /* VOLUMES RETURNED AT THE INDEX LEVEL ARE NOT DATA VOLUMES */
*        /* WITH IMBEDDED SEQUENCE SETS                              */
*        /* CTGFLPTR IS REFERENCING THE AREA OF THE TEST FPL AS A    */
*        /* RESULT OF THE FINAL BUMPING IN THE ABOVE LOOP            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1695
*        CTGFLDNO = 1;                                             1695
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            1695
*        CTGFLDCD = CTGFLDZ;                                       1696
         MVI   CTGFLDCD(CTGFLPTR),X'80'                            1696
*        CTGFLDNM = ADDR(MDLNMTAB(18));                    /*@Y30SSJH*/
         LA    @06,MDLNMTAB+136                                    1697
         ST    @06,CTGFLDNM(,CTGFLPTR)                             1697
*        CTGFLNG(1) = 1;                                           1698
         MVC   CTGFLNG(4,CTGFLPTR),@CF00220                        1698
*        CTGFLPT(1) = ADDR(VOLSMASK);                              1699
         LA    @06,VOLSMASK                                        1699
         ST    @06,CTGFLPT(,CTGFLPTR)                              1699
*        TSTFPLVS = CTGFLPTR;                              /*@Y30SSJH*/
*                                                                  1700
         LR    TSTFPLVS,CTGFLPTR                                   1700
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* BUILD TEST FPL FOR NAMEDS FPL WHICH GUARANTEES   @Y30SSJH*/
*        /* THAT NO MORE THAN TWO ASSOCIATIONS ARE RETURNED. @Y30SSJH*/
*        /* CTGFLPTR IS STILL REFERENCING THE VOLSER TEST    @Y30SSJH*/
*        /* FPL                                              @Y30SSJH*/
*        /************************************************************/
*                                                                  1701
*        CTGFLPTR = CTGFLPTR + (LENGTH(CTGFL)+8);          /*@Y30SSJH*/
*                                                                  1701
         AL    CTGFLPTR,@CF00311                                   1701
*        CTGFLDNO = 1;                                     /*@Y30SSJH*/
         MVI   CTGFLDNO(CTGFLPTR),X'01'                            1702
*        CTGFLDCD = CTGFLDLE;                              /*@Y30SSJH*/
         MVI   CTGFLDCD(CTGFLPTR),X'C0'                            1703
*        CTGFLDNM = ADDR(MDLNMTAB(19));                    /*@Y30SSJH*/
         LA    @06,MDLNMTAB+144                                    1704
         ST    @06,CTGFLDNM(,CTGFLPTR)                             1704
*        CTGFLNG(1) = 2;                                   /*@Y30SSJH*/
         MVC   CTGFLNG(4,CTGFLPTR),@CF00154                        1705
*        CTGFLPT(1) = ADDR(NAMEMASK);                      /*@Y30SSJH*/
         LA    @06,NAMEMASK                                        1706
         ST    @06,CTGFLPT(,CTGFLPTR)                              1706
*        TSTFPLDS = CTGFLPTR;                              /*@Y30SSJH*/
*                                                                  1707
         LR    TSTFPLDS,CTGFLPTR                                   1707
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* CHAIN VOLSER FPL TO ITS TEST FPL                 @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1708
*        CTGFLPTR = LOCATPTR + (LENGTH(CTGPL) + 76) +              1708
*                   ((LENGTH(CTGFL) + 8) * 6);             /*@Y30SSJH*/
         AL    @08,@CF01598                                        1708
         LR    CTGFLPTR,@08                                        1708
*        CTGFLCHN = TSTFPLVS;                              /*@Y30SSJH*/
*                                                                  1709
         ST    TSTFPLVS,CTGFLCHN(,CTGFLPTR)                        1709
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* CHAIN THE NAMEDS FPL TO ITS TEST FPL -           @Y30SSJH*/
*        /* THE CTGFLPTR IS REFERENCING THE VOLSER FPL       @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1710
*        CTGFLPTR = CTGFLPTR + ((LENGTH(CTGFL) + 8) * 6);  /*@Y30SSJH*/
*                                                                  1710
         AL    CTGFLPTR,@CF01586                                   1710
*        CTGFLCHN = TSTFPLDS;                              /*@Y30SSJH*/
         ST    TSTFPLDS,CTGFLCHN(,CTGFLPTR)                        1711
*                                                                  1712
*        /************************************************************/
*        /*                                                          */
*        /* ISSUE CATALOG LOCATE - LOOP PERMITS REISSUANCE OF LOCATE */
*        /* WHEN INITIAL INVOCATION SPECIFIES INSUFFICIENT WORKAREA  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1712
*        MWKALEN = WKALEN1;                                /*@Y30SSJH*/
         MVC   MWKALEN(4),@CF02370                                 1712
*        MDLOOPCT = 0;                                             1713
         SLR   MDLOOPCT,MDLOOPCT                                   1713
*        MDLFLG = GO;                                              1714
         MVI   MDLFLG,X'00'                                        1714
*        DO WHILE MDLFLG = GO;                                     1715
*                                                                  1715
         B     @DE01715                                            1715
@DL01715 DS    0H                                                  1716
*        CALL IDCSAGP0 (GDTTBL,MWKALEN,MDLWKAPT,MDLID,SETZERO);    1716
         L     @06,@PC00001                                        1716
         ST    @06,@AL00001                                        1716
         LA    @04,MWKALEN                                         1716
         ST    @04,@AL00001+4                                      1716
         LA    @04,MDLWKAPT                                        1716
         ST    @04,@AL00001+8                                      1716
         LA    @04,MDLID                                           1716
         ST    @04,@AL00001+12                                     1716
         LA    @04,SETZERO                                         1716
         ST    @04,@AL00001+16                                     1716
         MVI   @AL00001+16,X'80'                                   1716
         L     @15,GDTGPL(,@06)                                    1716
         LA    @01,@AL00001                                        1716
         BALR  @14,@15                                             1716
*        RESPECIFY RTNREG RSTD;                                    1717
*        TESTRC = RTNREG;                                          1718
         LR    TESTRC,RTNREG                                       1718
*        RESPECIFY RTNREG UNRSTD;                                  1719
*        IF TESTRC ^= 0                                            1720
*          THEN                                                    1720
         LTR   TESTRC,TESTRC                                       1720
         BZ    @RF01720                                            1720
*            DO;                                                   1721
*                                                                  1721
*            MDLFLG = STOP;                                        1722
         MVI   MDLFLG,X'0F'                                        1722
*            DEFSTID = NOSTORAG;                                   1723
         L     @06,@PC00001+8                                      1723
         MVC   DEFSTID(5,@06),@CB02317                             1723
*            RETURN;                                               1724
*                                                                  1724
         B     @EL00007                                            1724
*            END;                                                  1725
*                                                                  1725
*          ELSE                                                    1726
*            DO;                                                   1726
*                                                                  1726
@RF01720 DS    0H                                                  1727
*            MDLOOPCT = MDLOOPCT +1;                               1727
         AL    MDLOOPCT,@CF00220                                   1727
*            CTGWKA = MDLWKAPT;                                    1728
         L     @08,MDLWKAPT                                        1728
         L     @06,LOCATPTR                                        1728
         ST    @08,CTGWKA(,@06)                                    1728
*            MDLWKALN = MWKALEN;                                   1729
*                                                                  1729
         L     @06,MWKALEN                                         1729
         STH   @06,MDLWKALN(,@08)                                  1729
*            CALL IDCSACA0 (GDTTBL,LOCATPTR);                      1730
*                                                                  1730
         L     @08,@PC00001                                        1730
         ST    @08,@AL00001                                        1730
         LA    @06,LOCATPTR                                        1730
         ST    @06,@AL00001+4                                      1730
         L     @15,GDTCAT(,@08)                                    1730
         LA    @01,@AL00001                                        1730
         BALR  @14,@15                                             1730
*            /********************************************************/
*            /*                                                      */
*            /* CHECK CATALOG RETURN CODES                           */
*            /*                                                      */
*            /********************************************************/
*                                                                  1731
*            CTGRTNCC = RTNREG;                                    1731
*                                                                  1731
         L     @14,@PC00001+8                                      1731
         ST    RTNREG,CTGRTNCC(,@14)                               1731
*            IF GDTDBG = NULLPTR                                   1732
*              THEN;                                               1732
         L     @08,@PC00001                                        1732
         L     @08,GDTDBG(,@08)                                    1732
         LTR   @08,@08                                             1732
         BZ    @RT01732                                            1732
*              ELSE                                                1734
*                CALL IDCDB010 (GDTTBL,'DE03');                    1734
*                                                                  1734
         L     @08,@PC00001                                        1734
         ST    @08,@AL00001                                        1734
         LA    @06,@CC03001                                        1734
         ST    @06,@AL00001+4                                      1734
         MVI   @AL00001+4,X'80'                                    1734
         L     @15,GDTDBG(,@08)                                    1734
         LA    @01,@AL00001                                        1734
         BALR  @14,@15                                             1734
*            /********************************************************/
*            /*                                                      */
*            /* SUCCESSFULL COMPLETION GET OUT OF LOOP               */
*            /*                                                      */
*            /********************************************************/
*                                                                  1735
*            IF CTGRTNCC = 0                                       1735
*              THEN                                                1735
@RT01732 L     @08,@PC00001+8                                      1735
         L     @08,CTGRTNCC(,@08)                                  1735
         LTR   @08,@08                                             1735
         BNZ   @RF01735                                            1735
*                MDLFLG = STOP;                                    1736
*                                                                  1736
         MVI   MDLFLG,X'0F'                                        1736
*              ELSE                                                1737
*                                                                  1737
*                /****************************************************/
*                /*                                                  */
*                /* INSUFFICIENT WORKAREA SIZE - ON FIRST LOCATE     */
*                /* INCREASE THE WORKAREA SIZE - IF NOT FIRST LOCATE */
*                /* TERMINATE PROCESSING                             */
*                /*                                                  */
*                /****************************************************/
*                                                                  1737
*                IF CTGRTNCC = 40  &                               1737
*                   MDLOOPCT < 2                                   1737
*                  THEN                                            1737
         B     @RC01735                                            1737
@RF01735 L     @08,@PC00001+8                                      1737
         CLC   CTGRTNCC(4,@08),@CF00950                            1737
         BNE   @RF01737                                            1737
         C     MDLOOPCT,@CF00154                                   1737
         BNL   @RF01737                                            1737
*                    MWKALEN = MDLRQDLN + 8;                       1738
*                                                                  1738
         LA    @08,8                                               1738
         L     @06,MDLWKAPT                                        1738
         AH    @08,MDLRQDLN(,@06)                                  1738
         ST    @08,MWKALEN                                         1738
*                  /**************************************************/
*                  /*                                                */
*                  /* LOCATE ERROR TERMINATE PROCESSING              */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1739
*                  ELSE                                            1739
*                    DO;                                           1739
*                                                                  1739
         B     @RC01737                                            1739
@RF01737 DS    0H                                                  1740
*                    MDLFLG = STOP;                                1740
         MVI   MDLFLG,X'0F'                                        1740
*                    CTGPLPTR = LOCATPTR;                  /*@Y30SSJH*/
         L     @06,@PC00001+8                                      1741
         L     @04,LOCATPTR                                        1741
         ST    @04,CTGPLPTR(,@06)                                  1741
*                    DEFSTID = CATERROR;                           1742
         MVC   DEFSTID(5,@06),@CB02344                             1742
*                    RETURN;                                       1743
*                                                                  1743
         B     @EL00007                                            1743
*                    END;                                          1744
*                                                                  1744
*            END;                                                  1745
*                                                                  1745
@RC01737 DS    0H                                                  1745
@RC01735 DS    0H                                                  1746
*            END;                                                  1746
@DE01715 CLI   MDLFLG,X'00'                                        1746
         BE    @DL01715                                            1746
*                                                                  1747
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE MODELTBL VALUES WHICH IS USED TO COMMUNICATE  */
*        /* THE LOCATED ATTRIBUTES.                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  1747
*        IF DEFSTID = NORMAL                                       1747
*          THEN                                                    1747
         L     @08,@PC00001+8                                      1747
         CLC   DEFSTID(5,@08),@CB02347                             1747
         BNE   @RF01747                                            1747
*            DO;                                                   1748
*                                                                  1748
*            CTGFLPTR = LOCATPTR + (LENGTH(CTGPL) + 76);   /*@Y30SSJH*/
*                                                                  1749
         LA    CTGFLPTR,104                                        1749
         AL    CTGFLPTR,LOCATPTR                                   1749
*            /********************************************************/
*            /*                                                      */
*            /* VERIFY THAT MODEL ENTYPE IS SAME AS CURRENT          */
*            /*                                                      */
*            /********************************************************/
*                                                                  1750
*            MDLOTYPE = CTGFLPT(1) -> MDLETYPE;                    1750
         L     @06,MDLTBLPT(,@08)                                  1750
         L     @04,CTGFLPT(,CTGFLPTR)                              1750
         MVC   MDLOTYPE(1,@06),MDLETYPE(@04)                       1750
*            IF CTGFVTYP ^= MDLOTYPE                               1751
*              THEN                                                1751
         L     @04,CTGFVPTR(,@08)                                  1751
         CLC   CTGFVTYP(1,@04),MDLOTYPE(@06)                       1751
         BE    @RF01751                                            1751
*                DO;                                               1752
*                                                                  1752
*                DEFSTID = MDLTYPER;                               1753
         MVC   DEFSTID(5,@08),@CB02341                             1753
*                RETURN;                                           1754
*                                                                  1754
         B     @EL00007                                            1754
*                END;                                              1755
*                                                                  1755
*            /********************************************************/
*            /*                                              @YL026UG*/
*            /* FOR PAGESPACE - LOOK AT CATTR AND CHECK TO   @YL026UG*/
*            /* SEE IF WE HAVE A PAGESPACE                   @YL026UG*/
*            /*                                              @YL026UG*/
*            /********************************************************/
*            IF CTGFIELD(17) -> CTGFLPT(1) ^= NULLPTR              1756
*              THEN                                                1756
@RF01751 SLR   @08,@08                                             1756
         L     @06,LOCATPTR                                        1756
         L     @06,CTGFIELD+64(,@06)                               1756
         L     @06,CTGFLPT(,@06)                                   1756
         CR    @06,@08                                             1756
         BE    @RF01756                                            1756
*                IF CTGFIELD(17) -> CTGFLPT(1) -> CLATTR ^= 'FF'X  &
*                   CTGFIELD(17) -> CTGFLPT(1) -> PAGEATTR = ON    1757
*                  THEN                                            1757
         CLI   CLATTR(@06),X'FF'                                   1757
         BE    @RF01757                                            1757
         TM    PAGEATTR(@06),B'00000001'                           1757
         BNO   @RF01757                                            1757
*                    DO;                                   /*@YL026UG*/
*                                                                  1758
*                    PGSPFLAG = GO;                        /*@YL026UG*/
*                                                                  1759
         L     @04,@PC00001+8                                      1759
         MVI   PGSPFLAG(@04),X'00'                                 1759
*                    /************************************************/
*                    /*                                      @Z40WSJH*/
*                    /* SET SWAPFLAG IF THE PAGESPACE HAS THE        */
*                    /* THE SWAP ATTRIBUTE.                  @Z40WSJH*/
*                    /*                                      @Z40WSJH*/
*                    /************************************************/
*                    IF (CTGFIELD(17) -> CTGFLPT(1) -> SWAPATTR = ON  &
*                        ADDR(PNSWP)  = NULLPTR )                  1760
*                      THEN                                        1760
         TM    SWAPATTR(@06),B'00000010'                           1760
         BNO   @RF01760                                            1760
         L     @06,@PC00001+4                                      1760
         C     @08,FDTPTR+996(,@06)                                1760
         BNE   @RF01760                                            1760
*                        SWAPFLAG = GO;                    /*@Z40WSJH*/
*                                                                  1761
         MVI   SWAPFLAG(@04),X'00'                                 1761
*                    /************************************************/
*                    /*                                      @YL026UG*/
*                    /* THE MODEL IS A PAGESPACE - MAKE SURE @YL026UG*/
*                    /* WE ARE DEFINING A PAGESPACE.         @YL026UG*/
*                    /*                                      @YL026UG*/
*                    /************************************************/
*                    IF (ADDR(PGSP)) = NULLPTR                     1762
*                      THEN                                        1762
@RF01760 L     @08,@PC00001+4                                      1762
         L     @08,FDTPTR+24(,@08)                                 1762
         LTR   @08,@08                                             1762
         BNZ   @RF01762                                            1762
*                        DO;                               /*@YL026UG*/
*                                                                  1763
*                        DEFSTID = MDLTYPER;               /*@YL026UG*/
         L     @06,@PC00001+8                                      1764
         MVC   DEFSTID(5,@06),@CB02341                             1764
*                        RETURN;                           /*@YL026UG*/
*                                                                  1765
         B     @EL00007                                            1765
*                        END;                              /*@YL026UG*/
*                                                                  1766
*                    END;                                  /*@YL026UG*/
*                                                                  1767
@RF01762 DS    0H                                                  1768
*            /********************************************************/
*            /*                                                      */
*            /* LOOP THRU THE FPLS CHECKING FOR VALID RETURN OF DATA */
*            /*                                                      */
*            /********************************************************/
*                                                                  1768
*            DO N = 1 TO 15;                               /*@Y30SSJH*/
*                                                                  1768
@RF01757 DS    0H                                                  1768
@RF01756 LA    N,1                                                 1768
@DL01768 DS    0H                                                  1769
*            IF CTGFLNG(1) ^= 0                                    1769
*              THEN                                                1769
         L     @08,CTGFLNG(,CTGFLPTR)                              1769
         LTR   @08,@08                                             1769
         BZ    @RF01769                                            1769
*                DO;                                               1770
*                                                                  1770
*                CKSWITCH = GO;                                    1771
*                                                                  1771
         MVI   CKSWITCH,X'00'                                      1771
*                /****************************************************/
*                /*                                                  */
*                /* THE FIELD WAS RETURNED - FOR IT TO BE REFERENCED */
*                /* IN THE MODEL TABLE IT MUST NOT CONTAIN ALL 'FF'X */
*                /*                                                  */
*                /****************************************************/
*                                                                  1772
*                DO CKLEN = 1 TO (LENTABLE(N))                     1772
*                  WHILE CKSWITCH = GO;                            1772
*                                                                  1772
         LA    CKLEN,1                                             1772
         B     @DE01772                                            1772
@DL01772 CLI   CKSWITCH,X'00'                                      1772
         BNE   @DC01772                                            1772
*                IF CTGFLPT(1) -> DATAVAL(CKLEN) ^= 'FF'X          1773
*                  THEN                                            1773
         L     @08,CTGFLPT(,CTGFLPTR)                              1773
         ALR   @08,CKLEN                                           1773
         BCTR  @08,0                                               1773
         CLI   DATAVAL(@08),X'FF'                                  1773
         BE    @RF01773                                            1773
*                    CKSWITCH = STOP;                              1774
*                                                                  1774
         MVI   CKSWITCH,X'0F'                                      1774
*                END;                                              1775
*                                                                  1775
@RF01773 AL    CKLEN,@CF00220                                      1775
@DE01772 SLR   @08,@08                                             1775
         IC    @08,LENTABLE-1(N)                                   1775
         CR    CKLEN,@08                                           1775
         BNH   @DL01772                                            1775
@DC01772 DS    0H                                                  1776
*                /****************************************************/
*                /*                                                  */
*                /* WE HAVE A VALID FIELD INITIALIZE THE MODEL TABLE */
*                /*                                                  */
*                /****************************************************/
*                                                                  1776
*                IF CKSWITCH = STOP                                1776
*                  THEN                                            1776
         CLI   CKSWITCH,X'0F'                                      1776
         BNE   @RF01776                                            1776
*                    DO;                                           1777
*                                                                  1777
*                    MDLFLDLN(N) = CTGFLNG(1);                     1778
         LR    @08,N                                               1778
         SLA   @08,3                                               1778
         L     @06,CTGFLNG(,CTGFLPTR)                              1778
         LR    @04,MDTBPT                                          1778
         AL    @04,@CF03031                                        1778
         ST    @06,MDLFLDLN-4(@08,@04)                             1778
*                    MDLFLDPT(N) = CTGFLPT(1);                     1779
*                                                                  1779
         L     @06,CTGFLPT(,CTGFLPTR)                              1779
         ST    @06,MDLFLDPT-8(@08,MDTBPT)                          1779
*                    END;                                          1780
*                                                                  1780
*                END;                                              1781
@RF01776 DS    0H                                                  1782
*            CTGFLPTR = CTGFLPTR + (LENGTH(CTGFL)+8);              1782
*                                                                  1782
@RF01769 AL    CTGFLPTR,@CF00311                                   1782
*            END;                                                  1783
*                                                                  1783
         AL    N,@CF00220                                          1783
         C     N,@CF00229                                          1783
         BNH   @DL01768                                            1783
*            END;                                                  1784
*                                                                  1784
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* MOVE ASSOCIATED NAMES OF CLUSTER, AIX AND        @Y30SSJH*/
*        /* USERCATLG TO SAVE AREA FOR FURTHER REFERENCE     @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*                                                                  1785
*        IF CTGFVTYP = 'C'    ×                                    1785
*           CTGFVTYP = 'U'    ×                            /*@Y30SSJH*/
*           CTGFVTYP = 'G'                                 /*@Y30SSJH*/
*          THEN                                                    1785
*                                                                  1785
@RF01747 L     @08,@PC00001+8                                      1785
         L     @08,CTGFVPTR(,@08)                                  1785
         CLI   CTGFVTYP(@08),C'C'                                  1785
         BE    @RT01785                                            1785
         CLI   CTGFVTYP(@08),C'U'                                  1785
         BE    @RT01785                                            1785
         CLI   CTGFVTYP(@08),C'G'                                  1785
         BNE   @RF01785                                            1785
@RT01785 DS    0H                                                  1786
*            IF MDLFLDPT(13) ^= NULLPTR                            1786
*              THEN                                                1786
         L     @08,MDLFLDPT+96(,MDTBPT)                            1786
         LTR   @08,@08                                             1786
         BZ    @RF01786                                            1786
*                DO;                                       /*@Y30SSJH*/
*                                                                  1787
*                N = MDLFLDLN(13) / 4;                     /*@Y30SSJH*/
         L     @00,MDLFLDLN+96(,MDTBPT)                            1788
         SRDA  @00,32                                              1788
         D     @00,@CF00043                                        1788
         LR    N,@01                                               1788
*                DO LOOP = 1 TO N;                         /*@Y30SSJH*/
*                                                                  1789
         LA    LOOP,1                                              1789
         B     @DE01789                                            1789
@DL01789 DS    0H                                                  1790
*                IF MDLASID(LOOP) = 'D'                            1790
*                  THEN                                            1790
         LR    @08,LOOP                                            1790
         SLA   @08,2                                               1790
         L     @06,@PC00001+8                                      1790
         L     @04,MDLTBLPT(,@06)                                  1790
         L     @04,MDLASNAM(,@04)                                  1790
         ST    @08,@TF00001                                        1790
         ALR   @08,@04                                             1790
         AL    @08,@CF03031                                        1790
         CLI   MDLASID(@08),C'D'                                   1790
         BNE   @RF01790                                            1790
*                    DO;                                   /*@Y30SSJH*/
*                                                                  1791
*                    DASCNMID = 'D';                       /*@Y30SSJH*/
         MVI   DASCNMID(@06),C'D'                                  1792
*                    DASCNAME = MDLASCI(LOOP);             /*@Y30SSJH*/
*                                                                  1793
         AL    @04,@TF00001                                        1793
         AL    @04,@CF03070                                        1793
         MVC   DASCNAME(3,@06),MDLASCI-1(@04)                      1793
*                    END;                                  /*@Y30SSJH*/
*                                                                  1794
*                  ELSE                                            1795
*                    IF MDLASID(LOOP) = 'I'                        1795
*                      THEN                                        1795
         B     @RC01790                                            1795
@RF01790 LR    @08,LOOP                                            1795
         SLA   @08,2                                               1795
         L     @06,@PC00001+8                                      1795
         L     @06,MDLTBLPT(,@06)                                  1795
         L     @06,MDLASNAM(,@06)                                  1795
         ALR   @06,@08                                             1795
         AL    @06,@CF03031                                        1795
         CLI   MDLASID(@06),C'I'                                   1795
         BNE   @RF01795                                            1795
*                        DO;                               /*@Y30SSJH*/
*                                                                  1796
*                        /********************************************/
*                        /*                                  @Y30SSJH*/
*                        /* THE DATA SET MODELED IS KSDS - BUT THE   */
*                        /* USER SPECIFIED ESDS OR RRDS VIA  @Y30SSJH*/
*                        /* THE MODE PARAMETER - TERMINATE   @Y30SSJH*/
*                        /* PROCESSING                       @Y30SSJH*/
*                        /*                                  @Y30SSJH*/
*                        /********************************************/
*                                                                  1797
*                        IF (ADDR(CNIDX)) ^= NULLPTR ×     /*@Y30SSJH*/
*                           (ADDR(CNUMD)) ^= NULLPTR       /*@Y30SSJH*/
*                          THEN                                    1797
         SLR   @08,@08                                             1797
         L     @06,@PC00001+4                                      1797
         C     @08,FDTPTR+96(,@06)                                 1797
         BNE   @RT01797                                            1797
         C     @08,FDTPTR+1056(,@06)                               1797
         BE    @RF01797                                            1797
@RT01797 DS    0H                                                  1798
*                            DO;                           /*@Y30SSJH*/
*                                                                  1798
*                            DEFSTID = MDLTYPER;           /*@Y30SSJH*/
         L     @06,@PC00001+8                                      1799
         MVC   DEFSTID(5,@06),@CB02341                             1799
*                            RETURN;                       /*@Y30SSJH*/
*                                                                  1800
         B     @EL00007                                            1800
*                            END;                          /*@Y30SSJH*/
*                                                                  1801
*                        /********************************************/
*                        /*                                  @Y30SSJH*/
*                        /* THE MODEL MATCHES THE MODE SPECIFICATION */
*                        /* USE THE MODEL                    @Y30SSJH*/
*                        /*                                  @Y30SSJH*/
*                        /********************************************/
*                                                                  1802
*                        IASCNMID = 'I';                   /*@Y30SSJH*/
@RF01797 L     @08,@PC00001+8                                      1802
         MVI   IASCNMID(@08),C'I'                                  1802
*                        IASCNAME = MDLASCI(LOOP);         /*@Y30SSJH*/
*                                                                  1803
         LR    @06,LOOP                                            1803
         SLA   @06,2                                               1803
         L     @04,MDLTBLPT(,@08)                                  1803
         L     @04,MDLASNAM(,@04)                                  1803
         ALR   @04,@06                                             1803
         AL    @04,@CF03070                                        1803
         MVC   IASCNAME(3,@08),MDLASCI-1(@04)                      1803
*                        END;                              /*@Y30SSJH*/
*                                                                  1804
*                END;                                      /*@Y30SSJH*/
@RF01795 DS    0H                                                  1805
@RC01790 AL    LOOP,@CF00220                                       1805
@DE01789 CR    LOOP,N                                              1805
         BNH   @DL01789                                            1805
*                END;                                      /*@Y30SSJH*/
*                                                                  1806
*              ELSE;                                       /*@Y30SSJH*/
*                                                                  1807
@RF01786 DS    0H                                                  1808
*                /****************************************************/
*                /*                                          @Y30SSJH*/
*                /* DONT CONSIDER ASSOCIATED NAMES FOR OBJECTS OTHER */
*                /* THAN CLUSTER, AIX OR USER CATALOG        @Y30SSJH*/
*                /*                                          @Y30SSJH*/
*                /****************************************************/
*                                                                  1808
*                ELSE                                              1808
*                  DO;                                     /*@Y30SSJH*/
*                                                                  1808
         B     @RC01785                                            1808
@RF01785 DS    0H                                                  1809
*                  MDLFLDLN(13) = 0;                       /*@Y30SSJH*/
         SLR   @08,@08                                             1809
         ST    @08,MDLFLDLN+96(,MDTBPT)                            1809
*                  MDLFLDPT(13) = 0;                       /*@Y30SSJH*/
*                                                                  1810
         ST    @08,MDLFLDPT+96(,MDTBPT)                            1810
*                  END;                                    /*@Y30SSJH*/
*                                                                  1811
*        /************************************************************/
*        /*                                                  @Y30SSJH*/
*        /* SAVE THE CATALOG ACB FOR FUTURE REFERENCE.       @Y30SSJH*/
*        /*                                                  @Y30SSJH*/
*        /************************************************************/
*        IF MDLACBPT = NULLPTR   &                                 1812
*           MDLFLDLN(2) ^= NULLPTR                                 1812
*          THEN                                                    1812
@RC01785 SLR   @08,@08                                             1812
         L     @06,@PC00007+32                                     1812
         C     @08,MDLACBPT(,@06)                                  1812
         BNE   @RF01812                                            1812
         C     @08,MDLFLDLN+8(,MDTBPT)                             1812
         BE    @RF01812                                            1812
*            MDLACBPT = ADDR(MDLFLDPT(2) -> MDLCACB);      /*@ZA15657*/
         L     @08,MDLFLDPT+8(,MDTBPT)                             1813
         ST    @08,MDLACBPT(,@06)                                  1813
*        /************************************************************/
*        /*                                                          */
*        /* PASSWALL IS INTERROGATED SEPARATELY TO DETERMINE 1 OF 3  */
*        /* CONDITIONS:                                              */
*        /*    1- NO PASSWALL INITIALIZATION                         */
*        /*    2- PASSWORD SUPPRESSION - TERMINAL ERROR              */
*        /*    3- PASSWALL OCCURRENCE                                */
*        /*                                                          */
*        /************************************************************/
*                                                                  1814
*        ARITHX = ((LENGTH(CTGFL) + 8) * 15);              /*@Y30SSJH*/
@RF01812 LA    ARITHX,360                                          1814
*        CTGFLPTR = LOCATPTR + (LENGTH(CTGPL) + 76) + ARITHX;      1815
*                                                                  1815
         LA    CTGFLPTR,104                                        1815
         AL    CTGFLPTR,LOCATPTR                                   1815
         ALR   CTGFLPTR,ARITHX                                     1815
*        /************************************************************/
*        /*                                                          */
*        /* DOES OCCURRENCE EXIST                                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  1816
*        IF CTGFLNG(1) ^= 0                                        1816
*          THEN                                                    1816
         SLR   @08,@08                                             1816
         L     @06,CTGFLNG(,CTGFLPTR)                              1816
         CR    @06,@08                                             1816
         BE    @RF01816                                            1816
*            DO;                                                   1817
*                                                                  1817
*            /********************************************************/
*            /*                                                      */
*            /*        HAVE PASSWORDS BEEN SUPPRESSED                */
*            /* SET PSWDWARN TO STOP TO CAUSE WARNING MESSAGE TO BE  */
*            /* ISSUED WHICH DESCRIBES THIS CONDITION                */
*            /*                                                      */
*            /********************************************************/
*                                                                  1818
*            IF CTGFLNG(1) = 1   &                                 1818
*               CTGFLPT(1) = 0                                     1818
*              THEN                                                1818
         C     @06,@CF00220                                        1818
         BNE   @RF01818                                            1818
         C     @08,CTGFLPT(,CTGFLPTR)                              1818
         BNE   @RF01818                                            1818
*                DO;                                               1819
*                                                                  1819
*                MDLFLDLN(16) = 0;                         /*@Y30SSJH*/
         ST    @08,MDLFLDLN+120(,MDTBPT)                           1820
*                MDLFLDPT(16) = NULLPTR;                   /*@Y30SSJH*/
         ST    @08,MDLFLDPT+120(,MDTBPT)                           1821
*                PSWDWARN = STOP;                                  1822
*                                                                  1822
         L     @08,@PC00001+8                                      1822
         MVI   PSWDWARN(@08),X'0F'                                 1822
*                END;                                              1823
*                                                                  1823
*              ELSE                                                1824
*                DO;                                               1824
*                                                                  1824
         B     @RC01818                                            1824
@RF01818 DS    0H                                                  1825
*                MDLFLDLN(16) = CTGFLNG(1);                /*@Y30SSJH*/
         L     @08,CTGFLNG(,CTGFLPTR)                              1825
         ST    @08,MDLFLDLN+120(,MDTBPT)                           1825
*                MDLFLDPT(16) = CTGFLPT(1);                /*@Y30SSJH*/
*                                                                  1826
         L     @08,CTGFLPT(,CTGFLPTR)                              1826
         ST    @08,MDLFLDPT+120(,MDTBPT)                           1826
*                END;                                              1827
*                                                                  1827
*            END;                                                  1828
*                                                                  1828
@RC01818 DS    0H                                                  1829
*        /************************************************************/
*        /*                                                          */
*        /* LOW AND HIGH KEY RANGE VALUES FOR A KEY RANGE DATA SET   */
*        /* ARE INTERROGATED SEPARATELY - DUE TO THE WAY VARIABLE    */
*        /* LENGTH FIELDS ARE RETURNED BY LOCATE. FIRST VERIFY THAT  */
*        /* THE LENGTH FIELD IN THE RESPECTIVE LOW AND HIGH KEY FPL  */
*        /* ARE NON ZERO.                                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1829
*        IF CTGFIELD(8) -> CTGFLNG(1) ^= 0 &                       1829
*           CTGFIELD(9) -> CTGFLNG(1) ^= 0                         1829
*          THEN                                                    1829
*                                                                  1829
@RF01816 SLR   @08,@08                                             1829
         L     @06,LOCATPTR                                        1829
         L     @04,CTGFIELD+28(,@06)                               1829
         L     @15,CTGFLNG(,@04)                                   1829
         CR    @15,@08                                             1829
         BE    @RF01829                                            1829
         L     @06,CTGFIELD+32(,@06)                               1829
         L     @14,CTGFLNG(,@06)                                   1829
         CR    @14,@08                                             1829
         BE    @RF01829                                            1829
*            /********************************************************/
*            /*                                                      */
*            /* NOW MAKE SURE THAT THE DATA REFERENCED BY THE FPL IS */
*            /* NON-ZERO. THIS IS DONE BY CHECKING THE FIRST TWO     */
*            /* BYTES REFERENCED BY CTGFLPT.                         */
*            /*                                                      */
*            /********************************************************/
*                                                                  1830
*            IF CTGFIELD(8) -> CTGFLPT(1) -> KEYFLDLN ^= 0 &       1830
*               CTGFIELD(9) -> CTGFLPT(1) -> KEYFLDLN ^= 0         1830
*              THEN                                                1830
*                                                                  1830
         L     @04,CTGFLPT(,@04)                                   1830
         CH    @08,KEYFLDLN(,@04)                                  1830
         BE    @RF01830                                            1830
         L     @06,CTGFLPT(,@06)                                   1830
         CH    @08,KEYFLDLN(,@06)                                  1830
         BE    @RF01830                                            1830
*                /****************************************************/
*                /*                                                  */
*                /* WE HAVE A KEY RANGE DATA SET BUILD THE MODEL     */
*                /* TABLE ENTRIES                                    */
*                /*                                                  */
*                /****************************************************/
*                DO;                                               1831
*                                                                  1831
*                MDLFLDLN(8) = CTGFIELD(8) -> CTGFLNG(1);          1832
         ST    @15,MDLFLDLN+56(,MDTBPT)                            1832
*                MDLFLDPT(8) = CTGFIELD(8) -> CTGFLPT(1);          1833
*                                                                  1833
         ST    @04,MDLFLDPT+56(,MDTBPT)                            1833
*                MDLFLDLN(9) = CTGFIELD(9) -> CTGFLNG(1);          1834
         ST    @14,MDLFLDLN+64(,MDTBPT)                            1834
*                MDLFLDPT(9) = CTGFIELD(9) -> CTGFLPT(1);          1835
*                                                                  1835
         ST    @06,MDLFLDPT+64(,MDTBPT)                            1835
*                END;                                              1836
*                                                                  1836
*        /************************************************************/
*        /*                                                  @YL026UG*/
*        /* ADJUST THE MODEL TABLE IS A PAGESPACE IS BEING   @YL026UG*/
*        /* MODELED TO PREVENT ATTRIBUTES CARRIED IN CATALOG @YL026UG*/
*        /* BUT NONDEFINEABLE FROM BEING SET IN DEFINE REQUEST       */
*        /*                                                  @YL026UG*/
*        /************************************************************/
*        IF PGSPFLAG = GO                                          1837
*          THEN                                                    1837
@RF01830 DS    0H                                                  1837
@RF01829 L     @08,@PC00001+8                                      1837
         CLI   PGSPFLAG(@08),X'00'                                 1837
         BNE   @RF01837                                            1837
*            DO;                                           /*@YL026UG*/
*                                                                  1838
*            MDLFLDPT(11) = NULLPTR;                       /*@YL026UG*/
         SLR   @08,@08                                             1839
         ST    @08,MDLFLDPT+80(,MDTBPT)                            1839
*            MDLFLDPT(12) = NULLPTR;                       /*@YL026UG*/
*                                                                  1840
         ST    @08,MDLFLDPT+88(,MDTBPT)                            1840
*            END;                                          /*@YL026UG*/
*                                                                  1841
*        /************************************************************/
*        /*                                                          */
*        /* MODELING IS COMPLETE - RETURN TO INVOKER                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  1842
*        RFY CTGPL BASED(CTGPLPTR);    /* RESET CTGPL BASE FOR DEFINE*/
@RF01837 DS    0H                                                  1843
*        IF GDTDBG = NULLPTR                                       1843
*          THEN;                                                   1843
         L     @06,@PC00001                                        1843
         L     @06,GDTDBG(,@06)                                    1843
         LTR   @06,@06                                             1843
         BZ    @RT01843                                            1843
*          ELSE                                                    1845
*            CALL IDCDB010(GDTTBL,'DE04');                         1845
         L     @06,@PC00001                                        1845
         ST    @06,@AL00001                                        1845
         LA    @04,@CC03003                                        1845
         ST    @04,@AL00001+4                                      1845
         MVI   @AL00001+4,X'80'                                    1845
         L     @15,GDTDBG(,@06)                                    1845
         LA    @01,@AL00001                                        1845
         BALR  @14,@15                                             1845
*        RETURN;                                                   1846
*                                                                  1846
         B     @EL00007                                            1846
*END MODELPRC;                                                     1847
         B     @EL00007                                            1847
*/********************************************************************/
*/*                                                          @Y30SSJH*/
*/* PROCEDURE NAME - FREESTG                                 @Y30SSJH*/
*/*                                                          @Y30SSJH*/
*/* FUNCTION - FREESTG HAS A SINGLE PURPOSE,TO FREE AUTOMATIC        */
*/*            STORAGE GOTTEN BY IDCDE02. IT DOES THIS BY    @Y30SSJH*/
*/*            INVOKING THE SYSTEM ADAPTER VIA THE UEPILOG   @Y30SSJH*/
*/*            MACRO. UPON COMPLETION, THE SYSTEM ADAPTER    @Y30SSJH*/
*/*            RETURNS CONTROL TO IDCDE02'S CALLER,IDCDE01.  @Y30SSJH*/
*/*                                                          @Y30SSJH*/
*/* INPUT - NONE                                             @Y30SSJH*/
*/*                                                          @Y30SSJH*/
*/* OUTPUT -                                                 @Y30SSJH*/
*/*          RESULTS IN IDCDE02'S AUTOMATIC STORAGE BEING    @Y30SSJH*/
*/*          RELEASED.                                       @Y30SSJH*/
*/*                                                          @Y30SSJH*/
*/********************************************************************/
*FREESTG:                                                          1848
*        PROCEDURE        OPTIONS(SAVEAREA);               /*@Y30SSJH*/
*                                                                  1848
FREESTG  STM   @14,@12,12(@13)                                     1848
         ST    @13,@SA00008+4                                      1848
         LA    @14,@SA00008                                        1848
         ST    @14,8(,@13)                                         1848
         LR    @13,@14                                             1848
*        GEN (ENTRY FREESTG);                              /*@Y30SSJH*/
         ENTRY FREESTG
*        LM(REG10,REG12,BASESAVE);                         /*@Y30SSJH*/
*                                                                  1850
         LM    REG10,REG12,BASESAVE                                1850
*        IF GDTDBG = NULLPTR                                       1851
*          THEN;                                                   1851
         L     @06,@PC00001                                        1851
         L     @06,GDTDBG(,@06)                                    1851
         LTR   @06,@06                                             1851
         BZ    @RT01851                                            1851
*          ELSE                                                    1853
*            CALL IDCDB010(GDTTBL,'DE37');                         1853
         L     @06,@PC00001                                        1853
         ST    @06,@AL00001                                        1853
         LA    @04,@CC03008                                        1853
         ST    @04,@AL00001+4                                      1853
         MVI   @AL00001+4,X'80'                                    1853
         L     @15,GDTDBG(,@06)                                    1853
         LA    @01,@AL00001                                        1853
         BALR  @14,@15                                             1853
*                                                          /*@Y30SSJH*/
*                                                                  1854
*        RFY (REG7,REG13) RESTRICTED;                      /*@Y30SSJH*/
@RT01851 DS    0H                                                  1855
*        REG13 = REG7;                                             1855
         LR    REG13,REG7                                          1855
*        RFY (REG7,REG13) UNRESTRICTED;                    /*@Y30SSJH*/
*                                                                  1856
*        CALL IDCSAEP0(GDTTBL,MODID);                              1857
         L     @06,@PC00001                                        1857
         ST    @06,@AL00001                                        1857
         LA    @04,MODID                                           1857
         ST    @04,@AL00001+4                                      1857
         MVI   @AL00001+4,X'80'                                    1857
         L     @15,GDTEPL(,@06)                                    1857
         LA    @01,@AL00001                                        1857
         BALR  @14,@15                                             1857
*         /*@Y30SSJH*/                                             1858
*                                                                  1858
*END FREESTG;                                              /*@Y30SSJH*/
*                                                                  1858
@EL00008 L     @13,4(,@13)                                         1858
@EF00008 DS    0H                                                  1858
@ER00008 LM    @14,@12,12(@13)                                     1858
         BR    @14                                                 1858
*END IDCDE02                                               /*@Y30SSJH*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (IDCCSDE )                                        *
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                        *
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                        *
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                        *
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                        *
*;                                                                 1859
@DATA    DS    0H
@CH00287 DC    H'5'
@CH00038 DC    H'10'
@CH00036 DC    H'12'
@CH01127 DC    H'64'
@SM03038 MVC   LOHIKEY(0,@06),RGKEY(RGFDTPTR)
@SM03040 MVC   LOHIKEY(0,@09),FPLLOKEY(RNGFPLLO)
@SM03042 MVC   LOHIKEY(0,@15),FPLHIKEY(RNGFPLHI)
@SM03044 MVC   LKYCHECK(0),LOKEY(LKYCKPTR)
@SM03046 MVC   HKYCHECK(0),HIKEY(HKYCKPTR)
@SM03048 MVC   LKYCMPR(0),LKYCOMP(LKYCMPTR)
@SM03050 MVC   HKYCMPR(0),HKYCOMP(HKYCMPTR)
@SC03052 CLC   HKYCHECK(0),LOKEY(LKYCKPTR)
@SM03054 MVC   PWDOVLAY-8(0,@01),CHARVAL(FDTTBLPT)
@SM03057 MVC   PASSPRMT(0,@02),CHARVAL(FDTTBLPT)
@SM03059 MVC   SVRMDUL(0,@02),CHARVAL(FDTTBLPT)
@SM03061 MVC   AUTHREC(0,@06),CHARVAL(FDTTBLPT)
@SM03063 MVC   AUTHREC(0,@06),MDLARECD(@02)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    18F
@PC00002 DS    10F
@SA00003 DS    18F
@PC00003 DS    38F
@SA00004 DS    18F
@PC00004 DS    12F
@SA00005 DS    18F
@PC00005 DS    5F
@SA00006 DS    18F
@PC00006 DS    18F
@SA00007 DS    18F
@PC00007 DS    10F
@SA00008 DS    18F
@AL00001 DS    5A
@TF00001 DS    F
@AFTEMPS DS    5F
IDCDE02  CSECT
         DS    0F
@CF00220 DC    F'1'
@CF00154 DC    F'2'
@CH00154 EQU   @CF00154+2
@CF00163 DC    F'3'
@CF00043 DC    F'4'
@CF00157 DC    F'6'
@CH00157 EQU   @CF00157+2
@CF00035 DC    F'7'
@CF00180 DC    F'8'
@CF00229 DC    F'15'
@CF00646 DC    F'17'
@CF00311 DC    F'24'
@CF00950 DC    F'40'
@CF01033 DC    F'50'
@CF01041 DC    F'52'
@CF01344 DC    F'96'
@CF01586 DC    F'144'
@CF01598 DC    F'248'
@CF00872 DC    F'255'
@CF02370 DC    F'512'
@CF02367 DC    F'1830'
@CF03034 DC    F'-12'
@CF03056 DC    F'-8'
@CF03035 DC    F'-7'
@CF03033 DC    F'-6'
@CF03032 DC    F'-5'
@CF03031 DC    F'-4'
@CF03070 DC    F'-3'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
FPLSTPTR DS    A
NFPLPTR  DS    A
GPOOLPT  DS    A
GPOOLEN  DS    F
KEYFPLPT DS    A
RGLSTPT  DS    A
PROTPTR  DS    A
MDLWKAPT DS    A
MWKALEN  DS    F
LOCATPTR DS    A
AMDLTABL DS    F
LISTPTR  DS    A
TEMPPTR  DS    A
I        DS    H
J        DS    H
K        DS    H
SETRC    DS    H
LISTLN   DS    FL1
         DS    0D
@TS00001 DS    CL95
         DS    CL1
BASESAVE DS    CL12
QUALVARS DS    CL16
         ORG   QUALVARS
QDSNLEN  DS    FL2
         DS    CL2
QDSNPTR  DS    AL4
QCATPTR  DS    AL4
QCATPSWD DS    AL4
         ORG   QUALVARS+16
CREATEDT DS    CL8
         ORG   CREATEDT
@NM00079 DS    CL1
XUTYEAR  DS    FL1
XUTDAY   DS    FL2
         ORG   CREATEDT+8
TIMEODAY DS    CL8
CNVTYEAR DS    BL2
         ORG   CNVTYEAR
CVTYEAR  DS    BL1
CVTPACK  DS    BL1
         ORG   CNVTYEAR+2
         DS    CL2
DAYTOTAL DS    CL8
         ORG   DAYTOTAL
@NM00080 DS    CL6
DAYTOTL  DS    FL2
         ORG   DAYTOTAL+8
DATELOOP DS    CL1
VOLEXFLG DS    CL1
RANGFLAG DS    CL1
CKRANGE  DS    CL1
LKYCHECK DS    CL64
HKYCHECK DS    CL64
LKYCMPR  DS    CL64
HKYCMPR  DS    CL64
CKSWITCH DS    CL1
MDLFLG   DS    CL1
         DS    CL2
PWDPTRS  DS    4A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCDE02  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
NAMEMASK DC    H'2'
@CC02513 DC    C'DE30'
@CC02582 DC    C'DE31'
@CC02727 DC    C'DE32'
@CC02811 DC    C'DE33'
@CC02836 DC    C'DE35'
@CC02922 DC    C'DE34'
@CC02997 DC    C'DE36'
@CC03001 DC    C'DE03'
@CC03003 DC    C'DE04'
@CC03008 DC    C'DE37'
@CB02355 DC    X'FFFFFFFFFFFFFFFF'
@CB02317 DC    X'E4E5F00C04'
@CB02320 DC    X'C4C5F00C01'
@CB02323 DC    X'C4C5F00C02'
@CB02326 DC    X'E4E5F00C03'
@CB02329 DC    X'C4C5F00C0F'
@CB02332 DC    X'C4C5F00C19'
@CB02335 DC    X'C4C5F00C10'
@CB02338 DC    X'C4C5F00C12'
@CB02341 DC    X'C4C5F00C04'
@CB02344 DC    X'E4E5F00C07'
@CB02347 DC    X'E4E5F00001'
@CB02350 DC    X'C4C5F00C18'
@CB02587 DC    X'99999F'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
FIXAREA  DS    CL256
         ORG   FIXAREA
@NM00054 DS    CL256
         ORG   @NM00054
@NM00055 DC    256X'00'
         ORG   FIXAREA+256
DEGPID   DC    CL4'DE00'
MODID    DC    CL4'DE02'
DSETCRDT DC    CL8'DSETCRDT'
DSETEXDT DC    CL8'DSETEXDT'
EXCPEXIT DC    CL8'EXCPEXIT'
AMDSBNAM DC    CL8'AMDSBCAT'
MDLID    DC    CL4'DE02'
VOLSMASK DC    X'80'
ALCFLDNM DC    CL8'DSATTR'
         DC    CL8'LRECL'
         DC    CL8'BUFSIZE'
         DC    CL8'SPACPARM'
         DC    CL8'DEVTYP'
         DC    CL8'FILESEQ'
PROTFLNM DC    CL8'PASSWALL'
         DC    CL8'RGATTR'
         DC    CL8'OWNERID'
LENTABLE DC    AL1(1)
         DC    AL1(4)
         DC    AL1(3)
         DC    AL1(8)
         DC    AL1(2)
         DC    AL1(96)
         DC    AL1(6)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL1(7)
         DC    AL1(4)
         DC    AL1(4)
         DC    AL1(4)
         DC    AL1(8)
         DC    AL1(1)
MDLNMTAB DC    CL8'ENTYPE'
         DC    CL8'CATACB'
         DC    CL8'DSETEXDT'
         DC    CL8'OWNERID'
         DC    CL8'DSATTR'
         DC    CL8'AMDSBCAT'
         DC    CL8'VOLSER'
         DC    CL8'LOKEYV'
         DC    CL8'HIKEYV'
         DC    CL8'SPACPARM'
         DC    CL8'LRECL'
         DC    CL8'BUFSIZE'
         DC    CL8'NAMEDS'
         DC    CL8'EXCPEXIT'
         DC    CL8'RGATTR'
         DC    CL8'PASSWALL'
         DC    CL8'CATTR'
         DC    CL8'ITYPEXT'
         DC    CL8'CNTREPNO'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TSTFPLDS EQU   @04
TSTFPLVS EQU   @02
MDTBPT   EQU   @09
MDLOOPCT EQU   @03
LOOP     EQU   @03
CKLEN    EQU   @04
PSWDFLAG EQU   @04
KYMSKPTR EQU   @04
HKYCMPTR EQU   @02
LKYCMPTR EQU   @04
HKYCKPTR EQU   @03
LKYCKPTR EQU   @02
RANGELEN EQU   @03
MAXRGADR EQU   @08
RNGFPLHI EQU   @02
RNGFPLLO EQU   @03
RANGLOOP EQU   @04
RGFDTPTR EQU   @03
VOLSTCNT EQU   @09
DAYPERYR EQU   @04
NOWYEAR  EQU   @03
ARITHX   EQU   @08
N        EQU   @02
FDTTBLPT EQU   @04
CTGFLPTR EQU   @03
TESTRC   EQU   @08
RTNREG   EQU   @15
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG10    EQU   @10
REG12    EQU   @12
REG13    EQU   @13
REG0     EQU   @00
REG1     EQU   @01
REG11    EQU   @11
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSAGP0 EQU   0
IDCSATI0 EQU   0
IDCSACA0 EQU   0
IDCSAID0 EQU   0
IDCSAQL0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNIOC   EQU   OPNAGL+4
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGFLGS EQU   DARGLIST+19
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
CAT      EQU   0
CATLG    EQU   0
CATLGPLN EQU   CATLG
CATLGPAS EQU   CATLG+1
CATLGFLG EQU   CATLG+10
CATLGVAL EQU   CATLG+21
CATDN    EQU   0
MCAT     EQU   0
UCAT     EQU   0
CLST     EQU   0
PGSP     EQU   0
INDEX    EQU   0
AIX      EQU   0
PATH     EQU   0
METRY    EQU   0
METRYFLG EQU   METRY+10
UETRY    EQU   0
UETRYFLG EQU   UETRY+10
CETRY    EQU   0
CETRYFLG EQU   CETRY+10
PETRY    EQU   0
PETRYFLG EQU   PETRY+10
AETRY    EQU   0
AETRYFLG EQU   AETRY+10
GETRY    EQU   0
GETRYFLG EQU   GETRY+10
RETRY    EQU   0
RETRYFLG EQU   RETRY+10
XETRY    EQU   0
XETRYFLG EQU   XETRY+10
BETRY    EQU   0
BETRYFLG EQU   BETRY+10
DETRY    EQU   0
DETRYFLG EQU   DETRY+10
IETRY    EQU   0
IETRYFLG EQU   IETRY+10
CINDX    EQU   0
CNIDX    EQU   0
CMODL    EQU   0
CENAM    EQU   0
CENAMFLG EQU   CENAM+10
UENAM    EQU   0
UENAMFLG EQU   UENAM+10
GENAM    EQU   0
GENAMFLG EQU   GENAM+10
RENAM    EQU   0
RENAMFLG EQU   RENAM+10
PENAM    EQU   0
PENAMFLG EQU   PENAM+10
CMDCT    EQU   0
CMDCTFLG EQU   CMDCT+10
UMDCT    EQU   0
UMDCTFLG EQU   UMDCT+10
GMDCT    EQU   0
GMDCTFLG EQU   GMDCT+10
RMDCT    EQU   0
RMDCTFLG EQU   RMDCT+10
PMDCT    EQU   0
PMDCTFLG EQU   PMDCT+10
CMDNM    EQU   0
UMDNM    EQU   0
GMDNM    EQU   0
RMDNM    EQU   0
PMDNM    EQU   0
DENAM    EQU   0
DENAMFLG EQU   DENAM+10
DMDCT    EQU   0
DMDCTFLG EQU   DMDCT+10
DMDNM    EQU   0
IENAM    EQU   0
IENAMFLG EQU   IENAM+10
IMDCT    EQU   0
IMDCTFLG EQU   IMDCT+10
IMDNM    EQU   0
MMSTR    EQU   0
UMSTR    EQU   0
CMSTR    EQU   0
PMSTR    EQU   0
GMSTR    EQU   0
RMSTR    EQU   0
DMSTR    EQU   0
IMSTR    EQU   0
MCINT    EQU   0
CCINT    EQU   0
UCINT    EQU   0
PCINT    EQU   0
GCINT    EQU   0
RCINT    EQU   0
DCINT    EQU   0
ICINT    EQU   0
MUPDT    EQU   0
CUPDT    EQU   0
UUPDT    EQU   0
PUPDT    EQU   0
GUPDT    EQU   0
RUPDT    EQU   0
DUPDT    EQU   0
IUPDT    EQU   0
MREAD    EQU   0
CREAD    EQU   0
UREAD    EQU   0
PREAD    EQU   0
GREAD    EQU   0
RREAD    EQU   0
DREAD    EQU   0
IREAD    EQU   0
MCODE    EQU   0
CCODE    EQU   0
UCODE    EQU   0
PCODE    EQU   0
GCODE    EQU   0
RCODE    EQU   0
DCODE    EQU   0
ICODE    EQU   0
MATTP    EQU   0
CATTP    EQU   0
UATTP    EQU   0
PATTP    EQU   0
GATTP    EQU   0
RATTP    EQU   0
DATTP    EQU   0
IATTP    EQU   0
MEPNM    EQU   0
UEPNM    EQU   0
CEPNM    EQU   0
PEPNM    EQU   0
GEPNM    EQU   0
REPNM    EQU   0
MSTRG    EQU   0
USTRG    EQU   0
CSTRG    EQU   0
PSTRG    EQU   0
GSTRG    EQU   0
RSTRG    EQU   0
DEPNM    EQU   0
DSTRG    EQU   0
IEPNM    EQU   0
ISTRG    EQU   0
MTO      EQU   0
CTO      EQU   0
UTO      EQU   0
ATO      EQU   0
BTO      EQU   0
PTO      EQU   0
GTO      EQU   0
RTO      EQU   0
MFOR     EQU   0
CFOR     EQU   0
UFOR     EQU   0
AFOR     EQU   0
BFOR     EQU   0
PFOR     EQU   0
GFOR     EQU   0
RFOR     EQU   0
MOWNR    EQU   0
COWNR    EQU   0
UOWNR    EQU   0
AOWNR    EQU   0
BOWNR    EQU   0
POWNR    EQU   0
GOWNR    EQU   0
ROWNR    EQU   0
DOWNR    EQU   0
IOWNR    EQU   0
CSHR1    EQU   0
GSHR1    EQU   0
CSHR2    EQU   0
GSHR2    EQU   0
DSHR1    EQU   0
DSHR2    EQU   0
ISHR1    EQU   0
ISHR2    EQU   0
CKYLN    EQU   0
CKYPS    EQU   0
GKYLN    EQU   0
GKYPS    EQU   0
DKYLN    EQU   0
DKYPS    EQU   0
MINDD    EQU   0
CINDD    EQU   0
UINDD    EQU   0
PINDD    EQU   0
SINDD    EQU   0
AINDD    EQU   0
GINDD    EQU   0
RINDD    EQU   0
DINDD    EQU   0
IINDD    EQU   0
MVSER    EQU   0
@NM00032 EQU   MVSER+2
UVSER    EQU   0
@NM00033 EQU   UVSER+2
PVSER    EQU   0
@NM00034 EQU   PVSER+2
CVSER    EQU   0
@NM00035 EQU   CVSER+2
SVSER    EQU   0
@NM00036 EQU   SVSER+2
AVSER    EQU   0
@NM00037 EQU   AVSER+2
GVSER    EQU   0
@NM00038 EQU   GVSER+2
DVSER    EQU   0
@NM00039 EQU   DVSER+2
IVSER    EQU   0
@NM00040 EQU   IVSER+2
CRGLO    EQU   0
CRGHI    EQU   0
GRGLO    EQU   0
GRGHI    EQU   0
DRGLO    EQU   0
DRGHI    EQU   0
ADEVT    EQU   0
@NM00041 EQU   ADEVT+2
AFSNO    EQU   0
AFSNOCNT EQU   AFSNO
AFSNOVAL EQU   AFSNO+4
MTKPR    EQU   0
CTKPR    EQU   0
STKPR    EQU   0
UTKPR    EQU   0
PTKPR    EQU   0
MCLPR    EQU   0
CCLPR    EQU   0
UCLPR    EQU   0
PCLPR    EQU   0
SCLPR    EQU   0
MRCPR    EQU   0
CRCPR    EQU   0
SRCPR    EQU   0
URCPR    EQU   0
PRCPR    EQU   0
GTKPR    EQU   0
GCLPR    EQU   0
GRCPR    EQU   0
DTKPR    EQU   0
DCLPR    EQU   0
DRCPR    EQU   0
ITKPR    EQU   0
ICLPR    EQU   0
IRCPR    EQU   0
MTKSC    EQU   0
CTKSC    EQU   0
STKSC    EQU   0
UTKSC    EQU   0
PTKSC    EQU   0
MCLSC    EQU   0
CCLSC    EQU   0
UCLSC    EQU   0
PCLSC    EQU   0
SCLSC    EQU   0
MRCSC    EQU   0
CRCSC    EQU   0
SRCSC    EQU   0
URCSC    EQU   0
PRCSC    EQU   0
GTKSC    EQU   0
GCLSC    EQU   0
GRCSC    EQU   0
DTKSC    EQU   0
DCLSC    EQU   0
DRCSC    EQU   0
ITKSC    EQU   0
ICLSC    EQU   0
IRCSC    EQU   0
CARSZ    EQU   0
SARSZ    EQU   0
GARSZ    EQU   0
CMRSZ    EQU   0
SMRSZ    EQU   0
GMRSZ    EQU   0
DARSZ    EQU   0
DMRSZ    EQU   0
CCIFS    EQU   0
GCIFS    EQU   0
CCAFS    EQU   0
GCAFS    EQU   0
DCIFS    EQU   0
DCAFS    EQU   0
MBFSZ    EQU   0
CBFSZ    EQU   0
UBFSZ    EQU   0
GBFSZ    EQU   0
DBFSZ    EQU   0
CCINV    EQU   0
GCINV    EQU   0
DCINV    EQU   0
ICINV    EQU   0
ALREL    EQU   0
ALRELFLG EQU   ALREL+10
GENLM    EQU   0
PSWAP    EQU   0
PNSWP    EQU   0
GREL     EQU   0
GRELFLG  EQU   GREL+10
CEEXT    EQU   0
GEEXT    EQU   0
DEEXT    EQU   0
IEEXT    EQU   0
CNUMD    EQU   0
RPENT    EQU   0
RPENTFLG EQU   RPENT+10
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGNAME  EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGOPTN3 EQU   CTGPL+2
CTGFUNC  EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGAM0   EQU   CTGOPTN3
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGPSWD  EQU   CTGJSCB
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDCD EQU   CTGFL+1
CTGFLDRE EQU   CTGFL+3
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDDST   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDSPAN  EQU   AMDATTR
AMDLEN   EQU   IDAAMDSB+2
AMDNEST  EQU   IDAAMDSB+4
AMDAXRKP EQU   AMDNEST
AMDRKP   EQU   IDAAMDSB+6
AMDKEYLN EQU   IDAAMDSB+8
AMDPCTCA EQU   IDAAMDSB+10
AMDPCTCI EQU   IDAAMDSB+11
AMDCINV  EQU   IDAAMDSB+20
AMDLRECL EQU   IDAAMDSB+24
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDUNQ   EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDSTAT  EQU   IDAAMDSB+48
CTGFV    EQU   0
CTGFVTYP EQU   CTGFV
CTGFVPRO EQU   CTGFV+1
CTGFVIND EQU   CTGFV+16
CTGFVENT EQU   CTGFV+20
CTGFVSTY EQU   CTGFV+24
CTGFVOWN EQU   CTGFV+28
CTGFVEXP EQU   CTGFV+32
CTGFVCRE EQU   CTGFV+36
CTGFVVLT EQU   CTGFV+40
CTGFVRNG EQU   CTGFV+44
CTGFVDVT EQU   CTGFV+48
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVFSN EQU   CTGFVAMD
CTGFVATR EQU   CTGFV+60
CTGFVBUF EQU   CTGFV+64
CTGFVLRS EQU   CTGFV+68
CTGFVLMT EQU   CTGFV+72
CTGFVEXT EQU   CTGFVLMT
CTGFVGAT EQU   CTGFV+76
CTGFVUPG EQU   CTGFVGAT
CTGFVNAM EQU   CTGFV+80
CTGFVPWD EQU   CTGFV+84
CTGFVWKA EQU   CTGFV+88
@NM00056 EQU   0
CHARLEN  EQU   @NM00056
CHARVAL  EQU   @NM00056+1
NUMBVAL  EQU   0
@NM00057 EQU   0
LISTCNT  EQU   @NM00057
@NM00058 EQU   @NM00057+2
LISTVAL  EQU   @NM00058+1
@NM00059 EQU   0
LISTCNT1 EQU   @NM00059
@NM00060 EQU   @NM00059+2
LISTVAL1 EQU   @NM00060+1
@NM00061 EQU   0
NAMPLN   EQU   @NM00061
NAMPAS   EQU   @NM00061+1
NAMFLG   EQU   @NM00061+10
NAMFUQ   EQU   NAMFLG
NAMLEN   EQU   @NM00061+20
NAMVAL   EQU   @NM00061+21
VOLIST   EQU   0
VLISTLEN EQU   VOLIST
@NM00062 EQU   VOLIST+2
VLISTCDE EQU   @NM00062
VLISTSER EQU   @NM00062+2
MDLTABL  EQU   0
MDLOTYPE EQU   MDLTABL
MDLACBXP EQU   MDLTABL+16
MDLEXDT  EQU   MDLTABL+24
MDLOWNID EQU   MDLTABL+32
MDLDSATR EQU   MDLTABL+40
MDLAMDSB EQU   MDLTABL+48
MDLVLLEN EQU   MDLTABL+52
MDLVLIST EQU   MDLTABL+56
MDLLKLEN EQU   MDLTABL+60
MDLLOKEY EQU   MDLTABL+64
MDLHKLEN EQU   MDLTABL+68
MDLHIKEY EQU   MDLTABL+72
MDLSPARM EQU   MDLTABL+80
MDLLRECL EQU   MDLTABL+88
MDLBFSZ  EQU   MDLTABL+96
MDLASNAM EQU   MDLTABL+104
MDLEEXIT EQU   MDLTABL+112
MDLRGATR EQU   MDLTABL+120
MDLPWALL EQU   MDLTABL+128
DECPLFPL EQU   0
DEWKAREA EQU   DECPLFPL+484
DEWKA    EQU   DEWKAREA+4
@NM00070 EQU   DEWKA
RECVSWKA EQU   DECPLFPL+744
RECVSLEN EQU   RECVSWKA
MDLPSWLL EQU   0
MDLPSWD  EQU   MDLPSWLL
MDLPWPMT EQU   MDLPSWLL+32
MDLPWATP EQU   MDLPSWLL+40
MDLUSVRN EQU   MDLPSWLL+42
MDLUARLN EQU   MDLPSWLL+50
MDLARECD EQU   MDLPSWLL+52
MDLEXPDT EQU   0
MDLDATTR EQU   0
MDLRATTR EQU   0
MDLCACB  EQU   0
MDLVOLUM EQU   0
@NM00072 EQU   0
@NM00073 EQU   0
MDLSPACE EQU   0
MDLASSOC EQU   0
MDLASID  EQU   MDLASSOC
MDLASCI  EQU   MDLASSOC+1
FPLAREA  EQU   0
FPLEEXT  EQU   FPLAREA
FPLCRDT  EQU   FPLAREA+24
FPLEXPDT EQU   FPLAREA+48
EXPIREDT EQU   FPLAREA+72
EXPIRE   EQU   EXPIREDT+5
EXPIRYR  EQU   EXPIRE
EXPIRDAY EQU   EXPIRE+1
GENDATTR EQU   FPLAREA+80
GENDEPTY EQU   GENDATTR
GENDSCR  EQU   GENDATTR
GENDLIMT EQU   FPLAREA+81
ALRELNM  EQU   FPLAREA+88
AFPLAREA EQU   0
ADSATRFL EQU   AFPLAREA
ALRECLFL EQU   AFPLAREA+24
ABFSZFL  EQU   AFPLAREA+48
ASPACFL  EQU   AFPLAREA+72
ADEVTFL  EQU   AFPLAREA+96
AFSEQFL  EQU   AFPLAREA+120
DSETATTR EQU   AFPLAREA+144
@NM00087 EQU   DSETATTR
AASPEED  EQU   @NM00087
AAUNIQ   EQU   @NM00087
AARVBL   EQU   @NM00087
AATKOVFL EQU   @NM00087
@NM00089 EQU   DSETATTR+1
SHRDEFLT EQU   @NM00089
SPACPFLD EQU   AFPLAREA+146
PRIMESPC EQU   SPACPFLD
SCONDSPC EQU   SPACPFLD+3
ASPACOPT EQU   SPACPFLD+6
FSNFIELD EQU   0
FSNARRAY EQU   FSNFIELD
FSNUMBER EQU   FSNARRAY
DEVICLST EQU   0
FPLAMDSB EQU   0
KFPLAREA EQU   FPLAMDSB
AMDAREA  EQU   FPLAMDSB+24
RANGEFDT EQU   0
RGKEYLN  EQU   RANGEFDT
RGKEY    EQU   RANGEFDT+1
RANGLIST EQU   0
RGLISTLN EQU   RANGLIST
RANGARRY EQU   RANGLIST+2
LOHIPAIR EQU   0
LOHIKYLN EQU   LOHIPAIR
LOHIKEY  EQU   LOHIPAIR+2
RGKYFPL  EQU   0
FPLLKYLN EQU   RGKYFPL
FPLLOKEY EQU   RGKYFPL+2
RGHKYFPL EQU   0
FPLHKYLN EQU   RGHKYFPL
FPLHIKEY EQU   RGHKYFPL+2
KEYMASK  EQU   0
@NM00092 EQU   0
LKYLEN   EQU   @NM00092
LOKEY    EQU   @NM00092+2
@NM00093 EQU   0
HIKYLEN  EQU   @NM00093
HIKEY    EQU   @NM00093+2
@NM00094 EQU   0
LKYCMPLN EQU   @NM00094
LKYCOMP  EQU   @NM00094+2
@NM00095 EQU   0
HKYCMPLN EQU   @NM00095
HKYCOMP  EQU   @NM00095+2
PROTAREA EQU   0
PASSWFPL EQU   PROTAREA
RGATRFPL EQU   PROTAREA+24
OWNIDFPL EQU   PROTAREA+48
SPRMAREA EQU   PROTAREA+72
PWDOVLAY EQU   SPRMAREA
PASSPRMT EQU   SPRMAREA+32
PASSATMP EQU   SPRMAREA+40
SVRMDUL  EQU   SPRMAREA+42
ARECLEN  EQU   SPRMAREA+50
AUTHREC  EQU   PROTAREA+124
RGATTR   EQU   PROTAREA+379
UPGUPD   EQU   RGATTR
OWNERUID EQU   PROTAREA+380
OWNUIDLN EQU   PROTAREA+388
PROTATTR EQU   0
@NM00100 EQU   PROTATTR
PRUS     EQU   @NM00100
PERASE   EQU   @NM00100
@NM00102 EQU   PROTATTR+1
PSHARE1  EQU   @NM00102
PSHARE2  EQU   @NM00102
MODELWKA EQU   0
MDLWKALN EQU   MODELWKA
MDLRQDLN EQU   MODELWKA+2
MDTAB    EQU   0
MDLETYPE EQU   MDTAB
@NM00104 EQU   MDTAB+4
MDLFLDLN EQU   @NM00104
MDLFLDPT EQU   @NM00104+4
DATAVAL  EQU   0
KEYFLDLN EQU   0
CLATTR   EQU   0
SWAPATTR EQU   CLATTR
PAGEATTR EQU   CLATTR
ALIAS    EQU   0
ALIEN    EQU   0
AMSTP011 EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
CAUTH    EQU   0
CBIND    EQU   0
CCYLD    EQU   0
CCYLF    EQU   0
CERAS    EQU   0
CFSPC    EQU   0
CIMBD    EQU   0
CKEY     EQU   0
CNERS    EQU   0
CNIBD    EQU   0
CNREP    EQU   0
CNRUS    EQU   0
CNSPD    EQU   0
CNSTW    EQU   0
CNWCK    EQU   0
CORDR    EQU   0
CRANG    EQU   0
CRANGCNT EQU   0
CRCDS    EQU   0
CRECV    EQU   0
CREPL    EQU   0
CRGHIPTR EQU   0
CRGLOPTR EQU   0
CRSIZ    EQU   0
CRUS     EQU   0
CSHAR    EQU   0
CSPED    EQU   0
CSPND    EQU   0
CSTAG    EQU   0
CSTGW    EQU   0
CSUBA    EQU   0
CTRKS    EQU   0
CUNIQ    EQU   0
CUORD    EQU   0
CWCK     EQU   0
DATAA    EQU   0
DAUTH    EQU   0
DBIND    EQU   0
DCYLD    EQU   0
DCYLF    EQU   0
DERAS    EQU   0
DFSPC    EQU   0
DKEY     EQU   0
DMODL    EQU   0
DMPTRM   EQU   0
DNERS    EQU   0
DNRUS    EQU   0
DNRVL    EQU   0
DNSPD    EQU   0
DNSTW    EQU   0
DNUQK    EQU   0
DNWCK    EQU   0
DORDR    EQU   0
DRANG    EQU   0
DRANGCNT EQU   0
DRCDS    EQU   0
DRECV    EQU   0
DRGHIPTR EQU   0
DRGLOPTR EQU   0
DRSIZ    EQU   0
DRUS     EQU   0
DRVBL    EQU   0
DSHAR    EQU   0
DSPED    EQU   0
DSPND    EQU   0
DSTAG    EQU   0
DSTGW    EQU   0
DSUBA    EQU   0
DTRKS    EQU   0
DUNIQ    EQU   0
DUNQK    EQU   0
DUORD    EQU   0
DWCK     EQU   0
GAUTH    EQU   0
GBIND    EQU   0
GCYLD    EQU   0
GCYLF    EQU   0
GENDG    EQU   0
GENEM    EQU   0
GENNE    EQU   0
GENNS    EQU   0
GENSC    EQU   0
GERAS    EQU   0
GFSPC    EQU   0
GIMBD    EQU   0
GKEY     EQU   0
GMODL    EQU   0
GNERS    EQU   0
GNIBD    EQU   0
GNREP    EQU   0
GNRUS    EQU   0
GNSTW    EQU   0
GNUPG    EQU   0
GNUQK    EQU   0
GNWCK    EQU   0
GORDR    EQU   0
GRANG    EQU   0
GRANGCNT EQU   0
GRCDS    EQU   0
GRECV    EQU   0
GREPL    EQU   0
GRGHIPTR EQU   0
GRGLOPTR EQU   0
GRSIZ    EQU   0
GRUS     EQU   0
GSHAR    EQU   0
GSPED    EQU   0
GSTAG    EQU   0
GSTGW    EQU   0
GSUBA    EQU   0
GTRKS    EQU   0
GUNIQ    EQU   0
GUNQK    EQU   0
GUORD    EQU   0
GUPG     EQU   0
GWCK     EQU   0
IAUTH    EQU   0
IBIND    EQU   0
ICYLD    EQU   0
ICYLF    EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGS0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
IIMBD    EQU   0
IMODL    EQU   0
INIBD    EQU   0
INREP    EQU   0
INRUS    EQU   0
INSTW    EQU   0
INWCK    EQU   0
IORDR    EQU   0
IRCDS    EQU   0
IREPL    EQU   0
IRUS     EQU   0
ISHAR    EQU   0
ISTAG    EQU   0
ISTGW    EQU   0
ISUBA    EQU   0
ITRKS    EQU   0
IUNIQ    EQU   0
IUORD    EQU   0
IWCK     EQU   0
LISTTEST EQU   0
MAUTH    EQU   0
MCYLD    EQU   0
MDIOCSPT EQU   0
MDLOWNER EQU   0
MNRVL    EQU   0
MNSTW    EQU   0
MNWCK    EQU   0
MRCDS    EQU   0
MRVBL    EQU   0
MSTGW    EQU   0
MTRKS    EQU   0
MWCK     EQU   0
NEWERID1 EQU   5
PAUTH    EQU   0
PCYLD    EQU   0
PERAS    EQU   0
PMODL    EQU   0
PNERS    EQU   0
PRCDS    EQU   0
PSUBA    EQU   0
PTRKS    EQU   0
PUNIQ    EQU   0
RAUTH    EQU   0
RMODL    EQU   0
RNUPD    EQU   0
RUPD     EQU   0
SCAND    EQU   0
SCYLD    EQU   0
SPACE    EQU   0
SRCDS    EQU   0
SRSIZ    EQU   0
STRKS    EQU   0
UAUTH    EQU   0
UCYLD    EQU   0
UMODL    EQU   0
UNRVL    EQU   0
UNSTW    EQU   0
UNWCK    EQU   0
URCDS    EQU   0
URVBL    EQU   0
USTGW    EQU   0
UTRKS    EQU   0
UWCK     EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBLX  EQU   0
COMAREA  EQU   0
DEPLPTR  EQU   COMAREA
CTGPLPTR EQU   COMAREA+4
CTGFVPTR EQU   COMAREA+8
DSBCATPT EQU   COMAREA+12
MDLTBLPT EQU   COMAREA+16
ASCNAMES EQU   COMAREA+20
IASCNMID EQU   ASCNAMES
IASCNAME EQU   ASCNAMES+1
DASCNMID EQU   ASCNAMES+4
DASCNAME EQU   ASCNAMES+5
CTGRTNCC EQU   COMAREA+36
ALLCFLAG EQU   COMAREA+40
PROTFLAG EQU   COMAREA+41
NAMEFLG  EQU   COMAREA+42
KEYFLAG  EQU   COMAREA+44
PGSPFLAG EQU   COMAREA+45
SWAPFLAG EQU   COMAREA+46
PSWDWARN EQU   COMAREA+47
DEFSTID  EQU   COMAREA+57
CATOPEN  EQU   COMAREA+68
@NM00053 EQU   CATOPEN+4
ETRY     EQU   0
ETO      EQU   0
EFOR     EQU   0
EGENSC   EQU   0
EGENEM   EQU   0
EGENLM   EQU   0
EALREL   EQU   0
EEEXT    EQU   0
EREL     EQU   0
EMODLTAB EQU   0
AINDDN   EQU   0
AVLSR    EQU   0
AORDR    EQU   0
AUORD    EQU   0
ASUBA    EQU   0
AUNIQ    EQU   0
ATRKS    EQU   0
ACYLD    EQU   0
ARCDS    EQU   0
APTRK    EQU   0
APCYL    EQU   0
APRCD    EQU   0
ASTRK    EQU   0
ASCYL    EQU   0
ASRCD    EQU   0
ACAND    EQU   0
ARSIZ    EQU   0
AARSZ    EQU   0
AMRSZ    EQU   0
AWCHK    EQU   0
ANWCK    EQU   0
ASPED    EQU   0
ARECV    EQU   0
AFSPC    EQU   0
ACIFS    EQU   0
ACAFS    EQU   0
ABFSZ    EQU   0
ACINV    EQU   0
ADEVICE  EQU   0
AAFSNO   EQU   0
ARVBL    EQU   0
ANRVL    EQU   0
ASTAGE   EQU   0
ABINDD   EQU   0
ACYLFF   EQU   0
ANSTGW   EQU   0
ASTGWW   EQU   0
AMDTBL   EQU   0
KEY      EQU   0
KYPS     EQU   0
KYLN     EQU   0
RANGE    EQU   0
RANGECNT EQU   0
RNGLOPTR EQU   0
RNGHIPTR EQU   0
KSPND    EQU   0
KNSPD    EQU   0
KUNQK    EQU   0
KNUQK    EQU   0
KYMDLTAB EQU   0
REPL     EQU   0
NREP     EQU   0
IMBD     EQU   0
NIBD     EQU   0
IXMDLTAB EQU   0
AMASTER  EQU   0
ACINT    EQU   0
AUPDATE  EQU   0
AREAD    EQU   0
AMXATTMP EQU   0
APWPRMT  EQU   0
AUSVRNM  EQU   0
AUSERARC EQU   0
AOWNRID  EQU   0
AERASE   EQU   0
ANERS    EQU   0
ASHAR1   EQU   0
ASHAR2   EQU   0
ARUS     EQU   0
ANRUS    EQU   0
AUPG     EQU   0
ANUPG    EQU   0
PMDLTABL EQU   0
ENAM     EQU   0
ENAMPLN  EQU   0
ENAMPAS  EQU   0
MDCT     EQU   0
MDCTPLN  EQU   0
MDCTPAS  EQU   0
MDNM     EQU   0
ASCNAME  EQU   0
MDLACBPT EQU   0
MODELTAB EQU   0
@NM00047 EQU   CTGDDNM
CTGPROB  EQU   @NM00047
CTGREASN EQU   CTGPROB+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
DEACBAD  EQU   @NM00053+4
DEIOCS   EQU   @NM00053
CATINDEX EQU   CATOPEN
DDSTRU2  EQU   COMAREA+64
DEFSTD   EQU   DEFSTID+4
DEFCOND  EQU   DEFSTID+3
DEFMODID EQU   DEFSTID
DEFSTIDL EQU   COMAREA+48
STRCTYPE EQU   COMAREA+43
CTGRTNID EQU   COMAREA+28
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
@NM00105 EQU   CLATTR
@NM00103 EQU   MDTAB+1
MDLDATA  EQU   MODELWKA+4
@NM00101 EQU   @NM00100
@NM00099 EQU   RGATTR
@NM00098 EQU   PROTAREA+64
@NM00097 EQU   PROTAREA+40
@NM00096 EQU   PROTAREA+16
@NM00091 EQU   FPLAMDSB+16
@NM00090 EQU   @NM00089
@NM00088 EQU   @NM00087
AAINHIB  EQU   @NM00087
AAERASE  EQU   @NM00087
AARUS    EQU   @NM00087
@NM00086 EQU   AFPLAREA+136
@NM00085 EQU   AFPLAREA+112
@NM00084 EQU   AFPLAREA+88
@NM00083 EQU   AFPLAREA+64
@NM00082 EQU   AFPLAREA+40
@NM00081 EQU   AFPLAREA+16
ALRELPTR EQU   FPLAREA+84
ALRELLN  EQU   FPLAREA+82
@NM00078 EQU   GENDATTR
@NM00077 EQU   EXPIREDT
@NM00076 EQU   FPLAREA+64
@NM00075 EQU   FPLAREA+40
@NM00074 EQU   FPLAREA+16
MDLHKEY  EQU   @NM00073+2
MDLHKYLN EQU   @NM00073
MDLLKEY  EQU   @NM00072+2
MDLLKYLN EQU   @NM00072
DEMDLTAB EQU   DECPLFPL+756
@NM00071 EQU   RECVSWKA+10
RECVSVOL EQU   RECVSWKA+4
RECVSRET EQU   RECVSWKA+2
GENAME   EQU   @NM00070+1
GENMTYPE EQU   @NM00070
DEAM0LEN EQU   DEWKAREA+2
DEUSERLN EQU   DEWKAREA
DEWKAID  EQU   DECPLFPL+476
@NM00069 EQU   DECPLFPL+468
DATAFVT  EQU   DECPLFPL+376
DATAID   EQU   DECPLFPL+368
@NM00068 EQU   DECPLFPL+360
INDEXFVT EQU   DECPLFPL+268
INDEXID  EQU   DECPLFPL+260
@NM00067 EQU   DECPLFPL+252
VOLFVT   EQU   DECPLFPL+160
VOLID    EQU   DECPLFPL+152
@NM00066 EQU   DECPLFPL+144
CLSTRFVT EQU   DECPLFPL+52
CLSTRID  EQU   DECPLFPL+44
@NM00065 EQU   DECPLFPL+36
DECPL    EQU   DECPLFPL+8
CPLID    EQU   DECPLFPL
MDLPWLEN EQU   MDLTABL+124
MDLRGLEN EQU   MDLTABL+116
MDLEELEN EQU   MDLTABL+108
MDLASLEN EQU   MDLTABL+100
MDLBFLEN EQU   MDLTABL+92
MDLLRLEN EQU   MDLTABL+84
MDLSPLEN EQU   MDLTABL+76
MDLDBLEN EQU   MDLTABL+44
MDLATLEN EQU   MDLTABL+36
MDLOWLEN EQU   MDLTABL+28
MDLEXLEN EQU   MDLTABL+20
MDLACBXL EQU   MDLTABL+12
MDLENTYP EQU   MDLTABL+8
MDLENTLN EQU   MDLTABL+4
@NM00064 EQU   MDLTABL+1
@NM00063 EQU   VLISTCDE+1
VLISTCC  EQU   VLISTCDE
NAMMELM  EQU   @NM00061+12
NAMMLEN  EQU   @NM00061+11
NAMPOS   EQU   @NM00061+9
LISTLEN1 EQU   @NM00060
LISTLEN  EQU   @NM00058
CTGFVCPP EQU   CTGFVPWD
CTGFVTTR EQU   CTGFVSPC
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00052 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00051 EQU   CTGFVPRO
CTGFVROF EQU   CTGFVPRO
CTGFVRON EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00050 EQU   IDAAMDSB+41
@NM00049 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDSBID  EQU   IDAAMDSB
CTGFLDWA EQU   CTGFL+4
CTGFLDTS EQU   CTGFLDRE
@NM00048 EQU   CTGFLDRE
CTGFLDGC EQU   CTGFL+2
@NM00046 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00045 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
CTGCVOL  EQU   CTGCAT
@NM00044 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
@NM00043 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
@NM00042 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
RPENTVAL EQU   RPENT+21
RPENTLEN EQU   RPENT+20
RPENTMEM EQU   RPENT+12
RPENTMLN EQU   RPENT+11
RPENTFUQ EQU   RPENTFLG
RPENTPOS EQU   RPENT+9
RPENTPAS EQU   RPENT+1
RPENTPLN EQU   RPENT
IEEXTVAL EQU   IEEXT+1
IEEXTLEN EQU   IEEXT
DEEXTVAL EQU   DEEXT+1
DEEXTLEN EQU   DEEXT
GEEXTVAL EQU   GEEXT+1
GEEXTLEN EQU   GEEXT
CEEXTVAL EQU   CEEXT+1
CEEXTLEN EQU   CEEXT
GRELVAL  EQU   GREL+21
GRELLEN  EQU   GREL+20
GRELMEM  EQU   GREL+12
GRELMLN  EQU   GREL+11
GRELFUQ  EQU   GRELFLG
GRELPOS  EQU   GREL+9
GRELPAS  EQU   GREL+1
GRELPLN  EQU   GREL
GENLMVAL EQU   GENLM
ALRELVAL EQU   ALREL+21
ALRELLEN EQU   ALREL+20
ALRELMEM EQU   ALREL+12
ALRELMLN EQU   ALREL+11
ALRELFUQ EQU   ALRELFLG
ALRELPOS EQU   ALREL+9
ALRELPAS EQU   ALREL+1
ALRELPLN EQU   ALREL
ICINVVAL EQU   ICINV
DCINVVAL EQU   DCINV
GCINVVAL EQU   GCINV
CCINVVAL EQU   CCINV
DBFSZVAL EQU   DBFSZ
GBFSZVAL EQU   GBFSZ
UBFSZVAL EQU   UBFSZ
CBFSZVAL EQU   CBFSZ
MBFSZVAL EQU   MBFSZ
DCAFSVAL EQU   DCAFS
DCIFSVAL EQU   DCIFS
GCAFSVAL EQU   GCAFS
CCAFSVAL EQU   CCAFS
GCIFSVAL EQU   GCIFS
CCIFSVAL EQU   CCIFS
DMRSZVAL EQU   DMRSZ
DARSZVAL EQU   DARSZ
GMRSZVAL EQU   GMRSZ
SMRSZVAL EQU   SMRSZ
CMRSZVAL EQU   CMRSZ
GARSZVAL EQU   GARSZ
SARSZVAL EQU   SARSZ
CARSZVAL EQU   CARSZ
IRCSCVAL EQU   IRCSC
ICLSCVAL EQU   ICLSC
ITKSCVAL EQU   ITKSC
DRCSCVAL EQU   DRCSC
DCLSCVAL EQU   DCLSC
DTKSCVAL EQU   DTKSC
GRCSCVAL EQU   GRCSC
GCLSCVAL EQU   GCLSC
GTKSCVAL EQU   GTKSC
PRCSCVAL EQU   PRCSC
URCSCVAL EQU   URCSC
SRCSCVAL EQU   SRCSC
CRCSCVAL EQU   CRCSC
MRCSCVAL EQU   MRCSC
SCLSCVAL EQU   SCLSC
PCLSCVAL EQU   PCLSC
UCLSCVAL EQU   UCLSC
CCLSCVAL EQU   CCLSC
MCLSCVAL EQU   MCLSC
PTKSCVAL EQU   PTKSC
UTKSCVAL EQU   UTKSC
STKSCVAL EQU   STKSC
CTKSCVAL EQU   CTKSC
MTKSCVAL EQU   MTKSC
IRCPRVAL EQU   IRCPR
ICLPRVAL EQU   ICLPR
ITKPRVAL EQU   ITKPR
DRCPRVAL EQU   DRCPR
DCLPRVAL EQU   DCLPR
DTKPRVAL EQU   DTKPR
GRCPRVAL EQU   GRCPR
GCLPRVAL EQU   GCLPR
GTKPRVAL EQU   GTKPR
PRCPRVAL EQU   PRCPR
URCPRVAL EQU   URCPR
SRCPRVAL EQU   SRCPR
CRCPRVAL EQU   CRCPR
MRCPRVAL EQU   MRCPR
SCLPRVAL EQU   SCLPR
PCLPRVAL EQU   PCLPR
UCLPRVAL EQU   UCLPR
CCLPRVAL EQU   CCLPR
MCLPRVAL EQU   MCLPR
PTKPRVAL EQU   PTKPR
UTKPRVAL EQU   UTKPR
STKPRVAL EQU   STKPR
CTKPRVAL EQU   CTKPR
MTKPRVAL EQU   MTKPR
ADEVTVAL EQU   @NM00041+1
ADEVTLEN EQU   @NM00041
ADEVTCNT EQU   ADEVT
DRGHIVAL EQU   DRGHI+1
DRGHILEN EQU   DRGHI
DRGLOVAL EQU   DRGLO+1
DRGLOLEN EQU   DRGLO
GRGHIVAL EQU   GRGHI+1
GRGHILEN EQU   GRGHI
GRGLOVAL EQU   GRGLO+1
GRGLOLEN EQU   GRGLO
CRGHIVAL EQU   CRGHI+1
CRGHILEN EQU   CRGHI
CRGLOVAL EQU   CRGLO+1
CRGLOLEN EQU   CRGLO
IVSERVAL EQU   @NM00040+1
IVSERLEN EQU   @NM00040
IVSERCNT EQU   IVSER
DVSERVAL EQU   @NM00039+1
DVSERLEN EQU   @NM00039
DVSERCNT EQU   DVSER
GVSERVAL EQU   @NM00038+1
GVSERLEN EQU   @NM00038
GVSERCNT EQU   GVSER
AVSERVAL EQU   @NM00037+1
AVSERLEN EQU   @NM00037
AVSERCNT EQU   AVSER
SVSERVAL EQU   @NM00036+1
SVSERLEN EQU   @NM00036
SVSERCNT EQU   SVSER
CVSERVAL EQU   @NM00035+1
CVSERLEN EQU   @NM00035
CVSERCNT EQU   CVSER
PVSERVAL EQU   @NM00034+1
PVSERLEN EQU   @NM00034
PVSERCNT EQU   PVSER
UVSERVAL EQU   @NM00033+1
UVSERLEN EQU   @NM00033
UVSERCNT EQU   UVSER
MVSERVAL EQU   @NM00032+1
MVSERLEN EQU   @NM00032
MVSERCNT EQU   MVSER
IINDDVAL EQU   IINDD+1
IINDDLEN EQU   IINDD
DINDDVAL EQU   DINDD+1
DINDDLEN EQU   DINDD
RINDDVAL EQU   RINDD+1
RINDDLEN EQU   RINDD
GINDDVAL EQU   GINDD+1
GINDDLEN EQU   GINDD
AINDDVAL EQU   AINDD+1
AINDDLEN EQU   AINDD
SINDDVAL EQU   SINDD+1
SINDDLEN EQU   SINDD
PINDDVAL EQU   PINDD+1
PINDDLEN EQU   PINDD
UINDDVAL EQU   UINDD+1
UINDDLEN EQU   UINDD
CINDDVAL EQU   CINDD+1
CINDDLEN EQU   CINDD
MINDDVAL EQU   MINDD+1
MINDDLEN EQU   MINDD
DKYPSVAL EQU   DKYPS
DKYLNVAL EQU   DKYLN
GKYPSVAL EQU   GKYPS
GKYLNVAL EQU   GKYLN
CKYPSVAL EQU   CKYPS
CKYLNVAL EQU   CKYLN
ISHR2VAL EQU   ISHR2
ISHR1VAL EQU   ISHR1
DSHR2VAL EQU   DSHR2
DSHR1VAL EQU   DSHR1
GSHR2VAL EQU   GSHR2
CSHR2VAL EQU   CSHR2
GSHR1VAL EQU   GSHR1
CSHR1VAL EQU   CSHR1
IOWNRVAL EQU   IOWNR+1
IOWNRLEN EQU   IOWNR
DOWNRVAL EQU   DOWNR+1
DOWNRLEN EQU   DOWNR
ROWNRVAL EQU   ROWNR+1
ROWNRLEN EQU   ROWNR
GOWNRVAL EQU   GOWNR+1
GOWNRLEN EQU   GOWNR
POWNRVAL EQU   POWNR+1
POWNRLEN EQU   POWNR
BOWNRVAL EQU   BOWNR+1
BOWNRLEN EQU   BOWNR
AOWNRVAL EQU   AOWNR+1
AOWNRLEN EQU   AOWNR
UOWNRVAL EQU   UOWNR+1
UOWNRLEN EQU   UOWNR
COWNRVAL EQU   COWNR+1
COWNRLEN EQU   COWNR
MOWNRVAL EQU   MOWNR+1
MOWNRLEN EQU   MOWNR
RFORVAL  EQU   RFOR
GFORVAL  EQU   GFOR
PFORVAL  EQU   PFOR
BFORVAL  EQU   BFOR
AFORVAL  EQU   AFOR
UFORVAL  EQU   UFOR
CFORVAL  EQU   CFOR
MFORVAL  EQU   MFOR
RTOVAL   EQU   RTO
GTOVAL   EQU   GTO
PTOVAL   EQU   PTO
BTOVAL   EQU   BTO
ATOVAL   EQU   ATO
UTOVAL   EQU   UTO
CTOVAL   EQU   CTO
MTOVAL   EQU   MTO
ISTRGVAL EQU   ISTRG+1
ISTRGLEN EQU   ISTRG
IEPNMVAL EQU   IEPNM+1
IEPNMLEN EQU   IEPNM
DSTRGVAL EQU   DSTRG+1
DSTRGLEN EQU   DSTRG
DEPNMVAL EQU   DEPNM+1
DEPNMLEN EQU   DEPNM
RSTRGVAL EQU   RSTRG+1
RSTRGLEN EQU   RSTRG
GSTRGVAL EQU   GSTRG+1
GSTRGLEN EQU   GSTRG
PSTRGVAL EQU   PSTRG+1
PSTRGLEN EQU   PSTRG
CSTRGVAL EQU   CSTRG+1
CSTRGLEN EQU   CSTRG
USTRGVAL EQU   USTRG+1
USTRGLEN EQU   USTRG
MSTRGVAL EQU   MSTRG+1
MSTRGLEN EQU   MSTRG
REPNMVAL EQU   REPNM+1
REPNMLEN EQU   REPNM
GEPNMVAL EQU   GEPNM+1
GEPNMLEN EQU   GEPNM
PEPNMVAL EQU   PEPNM+1
PEPNMLEN EQU   PEPNM
CEPNMVAL EQU   CEPNM+1
CEPNMLEN EQU   CEPNM
UEPNMVAL EQU   UEPNM+1
UEPNMLEN EQU   UEPNM
MEPNMVAL EQU   MEPNM+1
MEPNMLEN EQU   MEPNM
IATTPVAL EQU   IATTP
DATTPVAL EQU   DATTP
RATTPVAL EQU   RATTP
GATTPVAL EQU   GATTP
PATTPVAL EQU   PATTP
UATTPVAL EQU   UATTP
CATTPVAL EQU   CATTP
MATTPVAL EQU   MATTP
ICODEVAL EQU   ICODE+1
ICODELEN EQU   ICODE
DCODEVAL EQU   DCODE+1
DCODELEN EQU   DCODE
RCODEVAL EQU   RCODE+1
RCODELEN EQU   RCODE
GCODEVAL EQU   GCODE+1
GCODELEN EQU   GCODE
PCODEVAL EQU   PCODE+1
PCODELEN EQU   PCODE
UCODEVAL EQU   UCODE+1
UCODELEN EQU   UCODE
CCODEVAL EQU   CCODE+1
CCODELEN EQU   CCODE
MCODEVAL EQU   MCODE+1
MCODELEN EQU   MCODE
IREADVAL EQU   IREAD+1
IREADLEN EQU   IREAD
DREADVAL EQU   DREAD+1
DREADLEN EQU   DREAD
RREADVAL EQU   RREAD+1
RREADLEN EQU   RREAD
GREADVAL EQU   GREAD+1
GREADLEN EQU   GREAD
PREADVAL EQU   PREAD+1
PREADLEN EQU   PREAD
UREADVAL EQU   UREAD+1
UREADLEN EQU   UREAD
CREADVAL EQU   CREAD+1
CREADLEN EQU   CREAD
MREADVAL EQU   MREAD+1
MREADLEN EQU   MREAD
IUPDTVAL EQU   IUPDT+1
IUPDTLEN EQU   IUPDT
DUPDTVAL EQU   DUPDT+1
DUPDTLEN EQU   DUPDT
RUPDTVAL EQU   RUPDT+1
RUPDTLEN EQU   RUPDT
GUPDTVAL EQU   GUPDT+1
GUPDTLEN EQU   GUPDT
PUPDTVAL EQU   PUPDT+1
PUPDTLEN EQU   PUPDT
UUPDTVAL EQU   UUPDT+1
UUPDTLEN EQU   UUPDT
CUPDTVAL EQU   CUPDT+1
CUPDTLEN EQU   CUPDT
MUPDTVAL EQU   MUPDT+1
MUPDTLEN EQU   MUPDT
ICINTVAL EQU   ICINT+1
ICINTLEN EQU   ICINT
DCINTVAL EQU   DCINT+1
DCINTLEN EQU   DCINT
RCINTVAL EQU   RCINT+1
RCINTLEN EQU   RCINT
GCINTVAL EQU   GCINT+1
GCINTLEN EQU   GCINT
PCINTVAL EQU   PCINT+1
PCINTLEN EQU   PCINT
UCINTVAL EQU   UCINT+1
UCINTLEN EQU   UCINT
CCINTVAL EQU   CCINT+1
CCINTLEN EQU   CCINT
MCINTVAL EQU   MCINT+1
MCINTLEN EQU   MCINT
IMSTRVAL EQU   IMSTR+1
IMSTRLEN EQU   IMSTR
DMSTRVAL EQU   DMSTR+1
DMSTRLEN EQU   DMSTR
RMSTRVAL EQU   RMSTR+1
RMSTRLEN EQU   RMSTR
GMSTRVAL EQU   GMSTR+1
GMSTRLEN EQU   GMSTR
PMSTRVAL EQU   PMSTR+1
PMSTRLEN EQU   PMSTR
CMSTRVAL EQU   CMSTR+1
CMSTRLEN EQU   CMSTR
UMSTRVAL EQU   UMSTR+1
UMSTRLEN EQU   UMSTR
MMSTRVAL EQU   MMSTR+1
MMSTRLEN EQU   MMSTR
IMDNMVAL EQU   IMDNM+1
IMDNMLEN EQU   IMDNM
IMDCTVAL EQU   IMDCT+21
IMDCTLEN EQU   IMDCT+20
IMDCTMEM EQU   IMDCT+12
IMDCTMLN EQU   IMDCT+11
IMDCTFUQ EQU   IMDCTFLG
IMDCTPOS EQU   IMDCT+9
IMDCTPAS EQU   IMDCT+1
IMDCTPLN EQU   IMDCT
IENAMVAL EQU   IENAM+21
IENAMLEN EQU   IENAM+20
IENAMMEM EQU   IENAM+12
IENAMMLN EQU   IENAM+11
IENAMFUQ EQU   IENAMFLG
IENAMPOS EQU   IENAM+9
IENAMPAS EQU   IENAM+1
IENAMPLN EQU   IENAM
DMDNMVAL EQU   DMDNM+1
DMDNMLEN EQU   DMDNM
DMDCTVAL EQU   DMDCT+21
DMDCTLEN EQU   DMDCT+20
DMDCTMEM EQU   DMDCT+12
DMDCTMLN EQU   DMDCT+11
DMDCTFUQ EQU   DMDCTFLG
DMDCTPOS EQU   DMDCT+9
DMDCTPAS EQU   DMDCT+1
DMDCTPLN EQU   DMDCT
DENAMVAL EQU   DENAM+21
DENAMLEN EQU   DENAM+20
DENAMMEM EQU   DENAM+12
DENAMMLN EQU   DENAM+11
DENAMFUQ EQU   DENAMFLG
DENAMPOS EQU   DENAM+9
DENAMPAS EQU   DENAM+1
DENAMPLN EQU   DENAM
PMDNMVAL EQU   PMDNM+1
PMDNMLEN EQU   PMDNM
RMDNMVAL EQU   RMDNM+1
RMDNMLEN EQU   RMDNM
GMDNMVAL EQU   GMDNM+1
GMDNMLEN EQU   GMDNM
UMDNMVAL EQU   UMDNM+1
UMDNMLEN EQU   UMDNM
CMDNMVAL EQU   CMDNM+1
CMDNMLEN EQU   CMDNM
PMDCTVAL EQU   PMDCT+21
PMDCTLEN EQU   PMDCT+20
PMDCTMEM EQU   PMDCT+12
PMDCTMLN EQU   PMDCT+11
PMDCTFUQ EQU   PMDCTFLG
PMDCTPOS EQU   PMDCT+9
PMDCTPAS EQU   PMDCT+1
PMDCTPLN EQU   PMDCT
RMDCTVAL EQU   RMDCT+21
RMDCTLEN EQU   RMDCT+20
RMDCTMEM EQU   RMDCT+12
RMDCTMLN EQU   RMDCT+11
RMDCTFUQ EQU   RMDCTFLG
RMDCTPOS EQU   RMDCT+9
RMDCTPAS EQU   RMDCT+1
RMDCTPLN EQU   RMDCT
GMDCTVAL EQU   GMDCT+21
GMDCTLEN EQU   GMDCT+20
GMDCTMEM EQU   GMDCT+12
GMDCTMLN EQU   GMDCT+11
GMDCTFUQ EQU   GMDCTFLG
GMDCTPOS EQU   GMDCT+9
GMDCTPAS EQU   GMDCT+1
GMDCTPLN EQU   GMDCT
UMDCTVAL EQU   UMDCT+21
UMDCTLEN EQU   UMDCT+20
UMDCTMEM EQU   UMDCT+12
UMDCTMLN EQU   UMDCT+11
UMDCTFUQ EQU   UMDCTFLG
UMDCTPOS EQU   UMDCT+9
UMDCTPAS EQU   UMDCT+1
UMDCTPLN EQU   UMDCT
CMDCTVAL EQU   CMDCT+21
CMDCTLEN EQU   CMDCT+20
CMDCTMEM EQU   CMDCT+12
CMDCTMLN EQU   CMDCT+11
CMDCTFUQ EQU   CMDCTFLG
CMDCTPOS EQU   CMDCT+9
CMDCTPAS EQU   CMDCT+1
CMDCTPLN EQU   CMDCT
PENAMVAL EQU   PENAM+21
PENAMLEN EQU   PENAM+20
PENAMMEM EQU   PENAM+12
PENAMMLN EQU   PENAM+11
PENAMFUQ EQU   PENAMFLG
PENAMPOS EQU   PENAM+9
PENAMPAS EQU   PENAM+1
PENAMPLN EQU   PENAM
RENAMVAL EQU   RENAM+21
RENAMLEN EQU   RENAM+20
RENAMMEM EQU   RENAM+12
RENAMMLN EQU   RENAM+11
RENAMFUQ EQU   RENAMFLG
RENAMPOS EQU   RENAM+9
RENAMPAS EQU   RENAM+1
RENAMPLN EQU   RENAM
GENAMVAL EQU   GENAM+21
GENAMLEN EQU   GENAM+20
GENAMMEM EQU   GENAM+12
GENAMMLN EQU   GENAM+11
GENAMFUQ EQU   GENAMFLG
GENAMPOS EQU   GENAM+9
GENAMPAS EQU   GENAM+1
GENAMPLN EQU   GENAM
UENAMVAL EQU   UENAM+21
UENAMLEN EQU   UENAM+20
UENAMMEM EQU   UENAM+12
UENAMMLN EQU   UENAM+11
UENAMFUQ EQU   UENAMFLG
UENAMPOS EQU   UENAM+9
UENAMPAS EQU   UENAM+1
UENAMPLN EQU   UENAM
CENAMVAL EQU   CENAM+21
CENAMLEN EQU   CENAM+20
CENAMMEM EQU   CENAM+12
CENAMMLN EQU   CENAM+11
CENAMFUQ EQU   CENAMFLG
CENAMPOS EQU   CENAM+9
CENAMPAS EQU   CENAM+1
CENAMPLN EQU   CENAM
IETRYVAL EQU   IETRY+21
IETRYLEN EQU   IETRY+20
IETRYMEM EQU   IETRY+12
IETRYMLN EQU   IETRY+11
IETRYFUQ EQU   IETRYFLG
IETRYPOS EQU   IETRY+9
IETRYPAS EQU   IETRY+1
IETRYPLN EQU   IETRY
DETRYVAL EQU   DETRY+21
DETRYLEN EQU   DETRY+20
DETRYMEM EQU   DETRY+12
DETRYMLN EQU   DETRY+11
DETRYFUQ EQU   DETRYFLG
DETRYPOS EQU   DETRY+9
DETRYPAS EQU   DETRY+1
DETRYPLN EQU   DETRY
BETRYVAL EQU   BETRY+21
BETRYLEN EQU   BETRY+20
BETRYMEM EQU   BETRY+12
BETRYMLN EQU   BETRY+11
BETRYFUQ EQU   BETRYFLG
BETRYPOS EQU   BETRY+9
BETRYPAS EQU   BETRY+1
BETRYPLN EQU   BETRY
XETRYVAL EQU   XETRY+21
XETRYLEN EQU   XETRY+20
XETRYMEM EQU   XETRY+12
XETRYMLN EQU   XETRY+11
XETRYFUQ EQU   XETRYFLG
XETRYPOS EQU   XETRY+9
XETRYPAS EQU   XETRY+1
XETRYPLN EQU   XETRY
RETRYVAL EQU   RETRY+21
RETRYLEN EQU   RETRY+20
RETRYMEM EQU   RETRY+12
RETRYMLN EQU   RETRY+11
RETRYFUQ EQU   RETRYFLG
RETRYPOS EQU   RETRY+9
RETRYPAS EQU   RETRY+1
RETRYPLN EQU   RETRY
GETRYVAL EQU   GETRY+21
GETRYLEN EQU   GETRY+20
GETRYMEM EQU   GETRY+12
GETRYMLN EQU   GETRY+11
GETRYFUQ EQU   GETRYFLG
GETRYPOS EQU   GETRY+9
GETRYPAS EQU   GETRY+1
GETRYPLN EQU   GETRY
AETRYVAL EQU   AETRY+21
AETRYLEN EQU   AETRY+20
AETRYMEM EQU   AETRY+12
AETRYMLN EQU   AETRY+11
AETRYFUQ EQU   AETRYFLG
AETRYPOS EQU   AETRY+9
AETRYPAS EQU   AETRY+1
AETRYPLN EQU   AETRY
PETRYVAL EQU   PETRY+21
PETRYLEN EQU   PETRY+20
PETRYMEM EQU   PETRY+12
PETRYMLN EQU   PETRY+11
PETRYFUQ EQU   PETRYFLG
PETRYPOS EQU   PETRY+9
PETRYPAS EQU   PETRY+1
PETRYPLN EQU   PETRY
CETRYVAL EQU   CETRY+21
CETRYLEN EQU   CETRY+20
CETRYMEM EQU   CETRY+12
CETRYMLN EQU   CETRY+11
CETRYFUQ EQU   CETRYFLG
CETRYPOS EQU   CETRY+9
CETRYPAS EQU   CETRY+1
CETRYPLN EQU   CETRY
UETRYVAL EQU   UETRY+21
UETRYLEN EQU   UETRY+20
UETRYMEM EQU   UETRY+12
UETRYMLN EQU   UETRY+11
UETRYFUQ EQU   UETRYFLG
UETRYPOS EQU   UETRY+9
UETRYPAS EQU   UETRY+1
UETRYPLN EQU   UETRY
METRYVAL EQU   METRY+21
METRYLEN EQU   METRY+20
METRYMEM EQU   METRY+12
METRYMLN EQU   METRY+11
METRYFUQ EQU   METRYFLG
METRYPOS EQU   METRY+9
METRYPAS EQU   METRY+1
METRYPLN EQU   METRY
CATDNVAL EQU   CATDN+1
CATDNLEN EQU   CATDN
CATLGLEN EQU   CATLG+20
CATLGMEM EQU   CATLG+12
CATLGMLN EQU   CATLG+11
CATLGFUQ EQU   CATLGFLG
CATLGPOS EQU   CATLG+9
FDTVERB  EQU   FDTTBL
@NM00031 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00030 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00029 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00028 EQU   ERCNVTAB+4
@NM00027 EQU   ERCNVTAB+3
@NM00026 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00025 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00024 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00023 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00022 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00021 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00020 EQU   DARGFLGS
DARGFULL EQU   DARGFLGS
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00019 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00018 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00017 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00016 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00015 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00689 EQU   @RC00685
@RF00756 EQU   @RC00753
@RF00790 EQU   @EL00002
@RF00794 EQU   @EL00002
@RF00847 EQU   @RC00843
@RF00877 EQU   @RC00858
@RF01074 EQU   @RC01069
@RF01085 EQU   @RC01080
@RF01096 EQU   @RC01091
@RF01127 EQU   @EL00003
@RF01184 EQU   @RC01181
@RC01187 EQU   @RC01181
@RF01202 EQU   @RC01161
@RC01232 EQU   @RC01227
@RF01320 EQU   @EL00004
@RF01389 EQU   @EL00005
@RC01387 EQU   @EL00005
@RF01574 EQU   @EL00006
@RF01585 EQU   @EL00006
@RC01583 EQU   @EL00006
@RF01641 EQU   @RC01638
@RC01666 EQU   @RC01664
@RT01843 EQU   @EL00007
@ENDDATA EQU   *
         END   IDCDE02,(C'PLS2303',0701,77228)
