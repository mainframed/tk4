         TITLE '******************  IDCEX01:  AMS EXECUTIVE  ***********
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCEX01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCEX01   74.284'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(4),0(@01)                                  0002
*                                      /*PATCH AREA FOR MAINTENANCE  */
*        /************************************************************/
*        /*                                                          */
*        /*  CALL IDCAMS INITIALIZATION ROUTINE - SCANS INVOKER'S    */
*        /*  PARAMETER LIST AND PERFORMS SYSTEM INITIALIZATION       */
*        /*  FOR THE TEXT PROCESSOR AND THE INPUT/OUTPUT ADAPTER.    */
*        /*  (SYSTEM ADAPTER INITIALIZATION HAS BEEN COMPLETED       */
*        /*  BEFORE THE EXECUTIVE RECEIVES CONTROL).                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0153
*        CALL IDCEX02(GDTTBL);                             /*@YL026UD*/
         L     @10,@PC00001                                        0153
         ST    @10,@AL00001                                        0153
         L     @15,@CV00550                                        0153
         LA    @01,@AL00001                                        0153
         BALR  @14,@15                                             0153
*        RESPECIFY RTNREG RSTD;                                    0154
*        TESTRC = RTNREG;                                          0155
         LR    TESTRC,RTNREG                                       0155
*        RESPECIFY RTNREG UNRSTD;                                  0156
*                                                                  0156
*        /************************************************************/
*        /*                                                          */
*        /*  SET THE IDCAMS SYSTEM CONDITION CODES -                 */
*        /*    MAXIMUM COND CODE FOR ALL IDCAMS FUNCTION PROCESSING  */
*        /*    LAST FUNCTION COND CODE FOR THE CURRENT FUNCTION      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0157
*        MAXCOND  = TESTRC;                                        0157
         STH   TESTRC,MAXCOND                                      0157
*        LASTCOND = TESTRC;                                        0158
*                                                                  0158
         STH   TESTRC,LASTCOND                                     0158
*        /************************************************************/
*        /*                                                          */
*        /*  ROUTE CONTROL BETWEEN THE READER/INTERPRETER (PROCESS   */
*        /*  THE IDCAMS COMMAND INPUT AND BUILD THE FDT) AND THE     */
*        /*  SPECIFIED FUNCTION SUPPORT ROUTINE (THE FSR NAME IS     */
*        /*  RETURNED FROM THE READER/INTERPRETER) UNTIL SYSIN       */
*        /*  END-OF-FILE HAS BEEN ENCOUNTERED.                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0159
*        CALL MAIN;                                                0159
*                                                                  0159
         BAL   @14,MAIN                                            0159
*        IF GDTDBG = NULLPTR                                       0160
*          THEN;                                                   0160
         L     @10,@PC00001                                        0160
         L     @10,GDTDBG(,@10)                                    0160
         LTR   @10,@10                                             0160
         BZ    @RT00160                                            0160
*          ELSE                                                    0162
*            CALL IDCDB010(GDTTBL,'EXMN');                         0162
*                                                                  0162
         L     @10,@PC00001                                        0162
         ST    @10,@AL00001                                        0162
         LA    @15,@CC00566                                        0162
         ST    @15,@AL00001+4                                      0162
         MVI   @AL00001+4,X'80'                                    0162
         L     @15,GDTDBG(,@10)                                    0162
         LA    @01,@AL00001                                        0162
         BALR  @14,@15                                             0162
*        /************************************************************/
*        /*                                                          */
*        /*  CALL IDCAMS TERMINATION ROUTINE - PERFORMS TERMINATION  */
*        /*  FOR THE TEXT PROCESSOR AND THE INPUT/OUTPUT ADAPTER,    */
*        /*  AND UPDATES THE INVOKER'S PARAMETER LIST.               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0163
*        CALL IDCEX03(GDTTBL,MAXCOND);                     /*@YL026UD*/
@RT00160 L     @10,@PC00001                                        0163
         ST    @10,@AL00001                                        0163
         LA    @10,MAXCOND                                         0163
         ST    @10,@AL00001+4                                      0163
         L     @15,@CV00551                                        0163
         LA    @01,@AL00001                                        0163
         BALR  @14,@15                                             0163
*        RESPECIFY RTNREG RSTD;                                    0164
*        TESTRC = RTNREG;                                          0165
         LR    TESTRC,RTNREG                                       0165
*        RESPECIFY RTNREG UNRSTD;                                  0166
*                                                                  0166
*        /************************************************************/
*        /*                                                          */
*        /*  RETURN TO THE SYSTEM ADAPTER TO COMPLETE PROCESSING     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0167
*        CALL IDCSAEP0(GDTTBL,MODID,MAXCOND);                      0167
         L     @10,@PC00001                                        0167
         ST    @10,@AL00001                                        0167
         LA    @15,MODID                                           0167
         ST    @15,@AL00001+4                                      0167
         LA    @15,MAXCOND                                         0167
         ST    @15,@AL00001+8                                      0167
         MVI   @AL00001+8,X'80'                                    0167
         L     @15,GDTEPL(,@10)                                    0167
         LA    @01,@AL00001                                        0167
         BALR  @14,@15                                             0167
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - MAIN                                           */
*/*                                                                  */
*/*  FUNCTION - ROUTE CONTROL BETWEEN THE READER/INTERPRETER (TO     */
*/*             PROCESS THE IDCAMS INPUT COMMANDS AND BUILD THE      */
*/*             FDT) AND THE SPECIFIED FUNCTION SUPPORT ROUTINE (THE */
*/*             FSR NAME IS RETURNED FROM THE READER/INTERPRETER)    */
*/*                                                                  */
*/*             ROUTING IS CONTROLLED BY THE 'SWITCH' SWITCH WHICH   */
*/*             IS INITIALIZED TO 'SWITCHRI' (R/I NEXT TO RECEIVE    */
*/*             CONTROL) AND FOLLOWING THE CALLS TO THE READER/      */
*/*             INTERPRETER AND FUNCTION ROUTINES IS UPDATED TO      */
*/*             'SWITCHFS' AND 'SWITCHRI', RESPECITIVELY             */
*/*                                                                  */
*/*             THE SYSTEM CONDITION CODES ARE UPDATED BY THE        */
*/*             READER/INTERPRETER AND FOLLOWING EACH CALL TO THE    */
*/*             FUNCTION SUPPORT ROUTINE                             */
*/*                                                                  */
*/*  INPUT - MAXIMUM SYSTEM CONDITION CODE - INITIALIZED TO ZERO     */
*/*          (NO EXCEPTIONAL CONDITIONS)                             */
*/*                                                                  */
*/*  OUTPUT - MAXIMUM SYSTEM CONDITION CODE - UPDATED AS A RESULT OF */
*/*           READER/INTERPRETER AND FUNCTION ROUTINE PROCESSING     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0168
*MAIN:   PROCEDURE;                                                0168
@EL00001 L     @13,4(,@13)                                         0168
@EF00001 L     @00,@SIZDATD                                        0168
         LR    @01,@11                                             0168
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0168
         BR    @14                                                 0168
MAIN     STM   @14,@12,@SA00002                                    0168
*        OLDERID2 = NEWERID2;                                      0169
         L     @10,@PC00001                                        0169
         L     @10,GDTTR2(,@10)                                    0169
         MVC   @TS00001(95),NEWERID2(@10)                          0169
         MVC   OLDERID2(95,@10),@TS00001                           0169
*        NEWID2 = 'EX1M';                                          0170
*                                                                  0170
         MVC   NEWID2(4,@10),@CC00570                              0170
*        SWITCH = SWITCHRI;                                        0171
         NI    SWITCH,B'01111111'                                  0171
*        EOFCOND = NOEOF;                                          0172
*                                                                  0172
         SLR   EOFCOND,EOFCOND                                     0172
*        /************************************************************/
*        /*                                                          */
*        /*  LOOP THROUGH READER/INTERPRETER AND FUNCTION SUPPORT    */
*        /*  ROUTINES UNTIL SYSTEM CONDITION CODES = 16 (TERMINATING */
*        /*  CONDITION), OR UNTIL SYSIN END-OF-FILE HAS BEEN FOUND   */
*        /*  BY THE READER/INTERPRETER (END-OF-FILE RETURN CODE)     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0173
*        DO WHILE (MAXCOND < CONDTERM & EOFCOND = NOEOF);          0173
*                                                                  0173
         B     @DE00173                                            0173
@DL00173 DS    0H                                                  0174
*          /**********************************************************/
*          /*                                                        */
*          /*  TEST SWITCH TO DETERMINE WHETHER READER/INTERPRETER   */
*          /*  OR FUNCTION SUPPORT ROUTINE RECEIVES CONTROL          */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0174
*          IF SWITCH = SWITCHRI                                    0174
*            THEN                                                  0174
         TM    SWITCH,B'10000000'                                  0174
         BNZ   @RF00174                                            0174
*              DO;                                                 0175
*              /******************************************************/
*              /*                                                    */
*              /*  READER/INTERPRETER PROCESSING NEXT                */
*              /*                                                    */
*              /******************************************************/
*                                                                  0176
*              CALL CALLRI;                                        0176
*                                                                  0176
         BAL   @14,CALLRI                                          0176
*              SWITCH = SWITCHFS;                                  0177
         OI    SWITCH,B'10000000'                                  0177
*              END;                                                0178
*                                                                  0178
*            ELSE                                                  0179
*              DO;                                                 0179
         B     @RC00174                                            0179
@RF00174 DS    0H                                                  0180
*              /******************************************************/
*              /*                                                    */
*              /*  FUNCTION SUPPORT ROUTINE (FSR) PROCESSING NEXT    */
*              /*                                                    */
*              /******************************************************/
*                                                                  0180
*              CALL CALLFSR;                                       0180
*                                                                  0180
         BAL   @14,CALLFSR                                         0180
*              SWITCH = SWITCHRI;                                  0181
         NI    SWITCH,B'01111111'                                  0181
*              END;                                                0182
*                                                                  0182
*        END;                                                      0183
*                                                                  0183
@RC00174 DS    0H                                                  0183
@DE00173 LH    @10,MAXCOND                                         0183
         C     @10,@CF00459                                        0183
         BNL   @DC00173                                            0183
         LTR   EOFCOND,EOFCOND                                     0183
         BZ    @DL00173                                            0183
@DC00173 DS    0H                                                  0184
*        RETURN;                                                   0184
@EL00002 DS    0H                                                  0184
@EF00002 DS    0H                                                  0184
@ER00002 LM    @14,@12,@SA00002                                    0184
         BR    @14                                                 0184
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - CALLRI                                         */
*/*                                                                  */
*/*  FUNCTION - INVOKE THE READER/INTERPRETER TO PROCESS THE NEXT    */
*/*             INPUT IDCAMS COMMAND.  THE POOL AREA NAME IN WHICH   */
*/*             THE FDT WILL BE BUILT IS PASSED TO THE READER/       */
*/*             INTERPRETER.  (THIS POOL AREA WILL BE RELEASED BY    */
*/*             THE EXECUTIVE FOLLOWING FUNCTION PROCESSING)         */
*/*                                                          @YL026UD*/
*/*             ONE OF TWO AMS READER/INTERPRETERS WILL BE   @YL026UD*/
*/*             CALLED, DEPENDING UPON HOW AMS WAS INVOKED - @YL026UD*/
*/*             AS A PROCESSOR OR SUBROUTINE, OR AS A TSO    @YL026UD*/
*/*             COMMAND PROCESSOR.  THE SYSTEM ADAPTER HAS   @YL026UD*/
*/*             PLACED THE NAME OF THE PROPER READER/        @YL026UD*/
*/*             INTERPRETER IN THE 8-BYTE FIELD ADDRESSED    @YL026UD*/
*/*             BY 'GDTRIP'                                  @YL026UD*/
*/*                                                                  */
*/*  INPUT - MAXIMUM AND LAST FUNCTION CONDITION CODES - TO CONTROL  */
*/*          READER/INTERPRETER PROCESSING                           */
*/*                                                                  */
*/*  OUTPUT - FUNCTION SUPPORT ROUTINE NAME (RETURNED BY THE         */
*/*           READER/INTERPRETER)                                    */
*/*           FUNCTION DATA TABLE (BUILT BY THE READER/INTERPRETER)  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0185
*CALLRI: PROCEDURE;                                                0185
*                                                                  0185
CALLRI   STM   @14,@03,@SA00003                                    0185
         STM   @05,@12,@SA00003+24                                 0185
*        OLDERID2 = NEWERID2;                                      0186
         L     @10,@PC00001                                        0186
         L     @15,GDTTR2(,@10)                                    0186
         MVC   @TS00001(95),NEWERID2(@15)                          0186
         MVC   OLDERID2(95,@15),@TS00001                           0186
*        NEWID2 = 'EX1R';                                          0187
*                                                                  0187
         MVC   NEWID2(4,@15),@CC00576                              0187
*        IF GDTDBG = NULLPTR                                       0188
*          THEN;                                                   0188
         L     @10,GDTDBG(,@10)                                    0188
         LTR   @10,@10                                             0188
         BZ    @RT00188                                            0188
*          ELSE                                                    0190
*            CALL IDCDB010(GDTTBL,'EXRI');                         0190
*                                                                  0190
         L     @10,@PC00001                                        0190
         ST    @10,@AL00001                                        0190
         LA    @15,@CC00577                                        0190
         ST    @15,@AL00001+4                                      0190
         MVI   @AL00001+4,X'80'                                    0190
         L     @15,GDTDBG(,@10)                                    0190
         LA    @01,@AL00001                                        0190
         BALR  @14,@15                                             0190
*        /************************************************************/
*        /*                                                          */
*        /*  CALL THE READER/INTERPRETER                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0191
*        CALL IDCSACL0(GDTTBL,RINAME,FTABPTR,AREANAME,MAXCOND,LASTCOND,
*SRNAME);                                                          0191
*                                                                  0191
@RT00188 L     @10,@PC00001                                        0191
         ST    @10,@AL00001                                        0191
         L     @05,GDTRIP(,@10)                                    0191
         ST    @05,@AL00001+4                                      0191
         LA    @05,FTABPTR                                         0191
         ST    @05,@AL00001+8                                      0191
         LA    @05,@CC00556                                        0191
         ST    @05,@AL00001+12                                     0191
         LA    @05,MAXCOND                                         0191
         ST    @05,@AL00001+16                                     0191
         LA    @05,LASTCOND                                        0191
         ST    @05,@AL00001+20                                     0191
         LA    @05,FSRNAME                                         0191
         ST    @05,@AL00001+24                                     0191
         MVI   @AL00001+24,X'80'                                   0191
         L     @15,GDTCAL(,@10)                                    0191
         LA    @01,@AL00001                                        0191
         BALR  @14,@15                                             0191
*        /************************************************************/
*        /*                                                          */
*        /*  OBTAIN THE READER/INTERPRETER (END-OF-FILE) RETURN CODE */
*        /*                                                          */
*        /************************************************************/
*                                                                  0192
*        RESPECIFY RTNREG RSTD;                                    0192
*        TESTRC = RTNREG;                                          0193
         LR    TESTRC,RTNREG                                       0193
*        RESPECIFY RTNREG UNRSTD;                                  0194
*                                                                  0194
*        EOFCOND = TESTRC;                                         0195
*                                                                  0195
         LR    EOFCOND,TESTRC                                      0195
*        RETURN;                                                   0196
*                                                                  0196
@EL00003 DS    0H                                                  0196
@EF00003 DS    0H                                                  0196
@ER00003 LM    @14,@03,@SA00003                                    0196
         LM    @05,@12,@SA00003+24                                 0196
         BR    @14                                                 0196
*        END CALLRI;                                               0197
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - CALLFSR                                        */
*/*                                                                  */
*/*  FUNCTION - INVOKE THE FUNCTION SUPPORT ROUTINE (FSR) TO PROCESS */
*/*             THE UTILITY FUNCTION DESIRED.  FOLLOWING FUNCTION    */
*/*             PROCESSING, FREE THE AREA HELD BY THE FUNCTION DATA  */
*/*             TABLE (UFPOOL MACRO), AND RESET THE TEXT PROCESSING  */
*/*             OPTIONS TO THEIR DEFAULT VALUES (URESET MACRO)       */
*/*                                                                  */
*/*             THE LAST FUNCTION CONDITION CODE IS SET BY THE       */
*/*             FUNCTION SUPPORT ROUTINE.  THE MAXIMUM CONDITION     */
*/*             CODE IS UPDATED IF THE LAST FUNCTION CONDITION CODE  */
*/*             IS GREATER THAN THE MAXIMUM CONDITION CODE           */
*/*                                                                  */
*/*  INPUT - FSR NAME (RETURNED FROM READER/INTERPRETER)             */
*/*          FUNCTION DATA TABLE (FDT) (BUILT BY READER/INTERPRETER) */
*/*                                                                  */
*/*  OUTPUT - FUNCTION SUPPORT ROUTINE CONDITION CODE                */
*/*           UPDATED MAXIMUM SYSTEM CONDITION CODE                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0198
*CALLFSR: PROCEDURE;                                               0198
*                                                                  0198
CALLFSR  STM   @14,@12,@SA00004                                    0198
*        OLDERID2 = NEWERID2;                                      0199
         L     @10,@PC00001                                        0199
         L     @15,GDTTR2(,@10)                                    0199
         MVC   @TS00001(95),NEWERID2(@15)                          0199
         MVC   OLDERID2(95,@15),@TS00001                           0199
*        NEWID2 = 'EX1F';                                          0200
*                                                                  0200
         MVC   NEWID2(4,@15),@CC00581                              0200
*        IF GDTDBG = NULLPTR                                       0201
*          THEN;                                                   0201
         L     @10,GDTDBG(,@10)                                    0201
         LTR   @10,@10                                             0201
         BZ    @RT00201                                            0201
*          ELSE                                                    0203
*            CALL IDCDB010(GDTTBL,'EXFS');                         0203
*                                                                  0203
         L     @10,@PC00001                                        0203
         ST    @10,@AL00001                                        0203
         LA    @15,@CC00582                                        0203
         ST    @15,@AL00001+4                                      0203
         MVI   @AL00001+4,X'80'                                    0203
         L     @15,GDTDBG(,@10)                                    0203
         LA    @01,@AL00001                                        0203
         BALR  @14,@15                                             0203
*        /************************************************************/
*        /*                                                          */
*        /*  RESET THE LAST FUNCTION CONDITION CODE FOR CURRENT FSR  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0204
*        LASTCOND = CONDNONE;                                      0204
*                                                                  0204
@RT00201 SLR   @10,@10                                             0204
         STH   @10,LASTCOND                                        0204
*        /************************************************************/
*        /*                                                          */
*        /*  CALL THE FUNCTION SUPPORT ROUTINE (FSR)                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0205
*        CALL IDCSACL0(GDTTBL,FSRNAME,FTABLE,LASTCOND);            0205
*                                                                  0205
         L     @10,@PC00001                                        0205
         ST    @10,@AL00001                                        0205
         LA    @15,FSRNAME                                         0205
         ST    @15,@AL00001+4                                      0205
         L     @01,FTABPTR                                         0205
         ST    @01,@AL00001+8                                      0205
         LA    @15,LASTCOND                                        0205
         ST    @15,@AL00001+12                                     0205
         MVI   @AL00001+12,X'80'                                   0205
         L     @15,GDTCAL(,@10)                                    0205
         LA    @01,@AL00001                                        0205
         BALR  @14,@15                                             0205
*        /************************************************************/
*        /*                                                          */
*        /*  UPDATE THE MAXIMUM SYSTEM CONDITION CODE                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0206
*        MAXCOND = MAX(MAXCOND,LASTCOND);                          0206
*                                                                  0206
         LH    @10,MAXCOND                                         0206
         LH    @15,LASTCOND                                        0206
         CR    @10,@15                                             0206
         BNL   *+6
         LR    @10,@15                                             0206
         STH   @10,MAXCOND                                         0206
*        /************************************************************/
*        /*                                                          */
*        /*  FREE THE POOL AREA CONTAINING THE FUNCTION DATA TABLE   */
*        /*  BUILT FOR THE JUST-COMPLETED FUNCTION SUPPORT ROUTINE   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0207
*        CALL IDCSAFP0(GDTTBL,AREANAME,ALL);                       0207
*                                                                  0207
         MVC   @AL00001+4(8),@AL00207                              0207
         L     @10,@PC00001                                        0207
         ST    @10,@AL00001                                        0207
         L     @15,GDTFPL(,@10)                                    0207
         LA    @01,@AL00001                                        0207
         BALR  @14,@15                                             0207
*        /************************************************************/
*        /*                                                          */
*        /*  RESET THE TEXT PROCESSING AREA BACK TO INITIAL DEFAULTS */
*        /*  (DEFAULT PARAMETERS MAY HAVE BEEN OVERRIDDEN BY THE FSR)*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0208
*        CALL AMSTP044(GDTTBL,PRTFILE);                            0208
*                                                                  0208
         L     @10,@PC00001                                        0208
         ST    @10,@AL00001                                        0208
         LA    @15,@CF00105                                        0208
         ST    @15,@AL00001+4                                      0208
         MVI   @AL00001+4,X'80'                                    0208
         L     @15,GDTRES(,@10)                                    0208
         LA    @01,@AL00001                                        0208
         BALR  @14,@15                                             0208
*        RETURN;                                                   0209
*                                                                  0209
@EL00004 DS    0H                                                  0209
@EF00004 DS    0H                                                  0209
@ER00004 LM    @14,@12,@SA00004                                    0209
         BR    @14                                                 0209
*        END CALLFSR;                                              0210
*                                                                  0210
*                                                                  0210
*      END MAIN;                                                   0211
*                                                                  0211
*                                                                  0211
*    END IDCEX01                                                   0212
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*;                                                                 0212
@DATA    DS    0H
         DS    0F
@AL00207 DC    A(@CC00556)             LIST WITH   2 ARGUMENT(S)
         DC    AL1(X'80')
         DC    AL3(ALL)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@SA00003 DS    14F
@SA00004 DS    15F
@AL00001 DS    7A
IDCEX01  CSECT
         DS    0F
@CF00105 DC    F'0'
@CF00459 DC    F'16'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
DMPINDEX DS    A
FTABPTR  DS    A
LISTPTR  DS    A
MAXCOND  DS    H
LASTCOND DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
SWITCH   DS    BL1
FSRNAME  DS    CL8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCEX01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00550 DC    V(IDCEX02)
@CV00551 DC    V(IDCEX03)
         DS    0D
@CC00556 DC    C'EX00'
@CC00566 DC    C'EXMN'
@CC00570 DC    C'EX1M'
@CC00576 DC    C'EX1R'
@CC00577 DC    C'EXRI'
@CC00581 DC    C'EX1F'
@CC00582 DC    C'EXFS'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'EX01'
FIXAREA  DS    CL50
         ORG   FIXAREA
@NM00032 DC    50X'00'
         ORG   FIXAREA+50
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
EOFCOND  EQU   @04
TESTRC   EQU   @03
RTNREG   EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSACL0 EQU   0
IDCSAEP0 EQU   0
IDCSAFP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP044 EQU   0
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
FTABLE   EQU   0
RINAME   EQU   0
AMSTP011 EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
DMPTRM   EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTRIP   EQU   GDTTBL+116
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
@NM00031 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00030 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00029 EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IDCEX01,(C'PLS0605',0700,74284)
