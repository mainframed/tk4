         TITLE '**************IDCIO03 I/O OPERATIONS**(VS2)*************
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCIO03  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCIO03   76.118'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @10,0                                               0002
@PSTART  LA    @12,4095(,@10)                                      0002
         USING @PSTART,@10                                         0002
         USING @PSTART+4095,@12                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(8),0(@01)                                  0002
*                                                                  0249
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE TEXT PROCESSOR ARGUMENT LIST                  */
*        /* SET DEFAULT ERROR MODULE ID.  ID IS REPLACED IF          */
*        /* ERROR MESSAGE IS IN DIFFERENT MODULE.                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0250
*                                                                  0250
*        DDSTRU = ADDR (DMSGARG);                                  0250
         LA    @15,DMSGARG                                         0250
         ST    @15,DDSTRU                                          0250
*        DMSGARG = ''B;                                            0251
         XC    DMSGARG(44),DMSGARG                                 0251
*        DARGSMOD = 'IO0';                                         0252
*                                                                  0252
         MVC   DARGSMOD(3,@15),@CC01328                            0252
*        TESTRC = 4;                                       /*@YL026UH*/
*                                                                  0253
         MVC   TESTRC(2),@CH00039                                  0253
*        IF OPRTYP = OPRTYPUO                                      0254
*          THEN                                                    0254
*                                                                  0254
         L     @15,@PC00001+4                                      0254
         CLI   OPRTYP(@15),3                                       0254
         BNE   @RF00254                                            0254
*          /**********************************************************/
*          /*                                                @Y30LSFY*/
*          /* FOR UIOINFO REQUEST, CALL DSINFO               @Y30LSFY*/
*          /*                                                @Y30LSFY*/
*          /**********************************************************/
*                                                                  0255
*            DO;                                           /*@Y30LSFY*/
*                                                                  0255
*              CALL DSINFO;                                /*@Y30LSFY*/
*                                                                  0256
         BAL   @14,DSINFO                                          0256
*              RESPECIFY RTNREG RSTD;                              0257
*              TESTRC = RTNREG;                                    0258
         STH   RTNREG,TESTRC                                       0258
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30LSFY*/
*                                                                  0259
*              CALL IDCSAEP0(GDTTBL,MODID,TESTRC);                 0260
         L     @15,@PC00001                                        0260
         ST    @15,@AL00001                                        0260
         LA    @14,MODID                                           0260
         ST    @14,@AL00001+4                                      0260
         LA    @14,TESTRC                                          0260
         ST    @14,@AL00001+8                                      0260
         MVI   @AL00001+8,X'80'                                    0260
         L     @15,GDTEPL(,@15)                                    0260
         LA    @01,@AL00001                                        0260
         BALR  @14,@15                                             0260
*        /*@Y30LSFY*/                                              0261
*                                                                  0261
*            END;                                          /*@Y30LSFY*/
*                                                                  0261
*        IF OPRTYP = OPRTYPPO                                      0262
*          THEN                                                    0262
*                                                                  0262
@RF00254 L     @15,@PC00001+4                                      0262
         CLI   OPRTYP(@15),1                                       0262
         BNE   @RF00262                                            0262
*            /********************************************************/
*            /*                                                      */
*            /* IF POSITION REQUEST SET ADDRESSIBILITY TO IOCS.      */
*            /* IF THE IOCS HAS NOT BEEN BUILT OR THE DATA SET IS    */
*            /* NOT OPEN SET ERROR CODE AND RETURN.                  */
*            /*                                                      */
*            /********************************************************/
*                                                                  0263
*POSITREQ:   DO;                                                   0263
*                                                                  0263
POSITREQ DS    0H                                                  0264
*              IOCSPTR = OPRICS;                                   0264
*                                                                  0264
         L     @15,@PC00001+4                                      0264
         L     @15,OPRICS(,@15)                                    0264
         ST    @15,IOCSPTR                                         0264
*              IF IOCSPTR = NULLPTR × IOCMSGOP = OFF               0265
*                THEN                                              0265
*                                                                  0265
         LTR   @15,@15                                             0265
         BZ    @RT00265                                            0265
         TM    IOCMSGOP(@15),B'00100000'                           0265
         BNZ   @RF00265                                            0265
@RT00265 DS    0H                                                  0266
*                  DO;                                             0266
*                    RESPECIFY(REG13,REG14,REG15) RSTD;            0267
*                    REG15 = 32;                                   0268
         LA    REG15,32                                            0268
*                    REG14 = GDTABT;                               0269
         L     @09,@PC00001                                        0269
         L     REG14,GDTABT(,@09)                                  0269
*                    REG13 = GDTABH;                               0270
         L     REG13,GDTABH(,@09)                                  0270
*                    GEN(BR    REG14);                             0271
         BR    REG14
*                    RESPECIFY(REG13,REG14,REG15)UNRSTD;           0272
*                  END;                                            0273
*                                                                  0273
*              /******************************************************/
*              /*                                                    */
*              /* IF DATA SET IS EXTERNAL NO POSITION IS DONE.       */
*              /*                                                    */
*              /******************************************************/
*                                                                  0274
*              IF IOCFLGEX = ON                                    0274
*                THEN                                              0274
@RF00265 L     @01,IOCSPTR                                         0274
         L     @01,IOCEXT(,@01)                                    0274
         TM    IOCFLGEX(@01),B'10000000'                           0274
         BNO   @RF00274                                            0274
*                  DO;                                             0275
*                  SETRC = 0;                                      0276
         SLR   @15,@15                                             0276
         STH   @15,SETRC                                           0276
*                  CALL IDCSAEP0(GDTTBL,MODID,SETRC);              0277
         L     @15,@PC00001                                        0277
         ST    @15,@AL00001                                        0277
         LA    @14,MODID                                           0277
         ST    @14,@AL00001+4                                      0277
         LA    @14,SETRC                                           0277
         ST    @14,@AL00001+8                                      0277
         MVI   @AL00001+8,X'80'                                    0277
         L     @15,GDTEPL(,@15)                                    0277
         LA    @01,@AL00001                                        0277
         BALR  @14,@15                                             0277
*                  END;                                            0278
*                                                                  0278
*                                                                  0278
*              /******************************************************/
*              /*                                                    */
*              /* POSITION TO THE REQUEST RECORD.                    */
*              /*                                                    */
*              /******************************************************/
*                                                                  0279
*              /******************************************************/
*              /*                                                    */
*              /* FOR VSAM DATA SET POSITION TO VSAM RECORD          */
*              /*                                                    */
*              /******************************************************/
*                                                                  0279
*              IF IOCDSOAM = ON                                    0279
*                THEN                                              0279
@RF00274 L     @01,IOCSPTR                                         0279
         TM    IOCDSOAM(@01),B'10000000'                           0279
         BNO   @RF00279                                            0279
*                  DO;                                             0280
*                                                                  0280
*                    CALL PTAMDS;                                  0281
         BAL   @14,PTAMDS                                          0281
*                    RESPECIFY RTNREG RSTD;                        0282
*                    TESTRC = RTNREG;                              0283
         STH   RTNREG,TESTRC                                       0283
*                    RESPECIFY RTNREG UNRSTD;                      0284
*                                                                  0284
*                  END;                                            0285
*                                                                  0285
*                ELSE                                              0286
*PTNONAM:          DO;                                             0286
*                                                                  0286
         B     @RC00279                                            0286
@RF00279 DS    0H                                                  0286
PTNONAM  DS    0H                                                  0287
*                    /************************************************/
*                    /*                                              */
*                    /* FOR ISAM POINT BY KEY, FOR BSAM      @YL026UH*/
*                    /* POINT BY TTR.                        @YL026UH*/
*                    /*                                              */
*                    /************************************************/
*                                                                  0287
*                    IF IOCDSOIS = ON × IOCMACBK = ON              0287
*                      THEN                                        0287
         L     @15,IOCSPTR                                         0287
         TM    IOCDSOIS(@15),B'00100000'                           0287
         BO    @RT00287                                            0287
         TM    IOCMACBK(@15),B'00001000'                           0287
         BNO   @RF00287                                            0287
@RT00287 DS    0H                                                  0288
*                        DO;                                       0288
*                                                                  0288
*                          CALL PTISDS;                            0289
         BAL   @14,PTISDS                                          0289
*                          RESPECIFY RTNREG RSTD;                  0290
*                          TESTRC = RTNREG;                        0291
         STH   RTNREG,TESTRC                                       0291
*                          RESPECIFY RTNREG UNRSTD;                0292
*                                                                  0292
*                        END;                                      0293
*                                                                  0293
*                      ELSE                                        0294
*                                                                  0294
*                        /********************************************/
*                        /*                                          */
*                        /* POSITION REQUEST VALID FOR AM/0 AND      */
*                        /* ISAM DATA SETS ONLY.  SET ERROR          */
*                        /*                                          */
*                        /********************************************/
*                                                                  0294
*                        DARGSENT = NPOSSTID;              /*@YL026UH*/
*                                                                  0294
         B     @RC00287                                            0294
@RF00287 L     @01,DDSTRU                                          0294
         MVI   DARGSENT(@01),X'0E'                                 0294
*                  END PTNONAM;                                    0295
*                                                                  0295
@RC00287 DS    0H                                                  0296
*            END POSITREQ;                                 /*@YL026UH*/
*                                                                  0296
@RC00279 DS    0H                                                  0297
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* FOR STOW REQUEST CALL STOWRTN.                   @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0297
*        IF OPRTYP = OPRTYPST                                      0297
*          THEN                                                    0297
@RF00262 L     @15,@PC00001+4                                      0297
         CLI   OPRTYP(@15),2                                       0297
         BNE   @RF00297                                            0297
*            DO;                                           /*@YL026UH*/
*              CALL STOWRTN;                               /*@YL026UH*/
         BAL   @14,STOWRTN                                         0299
*              RESPECIFY RTNREG RSTD;                              0300
*              TESTRC = RTNREG;                                    0301
         STH   RTNREG,TESTRC                                       0301
*              RESPECIFY RTNREG UNRSTD;                    /*@YL026UH*/
*            END;                                          /*@YL026UH*/
*                                                                  0303
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* SET RETURN CODE AND PRINT MESSAGES               @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0304
*        SETRC = TESTRC;                                   /*@YL026UH*/
*                                                                  0304
@RF00297 LH    @15,TESTRC                                          0304
         STH   @15,SETRC                                           0304
*        IF DARGSENT ^= 0                                          0305
*          THEN                                                    0305
         L     @01,DDSTRU                                          0305
         CLI   DARGSENT(@01),0                                     0305
         BE    @RF00305                                            0305
*            CALL BLDAMSG;                                 /*@YL026UH*/
*                                                                  0306
         BAL   @14,BLDAMSG                                         0306
*        IF GDTDBG = NULLPTR                                       0307
*          THEN;                                                   0307
@RF00305 L     @15,@PC00001                                        0307
         L     @15,GDTDBG(,@15)                                    0307
         LTR   @15,@15                                             0307
         BZ    @RT00307                                            0307
*          ELSE                                                    0309
*            CALL IDCDB010 (GDTTBL,'IOPO');                        0309
         L     @15,@PC00001                                        0309
         ST    @15,@AL00001                                        0309
         LA    @14,@CC01338                                        0309
         ST    @14,@AL00001+4                                      0309
         MVI   @AL00001+4,X'80'                                    0309
         L     @15,GDTDBG(,@15)                                    0309
         LA    @01,@AL00001                                        0309
         BALR  @14,@15                                             0309
*                                                          /*@YL026UH*/
*                                                                  0310
*                                                                  0310
*        CALL IDCSAEP0(GDTTBL,MODID,SETRC);                        0310
@RT00307 L     @15,@PC00001                                        0310
         ST    @15,@AL00001                                        0310
         LA    @14,MODID                                           0310
         ST    @14,@AL00001+4                                      0310
         LA    @14,SETRC                                           0310
         ST    @14,@AL00001+8                                      0310
         MVI   @AL00001+8,X'80'                                    0310
         L     @15,GDTEPL(,@15)                                    0310
         LA    @01,@AL00001                                        0310
         BALR  @14,@15                                             0310
*       /*@YL026UH*/                                               0311
*                                                                  0311
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - PTAMDS                                  */
*        /*                                                          */
*        /* FUNCTION - THIS PROCEDURE WILL POSITION TO AN AM/0       */
*        /*            LOGICAL RECORD BY KEY OR RBA OR POSITION      */
*        /*            TO A  VSAM CONTROL INTERVAL BY RBA.   @Y30SSFY*/
*        /*                                                          */
*        /* INPUT -    IOCSPTR - ADDRESS OF THE IOCSTR DEFINING      */
*        /*            THE POSITIONING AND DATA SET.                 */
*        /*                                                          */
*        /* OUTPUT -   RETURN CODE IS SET AND/OR THE DATA RECORD     */
*        /*            IS POSITIONED TO.                             */
*        /*                                                          */
*        /* ERRORS -   1. LOGICAL ERROR DURING POINT (MSG WRITTEN).  */
*        /*            2. RECORD NOT FOUND (NO MSG WRITTEN).         */
*        /*            3. PERMANENT I/O ERROR DURING POINT           */
*        /*            4. POSITION KEY LONGER THAN DATA SET KEY LGT. */
*        /*                                                          */
*        /************************************************************/
*                                                                  0311
*PTAMDS: PROC OPTIONS (SAVEAREA);                                  0311
*                                                                  0311
@EL00001 L     @13,4(,@13)                                         0311
@EF00001 L     @00,@SIZDATD                                        0311
         LR    @01,@11                                             0311
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0311
         BR    @14                                                 0311
PTAMDS   STM   @14,@12,12(@13)                                     0311
         ST    @13,@SA00002+4                                      0311
         LA    @14,@SA00002                                        0311
         ST    @14,8(,@13)                                         0311
         LR    @13,@14                                             0311
*        /* RETURN CODE FROM THIS POINT ROUTINE                      */
*        DCL PTAMRC FIXED (15);                                    0312
*        RFY IFGRPL BASED(IOCRPL);                         /*@Z40GSFY*/
*        RFY IFGEXLST BASED(IOCEXA);                       /*@Z40GSFY*/
*                                                                  0314
*        /* INITIALIZE RETURN CODE AND SET TRACE.                    */
*                                                                  0315
*        PTAMRC = 0;                                               0315
         SLR   PTAMRC,PTAMRC                                       0315
*        OLDERID2 = NEWERID2;                                      0316
         L     @03,@PC00001                                        0316
         L     @03,GDTTR2(,@03)                                    0316
         MVC   @TS00001(95),NEWERID2(@03)                          0316
         MVC   OLDERID2(95,@03),@TS00001                           0316
*        NEWID2 = 'IOVT';                                          0317
*                                                                  0317
         MVC   NEWID2(4,@03),@CC01345                              0317
*        IF IOCMACRR = ON                                          0318
*          THEN                                                    0318
*                                                                  0318
         L     @03,IOCSPTR                                         0318
         TM    IOCMACRR(@03),B'00100000'                           0318
         BNO   @RF00318                                            0318
*            /********************************************************/
*            /*                                              @Y30SSFY*/
*            /* DATA-SET IS RRDS.  POSITION BY RELATIVE RECORD.  SET */
*            /* THE RPL TO POINT TO THE REL. RECORD NO.      @Y30SSFY*/
*            /*                                              @Y30SSFY*/
*            /********************************************************/
*            RPLARG = ADDR (IOCREL);                       /*@Z40GSFY*/
*                                                                  0319
         L     @01,IOCEXT(,@03)                                    0319
         L     @01,IOCRPL(,@01)                                    0319
         LA    @03,IOCREL(,@03)                                    0319
         ST    @03,RPLARG(,@01)                                    0319
*          ELSE                                                    0320
*                                                                  0320
*        IF IOCMACCR = ON × IOCMACBK = ON                          0320
*          THEN                                                    0320
*                                                                  0320
         B     @RC00318                                            0320
@RF00318 L     @03,IOCSPTR                                         0320
         TM    IOCMACCR(@03),B'00011000'                           0320
         BZ    @RF00320                                            0320
*            /********************************************************/
*            /*                                                      */
*            /* TYPE OF ACCESS IS ADDRESSED OR CONTROL INTERVAL,     */
*            /* POSITION BY RBA. SET THE RBA IN THE RPL.     @Y30SSFY*/
*            /*                                                      */
*            /********************************************************/
*                                                                  0321
*            RPLARG = ADDR (IOCRBA);                       /*@Z40GSFY*/
*                                                                  0321
         L     @01,IOCEXT(,@03)                                    0321
         L     @01,IOCRPL(,@01)                                    0321
         LA    @03,IOCRBA(,@03)                                    0321
         ST    @03,RPLARG(,@01)                                    0321
*          ELSE                                                    0322
*                                                                  0322
*            /********************************************************/
*            /*                                                      */
*            /* DATA SET IS OPENED FOR KEYED SEQUENTIAL PROCESS.     */
*            /* CHECK LENGTH AND IF CORRECT SET KEY ADDR IN RPL.     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0322
*AMLOGDS:    DO;                                                   0322
*                                                                  0322
         B     @RC00320                                            0322
@RF00320 DS    0H                                                  0322
AMLOGDS  DS    0H                                                  0323
*              IF IOCPTL > IOCKYL                                  0323
*                THEN                                              0323
*                                                                  0323
         L     @03,IOCSPTR                                         0323
         LH    @15,IOCPTL(,@03)                                    0323
         SLR   @14,@14                                             0323
         IC    @14,IOCKYL(,@03)                                    0323
         CR    @15,@14                                             0323
         BNH   @RF00323                                            0323
*                  /**************************************************/
*                  /*                                                */
*                  /* USER SUPPLIED KEY IS LPNGER THAN KEY LENGTH    */
*                  /* OF DATA SET.  SET ERROR CONDITION.             */
*                  /*                                                */
*                  /**************************************************/
*                                                                  0324
*                  DO;                                             0324
*                    DARGSENT = LKEYSTID;                          0325
         L     @03,DDSTRU                                          0325
         MVI   DARGSENT(@03),X'0D'                                 0325
*                    PTAMRC = 4;                                   0326
         LA    PTAMRC,4                                            0326
*                  END;                                            0327
*                                                                  0327
*                ELSE                                              0328
*                                                                  0328
*                  /**************************************************/
*                  /*                                                */
*                  /* VALID LENGTH KEY.  PAD TO RIGHT WITH BINARY    */
*                  /* ZEROES TO ALWAYS MAKE FULL KEY (SUPPLIED       */
*                  /* KEY MAY ALREADY BE FULL).  SET THE KEY         */
*                  /* ADDRESS IN THE RPL.                            */
*                  /*                                                */
*                  /**************************************************/
*                                                                  0328
*                  DO;                                             0328
         B     @RC00323                                            0328
@RF00323 DS    0H                                                  0329
*                    TEMPKEY = ''B;                                0329
         XC    TEMPKEY(256),TEMPKEY                                0329
*                    KEYCLASS (1:IOCPTL) = MOVEKEY (1:IOCPTL);     0330
*                                                                  0330
         L     @03,IOCSPTR                                         0330
         LH    @15,IOCPTL(,@03)                                    0330
         BCTR  @15,0                                               0330
         L     @01,IOCKYA(,@03)                                    0330
         EX    @15,@SM01828                                        0330
*                    RPLARG = ADDR (KEYCLASS);             /*@Z40GSFY*/
         L     @03,IOCEXT(,@03)                                    0331
         L     @03,IOCRPL(,@03)                                    0331
         LA    @15,KEYCLASS                                        0331
         ST    @15,RPLARG(,@03)                                    0331
*                  END;                                            0332
*                                                                  0332
*            END AMLOGDS;                                          0333
*                                                                  0333
@RC00323 DS    0H                                                  0334
*        IF PTAMRC = 0                                             0334
*          THEN                                                    0334
*                                                                  0334
@RC00320 DS    0H                                                  0334
@RC00318 LTR   PTAMRC,PTAMRC                                       0334
         BNZ   @RF00334                                            0334
*            /********************************************************/
*            /*                                                      */
*            /* RPL IS READY FOR POINT.  SET THE             @Z40GSFY*/
*            /* EODAD ADDRESS IN EXIT LIST INACTIVE.         @Z40GSFY*/
*            /* POINT TO THE VSAM RECORD.                    @Z40GSFY*/
*            /*                                                      */
*            /********************************************************/
*                                                                  0335
*AMPOINT:    DO;                                                   0335
*                                                                  0335
AMPOINT  DS    0H                                                  0336
*              EXLEODF(2) = OFF;                           /*@Z40GSFY*/
*                                                                  0336
         L     @03,IOCSPTR                                         0336
         L     @03,IOCEXT(,@03)                                    0336
         L     @01,IOCEXA(,@03)                                    0336
         NI    EXLEODF(@01),B'10111111'                            0336
*              RESPECIFY (REG7) RSTD;                              0337
*              REG7 = IOCRPL;                                      0338
*                                                                  0338
         L     REG7,IOCRPL(,@03)                                   0338
*LPOINT1:      GEN(POINT RPL=(REG7));                              0339
LPOINT1  POINT RPL=(REG7)
*              RESPECIFY RTNREG RSTD;                              0340
*              TESTRC = RTNREG;                                    0341
         STH   RTNREG,TESTRC                                       0341
*              RESPECIFY RTNREG UNRSTD;                            0342
*                                                                  0342
*              RESPECIFY (REG7) UNRSTD;                    /*@Z40GSFY*/
*                                                                  0343
*              /******************************************************/
*              /*                                                    */
*              /* REACTIVATE THE EODAD ADDRESS IN THE        @Z40GSFY*/
*              /* EXIT LIST.                                 @Z40GSFY*/
*              /*                                                    */
*              /******************************************************/
*                                                                  0344
*              EXLEODF(2) = ON;                            /*@Z40GSFY*/
*                                                                  0344
         L     @03,IOCSPTR                                         0344
         L     @03,IOCEXT(,@03)                                    0344
         L     @03,IOCEXA(,@03)                                    0344
         OI    EXLEODF(@03),B'01000000'                            0344
*              IF TESTRC ^= 0                                      0345
*                THEN                                              0345
*                                                                  0345
         LH    @03,TESTRC                                          0345
         LTR   @03,@03                                             0345
         BZ    @RF00345                                            0345
*                  /**************************************************/
*                  /*                                                */
*                  /* ERROR WAS DETECTED BY VSAM DURING POINT        */
*                  /*                                                */
*                  /**************************************************/
*                                                                  0346
*AMPTERR:          DO;                                             0346
*                                                                  0346
AMPTERR  DS    0H                                                  0347
*                    PTAMRC = 4;                                   0347
*                                                                  0347
         LA    PTAMRC,4                                            0347
*                    /************************************************/
*                    /*                                      @Z30PSFY*/
*                    /* IF ERROR MESSAGE SUPPRESSION WAS     @Z30PSFY*/
*                    /* REQUESTED, AND ERROR WAS LOGICAL, RETURN     */
*                    /*                                      @Z30PSFY*/
*                    /************************************************/
*                                                                  0348
*                    IF IOCMSGSM = ON & TESTRC = VRCLERAD          0348
*                      THEN                                        0348
         L     @03,IOCSPTR                                         0348
         TM    IOCMSGSM(@03),B'00000010'                           0348
         BNO   @RF00348                                            0348
         CLC   TESTRC(2),@CH00176                                  0348
         BNE   @RF00348                                            0348
*                        RETURN CODE(PTAMRC);              /*@Z30PSFY*/
*                                                                  0349
         LR    @15,PTAMRC                                          0349
         L     @13,4(,@13)                                         0349
         L     @14,12(,@13)                                        0349
         LM    @00,@12,20(@13)                                     0349
         BR    @14                                                 0349
*                    /************************************************/
*                    /*                                              */
*                    /* IF AN I/O ERROR WAS DETECTED THE MESSAGE     */
*                    /* AREA IS CHECKED TO SEE IF A FORMATTED        */
*                    /* MESSAGE HAS BEEN BUILT.  IF ONE HAS IT IS    */
*                    /* PRINTED AS AN ERROR MESSAGE, OTHERWISE       */
*                    /* A STANDARD MESSAGE IS PRINTED.               */
*                    /*                                              */
*                    /************************************************/
*                                                                  0350
*                    IF TESTRC = VRCSYNAD                          0350
*                      THEN                                        0350
*                                                                  0350
@RF00348 CLC   TESTRC(2),@CH00035                                  0350
         BNE   @RF00350                                            0350
*                        /********************************************/
*                        /*                                          */
*                        /* I/O ERROR DETECTED.  SET ERROR DATA      */
*                        /*                                          */
*                        /********************************************/
*                                                                  0351
*                        DO;                                       0351
*                                                                  0351
*                          IOCMSGOP = OFF;                         0352
*                                                                  0352
         L     @03,IOCSPTR                                         0352
         NI    IOCMSGOP(@03),B'11011111'                           0352
*                          IF MSLENGTH = 0                         0353
*                            THEN                                  0353
         L     @03,@PC00001                                        0353
         L     @03,GDTIOH(,@03)                                    0353
         L     @03,IODMSG(,@03)                                    0353
         ICM   @15,3,MSLENGTH(@03)                                 0353
         BNZ   @RF00353                                            0353
*                              DARGSENT = SYNDSTID;                0354
*                                                                  0354
         L     @03,DDSTRU                                          0354
         MVI   DARGSENT(@03),X'13'                                 0354
*                            ELSE                                  0355
*                              DO;                                 0355
*                                                                  0355
         B     @RC00353                                            0355
@RF00353 DS    0H                                                  0356
*                                DARGSENT = SYVSSTID;              0356
         L     @03,DDSTRU                                          0356
         MVI   DARGSENT(@03),X'0B'                                 0356
*                                SYNPRINT (1:116) = MESSAGE (13:128);
         L     @15,@PC00001                                        0357
         L     @01,GDTIOH(,@15)                                    0357
         L     @01,IODMSG(,@01)                                    0357
         MVC   SYNPRINT(116),MESSAGE+12(@01)                       0357
*                                DARGDBP = ADDR (SYNPRINT);        0358
         LA    @15,SYNPRINT                                        0358
         ST    @15,DARGDBP(,@03)                                   0358
*                                DARGILP = 116;                    0359
*                                                                  0359
         MVC   DARGILP(2,@03),@CH01195                             0359
*                              END;                                0360
*                                                                  0360
*                        END;                                      0361
*                                                                  0361
@RC00353 DS    0H                                                  0362
*                    /************************************************/
*                    /*                                              */
*                    /* IF A LOGICAL ERROR WAS DETECTED AND WAS      */
*                    /* NOT A NO RECORD FOUND CONDITION, AN ERROR    */
*                    /* MESSAGE IS SET.                      @Z40GSFY*/
*                    /*                                              */
*                    /************************************************/
*                                                                  0362
*                    IF TESTRC = VRCLERAD                          0362
*                      THEN                                        0362
*                                                                  0362
@RF00350 CLC   TESTRC(2),@CH00176                                  0362
         BNE   @RF00362                                            0362
*                        /********************************************/
*                        /*                                          */
*                        /* LOGICAL ERROR DETECTED.                  */
*                        /*                                          */
*                        /********************************************/
*                                                                  0363
*                        DO;                                       0363
*                                                                  0363
*                          IOCMSGOP = OFF;                         0364
*                                                                  0364
         L     @03,IOCSPTR                                         0364
         NI    IOCMSGOP(@03),B'11011111'                           0364
*                          IF RPLERRCD = RPLNOREC × RPLERRCD = RPLEODER
*                            THEN                                  0365
*                                                                  0365
         L     @03,IOCEXT(,@03)                                    0365
         L     @03,IOCRPL(,@03)                                    0365
         CLI   RPLERRCD(@03),16                                    0365
         BE    @RT00365                                            0365
         CLI   RPLERRCD(@03),4                                     0365
         BNE   @RF00365                                            0365
@RT00365 DS    0H                                                  0366
*                              /**************************************/
*                              /*                                    */
*                              /* RECORD NOT FOUND IN DATA SET.      */
*                              /*                                    */
*                              /**************************************/
*                                                                  0366
*                              PTAMRC = 8;                 /*@Z40GSFY*/
*                                                                  0366
         LA    PTAMRC,8                                            0366
*                            ELSE                                  0367
*                                                                  0367
*                              /**************************************/
*                              /*                                    */
*                              /* SET TEXT PROCESSOR DATA            */
*                              /*                                    */
*                              /**************************************/
*                                                                  0367
*                              DO;                                 0367
         B     @RC00365                                            0367
@RF00365 DS    0H                                                  0368
*                                DARGSENT = VERRSTID;              0368
         L     @03,DDSTRU                                          0368
         MVI   DARGSENT(@03),X'09'                                 0368
*                                DARGCNT = 2;              /*@Z40GSFY*/
         LA    @15,2                                               0369
         STH   @15,DARGCNT(,@03)                                   0369
*                                DARGINS(1) = 1;           /*@Z40GSFY*/
         LA    @14,1                                               0370
         STH   @14,DARGINS(,@03)                                   0370
*                                DARGINL(1) = LENGTH(IOTEXT);      0371
         MVC   DARGINL(2,@03),@CH00432                             0371
*                                                          /*@Z40GSFY*/
*                                DARGDTM(1) = ADDR(IOTEXT);/*@Z40GSFY*/
         LA    @09,IOTEXT                                          0372
         ST    @09,DARGDTM(,@03)                                   0372
*                                DARGINS(2) = 2;           /*@Z40GSFY*/
         STH   @15,DARGINS+8(,@03)                                 0373
*                                DARGINL(2) = LENGTH(RPLERRCD);    0374
         STH   @14,DARGINL+8(,@03)                                 0374
*                                                          /*@Z40GSFY*/
*                                DARGDTM(2) = ADDR(RPLERRCD);      0375
         L     @01,IOCSPTR                                         0375
         L     @01,IOCEXT(,@01)                                    0375
         L     @01,IOCRPL(,@01)                                    0375
         LA    @15,RPLERRCD(,@01)                                  0375
         ST    @15,DARGDTM+8(,@03)                                 0375
*                                                          /*@Z40GSFY*/
*                              END;                                0376
*                                                                  0376
*                        END;                                      0377
*                                                                  0377
@RC00365 DS    0H                                                  0378
*                    IOCMSGAE = ON;                        /*#YL026UH*/
@RF00362 L     @03,IOCSPTR                                         0378
         OI    IOCMSGAE(@03),B'00000100'                           0378
*                    IOCVRC = IOCVRC && IOCVRC;            /*@Z40GSFY*/
         XC    IOCVRC(4,@03),IOCVRC(@03)                           0379
*                    IOCVRC(3:3) = RPLERRCD;               /*@Z40GSFY*/
*                                                                  0380
         L     @01,IOCEXT(,@03)                                    0380
         L     @01,IOCRPL(,@01)                                    0380
         IC    @00,RPLERRCD(,@01)                                  0380
         STC   @00,IOCVRC+2(,@03)                                  0380
*                  END AMPTERR;                                    0381
*                                                                  0381
*            END AMPOINT;                                          0382
*                                                                  0382
@RF00345 DS    0H                                                  0383
*        RETURN CODE (PTAMRC);                                     0383
*                                                                  0383
@RF00334 LR    @15,PTAMRC                                          0383
         L     @13,4(,@13)                                         0383
         L     @14,12(,@13)                                        0383
         LM    @00,@12,20(@13)                                     0383
         BR    @14                                                 0383
*        END PTAMDS;                                               0384
*                                                                  0384
*                                                                  0385
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - PTISDS                                  */
*        /*                                                          */
*        /* FUNCTION - THIS PROCEDURE IS CALLED TO POSITION TO       */
*        /*            A RECORD IN AN ISAM DATA SET,         @YL026UH*/
*        /*            OR BLOCK IN BSAM DATA SET.            @YL026UH*/
*        /*                                                          */
*        /* INPUT -    IOCSPTR - ADDRESS OF IOCS DEFINING OPEN       */
*        /*            ISAM OR BSAM DATA SET.                @YL026UH*/
*        /*                                                          */
*        /* OUTPUT -   DATA RECORD IS POSITIONED TO.                 */
*        /*            PHYSICAL BLOCK POSITIONED TO.         @YL026UH*/
*        /*                                                          */
*        /*            RETURN CODE IS SET INDICATING RESULT OF       */
*        /*            THE POSITION REQUEST.                         */
*        /*                                                          */
*        /* ERRORS -   1. DATA SET ORGANIZATION NOT ISAM.            */
*        /*            2. RECORD NOT FOUND IN ISAM DATA SET.         */
*        /*            3. POSITION ARGUMENT LONGER THAN KEY LENGTH.  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0385
*PTISDS: PROC OPTIONS (SAVEAREA);                                  0385
*                                                                  0385
PTISDS   STM   @14,@12,12(@13)                                     0385
         ST    @13,@SA00003+4                                      0385
         LA    @14,@SA00003                                        0385
         ST    @14,8(,@13)                                         0385
         LR    @13,@14                                             0385
*        /************************************************************/
*        /*                                                          */
*        /* DECLARES USED ONLY BY THIS PROCEDURE.                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0386
*        OLDERID2 = NEWERID2;                                      0386
         L     @15,@PC00001                                        0386
         L     @15,GDTTR2(,@15)                                    0386
         MVC   @TS00001(95),NEWERID2(@15)                          0386
         MVC   OLDERID2(95,@15),@TS00001                           0386
*        NEWID2 = 'IOOT';                                          0387
*                                                                  0387
         MVC   NEWID2(4,@15),@CC01358                              0387
*        /*************************************************  @YL026UH*/
*        /*                                                  #YL026UH*/
*        /* IF THE DATA SET IS OPENED FOR BLOCK PROCESSING   #YL026UH*/
*        /* THE POINT BY TTR MACRO IS ISSUED.                #YL026UH*/
*        /* NO ERRORS CAN BE ENCOUNTERED AND CONTROL RETURNS @YL026UH*/
*        /* WITH A RETURN CODE OF RCOK.                      #YL026UH*/
*        /*                                                  #YL026UH*/
*        /*************************************************  #YL026UH*/
*                                                                  0388
*        IF IOCMACBK = ON                                          0388
*          THEN                                                    0388
         L     @01,IOCSPTR                                         0388
         TM    IOCMACBK(@01),B'00001000'                           0388
         BNO   @RF00388                                            0388
*TTRPNT:     DO;                                           /*#YL026UH*/
*                                                                  0389
TTRPNT   DS    0H                                                  0390
*              RFY (REG6) RSTD;                            /*#YL026UH*/
*              RFY (REG7) RSTD;                            /*#YL026UH*/
*                                                                  0391
*              REG6 = IOCCBA;                              /*#YL026UH*/
         L     @15,IOCSPTR                                         0392
         L     @01,IOCEXT(,@15)                                    0392
         L     REG6,IOCCBA(,@01)                                   0392
*              REG7 = ADDR (IOCTTR);                       /*#YL026UH*/
*                                                                  0393
         LA    REG7,IOCTTR(,@15)                                   0393
*LPOINT2:      GEN(POINT (REG6),(REG7));                   /*#YL026UH*/
*                                                                  0394
LPOINT2  POINT (REG6),(REG7)
*              RFY (REG6) UNRSTD;                          /*#YL026UH*/
*              RFY (REG7) UNRSTD;                          /*#YL026UH*/
*                                                                  0396
*              RETURN CODE (0);                            /*#YL026UH*/
*                                                                  0397
         SLR   @15,@15                                             0397
         L     @13,4(,@13)                                         0397
         L     @14,12(,@13)                                        0397
         LM    @00,@12,20(@13)                                     0397
         BR    @14                                                 0397
*            END TTRPNT;                                   /*#YL026UH*/
*                                                                  0398
*        /************************************************************/
*        /*                                                          */
*        /* IF THE ARGUMENT FOR THE RECORD (KEY) TO POSITION TO      */
*        /* IS LONGER THAN THE KEY LENGTH OF THE DATA SET AN ERROR   */
*        /* IS SET AND CONTROL RETURNS TO THE CALLER.                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0399
*        IF IOCPTL > IOCKYL                                        0399
*          THEN                                                    0399
@RF00388 L     @15,IOCSPTR                                         0399
         LH    @14,IOCPTL(,@15)                                    0399
         SLR   @09,@09                                             0399
         IC    @09,IOCKYL(,@15)                                    0399
         CR    @14,@09                                             0399
         BNH   @RF00399                                            0399
*            DO;                                                   0400
*                                                                  0400
*              DARGSENT = LKEYSTID;                                0401
         L     @01,DDSTRU                                          0401
         MVI   DARGSENT(@01),X'0D'                                 0401
*              RETURN CODE (4);                                    0402
*                                                                  0402
         LA    @15,4                                               0402
         L     @13,4(,@13)                                         0402
         L     @14,12(,@13)                                        0402
         LM    @00,@12,20(@13)                                     0402
         BR    @14                                                 0402
*            END;                                                  0403
*                                                                  0403
*        /************************************************************/
*        /*                                                          */
*        /* ADDRESSIBILITY IS SET TO THE DCB.  THE SYNAD ROUTINE     */
*        /* ADDRESS IN THE DCB IS UPDATED TO ADDRESS THE SYNAD       */
*        /* ROUTINE ENTERED IF THE RECORD WITH THE REQUEST KEY       */
*        /* DOES NOT EXIST IN THE DATA SET.                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0404
*        DCBPTR = IOCCBA;                                          0404
*                                                                  0404
@RF00399 L     @15,IOCSPTR                                         0404
         L     @14,IOCEXT(,@15)                                    0404
         L     @09,IOCCBA(,@14)                                    0404
         ST    @09,DCBPTR                                          0404
*        DCBSYNAD = ADDR (IRISSYN);                                0405
*                                                                  0405
         LA    @08,IRISSYN                                         0405
         ST    @08,DCBSYNAD+52(,@09)                               0405
*        /************************************************************/
*        /*                                                          */
*        /* THE SUPPLIED KEY IS MOVE TO TEMP AREA TO INSURE THAT     */
*        /* FULL KEY IS USED IN SETL.  LOW ORDER BYTES THAT ARE      */
*        /* NOT PROVIDED ARE PADDED WITH BINARY ZEROS.               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0406
*        TEMPKEY = ''B;                                            0406
         XC    TEMPKEY(256),TEMPKEY                                0406
*        KEYCLASS (1:IOCPTL) = MOVEKEY (1:IOCPTL);                 0407
*                                                                  0407
         LH    @08,IOCPTL(,@15)                                    0407
         BCTR  @08,0                                               0407
         L     @01,IOCKYA(,@15)                                    0407
         EX    @08,@SM01828                                        0407
*        RESPECIFY (REG6) RSTD;                                    0408
*        RESPECIFY (REG7) RSTD;                                    0409
*                                                                  0409
*        REG7 = IOCCBA;                                            0410
*                                                                  0410
         LR    REG7,@09                                            0410
*        /************************************************************/
*        /*                                                          */
*        /* IF PREVIOUS SETL HAS BEEN ISUED ISSUED ESETL             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0411
*        IF IOCINFPT = ON                                          0411
*          THEN                                                    0411
         TM    IOCINFPT(@14),B'10000000'                           0411
         BNO   @RF00411                                            0411
*LESETL1:    GEN(ESETL  (REG7));                                   0412
*                                                                  0412
LESETL1  ESETL  (REG7)
*        IOCINFPT = ON;                                            0413
*                                                                  0413
@RF00411 L     @01,IOCSPTR                                         0413
         L     @01,IOCEXT(,@01)                                    0413
         OI    IOCINFPT(@01),B'10000000'                           0413
*        REG6 = ADDR (TEMPKEY);                                    0414
*                                                                  0414
         LA    REG6,TEMPKEY                                        0414
*        OLDERID2 = NEWERID2;                                      0415
         L     @15,@PC00001                                        0415
         L     @15,GDTTR2(,@15)                                    0415
         MVC   @TS00001(95),NEWERID2(@15)                          0415
         MVC   OLDERID2(95,@15),@TS00001                           0415
*        NEWID2 = 'IOOT';                                          0416
*                                                                  0416
         MVC   NEWID2(4,@15),@CC01358                              0416
*        /************************************************************/
*        /*                                                          */
*        /* POSITION TO REQUEST LOGICAL RECORD.                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0417
*                                                                  0417
*LSETL1: GEN(SETL  (REG7),KH,(REG6));                              0417
*                                                                  0417
LSETL1   SETL  (REG7),KH,(REG6)
*        RESPECIFY (REG6) UNRSTD;                                  0418
*        RESPECIFY (REG7) UNRSTD;                                  0419
*                                                                  0419
*        /************************************************************/
*        /*                                                          */
*        /* RESET THE SYNAD ADDRESS IN THE DCB TO THE GET SYNAD      */
*        /* ROUTINE.                                                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0420
*        DCBSYNAD = IODOSS;                                        0420
*                                                                  0420
         L     @15,@PC00001                                        0420
         L     @01,GDTIOH(,@15)                                    0420
         L     @15,IODOSS(,@01)                                    0420
         L     @14,DCBPTR                                          0420
         ST    @15,DCBSYNAD+52(,@14)                               0420
*        /************************************************************/
*        /*                                                          */
*        /* POSITION WAS SUCCESSFUL.  SET RETURN CODE.               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0421
*        RETURN CODE (0);                                          0421
*                                                                  0421
         SLR   @15,@15                                             0421
         L     @13,4(,@13)                                         0421
         L     @14,12(,@13)                                        0421
         LM    @00,@12,20(@13)                                     0421
         BR    @14                                                 0421
*        /************************************************************/
*        /*                                                          */
*        /* THIS ROUTINE IS GIVEN CONTROL BY THE ACCESS METHOS AFTER */
*        /* A SETL INSTRUCTION IF THE DATA SET DID NOT CONTAIN THE   */
*        /* REQUESTED RECORD.                                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0422
*IRISSYN:                                                          0422
*                                                                  0422
*        /************************************************************/
*        /*                                                          */
*        /* RESET THE SYNAD ADDRESS IN THE DCB TO ADDRESS TO GET     */
*        /* SYNAD ROUTINE.                                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0422
*        OLDERID2 = NEWERID2;                                      0422
IRISSYN  L     @15,@PC00001                                        0422
         L     @14,GDTTR2(,@15)                                    0422
         MVC   @TS00001(95),NEWERID2(@14)                          0422
         MVC   OLDERID2(95,@14),@TS00001                           0422
*        NEWID2 = 'IOSO';                                          0423
         MVC   NEWID2(4,@14),@CC01369                              0423
*        DCBSYNAD = IODOSS;                                        0424
*                                                                  0424
         L     @01,GDTIOH(,@15)                                    0424
         L     @15,IODOSS(,@01)                                    0424
         L     @14,DCBPTR                                          0424
         ST    @15,DCBSYNAD+52(,@14)                               0424
*        /************************************************************/
*        /*                                                          */
*        /* SET THE RETURN CODE FOR THE CALLER.                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0425
*        RETURN CODE (8);                                          0425
*                                                                  0425
         LA    @15,8                                               0425
         L     @13,4(,@13)                                         0425
         L     @14,12(,@13)                                        0425
         LM    @00,@12,20(@13)                                     0425
         BR    @14                                                 0425
*        END PTISDS;                                               0426
*                                                                  0426
*                                                                  0426
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* FUNCTION - DELETE OR RENAME A MEMBER OF A PDS.   @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* INPUT - IOCSTR - NON-VSAM PS DATA SET            @YL026UH*/
*        /*         OPENED FOR BSAM OR BPAM PROCESSING.      @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* OUTPUT - PHYSICAL BLOCK IS POSITIONED TO.        @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* ERRORS - 1. DELETE OR RENAME AND MEMBER DOES     @YL026UH*/
*        /*             NOT EXIST.                           @YL026UH*/
*        /*          2. RENAME AND MEMBER ALREADY EXISTS.    @YL026UH*/
*        /*          3. PERMANEMT I/O ERROR                  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0427
*STOWRTN:  PROC OPTIONS (SAVEAREA);                        /*@YL026UH*/
*                                                                  0427
STOWRTN  STM   @14,@12,12(@13)                                     0427
         ST    @13,@SA00004+4                                      0427
         LA    @14,@SA00004                                        0427
         ST    @14,8(,@13)                                         0427
         LR    @13,@14                                             0427
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* DECLARES USED ONLY BY THIS PROCEDURE             @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0428
*        /* CODE RETURNED FROM THIS PROCEDURE                @YL026UH*/
*        DCL STOWRC FIXED (15);                            /*@YL026UH*/
*                                                                  0428
*        /* STOW MACRO SUCCESSFUL                            @YL026UH*/
*        DCL STOWOK FIXED (15) CONSTANT (0);               /*@YL026UH*/
*                                                                  0429
*        /* RETURN CODE FROM STOW FOR MEMBER EXISTS          @YL026UH*/
*        DCL RCSTEX FIXED (15) CONSTANT (4);               /*@YL026UH*/
*                                                                  0430
*        /* RETURN CODE FROM STOW FOR MEMBER DOES NOT EXIST  @YL026UH*/
*        DCL RCSTNO FIXED (15) CONSTANT (8);               /*@YL026UH*/
*                                                                  0431
*        /* RETURN CODE FROM STOW FOR I/O ERROR ENCOUNTERED  @YL026UH*/
*        DCL RCSTIO FIXED (15) CONSTANT (16);              /*@YL026UH*/
*                                                                  0432
*        /* RC FROM STOW WHEN DCB NOT OPENED CORRECTLY       @YL026UH*/
*        DCL RCSTDC FIXED (15) CONSTANT (20);              /*@YL026UH*/
*                                                                  0433
*        /* RC FROM STOW EHEN STORAGE NOT AVAILABLE          @YL026UH*/
*        DCL RCSTNC FIXED (15) CONSTANT (24);              /*@YL026UH*/
*                                                                  0434
*        /* DELETE OPTION                                    @YL026UH*/
*        DCL DELMEM CHAR (1) CONSTANT ('D');               /*@YL026UH*/
*                                                                  0435
*        /* RENAME OPTION                                    @YL026UH*/
*        DCL RENMEM CHAR (1) CONSTANT ('R');               /*@YL026UH*/
*                                                                  0436
*        /* STOW INPUT WORKAREA                              @YL026UH*/
*        DCL 1 STOWWORK CHAR (16) BDY (WORD),                      0437
*              2 STOWOLD CHAR (8),     /* OLD NAME           @YL026UH*/
*              2 STOWNEW CHAR (8);     /* NEW NAME           @YL026UH*/
*                                                                  0437
*        /* OLD MEMBER NAME ADDRESSED BY IOCSTR              @YL026UH*/
*        DCL MOVEOLD CHAR (8) BASED (IOCMEM);              /*@YL026UH*/
*                                                                  0438
*        /* NEW MEMBER NAME SPECIFIED BY THE IOCSTR          @YL026UH*/
*        DCL MOVENEW CHAR (8) BASED (IOCNWM);              /*@YL026UH*/
*                                                                  0439
*        /***********************************************    @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* SAVE DCB PARAMETERS BEFORE THE STOW AND          @YL026UH*/
*        /* AFTER STOW MACRO.  THIS INSURES THAT THE DSCB    @YL026UH*/
*        /* WILL NOT BE UPDATED DURING CLOSE.                @YL026UH*/
*        /*                                                  @YL026UH*/
*        /************************************************   @YL026UH*/
*                                                                  0440
*         DCL SAVLRE FIXED (15);                           /*@YL026UH*/
*         DCL SAVRFM CHAR (1);                             /*@YL026UH*/
*         DCL SAVBLK FIXED (15);                           /*@YL026UH*/
*                                                                  0442
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* INITIALIZE THE RETURN CODE.                      @YL026UH*/
*        /* SET ADDRESSIBILITY TO THE IOCSTR.                @YL026UH*/
*        /* IF DATA SET IS NOT OPEN FOR PROCESSING, ISSUE    @YL026UH*/
*        /* AMS UABORT.                                      @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0443
*        STOWRC = 0;                                       /*@YL026UH*/
*                                                                  0443
         SLR   STOWRC,STOWRC                                       0443
*        OLDERID2 = NEWERID2;                                      0444
         L     @03,@PC00001                                        0444
         L     @03,GDTTR2(,@03)                                    0444
         MVC   @TS00001(95),NEWERID2(@03)                          0444
         MVC   OLDERID2(95,@03),@TS00001                           0444
*        NEWID2 = 'IOSR';                                  /*@YL026UH*/
*                                                                  0445
         MVC   NEWID2(4,@03),@CC01392                              0445
*        IOCSPTR = OPRICS;                                 /*@YL026UH*/
*                                                                  0446
         L     @03,@PC00001+4                                      0446
         L     @03,OPRICS(,@03)                                    0446
         ST    @03,IOCSPTR                                         0446
*        IF IOCSPTR = NULLPTR × IOCMSGOP = OFF                     0447
*          THEN                                                    0447
*                                                                  0447
         LTR   @03,@03                                             0447
         BZ    @RT00447                                            0447
         TM    IOCMSGOP(@03),B'00100000'                           0447
         BNZ   @RF00447                                            0447
@RT00447 DS    0H                                                  0448
*            DO;                                                   0448
*              RESPECIFY(REG13,REG14,REG15) RSTD;                  0449
*              REG15 = 32;                                         0450
         LA    REG15,32                                            0450
*              REG14 = GDTABT;                                     0451
         L     @03,@PC00001                                        0451
         L     REG14,GDTABT(,@03)                                  0451
*              REG13 = GDTABH;                                     0452
         L     REG13,GDTABH(,@03)                                  0452
*              GEN(BR    REG14);                                   0453
         BR    REG14
*              RESPECIFY(REG13,REG14,REG15)UNRSTD;                 0454
*            END;                                  /*@YL026UH*/    0455
*                                                                  0455
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* IF THE DELETE OPTION IS SPECIFIED, THE ADDRESS   @YL026UH*/
*        /* OF THE MEMBER TO DELETE AND THE ADDRESS OF THE   @YL026UH*/
*        /* DCB ARE SET IN REGISTERS AND THE STOW MACRO WITH @YL026UH*/
*        /* THE D OPTION IS ISSUED.                          @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0456
*        RFY (REG6) RSTD;                                  /*@YL026UH*/
@RF00447 DS    0H                                                  0457
*        RFY (REG7) RSTD;                                  /*@YL026UH*/
*                                                                  0457
*        REG6 = IOCCBA;                                    /*@YL026UH*/
         L     @05,IOCSPTR                                         0458
         L     @01,IOCEXT(,@05)                                    0458
         L     @15,IOCCBA(,@01)                                    0458
         LR    REG6,@15                                            0458
*        DCBPTR = IOCCBA;                                  /*@YL026UH*/
*                                                                  0459
         ST    @15,DCBPTR                                          0459
*        SAVBLK = DCBBLKSI;                                /*@YL026UH*/
         LA    @14,52                                              0460
         ALR   @14,@15                                             0460
         LH    SAVBLK,DCBBLKSI(,@14)                               0460
*        SAVLRE = DCBLRECL;                                /*@YL026UH*/
         LH    SAVLRE,DCBLRECL(,@14)                               0461
*        SAVRFM = DCBRECFM;                                /*@YL026UH*/
*                                                                  0462
         MVC   SAVRFM(1),DCBRECFM+28(@15)                          0462
*        IF OPROPT = DELMEM                                        0463
*          THEN                                                    0463
         L     @15,@PC00001+4                                      0463
         CLI   OPROPT(@15),C'D'                                    0463
         BNE   @RF00463                                            0463
*            DO;                                           /*@YL026UH*/
*              REG7 = IOCMEM;                              /*@YL026UH*/
*                                                                  0465
         L     REG7,IOCMEM(,@05)                                   0465
*LSTOW1:       GEN(STOW  (REG6),(REG7),D);                 /*@YL026UH*/
LSTOW1   STOW  (REG6),(REG7),D
*              RESPECIFY RTNREG RSTD;                              0467
*              TESTRC = RTNREG;                                    0468
         STH   RTNREG,TESTRC                                       0468
*              RESPECIFY RTNREG UNRSTD;                    /*@YL026UH*/
*                                                                  0469
*            END;                                          /*@YL026UH*/
*                                                                  0470
*          /***********************************************  @YL026UH*/
*          /*                                                @YL026UH*/
*          /* IF THE RENAME OPTION IS REQUESTED THE OLD      @YL026UH*/
*          /* NAME AND THE NEW NAME ARE MOVED TO THE STOW    @YL026UH*/
*          /* INPUT ARGUMENT LIST AND THE ADDRESSES OF       @YL026UH*/
*          /* THE DCB AND THE WORKAREA ARE SET IN REGISTERS  @YL026UH*/
*          /* AND THE STOW MACRO WITH THE  C  OPTION         @YL026UH*/
*          /* IS ISSUED.                                     @YL026UH*/
*          /*                                                @YL026UH*/
*          /***********************************************  @YL026UH*/
*                                                                  0471
*          ELSE                                                    0471
*            DO;                                           /*@YL026UH*/
*                                                                  0471
         B     @RC00463                                            0471
@RF00463 DS    0H                                                  0472
*              STOWOLD (1:8) = MOVEOLD (1:8);              /*@YL026UH*/
         L     @05,IOCSPTR                                         0472
         L     @01,IOCMEM(,@05)                                    0472
         MVC   STOWOLD(8),MOVEOLD(@01)                             0472
*              STOWNEW (1:8) = MOVENEW (1:8);              /*@YL026UH*/
         L     @05,IOCNWM(,@05)                                    0473
         MVC   STOWNEW(8),MOVENEW(@05)                             0473
*              REG7 = ADDR (STOWWORK);                     /*@YL026UH*/
*                                                                  0474
         LA    REG7,STOWWORK                                       0474
*LSTOW2:       GEN(STOW  (REG6),(REG7),C);                 /*@YL026UH*/
LSTOW2   STOW  (REG6),(REG7),C
*              RESPECIFY RTNREG RSTD;                              0476
*              TESTRC = RTNREG;                                    0477
         STH   RTNREG,TESTRC                                       0477
*              RESPECIFY RTNREG UNRSTD;                    /*@YL026UH*/
*                                                                  0478
*            END;                                          /*@YL026UH*/
*                                                                  0479
*        RFY (REG6) UNRSTD;                                /*@YL026UH*/
@RC00463 DS    0H                                                  0481
*        RFY (REG7) UNRSTD;                                /*@YL026UH*/
*                                                                  0481
*         OLDERID2 = NEWERID2;                                     0482
         L     @05,@PC00001                                        0482
         L     @05,GDTTR2(,@05)                                    0482
         MVC   @TS00001(95),NEWERID2(@05)                          0482
         MVC   OLDERID2(95,@05),@TS00001                           0482
*         NEWID2 = 'IOW1';                                 /*@YL026UH*/
*                                                                  0483
         MVC   NEWID2(4,@05),@CC01397                              0483
*        /*************************************************  @YL026UH*/
*        /*                                                  @YL026UH*/
*        /* TESTRC CONTAINS THE RETURN CODE FROM STOW.       @YL026UH*/
*        /* IF RC IS NOT 0 MESSAGE DATA IS SET.              @YL026UH*/
*        /*                                                  @YL026UH*/
*        /*************************************************  @YL026UH*/
*                                                                  0484
*        IF TESTRC ^= STOWOK                                       0484
*          THEN                                                    0484
         LH    @05,TESTRC                                          0484
         LTR   @05,@05                                             0484
         BZ    @RF00484                                            0484
*STOWERR:    DO;                                           /*@YL026UH*/
*                                                                  0485
STOWERR  DS    0H                                                  0486
*              STOWRC = 4;                                 /*@YL026UH*/
*                                                                  0486
         LA    @05,4                                               0486
         LR    STOWRC,@05                                          0486
*              /* CHECK IF MEMBER ALREADY EXISTS             @YL026UH*/
*              IF TESTRC = RCSTEX                                  0487
*                THEN                                              0487
         CH    @05,TESTRC                                          0487
         BNE   @RF00487                                            0487
*                  DO;                                     /*@YL026UH*/
*                    DARGSENT = STEXSTID;                  /*@YL026UH*/
         L     @05,DDSTRU                                          0489
         MVI   DARGSENT(@05),X'16'                                 0489
*                    DARGDBP = ADDR (STOWNEW);             /*@YL026UH*/
         LA    @15,STOWNEW                                         0490
         ST    @15,DARGDBP(,@05)                                   0490
*                    DARGILP = 8;                          /*@YL026UH*/
         MVC   DARGILP(2,@05),@CH00176                             0491
*                  END;                                    /*@YL026UH*/
*                                                                  0492
*              /* CHECK IF MEMBER DOES NOT EXIST             @YL026UH*/
*              IF TESTRC = RCSTNO                                  0493
*                THEN                                              0493
@RF00487 LA    @05,8                                               0493
         CH    @05,TESTRC                                          0493
         BNE   @RF00493                                            0493
*                  DO;                                    /*@YL026UH*/
*                    DARGSENT = STNOSTID;                  /*@YL026UH*/
         L     @15,DDSTRU                                          0495
         MVI   DARGSENT(@15),X'12'                                 0495
*                    DARGDBP = IOCMEM;                     /*@YL026UH*/
         L     @01,IOCSPTR                                         0496
         L     @14,IOCMEM(,@01)                                    0496
         ST    @14,DARGDBP(,@15)                                   0496
*                    DARGILP = 8;                          /*@YL026UH*/
         STH   @05,DARGILP(,@15)                                   0497
*                  END;                                    /*@YL026UH*/
*                                                                  0498
*              /* CHECK FOR I/O ERROR                        @YL026UH*/
*              IF TESTRC = RCSTIO                                  0499
*                THEN                                              0499
@RF00493 CLC   TESTRC(2),@CH00475                                  0499
         BNE   @RF00499                                            0499
*                  DARGSENT = SYNDSTID;                    /*@YL026UH*/
*                                                                  0500
         L     @05,DDSTRU                                          0500
         MVI   DARGSENT(@05),X'13'                                 0500
*              /* CHECK FOR NO CORE AVAILABLE                @YL026UH*/
*              IF TESTRC = RCSTNC                                  0501
*                THEN                                              0501
@RF00499 CLC   TESTRC(2),@CH00305                                  0501
         BNE   @RF00501                                            0501
*                  DARGSENT = NOCRSTID;                    /*@YL026UH*/
*                                                                  0502
         L     @05,DDSTRU                                          0502
         MVI   DARGSENT(@05),X'1A'                                 0502
*              /* NOT ONE OF PRECEDING, THE DCB OPEN ERROR   @YL026UH*/
*              IF DARGSENT = 0                                     0503
*                THEN                                              0503
@RF00501 L     @05,DDSTRU                                          0503
         CLI   DARGSENT(@05),0                                     0503
         BNE   @RF00503                                            0503
*                  DARGSENT = NOPNSTID;                    /*@YL026UH*/
*                                                                  0504
         MVI   DARGSENT(@05),X'15'                                 0504
*            END STOWERR;                                  /*@YL026UH*/
*                                                                  0505
@RF00503 DS    0H                                                  0506
*        DCBBLKSI = SAVBLK;                                /*@YL026UH*/
@RF00484 L     @05,DCBPTR                                          0506
         LA    @15,52                                              0506
         ALR   @15,@05                                             0506
         STH   SAVBLK,DCBBLKSI(,@15)                               0506
*        DCBLRECL = SAVLRE;                                /*@YL026UH*/
         STH   SAVLRE,DCBLRECL(,@15)                               0507
*        DCBRECFM = SAVRFM;                                /*@YL026UH*/
*                                                                  0508
         MVC   DCBRECFM+28(1,@05),SAVRFM                           0508
*        RETURN CODE (STOWRC);                             /*@YL026UH*/
*                                                                  0509
         LR    @15,STOWRC                                          0509
         L     @13,4(,@13)                                         0509
         L     @14,12(,@13)                                        0509
         LM    @00,@12,20(@13)                                     0509
         BR    @14                                                 0509
*        END STOWRTN;                                      /*@YL026UH*/
*                                                                  0510
*                                                                  0511
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - BLDAMSG                                 */
*        /*                                                          */
*        /* FUNCTION - THIS PROCEDURE SET THE TEXT PROCESSOR ARGUMENT*/
*        /*            STRUCTURE TO PRINT ERROR MESSAGES.            */
*        /*                                                          */
*        /* INPUT -    THE ARGUMENT CONTAINS THE MESSAGE NUMBER.     */
*        /*                                                          */
*        /* OUTPUT -   TWO MESSAGE ARE PRODUCED BY CALLING PRINTMSG. */
*        /*            THE FIRST IS THE HEADER AND THE SECOND        */
*        /*            IS THE EXPLANATION.                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0511
*BLDAMSG: PROC;                                                    0511
*                                                                  0511
BLDAMSG  STM   @14,@12,@SA00005                                    0511
*        /************************************************************/
*        /*                                                          */
*        /* DECLARES USED ONLY BY THIS PROCEDURE                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0512
*        /* HEADER MESSAGE ARGUMENT LIST                             */
*        DCL DARGHEAD CHAR (28) BDY(WORD);                         0512
*                                                                  0512
*        /* DSNAME AREA                                      @Y30LSFY*/
*        DCL DSNCMP CHAR(44) BASED (IOCDSN);               /*@Y30LSFY*/
*                                                                  0513
*        /* SPECIAL DSNAME FOR VTOC                          @Y30LSFY*/
*        GENERATE DATA;                                    /*@Y30LSFY*/
*                                                                  0514
*        DCL VTOC CHAR(44) GENERATED; /* SPECIAL VTOC NAME   @Y30LSFY*/
*                                                                  0515
*        /* VTOC DSNAME AREA                                 @Y30LSFY*/
*        DCL DSNVTOC CHAR(44) INIT('VTOC');                /*@Y30LSFY*/
*                                                                  0516
*        /* VTOC DSNAME AREA ADDRESS                         @Y30LSFY*/
*        DCL DSNVTOCP PTR(31) INIT (ADDR(DSNVTOC));        /*@Y30LSFY*/
*                                                                  0517
*        /************************************************************/
*        /*                                                          */
*        /* PRINT FIRST ERROR MESSAGE, IF APPROPRIATE        @Y30LSFY*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0518
*        IF DARGSENT ^= DDNGSTID                                   0518
*          THEN                                                    0518
         L     @01,DDSTRU                                          0518
         CLI   DARGSENT(@01),36                                    0518
         BE    @RF00518                                            0518
*            DO;                                           /*@Y30LSFY*/
*                DDSTRU = ADDR (DARGHEAD);                 /*@Y30LSFY*/
         LA    @15,DARGHEAD                                        0520
         ST    @15,DDSTRU                                          0520
*                DARGHEAD = ''B;                           /*@Y30LSFY*/
         XC    DARGHEAD(28),DARGHEAD                               0521
*                DARGSMOD = 'IO0';                         /*@Y30LSFY*/
         MVC   DARGSMOD(3,@15),@CC01328                            0522
*                DARGSENT = ACTSTID;                       /*@Y30LSFY*/
         MVI   DARGSENT(@15),X'03'                                 0523
*                IF DSNCMP = VTOC                                  0524
*                   THEN DARGDBP = DSNVTOCP;               /*@Y30LSFY*/
         L     @01,IOCSPTR                                         0524
         L     @01,IOCDSN(,@01)                                    0524
         CLC   DSNCMP(44,@01),VTOC                                 0524
         BNE   @RF00524                                            0524
         L     @14,DSNVTOCP                                        0525
         ST    @14,DARGDBP(,@15)                                   0525
*                   ELSE DARGDBP = IOCDSN;                 /*@Y30LSFY*/
         B     @RC00524                                            0526
@RF00524 L     @01,IOCSPTR                                         0526
         L     @15,IOCDSN(,@01)                                    0526
         L     @14,DDSTRU                                          0526
         ST    @15,DARGDBP(,@14)                                   0526
*                DARGILP = 44;                             /*@Y30LSFY*/
@RC00524 L     @01,DDSTRU                                          0527
         MVC   DARGILP(2,@01),@CH00661                             0527
*                CALL PRINTMSG;                            /*@Y30LSFY*/
         BAL   @14,PRINTMSG                                        0528
*            END;                                          /*@Y30LSFY*/
*                                                                  0529
*        /************************************************************/
*        /*                                                          */
*        /* PRINT LAST LINE OF THE ERROR MESSAGE                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0530
*        DDSTRU = ADDR (DMSGARG);                                  0530
@RF00518 LA    @15,DMSGARG                                         0530
         ST    @15,DDSTRU                                          0530
*        CALL PRINTMSG;                                            0531
*                                                                  0531
         BAL   @14,PRINTMSG                                        0531
*        DMSGARG = ''B;                                            0532
         XC    DMSGARG(44),DMSGARG                                 0532
*        DARGSMOD = 'IO0';                                         0533
*                                                                  0533
         L     @01,DDSTRU                                          0533
         MVC   DARGSMOD(3,@01),@CC01328                            0533
*        END BLDAMSG;                                              0534
*                                                                  0534
@EL00005 DS    0H                                                  0534
@EF00005 DS    0H                                                  0534
@ER00005 LM    @14,@12,@SA00005                                    0534
         BR    @14                                                 0534
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - PRINTMSG                                */
*        /*                                                          */
*        /* FUNCTION - THIS PROCEDURE CALLS THE TEXT PROCESSOR       */
*        /*            TO PRINT THE MESSAGE.                         */
*        /*                                                          */
*        /* INPUT - TEXT PROCESSOR ARGUMENT CONTAINING MESSAGE DATA. */
*        /*                                                          */
*        /************************************************************/
*                                                                  0535
*PRINTMSG: PROC;                                                   0535
*                                                                  0535
PRINTMSG STM   @14,@12,@SA00006                                    0535
*        CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);                    0536
*                                                                  0536
         L     @15,@PC00001                                        0536
         ST    @15,@AL00001                                        0536
         LA    @14,@CF00112                                        0536
         ST    @14,@AL00001+4                                      0536
         LA    @14,DDSTRU                                          0536
         ST    @14,@AL00001+8                                      0536
         MVI   @AL00001+8,X'80'                                    0536
         L     @15,GDTPRT(,@15)                                    0536
         LA    @01,@AL00001                                        0536
         BALR  @14,@15                                             0536
*        END PRINTMSG;                                             0537
*                                                                  0537
@EL00006 DS    0H                                                  0537
@EF00006 DS    0H                                                  0537
@ER00006 LM    @14,@12,@SA00006                                    0537
         BR    @14                                                 0537
*                                                                  0538
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* PROCEDURE NAME - DSINFO                          @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /* FUNCTION - THIS PROCEDURE GIVES THE REQUESTOR    @Y30LSFY*/
*        /*            INFORMATION RELATED TO A DDNAME PASSED@Y30LSFY*/
*        /*            AND INDICATORS SPECIFYING INFOR-      @Y30LSFY*/
*        /*            MATION TYPE                           @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /* INPUT -    ARGUMENT LIST CONTAINING THE          @Y30LSFY*/
*        /*            ADDRESSES OF THE WORK AREA,DDNAME AND @Y30LSFY*/
*        /*            THE ADDITIONAL INFORMATION REQUESTED  @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /* OUTPUT -   DEVICE TYPE CHARACTERISTICS, VOLUME   @Y30LSFY*/
*        /*            SERIAL(S)-UP TO FIVE(5),DATA SET      @Y30LSFY*/
*        /*            NAME,FMT4 DSCB TIME STAMPS            @Y30SSFY*/
*        /*                                                  @Y30LSFY*/
*        /* ERRORS -   1. DDNAME NOT FOUND OR                @Y30SSFY*/
*        /*               OBTAIN FAILED (RC=4)               @Y30SSFY*/
*        /*            2. INSUFFICIENT STORAGE (RC=8)        @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0538
*DSINFO: PROC OPTIONS (SAVEAREA);                          /*@Y30LSFY*/
DSINFO   STM   @14,@12,12(@13)                                     0538
         ST    @13,@SA00007+4                                      0538
         LA    @14,@SA00007                                        0538
         ST    @14,8(,@13)                                         0538
         LR    @13,@14                                             0538
*                                                                  0539
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* DECLARES USED ONLY BY THIS PROCEDURE             @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0539
*        /* RETURN CODE FROM THIS PROCEDURE                  @Y30LSFY*/
*        DCL DSIRC FIXED (15);                             /*@Y30LSFY*/
*                                                                  0539
*        /* SIZE OF RDJFCB WORKAREA                          @Y30LSFY*/
*        DCL WKASZ FIXED(31) CONSTANT(272);                /*@Y30LSFY*/
*                                                                  0540
*        /* ADDRESS OF RDJFCB AREA AND CAMLST AREA           @Y30SSFY*/
*        DCL WRKARPTR PTR(31);                             /*@Y30SSFY*/
*                                                                  0541
*        /* STRUCTURE OF INFORMATION RETURNED                @Y30LSFY*/
*        DCL 1 IDCIOINF BASED (INFWK),                             0542
*              2 INFLEN1 FIXED(15),    /* TOTAL LEN OF THIS AREA     */
*              2 INFLEN2 FIXED(15),    /* LEN OF DATA RETND  @Y30LSFY*/
*              2 INFDSST CHAR(48),     /* DSNAME FIELD       @Y30LSFY*/
*                3 INFDSID CHAR(2),    /* FIELD ID = 1       @Y30LSFY*/
*                3 INFDSLN FIXED(15),  /* DATA LEN 44        @Y30LSFY*/
*                3 INFDSNM CHAR(44);   /* DSNAME             @Y30LSFY*/
*                                                                  0542
*        /* VOLUME SERIAL LIST FIELD                         @Y30LSFY*/
*        DCL 1 INFST1 CHAR(34) BASED (INFWK2),                     0543
*              2 INFVID CHAR(2),       /* FIELD ID = 2       @Y30LSFY*/
*              2 INFVLEN FIXED(15),    /* LEN OF VOL LIST    @Y30LSFY*/
*              2 INFVSER CHAR(30);     /* VOLUME SERIALS     @Y30LSFY*/
*                                                                  0543
*        /* DEVICE CHACTERISTICS FIELD                       @Y30LSFY*/
*        DCL 1 INFDVT CHAR(16) BASED (INFWK3),                     0544
*              2 INFDEVID CHAR(2),     /* FIELD ID = 3       @Y30LSFY*/
*              2 INFDEVLN FIXED(15),   /* DATA LEN 12        @Y30LSFY*/
*              2 INFDEVT CHAR(12);     /* DEVICE CHARACTERS. @Y30LSFY*/
*                                                                  0544
*        /* TIME STAMPS FIELD                                @Y30SSFY*/
*        DCL 1 INFOFMT4 CHAR(20) BASED(INFWK4),                    0545
*              2 INFFM4ID CHAR(2),     /* FIELD ID = 4       @Y30SSFY*/
*              2 INFFM4LN FIXED(15),   /* DATA LEN 16        @Y30SSFY*/
*              2 INFTMSTS CHAR(16),    /* TIME STAMPS        @Y30SSFY*/
*                3 NEWTMST CHAR(8),    /* NEW TIME STAMP     @Y30SSFY*/
*                3 OLDTMST CHAR(8);    /* OLD TIME STAMP     @Y30SSFY*/
*                                                                  0545
*        /* UIOINFO PARAMETER LIST                           @Y30LSFY*/
*        DCL 1 INFOPARM BASED (OPRICS),                            0546
*              2 *      CHAR(4),       /* GDTTBL PTR         @Y30LSFY*/
*              2 OPTPTR PTR(31),       /* OPTION BYTE PTR    @Y30LSFY*/
*              2 INFWKPT PTR(31),      /* WORK AREA PTR      @Y30LSFY*/
*              2 INFDNM PTR(31),       /* DNAME PTR          @Y30LSFY*/
*              2 INFPOL PTR(31);       /* POOL ID WORD PTR   @Y30LSFY*/
*                                                                  0546
*        /* DSNAME LIST AREA POINTER AND HEADER              @Y30LSFY*/
*        DCL INFWK PTR(31) BASED (INFWKPT);                /*@Y30LSFY*/
*                                                                  0547
*        /* VOLUME LIST AREA POINTER                         @Y30LSFY*/
*        DCL INFWK2 PTR(31);                               /*@Y30LSFY*/
*                                                                  0548
*        /* DEVICE CHARACTERISTICS POINTER                   @Y30LSFY*/
*        DCL INFWK3 PTR(31);                               /*@Y30LSFY*/
*                                                                  0549
*        /* TIME STAMPS POINTER                              @Y30SSFY*/
*        DCL INFWK4 PTR(31);                               /*@Y30SSFY*/
*                                                                  0550
*        /* DDNAME REFERENCE DECLARE                         @Y30LSFY*/
*        DCL DFILE CHAR(8) BASED (INFDNM);                 /*@Y30LSFY*/
*                                                                  0551
*        /* POOL ID                                          @Y30LSFY*/
*        DCL INFPOLID CHAR(4) BASED (INFPOL);              /*@Y30LSFY*/
*                                                                  0552
*        /* NUMBER OF BYTES ESTABLISHED FOR WORKAREA         @Y30LSFY*/
*        DCL IOINFSZ  FIXED(31);                           /*@Y30LSFY*/
*                                                                  0553
*        /* NUMBER OF VOLSERS                                @Y30LSFY*/
*        DCL NMSER FIXED(15);                              /*@Y30LSFY*/
*                                                                  0554
*        /* DEVICE CHARACTERISTICS AREA                      @Y30LSFY*/
*        DCL DEVCH CHAR(20) BDY(WORD);                     /*@Y30LSFY*/
*                                                                  0555
*        /* DEVICE CHARACTERISTICS DDNAME                    @Y30LSFY*/
*        DCL DEVDDN CHAR(8) BDY(DWORD);                    /*@Y30LSFY*/
*                                                                  0556
*        /* THE RDJFCB WORKAREA                              @Y30LSFY*/
*        DCL 1 WORKAREA BDY(DWORD) BASED(WRKARPTR),                0557
*              2 JFCBAREA CHAR(176),                               0557
*              2 READDCB CHAR(96);                         /*@Y30LSFY*/
*                                                                  0557
*        /* CAMLST FOR THE OBTAIN                            @Y30SSFY*/
*        DCL 1 CAMLST BDY(DWORD) DEF(WORKAREA),                    0558
*              2 CFLGS CHAR(4),                                    0558
*              2 CLDPT PTR(31),                                    0558
*              2 CLVPT PTR(31),                                    0558
*              2 F4PTR PTR(31),                                    0558
*              2 CLDSL4 CHAR(148),                                 0558
*              2 CLVLSR CHAR(6),                                   0558
*              2 CLDSN CHAR(44);                           /*@Y30SSFY*/
*                                                                  0558
*        /* DSCB 4 IDENTIFIER                                @Y30SSFY*/
*        DCL F4ID CHAR(1) INIT('4');                       /*@Y30SSFY*/
*                                                                  0559
*        /* CONSTANT TO CLEAR DSCB 4 IDENTIFIER              @Y30SSFY*/
*        DCL F4IDCLR CHAR(1) INIT('0');                    /*@Y30SSFY*/
*                                                                  0560
*        /* CAMLST SEARCH FLAGS                              @Y30SSFY*/
*        DCL CLSRCH CHAR(4) INIT('C1000000'X);             /*@Y30SSFY*/
*                                                                  0561
*        /* GENERATED FIELDS                                 @Y30SSFY*/
*        GENERATE DATA;                                    /*@Y30LSFY*/
*                                                                  0562
*        DCL GENADDR PTR(31);                              /*@Y30LSFY*/
*        DCL GENAREA CHAR(96) BASED(GENADDR);              /*@Y30LSFY*/
*        DCL QSAMDCB LABEL GENERATED;                      /*@Y30LSFY*/
*        DCL F4DSN CHAR(44) GENERATED;                     /*@Y30SSFY*/
*                                                                  0566
*        /* LENGTH OF QSAM DCB                               @Y30LSFY*/
*        DCL SIZEQSAM FIXED(15) CONSTANT(96);              /*@Y30LSFY*/
*                                                                  0567
*        /* COUNT OF DATA SIZES                              @Y30LSFY*/
*        DCL INFOCNT FIXED(15);                            /*@Y30LSFY*/
*                                                                  0568
*        /* INFORMATION IDENTIFIERS                          @Y30LSFY*/
*        DCL DSNID FIXED(15) CONSTANT(1);                  /*@Y30LSFY*/
*        DCL VLSRID FIXED(15) CONSTANT(2);                 /*@Y30LSFY*/
*        DCL DVTID FIXED(15) CONSTANT(3);                  /*@Y30LSFY*/
*        DCL TMSID FIXED(15) CONSTANT(4);                  /*@Y30SSFY*/
*                                                                  0572
*        /* SIZE OF HEADERS                                  @Y30LSFY*/
*        DCL HDRSZ FIXED(15) CONSTANT(4);                  /*@Y30LSFY*/
*                                                                  0573
*        /* MAXIMUM NUMBER OF VOLUME SERIALS                 @Y30LSFY*/
*        DCL MAXVS FIXED(15) CONSTANT(5);                  /*@Y30LSFY*/
*                                                                  0574
*        /* LENGTH OF A VOLUME SERIAL NUMBER                 @Y30LSFY*/
*        DCL VLSRSZ FIXED(15) CONSTANT(6);                 /*@Y30LSFY*/
*                                                                  0575
*        /* MAXIMUM SIZE OF WORKAREA                         @Y30LSFY*/
*        DCL MAXWASZ FIXED(15) CONSTANT(128);              /*@Y30LSFY*/
*                                                                  0576
*        /* CONSTANT OF ZERO                                 @Y30LSFY*/
*        DCL ZERO FIXED(15) CONSTANT(0);                   /*@Y30LSFY*/
*                                                                  0577
*        DCL JFCBPTR PTR (31);         /* ADDRESS OF JFCB    @Y30LSFY*/
*                                                                  0578
*        /* EXIT LIST USED TO READ THE JFCB                  @Y30LSFY*/
*        DCL 1 DCBRLIST BDY (WORD),    /* DCB EXIT LIST      @Y30LSFY*/
*              2 DCBRLID CHAR (1),     /* LIST IDENTIFIER    @Y30LSFY*/
*              2 DCBRLPTR PTR (24);    /* BLOCK ADDRESS      @Y30LSFY*/
*                                                                  0579
*        DCL 1 DCBEXWRD PTR (31),      /* EXIT ARG LIST      @Y30LSFY*/
*              2 DCBEXEND BIT (1);     /* END OF LIST        @Y30LSFY*/
*                                                                  0580
*        /* INCLUDE THE FORMAT 4 DSCB PLS DECLARE            @Y30SSFY*/
*/*      %INCLUDE SYSLIB(IECSDSL1)                                   */
*DCL 1 IECSDSF4 BASED(F4PTR),           /* FORMAT 4 DSCB - DESCRIBED */
*        2 *           CHAR(96);        /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL4 BASED(ADDR(IECSDSF4)),  /* START OF THE FORMAT 4 DSCB*/
*        2 DS4IDFMT    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS4HPCHR    CHAR(5),         /* HIGHEST ADDRESS OF A    0582
*                                          FORMAT 1 DSCB             */
*        2 DS4DSREC    CHAR(2),         /* NUMBER OF AVAILABLE DSCB'S*/
*        2 DS4HCCHH    CHAR(4),         /* CCHH OF NEXT AVAILABLE  0582
*                                          ALTERNATE TRACK           */
*        2 DS4NOATK    CHAR(2),         /* NUMBER OF REMAINING     0582
*                                          ALTERNATE TRACKS          */
*        2 DS4VTOCI    CHAR(1),         /* VTOC INDICATORS           */
*        2 DS4NOEXT    CHAR(1),         /* NUMBER OF EXTENTS IN VTOC */
*        2 *           CHAR(2),         /* RESERVED                  */
*        2 DS4DEVCT    CHAR(14),        /* DEVICE CONSTANTS          */
*         3 DS4DEVSZ    CHAR(4),        /* DEVICE SIZE               */
*         3 DS4DEVTK    CHAR(2),        /* DEVICE TRACK LENGTH       */
*         3 DS4DEVOV    CHAR(2),        /* KEYED RECORD OVERHEAD     */
*          4 DS4DEVI     CHAR(1),       /* - NON-LAST KEYED RECORD 0582
*                                            OVERHEAD                */
*          4 DS4DEVL     CHAR(1),       /* - LAST KEYED RECORD     0582
*                                            OVERHEAD                */
*         3 DS4DEVK     CHAR(1),        /* NON-KEYED RECORD OVERHEAD
*                                          DIFFERENTIAL              */
*         3 DS4DEVFG    CHAR(1),        /* FLAG BYTE                 */
*         3 DS4DEVTL    CHAR(2),        /* DEVICE TOLERANCE          */
*         3 DS4DEVDT    CHAR(1),        /* NUMBER OF DSCB'S PER TRACK*/
*         3 DS4DEVDB    CHAR(1),        /* NUMBER OF DIRECTORY     0582
*                                          BLOCKS PER TRACK          */
*        2 DS4AMTIM    CHAR(8),         /* VSAM TIME STAMP           */
*        2 DS4AMCAT    CHAR(3),         /* VSAM CATALOG INDICATOR    */
*         3 DS4VSIND    BIT(8),         /* VSAM INDICATORS           */
*          4 DS4VSREF    BIT(1),        /* A VSAM CATALOG REFERENCES
*                                          THIS VOLUME               */
*          4 DS4VSBAD    BIT(1),        /* VSAM DATA SETS ON VOLUME
*                                          ARE UNUSABLE              */
*          4 *           BIT(6),        /* RESERVED                  */
*         3 DS4VSCRA    PTR(16) BDY(BYTE),/* RELATIVE TRACK LOCATION
*                                          OF THE CRA                */
*        2 DS4R2TIM    CHAR(8),         /* VSAM VOLUME/CATALOG MATCH
*                                          TIME STAMP                */
*        2 *           CHAR(5),         /* RESERVED                  */
*        2 DS4F6PTR    CHAR(5),         /* POINTER TO FIRST FORMAT 0582
*                                          6 DSCB                    */
*        2 DS4VTOCE    CHAR(10),        /* VTOC EXTENT DESCRIPTION   */
*        2 *           CHAR(25),        /* RESERVED                  */
*        2 DS4END      CHAR(0);         /* END OF THE FORMAT 4 DSCB  */
*                                                                  0582
*        /* INCLUDE THE JFCB PLS DECLARE                     @Y30LSFY*/
*                                                                  0583
*                                                                  0583
*/* **************************************************************** */
*/*                                                                  */
*/*                    JOB FILE CONTROL BLOCK                        */
*/*                                                                  */
*/*  OS/VS2 RELEASE 4, 06/24/75, LEVEL=1                             */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - A DSECT CARD SHOULD PRECEDE MACRO CALL.  USING ON    */
*/*             INFMJFCB GIVES ADDRESSABILITY FOR ALL SYMBOLS.       */
*/*      PL/S - DCL JFCBPTR PTR                                      */
*/*                                                                  */
*/*  F.E.'S                                                          */
*/*      MICROFICHE LISTING - IEFJFCBN                               */
*/*                                                                  */
*/*  DEVELOPERS                                                      */
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL.              */
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE.       */
*/*                                                                  */
*/*      FOR INTEGRATION A LISTING SHOULD NOT BE REQUESTED.          */
*/* **************************************************************** */
*                                                                  0583
*DECLARE                                                           0583
*  1 INFMJFCB BASED(JFCBPTR) BDY(WORD),                            0583
*   2 JFCBDSNM CHAR(44) BDY(WORD), /* DATA SET NAME                  */
*    3 JFCBQNAM CHAR(8) BDY(WORD), /* PROCESS QUEUE NAME SPECIFIED BY
*                                     THE QNAME KEYWORD  (TCAM)      */
*   2 JFCBELNM CHAR(8) BDY(WORD),  /* ELEMENT NAME OR RELATIVE     0583
*                                     GENERATION NUMBER.  TYPE OF  0583
*                                     AREA (INDEX, PRIME OR OVERFLOW)
*                                     FOR AN INDEXED SEQUENTIAL DATA
*                                     SET ONLY.                      */
*    3 JFCIPLTX CHAR(7) BDY(WORD), /* MODULE NAME OF NETWORK CONTROL
*                                     PROGRAM  (TCAM)          ICB391*/
*   2 JFCBTSDM BIT(8),             /* JOB MANAGEMENT/DATA MANAGEMENT
*                                     INTERFACE                      */
*    3 JFCCAT   BIT(1),            /* DATA SET IS CATALOGED          */
*    3 JFCVSL   BIT(1),            /* VOLUME SERIAL LIST HAS BEEN  0583
*                                     CHANGED                        */
*    3 JFCSDS   BIT(1),            /* DATA SET IS A SYSIN OR SYSOUT
*                                     DATA SET                       */
*    3 JFCTTR   BIT(1),            /* A JOB STEP IS TO BE RESTARTED.
*                                     USE JFCBOTTR INSTEAD OF      0583
*                                     DS1LSTAR FIELD TO REPOSITION 0583
*                                     DATA SET IF AUTOMATIC STEP   0583
*                                     RESTART OCCURS.  (THIS JOB HAD
*                                     ABEND PROCESSING FOR A DATA SET
*                                     OPENED FOR MOD.)               */
*    3 JFCNWRIT BIT(1),            /* DO NOT WRITE BACK THE JFCB   0583
*                                     DURING OPEN PROCESSING         */
*    3 JFCNDSCB BIT(1),            /* DO NOT MERGE DSCB OR LABEL   0583
*                                     FIELDS INTO THIS JFCB          */
*    3 JFCNDCB  BIT(1),            /* DO NOT MERGE DCB FIELDS INTO 0583
*                                     THIS JFCB                      */
*    3 JFCPAT   BIT(1),            /* THE PATTERNING DSCB IS COMPLETE*/
*   2 JFCBDSCB CHAR(3) BDY(WORD,2),/* TTR ADDRESS OF THE FORMAT 1  0583
*                                     DSCB FOR DATA SET PART ON THE
*                                     FIRST VOLUME OF THE DATA SET 0583
*                                                              ICB398*/
*   2 JFCFCBID CHAR(4) BDY(WORD),  /* FORMS CONTROL BUFFER IMAGE   0583
*                                     IDENTIFICATION FOR THE 3211  0583
*                                     PRINTER OR DATA PROTECTION   0583
*                                     IMAGE IDENTIFICATION FOR THE 0583
*                                     3525 CARD PUNCH WITH THE READ
*                                     AND PRINT FEATURES OR FORMAT 0583
*                                     RECORD ID                MDC007*/
*    3 JFCBFRID CHAR(4) BDY(WORD), /* LAST 4 CHARACTERS OF A PDS   0583
*                                     MEMBER TO BE USED IN THE     0583
*                                     INTERPRETATION OF DOCUMENTS  0583
*                                     READ BY 3886 DEVICE FOR THIS 0583
*                                     STEP                     MDC024*/
*     4 JFCAMCRO CHAR(2) BDY(WORD), /* VSAM CHECKPOINT/RESTART OPTION
*                                     INDICATORS               ICB438*/
*     4 JFCAMSTR FIXED(15) BDY(WORD,3), /* NUMBER OF STRINGS   ICB438*/
*   2 JFCBADBF FIXED(15) BDY(WORD), /* NUMBER OF DATA BUFFERS  ICB438*/
*   2 JFCNLREC FIXED(15) BDY(WORD,3), /* LOGICAL RECORD LENGTH FOR 0583
*                                     VSAM                     ICB438*/
*   2 JFCVINDX FIXED(15) BDY(WORD), /* MASS STORAGE SYSTEM         0583
*                                     COMMUNICATOR (MSSC) VOLUME   0583
*                                     SELECTION INDEX              0583
*                                     (MDC308)               @Z30LP9A*/
*   2 JFCBLTYP BIT(8) BDY(WORD,3), /* LABEL TYPE                     */
*    3 JFCRSV38 BIT(1),            /* RESERVED                       */
*    3 JFCBAL   BIT(1),            /* AMERICAN NATIONAL STANDARD TAPE
*                                     LABELS (AL OR IF BIT 4 IS ALSO
*                                     ON, AUL)                       */
*    3 JFCBLTM  BIT(1),            /* UNLABELLED TAPE CREATED BY DOS
*                                     MAY HAVE LEADING TAPE MARK.  0583
*                                     OPEN/CLOSE/EOV AND RESTART MUST
*                                     SPACE OVER A TAPE MARK IF ONE
*                                     EXISTS.                  ICB398*/
*    3 JFCBLP   BIT(1),            /* BYPASS LABEL PROCESSING        */
*    3 JFCSUL   BIT(1),            /* USER LABEL                     */
*    3 JFCNSL   BIT(1),            /* NONSTANDARD LABEL              */
*    3 JFCSL    BIT(1),            /* STANDARD LABEL                 */
*    3 JFCNL    BIT(1),            /* NO LABEL                       */
*   2 JFCBOTTR CHAR(3) BDY(WORD,4),/* DASD MOD DATA SET - IF AUTOMATIC
*                                     STEP RESTART WAS REQUESTED, TTR
*                                     OF THE END-OF-DATA INDICATOR 0583
*                                     EXISTING WHEN THE DATA SET WAS
*                                     FIRST OPENED DURING THE      0583
*                                     ORIGINAL EXECUTION OF THE    0583
*                                     CURRENT STEP                   */
*    3 JFCBUFOF PTR(8),            /* TAPE DATA SET - THIS FIELD   0583
*                                     CONTAINS THE BUFFER OFFSET (DCB
*                                     SUBPARAMETER VALUE)            */
*     4 JFCBFOFL BIT(1),           /* IF 1, THE OFFSET EQUALS FOUR 0583
*                                     AND THE BUFFER OFFSET FIELD OF
*                                     EACH BLOCK (D-FORMAT RECORDS)
*                                     CONTAINS THE BLOCK LENGTH    0583
*                                     (SPECIFIED BY BUFOFF=L).     0583
*                                     IF 0, THE OFFSET IS AS       0583
*                                     SPECIFIED IN THE REMAINING   0583
*                                     SEVEN BITS AND THE BUFFER    0583
*                                     OFFSET FIELD OF EACH BLOCK DOES
*                                     NOT CONTAIN THE BLOCK LENGTH.  */
*    3 JFCBFLSQ FIXED(15),         /* FOR MAGNETIC TAPE DEVICES,   0583
*                                     FILE SEQUENCE NUMBER           */
*     4 JFCFUNC  BIT(8),           /* FUNCTION INDICATORS FOR THE  0583
*                                     3525 CARD PUNCH (SPECIFIED BY
*                                     THE FUNC PARAMETER)      ICB392*/
*      5 JFCFNCBI BIT(1),          /* I - INTERPRET (PUNCH AND PRINT
*                                     TWO LINES)               ICB392*/
*      5 JFCFNCBR BIT(1),          /* R - READ                 ICB392*/
*      5 JFCFNCBP BIT(1),          /* P - PUNCH                ICB392*/
*      5 JFCFNCBW BIT(1),          /* W - PRINT                ICB392*/
*      5 JFCFNCBD BIT(1),          /* D - DATA PROTECTION      ICB392*/
*      5 JFCFNCBX BIT(1),          /* X - THIS DATA SET IS TO BE   0583
*                                     PRINTED.  THIS MAY BE CODED  0583
*                                     WITH PW OR RPW TO DISTINGUISH
*                                     THE DATA SET TO BE PRINTED FROM
*                                     THE DATA SET TO BE PUNCHED.  0583
*                                                              ICB392*/
*      5 JFCFNCBT BIT(1),          /* T - TWO-LINE PRINT SUPPORT   0583
*                                     REQUEST.  THE SECOND PRINT LINE
*                                     IS LOCATED ON CARD LINE THREE.
*                                                              ICB392*/
*      5 JFCRSV31 BIT(1),          /* RESERVED                 ICB392*/
*   2 JFCBVLSQ FIXED(15),          /* VOLUME SEQUENCE NUMBER         */
*   2 JFCBMASK CHAR(8) BDY(WORD),  /* DATA MANAGEMENT TASK           */
*    3 JFCBOPS1 CHAR(5),           /* OPEN ROUTINE INTERNAL SWITCHES */
*    3 JFCBFLG1 BIT(8),            /* FLAG BYTE                      */
*     4 JFCSTAND BIT(1),           /* VOLUME LABEL PROCESSING      0583
*                                     STANDARD                       */
*     4 JFCSLCRE BIT(1),           /* CREATION OF A STANDARD LABEL 0583
*                                     IS NECESSARY                   */
*     4 JFCSLDES BIT(1),           /* DESTRUCTION OF A STANDARD LABEL
*                                     IS NECESSARY                   */
*     4 JFCDUAL  BIT(1),           /* DUAL-DENSITY CHECK DETECTED    */
*     4 JFCOPEN  BIT(4),           /* OPEN ROUTINE INTERNAL SWITCHES */
*      5 *        BIT(3),          /* OPEN ROUTINE INTERNAL SWITCHES */
*      5 JFCBPWBP BIT(1),          /* PASSWORD BYPASS INDICATOR    0583
*                                                              MDC010*/
*    3 JFCBFLG2 BIT(8),            /* FLAG BYTE OF OPEN SWITCHES     */
*     4 JFCINOP  BIT(1),           /* TREAT THE INOUT OPTION OF OPEN
*                                     AS INPUT                       */
*     4 JFCOUTOP BIT(1),           /* TREAT THE OUTIN OPTION OF OPEN
*                                     AS OUTPUT                      */
*     4 JFCDEFER BIT(1),           /* SET ONLY IN A JFCB RECORDED IN
*                                     A DATA SET DESCRIPTOR RECORD 0583
*                                     (DSDR) BY THE CHECKPOINT     0583
*                                     ROUTINE.  INDICATES THAT THE 0583
*                                     DATA SET RELATED TO THE JFCB IS
*                                     BEING PROCESSED SEQUENTIALLY,
*                                     AT THE CHECKPOINT, ON A VOLUME
*                                     OTHER THAN THE VOLUME ON WHICH
*                                     PROCESSING BEGAN IN THE CURRENT
*                                     STEP.  WHEN RESTART OCCURS,  0583
*                                     THIS BIT CAUSES DEFERRED VOLUME
*                                     MOUNTING.                      */
*      5 JFCNRPS  BIT(1),          /* USE BY OPEN ROUTINES - SET TO
*                                     INDICATE THAT THIS DATA SET  0583
*                                     RESIDES ON A NON-RPS DEVICE. 0583
*                                     RESET TO ZERO WHEN OPEN      0583
*                                     PROCESSING IS COMPLETED. ICB495*/
*     4 JFCMODNW BIT(1),           /* DISPOSITION OF THIS DATA SET 0583
*                                     HAS BEEN CHANGED FROM MOD TO 0583
*                                     NEW.  DISPOSITION (IN JFCBIND2)
*                                     WILL BE RESTORED TO MOD AFTER
*                                     OPEN.                          */
*     4 JFCSDRPS BIT(1),           /* USE SEARCH DIRECT FOR        0583
*                                     ROTATIONAL POSITION SENSING  0583
*                                     (RPS) DEVICES            ICB398*/
*     4 JFCTRACE BIT(1),           /* GTF TRACE IS TO OCCUR DURING 0583
*                                     OPEN/CLOSE/EOV AND DYNAMIC   0583
*                                     ALLOCATION PROCESSING OF DCB 0583
*                                                              ICB392*/
*     4 JFCBBUFF BIT(1),           /* INDICATOR TO OPEN THAT A     0583
*                                     NON-ZERO VALUE IN JFCBOTTR IS
*                                     NOT TO PREVENT THE NORMAL    0583
*                                     STORING BY OPEN OF A TTR IN  0583
*                                     JFCBOTTR.  BEFORE OPEN -     0583
*                                     JFCBUFOF (OFFSET 67) CONTAINS
*                                     A BUFFER OFFSET OR INVALID   0583
*                                     INFORMATION RESULTING FROM A 0583
*                                     JFCB-TO-JFCB MERGE.  AFTER   0583
*                                     OPEN - OPEN MAY HAVE STORED A
*                                     TTR IN JFCBOTTR (OFFSET 67), IN
*                                     WHICH CASE OPEN WILL HAVE SET
*                                     THIS BIT TO ZERO.              */
*     4 JFCRCTLG BIT(1),           /* OPEN HAS UPDATED THE TTR.    0583
*                                     SCHEDULER STEP TERMINATION   0583
*                                     ROUTINE IS TO RECATALOG THIS 0583
*                                     DATA SET AND PLACE IN THE    0583
*                                     CATALOG ENTRY THE DSCB TTR   0583
*                                     CONTAINED IN JFCBDSCB IF THIS
*                                     DATA SET IS CATALOGED.   ICB398*/
*    3 JFCBOPS2 BIT(8),            /* OPEN ROUTINE INTERNAL SWITCHES */
*   2 JFCBCRDT CHAR(3) BDY(WORD),  /* DATA SET CREATION DATE (YDD, 0583
*                                     Y=YEAR AND DD=DAY)             */
*   2 JFCBXPDT CHAR(3) BDY(WORD,4),/* DATA SET EXPIRATION DATE (YDD) */
*   2 JFCBIND1 BIT(8),             /* INDICATOR BYTE 1               */
*    3 JFCRLSE  BIT(2),            /* RELEASE EXTERNAL STORAGE       */
*    3 JFCLOC   BIT(2),            /* DATA SET HAS BEEN LOCATED      */
*    3 JFCADDED BIT(2),            /* NEW VOLUME HAS BEEN ADDED TO 0583
*                                     THE DATA SET                   */
*    3 JFCGDG   BIT(1),            /* DATA SET IS A MEMBER OF A    0583
*                                     GENERATION DATA GROUP          */
*    3 JFCPDS   BIT(1),            /* DATA SET IS A MEMBER OF A    0583
*                                     PARTITIONED DATA SET           */
*   2 JFCBIND2 BIT(8),             /* INDICATOR BYTE 2               */
*    3 JFCDISP  BIT(2),            /* BIT PATTERN FOR NEW, MOD, OLD  */
*    3 JFCSECUR BIT(2),            /* DATA SET SECURITY              */
*    3 JFCSHARE BIT(1),            /* SHARED DATA SET                */
*    3 JFCENT   BIT(1),            /* DELETE THIS JFCB BEFORE      0583
*                                     ALLOCATION FOR A RESTARTED   0583
*                                     GENERATION DATA GROUP          */
*    3 JFCREQ   BIT(1),            /* STORAGE VOLUME REQUESTED       */
*    3 JFCTEMP  BIT(1),            /* TEMPORARY DATA SET             */
*   2 JFCAMPTR PTR(31),            /* POINTER TO AMPBLK FOR        0583
*                                     ADDITIONAL VSAM PARAMETERS   0583
*                                                              ICB438*/
*    3 JFCBUFRQ CHAR(1),           /* NUMBER OF BUFFERS REQUIRED FOR
*                                     EACH LINE (QTAM)               */
*     4 JFCBUFNO CHAR(1),          /* NUMBER OF BUFFERS REQUIRED FOR
*                                     THIS DATA SET (ACCESS METHODS
*                                     OTHER THAN TCAM AND QTAM)      */
*      5 JFCBUFIN BIT(4),          /* THE NUMBER OF BUFFERS ASSIGNED
*                                     INITIALLY FOR RECEIVING      0583
*                                     OPERATIONS FOR EACH LINE IN A
*                                     LINE GROUP  (TCAM)       MDC021*/
*      5 JFCBFOUT BIT(4),          /* THE NUMBER OF BUFFERS ASSIGNED
*                                     INITIALLY FOR SENDING        0583
*                                     OPERATIONS FOR EACH LINE IN A
*                                     LINE GROUP  (TCAM)       MDC022*/
*    3 JFCBGNCP PTR(8),            /* FOR GAM, THIS FIELD IS USED FOR
*                                     THE NUMBER OF IOB'S CONSTRUCTED
*                                     BY THE OPEN ROUTINE.  MAXIMUM
*                                     NUMBER IS 99.            MDC025*/
*     4 JFCBHIAR CHAR(1),          /* BUFFER POOL LOCATION IN MAIN 0583
*                                     STORAGE (HIERARCHY)            */
*      5 JFCBFALN CHAR(1),         /* BUFFER ALIGNMENT               */
*       6 JFCBFTEK BIT(8),         /* BUFFERING TECHNIQUE            */
*        7 JFCHIER  BIT(1),        /* BITS 0 AND 5 DESCRIBE MAIN   0583
*                                     STORAGE HIERARCHY.  BOTH BITS
*                                     OFF, HIERARCHY 0.  BIT 0 OFF 0583
*                                     AND BIT 5 ON, HIERARCHY 1.     */
*        7 JFCBBFTA BIT(2),        /* A - FOR QSAM LOCATE MODE     0583
*                                     PROCESSING OF SPANNED RECORDS,
*                                     AUTOMATIC RECORD AREA        0583
*                                     CONSTRUCTION DURING LOGICAL  0583
*                                     RECORD INTERFACE PROCESSING. 0583
*                                     OPEN IS TO CONSTRUCT A RECORD
*                                     AREA IF IT AUTOMATICALLY     0583
*                                     CONSTRUCTS BUFFERS.            */
*         8 JFCSIM   BIT(1),       /* S - SIMPLE BUFFERING           */
*         8 JFCBBFTR BIT(1),       /* R - FOR BSAM CREATE BDAM     0583
*                                     PROCESSING OR BDAM PROCESSING
*                                     OF UNBLOCKED SPANNED RECORDS,
*                                     SOFTWARE TRACK OVERFLOW.  OPEN
*                                     FORMS A SEGMENT WORK AREA POOL
*                                     AND STORES THE ADDRESS OF THE
*                                     SEGMENT WORK AREA CONTROL BLOCK
*                                     IN THE DCBEOBW FIELD OF THE  0583
*                                     DATA CONTROL BLOCK.  WRITE USES
*                                     A SEGMENT WORK AREA TO WRITE A
*                                     RECORD AS ONE OR MORE SEGMENTS.
*                                     FOR BSAM INPUT PROCESSING OF 0583
*                                     UNBLOCKED SPANNED RECORDS WITH
*                                     KEYS, RECORD OFFSET PROCESSING.
*                                     READ READS ONE RECORD SEGMENT
*                                     INTO THE RECORD AREA.  THE   0583
*                                     FIRST SEGMENT OF A RECORD IS 0583
*                                     PRECEDED IN THE RECORD AREA BY
*                                     THE KEY.  SUBSEQUENT SEGMENTS
*                                     ARE AT AN OFFSET EQUAL TO THE
*                                     KEY LENGTH.                    */
*        7 JFCEXC   BIT(1),        /* E - EXCHANGE BUFFERING         */
*        7 JFCDYN   BIT(1),        /* DYNAMIC BUFFERING              */
*        7 JFCHIER1 BIT(1),        /* HIERARCHY 1 MAIN STORAGE       */
*        7 JFCDWORD BIT(1),        /* D - DOUBLE WORD BOUNDARY       */
*        7 JFCFWORD BIT(1),        /* F - FULL WORD NOT A DOUBLE   0583
*                                     WORD BOUNDARY                  */
*    3 JFCBUFL  FIXED(15) BDY(WORD,3), /* BUFFER LENGTH              */
*   2 JFCEROPT BIT(8),             /* ERROR OPTION.  DISPOSITION OF
*                                     PERMANENT ERRORS IF USER     0583
*                                     RETURNS FROM A SYNCHRONOUS   0583
*                                     ERROR EXIT  (QSAM)             */
*    3 JFCACC   BIT(1),            /* ACCEPT                         */
*    3 JFCSKP   BIT(1),            /* SKIP                           */
*    3 JFCABN   BIT(1),            /* ABNORMAL END OF TASK           */
*    3 JFCTOPT  BIT(1),            /* ON-LINE TERMINAL TEST        0583
*                                     (BTAM)                   ICB349*/
*    3 JFCRSV02 BIT(1),            /* RESERVED                       */
*    3 JFCRSV03 BIT(1),            /* RESERVED                       */
*    3 JFCRSV04 BIT(1),            /* RESERVED                       */
*    3 JFCRSV05 BIT(1),            /* RESERVED                       */
*   2 JFCTRTCH CHAR(1) BDY(WORD,2);/* TAPE RECORDING TECHNIQUE     0583
*                                     FOR 7-TRACK TAPE               */
*                                                                  0583
*DECLARE                                                           0584
*  1 JFCKEYLE CHAR(1) DEF(JFCTRTCH) BDY(WORD,2),                   0584
*                                  /* DIRECT ACCESS KEY LENGTH       */
*   2 JFCCODE  BIT(8) BDY(BYTE),   /* CONVERSION CODE (PAPER TAPE)   */
*    3 JFCNOCON BIT(1),            /* N - NO CONVERSION              */
*    3 JFCBCD   BIT(1),            /* I - IBM BCD                    */
*    3 JFCFRI   BIT(1),            /* F - FRIDEN                     */
*    3 JFCBUR   BIT(1),            /* B - BURROUGHS                  */
*    3 JFCNCR   BIT(1),            /* C - NATIONAL CASH REGISTER     */
*    3 JFCASCII BIT(1),            /* A - ASCII (8-TRACK)            */
*    3 JFCTTY   BIT(1),            /* T - TELETYPE                   */
*    3 JFCRSV32 BIT(1);            /* RESERVED                       */
*                                                                  0584
*DECLARE                                                           0585
*  1 JFCSTACK BIT(8) DEF(JFCTRTCH) BDY(WORD,2),                    0585
*                                  /* STACKER SELECTION (CARD READER,
*                                     (CARD PUNCH)                   */
*   2 JFCMODE  BIT(8) BDY(WORD,2), /* MODE OF OPERATION (CARD READER,
*                                     (CARD PUNCH)             ICB394*/
*    3 JFCBIN   BIT(1),            /* C - COLUMN BINARY MODE         */
*    3 JFCEBCD  BIT(1),            /* E - EBCDIC MODE                */
*    3 JFCMODEO BIT(1),            /* O - OPTICAL MARK READ MODE   0585
*                                     (3505 ONLY)              ICB394*/
*    3 JFCMODER BIT(1),            /* R - READ COLUMN ELIMINATE MODE
*                                     (3505 AND 3525 WITH READ     0585
*                                     FEATURE)                 ICB394*/
*    3 JFCRSV06 BIT(1),            /* RESERVED                       */
*    3 JFCRSV07 BIT(1),            /* RESERVED                       */
*    3 JFCTWO   BIT(1),            /* 2 - STACKER TWO                */
*    3 JFCONE   BIT(1);            /* 1 - STACKER ONE                */
*                                                                  0585
*DECLARE                                                           0586
*  1 JFCSPPRT DEF(JFCTRTCH) BDY(WORD,2),                           0586
*   2 JFCPRTSP BIT(8) BDY(WORD,2), /* NORMAL PRINTER SPACING         */
*   2 JFCDEN   BIT(8),             /* TAPE DENSITY - 2400/3400 SERIES
*                                     MAGNETIC TAPE UNITS            */
*   2 JFCBABFS PTR(24) BDY(WORD,4),/* TOTAL BUFFER SIZE FOR ALL VSAM
*                                     BUFFERS                  ICB438*/
*    3 JFCLIMCT CHAR(3) BDY(WORD,4),/* SEARCH LIMIT (BDAM)           */
*     4 *        CHAR(1),          /* RESERVED                       */
*     4 JFCTRKBL CHAR(2) BDY(WORD),/* DATA SET OPENED FOR MOD - IF 0586
*                                     AUTOMATIC STEP RESTART WAS   0586
*                                     REQUESTED, TRACK BALANCE     0586
*                                     EXISTING WHEN THE DATA SET WAS
*                                     FIRST OPENED DURING THE      0586
*                                     ORIGINAL EXECUTION OF THE    0586
*                                     CURRENT STEP                   */
*   2 JFCDSORG BIT(16) BDY(WORD,3),/* DATA SET ORGANIZATION BEING  0586
*                                     USED                           */
*    3 JFCDSRG1 BIT(8),            /* BYTE 1 OF JFCDSORG             */
*     4 JFCORGIS BIT(1),           /* INDEXED SEQUENTIAL             */
*     4 JFCORGPS BIT(1),           /* PHYSICAL SEQUENTIAL            */
*     4 JFCORGDA BIT(1),           /* DIRECT                         */
*     4 JFCORGCX BIT(1),           /* BTAM OR QTAM LINE GROUP  MDC011*/
*     4 JFCORGCQ BIT(1),           /* QTAM DIRECT ACCESS MESSAGE   0586
*                                     QUEUE                    MDC012*/
*     4 JFCORGMQ BIT(1),           /* QTAM PROBLEM PROGRAM MESSAGE 0586
*                                     QUEUE                    MDC013*/
*     4 JFCORGPO BIT(1),           /* PARTITIONED                    */
*     4 JFCORGU  BIT(1),           /* UNMOVABLE - THE DATA CONTAINS
*                                     LOCATION DEPENDENT INFORMATION */
*    3 JFCDSRG2 BIT(8),            /* BYTE 2 OF JFCDSORG             */
*     4 JFCORGGS BIT(1),           /* GRAPHICS                       */
*     4 JFCORGTX BIT(1),           /* TCAM LINE GROUP          MDC014*/
*     4 JFCORGTQ BIT(1),           /* TCAM MESSAGE QUEUE       MDC015*/
*     4 JFCRSV13 BIT(1),           /* RESERVED, BINARY ZERO          */
*     4 JFCORGAM BIT(1),           /* VSAM                     ICB438*/
*     4 JFCORGTR BIT(1),           /* TCAM 3705                MDC016*/
*     4 JFCRSV15 BIT(1),           /* RESERVED, BINARY ZERO          */
*     4 JFCRSV16 BIT(1),           /* RESERVED, BINARY ZERO          */
*   2 JFCRECFM BIT(8) BDY(WORD),   /* RECORD FORMAT                  */
*    3 JFCRCFM  BIT(3),            /* RECORD FORMAT (USASI/USASCII)
*                                                              MDC023*/
*     4 JFCFMREC BIT(2),           /* BITS INDICATING RECORD FORMAT  */
*     4 JFCRFO   BIT(1),           /* T - TRACK OVERFLOW             */
*    3 JFCRFB   BIT(1),            /* B - BLOCKED - MAY NOT OCCUR  0586
*                                     WITH UNDEFINED                 */
*    3 JFCRFS   BIT(1),            /* S - FOR FIXED LENGTH RECORD  0586
*                                     FORMAT, STANDARD BLOCKS.  NO 0586
*                                     TRUNCATED BLOCKS OR UNFILLED 0586
*                                     TRACKS ARE EMBEDDED IN THE DATA
*                                     SET.                         0586
*                                     FOR VARIABLE LENGTH RECORD   0586
*                                     FORMAT, SPANNED RECORDS.       */
*    3 JFCCHAR  BIT(2),            /* CONTROL CHARACTER              */
*    3 *        BIT(1),            /* RESERVED                       */
*   2 JFCOPTCD BIT(8) BDY(WORD,2), /* OPTION CODES                   */
*    3 JFCWVCSP BIT(1),            /* QSAM-BSAM-BPAM - W - WRITE   0586
*                                     VALIDITY CHECK                 */
*     4 JFCWVCIS BIT(1),           /* BISAM-QISAM - W - WRITE      0586
*                                     VALIDITY CHECK                 */
*      5 JFCWVCBD BIT(1),          /* BDAM - W - WRITE VALIDITY    0586
*                                     CHECK                          */
*       6 JFCSDNAM BIT(1),         /* TCAM - SOURCE OR DESTINATION 0586
*                                     NAME PRECEDES MESSAGE (AFTER 0586
*                                     CONTROL BYTE)                  */
*    3 JFCALLOW BIT(1),            /* QSAM-BSAM-BPAM - U - ALLOW A 0586
*                                     DATA CHECK CAUSED BY AN      0586
*                                     INVALID CHARACTER (1403      0586
*                                     PRINTER WITH UCS FEATURE)      */
*     4 JFCRSV17 BIT(1),           /* RESERVED                       */
*      5 JFCOVER  BIT(1),          /* BDAM - TRACK OVERFLOW          */
*       6 JFCWUMSG BIT(1),         /* TCAM - WORK UNIT IS A MESSAGE
*                                     (DEFAULT WORK UNIT IS A RECORD)*/
*    3 JFCPCIBT BIT(1),            /* QSAM-BSAM-BPAM - C - CHAINED 0586
*                                     SCHEDULING USING THE PROGRAM 0586
*                                     CONTROLLED INTERRUPTION        */
*     4 JFCMAST  BIT(1),           /* BISAM-QISAM - M - MASTER     0586
*                                     INDEXES                        */
*      5 JFCEXT   BIT(1),          /* BDAM - E - EXTENDED SEARCH     */
*       6 JFCCBWU  BIT(1),         /* TCAM - CONTROL BYTE PRECEDES 0586
*                                     WORK UNIT                      */
*    3 JFCBCKPT BIT(1),            /* QSAM-BSAM-BPAM - BYPASS      0586
*                                     EMBEDDED DOS CHECKPOINT      0586
*                                     RECORDS ON TAPE         ICB398*/
*     4 JFCIND   BIT(1),           /* BISAM-QISAM - I - INDEPENDENT
*                                     OVERFLOW AREA                  */
*      5 JFCFEED  BIT(1),          /* BDAM - F - FEEDBACK            */
*    3 JFCRSV18 BIT(1),            /* RESERVED                       */
*     4 JFCCYL   BIT(1),           /* BISAM-QISAM - Y - CYLINDER   0586
*                                     OVERFLOW AREA                  */
*      5 JFCACT   BIT(1),          /* BDAM - A - ACTUAL ADRESSING    */
*       6 JFCOPTQ  BIT(1),         /* USASI/USASCII - EBCDIC TO ASCII
*                                     OR ASCII TO EBCDIC TRANSLATION
*                                     REQUIRED                       */
*    3 JFCREDUC BIT(1),            /* QSAM-BSAM-BPAM-EXCP - Z -    0586
*                                     USE REDUCED ERROR RECOVERY   0586
*                                     PROCEDURE (MAGNETIC TAPE)      */
*     4 JFCRSV19 BIT(1),           /* RESERVED                       */
*      5 JFCRSV20 BIT(1),          /* RESERVED                       */
*       6 JFCSRCHD BIT(1),         /* QSAM-BSAM-BPAM - USE SEARCH  0586
*                                     DIRECT (SD) INSTEAD OF SEARCH
*                                     PREVIOUS ON ROTATIONAL POSITION
*                                     SENSING (RPS) DEVICE.  (DIRECT
*                                     ACCESS)                        */
*    3 JFCRSV21 BIT(1),            /* RESERVED                       */
*     4 JFCDEL   BIT(1),           /* BISAM-QISAM - L - DELETE     0586
*                                     OPTION                         */
*      5 JFCRSV22 BIT(1),          /* RESERVED                       */
*    3 JFCOPTJ  BIT(1),            /* QSAM-BSAM-BPAM - J - 3800    0586
*                                     CONTROL CHARACTER            0586
*                                     (MDC301)               @Z40MP9A*/
*     4 JFCREORG BIT(1),           /* BISAM-QISAM - R -            0586
*                                     REORGANIZATION CRITERIA        */
*      5 JFCREL   BIT(1),          /* BDAM - R - RELATIVE BLOCK    0586
*                                     ADDRESSING                     */
*   2 JFCBLKSI FIXED(15) BDY(WORD,3), /* MAXIMUM BLOCK SIZE          */
*    3 JFCBUFSI FIXED(15) BDY(WORD,3), /* MAXIMUM BUFFER SIZE        */
*     4 JFCBAXBF FIXED(15) BDY(WORD,3), /* NUMBER OF INDEX BUFFERS 0586
*                                     (VSAM)                   ICB438*/
*   2 JFCAMSYN CHAR(8) BDY(WORD),  /* MODULE NAME FOR SYNAD ROUTINE
*                                     FOR VSAM                 ICB438*/
*    3 JFCLRECL FIXED(15) BDY(WORD), /* LOGICAL RECORD LENGTH        */
*    3 JFCNCP   CHAR(1) BDY(WORD,3), /* NUMBER OF CHANNEL PROGRAMS.
*                                     NUMBER OF READ OR WRITE      0586
*                                     REQUESTS WHICH MAY BE ISSUED 0586
*                                     PRIOR TO A CHECK.  NUMBER OF 0586
*                                     IOB'S GENERATED.  (MAXIMUM   0586
*                                     NUMBER IS 99.)               0586
*                                     NOTE - GAM USES JFCBFTEK FOR 0586
*                                     THIS INFORMATION AND DOES    0586
*                                     NOT USE THIS FIELD AT ALL.     */
*     4 JFCBUFMX CHAR(1),          /* THE MAXIMUM NUMBER OF BUFFERS
*                                     TO BE USED FOR DATA TRANSFER 0586
*                                     FOR EACH LINE IN THIS LINE   0586
*                                     GROUP  (TCAM)                  */
*    3 JFCNTM   CHAR(1) BDY(WORD,4), /* THE NUMBER OF TRACKS THAT  0586
*                                     DETERMINE THE DEVELOPMENT OF A
*                                     MASTER INDEX.  MAXIMUM NUMBER
*                                     IS 99.  (ISAM)                 */
*     4 JFCBFSEQ PTR(8),           /* TAPE POSITIONING INFORMATION 0586
*                                     FOR CHECKPOINT RESTART.  THIS
*                                     FIELD IS USED TO PASS A      0586
*                                     PHYSICAL FILE SEQUENCE COUNT 0586
*                                     FROM CHECKPOINT TO RESTART.  0586
*                                     THE COUNT TELLS THE PHYSICAL 0586
*                                     POSITION OF THE TAPE VOLUME  0586
*                                     THAT WAS BEING PROCESSED WHEN
*                                     THE CHECKPOINT WAS TAKEN.    0586
*                                                             SA60703*/
*      5 JFCPCI   BIT(8),          /* PROGRAM-CONTROLLED INTERRUPTION
*                                     (PCI) FLAG BYTE (TCAM)         */
*       6 JFCPCIX1 BIT(1),         /* PCI=(X,) RECEIVE OPERATIONS  0586
*                                                              ICB473*/
*       6 JFCPCIX2 BIT(1),         /* PCI=(,X) SEND OPERATIONS     0586
*                                     X INDICATES THAT AFTER THE   0586
*                                     FIRST BUFFER IS FILLED (ON   0586
*                                     RECEIVE OPERATIONS) OR EMPTIED
*                                     (ON SEND OPERATIONS), A PCI  0586
*                                     OCCURS DURING THE FILLING OR 0586
*                                     EMPTYING OF THE NEXT BUFFER. 0586
*                                     THE FIRST BUFFER REMAINS     0586
*                                     ALLOCATED AND ANOTHER IS     0586
*                                     ALLOCATED.               ICB473*/
*       6 JFCPCIA1 BIT(1),         /* PCI=(A,) RECEIVE OPERATIONS    */
*       6 JFCPCIA2 BIT(1),         /* PCI=(,A) SEND OPERATIONS     0586
*                                     A INDICATES THAT AFTER THE   0586
*                                     FIRST BUFFER IS FILLED (ON   0586
*                                     RECEIVE OPERATIONS) OR EMPTIED
*                                     (ON SEND OPERATIONS), A PCI  0586
*                                     OCCURS DURING THE FILLING OR 0586
*                                     EMPTYING OF THE NEXT BUFFER. 0586
*                                     THE FIRST BUFFER IS DEALLOCATED.
*                                     A BUFFER IS ALLOCATED IN PLACE
*                                     OF THE DEALLOCATED BUFFER.     */
*       6 JFCPCIN1 BIT(1),         /* PCI=(N,) RECEIVE OPERATIONS    */
*       6 JFCPCIN2 BIT(1),         /* PCI=(,N) SEND OPERATIONS     0586
*                                     N INDICATES THAT NO PCI'S ARE
*                                     TAKEN DURING FILLING (ON     0586
*                                     RECEIVE OPERATIONS) OR EMPTYING
*                                     (ON SEND OPERATIONS) OF BUFFERS.
*                                     BUFFERS ARE DEALLOCATED AT THE
*                                     END OF TRANSMISSION.           */
*       6 JFCPCIR1 BIT(1),         /* PCI=(R,) RECEIVE OPERATIONS    */
*       6 JFCPCIR2 BIT(1),         /* PCI=(,R) SEND OPERATIONS     0586
*                                     R INDICATES THAT AFTER THE   0586
*                                     FIRST BUFFER IS FILLED (ON   0586
*                                     RECEIVE OPERATIONS) OR EMPTIED
*                                     (ON SEND OPERATIONS), A PCI  0586
*                                     OCCURS DURING THE FILLING OR 0586
*                                     EMPTYING OF EACH SUCCEEDING  0586
*                                     BUFFER.  THE COMPLETED BUFFER
*                                     IS DEALLOCATED, BUT NO NEW   0586
*                                     BUFFER IS ALLOCATED TO TAKE  0586
*                                     ITS PLACE.                     */
*                                                                  0586
* /*******************************************************************/
* /*                                                                 */
* /*                     NORMAL 108 SEGMENT                          */
* /*                                                                 */
* /*******************************************************************/
*                                                                  0586
*    3 JFCRESRV CHAR(4) BDY(WORD), /* FIRST BYTE CONTAINS NUMBER OF
*                                     BYTES FOR TIME OF DAY.  SECOND
*                                     BYTE CONTAINS NUMBER OF BYTES
*                                     FOR DATE.  THIRD BYTE CONTAINS
*                                     NUMBER OF BYTES FOR OUTSEQ.  0586
*                                     FOURTH BYTE CONTAINS NUMBER OF
*                                     BYTES IN.  (TCAM)              */
*     4 JFCRKP   FIXED(15) BDY(WORD), /* THE RELATIVE POSITION OF THE
*                                     FIRST BYTE OF THE KEY WITHIN 0586
*                                     EACH LOGICAL RECORD.  MAXIMUM
*                                     VALUE IS LOGICAL RECORD LENGTH
*                                     MINUS KEY LENGTH.              */
*     4 JFCCYLOF CHAR(1),          /* THE NUMBER OF TRACKS TO BE   0586
*                                     RESERVED ON EACH CYLINDER TO 0586
*                                     HOLD RECORDS THAT OVERFLOW   0586
*                                     FROM OTHER TRACKS ON THAT    0586
*                                     CYLINDER.  MAXIMUM VALUE IS  0586
*                                     99.                            */
*     4 JFCDBUFN CHAR(1),          /* RESERVED                       */
*   2 JFCINTVL CHAR(1) BDY(WORD);  /* INTENTIONAL DELAY, IN SECONDS,
*                                     BETWEEN PASSES THROUGH A     0586
*                                     POLLING LIST (QTAM)            */
*                                                                  0586
* /*******************************************************************/
* /*                                                                 */
* /*                     END OF NORMAL 108 SEGMENT                   */
* /*                                                                 */
* /*******************************************************************/
*                                                                  0587
* /*******************************************************************/
* /*                                                                 */
* /*                     108 PRINTER SEGMENT                         */
* /*                                                                 */
* /*     NOTE  THIS SEGMENT REPLACES THE NORMAL 108 SEGMENT IF       */
* /*           THE DD STATEMENT USES THE UCS PARAMETER.              */
* /*                                                                 */
* /*******************************************************************/
*                                                                  0587
*DECLARE                                                           0587
*  1 JFCUCSEG DEF(JFCRESRV) BDY(WORD),                             0587
*   2 JFCUCSID CHAR(4) BDY(WORD),  /* NAME OF THE UCS IMAGE TO BE  0587
*                                     LOADED                         */
*   2 JFCUCSOP BIT(8),             /* OPERATION OF THE UCS IMAGE TO
*                                     BE LOADED                      */
*    3 JFCBEXTP BIT(1),            /* JFCB EXTENSION PRESENT FOR 3800
*                                     DEVICE  (MDC302)       @Z40MP9A*/
*    3 JFCFOLD  BIT(1),            /* UCS IMAGE IS TO BE LOADED IN 0587
*                                     THE FOLD MODE                  */
*    3 JFCRSV25 BIT(1),            /* RESERVED                       */
*    3 JFCVER   BIT(1),            /* UCS IMAGE IS TO BE VERIFIED    */
*    3 JFCFCBAL BIT(1),            /* FORMS ARE TO BE ALIGNED        */
*    3 JFCFCBVR BIT(1),            /* FORMS CONTROL BUFFER (FCB)   0587
*                                     IMAGE IS TO BE VERIFIED        */
*    3 JFCRSV26 BIT(1),            /* RESERVED                       */
*    3 JFCRSV27 BIT(1),            /* RESERVED                       */
*                                                                  0587
* /*******************************************************************/
* /*                                                                 */
* /*                     END OF 108 PRINTER SEGMENT                  */
* /*                                                                 */
* /*******************************************************************/
*                                                                  0587
*   2 JFCOUTLI PTR(24) BDY(WORD,2),/* SMF - SYSOUT LIMIT.  BINARY  0587
*                                     REPRESENTATION OF THE OUTLIM=
*                                     PARAMETER ON THE SYSOUT DD   0587
*                                     STATEMENT.  THE MAXIMUM NUMBER
*                                     OF LOGICAL RECORDS SPECIFIED 0587
*                                     FOR THIS OUTPUT DATA SET.      */
*    3 JFCTHRSH CHAR(1),           /* RECORDS TO BE USED             */
*     4 JFCCPRI  BIT(8),           /* PRIORITY BETWEEN SEND AND    0587
*                                     RECEIVE OPERATIONS (TCAM)      */
*      5 JFCRSV53 BIT(1),          /* RESERVED                 MDC020*/
*      5 JFCRSV54 BIT(1),          /* RESERVED                 MDC019*/
*      5 JFCRSV55 BIT(1),          /* RESERVED                 MDC018*/
*      5 JFCRSV33 BIT(1),          /* RESERVED                       */
*      5 JFCRSV34 BIT(1),          /* RESERVED                       */
*      5 JFCRECV  BIT(1),          /* RECEIVE PRIORITY         MDC018*/
*      5 JFCEQUAL BIT(1),          /* EQUAL PRIORITY           MDC019*/
*      5 JFCSEND  BIT(1),          /* SEND PRIORITY            MDC020*/
*    3 JFCSOWA  FIXED(15),         /* LENGTH, IN BYTES, OF THE USER-
*                                     PROVIDED WORK AREA (QTAM)      */
*   2 JFCBNTCS CHAR(1),            /* NUMBER OF OVERFLOW TRACKS      */
*   2 JFCBNVOL CHAR(1),            /* NUMBER OF VOLUME SERIAL NUMBERS*/
*   2 JFCBVOLS CHAR(30) BDY(WORD,3),/* THE FIRST FIVE VOLUME SERIAL
*                                     NUMBERS                        */
*    3 JFCAVOLS (5) CHAR(6);       /* THE FIRST FIVE VOLUME SERIAL 0587
*                                     NUMBERS                @Z30LP9A*/
*                                                                  0587
*DECLARE                                                           0588
*  1 JFCBS001 DEF(JFCBVOLS) BDY(WORD,3), /*                  @Z30LP9A*/
*   2 *        CHAR(22),           /* FIRST 22 BYTES OF            0588
*                                     JFCBVOLS               @Z30LP9A*/
*   2 JFCMSVGP CHAR(8) BDY(WORD),  /* MASS STORAGE VOLUME GROUP FROM
*                                     WHICH TO SELECT A VOLUME     0588
*                                     (MDC306)               @Z30LP9A*/
*   2 JFCBEXTL CHAR(1),            /* LENGTH OF BLOCK OF EXTRA VOLUME
*                                     SERIAL NUMBERS (BEYOND FIVE)   */
*   2 JFCBEXAD CHAR(3),            /* RELATIVE TRACK ADDRESS (TTR) 0588
*                                     OF FIRST JFCB EXTENSION BLOCK
*                                     FOR VOLUME SERIAL NUMBERS OR 0588
*                                     TTR OF JFCB EXTENSION BLOCK  0588
*                                     FOR 3800  (MDC303)     @Z40MP9A*/
*   2 JFCBPQTY CHAR(3) BDY(WORD),  /* PRIMARY QUANTITY OF DIRECT   0588
*                                     ACCESS STORAGE REQUIRED        */
*    3 JFCRUNIT CHAR(3),           /* UNIT TYPE (EBCDIC) OF A DEVICE
*                                     AT A REMOTE TERMINAL.  THE   0588
*                                     FIRST TWO CHARACTERS ARE RD  0588
*                                     (READER), PR (PRINTER) OR PU 0588
*                                     (PUNCH).  THE THIRD CHARACTER
*                                     IS A NUMBER FROM 1 TO 9. ICB387*/
*   2 JFCBCTRI BIT(8),             /* SPACE PARAMETERS               */
*    3 JFCBSPAC BIT(2),            /* SPACE MASK BITS                */
*    3 JFCBMSGP BIT(1),            /* REQUEST IS FOR A MASS STORAGE
*                                     VOLUME GROUP (MSVGP) VOLUME  0588
*                                     (MDC307)               @Z30LP9A*/
*    3 JFCRSV29 BIT(1),            /* RESERVED                       */
*    3 JFCONTIG BIT(1),            /* CONTIG REQUEST                 */
*    3 JFCMIXG  BIT(1),            /* MXIG REQUEST                   */
*    3 JFCALX   BIT(1),            /* ALX REQUEST                    */
*    3 JFCROUND BIT(1),            /* ROUND REQUEST                  */
*   2 JFCBSQTY CHAR(3) BDY(WORD),  /* SECONDARY QUANTITY OF DIRECT 0588
*                                     ACCESS STORAGE REQUIRED        */
*    3 JFCRQID  FIXED(15),         /* QUEUE IDENTIFICATION (QID) USED
*                                     BY ACCESS METHOD TO DETERMINE
*                                     THE REMOTE TERMINAL LOCATION 0588
*                                     FOR THIS JOB.            ICB387*/
*   2 JFCFLGS1 BIT(8),             /* FLAG BYTE (ICB488)      SA53458*/
*    3 JFCBDLET BIT(1),            /* IF ONE, DELETE THE DATA SET  0588
*                                     USED WHEN EXTENDING THE JOB  0588
*                                     QUEUE OR SPOOL DATA SETS     0588
*                                     (OS/VS1)  (MDC305)     @XM05457*/
*    3 JFCTOPEN BIT(1),            /* TAPE DATA SET HAS BEEN OPENED
*                                                              MDC026*/
*    3 JFCBADSP BIT(1),            /* AUTOMATIC DATA SET PROTECTION
*                                     INDICATOR  (MDC310)    @Z40RP9A*/
*    3 JFCRSV42 BIT(1),            /* RESERVED  (MDC311)             */
*    3 JFCBCEOV BIT(1),            /* IF ONE, CHKPT=EOV SPECIFIED FOR
*                                     THIS DATA SET (MDC312) @Z30JP9A*/
*    3 JFCVRDS  BIT(1),            /* VIO DATA SET             MDC006*/
*    3 JFCRSV45 BIT(1),            /* RESERVED                       */
*    3 JFCBUAFF BIT(1),            /* UNIT AFFINITY SPECIFIED FOR  0588
*                                     THIS DATA SET (ICB488)  SA53458*/
*   2 JFCBDQTY CHAR(3) BDY(WORD),  /* QUANTITY OF DIRECT ACCESS    0588
*                                     STORAGE REQUIRED FOR A       0588
*                                     DIRECTORY OR AN EMBEDDED INDEX
*                                     AREA                           */
*   2 JFCBSPNM PTR(24) BDY(WORD,4),/* MAIN STORAGE ADDRESS OF THE  0588
*                                     JFCB WITH WHICH CYLINDERS ARE
*                                     SPLIT                          */
*   2 JFCBABST FIXED(15),          /* RELATIVE ADDRESS OF FIRST TRACK
*                                     TO BE ALLOCATED                */
*   2 JFCBSBNM PTR(24) BDY(WORD),  /* MAIN STORAGE ADDRESS OF THE  0588
*                                     JFCB FROM WHICH SPACE IS TO  0588
*                                     BE SUBALLOCATED                */
*   2 JFCBDRLH CHAR(3) BDY(WORD,4),/* AVERAGE DATA BLOCK LENGTH      */
*   2 JFCBVLCT CHAR(1),            /* VOLUME COUNT                   */
*   2 JFCBSPTN CHAR(1),            /* NUMBER OF TRACKS PER CYLINDER
*                                     TO BE USED BY THIS DATA SET  0588
*                                     WHEN SPLIT CYLINDER IS       0588
*                                     INDICATED                      */
*   2 JFCBEND  CHAR(0) BDY(WORD);                                  0588
*                                                                  0589
*        /* MACRO DECLARES USED BY THIS PROCEDURE            @Y30LSFY*/
*                                                                  0589
*                                                                  0589
*        /* INITIALIZATION                                   @Y30LSFY*/
*        DSIRC =0;                                         /*@Y30LSFY*/
         SLR   DSIRC,DSIRC                                         0589
*        OLDERID2 = NEWERID2;                                      0590
         L     @15,@PC00001                                        0590
         L     @14,GDTTR2(,@15)                                    0590
         MVC   @TS00001(95),NEWERID2(@14)                          0590
         MVC   OLDERID2(95,@14),@TS00001                           0590
*        NEWID2 = 'IOIF';                                  /*@Y30LSFY*/
*                                                                  0591
         MVC   NEWID2(4,@14),@CC01812                              0591
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* GET SPACE FOR WORK AREA IF POOL ID SPECIFIED     @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0592
*        IF OPRPNO = 5                                             0592
*          THEN                                                    0592
         L     @14,@PC00001+4                                      0592
         CLI   OPRPNO(@14),5                                       0592
         BNE   @RF00592                                            0592
*            DO;                                           /*@Y30LSFY*/
*              IOINFSZ = MAXWASZ;                          /*@Y30LSFY*/
*                                                                  0594
         MVC   IOINFSZ(4),@CF01354                                 0594
*              CALL IDCSAGP0 (GDTTBL,IOINFSZ,INFWK,INFPOLID,SETZERO);
*                                                                  0595
         ST    @15,@AL00001                                        0595
         LA    @09,IOINFSZ                                         0595
         ST    @09,@AL00001+4                                      0595
         L     @14,OPRICS(,@14)                                    0595
         L     @01,INFWKPT(,@14)                                   0595
         ST    @01,@AL00001+8                                      0595
         L     @01,INFPOL(,@14)                                    0595
         ST    @01,@AL00001+12                                     0595
         LA    @14,SETZERO                                         0595
         ST    @14,@AL00001+16                                     0595
         MVI   @AL00001+16,X'80'                                   0595
         L     @15,GDTGPL(,@15)                                    0595
         LA    @01,@AL00001                                        0595
         BALR  @14,@15                                             0595
*              RESPECIFY RTNREG RSTD;                              0596
*              TESTRC = RTNREG;                                    0597
         STH   RTNREG,TESTRC                                       0597
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30LSFY*/
*                                                                  0598
*              IF TESTRC ^= 0                                      0599
*                THEN                                              0599
         LH    @15,TESTRC                                          0599
         SLR   @14,@14                                             0599
         CR    @15,@14                                             0599
         BE    @RF00599                                            0599
*                  DO;                                     /*@Y30LSFY*/
*                    INFWK = ZERO;                         /*@Y30LSFY*/
         L     @03,@PC00001+4                                      0601
         L     @03,OPRICS(,@03)                                    0601
         L     @03,INFWKPT(,@03)                                   0601
         ST    @14,INFWK(,@03)                                     0601
*                    DSIRC = 8;                            /*@Y30LSFY*/
         LA    DSIRC,8                                             0602
*                    RETURN CODE (DSIRC);                  /*@Y30LSFY*/
         LR    @15,DSIRC                                           0603
         L     @13,4(,@13)                                         0603
         L     @14,12(,@13)                                        0603
         LM    @00,@12,20(@13)                                     0603
         BR    @14                                                 0603
*                  END;                                    /*@Y30LSFY*/
*              INFLEN1 = MAXWASZ;                          /*@Y30LSFY*/
@RF00599 L     @15,@PC00001+4                                      0605
         L     @01,OPRICS(,@15)                                    0605
         L     @01,INFWKPT(,@01)                                   0605
         L     @01,INFWK(,@01)                                     0605
         MVC   INFLEN1(2,@01),@CH01354                             0605
*            END;                                          /*@Y30LSFY*/
*                                                                  0606
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* DETERMINE AMOUNT OF INFORMATION TO RETURN        @Y30LSFY*/
*        /* AND IF THERE IS A LARGE ENOUGH WORK AREA PROVIDED OR     */
*        /* GOTTEN VIA UGPOOL                                @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0607
*        /* BASE OPTION BYTE                                 @Y30LSFY*/
*        RESPECIFY IOINFOPT BASED (OPTPTR);                /*@Y30LSFY*/
*                                                                  0607
@RF00592 DS    0H                                                  0608
*        /* INIT COUNTER                                     @Y30LSFY*/
*        INFOCNT = ZERO;                                   /*@Y30LSFY*/
*                                                                  0608
         SLR   INFOCNT,INFOCNT                                     0608
*        IF IOINFDVT = ON                                          0609
*          THEN                                                    0609
         L     @03,@PC00001+4                                      0609
         L     @03,OPRICS(,@03)                                    0609
         L     @03,OPTPTR(,@03)                                    0609
         TM    IOINFDVT(@03),B'10000000'                           0609
         BNO   @RF00609                                            0609
*            INFOCNT = LENGTH(INFDVT);                     /*@Y30LSFY*/
         LA    INFOCNT,16                                          0610
*        IF IOINFVOL = ON                                          0611
*          THEN                                                    0611
@RF00609 L     @03,@PC00001+4                                      0611
         L     @03,OPRICS(,@03)                                    0611
         L     @03,OPTPTR(,@03)                                    0611
         TM    IOINFVOL(@03),B'01000000'                           0611
         BNO   @RF00611                                            0611
*            INFOCNT = INFOCNT + LENGTH(INFST1);           /*@Y30LSFY*/
         AL    INFOCNT,@CF01429                                    0612
*        IF IOINFDSN = ON                                          0613
*          THEN                                                    0613
@RF00611 L     @03,@PC00001+4                                      0613
         L     @03,OPRICS(,@03)                                    0613
         L     @03,OPTPTR(,@03)                                    0613
         TM    IOINFDSN(@03),B'00100000'                           0613
         BNO   @RF00613                                            0613
*            INFOCNT = INFOCNT + LENGTH(INFDSST);          /*@Y30LSFY*/
         AL    INFOCNT,@CF00879                                    0614
*        IF IOINFTMS = ON                                          0615
*          THEN                                                    0615
@RF00613 L     @03,@PC00001+4                                      0615
         L     @03,OPRICS(,@03)                                    0615
         L     @03,OPTPTR(,@03)                                    0615
         TM    IOINFTMS(@03),B'00001000'                           0615
         BNO   @RF00615                                            0615
*              INFOCNT = INFOCNT + LENGTH(INFOFMT4);       /*@Y30SSFY*/
         AL    INFOCNT,@CF01161                                    0616
*        INFOCNT = INFOCNT + HDRSZ;                        /*@Y30LSFY*/
@RF00615 AL    INFOCNT,@CF00039                                    0617
*        IF INFOCNT > INFLEN1                                      0618
*          THEN                                                    0618
         L     @03,@PC00001+4                                      0618
         L     @15,OPRICS(,@03)                                    0618
         L     @01,INFWKPT(,@15)                                   0618
         L     @14,INFWK(,@01)                                     0618
         CH    INFOCNT,INFLEN1(,@14)                               0618
         BNH   @RF00618                                            0618
*              DO;                                         /*@Y30LSFY*/
*                INFLEN2 = INFOCNT;                        /*@Y30LSFY*/
         STH   INFOCNT,INFLEN2(,@14)                               0620
*                DSIRC = 8;                                /*@Y30LSFY*/
         LA    DSIRC,8                                             0621
*                IF OPRPNO  = 5                                    0622
*                  THEN                                            0622
         CLI   OPRPNO(@03),5                                       0622
         BNE   @RF00622                                            0622
*                    DO;                                   /*@Y30LSFY*/
*                                                                  0623
*                      CALL IDCSAFP0 (GDTTBL,INFPOLID);    /*@Y30SSFY*/
*                                                                  0624
         L     @03,@PC00001                                        0624
         ST    @03,@AL00001                                        0624
         L     @01,INFPOL(,@15)                                    0624
         ST    @01,@AL00001+4                                      0624
         MVI   @AL00001+4,X'80'                                    0624
         L     @15,GDTFPL(,@03)                                    0624
         LA    @01,@AL00001                                        0624
         BALR  @14,@15                                             0624
*                      INFWK = ZERO;                       /*@Y30LSFY*/
         L     @03,@PC00001+4                                      0625
         L     @03,OPRICS(,@03)                                    0625
         L     @03,INFWKPT(,@03)                                   0625
         SLR   @15,@15                                             0625
         ST    @15,INFWK(,@03)                                     0625
*                    END;                                  /*@Y30LSFY*/
*                                                                  0626
*              RETURN CODE (DSIRC);                        /*@Y30LSFY*/
@RF00622 LR    @15,DSIRC                                           0627
         L     @13,4(,@13)                                         0627
         L     @14,12(,@13)                                        0627
         LM    @00,@12,20(@13)                                     0627
         BR    @14                                                 0627
*              END;                                        /*@Y30LSFY*/
*                                                                  0628
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* FILL IN INFORMATION REQUESTED                    @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0629
*        /* INITIALIZE RETURN AREA                           @Y30LSFY*/
*        INFWK2 = INFWK + HDRSZ;                           /*@Y30LSFY*/
@RF00618 L     @05,@PC00001+4                                      0629
         L     @05,OPRICS(,@05)                                    0629
         L     @01,INFWKPT(,@05)                                   0629
         L     @15,INFWK(,@01)                                     0629
         LA    INFWK2,4                                            0629
         ALR   INFWK2,@15                                          0629
*        INFWK3 = INFWK2;                                  /*@Y30LSFY*/
         LR    INFWK3,INFWK2                                       0630
*        INFWK4 = INFWK3;                                  /*@Y30SSFY*/
         LR    INFWK4,INFWK3                                       0631
*        INFLEN2 = ZERO;                                   /*@Y30LSFY*/
*                                                                  0632
         SLR   @14,@14                                             0632
         STH   @14,INFLEN2(,@15)                                   0632
*        /************************************************************/
*        /* IF DSNAME,TIMESTAMPS OR VOLSER(S) REQUESTED,     @Y30SSFY*/
*        /* ISSUE RDJFCB FOR DDNAME PROVIDED.                @Y30LSFY*/
*        /* IF MACRO WAS NOT SUCCESSFUL, DDNAME WAS          @Y30LSFY*/
*        /* NOT FOUND. PRINT MSG IF REQUESTED.               @Y30LSFY*/
*        /************************************************************/
*                                                                  0633
*        IF IOINFDSN=ON × IOINFVOL=ON × IOINFTMS = ON              0633
*         THEN                                                     0633
         L     @05,OPTPTR(,@05)                                    0633
         TM    IOINFDSN(@05),B'01101000'                           0633
         BZ    @RF00633                                            0633
*           DO;                                            /*@Y30SSFY*/
*             /* GET A WORKAREA FOR THE RDJFCB               @Y30LSFY*/
*                                                                  0635
*             CALL IDCSAGS0 (GDTTBL,WKASZ,WRKARPTR);       /*@Y30SSFY*/
*                                                                  0635
         L     @05,@PC00001                                        0635
         ST    @05,@AL00001                                        0635
         LA    @15,@CF01418                                        0635
         ST    @15,@AL00001+4                                      0635
         LA    @15,WRKARPTR                                        0635
         ST    @15,@AL00001+8                                      0635
         MVI   @AL00001+8,X'80'                                    0635
         L     @15,GDTGSP(,@05)                                    0635
         LA    @01,@AL00001                                        0635
         BALR  @14,@15                                             0635
*             RESPECIFY RTNREG RSTD;                               0636
*             TESTRC = RTNREG;                                     0637
         STH   RTNREG,TESTRC                                       0637
*             RESPECIFY RTNREG UNRSTD;                     /*@Y30LSFY*/
*                                                                  0638
*             IF TESTRC ^= 0                                       0639
*               THEN                                               0639
         LH    @05,TESTRC                                          0639
         LTR   @05,@05                                             0639
         BZ    @RF00639                                            0639
*                 DO;                                      /*@Y30LSFY*/
*                   DSIRC = 8;                             /*@Y30LSFY*/
*                                                                  0641
         LA    DSIRC,8                                             0641
*                  IF OPRPNO  = 5                                  0642
*                     THEN                                         0642
         L     @03,@PC00001+4                                      0642
         CLI   OPRPNO(@03),5                                       0642
         BNE   @RF00642                                            0642
*                       DO;                                /*@Y30LSFY*/
*                                                                  0643
*                         CALL IDCSAFP0 (GDTTBL,INFPOLID); /*@Y30SSFY*/
*                                                                  0644
         L     @15,@PC00001                                        0644
         ST    @15,@AL00001                                        0644
         L     @03,OPRICS(,@03)                                    0644
         L     @03,INFPOL(,@03)                                    0644
         ST    @03,@AL00001+4                                      0644
         MVI   @AL00001+4,X'80'                                    0644
         L     @15,GDTFPL(,@15)                                    0644
         LA    @01,@AL00001                                        0644
         BALR  @14,@15                                             0644
*                         INFWK = ZERO;                    /*@Y30LSFY*/
         L     @03,@PC00001+4                                      0645
         L     @03,OPRICS(,@03)                                    0645
         L     @03,INFWKPT(,@03)                                   0645
         SLR   @15,@15                                             0645
         ST    @15,INFWK(,@03)                                     0645
*                       END;                               /*@Y30LSFY*/
*                   RETURN CODE (DSIRC);                   /*@Y30LSFY*/
@RF00642 LR    @15,DSIRC                                           0647
         L     @13,4(,@13)                                         0647
         L     @14,12(,@13)                                        0647
         LM    @00,@12,20(@13)                                     0647
         BR    @14                                                 0647
*                 END;                                     /*@Y30LSFY*/
*                                                                  0648
*              DCBPTR = ADDR (READDCB);                    /*@Y30LSFY*/
@RF00639 L     @15,WRKARPTR                                        0649
         LA    @14,READDCB(,@15)                                   0649
         ST    @14,DCBPTR                                          0649
*              GENADDR = ADDR (QSAMDCB);                   /*@Y30LSFY*/
         LA    GENADDR,QSAMDCB                                     0650
*              READDCB (1:SIZEQSAM) = GENAREA (1:SIZEQSAM);/*@Y30LSFY*/
         MVC   READDCB(96,@15),GENAREA(GENADDR)                    0651
*              DCBEXLSA = ADDR (DCBRLIST);                 /*@Y30LSFY*/
         LA    @05,DCBRLIST                                        0652
         STCM  @05,7,DCBEXLSA+28(@14)                              0652
*              DCBDDNAM  = DFILE ;                         /*@Y30LSFY*/
         L     @05,@PC00001+4                                      0653
         L     @05,OPRICS(,@05)                                    0653
         L     @05,INFDNM(,@05)                                    0653
         MVC   DCBDDNAM+40(8,@14),DFILE(@05)                       0653
*              DCBRLPTR = ADDR (WORKAREA);                 /*@Y30LSFY*/
         STCM  @15,7,DCBRLPTR                                      0654
*              DCBRLID = '87'X;                            /*@Y30LSFY*/
         MVI   DCBRLID,X'87'                                       0655
*              DCBEXWRD = ADDR (READDCB);                  /*@Y30LSFY*/
         LA    @05,READDCB(,@15)                                   0656
         ST    @05,DCBEXWRD                                        0656
*              DCBEXEND = ON;                              /*@Y30LSFY*/
*                                                                  0657
         OI    DCBEXEND,B'10000000'                                0657
*LRDJF1:       GEN(RDJFCB  MF=(E,DCBEXWRD));               /*@Y30LSFY*/
*                                                                  0658
LRDJF1   RDJFCB  MF=(E,DCBEXWRD)
*              RESPECIFY RTNREG RSTD;                              0659
*              TESTRC = RTNREG;                                    0660
         STH   RTNREG,TESTRC                                       0660
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30LSFY*/
*                                                                  0661
*              IF GDTDBG = NULLPTR                                 0662
*                THEN;                                             0662
         L     @05,@PC00001                                        0662
         L     @05,GDTDBG(,@05)                                    0662
         LTR   @05,@05                                             0662
         BZ    @RT00662                                            0662
*                ELSE                                              0664
*                  CALL IDCDB010 (GDTTBL,'IO00');                  0664
         L     @05,@PC00001                                        0664
         ST    @05,@AL00001                                        0664
         LA    @15,@CC01817                                        0664
         ST    @15,@AL00001+4                                      0664
         MVI   @AL00001+4,X'80'                                    0664
         L     @15,GDTDBG(,@05)                                    0664
         LA    @01,@AL00001                                        0664
         BALR  @14,@15                                             0664
*                                                          /*@Y30LSFY*/
*                                                                  0665
*              IF TESTRC ^= 0                                      0665
*                THEN                                              0665
@RT00662 LH    @05,TESTRC                                          0665
         LTR   @05,@05                                             0665
         BZ    @RF00665                                            0665
*                  DO;                                     /*@Y30LSFY*/
*                    DSIRC = 4;                            /*@Y30LSFY*/
         LA    @15,4                                               0667
         LR    DSIRC,@15                                           0667
*                    INFLEN2 = HDRSZ;                      /*@Y30LSFY*/
*                                                                  0668
         L     @03,@PC00001+4                                      0668
         L     @03,OPRICS(,@03)                                    0668
         L     @03,INFWKPT(,@03)                                   0668
         L     @03,INFWK(,@03)                                     0668
         STH   @15,INFLEN2(,@03)                                   0668
*                    CALL IDCSAFS0  (GDTTBL,WRKARPTR);     /*@Y30SSFY*/
*                                                                  0669
         L     @03,@PC00001                                        0669
         ST    @03,@AL00001                                        0669
         LA    @15,WRKARPTR                                        0669
         ST    @15,@AL00001+4                                      0669
         L     @15,GDTFSP(,@03)                                    0669
         LA    @01,@AL00001                                        0669
         BALR  @14,@15                                             0669
*                    IF OPRPNO  = 5                                0670
*                      THEN                                        0670
*                                                                  0670
         L     @03,@PC00001+4                                      0670
         CLI   OPRPNO(@03),5                                       0670
         BNE   @RF00670                                            0670
*                        CALL IDCSAFP0 (GDTTBL,INFPOLID);  /*@Y30SSFY*/
*                                                                  0671
         L     @15,@PC00001                                        0671
         ST    @15,@AL00001                                        0671
         L     @03,OPRICS(,@03)                                    0671
         L     @03,INFPOL(,@03)                                    0671
         ST    @03,@AL00001+4                                      0671
         MVI   @AL00001+4,X'80'                                    0671
         L     @15,GDTFPL(,@15)                                    0671
         LA    @01,@AL00001                                        0671
         BALR  @14,@15                                             0671
*                    INFWK = ZERO;                         /*@Y30LSFY*/
@RF00670 L     @03,@PC00001+4                                      0672
         L     @03,OPRICS(,@03)                                    0672
         L     @01,INFWKPT(,@03)                                   0672
         SLR   @00,@00                                             0672
         ST    @00,INFWK(,@01)                                     0672
*                    IF IOINFSUP = OFF                             0673
*                      THEN                                        0673
         L     @01,OPTPTR(,@03)                                    0673
         TM    IOINFSUP(@01),B'00010000'                           0673
         BNZ   @RF00673                                            0673
*                        DO;                               /*@Y30LSFY*/
*                          DARGSENT = DDNGSTID;            /*@Y30LSFY*/
         L     @15,DDSTRU                                          0675
         MVI   DARGSENT(@15),X'24'                                 0675
*                          DARGDBP = INFDNM;               /*@Y30LSFY*/
         L     @03,INFDNM(,@03)                                    0676
         ST    @03,DARGDBP(,@15)                                   0676
*                          DARGILP = 8;                    /*@Y30LSFY*/
         MVC   DARGILP(2,@15),@CH00176                             0677
*                          CALL BLDAMSG;                   /*@Y30LSFY*/
         BAL   @14,BLDAMSG                                         0678
*                        END;                              /*@Y30LSFY*/
*                    RETURN CODE (DSIRC);                  /*@Y30LSFY*/
@RF00673 LR    @15,DSIRC                                           0680
         L     @13,4(,@13)                                         0680
         L     @14,12(,@13)                                        0680
         LM    @00,@12,20(@13)                                     0680
         BR    @14                                                 0680
*                  END;                                    /*@Y30LSFY*/
*                                                                  0681
*              JFCBPTR = WRKARPTR;                         /*@Y30SSFY*/
*                                                                  0682
@RF00665 L     JFCBPTR,WRKARPTR                                    0682
*              /******************************************************/
*              /*                                            @Y30LSFY*/
*              /* PROCESS DATA SET NAME IF REQUESTED         @Y30LSFY*/
*              /*                                            @Y30LSFY*/
*              /******************************************************/
*                                                                  0683
*              IF IOINFDSN = ON                                    0683
*                THEN                                              0683
         L     @15,@PC00001+4                                      0683
         L     @15,OPRICS(,@15)                                    0683
         L     @01,OPTPTR(,@15)                                    0683
         TM    IOINFDSN(@01),B'00100000'                           0683
         BNO   @RF00683                                            0683
*                  DO;                                     /*@Y30LSFY*/
*                    INFDSID = DSNID;                      /*@Y30LSFY*/
         L     @01,INFWKPT(,@15)                                   0685
         L     @15,INFWK(,@01)                                     0685
         MVC   INFDSID(2,@15),@CH00216                             0685
*                    INFDSLN = DSNLGT;                     /*@Y30LSFY*/
         MVC   INFDSLN(2,@15),@CH00661                             0686
*                    INFDSNM = JFCBDSNM;                   /*@Y30LSFY*/
         MVC   INFDSNM(44,@15),JFCBDSNM(JFCBPTR)                   0687
*                    INFLEN2 = LENGTH(INFDSST);            /*@Y30LSFY*/
         LA    @14,48                                              0688
         STH   @14,INFLEN2(,@15)                                   0688
*                    INFWK2 = INFWK2 + LENGTH(INFDSST);    /*@Y30LSFY*/
         ALR   INFWK2,@14                                          0689
*                    INFWK3 = INFWK2;                      /*@Y30LSFY*/
         LR    INFWK3,INFWK2                                       0690
*                    INFWK4 = INFWK3;                      /*@Y30SSFY*/
         LR    INFWK4,INFWK3                                       0691
*                  END;                                    /*@Y30LSFY*/
*                                                                  0692
*              /******************************************************/
*              /*                                            @Y30LSFY*/
*              /* PROCESS VOLUME SERIALS IF REQUESTED        @Y30LSFY*/
*              /*                                            @Y30LSFY*/
*              /******************************************************/
*                                                                  0693
*              IF IOINFVOL = ON                                    0693
*                THEN                                              0693
@RF00683 L     @15,@PC00001+4                                      0693
         L     @01,OPRICS(,@15)                                    0693
         L     @01,OPTPTR(,@01)                                    0693
         TM    IOINFVOL(@01),B'01000000'                           0693
         BNO   @RF00693                                            0693
*                  DO;                                     /*@Y30LSFY*/
*                    INFVID = VLSRID;                      /*@Y30LSFY*/
         MVC   INFVID(2,INFWK2),@CH00150                           0695
*                    IF JFCBNVOL > MAXVS                           0696
*                      THEN                                        0696
         CLI   JFCBNVOL(JFCBPTR),5                                 0696
         BNH   @RF00696                                            0696
*                        NMSER = MAXVS;                    /*@Y30LSFY*/
         LA    NMSER,5                                             0697
*                      ELSE                                        0698
*                        NMSER = JFCBNVOL;                 /*@Y30LSFY*/
*                                                                  0698
         B     @RC00696                                            0698
@RF00696 SLR   NMSER,NMSER                                         0698
         IC    NMSER,JFCBNVOL(,JFCBPTR)                            0698
*                    INFVLEN = NMSER * VLSRSZ;             /*@Y30LSFY*/
@RC00696 LR    @15,NMSER                                           0699
         MH    @15,@CH00153                                        0699
         STCM  @15,3,INFVLEN(INFWK2)                               0699
*                    INFVSER(1:INFVLEN) = JFCBVOLS;        /*@Y30LSFY*/
         LR    @14,@15                                             0700
         BCTR  @14,0                                               0700
         EX    @14,@SM01835                                        0700
*                    INFLEN2 = INFLEN2 + INFVLEN + HDRSZ;  /*@Y30LSFY*/
         L     @14,@PC00001+4                                      0701
         L     @01,OPRICS(,@14)                                    0701
         L     @01,INFWKPT(,@01)                                   0701
         L     @14,INFWK(,@01)                                     0701
         LA    @09,4                                               0701
         LH    @08,INFLEN2(,@14)                                   0701
         ALR   @08,@15                                             0701
         ALR   @08,@09                                             0701
         STH   @08,INFLEN2(,@14)                                   0701
*                    INFWK3 = INFWK3 + INFVLEN  + HDRSZ;   /*@Y30LSFY*/
         ALR   @15,INFWK3                                          0702
         ALR   @15,@09                                             0702
         LR    INFWK3,@15                                          0702
*                    INFWK4 = INFWK3;                      /*@Y30SSFY*/
*                                                                  0703
         LR    INFWK4,INFWK3                                       0703
*                  END;                                    /*@Y30LSFY*/
*                                                                  0704
*              /******************************************************/
*              /*                                            @Y30SSFY*/
*              /* SAVE FIRST VOLSER IF TIMESTAMPS REQUESTED  @Y30SSFY*/
*              /*                                            @Y30SSFY*/
*              /******************************************************/
*                                                                  0705
*              IF IOINFTMS = ON                                    0705
*                THEN                                              0705
@RF00693 L     @03,@PC00001+4                                      0705
         L     @03,OPRICS(,@03)                                    0705
         L     @03,OPTPTR(,@03)                                    0705
         TM    IOINFTMS(@03),B'00001000'                           0705
         BNO   @RF00705                                            0705
*                  CLVLSR = JFCBVOLS;                      /*@Y30SSFY*/
*                                                                  0706
         L     @03,WRKARPTR                                        0706
         MVC   CLVLSR(6,@03),JFCBVOLS(JFCBPTR)                     0706
*                ELSE                                              0707
*                  /**************************************************/
*                  /*                                        @Y30SSFY*/
*                  /* FREE WORKAREA IF TIMESTAMPS NOT REQUESTED      */
*                  /*                                        @Y30SSFY*/
*                  /**************************************************/
*                                                                  0707
*                  CALL IDCSAFS0 (GDTTBL,WRKARPTR);        /*@Y30SSFY*/
*                                                                  0707
         B     @RC00705                                            0707
@RF00705 L     @05,@PC00001                                        0707
         ST    @05,@AL00001                                        0707
         LA    @03,WRKARPTR                                        0707
         ST    @03,@AL00001+4                                      0707
         L     @15,GDTFSP(,@05)                                    0707
         LA    @01,@AL00001                                        0707
         BALR  @14,@15                                             0707
*           END;                                           /*@Y30LSFY*/
*                                                                  0708
@RC00705 DS    0H                                                  0709
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* PROCESS DEVICE CHARACTERISTICS IF REQUESTED.     @Y30LSFY*/
*        /* ISSUE DEVTYPE. IF MACRO WAS NOT SUCCESSFUL       @Y30LSFY*/
*        /* DDNAME WAS NOT FOUND. PRINT MSG IF REQUESTED.    @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0709
*        IF IOINFDVT = ON                                  /*@Y30LSFY*/
*          THEN                                                    0709
@RF00633 L     @05,@PC00001+4                                      0709
         L     @05,OPRICS(,@05)                                    0709
         L     @03,OPTPTR(,@05)                                    0709
         TM    IOINFDVT(@03),B'10000000'                           0709
         BNO   @RF00709                                            0709
*            DO;                                           /*@Y30LSFY*/
*              DEVDDN = DFILE;                             /*@Y30LSFY*/
*                                                                  0711
         L     @05,INFDNM(,@05)                                    0711
         MVC   DEVDDN(8),DFILE(@05)                                0711
*              RFY (REG6,REG7) RESTRICTED;                 /*@Y30LSFY*/
*              REG6 = ADDR(DEVDDN);                        /*@Y30LSFY*/
         LA    REG6,DEVDDN                                         0713
*              REG7 = ADDR(DEVCH);                         /*@Y30LSFY*/
*                                                                  0714
         LA    REG7,DEVCH                                          0714
*LDEVT1:       GEN (DEVTYPE (REG6),(REG7),DEVTAB );        /*@Y30LSFY*/
*                                                                  0715
LDEVT1   DEVTYPE (REG6),(REG7),DEVTAB
*              RESPECIFY RTNREG RSTD;                              0716
*              TESTRC = RTNREG;                                    0717
         STH   RTNREG,TESTRC                                       0717
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30LSFY*/
*                                                                  0718
*              RFY (REG6,REG7) UNRESTRICTED;               /*@Y30LSFY*/
*                                                                  0719
*              IF GDTDBG = NULLPTR                                 0720
*                THEN;                                             0720
         L     @05,@PC00001                                        0720
         L     @05,GDTDBG(,@05)                                    0720
         LTR   @05,@05                                             0720
         BZ    @RT00720                                            0720
*                ELSE                                              0722
*                  CALL IDCDB010 (GDTTBL,'IO01');                  0722
         L     @05,@PC00001                                        0722
         ST    @05,@AL00001                                        0722
         LA    @03,@CC01820                                        0722
         ST    @03,@AL00001+4                                      0722
         MVI   @AL00001+4,X'80'                                    0722
         L     @15,GDTDBG(,@05)                                    0722
         LA    @01,@AL00001                                        0722
         BALR  @14,@15                                             0722
*                                                          /*@Y30LSFY*/
*                                                                  0723
*              IF TESTRC ^= 0                                      0723
*                THEN                                              0723
@RT00720 LH    @05,TESTRC                                          0723
         LTR   @05,@05                                             0723
         BZ    @RF00723                                            0723
*                  DO;                                     /*@Y30LSFY*/
*                    DSIRC = 4;                            /*@Y30LSFY*/
         LA    @15,4                                               0725
         LR    DSIRC,@15                                           0725
*                    INFLEN2 = HDRSZ;                      /*@Y30LSFY*/
         L     @03,@PC00001+4                                      0726
         L     @14,OPRICS(,@03)                                    0726
         L     @01,INFWKPT(,@14)                                   0726
         L     @01,INFWK(,@01)                                     0726
         STH   @15,INFLEN2(,@01)                                   0726
*                    IF OPRPNO  = 5                                0727
*                      THEN                                        0727
*                                                                  0727
         CLI   OPRPNO(@03),5                                       0727
         BNE   @RF00727                                            0727
*                        CALL IDCSAFP0 (GDTTBL,INFPOLID);  /*@Y30SSFY*/
*                                                                  0728
         L     @03,@PC00001                                        0728
         ST    @03,@AL00001                                        0728
         L     @01,INFPOL(,@14)                                    0728
         ST    @01,@AL00001+4                                      0728
         MVI   @AL00001+4,X'80'                                    0728
         L     @15,GDTFPL(,@03)                                    0728
         LA    @01,@AL00001                                        0728
         BALR  @14,@15                                             0728
*                    INFWK = ZERO;                         /*@Y30LSFY*/
@RF00727 L     @03,@PC00001+4                                      0729
         L     @03,OPRICS(,@03)                                    0729
         L     @01,INFWKPT(,@03)                                   0729
         SLR   @00,@00                                             0729
         ST    @00,INFWK(,@01)                                     0729
*                    IF IOINFSUP = OFF                             0730
*                      THEN                                        0730
         L     @01,OPTPTR(,@03)                                    0730
         TM    IOINFSUP(@01),B'00010000'                           0730
         BNZ   @RF00730                                            0730
*                        DO;                               /*@Y30LSFY*/
*                          DARGSENT = DDNGSTID;            /*@Y30LSFY*/
         L     @15,DDSTRU                                          0732
         MVI   DARGSENT(@15),X'24'                                 0732
*                          DARGDBP = INFDNM;               /*@Y30LSFY*/
         L     @03,INFDNM(,@03)                                    0733
         ST    @03,DARGDBP(,@15)                                   0733
*                          DARGILP = 8;                    /*@Y30LSFY*/
         MVC   DARGILP(2,@15),@CH00176                             0734
*                          CALL BLDAMSG;                   /*@Y30LSFY*/
         BAL   @14,BLDAMSG                                         0735
*                        END;                              /*@Y30LSFY*/
*                    RETURN CODE (DSIRC);                  /*@Y30LSFY*/
@RF00730 LR    @15,DSIRC                                           0737
         L     @13,4(,@13)                                         0737
         L     @14,12(,@13)                                        0737
         LM    @00,@12,20(@13)                                     0737
         BR    @14                                                 0737
*                  END;                                    /*@Y30LSFY*/
*                                                                  0738
*              INFDEVT = DEVCH(1:12);                      /*@Y30LSFY*/
@RF00723 MVC   INFDEVT(12,INFWK3),DEVCH                            0739
*              INFLEN2 = INFLEN2 + LENGTH(INFDVT);         /*@Y30LSFY*/
         L     @05,@PC00001+4                                      0740
         L     @05,OPRICS(,@05)                                    0740
         L     @05,INFWKPT(,@05)                                   0740
         L     @05,INFWK(,@05)                                     0740
         LA    @03,16                                              0740
         LH    @15,INFLEN2(,@05)                                   0740
         ALR   @15,@03                                             0740
         STH   @15,INFLEN2(,@05)                                   0740
*              INFDEVID = DVTID;                           /*@Y30LSFY*/
         MVC   INFDEVID(2,INFWK3),@CH00159                         0741
*              INFDEVLN = LENGTH(INFDEVT);                 /*@Y30LSFY*/
         MVC   INFDEVLN(2,INFWK3),@CH00035                         0742
*              INFWK4 = INFWK4 + LENGTH(INFDVT);           /*@Y30SSFY*/
         ALR   INFWK4,@03                                          0743
*          END;                                            /*@Y30LSFY*/
*                                                                  0744
*        /************************************************************/
*        /*                                                  @Y30SSFY*/
*        /* PROCESS FORMAT 4 DSCB TIMESTAMPS IF REQUESTED    @Y30SSFY*/
*        /*                                                  @Y30SSFY*/
*        /************************************************************/
*                                                                  0745
*        IF IOINFTMS = ON                                          0745
*          THEN                                                    0745
@RF00709 L     @03,@PC00001+4                                      0745
         L     @03,OPRICS(,@03)                                    0745
         L     @03,OPTPTR(,@03)                                    0745
         TM    IOINFTMS(@03),B'00001000'                           0745
         BNO   @RF00745                                            0745
*            DO;                                           /*@Y30SSFY*/
*                                                                  0746
*              /******************************************************/
*              /*                                            @Y30SSFY*/
*              /* SET UP CAMLST TO SEARCH FOR FORMAT 4 DSCB  @Y30SSFY*/
*              /*                                            @Y30SSFY*/
*              /******************************************************/
*                                                                  0747
*              CFLGS = CLSRCH;                             /*@Y30SSFY*/
         L     @03,WRKARPTR                                        0747
         MVC   CFLGS(4,@03),CLSRCH                                 0747
*              CLDPT = ADDR(CLDSN);                        /*@Y30SSFY*/
         LA    @15,CLDSN(,@03)                                     0748
         ST    @15,CLDPT(,@03)                                     0748
*              CLVPT = ADDR(CLVLSR);                       /*@Y30SSFY*/
         LA    @15,CLVLSR(,@03)                                    0749
         ST    @15,CLVPT(,@03)                                     0749
*              F4PTR = ADDR(CLDSL4);                       /*@Y30SSFY*/
         LA    @15,CLDSL4(,@03)                                    0750
         ST    @15,F4PTR(,@03)                                     0750
*              CLDSN = F4DSN;                              /*@Y30SSFY*/
         MVC   CLDSN(44,@03),F4DSN                                 0751
*              DS4IDFMT = F4IDCLR;                         /*@Y30SSFY*/
*                                                                  0752
         MVC   DS4IDFMT(1,@15),F4IDCLR                             0752
*              RESPECIFY (REG1) RSTD;                      /*@Y30SSFY*/
*              REG1 = ADDR(CAMLST);                        /*@Y30SSFY*/
         LR    REG1,@03                                            0754
*LOBT1:                                                            0755
*              GEN(OBTAIN ((REG1)));                       /*@Y30SSFY*/
LOBT1    OBTAIN ((REG1))
*              RESPECIFY RTNREG RSTD;                              0756
*              TESTRC = RTNREG;                                    0757
         STH   RTNREG,TESTRC                                       0757
*              RESPECIFY RTNREG UNRSTD;                    /*@Y30SSFY*/
*              RESPECIFY (REG1) UNRSTD;                    /*@Y30SSFY*/
*                                                                  0759
*              IF GDTDBG = NULLPTR                                 0760
*                THEN;                                             0760
         L     @03,@PC00001                                        0760
         L     @03,GDTDBG(,@03)                                    0760
         LTR   @03,@03                                             0760
         BZ    @RT00760                                            0760
*                ELSE                                              0762
*                  CALL IDCDB010 (GDTTBL,'IO0O');                  0762
         L     @03,@PC00001                                        0762
         ST    @03,@AL00001                                        0762
         LA    @15,@CC01823                                        0762
         ST    @15,@AL00001+4                                      0762
         MVI   @AL00001+4,X'80'                                    0762
         L     @15,GDTDBG(,@03)                                    0762
         LA    @01,@AL00001                                        0762
         BALR  @14,@15                                             0762
*                                                          /*@Y30SSFY*/
*                                                                  0763
*              IF DS4IDFMT ^= F4ID                                 0763
*                THEN                                              0763
@RT00760 L     @03,WRKARPTR                                        0763
         L     @03,F4PTR(,@03)                                     0763
         CLC   DS4IDFMT(1,@03),F4ID                                0763
         BE    @RF00763                                            0763
*                  DO;                                     /*@Y30SSFY*/
*                    DSIRC = 4;                            /*@Y30SSFY*/
         LA    @15,4                                               0765
         LR    DSIRC,@15                                           0765
*                    INFLEN2 = HDRSZ;                      /*@Y30SSFY*/
*                                                                  0766
         L     @03,@PC00001+4                                      0766
         L     @03,OPRICS(,@03)                                    0766
         L     @03,INFWKPT(,@03)                                   0766
         L     @03,INFWK(,@03)                                     0766
         STH   @15,INFLEN2(,@03)                                   0766
*                    CALL IDCSAFS0  (GDTTBL,WRKARPTR);     /*@Y30SSFY*/
*                                                                  0767
         L     @03,@PC00001                                        0767
         ST    @03,@AL00001                                        0767
         LA    @15,WRKARPTR                                        0767
         ST    @15,@AL00001+4                                      0767
         L     @15,GDTFSP(,@03)                                    0767
         LA    @01,@AL00001                                        0767
         BALR  @14,@15                                             0767
*                    IF OPRPNO  = 5                                0768
*                      THEN                                        0768
*                                                                  0768
         L     @03,@PC00001+4                                      0768
         CLI   OPRPNO(@03),5                                       0768
         BNE   @RF00768                                            0768
*                        CALL IDCSAFP0 (GDTTBL,INFPOLID);  /*@Y30SSFY*/
*                                                                  0769
         L     @15,@PC00001                                        0769
         ST    @15,@AL00001                                        0769
         L     @03,OPRICS(,@03)                                    0769
         L     @03,INFPOL(,@03)                                    0769
         ST    @03,@AL00001+4                                      0769
         MVI   @AL00001+4,X'80'                                    0769
         L     @15,GDTFPL(,@15)                                    0769
         LA    @01,@AL00001                                        0769
         BALR  @14,@15                                             0769
*                    INFWK = ZERO;                         /*@Y30SSFY*/
@RF00768 L     @03,@PC00001+4                                      0770
         L     @03,OPRICS(,@03)                                    0770
         L     @03,INFWKPT(,@03)                                   0770
         SLR   @15,@15                                             0770
         ST    @15,INFWK(,@03)                                     0770
*                    RETURN CODE (DSIRC);                  /*@Y30SSFY*/
         LR    @15,DSIRC                                           0771
         L     @13,4(,@13)                                         0771
         L     @14,12(,@13)                                        0771
         LM    @00,@12,20(@13)                                     0771
         BR    @14                                                 0771
*                  END;                                    /*@Y30SSFY*/
*                                                                  0772
*              /******************************************************/
*              /*                                            @Y30SSFY*/
*              /* FILL IN INFORMATION FROM FORMAT 4 DSCB     @Y30SSFY*/
*              /*                                            @Y30SSFY*/
*              /******************************************************/
*                                                                  0773
*              INFLEN2 = INFLEN2 + LENGTH(INFOFMT4);       /*@Y30SSFY*/
@RF00763 L     @03,@PC00001+4                                      0773
         L     @03,OPRICS(,@03)                                    0773
         L     @03,INFWKPT(,@03)                                   0773
         L     @03,INFWK(,@03)                                     0773
         LA    @15,20                                              0773
         AH    @15,INFLEN2(,@03)                                   0773
         STH   @15,INFLEN2(,@03)                                   0773
*              INFFM4ID = TMSID;                           /*@Y30SSFY*/
         MVC   INFFM4ID(2,INFWK4),@CH00039                         0774
*              INFFM4LN = LENGTH(INFTMSTS);                /*@Y30SSFY*/
         MVC   INFFM4LN(2,INFWK4),@CH00475                         0775
*              NEWTMST = DS4R2TIM;                         /*@Y30SSFY*/
         L     @03,WRKARPTR                                        0776
         L     @03,F4PTR(,@03)                                     0776
         MVC   NEWTMST(8,INFWK4),DS4R2TIM(@03)                     0776
*              OLDTMST = DS4AMTIM;                         /*@Y30SSFY*/
*                                                                  0777
         MVC   OLDTMST(8,INFWK4),DS4AMTIM(@03)                     0777
*              CALL IDCSAFS0 (GDTTBL,WRKARPTR);            /*@Y30SSFY*/
*                                                                  0778
         L     @15,@PC00001                                        0778
         ST    @15,@AL00001                                        0778
         LA    @14,WRKARPTR                                        0778
         ST    @14,@AL00001+4                                      0778
         L     @15,GDTFSP(,@15)                                    0778
         LA    @01,@AL00001                                        0778
         BALR  @14,@15                                             0778
*            END;                                          /*@Y30SSFY*/
*                                                                  0779
*        /************************************************************/
*        /*                                                  @Y30LSFY*/
*        /* CLEAN UP AND RETURN                              @Y30LSFY*/
*        /*                                                  @Y30LSFY*/
*        /************************************************************/
*                                                                  0780
*        IF GDTDBG = NULLPTR                                       0780
*          THEN;                                                   0780
@RF00745 L     @15,@PC00001                                        0780
         L     @15,GDTDBG(,@15)                                    0780
         LTR   @15,@15                                             0780
         BZ    @RT00780                                            0780
*          ELSE                                                    0782
*            CALL IDCDB010 (GDTTBL,'IO02');                        0782
         L     @15,@PC00001                                        0782
         ST    @15,@AL00001                                        0782
         LA    @14,@CC01824                                        0782
         ST    @14,@AL00001+4                                      0782
         MVI   @AL00001+4,X'80'                                    0782
         L     @15,GDTDBG(,@15)                                    0782
         LA    @01,@AL00001                                        0782
         BALR  @14,@15                                             0782
*                                                          /*@Y30LSFY*/
*                                                                  0783
*        DSIRC = 0;                                        /*@Y30LSFY*/
@RT00780 SLR   DSIRC,DSIRC                                         0783
*        RETURN CODE (DSIRC);                              /*@Y30LSFY*/
         LR    @15,DSIRC                                           0784
         L     @13,4(,@13)                                         0784
         L     @14,12(,@13)                                        0784
         LM    @00,@12,20(@13)                                     0784
         BR    @14                                                 0784
*        END DSINFO;                                       /*@Y30LSFY*/
*                                                                  0785
*        END IDCIO03                                       /*@Y30LSFY*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF05 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF07 )                                        *
*/*%INCLUDE SYSLIB  (IHADCBDF)                                        *
*/*%INCLUDE SYSLIB  (IHADCB  )                                        *
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        *
*/*%INCLUDE SYSLIB  (IDARMRCD)                                        *
*/*%INCLUDE SYSLIB  (IFGEXLST)                                        *
*/*%INCLUDE SYSLIB  (IECSDSL1)                                        *
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                        *
*;                                                                 0786
@DATA    DS    0H
@CH00216 DC    H'1'
@CH00150 DC    H'2'
@CH00159 DC    H'3'
@CH00432 DC    H'5'
@CH00153 DC    H'6'
@CH00176 DC    H'8'
@CH00035 DC    H'12'
@CH00475 DC    H'16'
@CH00305 DC    H'24'
@CH00661 DC    H'44'
@CH01195 DC    H'116'
@SM01828 MVC   KEYCLASS(0),MOVEKEY(@01)
@SM01835 MVC   INFVSER(0,INFWK2),JFCBVOLS(JFCBPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00007 DS    18F
@SA00002 DS    18F
@SA00003 DS    18F
@SA00004 DS    18F
@SA00005 DS    15F
@SA00006 DS    15F
@AL00001 DS    5A
IDCIO03  CSECT
         DS    0F
@CF00112 DC    F'0'
@CF00039 DC    F'4'
@CH00039 EQU   @CF00039+2
@CF01161 DC    F'20'
@CF01429 DC    F'34'
@CF00879 DC    F'48'
@CF01354 DC    F'128'
@CH01354 EQU   @CF01354+2
@CF01418 DC    F'272'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
DCBPTR   DS    A
WRKARPTR DS    A
IOINFSZ  DS    F
DCBEXWRD DS    AL4
         ORG   DCBEXWRD
DCBEXEND DS    BL1
         ORG   DCBEXWRD+4
LISTPTR  DS    A
SETRC    DS    H
TESTRC   DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
SYNPRINT DS    CL150
TEMPKEY  DS    BL256
         ORG   TEMPKEY
KEYCLASS DS    CL256
         ORG   TEMPKEY+256
         DS    CL2
DMSGARG  DS    CL44
STOWWORK DS    CL16
         ORG   STOWWORK
STOWOLD  DS    CL8
STOWNEW  DS    CL8
         ORG   STOWWORK+16
SAVRFM   DS    CL1
         DS    CL3
DARGHEAD DS    CL28
DEVCH    DS    CL20
         DS    CL4
DEVDDN   DS    CL8
DCBRLIST DS    CL4
         ORG   DCBRLIST
DCBRLID  DS    CL1
DCBRLPTR DS    AL3
         ORG   DCBRLIST+4
IDCIO03  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
DSNVTOCP DC    AL4(DSNVTOC)
@CC01338 DC    C'IOPO'
@CC01345 DC    C'IOVT'
@CC01358 DC    C'IOOT'
@CC01369 DC    C'IOSO'
@CC01392 DC    C'IOSR'
@CC01397 DC    C'IOW1'
@CC01812 DC    C'IOIF'
@CC01817 DC    C'IO00'
@CC01820 DC    C'IO01'
@CC01823 DC    C'IO0O'
@CC01824 DC    C'IO02'
@CC01328 EQU   @CC01817
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'IO03'
FIXAREA  DS    CL100
         ORG   FIXAREA
@NM00077 DC    100X'00'
         ORG   FIXAREA+100
IOTEXT   DC    CL5'I/O'
DSNVTOC  DC    CL44'VTOC'
F4ID     DC    CL1'4'
F4IDCLR  DC    CL1'0'
CLSRCH   DC    X'C1000000'
@DATD    DSECT
IDCIO03   CSECT
VTOC     DC    44X'04'
@DATD    DSECT
IDCIO03   CSECT
QSAMDCB  DCB   DSORG=PS,MACRF=(GL)     QSAM DCB               @Y30LSFY
F4DSN    DC    44X'04'                 F4DSCB NAME FOR OBTAIN @Y30SSFY
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCIO03  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
JFCBPTR  EQU   @05
INFOCNT  EQU   @02
GENADDR  EQU   @05
NMSER    EQU   @02
INFWK4   EQU   @02
INFWK3   EQU   @04
INFWK2   EQU   @03
DSIRC    EQU   @02
SAVBLK   EQU   @04
SAVLRE   EQU   @03
STOWRC   EQU   @02
PTAMRC   EQU   @02
RTNREG   EQU   @15
REG1     EQU   @01
REG6     EQU   @06
REG7     EQU   @07
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG0     EQU   @00
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSAGS0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAFP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCKYL   EQU   IOCSTR+12
IOCDSO   EQU   IOCSTR+16
IOCDSOAM EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMACCR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMAC2  EQU   IOCSTR+19
IOCMACRR EQU   IOCMAC2
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCMSGOP EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCDSN   EQU   IOCSTR+32
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCVRC   EQU   IOCTTR
IOCMEM   EQU   IOCSTR+44
IOCKYA   EQU   IOCMEM
IOCNWM   EQU   IOCSTR+48
IOCPTL   EQU   IOCNWM
IOCREL   EQU   IOCSTR+60
IOCEXT   EQU   IOCSTR+64
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
IOINFDVT EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGCNT  EQU   DARGLIST+14
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
DARGDTM  EQU   DARGARY+4
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
IODATA   EQU   0
IODMSG   EQU   IODATA+4
IODSID   EQU   IODATA+16
IODOSS   EQU   IODATA+36
IOCSEX   EQU   0
IOCCBA   EQU   IOCSEX
IOCRPL   EQU   IOCSEX+4
IOCXAD   EQU   IOCSEX+16
IOCEXA   EQU   IOCXAD
IOCXPM   EQU   IOCSEX+20
IOCFLG   EQU   IOCSEX+32
IOCFLGEX EQU   IOCFLG
IOCDEV   EQU   IOCSEX+33
IOCINF   EQU   IOCSEX+34
IOCINFPT EQU   IOCINF
IOCMOD   EQU   IOCSEX+35
IOCDLM   EQU   IOCSEX+36
IOCRCV   EQU   IOCSEX+44
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
DCBEXLSA EQU   DCBEXLST+1
IHADCS24 EQU   0
DCBDDNAM EQU   IHADCS24
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS29 EQU   0
DCBOPTCD EQU   IHADCS29
DCBMAC   EQU   IHADCS29+1
DCBSYNAD EQU   IHADCS29+4
DCBBLKSI EQU   IHADCS29+10
DCBMSHI  EQU   IHADCS29+20
DCBEXCD1 EQU   IHADCS29+28
DCBEXCD2 EQU   IHADCS29+29
DCBEXLTH EQU   DCBEXCD2
DCBLRECL EQU   IHADCS29+30
DCBST    EQU   IHADCS29+108
IHADCS55 EQU   0
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IFGEXLST EQU   0
EXLCOMN  EQU   IFGEXLST
EXLLEN   EQU   EXLCOMN+2
EXLEODF  EQU   EXLCOMN+5
EXLSYNF  EQU   EXLCOMN+10
EXLLERF  EQU   EXLCOMN+15
EXLSCIPF EQU   EXLCOMN+20
EXLLGNF  EQU   EXLCOMN+25
EXLJRNF  EQU   EXLCOMN+30
EXLOPNF  EQU   EXLCOMN+35
IFGEXLEF EQU   0
EXLENTRY EQU   IFGEXLEF
EXLFLAG  EQU   EXLENTRY
EXLENFL  EQU   EXLFLAG
EXLEXITP EQU   EXLENTRY+1
MESSAGE  EQU   0
MSLENGTH EQU   MESSAGE
MOVEKEY  EQU   0
MOVEOLD  EQU   0
MOVENEW  EQU   0
DSNCMP   EQU   0
IDCIOINF EQU   0
INFLEN1  EQU   IDCIOINF
INFLEN2  EQU   IDCIOINF+2
INFDSST  EQU   IDCIOINF+4
INFDSID  EQU   INFDSST
INFDSLN  EQU   INFDSST+2
INFDSNM  EQU   INFDSST+4
INFWK    EQU   0
INFST1   EQU   0
INFVID   EQU   INFST1
INFVLEN  EQU   INFST1+2
INFVSER  EQU   INFST1+4
INFDVT   EQU   0
INFDEVID EQU   INFDVT
INFDEVLN EQU   INFDVT+2
INFDEVT  EQU   INFDVT+4
INFOFMT4 EQU   0
INFFM4ID EQU   INFOFMT4
INFFM4LN EQU   INFOFMT4+2
INFTMSTS EQU   INFOFMT4+4
NEWTMST  EQU   INFTMSTS
OLDTMST  EQU   INFTMSTS+8
INFOPARM EQU   0
OPTPTR   EQU   INFOPARM+4
INFWKPT  EQU   INFOPARM+8
INFDNM   EQU   INFOPARM+12
INFPOL   EQU   INFOPARM+16
DFILE    EQU   0
INFPOLID EQU   0
WORKAREA EQU   0
READDCB  EQU   WORKAREA+176
GENAREA  EQU   0
IECSDSF4 EQU   0
IECSDSL4 EQU   0
DS4IDFMT EQU   IECSDSL4
DS4DEVCT EQU   IECSDSL4+18
DS4DEVOV EQU   DS4DEVCT+6
DS4AMTIM EQU   IECSDSL4+32
DS4AMCAT EQU   IECSDSL4+40
DS4VSIND EQU   DS4AMCAT
DS4R2TIM EQU   IECSDSL4+43
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTIOH   EQU   GDTTBL+36
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTABT   EQU   GDTTBL+152
GDTABH   EQU   GDTTBL+156
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
OPRARG   EQU   0
OPRTYP   EQU   OPRARG
OPRPNO   EQU   OPRARG+1
OPROPT   EQU   OPRARG+2
OPRICS   EQU   OPRARG+4
CAMLST   EQU   WORKAREA
CFLGS    EQU   CAMLST
CLDPT    EQU   CAMLST+4
CLVPT    EQU   CAMLST+8
F4PTR    EQU   CAMLST+12
CLDSL4   EQU   CAMLST+16
CLVLSR   EQU   CAMLST+164
CLDSN    EQU   CAMLST+170
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBNVOL EQU   JFCUCSEG+9
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBSPNM EQU   JFCBS001+45
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
JFCMSVGP EQU   JFCBS001+22
@NM00087 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00086 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCORGAM EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00085 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
OPROCS   EQU   OPRARG+8
@NM00041 EQU   OPRARG+3
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCDISP  EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00084 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
DS4END   EQU   IECSDSL4+96
@NM00083 EQU   IECSDSL4+71
DS4VTOCE EQU   IECSDSL4+61
DS4F6PTR EQU   IECSDSL4+56
@NM00082 EQU   IECSDSL4+51
DS4VSCRA EQU   DS4AMCAT+1
@NM00081 EQU   DS4VSIND
DS4VSBAD EQU   DS4VSIND
DS4VSREF EQU   DS4VSIND
DS4DEVDB EQU   DS4DEVCT+13
DS4DEVDT EQU   DS4DEVCT+12
DS4DEVTL EQU   DS4DEVCT+10
DS4DEVFG EQU   DS4DEVCT+9
DS4DEVK  EQU   DS4DEVCT+8
DS4DEVL  EQU   DS4DEVOV+1
DS4DEVI  EQU   DS4DEVOV
DS4DEVTK EQU   DS4DEVCT+4
DS4DEVSZ EQU   DS4DEVCT
@NM00080 EQU   IECSDSL4+16
DS4NOEXT EQU   IECSDSL4+15
DS4VTOCI EQU   IECSDSL4+14
DS4NOATK EQU   IECSDSL4+12
DS4HCCHH EQU   IECSDSL4+8
DS4DSREC EQU   IECSDSL4+6
DS4HPCHR EQU   IECSDSL4+1
@NM00079 EQU   IECSDSF4
JFCBAREA EQU   WORKAREA
@NM00078 EQU   INFOPARM
EXLEADDR EQU   EXLEXITP
@NM00076 EQU   EXLENFL
EXLLNK   EQU   EXLENFL
EXLACTM  EQU   EXLENFL
EXLSPEC  EQU   EXLENFL
EXLOPNP  EQU   EXLCOMN+36
@NM00075 EQU   EXLOPNF
EXLOPNK  EQU   EXLOPNF
EXLOPNA  EQU   EXLOPNF
EXLOPNS  EQU   EXLOPNF
EXLJRNP  EQU   EXLCOMN+31
@NM00074 EQU   EXLJRNF
EXLJRNK  EQU   EXLJRNF
EXLJRNA  EQU   EXLJRNF
EXLJRNS  EQU   EXLJRNF
EXLLGNP  EQU   EXLCOMN+26
@NM00073 EQU   EXLLGNF
EXLLGNK  EQU   EXLLGNF
EXLLGNA  EQU   EXLLGNF
EXLLGNS  EQU   EXLLGNF
EXLSCIPP EQU   EXLCOMN+21
@NM00072 EQU   EXLSCIPF
EXLSCIPK EQU   EXLSCIPF
EXLSCIPA EQU   EXLSCIPF
EXLSCIPS EQU   EXLSCIPF
EXLLERP  EQU   EXLCOMN+16
@NM00071 EQU   EXLLERF
EXLLERK  EQU   EXLLERF
EXLLERA  EQU   EXLLERF
EXLLERS  EQU   EXLLERF
EXLSYNP  EQU   EXLCOMN+11
@NM00070 EQU   EXLSYNF
EXLSYNK  EQU   EXLSYNF
EXLSYNA  EQU   EXLSYNF
EXLSYNS  EQU   EXLSYNF
EXLEODP  EQU   EXLCOMN+6
@NM00069 EQU   EXLEODF
EXLEODK  EQU   EXLEODF
EXLEODA  EQU   EXLEODF
EXLEODS  EQU   EXLEODF
@NM00068 EQU   EXLCOMN+4
EXLLEN2  EQU   EXLLEN
EXLSTYP  EQU   EXLCOMN+1
EXLID    EQU   EXLCOMN
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00067 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00066 EQU   RPLRBAR+3
@NM00065 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00064 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
@NM00063 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00062 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
DCBLPDT  EQU   IHADCS55
DCBWKPT6 EQU   IHADCS29+196
DCBWKPT5 EQU   IHADCS29+192
DCBWKPT4 EQU   IHADCS29+188
DCBWKPT3 EQU   IHADCS29+184
DCBWKPT2 EQU   IHADCS29+180
DCBWKPT1 EQU   IHADCS29+176
@NM00061 EQU   IHADCS29+174
DCBRORG1 EQU   IHADCS29+172
DCBLIOV  EQU   IHADCS29+164
DCBNOREC EQU   IHADCS29+162
@NM00060 EQU   IHADCS29+161
DCBLEMI1 EQU   IHADCS29+156
DCBRORG2 EQU   IHADCS29+154
@NM00059 EQU   IHADCS29+153
DCBLECI  EQU   IHADCS29+148
DCBNBOV  EQU   IHADCS29+146
DCBOVDEV EQU   IHADCS29+145
DCBLETI  EQU   IHADCS29+140
DCBLPDA  EQU   IHADCS29+132
DCBFTHI  EQU   IHADCS29+125
DCBNTHI  EQU   IHADCS29+124
DCBFTMI1 EQU   IHADCS29+117
DCBHIIOV EQU   IHADCS29+116
DCBFTCI  EQU   IHADCS29+109
DCBSTLTF EQU   DCBST
DCBSTLBF EQU   DCBST
DCBSTNMC EQU   DCBST
@NM00058 EQU   DCBST
DCBSTNCY EQU   DCBST
DCBSTLOD EQU   DCBST
DCBSTKSQ EQU   DCBST
DCBSTSSM EQU   DCBST
DCBNREC  EQU   IHADCS29+104
DCBRORG3 EQU   IHADCS29+100
DCBNCRHI EQU   IHADCS29+98
DCBTDC   EQU   IHADCS29+96
DCBHIRSH EQU   IHADCS29+95
DCBHIROV EQU   IHADCS29+94
DCBHIRPD EQU   IHADCS29+93
DCBHIRCM EQU   IHADCS29+92
DCBLDT   EQU   IHADCS29+90
DCBHMASK EQU   IHADCS29+89
DCBFIRSH EQU   IHADCS29+86
DCBNLEV  EQU   IHADCS29+85
DCBLEMI3 EQU   IHADCS29+80
DCBFTMI3 EQU   IHADCS29+73
DCBLEMI2 EQU   IHADCS29+68
DCBFTMI2 EQU   IHADCS29+61
DCBHIRTI EQU   IHADCS29+60
DCBFREED EQU   IHADCS29+56
DCBRELEX EQU   IHADCS29+52
DCBPUTX  EQU   IHADCS29+48
DCBRELSE EQU   IHADCS29+44
DCBLWKN  EQU   IHADCS29+40
DCBLRAN  EQU   IHADCS29+36
DCBESETL EQU   IHADCS29+32
@NM00057 EQU   DCBEXCD2
DCBEXRDE EQU   DCBEXLTH
DCBEXOFL EQU   DCBEXCD2
DCBEXCLD EQU   DCBEXCD2
DCBEXDUP EQU   DCBEXCD2
DCBEXSEQ EQU   DCBEXCD2
DCBEXBLU EQU   DCBEXCD1
DCBEXBLI EQU   DCBEXCD1
DCBEXOER EQU   DCBEXCD1
DCBEXIER EQU   DCBEXCD1
DCBEXINV EQU   DCBEXCD1
DCBEXNSP EQU   DCBEXCD1
DCBEXIDA EQU   DCBEXCD1
DCBEXNKY EQU   DCBEXCD1
DCBSETL  EQU   IHADCS29+24
DCBMSHIA EQU   DCBMSHI+1
DCBNCP   EQU   DCBMSHI
DCBSMSW  EQU   IHADCS29+18
DCBSMSI  EQU   IHADCS29+16
DCBMSWA  EQU   IHADCS29+12
DCBRKP   EQU   IHADCS29+8
DCBCYLOF EQU   IHADCS29+3
DCBNTM   EQU   IHADCS29+2
DCBMACRE EQU   DCBMAC
DCBMACAW EQU   DCBMAC
DCBMACUW EQU   DCBMAC
DCBMACUR EQU   DCBMAC
@NM00056 EQU   DCBMAC
DCBOPTR  EQU   DCBOPTCD
DCBOPTL  EQU   DCBOPTCD
@NM00055 EQU   DCBOPTCD
DCBOPTY  EQU   DCBOPTCD
DCBOPTI  EQU   DCBOPTCD
DCBOPTM  EQU   DCBOPTCD
DCBOPTUF EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00054 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00053 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00052 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00051 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00050 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00049 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00048 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00047 EQU   DCBDSRG1
@NM00046 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00045 EQU   IHADCS01+5
@NM00044 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00043 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00042 EQU   IHADCB
@NM00040 EQU   IOCRCV
IOCRCVRA EQU   IOCRCV
IOCRCVXM EQU   IOCRCV
IOCVLN   EQU   IOCSEX+42
IOCDNM   EQU   IOCSEX+40
IOCDDN   EQU   IOCDLM
IOCMODEX EQU   IOCMOD
IOCMODRP EQU   IOCMOD
IOCMODXM EQU   IOCMOD
IOCMODUB EQU   IOCMOD
IOCMODRG EQU   IOCMOD
IOCMODDY EQU   IOCMOD
IOCMODRR EQU   IOCMOD
IOCMODPD EQU   IOCMOD
IOCINFR1 EQU   IOCINF
IOCINFCT EQU   IOCINF
IOCINFDO EQU   IOCINF
IOCINFAC EQU   IOCINF
IOCINFQX EQU   IOCINF
IOCINFND EQU   IOCINF
IOCINFAE EQU   IOCINF
@NM00039 EQU   IOCDEV
IOCDEVUR EQU   IOCDEV
IOCDEVMT EQU   IOCDEV
IOCDEVDA EQU   IOCDEV
@NM00038 EQU   IOCFLG
IOCFLGSP EQU   IOCFLG
IOCFLGOE EQU   IOCFLG
IOCFLGOP EQU   IOCFLG
IOCFLGIO EQU   IOCFLG
IOCFLGEF EQU   IOCFLG
IOCFLGDF EQU   IOCFLG
IOCSID   EQU   IOCSEX+28
IOCNIO   EQU   IOCSEX+24
@NM00037 EQU   IOCXPM+2
IOCEXL   EQU   IOCXPM
IOCWKA   EQU   IOCSEX+12
IOCLRP   EQU   IOCSEX+10
IOCCBL   EQU   IOCSEX+8
IOCDEC   EQU   IOCRPL
@NM00036 EQU   IODATA+64
IODAEI   EQU   IODATA+60
@NM00035 EQU   IODATA+56
IODIOX   EQU   IODATA+52
IODOCS   EQU   IODATA+48
IODICS   EQU   IODATA+44
IODOSO   EQU   IODATA+40
IODEOD   EQU   IODATA+32
@NM00034 EQU   IODATA+30
@NM00033 EQU   IODATA+28
IODOEV   EQU   IODATA+24
IODIEV   EQU   IODATA+20
IODINC   EQU   IODSID+2
IODMID   EQU   IODSID
IODXTN   EQU   IODATA+12
IODADD   EQU   IODATA+8
IODIOC   EQU   IODATA
@NM00032 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00031 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00030 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00029 EQU   ERCNVTAB+4
@NM00028 EQU   ERCNVTAB+3
@NM00027 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00026 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00025 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00024 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00023 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00022 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00021 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGRETP EQU   DARGLIST+4
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00020 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00019 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00018 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00017 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00016 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCCBP   EQU   IOCSTR+36
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00015 EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00007 EQU   @EL00001
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCIO03,(C'PLS1301',0701,76118)
