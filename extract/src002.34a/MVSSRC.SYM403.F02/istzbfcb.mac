         TITLE 'ISTZBFCB/ACB-VS1/MCB-VS2: WRITE SOH LCCW PROCESSOR     *
                        '
ISTZBFCB CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTZBFCB  75.134'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
*                                                                  0353
*/* TPZSAVE (7,12,14) AC(BCCB)BASE                                   */
*                                                                  0353
*   DO;                                                            0353
*     DCL                                                          0354
*       GPR01F FIXED(31) REG(01);                                  0354
*     DCL                                                          0355
*       GPR01P PTR(31) REG(01);                                    0355
*     DCL                                                          0356
*       GPR12F FIXED(31) REG(12);                                  0356
*     DCL                                                          0357
*       GPR12P PTR(31) REG(12);                                    0357
*     DCL                                                          0358
*       GPR13F FIXED(31) REG(13);                                  0358
*     DCL                                                          0359
*       GPR13P PTR(31) REG(13);                                    0359
*     DCL                                                          0360
*       GPR14F FIXED(31) REG(14);                                  0360
*     DCL                                                          0361
*       GPR14P PTR(31) REG(14);                                    0361
*     RFY                                                          0362
*      (GPR01P,                                                    0362
*       GPR12P,                                                    0362
*       GPR13P,                                                    0362
*       GPR14P) RSTD;                                              0362
*     GEN(PRINT OFF);                                              0363
*                                                                  0363
         PRINT OFF
*/* ATBUILD (ISTZSAVE)                                               */
*/* END OF ATBUILD                                                   */
*                                                                  0364
*     GEN(PRINT ON);                                               0364
         PRINT ON
*     RFY                                                          0365
*       ISTZSAVE BASED(GPR13P);                                    0365
*     GEN SETS(ZSAZSVVR)(STM   7,12,ZSAZSVVR+0(13));               0366
         STM   7,12,ZSAZSVVR+0(13)
*     GEN SETS(GPR12P);                                            0367
         BALR  GPR12P,0
@TSTART  DS    0H
         USING @TSTART,GPR12P
*     GEN(PRINT OFF);                                              0368
*                                                                  0368
         PRINT OFF
*/* ATBUILD (ISTZCRR,ISTRPH,ISTCRA) EJECT(NO)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0369
*     GEN(PRINT ON);                                               0369
         PRINT ON
*     GPR01P->RPHCRR->CRACRR->ZCREBCCB='1'B;                       0370
         L     @15,RPHCRR(,GPR01P)                                 0370
         L     @15,CRACRR(,@15)                                    0370
         OI    ZCREBCCB(@15),B'00000100'                           0370
*     ZSAZACTV='1'B;                                               0371
         OI    ZSAZACTV(GPR13P),B'10000000'                        0371
*     ZSAZTRAC='BCCB';                                             0372
         MVC   ZSAZTRAC(4,GPR13P),@CC02882                         0372
*     ZSAZSVRR=GPR14P;                                             0373
         ST    GPR14P,ZSAZSVRR(,GPR13P)                            0373
*     GPR13P=ZSAZSVFC;                                             0374
         L     GPR13P,ZSAZSVFC(,GPR13P)                            0374
*     RFY                                                          0375
*      (GPR01P) UNRSTD;                                            0375
*     RFY                                                          0376
*      (GPR14P) UNRSTD;                                            0376
*   END;                                                           0377
*                                                                  0377
*/* END TPZSAVE                                                      */
*                                                                  0378
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(BFCB010)REQUEST                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   DO;                                                            0378
*     GOTO BFCB010;                                                0379
         B     BFCB010                                             0379
*BFCB010#:                                                         0380
*   END;                            /* VALIDATE INPUT        @XL03HEN*/
BFCB010# DS    0H                                                  0381
*   IF LCPZRT00='1'B                /* IF ERROR DECTECTED            */
*       ×LCPZRT01='1'B THEN                                        0381
         TM    LCPZRT00(PTRLCP),B'11000000'                        0381
         BNZ   @RT00381                                            0381
*     ;                             /* THEN STOP PROCESSING          */
*   ELSE                            /* NO ERROR DECTECTED            */
*     DO;                                                          0383
*                                                                  0383
*       /*************************************************************/
*       /*                                                           */
*       /* SEGMENT(BFCB020)REQUEST                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0384
*       DO;                                                        0384
*         GOTO BFCB020;                                            0385
         B     BFCB020                                             0385
*BFCB020#:                                                         0386
*       END;                        /* ANALYZE SESSION       @XL03HEN
*                                      STATUS                        */
BFCB020# DS    0H                                                  0387
*       IF LCPZRT00='1'B            /* IF ERROR DECTECTED            */
*           ×LCPZRT01='1'B THEN                                    0387
         TM    LCPZRT00(PTRLCP),B'11000000'                        0387
         BNZ   @RT00387                                            0387
*         ;                         /* THEN STOP PROCESSING          */
*       ELSE                        /* OTHERWISE CONTINUE            */
*         DO;                                                      0389
*           RFY                                                    0390
*             RCDREG RSTD;          /* FOR RETURN CODE CHECKING      */
*                                                                  0390
*           /*********************************************************/
*           /*                                                       */
*           /* SEGMENT(BFCB030)REQUEST                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0391
*           DO;                                                    0391
*             GOTO BFCB030;                                        0392
         B     BFCB030                                             0392
*BFCB030#:                                                         0393
*           END;                                                   0393
BFCB030# DS    0H                                                  0394
*           IF RCDREG=CCOFF THEN    /* IF NOT COMMAND CHAINING       */
*                                                                  0394
         LTR   RCDREG,RCDREG                                       0394
         BNZ   @RF00394                                            0394
*             /*******************************************************/
*             /*                                                     */
*             /* SEGMENT(BFCB040)REQUEST                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0395
*             DO;                                                  0395
*               GOTO BFCB040;                                      0396
         B     BFCB040                                             0396
*BFCB040#:                                                         0397
*             END;                  /* GENERATE BTH          @XL03HEN*/
*           ELSE                                                   0398
*             ;                     /* OTHERWISE DON'T               */
@RF00394 DS    0H                                                  0399
*         END;                                                     0399
@RC00394 DS    0H                                                  0400
*     END;                                                         0400
@RT00387 DS    0H                                                  0401
*   IF LCPZRT00='1'B                /* IF ERROR DECTECTED            */
*       ×LCPZRT01='1'B THEN                                        0401
@RT00381 TM    LCPZRT00(PTRLCP),B'11000000'                        0401
         BZ    @RF00401                                            0401
*     CALL ISTZBFZ0;                /* CALL INVALID LCP RECOVERY     */
         L     @09,ATCZPSVT(,PTRATC)                               0402
         L     @15,ZPSZBFZ0(,@09)                                  0402
         BALR  @14,@15                                             0402
*   ELSE                            /* NO ERROR DECTECTED            */
*     IF LCCWLSI='1'B THEN          /* IF LCCW SYNCH REQUIRED        */
         B     @RC00401                                            0403
@RF00401 TM    LCCWLSI(PTRLCC),B'00000100'                         0403
         BNO   @RF00403                                            0403
*       CALL ISTZBFY0;              /* CALL LCCW SYNCH ROUTINE       */
         L     @09,ATCZPSVT(,PTRATC)                               0404
         L     @15,ZPSZBFY0(,@09)                                  0404
         BALR  @14,@15                                             0404
*     ELSE                                                         0405
*       ;                           /* OTHERWISE DON'T               */
@RF00403 DS    0H                                                  0406
*/* TPZRETN                                                          */
*                                                                  0406
*   DO;                                                            0406
@RC00401 DS    0H                                                  0407
*     DCL                                                          0407
*       GPR07F FIXED(31) REG(07);                                  0407
*     DCL                                                          0408
*       GPR07P PTR(31) REG(07);                                    0408
*     DCL                                                          0409
*       GPR15F FIXED(31) REG(15);                                  0409
*     DCL                                                          0410
*       GPR15P PTR(31) REG(15);                                    0410
*     RFY                                                          0411
*      (GPR07P,                                                    0411
*       GPR14P,                                                    0411
*       GPR15P) RSTD;                                              0411
*     GPR13P=ZSAZSVBC;                                             0412
         L     GPR13P,ZSAZSVBC(,GPR13P)                            0412
*     IF GPR13P=0 THEN                                             0413
         LTR   GPR13P,GPR13P                                       0413
         BZ    @RT00413                                            0413
*       ;                           /* TPDVTS ISTZFARR               */
*     ELSE                                                         0415
*       GPR14P=ZSAZSVRR;                                           0415
         L     GPR14P,ZSAZSVRR(,GPR13P)                            0415
*     GEN REFS(ZSAZSVVR)(LM    7,12,ZSAZSVVR+0(13));               0416
@RT00413 DS    0H                                                  0416
         LM    7,12,ZSAZSVVR+0(13)
*     GEN REFS(GPR14P) EXIT NOSEQFLOW(BR    GPR14P);               0417
         BR    GPR14P
*     RFY                                                          0418
*      (GPR07P,                                                    0418
*       GPR14P,                                                    0418
*       GPR15P) UNRSTD;                                            0418
*   END;                                                           0419
*                                                                  0419
*/* END TPZRETN                                                      */
*                                                                  0420
*   GEN NOSETS NOREFS NODEFS(EJECT);                               0420
         EJECT
*                                                                  0421
*/********************************************************************/
*/*                                                                  */
*/* TITLE-                                                           */
*/*      BFCB0010 - LCCW VALIDATION PROCESSOR                        */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      THE LCCW IS CHECKED FOR COMMAND CHAINING. IF IT IS          */
*/*      NOT COMMAND CHAINED, NO FURTHER CHECKS ARE MADE.            */
*/*      IF IT IS COMMAND CHAINED, THE FOLLOWING ERROR CHECKS ARE    */
*/*      MADE:                                                       */
*/*      1. END DIALOG FLAG ON IN LCCW.                              */
*/*      2. NEXT LCCW THAT IS NOT A TIC IS NOT A WRITE LCCW.         */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(BFCB010)START                                            */
*                                                                  0421
*   DO;                                                            0421
*     GOTO BFCB010@;                                               0422
         B     BFCB010@                                            0422
*BFCB010:                                                          0423
*   END;                                                           0423
BFCB010  DS    0H                                                  0424
*   PTRLCC=LCPNXLCW;                /* ADDRESS LCCW                  */
         L     PTRLCC,LCPNXLCW(,PTRLCP)                            0424
*   IF DNCZF006='0'B&DNCPSOL='1'B THEN/* SWITCHED CALL-IN LINE WITH
*                                                            @XL03HDP*/
         TM    DNCPSOL(PTRDNC),B'00001000'                         0425
         BNO   @RF00425                                            0425
         TM    DNCZF006(PTRDNC),B'00100000'                        0425
         BNZ   @RF00425                                            0425
*     DO;                           /* NO CONNECTION MADE ?          */
*       LCPZRT00='1'B;              /* SET ERROR FLAG        @XL03HEN*/
         OI    LCPZRT00(PTRLCP),B'10000000'                        0427
*       LCPMNRCD=FRMNORD;           /* SETERROR CODE         @XL03HEN*/
         MVI   LCPMNRCD(PTRLCP),X'AC'                              0428
*     END;                                                         0429
*   ELSE                                                           0430
*     IF LCCWCC='1'B THEN           /* IF LCCW COMMAND CHAINED       */
         B     @RC00425                                            0430
@RF00425 TM    LCCWCC(PTRLCC),B'01000000'                          0430
         BNO   @RF00430                                            0430
*       IF LCCWSD='1'B THEN         /* IF END DIALOG FLAG ON         */
         TM    LCCWSD(PTRLCC),B'01000000'                          0431
         BNO   @RF00431                                            0431
*         DO;                       /* ERROR - COMMAND CHAIN + SD    */
*           LCPZRT00='1'B;          /* SET ERROR FLAG                */
         OI    LCPZRT00(PTRLCP),B'10000000'                        0433
*           LCPMNRCD=FRMCDITS;      /* INVALID INITIATION            */
         MVI   LCPMNRCD(PTRLCP),X'A6'                              0434
*         END;                                                     0435
*       ELSE                        /* END DIALOG FLAG OFF           */
*         DO;                       /* CHECK OUT NEXT LCCW           */
         B     @RC00431                                            0436
@RF00431 DS    0H                                                  0437
*           PTRLCC=PTRLCC+          /* ADDRESS NEXT LCCW             */
*               LENGTH(ISTLCCW);                                   0437
         AL    PTRLCC,@CF00038                                     0437
*           DO WHILE(LCCWOP=LTIC);  /* FLUSH OUT ANY TICS            */
         B     @DE00438                                            0438
@DL00438 DS    0H                                                  0439
*             PTRLCC=LCCWDATA;      /* ADDRESS NEXT LCCW             */
         L     PTRLCC,LCCWDATA(,PTRLCC)                            0439
*             LCPLCCWC=LCPLCCWC+1;  /* UPDATE LCCW/LCP COUNT @XL03HEN*/
         LA    @14,1                                               0440
         SLR   @09,@09                                             0440
         IC    @09,LCPLCCWC(,PTRLCP)                               0440
         ALR   @14,@09                                             0440
         STC   @14,LCPLCCWC(,PTRLCP)                               0440
*           END;                                                   0441
@DE00438 CLI   LCCWOP(PTRLCC),X'08'                                0441
         BE    @DL00438                                            0441
*           IF LCCWRWOP=LWB         /* IF WRITE LCCW COMMAND         */
*               ×LCCWRWOP=LWM×LCCWRWOP=LWT THEN/* THEN NOT AN ERROR  */
         TM    LCCWRWOP(PTRLCC),B'00000101'                        0442
         BNO   @GL00002                                            0442
         TM    LCCWRWOP(PTRLCC),B'00111010'                        0442
         BZ    @RT00442                                            0442
@GL00002 TM    LCCWRWOP(PTRLCC),B'00001001'                        0442
         BNO   @GL00001                                            0442
         TM    LCCWRWOP(PTRLCC),B'00110110'                        0442
         BZ    @RT00442                                            0442
@GL00001 TM    LCCWRWOP(PTRLCC),B'00001101'                        0442
         BNO   @RF00442                                            0442
         TM    LCCWRWOP(PTRLCC),B'00110010'                        0442
         BNZ   @RF00442                                            0442
@RT00442 DS    0H                                                  0443
*             PTRLCC=LCPNXLCW;      /* RE-ADDRESS WRITE SOH LCCW     */
         L     PTRLCC,LCPNXLCW(,PTRLCP)                            0443
*           ELSE                    /* NEXT LCCW NOT A WRITE         */
*             DO;                   /* SET ERROR CODE                */
         B     @RC00442                                            0444
@RF00442 DS    0H                                                  0445
*               LCPZRT01='1'B;      /* SET CONTROL BLCOK ERROR       */
         OI    LCPZRT01(PTRLCP),B'01000000'                        0445
*               LCPMNRCD=FRMINVCF;  /* INVALID CHAINING FIELD        */
         MVI   LCPMNRCD(PTRLCP),X'81'                              0446
*             END;                                                 0447
*         END;                      /* END CHECK OUT NEXT LCCW       */
*     ELSE                                                         0449
*       ;                           /* NOT COMMAND CHAINED           */
@RF00430 DS    0H                                                  0450
*/* SEGMENT(BFCB010)FINISH                                           */
*                                                                  0450
*   DO;                                                            0450
@RC00430 DS    0H                                                  0450
@RC00425 DS    0H                                                  0451
*     GOTO BFCB010#;                                               0451
         B     BFCB010#                                            0451
*BFCB010@:                                                         0452
*   END;                                                           0452
BFCB010@ DS    0H                                                  0453
*   GEN NOSETS NOREFS NODEFS(EJECT);                               0453
         EJECT
*                                                                  0454
*/********************************************************************/
*/*                                                                  */
*/* TITLE-                                                           */
*/*      BFCB0020 - ANALYZE SESSION STATUS                           */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      CHECKS FOR IN SESSION OR CONTACT OR INVITE PENDING.  IF     */
*/*      NONE OF THESE CONDITIONS ARE MET, THE CONTACT MODIFIER      */
*/*      IS SET ON IN THE BDU, CONTACT PENDING IS FLAGGED, AND       */
*/*      THE SESSION COUNT IS INCREMENTED.  IT ANY OF THE SESSION    */
*/*      FLAGS ARE SET, A CHECK IS MADE FOR DISCONNECT PENDING.      */
*/*      IF A DISCONNECT IS PENDING, A SESSION IS INITIATED AS       */
*/*      BEFORE.  IF DISCONNECT IS NOT PENDING AND THE START DIALOG  */
*/*      FLAG IS SET IN THE LCCW, AN ERROR CONDITION IS INDICATED.   */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(BFCB020)START                                            */
*                                                                  0454
*   DO;                                                            0454
*     GOTO BFCB020@;                                               0455
         B     BFCB020@                                            0455
*BFCB020:                                                          0456
*   END;                                                           0456
BFCB020  DS    0H                                                  0457
*   RFY                                                            0457
*     SCEDPARM RSTD;                                               0457
*   RFY                                                            0458
*     RCDREG RSTD;                                                 0458
*   IF FMCZFA06='1'B                /* IF ALREADY IN SESSION         */
*       ×FMCZFB06='1'B              /* OR SESSION PENDING            */
*       ×FMCZFC06='1'B THEN                                        0459
         TM    FMCZFA06(PTRFMC),B'00000111'                        0459
         BZ    @RF00459                                            0459
*     IF FMCZFD06='1'B THEN         /* THEN IF DISCONNECT PENDING    */
         TM    FMCZFD06(PTRFMC),B'10000000'                        0460
         BNO   @RF00460                                            0460
*       DO;                         /* INITIATE SESSION              */
*         BDUMODIF=BMODWC;          /* SET WRITE CONTACT MODIFIER    */
         MVI   BDUMODIF+42(PTRZOB),X'08'                           0462
*         FMCZFC06='1'B;            /* SET CONTACT OUTSTANDING       */
         OI    FMCZFC06(PTRFMC),B'00000001'                        0463
*         DNCCONT='1'B;             /* SET CONTACT OUTSTANDING       */
         OI    DNCCONT(PTRDNC),B'00010000'                         0464
*         FMCZX001=FMCZX001+1;      /* INCREMENT SESSION COUNT       */
         LA    @14,1                                               0465
         SLR   @09,@09                                             0465
         IC    @09,FMCZX001(,PTRFMC)                               0465
         ALR   @14,@09                                             0465
         STC   @14,FMCZX001(,PTRFMC)                               0465
*       END;                        /* SESSION INITIATED             */
*     ELSE                          /* DISCONNECT IS NOT PENDING     */
*       IF LCCWSI='1'B THEN         /* IF START DIALOG FLAG ON       */
         B     @RC00460                                            0467
@RF00460 TM    LCCWSI(PTRLCC),B'10000000'                          0467
         BNO   @RF00467                                            0467
*         DO;                       /* THEN SET ERROR CODE           */
*           LCPZRT00='1'B;          /* SET LOGICAL ERROR FLAG        */
         OI    LCPZRT00(PTRLCP),B'10000000'                        0469
*           LCPMNRCD=FRMCDITS;      /* SET INVALID INITIATION FLG    */
         MVI   LCPMNRCD(PTRLCP),X'A6'                              0470
*         END;                                                     0471
*       ELSE                                                       0472
*         ;                         /* OTHERWISE DON'T               */
@RF00467 DS    0H                                                  0473
*   ELSE                            /* NO SESSION PENDING            */
*     DO;                                                          0473
         B     @RC00459                                            0473
@RF00459 DS    0H                                                  0474
*       SCEDPARM=8;                                                0474
         LA    SCEDPARM,8                                          0474
*       CALL ISTZBFNB;              /*                       @XL03HEN
*                                      CALL SESSION SCHEDULER        */
         L     @09,PABDVTA+95(,PTRFMC)                             0475
         LA    @09,0(,@09)                                         0475
         L     @15,ZLBZBFNB(,@09)                                  0475
         BALR  @14,@15                                             0475
*       IF RCDREG=0 THEN            /* CONTINUE FOR NON-ERROR        */
         LTR   RCDREG,RCDREG                                       0476
         BNZ   @RF00476                                            0476
*         DO;                       /* RETURN                @XL03HEN*/
*           BDUMODIF=BMODWC;        /* WRITE CONTACT         @XL03HEN*/
         LA    @14,42                                              0478
         ALR   @14,PTRZOB                                          0478
         MVI   BDUMODIF(@14),X'08'                                 0478
*           BDURTOE='1'B;           /* RETN TEXT ON ERROR    @X50BHXF*/
         OI    BDURTOE(@14),B'00000010'                            0479
*           FMCZFC06='1'B;          /* CONTACT OUTSTANDNG@XL03HEN FOR
*                                      FUNCTION                      */
         OI    FMCZFC06(PTRFMC),B'00000001'                        0480
*           DNCCONT='1'B;           /* AND FOR DEVICE        @XL03HEN*/
         OI    DNCCONT(PTRDNC),B'00010000'                         0481
*           FMCZX001=FMCZX001+1;    /* BUMP SESSION CNT.     @XL03HEN*/
         LA    @14,1                                               0482
         SLR   @09,@09                                             0482
         IC    @09,FMCZX001(,PTRFMC)                               0482
         ALR   @14,@09                                             0482
         STC   @14,FMCZX001(,PTRFMC)                               0482
*         END;                                                     0483
*       ELSE                                                       0484
*         BTUZRT0A='1'B;            /* SIMULATE CONTACT      @XL03HEN*/
         B     @RC00476                                            0484
@RF00476 OI    BTUZRT0A+28(PTRZOB),B'00100000'                     0484
*     END;                                                         0485
@RC00476 DS    0H                                                  0486
*   RFY                                                            0486
*     RCDREG UNRSTD;                                               0486
@RC00459 DS    0H                                                  0487
*   RFY                                                            0487
*     SCEDPARM UNRSTD;                                             0487
*                                                                  0487
*/* SEGMENT(BFCB020)FINISH                                           */
*                                                                  0488
*   DO;                                                            0488
*     GOTO BFCB020#;                                               0489
         B     BFCB020#                                            0489
*BFCB020@:                                                         0490
*   END;                                                           0490
BFCB020@ DS    0H                                                  0491
*   GEN NOSETS NOREFS NODEFS(EJECT);                               0491
         EJECT
*                                                                  0492
*/********************************************************************/
*/*                                                                  */
*/* TITLE-                                                           */
*/*      BFCB0030 - GENERATE BDU                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      THE BDU IS INITIALIZED.                                     */
*/*      THE BDUSOH FLAG IS SET TO INDIATE THE SOH FUNCTION.         */
*/*      THE FDB DATA ADDRESS AND LENGTH ARE SET UP.                 */
*/*      DATA IS MOVED FROM THE USER BUFFER TO THE FIXED ZOBUF AREA. */
*/*      IF COMMAND CHAINING IS SPECIFIED, A 'STX' CHARACTER IS      */
*/*      MOVED INTO THE DATA STREAM.                                 */
*/*      MODIFIERS ARE SET ACCORDING TO THE LCCW OPTIONS.            */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(BFCB030)START                                            */
*                                                                  0492
*   DO;                                                            0492
*     GOTO BFCB030@;                                               0493
         B     BFCB030@                                            0493
*BFCB030:                                                          0494
*   END;                                                           0494
BFCB030  DS    0H                                                  0495
*   RFY                                                            0495
*     LNKREG RSTD;                  /* USED AS SCRATCH POINTER       */
*   RFY                                                            0496
*     RCDREG RSTD;                  /* USED AS SCRATCH COUNTER       */
*   FDBDATAA=ADDR(ZOBBTU);          /* INITIALIZE DATA ADDRESS       */
         LA    @09,ZOBBTU(,PTRZOB)                                 0497
         ST    @09,FDBDATAA(,PTRZOB)                               0497
*   FDBDATCT=LENGTH(ISTBTU);        /* INITIALIZE DATA COUNT         */
         MVC   FDBDATCT(2,PTRZOB),@CH01084                         0498
*   BDUSOH='1'B;                    /* TURN ON WRITE SOH FLAG        */
         OI    BDUSOH+42(PTRZOB),B'10000000'                       0499
*   IF LCCWCC='1'B THEN             /* IF COMMAND CHAIN      @XL03HEN*/
         TM    LCCWCC(PTRLCC),B'01000000'                          0500
         BNO   @RF00500                                            0500
*     ZCRSKIPT='1'B;                /* NO TRACE              @XL03HEN*/
         L     @09,RPHCRR(,PTRRPH)                                 0501
         L     @09,CRACRR(,@09)                                    0501
         OI    ZCRSKIPT(@09),B'00000010'                           0501
*   ELSE                                                           0502
*     ;                             /*                       @XL03HEN*/
@RF00500 DS    0H                                                  0503
*   CALL ISTZDFC0;                  /* CALL LCCW DATA MOVE ROUTINE   */
         L     @09,ATCZPSVT(,PTRATC)                               0503
         L     @15,ZPSZDFC0(,@09)                                  0503
         BALR  @14,@15                                             0503
*   RCDREG=FDBDATCT;                /* INITIALIZE DATA COUNT         */
         LH    RCDREG,FDBDATCT(,PTRZOB)                            0504
*   LNKREG=ADDR(ZOBFDB);            /* INITIALIZE FDB POINTER        */
         LR    LNKREG,PTRZOB                                       0505
*   DO WHILE(LNKREG->FDBFDBA^=0);   /* GET TOTAL DATA COUNT          */
         B     @DE00506                                            0506
@DL00506 DS    0H                                                  0507
*     LNKREG=LNKREG->FDBFDBA;       /* ADDRESS NEXT FDB              */
         L     LNKREG,FDBFDBA(,LNKREG)                             0507
*     RCDREG=RCDREG+(LNKREG->FDBDATCT);/* INCREMENT DATA COUNT       */
         AH    RCDREG,FDBDATCT(,LNKREG)                            0508
*   END;                            /* DATA COUNT IN RCDREG          */
@DE00506 SLR   @09,@09                                             0509
         C     @09,FDBFDBA(,LNKREG)                                0509
         BNE   @DL00506                                            0509
*/***                                                              0510
*DECREMENT LENGTH BY THE LENGTH OF NON-RU RELATED FIELDS OF THE BTU
*                                                            @XL03HAH*/
*                                                                  0510
*   BTUDCF=RCDREG-LENGTH(ISTTH);                                   0510
         LR    @00,RCDREG                                          0510
         SL    @00,@CF00766                                        0510
         STH   @00,BTUDCF+28(,PTRZOB)                              0510
*   IF LCCWCC='1'B THEN             /* IF COMMAND CHAINING           */
         TM    LCCWCC(PTRLCC),B'01000000'                          0511
         BNO   @RF00511                                            0511
*     DO;                           /* PROCESS COMMAND CHAINED CCW   */
*       ZCRFBPTR=ADDR(STXCHAR);     /* ADDRESS 'STX' CHARACTER       */
         L     @11,RPHCRR(,PTRRPH)                                 0513
         L     @11,CRACRR(,@11)                                    0513
         LA    @00,STXCHAR                                         0513
         ST    @00,ZCRFBPTR(,@11)                                  0513
*       ZCRTBPTR=PTRZOB;            /* ADDRESS BUFFER                */
         ST    PTRZOB,ZCRTBPTR(,@11)                               0514
*       ZCRMLNG=1;                  /* SET MOVE COUNT                */
         MVC   ZCRMLNG(2,@11),@CH00036                             0515
*       ZCRDFRDA=0;                 /* SET FROM BUFFER OFFSET        */
         STH   @09,ZCRDFRDA(,@11)                                  0516
*       ZCRPCOD2=0;                 /* CLEAR FLAGS                   */
         MVI   ZCRPCOD2(@11),X'00'                                 0517
*       CALL ISTZDFD0;              /* CALL TEXT MOVE ROUTINE        */
         L     @09,ATCZPSVT(,PTRATC)                               0518
         L     @15,ZPSZDFD0(,@09)                                  0518
         BALR  @14,@15                                             0518
*       RCDREG=CCSET;               /* INDICATE COMMAND CHAIN SET    */
         LA    RCDREG,4                                            0519
*     END;                          /* END COMMAND CHAIN PROCESS     */
*   ELSE                            /* NOT COMMAND CHAINED           */
*     DO;                           /* SET UP MODIFIER               */
         B     @RC00511                                            0521
@RF00511 DS    0H                                                  0522
*       BDUCOMND=BCMDW;             /* SET WRITE COMMAND             */
         LA    @09,42                                              0522
         ALR   @09,PTRZOB                                          0522
         MVI   BDUCOMND(@09),X'02'                                 0522
*       BDUMODIF=BMODW;             /* BLOCK MODIFIER        @XL03HEN*/
         MVI   BDUMODIF(@09),X'00'                                 0523
*       RCDREG=CCOFF;               /* SET NOT COMMAND CHAINED       */
         SLR   RCDREG,RCDREG                                       0524
*     END;                          /* END MODIFIER SET UP           */
*   IF PROXPOPT='1'B THEN           /* IF TRANSPARENT MODE           */
@RC00511 TM    PROXPOPT+48(PTRFMC),B'00100000'                     0526
         BNO   @RF00526                                            0526
*     BDUTRPM='1'B;                 /* INDICATE IN BDU               */
         OI    BDUTRPM+42(PTRZOB),B'00001000'                      0527
*   ELSE                                                           0528
*     ;                                                            0528
*                                                                  0528
@RF00526 DS    0H                                                  0529
*/* SEGMENT(BFCB030)FINISH                                           */
*                                                                  0529
*   DO;                                                            0529
*     GOTO BFCB030#;                                               0530
         B     BFCB030#                                            0530
*BFCB030@:                                                         0531
*   END;                                                           0531
BFCB030@ DS    0H                                                  0532
*   RFY                                                            0532
*    (LNKREG,                                                      0532
*     RCDREG) UNRSTD;                                              0532
*   GEN NOSETS NOREFS NODEFS(EJECT);                               0533
         EJECT
*                                                                  0534
*/********************************************************************/
*/*                                                                  */
*/* TITLE-                                                           */
*/*      BFCB0040 - BTH GENERATION                                   */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      THE BTU IS INITIALIZED:                                     */
*/*         SOURCE AND DESTINATION ID'S ARE SET UP                   */
*/*         THE REQUEST TAG IS COPIED FROM THE FMCB                  */
*/*         THE FMCB SEQUENCE COUNTER IS UPDATED                     */
*/*      FLAGS ARE SET TO INDIATE THAT THIS IS THE LAST BDU TO BE    */
*/*      PROCESSED FOR THIS LCCW.                                    */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(BFCB040)START                                            */
*                                                                  0534
*   DO;                                                            0534
*     GOTO BFCB040@;                                               0535
         B     BFCB040@                                            0535
*BFCB040:                                                          0536
*   END;                                                           0536
BFCB040  DS    0H                                                  0537
*   RFY                                                            0537
*    (LNKREG,                                                      0537
*     RCDREG) RSTD;                 /* RETURN REGISTER, WORK REG     */
*   BTUSORCE=FMCSAF;                /* SET SOURCE IDENTIFIER         */
         LA    @09,28                                              0538
         ALR   @09,PTRZOB                                          0538
         MVC   BTUSORCE(2,@09),FMCSAF(PTRFMC)                      0538
*   BTUDEST=NCBDAF;                 /* SET DESTINATION IDENTIFIER    */
         MVC   BTUDEST(2,@09),NCBDAF(PTRDNC)                       0539
*   DCL                                                            0540
*     FAKEOUT CHAR(1) BASED(ADDR(FMCSEQ1));/* USED ONLY FOR THIS   0540
*                                      INSTR                         */
*   MVN(BTUREQ(2:2),FAKEOUT);       /* COPY 4 BIT REQUEST SEQUENCE   */
         MVN   BTUREQ+1(1,@09),FAKEOUT+266(PTRFMC)                 0541
*   BTUZRT06='0'B;                  /* TURN OFF CRIT TEXT FLAG       */
*   BTUZRT07='0'B;                  /* TURN OFF BUFFER TRACE FLAG    */
         NI    BTUZRT06(@09),B'11111100'                           0543
*   BTUZRT08='0'B;                  /* TURN OFF I/O TRACE FLAG       */
         NI    BTUZRT08(@09),B'01111111'                           0544
*   BTUFID=THSET;                   /* INIT TH BYTES 1 &2    @XL03HAH*/
         MVC   BTUFID(2,@09),@CB02828                              0545
*   BTURH=0;                        /* INIT REQUST HEADER    @XL03HAH*/
         SLR   @00,@00                                             0546
         STCM  @00,15,BTURH(@09)                                   0546
*   IF PROCFTX='1'B THEN            /* COPY CRITICAL TEXT FLAG       */
         TM    PROCFTX+48(PTRFMC),B'00000001'                      0547
         BNO   @RF00547                                            0547
*     BTUZRT06='1'B;                /* TO BTU                        */
         OI    BTUZRT06(@09),B'00000010'                           0548
*   ELSE                                                           0549
*     ;                                                            0549
@RF00547 DS    0H                                                  0550
*   IF FMCZF007='1'B THEN           /* COPY BUFFER TRACE FLAG        */
         TM    FMCZF007(PTRFMC),B'00000100'                        0550
         BNO   @RF00550                                            0550
*     BTUZRT07='1'B;                /* TO BTU                        */
         OI    BTUZRT07+28(PTRZOB),B'00000001'                     0551
*   ELSE                                                           0552
*     ;                                                            0552
@RF00550 DS    0H                                                  0553
*   IF NCBFTRIO='1'B THEN           /* COPY I/O TRACE FLAG           */
         CLI   NCBFTRIO(PTRDNC),1                                  0553
         BNE   @RF00553                                            0553
*     BTUZRT08='1'B;                /* TO BTU                        */
         OI    BTUZRT08+28(PTRZOB),B'10000000'                     0554
*   ELSE                                                           0555
*     ;                                                            0555
@RF00553 DS    0H                                                  0556
*   FMCSEQ1=FMCSEQ1+1;              /* INCREMENT REQUEST TAG COUNT   */
         LA    @09,1                                               0556
         SLR   @00,@00                                             0556
         IC    @00,FMCSEQ1(,PTRFMC)                                0556
         ALR   @09,@00                                             0556
         STC   @09,FMCSEQ1(,PTRFMC)                                0556
*   IF FMCSEQ1=16 THEN              /* IF COUNTER OVERFLOW           */
         CLI   FMCSEQ1(PTRFMC),16                                  0557
         BNE   @RF00557                                            0557
*     FMCSEQ1=1;                    /* RESET TO 1                    */
         MVI   FMCSEQ1(PTRFMC),X'01'                               0558
*   ELSE                                                           0559
*     ;                             /* OTHERWISE DON'T               */
@RF00557 DS    0H                                                  0560
*   IF FMCZF00C='1'B THEN           /* IF FIRST BLOCK IN MESSAGE     */
         TM    FMCZF00C(PTRFMC),B'00001000'                        0560
         BNO   @RF00560                                            0560
*     DO;                                                          0561
*       BDUFBMI='1'B;               /* TURN ON FIRST BLOCK OF MSG    */
         LA    @09,42                                              0562
         ALR   @09,PTRZOB                                          0562
         OI    BDUFBMI(@09),B'00010000'                            0562
*       IF BDUMODIF=BMODW THEN      /* IF WRITE BLOCK                */
         CLI   BDUMODIF(@09),X'00'                                 0563
         BNE   @RF00563                                            0563
*         FMCZF00C='0'B;            /* TURN OFF FIRST BLOCK FLAG     */
         NI    FMCZF00C(PTRFMC),B'11110111'                        0564
*       ELSE                                                       0565
*         ;                                                        0565
@RF00563 DS    0H                                                  0566
*     END;                          /* END FIRST BLOCK IN MESSAGE    */
*   ELSE                                                           0567
*     ;                             /* NOT FIRST BLOCK IN MESSAGE    */
@RF00560 DS    0H                                                  0568
*   FMCZF001='1'B;                  /* BDU ALLOCATION REQUIRED       */
         OI    FMCZF001(PTRFMC),B'10000000'                        0568
*   FMCZX003=FMCZX003+1;            /* INCREMENT LSCB COUNT          */
         LA    @09,1                                               0569
         SLR   @00,@00                                             0569
         IC    @00,FMCZX003(,PTRFMC)                               0569
         ALR   @09,@00                                             0569
         STC   @09,FMCZX003(,PTRFMC)                               0569
*   LCPREQTG=BTUREQ;                /* COPY REQUEST TAG TO LSCB      */
         MVC   LCPREQTG(2,PTRLCP),BTUREQ+28(PTRZOB)                0570
*/* SEGMENT(BFCB040)FINISH                                           */
*                                                                  0571
*   DO;                                                            0571
*     GOTO BFCB040#;                                               0572
         B     BFCB040#                                            0572
*BFCB040@:                                                         0573
*   END;                                                           0573
BFCB040@ DS    0H                                                  0574
*   RFY                                                            0574
*    (RCDREG,                                                      0574
*     LNKREG) UNRSTD;               /* NO LONGER REQUIRED            */
*/* TPEPILOG                                                         */
*                                                                  0575
*   GEN(PRINT OFF);                                                0575
         PRINT OFF
*   GEN(PRINT ON);                                                 0576
*                                                                  0576
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0577
*   END ISTZBFCB;                                                  0577
@EL00001 DS    0H                                                  0577
@EF00001 DS    0H                                                  0577
@ER00001 BR    @14                                                 0577
@DATA    DS    0H
@CH00036 DC    H'1'
@CH01084 DC    H'20'
@DATD    DSECT
         DS    0F
ISTZBFCB CSECT
         DS    0F
@CF00038 DC    F'8'
@CF00766 DC    F'10'
@DATD    DSECT
         DS    0D
LCPBPTR  DS    A
DNCBPTR  DS    A
FMCBPTR  DS    A
BDUPTR   DS    A
BTUPTR   DS    A
FSBPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTZBFCB CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
STXCHAR  DC    XL1'02'
@CC02882 DC    C'BCCB'
@CB02828 DC    X'0E00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
SCEDPARM EQU   @00
PTRRPH   EQU   @01
PTRATC   EQU   @02
PTRICN   EQU   @03
PTRDNC   EQU   @04
PTRFMC   EQU   @05
PTRZOB   EQU   @06
PTRLCP   EQU   @07
PTRLCC   EQU   @08
BASREG   EQU   @12
SAVREG   EQU   @13
LNKREG   EQU   @14
RCDREG   EQU   @15
GPR01P   EQU   @01
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR07P   EQU   @07
GPR15P   EQU   @15
GPR01F   EQU   @01
GPR07F   EQU   @07
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
ATCLCPTR EQU   1032
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ZSAZACTV EQU   ZSAZSVMS
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZTRAC EQU   ISTZSAVE+36
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWSI   EQU   LCCWOP
LCCWSD   EQU   LCCWOP
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWCC   EQU   LCCWFLAG
LCCWLSI  EQU   LCCWFLAG
LCCWDATA EQU   ISTLCCW+4
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZRT00 EQU   LCPFLAGS
LCPZRT01 EQU   LCPFLAGS
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPLCCWC EQU   ISTLCPB+38
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRSKIPT EQU   ZCRSCPSW
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRTBPTR EQU   ZCRPARMS+4
ZCRMLNG  EQU   ZCRPARMS+8
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCREBCCB EQU   ZCRENTER+1
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABDVTA  EQU   ISTPAB+9
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00010 EQU   LOKCHNG+2
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCZPSVT EQU   ATCAOSM+72
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTNCB   EQU   0
NCBDAF   EQU   ISTNCB+2
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
NCBDEVCH EQU   ISTNCB+36
ISTDNCB  EQU   0
DNCNCB   EQU   ISTDNCB
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCCONT  EQU   DNCZFLGS
DNCZF006 EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCBSCED EQU   DNCOS+2
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROXPOPT EQU   PROPROC1
PROPROC2 EQU   PROPROC+1
PROCFTX  EQU   PROPROC2
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSAF   EQU   ISTFMCB+2
FMCSTAT  EQU   ISTFMCB+28
FMCZF007 EQU   FMCSTAT
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCPROCD EQU   ISTFMCB+48
FMCPAB3  EQU   ISTFMCB+96
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF001 EQU   FMCZFLAG
FMCZF006 EQU   FMCZFLAG
FMCZFA06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFC06 EQU   FMCZF006
FMCZFD06 EQU   FMCZF006+1
FMCZF00C EQU   FMCZFLAG+1
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCZX001 EQU   FMCVS1+28
FMCZX003 EQU   FMCVS1+30
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTFDB   EQU   0
FDBFDBA  EQU   ISTFDB
FDBDATAA EQU   ISTFDB+4
FDBDATCT EQU   ISTFDB+8
ISTBDU   EQU   0
BDUCOMND EQU   ISTBDU
BDUMODIF EQU   ISTBDU+1
BDUMOD1  EQU   BDUMODIF
BDUDAF   EQU   ISTBDU+2
BDUFUNC  EQU   BDUDAF
BDUCHECK EQU   BDUFUNC
BDUSOH   EQU   BDUCHECK
BDUFBMI  EQU   BDUFUNC
BDUTRPM  EQU   BDUFUNC
BDUFLAGS EQU   BDUDAF+1
BDURTOE  EQU   BDUFLAGS
ISTBTU   EQU   0
BTUBTH   EQU   ISTBTU
BTUFID   EQU   BTUBTH
BTUDEST  EQU   BTUBTH+2
BTUSORCE EQU   BTUBTH+4
BTUREQ   EQU   BTUBTH+6
BTURQFLG EQU   BTUREQ
BTUZRT06 EQU   BTURQFLG
BTUZRT07 EQU   BTURQFLG
BTUZRT08 EQU   BTURQFLG+1
BTUZRT0A EQU   BTURQFLG+1
BTUDCF   EQU   BTUBTH+8
BTURH    EQU   BTUBTH+10
BTUBDU   EQU   ISTBTU+14
BTUSYSTR EQU   ISTBTU+18
ISTLH    EQU   0
ISTTH    EQU   0
THFLAG1  EQU   ISTTH
THFLGA   EQU   THFLAG1
THMPF    EQU   THFLGA
THFLGB   EQU   THFLAG1+1
ISTTH2   EQU   0
TH2FLAG1 EQU   ISTTH2
TH2MPF   EQU   TH2FLAG1
ISTZOBUF EQU   0
ZOBFSM   EQU   ISTZOBUF+4
ISTZPSVT EQU   0
ZPSZDFC0 EQU   ISTZPSVT+4
ZPSZDFD0 EQU   ISTZPSVT+8
ZPSZBFY0 EQU   ISTZPSVT+24
ZPSZBFZ0 EQU   ISTZPSVT+28
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTZLBVT EQU   0
ZLBZBFNB EQU   ISTZLBVT+12
ISTZDFD0 EQU   0
ISTZDFC0 EQU   0
ISTZBFZ0 EQU   0
ISTZBFY0 EQU   0
ISTZBFNB EQU   0
FAKEOUT  EQU   0
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
ZOBDLBT  EQU   ISTZOBUF
ZOBDLBCM EQU   ZOBDLBT
ZOBFDB   EQU   ZOBDLBCM
@NM00026 EQU   ZOBDLBCM+25
ZOBBTU   EQU   ZOBDLBT+28
ZOBWCC   EQU   ZOBDLBT+48
ZOBECCC  EQU   ZOBDLBT+50
ZOBDIO   EQU   ZOBFSM
ZOBCCW2  EQU   ZOBDIO+8
ZOBCPTCC EQU   ZOBCCW2
ZOBFLAGS EQU   ZOBCCW2+5
ZOBCCW3  EQU   ZOBDIO+16
ZOBCPTRC EQU   ZOBCCW3
ZOBCPN2C EQU   ZOBCPTRC
ZOBCPTRA EQU   ZOBCCW3+1
@NM00030 EQU   ZOBBTU
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00035 EQU   FSBRQTAG
ZOBTEXT  EQU   ZOBBTU
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FSBRT0B  EQU   @NM00035+1
FSBRT0A  EQU   @NM00035+1
FSBRT09  EQU   @NM00035+1
FSBRT08  EQU   @NM00035+1
FSBRT07  EQU   @NM00035
FSBRT06  EQU   @NM00035
FSBRT05  EQU   @NM00035
FSBRT04  EQU   @NM00035
FSBRT03  EQU   @NM00035
FSBRT02  EQU   @NM00035
FSBRT01  EQU   @NM00035
FSBRT00  EQU   @NM00035
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
ZOBTH2   EQU   @NM00030+4
ZOBLH    EQU   @NM00030
ZOBCPN2K EQU   ZOBCCW3+6
ZOBRSV99 EQU   ZOBCCW3+5
ZOBCPN2F EQU   ZOBCCW3+4
ZOBCPTC2 EQU   ZOBCPTRA
ZOBCPTC1 EQU   ZOBCPN2C
ZOBCPNPK EQU   ZOBCCW2+6
ZOBRSV03 EQU   ZOBFLAGS
ZOBRT08  EQU   ZOBFLAGS
ZOBRT06  EQU   ZOBFLAGS
ZOBCPNPF EQU   ZOBCCW2+4
ZOBCPTCA EQU   ZOBCCW2+1
ZOBCPNPC EQU   ZOBCPTCC
ZOBCPWTK EQU   ZOBDIO+6
ZOBRSV02 EQU   ZOBDIO+5
ZOBCPWTF EQU   ZOBDIO+4
ZOBCPTXA EQU   ZOBDIO+1
ZOBCPWTC EQU   ZOBDIO
ZOBRSV09 EQU   ZOBECCC
ZOBECSP  EQU   ZOBECCC
ZOBRSV08 EQU   ZOBECCC
ZOBRSV07 EQU   ZOBDLBT+49
ZOBRSV06 EQU   ZOBWCC
ZOBWCSP  EQU   ZOBWCC
ZOBRSV05 EQU   ZOBWCC
ZOBRSV10 EQU   ZOBDLBCM+26
@NM00029 EQU   @NM00026
@NM00028 EQU   @NM00026
@NM00027 EQU   @NM00026
ZOBRSV04 EQU   ZOBDLBCM+16
ZOBLNG2  EQU   ZOBDLBCM+14
ZOBRSV01 EQU   ZOBDLBCM+12
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
ZLBZBFSC EQU   ISTZLBVT+88
ZLBZIFVB EQU   ISTZLBVT+84
ZLBZIFUB EQU   ISTZLBVT+80
ZLBZIFSB EQU   ISTZLBVT+76
ZLBRSV22 EQU   ISTZLBVT+72
ZLBZBFID EQU   ISTZLBVT+68
ZLBZBFX0 EQU   ISTZLBVT+64
ZLBRSV02 EQU   ISTZLBVT+60
ZLBRSV21 EQU   ISTZLBVT+56
ZLBZBFJB EQU   ISTZLBVT+52
ZLBZBFIB EQU   ISTZLBVT+48
ZLBZBFHB EQU   ISTZLBVT+44
ZLBZBFGB EQU   ISTZLBVT+40
ZLBZBFFB EQU   ISTZLBVT+36
ZLBZBFEB EQU   ISTZLBVT+32
ZLBZBFDB EQU   ISTZLBVT+28
ZLBZBFCB EQU   ISTZLBVT+24
ZLBZBFBB EQU   ISTZLBVT+20
ZLBZBFAB EQU   ISTZLBVT+16
ZLBZCFAI EQU   ISTZLBVT+8
ZLBZBF0B EQU   ISTZLBVT+4
ZLBZAF0B EQU   ISTZLBVT
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00043 EQU   ISTAPCRR+137
@NM00042 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00041 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00040 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00039 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00038 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00037 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00036 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
FSBFDB   EQU   ISTFSB+32
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00034 EQU   FSBSS2
@NM00033 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00032 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
ZPSZDFQR EQU   ISTZPSVT+80
ZPSZDFPR EQU   ISTZPSVT+76
ZPSZDFXR EQU   ISTZPSVT+72
ZPSZIF2B EQU   ISTZPSVT+68
ZPSZAF2B EQU   ISTZPSVT+64
ZPSZDFMB EQU   ISTZPSVT+60
ZPSZDFMF EQU   ISTZPSVT+56
ZPSZDFNB EQU   ISTZPSVT+52
@NM00031 EQU   ISTZPSVT+48
ZPSZDFF0 EQU   ISTZPSVT+44
ZPSZTRTT EQU   ISTZPSVT+40
ZPSZBFOB EQU   ISTZPSVT+36
ZPSZBFMB EQU   ISTZPSVT+32
ZPSZDFI0 EQU   ISTZPSVT+20
ZPSZDFB0 EQU   ISTZPSVT+16
ZPSZDFH0 EQU   ISTZPSVT+12
ZPSZDFA0 EQU   ISTZPSVT
ZOBLNG1  EQU   ZOBFSM
ZOBCHAIN EQU   ISTZOBUF
TH2SNF   EQU   ISTTH2+4
TH2OAF   EQU   ISTTH2+3
TH2DAF   EQU   ISTTH2+2
TH2CDF   EQU   TH2FLAG1+1
TH2SEF   EQU   TH2FLAG1+1
TH2PYF   EQU   TH2FLAG1+1
TH2AFI   EQU   TH2FLAG1
TH2PSI   EQU   TH2FLAG1
TH2CMPLI EQU   TH2MPF
TH2RHI   EQU   TH2MPF
TH2FID   EQU   TH2FLAG1
THDCF    EQU   ISTTH+8
THSNF    EQU   ISTTH+6
THOAF    EQU   ISTTH+4
THDAF    EQU   ISTTH+2
THCDF    EQU   THFLGB
THSEF    EQU   THFLGB
THPYF    EQU   THFLGB
THAFI    EQU   THFLGA
THPSI    EQU   THFLGA
THCMPLI  EQU   THMPF
THRHI    EQU   THMPF
THFID    EQU   THFLAG1
LHVDATA  EQU   ISTLH+4
LHFUNCT  EQU   ISTLH+3
@NM00025 EQU   ISTLH+2
LHLEN    EQU   ISTLH
BTUTEXT  EQU   ISTBTU+20
BTUEXTR  EQU   ISTBTU+19
BTURSV02 EQU   BTUSYSTR
BTUPHASE EQU   BTUSYSTR
BTURSV01 EQU   BTUSYSTR
BTUPAD   EQU   BTURH+3
BTURH3   EQU   BTURH+2
BTURH2   EQU   BTURH+1
BTURH1   EQU   BTURH
BTUZRTSC EQU   BTURQFLG+1
BTUZRT0B EQU   BTURQFLG+1
BTUZRT09 EQU   BTURQFLG+1
BTUZRT05 EQU   BTURQFLG
BTUZRT04 EQU   BTURQFLG
BTUZRT03 EQU   BTURQFLG
BTUZRT02 EQU   BTURQFLG
BTUZRT01 EQU   BTURQFLG
BTUZRT00 EQU   BTURQFLG
BTUCDF   EQU   BTUFID+1
BTUSCF   EQU   BTUFID+1
BTUPRY   EQU   BTUFID+1
BTUASFL  EQU   BTUFID
BTUPSFL  EQU   BTUFID
BTUMPF   EQU   BTUFID
BTUFIDNO EQU   BTUFID
BDURSV04 EQU   BDUFLAGS
BDUSTPR  EQU   BDUFLAGS
BDURSV03 EQU   BDUFLAGS
BDUALT   EQU   BDUFUNC
BDUNACK  EQU   BDUFUNC
BDUACK   EQU   BDUFUNC
BDULDGPH EQU   BDUFUNC
BDUHEADP EQU   BDUFUNC
BDURSV01 EQU   BDUMODIF
BDUMOD0  EQU   BDUMOD1
FDBOFSET EQU   ISTFDB+10
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00024 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX002 EQU   FMCVS1+29
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00023 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00022 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCRSV04 EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00021 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00020 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00019 EQU   ISTFMCB+30
@NM00018 EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDNCBA EQU   ISTFMCB+16
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PRORSV11 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZV001 EQU   DNCOS+17
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCACIP  EQU   DNCBSCED+1
DNCLICP  EQU   DNCBSCED
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00017 EQU   NCBFLAG1
@NM00016 EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
ATCAOS   EQU   ISTATCVT+1552
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00015 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00014 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ISTATCVT+788
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00013 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00012 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
LOKXCL   EQU   @NM00010
LOKPRY   EQU   @NM00010
@NM00011 EQU   @NM00010
@NM00009 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00008 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00007 EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00006 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00005 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00004 EQU   LCCWRWOP
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00003 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00002 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00001 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
BFCB040# EQU   @RC00394
@RC00431 EQU   @RC00430
@RC00442 EQU   @RC00430
@RC00460 EQU   @RC00459
@ENDDATA EQU   *
         END   ISTZBFCB,(C'PLS0444',0603,75134)
