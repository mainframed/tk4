         TITLE 'IDA019RB - VSAM I N D E X    S E A R C H               *
                        '
IDA019RB CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IDA019RB  78.172'                                 0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         IDASVR14
*   RWORK3=PLHISPLP;                /* SET BASE FOR WORK AREA        */
         L     RWORK3,PLHISPLP(,RPLH)                              0091
*   IF IXSILN=ONE                   /* CHECK THE INITIAL LEVEL       */
*     THEN                          /* NO. OF THIS REQUEST           */
         CLI   IXSILN(RWORK3),1                                    0092
         BNE   @RF00092                                            0092
*     PLHSSR=ON;                    /* IF LVL 1, NOTE IN PLH         */
         OI    PLHSSR(RPLH),B'00010000'                            0093
*   ELSE                            /* IF HIGHER LEVEL               */
*     PLHSSR=OFF;                   /* NOTE ALSO IN PLH              */
         B     @RC00092                                            0094
@RF00092 NI    PLHSSR(RPLH),B'11101111'                            0094
*A:                                                                0095
*   RWORK3=PLHISPLP;                /* ASSURE WA BASE IS SET         */
@RC00092 DS    0H                                                  0095
A        L     RWORK3,PLHISPLP(,RPLH)                              0095
*   RPARM1=IXSSTRBA;                /* GET RBA OF RCD IN PARM1       */
         L     RPARM1,IXSSTRBA(,RWORK3)                            0096
*I01:                                                              0097
*   DO;                             /* IDACALL(IDAGRB)               */
I01      DS    0H                                                  0098
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */
         L     @15,@CV00650                                        0098
         BALR  @14,@15                                             0098
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */
         BALR @11,0
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */
         USING *,@11
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */
         L     @11,=A(@PSTART)
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */
         USING @PSTART,@11
*   END I01;                        /* GO TO I/O MGR FOR RECD.       */
*   RESPECIFY                                                      0104
*    (RWORK1,                                                      0104
*     RWORK2,                                                      0104
*     RWORK3,                                                      0104
*     RWORK4,                       /* RERESTRICT REGISTERS          */
*     RWORK5) RSTD;                 /* AFTER CALL                    */
*   IF RPLERREG^='00'X              /* TEST FOR I/O ERROR AND        */
*     THEN                          /* IF AN ERROR OCCURRED--        */
         CLI   RPLERREG(RRPL),0                                    0105
         BE    @RF00105                                            0105
*     DO;                           /* THEN:                         */
*       GEN(IDARST14);              /* RESTORE REGISTER 14           */
         IDARST14
*       RETURN;                     /* AND RETURN TO CALLER          */
@EL00001 DS    0H                                                  0108
@EF00001 DS    0H                                                  0108
@ER00001 BR    @14                                                 0108
*     END;                          /*                               */
*   RWORK3=PLHISPLP;                /* REESTABLISH BASE FOR          */
@RF00105 L     RWORK3,PLHISPLP(,RPLH)                              0110
*   IXSBUFC=RBUFC;                  /* SAVE RBUFC FROM I/O MANAGER IN
*                                      WORK AREA                     */
         ST    RBUFC,IXSBUFC(,RWORK3)                              0111
*   RPARM1=IXSARG;                  /* POINT TO SEARCH ARG           */
         L     RPARM1,IXSARG(,RWORK3)                              0112
*   RBUFC=BUFCBAD;                  /* POINT TO DATA BUFFER          */
         L     @10,IXSBUFC(,RWORK3)                                0113
         L     RBUFC,BUFCBAD(,@10)                                 0113
*I02:                                                              0114
*   DO;                             /* IDACALL(IDA019RC)             */
I02      DS    0H                                                  0115
*     CALL IDA019RC;                /* EXIT TO IDA019RC              */
         L     @15,@CV00651                                        0115
         BALR  @14,@15                                             0115
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */
         BALR @11,0
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */
         USING *,@11
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */
         L     @11,=A(@PSTART)
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */
         USING @PSTART,@11
*   END I02;                        /* CALL SCIB                     */
*   RESPECIFY                                                      0121
*    (RWORK1,                                                      0121
*     RWORK2,                                                      0121
*     RWORK3,                                                      0121
*     RWORK4,                       /* RERESTRICT REGISTERS          */
*     RWORK5,                                                      0121
*     R15) RSTD;                    /* AFTER CALL                    */
*   RWORK3=PLHISPLP;                /* REESTABLISH WORK AREA         */
         L     RWORK3,PLHISPLP(,RPLH)                              0122
*   IF R15=ZERO                     /* WAS SEARCH A SUCCESS          */
*     THEN                          /* YES                           */
         LTR   R15,R15                                             0123
         BNZ   @RF00123                                            0123
*     DO;                           /*                               */
*       RESPECIFY                                                  0125
*        (R15) UNRSTD;              /*                               */
*       IF BUFCBAD->IXHLV=TWO THEN  /* IS THIS LEVEL 2       @X04SVES*/
         L     @10,IXSBUFC(,RWORK3)                                0126
         L     @15,BUFCBAD(,@10)                                   0126
         CLI   IXHLV(@15),2                                        0126
         BNE   @RF00126                                            0126
*         DO;                       /* YES                   @X04SVES*/
*           PLHSLRBA=BUFCDDDD;      /* SET 2ND LEVEL RBA IN PLH    0128
*                                                            @X04SVES*/
         L     @10,BUFCDDDD(,@10)                                  0128
         ST    @10,PLHSLRBA(,RPLH)                                 0128
*           PLHSLVLD=ON;            /* SHOW RBA VALID        @X04SVES*/
         OI    PLHSLVLD(RPLH),B'00100000'                          0129
*         END;                      /*                       @X04SVES*/
*       IF BUFCBAD->IXHLV=IXSTLN    /* IS THIS THE LOWEST            */
*         THEN                      /* LEVEL REQUESTED               */
@RF00126 L     @10,IXSBUFC(,RWORK3)                                0131
         L     @10,BUFCBAD(,@10)                                   0131
         CLC   IXHLV(1,@10),IXSTLN(RWORK3)                         0131
         BNE   @RF00131                                            0131
*         DO;                       /* YES                           */
*           RWORK2=BUFCBAD+BUFCBAD->/* COMPUTE THE ADDRESS OF        */
*               IXHLEO;             /* THE LAST INDEX ENTRY          */
         LH    RWORK2,IXHLEO(,@10)                                 0133
         ALR   RWORK2,@10                                          0133
*           IF RWORK2->IBFLPF=ZERO& /* IS THIS LAST          @X04SVES*/
*               RWORK2->IBFLPL=ZERO /* CONTROL               @X04SVES*/
*             THEN                  /* INTERVAL AT THIS LEVEL        */
         CLI   IBFLPF(RWORK2),0                                    0134
         BNE   @RF00134                                            0134
         CLI   IBFLPL(RWORK2),0                                    0134
         BNE   @RF00134                                            0134
*             DO;                   /* YES                           */
*               IF RWORK2=IXSHEP    /* IS IT THE SAME AS THAT        */
*                 THEN              /* RETURNED BY SCIB              */
         CL    RWORK2,IXSHEP(,RWORK3)                              0136
         BNE   @RF00136                                            0136
*                 DO;               /* YES, SET FLAG SHOWING         */
*                   IXSLELV=ON;     /* LAST ENTRY IN LEVEL           */
         OI    IXSLELV(RWORK3),B'01000000'                         0138
*                   GEN(IDARST14);  /* RESTORE REGISTER 14           */
         IDARST14
*                   RETURN;         /* RETURN TO CALLER              */
         B     @EL00001                                            0140
*                 END;              /*                               */
*             END;                  /*                               */
@RF00136 DS    0H                                                  0143
*           IXSLELV=OFF;            /* SET LAST ENTRY FLAG OFF       */
@RF00134 NI    IXSLELV(RWORK3),B'10111111'                         0143
*           GEN(IDARST14);          /* RESTORE REGISTER 14           */
         IDARST14
*           RETURN;                 /* RETURN TO CALLER              */
         B     @EL00001                                            0145
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /* NEXT LEVEL TO SEARCH          */
@RF00131 DS    0H                                                  0148
*           RWORK1=ZERO;            /* CLEAR BEFORE PTR IS INSERTED  */
         SLR   RWORK1,RWORK1                                       0148
*           RWORK4=IXSHEP+LENGTH(IBFLPF)+/* POINT TO RECORD          */
*               LENGTH(IBFLPL);     /* POINTER                       */
         LA    RWORK4,2                                            0149
         AL    RWORK4,IXSHEP(,RWORK3)                              0149
*           RWORK2=BUFCBAD->IXHPTLS;/* GET MASK FROM HEADER          */
         L     @10,IXSBUFC(,RWORK3)                                0150
         L     @10,BUFCBAD(,@10)                                   0150
         SLR   RWORK2,RWORK2                                       0150
         IC    RWORK2,IXHPTLS(,@10)                                0150
*           GEN;                                                   0151
*                                          /*                        */
         EX    RWORK2,INSERT               PICK UP IN RWORK4 PTR. ENTRY
*           IXSSTRBA=RWORK1*AMDCINV+/* COMPUTE ACTUAL RBA OF         */
*               BUFCBAD->IXHBRBA;   /* THE RECORD                    */
         L     @10,AMBDSB(,RAMB)                                   0152
         LR    @15,RWORK1                                          0152
         M     @14,AMDCINV(,@10)                                   0152
         L     @10,IXSBUFC(,RWORK3)                                0152
         L     @10,BUFCBAD(,@10)                                   0152
         AL    @15,IXHBRBA(,@10)                                   0152
         ST    @15,IXSSTRBA(,RWORK3)                               0152
*           IF BUFCBAD->IXHLV=TWO THEN/* CHECK TO BE SURE THAT       */
         CLI   IXHLV(@10),2                                        0153
         BNE   @RF00153                                            0153
*             PLHSSR=ON;            /* SEARCH SETS SSR ON IN         */
         OI    PLHSSR(RPLH),B'00010000'                            0154
*           IXSILN=BUFCBAD->IXHLV-ONE;/* SET LEVEL NO.       @X04SVES*/
@RF00153 L     @10,IXSBUFC(,RWORK3)                                0155
         L     @10,BUFCBAD(,@10)                                   0155
         SLR   @00,@00                                             0155
         IC    @00,IXHLV(,@10)                                     0155
         BCTR  @00,0                                               0155
         STC   @00,IXSILN(,RWORK3)                                 0155
*         END;                      /*                               */
*     END;                          /*                               */
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00123                                            0158
@RF00123 DS    0H                                                  0159
*       RESPECIFY                                                  0159
*        (R15) RSTD;                /*                               */
*       IF R15=EIGHT THEN           /* WAS THE RECORD NULL           */
         C     R15,@CF00062                                        0160
         BNE   @RF00160                                            0160
*         DO;                       /* YES                           */
*           GEN(IDARST14);          /* RESTORE REG 14                */
         IDARST14
*           RETURN;                 /* RETURN TO CALLER              */
         B     @EL00001                                            0163
*         END;                      /*                               */
*       IXSSTRBA=BUFCBAD->IXHHP;    /* SET RBA FROM HORIZONTAL       */
@RF00160 L     @14,IXSBUFC(,RWORK3)                                0165
         L     @14,BUFCBAD(,@14)                                   0165
         L     @10,IXHHP(,@14)                                     0165
         ST    @10,IXSSTRBA(,RWORK3)                               0165
*       IF BUFCBAD->IXHLV=ONE THEN  /* IS THIS SEQ. SET LEVEL        */
         CLI   IXHLV(@14),1                                        0166
         BNE   @RF00166                                            0166
*         PLHSSR=ON;                /* YES, TELL BUFFER MGR.         */
         OI    PLHSSR(RPLH),B'00010000'                            0167
*     END;                          /* POINTER                       */
@RF00166 DS    0H                                                  0169
*   RBUFC=IXSBUFC;                  /* REESTABLISH RBUFC             */
@RC00123 L     RBUFC,IXSBUFC(,RWORK3)                              0169
*   RESPECIFY                                                      0170
*    (R15) UNRSTD;                  /*                               */
*I03:                                                              0171
*   DO;                             /* IDACALL(IDAFREEB)             */
I03      DS    0H                                                  0172
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */
         L     @15,@CV00649                                        0172
         BALR  @14,@15                                             0172
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */
         BALR @11,0
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */
         USING *,@11
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */
         L     @11,=A(@PSTART)
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */
         USING @PSTART,@11
*   END I03;                        /* FREE THE BFR          @X04SVLP*/
*   RESPECIFY                                                      0178
*    (RWORK1,                                                      0178
*     RWORK2,                                                      0178
*     RWORK3,                                                      0178
*     RWORK4,                       /* RERESTRICT REGISTERS          */
*     RWORK5) RSTD;                 /* AFTER CALL                    */
*   GO TO A;                        /* BACK TO TRY AGAIN             */
         B     A                                                   0179
*   GEN;                                                           0180
INSERT   ICM   RWORK1,@00,@00(RWORK4)      /* MOVES PTR. FROM BUFFER */
*   GEN(IDAPATCH);                  /*                               */
         IDAPATCH
*   END IDA019RB                                                   0182
*                                                                  0182
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */
*                                                                  0182
*       ;                                                          0182
         B     @EL00001                                            0182
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDA019RB CSECT
         DS    0F
@CF00062 DC    F'8'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDA019RB CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00649 DC    V(IDAFREEB)
@CV00650 DC    V(IDAGRB)
@CV00651 DC    V(IDA019RC)
         DS    0D
HWORD4   DC    H'4'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RRPL     EQU   @01
RPLH     EQU   @02
RAMB     EQU   @03
RBUFC    EQU   @04
RWORK1   EQU   @05
RWORK2   EQU   @06
RWORK3   EQU   @07
RWORK4   EQU   @08
RWORK5   EQU   @09
RPARM1   EQU   @12
R15      EQU   @15
RWORK0   EQU   @00
R1       EQU   @01
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
IDAIXSPL EQU   0
IXSSTRBA EQU   IDAIXSPL
IXSBUFC  EQU   IDAIXSPL+4
IXSARG   EQU   IDAIXSPL+8
IXSTLN   EQU   IDAIXSPL+12
IXSILN   EQU   IDAIXSPL+13
IXSBFLG  EQU   IDAIXSPL+17
IXSLELV  EQU   IXSBFLG
IXSHEP   EQU   IDAIXSPL+20
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHSSR   EQU   PLHFLG1
PLHFLG2  EQU   IDAPLH+3
PLHEFLGS EQU   IDAPLH+4
PLHFLG3  EQU   IDAPLH+6
PLHSLVLD EQU   PLHFLG3
PLHAFLGS EQU   IDAPLH+7
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHJCODE EQU   IDAPLH+40
PLHDIOB  EQU   IDAPLH+76
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHISPLP EQU   IDAPLH+196
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHSLRBA EQU   IDAPLH+244
PLHKEYPT EQU   IDAPLH+248
PLHEND   EQU   IDAPLH+280
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLERREG EQU   RPLRTNCD
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCIOFL EQU   IDABUFC+2
BUFCFLG2 EQU   IDABUFC+3
BUFCPLH  EQU   IDABUFC+4
BUFCDDDD EQU   IDABUFC+8
BUFCBAD  EQU   IDABUFC+20
BUFCINV  EQU   IDABUFC+28
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDCINV  EQU   IDAAMDSB+20
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
IDAAMB   EQU   0
AMBDSB   EQU   IDAAMB+20
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
IDAIXH   EQU   0
IXHPTLS  EQU   IDAIXH+3
IXHBRBA  EQU   IDAIXH+4
IXHHP    EQU   IDAIXH+8
IXHLV    EQU   IDAIXH+16
IXHLEO   EQU   IDAIXH+20
IDAIBFLP EQU   0
IBFLPF   EQU   IDAIBFLP
IBFLPL   EQU   IDAIBFLP+1
IBFLP3   EQU   IDAIBFLP+2
IBFLP2   EQU   IBFLP3
IDASELL  EQU   0
IDAIXK   EQU   0
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
BUFCRSC1 EQU   BUFCAVL
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00009 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
IXKEY    EQU   IDAIXK
IXSELL   EQU   IDASELL
IBFLP1   EQU   IBFLP2
IXHSEO   EQU   IDAIXH+22
IXHFSO   EQU   IDAIXH+18
IXHFLGS  EQU   IDAIXH+17
IXHXX    EQU   IDAIXH+12
IXHFLPLN EQU   IDAIXH+2
IXHLL    EQU   IDAIXH
AMBTRACE EQU   IDAAMB+120
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00029 EQU   AMBCSWD1+1
@NM00028 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00027 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00026 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00025 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00024 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00023 EQU   AMBINFL
@NM00022 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00021 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00020 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00019 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00018 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00017 EQU   IDAAMDSB+41
@NM00016 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCWLEN EQU   BUFCINV
BUFCNXT1 EQU   IDABUFC+24
BUFCCPA  EQU   IDABUFC+16
BUFCORBA EQU   IDABUFC+12
BUFCAMB  EQU   BUFCPLH
@NM00015 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCMW   EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00014 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00013 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00012 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00011 EQU   RPLRBAR+3
@NM00010 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00008 EQU   IDAPLH+265
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00007 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00006 EQU   IDAPLH+172
@NM00005 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHCHAIN EQU   IDAPLH+112
PLHAMB   EQU   IDAPLH+108
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00004 EQU   IDAPLH+43
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHUCODE EQU   PLHJCODE
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHUPECB EQU   PLHJORBA
PLHDSIDA EQU   IDAPLH+24
PLHCRPL  EQU   IDAPLH+20
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHVAMB  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00003 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHIWAIT EQU   PLHFLG2
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
@NM00002 EQU   PLHFLG1
PLHDRPND EQU   PLHFLG1
PLHASYRQ EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
IXSLEP   EQU   IDAIXSPL+28
IXSSEP   EQU   IDAIXSPL+24
IXSPEC   EQU   IDAIXSPL+19
IXSEKON  EQU   IDAIXSPL+18
@NM00001 EQU   IXSBFLG
IXSSSRH  EQU   IXSBFLG
IXSNOSR  EQU   IDAIXSPL+16
IXSKLEN  EQU   IDAIXSPL+14
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IDA019RB,(C'PLS1949',0701,78172)
