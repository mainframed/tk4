         TITLE 'IDA019RC - VSAM S C I B   R O U T I N E                *
                        '
IDA019RC CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IDA019RC  78.172'                                 0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*   IF IXHLV=ZERO THEN              /* IS THIS AN EMPTY INDX RECD    */
         CLI   IXHLV(RBUFC),0                                      0048
         BNE   @RF00048                                            0048
*     DO;                           /* YES                           */
*       R15=EIGHT;                  /* SET RETURN CODE AND           */
         LA    R15,8                                               0050
*       RETURN;                     /* RETURN TO CALLER              */
@EL00001 DS    0H                                                  0051
@EF00001 DS    0H                                                  0051
@ER00001 BR    @14                                                 0051
*     END;                          /*                               */
*   IXSKLEN=AMDKEYLN;               /* PUT KEY LEN INTO PARAMETER  0053
*                                      LIST                  @X04SVES*/
@RF00048 L     @10,AMBDSB(,RAMB)                                   0053
         LH    @10,AMDKEYLN(,@10)                                  0053
         STH   @10,IXSKLEN(,RWORK3)                                0053
*   RESPECIFY                                                      0054
*     RWORK1 RSTD;                  /*                       @X04SVES*/
*   GEN REFS(IBFLPF,IBFLPL,IXHLEO,IXHLL,IXHSEO,IXSEKON,IXSHEP,IXSLEP,
*       IXSPEC,IXSSEP,IXHFLPLN,IXSKLEN,IXSNOSR);                   0055
*                                                          /*@X04SVES*/
C1       EQU   1                        CONSTANT = 1
X03      EQU   X'03'                    MASK 03
X80      EQU   X'80'                    MASK 80
XFF      EQU   X'FF'                    MINUS 1
         SR    RWORK1,RWORK1            CLEAR REGISTER
         STC   RWORK1,IXSPEC(RWORK3)    CLEAR PREVIOUS COUNTER
         SR    RWORK0,RWORK0            CLEAR REGISTER
         IC    RWORK0,IXHFLPLN(RBUFC)   PICK UP F+L+POINTER LENGTH
         STC   RWORK0,IXSEKON(RWORK3)   SAVE IN WORK AREA
         OI    IXSBFLG(RWORK3),X80      SET FLAG SHOWING SECTION SEARCH
         ICM   RWORK1,X03,IXHLL(RBUFC)  GET RECORD LENGTH FROM HEADER
         AR    RWORK1,RBUFC             ADD TO BEGINNING ADD. OF BUFFER
         SR    RWORK1,RWORK0            BACK UP OVER F,L, POINTER
         ST    RWORK1,IXSLEP(RWORK3)    SAVE LOW KEY ADDRESS
         SR    RWORK1,RWORK1            CLEAR REG
         ICM   RWORK1,X03,IXHSEO(RBUFC) GET OFFSET TO 1ST SECTION
         AR    RWORK1,RBUFC             ADD BEGINNING ADD TO FORM TRUE
         SR    R15,R15                   ADDRESS
COMFN1   SR    RWORK2,RWORK2            CLEAR REGISTERS
COMFN2   SR    RWORK4,RWORK4             ...
         SR    RWORK5,RWORK5             ...
COMFN3   ST    RWORK1,IXSHEP(RWORK3)    SAVE STARTING POINT
         IC    RWORK2,IBFLPF(RWORK1)    PICK UP F FIELD
         CR    RWORK2,R15               COMPARE IT TO NO. HITS
         BNE   SCIB2                    MISMATCH
         TM    IBFLPL(RWORK1),XFF       IS THE L FIELD ZERO
         BZ    SCIB9                    YES, DISCONTINUE THIS SEARCH
         IC    RWORK5,IBFLPL(RWORK1)    GET LENGTH OF KEY
         SR    RWORK1,RWORK5            MOVE POINTER TO BEGINNING OF
COMAI    IC    RWORK4,DZ(RPARM1,R15)     KEY--PICK UP ARG. CHARACTER
         IC    RWORK2,DZ(RWORK1)        PICK UP INDEX CHARACTER
         CR    RWORK4,RWORK2            ARE THEY EQUAL
         BNE   SCIB1                    NO
         LA    R15,C1(R15)              YES, BUMP UP NO. HITS
         LA    RWORK1,C1(RWORK1)        MOVE POINTER TO NEXT CHARACTER
         BCT   RWORK5,COMAI             BACK TO COMPARE IF ANY ARE LEFT
SCIB9    TM    IXSBFLG(RWORK3),X80      IS THIS A SECTION SEARCH
         BNZ   SCIB10                   YES
         SR    R15,R15                  CLEAR REG  INDICATING SUCCESS
         TM    IXSNOSR(RWORK3),XFF      IS HIT ENTRY A SPN RCD @X04SVES
         BNZ   SCIB12                   YES, GO ADJUST HIT POS.@X04SVES
*SCIB91:                                                           0056
*   RETURN;                         /* RETURN TO CALLER              */
         B     @EL00001                                            0056
*   GEN;                                                           0057
SCIB1    BH    SCIB3                    IS THE ARG GREATER--YES
         B     SCIB9                    NO, SEARCH COMPLETE
SCIB2    BL    SCIB9                    IF F LESS THAN N GO
SCIB3    TM    IXSBFLG(RWORK3),X80      F HIGHER, IS THIS SECT. SEARCH
         BZ    SCIB5                    NO, INNER SECT, SEARCH
*
*   THE FOLLOWING CODE IS REQUIRED TO TEST FOR END OF BUFFER, THAT IS,
*   NO MORE SECTIONS FOLLOW TO BE SEARCHED.  IF NOT END OF SECTION
*   POINTERS MUST BE UPDATED TO NEXT SECTION.  ALSO THE LOW KEY ADD.
*   OF THE NEXT SECTION MUST BE SAVED.  THE NO OF CHARACTERS WHICH HAVE
*   COMPARED EQUAL (HITS) IS ALSO SAVED FOR LATER USE IN SEARCHING
*   WITHIN THE SECTION.
*
         ICM   RWORK2,X03,IXHLEO(RBUFC) GET DISP. OF HIGH SECT.
         AR    RWORK2,RBUFC             MAKE THAT A POINTER
         CR    RWORK2,RWORK1            HAVE WE MOVED BEYOND END
         BNL   SCIB7                    YES, NO MATCH IN THIS BUFFER
         L     RWORK1,IXSHEP(RWORK3)    POINT BACK TO OLD BASE
         LR    RWORK5,RWORK1            GET SAME ADDRESS IN RW5
         IC    RWORK4,IBFLPL(RWORK1)    GET L FROM INDEX
         STC   R15,IXSPEC(RWORK3)       SAVE FOR PREVIOUS ENTRY COUNT
         SR    RWORK5,RWORK4            MOVE BACK TO KEY AREA
         SH    RWORK5,HLF2              MOVE TO POINTER
         ICM   RWORK4,X03,DZ(RWORK5)    PICK UP DISP. TO NEXT SECTION
         SR    RWORK5,RWORK0            MOVE ADDRESS PAST POINT, L,F
         ST    RWORK5,IXSLEP(RWORK3)    SAVE LOW ENTRY OF SECT IN WORK
         SR    RWORK1,RWORK4            UPDATE TO NEXT SECTION
         B     COMFN1                   BACK TO CONTINUE SEARCH
*
*   THE FOLLOWING CODE UPDATES POINTERS TO CONTINUE SEARCH
*   WITHIN A SECTION.  WE CANNOT EXIT WITHOUT LOCATING AN ENTRY
*   SINCE A SECTION SEARCH CAUSED US TO DO THE INNER SECTION SEARCH
*
SCIB5    L     RWORK1,IXSHEP(RWORK3)    START WITH ORIGINAL POINTER
         STC R15,IXSPEC(RWORK3)         SAVE NO. MATCHES       @X04SVES
         SR    RWORK5,RWORK5            CLEAR REGISTER         @X04SVES
         STC   RWORK5,IXSNOSR(RWORK3)   RESET SPN RCD CI COUNT @X04SVES
         LA    RWORK5,C1                INITIALIZE SPN RCD CNT @X04SVES
         IC    RWORK4,IBFLPL(RWORK1)    GET L VALUE
         SR    RWORK1,RWORK4            BACK OVER KEY
SCIB6    SR    RWORK1,RWORK0            BACK OVER POINTER,L,F  @X04SVES
SCIB62   IC    RWORK4,IBFLPF(RWORK1)    PICK UP F FIELD        @X04SVES
         LH    RWORK2,IXSKLEN(RWORK3)   PICK UP KEY LENGTH     @X04SVES
         CR    RWORK2,RWORK4            SAME,MEADING SPN. RCD. @X04SVES
         BNE   COMFN2                   NO                     @X04SVES
         STC   RWORK5,IXSNOSR(RWORK3)   YES,SAVE CI COUNT      @X04SVES
         LA    RWORK5,C1(RWORK5)        BUMP CI COUNT          @X04SVES
         B     SCIB6                                           @X04SVES
*
*  BLOCK HAS BEEN SEARCHED AND NO SECTION ENTRY WAS GREATER THAN OR
*  EQUAL TO THE KEY -  EXIT TO CALLER WITH R15 = 4
*
SCIB7    LH    R15,HLF4                 SET CODE
         B     SCIB91                   RETURN
*
*   THE FOLLOWING CODE IS ENTERED WHEN A SECTION SEARCH HAS BEEN
*   TERMINATED BY A SATISFIED SEARCH.  AT THIS POINT IT IS NECESSARY
*   TO INITIALIZE FOR AN INNER SECTION SEARCH
*
SCIB10   IC    R15,IXSPEC(RWORK3)       RESTORE NO. MATCHES TO WHAT IT
*                                       WAS AT BEGINNING OF SECTION
         L     RWORK4,IXSHEP(RWORK3)    GET AND STORE
         ST    RWORK4,IXSSEP(RWORK3)     ADDRESS OF SECTION ENTRY
*                                        IN WORK AREA
         L     RWORK1,IXSLEP(RWORK3)    PICK UP ADDRESS OF 1ST. ENTRY
*                                       IN THIS SECTION
         XI    IXSBFLG(RWORK3),X80      TURN OFF SECTION SEARCH
         SR    RWORK4,RWORK4            CLEAR CI COUNT         @X04SVES
         STC   RWORK4,IXSNOSR(RWORK3)   SAVE IN PARAMETER LIST @X04SVES
         LA    RWORK5,C1                RESET COUNT TO ONE     @X04SVES
         B     SCIB62                   GO TEST FOR SPN RCD    @X04SVES
*                                                              @X04SVES
*   THE FOLLOWING CODE IS ENTERED WHENEVER THE SEARCH WAS      @X04SVES
*   SATISFIED BY A SPANNED RECORD ENTRY.  THE POINTER TO THE   @X04SVES
*   HIT ENTRY IS ADJUSTED TO POINT TO THE RIGHTMOST CI OF      @X04SVES
*   THE SPANNED RECORD ENTRY.                                  @X04SVES
*                                                              @X04SVES
SCIB12   IC    RWORK4,IXSNOSR(RWORK3)   GET NO. OF SEG TO RIGHT@X04SVES
         IC    RWORK5,IXSEKON(RWORK3)   GET LENGTH OF F,L,PTR  @X04SVES
         MR    RWORK4,RWORK4            MULTIPLY               @X04SVES
         L     RWORK4,IXSHEP(RWORK3)    GET HIT ENTRY          @X04SVES
         AR    RWORK4,RWORK5            MOVE ADDRESS TO RIGHT  @X04SVES
         ST    RWORK4,IXSHEP(RWORK3)    END OF SPANNED ENTRY   @X04SVES
*   RETURN;                         /* RETURN TO CALLER      @X04SVES*/
         B     @EL00001                                            0058
*   GEN;                                                           0059
*                                       /*                   @X04SVES*/
         DS    0H                       ASSURE ALIGNMENT
HLF2     DC    H'2'                     HALFWORD = 2
HLF4     DC    H'4'                     HALFWORD = 4
DZ       EQU   0                        DEFINE ZERO DISPLACEMENT
*   GEN(IDAPATCH);                  /*                               */
         IDAPATCH
*   END IDA019RC                                                   0061
*                                                                  0061
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*                                                                  0061
*       ;                                                          0061
         B     @EL00001                                            0061
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDA019RC CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDA019RC CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
HWORD4   DC    H'4'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RWORK0   EQU   @00
RRPL     EQU   @01
RPLH     EQU   @02
RAMB     EQU   @03
RBUFC    EQU   @04
RWORK1   EQU   @05
RWORK2   EQU   @06
RWORK3   EQU   @07
RWORK4   EQU   @08
RWORK5   EQU   @09
RPARM1   EQU   @12
R14      EQU   @14
R15      EQU   @15
R1       EQU   @01
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
IDAIXSPL EQU   0
IXSKLEN  EQU   IDAIXSPL+14
IXSNOSR  EQU   IDAIXSPL+16
IXSBFLG  EQU   IDAIXSPL+17
IXSEKON  EQU   IDAIXSPL+18
IXSPEC   EQU   IDAIXSPL+19
IXSHEP   EQU   IDAIXSPL+20
IXSSEP   EQU   IDAIXSPL+24
IXSLEP   EQU   IDAIXSPL+28
IDAIXH   EQU   0
IXHLL    EQU   IDAIXH
IXHFLPLN EQU   IDAIXH+2
IXHLV    EQU   IDAIXH+16
IXHLEO   EQU   IDAIXH+20
IXHSEO   EQU   IDAIXH+22
IDAIBFLP EQU   0
IBFLPF   EQU   IDAIBFLP
IBFLPL   EQU   IDAIBFLP+1
IBFLP3   EQU   IDAIBFLP+2
IBFLP2   EQU   IBFLP3
IDASELL  EQU   0
IDAIXK   EQU   0
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDKEYLN EQU   IDAAMDSB+8
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
IDAAMB   EQU   0
AMBDSB   EQU   IDAAMB+20
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
AMBTRACE EQU   IDAAMB+120
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00015 EQU   AMBCSWD1+1
@NM00014 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00013 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00012 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00011 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00010 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00009 EQU   AMBINFL
@NM00008 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00007 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00006 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00005 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00004 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00003 EQU   IDAAMDSB+41
@NM00002 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
IXKEY    EQU   IDAIXK
IXSELL   EQU   IDASELL
IBFLP1   EQU   IBFLP2
IXHFSO   EQU   IDAIXH+18
IXHFLGS  EQU   IDAIXH+17
IXHXX    EQU   IDAIXH+12
IXHHP    EQU   IDAIXH+8
IXHBRBA  EQU   IDAIXH+4
IXHPTLS  EQU   IDAIXH+3
@NM00001 EQU   IXSBFLG
IXSLELV  EQU   IXSBFLG
IXSSSRH  EQU   IXSBFLG
IXSILN   EQU   IDAIXSPL+13
IXSTLN   EQU   IDAIXSPL+12
IXSARG   EQU   IDAIXSPL+8
IXSBUFC  EQU   IDAIXSPL+4
IXSSTRBA EQU   IDAIXSPL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
SCIB91   EQU   @EL00001
@ENDDATA EQU   *
         END   IDA019RC,(C'PLS1953',0701,78172)
