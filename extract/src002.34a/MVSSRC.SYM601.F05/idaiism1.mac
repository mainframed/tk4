         TITLE 'IDAIISM1--MVM ISAM INTERFACE SYNAD                     *
                        '
IDAIISM1 CSECT
         USING *,R15                    ESTABLISH ADDRESSABILITY
@PSTART  B     ERRXLATE                 GO TO ERROR TRANSLATION
         USING *,R15                    NEW ADDRESSABILITY
         B     MSGBUILD                 GO TO ERROR MESSAGE BUILD
ERRXLATE LR    R11,R15                  RE-ESTABLISH ADDRESSABILITY
         USING @PSTART,R11              USING REGISTER 11
         DROP  R15                      RELEASE REGISTER 15
*   RRPL=R1;                        /* ESTABLISH RPL BASE            */
         LR    RRPL,R1                                             0183
*   RFY                                                            0184
*     IFGRPL BASED(RRPL);           /* GET RPL ADDRESS               */
*   RIICB=RPLIICB;                  /* POINT TO IICB                 */
         L     RIICB,RPLIICB+76(,RRPL)                             0185
*   RDCB=IIDCBPTR;                  /* POINT TO DCB                  */
         L     RDCB,IIDCBPTR(,RIICB)                               0186
*   RFY                                                            0187
*     IHADCB BASED(RDCB);           /* SET DCB BASE                  */
*                                                                  0187
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER DCB SPECIFIES QISAM OR BISAM.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0188
*   IF DCBMFPUT=ON×                 /* IF DCB SPECIFIES GET          */
*       DCBMFGET=ON THEN            /* OR PUT, MAP ERRORS TO         */
         LA    @15,40                                              0188
         ALR   @15,RDCB                                            0188
         TM    DCBMFPUT(@15),B'01000000'                           0188
         BO    @RT00188                                            0188
         TM    DCBMFGET(@15),B'01000000'                           0188
         BNO   @RF00188                                            0188
@RT00188 DS    0H                                                  0189
*     DO;                           /* THE DCB.                      */
*                                                                  0189
*       /*************************************************************/
*       /*                                                           */
*       /* IF QISAM, MAP VSAM ERRORS TO THE DCB.                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0190
*       IF RPLERREG='0C'X THEN      /* IF I/O ERROR, DETERMINE       */
         CLI   RPLERREG(RRPL),12                                   0190
         BNE   @RF00190                                            0190
*         DO;                       /* WHAT KIND IT WAS              */
*                                                                  0191
*           /*********************************************************/
*           /*                                                       */
*           /* TRANSLATE VSAM I/O ERRORS TO QISAM I/O ERRORS.        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0192
*           IF RPLERRCD>=RPLWTERD THEN/* SEE IF WRITE ERROR          */
         CLI   RPLERRCD(RRPL),16                                   0192
         BL    @RF00192                                            0192
*             DCBEXOER=ON;          /* YES, COME HERE                */
         OI    DCBEXOER+52(RDCB),B'00000100'                       0193
*           ELSE                                                   0194
*             DCBEXIER=ON;          /* NO--SET READ ERROR            */
         B     @RC00192                                            0194
@RF00192 OI    DCBEXIER+52(RDCB),B'00001000'                       0194
*         END;                      /* END QISAM I/O ERROR           */
*       ELSE                        /* HERE IF LOGICAL ERROR         */
*         IF RPLERREG='08'X THEN    /* MAP LOGICAL ERROR             */
         B     @RC00190                                            0196
@RF00190 CLI   RPLERREG(RRPL),8                                    0196
         BNE   @RF00196                                            0196
*           DO;                                                    0197
*                                                                  0198
*             /*******************************************************/
*             /*                                                     */
*             /* TRANSLATE VSAM LOGICAL ERRORS TO QISAM LOGICAL      */
*             /* ERRORS                                              */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0198
*             IF DCBEXCD1=CZERO THEN/* IF EXCD NOT SET BY II SCAN    */
         LA    @15,52                                              0198
         ALR   @15,RDCB                                            0198
         CLI   DCBEXCD1(@15),B'00000000'                           0198
         BNE   @RF00198                                            0198
*               DO;                 /* CONVERT NO RECORD FOUND       */
*                 IF RPLERRCD=RPLNOREC THEN                        0200
         CLI   RPLERRCD(RRPL),16                                   0200
         BNE   @RF00200                                            0200
*                   DO;             /* TO ISAM NO RECORD FOUND       */
*                     DCBEXNKY=ON;  /* SET NO REC FOUND IN DCB IF  0202
*                                      RESUME LOAD                   */
         OI    DCBEXNKY(@15),B'10000000'                           0202
*                     IF DCBSTLOD=ON THEN                          0203
         TM    DCBSTLOD(@15),B'00100000'                           0203
         BO    @RT00203                                            0203
*                       GO TO EXIT; /* RETURN TO II LOAD             */
*                   END;            /* END OF NO RECORD FOUND        */
*                 ELSE              /* IF NOT NO RECORD ROUND, IF  0206
*                                      VOLUME NOT MOUNTED            */
*                   IF RPLERRCD=RPLNOMNT THEN                      0206
         B     @RC00200                                            0206
@RF00200 CLI   RPLERRCD(RRPL),24                                   0206
         BNE   @RF00206                                            0206
*                     DCBEXNKY=ON;  /* SET NO REC FOUND IN DCB       */
         OI    DCBEXNKY+52(RDCB),B'10000000'                       0207
*                   ELSE            /* NOT NO RECORD FOUND TRANSLATE
*                                      VSAM                          */
*                     IF RPLERRCD=RPLSEQCK THEN                    0208
         B     @RC00206                                            0208
@RF00206 CLI   RPLERRCD(RRPL),12                                   0208
         BNE   @RF00208                                            0208
*                       DCBEXSEQ=ON;/* SEQ CHECK TO ISAM             */
         OI    DCBEXSEQ+52(RDCB),B'10000000'                       0209
*                     ELSE          /* VSAM DUPLICATE RECORD         */
*                       IF RPLERRCD=RPLDUP THEN                    0210
         B     @RC00208                                            0210
@RF00208 CLI   RPLERRCD(RRPL),8                                    0210
         BNE   @RF00210                                            0210
*                         DCBEXDUP=ON;/* IS ISAM DUP RECORD          */
         OI    DCBEXDUP+52(RDCB),B'01000000'                       0211
*                       ELSE        /*                               */
*                         IF RPLERRCD=RPLEODER THEN/*        @OZ02676*/
         B     @RC00210                                            0212
@RF00210 CLI   RPLERRCD(RRPL),4                                    0212
         BNE   @RF00212                                            0212
*                           DO;     /* CALL II EODAD         @OZ02676*/
*                             RFY                                  0214
*                               R15 RSTD;/* GET REG          @OZ02676*/
*                             RFY                                  0215
*                               IFGACB BASED(IIACBPTR);/* PTR      0215
*                                                            @OZ02676*/
*                             RFY                                  0216
*                               IFGEXLST BASED(ACBEXLST);/* PT     0216
*                                                            @OZ02676*/
*                             R15=EXLEODP;/* POINT TO EXLST  @OZ02676*/
         L     @12,IIACBPTR(,RIICB)                                0217
         L     @12,ACBEXLST(,@12)                                  0217
         ICM   R15,15,EXLEODP(@12)                                 0217
*                             R1=RRPL;/* POINT TO RPL        @OZ02676*/
         LR    R1,RRPL                                             0218
*                             GEN(BR 15);/* EXIT TO EODAD    @OZ02676*/
         BR 15
*                           END;    /* END EODAD CALL        @OZ02676*/
*                         ELSE      /* TRY ANOTHER           @OZ02676
*                                      CALL READ EXCLUSIVE OR        */
*                           IF RPLERRCD=RPLEXCL×/* REQUEST AFTER EOD
*                                      OR                            */
*                               RPLERRCD=RPLNOKR×/* OR KEY CHANGE TRY
*                                      A                             */
*                               RPLERRCD=RPLKEYCH THEN             0221
         B     @RC00212                                            0221
@RF00212 CLI   RPLERRCD(RRPL),20                                   0221
         BE    @RT00221                                            0221
         CLI   RPLERRCD(RRPL),36                                   0221
         BE    @RT00221                                            0221
         CLI   RPLERRCD(RRPL),96                                   0221
         BNE   @RF00221                                            0221
@RT00221 DS    0H                                                  0222
*                             DCBEXINV=ON;/* CERTAIN USER ERROR      */
         OI    DCBEXINV+52(RDCB),B'00010000'                       0222
*                           ELSE    /* SPACE ERROR IN VSAM           */
*                             IF RPLERRCD=RPLNOEXT×/* (DASD OR MAIN) */
*                                 RPLERRCD=RPLNOVRT THEN           0223
         B     @RC00221                                            0223
@RF00221 CLI   RPLERRCD(RRPL),28                                   0223
         BE    @RT00223                                            0223
         CLI   RPLERRCD(RRPL),40                                   0223
         BNE   @RF00223                                            0223
@RT00223 DS    0H                                                  0224
*                               DCBEXNSP=ON;/* SAME AS FOR ISAM      */
         OI    DCBEXNSP+52(RDCB),B'00100000'                       0224
*                             ELSE  /* TRANSLATE INVALID             */
*                               IF RPLERRCD=RPLINLEN THEN          0225
         B     @RC00223                                            0225
@RF00223 CLI   RPLERRCD(RRPL),108                                  0225
         BNE   @RF00225                                            0225
*                                 DCBEXLTH=ON;/* LENGTH              */
         OI    DCBEXLTH+52(RDCB),B'00001000'                       0226
*                               ELSE/* IF NONE OF THE ABOVE,         */
*                                 DO;/* INDICATE UNKNOWN ERROR     0227
*                                      UNREACHABLE BLOCK             */
         B     @RC00225                                            0227
@RF00225 DS    0H                                                  0228
*                                   DCBEXBLI=ON;/* ON INPUT/UPDATE   */
*                                   DCBEXBLU=ON;                   0229
         OI    DCBEXBLI+52(RDCB),B'00000011'                       0229
*                                 END;/* END OF UNKNOWN ERROR        */
*               END;                /* END OF LOGICAL ERROR MAP      */
*             ELSE                                                 0232
*               ;                   /* EXCD ALREADY SET              */
@RF00198 DS    0H                                                  0233
*           END;                    /* END OF LOGICAL ERROR          */
@RC00198 DS    0H                                                  0234
*                                                                  0234
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR THE PRESENCE OF A QISAM SYNAD.                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0234
*       IF DCBSYNAD^=ONE THEN       /* IF A SYNAD IS PRESENT,        */
@RF00196 DS    0H                                                  0234
@RC00190 LA    @12,52                                              0234
         ALR   @12,RDCB                                            0234
         CLC   DCBSYNAD(4,@12),@CF00087                            0234
         BE    @RF00234                                            0234
*         DO;                       /* GO TO IT.                     */
*                                                                  0235
*           /*********************************************************/
*           /*                                                       */
*           /* IF CLOSE IS IN CONTROL, RETURN IF SECOND SYNAD ENTRY. */
*           /* OTHERWISE, GET THE USER REGISTERS FROM THE SVRB AND GO*/
*           /* TO THE SYNAD ROUTINE.                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0236
*           IF IIFCLOSE=ON THEN     /* IF CLOSE IN CONTROL           */
         TM    IIFCLOSE(RIICB),B'00010000'                         0236
         BNO   @RF00236                                            0236
*             DO;                   /* COME HERE.                    */
*               IF DCBEXCLD=ON THEN /* WAS SYNAD ENTERED             */
         TM    DCBEXCLD(@12),B'00100000'                           0238
         BO    @RT00238                                            0238
*                 GO TO EXIT;       /* BEFORE? YES, EXIT.            */
*               ELSE                /* FIRST TIME CLOSE ERROR        */
*                 DO;                                              0240
*                   R14=RWORK3;     /* GET CLOSE RET ADDR            */
         LR    R14,RWORK3                                          0241
*                   RFY                                            0242
*                     RWORK3 UNRSTD;/* RELEASE WORK REG              */
*                   DCBEXCLD=ON;    /* INDICATE ERROR IN CLOSE       */
         OI    DCBEXCLD(@12),B'00100000'                           0243
*                   RFY                                            0244
*                     R0 RESTRICTED;/* GET REGISTER                  */
*                   IF DCBEXSEQ=ON THEN/* SEQUENCE CHK ERROR?        */
         TM    DCBEXSEQ(@12),B'10000000'                           0245
         BNO   @RF00245                                            0245
*                     R0=ADDR(PLHKEY);/* SET HIGH KEY PTR            */
         L     @12,RPLPLHPT(,RRPL)                                 0246
         LA    R0,PLHKEY(,@12)                                     0246
*                   ELSE                                           0247
*                     R0=ZERO;      /* NO BUFFER ADDR                */
         B     @RC00245                                            0247
@RF00245 SLR   R0,R0                                               0247
*                   RFY                                            0248
*                     R15 RESTRICTED;/* GET REGISTER                 */
@RC00245 DS    0H                                                  0249
*                   R15=ADDR(IHADCB);/* SAVE DCB ADDRESS             */
         LR    R15,RDCB                                            0249
*                   RFY                                            0250
*                     IHADCB BASED(R15);/* CHANGE DCB BASE           */
*                   RRPL=TCBRBP;    /* POINT TO SYNCH SVRB           */
         L     @12,DCBDEBAD+40(,R15)                               0251
         L     @12,TCBPTR(,@12)                                    0251
         L     RRPL,TCBRBP(,@12)                                   0251
*                   RRPL=SVRBLINK;  /* POINT TO CLOSE SVRB           */
         L     @12,SVRBLINK-1(,RRPL)                               0252
         LA    @12,0(,@12)                                         0252
         LR    RRPL,@12                                            0252
*                   IF AUDACBCL=ON&AUDACBRC=OFF THEN               0253
         TM    AUDACBCL(RIICB),B'01000000'                         0253
         BNO   @RF00253                                            0253
         TM    AUDACBRC(RIICB),B'00100000'                         0253
         BNZ   @RF00253                                            0253
*                     RRPL=SVRBLINK;/* USE FIRST CLOSE SVRB IF IN  0254
*                                      PROCESS OF ACB CLOSE  @YM04657*/
         L     @12,SVRBLINK-1(,RRPL)                               0254
         LA    @12,0(,@12)                                         0254
         LR    RRPL,@12                                            0254
*                   IF IISAMSYN(ONE)=CZERO THEN/* IF SYNAD NOT LOADED*/
@RF00253 CLI   IISAMSYN(RIICB),B'00000000'                         0255
         BNE   @RF00255                                            0255
*                     R1=ZERO;      /* ZERO R1                       */
         SLR   R1,R1                                               0256
*                   ELSE                                           0257
*                     R1=R15;       /* OTHERWISE, DCB ADDR           */
*                                                                  0257
         B     @RC00255                                            0257
@RF00255 LR    R1,R15                                              0257
*                   /*************************************************/
*                   /*                                               */
*                   /* RESTORE USER REGISTERS FROM THE CLOSE SVRB    */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0258
*                   GEN REFS(SVRBREG2)(LM    R2,R13,SVRBREG2(RRPL));
@RC00255 DS    0H                                                  0258
         LM    R2,R13,SVRBREG2(RRPL)
*                   R15=DCBSYNAD;   /* POINT TO SYNAD ROUTINE        */
         L     @12,DCBSYNAD+52(,R15)                               0259
         LR    R15,@12                                             0259
*                   GO TO SYNAD;    /* TAKE SYNAD EXIT               */
         BR    R15                                                 0260
*                 END;              /* END OF CLOSE SYNAD EXIT       */
*             END;                  /* END OF CLOSE CODE             */
*                                                                  0263
*           /*********************************************************/
*           /*                                                       */
*           /* IF CLOSE IS NOT IN CONTROL, RESTORE REGISTERS FROM THE*/
*           /* USER SAVEAREA AND GO TO THE SYNAD ROUTINE.            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0263
*           ELSE                    /* HERE IF NOT CLOSE             */
*             DO;                                                  0263
@RF00236 DS    0H                                                  0264
*               RFY                                                0264
*                 IHADCB BASED(RDCB);/* RESET DCB BASE               */
*               IF DCBEXSEQ=ON THEN /* SEQUENCE CHK ERROR?           */
         TM    DCBEXSEQ+52(RDCB),B'10000000'                       0265
         BNO   @RF00265                                            0265
*                 R0=ADDR(PLHKEY);  /* SET HIGH KEY PTR              */
         L     @12,RPLPLHPT(,RRPL)                                 0266
         LA    R0,PLHKEY(,@12)                                     0266
*               ELSE                                               0267
*                 R0=ZERO;          /* NO BUFFER ADDR                */
         B     @RC00265                                            0267
@RF00265 SLR   R0,R0                                               0267
*               R13=IIREGBC;        /* POINT TO USER SAVEAREA        */
@RC00265 L     R13,IIREGBC(,RIICB)                                 0268
*               R14=R14SAVE;        /* GET USER RETURN REG           */
         L     R14,R14SAVE(,R13)                                   0269
*               R15=DCBSYNAD;       /* POINT TO SYNAD ROUTINE        */
         L     R15,DCBSYNAD+52(,RDCB)                              0270
*               IF IISAMSYN(ONE)=CZERO THEN/* IF NOT LOADED SYNAD    */
         CLI   IISAMSYN(RIICB),B'00000000'                         0271
         BNE   @RF00271                                            0271
*                 R1=ZERO;          /* INDICATE NO BUFFER            */
         SLR   R1,R1                                               0272
*               GEN(LM    R2,R12,TWENTY8(R13));/* SET USER REGS      */
@RF00271 DS    0H                                                  0273
         LM    R2,R12,TWENTY8(R13)
*               GO TO SYNAD;        /* TAKE SYNAD EXIT               */
         BR    R15                                                 0274
*               RFY                                                0275
*                 R0 UNRSTD;        /* RELEASE REGISTER              */
*             END;                  /* END OF NON-CLOSE CODE         */
*         END;                      /* END OF SYNAD PRESENT          */
*                                                                  0277
*       /*************************************************************/
*       /*                                                           */
*       /* IF NO QISAM SYNAD, ISSUE 031 ABEND.                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0278
*       ELSE                        /* HERE IF NO SYNAD              */
*         DO;                       /* ABEND(QABCODE) DUMP SYSTEM    */
@RF00234 DS    0H                                                  0279
*           RESPECIFY                                              0279
*            (GPR01F) RESTRICTED;                                  0279
*           GPR01F=((QABCODE)&'00000FFF'X)*4096;/* COMP CODE IN BITS
*                                      8-19                          */
         L     GPR01F,@CF02043                                     0280
*           GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG     */
         O     GPR01F,@CF02029                                     0281
*           SVC(13);                /* ISSUE ABEND SVC               */
         SVC   13                                                  0282
*           RESPECIFY                                              0283
*            (GPR01F) UNRESTRICTED;                                0283
*         END;                      /* ABEND(QABCODE) DUMP SYSTEM  0284
*                                      X'031' - ABEND CODE   @Y021130*/
*     END;                          /* END OF QISAM CODE             */
*                                                                  0286
*   /*****************************************************************/
*   /*                                                               */
*   /* MAP VSAM ERRORS TO THE DECB FOR BISAM.                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0286
*   ELSE                            /* HERE FOR BISAM                */
*     DO;                                                          0286
         B     @RC00188                                            0286
@RF00188 DS    0H                                                  0287
*       RDECB=RPLDECB;              /* POINT TO DECB                 */
         L     RDECB,RPLDECB+76(,RRPL)                             0287
*       RFY                                                        0288
*         DECBS01 BASED(RDECB);     /* DEFINE DECB BASE      @Y021130*/
*       IF RPLERREG='0C'X THEN      /* IF AN I/O ERROR OCUR-         */
         CLI   RPLERREG(RRPL),12                                   0289
         BNE   @RF00289                                            0289
*         DECEXERR=ON;              /* RED, SET CODE IN DECB         */
         OI    DECEXERR(RDECB),B'00001000'                         0290
*       ELSE                                                       0291
*         IF RPLERREG='08'X THEN    /* IF LOGICAL ERROR              */
         B     @RC00289                                            0291
@RF00289 CLI   RPLERREG(RRPL),8                                    0291
         BNE   @RF00291                                            0291
*           IF RPLERRCD=RPLNOREC×   /* MAP RPL EXCEPTION CODES       */
*               RPLERRCD=RPLNOMNT THEN/* TO THE DECB.                */
         CLI   RPLERRCD(RRPL),16                                   0292
         BE    @RT00292                                            0292
         CLI   RPLERRCD(RRPL),24                                   0292
         BNE   @RF00292                                            0292
@RT00292 DS    0H                                                  0293
*             DECEXRNF=ON;          /* SEE QISAM MAPPING             */
         OI    DECEXRNF(RDECB),B'10000000'                         0293
*           ELSE                    /* ABOVE FOR DETAILS             */
*             IF RPLERRCD=RPLDUP THEN/* IF VSAM DUPLICATE RCD        */
         B     @RC00292                                            0294
@RF00292 CLI   RPLERRCD(RRPL),8                                    0294
         BNE   @RF00294                                            0294
*               DECEXDUP=ON;        /* DUP RCD EXCD IN DECB          */
         OI    DECEXDUP(RDECB),B'00000001'                         0295
*             ELSE                  /* IF NOT ABLE TO EXTEND DATA SET
*                                      THEN SET                      */
*               IF RPLERRCD=RPLNOEXT THEN                          0296
         B     @RC00294                                            0296
@RF00294 CLI   RPLERRCD(RRPL),28                                   0296
         BNE   @RF00296                                            0296
*                 DECEXNSP=ON;      /* SPACE NOT FOUND IN DECB       */
         OI    DECEXNSP(RDECB),B'00100000'                         0297
*               ELSE                /* IF VSAM FOUND EXCLUSIVE USE 0298
*                                      CONFLICT                      */
*                 IF RPLERRCD=RPLEXCL×/* NO KEY RANGE FOR INSERT     */
*                     RPLERRCD=RPLNOKR×/* OR KEY CHANGE ATTEMPT      */
*                     RPLERRCD=RPLKEYCH THEN                       0298
         B     @RC00296                                            0298
@RF00296 CLI   RPLERRCD(RRPL),20                                   0298
         BE    @RT00298                                            0298
         CLI   RPLERRCD(RRPL),36                                   0298
         BE    @RT00298                                            0298
         CLI   RPLERRCD(RRPL),96                                   0298
         BNE   @RF00298                                            0298
@RT00298 DS    0H                                                  0299
*                   DECEXINV=ON;    /* SET DECB INVALID REQ          */
         OI    DECEXINV(RDECB),B'00010000'                         0299
*                 ELSE              /* IF VSAM FOUND INVALID RECORD
*                                      LENGTH                        */
*                   IF RPLERRCD=RPLINLEN THEN                      0300
         B     @RC00298                                            0300
@RF00298 CLI   RPLERRCD(RRPL),108                                  0300
         BNE   @RF00300                                            0300
*                     DECEXRLC=ON;  /* SET DECB RCD LENGTH CHK       */
         OI    DECEXRLC(RDECB),B'01000000'                         0301
*                   ELSE                                           0302
*                     DECEXUBK=ON;  /* ELSE UNKNOWN ERROR            */
         B     @RC00300                                            0302
@RF00300 OI    DECEXUBK(RDECB),B'00000100'                         0302
*EXIT:                                                             0303
*       R1=RRPL;                    /* RESTORE VSAM REG              */
@RC00300 DS    0H                                                  0303
@RC00298 DS    0H                                                  0303
@RC00296 DS    0H                                                  0303
@RC00294 DS    0H                                                  0303
@RC00292 DS    0H                                                  0303
@RF00291 DS    0H                                                  0303
@RC00289 DS    0H                                                  0303
EXIT     LR    R1,RRPL                                             0303
*     END;                          /* END OF BISAM CODE             */
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 DS    0H                                                  0305
@EF00001 DS    0H                                                  0305
@ER00001 BR    @14                                                 0305
*                                                                  0306
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*      ISAM INTERFACE ENTRY FOR SYNADAF PROCESSING                 */
*/*                                                                  */
*/*      THIS ROUTINE IS ENTERED WHEN THE SYNADAF MACRO IS ISSUED    */
*/*      FROM AN ISAM PROGRAM THAT IS BEING PROCESSED BY THE ISAM    */
*/*      INTERFACE.  IT WILL CONVERT A VSAM MESSAGE TO THE ISAM      */
*/*      MESSAGE FORMAT.                                             */
*/*                                                                  */
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0306
*   GEN;                                                           0306
MSGBUILD STM   R14,R12,TWELVE(R13)     SAVE REGISTERS
         BALR  R11,0                   RESET BASE
         USING *,R11                   SET ADDRESSABILITY
*   RFY                                                            0307
*     R10 RSTD;                     /* GET WORK REGISTER             */
*   RFY                                                            0308
*     IDAERMSG BASED(R1);           /* DEFINE MESSAGE BASE           */
*   RRPL=ADDR(IDAERMSG)+LENGTH(IDAERMSG);/* PTR TO SYNADAF PARMS     */
         LA    RRPL,128                                            0309
         ALR   RRPL,R1                                             0309
*   RFY                                                            0310
*     SPARMS BASED(RRPL);           /* DEFINE PARAMETER BASE         */
*   R2=PARM1;                       /* GET DCB ADDRESS               */
         L     R2,PARM1(,RRPL)                                     0311
*   R10=PARM2;                      /* GET DECB ADDRESS              */
         L     R10,PARM2-1(,RRPL)                                  0312
         LA    R10,0(,R10)                                         0312
*   RFY                                                            0313
*     IHADCB BASED(R2);             /* CHANGE DCB BASE               */
*   RFY                                                            0314
*     DECBS01 BASED(R10);           /* DEFINE DECB BASE      @Y021130*/
*   RFY                                                            0315
*     IDAIICB BASED(DEBWKPT5);      /* DEFINE IICB BASE              */
*                                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* IF AN I/O ERROR OCCURRED, LOCATE THE VSAM RPL. (FOR BISAM, THE*/
*   /* RPL MAY HAVE BEEN REUSED SINCE THE ERROR WAS ORIGINALLY       */
*   /* DETECTED.)                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   RRPL=ZERO;                      /* INDICATE NO VSAM MSG.         */
         SLR   RRPL,RRPL                                           0316
*   IF DCBMFPUT=ON×                 /* IF DCB SPECIFIES QISAM,       */
*       DCBMFGET=ON THEN            /* THE EXCEPTION CODES ARE       */
         LA    @12,40                                              0317
         ALR   @12,R2                                              0317
         TM    DCBMFPUT(@12),B'01000000'                           0317
         BO    @RT00317                                            0317
         TM    DCBMFGET(@12),B'01000000'                           0317
         BNO   @RF00317                                            0317
@RT00317 DS    0H                                                  0318
*     DO;                           /* SET IN THE DCB.               */
*       IF DCBEXOER=ON×             /* IF AN I/O ERROR HAS           */
*           DCBEXIER=ON THEN        /* OCCURRED, A VSAM ERROR        */
         TM    DCBEXOER+52(R2),B'00001100'                         0319
         BZ    @RF00319                                            0319
*         RRPL=IIRPLPTR;            /* MESSAGE IS PRESENT.           */
         L     @12,DCBDEBAD+40(,R2)                                0320
         L     @12,DEBEXPT(,@12)                                   0320
         L     @12,DEBWKPT5(,@12)                                  0320
         L     RRPL,IIRPLPTR(,@12)                                 0320
*     END;                          /* END OF QISAM CODE             */
*   ELSE                            /* HERE FOR BISAM                */
*     DO;                           /* IF AN I/O ERROR HAS           */
         B     @RC00317                                            0322
@RF00317 DS    0H                                                  0323
*       IF DECEXERR=ON THEN         /* OCCURRED, A VSAM MSG IS       */
         TM    DECEXERR(R10),B'00001000'                           0323
         BNO   @RF00323                                            0323
*         DO;                       /* PRESENT IF RPL NOT YET        */
*           RRPL=IIRPLPTR;          /* REASSIGNED TO NEW DECB.       */
         L     @12,DCBDEBAD+40(,R2)                                0325
         L     @12,DEBEXPT(,@12)                                   0325
         L     @12,DEBWKPT5(,@12)                                  0325
         L     RRPL,IIRPLPTR(,@12)                                 0325
*           DO WHILE RRPL^=ZERO&    /* SEARCH FOR AN RPL UNTIL       */
*                 RPLDECB^=ADDR(DECBS01);/* END OF CHAIN OR UNTIL  0326
*                                                            @Y021130*/
         B     @DE00326                                            0326
@DL00326 DS    0H                                                  0327
*             RRPL=RPLRPLPT;        /* AN RPL IS FOUND.              */
         L     @12,RPLRPLPT+76(,RRPL)                              0327
         LR    RRPL,@12                                            0327
*           END;                    /* END OF RPL SEARCH             */
@DE00326 LTR   RRPL,RRPL                                           0328
         BZ    @DC00326                                            0328
         C     R10,RPLDECB+76(,RRPL)                               0328
         BNE   @DL00326                                            0328
@DC00326 DS    0H                                                  0329
*           IF RRPL^=ZERO THEN      /* IF AN RPL WAS FOUND,          */
         LTR   RRPL,RRPL                                           0329
         BZ    @RF00329                                            0329
*             DO;                   /* ACQUIRE CONTROL OF IT.        */
*               TS(RPLIITSB);       /* IS RPL AVAILABLE?             */
         TS    RPLIITSB+76(RRPL)                                   0331
*               BC(8,RPLAVL);       /* YES, BRANCH.                  */
         BC    8,RPLAVL                                            0332
*               RRPL=ZERO;          /* NO--SET NO RPL PRESENT.       */
         SLR   RRPL,RRPL                                           0333
*             END;                  /* END OF RPL ACQUISITION        */
*         END;                      /* END OF BISAM I/O ERROR        */
@RF00329 DS    0H                                                  0336
*     END;                          /* END OF BISAM CODE             */
*                                                                  0336
@RF00323 DS    0H                                                  0337
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A VSAM ERROR MESSAGE EXISTS, COPY IT TO THE SYNADAF MESSAGE*/
*   /* AREA. (THE RIGHT-HAND SIDE OF THE MESSAGE IS TRUNCATED.)      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0337
*   IF RRPL^=ZERO                   /* IF AN I/O ERROR AND THE       */
*     THEN                          /* RPL WAS AVAILABLE, COPY       */
@RC00317 LTR   RRPL,RRPL                                           0337
         BZ    @RF00337                                            0337
*     DO;                           /* THE VSAM ERROR MESSAGE.       */
*RPLAVL:                            /* HERE IF BISAM RPL OK          */
*       RFY                                                        0339
*         R9 RSTD;                  /* GET WORK REGISTER             */
RPLAVL   DS    0H                                                  0340
*       R9=ERMLL1-LENGTH(ERLGTH);   /* GET LENGTH FOR MOVE           */
         LH    R9,ERMLL1(,R1)                                      0340
         SL    R9,@CF00045                                         0340
*       ERMBFRA(ONE:R9)=VSAMMSG(ONE:R9);/* COPY VSAM MESSAGE         */
         LR    @12,R9                                              0341
         BCTR  @12,0                                               0341
         L     @08,RPLERMSA(,RRPL)                                 0341
         EX    @12,@SM02050                                        0341
*       RPLIITSB=CZERO;             /* RELEASE THE RPL               */
         MVI   RPLIITSB+76(RRPL),B'00000000'                       0342
*       ERMBFRA=BLANKS;             /* BLANK OUT BUFFER ADDR         */
         MVI   ERMBFRA+1(R1),C' '                                  0343
         MVC   ERMBFRA+2(2,R1),ERMBFRA+1(R1)                       0343
         MVI   ERMBFRA(R1),C' '                                    0343
*     END;                          /* END OF COPY I/O ERR MSG       */
*                                                                  0345
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A LOGICAL ERROR OCCURRED OR IF THE RPL USED FOR THE BISAM  */
*   /* REQUEST IS UNAVAILABLE, BUILD A MESSAGE USING THE DCB OR DECB */
*   /* ERROR CODES.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0345
*   ELSE                            /* HERE FOR LOGICAL ERROR        */
*     DO;                           /* OR RPL NOT AVAILABLE          */
*                                                                  0345
         B     @RC00337                                            0345
@RF00337 DS    0H                                                  0346
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD COMMON PART OF THE MESSAGE.                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0346
*       ERJOBNM=TIOCNJOB;           /* SET JOB NAME                  */
         LA    @12,40                                              0346
         ALR   @12,R2                                              0346
         L     @08,DCBDEBAD(,@12)                                  0346
         L     @08,TCBPTR(,@08)                                    0346
         L     @08,TIOTPTR(,@08)                                   0346
         MVC   ERJOBNM(8,R1),TIOCNJOB(@08)                         0346
*       ERSTEPNM=TIOCSTEP;          /* SET STEP NAME                 */
         MVC   ERSTEPNM(8,R1),TIOCSTEP(@08)                        0347
*       RFY                                                        0348
*         TIOENTRY BASED(R9);       /* DEFINE DDNAME BASE            */
*       R9=ADDR(TIOT1)+DCBTIOT;     /* POINT TO DD ENTRY             */
         AH    @08,DCBTIOT(,@12)                                   0349
         LR    R9,@08                                              0349
*       ERDDNM=TIOEDDNM;            /* SET UP DD NAME                */
         MVC   ERDDNM(8,R1),TIOEDDNM(R9)                           0350
*       ERUNIT=SKIP;                /* SET UNKNOWN UNIT              */
         MVC   ERUNIT(3,R1),SKIP                                   0351
*       ERUNTYPE=DIRECT;            /* SET DIRECT ACCESS             */
         MVC   ERUNTYPE(2,R1),DIRECT                               0352
*       BLNKAREA=BLANKS;            /* BLANK OUT FIRST PART          */
         MVI   BLNKAREA+1(R1),C' '                                 0353
         MVC   BLNKAREA+2(40,R1),BLNKAREA+1(R1)                    0353
         MVI   BLNKAREA(R1),C' '                                   0353
*       IF DCBMFGET=ON×             /* IF QISAM MODE,                */
*           DCBMFPUT=ON THEN        /* DETERMINE THE ERROR           */
         TM    DCBMFGET(@12),B'01000000'                           0354
         BO    @RT00354                                            0354
         TM    DCBMFPUT(@12),B'01000000'                           0354
         BNO   @RF00354                                            0354
@RT00354 DS    0H                                                  0355
*         DO;                       /* FROM THE DCB.                 */
*                                                                  0356
*           /*********************************************************/
*           /*                                                       */
*           /* SET QISAM ERROR DESCRIPTION FROM DCB EXCEPTION CODES. */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0356
*           IF DCBEXNKY=ON THEN     /* IF NO RECORD FOUND            */
         TM    DCBEXNKY+52(R2),B'10000000'                         0356
         BNO   @RF00356                                            0356
*             ERDESC=NOKEY;         /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),NOKEY                                 0357
*           ELSE                                                   0358
*             IF DCBEXSEQ=ON THEN   /* IF SEQUENCE CHECK ERROR       */
         B     @RC00356                                            0358
@RF00356 TM    DCBEXSEQ+52(R2),B'10000000'                         0358
         BNO   @RF00358                                            0358
*               ERDESC=SEQCHK;      /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),SEQCHK                                0359
*             ELSE                                                 0360
*               IF DCBEXDUP=ON THEN /* IF DUPLICATE RECORD           */
         B     @RC00358                                            0360
@RF00358 TM    DCBEXDUP+52(R2),B'01000000'                         0360
         BNO   @RF00360                                            0360
*                 ERDESC=DUPLIC;    /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),DUPLIC                                0361
*               ELSE                                               0362
*                 IF DCBEXINV=ON THEN/* IF INVALID REQUEST           */
         B     @RC00360                                            0362
@RF00360 TM    DCBEXINV+52(R2),B'00010000'                         0362
         BNO   @RF00362                                            0362
*                   ERDESC=INVALREQ;/* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),INVALREQ                              0363
*                 ELSE                                             0364
*                   IF DCBEXNSP=ON THEN/* IF SPACE NOT FOUND         */
         B     @RC00362                                            0364
@RF00362 TM    DCBEXNSP+52(R2),B'00100000'                         0364
         BNO   @RF00364                                            0364
*                     ERDESC=NOSPACE;/* SET MESSAGE DESCRIPTION      */
         MVC   ERDESC(15,R1),NOSPACE                               0365
*                   ELSE                                           0366
*                     IF DCBEXLTH=ON THEN/* IF RECORD LENGTH CHECK   */
         B     @RC00364                                            0366
@RF00364 TM    DCBEXLTH+52(R2),B'00001000'                         0366
         BNO   @RF00366                                            0366
*                       ERDESC=INLEN;/* SET MESSAGE DESCRIPTION      */
         MVC   ERDESC(15,R1),INLEN                                 0367
*                     ELSE                                         0368
*                       ERDESC=UNREACH;/* ELSE UNREACHABLE BLOCK     */
         B     @RC00366                                            0368
@RF00366 MVC   ERDESC(15,R1),UNREACH                               0368
*         END;                      /* END OF QISAM ERDESC           */
*       ELSE                        /* BISAM ERROR DESCRIP           */
*         DO;                       /* DETERMINE DECB ERROR          */
*                                                                  0370
         B     @RC00354                                            0370
@RF00354 DS    0H                                                  0371
*           /*********************************************************/
*           /*                                                       */
*           /* SET BISAM ERROR DESCRIPTION FROM THE DECB ERROR FLAGS.*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0371
*           IF DECEXERR=ON THEN     /* IF I/O ERROR                  */
         TM    DECEXERR(R10),B'00001000'                           0371
         BNO   @RF00371                                            0371
*             ERDESC=IOERR;         /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),IOERR                                 0372
*           ELSE                                                   0373
*             IF DECEXRNF=ON THEN   /* IF NO RECORD FOUND            */
         B     @RC00371                                            0373
@RF00371 TM    DECEXRNF(R10),B'10000000'                           0373
         BNO   @RF00373                                            0373
*               ERDESC=NOKEY;       /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),NOKEY                                 0374
*             ELSE                                                 0375
*               IF DECEXDUP=ON THEN /* IF DUPLICATE RECORD           */
         B     @RC00373                                            0375
@RF00373 TM    DECEXDUP(R10),B'00000001'                           0375
         BNO   @RF00375                                            0375
*                 ERDESC=DUPLIC;    /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),DUPLIC                                0376
*               ELSE                                               0377
*                 IF DECEXNSP=ON THEN/* IF NO SPACE FOUND            */
         B     @RC00375                                            0377
@RF00375 TM    DECEXNSP(R10),B'00100000'                           0377
         BNO   @RF00377                                            0377
*                   ERDESC=NOSPACE; /* SET MESSAGE DESCRIPTION       */
         MVC   ERDESC(15,R1),NOSPACE                               0378
*                 ELSE                                             0379
*                   IF DECEXINV=ON THEN/* IF INVALID REQUEST         */
         B     @RC00377                                            0379
@RF00377 TM    DECEXINV(R10),B'00010000'                           0379
         BNO   @RF00379                                            0379
*                     ERDESC=INVALREQ;/* SET MESSAGE DESCRIPTION     */
         MVC   ERDESC(15,R1),INVALREQ                              0380
*                   ELSE                                           0381
*                     IF DECEXRLC=ON THEN/* IF RECORD LENGTH CHECK   */
         B     @RC00379                                            0381
@RF00379 TM    DECEXRLC(R10),B'01000000'                           0381
         BNO   @RF00381                                            0381
*                       ERDESC=INLEN;/* SET MESSAGE DESCRIPTION      */
         MVC   ERDESC(15,R1),INLEN                                 0382
*                     ELSE                                         0383
*                       ERDESC=UNREACH;/* ELSE UNREACHABLE BLOCK     */
         B     @RC00381                                            0383
@RF00381 MVC   ERDESC(15,R1),UNREACH                               0383
*         END;                      /* END OF BISAM ERROR            */
@RC00381 DS    0H                                                  0384
@RC00379 DS    0H                                                  0384
@RC00377 DS    0H                                                  0384
@RC00375 DS    0H                                                  0384
@RC00373 DS    0H                                                  0384
@RC00371 DS    0H                                                  0385
*     END;                          /* END OF COMMON MSG BUILD       */
@RC00354 DS    0H                                                  0386
*                                                                  0386
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE ERROR DESCRIPTION FIELD TO THE APPROPRIATE BISAM OR   */
*   /* QISAM MACRO INSTRUCTION AND SET THE ACCESS METHOD CODE        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0386
*   IF DCBMFPUT=ON×                 /* TEST FOR A QISAM DCB          */
*       DCBMFGET=ON THEN            /* IF GET OR PUT, ERROR          */
@RC00337 LA    @12,40                                              0386
         ALR   @12,R2                                              0386
         TM    DCBMFPUT(@12),B'01000000'                           0386
         BO    @RT00386                                            0386
         TM    DCBMFGET(@12),B'01000000'                           0386
         BNO   @RF00386                                            0386
@RT00386 DS    0H                                                  0387
*     DO;                           /* CODE IS IN THE DCB.           */
*       ERDAAM=QISAM;               /* SET QISAM CODE                */
         MVC   ERDAAM(6,R1),QISAM                                  0388
*       IF DCBMFGET=ON THEN         /* IF SCAN MODE, COULD BE        */
         LA    @12,40                                              0389
         ALR   @12,R2                                              0389
         TM    DCBMFGET(@12),B'01000000'                           0389
         BNO   @RF00389                                            0389
*         DO;                       /* GET, PUTX, OR SETL ERR        */
*           IF DCBEXINV=OFF THEN    /* (IF NOT INVALID)              */
         LA    @08,52                                              0391
         ALR   @08,R2                                              0391
         TM    DCBEXINV(@08),B'00010000'                           0391
         BNZ   @RF00391                                            0391
*             IF IIFSCAN=ON THEN    /* IF SETL SUCCESSFUL            */
         L     @12,DCBDEBAD(,@12)                                  0392
         L     @12,DEBEXPT(,@12)                                   0392
         L     @12,DEBWKPT5(,@12)                                  0392
         TM    IIFSCAN(@12),B'10000000'                            0392
         BNO   @RF00392                                            0392
*               DO;                 /* THEN GET OR PUTX ERROR        */
*                 IF DCBEXOER=ON THEN/* IF UNCORRECTABLE OUTPUT      */
         TM    DCBEXOER(@08),B'00000100'                           0394
         BNO   @RF00394                                            0394
*                   EROPER=PUTX;    /* ERROR, SET PUTX CODE.         */
         MVC   EROPER(6,R1),PUTX                                   0395
*                 ELSE                                             0396
*                   EROPER=GET;     /* OTHERWISE, SET GET.           */
         B     @RC00394                                            0396
@RF00394 MVC   EROPER(6,R1),GET                                    0396
*               END;                /* END OF NON-SETL ERROR         */
*             ELSE                                                 0398
*               EROPER=SETL;        /* SET BAD SETL                  */
         B     @RC00392                                            0398
@RF00392 MVC   EROPER(6,R1),SETL                                   0398
*         END;                      /* END OF SCAN CODE              */
*       ELSE                                                       0400
*         EROPER=PUT;               /* IF LOAD MODE, SET PUT         */
         B     @RC00389                                            0400
@RF00389 MVC   EROPER(6,R1),PUT                                    0400
*       IF AUDACBCL=ON&AUDACBRC=OFF THEN                           0401
@RC00389 L     @12,DCBDEBAD+40(,R2)                                0401
         L     @12,DEBEXPT(,@12)                                   0401
         L     @12,DEBWKPT5(,@12)                                  0401
         TM    AUDACBCL(@12),B'01000000'                           0401
         BNO   @RF00401                                            0401
         TM    AUDACBRC(@12),B'00100000'                           0401
         BNZ   @RF00401                                            0401
*         EROPER=CLOSE;             /* SET CLOSE OPERATION IF IN   0402
*                                      PROCESS OF ACB CLOSE  @YM04657*/
         MVC   EROPER(6,R1),CLOSE                                  0402
*     END;                          /* END OF QISAM CODE             */
*   ELSE                            /* HERE FOR BISAM                */
*     DO;                           /*                               */
         B     @RC00386                                            0404
@RF00386 DS    0H                                                  0405
*       ERDAAM=BISAM;               /* SET BISAM CODE                */
         MVC   ERDAAM(6,R1),BISAM                                  0405
*       IF DECBTYP2=READK×          /* IF A READ KEY OR READ         */
*           DECBTYP2=READKU THEN    /* KEY FOR UPDATE, SET A         */
         CLI   DECBTYP2(R10),B'10000000'                           0406
         BE    @RT00406                                            0406
         CLI   DECBTYP2(R10),B'00100000'                           0406
         BNE   @RF00406                                            0406
@RT00406 DS    0H                                                  0407
*         EROPER=READ;              /* READ OPERATION.               */
         MVC   EROPER(6,R1),READ                                   0407
*       ELSE                                                       0408
*         EROPER=WRITE;             /* OTHERWISE, SET WRITE.         */
         B     @RC00406                                            0408
@RF00406 MVC   EROPER(6,R1),WRITE                                  0408
*     END;                          /* END OF BISAM CODE             */
@RC00406 DS    0H                                                  0410
*   R0SAVE=NOBFRAD;                 /* INDICATE NO BUFFER ADDR       */
@RC00386 SLR   @12,@12                                             0410
         ST    @12,R0SAVE(,R13)                                    0410
*   GEN(LM    R14,R12,TWELVE(R13)); /* RESTORE USER REGISTERS        */
         LM    R14,R12,TWELVE(R13)
*   GEN(BR R14);                    /* RETURN TO SYNADAF             */
         BR R14
*   GEN(IDAPATCH);                  /* DEFINE A PATCH AREA           */
         IDAPATCH
*   GEN(USING @PSTART,R11);         /* RESET BASE REG                */
         USING @PSTART,R11
*   END IDAIISM1                                                   0415
*                                                                  0415
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IDAIIREG)                                       */
*/*%INCLUDE SYSLIB  (IDAIICB )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDARPLE )                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IDAERMSG)                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IHADECB )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */
*                                                                  0415
*       ;                                                          0415
         B     @EL00001                                            0415
@DATA    DS    0H
@SM02050 MVC   ERMBFRA(0,R1),VSAMMSG(@08)
@DATD    DSECT
         DS    0F
IDAIISM1 CSECT
         DS    0F
@CF00087 DC    F'1'
@CF00045 DC    F'8'
@CF02043 DC    F'200704'
@CF02029 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
DEBDAPTR DS    A
DEBEXPTR DS    A
DEBSBPTR DS    A
DECBPT   DS    A
IDAIISM1 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SKIP     DC    CL3'N/A'
DIRECT   DC    CL2'DA'
QISAM    DC    CL6'QISAM'
BISAM    DC    CL6'BISAM'
READ     DC    CL6'READ'
WRITE    DC    CL6'WRITE'
PUT      DC    CL6'PUT'
PUTX     DC    CL6'PUTX'
SETL     DC    CL6'SETL'
GET      DC    CL6'GET'
CLOSE    DC    CL6'CLOSE'
NOKEY    DC    CL15' RCD NOT FOUND'
SEQCHK   DC    CL15'SEQUENCE CHECK'
DUPLIC   DC    CL15'DUPLICATE RCD'
INVALREQ DC    CL15'INVALID REQUEST'
NOSPACE  DC    CL15'NO SPACE AVAIL'
IOERR    DC    CL15'UNCORR I/O ERR'
INLEN    DC    CL15'INVALID LENGTH'
UNREACH  DC    CL15'UNREACH BLOCK'
@DATD    DSECT
TWELVE   EQU   12                       SAVEAREA OFFSET
TWENTY8  EQU   28                       OFFSET TO USER R2
FORTY    EQU   40                       OFFSET TO SVRB REGS
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDAIISM1 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GPR01F   EQU   @01
R0       EQU   @00
R1       EQU   @01
RDCB     EQU   @01
RDECB    EQU   @01
R2       EQU   @02
RIICB    EQU   @02
RRPL     EQU   @03
RWORK3   EQU   @08
R9       EQU   @09
R10      EQU   @10
DEBPTR   EQU   @11
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
JFCBPTR  EQU   @09
RACB     EQU   @06
RBUFF    EQU   @05
RCORE    EQU   @04
RDEB     EQU   @11
RFMADDR  EQU   @07
RGMLEN   EQU   @09
RGMSP    EQU   @08
RLKRETSV EQU   @10
RPARC    EQU   @07
RTIOT    EQU   @09
RWORK1   EQU   @06
RWORK2   EQU   @07
R11      EQU   @11
R12      EQU   @12
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
IDAIICB  EQU   0
IIDCBPTR EQU   IDAIICB+4
IIACBPTR EQU   IDAIICB+8
IIRPLPTR EQU   IDAIICB+12
IIW1CBF  EQU   IDAIICB+16
IIFLAG1  EQU   IDAIICB+24
IIFSCAN  EQU   IIFLAG1
IIFCLOSE EQU   IIFLAG1
IIFLAG2  EQU   IDAIICB+28
IIFLAG3  EQU   IDAIICB+36
IISAMSYN EQU   IDAIICB+52
IIREGSAV EQU   IDAIICB+60
IIREGBC  EQU   IIREGSAV+4
IIAUD    EQU   IDAIICB+132
IIAUDHDR EQU   IIAUD
IIAUDFL1 EQU   IIAUDHDR
IIAUDFL2 EQU   IIAUDHDR+1
AUDACBCL EQU   IIAUDFL2
AUDACBRC EQU   IIAUDFL2
IIGMCNTR EQU   IIAUDHDR+2
IIGMAUD  EQU   IIAUD+4
AUDCSPLI EQU   IIGMAUD+4
AUDCSPLD EQU   IIGMAUD+12
AUDCSPLB EQU   IIGMAUD+20
AUDCSPLM EQU   IIGMAUD+28
IIGMNTRY EQU   0
IIGMSPLG EQU   IIGMNTRY+4
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBTIOT  EQU   IHADCS25
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS29 EQU   0
DCBOPTCD EQU   IHADCS29
DCBMAC   EQU   IHADCS29+1
DCBSYNAD EQU   IHADCS29+4
DCBMSHI  EQU   IHADCS29+20
DCBEXCD1 EQU   IHADCS29+28
DCBEXNKY EQU   DCBEXCD1
DCBEXNSP EQU   DCBEXCD1
DCBEXINV EQU   DCBEXCD1
DCBEXIER EQU   DCBEXCD1
DCBEXOER EQU   DCBEXCD1
DCBEXBLI EQU   DCBEXCD1
DCBEXBLU EQU   DCBEXCD1
DCBEXCD2 EQU   IHADCS29+29
DCBEXSEQ EQU   DCBEXCD2
DCBEXDUP EQU   DCBEXCD2
DCBEXCLD EQU   DCBEXCD2
DCBEXLTH EQU   DCBEXCD2
DCBST    EQU   IHADCS29+108
DCBSTLOD EQU   DCBST
IHADCS55 EQU   0
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLPLHPT EQU   RPLCOMN+4
RPLECB   EQU   RPLCOMN+8
RPLFDBK  EQU   RPLCOMN+13
RPLRTNCD EQU   RPLFDBK
RPLERREG EQU   RPLRTNCD
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLERRCD EQU   RPLCNDCD+1
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPL6RBA  EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLERMSA EQU   RPLCOMN+72
IDARPLE  EQU   0
RPLIICB  EQU   IDARPLE
RPLDECB  EQU   IDARPLE+4
RPLRPLPT EQU   IDARPLE+12
RPLIITSB EQU   IDARPLE+16
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBWKPT5 EQU   DEBACS07+12
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHFLG2  EQU   IDAPLH+3
PLHEFLGS EQU   IDAPLH+4
PLHCRBA  EQU   IDAPLH+28
PLHEOVPT EQU   IDAPLH+172
PLHIXSPL EQU   IDAPLH+192
PLHKEY   EQU   IDAPLH+224
IDAERMSG EQU   0
ERBASE   EQU   IDAERMSG
ERLGTH   EQU   ERBASE
ERMLL1   EQU   ERLGTH
ERMBFRA  EQU   ERBASE+8
ERJOBNM  EQU   ERBASE+50
ERSTEPNM EQU   ERBASE+59
ERUNIT   EQU   ERBASE+68
ERUNTYPE EQU   ERBASE+72
ERDDNM   EQU   ERBASE+75
EROPER   EQU   ERBASE+84
ERDESC   EQU   ERBASE+91
ERDEVD   EQU   ERBASE+107
ERDAAM   EQU   ERDEVD+15
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
TIOT1    EQU   0
TIOCNJOB EQU   TIOT1
TIOCSTEP EQU   TIOT1+8
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
DECB     EQU   0
DECBPTR  EQU   DECB+4
DECTYPE  EQU   DECBPTR
DECTYPE1 EQU   DECTYPE
DECTYPE2 EQU   DECTYPE+1
DECNEXT  EQU   DECB+20
DECBS01  EQU   0
DECBECB  EQU   DECBS01
DECBRB   EQU   DECBECB
DECBECBF EQU   DECBRB
DECBTYP1 EQU   DECBS01+4
DECBTYP2 EQU   DECBS01+5
DECBEXC1 EQU   DECBS01+24
DECEXRNF EQU   DECBEXC1
DECEXRLC EQU   DECBEXC1
DECEXNSP EQU   DECBEXC1
DECEXINV EQU   DECBEXC1
DECEXERR EQU   DECBEXC1
DECEXUBK EQU   DECBEXC1
DECEXDUP EQU   DECBEXC1
DECBEXC2 EQU   DECBS01+25
DECBS02  EQU   0
@NM00057 EQU   DECBS02
DECCC2   EQU   @NM00057+1
DECCC3   EQU   @NM00057+2
@NM00059 EQU   DECBS02+4
@NM00060 EQU   @NM00059
@NM00061 EQU   @NM00059+1
DECTYPRU EQU   @NM00061
DECNA    EQU   DECBS02+28
DECBS03  EQU   0
DECCPOL  EQU   DECBS03+20
@NM00069 EQU   DECBS03+36
DECBS04  EQU   0
@NM00072 EQU   DECBS04+4
@NM00073 EQU   @NM00072
@NM00076 EQU   DECBS04+8
DECBUFCT EQU   @NM00076
DECONLTT EQU   DECBUFCT
DECENTRY EQU   DECBS04+20
DECFLAGS EQU   DECBS04+24
DECWACK  EQU   DECFLAGS
DECREVRS EQU   DECFLAGS
DECERRST EQU   DECBS04+29
DECPOLPT EQU   DECBS04+36
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBIXLST EQU   ACBAMBL
ACBJWA   EQU   ACBIXLST
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBLFB   EQU   ACBCOMN+20
ACBBUFPL EQU   ACBLFB
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBWAPTR EQU   ACBUJFCB
IFGEXLST EQU   0
EXLCOMN  EQU   IFGEXLST
EXLLEN   EQU   EXLCOMN+2
EXLEODF  EQU   EXLCOMN+5
EXLEODP  EQU   EXLCOMN+6
EXLSYNF  EQU   EXLCOMN+10
EXLLERF  EQU   EXLCOMN+15
@NM00092 EQU   EXLCOMN+20
EXLLGNF  EQU   EXLCOMN+25
EXLLGNE  EQU   EXLLGNF
EXLJRNF  EQU   EXLCOMN+30
EXLOPNF  EQU   EXLCOMN+35
IFGEXLEF EQU   0
EXLENTRY EQU   IFGEXLEF
EXLFLAG  EQU   EXLENTRY
EXLENFL  EQU   EXLFLAG
EXLEXITP EQU   EXLENTRY+1
VSAMMSG  EQU   8
SYNAD    EQU   0
R14SAVE  EQU   12
R0SAVE   EQU   20
SPARMS   EQU   0
PARM2    EQU   SPARMS+1
PARM1    EQU   SPARMS+4
SVRB     EQU   0
SVRBLINK EQU   SVRB+29
SVRBREGS EQU   SVRB+32
SVRBREG2 EQU   SVRBREGS+8
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
USERSAV  EQU   0
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
TCBPTR   EQU   DEBTCBAD
TIOTPTR  EQU   TCBTIO
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
DECBS05  EQU   DECNEXT
BLNKAREA EQU   ERMBFRA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DECBLFMT EQU   DECBS05+8
DECBLNNM EQU   DECBS05+4
DECBHDRA EQU   DECBS05
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
SVRBREG1 EQU   SVRBREGS+4
SVRBREG0 EQU   SVRBREGS
SVRBWCF  EQU   SVRB+28
@NM00103 EQU   SVRB
@NM00102 EQU   SPARMS
EXLEADDR EQU   EXLEXITP
EXLEXITM EQU   EXLENFL
EXLLVNTM EQU   EXLENFL
EXLGVNTM EQU   EXLENFL
@NM00101 EQU   EXLENFL
EXLLNK   EQU   EXLENFL
EXLACTM  EQU   EXLENFL
EXLSPEC  EQU   EXLENFL
EXLOPNP  EQU   EXLCOMN+36
@NM00100 EQU   EXLOPNF
EXLOPNK  EQU   EXLOPNF
EXLOPNA  EQU   EXLOPNF
EXLOPNS  EQU   EXLOPNF
EXLJRNP  EQU   EXLCOMN+31
@NM00099 EQU   EXLJRNF
EXLJRNK  EQU   EXLJRNF
EXLJRNA  EQU   EXLJRNF
EXLJRNS  EQU   EXLJRNF
EXLLGNP  EQU   EXLCOMN+26
EXLLGNEX EQU   EXLLGNE
EXLLGNLE EQU   EXLLGNE
EXLLGNGE EQU   EXLLGNE
@NM00098 EQU   EXLLGNF
EXLLGNK  EQU   EXLLGNF
EXLLGNA  EQU   EXLLGNF
EXLLGNS  EQU   EXLLGNF
@NM00097 EQU   EXLCOMN+21
@NM00096 EQU   @NM00092
@NM00095 EQU   @NM00092
@NM00094 EQU   @NM00092
@NM00093 EQU   @NM00092
EXLLERP  EQU   EXLCOMN+16
@NM00091 EQU   EXLLERF
EXLLERK  EQU   EXLLERF
EXLLERA  EQU   EXLLERF
EXLLERS  EQU   EXLLERF
EXLSYNP  EQU   EXLCOMN+11
@NM00090 EQU   EXLSYNF
EXLSYNK  EQU   EXLSYNF
EXLSYNA  EQU   EXLSYNF
EXLSYNS  EQU   EXLSYNF
@NM00089 EQU   EXLEODF
EXLEODK  EQU   EXLEODF
EXLEODA  EQU   EXLEODF
EXLEODS  EQU   EXLEODF
@NM00088 EQU   EXLCOMN+4
EXLLEN2  EQU   EXLLEN
EXLSTYP  EQU   EXLCOMN+1
EXLID    EQU   EXLCOMN
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBBLKSZ EQU   ACBCOMN+60
ACBBUFSP EQU   ACBCOMN+56
@NM00087 EQU   ACBWAPTR+1
ACBOPTN  EQU   ACBWAPTR
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00086 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00085 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00084 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
@NM00083 EQU   ACBCOMN+28
@NM00082 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00081 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00080 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
@NM00079 EQU   ACBBUFPL
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+14
@NM00078 EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
ACBCHN   EQU   ACBMACR2
ACBCBRD  EQU   ACBMACR2
ACBCBOPN EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
DECWAREA EQU   DECBS04+44
DECWLNG  EQU   DECBS04+42
DECRSV56 EQU   DECBS04+40
DECPOLPA EQU   DECPOLPT+1
DECNDXPL EQU   DECPOLPT
DECADRPT EQU   DECBS04+32
DECCSWST EQU   DECBS04+30
DECRSV55 EQU   DECERRST
DECRSV54 EQU   DECERRST
DECRSV53 EQU   DECERRST
DECDSABL EQU   DECERRST
DECDIAGN EQU   DECERRST
DECERPER EQU   DECERRST
DECUNDEF EQU   DECERRST
DECSIO3  EQU   DECERRST
DECTPCOD EQU   DECBS04+28
DECRESPN EQU   DECBS04+26
DECRLN   EQU   DECBS04+25
DECSTXNQ EQU   DECFLAGS
DECSSMSG EQU   DECREVRS
DECNEGRP EQU   DECFLAGS
DECNOBUF EQU   DECFLAGS
DECBADID EQU   DECFLAGS
DECALTAC EQU   DECFLAGS
DECDIFAC EQU   DECWACK
DECERRMS EQU   DECWACK
DECENTRA EQU   DECENTRY+1
DECCMCOD EQU   DECENTRY
DECCOUNT EQU   DECBS04+18
DECSENS1 EQU   DECBS04+17
DECSENS0 EQU   DECBS04+16
@NM00077 EQU   DECBS04+12
DECDCBAA EQU   @NM00076+1
DECRSV52 EQU   DECONLTT
DECRSV51 EQU   DECONLTT
DECRSV50 EQU   DECONLTT
DECRSV49 EQU   DECONLTT
DECRSV48 EQU   DECONLTT
DECRSV47 EQU   DECONLTT
DECRCVMS EQU   DECONLTT
DECONLTS EQU   DECONLTT
@NM00075 EQU   DECBS04+6
@NM00074 EQU   @NM00072+1
DECSLNTH EQU   @NM00073
DECSAREA EQU   @NM00073
DECSTRME EQU   @NM00073
DECRSV46 EQU   @NM00073
DECRSV45 EQU   @NM00073
DECRSV44 EQU   @NM00073
DECRSV43 EQU   @NM00073
DECRDAPL EQU   @NM00073
@NM00071 EQU   DECBS04
@NM00070 EQU   @NM00069+1
DECRSV42 EQU   @NM00069
DECADRCH EQU   DECBS03+32
DECRSV41 EQU   DECBS03+28
DECRSV40 EQU   DECBS03+26
DECUCBDX EQU   DECBS03+25
DECRSV39 EQU   DECBS03+24
DECCPOLA EQU   DECCPOL+1
DECNMMSG EQU   DECCPOL
DECRSV38 EQU   DECBS03+16
@NM00068 EQU   DECBS03+12
@NM00067 EQU   DECBS03+8
@NM00066 EQU   DECBS03+6
DECOPCOD EQU   DECBS03+5
DECRSV37 EQU   DECBS03+4
LINEDECB EQU   DECBS03
DECNAA   EQU   DECNA+1
DECRSV36 EQU   DECNA
DECRECPT EQU   DECBS02+24
DECKYADR EQU   DECBS02+20
@NM00065 EQU   DECBS02+16
@NM00064 EQU   DECBS02+12
@NM00063 EQU   DECBS02+8
@NM00062 EQU   DECBS02+6
DECRSV35 EQU   @NM00061
DECWRADD EQU   @NM00061
DECSRKEY EQU   @NM00061
DECOPRD  EQU   @NM00061
DECTYPR  EQU   DECTYPRU
DECTYPU  EQU   DECTYPRU
DECBKLNS EQU   @NM00061
DECKEYS  EQU   @NM00061
DECRELBA EQU   @NM00060
DECRDEX  EQU   @NM00060
DECDYNBF EQU   @NM00060
DECACTAD EQU   @NM00060
DECFDBCK EQU   @NM00060
DECEXSRC EQU   @NM00060
DECOFLOW EQU   @NM00060
DECVERFY EQU   @NM00060
DECRSV34 EQU   @NM00057+3
DECCCKFF EQU   DECCC3
DECCCOPT EQU   DECCC3
DECCCSDK EQU   DECCC3
DECCCWDI EQU   DECCC3
DECCCNBK EQU   DECCC3
DECCCEXS EQU   DECCC3
DECCCWRI EQU   DECCC3
DECRSV33 EQU   DECCC3
DECCCREX EQU   DECCC2
DECCCUER EQU   DECCC2
DECCCEOD EQU   DECCC2
DECCCERR EQU   DECCC2
DECCCINV EQU   DECCC2
DECCCNSP EQU   DECCC2
DECCCRLC EQU   DECCC2
DECCCRNF EQU   DECCC2
@NM00058 EQU   @NM00057
DECEXRKU EQU   DECBEXC2
DECEXASR EQU   DECBEXC2
DECRSV32 EQU   DECBEXC2
DECRSV31 EQU   DECBEXC2
DECRSV30 EQU   DECBEXC2
DECRSV29 EQU   DECBEXC2
DECRSV28 EQU   DECBEXC2
DECRSV27 EQU   DECBEXC2
DECEXOFL EQU   DECBEXC1
DECBKEY  EQU   DECBS01+20
DECBLOGR EQU   DECBS01+16
DECBAREA EQU   DECBS01+12
DECBDCBA EQU   DECBS01+8
DECBLGTH EQU   DECBS01+6
DECRSV26 EQU   DECBTYP2
DECRSV25 EQU   DECBTYP2
DECBWRKN EQU   DECBTYP2
DECBWRK  EQU   DECBTYP2
DECRSV24 EQU   DECBTYP2
DECBRDKU EQU   DECBTYP2
DECRSV23 EQU   DECBTYP2
DECBRDK  EQU   DECBTYP2
DECBARS  EQU   DECBTYP1
DECBLNS  EQU   DECBTYP1
DECRSV22 EQU   DECBTYP1
DECRSV21 EQU   DECBTYP1
DECRSV20 EQU   DECBTYP1
DECRSV19 EQU   DECBTYP1
DECRSV18 EQU   DECBTYP1
DECRSV17 EQU   DECBTYP1
DECBRBA  EQU   DECBRB+1
DECRSV16 EQU   DECBECBF
DECRSV15 EQU   DECBECBF
DECRSV14 EQU   DECBECBF
DECRSV13 EQU   DECBECBF
DECRSV12 EQU   DECBECBF
DECRSV11 EQU   DECBECBF
DECBPOST EQU   DECBECBF
DECBWAIT EQU   DECBECBF
DECNEXTA EQU   DECNEXT+1
DECRSV10 EQU   DECNEXT
DECIOBPT EQU   DECB+16
DECAREA  EQU   DECB+12
DECDCBAD EQU   DECB+8
DECLNGTH EQU   DECBPTR+2
DECWRSFR EQU   DECTYPE2
DECRSV09 EQU   DECTYPE2
DECWRSZ  EQU   DECTYPE2
DECRSV08 EQU   DECTYPE2
DECWRSD  EQU   DECTYPE2
DECWRSF  EQU   DECTYPE2
DECRDSB  EQU   DECTYPE2
DECRDSF  EQU   DECTYPE2
DECRSV07 EQU   DECTYPE1
DECRSV06 EQU   DECTYPE1
DECRSV05 EQU   DECTYPE1
DECRSV04 EQU   DECTYPE1
DECRSV03 EQU   DECTYPE1
DECRSV02 EQU   DECTYPE1
DECRSV01 EQU   DECTYPE1
DECLNS   EQU   DECTYPE1
DECSDECB EQU   DECB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00056 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00055 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
@NM00054 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBRSV48 EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00053 EQU   TCB+296
TCBSCBQ  EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBRSV36 EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBRSV35 EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00052 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBRSV04 EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00051 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
ERDACOM  EQU   ERDEVD+14
ERDASEEK EQU   ERDEVD
COMMA8   EQU   ERBASE+106
COMMA7   EQU   ERBASE+90
COMMA6   EQU   ERBASE+83
COMMA5   EQU   ERBASE+74
COMMA4   EQU   ERBASE+71
COMMA3   EQU   ERBASE+67
COMMA2   EQU   ERBASE+58
COMMA1   EQU   ERBASE+49
ERMVOL   EQU   ERBASE+43
COMMA9   EQU   ERBASE+42
ERMDSID  EQU   ERBASE+36
COMMA05  EQU   ERBASE+35
ERRBA    EQU   ERBASE+27
COMMA0   EQU   ERBASE+26
ERTIME   EQU   ERBASE+18
ERCOMMA  EQU   ERBASE+17
ERDATE   EQU   ERBASE+12
ERMZERO2 EQU   ERLGTH+6
ERMLL2   EQU   ERLGTH+4
ERMZERO1 EQU   ERLGTH+2
@NM00050 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHSSRBA EQU   PLHIXSPL
PLHISPLP EQU   IDAPLH+188
PLHIIOB  EQU   IDAPLH+184
PLHIBUFC EQU   IDAPLH+180
PLHNRBA  EQU   IDAPLH+176
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+168
@NM00049 EQU   IDAPLH+164
@NM00048 EQU   IDAPLH+160
PLHASAVE EQU   IDAPLH+156
@NM00047 EQU   IDAPLH+152
@NM00046 EQU   IDAPLH+148
@NM00045 EQU   IDAPLH+144
@NM00044 EQU   IDAPLH+140
@NM00043 EQU   IDAPLH+136
@NM00042 EQU   IDAPLH+132
@NM00041 EQU   IDAPLH+128
@NM00040 EQU   IDAPLH+124
@NM00039 EQU   IDAPLH+120
@NM00038 EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+112
@NM00037 EQU   IDAPLH+110
PLHRETO  EQU   IDAPLH+108
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHDIOB  EQU   IDAPLH+76
@NM00036 EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00035 EQU   IDAPLH+43
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHJCODE EQU   IDAPLH+40
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHJORBA EQU   PLHCRBA
PLHDSIDA EQU   IDAPLH+24
PLHCRPL  EQU   IDAPLH+20
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
@NM00034 EQU   IDAPLH+6
@NM00033 EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
@NM00032 EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHIWAIT EQU   PLHFLG2
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
PLHDRSCN EQU   PLHFLG1
PLHDRPND EQU   PLHFLG1
PLHASYRQ EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
DEBXRV40 EQU   DEBXTN+28
DEBXRV39 EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXRV42 EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBRSV19 EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00031 EQU   DEBACS08+12
@NM00030 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00029 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00028 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSV01 EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
RPLSAVE2 EQU   IDARPLE+24
RPLSAVE  EQU   IDARPLE+20
@NM00027 EQU   IDARPLE+17
RPLIIBFR EQU   IDARPLE+8
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
RPLGVNT  EQU   RPLEXTD1
RPLLVNT  EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPL6RBA+2
RPLS2S2  EQU   RPL6RBA
RPLS1S1  EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLRSV75 EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00026 EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLFDB3  EQU   RPLERRCD
RPLFDB2  EQU   RPLCMPON
RPLSTAT  EQU   RPLCOMN+12
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
DCBLPDT  EQU   IHADCS55
DCBWKPT6 EQU   IHADCS29+196
DCBWKPT5 EQU   IHADCS29+192
DCBWKPT4 EQU   IHADCS29+188
DCBWKPT3 EQU   IHADCS29+184
DCBWKPT2 EQU   IHADCS29+180
DCBWKPT1 EQU   IHADCS29+176
@NM00025 EQU   IHADCS29+174
DCBRORG1 EQU   IHADCS29+172
DCBLIOV  EQU   IHADCS29+164
DCBNOREC EQU   IHADCS29+162
@NM00024 EQU   IHADCS29+161
DCBLEMI1 EQU   IHADCS29+156
DCBRORG2 EQU   IHADCS29+154
@NM00023 EQU   IHADCS29+153
DCBLECI  EQU   IHADCS29+148
DCBNBOV  EQU   IHADCS29+146
DCBOVDEV EQU   IHADCS29+145
DCBLETI  EQU   IHADCS29+140
DCBLPDA  EQU   IHADCS29+132
DCBFTHI  EQU   IHADCS29+125
DCBNTHI  EQU   IHADCS29+124
DCBFTMI1 EQU   IHADCS29+117
DCBHIIOV EQU   IHADCS29+116
DCBFTCI  EQU   IHADCS29+109
DCBSTLTF EQU   DCBST
DCBSTLBF EQU   DCBST
DCBSTNMC EQU   DCBST
@NM00022 EQU   DCBST
DCBSTNCY EQU   DCBST
DCBSTKSQ EQU   DCBST
DCBSTSSM EQU   DCBST
DCBNREC  EQU   IHADCS29+104
DCBRORG3 EQU   IHADCS29+100
DCBNCRHI EQU   IHADCS29+98
DCBTDC   EQU   IHADCS29+96
DCBHIRSH EQU   IHADCS29+95
DCBHIROV EQU   IHADCS29+94
DCBHIRPD EQU   IHADCS29+93
DCBHIRCM EQU   IHADCS29+92
DCBLDT   EQU   IHADCS29+90
DCBHMASK EQU   IHADCS29+89
DCBFIRSH EQU   IHADCS29+86
DCBNLEV  EQU   IHADCS29+85
DCBLEMI3 EQU   IHADCS29+80
DCBFTMI3 EQU   IHADCS29+73
DCBLEMI2 EQU   IHADCS29+68
DCBFTMI2 EQU   IHADCS29+61
DCBHIRTI EQU   IHADCS29+60
DCBFREED EQU   IHADCS29+56
DCBRELEX EQU   IHADCS29+52
DCBPUTX  EQU   IHADCS29+48
DCBRELSE EQU   IHADCS29+44
DCBLWKN  EQU   IHADCS29+40
DCBLRAN  EQU   IHADCS29+36
DCBESETL EQU   IHADCS29+32
DCBLRECL EQU   IHADCS29+30
@NM00021 EQU   DCBEXCD2
DCBEXRDE EQU   DCBEXLTH
DCBEXOFL EQU   DCBEXCD2
DCBEXIDA EQU   DCBEXCD1
DCBSETL  EQU   IHADCS29+24
DCBMSHIA EQU   DCBMSHI+1
DCBNCP   EQU   DCBMSHI
DCBSMSW  EQU   IHADCS29+18
DCBSMSI  EQU   IHADCS29+16
DCBMSWA  EQU   IHADCS29+12
DCBBLKSI EQU   IHADCS29+10
DCBRKP   EQU   IHADCS29+8
DCBCYLOF EQU   IHADCS29+3
DCBNTM   EQU   IHADCS29+2
DCBMACRE EQU   DCBMAC
DCBMACAW EQU   DCBMAC
DCBMACUW EQU   DCBMAC
DCBMACUR EQU   DCBMAC
@NM00020 EQU   DCBMAC
DCBOPTR  EQU   DCBOPTCD
DCBOPTL  EQU   DCBOPTCD
@NM00019 EQU   DCBOPTCD
DCBOPTY  EQU   DCBOPTCD
DCBOPTI  EQU   DCBOPTCD
DCBOPTM  EQU   DCBOPTCD
DCBOPTUF EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00018 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00017 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00016 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00015 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00014 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00013 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00012 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00011 EQU   IHADCS01+5
@NM00010 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00009 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00008 EQU   IHADCB
IIGMLEN  EQU   IIGMSPLG+1
IIGMPOOL EQU   IIGMSPLG
IIGMADDR EQU   IIGMNTRY
AUDCLM   EQU   AUDCSPLM+1
AUDCSPM  EQU   AUDCSPLM
AUDCMSGA EQU   IIGMAUD+24
AUDCLB   EQU   AUDCSPLB+1
AUDCSPB  EQU   AUDCSPLB
AUDCBFRS EQU   IIGMAUD+16
AUDCLD   EQU   AUDCSPLD+1
AUDCSPD  EQU   AUDCSPLD
AUDCDEB  EQU   IIGMAUD+8
AUDCLI   EQU   AUDCSPLI+1
AUDCSPI  EQU   AUDCSPLI
AUDCIICB EQU   IIGMAUD
@NM00007 EQU   IIAUDFL2
AUDDEBXF EQU   IIAUDFL2
AUDBFRRT EQU   IIAUDFL2
AUDBFREX EQU   IIAUDFL2
AUDIIFBF EQU   IIAUDFL2
AUDURSYN EQU   IIAUDFL1
AUDIISYN EQU   IIAUDFL1
AUDPRMOD EQU   IIAUDFL1
AUDDCBRT EQU   IIAUDFL1
AUDDCBEX EQU   IIAUDFL1
AUDACBRO EQU   IIAUDFL1
AUDACBOP EQU   IIAUDFL1
@NM00006 EQU   IIREGSAV+12
IIREGFC  EQU   IIREGSAV+8
@NM00005 EQU   IIREGSAV
IISVCLST EQU   IDAIICB+48
IITBUFL  EQU   IDAIICB+45
IIBUFNO  EQU   IDAIICB+44
IIMSGPTR EQU   IDAIICB+40
IIMSGL   EQU   IDAIICB+37
@NM00004 EQU   IIFLAG3
MBFALN   EQU   IIFLAG3
IIBUFL   EQU   IDAIICB+34
IIKEYSL  EQU   IDAIICB+32
IIRPLL   EQU   IDAIICB+29
MKEYLE   EQU   IIFLAG2
MBUFNO   EQU   IIFLAG2
MBUFL    EQU   IIFLAG2
MRECFM   EQU   IIFLAG2
MOPTCD   EQU   IIFLAG2
MBLKSI   EQU   IIFLAG2
MLRECL   EQU   IIFLAG2
MRKP     EQU   IIFLAG2
IIACBL   EQU   IDAIICB+25
IIQBFRS  EQU   IIFLAG1
@NM00003 EQU   IIFLAG1
IIFTEST  EQU   IIFLAG1
IIDATA   EQU   IIFLAG1
@NM00002 EQU   IIFLAG1
IIFGET   EQU   IIFLAG1
IIKEYPT  EQU   IDAIICB+20
IIMAXLRL EQU   IIW1CBF+2
IISAVLRL EQU   IIW1CBF
IICBLEN  EQU   IDAIICB+2
@NM00001 EQU   IDAIICB+1
IICBID   EQU   IDAIICB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00192 EQU   @RC00190
@RT00203 EQU   EXIT
@RC00225 EQU   @RC00198
@RC00223 EQU   @RC00198
@RC00221 EQU   @RC00198
@RC00212 EQU   @RC00198
@RC00210 EQU   @RC00198
@RC00208 EQU   @RC00198
@RC00206 EQU   @RC00198
@RC00200 EQU   @RC00198
@RT00238 EQU   EXIT
@RC00188 EQU   @EL00001
@RF00319 EQU   @RC00317
@RC00366 EQU   @RC00354
@RC00364 EQU   @RC00354
@RC00362 EQU   @RC00354
@RC00360 EQU   @RC00354
@RC00358 EQU   @RC00354
@RC00356 EQU   @RC00354
@RC00392 EQU   @RC00389
@RF00391 EQU   @RC00389
@RF00401 EQU   @RC00386
@RC00394 EQU   @RC00392
@ENDDATA EQU   *
         END   IDAIISM1,(C'PLS1656',0602,75012)
