         TITLE 'IDAIIPM1 - MVM ISAM INTERFACE LOAD                     *
                       '
IDAIIPM1 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IDAIIPM1  73.230'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*   RDCB=R1;                        /* ESTABLISH DCB BASE            */
*   RIICB=DEBWKPT5;                 /* PTR TO IICB                   */
         L     @12,DCBDEBAD+40(,RDCB)                              0143
         L     @12,DEBEXPT(,@12)                                   0143
         L     RIICB,DEBWKPT5(,@12)                                0143
*   IF IIFCLOSE=ON THEN             /* IF ENTRY FROM CLOSE           */
         TM    IIFCLOSE(RIICB),B'00010000'                         0144
         BNO   @RF00144                                            0144
*     RWORK3=R14;                   /* SAVE RETURN REG               */
         LR    RWORK3,R14                                          0145
*   ELSE                                                           0146
*     DO;                                                          0146
         B     @RC00144                                            0146
@RF00144 DS    0H                                                  0147
*       IIREGBC=R13;                /* KEEP PTR TO USER SAVE         */
         ST    R13,IIREGBC(,RIICB)                                 0147
*       R15=ADDR(IIREGSAV);         /* HOLD II SAVE ADDR             */
         LA    R15,IIREGSAV(,RIICB)                                0148
*       GEN(ST   R15,8(0,R13));     /* KEEP IT IN USER SAVE          */
         ST   R15,8(0,R13)
*     END;                                                         0150
*   R13=ADDR(IIREGSAV);             /* POINTER TO II SAVE            */
@RC00144 LA    R13,IIREGSAV(,RIICB)                                0151
*   RRPL=IIRPLPTR;                  /* ESTABLISH RPL BASE            */
         L     RRPL,IIRPLPTR(,RIICB)                               0152
*   DCBEXCD1=CZERO;                 /* TURN OFF ERROR FLAGS          */
         LA    @12,52                                              0153
         AR    @12,RDCB                                            0153
         MVI   DCBEXCD1(@12),B'00000000'                           0153
*   DCBEXCD2=CZERO;                 /* TURN OFF ERROR FLAGS          */
         MVI   DCBEXCD2(@12),B'00000000'                           0154
*   RWORK2=R0;                      /* HOLD BFR PTR (PM)             */
         LR    RWORK2,R0                                           0155
*   IF DCBMFLCP=ON THEN             /* IF LOCATE MODE                */
         TM    DCBMFLCP+40(RDCB),B'00001000'                       0156
         BNO   @RF00156                                            0156
*     RWORK2=RPLIIBFR;              /* INIT BUFFER POINTER           */
         L     RWORK2,RPLIIBFR+76(,RRPL)                           0157
*   RPLAREA=RWORK2;                 /* INIT RPL AREA PTR             */
@RF00156 ST    RWORK2,RPLAREA(,RRPL)                               0158
*   IF DCBRECL='01'B THEN           /* IF VARIABLE LENGTH            */
         LA    @12,DCBIOBAD+16(,RDCB)                              0159
         TM    DCBRECL(@12),B'01000000'                            0159
         BNO   @RF00159                                            0159
         TM    DCBRECL(@12),B'10000000'                            0159
         BNZ   @RF00159                                            0159
*     DO;                           /* THEN ADD RDW LENGTH (4)       */
*       RWORK2=RWORK2+LENGTH(RDWWORD);                             0161
         AH    RWORK2,@CH00199                                     0161
*       RPLAREA=RWORK2;             /* ADJUST RPLAREA PAST RDW       */
         ST    RWORK2,RPLAREA(,RRPL)                               0162
*     END;                                                         0163
*   IF DCBMFLCP=ON&                 /* IF LOCATE MODE AND THIS       */
*       DCBSTKSQ=OFF THEN           /* IS THE FIRST PUT              */
@RF00159 TM    DCBMFLCP+40(RDCB),B'00001000'                       0164
         BNO   @RF00164                                            0164
         LA    @12,52                                              0164
         AR    @12,RDCB                                            0164
         TM    DCBSTKSQ(@12),B'01000000'                           0164
         BNZ   @RF00164                                            0164
*     DO;                                                          0165
*       DCBSTKSQ=ON;                /* TURN ON FIRST PASS (KEY       */
         OI    DCBSTKSQ(@12),B'01000000'                           0166
*                                   /* SEQUENCE CHECKING) BIT        */
*       IISAVLRL=DCBLRECL;          /* SAVE DCBLRECL FOR COMPARE WITH
*                                      RDW LENGTH            @Y021130*/
         MVC   IISAVLRL(2,RIICB),DCBLRECL(@12)                     0167
*       GOTO EXIT;                  /* RETURN TO CALLER              */
         B     EXIT                                                0168
*     END;                                                         0169
*   IF DCBRKP=ZERO THEN             /* IF RKP=0, THEN ADJUST PTR     */
@RF00164 ICM   @12,3,DCBRKP+52(RDCB)                               0170
         BNZ   @RF00170                                            0170
*     RWORK2=RWORK2+DCBKEYLE;       /* TO FIRST DATA BYTE            */
         SR    @12,@12                                             0171
         IC    @12,DCBKEYLE+16(,RDCB)                              0171
         AR    RWORK2,@12                                          0171
*                                   /*                               */
*                                   /* TEST FOR DELETE CODE          */
*                                   /*                               */
*   IF(DCBRECL='10'B&               /* IF FIXED LENGTH RECORDS,      */
*       DCBRECBR=OFF&               /* UNBLOCKED,                    */
*       DCBRKP=ZERO)×               /* RKP = 0 OR                    */
*       (DCBRECL='01'B&             /* VARIABLE LENGTH RECORDS &     */
*       DCBRKP=4)THEN               /* RKP = 4 THEN CONTINUE         */
@RF00170 LA    @12,DCBIOBAD+16(,RDCB)                              0172
         TM    DCBRECL(@12),B'10000000'                            0172
         BNO   @GL00002                                            0172
         TM    DCBRECL(@12),B'01000000'                            0172
         BNZ   @GL00002                                            0172
         TM    DCBRECBR(@12),B'00010000'                           0172
         BNZ   @GL00002                                            0172
         ICM   @12,3,DCBRKP+52(RDCB)                               0172
         BZ    @RT00172                                            0172
@GL00002 LA    @12,DCBIOBAD+16(,RDCB)                              0172
         TM    DCBRECL(@12),B'01000000'                            0172
         BNO   @RF00172                                            0172
         TM    DCBRECL(@12),B'10000000'                            0172
         BNZ   @RF00172                                            0172
         CLC   DCBRKP+52(2,RDCB),@CH00199                          0172
         BE    @RT00172                                            0172
*     GO TO NEXT;                   /* BECAUSE OPTCD=L IS INVALID    */
*   ELSE                                                           0174
*     DO;                           /* DELETE OPTION IS VALID        */
@RF00172 DS    0H                                                  0175
*       IF DCBOPTL=ON&              /* IF OPTCD=LI -(DUMMY RCDS      */
*           DCBOPTI=ON&             /* ARE NOT WRITTEN)              */
*           DATABYT1=DELCODE THEN   /* AND FIRST BYTE IS FF          */
         TM    DCBOPTL+52(RDCB),B'00010010'                        0175
         BNO   @RF00175                                            0175
         CLI   DATABYT1(RWORK2),B'11111111'                        0175
         BE    @RT00175                                            0175
*         GO TO EXIT;               /* RETURN W/O ISSUING PUT        */
*     END;                                                         0177
@RF00175 DS    0H                                                  0178
*NEXT:                                                             0178
*   RPLARG=RPLAREA+AMDRKP;          /* INIT RPL PTR TO KEY           */
NEXT     L     @12,RPLAREA(,RRPL)                                  0178
         L     @10,IIACBPTR(,RIICB)                                0178
         L     @10,ACBAMBL(,@10)                                   0178
         L     @10,AMBLDTA(,@10)                                   0178
         L     @10,AMBDSB(,@10)                                    0178
         LH    @10,AMDRKP(,@10)                                    0178
         AR    @10,@12                                             0178
         ST    @10,RPLARG(,RRPL)                                   0178
*   IF DCBRECL='01'B&               /* IF VARIABLE LEN RECORDS &,    */
*       ((DCBMFMVP=ON&RDWLEN>IIMAXLRL)/* PUT MOVE AND RDW LGTH       */
*                                   /* > MAX ALLOWED         @Y021130*/
*       ×(DCBMFLCP=ON&              /* OR, PUT LOCATE AND            */
*       (RDWLEN>IISAVLRL×           /* RDWLEN > PREVIOSLY STATED     */
*       DCBLRECL>IIMAXLRL)))THEN    /* OR NEXT REC WILL      @Y021130*/
         LA    @10,DCBIOBAD+16(,RDCB)                              0179
         TM    DCBRECL(@10),B'01000000'                            0179
         BNO   @RF00179                                            0179
         TM    DCBRECL(@10),B'10000000'                            0179
         BNZ   @RF00179                                            0179
         TM    DCBMFMVP+40(RDCB),B'00010000'                       0179
         BNO   @GL00008                                            0179
         AL    @12,@CF01209                                        0179
         CLC   RDWLEN(2,@12),IIMAXLRL(RIICB)                       0179
         BH    @RT00179                                            0179
@GL00008 TM    DCBMFLCP+40(RDCB),B'00001000'                       0179
         BNO   @RF00179                                            0179
         L     @12,RPLAREA(,RRPL)                                  0179
         AL    @12,@CF01209                                        0179
         CLC   RDWLEN(2,@12),IISAVLRL(RIICB)                       0179
         BH    @RT00179                                            0179
         CLC   DCBLRECL+52(2,RDCB),IIMAXLRL(RIICB)                 0179
         BNH   @RF00179                                            0179
@RT00179 DS    0H                                                  0180
*                                   /* EXCEED MAX ALLOWED            */
*     DO;                           /* THEN                          */
*       DCBEXLTH=ON;                /* TURN ON DCB EXCEPTION CODE    */
         OI    DCBEXLTH+52(RDCB),B'00001000'                       0181
*                                   /* BIT FOR LENGTH ERROR          */
*                                                                  0182
*/* **************************************************************** */
*/*                                                                  */
*/*   THIS SYNAD EXIT WILL BE ENTERED FOR THE FOLLOWING CONDITIONS   */
*/*                                                                  */
*/*   A.  LENGTH ERROR - IF VARIABLE LENGTH RECORDS AND THE          */
*/*                      RDW LENGTH > DCBLRECL                       */
*/*                                                                  */
*/*   B.  SEQUENCE CHECK - ENTRY DURING RESUME LOAD PROCESSING ONLY  */
*/*                                                                  */
*/*   C.  INVALID REQUEST - NO AVAILABLE PLACEHOLDERS                */
*/*                         (USER MAY BE SHARING THE DCB)            */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0182
*SYNADEXT:                                                         0182
*       IF DCBSYNAD=ONE THEN        /* IF USER SYNAD NOT SPECIFD     */
SYNADEXT CLC   DCBSYNAD+52(4,RDCB),@CF00087                        0182
         BNE   @RF00182                                            0182
*         DO;                       /* ABEND(ABEND31) DUMP SYSTEM    */
*           RESPECIFY                                              0184
*            (GPR01F)RESTRICTED;                                   0184
*           GPR01F=((ABEND31)&'00000FFF'X)*4096;/* COMP CODE IN BITS
*                                      8-19                          */
         L     GPR01F,@CF01200                                     0185
*           GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG     */
         O     GPR01F,@CF01196                                     0186
*           SVC(13);                /* ISSUE ABEND SVC               */
         SVC   13                                                  0187
*           RESPECIFY                                              0188
*            (GPR01F)UNRESTRICTED;                                 0188
*         END;                      /* ABEND(ABEND31) DUMP SYSTEM    */
*                                   /* X'031' ABEND CODE     @Y021130*/
*       ELSE                                                       0190
*         DO;                                                      0190
         B     @RC00182                                            0190
@RF00182 DS    0H                                                  0191
*           R15=DCBSYNAD;           /* INIT R15 - SYNAD ADDR         */
         LA    @12,52                                              0191
         AR    @12,RDCB                                            0191
         L     R15,DCBSYNAD(,@12)                                  0191
*           R13=IIREGBC;            /* INIT R13                      */
         L     R13,IIREGBC(,RIICB)                                 0192
*           IF DCBEXSEQ=OFF THEN    /* ERROR OTHER THAN SEQ CHECK    */
         TM    DCBEXSEQ(@12),B'10000000'                           0193
         BNZ   @RF00193                                            0193
*             DO;                                                  0194
*               GEN(L R0,20(R13));  /* RELOAD REGISTER ZERO          */
         L R0,20(R13)
*             END;                  /* IF AN ISAM SYNAD ROUTINE      */
*                                   /* WAS SPECIFIED IN AMP PARM     */
*           IF IISAMSYN(1:4)^=ZERO THEN                            0197
@RF00193 ICM   @12,15,IISAMSYN(RIICB)                              0197
         BZ    @RF00197                                            0197
*             R1=IIDCBPTR;          /* THEN SET REG 1 = DCB          */
         L     R1,IIDCBPTR(,RIICB)                                 0198
*           ELSE                                                   0199
*             R1=ZERO;              /* OTHERWISE REG 1 = ZERO        */
         B     @RC00197                                            0199
@RF00197 SR    R1,R1                                               0199
*           GEN;                                                   0200
@RC00197 DS    0H                                                  0200
               LM R2,R12,28(R13)           LOAD USER REGSISTERS
               L  R14,12(R13)              RESTORE USER RETURN ADDR
               BR R15
*         END;                                                     0201
*     END;                                                         0202
*   ELSE                            /* SET RPL RECORD LENGTH         */
*     DO;                                                          0203
         B     @RC00179                                            0203
@RF00179 DS    0H                                                  0204
*       IISAVLRL=DCBLRECL;          /* SAVE CURRENT REC LGTH       0204
*                                      SPECIFIED             @Y021130*/
         MVC   IISAVLRL(2,RIICB),DCBLRECL+52(RDCB)                 0204
*       IF DCBRECL='01'B THEN       /* IF VARIABLE LENGTH RECORDS    */
         LA    @12,DCBIOBAD+16(,RDCB)                              0205
         TM    DCBRECL(@12),B'01000000'                            0205
         BNO   @RF00205                                            0205
         TM    DCBRECL(@12),B'10000000'                            0205
         BNZ   @RF00205                                            0205
*         RPLRLEN=RDWLEN-LENGTH(RDWWORD);                          0206
         LA    @12,4                                               0206
         L     @10,RPLAREA(,RRPL)                                  0206
         SR    @10,@12                                             0206
         LCR   @12,@12                                             0206
         AH    @12,RDWLEN(,@10)                                    0206
         ST    @12,RPLRLEN(,RRPL)                                  0206
*     END;                                                         0207
@RF00205 DS    0H                                                  0208
*                                                                  0208
*/* **************************************************************** */
*/*                                                                  */
*/*                 RESUME LOAD PROCESSING                           */
*/*                                                                  */
*/*   KEY SEQUENCE CHECKING IS PERFORMED BY THIS ROUTINE UNTIL A     */
*/*   KEY IS RECEIVED THAT IS HIGHER THAN THE HIGHEST KEY IN THE     */
*/*   DATA SET.  THIS IS DONE BY ISSUING A VSAM GET FOR A KEY        */
*/*   THAT IS GREATER THAN OR EQUAL TO THE KEY GIVEN IN THE USER'S   */
*/*   PUT REQUEST.                                                   */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0208
*   IF DCBSTLOD=ON THEN             /* IF RESUME LOAD SEQUENCE       */
@RC00179 TM    DCBSTLOD+52(RDCB),B'00100000'                       0208
         BNO   @RF00208                                            0208
*     DO;                           /* CHECKING IS NECESSARY         */
*       RPLSAVE=RPLAREA;            /* SAVE PTR TO RECORD (PUT)      */
         LA    @12,76                                              0210
         AR    @12,RRPL                                            0210
         MVC   RPLSAVE(4,@12),RPLAREA(RRPL)                        0210
*       RPLAREA=ADDR(RPLSAVE2);     /* PT TO 4 BYTE FIELD FOR LOC    */
         LA    @12,RPLSAVE2(,@12)                                  0211
         ST    @12,RPLAREA(,RRPL)                                  0211
*       RPLDIR=ON;                  /* TURN ON DIRECT BIT IN RPL     */
*       RPLSEQ=OFF;                 /* TURN OFF SEQ BIT IN RPL       */
*       RPLLOC=ON;                  /* TURN ON LOCATE MODE BIT       */
*       RPLKGE=ON;                  /* SET SRCH KEY GRTR/EQUAL BT    */
         OI    RPLDIR(RRPL),B'11000100'                            0215
         NI    RPLSEQ(RRPL),B'11011111'                            0215
*       GEN(GET RPL=(RRPL));        /* ISSUE VSAM GET LOCATE         */
         GET RPL=(RRPL)
*       R1=IIDCBPTR;                /* RESTORE DCB PTR               */
         L     R1,IIDCBPTR(,RIICB)                                 0217
*       IF DCBEXNKY=OFF THEN        /* IF RECORD WAS FOUND THEN      */
         LA    @12,52                                              0218
         AR    @12,RDCB                                            0218
         TM    DCBEXNKY(@12),B'10000000'                           0218
         BNZ   @RF00218                                            0218
*         DO;                       /* KEY FROM PUT IS LOWER         */
*                                   /* THAN OR EQUAL TO THE KEY      */
*                                   /* FROM THE GET - SET THE        */
*           R0=ADDR(RLGETKEY);      /* PTR TO HIGHER KEY IN REG 0    */
         L     @10,IIACBPTR(,RIICB)                                0220
         L     @10,ACBAMBL(,@10)                                   0220
         L     @10,AMBLDTA(,@10)                                   0220
         L     @10,AMBDSB(,@10)                                    0220
         LH    R0,AMDRKP(,@10)                                     0220
         A     R0,RPLSAVE2+76(,RRPL)                               0220
*           DCBEXSEQ=ON;            /* SEQ CHK ERROR CODE IN DCB     */
         OI    DCBEXSEQ(@12),B'10000000'                           0221
*           RPLERREG=CZERO;         /* CLEAR RPL ERROR CODE          */
         MVI   RPLERREG(RRPL),X'00'                                0222
*           GOTO SYNADEXT;          /* GO TO ISAM SYNAD RTN          */
         B     SYNADEXT                                            0223
*         END;                                                     0224
*       ELSE                                                       0225
*         ;                         /* ISSUE PUT - NO RECD FOUND     */
@RF00218 DS    0H                                                  0226
*       DCBEXCD1=CZERO;             /* CLEAR DCB EXCEPTION CODE      */
         LA    @12,52                                              0226
         AR    @12,RDCB                                            0226
         MVI   DCBEXCD1(@12),B'00000000'                           0226
*       DCBEXCD2=CZERO;             /* CLEAR DCB EXCEPTION CODE      */
         MVI   DCBEXCD2(@12),B'00000000'                           0227
*       RPLERREG=CZERO;             /* CLEAR RPL ERROR CODE          */
         MVI   RPLERREG(RRPL),X'00'                                0228
*                                   /*                               */
*                                   /* PREPARE TO ISSUE PUT AFTER    */
*                                   /* SUCCESSFUL RESUME LOAD        */
*                                   /* SEQUENCE CHECK                */
*                                   /*                               */
*       DCBSTLOD=OFF;               /* RESET STATUS BIT FOR          */
         NI    DCBSTLOD(@12),B'11011111'                           0229
*                                   /* RESUMPTION OF LOADING         */
*       RPLDIR=OFF;                 /* TURN OFF DIRECT BIT IN RPL    */
*       RPLSEQ=ON;                  /* TURN ON SEQ BIT IN RPL        */
*       RPLLOC=OFF;                 /* SET RPL TO MOVE MODE          */
*       RPLKGE=OFF;                 /* SET RPL TO SRCH EQUAL         */
         OI    RPLSEQ(RRPL),B'00100000'                            0233
         NI    RPLDIR(RRPL),B'00111011'                            0233
*       RPLAREA=RPLSAVE;            /* RESTORE RPL AREA PTR          */
         MVC   RPLAREA(4,RRPL),RPLSAVE+76(RRPL)                    0234
*     END;                                                         0235
*   ELSE                                                           0236
*     ;                             /* INITIAL LOAD                  */
@RF00208 DS    0H                                                  0237
*                                                                  0237
*/* **************************************************************** */
*/*                                                                  */
*/*   THIS CODE WILL BE ENTERED FOR INITIAL LOAD OR A VALID RESUME   */
*/*   LOAD CONDITION (THE KEY TO BE ADDED IS HIGHER THAN THE HIGHEST */
*/*   EXISTING KEY)                                                  */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0237
*   GEN(PUT  RPL=(RRPL));           /* ISSUE VSAM PUT                */
         PUT  RPL=(RRPL)
*   R1=IIDCBPTR;                    /* RESTORE DCB POINTER           */
         L     R1,IIDCBPTR(,RIICB)                                 0238
*   IF RPLERRCD=RPLNOPLH THEN       /* IF NO PLH AVAILABLE THEN      */
         CLI   RPLERRCD(RRPL),64                                   0239
         BNE   @RF00239                                            0239
*     DO;                           /* (USER COULD BE SHARING)       */
*       DCBEXINV=ON;                /* SET INVALID REQUEST           */
         OI    DCBEXINV+52(RDCB),B'00010000'                       0241
*       RPLERREG=CZERO;             /* CLEAR RPL ERROR CODES         */
         MVI   RPLERREG(RRPL),X'00'                                0242
*       GO TO SYNADEXT;             /* GO TO SYNAD EXIT              */
         B     SYNADEXT                                            0243
*     END;                                                         0244
*   DCBSTKSQ=ON;                    /* TURN ON KEY SEQ CHK BIT       */
@RF00239 OI    DCBSTKSQ+52(RDCB),B'01000000'                       0245
*   IF DCBMFLCP=ON THEN             /* IF PUT LOCATE                 */
         TM    DCBMFLCP+40(RDCB),B'00001000'                       0246
         BNO   @RF00246                                            0246
*                                   /* SAVE KEY IN WORK AREA         */
*     KEYAREA(1:DCBKEYLE)=PUTLKEY(1:DCBKEYLE);                     0247
         L     @12,IIKEYPT(,RIICB)                                 0247
         SR    @10,@10                                             0247
         IC    @10,DCBKEYLE+16(,RDCB)                              0247
         BCTR  @10,0                                               0247
         L     @09,IIACBPTR(,RIICB)                                0247
         L     @09,ACBAMBL(,@09)                                   0247
         L     @09,AMBLDTA(,@09)                                   0247
         L     @09,AMBDSB(,@09)                                    0247
         LH    @09,AMDRKP(,@09)                                    0247
         A     @09,RPLAREA(,RRPL)                                  0247
         EX    @10,@SM01214                                        0247
*                                                                  0248
*/* **************************************************************** */
*/*                                                                  */
*/*   EXIT WILL NORMALLY BE TO THE CALLER'S ISAM PROGRAM.            */
*/*   RETURN WILL BE TO II CLOSE IF THIS MODULE WAS ENTERED FROM     */
*/*   II CLOSE.                                                      */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0248
*EXIT:                                                             0248
*   IF IIFCLOSE=OFF THEN            /* IF ENTRY FROM PUT MACRO       */
@RF00246 DS    0H                                                  0248
EXIT     TM    IIFCLOSE(RIICB),B'00010000'                         0248
         BNZ   @RF00248                                            0248
*     DO;                                                          0249
*       R13=IIREGBC;                /* RESTORE USER SAVE AREA PTR    */
         L     R13,IIREGBC(,RIICB)                                 0250
*       IF DCBMFLCP=ON THEN         /* IF LOCATE MODE, REGISTER      */
         TM    DCBMFLCP+40(RDCB),B'00001000'                       0251
         BNO   @RF00251                                            0251
*         DO;                       /* ONE MUST PT TO BUFFER.        */
*           IF DCBRECL='01'B THEN   /* IF VARIABLE LENGTH RECORDS    */
         LA    @12,DCBIOBAD+16(,RDCB)                              0253
         TM    DCBRECL(@12),B'01000000'                            0253
         BNO   @RF00253                                            0253
         TM    DCBRECL(@12),B'10000000'                            0253
         BNZ   @RF00253                                            0253
*             R1=RPLAREA-4;         /* SET R1 TO BUFFER ADDR         */
         L     R1,RPLAREA(,RRPL)                                   0254
         SH    R1,@CH00199                                         0254
*           ELSE                                                   0255
*             R1=RPLAREA;           /* SET R1 TO BUFFER ADDR         */
         B     @RC00253                                            0255
@RF00253 L     R1,RPLAREA(,RRPL)                                   0255
*         END;                      /* END OF LOCATE MODE CODE       */
@RC00253 DS    0H                                                  0257
*       GEN;                                                       0257
@RF00251 DS    0H                                                  0257
           LM  R2,R12,28(R13)           /* RESTORE USER REGS         */
           LM  R14,R0,12(R13)              RESTORE USER REGISTERS
           BR  R14                      /* RETURN TO USER            */
*     END;                                                         0258
*   ELSE                            /* ENTRY FROM CLOSE              */
*     DO;                                                          0259
         B     @RC00248                                            0259
@RF00248 DS    0H                                                  0260
*       R14=RWORK3;                 /* RESTORE CLOSE RETURN REG      */
         LR    R14,RWORK3                                          0260
*       GEN(BR  R14);               /* RETURN TO CLOSE               */
         BR  R14
*       GEN(IDAPATCH);                                             0262
         IDAPATCH
*     END;                                                         0263
*   END IDAIIPM1                                                   0264
*                                                                  0264
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IDAIIREG)                                       */
*/*%INCLUDE SYSLIB  (IDAIICB )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (IDARPLE )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*                                                                  0264
*       ;                                                          0264
@EL00001 DS    0H                                                  0264
@EF00001 DS    0H                                                  0264
@ER00001 LM    @14,@12,12(@13)                                     0264
         BR    @14                                                 0264
@DATA    DS    0H
@CH00199 DC    H'4'
@SM01214 MVC   KEYAREA(0,@12),PUTLKEY(@09)
@DATD    DSECT
         DS    0F
IDAIIPM1 CSECT
         DS    0F
@CF01209 DC    F'-4'
@CF00087 DC    F'1'
@CF01200 DC    F'200704'
@CF01196 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
DEBDAPTR DS    A
DEBEXPTR DS    A
DEBSBPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDAIIPM1 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GPR01F   EQU   @01
R0       EQU   @00
R1       EQU   @01
RDCB     EQU   @01
RIICB    EQU   @02
RRPL     EQU   @03
RWORK2   EQU   @07
RWORK3   EQU   @08
R11      EQU   @11
DEBPTR   EQU   @11
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
JFCBPTR  EQU   @09
RACB     EQU   @06
RBUFF    EQU   @05
RCORE    EQU   @04
RDEB     EQU   @11
RDECB    EQU   @01
RFMADDR  EQU   @07
RGMLEN   EQU   @09
RGMSP    EQU   @08
RLKRETSV EQU   @10
RPARC    EQU   @07
RTIOT    EQU   @09
RWORK1   EQU   @06
R10      EQU   @10
R12      EQU   @12
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
IDAIICB  EQU   0
IIDCBPTR EQU   IDAIICB+4
IIACBPTR EQU   IDAIICB+8
IIRPLPTR EQU   IDAIICB+12
IIW1CBF  EQU   IDAIICB+16
IISAVLRL EQU   IIW1CBF
IIMAXLRL EQU   IIW1CBF+2
IIKEYPT  EQU   IDAIICB+20
IIFLAG1  EQU   IDAIICB+24
IIFCLOSE EQU   IIFLAG1
IIFLAG2  EQU   IDAIICB+28
IIFLAG3  EQU   IDAIICB+36
IISAMSYN EQU   IDAIICB+52
IIREGSAV EQU   IDAIICB+60
IIREGBC  EQU   IIREGSAV+4
IIAUD    EQU   IDAIICB+132
IIAUDHDR EQU   IIAUD
IIAUDFL1 EQU   IIAUDHDR
IIAUDFL2 EQU   IIAUDHDR+1
IIGMCNTR EQU   IIAUDHDR+2
IIGMAUD  EQU   IIAUD+4
AUDCSPLI EQU   IIGMAUD+4
AUDCSPLD EQU   IIGMAUD+12
AUDCSPLB EQU   IIGMAUD+20
AUDCSPLM EQU   IIGMAUD+28
IIGMNTRY EQU   0
IIGMSPLG EQU   IIGMNTRY+4
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBKEYLE EQU   DCBRELB
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
DCBRECL  EQU   DCBRECLA
DCBRECBR EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
IHADCS29 EQU   0
DCBOPTCD EQU   IHADCS29
DCBOPTI  EQU   DCBOPTCD
DCBOPTL  EQU   DCBOPTCD
DCBMAC   EQU   IHADCS29+1
DCBSYNAD EQU   IHADCS29+4
DCBRKP   EQU   IHADCS29+8
DCBMSHI  EQU   IHADCS29+20
DCBEXCD1 EQU   IHADCS29+28
DCBEXNKY EQU   DCBEXCD1
DCBEXINV EQU   DCBEXCD1
DCBEXCD2 EQU   IHADCS29+29
DCBEXSEQ EQU   DCBEXCD2
DCBEXLTH EQU   DCBEXCD2
DCBLRECL EQU   IHADCS29+30
DCBST    EQU   IHADCS29+108
DCBSTKSQ EQU   DCBST
DCBSTLOD EQU   DCBST
IHADCS55 EQU   0
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBK  EQU   RPLCOMN+13
RPLRTNCD EQU   RPLFDBK
RPLERREG EQU   RPLRTNCD
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLERRCD EQU   RPLCNDCD+1
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLLOC   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPL6RBA  EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IDARPLE  EQU   0
RPLIIBFR EQU   IDARPLE+8
RPLSAVE  EQU   IDARPLE+20
RPLSAVE2 EQU   IDARPLE+24
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBWKPT5 EQU   DEBACS07+12
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBIXLST EQU   ACBAMBL
ACBJWA   EQU   ACBIXLST
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBLFB   EQU   ACBCOMN+20
ACBBUFPL EQU   ACBLFB
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBWAPTR EQU   ACBUJFCB
IDAAMBL  EQU   0
AMBLEOV  EQU   IDAAMBL+12
AMBLEFLG EQU   AMBLEOV
AMBLSHAR EQU   IDAAMBL+33
AMBLFLG1 EQU   IDAAMBL+35
AMBLFLG2 EQU   IDAAMBL+36
AMBLDTA  EQU   IDAAMBL+52
IDAAMB   EQU   0
AMBDSB   EQU   IDAAMB+20
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDRKP   EQU   IDAAMDSB+6
AMDSTAT  EQU   IDAAMDSB+40
KEYAREA  EQU   0
RDWWORD  EQU   0
RDWLEN   EQU   RDWWORD
DATABYT1 EQU   0
PUTLKEY  EQU   0
RLGETKEY EQU   0
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
RDW00    EQU   RDWWORD+2
AMDEXCP  EQU   AMDSTAT+52
AMDNCAS  EQU   AMDSTAT+48
AMDNCIS  EQU   AMDSTAT+44
AMDASPA  EQU   AMDSTAT+40
AMDRETR  EQU   AMDSTAT+36
AMDUPR   EQU   AMDSTAT+32
AMDIREC  EQU   AMDSTAT+28
AMDDELR  EQU   AMDSTAT+24
AMDNLR   EQU   AMDSTAT+20
AMDNEXT  EQU   AMDSTAT+18
AMDNIL   EQU   AMDSTAT+16
AMDSTSP  EQU   AMDSTAT+8
@NM00055 EQU   AMDSTAT
AMDPARDB EQU   IDAAMDSB+36
AMDSSRBA EQU   IDAAMDSB+32
AMDHLRBA EQU   IDAAMDSB+28
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDNEST  EQU   IDAAMDSB+4
AMDLEN   EQU   IDAAMDSB+2
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
AMBCPA   EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
AMBIOBA  EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBEOVPT EQU   IDAAMB+56
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
@NM00054 EQU   IDAAMB+49
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00053 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00052 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBCAT   EQU   AMBINFL
@NM00051 EQU   AMBINFL
@NM00050 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00049 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00048 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00047 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00046 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
AMBLDS   EQU   IDAAMBL+60
AMBLIX   EQU   IDAAMBL+56
AMBLMIDS EQU   IDAAMBL+42
AMBLNIDS EQU   IDAAMBL+41
@NM00045 EQU   IDAAMBL+40
AMBLNUM  EQU   IDAAMBL+38
AMBLNST  EQU   IDAAMBL+37
AMBLCKPT EQU   AMBLFLG2
AMBLREST EQU   AMBLFLG2
AMBLDUMY EQU   AMBLFLG1
AMBLCAT  EQU   AMBLFLG1
@NM00044 EQU   AMBLFLG1
AMBLUPD  EQU   AMBLFLG1
AMBLCINV EQU   AMBLFLG1
AMBLFULL EQU   AMBLFLG1
AMBLLEN  EQU   IDAAMBL+34
@NM00043 EQU   AMBLSHAR
AMBLWRIT EQU   AMBLSHAR
AMBLCATO EQU   AMBLSHAR
AMBLPRIM EQU   AMBLSHAR
AMBLID   EQU   IDAAMBL+32
AMBLCBLN EQU   IDAAMBL+30
@NM00042 EQU   IDAAMBL+29
AMBLCBTS EQU   IDAAMBL+28
AMBLCBWA EQU   IDAAMBL+24
AMBLDDNM EQU   IDAAMBL+16
@NM00041 EQU   AMBLEOV+2
AMBLCOMP EQU   AMBLEOV+1
AMBLESET EQU   AMBLEFLG
AMBLWAIT EQU   AMBLEFLG
AMBLACB  EQU   IDAAMBL+8
AMBLSCHN EQU   IDAAMBL+4
AMBLPCHN EQU   IDAAMBL
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBBLKSZ EQU   ACBCOMN+60
ACBBUFSP EQU   ACBCOMN+56
@NM00040 EQU   ACBWAPTR+1
ACBOPTN  EQU   ACBWAPTR
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00039 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00038 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00037 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
@NM00036 EQU   ACBCOMN+28
@NM00035 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00034 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00033 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
@NM00032 EQU   ACBBUFPL
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+14
@NM00031 EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
ACBCHN   EQU   ACBMACR2
ACBCBRD  EQU   ACBMACR2
ACBCBOPN EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
DEBXRV40 EQU   DEBXTN+28
DEBXRV39 EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXRV42 EQU   DEBXFLG1
DEBXRV41 EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBRSV23 EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBRSV19 EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00030 EQU   DEBACS08+12
@NM00029 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00028 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00027 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSV01 EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
@NM00026 EQU   IDARPLE+17
RPLIITSB EQU   IDARPLE+16
RPLRPLPT EQU   IDARPLE+12
RPLDECB  EQU   IDARPLE+4
RPLIICB  EQU   IDARPLE
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
RPLGVNT  EQU   RPLEXTD1
RPLLVNT  EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPL6RBA+2
RPLS2S2  EQU   RPL6RBA
RPLS1S1  EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLRSV75 EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00025 EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLFDB3  EQU   RPLERRCD
RPLFDB2  EQU   RPLCMPON
RPLSTAT  EQU   RPLCOMN+12
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
DCBLPDT  EQU   IHADCS55
DCBWKPT6 EQU   IHADCS29+196
DCBWKPT5 EQU   IHADCS29+192
DCBWKPT4 EQU   IHADCS29+188
DCBWKPT3 EQU   IHADCS29+184
DCBWKPT2 EQU   IHADCS29+180
DCBWKPT1 EQU   IHADCS29+176
@NM00024 EQU   IHADCS29+174
DCBRORG1 EQU   IHADCS29+172
DCBLIOV  EQU   IHADCS29+164
DCBNOREC EQU   IHADCS29+162
@NM00023 EQU   IHADCS29+161
DCBLEMI1 EQU   IHADCS29+156
DCBRORG2 EQU   IHADCS29+154
@NM00022 EQU   IHADCS29+153
DCBLECI  EQU   IHADCS29+148
DCBNBOV  EQU   IHADCS29+146
DCBOVDEV EQU   IHADCS29+145
DCBLETI  EQU   IHADCS29+140
DCBLPDA  EQU   IHADCS29+132
DCBFTHI  EQU   IHADCS29+125
DCBNTHI  EQU   IHADCS29+124
DCBFTMI1 EQU   IHADCS29+117
DCBHIIOV EQU   IHADCS29+116
DCBFTCI  EQU   IHADCS29+109
DCBSTLTF EQU   DCBST
DCBSTLBF EQU   DCBST
DCBSTNMC EQU   DCBST
@NM00021 EQU   DCBST
DCBSTNCY EQU   DCBST
DCBSTSSM EQU   DCBST
DCBNREC  EQU   IHADCS29+104
DCBRORG3 EQU   IHADCS29+100
DCBNCRHI EQU   IHADCS29+98
DCBTDC   EQU   IHADCS29+96
DCBHIRSH EQU   IHADCS29+95
DCBHIROV EQU   IHADCS29+94
DCBHIRPD EQU   IHADCS29+93
DCBHIRCM EQU   IHADCS29+92
DCBLDT   EQU   IHADCS29+90
DCBHMASK EQU   IHADCS29+89
DCBFIRSH EQU   IHADCS29+86
DCBNLEV  EQU   IHADCS29+85
DCBLEMI3 EQU   IHADCS29+80
DCBFTMI3 EQU   IHADCS29+73
DCBLEMI2 EQU   IHADCS29+68
DCBFTMI2 EQU   IHADCS29+61
DCBHIRTI EQU   IHADCS29+60
DCBFREED EQU   IHADCS29+56
DCBRELEX EQU   IHADCS29+52
DCBPUTX  EQU   IHADCS29+48
DCBRELSE EQU   IHADCS29+44
DCBLWKN  EQU   IHADCS29+40
DCBLRAN  EQU   IHADCS29+36
DCBESETL EQU   IHADCS29+32
@NM00020 EQU   DCBEXCD2
DCBEXRDE EQU   DCBEXLTH
DCBEXOFL EQU   DCBEXCD2
DCBEXCLD EQU   DCBEXCD2
DCBEXDUP EQU   DCBEXCD2
DCBEXBLU EQU   DCBEXCD1
DCBEXBLI EQU   DCBEXCD1
DCBEXOER EQU   DCBEXCD1
DCBEXIER EQU   DCBEXCD1
DCBEXNSP EQU   DCBEXCD1
DCBEXIDA EQU   DCBEXCD1
DCBSETL  EQU   IHADCS29+24
DCBMSHIA EQU   DCBMSHI+1
DCBNCP   EQU   DCBMSHI
DCBSMSW  EQU   IHADCS29+18
DCBSMSI  EQU   IHADCS29+16
DCBMSWA  EQU   IHADCS29+12
DCBBLKSI EQU   IHADCS29+10
DCBCYLOF EQU   IHADCS29+3
DCBNTM   EQU   IHADCS29+2
DCBMACRE EQU   DCBMAC
DCBMACAW EQU   DCBMAC
DCBMACUW EQU   DCBMAC
DCBMACUR EQU   DCBMAC
@NM00019 EQU   DCBMAC
DCBOPTR  EQU   DCBOPTCD
@NM00018 EQU   DCBOPTCD
DCBOPTY  EQU   DCBOPTCD
DCBOPTM  EQU   DCBOPTCD
DCBOPTUF EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUT   EQU   DCBGET
DCBDEBA  EQU   DCBDEBAD+1
@NM00017 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00016 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00015 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00014 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00013 EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00012 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBTRBAL EQU   IHADCS01+6
@NM00011 EQU   IHADCS01+5
@NM00010 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00009 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00008 EQU   IHADCB
IIGMLEN  EQU   IIGMSPLG+1
IIGMPOOL EQU   IIGMSPLG
IIGMADDR EQU   IIGMNTRY
AUDCLM   EQU   AUDCSPLM+1
AUDCSPM  EQU   AUDCSPLM
AUDCMSGA EQU   IIGMAUD+24
AUDCLB   EQU   AUDCSPLB+1
AUDCSPB  EQU   AUDCSPLB
AUDCBFRS EQU   IIGMAUD+16
AUDCLD   EQU   AUDCSPLD+1
AUDCSPD  EQU   AUDCSPLD
AUDCDEB  EQU   IIGMAUD+8
AUDCLI   EQU   AUDCSPLI+1
AUDCSPI  EQU   AUDCSPLI
AUDCIICB EQU   IIGMAUD
@NM00007 EQU   IIAUDFL2
AUDDEBXF EQU   IIAUDFL2
AUDBFRRT EQU   IIAUDFL2
AUDBFREX EQU   IIAUDFL2
AUDACBRC EQU   IIAUDFL2
AUDACBCL EQU   IIAUDFL2
AUDIIFBF EQU   IIAUDFL2
AUDURSYN EQU   IIAUDFL1
AUDIISYN EQU   IIAUDFL1
AUDPRMOD EQU   IIAUDFL1
AUDDCBRT EQU   IIAUDFL1
AUDDCBEX EQU   IIAUDFL1
AUDACBRO EQU   IIAUDFL1
AUDACBOP EQU   IIAUDFL1
@NM00006 EQU   IIREGSAV+12
IIREGFC  EQU   IIREGSAV+8
@NM00005 EQU   IIREGSAV
IISVCLST EQU   IDAIICB+48
IITBUFL  EQU   IDAIICB+45
IIBUFNO  EQU   IDAIICB+44
IIMSGPTR EQU   IDAIICB+40
IIMSGL   EQU   IDAIICB+37
@NM00004 EQU   IIFLAG3
MBFALN   EQU   IIFLAG3
IIBUFL   EQU   IDAIICB+34
IIKEYSL  EQU   IDAIICB+32
IIRPLL   EQU   IDAIICB+29
MKEYLE   EQU   IIFLAG2
MBUFNO   EQU   IIFLAG2
MBUFL    EQU   IIFLAG2
MRECFM   EQU   IIFLAG2
MOPTCD   EQU   IIFLAG2
MBLKSI   EQU   IIFLAG2
MLRECL   EQU   IIFLAG2
MRKP     EQU   IIFLAG2
IIACBL   EQU   IDAIICB+25
IIQBFRS  EQU   IIFLAG1
@NM00003 EQU   IIFLAG1
IIFTEST  EQU   IIFLAG1
IIDATA   EQU   IIFLAG1
@NM00002 EQU   IIFLAG1
IIFGET   EQU   IIFLAG1
IIFSCAN  EQU   IIFLAG1
IICBLEN  EQU   IDAIICB+2
@NM00001 EQU   IDAIICB+1
IICBID   EQU   IDAIICB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00172 EQU   NEXT
@RT00175 EQU   EXIT
@RC00182 EQU   @RC00179
@RC00248 EQU   @EL00001
@ENDDATA EQU   *
         END   IDAIIPM1,(C'PL/S-II',0502,73230)
