         TITLE 'IFG0199E - OPEN/CLOSE/EOV PROBLEM DETERMINATION USER EX*
               IT PROCESSING ROUTINE'
         COPY  LCGASMSW
IFG0199E CSECT
         ENTRY IFG0209E
         ENTRY IFG0239E
         ENTRY IFG0559E
IFG0209E EQU   IFG0199E                 ALIAS ENTRY POINT        Y02080
IFG0239E EQU   IFG0199E                 ALIAS ENTRY POINT        Y02080
IFG0559E EQU   IFG0199E                 ALIAS ENTRY POINT        Y02080
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0199E (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN,CLOSE/EOV PROBLEM DETERMINATION USER EXIT   *
*                    PROCESSING ROUTINE                               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 4, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. FINAL ROUTINE OF ABEND INTERPRETATION AND RECOVERY.       *
*        DETERMINES IF THE USER HAS SPECIFIED A DCB EXIT LIST         *
*        ADDRESS, AND IF HE HAS, IF ONE OF THE ENTRIES IS AN ABEND    *
*        EXIT (CODE X'11').                                           *
*                                                                     *
*        2. IF NO ABEND EXIT IS SPECIFIED, O/C/EOV REGISTERS ARE      *
*        RESTORED AND AN ABEND IS ISSUED WITH:                        *
*           A. CONDITION CODE EQUAL TO THAT PASSED TO THE ROUTINE IN  *
*           PDABCODE;                                                 *
*           B. R15 LOADED WITH A RETURN CODE FROM PDRETCODE.          *
*                                                                     *
*        3. IF AN ABEND EXIT IS SPECIFIED, USER REGISTERS ARE         *
*        RESTORED, REGISTER 1 IS LOADED WITH A POINTER TO A           *
*        PARAMETER LIST, AND A SYNCH TO THE USER'S EXIT ROUTINE       *
*        IS ISSUED.  UPON RETURN FROM THE USER'S ROUTINE, A BRANCH    *
*        TABLE DETERMINES THE OPTION SELECTED:                        *
*           CODE     ACTION                                           *
*           0  (0)   ABEND                                            *
*           4  (4)   IGNORE ERROR                                     *
*           8  (8)   DELAY ERROR                                      *
*           12 (C)   ATTEMPT RECOVERY                                 *
*                                                                     *
*        4. IF HE CHOOSES TO ABEND, O/C/EOV REGISTERS ARE             *
*        RESTORED AND AN ABEND ISSUED.                                *
*                                                                     *
*        5. IF HE CHOOSES TO IGNORE THE ERROR, THEN THE ABEND IS      *
*        IGNORED OR AN ABEND IS ISSUED DEPENDING UPON WHETHER OR NOT  *
*        THE ERROR CAN BE DELAYED.                                    *
*                                                                     *
*        6. IF HE CHOOSES TO DELAY THE ERROR, THEN THE ABEND IS       *
*        DELAYED OR AN ABEND IS ISSUED DEPENDING UPON WHETHER OR NOT  *
*        THE ERROR CAN BE DELAYED.                                    *
*                                                                     *
*        7. IF HE CHOOSES TO ATTEMPT RECOVERY, HE MAY SUPPLY NEW      *
*        DATA WITH WHICH RECOVERY WILL BE ATTEMPTED; NEW VOLUME SERIAL*
*        NUMBERS. THE JFCB AND/OR EXTENSION BLOCKS WILL BE UPDATED    *
*        AND WRITTEN BACK.  OPEN'S REGISTERS WILL BE RESTORED, AND    *
*        CONTROL WILL BE RETURNED TO THE RESIDENT ROUTINE WITH THE    *
*        MODULE SPECIFIED BY DXRETMOD.                                *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD LABEL BEFORE ORG STATEMENT AT END        *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0199E OPEN                                         *
*               IFG0209E CLOSE                                        *
*               IFG0239E TCLOSE                                       *
*               IFG0559E EOV                                          *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        R1 POINTER TO PROBLEM DETERMINATION WORK AREA                *
*        R2, R4-R10 AS THEY WERE WHEN PROBLEM DETERMINATION CALLED    *
*                                                                     *
* INPUT = R1 POINTING TO PROBLEM DETERMINATION WORK AREA              *
*                                                                     *
* OUTPUT = WHEN RECOVERY IS ATTEMPTED, THE JFCB AND/OR EXTENSION      *
*          BLOCKS ARE UPDATED WITH NEW VOLUME SERIAL NUMBERS.         *
*                                                                     *
* EXIT-NORMAL = IFG0196V TO DELAY/IGNORE AN OPEN EXECUTOR ABEND.      *
*               IFG0200W TO DELAY/IGNORE A CLOSE EXECUTOR ABEND.      *
*               IFG019RA TO TO SELECT NEXT MODULE TO GET CONTROL.     *
*                                                                     *
* EXIT-ERROR = ABEND - SEE FUNCTION FOR CONDITIONS                    *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG019RA                                              *
*               LOCK ROUTINE                                          *
*                                                                     *
*    DATA AREAS = PROBLEM DETERMINATION WORK AREA                     *
*                 OPEN/CLOSE/EOV WORK AREA                            *
*                 RECOVERY ROUTINE PARAMETER LIST                     *
*                 ABEND EXIT PARAMETER LIST                           *
*                 ABEND EXIT RECOVERY WORK AREA                       *
*                                                                     *
*    CONTROL BLOCKS = CVT                                             *
*                     DCB                                             *
*                     JFCB                                            *
*                     JFCB EXTENSION                                  *
*                     SVRB                                            *
*                     TCB                                             *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = ABEND                                                      *
*          FREEMAIN                                                   *
*          IECDSECS                                                   *
*          IECPDSCT                                                   *
*          IECRES FREE                                                *
*          IECRES GET                                                 *
*          IECRES INIT                                                *
*          IECRES LOAD                                                *
*          IECRES LOCJFCB                                             *
*          IECRES UEXIT                                               *
*          IECRES WRJFCB                                              *
*          MODESET                                                    *
*          SETLOCK                                                    *
*          SNAP MF=L                                                  *
*          XCTLTABL                                                   *
*                                                                     *
* CHANGE ACTIVITY                                                     *
* VS2-RELEASE 3.7 CHANGES/DELETIONS                                   *
*0000618399-618899                                             @ZA10633
* VS2-RELEASE 3 CHANGES/DELETIONS                                     *
*0000618399                                                    @ZA03152
*0000171000,451000-460000,464000                               @ZA01340
* VS2-RELEASE 2 CHANGES/DELETIONS                                     *
*A168500,176500-176700,618399                                   ZA01291
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0                        WORK/PARAMETER REG
R1       EQU   1                        WORK/PARAMETER REG
RDCB     EQU   2                        PTR TO DCB
RBASE    EQU   3                        BASE REG
RCORE    EQU   4                        PTR TO O/C/EOV WKAREA
RES      EQU   5                        PTR TO RESIDENT RTN
RWTG     EQU   6                        PTR TO WTG TABLE
RPARC    EQU   7                        PTR TO PARALIST CURRENT ENTRY
RWTGC    EQU   8                        PTR TO WTG TABLE CURRENT ENTRY
RTIOT    EQU   9                        TIOT ENTRY
RUCB     EQU   10                       PTR TO UCB
RB       EQU   11                       WORK/PARAMETER REG
RC       EQU   12                       WORK/PARAMETER REG
RD       EQU   13                       WORK/PARAMETER REG
RET      EQU   14                       WORK/PARAMETER REG
RF       EQU   15                       WORK/PARAMETER REG
ZERO     EQU   0                        WORK VALUE
THREE    EQU   3                        WORK VALUE
ONE      EQU   1                        WORK VALUE
ORG      EQU   0                        WORK VALUE
CHAR1    EQU   C'1'                     CHARACTER ONE            YM1195
ABEXCOD  EQU   X'11'                    DCB ABEND EXIT CODE
LAST     EQU   X'80'                    BIT FOR LAST ENTRY IN LIST
FOUR     EQU   4                        WORK VALUE
SIXTY    EQU   60                       WORK VALUE
CODLNG   EQU   1                        LNG OF PDCODE FIELD IN IECPDSCT
EIGHT    EQU   8                        WORK VALUE
LEGALOPT EQU   X'0C'                    VALID BIT COMBINATIONS FOR USER
*                                       ON RETURN FROM ABEND EXIT
TWO      EQU   2                        WORK VALUE
BLANK    EQU   C' '                     BLANK CHARACTER
DSNLNG   EQU   44                       MAXIMUM LNG OF DSNAME
CHNGVOLS EQU   X'40'                    USER OPTION TO CHANGE VOLUMES
CCWLNG   EQU   8                        LNG OF A CCW
TWENTY4  EQU   24                       WORK VALUE
GOODIO   EQU   X'7F'                    ECB COMP CODE FOR SUCCESSFUL IO
JFCABEND EQU   X'02'                    BIT INDICATING DELAYED ABEND
FULL     EQU   X'FF'                    ALL BITS IN BYTE SET TO ONE
DCBBUSY  EQU   X'01'                    DCBOFLGS BUSY BIT
DCBLOCK  EQU   X'02'                    DCBOFLGS LOCK BIT
OPEN     EQU   X'10'                    DCBOFLGS OPEN BIT
FIVE     EQU   5                        WORK VALUE
SIX      EQU   6                        WORK VALUE
WTGPATH  EQU   30                       OFFSET OF WTGPATHS IN WTG TBL
TWELVE   EQU   12                       WORK VALUE
RDCODE   EQU   X'06'                    READ COMMAND CODE
THIRTY2  EQU   32                       WORK VALUE
WRTCODE  EQU   X'05'                    WRITE COMMAND CODE
FREEBUF  EQU   X'80'                    USER OPTION TO FREE BUFFER
TWENTY8  EQU   28                       WORK VALUE
MASKSET  EQU   X'80'                    ORIGINAL OPTION MASK SET YM5994
RECOVRY  EQU   X'08'                    RECOVERY OPTION VALID BIT
IGN      EQU   X'04'                    IGNORE OPTION VALID BIT
DEL      EQU   X'02'                    DELAY OPTION VALID BIT
NODCBEX  EQU   X'01'                    DISALLOW DCB ABEND EXIT ZA01291
RESXCTL  EQU   4                        BRANCH TABLE OFFSET TO XCTL
EOV      EQU   X'03'                    EOV ABEND CODES ARE X37  A51158
*                                       LEFT JUSTIFIED IN A      A51158
*                                       HALFWORD                 A51158
K24      EQU   24                       CONSTANT  24
K16      EQU   16                       CONSTANT OF 16           Y02134
K12      EQU   12                       CONSTANT OF 12           Y02134
K8       EQU   8                        CONSTANT OF 8            Y02082
K4       EQU   4                        CONSTANT  4
K6       EQU   6                        CONSTANT OF 6            YM5728
K10      EQU   10                       CONSTANT OF 10           YM5728
K1       EQU   1                        CONSTANT  1
K229     EQU   229                      FETCH PROT. SUBPOOL      Y02082
K0       EQU   0                        CONSTANT OF ZERO         Y02082
ABTEST   EQU   X'F0'                    ABEND CODE TEST MASK     Y02144
K68      EQU   68                       CONSTANT 68              Y02082
K2       EQU   2                        CONSTANT 2               YM5728
K3       EQU   3                        CONSTANT 3               YM5728
K5       EQU   5                        CONSTANT 5               YM5728
K7       EQU   7                        CONSTANT 7               YM5728
         EJECT
         BALR  RBASE,R0                 ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING PDDSECT,R1
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING IHADCB,RDCB
         CLI   PDABCODE,ZERO            IS THIS A REAL ABEND     Y02144
         BNE   PDF04010                 YES, CHK FOR EXIT LIST   Y02144
         TM    PDABCODE+ONE,ABTEST      IS THERE AN ABEND CODE   Y02144
         BNZ   PDF04010                 YES, CHK FOR EXIT LIST   Y02144
         TM    PDABCODE+ONE,IGN         IS IGNORE OPTION ALLOWED Y02144
         BZ    PDF04520                 NO, BYPASS ABEND EXIT    Y02144
         B     PDF04460                 PROCESS FOR IGNORE       Y02144
PDF04010 EQU   *                        CHECK FOR BAD DCB      @ZA01291
         TM    PDABCODE+ONE,NODCBEX     DCB ABND EXIT DISALLOWD ZA01291
         BNO   PDF04015                 NO, GO CHECK EXIT      @ZA01291
         TM    PDABCODE+ONE,IGN         CAN DEFAULT TO IGNORE  @ZA01291
         BO    PDF04460                 GO IGNORE ERROR        @ZA01291
         TM    PDABCODE+ONE,DEL         CAN DEFAULT TO DELAY   @ZA01291
         BO    PDF04420                 GO DELAY ERROR         @ZA01291
         B     PDF04485                 GO ABEND NOW           @ZA01291
*
PDF04015 EQU   *                        CHK FOR DCB EXIT LIST
         L     RB,DCBEXLST              PTR TO DCB EXIT LIST
         LA    RB,ORG(RB)               CLEAR HI-ORDER BYTE
         LTR   RB,RB                    EXIT LIST ADDR SPECIFIED
         BZ    PDF04420                 NO, CHK FOR DELAY        Y02144
         MODESET KEYADDR=DXUKEY,WORKREG=13 USER KEY FOR EXITLIST Y02082
PDF04020 CLI   ORG(RB),ABEXCOD          ABEND EXIT
         BE    PDF04040                 YES
         CLI   ORG(RB),ABEXCOD+LAST     ABEND EXIT
         BE    PDF04040                 YES
         TM    ORG(RB),LAST             LAST ENTRY IN LIST
         BO    PDF04420                 YES, CHK FOR DELAY       Y02144
         LA    RB,FOUR(RB)              BUMP ENTRY PTR
         B     PDF04020                 TRY AGAIN
         EJECT
PDF04040 EQU   *                        REFRESH USER DCB FR COPY
         L     RD,ORG(,RB)              PTR TO EXIT RTN          Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
         TM    DXATCOM1,DXATREFR        DO THE ACCESS METHODS    Y02072
*                                       WANT THE DCB REFRESHED   Y02072
         BO    PDF04050                 NO, BYPASS COPYBACK      Y02072
         NI    DCBOFLGS,FULL-DCBLOCK    TURN OFF LOCK BIT BEFORE GOING
*                                       TO USER                  Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(1,14,WTGPREFX)          Y02082
*                                                                Y02082
         OI    DCBOFLGS,DCBLOCK         SET LOCK BIT             Y02082
PDF04050 EQU   *                        SET UP TO TAKE USER EXIT Y02072
         MVC   PDCODE,PDABCODE+ONE      MOVE VALID OPTIONS TO PARALIST
         NI    PDCODE,RECOVRY+DEL+IGN   TURN OFF ANY OTHER BITS
         LA    RCORE,ORG(RCORE)         ZERO HI-ORDER BYTE       M0178
         ST    RCORE,PDFORCOR           STORE WKAREA PTR FOR USER
         L     RDCB,DXUDCBAD            GET USER'S DCB ADDR      YM5353
         ST    RDCB,PDDCBPTR            STORE DCB ADDR IN PARM   M0178
*                                       LIST                     M0178
         LR    RB,R1                    SAVE POINTER TO DATA     Y02082
*                                       MGMT'S P/D WORKAREA      Y02082
         IECRES GET,LV=L'PDPARM+L'PDUSRAR,KEY=USER,PREFIX=NO,    Y02082*
               SP=229,STM=(2,14,WTGPREFX) GET USER P/D WORKAREA  Y20082
         USING PDABCODE,R1              BASE PD LIST IN USER KEY
*    REG 1 NOW POINTS TO USER'S P/D WORKAREA                     Y02082
*    USING ON PDPARM FOR REG 1 IS ESTABLISHED                    Y02082
*    CONTROL IS RETURNED FROM IECRES IN USER KEY                 Y02082
         MVC   PDABCODE(L'PDPARM),PDABCODE-PDDSECT(RB)
*                                       FILL IN USER P/D W/A     Y02082
         OI    PDCODE,MASKSET           INDICATE OPTION MASK SET YM5994
         NI    DCBOFLGS,FULL-DCBLOCK    TURN OFF LOCK BIT BEFORE GOING
*                                       TO USER
         NI    PDABCODE+K1,FULL-RECOVRY-IGN-DEL-ONE              Y02144
*                                       TURN OFF LOW-ORDER BITS  Y02144
*                                       IN ABEND CODE            Y02144
         MODESET EXTKEY=DATAMGT         GET IN DM KEY            Y02082
         ST    R1,PDDCBPTR-PDDSECT(RB)  SAVE USER P/D W/A PTR    Y02082
         IECRES UEXIT,STM=(2,13,WTGPREFX),EXITAD=(RD)            Y02082
         LM    RTIOT,RUCB,DXREG9        RESTORE REGS 9-10
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         EJECT
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBLOCK         SET LOCK BIT             Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            DCB ADDRESS              Y02082
         OI    DCBOFLGS,DCBLOCK         SET LOCK BIT
         LR    R1,RB                    R1 POINTS TO PD WORKAREA Y02082
         USING PDDSECT,R1
         L     RB,PDDCBPTR              SAVED PTR TO USER'S      Y02082
*                                       P/D WORKAREA             Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=12 GET IN USER KEY       Y02082
         L     RC,PDUSRAR-PDABCODE(RB)  GET USER PARM LIST ADDR  Y02082
         ICM   RC,B'1000',PDCODE-PDABCODE(RB)   GET USER RETURN  Y02082
*                                       CODE                     Y02082
         MODESET EXTKEY=DATAMGT         GET BACK IN DM KEY       Y02082
         STCM  RC,B'1000',PDCODE        STORE USER RET CODE      Y02082
         STCM  RC,B'0111',PDUSRAR+K1    STORE USER DATA ADDRESS  Y02082
         IECRES FREE,LV=L'PDPARM+L'PDUSRAR,KEY=USER,PREFIX=NO,   Y02082*
               SP=229,A=(RB),STM=(1,14,WTGPREFX) FREE USER W/A   Y02082
         EJECT
         MODESET EXTKEY=DATAMGT         GET IN DM KEY            Y02082
         TM    PDCODE,MASKSET           WAS OPTION MASK CHANGED  YM5994
         BO    PDF04420                 NO, DO DELAYED ABEND     YM5994
         NI    PDCODE,LEGALOPT          INSURE OPTION SELECTED IS LEGAL
         SR    RET,RET                  ZERO WKREG
         IC    RET,PDCODE               PUT OPTION CODE IN REG
         B     PDF04060(RET)            USE FOR BRANCH TABLE
PDF04060 EQU   *                        BRANCH TABLE
         B     PDF04480                 ABEND
         B     PDF04450                 IGNORE ERR               YM1195
         B     PDF04420                 DELAY ERR
PDF04080 EQU   *                        ATTEMPT RECOVERY
         TM    PDABCODE+ONE,RECOVRY     WAS RECOVERY POSSIBLE
         BNO   PDF04420                 NO, DO DELAYED ABEND     Y02144
         TM    JFCBMASK+FOUR,JFCABEND   HAS RECOVERY BEEN PERFORMED
*                                       ON THIS DCB PREVIOUSLY
         BO    PDF04420                 YES, DO DELAYED ABEND    Y02144
         OI    JFCBMASK+FOUR,JFCABEND   SET RECOVERY BIT IN JFCB MASK
         L     RB,PDUSRAR               PTR TO USER BUFFER
         LA    RB,ORG(RB)               ZERO HI-ORDER BYTE
         LTR   RB,RB                    BUFFER ADDR SUPPLIED
         BZ    PDF04520                 NO, USE SAME DATA
*                                       IF USER HAS NOT SUPPLIED NEW
*                                       VOLIDS, THEN RECOVERY WILL
*                                       BE ATTEMPTED WITH ORIGINAL VOLS
         EJECT
*                                                                Y02082
*                                       USER KEY                 Y02082
*                                                                Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=13 GET IN USER KEY       Y02082
         TM    TWO(RB),CHNGVOLS         VALID REQUEST
         BZ    PDF04420                 NO, DO DELAYED ABEND     Y02144
*
         LA    RD,FOUR(RB)              POINT TO 1ST DATA IN BUFFER
         SR    RC,RC                    ZERO WKREG
         IC    RC,ORG(RD)               NO. OF VOLS TO BE CHANGED
         LTR   RC,RC                    IS NO VOLS TO BE CHANGED ZERO
         BZ    PDF04320                 YES, TEST IF BUFFER TO BE FREED
         LA    RD,ONE(RD)               UPDATE USER BUFFER PTR
         LH    RET,DXVOLSEQ             GET STARTING VOLSEQ      Y02134
         CH    RET,CONH5                IS SEQ NO. GREATER THAN 5
         BNH   PDF04140                 NO START WITH MAIN JFCB
         SH    RET,CONH5                SUBTRACT NO. VOLS IN MAIN JFCB
         B     PDF04160                 GO READ JFCB EXTENSION
PDF04140 EQU   *                        CALC LNG OF MOVE TO JFCB
*                                                                Y02082
*                                       DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         KEY 5                    Y02082
         MVC   PDMSGLNG(TWO),CONH6      MOVE CONSTANT TO WKAREA
         BAL   RF,PDF04360              GO TO COMMON RTN TO DETERMINE
*                                       NO. VOLS TO BE MOVED INTO JFCB.
*                                       CALCULATE LNG OF MOVE AND
*                                       START POINT
         EJECT
         L     RF,WTGPREFX                                       Y02082
         STM   RB,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
         MODESET EXTKEY=SUPR            SETLOCK KEY              Y02082
PDF04142 EQU   *                        MOVE VOLS TO JFCB        Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND, GET LOCAL LOCK   Y02082*
               RELATED=(FREEMAIN,IFG0199E(PDF04144))             Y02082
         L     RF,WTGPREFX              WTG PREFIX               YM5994
         LM    RB,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         YM5994
         SR    RCORE,RET                RESTORE WKAREA PTR       YM5728
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY              Y02082
         AR    RCORE,RET                RESET FOR MOVE           YM5728
         LR    RF,R0                    R0 CONTAINS LNG OF FIELD TO BE
*                                       MOVED TO JFCBVOLS
         EX    RF,PDF04281              ENSURE IN USER CORE      Y02082
         MODESET EXTKEY=SUPR            KEY 0                    Y02082
         EX    RF,PDF04280              MOVE VOLS TO MAIN JFCB
         LA    RD,ONE(RD,RF)            INCREMENT RD TO NEXT     YM5728
*                                       VOLUMES IN USER BUFFER   YM5728
         SR    RCORE,RET                RESTORE WKAREA PTR
*                                       RCORE IS BUMPED BY VALUE IN RET
*                                       BY SUBRTN AT PDF04360
         L     RF,WTGPREFX              WTG PREFIX               Y02082
         STM   RB,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
PDF04144 EQU   *                        CHK FOR ALL VOLS MOVED   Y02082
         SETLOCK RELEASE,TYPE=LOCAL,    RELEASE LOCAL LOCK       Y02082*
               RELATED=(FREEMAIN,IFG0199E(PDF04142))             Y02082
         LM    RB,RET,IECREGSV-IECPREFX(RF) RESTORE SETLOCK REGS Y02082
         MODESET EXTKEY=DATAMGT         KEY 5                    Y02082
         EJECT
*                                                                YM5728
*        REG 0 = LENGTH OF VOLS MOVED - 1                        YM5728
*        REG 14 = OFFSET TO VOL SER FROM JFCBVOLS                YM5728
*        REG 15 = POINTER TO IECPREFX                            YM5728
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        YM5728
         LR    RD,R0                    LOAD LENGTH              YM5728
         LA    RD,K1(RD)                INCREMENT                YM5728
         LA    RC,JFCBVOLS(RET)         POINT TO VOLSER          YM5728
         XR    RB,RB                    INIT TO ZERO FOR LOOP    YM5728
         LA    RTIOT,PDTRCDAT           POINT TO ENQ AREA        YM5728
         USING PDTRCDAT,RTIOT                                    YM5728
*                                                                YM5728
PDF04150 EQU   *                        ENQ NEW VOL SERS         YM5728
*                                                                YM5728
         MVC   PDTRCDAT(K16),ENQLIST    INIT ENQLIST             YM5728
         L     RF,DXJSCBAD              LOAD JSCB ADDRESS        YM5728
         L     R0,JSCBTCBP-IEZJSCB(,RF) INITIATOR TCB POINTER    YM5728
         ENQ   (,(RC)),TCB=(0),RET=USE,MF=(E,PDTRCDAT+4),        YM5728X
               RELATED=(SYSZVOLS,IFG0194A(VUS02450))             YM5728
         DROP  RTIOT                                             YM5728
*                                                                YM5728
         LTR   RF,RF                    VOLUME ALREADY IN USE    YM5728
         BZ    PDF04155                 BRANCH IF NOT IN USE     YM5728
*                                                                YM5728
         CLI   K3(RF),K8                SEE IF TASK HAS RESOURCE YM5728
         BE    PDF04155                 BRANCH IF ALREADY HELD   YM5728
*                                                                YM5728
*    VOL SER REQUESTED ALREADY IN USE ELSEWHERE                  YM5728
*                                                                YM5728
         L     RF,WTGPREFX              GET PREFIX POINTER       YM5728
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     YM5728
         B     PDF04420                 BRANCH TO CONTINUE ABEND YM5728
*                                                                YM5728
PDF04155 EQU   *                        ENQ SUCCESSFUL           YM5728
*                                                                YM5728
         LA    RB,K6(RB)                BUMP TO NEXT VOLSER      YM5728
         LA    RC,K6(RC)                POINT TO NEXT VOL SER    YM5728
         CR    RB,RD                    CHECK FOR END            YM5728
         BL    PDF04150                 BRANCH IF MORE VOLS      YM5728
*                                                                YM5728
         L     RF,WTGPREFX              GET PREFIX POINTER       YM5728
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     YM5728
         EJECT
         LA    RET,ONE                  SET VOL SEQ NO. TO ONE
         LTR   RC,RC                    HAVE ALL VOLS BEEN MOVED
         BZ    PDF04320                 YES, TEST IF BUFFER TO BE FREED
*                                                                Y02134
PDF04160 EQU   *                        GET CORE FOR JFCB EXTENSION
*                                                                Y02082
*                                       DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         KEY 5                    Y02082
         LR    RTIOT,R1                 SAVE PTR TO WORK AREA
         IECRES GET,LV=L'DXJBF,PREFIX=YES,  GET CORE FOR Q MGR   Y02144*
               STM=(2,14,WTGPREFX),ID=JFWA                       Y02144
*
         LR    RF,R1                    SAVE JFCB EXT BUFFER     Y02134
         LA    R1,JFCBEXAD              JFCB EXTENSION TTR       Y02134
*
         EJECT
PDF04165 EQU   *                        LOCATE AND MOVE JFCB EXTENSION
*
         CLC   JFCBEXAD-JFCBEXAD(L'JFCBEXAD,R1),CONF0 VALID PTR  Y02134
         BZ    PDF04510                 BRANCH IF INVALID        YM5728
         MVC   DXWORK(L'JFCBEXAD),JFCBEXAD-JFCBEXAD(R1) SAVE PTR Y02134
*                                                                Y02134
         IECRES LOCJFCB,(R1)            LOCATE JFCB              Y02134
*
         MVC   DXJBF-DXJBF(L'DXJBF,RF),DXJBF-DXJBF(R1) MOVE EXT  Y02134
*                                                                Y02134
         CH    RET,CONH15               SEQ NO. GREATER THAN 15
         BNH   PDF04220                 NO, USE THIS EXTENSION   Y02134
         SH    RET,CONH15               SUBTR NO. VOLS IN EXT BLK
         B     PDF04165                 SET UP TO READ ANOTHER EXT
         EJECT
PDF04220 EQU   *                        CALC LNG FO MOVE TO JFCB
         LR    R1,RF                    R1 POINTS TO JFCB        YM5728
*                                       EXTENTION IN WORKAREA    YM5728
         MVC   PDMSGLNG(TWO),CONH16     MOVE CONSTANT TO WKAREA
         BAL   RF,PDF04360              GO TO COMMON RTN TO DETERMINE
*                                       NO. VOLS TO BE MOVED INTO JFCB
*                                       CALCULATE LNG OF MOVE AND
*                                       START POINT
         SR    RCORE,RET                RESTORE WKAREA PTR RCORE YM5728
*                                       IS BUMPED BY VALUE IN RETYM5728
*                                       BY SUBRTN AT PDF04360    YM5728
         L     RF,WTGPREFX              WTG PREFIX               Y02082
         STM   RB,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
         MODESET EXTKEY=SUPR                                     Y02082
PDF04222 EQU   *                        MOVE VOLS TO JFCB EXT    Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND, GET LOCAL LOCK   Y02082*
               RELATED=(FREEMAIN,IFG0199E(PDF04242))             Y02082
         LM    RB,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY              Y02082
         LR    RF,R0                    R0 CONTAINS LNG OF FIELD TO BE
*                                       MOVED TO EXTENSION BLOCK
         EX    RF,PDF04301              ENSURE IN USER CORE      Y02082
         MODESET EXTKEY=ZERO            KEY 0                    Y02082
         AR    R1,RET                   POINT TO VOL SER         YM5728
         EX    RF,PDF04300              MOVE VOLS TO EXTENSION BLOCK
         SR    R1,RET                   RESTORE POINTER          YM5728
         LA    RD,ONE(RF,RD)            BUMP PTR TO USER BUFFER  YM5728
         L     RF,WTGPREFX              WTG PREFIX               Y02082
         STM   RB,RET,IECREGSV-IECPREFX(RF) SAVE REGS            Y02082
PDF04242 EQU   *                        WRITE BACK JFCB EXT      Y02082
         SETLOCK RELEASE,TYPE=LOCAL,    RELEASE LOCAL LOCK       Y02082*
               RELATED=(FREEMAIN,IFG0199E(PDF04222))             Y02082
         LM    RB,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         EJECT
*                                                                YM5728
*        REG 0 = LENGTH OF VOLS MOVED - 1                        YM5728
*        REG 9 POINTS TO PD WORKAREA                             YM5728
*        REG 14 = OFFSET TO VOL SER FROM JFCB EXTENSION (PTR R1) YM5728
*        REG 15 = POINTER TO IECPREFX                            YM5728
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        YM5728
         LR    RD,R0                    LOAD LENGTH              YM5728
         LA    RD,K1(RD)                INCREMENT                YM5728
         LA    RC,K4(RET,R1)            POINT TO VOL SER         YM5728
         XR    RB,RB                    INIT TO ZERO FOR LOOP    YM5728
         LR    R1,RTIOT                 LOAD PD WORKAREA PTR     YM5728
         LA    RTIOT,PDTRCDAT           POINT TO ENQ AREA        YM5728
         USING PDTRCDAT,RTIOT                                    YM5728
*                                                                YM5728
PDF04250 EQU   *                        ENQ NEW VOL SERS         YM5728
*                                                                YM5728
         MVC   PDTRCDAT(K16),ENQLIST    INIT ENQLIST             YM5728
         L     RF,DXJSCBAD              LOAD JSCB ADDRESS        YM5728
         L     R0,JSCBTCBP-IEZJSCB(,RF) INITIATOR TCB POINTER    YM5728
         ENQ   (,(RC)),TCB=(0),RET=USE,MF=(E,PDTRCDAT+4),        YM5728X
               RELATED=(SYSZVOLS,IFG0194A(VUS02450))             YM5728
         DROP  RTIOT                                             YM5728
*                                                                YM5728
         LTR   RF,RF                    VOLUME ALREADY IN USE    YM5728
         BZ    PDF04255                 BRANCH IF NOT IN USE     YM5728
*                                                                YM5728
         CLI   K3(RF),K8                SEE IF TASK HAS RESOURCE YM5728
         BE    PDF04255                 BRANCH IF ALREADY HELD   YM5728
*                                                                YM5728
*    VOL SER REQUESTED ALREADY IN USE ELSEWHERE                  YM5728
*                                                                YM5728
         L     RF,WTGPREFX              GET PREFIX POINTER       YM5728
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     YM5728
         LR    R1,RTIOT                 RESTORE WORKAREA PTR     YM5728
         B     PDF04420                 BRANCH TO CONTINUE ABEND YM5728
*                                                                YM5728
PDF04255 EQU   *                        ENQ SUCCESSFUL           YM5728
*                                                                YM5728
         LA    RB,K6(RB)                BUMP TO NEXT VOLSER      YM5728
         LA    RC,K6(RC)                POINT TO NEXT VOL SER    YM5728
         CR    RB,RD                    CHECK FOR END            YM5728
         BL    PDF04250                 BRANCH IF MORE VOLS      YM5728
*                                                                YM5728
         L     RF,WTGPREFX              GET PREFIX POINTER       YM5728
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     YM5728
         EJECT
         MODESET EXTKEY=DATAMGT         KEY 5                    Y02082
         LA    RET,ONE                  SET VOL SEQ  TO ONE
         LR    R0,R1                    R0 POINTS TO JFCB        YM5728
         LA    R1,DXWORK                R1 POINTS TO JFCB PTR    YM5728
         IECRES WRJFCB,(1),(0)          WRITE BACK EXTENSION     YM5728
*
         LTR   RC,RC                    HAVE ALL VOLS BEEN MOVED
         BZ    PDF04310                 BRANCH IF YES TO TEST    YM5728
*                                       IF USER BUFFER FREED     YM5728
         LR    R1,R0                    R1 POINTS TO JFCB        YM5728
*                                       EXTENTION WORKAREA       YM5728
         LR    RF,R1                    AS DOES RF               YM5728
         B     PDF04165                 GO FILL NEXT EXTENSION BLK
PDF04280 MVC   JFCBVOLS(ZERO),ORG(RD)   MOVE VOLSERS TO JFCB
PDF04281 OC    ORG(ZERO,RD),ORG(RD)     CHECK IF IN USER KEY     Y02082
PDF04300 MVC   K4(K0,R1),ORG(RD)        MOVE IN VOL SERS         Y02134
PDF04301 OC    ORG(ZERO,RD),ORG(RD)     CHECK IF IN USER KEY     Y02082
         EJECT
PDF04310 EQU   *                        RESTORE PD WORKAREA ADDR YM5728
*
         LR    R1,RTIOT                 PROB DET WORKAREA        YM5728
*
*  FREEMAIN USER RECOVERY WORK AREA IF USER REQUESTED THAT IT BE FREED.
*
PDF04320 EQU   *                        CHK TO FREE USER BUFFER
*                                                                Y02082
*                                       USER KEY                 Y02082
*                                                                Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY              Y02082
         TM    TWO(RB),FREEBUF          USER BUFFER TO BE FREED
         BNO   PDF04520                 NO, GO FREE P.D. WKAREA
         LR    RD,R1                    SAVE PD WKAREA PTR
         LH    R0,0(,RB)                BUFFER LNG             @ZA01340
         ICM   R0,B'1000',THREE(RB)     SUBPOOL NO.            @ZA01340
         LR    R1,RB                    BUFFER PTR
         MODESET EXTKEY=DATAMGT         RESUME DATA MNGMT KEY  @ZA01340
*        ASSUME SAME STATE AS PD DCB ABEND EXIT X'11' SO THAT  @ZA01340
*        SUBPOOL NUMBER MEANS THE SAME AS IT DID FOR THE USER. @ZA01340
         LA    RF,PDF04330              POINT TO 'EXIT ROUTINE'@ZA01340
         IECRES UEXIT,STM=(2,13,WTGPREFX),EXITAD=(15)          @ZA01340
         LR    R1,RD                    RESTORE WKAREA PTR
         B     PDF04520                 PRESS FORWARD            Y02082
*
*  THE FOLLOWING FREEMAIN IS EXECUTED IN USER STATE.           @ZA01340
PDF04330 EQU   *                                               @ZA01340
         FREEMAIN R,LV=(0),A=(1)        FREEMAIN USER BUFFER   @ZA01340
         BR    RET                      RETURN FROM UEXIT      @ZA01340
         EJECT
***********************************************************************
*                                                                     *
*    THE NUMBER OF SLOTS TO BE FILLED IS CALCULATED BY SUBTRACTING
*    FROM THE VOLUME SEQUENCE NUMBER, 6(THE CAPACITY OF A JFCB + 1),
*    OR 16( THE CAPACITY OF A JFCB EXTENSION BLOCK + 1), AND MAKING
*    THE RESULT POSITIVE.  THIS IS THE NUMBER OF SLOTS AVAILABLE IN
*    THE JFCB OR CURRENT EXTENSION BLOCK.  THEN THIS NUMBER IS
*    SUBTRACTED FROM THE NUMBER OF VOLS TO BE CHANGED.  IF THIS RESULT
*    IS POSITIVE, THEN THERE ARE MORE SLOTS AVAILABLE THAN THERE ARE
*    VOLS TO BE CHANGED, AND THE NUMBER OF SLOTS IS SET EQUAL TO THE
*    NUMBER OF VOLS TO BE CHANGED.  IF THE RESULT IS NEGATIVE, THE
*    NUMBER OF SLOTS OPEN IS USED TO CALCULATE THE LENGTH OF THE FIELD
*    TO BE MOVED.
*
*    THE VALUE CALCULATED IS MULTIPLIED BY 6, AND 1 IS SUBTRACTED FROM
*    IT.  THIS IS THE LENGTH OF THE FIELD TO BE MOVED TO THE JFCB OR
*    EXTENSION.
*
*    THE VOLUME SEQUENCE NUMBER IS RESTORED IN A REGISTER, AND
*    MULTIPLIED BY 6.  THIS IS USED AS AN INDEX INTO THE JFCB OR
*    EXTENSION BLOCK.  IT IS ADDED TO RCORE, THE O/C/EOV WKAREA PTR SO
*    THAT REFERRING TO THE FIELDS BY SYMBOLIC NAME WILL AUTOMATICALLY
*    GET THE PROPER LOCATION.  THE PTR WILL BE RESTORED BY THE CALLING
*    RTN.
*                                                                     *
***********************************************************************
*                                                                     *
PDF04360 EQU   *                        CALC NO. OF SLOTS TO FILL
         SH    RET,PDMSGLNG             SUBTR CONST (6 FOR MAIN JFCB,
         LPR   RET,RET                  16 FOR EXTENSION) AND FIND
*                                       THAT CONSTANT'S COMPLEMENT OF
*                                       VOL SEQ NO.  THAT WILL BE THE
*                                       NO. OF SLOTS OPEN IN THE JFCB
*                                       OR EXTENSION BLOCK.
         SR    RC,RET                   SUBTR NO. SLOTS OPEN FROM NO.
*                                       VOLS TO BE CHANGED
         LR    R0,RET                   NO. SLOTS TO BE FILLED
         BNM   PDF04380                 IF RESULT IS NOT NEGATIVE
*                                       FIND START OF MOVE
         AR    RET,RC                   IF NEGATIVE, THERE ARE MORE
*                                       SLOTS THAN VOLS. REDUCE NO.
*                                       SLOTS TO EQUAL NO. VOLS.
*                                       COUNT EQUAL TO ZERO.
         LR    R0,RET                   NO. SLOTS TO BE FILLED
         SR    RET,RC                   RESTORE COMPLEMENT OF VOL SEQ
*                                       NUMBER
         SR    RC,RC                    VOL COUNT = 0
PDF04380 EQU   *                        CALC LNG OF MOVE & START POINT
         MH    R0,CONH6                 MULTIPLY BY VOLID LNG
         BCTR  R0,ZERO                  SUBTR ONE FOR EX
         SH    RET,PDMSGLNG             RESTORE VOLUME
         LPR   RET,RET                  SEQUENCE NUMBER
         BCTR  RET,ZERO                 SUBTR ONE FOR USE AS INDEX
         MH    RET,CONH6                MULTIPLY BY VOLID LNG
         AR    RCORE,RET                ADD TO WKAREA PTR FOR USE
*                                       AS INDEX
         BR    RF                       RETURN TO CALLER
         EJECT
PDF04420 EQU   *                        CHK FOR VALID DELAY ABEND
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02144
         TM    PDABCODE+ONE,DEL         IS DELAY VALID FOR THIS ABEND
         BNO   PDF04480                 NO, ABEND
         OI    JFCBMASK+FOUR,JFCABEND   INDICATE A DELAYED ABEND YM1195
PDF04430 EQU   *                        CHK FOR A.M. EXEC CALL   YM1195
         MVC   DXABCODE,PDABCODE        ABEND CODE TO WORKAREA   YM1342
         MVC   DXRETCOD,PDRETCOD        RETURN CODE TO WORKAREA  YM1342
         NI    DCBOFLGS,FULL-DCBBUSY    TURN OFF BUSY BIT
         L     RDCB,DXUDCBAD            USER'S DCB               Y02080
         MODESET KEYADDR=DXUKEY,WORKREG=15 GET INTO USER'S KEY   Y02080
         NI    DCBOFLGS,FULL-DCBBUSY    TURN OFF BUSY BIT        Y02080
         MODESET EXTKEY=DATAMGT         RETURN TO DM KEY         Y02080
         L     RDCB,DXPDCBAD            RETURN TO COPIED DCB     Y02080
         LA    RET,FOUR                 LOAD BR TABLE ERR CODE
         L     RF,DXATCOM3              GET RRPLIST PTR          Y02144
         USING RRPLIST,RF                                        Y02144
         TM    RRFLAGS1,RRFAMEXG+RRFAMEXR  DID AN OPEN A.M.      Y02144
*                                       EXECUTOR CALL PROB DET   Y02144
         BNM   PDF04540                 NO, GET OUT              Y02144
         USING WTGENTRY,RWTGC           DEFINE BASE TO WTG ENTRY YM3018
         XC    WTGIDTTR,WTGIDTTR        ZERO ID AND EPA FIELDS   Y03018
         LA    RWTGC,WTGENTRY-WTG(,RWTG) PT TO FIRST WTG ENTRY   YM3907
*                                                                YM3018
*        ZERO THE EPA FIELD OF THE FIRST WTG ENTRY WITH A        YM3018
*        NON-ZERO ID SINCE THAT FIELD MAY NOT CONTAIN AN EPA.    YM3018
*        THE OPEN/CLOSE MODULE THAT WILL NOW BE GIVEN CONTROL    YM3018
*        RELIES ON THAT FIELD BEING A VALID EPA OR ZERO WHEN     YM3018
*        GIVING CONTROL TO THE IGG MODULE WHOSE NAME IS SET UP   YM3018
*        FROM THE FIRST WTG ENTRY WITH A NON-ZERO ID.            YM3018
*                                                                YM3018
PDF04434 EQU   *                        CHK WTG ENTRIES          YM3018
         CLI   WTGIDTTR,ZERO            IS ENTRY ID ZERO         YM3018
         BNE   PDF04438                 BR NO TO ZERO EPA FIELD  YM3018
         LA    RWTGC,L'WTGENTRY(RWTGC)  INCR TO NEXT WTG ENTRY   YM3018
         B     PDF04434                 BR TO CHK NEXT WTG ENTRY YM3018
PDF04438 EQU   *                        ZERO EPA, PT TO NEXT MOD YM3018
         XC    WTGIDTTR+TWO(THREE),WTGIDTTR+TWO  ZERO EPA FIELD  Y03018
         DROP  RWTGC                                             YM3018
         LA    RC,OPAMSET               PT TO IFG0196V NAME/EPA  YM3122
         CLI   WTGMODNM+FOUR,CHAR1      ENTRY FROM OPEN EXEC     YM1195
         BE    PDF04440                 BRANCH YES               YM1195
         LA    RC,CLAMSET               PT TO IFG0200W NAME/EPA  YM3122
         LA    RET,TWELVE               LOAD BR TABLE ERROR CODE YM1195
PDF04440 EQU   *                        GO TO OPEN/CLOSE MODULE  YM1195
*                                                                YM1195
*        RETURN TO THE OPEN/CLOSE MODULE THAT WILL SET UP        YM1195
*        REGISTERS FOR RETURN TO THE ACCESS METHOD EXECUTORS     YM1195
*        UNDER A DELAYED/IGNORED ABEND CONDITION.                YM1195
*                                                                YM1195
         IECRES LOAD,MODNM=(RC),PREFIX=WTGPREFX,BRANCH=DIRECT    YM3122
         EJECT
PDF04450 EQU   *                        VALIDITY CHK IGNORE ABND YM1195
         TM    PDABCODE+ONE,IGN         CAN THIS ERROR BE IGNORED
         BNO   PDF04480                 NO, ABEND
PDF04460 EQU   *                        INDICATE IGNORE ABEND
         OI    DXATOPEN,DXATIGN         AN IGNORED ABEND EXISTS  Y02144
         B     PDF04430                 GET OUT                  Y02144
PDF04480 EQU   *                        CHK FOR ABEND IN CNTRL AT EOV
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
         L     RF,CVTPTR                POINT TO CVT
         L     RF,CVTTCBP-CVT(RF)       TCB DOUBLE WORDS
         L     RF,FOUR(RF)              POINT TO CURRENT TCB
         TM    TCBFLGS1-TCB(RF),TCBFA   IS ABEND IN CONTROL
         BNO   PDF04485                 NO,ISSUE ABEND           YM0899
         TM    PDABCODE,EOV             EOV CALLED BY ABEND      A51158
         BNO   PDF04460                 NO, IGNORE ERROR         A51158
*                                       IF EOV IGNORES ERROR     A51158
*                                       WHEN CALLED BY ABEND, IT A51158
*                                       MAY CAUSE ABEND TO PROG  A51158
*                                       PROG CHECK BECAUSE ABEND A51158
*                                       DOESN'T EXPECT TO GET    A51158
*                                       CONTROL BACK WITH A      A51158
*                                       CLOSED DCB               A51158
         EJECT
PDF04485 EQU   *                        SET UP TO ISSUE ABEND    YM0899
         MVC   DXABCODE,PDABCODE        ABEND CODE TO WORKAREA   YM1342
         MVC   DXRETCOD,PDRETCOD        RETURN CODE TO WORKAREA  YM1342
         L     RDCB,DXUDCBAD            RESTORE CALLERS REG 2  @ZA10633
         LM    RTIOT,RET,DXREG9         RESTORE CALLERS REGS   @ZA10633
*                                       4-14. CANNOT RESTORE   @ZA03152
*                                       REG 3-NEEDED BY ABEND  @ZA03152
*                                       MACRO                  @ZA03152
         SR    RF,RF                    ZERO RETURN CODE REG
         IC    RF,PDRETCOD              RETURN CODE IN REG 15
         LH    R1,PDABCODE              ABEND CODE IN REG 1
         SRL   R1,FOUR                  ZERO MASK BITS
         ABEND (1),DUMP,,SYSTEM,        SYSTEM ABEND WITH DUMP   Y02080*
               DUMPOPT=SNAPLIST                                  Y02144
         EJECT
PDF04510 EQU   *                        RESTORE PD WORKAREA ADDR YM5728
*
         LR    R1,RTIOT                 PROB DET WORKAREA        YM5728
*
PDF04520 EQU   *                        GO RETRY               @ZA01291
         MODESET EXTKEY=DATAMGT         DATA MGMNT KEY         @ZA01291
         L     RET,DXREGE               RESTORE REG 14           Y02134
         MVC   ORG(FIVE,RWTGC),DXRETMOD MOVE RETURN MOD ID TO WTG TBL
         MVC   DXRETMOD,DXSAVMOD        SET UP RET MOD           Y02134
         MVC   DXRETCOD,DXSAVOFF        RESTORE RETURN OFFSET    Y02134
PDF04540 EQU   *                        RETURN VIA BRANCH QUEUED
         LA    RF,DXDCB                 PTR TO WKAREA DCB
         ST    RF,IOBDCBPT-ONE          RESTORE IOB DCB PTR
*                                       IN CASE IT WAS MODIFIED
*                                       TRYING TO RECOVER
         LM    RTIOT,RD,DXREG9          RESTORE REGS 9-13
         LM    R0,R1,DXREG0             RESTORE REGS 0-1
         IECRES LOAD,BRANCH=QUEUED                               Y02080
         EJECT
ENQLIST  DC    A(0)                     DEQ LIST                 YM5728
         ENQ   (SYSZVOLS,,E,6,SYSTEM),TCB=,RET=USE,MF=L          YM5728
SYSZVOLS DC    CL8'SYSZVOLS'            VOL SER ENQ MAJOR NAME   YM5728
         EJECT
         DS    0F
CONF0    DC    F'0'                     CONSTANT OF ZERO         Y02134
CONH5    DC    H'5'                     CONST USED IN RECOVERY
CONH6    DC    H'6'                     CONST USED IN RECOVERY
CONH15   DC    H'15'                    CONST USED IN RECOVERY
CONH16   DC    H'16'                    CONST USED IN RECOVERY
SNAPLIST SNAP  SDATA=TRT,MF=L           READ ONLY SNAP LIST FOR  Y02144*
                                        ABEND OPTION DUMPOPT     Y02144
         XCTLTABL ID=(OPAMSET,IFG0196V,CLAMSET,IFG0200W),        Y02144*
               BRT=YES,LENGTH=                                   Y02144
         EJECT
         IECPDSCT
         EJECT
         IECDSECS MAIN,TCB,CVT,DCB,TIOT,WTG,PREFX,PSA,JSCB,      YM5728*
               RRPL,EXPAND=YES                                   Y02144
         END
