         TITLE 'IFG0193E                      CREATE STANDARD LABEL ROUT
               TINE'                                             Y02134
IFG0193E CSECT
         ENTRY IFG0553E                 ALIAS ENTRY POINT        Y02134
IFG0553E EQU   IFG0193E                 ALIAS ENTRY POINT        Y02134
*                                                                     *
***********************************************************************
*                                                                     *
*             VS2 RELEASE 030 DELETIONS/CHANGES                       *
*0000390999,393299                                             @ZA08273
*0000                                                          @ZA10546
*             VS2 SU32 DELETEIONS                                     *
*                                                              @G32DSMI
*                                                                     *
* MODULE NAME = IFG0193E (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = CREATE STANDARD LABEL ROUTINE                    *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1A. IF A SPECIFIC VOLUME REQUEST HAS BEEN MADE AND THE       *
*        SYSTEM HAS RACF TAPE VOLUME PROTECTION, THEN ISSUE THE       *
*        RACHECK MACRO ON THE SPECIFICALLY PROVIDED SL/AL VOLUME      *
*        SERIAL NUMBER (BEFORE ISSUING MESSAGE IEC704A) TO DETERMINE  *
*        IF THE CALLER IS AUTHORIZED TO CREATE THE SL/AL VOLUME.      *
*                                                                     *
*        1B. ISSUE MESSAGE IEC704A TO GET SERIAL NUMBER AND OWNER'S   *
*        NAME FROM THE OPERATOR.                                      *
*                                                                     *
*        1C. IF A NON-SPECIFIC VOLUME REQUEST HAS BEEN MADE AND       *
*        THE SYSTEM HAS RACF TAPE VOLUME PROTECTION, THEN ISSUE       *
*        THE RACHECK MACRO ON THE OPERATOR-PROVIDED SL/AL VOLUME      *
*        SERIAL NUMBER (AFTER ISSUING MESSAGE IEC704A) TO DETERMINE   *
*        IF THE CALLER IS AUTHORIZED TO CREATE THE SL/AL VOLUME.      *
*                                                                     *
*        2. CONSTRUCT AND WRITE A STANDARD OR ANSII LABEL AND A TAPE  *
*        MARK.  ANSII LABELS ARE TRANSLATED BEFORE BEING WRITTEN.     *
*                                                                     *
*        3. EXIT FOR A REMOUNT IF AN I/O ERROR OCCURS RATHER THAN     *
*        ISSUING A 613 ABEND.                                         *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0193E FROM OPEN                                    *
*               IFG0553E FROM EOV                                     *
*                                                                     *
*    PURPOSE = TO CREATE A STANDARD LABELED TAPE.                     *
*                                                                     *
*    LINKAGE = IECRES LOAD,BRANCH=QUEUED,MODID=ID3E,BRCODE=VALUE      *
*                                                                     *
* INPUT = AS FOLLOWS -                                                *
*                                                                     *
*        RDCB (REG 2) = CONTENTS OF CURRENT PARMLIST ENTRY            *
*                       CONTAINING DCB POINTER                        *
*        RCORE (REG 4) = OPEN/EOV WORK AREA POINTER                   *
*        REG 5 = POINTER TO RESIDENT ROUTINE                          *
*        RWTG (REG 6) = POINTER TO OPEN/EOV WTG TABLE                 *
*        RPARC (REG 7) = POINTER TO CURRENT ENTRY IN PARMLIST         *
*        RWTGC (REG 8) = POINTER TO CURRENT WTG ENTRY                 *
*        RTIOT (REG 9) = POINTER TO CURRENT TIOT ENTRY                *
*        RUCB (REG 10) = POINTER TO FIRST UCB                         *
*        RET (REG 14) = VALUE 0 = INITIAL ENTRY, 4 = RETURN FROM WTOR *
*                                                                     *
* OUTPUT = STANDARD LABEL ON TAPE OR TAPE REJECTED                    *
*                                                                     *
* EXIT-NORMAL = IFG0194J R14 = 4 REJECT VOLUME MESSAGE                *
*                            = 36 WTOR MSG IEC704A L DDD              *
*               IFG0194F R14 = 16 TAPE MOUNT/VERIFY ROUTINE           *
*                                                                     *
* EXIT-ERROR = IFG0194A R14 = 16 DISMOUNT RACF-PROTECTED VOLUME       *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG0194A,IFG0194F,IFG0194J.                           *
*                                                                     *
*    DATA AREAS = MAIN WORKAREA, WTG TABLE.                           *
*                                                                     *
*    CONTROL BLOCK = CVT,TCB,TIOT,DCB,UCB.                            *
*                                                                     *
* TABLES = SEE WTG TABLE AND XCTLTABL.                                *
*                                                                     *
* MACROS = IECRES,XLATE,EXCP,MODESET,XCTLTABL,IECDSECS,IECEQU,RACHECK.*
*                                                                     *
* CHANGE ACTIVITY = SEE DELETIONS/CHANGES SECTION AFTER CSECT CARD.   *
*                                                                     *
***********************************************************************
         EJECT
         USING FORCORE,RCORE            WORK AREA
         USING WTG,RWTG                 WHERE-TO-GO              Y02080
         USING TIOENTRY,RTIOT           TIOT ENTRY
         USING USERPRML,RPARC           CURRENT ENTRY          @G32DSMI
         USING IHADCB,RDCB              DCB
         USING UCBOB,RUCB               UCB
         BALR  RBASE,K0                 SET BASE REGISTER
         USING *,RBASE
*                                                                Y02134
         B     CSL00000(RET)            BRANCH TO SPECIFD OFFSET Y02134
*                                                                Y02134
CSL00000 EQU   *                        BRANCH TABLE             Y02080
*                                                                Y02134
         B     CSL00500                 GO TO INITIAL ENTRY    @G32DSMI
         B     CSL02000                 RETURN FROM WTOR         Y02134
         EJECT
*                                                                Y02134
***************************************************************@G32DSMI
*                                                              @G32DSMI
*        CHECK RACF AUTHORIZATION FOR SPECIFICALLY REQUESTED   @G32DSMI
*        VOLUME SERIAL BEFORE ISSUING MESSAGE IEC704A.         @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
CSL00500 EQU   *                        CHK RACF AUTHORIZATION @G32DSMI
*                                                              @G32DSMI
         CLC   DXVOLSR2,SCRTCH          CHK IF NONSPECIFIC REQ @G32DSMI
         BE    CSL01000                 BRANCH IF NONSPECIFIC  @G32DSMI
         LA    R0,DXVOLSR2              PT TO SPECIFIC VOLSER  @G32DSMI
         BAL   RET,CSL09500             GO CHK FOR RACF AUTH   @G32DSMI
*                                                              @G32DSMI
         LTR   RF,RF                    CHK FOR ERROR          @G32DSMI
         BNZ   CSL10000                 ABEND - INT CODE IN R0 @G32DSMI
         EJECT                                                 @G32DSMI
*                                                                Y02134
*****************************************************************Y02134
*
*  GET VOLUME LABEL INFORMATION
*
*  SET UP TO WRITE TO OPERATOR THE FOLLOWING MESSAGE
*
*              IEC704A L DDD
*
*  WHERE L INDICATES THAT LABEL INFORMATION IS REQUIRED FOR THE
*  OUTPUT TAPE VOLUME MOUNTED ON DEVICE DDD.  OPERATOR RESPONSE-
*
*              REPLY XX, 'SER,OWNER'
*
*  WHERE SER IS THE 6-DIGIT VOLUME SERIAL NUMBER AND OWNER IS A
*  10 CHARACTER FIELD FOR OWNER'S NAME OR SIMILAR IDENTIFICATION.
*                                                                Y02134
*****************************************************************Y02134
*
CSL01000 EQU   *                        SET UP TO ISSUE MESSAGE  Y02134
*                                                                Y02134
         MVC   DXRETMOD,ID3E3E          RETURN ID TO SAVE AREA   Y02134
         MVI   DXRETCOD,K4              SET RETURN INDICATOR     Y02134
*                                                                Y02134
         MVI   DXLBL,BLANK              SET 1ST CHAR BLANK       Y02134
         MVC   DXLBL+K1(L'DXLBL-K1),DXLBL PROPAGATE BLANKS       Y02134
         LA    R1,VOLOWNER              POINT TO REPLY AREA      Y02134
*                                                                Y02134
         LA    R0,K17                   LOAD SL LENGTH OF 17     Y02134
         TM    JFCBLTYP,JFCBAL          ANSI LABEL SPECIFIED
         BZ    CSL01100                 NO, BRANCH               Y02134
         LA    R0,K21                   LOAD ANSI LENGTH OF 21   Y02134
*                                                                Y02134
CSL01100 EQU   *                        SET REPLY LENGTH         Y02134
*                                                                Y02134
         SLL   R0,K24                   MOVE LENGTH TO HI BYTE   Y02134
         OR    R1,R0                    SET UP WTOR PARM         Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID3E4J,BRCODE=K36,BRANCH=QUEUED       Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        RETURN HERE WITH OPERATOR REPLY                         Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
CSL02000 EQU   *                        WAIT FOR OPERATOR REPLY  Y02134
*                                                                Y02134
         IECRES WAIT                    WAIT FOR OPERATOR REPLY  Y02134
*                                                                Y02134
         OC    VOLSERNO(K7),VOLOWNER    RETRIEVE 1ST SEVEN CHARS Y02134
         CLC   CHRM9T,VOLSERNO          IF OPER WANTS DISMOUNT
         BE    CSL08000                 BRANCH TO REJECT VOLUME  Y02134
*                                                                Y02134
         LA    RD,K7                    LOOK THRU 7 CHRS FOR COMMA
         LA    R1,VOLSERNO              POINT IN FRONT OF VOLSER Y02134
*                                                                Y02134
CSL03000 EQU   *                        LOOP TO CHECK REPLY      Y02134
*                                                                Y02134
         CLI   K0(R1),COMMA             IS THIS A COMMA          Y02134
         BE    CSL03200                 BRANCH IF COMMA          Y02134
*                                                                Y02134
         CLI   K0(R1),BLANK             IS THIS A BLANK          Y02134
         BE    CSL03200                 BRANCH IF BLANK          Y02134
*                                                                Y02134
         LA    R1,K1(R1)                INCREMENT POINTER        Y02134
         BCT   RD,CSL03000              LOOP TO CHECK NEXT CHAR  Y02134
         B     CSL01000                 INVALID REPLY            Y02134
*                                                                Y02134
CSL03200 EQU   *                        CHECK FOR INVALID REPLY  Y02134
*                                                                Y02134
         LA    R0,K7                    CHECK LENGTH             Y02134
         CR    RD,R0                    FIRST CHAR ',' OR BLANK  Y02134
         BE    CSL01000                 BRANCH INVALID REPLY     Y02134
*                                                                Y02134
         MVI   K0(R1),BLANK             SET COMMA TO BLANK       Y02134
         MVC   K1(K6,R1),K0(R1)         PROPAGATE BLANKS         Y02134
*                                                                Y02134
         MVC   DXVOLSR1,VOLSERNO        SERIAL TO REJECT SLOT    Y02134
*                                                                YM8218
         CLC   DXVOLSR2,SCRTCH          CHECK FOR NON-SPEC REQ   YM8218
         BE    CSL03300                 BRANCH IF NON-SPEC       YM8218
*                                                                YM8218
         CLC   DXVOLSR2,DXVOLSR1        CHECK IF CORRECT REPLY   YM8218
         BE    CSL03350                 BRANCH IF CORRECT      @G32DSMI
*                                                                YM8218
         CLC   DXVOLSR1,REPLYU          CHECK FOR REPLY U        YM8218
         BNE   CSL01000                 BRANCH IF BAD REPLY      YM8218
*                                                                YM8218
         MVC   DXVOLSR1,DXVOLSR2        MAKE VOL SER SAME AS REQ YM8218
         MVC   VOLSERNO,DXVOLSR2        MOVE VOL SER TO LABEL  @ZA10546
         B     CSL03350                 GO FILL IN OWNER INFO  @G32DSMI
*                                                                YM8218
CSL03300 EQU   *                        CHK RACF AUTHORIZATION @G32DSMI
*                                                                Y02134
         LA    R0,DXVOLSR1              PT TO OPERATOR REPLY   @G32DSMI
         BAL   RET,CSL09500             GO CHK RACF AUTH FOR   @G32DSMI*
                                        OPERATOR-PROVIDED      @G32DSMI*
                                        VOLSER (NON-SPEC REQ)  @G32DSMI
*                                                              @G32DSMI
         LTR   RF,RF                    CHK FOR ERROR          @G32DSMI
         BNZ   CSL01000                 BR IF RACF AUTH ERROR  @G32DSMI*
                                        TO REISSUE MSG IEC704A @G32DSMI
*                                                                YM8218
CSL03350 EQU   *                        FILL IN OWNER INFO     @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
*        FILL IN OWNER INFORMATION                             @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
         TM    JFCBLTYP,JFCBAL          ANSI LABELS SPECIFIED    Y02134
         BO    CSL03400                 BRANCH IF SPECIFIED      Y02134
*                                                                Y02134
         MVC   VOLOWNER,VOLOWNER-VOLSERNO+K1(R1) OWNER INFO    @ZA08273
         MVI   VOLOWNER+K10,BLANK       SET DELIMITER            Y02134
         MVC   VOLOWNER+K10+K1(K21-K10-K1),VOLOWNER+K10 PROPAGAT Y02134
         B     CSL03500                 BRANCH AROUND AL         Y02134
*                                                                Y02134
CSL03400 EQU   *                        AL OWNER INFORMATION     Y02134
*                                                                Y02134
         MVC   AVOLOWNR,VOLOWNER-VOLSERNO+K1(R1) OWNER INFO    @ZA08273
         MVI   AVOLOWNR+K14,BLANK       SET DELIMITER            Y02134
         MVC   AVOLOWNR+K14+K1(K21-K14-K1),AVOLOWNR+K14 PROPAGAT Y02134
         EJECT
*                                                                Y02134
CSL03500 EQU   *                        COMPLETE VOL1 LABEL      Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        FINISH VOL1 LABEL                                       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         MVC   VOLLABI(L'AVOL1T),AVOL1T   PUT IN LABEL IDENTIFIER
         MVI   VOLSEC,CHAR0             SECURITY
*                                                                Y02134
         TM    JFCBLTYP,JFCBAL          ANSI LABEL SPECIFIED
         BZ    CSL04000                 NO, GO WRITE LABEL       Y02134
*                                                                Y02134
*****************************************************************Y02134
*
*   MAKE CHANGES REQUIRED TO CREATE AN ANSI LABEL
*
*****************************************************************Y02134
*                                                                Y02134
         MVI   VOLSEC,BLANK             ACCESSABILITY BYTE TO BLANK
         MVI   LABSTAND,CHAR1           SET LABEL STANDARD
*
*****************************************************************Y02134
*                                                                Y02134
*              TRANSLATE LABEL DATA TO ASCII CODE BEFORE WRITING
*
*****************************************************************Y02134
*                                                                Y02134
         XLATE DXLBL,K80,TO=A           TRANSLATE LABEL DATA
*                                                                Y02134
         EJECT
*                                                                Y02134
CSL04000 EQU   *                        PREPARE TO WRITE LABEL   Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        REWIND TO LOAD POINT                                    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         MVC   DXCCW1,ACCWT             GET BASIC CCW FOR REWIND
         EXCP  DXIOB                                             Y02134
*                                                                Y02134
         IECRES WAIT                                             Y02134
*                                                                Y02134
         TM    DXECB,ECBNOERR           TEST FOR I/O ERROR       Y02134
         BNO   CSL08000                 BRANCH IF I/O ERROR      Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        WRITE OUT THE LABEL                                     T02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         ST    RCORE,DXCCW1             ADDR OF LABEL AREA       Y02134
         MVI   DXCCW1,CCWWRTAP          1ST CCW IS WRITE VOL1    Y02134
*                                                                Y02134
         EXCP  DXIOB                                             Y02134
*                                                                Y02134
         IECRES WAIT                                             Y02134
*                                                                Y02134
         TM    DXECB,ECBNOERR           TEST FOR I/O ERROR       Y02134
         BNO   CSL08000                 BRANCH IF I/O ERROR      Y02134
*                                                                Y02134
         EJECT
*
*****************************************************************Y02134
*                                                                Y02134
*        WRITE 1 TAPE MARK AT END OF LABEL                       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
CSL07000 EQU   *                        WRITE TAPE MARK          Y02134
*                                                                Y02134
         MVC   DXCCW1,ACCWT             MOVE IN REWIND CCW       Y02134
         MVC   DXCCW2,ACCWT             WILL NEED 2 CCWS         Y02134
         MVI   DXCCW1,CCWWTM            1ST CCW IS WTM           Y02080
         MVI   DXCCW1+K4,CCWCMDCH       CONNECT TO NEXT CCW      Y02134
         MVI   DXCCW2,CCWNOP            GET NOP CODE             Y02134
*                                                                Y02134
         EXCP  DXIOB                                             Y02134
*                                                                Y02134
         IECRES WAIT                                             Y02134
*                                                                Y02134
         TM    DXECB,ECBNOERR           TEST FOR I/O ERROR       Y02134
         BNO   CSL08000                 BRANCH IF I/O ERROR      Y02134
*                                                                Y02134
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
*                                                                Y02134
         NI    UCBSTAT,ALLBITS-UCBDADI  TURN OFF SL INDICATOR    Y02134
         NI    UCBSTAB,ALLBITS-UCBBSTR  TURN OFF AL INDICATOR    Y02134
         NI    UCBTFL1,ALLBITS-UCBNSLTP TURN OFF NSL INDICATOR   Y02134
         NI    UCBTFL1,ALLBITS-UCBNLTP  TURN OFF NL INDICATOR    Y02134
*                                                                Y02134
         TM    JFCBLTYP,JFCBAL          TEST FOR AL SPECIFIED    Y02134
         BO    CSL07100                 BRANCH IF AL SPECIFIED   Y02134
*                                                                Y02134
         OI    UCBSTAT,UCBDADI          SET SL INDICATOR         Y02134
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         B     CSL09000                 RETURN TO VERIFY         Y02134
*                                                                Y02134
CSL07100 EQU   *                        INDICATE ASCII MOUNTED   Y02134
*                                                                Y02134
         OI    UCBSTAB,UCBBSTR          SET AL INDICATOR         Y02134
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         B     CSL09000                 RETURN TO VERIFY         Y02134
*                                                                Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        REJECT VOLUME CURRENTLY MOUNTED                         Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
CSL08000 EQU   *                        GO TO 4J                 Y02134
*                                                                Y02134
         NI    DCBIFLGS,X'FF'-DCBIFPIO  TURN OFF ERROR FLAGS     Y02134
         NI    JFCBMASK+K5,LBWTRI9T     TURN OFF LBL ERR INDICATORS
*                                                                Y02134
         MVC   DXRETMOD,ID3E4F          SET UP RETURN TO 4F      Y02134
         MVI   DXRETCOD,K4              4F MOUNT/VERIFY OFFSET   Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID3E4J,BRCODE=K4,BRANCH=QUEUED        Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        RETURN TO VERIFY VOLUME                                 Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
CSL09000 EQU   *                        CHECK FOR DISP=MOD       YM8218
*                                                                YM8218
         CLC   DXVOLSEQ,ONE9T           CHECK FOR FIRST VOLUME   YM8218
         BNE   CSL09050                 BRANCH, BYPASS NEW-MOD   YM8218
         TM    JFCBIND2,JFCOLD          DISP=MOD                 YM8218
         BO    CSL09050                 BR IF NOT- CONTINUE      YM8218
*                                                                YM8218
         OI    JFCBIND2,JFCNEW          CHANGE 'MOD' TO 'NEW'    YM8218
         OI    JFCBFLG2,JFCMODNW        INDICATE THAT 'MOD' WAS  YM8218
*                                       CHANGED TO 'NEW'         YM8218
CSL09050 EQU   *                        CONTINUE                 YM8218
*                                                                Y02134
         NI    DCBIFLGS,X'FF'-DCBIFPIO  TURN OFF ERROR FLAGS     Y02134
         NI    JFCBMASK+K5,LBWTRI9T     TURN OFF LBL ERR INDICATORS
*                                                                Y02134
         IECRES LOAD,MODID=ID3E4F,BRCODE=K16,BRANCH=QUEUED       Y02134
         EJECT
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
*        CHECK FOR RACF AUTHORIZATION TO CREATE VOLUME SERIAL  @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
CSL09500 EQU   *                        CHK RACF AUTHORIZATION @G32DSMI
*                                                              @G32DSMI
         L     RB,DXJSCBAD              LOAD JSCB ADDRESS      @G32DSMI
         USING IEZJSCB,RB               JSCB ADDRESSABILITY    @G32DSMI
         TM    JSCBSWT1,JSCBPASS        TEST IF RAC CHECKING   @G32DSMIX
                                        SHOULD BE BYPASSED     @G32DSMI
         BO    CSL09900                 BRANCH IF BYPASS SET   @G32DSMI
         L     RB,CVTPTR                LOAD CVT ADDRESS       @G32DSMI
         USING CVT,RB                   CVT ADDRESSABILITY     @G32DSMI
         L     RB,CVTRAC                LOAD RAC CVT ADDRESS   @G32DSMI
         LTR   RB,RB                    CHECK IF RACF ACTIVE   @G32DSMI
         BZ    CSL09900                 RACF NOT ACTIVE        @G32DSMI
         USING RCVT,RB                                         @G32DSMI
         TM    RCVTSTA1,RCVTTAPE        TEST FOR TAPE VOLUME   @G32DSMIX
                                        PROTECTION OPTION      @G32DSMI
         BNO   CSL09900                 BRANCH IF NOT          @G32DSMI
         DROP  RB                                              @G32DSMI
         MVC   DXCCW4(RACKLNTH),RACKLIST   MOVE IN RACHECK     @G32DSMIX
                                        PARAMETER LIST         @G32DSMI
*                                                              @G32DSMI
         LA    RB,DXCCW4                ADDR OF RACHECK LIST   @G32DSMI
         USING ACHKLIST,RB                                     @G32DSMI
         CLC   DXVOLSR2,SCRTCH          NON - SPECIFIC REQUEST @G32DSMI
         BNE   CSL09530                 NO - SKIP SETTING FLAG @G32DSMI
         OI    ACHKFLG1,ACHKLOGF        SET LOG = NOFAIL       @G32DSMI
CSL09530 EQU   *                        SPECIFIC REQUEST       @G32DSMI
         CLC   CSLEOV,WTGMODNM+K3       EOV                    @G32DSMI
         BNE   CSL09560                 NO                     @G32DSMI
         TM    DXDCBLST,X02             INPUT REQUEST          @G32DSMI
         BZ    CSL09560                 YES                    @G32DSMI
         LA    RF,DXOLDVOL              ADDRESS OF LAST VOL SER@G32DSMI
         ST    RF,ACHKOVOL              PUT IN PARM LIST       @G32DSMI
         DROP  RB                                              @G32DSMI
CSL09560 EQU   *                                               @G32DSMI
         RACHECK ENTITY=((R0)),MF=(E,DXCCW4)   CHECK USER'S    @G32DSMI*
                                        AUTHORIZATION TO       @G32DSMI*
                                        CREATE THIS VOL SER    @G32DSMI
*                                                              @G32DSMI
         LA    RB,K8                    SET REG FOR UNAUTH     @G32DSMI
         CR    RF,RB                    TEST FOR UNAUTHORIZED  @G32DSMI
         BE    CSL09700                 BR IF USER NOT AUTH    @G32DSMI
         BL    CSL09900                 BR IF AUTH (RC=0)      @G32DSMI
*                                        OR NOT DEFINED (RC=4) @G32DSMI
*
*        NOT SAME VOLUME SET  RC=12                            @G32DSMI
*
CSL09600 EQU   *                        EOV RACF INCONSISTENCY @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
*        AN INCONSISTENT RACF DEFINITION EXISTS AT EOV         @G32DSMI
*        BETWEEN THE FIRST VOLUME AND THE CURRENTLY            @G32DSMI
*        SPECIFIED VOLUME. SET UP REG 0 WITH THE INTERNAL      @G32DSMI
*        CODE FOR A 937-3C OR A 937-40 ABEND.                  @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
         L     R1,DXDEBXAD              ADDRESS OF DEB EXTN    @G32DSMI
         USING DEBXTN,R1                                       @G32DSMI
         LA    R0,EABD006               SET FOR 937-3C         @G32DSMI
         TM    DEBXFLG1,DEBXDSSI        FIRST VOLUME DEFINED   @G32DSMI
         BZR   RET                      YES RETURN             @G32DSMI
         LA    R0,EABD007               SET FOR 937-40         @G32DSMI
         BR    RET                      RETURN                 @G32DSMI
*                                                              @G32DSMI
CSL09700 EQU   *                        USER NOT AUTHORIZED    @G32DSMI
*                                                              @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
*        THE USER IS NOT AUTHORIZED TO CREATE THE SPECIFED     @G32DSMI
*        VOLUME SERIAL. SET UP REG 0 WITH THE INTERNAL CODE    @G32DSMI
*        FOR A 913-38 OR A 937-28 ABEND                        @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
         LA    R0,OABD141               913-38 ABEND IF OPEN   @G32DSMI
         CLC   CSLEOV,WTGMODNM+K3       TEST IF EOV            @G32DSMI
         BNER  RET                      RETURN IF OPEN         @G32DSMI
         LA    R0,EABD001               937-28 ABEND IF EOV    @G32DSMI
         BR    RET                      RETURN TO CALLER       @G32DSMI
*                                                              @G32DSMI
CSL09900 EQU   *                        SET OK RETURN CODE     @G32DSMI
*                                                              @G32DSMI
         LA    RF,0                     RACF CHECK OK          @G32DSMI
         BR    RET                      RETURN TO CALLER       @G32DSMI
*                                                              @G32DSMI
         EJECT                                                 @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
*        GO TO IFG0194A TO DISMOUNT THE VOLUME.                @G32DSMI
*        REG 0 CONTAINS AN INTERNAL ABEND CODE.                @G32DSMI
*        IFG0194A WILL SUBSEQUENTLY CALL PROBLEM               @G32DSMI
*        DETERMINATION TO ISSUE THE INDICATED ABEND.           @G32DSMI
*                                                              @G32DSMI
***************************************************************@G32DSMI
*                                                              @G32DSMI
CSL10000 EQU   *                        BRANCH TO IFG0194A     @G32DSMI
*                                                              @G32DSMI
         NI    DCBIFLGS,X'FF'-DCBIFPIO  TURN OFF ERROR FLAGS   @G32DSMI
         NI    JFCBMASK+K5,LBWTRI9T     TURN OFF LABEL ERROR   @G32DSMIX
                                        INDICATORS             @G32DSMI
         MVC   DXCALLID,ID3E3E          SET UP ERROR ID        @G32DSMI
         MVC   DXRETMOD,DXSAVMOD        SAVE RETURN MODULE     @G32DSMI
         MVC   DXRETCOD,DXSAVOFF        SAVE RETURN OFFSET     @G32DSMI
*                                                              @G32DSMI
         IECRES LOAD,MODID=ID3E4A,BRCODE=K16,BRANCH=QUEUED     @G32DSMI
         EJECT                                                 @G32DSMI
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CONSTANTS                                               Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
RACKLIST RACHECK CLASS='TAPEVOL',ATTR=ALTER,MF=L               @G32DSMI
RACKLNTH EQU   *-RACKLIST               LENGTH OF RACHECK LIST @G32DSMI
EABD007  EQU   7                        INTERNAL ABEND 007     @G32DSMI
CSLEOV   DC    CL3'055'                 EOV SVC CODE IN WTGTBL @G32DSMI
AVOL1T   DC    C'VOL1'                  VOL LABEL IDENTIFIER
ACCWT    DC    X'0700000020000050'      BASIC CCW - REWIND COMMAN
ONE9T    DC    X'0001'                  ONE
CHRM9T   DC    CL2'M '                  OPERATOR REJECT REPLY    Y02134
REPLYU   DC    CL6'U     '              OPERATOR REPLY U         YM8218
SCRTCH   DC    CL6'SCRTCH'              NON-SPECIFIC REQUEST     YM8218
*                                                                Y02134
XCTL3E   XCTLTABL ID=(ID3E3E,3E,ID3E4F,4F,ID3E4J,4J,           @G32DSMI*
               ID3E4A,4A),                                     @G32DSMI*
               SVC=019,LENGTH=,BRT=YES                           Y02134
         IECDSECS CVT,TCB,TIOT,DCB,UCB,MAIN,WTG,PREFX,         @G32DSMI*
               JSCB,RACVT,ICHACHKL,IEZDEB,                     @G32DSMI*
               EXPAND=YES                                      @G32DSMI
         IECEQU IEZDEB=YES
         END
