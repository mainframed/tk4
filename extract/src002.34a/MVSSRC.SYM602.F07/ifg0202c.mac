         TITLE 'IFG0202C - DA INPUT USER HEADER LABEL PROCESSING '
IFG0202C CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          RELEASE 21 DELETIONS/CHANGES                               *
*0000023000-024000,120000-128000,459000                          A38013
*0000510000                                                     SA55619
*                                                                     *
* MODULE NAME = IFG0202C                                              *
*                                                                     *
* DESCRIPTIVE NAME = DA INPUT USER HEADER LABEL PROCESSING            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE DA INPUT USER LABELS FUNCTION.                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0202C - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             IFG0200Y - PROCESS INPUT USER LABELS FUNCTION.          *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202E - PROCESS CLOSE DA EXIT FUNCTION.                  *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING WTG,RWTG                 WHERE-TO-GO TABLE        Y02080
         USING TCB,RET
         USING UCBOB,RUCB
         USING DEB,RDEB                 ESTABLISH BASE FOR DEB
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE DA INPUT USER LABELS FUNCTION.                             *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    IF THE USER HAS SPECIFIED A LABEL TYPE OF SUL FOR PHYSICAL       *
*    SEQUENTIAL OR DIRECT DATA SET AND IF THE APPROPRIATE USER LABEL  *
*    EXIT IS ACTIVE (I.E., DCB EXIT LIST CONTAINS ENTRY FOR UL EXIT), *
*    THIS FUNCTION READS USER TRAILER LABELS FOR PRESENTATION TO THE  *
*    USER'S INPUT TRAILER LABEL PROCESSING ROUTINE.                   *
*    A 152 BYTE USER LABEL WORK AREA IS OBTAINED FOR CLOSE FROM  Y02082
*    FETCH PROTECTED SUBPOOL 229 IN DATA MANAGEMENT KEY. A 96    Y02082
*    BYTE USER LABEL WORK AREA IS OBTAINED FOR THE USER FROM     Y02082
*    FETCH PROTECTED SUBPOOL 229 IN USER KEY.                    Y02082
*    LABELS ARE READ AND PRESENTED TO THE USER UNTIL                  *
*    1) AN EOF IS ENCOUNTERED,                                        *
*    2) THE USER INDICATES TERMINATION OF PROCESSING VIA A RETURN     *
*       CODE, OR                                                      *
*    3) THE MAXIMUM NUMBER OF LABELS (8) HAVE BEEN PROCESSED.         *
*    AFTER THE USER'S ROUTINE HAS PROCESSED THE LABEL PASSED TO IT,   *
*    THE CODE RETURNED BY THE USER DIRECTS FURTHER PROCESSING AS      *
*    FOLLOWS--                                                        *
*       RETURN CODE   ACTION TAKEN BY THIS FUNCTION                   *
*    INPUT DATA SETS                                                  *
*         0           NO FURTHER PROCESSING OF USER LABELS (UL) AND   *
*                     NORMAL PROCESSING BY I/O SUPPORT CONTINUES.     *
*         4           IF 8 UL HAVE NOT BEEN READ, READ NEXT UL. IF 8  *
*                     UL HAVE BEEN READ, THERE IS NO FURTHER          *
*                     PROCESSING OF UL.                               *
*    UPDATE OPERATIONS                                                *
*         0           SAME AS FOR INPUT.                              *
*         4           SAME AS FOR INPUT.                              *
*         8           WRITE LABEL IN LABEL BUFFER (I.E., LABEL HAS    *
*                     BEEN UPDATED), THEN PERFORM NO FURTHER          *
*                     PROCESSING.                                     *
*        12           WRITE LABEL IN LABEL BUFFER, THEN READ NEXT UL. *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE DA ACCESS METHOD INTERFACE FUNCTION.                       *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    USER TRAILER LABELS ARE PROCESSED.                               *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    USER'S INPUT LABEL EXIT ROUTINES - ENTERED BY MEANS OF           *
*    IECRES-UEXIT MACRO GIVING CONTROL TO IFG019RA WHO GIVES     Y02082
*    CONTROL TO THE USER EXIT WITH THE FOLLOWING INPUT           Y02082
*       REG 0    CONTAINS NO MEANINGFUL INFO                          *
*           1    POINTER TO 4 WORD PARAMETER LIST WHICH CONTAINS -    *
*                POINTER TO LABEL BUFFER                              *
*                POINTER TO DCB                                       *
*                FLAG BYTE, PTR TO STATUS INFO (IF PERMANENT ERROR)   *
*                OR ZERO                                              *
*                4-BYTES RESERVED (FOR OUTPUT, THIS FIELD POINTS TO   *
*                IMAGE AREA IF USER TOTALING WAS REQUESTED(DCBOPTCD=T)*
*                OR IS ZERO)                                          *
*           2-13 CONTENTS OF USER'S REGS BEFORE I/O SUPP              *
*           14   RETURN ADDRESS                                       *
*           15   EXIT ADDRESS                                         *
*                                                                     *
*    THE LOCK BIT (BIT 6) IN DCBOFLGS FIELD IS SET TO            Y02082
*    1 TO PREVENT ANOTHER I/O SUPPORT FUNCTION FROM OPERATING ON THIS *
*    DCB WHILE THE USER IS IN CONTROL.  ON RETURN FROM THE USER'S     *
*    ROUTINE, THIS BIT IS RESET TO 0.                                 *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE DA EXIT FUNCTION.                                          *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    NO LABELS CAN BE READ - EXIT TO USER'S ROUTINE WITH LABEL BUFFER *
*    POINTER IN PARM LIST SET TO ZERO. OTHER PARAMETERS UNCHANGED.    *
*    ON RETURN FROM USER'S ROUTINE, THE RETURN CODE IS IGNORED AND    *
*    NORMAL PROCESSING CONTINUES.                                     *
*    I/O ERROR READING A USER LABEL - THE USER'S ROUTINE IS ENTERED.  *
*    AGAIN WITH THE FOLLOWING INPUT                                   *
*       BIT 0 OF FLAG BYTE SET TO ONE, PTR TO STANDARD                *
*       STATUS INFORMATION.                                           *
*    OTHER PARAMETERS ARE UNCHANGED.                                  *
*    I/O ERROR WRITING UPDATED USER LABEL - IN ADDITION TO SETTING    *
*    BIT 0 OF THE FLAG BYTE, BIT 1 IS ALSO SET. A PTR IS PASSED       *
*    POINTING TO STANDARD STATUS INFORMATION.                         *
*    THE OTHER PARAMETERS ARE UNCHANGED.                              *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
*                                                                Y02082
*    OBTAIN CORE FOR USER LABEL WORK AREA FOR CLOSE              Y02082
*                                                                Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES,SP=K229,               Y02082*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
         STM   RES,RC,0(R1)             SAVE REGS 5-12 FOR CALLER
         LR    RC,R1                    SET BASE FOR ULWK AREA
         USING ULDMWK,RC                BASE FOR USER LABEL W.A. Y02082
*                                                                Y02082
*    OBTAIN CORE FOR USER LABEL WORK AREA FOR THE USER           Y02082
*                                                                Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,SP=K229,KEY=USER,        Y02082*
               STM=(2,14,WTGPREFX)                               Y02082
*                                                                Y02082
         USING ULUWK,R9                 USER LABEL WORK AREA BASEY02082
         LR    R9,R1                    ADDR OF GOTTEN CORE      Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         XC    DXCCW1(DXCCW8-DXCCW1),DXCCW1  CLEAR CHAN PROG AREA
         NI    ULREQ,X'FF'-LASTNTRY     TURN OFF LAST ENTRY FLAG-IF ON
*
*  THE DSCB MUST BE READ INTO I/O SUPPORT WORK AREA
*
         CLI   DSCEXTYP,ULEXT           IS FIRST EXTENT FOR USER LABELS
         BE    CDA02520                 BR IF YES TO SET UP CP
*        NO UL TRACK EXISTS, OR NO TRAILERS EXIST ON UL TRACK.
*
         LA    RB,CDA04300              SET RETURN ADDRESS AFTER SYNCH
*                                       USER
CDA02500 EQU   *
         SR    R1,R1                    ZERO WILL BE STORED AS LABEL
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULERRPTR,ULERRPTR        CLEAR ERROR INDCTS
*    GO TO SYNCH IN USER KEY                                     Y02082
         B     CDA04700                 GO TO SYNCH TO USER
*
CDA02520 EQU   *
*  SET UP CHANNEL PROGRAM AND WORK AREA TO READ FIRST TRAILER
*  CHANNEL PROGRAM TO READ FIRST TRAILER IS
*    READ COUNT INTO ULWK8
*    SEARCH KEY EQUAL   KEY IN ULWK6 = 'UTL0'
*    TIC *-16
*    READ DATA (LABEL) INTO BUFFER
*
         LA    R1,ULWK8                 POINT TO AREA INTO WHICH
         ST    R1,DXCCW1                COUNT IS READ
         LA    R1,ULWK6                 POINT TO AREA CONTAINING
*                                       SEARCH ARGUMENT
         ST    R1,DXCCW2                FOR SEARCH KEY EQUAL
         LA    R1,DXCCW1                POINT TO READ COUNT CCW
         ST    R1,DXCCW3                IN TIC
         LA    R1,ULDMBUFR              POINT TO LABEL BUFFER    Y02082
         ST    R1,DXCCW4                IN READ DATA
         OC    DXCCW1(K32),ULCP1        COMBINE CP SKELETON WITH PTRS
*
*        INITIALIZE IOBDADAD WITH R=0
*
         XC    DXDAADDR,DXDAADDR        CLEAR IOBDADAD TO ZERO
         MVC   DXDAADDR+K3(K4),DSCLOWLM  CCHH FROM START OF 1ST EXTENT
         SPACE
         TM    DCBDSORG,DCBORGDA        TEST,BR IF NOT DIRECT ORG
         BZ    CDA02600                 DATA SET
         MVC   ULDMBUFR(CDA0500L),CDA0500K MOVE PARM LIST        YM5789
         STH   RUCB,ULDMBUFR+CDA0500L   MOVE UCBADDR AND CCHH    YM5789
         MVC   ULDMBUFR+K2+CDA0500L(K6),DXDAADDR+K1 TO MINOR NAM YM5789
         ENQ   (,ULDMBUFR+CDA0500L),MF=(E,ULDMBUFR) ENQ ON ULTRK YM5789
CDA02600 EQU   *
*
         MVC   ULWK6,UTLCONST           SET UP SEARCH ARG = UTLO
         MVC   ULWK10,UTLCONST          NECESSARY SINCE FIRST CHANNEL
*                                       PROGRAM DOES NOT READ KEY
         OI    ULWK2,K1                 SET FIRST READ SWITCH
*
*        READ FIRST TRAILER LABEL
*
         BAL   RB,CDA04200              GO READ TRAILER
*
*  ESTABLISH CHANNEL PROGRAM FOR SUBSEQUENT USE, THEN TEST
*  FOR I/O ERROR.
*
*  SET UP CHANNEL PROGRAM TO WRITE BACK LABEL AND READ NEXT LABEL
*    SEARCH KEY EQUAL    KEY=UTL(N)
*    TIC *-8
*    WRITE DATA          WRITE UPDATED LABEL
*    SEARCH ID EQUAL     ID OF RECORD PRIOR TO UTL(N)
*    TIC *-8             CHECK
*    RD CKD    (SKIP)    LABEL JUST WRITTEN
*    RD CKD              READ NEXT LABEL
*
*  WHEN ONLY UPDATING IS PERFORMED, CC FLAG IN RD CKD IS TURNED OFF.
*
*  WHEN NO UPDATING IS PERFORMED,CHANNEL PROGRAM TO READ NEXT LABEL IS
*    SEARCH KEY EQUAL    KEY OF PREVIOUS LABEL
*    TIC *-8
*    RD CKD              READ NEXT LABEL
*
*
*  PROCEDURE USED BELOW IS TO USE KEY IN ULWK10 (KEY OF LABEL
*  PROCESSED) AS SEARCH ARGUMENT FOR SUBSEQUENT I/O OPERATIONS.
         MVC   DXCCW1,DXCCW2            SEARCH KEY CCW TO DXCCW1
         XC    DXCCW2(DXCCW8-DXCCW2),DXCCW2  CLEAR REMAINING CP AREA
         LA    R1,DXCCW1                SET UP DXCCW2
         ST    R1,DXCCW2                AS TIC TO
         MVI   DXCCW2,CCWTIC            DXCCW1
*  DXCCW3 IS ESTABLISHED AFTER USER RETURNS CODE
         LA    R1,DXDAADDR+K3           ADDR OF IOBADDR+3 (CCHHR) FOR
         ST    R1,DXCCW4                SEARCH ID
         LA    R1,DXCCW4                TIC TO
         ST    R1,DXCCW5                DXCCW4
         LA    R1,ULWK8                 RD CKD INTO
         ST    R1,DXCCW7                ULWK8
         OC    DXCCW4(K32),ULCP3        COMBINE SKELETON CP & PTRS
CDA02700 EQU   *
         TM    DXECB,ECBCOD7F           TEST, BR IF I/O ERROR
         BNO   CDA03700                 ENCOUNTERED
         NI    ULWK2,X'FF'-K1           SET 1ST-READ-SW OFF IF ON
         IC    R1,ULWK9                 'R' OF COUNT READ IN
         BCTR  R1,0                     DECREMENTED BY ONE - USED IN OR
         STC   R1,DXDAADDR+K7           FOR WRITE VERIFICATION
*****************************************************************Y02082
*    THE FOLLOWING CODE WILL COPY THE UTL FROM CLOSE'S USER      Y02082
*    LABEL WORK AREA TO THE USER'S BUFFER                        Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
*    VERIFY THAT CORE FOR USER'S BUFFER STILL HELD BY USER       Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         OC    ULUWK(USERLU),ULUWK      PROGRAM CHECK IF NOT USERY02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*                                                                Y02082
         MVC   ULBUFR,ULDMBUFR          COPY LABEL TO USER BUFFERY02082
*    RELEASE LOCAL LOCK                                          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*                                                                Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER WORK AREA        Y02082
*                                                                Y02082
*****************************************************************Y02082
*
         BAL   RB,CDA04500              GO TO SYNCH TO USER
*                                                                Y02134
*    RETURN IN D/M KEY                                           Y02134
*                                                                Y02134
         LTR   RF,RF                    TEST,BR IF USER RETURNED
         BZ    CDA04250                 A CODE = 0 (NO FURTHER PROCESS)
CDA02800 EQU   *
*  SOME TYPE OF I/O WILL BE INITIATED.  SEARCH WILL BE BASED UPON KEY
*  OF LABEL 'JUST PROCESSED'.
         MVC   ULWK6,ULWK10             SET UP SEARCH ARGUMENT
         XC    DXCCW3,DXCCW3            ENSURE THAT PRVIUS CCW DOES NOT
*  CONFLICT WITH CHANNEL PROGRAM TO BE COMPLETED BELOW.
         CLI   ULRETCOD,READNEXT        TEST,BR IF USER DOES NOT WANT
         BNE   CDA02860                 NEXT LABEL TO BE READ
*        READ NEXT LABEL
         CLI   ULWK10+K3,CHAR7          TEST,BR IF MAX NBR OF LABELS
         BC    10,CDA04250              ALREADY READ
*  ESTABLISH THIRD CCW TO READ NEXT LABEL
         LA    R1,ULWK8                 SET RD CKD CCW TO READ INTO
         ST    R1,DXCCW3                AREA STARTING AT ULWK8
         OC    DXCCW3,RDCKD             COMBINE SKELETON CCW WITH ADDR
*
CDA02840 EQU   *
         BAL   RB,CDA04200              GO READ NEXT LABEL ( OR WRITE
*                                       THEN READ NEXT LABEL)
         B     CDA02700                 GO CHECK FOR ERROR
*
CDA02860 EQU   *
*  CHECK IF 8 OR 12 IS A VALID RETURN CODE
         L     RDEB,DCBDEBAD            POINTER TO USER'S DEB
         TM    DCBOFLGS,DCBOPEN         CK IF DCB IS OPEN
         BO    CDA02900                 DCB OPEN,USER'S DEB EXISTS
         LA    RDEB,DXDEB               DURING OPEN,USE WORK DEB
CDA02900 EQU   *
         TM    DEBOPATB,DEBOPOUT-DEBOPUPD  TEST,BR IF OPENED FOR
         BO    CDA03000                 OUTPUT
         BM    CDA04250                 BR IF NOT UPDAT OR INPUT
         TM    DEBOPATB,DEBOPUPD        TEST,BR IF OPENED FOR
         BO    CDA03100                 UPDAT
         B     CDA04250                 BR IF INPUT
CDA03000 EQU   *
         TM    DCBDSORG,DCBORGDA        IF NOT UPDATE, DIRECT DATA SET
         BZ    CDA04250                 FOR OUTPUT IS ALSO VALID.
CDA03100 EQU   *
*  SET UP THIRD CCW TO WRITE UPDATED LABEL
         LA    R1,ULBUFR                ESTABLISH WRITE DATA CCW TO
         ST    R1,DXCCW3                WRITE LABEL BUFFER
         OC    DXCCW3,WRDATA            COMBINE SKELETON CCW WITH ADDR
*
*****************************************************************Y02082
*    THE FOLLOWING CODE WILL COPY THE UPDATED USER LABEL FROM    Y02082
*    THE USER'S BUFFER TO CLOSE'S LABEL BUFFER                   Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
*    VERIFY THAT CORE FOR USER'S BUFFER STILL HELD BY USER       Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         OC    ULUWK(USERLU),ULUWK      PROGRAM CHECK IF NOT USERY02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*                                                                Y02082
         MVC   ULDMBUFR,ULBUFR          COPY LABEL TO CLOSE W.A. Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*                                                                Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
*****************************************************************Y02082
         CLI   ULRETCOD,WRITNEXT        TEST,BR IF LABEL IS TO BE
         BE    CDA03600                 WRITTEN ONLY
         CLI   ULRETCOD,WRITNEXT+READNEXT  TEST IF LABEL TO BE WRITTEN
         BNE   CDA04250                 BR, INVALID CODE RETURNED, END
*                                       PROCESSING IN THIS MODULE
*
*        WRITE UPDATED LABEL AND READ NEXT LABEL
*
         CLI   ULWK10+K3,CHAR7          TEST,BR IF MAX NUMBER OF LABELS
         BC    10,CDA03500              ALREADY BEEN READ
         OI    DXCCW6+K4,CCWCMDCH       ENSURE COMMAND CHAIN FLAG IN
*                                       VERIFICATION RD CKD IS ON
         B     CDA02840                 GO PERFORM I/O
*
CDA03500 EQU   *
         MVI   ULRETCOD,WRITNEXT        MAX NUMBER OF LABELS HAVE
*  BEEN READ, RETURN CODE CHANGED TO WRITE LABEL ONLY.
*  FALL THRU TO WRITE LABEL
*
*        WRITE UPDATED LABEL
CDA03600 EQU   *
         NI    DXCCW6,X'FF'-CCWCMDCH    TURN OFF COMMND CHAIN FLAG IN
*                                       CCW THAT PERFORMS WRITE
*                                       VERIFICATION
         BAL   RB,CDA04200              GO WRITE UPDATED LABEL
*
         TM    DXECB,ECBCOD7F           TEST,BR (IE,NO FURTHER PROCESS)
         BO    CDA04250                 NO I/O ERROR
*
CDA03700 EQU   *
*        I/O ERROR
*
         LA    R1,DXIOB                 PUT PTR TO STATUS INFO IN
         MODESET KEYADDR=DXUKEY,WORKREG=15  ASSUME USER KEY      Y02082
         ST    R1,ULERRPTR              PARAMETER LIST
         MVI   ULERRPTR,ERROR           FLAG ERROR COND(ALSO RESETS ANY
*                                       OTHER ERROR FLAGS TO ZERO).
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
*  DETERMINE TYPE OF CHANNEL PROGRAM BEING USED WHEN ERROR OCCURRED.
*
         CLI   ULRETCOD,WRITNEXT        TEST,BR IF ERROR ON READ ONLY
         BL    CDA03800                 (IF ERROR ON FIRST READ,
*                                       ULRETCOD=0, BR TAKEN)
*  EITHER WRITING OR WRITING THEN READING
         MVC   ULWK3+K1(K3),IOBCOMAD+K1  OBTAIN CSW POINTER
         L     R1,ULWK3                 FROM IOB
         LA    R0,DXCCW7+K8             POINT 8 BYTES PAST READ CCW,
         CR    R1,R0                    THEN COMPARE WITH CSW POINTER
         BNE   CDA04000                 BR IF ERROR DURING WRITE
CDA03800 EQU   *
*  READ ERROR
         SR    R1,R1
         IC    R1,ULWK6+K3              OBTAIN LAST CHAR OF KEY
         TM    ULWK2,CSWUNITX           TEST IF ERROR ON FIRST READ
         BO    CDA03900                 BR IF FIRST READ
*  RECONSTRUCT KEY AREA
         MVC   ULWK10(K3),UTLCONST      'UTL' TO KEY AREA
         LA    R1,K1(,R1)               INCREMENT 'N' OF KEY
         STC   R1,ULWK10+K3             AND PLACE IN KEY AREA
CDA03900 EQU   *
*  SET UP BUFFER TO TELL USER WHAT LABEL WE WERE UNABLE TO READ
         NI    ULWK2,X'FF'-K1           SET 1ST READ SW OFF IF ON
         MVC   ULDMBUFR(K3),UTLCONST    'UTL' TO BUFFER          Y02082
         LA    R1,K1(,R1)               LABEL NUMBER
         STC   R1,ULDMBUFR+K3           TO BUFFER                Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15    ASSUME USER KEY    Y02082
*                                                                Y02082
         MVC   ULBUFR(K4),ULDMBUFR      COPY LABEL TYPE TO USER  Y02082
         B     CDA04100                 GO TO BRANCH TO USER
*
CDA04000 EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*  WRITE ERROR
         OI    ULERRPTR,ERROROUT        FLAG WRITE ERROR CONDITION
CDA04100 EQU   *
         BAL   RB,CDA04600              GO TO SYNCH TO USER
*                                                                Y02082
*    RETURN FROM SYNCH IN DATA MANAGEMENT KEY                    Y02082
*                                                                Y02082
         LTR   RF,RF                    TEST,BR IF USER RETURNS CODE=0,
         BZ    CDA04250                 (NO FURTHER PROCESSING)
         ST    RF,ULWK1                 SAVE RETURN CODE
         CLI   ULRETCOD,READNEXT        TEST,BR IF USER WANTS NEXT
         BE    CDA02800                 LABEL TO BE READ
         B     CDA04250                 BR,INVALID CODE RETURNED BY
*                                       USER
         EJECT
*
***********************************************************************
*
*                   CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
*
*        IT IS ASSUMED THAT ALL CONTROL BLOCKS HAVE ALREADY BEEN SET UP
*
CDA04200 EQU   *
         EXCP  DXIOB                    INITIATE I/O
*
         IECRES WAIT                    WAIT FOR I/O COMPLETION
*
         TM    IOBSTAT0,CSWUNITX        TEST,BR IF NOT UNIT
         BCR   14,RB                    EXCEPTION (EOF)
         CLI   ULWK10+K3,CHAR0          HAVE ANY LABELS BEEN READ
         LA    RB,CDA04250              PREVIOUSLY- SET UP RETURN ADDR
         BC    12,CDA02500              GO TO SYNCH TO USER IF NO
*        NO FURTHER UL PROCESSING IS PERFORMED.  FREE CORE AND RETURN
*        TO CALLER.
*
CDA04250 EQU   *
         TM    DCBDSORG,DCBORGDA        TEST,BR IF NOT DIRECT ORG
         BZ    CDA04300                 DATA SET
         MVC   ULDMBUFR(CDA0500L),CDA0500K MOVE PARM LIST        YM5789
         STH   RUCB,ULDMBUFR+CDA0500L   MOVE UCBADDR AND CCHH    YM5789
         MVC   ULDMBUFR+K2+CDA0500L(K6),DXDAADDR+K1 TO MINOR NAM YM5789
         DEQ   (,ULDMBUFR+CDA0500L),MF=(E,ULDMBUFR) DEQ ULTRK    YM5789
CDA04300 EQU   *
*    FREEMAIN USER'S USER LABEL WORK AREA                        Y02082
         IECRES FREE,A=(R9),PREFIX=NO,SP=K229,LV=USERLU,         Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LR    R1,RC                    INITIALIZE REG FOR FREEMAIN
         LM    RES,RC,0(R1)             RESTORE CALLER'S REGS
         IECRES FREE,A=(R1),PREFIX=YES,STM=(2,14,WTGPREFX)       Y02082
* USER LABEL WORK AREA, LABEL BUFFER AND PARAMETER LIST          Y02080
*
*  RETURN TO CALLER
*
         LA    RET,K8                   SET BRANCH OFFSET        A38013
         IECRES LOAD,MODID=DAFINMOD,BRCODE=(RET),BRANCH=QUEUED   Y02080
*                                       XCTL TO DAFINMOD         Y02080
         EJECT
***********************************************************************
*        CLOSED SUBROUTINE TO GIVE CONTROL TO USER EXIT ROUTINE  Y02082
*        REGISTER CONTENTS AT ENTRY TO USER EXIT ARE AS FOLLOWS- Y02082
*                        R0 - CONTAINS NO MEANINGFUL INFO
*                        R1 - PTR TO PARAMETER LIST
*                    R2-R13 - USER'S CONTENTS BEFORE I/O SUPPORT
*                       R14 - RETURN ADDRESS (SET BY SYNCH)
*                       R15 - EXIT ADDRESS
*
CDA04500 EQU   *
         XC    ULERRPTR,ULERRPTR        CLEAR PREVIOUS ERROR PARM
CDA04600 EQU   *
         LA    R1,ULBUFR                PTR TO LABEL BUFFER
CDA04700 EQU   *
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
         L     R7,DCBDEBAD              USER'S DEB ADDRESS
         OI    ULDCBPTR,EOFFLG          INDICATE EOF            SA55619
         TM    DCBOFLGS,DCBOPEN         CK IF DCB ALREADY OPEN
         BZ    CDA04800                 NO,CTL FROM OPEN,INDIC EOF
         TM    DCBDSORG,DCBORGDA        IS DSORG DIRECT
         BO    CDA04800                 YES, INDIC EOF
         SR    R1,R1                    CLEAR WORK REGISTER
         IC    R1,DEBNMEXT-DEB(R7)      GET NUMBER OF EXTENTS
         SLL   R1,4                     16(NO.EXTNTS)=LNGTH IN DEB
         LH    R1,DEBDVMOD-DEB(R1,R7)   GET DEB VOL SEQ NUMBER
         AH    R1,JFCBVLSQ              ADD JFCB VOL SEQ NUMBER
         SR    RF,RF                    CLEAR WORK REGISTER
         IC    RF,JFCBNVOL              GET TOTAL NUMBER OF VOLS
         CR    R1,RF                    COMPARE VOLS USED TO TOTAL
         BE    CDA04800                 IF EQ, INDICATE EOF
         NI    ULDCBPTR,X'FF'-EOFFLG    NOT EQ, INDICATE EOV    SA55619
*
CDA04800 EQU   *
         MODESET EXTKEY=DATAMGT         ASSUME DATAMGT KEY       Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT = 0         Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,WTGPREFX)           Y02082
         STC   RF,ULRETCOD              SAVE USERS RETURN CODE   YM5975
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT = 1         Y02082
         IC    R1,DCBOFLGS              GET USER'S DCBOFLGS      Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            POINT TO COPIED DCB      Y02082
         LA    R0,DCBOBUSY              SET MASK FOR BUSY BIT    Y02082
         NR    R1,R0                    SELECT THE BUSY BIT      Y02082
         IC    R0,DCBOFLGS              COMBINE WITH DCBOFLGS    Y02082
         OR    R1,R0                      FROM COPIED DCB.       Y02082
         STC   R1,DCBOFLGS              UPDATE DCBOFLGS IN COPY  Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT = 1
         BR    RB                       UNCONDITIONAL BRANCH
         EJECT
         SPACE 1
**********************************************************************
*                                                                    *
*                    CONSTANTS                                       *
*                                                                    *
**********************************************************************
UTLCONST DC    C'UTL0'                  SEARCH ARGUMENT
CDA0500K ENQ   (CDA0501K,,E,8,SYSTEM),MF=L ENQ LIST FORM         YM5789
CDA0500L EQU   *-CDA0500K               LENGTH OF ENQ/DEQ LIST   YM5789
CDA0501K DC    CL8'SYSZUSRL'            MAJOR NAME               YM5789
*   CHANNEL PROGRAM TO READ FIRST TRAILER
ULCP1    CCW   X'12',0,X'40',8          READ COUNT
         CCW   X'29',0,X'40',4          SEARCH KEY EQUAL
         CCW   X'08',0,0,0              TIC *-16
         CCW   X'06',0,0,80             READ DATA
ULCP2    CCW   X'05',0,X'40',80         WRITE DATA
WRDATA   EQU   ULCP2
ULCP3    CCW   X'31',0,X'40',5          SEARCH ID EQUAL
         CCW   X'08',0,0,0              TIC
         CCW   X'1E',0,X'50',92         READ COUNT,KEY,DATA  (SKIP)
RDCKD    CCW   X'1E',0,0,92             READ COUNT,KEY,DATA
         XCTLTABL ID=(DAFINMOD,2E),SVC=020,                      Y02080X
               BRT=YES,LENGTH=                                   Y02080
         IECDSECS CVT,TCB,RB,DCB,DEB,UCB,MAIN,USERLAB,USERTOT,   Y02080*
               PREFX,WTG,PSA,RRPL,EXPAND=YES                     Y02144
         IECEQU
         END
