         TITLE '      IFG0551L   END-OF-VOLUME  EXECUTOR (SAM) '
IFG0551L CSECT
         ENTRY IFG0551N                 ALIAS ENTRY POINT        Y02080
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 03 CHANGES/DELETIONS                           *
*0000492000                                                    @ZA01346
*0000                                                          @ZA08004
*0000175005,175105                                             @ZA13524
*0000509000-510000,511000                                      @ZA14615
*0000                                                          @ZA15980
*                                                                     *
*          VS2 RELEASE 02 CHANGES/DELETIONS                           *
*0000496000-496500                                              ZA00707
*0000                                                           ZA00020
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0551L (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME =                                                  *
*        END OF VOLUME EXECUTOR (SAM)                                 *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE IS ENTERED AS THE LAST EOV MODULE FOR BSAM       *
*        AND QSAM AFTER SUCCESSFULLY SWITCHING TAPE OR DA VOLUMES,    *
*        OR OBTAINING ADDITIONAL DIRECT ACCESS SPACE ON THE CURRENT   *
*        OR NEXT VOLUME, OR COMPLETION OF A CONCATENATION OF TWO      *
*        DATA SETS OF LIKE ATTRIBUTES.                                *
*                                                                     *
*        THE MODULE IS ENTERED FROM THE FOLLOWING MODULES-            *
*        IFG0552X AFTER COMPLETING UNIT RECORD CONCATENATION.         *
*        IFG0553Z AFTER MOUNTING A NEW VOLUME FOR DIRECT ACCESS       *
*              INPUT OR CONCATENATING TWO DIRECT ACCESS DATA SETS.    *
*        IFG0554B AFTER VBS RECORD FORMAT UPDATE PROCESSING.          *
*        IFG0555H AFTER MOUNTING A NEW VOLUME OR OBTAINING ADDITIONAL *
*              SPACE ON THE CURRENT VOLUME FOR DIRECT ACCESS OUTPUT.  *
*        IFG0552F AFTER MOUNTING A NEW VOLUME FOR TAPE OUTPUT.        *
*        IFG0553H AFTER MOUNTING A NEW VOLUME FOR TAPE INPUT OR       *
*              CONCATENATING TWO TAPE DATA SETS.                      *
*                                                                     *
*        IF CHKPT=EOV SPECIFIED FOR THIS DATA SET, INVOKES MODULE     *
*        IFG0558X VIA IECRES LOAD AND SYNCH .                         *
*                                                                     *
*        THE USER'S DCB IS REFRESHED FROM THE COPIED DCB.             *
*        THE EOV WORKAREA IS FREED. THE EOV EXIT IS TAKEN IF IT IS    *
*        PRESENT. A SMALL EOV WORKAREA IS OBTAINED IN WHICH TO SAVE   *
*        REGISTERS. CHANNEL PROGRAMS WHICH WERE PURGED ARE RESTARTED. *
*        A SEPERATE ROUTINE RESTARTS CHAINED SCHEDULING CHANNEL       *
*        PROGRAMS.                                                    *
*                                                                     *
*        ALL WORKAREAS ARE FREED AND THE BSAM/QSAM ACCESS METHOD      *
*        CALLER OF EOV IS RETURNED CONTROL.                           *
         EJECT
* NOTES =                                                             *
*        UPON ENTRY TO THE USER'S EOV EXIT ROUTINE, THE CONTENTS      *
*        OF THE REGISTERS ARE AS FOLLOWS -                            *
*        0 - PARAMETER REGISTER. POINTER TO IMAGE AREA IF USER        *
*              TOTALING OPTION FOR OUTPUT DATA SETS HAS BEEN          *
*              SPECIFIED. OTHERWISE ZERO.                             *
*        1 - PARAMETER REGISTER. POINTER TO USER DCB FOR DATA SET     *
*              FOR WHICH EOV PROCESSING IS TAKING PLACE.              *
*        2-13 - USER'S REGISTERS AT ENTRY TO THE ACCESS METHOD        *
*              GET/PUT/CHECK MACRO INSTRUCTION WHICH CALLED           *
*              EOV.                                                   *
*        14 - RETURN ADDRESS.                                         *
*        15 - ADDRESS OF EOV EXIT ROUTINE.                            *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO USER'S DCB                                  *
*            R4 POINTS TO EOV WORK AREA                               *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
         EJECT
* ENTRY POINT =                                                       *
*        IFG0551L                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS GIVEN CONTROL THROUGH THE IECRES-LOAD MACRO.  *
*                                                                     *
* INPUT =                                                             *
*        ENTERED IN DATA MANAGEMENT PROTECT KEY 5.                    *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        REGISTER 4 POINTS TO THE EOV WORKAREA.                       *
*                                                                     *
* OUTPUT =                                                            *
*        ALL BSAM/QSAM CHANNEL PROGRAMS WHICH MUST BE RESTARTED ARE.  *
*        REGISTER 15 = 0.                                             *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        RETURN TO THE ACCESS METHOD CALLER OF EOV THROUGH THE        *
*        IECRES-EXIT MACRO.                                           *
*                                                                     *
* EXIT-ERROR =                                                        *
*        NONE                                                         *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA ENTERED THROUGH IECRES MACRO INSTRUCTION.           *
*                                                                     *
*        BSAM/QSAM END OF BLOCK ROUTINE TO SCHEDULE IOBS POINTED TO   *
*        THE FOLLOWING DCB LABELS -                                   *
*              DCBEOB - QSAM                                          *
*              DCBEOBW - BSAM WRITE                                   *
*              DCBEOBR - BSAM READ                                    *
*              DCBWRITE - BDAM LOAD MODE                              *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*        SMALL EOV WORKAREA USED TO SAVE REGISTERS, CONTROL BLOCK     *
*              POINTERS, INDICATORS.                                  *
*        REGISTER SAVE AREA IN USER KEY TO PASS TO ACCESS METHOD      *
         EJECT
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DCB                                                          *
*        DCB                                                          *
*        ACCESS METHOD IOBS                                           *
*        SVRB                                                         *
*        TCB                                                          *
*        UCB                                                          *
*                                                                     *
* TABLES =                                                            *
*        NONE.                                                        *
*                                                                     *
* MACROS =                                                            *
*        IECRES LOAD                                                  *
*        IECRES INIT                                                  *
*        IECRES FREE                                                  *
*        IECRES EXIT                                                  *
*        MODESET                                                      *
*        SYNCH                                                        *
*        GETMAIN                                                      *
*        DEBCHK                                                       *
*        EXCP                                                         *
*        FREEMAIN                                                     *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD          *
*                                                                     *
***********************************************************************
         EJECT
         BALR  RBASE,0                  ESTABLISH BASE
         USING EIN21400,RBASE
         USING IHADCB,RDCB
         USING DEB,RDEB
         USING FORCORE,RCORE
         USING UCB,RUCB
EIN21400 EQU   *                        BASE ADDRESS
*  THE FOLLOWING CODE TESTS FOR REQUEST FOR AN EOV EXIT WHICH IS
*  IDENTIFIED BY A DCB EXIT-LIST ENTRY CODE OF X'06' OR X'86'.
*  FOR DIRECT-ACCESS OUTPUT DATA SETS, REG RC NOTES IF
*  EXTENDING ON THE SAME VOLUME OR IF A NEW VOLUME WAS MOUNTED.
*  CURRENT IMPLEMENTATION ALLOWS FOR EXIT IF NEW VOLUME WAS
*  MOUNTED.                                                           *
*                                                                     *
***                                                              Y02082
*                                                                Y02082
* ON ENTRY TO THIS ROUTINE THE FOLLOWING WILL OCCUR              Y02082
*                                                                Y02082
*        .     THE USER'S DCB WILL BE UPDATED                    Y02082
*        .     THE EOV WORK AREA WILL BE FREED, SINCE CHECKPOINT Y02082
*              WILL NOT SAVE THE AREAS IN SP230 AT THE EOV EXIT  Y02082
*              HENCE THIS ENTIRE LOAD WILL RUN WITHOUT AN EOV    Y02082
*              WORK AREA.                                        Y02082
*        .     A SMALL WORK AREA WILL BE GOTTEN FOR REGISTERS    Y02082
*              OF EOV                                            Y02082
*        .     A REGISTER SAVE AREA FOR THE USER SYNCH WILL BE   Y02082
*              GOTTEN                                            Y02082
*        .     THE ROUTINE WILL RUN IN USER KEY, WORKING ON THE  Y02082
*              USER'S DCB,IOBS,CCWS,EXIT LIST.                   Y02082
*              IT WILL BE THE EXCEPTION THAT IT RUNS IN DATAMGT  Y02082
*              KEY OR ANY OTHER KEY                              Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,DXXPREFX)          Y02082
         BAL   R6,EIN24840              GET SVRB ADDR            Y02082
         USING RBSECT,RET               SVRB                     Y02082
         EJECT
         SR    R6,R6                    ZERO REG. AS INDICATOR  Z30JSFC
         TM    JFCFLGS1,JFCBCEOV        CHKPT=EOV THIS D/S?     Z30JSFC
         BZ    EIN21420                 NO - CONTINUE           Z30JSFC
         LA    RWTG,DXXMODNM            POINT TO WTG TABLE      Z30JSFC
         MVC   DXXMODNM(K12),IFG0558X   MOVE MOD NAME AND EP    Z30JSFC
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=NO                  Z30JSFC
         L     R6,DXXMODEP              GET ENTRY ADDRESS       Z30JSFC
EIN21420 EQU   *                        FREE WORK AREAS         Z30JSFC
         L     RDCB,DXUDCBAD            GET USER'S DCB ADDR      Y02082
         MODESET EXTKEY=SUPR            RB KEY                   Y02082
         STM   RDCB,RD,RBEXSAVE         SAVE REGS                Y02082
         MODESET EXTKEY=DATAMGT         KEY OF EOV WORK AREA     Y02082
         LR    R8,RET                   SAVE RB ADDR ACROSS FREE Y02082
         IECRES FREE,A=(RCORE),PREFIX=EOV FREE EOV WORK AREA     Y02082
         DROP  RCORE                    NO MORE WORK AREA        Y02082
         LR    RET,R8                   RESTORE SVRB PTR         Y02082
         LM    RDCB,RD,RBEXSAVE         RESTORE REGS             Y02082
         DROP  RET                      DROP SVRB ADDR           Y02082
         L     RCORE,CVTPTR             ADDR CVT                 Y02082
         L     RCORE,CVTTCBP-CVT(,RCORE) ADDR TCB PTRS           Y02082
         L     RCORE,K4(,RCORE)         ADDR OF TCB              Y02082
         USING TCB,RCORE                                         Y02082
         MODESET EXTKEY=RBT234,WORKREG=14 USER'S KEY             Y02082
         EJECT
*                                                                Y02082
*        RD CONTAINS THE VOLUME 'SWITCH INDICATOR' FOR BDAM/VS   Y02082
*        RECORDS.  IT WILL NOT BE SAVED IN THE EOVLAST WORK AREA Y02082
*        UNTIL AFTER THE EOV EXIT                                Y02082
*                                                                Y02082
         LR    RES,RDEB                 PUT DEB IN OLD DEB REG
*
*        CHAINED SCHEDULING AND SPANNED RECORDS FEOV             YM1194
*        REPOSITIONING ARE MUTUALLY EXCLUSIVE                    YM1194
*
         TM    DCBCIND2,DCBC2CHN        IS CHAINED SCHEDULING    YM1194
*                                       BEING USED               YM1194
         BO    EIN21450                 BRANCH IF YES-DON'T      YM1194
*                                       TEST DCBIOBAD            YM1194
         TM    DCBIOBAD,DCBIOUPD        TEST FOR FREEING FEOV
         BO    EIN22000                 BRANCH AROUND EXIT TO
*                                       USER
EIN21450 EQU   *                        CHECK IF EXTENDING DA    YM1194
         TM    DCBDEVT,DCBDEVDA         TEST, BR IF NOT A D.A.
         BNO   EIN21500                 DEVICE
         TM    DCBOFLGS,DCBOWRIT        TEST, BR IF LAST OPERATION
         BZ    EIN21500                 WAS NOT OUTPUT
         LA    RC,K1
         CR    RD,RC                    TEST, BR IF EXTENDING ON
         BE    EIN22000                 SAME VOLUME
EIN21500 EQU   *                        LOOK FOR EOV EXIT
         LTR   R6,R6                    CHKPT AT EOV TO BE DONE Z30JSFC
         BZ    EIN21550                 NO - CONTINUE           Z30JSFC
         LR    RF,R6                    STORE ADDR. FOR 'SYNCH' Z30JSFC
         B     EIN21800                 PROCESS AS IF EOV EXIT  Z30JSFC
EIN21550 EQU   *                        CHKPT NOT = EOV         Z30JSFC
         L     RF,DCBEXLST              PTR TO DCB EXIT LIST
         LA    RF,K0(K0,RF)
         LTR   RF,RF                    TEST,BR IF PTR IS ZERO
         BZ    EIN22000                 (I.E.,NO EXIT LIST EXISTS)
         EJECT
EIN21600 EQU   *                        LOOK FOR EOV EXIT IN EXLST
         CLI   K0(RF),XLEOV             CHK FOR EOV EXIT
         BE    EIN21700                 BR IF YES
         CLI   K0(RF),LASTNTRY+XLEOV    CHK FOR EOV EXIT
         BE    EIN21700                 BR IF YES
         TM    K0(RF),LASTNTRY          TEST,BR IF LAST EXIT LIST
         BO    EIN22000                 ENTRY HAS BEEN EXAMINED.
         LA    RF,K4(K0,RF)             INCREMENT PTR TO POINT TO NEXT
         B     EIN21600                 ENTRY AND EXAMINE IT.
*
EIN21700 EQU   *                        SET UP USER TOTALING
*
*  AN ENTRY FOR AN EOV EXIT HAS BEEN FOUND -
*  UPON ENTRY TO THE USER'S EOV EXIT ROUTINE, THE CONTENTS OF
*  THE REGISTERS ARE AS FOLLOWS-
*        REGISTERS 0,1   PARAMETER REGISTERS
*                        0=PTR TO IMAGE AREA IF TOTALING OPTION
*                          FOR OUTPUT DATA SETS HAS BEEN SPECIFIED.
*                          OTHERWISE ZERO.
*                        1=PTR TO DCB FOR DATA SET FOR WHICH EOV
*                          PROCESSING IS TAKING PLACE.
*                  2-13  USER'S REGS AT ENTRY TO EOV
*                  14    RETURN ADDRESS
*                  15    ADDRESS OF EOV EXIT ROUTINE
*
         L     RF,K0(K0,RF)             ADDRESS OF EOV EXIT ROUTINE
         SR    R0,R0                    CLEAR PARM REG IN CASE TOTALING
*                                       NOT SPECIFIED
*
*   IF USER TOTALING IS SPECIFIED, THE ADDRESS OF THE IMAGE AREA FOR
*   THE LAST RECORD WRITTEN ON THE OLD VOLUME IS PASSED TO THE USER'S
*   EXIT ROUTINE IN REGISTER 0.
*
         TM    DCBOPTCD,DCBOPTT         TEST IF TOTALING SPECIFIED
         BZ    EIN21800                 BR IF NO TOTALING
         TM    DEBOPATB,CCWRDKEY        TEST FOR INPUT/RDBACK
         BZ    EIN21800                 BR INPUT/RDBACK-NO TOTALING
*
         SR    RET,RET                  CLEAR REGISTER
         SR    R1,R1                    CLEAR REGISTER
         IC    RET,DEBNMEXT             GET NUMBER OF EXTENTS
         IC    R1,DEBEXSCL              GET EXTENT SCALE
         SLL   RET,K0(R1)               COMPUTE LENGTH OF EXTENTS
         L     R1,K36(RET,RDEB)         GET ADDR TOTALING WORKAREA
*                                       FROM ACCESS METH PORTION
*                                       DEB ADDR+32+4+LNGTH EXTNTS
         L     R0,TOTEOVPT-TOTSAVWA(R1)  IMAGE AREA ADDR FOR LAST
*                                       RECORD WRITTEN
         EJECT
EIN21800 EQU   *                        SET UP TO TAKE EXIT
         BAL   R6,EIN24840              BR TO GET SVRB PTR       M0135
         USING RBSECT,RET
         C     RF,IFG0558X+L'IFG0558X   TEST IF CHKPT=EOV       Z30JSFC
         BNE   EIN21820                 NO - CONTINUE           Z30JSFC
         SR    R6,R6                    YES - ZERO REG TO ID SO Z30JSFC
EIN21820 EQU   *                                                Z30JSFC
         MODESET EXTKEY=SUPR            RB KEY                   Y02082
         OI    RBSTAB,RBFTCKPT          INDICATE CHECK POINT
*                                       CAN BE ISSUED
         STM   RDCB,RD,RBEXSAVE         SAVE REGS 2-13 ACROSS
*                                       EXIT TO THE USER
         MODESET EXTKEY=RBT234,WORKREG=1 USER KEY                Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT
         LR    R1,RDCB                  DCB ADDRESS
         L     RC,RBLINK                GET CALLERS RB           Y02082
         CLI   RBOPSW+K1-RBBASIC(RC),X80 IS CALLER IN SYSTEM KEY Y02082
         BNL   EIN21850                 BRANCH IF NOT            Y02082
         LM    RDCB,RD,RBGRS2           LOAD CALLER'S REGS       Y02082
         BALR  RET,RF                   TAKE EXIT                Y02082
         BALR  RET,0                    ESTABLISH BASE           Y02082
         USING *,RET                    USING FOR 1 INSTRUCTION  Y02082
         B     EIN21950                 RESTORE REGS             Y02082
         DROP  RET                                               Y02082
         USING RBSECT,RET                                        Y02082
         EJECT
EIN21850 EQU   *                        GET SVRB                 Y02082
         L     RC,RBLINK                PTR TO PREVIOUS RB
         TM    RBSTAB-RBSECT(RC),RBFTSVRB  IS PREVIOUS A PRB
         BZ    EIN21900                 YES,BRANCH               Y02082
         LR    RET,RC                   USE PREVIOUS RB
         CLM   RCORE,B'0111',RBLINK+K1  IS THERE ANOTHER RB      Y02082
         BNE   EIN21850                 BRANCH IF YES            Y02082
         L     RET,TCBRBP               USE CURRENT SVRB         Y02082
EIN21900 LM    RDCB,RD,RBGRS2           RESTORE USER REGS
         SYNCH (15)
*  ALTHOUGH NOT RESTRICTED TO CHECKPOINT/RESTART APPLICATIONS,
*  THIS X'06' EXIT IS REQUIRED IN SUPPORT OF C/R.  A REQUIREMENT
*  OF THIS SUPPORT IS THAT ALL 'PERTINENT' REGISTERS BE
*  RE-ESTABLISHED AFTER RECEIVING CONTROL BACK FROM THE USER'S
*  EXIT ROUTINE(TO HANDLE A RESTART-TIME SITUATION).  THE
*  PERTINENT POINTERS WHICH MUST BE RE-ESTABLISHED INCLUDE
*  POINTERS TO THE DEB, UCB, TIOT,... (I.E., ANY POINTER TO
*  SYSTEM QUEUE SPACE MUST BE RE-ESTABLISHED).
EIN21950 EQU   *                        RESTORE REGS FROM SVRB
IFG0551N EQU   EIN21950                 RESTART ENTRY AFTER CKPT Y02080
         L     RCORE,CVTPTR             ADDR CVT                 Y02082
         L     RCORE,CVTTCBP-CVT(,RCORE) ADDR TCB PTRS           Y02082
         L     RCORE,K4(,RCORE)         CURRENT TCB ADDR         Y02082
         L     RET,K0(,RCORE)           SVRB ADDR                Y02802
         MODESET EXTKEY=SUPR            RB KEY                   Y02082
         NI    RBSTABYT(RET),ALLBITS-K4  TURN OFF CHKPT FLAG
         MODESET EXTKEY=RBT234,WORKREG=1 USER KEY                Y02082
         LM    RDCB,RBASE,RBEXSAVE      RESTORE REGS 2-3       @ZA13524
         LM    RES,RD,RBEXSAVE+K12      RESTORE REGS 5-13      @ZA13524
*
         DEBCHK (RDCB)                  VALIDATE DCB             Y01021
         LR    RDEB,R1                  LOAD VALIDATED DEB ADDR  Y01021
         DROP  RET
         OI    DCBOFLGS,DCBOLOCK        UNLOCK DCB
         LTR   R6,R6                    TEST IF CHKPT=EOV       Z30JSFC
         BZ    EIN21550                 YES - GO TEST FOR USER  Z30JSFC
         EJECT                                                   Y02082
EIN22000 EQU   *                        GET SMALL EOV WORKAREA
         BALR  RBASE,0                  RE-ESTABLISH BASE
         USING *,RBASE
         GETMAIN R,LV=72,SP=230         USER REG SAVE AREA       Y02082
         LR    RET,R1                   SAVE ADDR USER SAVE AREA Y02082
         MODESET EXTKEY=DATAMGT         EOV KEY FOR GETMAIN      Y02082
         GETMAIN R,LV=92,SP=230         SMALL WORK AREA FOR            *
                                        LAST LOAD - EOVLAST      Y02082
         LR    RCORE,R1                 WORK AREA ADDR           Y02082
         USING EOVLAST,RCORE            IFG0551L SPECIAL WORK AR Y02082
         ST    RDEB,EOVDEBAD            SAVE DEB ADDR            Y02082
         ST    RD,EOVVOLSW              SAVE VOL 'SWITCH INDR'   Y02082*
                                        FOR BDAM/VS RCDS         Y02082
         ST    RET,EOVURGSV             SAVE ADDR USER REG SAVE  Y02082
         BAL   R6,EIN24840              GET SVRB PTR             Y02082
         USING RBSECT,RET               RB ADDR                  Y02082
         L     RET,RBLINK               GET PREV RB PTR          Y02082
         MVC   EOVUKEY,RBOPSW+K1        GET USER KEY             Y02082
         NI    EOVUKEY,KEYMASK          SAVE KEY ONLY            Y02082
         DROP  RET                                               Y02082
         MODESET KEYADDR=EOVUKEY,WORKREG=15 USER'S KEY           Y02082
         LR    RD,R1                    INIT ADDR EOV REG SV AR  Y02082
         EJECT
         NI    DCBCIND2,ALLBITS-DCBCNWR0 TURN OFF INDICATOR WHICH
*                                       CAUSES LOAD MODE TO GO TO
*                                       NEXT TRACK
         SR    RC,RC                    INITIALIZE
         SR    R7,R7
         NI    DCBIFLGS,ALLBITS-DCBIFPIO CLEAR ERROR CONDITION DCB
         NI    DCBCIND1,ALLBITS-DCBCNEVB TURN OFF VOLUNE FULL BIT
         TM    DCBDEVT,DCBDEVDA         DIRECT ACCESS DEVICE
         BNO   EIN22300                 NO BRANCH
*
*
         L     RUCB,DEBUCBAD            YES LOAD MAIN UCB ADDR.
         LA    RUCB,K0(RUCB)            CLEAR HI BYTE
         MVC   DCBDEVT(K1),UCBTBYT3     STORE DEVICE CLASS
         OC    DCBDEVT(K1),UCBTBYT4     STORE DEVICE NUMBER
*
         USING CVT,RET
         L     RET,CVTPTR(,R0)          GET CVT ADDRESS
         L     RET,CVTZDTAB             DEV CHAR TABLE ADDRESS
         IC    R1,DCBDEVT               GET DEVICE NUMBER
         LA    R8,K15                   MASK OUT HIGH-ORDER ...
         NR    R1,R8                    28 BITS
         IC    R1,0(R1,RET)             ADD ID TO TABLE ADDRESS
         LA    RET,0(R1,RET)            PT TO ENTRY FOR THIS DEV.
         IC    R1,DCBDVTBL              SAVE RECORD NUMBER
         ST    RET,DCBDVTBL             ADDR OF ENTRY IN DEV. TAB.
         STC   R1,DCBDVTBL              RESTORE RECORD NUMBER
         IC    R1,K8(K0,RET)            GET KEY OVHEAD CONSTANT
         CLI   DCBKEYLE,K1              KEYS SPECIFIED
         BC    10,EIN22200              YES, BRANCH AROUND STORE
         STC   R1,DCBKEYCN              UPDATE DCB KEY OVHEAD CON
EIN22200 EQU   *                        INIT DCBTRBAL
         L     RUCB,DCBDVTBL            GET DEVICE CONSTANTS
         MVC   DCBTRBAL(K2),K4(RUCB)    INITAILIZE TRACK BALANCE
         EJECT
EIN22300 EQU   *                        GET CURRENT IOB, ERROR IOB
         L     RET,DCBIOBA              GET CURR IOB IN USE
         LA    RET,K0(RET)              CLEAR HI BYTE
         L     R1,K4(RET)               IOB IN ERROR
         LA    R1,K0(R1)                HI BYTE ZEROED
*
*        CHAINED SCHEDULING AND SPANNED RECORDS FEOV             YM1194
*        REPOSITIONING ARE MUTUALLY EXCLUSIVE                    YM1194
*
         TM    DCBCIND2,DCBC2CHN        PCI BEING USED           YM1194
         BO    EIN25300                 YES, BRANCH              YM1194
         TM    DCBIOBAD,DCBIONOT        FREEING DEB FEOV
         BO    EIN26520                 YES, BRANCH              Y02082
         TM    DCBIOBAD,DCBIOUPD        IS QSAM EOV
*                                       REPOSITIONING
         BO    EIN26550                 YES, BRANCH              Y02082
*
*                                       PCI/FEOV REPOS NOT USED  YM1194
*
EIN22310 EQU   *                        GET END OF BLOCK ADDR    M0135
         TM    DCBCIND2,DCBC2QSM        QSAM BEING USED
         BO    EIN22400                 YES, GET EOB ADDRESS
*                                       BSAM
         L     RF,DCBEOBW               GET WRITE EOB RT ADDRESS
         B     EIN22500                 BRANCH SET IOB COMPLETE
EIN22400 EQU   *                        QSAM
         L     RF,DCBEOB                QSAM EOB ROUTINE ADDRESS
EIN22500 EQU   *                        CHECK STATUS
         MVI   K4(R1),ECBCOD7F          SET IOB COMPLETE NO ERROR
*
         TM    K0(R1),IOBWRITE          IS IT WRITE STATUS
*
         BO    EIN22600                 YES, BRANCH
*
         TM    DEBOPATB,K7              CHECK IF OUTPUT STATUS
         BNO   EIN23100                 NO BRANCH
*
EIN22600 EQU   *                        CHECK FEOV
*
         TM    DCBCIND2,DCBC2FEO        OUR WE IN FEOV MODE
         BO    EIN26550                 YES, BRANCH              Y02082
         EJECT
EIN22700 EQU   *                        TAPE TEST
         TM    DCBDEVT,DCBDEVTP         DCB USING TAPE
         BZ    EIN22800                 NO,BRANCH
*
         CR    RET,R1                   ARE THEY THE SAME
         BE    EIN26550                 YES, BRANCH              Y02082
*
         L     R1,K0(K0,R1)             PICK UP THE NEXT IOB
         LA    R1,K0(K0,R1)             CLEAR THE HI ORDER BYTE
*
EIN22800 EQU   *                        UPDATE BDAM LOAD DCB
*
         TM    DCBCIND2,DCBC2QSM        DCB FOR QSAM
         BO    EIN22900                 YES BRANCH
*
         TM    DCBMACRF+K1,DCBMLOC      FOR LOADMODE WRITE
         BZ    EIN22900                 NO, BRANCH
*
         TM    DCBRECFM,DCBRECTK        IS DATA SET TRK OVERFLO
         BZ    EIN22850                 IF NOT,DON'T UPDATE WCP
         SR    RF,RF                    CLEAR REG
         IC    RF,DCBFDAD               INSERT NO. OF EXTENTS
         SLL   RF,K4                    MULTIPLY BY 16
         AR    RF,RDEB                  ADD DEB ADDR TO OFFSET
         MVC   DCBWCPO(K2),K46(RF)      ST NO. TRKS IN NEW EXTENT
EIN22850 EQU   *                        SET FIRST ENTRY BIT
         L     RF,DCBWRITE              GET LOADMODE WRT RT ADDRESS
         LA    RF,K4(RF)                ADD 4 FOR EOV ENTRY
         MODESET EXTKEY=DATAMGT         EOV AREA                 Y02082
         MVI   EOVENT1,ALLBITS          SET 1ST ENTRY BIT        Y02082
         EJECT
EIN22900 EQU   *                        SAVE REGS ACCROSS SYNCH/BALR
         MODESET EXTKEY=DATAMGT         EOV KEY                  Y02082
         STM   RDCB,R1,K0(RD)           SAVE 16 REGISTERS
*
         MODESET KEYADDR=EOVUKEY,WORKREG=7                       Y02082
         SR    R7,R7
         IC    R7,DCBOFFSW              GET WRT CCW OFFSET
         MVC   DCBIOBA+K1(K3),K61(RD)   MOVE IOB FROM SAVE TO DCB
*                                       PROTECT INTEGRITY OF FLAG BYTE
*                                       THE SLOT FOR CURRENT IOB
         TM    DCBOPTCD,DCBOPTT         TEST FOR USER TOTALING
         BZ    EIN23000                 BR IF NOT SPECIFIED
*
         SR    R8,R8                    CLEAR THIS REG
         SR    RC,RC                    CLEAR THIS REG
         IC    R8,DEBNMEXT              GET NUMBER OF EXTENTS
         IC    RC,DEBEXSCL              GET SCALING FACTOR
         SLL   R8,K0(RC)                MULT TO GET DD SEC LEN
         L     RC,K36(RDEB,R8)          GET POINTER TO SAVE WA
         OI    K0(RC),LASTNTRY          SET SW IN SAVE AREATO
*                                       STOP SAVE OF IMAGE AREA
EIN23000 EQU   *                        SYMBOLIC ADDR
*
*
*
         BAL   R5,EIN24820              GO TO SET UP FOR BR TO   M0135
*                                       WRT                      M0135
         TM    DCBMACRF+K1,DCBMLOC      IS THIS BDAM CREATE    SA53790
         BZ    EIN23050                 NO, BRANCH AROUND NEXT SA53790
         MODESET EXTKEY=DATAMGT         EOV WORK AREA            Y02082
         MVI   EOVENT1,K0               SET FIRST ENTRY SW OFF   Y02082
         MODESET KEYADDR=EOVUKEY,WORKREG=5 RET TO USER KEY       Y02082
         EJECT
EIN23050 EQU   *                        MORE IOBS               SA53790
*
*  NOTE- IF USER TOTALING WAS SPECIFIED, THE COMMUNICATIONS BIT
*        IN TOTALING WORK AREA IS TURNED OFF BY IGG019AX
*
*
         CR    R1,RET                   ARE THERE MORE TO SCHEDULE
         BE    EIN26550                 NO, BRANCH               Y02082
         L     R1,0(R1)                 RE SCHEDULE NEXT IOB
         LA    R1,0(R1)                 CLEAR HI BYTE
         B     EIN22900                 BRANCH TO PROCESS NEXT IOB
*
***********************************************************************
*
*
*
*              READ  STATUS WHEN EOV OCCURED
*
*
*
***********************************************************************
*
EIN23100 EQU   *                        CHECK FOR DA
*
         TM    DCBDEVT,DCBDEVDA         USING DIRECT ACCESS      A45048
*                                       DEVICE                   A45048
         BNO   EIN23700                 NO, BRANCH               A45048
*
*
EIN23200 EQU   *                        GET CCW OFFSET
*
         TM    DEBOPATB,DEBOPUPD        UPDATE MODE SPECIFIED
         BNO   EIN23500                 NO, BRANCH
         TM    DEBOPATB,ALLBITS-DEBOPUPD-ZONEOF  ONLY UPDATE SPECIFIED
         BNZ   EIN23500                 NO, BRANCH
         SR    R8,R8                    CLEAR REG
         IC    R8,DCBOFFSR              GET RD DATA CCW ADDRESS
         LR    RUCB,R1                  COPY IOB ADDRESS
*
EIN23300 EQU   *                        GET CCW ADDRESS
         AR    R8,RUCB                  GET RD DATA CCW THIS IOB
         CLI   K8(R8),CCWRDSEC          IS RPS USED
         BNE   EIN23400                 BRANCH IF NO
         LA    R8,K8(R8)                INCR PAST RD SEC CCW
         EJECT
EIN23400 EQU   *                        UPDATE FDAT
         MVC   K8(K8,R8),DCBFDAD        UPDATE SPECIAL FDAD
         SR    R8,RUCB                  GET OFFSET IN RA TO CCW
         L     RUCB,0(RUCB)             LINK TO NEXT IOB
         LA    RUCB,0(RUCB)             HI BYTE CLEARED
         CR    RUCB,R1                  HAVE ALL IOBS BEEN SET TO MBB
         BNE   EIN23300                 NO, BRANCH
         NI    DCBCIND2,ALLBITS-DCBCNCLO TURN OFF BUFFERS FLUSHED IND.
EIN23500 EQU   *                        UPDATE IOBSEEK
         MVC   K40(K8,R1),DCBFDAD       ESTABLISH NEW MBB---R IN IOB
         L     RUCB,0(R1)               GET NEXT IOB ADDRESS
EIN23600 EQU   *                        SEE IF MORE IOBS
         LA    RUCB,0(RUCB)             HI BYTE CLEARED
         CR    RUCB,R1                  HAVE ALL IOBS BEEN SET TO MBB
         BE    EIN23700                 YES, BRANCH
*
         MVC   K40(K8,RUCB),DCBFDAD     STORE PROPER MBB IN IOB
         L     RUCB,0(RUCB)             LINK TO NEXT IOB
         B     EIN23600                 BRANCH TO PROCESS NEXT IOB
*
EIN23700 EQU   *                        GET END OF BLOCK ADDR
*
         TM    DCBCIND2,DCBC2QSM        DCB USING QSAM
         BO    EIN24300                 YES, BRANCH
*
         TM    DCBCIND2,DCBC2FEO        ARE WE IN FEOV MODE
         BO    EIN26550                 YES, BRANCH              Y02082
*
         L     RF,DCBEOBR               GET READ EOB RT ADDDRESS
*
EIN24000 EQU   *                        SAVE REGS ACROSS SYNCH
         MODESET EXTKEY=DATAMGT         EOV WORK AREA            Y02082
         STM   RDCB,R1,0(RD)            SAVE 16 REGISTERS
         MODESET KEYADDR=EOVUKEY,WORKREG=7                       Y02082
         EJECT
         TM    DCBCIND2,DCBC2FEO        WAS ENTRY CAUSED BY FEOV
         BZ    EIN24100                 NO,BRANCH.
*
         TM    DCBMACRF,DCBMPMOV+DCBMSUB  YES, IS THIS LOCATE MODE
         BM    EIN24100                 IF NOT MOVE OR SUBSTITUTE MODE,
*                                         ASSUME LOCATE AND FALL THRU.
         CR    R1,RET                   IS THIS THE LAST IOB
         BE    EIN26550                 IF SO, DON'T SCHEDULE IT Y02082
*
EIN24100 EQU   *                        UPDATE DCBIOBA
         SR    R7,R7                    CLEAR REG
         IC    R7,DCBOFFSR              GET READ CCW OFFSET
*
         MVC   DCBIOBA+K1(K3),K61(RD)   MOVE IOB FROM SAVE TO DCB
*                                       TO  BE SCHEDULED IN SLOT FOR
*                                       CURRENT IOB
         LA    R1,K0(,R1)               ZERO HIGH-ORDER BYTE OF IOB
         BAL   R5,EIN24820              GO TO SET UP FOR BR TO   M0135
*                                       EOBRD                    M0135
*
         CR    RET,R1                   ARE THERE MORE IOBS TO SCHEDULE
         BE    EIN26550                 NO, BRANCH               Y02082
EIN24200 EQU   *                        RESCHEDULE NEXT IOB
         L     R1,0(R1)                 GET NEXT IOB
         LA    R1,0(R1)                 CLEAR HI BYTE
         B     EIN24000                 RE SCHEDULE
         EJECT
EIN24300 EQU   *                        QSAM INPUT PROCESSING
         L     RF,DCBEOB                GET EOB RT ADDRESS
         TM    DCBCIND2,DCBC2FEO        ARE WE IN FEOV MODE
         BZ    EIN24000                 NO BRANCH
         MVC   DCBRECAD(K4),DCBEOBAD    FORCE END OF BLOCK CONDITION
         TM    DCBMACRF,DCBMLOC         LOCATE MODE
         BZ    EIN24200                 NO BRANCH
EIN24400 EQU   *                        FEOV LOCATE MODE PROCESSING
         L     R1,0(R1)                 GET NEXT IOB
         LA    R1,0(R1)                 CLEAR HI BYTE
         CR    RET,R1                   ARE THERE MORE IOBS TO SCHEDULE
         BE    EIN26550                 NO, BRANCH               Y02082
         MODESET EXTKEY=DATAMGT         EOV EORK AREA            Y02082
         STM   RDCB,R1,0(RD)            SAVE 16 REGISTERS
         MODESET KEYADDR=EOVUKEY,WORKREG=5                       Y02082
         IC    R7,DCBOFFSR              GET READ CCW OFFSET
         BAL   R5,EIN24820              GO TO SET UP FOR BR TO   M0135
*                                       EOBWRT                   M0135
         B     EIN24400                 BRANCH TO DO NEXT IOB
         EJECT
***********************************************************************
***********************************************************************
*
*        THE FOLLOWING ROUTINE DETERMINES IF A SYNCH OR BALR SHOULD BE
*        TAKEN TO THE EOB/WRITE ROUTINE AND TAKES IT.  THE DECISION IS
*        MADE ON THE BASIS OF THE CALLING RB. IF IT IS IN KEY 0-7,
*        BALR IS USED IN CALLER'S KEY. IF IT IS USER KEY,
*        KEY IS CHANGED TO THAT OF THE USER VIA A SYNCH MACRO.  BEFORE
*        THE SYNCH, A GETMAIN WAS ISSUED TO GET A SAVEAREA FOR THE I/O
*        ROUTINE IN SP 230.   ALL REGISTERS
*        HAVE BEEN SAVED BEFORE BRANCHING TO THIS ROUTINE.  RETURN IS
*        MADE VIA REG 5.
*
***********************************************************************
***********************************************************************
EIN24820 EQU   *                        SAVE ROUTINE'S RETURN    M0135
         BAL   R6,EIN24840              BR TO GET SVRB PTR       M0135
         USING RBSECT,RET                                        M0135
         MODESET EXTKEY=DATAMGT         EOV WORK AREA            Y02082
         ST    R5,K12(RD)               ST RETURN ADDR IN EOV    M0135
*                                       SAVE                     M0135
         MODESET EXTKEY=SUPR            RB KEY                   Y02082
         ST    RD,RBEXSAVE+K4           SAVE R13 USER SAVEAREA   M0135
         L     R5,EOVDEBAD              GET DEB ADDR IN REG 5   YM0992
         L     RC,RBLINK                PTR TO PREVIOUS RB       M0135
         L     RD,EOVURGSV              USER REG SAVE AREA       Y02082
         MODESET KEYADDR=EOVUKEY,WORKREG=14 ASSUME USER KEY     YA02114
*        TURN OFF BUSY BIT SO DCB CAN BE CLOSED IF              YA02114
*        'SOMETHING' HAPPENS IN THE EXIT                        YA02114
         NI    DCBOFLGS,ALLBITS-DCBOBUSY TURN OFF BUSY BIT      YA02114
         CLI   RBOPSW+K1-RBSECT(RC),X80 IS PREVIOUS RB IN        Y02082
*                                       SYSTEM KEY               Y02082
         BNL   EIN24830                 NO, BRANCH TO SYNCH      Y02082
         LR    RBASE,R1                 PUT IOB ADDR IN REG 3    M0135
         BALR  RET,RF                   BR TO EOB IN SUPER STATE Y02082
         BALR  RET,0                    ESTABLISH ADDRESSABILITY Y02082
         USING *,RET                    BASE FOR 2 INSTRUCTIONS
EIN24825 LA    R6,EIN24870              RETURN ADDR FROM SVRB    Y02082
*                                       ROUTINE                  Y02082
         B     EIN24840                 RESTORE REGS             Y02082
         DROP  RET
         USING RBSECT,RET                                        M0135
         EJECT
EIN24830 EQU   *                        SYNCH INTO USER KEY      M0135
         LR    RBASE,R1                 PUT IOB IN R3 FOR BRANCH Y02082
         SYNCH  (15)                    GO TO EOV/WRITE ROUTINE  M0135
         BALR  R6,0                     PUT CURRENT ADDR IN R6   M0135
         USING *,R6                     BASE FOR NEXT INSTRUCTION
EIN24835 LA    R6,EIN24870              ESTABLISH BRANCHING      M0135
*                                       ADDR TO BE TAKEN WITH R6 FROM
*                                       SVRB SUBROUTINE
         DROP  R6
***********************************************************************
*        THE FOLLOWING ROUTINE CHAINS DOWN THE CVT, TCB AND RB TO PICK
*        UP THE CURRENT SVRB, WHICH IS PASSED BACK TO THE MAIN ROUTINE
*        IN REG 14.  RETURN ADDRESS IN IN REG 6.
***********************************************************************
EIN24840 EQU   *                        GET SVRB ADDR IN RET     M0135
         L     RET,CVTPTR               PTR TO CVT               M0135
         L     RET,K0(K0,RET)           PTR TO TCB PTRS          M0135
         L     RET,K4(K0,RET)           PTR TO TCB               M0135
         L     RET,K0(K0,RET)           PTR TO SVRB              M0135
         BR    R6                       RETURN WITH SVRB IN R14  M0135
***********************************************************************
EIN24870 EQU   *                        VERIFY DEB               M0135
         L     RD,RBEXSAVE+K4           LOAD R13 THAT WAS SAVED  M0135
         LM    RDCB,RA,0(RD)            RESTORE REGS FOR DEBCHK  Y01021
         OI    DCBOFLGS,DCBOBUSY        TURN BUSY BIT BACK ON   YA02114
         DEBCHK  (RDCB)                 VERIFY DEB               Y01021
         LR    RDEB,R1                  LOAD VERIFIED DEB        Y01021
         LM    RC,R1,K40(RD)            RESTORE OTHER REGS       Y01021
         MODESET EXTKEY=DATAMGT         EOV WORK AREA            Y02082
         ST    RDEB,EOVDEBAD            SAVE DEB                 Y02082
         MODESET KEYADDR=EOVUKEY,WORKREG=6 USER KEY              Y02082
         BR    R5                       RETURN TO MAIN ROUTINE   M0135
         DROP  RET                                               M0135
         EJECT                                                   Y02082
*        FOR DATA SETS PROCESSED USING CHAINED SCHEDULING,
*        THIS ROUTINE WILL HONOR ALL PREVIOUS REQUESTS THAT WERE
*        PURGED OR ANY PRIMING THAT MUST BE DONE.
*
*        RESTORE CHAIN SCHEDULING IOBS                           Y02082
*
EIN25300 EQU   *                        GET MAIN IOB
*
*        RC = IOB PTR                                            Y02082
*
         SR    RF,RF
         L     R8,DCBIOBAD              GET MAINIOB
         IC    RF,K3(R8)                GET OUTPUT NOP OFFSET
         TM    K0(R1),IOBWRITE          IS THIS OUTPUT
         BO    EIN25400                 YES,  GO ON
         IC    RF,K2(R8)                GET INPUT NOP OFFSET
         TM    K0(R1),IOBREAD           IS THIS INPUT           ZA00707
         BO    EIN25400                 YES, GO ON              ZA00707
         IC    RF,K3(R8)                GET OUTPUT NOP OFFSET   ZA00707
         TM    DCBOFLGS,DCBOWRIT        IS THIS OUTPUT          ZA00707
         BO    EIN25400                 YES, GO ON              ZA00707
         IC    RF,K2(R8)                GET INPUT NOP OFFSET    ZA00707
EIN25400 EQU   *                        COPY ICB ADDRESS
         TM    DCBCIND2,DCBC2FEO        IS THIS FEOV            ZA00020
         BZ    EIN25450                 NO, GO AROUND           ZA00020
         L     R1,K0(R1)                GET NEXT ICB ADDRESS    ZA00020
         LA    R1,K0(R1)                CLEAR HI ORDER BYTE     ZA00020
EIN25450 EQU   *                                                ZA00020
         LR    R7,R1
*
*        FALL INTO LOOP TO CHANGE ALL NOPS TO TICS.
*
EIN25500 EQU   *                        ZERO ECB FOR INPUT/NOT FEOV
         TM    DCBMACRF,DCBMLOC         LOCATE MODE            @ZA08004
         BZ    EIN25525                 NO BRANCH              @ZA08004
         CR    R7,RET                   ALL ICBS UPDATED       @ZA08004
         BNE   EIN25525                 NO,CONTINUE            @ZA08004
         TM    DCBCIND2,DCBC2FEO        IS THIS FEOV           @ZA08004
         BNO   EIN25525                 NO,  GO AROUND         @ZA08004
         TM    DCBDEVT,DCBDEVDA         DIRECT ACCESS DEVICE   @ZA08004
         BZ    EIN25650                 NO,BRANCH OUT OF LOOP  @ZA08004
         CLI   DCBIOBL,X'08'            ICB LENGTH >8 DW ?     @ZA15980
         BNH   EIN25650                 NO, GO UPDATE SECTOR   @ZA15980
         CLI   K8(RC),CCWRDSEC          RPS USED               @ZA08004
         BNE   EIN25650                 NO,BRANCH OUT OF LOOP  @ZA08004
EIN25525 LA    RC,0(RF,R7)              GET TO NOP CCW         @ZA08004
         TM    K0(R7),IOBWRITE          IS THIS OUTPUT
         BO    EIN25600                 YES,BR TO GET NEXT ICB
         TM    K0(R7),IOBREAD           IS THIS INPUT           ZA00707
         BO    EIN25550                 YES, GO ON              ZA00707
         TM    DCBOFLGS,DCBOWRIT        IS THIS OUTPUT          ZA00707
         BO    EIN25600                 YES, BR TO GET NEXT ICB ZA00707
EIN25550 EQU   *                                                ZA00707
         TM    DCBCIND2,DCBC2FEO        IS THIS FEOV
         BNO   EIN25600                 NO,  GO AROUND
         MVC   DCBRECAD(K4),DCBEOBAD    FORCE EOB CONDITION    @ZA08004
         L     RWTG,K12(R7)             GET ECB POINTER
         MVI   K0(RWTG),K0              ZERO ECB
EIN25600 EQU   *                        SEE IF ALL ICBS SCHEDULED
         MVI   K0(RC),CCWTIC            STORE TIC
         L     RWTG,K0(R7)              GET TO NEXT ICB
         MVC   K1(K3,RC),K25(RWTG)      STORE NEXT ICBS CP ADDRESS
         CR    R7,RET                   HAVE ALL ICBS BEEN UPDATED
         BE    EIN25650                 YES,BRANCH OUT OF LOOP
         L     R7,K0(R7)                LINK TO NEXT ICB TO UPDATE
         LA    R7,K0(R7)                CLEAR HI BYTE
         B     EIN25500                 BR TO PROCESS ICB
         EJECT
EIN25650 EQU   *                        UPDATE READ SECTOR FOR RPS
         TM    DCBDEVT,DCBDEVDA         DIRECT ACCESS DEVICE    OZ04912
         BZ    EIN25700                 NO, BRANCH              OZ04912
         CLI   DCBIOBL,X'08'            ICB LENGTH >8 ?        @ZA15980
         BNH   EIN25700                 NO, GO STORE NOP       @ZA15980
         CLI   K8(RC),CCWRDSEC          RPS USED                OY00283
         BNE   EIN25700                 BRANCH NO
         LA    RPARC,K8(RC)             RD SECTOR ADDR          OY00283
         ST    RPARC,K0(RC)             IN CHP                  OY00283
         MVI   K0(RC),CCWNOTIC          PUT IN NOPTIC CMND      OY00283
         B     EIN25750                 AROUND NEXT
*
EIN25700 EQU   *                        STORE NOP IN LAST ICB
*
         MVI   K0(RC),CCWNOP
EIN25750 EQU   *                        UPDATE MAIN IOB LAST NOP PTR
*
         ST    RC,K12(R8)               STORE LAST NOP PTR IN MAINIOB
         MVI   K12(R8),IOBCEXCP         INDICATE EXCP NEEDED     YM6583
*
         LR    R7,RET                   COPY FIRST ICB TO LOOP ON
*
         TM    DCBDEVT,DCBDEVDA         DIRECT ACCESS DEVICE USED
         BZ    EIN26000                 NO BRANCH
*
EIN25800 EQU   *                        UPDATE MAIN IOBSEEK
         MVC   K48(K8,R8),DCBFDAD       UPDATE MAIN IOB
EIN25900 EQU   *                        UPDATE ICBSEEKS
*
         MVC   K32(K8,R7),DCBFDAD       UPDATE MBBCCHHR IN ICB @ZA01346
         L     R7,K0(R7)                GET NEXT ICB
         LA    R7,K0(R7)                CLEAR HI BYTE
         CR    R7,RET                   HAVE ALL ICB BEEN UPDATED
         BNE   EIN25900                 NO BRANCH
*
EIN26000 EQU   *                        SET TAPE OUTPUT NOP
*
         TM    K0(R1),IOBREAD           DCB IN READ STATUS      ZA00707
         BO    EIN26200                 YES,BRANCH              ZA00707
         TM    K0(R1),IOBWRITE          DCB IN WRITE STATUS     ZA00707
         BO    EIN26050                 YES, BRANCH             ZA00707
         TM    DCBOFLGS,DCBOWRIT        DCB IN OUTPUT STATUS    ZA00707
         BZ    EIN26200                 NO, BRANCH              ZA00707
EIN26050 EQU   *                                                ZA00707
*
         TM    DCBDEVT,DCBDEVTP         DCB USING TAPE
         BZ    EIN26100                 NO BRANCH
*
*
*
*
         MVI   K40(R1),CCWNOP           ERROR ICB WROTE OVER TAPE IND
         TM    DCBCIND2,DCBC2FEO        ARE WE IN FEOV          ZA00020
         BO    EIN26500                 YES, DON'T SCHEDULE     ZA00020
         CR    R1,RET                   WAS THIS ONLY REQUEST ON Q
*
         BE    EIN26500                 YES  BRANCH
         L     R1,K0(R1)                GET NEXT ICB
         B     EIN26200                 START UP THE MAIN IOB
         EJECT
EIN26100 EQU   *                        GET END OF BLOCK ADDR
*
         TM    DCBDEVT,DCBDEVDA         DCB USING DISK OR DRUM
         BZ    EIN26200                 NO BRANCH
*
         TM    DCBCIND2,DCBC2FEO        ARE WE IN FEOV
         BO    EIN26500                 YES,  DON'T SCHEDULE
*
         L     RF,DCBEOBW               GET BSAM EOB RT ADDRESS@ZA14615
         TM    DCBCIND2,DCBC2QSM        QSAM BEING USED        @ZA14615
         BZ    EIN26800                 NO, BRANCH             @ZA14615
*
         L     RF,DCBEOB                GET QSAM EOB RT ADDRESS@ZA14615
         B     EIN26800                 GO BACK TO COMMON CODE
*
*
EIN26200 EQU   *                        UPDATE FIRST ICB ADDR
*
         L     R0,K24(R1)               GET C P STARTAD
         ST    R1,K8(R8)                STORE 1ST ICB PTR IN MAINIOB
         L     R1,K12(R1)               GET ECB PTR
         MVI   K0(R1),K0                SET ECB TO ZERO
*
         TM    DCBDEVT,DCBDEVDA         DCB USING DISK OR DRUM
         BZ    EIN26300                 NO BRANCH
         CLI   K56(R8),CCWSTSEC         IS RPS USED              M0919
         BNE   EIN26250                 BRANCH NO
         ST    R0,K80(R8)               PUT IN TIC ADDR
         MVI   K80(R8),CCWTIC           RESTORE TIC CMND
         B     EIN26400                 GO DO IT
EIN26250 EQU   *                        FIRST ICB ADDR-NOT RPS
         ST    R0,K72(R8)               STORE FIRST ICB CP IN TIC
         MVI   K72(R8),CCWTIC           RESTORE TIC OP CODE
         B     EIN26400                 BR TO ISSUE SVC EXCP
*
*
EIN26300 EQU   *                        FIRST ICB ADDR-NOT DA
*
         ST    R0,K32(R8)               STORE FIRST ICBS CP IN MAIN IOB
         EJECT
EIN26400 EQU   *                        EXCP IF NOT BSAM FEOV
*
         TM    DCBCIND2,DCBC2FEO        ARE WE IN FEOV           A44081
         BNO   EIN26450                 NO, CONTINUE             A44081
         TM    DCBCIND2,DCBC2QSM        QSAM BEING USED          A44081
         BNO   EIN26500                 NO, SKIP EXCP            A44081
EIN26450 EQU   *                        EXCP MAIN IOB
         MVI   K12(R8),K0               RESET EXCP NEEDED BIT    YM6583
         LA    R8,K16(R8)               GET IOS IOB
         EXCP  (R8)                     START UP THE MAIN IOB
         B     EIN26550                 BR TO FREECORE
*
*
EIN26500 EQU   *                        POST ECB
         MVI   K4(R8),ECBCOD7F          POST ECB COMPLETE
         B     EIN26550                 BR TO FREE WKAREA        M0135
         SPACE 2                                                 Y02082
***                                                              Y02082
*        CLEAR IOB FIELD, FREE WKAREA AND EXIT                   Y02082
***                                                              Y02082
EIN26520 EQU   *                        SPANNED UPDATE INDICATOR M0135
         XC    DCBIOBAD,DCBIOBAD        CLEAR IOB FIELD          M0135
         OI    DCBIOBAD+K3,K1           TURN ON NO UPDATE BIT    M0135
         EJECT                                                   Y02082
***                                                              Y02082
*        FREE WKAREA AND EXIT                                    Y02082
***                                                              Y02082
EIN26550 EQU   *                        SWAP USER/SVRB REGS IF NOT FEOV
*
         TM    DCBCIND2,DCBC2FEO        TEST FOR FEOV MODE
         BO    EIN26600                 YES BRANCH
         BAL   R6,EIN27400              GO GET SVRB PTR          M0135
         L     RD,K84(RET)              GET USER SAVE AREA
         LR    R1,RCORE                 ADDR EOV SPEC AREA       Y02082
         LM    RCORE,RC,K32(RET)        GET USER REGISTERS
         MODESET EXTKEY=SUPR            RB KEY                   Y02082
         MVC   K32(K36,RET),K28(RD)     REST CALLER REGS 0-8     Y02082
         MODESET KEYADDR=EOVUKEY-EOVLAST(R1),WORKREG=15          Y02082*
                                        USER KEY                 Y02082
         STM   RCORE,RC,K28(RD)         STORE USERS REGISTERS IN SAVE A
         LR    RCORE,R1                 RESTORE EOV WORK AREA    Y02082
EIN26600 EQU   *                        RESET FEOV/BUSY BITS
         NI    DCBCIND2,ALLBITS-DCBC2FEO  TURN OFF FEOV FLAGS
         TM    DCBCIND2,DCBC2PUT        EOV ENTERED FROM
*                                       CLOSE
         BO    EIN26700                 YES,  BR
*
         NI    DCBOFLGS,ALLBITS-DCBOBUSY  RESET I/O SUPPORT BIT
         EJECT
EIN26700 EQU   *                        EXIT                     Y02080
         L     R1,EOVURGSV              ADDR USER REG SAVE AREA  Y02082
         FREEMAIN R,LV=72,A=(1),SP=230 FREE USER REG SAVE AREA   Y02082
         MODESET EXTKEY=DATAMGT         KEY OF EOV EORK AREA     Y02082
         FREEMAIN R,LV=92,A=(RCORE),SP=230 FREE EOV SPEC W/A     Y02082
         LR    R1,RDCB                  GET DCB ADDRESS
         SR    RF,RF                    INDICATE NO PERM ERRORS
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
         EJECT                                                   Y02082
EIN26800 EQU   *                        GO TO EOB ROUTINE
***********************************************************************
***********************************************************************
*
*        THE FOLLOWING ROUTINE DETERMINES IF A SYNCH OR BALR SHOULD BE
*        TAKEN TO THE EOB/WRITE ROUTINE AND TAKES IT.  THE DECISION IS
*        MADE ON THE BASIS OF THE CALLING RB. IF IT IS KEY 0-7,
*        BALR IS USED IN CALLER'S KEY. IF IT IS USER KEY,
*        KEY IS CHANGED TO THAT OF THE USER VIA A SYNCH MACRO.  BEFORE
*        THE SYNCH, A GETMAIN WAS ISSUED TO GET A SAVEAREA FOR THE I/O
*        ROUTINE IN SP 230.   ALL REGISTERS
*        HAVE BEEN SAVED BEFORE COMING TO THIS ROUTINE
*
***********************************************************************
***********************************************************************
         SPACE
         MODESET EXTKEY=DATAMGT         EOV WORK AREA            Y02082
         STM   RDCB,R1,K0(RD)           SAVE 16 REGISTERS
         MODESET KEYADDR=EOVUKEY,WORKREG=7 USER KEY              Y02082
*
         SR    R7,R7                    CLEAR REG
         IC    R7,DCBOFFSW              GET WRT CCW OFFSET
         MVC   DCBIOBA+K1(K3),K61(RD)   MOVE IOB FROM SAVE AREA
*                    TO DCB PROTECT INTEGRITY OF FLAG BYTE
*                                       THE SLOT FOR CURRENT IOB
         TM    DCBOPTCD,DCBOPTT         TEST FOR USER TOTALING
         BZ    EIN27000                 BR IF NOT SPECIFIED
*
         SR    RWTG,RWTG                CLEAR THIS REG
         SR    RC,RC                    CLEAR THIS REG
         IC    RWTG,DEBNMEXT            GET NUMBER OF EXTENTS
         IC    RC,DEBEXSCL              GET SCALING FACTOR
         SLL   RWTG,K0(RC)              MULT TO GET DD SEC LEN
         L     RC,K36(RDEB,RWTG)        GET POINTER TO SAVE WA
         OI    K0(RC),LASTNTRY          SET SW IN SAVE AREATO
*                                       STOP SAVE OF IMAGE AREA
         EJECT
EIN27000 EQU   *                        ISSUE SYNCH OR BALR      M0135
         BAL   R6,EIN27400              BR TO GET SVRB PTR       M0135
         USING RBSECT,RET                                        M0135
         MODESET EXTKEY=SUPR            RB KEY                   Y02082
         ST    RD,RBEXSAVE              ST SAVEAREA PTR IN SVRB  M0135
         L     RC,RBLINK                PTR TO PREVIOUS RB       M0135
         L     RD,EOVURGSV              PUT SAVEAREA PTR IN R13  Y02082
         MODESET KEYADDR=EOVUKEY,WORKREG=14 USER KEY            YA02114
*        TURN OFF BUSY BIT SO DCB CAN BE CLOSED IF              YA02114
*        'SOMETHING' HAPPENS IN THE EXIT                        YA02114
         NI    DCBOFLGS,ALLBITS-DCBOBUSY TURN OFF BUSY BIT      YA02114
         CLI   RBOPSW+K1-RBSECT(RC),X80 IS PREVIOUS RB IN        Y02082
*                                       SYSTEM KEY               Y02082
         BNL   EIN27100                 NO, BRANCH TO SYNCH      Y02082
         LR    RBASE,R1                 PUT IOB ADDR IN REG 3    M0135
         BALR  RET,RF                   NO, BR TO EOB IN SUPER   M0135
*                                       STATE                    M0135
         BALR  RET,0                    ESTABLISH ADDRESSABILITY Y02082
         USING *,RET                    BASE REG FOR NEXT 2
*                                       INSTRUCTIONS
EIN27050 LA    R6,EIN27220              RETURN ADDR FROM SVRB    Y02082
*                                       ROUTINE                  Y02082
         B     EIN27400                 BRANCH TO RESTORE REGS   Y02082
         DROP  RET
         USING RBSECT,RET                                        M0135
EIN27100 EQU   *                        SYNCH                    M0135
         LR    RBASE,R1                 PUT IOB ADDR IN R3 FOR   M0135
*                                       BRANCH                   M0135
         SYNCH  (15)                    GO TO EOB ROUTINE        M0135
         BALR  R6,0                     PUT CURRENT ADDR IN R6   M0135
         USING *,R6                     BASE FOR LA
         LA    R6,EIN27220              SET UP R6 TO BR OUT OF   M0135
*                                       SVRB SUBROUTINE
         DROP  R6
         EJECT
***********************************************************************
*        THE FOLLOWING ROUTINE CHAINS DOWN THE CVT, TCB AND RB TO PICK
*        UP THE CURRENT SVRB, WHICH IS PASSED BACK TO THE MAIN ROUTINE
*        IN REG 14.  RETURN ADDRESS IN IN REG 6.
***********************************************************************
EIN27400 EQU   *                        GET SVRB IN RET          M0135
         L     RET,CVTPTR               PTR TO CVT               M0135
         L     RET,K0(K0,RET)           PTR TO TCB PTRS          M0135
         L     RET,K4(K0,RET)           PTR TO TCB               M0135
         L     RET,K0(K0,RET)           PTR TO SVRB              M0135
         BR    R6                       RETURN WITH SVRB IN R14  M0135
EIN27220 EQU   *                        RESTORE REG 13           M0135
         L     RD,RBEXSAVE              LOAD R13 THAT WAS SAVED  M0135
         DROP  RET                                               M0135
*
*  NOTE - IF TOTALING WAS SPECIFIED, THE COMMUNICAT&ONS BIT
*        IN TOTALING WORK AREA IS TURNED OFF BY IGG019AX
*
EIN27300 EQU   *                        VERIFY DEB               M0135
         LM    RDCB,RA,0(RD)            RESTORE REGS FOR DEBCHK  Y01021
         OI    DCBOFLGS,DCBOBUSY        TURN BUSY BIT BACK ON   YA02114
         DEBCHK (RDCB)                  VERIFY DEB               Y01021
         LR    RDEB,R1                  LOAD VERIFIED DEB        Y01021
         LM    RC,R1,K40(RD)            RESTORE OTHER REGS       Y01021
         MODESET EXTKEY=DATAMGT         EOV WORK AREA            Y02082
         ST    RDEB,EOVDEBAD            STORE VERIFIED DEB ADDR  Y02082
         MODESET KEYADDR=EOVUKEY,WORKREG=6 RET USER KEY          Y02082
         CR    R1,RET                   ARE THERE MORE TO SCHEDULE
         BE    EIN26550                 NO BRANCH
         L     R1,0(R1)                 RE SCHEDULE NEXT IOB
         LA    R1,0(R1)                 CLEAR HI BYTE
         B     EIN26800                 BR TO PROCESS NEXT IOB
         EJECT
*        EQUATED NAMES                                           YM6583
IOBCEXCP EQU   X'80'                    INDICATES EXCP NEEDED    YM6583
CCWNOTIC EQU   X'88'                    INDICATES NOP/TIC COMM   YM6583
*        NOTE - IFG0558X MUST BE LINK EDITED WITH IFG0551L      Z30JSFC
XCTLTA1B XCTLTABL ID=(,IFG0558X),SVC=055,BRT=YES,LENGTH=        Z30JSFC
         EJECT
         IECDSECS  CVT,RB,DCB,UCB,DEB,MAIN,TIOT,TCB,WTG,PREFX,   Y02080*
               USERTOT,EOVLAST,                                  Y02082*
               EXPAND=YES                                        Y02080
         IECEQU
         END
