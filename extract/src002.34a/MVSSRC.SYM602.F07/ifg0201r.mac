         TITLE 'IFG0201R - DIRECT ACCESS OUTPUT USER LABEL STRING'
IFG0201R CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          RELEASE 21.7 DELETIONS/CHANGES
*0000049000,088104,088144,088264,088507-088517,088531-088535,   SA53753
*0000088540,088800-089160                                       SA53753
*          RELEASE 21 DELETIONS/CHANGES                               *
*0000088512,088533-088544,088800,088848                          M0194
*0000088536,088816                                               M0155
*0000018000,024000,026000,028000-029000,046000,084000-086000,    A38013
*0000126000-134000,197000,200000,208000,211000,220000-361000,    A38013
*0000520000,533000-540000,551000-552000                          A38013
*000089677-089715                                                M2554
*                                                                     *
* MODULE NAME = IFG0201R                                              *
*                                                                     *
* DESCRIPTIVE NAME = DIRECT ACCESS OUTPUT USER LABEL STRING           *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE DA WRITE DSCB FUNCTION.                                    *
*    CLOSE DA OUTPUT USER LABELS FUNCTION.                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0201R - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             INITIAL ENTRY--                                         *
*                IFG0200Y - PROCESS WRITE DSCB FUNCTION.              *
*             SECOND ENTRY--                                          *
*                IFG0200P - PROCESS OUTPUT USER LABELS FUNCTION.      *
*             THIRD ENTRY--                                           *
*                IFG0200P - CONTINUE PROCESSING OUTPUT USER LABELS    *
*                           FUNCTION.                                 *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202D - CONTINUE PROCESSING CLOSE DA OUTPUT USER LABELS  *
*                    FUNCTION.                                        *
*         IFG0202E - PROCESS CLOSE DA WRITE FILE MARK FUNCTION        *
*                    AND INTERFACE WITH PARTIAL RELEASE.              *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING TCB,RET
         USING UCBOB,RUCB
         USING CVT,RD
         USING TIOENTRY,RTIOT
         USING DEB,RDEB
         USING WTG,RWTG                                          A38013
         USING WTGENTRY,RWTGC                                    A38013
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         B     CDA00100(RET)            USE BRANCH TABLE
CDA00100 EQU   *
         B     CDA00200                 WRITE DSCB ENTRY         A38013
         B     CDA00240                 OUTPUT USER LABEL ENTRY  A38013
         B     CDA01900                 ENTRY FROM P.D. RTN
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE DA WRITE DSCB FUNCTION.                                    *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    WRITE THE UPDATED FORMAT 1 DSCB UNLESS PARTIAL RELEASE IS        *
*    SPECIFIED.                                                       *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE DA UPDATE DSCB FUNCTION.                                   *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    DSCB IS WRITTEN BACK UNLESS PARTIAL RELEASE IS SPECIFIED.        *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE DA OUTPUT USER LABEL FUNCTION.                             *
*    CLOSE DA EXIT FUNCTION.                                          *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH THE FOLLOWING INTERNAL CODES--                         *
*       88 - 414 ABEND - I/O ERROR WRITING DSCB.                      *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
*
CDA00200 EQU   *                                                 A38013
         L     RDEB,DCBDEBAD            LOAD DEB ADDR FROM DCB   M0194
         L     RET,DXTCBADR             CVT ADDRESS             Y02134
*
*****    INITIALIZE CONTROL BLOCKS AND CHANNEL PROGRAM TO
*****    WRITE BACK THE FORMAT 1 DSCB
*
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   CDA00210                 BR IF NOT                YM7029
*        WRITE VIO DSCB TO SWA                                   Y02132
*                                                                Y02132
         MODESET EXTKEY=SCHED           ASSUME SCHEDULER KEY     Y02132
         MVC   VDSDSCB-VDSUCB+L'JFCBDSNM(DSCEXT2-DSCFMTID,RUCB),DXDSCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02132
         B     CDA00220                 RESUME PROCESSING        Y02132
CDA00210 EQU   *                        NOT VIO                  YM7029
         TM    TCBFLG,TCBFA             IS ABEND BIT ON          YM7029
         BO    CDA00215                 BR IF YES TO WRITE       YM7029
*                                       BACK FORMAT 1 DSCB       YM7029
         TM    DEBOFLGS,DEBOFSPL        TEST IF SPLIT CYLIN      YM7029
         BO    CDA00215                 BR IF YES TO WRITE       YM7029
*                                       BACK FORMAT 1 DSCB       YM7029
         TM    DEBOFLGS,DEBOFRLS        TEST FOR PARTIAL RELEASE YM5761
         BO    CDA00220                 BRANCH IF YES (PARTIAL   YM5761
*                                       RELEASE WILL WRITE BACK  YM5761
*                                       THE FORMAT 1 DSCB)       YM5761
CDA00215 EQU   *                        SET UP CCW'S             YM7029
         LR    RC,RDEB                  USE RC FOR WORK REG      A38013
         LA    RF,K16                   DISPLACEMENT FACTOR TO   A38013
         SR    RC,RF                    POINT TO DSCB SEARCH     A38013
*                                       ADDR                     A38013
         MVC   DXDAADDR+1(K7),K1(RC)    BBCCHHR TO WORK AREA     A38013
         MVI   DXDAADDR,K0              SET M (EXTENT NO.) TO 0  A38013
         LA    RD,DXDAADDR+K3           PLACE ADDRESS OF CCHHR   A38013
*                                       INTO                     A38013
         ST    RD,DXCCW1                FIRST CCW                A38013
         LA    RD,DXCCW1                PLACE ADDRESS OF SEARCH  A38013
*                                       CCW                      A38013
         ST    RD,DXCCW2                INTO TIC CCW             A38013
         MVI   DXCCW1,CCWSCHID          SEARCH FOR EQUAL ID OP   A38013
*                                       CODE                     A38013
         MVC   DXCCW1+K4(K5),ACCW1C     CC, 5 CHAR, TIC OP       A38013
         MVC   DXCCW2+K4(K5),ACCW2C     CC, READ DATA OP CODE    A38013
         MVC   DXCCW3+K4(K4),ACCW3C     LENGTH OF THE DSCB       A38013
         LA    RF,DXDSCB                BUFFER ADDRESS           A38013
         ST    RF,DXCCW3                STORE IN CCW             A38013
         MVI   DXCCW3,CCWWRTDA          WRITE DATA               A38013
         MVC   DXCCW4(K24),DXCCW1       EXTEND CP TO WRITE CHECK A38013
         LA    RF,DXCCW4                GET ADDR OF CCW4         A38013
         ST    RF,DXCCW5                TIC BACK TO CCW4         A38013
         MVI   DXCCW5,CCWTIC            RESTORE TIC OP           A38013
         MVI   DXCCW6,CCWRDDA           READ DATA OP             A38013
         OI    DXCCW3+K4,CCWCMDCH       TURN ON CC FLAG IN CCW3  A38013
         OI    DXCCW6+K4,X'10'          TURN ON SKIP FLAG IN     A38013
*                                       CCW6                     A38013
         MVI   DXDCBDEB,K0              CLEAR ERROR INDICATOR    A38013
*
******   WRITE BACK THE FORMAT 1 DSCB AND WAIT
*
         EXCP  DXIOB                    INITIATE I/O OPERATION   A38013
         IECRES WAIT                    WAIT FOR COMPLETION      A38013
*
CDA00220 EQU   *                                                 A38013
         L     RD,CVTPTR                CVT ADDR                 Y02134
         L     RET,DXTCBADR             CURRENT TCB ADDR         Y02134
         L     RTIOT,DXTIOTAD            TIOT ADDRESS            Y02134
         L     RUCB,DXUCBADR            ESTABLISH UCB ADDRESS    Y02134
         TM    DEBOFLGS,DEBOFRLS        TEST FOR PARTIAL RELEASE
         BO    CDA00230                 BRANCH IF YES           SA53753
         LA    RUCB,0(,RUCB)            CLEAR HI-ORDER BYTE      A38013
         TM    DXECB,ECBNOERR           TEST FOR I/O ERROR       A38013
         BNO   CDA02320                 YES-BR IF I/O ERROR      A38013
         OI    DXATDACC,DXATUPDB        SET UPDATED DSCB WRITTEN Y02144
CDA00230 EQU   *                                                SA53753
         TM    JFCBLTYP,JFCSL+JFCBUL    CK IF SUL SPECIFIED      A38013
         BNO   CDA02000                 NO-BR TO GET NEXT DCB    A38013
         TM    JFCBTSDM,JFCSDS          IS DATA SET SYSOUT       A38013
         BO    CDA02000                 YES, DO NOT PROCESS UL   A38013
         TM    DCBDSORG,DCBORGPS        IS DSORG PHYS SEQ        A38013
         BZ    CDA02000                 NO DO NOT PROCESS UL     A38013
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE DA OUTPUT USER LABELS FUNCTION.                            *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    DETERMINE IF CURRENT VOLUME IS FIRST VOLUME FOR NEW DA DATA SET. *
*    LOCATE FIRST VOLUME BY SEARCHING THE UCB'S FOR ALL UNITS         *
*    ALLOCATED TO THE DATA SET.                                       *
*    READ THE FORMAT 1 DSCB.                                          *
*    GET AN AREA OF MAIN STORAGE WHICH IS USED AS A                   *
*    WORKAREA-BUFFER IN WHICH THE USER LABEL RECORDS ARE FORMATTED AND*
*    AS A SAVE AREA FOR THE REGISTERS OF THE I/O SUPPORT FUNCTION     *
*    REQUIRING USER LABEL PROCESSING.  THE LAST PART OF THE AREA      *
*    OBTAINED IS USED FOR A 16-BYTE PARAMETER LIST.                   *
*    IF A TRACK WAS ALLOCATED FOR USER LBLS,CONTROL IS GIVEN TO THE   *
*    USER'S LABEL CONSTRUCTION ROUTINE VIA SYNCHRONOUS EXIT (SVC 12). *
*    ON RETURN FROM THE USER'S ROUTINE, IF A LABEL WAS CONSTRUCTED, IT*
*    IS WRITTEN FOLLOWED BY 2 FILEMARKS FOR HEADERS (UHL(N+1)), OR    *
*    ONE FILEMARK FOR TRAILERS (UTL(N+1)).  DEPENDING ON THE RETURN   *
*    CODE PASSED BY THE USER'S ROUTINE, ANOTHER LABEL IS PROCESSED OR *
*    CONTROL IS GIVEN BACK TO THE I/O SUPPORT FUNCTION.               *
*    WRITE UP TO EIGHT USER TRAILER LABELS AS REQUIRED FOR DATA SETS  *
*    ON DIRECT ACCESS VOLUMES.                                        *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE DA WRITE DSCB FUNCTION.                                    *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    USER TRAILER LABELS ARE WRITTEN ON THE FIRST VOLUME FOR NEW DA   *
*    DATA SETS.                                                       *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CONVERT ROUTINE TTR TO MBBCCHHR.                                 *
*    USER'S OUTPUT LABEL EXIT ROUTINES - ENTERED BY MEANS OF          *
*    SYNCHRONOUS EXIT (SVC 12) WITH THE FOLLOWING INPUT               *
*       REG 0    CONTAINS NO MEANINGFUL INFO                          *
*           1    POINTER TO 4 WORD PARAMETER LIST WHICH CONTAINS -    *
*                POINTER TO LABEL BUFFER                              *
*                POINTER TO DCB                                       *
*                FLAG BYTE, PTR TO STATUS INFO (IF PERMANENT ERROR)   *
*                OR ZERO                                              *
*                POINTER TO IMAGE AREA (IF TOTALING WAS REQUESTED)    *
*                OR ZERO                                              *
*           2-13 CONTENTS OF USER'S REGS BEFORE I/O SUPP              *
*           14   RETURN ADDRESS                                       *
*           15   EXIT ADDRESS                                         *
*                                                                     *
*    BEFORE EXITING, THIS FUNCTION'S REGISTERS 2-13 ARE SAVED IN THE  *
*    SVRB EXTENDED SAVE AREA.  THE USER'S REGISTERS 2-13 ARE RESTORED *
*    FROM THE SVRB.  THE LOCK BIT (BIT 6) IN DCBOFLGS FIELD IS SET TO *
*    1 TO PREVENT ANOTHER I/O SUPPORT FUNCTION FROM OPERATING ON THIS *
*    DCB WHILE THE USER IS IN CONTROL.  ON RETURN FROM THE USER'S     *
*    ROUTINE, THIS BIT IS RESET TO 0.                                 *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE DA WRITE FILE MARK FUNCTION.                               *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH THE FOLLOWING INTERNAL CODES--                         *
*       89 - 314 ABEND - ERROR IN READING THE FORMAT 1 DSCB FROM      *
*                        THE FIRST VOLUME.                            *
*    NO USER LABEL EXTENT EXISTS-THE APPROPRIATE EXIT ROUTINE IS      *
*    ENTERED WITH THE BUFFER POINTER SET TO ZERO.   OTHER             *
*    INPUT AS USUAL.                                                  *
*    I/O ERROR WRITING A USER LABEL - THE USER'S ROUTINE IS ENTERED.  *
*    AGAIN WITH                                                       *
*       BIT 0 OF FLAG BYTE SET TO ONE, PTR TO STANDARD                *
*       STATUS INFORMATION.                                           *
*    OTHER INPUT AS FOR NORMAL ENTRY.                                 *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
CDA00240 EQU   *                                                 A38013
         L     RC,DCBEXLST              PICK UP EXIT LIST ADDR FROM DCB
         LA    RC,0(,RC)                ZERO HIGH ORDER BYTE
         LTR   RC,RC                    IS THIS EXIT LIST ZERO
         BZ    CDA02000                 YES, DO NOT PROCESS USER LABELS
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         LA    RF,UTLOF                 POINT TO UTL             Y02080
*                                       OUTPUT CODE-04           Y02080
CDA00400 EQU   *
         CLC   0(K1,RC),0(RF)           DO CODE BYTES MATCH
         BE    CDA00800                 BRANCH TO CHECK UL EXIT  A38013
*                                       EXIT ADDRESS
         CLC   0(K1,RC),K1(RF)          DO CODE BYTES MATCH
         BE    CDA00800                 BRANCH TO CHECK UL EXIT  A38013
*                                       EXIT ADDRESS
         TM    0(RC),LASTNTRY           IS THIS THE LAST ENTRY
*                                       IN
*                                       EXLST
         BO    CDA02000                 YES, CONTINUE CLOSE
         LA    RC,K4(,RC)               INCRE REG TO POINT TO NEXT ENTR
         B     CDA00400                 BR TO PROCESS NEXT ENTRY
         EJECT
CDA00800 EQU   *
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         TM    JFCDSORG,JFCORGDA        IS IT CREATE BDAM MODE
         BZ    CDA01700                 NO, PROCESS USER LABELS
*
*              FOR NEW DIRECT DATA SETS, DETERMINE IF CURRENT
*              VOLUME IS FIRST VOLUME.  IF NOT,
*              FIND FIRST VOLUME AND READ THE FORMAT 1
*              DSCB.
*
         MVC   DXCCW10(K6),JFCBVOLS     GET VOL SER OF 1ST VOLUME
CDA00900 EQU   *
*                                                                     *
*   FOR DIRECT DATA SETS, USER LABELS ARE WRITTEN ONLY ON THE FIRST   *
*   VOLUME.  WHEN A NEW DIRECT DATA SET IS CLOSED, THE DSCB AND A     *
*   FILE MARK ARE WRITTEN ON THE LAST VOLUME PROCESSED. THUS, IN      *
*   ORDER TO WRITE USER LABELS, THE FIRST VOLUME MUST BE LOCATED.     *
*                                                                     *
*   THIS SECTION SEARCHS THE UCB'S FOR ALL UNITS ALLOCATED TO THE DATA*
*   SET TO FIND THE UNIT ON WHICH THE FIRST VOLUME IS MOUNTED.  WHEN  *
*   THE VOLUME IS FOUND, THE FORMAT 1 DSCB IS READ AND CONTROL IS     *
*   PASSED TO THE OUTPUT DIRECT ACCESS USER TRAILER LABEL MODULE TO   *
*   WRITE USER TRAILER LABELS.                                        *
*                                                                     *
*   IF THE FIRST VOLUME IS NOT MOUNTED, CLOSE PROCESSING CONTINUES.   *
*                                                                     *
         LA    RF,K1                    SET IND. TO FIND 1ST VOL ON
         SR    RET,RET                  CLEAR REGISTER
         IC    RET,TIOELNGH             GET LENGTH OF TIOT ENTRY
         AR    RET,RTIOT                ADDRESS OF END OF ENTRY
         LA    R1,TIOEFSRT-K1           ADDRESS OF 2ND UCB PTR   Y02134
*                                       IN TIOT                  Y02134
CDA01200 EQU   *
         L     RUCB,0(R1)               GET UCB ADDRESS
         CLC   DXCCW10(K6),UCBVOLI      IS CURRENT VOL 1ST VOL   Y02134
         BE    CDA01400                 CURR VOL 1ST, PROCESS UL Y02134
CDA01300 EQU   *
         LA    R1,K4(R1)                BUMP TO NEXT UCB PTR
         CR    R1,RET                   CK IF END OF TIOT ENTRY
         BNE   CDA01200                 NO,BR TO CK NEXT UCB
*
*     FIRST VOLUME IS NOT MOUNTED, CONTINUE CLOSE PROCESSING.  NO
*     USER TRAILER LABELS WILL BE WRITTEN.
*
         B     CDA02000                 BRANCH TO FINAL FUNCTION
*
CDA01400 EQU   *
         LA    RUCB,K0(,RUCB)           CHECK IF CURRENT         YM5764
         CLM   RUCB,B'0111',DXUCBADR+K1 IS FIRST VOLUME          Y02134
         BE    CDA01700                 GO PROCESS UL IF YES     Y02134
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   CDA01500                 BR IF NOT                Y02132
*        READ VIO DSCB FROM SWA                                  Y02132
         MVC   DXDSCB(DSCEXT2-DSCFMTID),VDSDSCB-VDSUCB+L'JFCBDSNM(RUCB)
*                                                                Y02132
         OC    DXDSCB(DSCEXT2-DSCFMTID),DXDSCB IS DSCB = ZERO?   Y02132
         BZ    CDA02400                 BR IF YES, I/O ERROR     Y02132
*                                                                Y02132
         XC    DSCEXT2(DSCBEND-DSCEXT2),DSCEXT2 ZERO REMAIN CORE Y02132
*                                                                Y02132
         B     CDA01700                 RESUME PROCESSING        Y02132
CDA01500 EQU   *                                                 Y02132
*
*    SET UP CHANNEL PROGRAM TO READ THE FORMAT 1 DSCB ON THE FIRST
*    VOLUME OF THE DATA SET.
*
*              CONVERT VTOC TTR TO FULL MBBCCHHR
*
         STM   RDCB,RET,DXCCW3          SAVE CLOSE REGISTER 2-14
         L     R0,UCBVTOC               GET VTOC TTR FROM UCB
         SRL   R0,K8                    SHIFT N FIELD OUT
         SLL   R0,K8                    ZERO N FIELD
         LA    R1,DXDEB                 ADDRESS OF CLOSE WORK DEB
         LA    RDCB,DXDAADDR            RESULT GOES IN CLOSE IOB
         L     RD,CVTPTR                GET POINTER TO CVT
         L     RF,CVTPCNVT              ENTRY POINT FOR CONVERT ROUTINE
         BALR  RET,RF                   GO CONVERT VTOC TTR
         LM    RDCB,RET,DXCCW3          RESTORE CLOSE REGISTERS
*
*              CONSTRUCT CHANNEL PROGRAM-SEARCH AND TIC ALREADY SET UP
*
*              SEARCH ID EQ     IOBDADAD+3   CC     5
*              TIC              CCW1         --     -
*              SEARCH KEY EQ    DSNAME       CC    44
*              TIC              CCW3         --    --
*              READ DATA        DXDSCB       --    96
*
         XC    DXCCW3(DXCCW6-DXCCW3),DXCCW3  CLEAR CHANNEL PGM AREA
         LA    RF,JFCBDSNM              ADDR OF DSNAME
         ST    RF,DXCCW3                IN SEARCH CCW
         LA    RF,DXCCW3                ADDR OF SEARCH KEY CCW
         ST    RF,DXCCW4                IN TIC CCW
         LA    RF,DXDSCB                WORK AREA ADDRESS
         ST    RF,DXCCW5                IN READ CCW
         OC    DXCCW3(K24),CLRDDSCB     CP SKELETON OVER CCW'S
*
         ST    RUCB,DXCCW6              MAIN UCB ADDRESS         Y02134
         MVC   DXDEBUCB+K1(K3),DXCCW6+K1  MAIN UCB ADDR IN WORK DEB
*
*              READ THE FORMAT 1 DSCB FROM 1ST VOLUME
*
         EXCP  DXIOB                    READ DSCB
         IECRES WAIT                    WAIT FOR DSCB
         TM    DXECB,ECBNOERR           TEST FOR UNUSUAL I/0 CONDITION
         BC    12,CDA02400              BRANCH IF ERROR
CDA01700 EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=1  ASSUME USER KEY       Y02082
         L     RC,0(,RC)                C(RC)=EXIT LIST ENTRY
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    R1,0(,RC)                EXIT ADDRESS IN R1
         LTR   R1,R1                    CK EXIT ADDRESS FOR ZERO
         BZ    CDA01800                 ZERO,DON'T PROCESS USER LBLS
         LA    RF,ULDAOMOD              OUTPUT UL MOD ID
         B     CDA02100                 BRANCH TO XCTL
CDA01800 EQU   *
         CLM   RUCB,B'0111',DXUCBADR+K1 IS IND ON -  IF NO       Y02134
         BE    CDA02000                 BRANCH  TO FINAL FUNC    Y02134
*
CDA01900 EQU   *
         L     RUCB,DXUCBADR            GET CURRENT UCB ADDRESS  Y02134
         ST    RUCB,DXCCW6              RESTORE CURRENT UCB ADDR Y02134
         MVC   DXDEBUCB+K1(K3),DXCCW6+K1  VOLUME TO WORK DEB
CDA02000 EQU   *
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    RF,DAFINMOD              LOAD NEXT MOD
CDA02100 EQU   *
         SR    RET,RET                  SET UP FOR BRANCH TABLE
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*                                    XCTL TO ULDAMOD OR DAFINMOD Y02080
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*                        ERROR PROCESSING                             *
*                                                                     *
***********************************************************************
         SPACE 1
CDA02320 EQU   *                                                 A38013
         LA    R0,CABD088               ERR- WRITE DSCB          A38013
         LA    RET,K4                   SET BRANCH OFFSET        A38013
         B     CDA02420                 BRANCH TO ABEND          A38013
CDA02400 EQU   *
         LA    R0,CABD089               ERR-READ DSCB
         LA    RET,K8                   SET BRANCH OFFSET        A38013
CDA02420 EQU   *                                                 A38013
         DMABCOND (0),PDMOD             ABEND MACRO
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*                       CONSTANTS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
*
*****          DCB EXIT LIST CODE BYTES USED FOR TESTING
*
UTLOF    DC    X'04'                    USER TRAILER LABEL OUTPUT CODE
*                                       BYTE
         DC    X'84'                    USER TRAILER LABEL OUTPUT
*                                       CODE--LAST
ACCW1C   DC    X'6000000508'            CC,SILI,5 CHAR,TIC OP    A38013
ACCW2C   DC    X'4000000086'            CC,READ DATA OP CODE     A38013
ACCW3C   DC    X'00000060'              96 CHARACTERS            A38013
*
CLRDDSCB EQU   *
         DC    X'A90000004000002C'      SEARCH KEY EQ,CC,LENGTH=44
         DC    X'0800000000000000'      TIC
         DC    X'8600000000000060'      READ DATA
         LTORG
         XCTLTABL ID=(DAFINMOD,2E,PDMOD,0P,ULDAOMOD,2D),SVC=020, Y02080X
               BRT=YES,LENGTH=                                   Y02080
         IECDSECS CVT,TCB,TIOT,DCB,DEB,UCB,MAIN,WTG,EXPAND=YES
         IDDVDSCB                                                Y02132
         IECEQU
         END
