 TITLE 'IFG0552T - EOV TAPE INPUT STD TRAILER LABEL (CONT.) AND VOLUME C
               DISPOSITION FUNCTION'
         COPY  LCGASMSW
IFG0552T CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0552T (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = EOV TAPE INPUT STD TRAILER LABEL AND VOLUME      *
*                    DISPOSITION FUNCTION                             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE PROCESSES TAPE INPUT STANDARD USER TRAILER       *
*        LABELS FOR END OF VOLUME AND DETERMINES VOLUME DISPOSITION.  *
*        1) OBTAIN CORE FOR 2 USER LABEL WORK AREAS. A 152 BYTE       *
*        WORK AREA FOR EOV FROM FETCH PROTECTED SUBPOOL 229 IN DATA   *
*        MANAGEMENT KEY. A 96 BYTE USER LABEL WORK AREA FOR THE       *
*        CALLER FROM FETCH PROTECTED SUBPOOL 229 IN THE CALLER'S      *
*        KEY.                                                         *
*        2) READ THE USER LABELS FROM THE TAPE AND USE IECRES UEXIT   *
*        TO SYNCH TO THE CALLER'S USER LABEL EXIT ROUTINE. (UP TO     *
*        8 LABELS ARE READ EXCEPT FOR ASCII WHICH HAS NO LIMIT.)      *
*        3) PROCESSING CONTINUES OR TERMINATES ACCORDING TO THE       *
*        RETURN CODE PASSED IN REGISTER 15 BY THE CALLER AFTER THE    *
*        CALLER'S USER LABEL ROUTINE HAS COMPLETED. IF THE CALLER'S   *
*        ROUTINE RETURNS A 4, CONTINUE READING USER LABELS. ANY       *
*        OTHER RETURN CODE INDICATES TERMINATE USER LABEL PROC.       *
*        4) AFTER ALL THE USER LABELS HAVE BEEN READ, OR THE CALLER   *
*        INDICATED TO TERMINATE USER LABEL PROCESSING, FREE THE       *
*        USER LABEL WORK AREAS.                                       *
*        5) POSITION THE TAPE AT LOAD POINT FOR READ BACKWARD OR      *
*        AT END OF DATA SET (BEYOND TRAILER LABELS) FOR READ FORWARD. *
*        6) IF DATA SET IS AT EOF, TRANSFER CONTROL TO IFG0552X       *
*        TO PROCESS END OF FILE CONDITION.                            *
*        7) IF NOT AT EOF (THEN AT EOV), AND SMF IS ACTIVE, TRANSFER  *
*        CONTROL TO IFG0553B TO PROCESS SMF RECORDS. SET UP           *
*        DXRETMOD TO RETURN TO IFG0552V.                              *
*        8) IF SMF NOT ACTIVE, TRANSFER CONTROL TO IFG0552V.          *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0552T                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0552X - PROCESS EOF CONDITION                             *
*        IFG0553B - PROCESS SMF RECORDS                               *
*           RETURN MODULE = IFG0552V                                  *
*        IFG0552V - PROCESS VOLUME POSITIONING                        *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P - PROBLEM DETERMINATION                             *
*           INTERNAL CODE = 149, ERROR POSITIONING AFTER UL PROC      *
*           INTERNAL CODE = 150, ERROR POSITIONING TO LOGICAL EOD     *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        JFCB                                                         *
*        PSA                                                          *
*        TCB                                                          *
*        RB                                                           *
*        TIOT                                                         *
*        UCB                                                          *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES LOAD                                                  *
*        IECRES GET                                                   *
*        IECRES INIT                                                  *
*        IECRES FREE                                                  *
*        IECRES UEXIT                                                 *
*        IECRES WAIT                                                  *
*        EXCP                                                         *
*        XLATE                                                        *
*        SETLOCK                                                      *
*        DMABCOND                                                     *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
*****    INTERNAL ERROR CODES
*
EABD149  EQU   149                      ERROR POS FOLLOWING USER
*                                       ..TRAILER LABEL PROCESSING
EABD150  EQU   150                      ERROR POS TO END OF DATA SET
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING FORCORE,RCORE
         USING WTG,RWTG                                          Y02080
         USING IHADCB,RDCB
         USING DEB,RDEB
         USING UCB,RUCB
         USING TIOENTRY,RTIOT
*                                                                M0110
*****          DETERMINE TYPE OF ENTRY INTO MODULE               M0110
*****          ALTHOUGH THERE IS ONLY A SINGLE ENTRY TO THIS     M0110
*****          MODULE, THE BRANCH TABLE IS UTILIZED TO PERMIT    M0110
*****          ADDITION OF NEW ENTRY POINTS AT A LATER DATE      M0110
*                                                                M0110
         B     ETI04000(RET)            DETERMINE TYPE OF ENTRY  M0110
ETI04000 EQU   *                        BRANCH TABLE             M0110
         B     ETI04100                 BR TO PROCESS USER LBLS  M0110
*                                                                M0110
***********************************************************************
*              USER TRAILER LABEL PROCESSING                          *
***********************************************************************
*
ETI04100 EQU   *                        USER TRAILER LABEL
*                                                                Y02082
*    OBTAIN CORE FOR USER LABEL WORK AREAS                       Y02082
*                                                                Y02082
         IECRES GET,LV=USERLDM,SP=K229,PREFIX=YES,               Y02082*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
         USING ULDMWK,R1                                         Y02082
         STM   RES,RC,ULREGSAV          SAVE REGS (INCLUDE DCB   Y02082
*                                       EXIT LIST ADDR FOR UL)   Y02082
         DROP  R1
*
*****          RUCB IS NOW USED AS THE USER LABEL WORK AREA BASE REG
*
         LR    RUCB,R1                  POINT TO AREA OBTAINED
         USING ULDMWK,RUCB              UL W.A. BASE             Y02082
*    GET CORE FOR USER'S USER LABEL WORK AREA                    Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,SP=K229,KEY=USER,        Y02082*
               STM=(2,14,WTGPREFX)                               Y02082
         LR    R9,R1                    PT TO GOTTEN CORE        Y02082
         USING ULUWK,R9                                          Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    R1,CHAR0                 INITIALIZE COUNT
         STH   R1,ULCNT                 AND SAVE FOR LATER USE
         LA    R1,ULDMBUFR              PT TO LABEL BUFFER       Y02082
         ST    R1,DXCCW1
         MVI   DXCCW1,CCWRDTAP          INITLZ CCW FOR READ COMMAND
*                                       ..(FLAGS AND LNG STILL IN CCW)
         MVI   DXCCW1+K4,CCWSILI        SET 'SILI' FLAG ON
ETI04200 EQU   *                        READ A LABEL
         BAL   RC,ETI06700              BR AND LINK TO READ A LABEL
         BO    ETI04300                 BR IF NO ERROR DURING I/O
         TM    IOBSTAT0,CSWUNITX        IS ERROR DUE TO UNIT EXCEPTION-
         BO    ETI05500                 ..BR IF YES- TAPE MARK READ
         B     ETI05400                 BR IF NOT- PERMANENT ERROR
ETI04300 EQU   *                        UNUSUAL ERROR CONDITION
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI USER LBLS SPECIFIED-
         BNO   ETI04400                 ..BR IF NOT- BYPASS TRANSLATION
         XLATE ULDMBUFR,K80             TRANSLATE ANSI LABEL     Y02082
ETI04400 EQU   *                        NOT ANSI USER LABELS     Y02082
         CLC   ULDMBUFR(K3),AUHL        USER HDR LABEL READ?     Y02082
         BE    ETI04500                 ..BR IF YES
         CLC   ULDMBUFR(K3),AUTL        USER TRLR LABEL READ?    Y02082
         BE    ETI04500                 ..BR IF YES
*
*              NOTE - INPUT TRAILER LABEL PROCESSING LEAVES THE TAPE
*              POSITIONED BETWEEN THE FIRST AND SECOND DATA SET
*              TRAILER LABELS. THE FOLLOWING ALLOWS PROCESSING OF USER
*              LABELS EVEN THOUGH THE TAPE MAY CONTAIN MORE DATA SET
*              LABELS THAN CAN CURRENTLY BE CREATED UNDER O/S.
*
         CLC   ULDMBUFR(K3),EOV         EOV LABEL READ?          Y02082
         BE    ETI04200                 ..BR IF YES- READ ANOTHER LABEL
         CLC   ULDMBUFR(K3),AEOF1       EOF LABEL READ?          Y02082
         BE    ETI04200                 ..BR IF YES- READ ANOTHER LABEL
         CLC   ULDMBUFR(K3),HDR         HDR LABEL READ?          Y02082
         BE    ETI04200                 ..BR IF YES- READ ANOTHER LABEL
         MVI   DXCCW1,CCWBSR            INITLZ CCW FOR 'BSR' COMMAND
         B     ETI05700                 BR- AN 'UNKNOWN' LABEL WAS READ
ETI04500 EQU   *                        USER HDR LABEL READ
         MVC   ULCNT+K1(K1),ULDMBUFR+K3 SAVE LABEL NUMBER        Y02082
         L     RF,WTGPREFX              PT TO PREFIX             Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS            Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*    OBTAIN LOCAL LOCK                                           Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL BUFFER                   Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULBUFR,ULDMBUFR          COPY LABEL TO USER       Y02082
         L     RF,WTGPREFX              PT TO PREFIX             Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y20082
*   RELEASE LOCAL LOCK                                           Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR IND
ETI04600 EQU   *                        SYNCH TO USER
         LA    R1,ULBUFR                POINT TO LABEL BUFFER
         LA    RD,ETI05300              LOAD ADDR FOR RETURN FROM SYNCH
ETI04700 EQU   *                        SYNCH TO USER
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR(K4),ULTOTPTR    ZERO TOTALING ENTRY
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         CLC   ULDMBUFR(K3),AUTL        TRLR LABEL PROCESSING    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         BE    ETI04800                 ..BRANCH IF YES
         TM    DCBOFLGS,DCBORDBK        IS THE DCB OPENED FOR 'RDBACK'-
         BNO   ETI04800                 ..BR IF NOT TO CHECK FOR EOF
         CLI   DXVOLSEQ+K1,K1           TEST FOR EOF READ BACK   Y02134
         BNH   ETI05000                 BRANCH IF READ BACK EOF  Y02134
         B     ETI05100                 BR IF NOT EOF            Y02134
ETI04800 EQU   *                        IS IT EOF?
         CLC   JFCBNVOL,DXVOLSEQ+K1     CHECK FOR EOF            Y02134
         BNH   ETI05000                 BRANCH TO EOF            Y02134
         CLC   VOLLABI(K3),AEOF1        CHK FOR EOF IF NOT ON LAST VOL
*                                       ..OF A MULTI-VOL DATA SET
         BNE   ETI05100                 ..BR IF NOT TO INDICATE EOV
ETI05000 EQU   *                        READ BACK EOF
         OI    ULDCBPTR,EOFFLG          SET FLAG TO INDICATE EOF
ETI05100 EQU   *                        NOT EOF
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         NI    DCBOFLGS,ALLBITS-DCBOLOCK  IND USER EXIT TAKEN    Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,DXXPREFX)           Y02082
         L     RDCB,DXUDCBAD            PT TO CALLER'S DCB       YM3005
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME CALLER'S KEY    YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3005
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM3005
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE OFLGS FIELD       YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FROM USER EXIT
         BR    RD                       RETURN TO CALLER OF SUBROUTINE
*
*
ETI05300 EQU   *                        PERMANENT ERROR
         CH    RF,RDLBLCOD              SHOULD ADD'L LABELS BE READ-
         BNE   ETI05800                 ..BR IF NOT- ALL DONE
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI USER LBLS SPECIFIED-
         BO    ETI04200                 ..BR IF YES- READ ANOTHER LABEL
         CLI   ULCNT+K1,MAXNOLAB        HAS MAX NO. OF LBLS BEEN READ-
         BNL   ETI05800                 ..BR IF YES- ALL DONE
         B     ETI04200                 ..ELSE BR TO READ ANOTHER LABEL
*
*****          ERROR ENCOUNTERED DURING READ
*
ETI05400 EQU   *                        READ ERROR
         LH    R1,ULCNT                 LOAD THE CURRENT LABEL NUMBER,
         LA    R1,K1(,R1)               ..INCREMENT IT BY 1, AND
         STH   R1,ULCNT                 ..SAVE UPDATED LABEL NUMBER
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         STC   R1,ULBUFR+K3             SAVE THE NUMBER OF THE LABEL
*                                       ..WHICH COULD NOT BE READ
         LA    R1,DXIOB                 POINT TO STATUS INFO     Y02082
         ST    R1,ULPARM+K8             PUT IN PARM LIST         Y02082
         OI    ULPARM+K8,ERROR          FLAG THE ERROR           Y20082
         B     ETI04600                 BR TO SYNCH TO USER
*
*              A TAPE MARK HAS BEEN READ. IF USER HAS PREVIOUSLY
*              PROCESSED ANY LABELS,  REPOSITION TAPE, FREEMAIN,
*              AND RETURN TO CALLER. IF USER HAS NOT PREVIOUSLY
*              PROCESSED ANY LABELS, SYNCH TO USER WITH LABEL
*              BUFFER POINTER SET TO ZERO, THEN REPOSITION
*              TAPE, FREEMAIN, AND RETURN TO CALLER.
*
ETI05500 EQU   *                        TAPE MARK READ
         CLI   ULCNT+K1,CHAR0           HAVE LABELS PREVIOUSLY BEEN
*                                       ..PROCESSED
         BH    ETI05600                 ..BRANCH IF YES
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI USER LBLS SPECIFIED-
         BO    ETI05600                 ..BRANCH IF YES
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR PARM
         SR    R1,R1                    ZERO BUFFER PTR
         BAL   RD,ETI04700              BR AND LINK TO SYNCH TO USER
ETI05600 EQU   *                        ANSI LABELS PROCESSED
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR 'BSF'
ETI05700 EQU   *                        UNKNOWN LABEL READ
         LA    RD,EABD149               INTERNAL ERROR CODE IN CASE OF
*                                       ..POSITIONING ERROR
         MVC   DXCCW1+K4(K4),CHNCOUNT   CHAIN TO 'NOP', SET CT TO 1
         BAL   RC,ETI06700              BR AND LINK TO PERFORM BACKSPAC
         BNO   ETI06800                 BR IF I/O ERROR
ETI05800 EQU   *                        ALL LABELS READ
*                                                                Y02082
*    FREEMAIN USER LABEL WORK AREAS                              Y02082
*                                                                Y02082
         IECRES FREE,A=(R9),PREFIX=NO,LV=USERLU,SP=K229,         Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LR    R1,RUCB                  PTR TO AREA TO BE FREED  Y02082
         LM    RES,RC,ULREGSAV          RESTORE REGS             Y02082
         IECRES FREE,A=(1),PREFIX=YES,STM=(2,14,WTGPREFX)        Y02082
*
*****          'RUCB' IS NOW USED AS THE BASE REGISTER FOR THE UCB
*
         USING UCB,RUCB
***********************************************************************
*              POSITION TAPE BEYOND LABELS                            *
***********************************************************************
*
ETI05900 EQU   *                        POSITION TAPE
         LA    RD,EABD150               INTERNAL ERROR CODE IN CASE OF
*                                       ..POSITIONING ERROR
         MVC   DXCCW1,ABSFCCW1          INITLZ CCW FOR 'BACKSPACE FILE'
         TM    DCBOFLGS,DCBORDBK        IS THIS READ BACKWARD MODE-
         BNO   ETI06000                 ..BR IF NOT TO POSITION
         BAL   RC,ETI06700              BACKSPACE PAST HEADER LABELS
         BNO   ETI06800                 IF I/O ERR, BR TO ERROR RTN
         MVI   DXCCW1,CCWNOP            INITLZ CCW FOR 'NOP' COMMAND
         BAL   RC,ETI06700              ISSUE 'NOP' TO TAPE DRIVE
         BO    ETI06000                 IF NO I/O ERR, BR TO FWD SPACE
         TM    IOBSENS1,UCBLDPT         ARE WE AT LOAD POINT-
         BO    ETI06100                 ..BR IF YES TO CONTINUE
         B     ETI06800                 ..ELSE BR TO ERROR ROUTINE
ETI06000 EQU   *                        POSITION OR FWDSPACE
         MVI   DXCCW1,CCWFSF            INITLZ CCW FOR 'FWD SPACE FILE'
         OI    DXCCW1+K4,CCWCMDCH       CHAIN TO 'NOP' COMMAND
         BAL   RC,ETI06700              FSF TO END OF DATA SET (READ
*                                       ..FORWARD OR PRECEDING HEADER
*                                       ..LABELS (RDBACK)
         BNO   ETI06800                 IF I/O ERR, BR TO ABEND
*
*
***********************************************************************
*                                                                     *
*         EOV TAPE INPUT VOLUME DISPOSITION FUNCTION                  *
*                                                                     *
***********************************************************************
*
*
***********************************************************************
*              DETERMINE WHETHER EOV OR EOF HAS OCCURRED              *
***********************************************************************
*
ETI06100 EQU   *                        DETERMINE EOV/EOF
         MVC   DXCCW1,ABSFCCW1          SETUP BASIC CCW
         L     RUCB,DXUCBADR            LOAD CURRENT UCB         Y02134
         MVC   DXCCW7+K4(K4),SRTEFSCT   SAVE SEQ CT/ NO. IN WORK AREA
         LA    RF,MOD2T2X               PT TO ID/TTR OF EOF MODULE
         SR    RET,RET                  LD BR TABLE OFFSET FOR THAT MOD
         TM    DCBOFLGS,DCBORDBK        IS THIS 'READBACK' MODE-
         BO    ETI06400                 ..BR IF YES TO READBACK RTN
*
*****          READ FORWARD TESTING FOR EOV
*
         MVC   DXCCW7(L'DXVOLSEQ),DXVOLSEQ SAVE VOL SEQ          Y02134
         CLC   JFCBNVOL,DXVOLSEQ+K1     TEST IF AT EOF           Y02134
         BNH   ETI06600                 ..BRANCH IF YES          Y02134
*
*****          PERFORM POSITIVE CHECK FOR END-OF-FILE IF ON OTHER
*****          THAN THE LAST VOLUME OF A MULTI-VOLUME DATA SET.
*
         TM    JFCOPTCD,JFCALLOW        DO WE BYPASS EOF PROCESSING-
         BO    ETI06500                 ..BRANCH IF YES
         CLC   VOLLABI(K3),AEOF1        TEST FOR 'E-O-F' LABEL-
         BE    ETI06600                 ..BRANCH IF YES
         B     ETI06500                 ..BR TO TEST FOR SMF PROCESSING
*
*****    READ BACKWARD TESTING FOR EOF
*
ETI06400 EQU   *                        READBACK ROUTINE
         CLI   DXVOLSEQ+K1,K1           TEST FOR EOF READ BACK   Y02134
         BNH   ETI06600                 BRANCH IF EOF            Y02134
***********************************************************************
*              END-OF-VOLUME PROCESSING                               *
***********************************************************************
*
ETI06500 EQU   *                        EOV PROCESSING
*
         LA    RF,MOD2T2V               PT TO ID/TTR OF POSITIONING MOD
         SR    RET,RET                  LD BR TABLE OFFSET FOR THAT MOD
*
*****          DETERMINE WHETHER OR NOT SMF PROCESSING IS REQUIRED
*
         TM    DXXPATHS,WTGSMF          IS SMF PROCESSING REQ'D- A38013
         BNO   ETI06600                 ..BR IF NOT- XCTL TO VOL A38013
*                                       ..POSITIONING FUNCTION   A38013
         LA    RF,MODSMF2T              PT TO SMF MODULE'S ID/TTR
         LA    RET,K4                   LD BR TABLE OFFSET FOR THAT MOD
         MVC   DXRETMOD(K5),MOD2T2V     MOVE POSITIONING MOD ID/TTR
*                                       ..INTO RETURN ADDRESS SAVE AREA
         SPACE 2
***********************************************************************
*              EXIT                                                   *
***********************************************************************
*
ETI06600 EQU   *                        EXIT
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*                                  INVOKE IECRES MACRO TO 'XCTL' Y02080
         EJECT
***********************************************************************
*              SUBROUTINES                                            *
***********************************************************************
*
*****          CLOSED SUBROUTINE TO PERFORM I/O OPERATIONS
*****          ENTRY TO THE SUBROUTINE IS VIA A 'BAL  RC,ETI06700'
*
ETI06700 EQU   *                        I/O SUBROUTINE
         EXCP  DXIOB                    INITIATE I/O OPERATION
         IECRES WAIT                    INVOKE IECRES MACRO TO 'WAIT'
         TM    DXECB,ECBNOERR           TEST FOR AN UNUSUAL I/O CONDITI
         BR    RC                       RETURN TO CALLER OF SUBROUTINE
         SPACE 2
***********************************************************************
*              ERROR PROCESSING                                       *
***********************************************************************
*
ETI06800 EQU   *                        ERROR ROUTINE/ ABEND
         DMABCOND (RD),ABEND2T          EXIT TO PROB DETERMINATION RTN
         SPACE 2
***********************************************************************
*              CONSTANTS                                              *
***********************************************************************
*
ABSFCCW1 CCW   X'2F',0,X'20',1          BSF CMD, SILI FLAG, LNG EQ 1
CHNCOUNT DC    X'60000001'              CMD CHAIN & SILI FLAGS, LNG EQ
RDLBLCOD DC    H'4'                     RET CODE IND 'READ ANOTHER LABE
AEOF1    DC    C'EOF'                   TRAILER LABEL IDENTIFIER
EOV      DC    C'EOV'                   'EOV' TRAILER LABEL IDENTIFIER
HDR      DC    C'HDR'                   FIRST THREE CHAR OF DATA SET LA
AUHL     DC    C'UHL'                   USER HEADER LABEL IDENTIFIER
AUTL     DC    C'UTL'                   USER TRAILER LABEL IDENTIFIER
         EJECT
***********************************************************************
*              XCTL TABLE                                             *
***********************************************************************
*
XCTLTB2R XCTLTABL ID=(ABEND2T,0P,MOD2T2V,2V,MOD2T2X,2X,MODSMF2T,3B),   C
               SVC=055,BRT=YES,LENGTH=                           Y02080
         SPACE 2
         IECDSECS CVT,                                                 C
               TCB,                                                    C
               RB,                                                     C
               TIOT,                                                   C
               WTG,                                              A38013C
               DCB,                                                    C
               DEB,                                                    C
               UCB,                                                    C
               MAIN,                                                   C
               USERLAB,                                                C
               PREFX,                                            Y02080*
               RRPL,                                             Y02144*
               PSA,                                              Y02082*
               EXPAND=YES
         IECEQU ,                       INVOKE OPEN/CLOSE/EOV EQUATES
         SPACE 2
         END
