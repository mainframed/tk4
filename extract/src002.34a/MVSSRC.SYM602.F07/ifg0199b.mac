         TITLE 'IFG0199B - OPEN/CLOSE/EOV ABEND INTERPRETATION GENERAL *
               WRITE-TO-PROGRAMMER ROUTINE'
         COPY  LCGASMSW
IFG0199B CSECT
         ENTRY IFG0209B
         ENTRY IFG0239B
         ENTRY IFG0559B
IFG0209B EQU   IFG0199B                 ALIAS ENTRY POINT        Y02080
IFG0239B EQU   IFG0199B                 ALIAS ENTRY POINT        Y02080
IFG0559B EQU   IFG0199B                 ALIAS ENTRY POINT        Y02080
***********************************************************************
*                                                                     *
*          VS 2 RELEASE 03 DELETIONS/CHANGES                          *
*                                                                     *
*000C                                                          @Y30LSFY
*000D648721-648724                                             @ZA02212
*0000                                                          @ZA07212
*0000                                                          @ZA08900
*0000                                                          @ZA09123
* MODULE NAME = IFG0199B (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN/CLOSE/EOV ABEND INTERPRETATION GENERAL      *
*                    WRITE-TO-PROGRAMMER ROUTINE                      *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 3, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. CONSTRUCTS WRITE-TO-PROGRAMMER MESSAGE IN MESSAGE BUFFER. *
*        TRAILING BLANKS ARE REMOVED. FIELDS CONSTRUCTED ARE:         *
*           A. ABEND CODE - MUST BE UNPACKED AND TRANSLATED.          *
*           B. RETURN CODE - MUST BE UNPACKED AND TRANSLATED.         *
*           C. NAME OF MODULE DETECTING ERROR.                        *
*           D. JOBNAME.                                               *
*           E. STEPNAME.                                              *
*           F. DD NAME.                                               *
*           G. CONCATENATION NUMBER IF CONCATENATION.                 *
*           H. UNIT NAME.                                             *
*           I. VOLUME SERIAL NUMBER IF PRESENT.                       *
*           J. DS NAME.                                               *
*           K. ROUTE CODE AND LENGTH.                                 *
*                                                                     *
*        2. DETERMINES WHETHER MESSAGE REQUIRES ONE OR TWO LINES      *
*        AND ISSUES THE APPROPRIATE WRITE-TO-PROGRAMMER COMMAND.      *
*                                                                     *
*        3. FOR A 413-2C OR 737-34 ABEND, A MESSAGE GIVING THE        *
*        SSC FAILURE CODE IS ISSUED BEFORE THE STANDARD MSG           *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD LABEL BEFORE ORG STATEMENT AT END        *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE, READ-ONLY, ENABLED,         *
*                  PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY, *
*                  LINK PACK AREA RESIDENT/PAGEABLE                   *
*                                                                     *
* ENTRY POINT = IFG0199B FOR OPEN AND RDJFCB                          *
*               IFG0209B FOR CLOSE                                    *
*               IFG0239B FOR TCLOSE                                   *
*               IFG0559B FOR EOV                                      *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = R1 = POINTER TO PROBLEM DETERMINATION WORK AREA        *
*                                                                     *
* INPUT = A POINTER TO THE PROBLEM DETERMINATION WORK AREA            *
*                                                                     *
* OUTPUT = ONE OR TWO LINE WRITE-TO-PROGRAMMER MESSAGE                *
*                                                                     *
* EXIT-NORMAL = IFG0199D FOR OPEN AND RDJFCB                          *
*               IFG0209D FOR CLOSE                                    *
*               IFG0239D FOR TCLOSE                                   *
*               IFG0559C OR IFG0559D FOR EOV                          *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG019RA                                              *
*                                                                     *
*    DATA AREAS = PROBLEM DETERMINATION WORK AREA                     *
*                 OPEN/CLOSE/EOV WORK AREA                            *
*                                                                     *
*    CONTROL BLOCKS = DSAB                                            *
*                     JFCB                                            *
*                     TIOT                                            *
*                     UCB                                             *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = IECDSECS                                                   *
*          IECPDSCT                                                   *
*          IECRES LOAD, FREE                                          *
*          WTO                                                        *
*          XCTLTABL                                                   *
*                                                                     *
***********************************************************************
         EJECT
K0       EQU   0                        CONSTANT OF ZERO         YM3111
K5       EQU   5                        CONSTANT OF 5            XM8309
K16      EQU   16                       CONSTANT OF 16           YM3111
R0       EQU   0                        WORK/PARAMETER REG
R1       EQU   1                        WORK/PARAMETER REG
RDCB     EQU   2                        DCB PTR
RBASE    EQU   3                        BASE REG
RCORE    EQU   4                        PTR TO O/C/EOV WKAREA
RES      EQU   5                        PTR TO RES RTN
RWTG     EQU   6                        PTR TO WTG TABLE
RPARC    EQU   7                        PTR TO CURRENT ENTRY IN PARLIST
RWTGC    EQU   8                        CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                        PTR TO TIOT ENTRY
RUCB     EQU   10                       PTR TO UCB
RB       EQU   11                       WORK/PARAMETER REG
RC       EQU   12                       WORK/PARAMETER REG
RD       EQU   13                       WORK/PARAMETER REG
RET      EQU   14                       WORK/PARAMETER REG
RF       EQU   15                       WORK/PARAMETER REG
TWO      EQU   2                        WORK VALUE
MCSFLGS  EQU   X'80'                    MCS FLAG TO INDICATE THAT
*                                       ROUT AND DESC CODES EXIST
ZERO     EQU   0                        WORK VALUE
MCSLNG   EQU   4                        LNG OF MCSFLAGS
ORG      EQU   0                        OFFSET OF ZERO IN A FIELD
IDLNG    EQU   8                        LNG OF MSG ID
ABENDLNG EQU   3                        LNG OF ABEND CODE
DECZERO  EQU   X'F0'                    FLAG TO CONVERT SIGN TO EBCDIC
TABLORG  EQU   240                      OFFSET OF TRANSLATE DATA FROM
*                                       ORIGIN OF TABLE
DASH     EQU   C'-'                     HYPHEN
ONE      EQU   1                        WORK VALUE
RETCDLNG EQU   2                        RETURN CODE LENGTH
SIX      EQU   6                        WORK VALUE
COMMA    EQU   C','                     COMMA
CURTCB   EQU   4                        OFFSET OF CURRENT TCB IN TCB
*                                       DOUBLE WORDS
JOBNLNG  EQU   8                        MAXIMUM LNG OF JOBNAME
STPNLNG  EQU   8                        MAXIMUM LNG OF STEPNAME
BLANK    EQU   X'40'                    BLANK
DDNLNG   EQU   8                        MAXIMUM LNG OF DDNAME
CONCATNO EQU   80                       OFFSET IN PD WKAREA TO CONVERT
*                                       CONCAT NO. TO EBCDIC
CCNLNG   EQU   3                        MAXIMUM LNG OF CONCAT NO.
NOCELL   EQU   X'FF'                    UCBID FOR MAIN UCBS
UNITLNG  EQU   3                        MAXIMUM LNG OF UCBNAME
MTDA     EQU   X'A0'                    FLAG TO TEST UCB FOR TAPE OR DA
VOLLNG   EQU   6                        MAXIMUM LNG OF VOL SER
MULT16   EQU   4                        SHIFT VALUE TO MULTIPLY BY 16
SLASH    EQU   C'/'                     SLASH
CELLNG   EQU   5                        MAXIMUM LNG OF UCBNAME FOR 2321
DSNLNG   EQU   44                       MAXIMUM LNG OF DSNAME
RTCDLNG  EQU   4                        LNG OF ROUT AND DESC CODES
TTRLNG   EQU   3                        LNG OF TTR
FOURTEEN EQU   14                       WORK VALUE
SEVEN    EQU   7                        WORK VALUE
FOUR     EQU   4                        WORK VALUE
THREE    EQU   3                        WORK VALUE
ABTEST   EQU   X'F0'                    ABEND CODE TEST MASK     Y02144
SDTRACE  EQU   X'80'                    USED TO CHK IF SAM/DAM   Y02144
K1       EQU   1                        CONSTANT OF 1          @Y30LSFY
K2       EQU   2                        CONSTANT OF 2          @Y30LSFY
K3       EQU   3                        CONSTANT OF 3          @Y30LSFY
K4       EQU   4                        CONSTANT OF 4          @Y30LSFY
K6       EQU   6                        CONSTANT OF 6          @Y30LSFY
K8       EQU   8                        CONSTANT OF 8          @Y30LSFY
K11      EQU   11                       CONSTANT OF 11         @Y30LSFY
K17      EQU   17                       CONSTANT OF 17         @Y30LSFY
K23      EQU   23                       CONSTANT OF 23         @Y30LSFY
K24      EQU   24                       CONSTANT OF 24         @Y30LSFY
K44      EQU   44                       CONSTANT OF 44         @Y30LSFY
K61      EQU   61                       CONSTANT OF 61         @Y30LSFY
K63      EQU   63                       CONSTANT OF 63         @Y30LSFY
K68      EQU   68                       CONSTANT OF 68         @Y30LSFY
X30      EQU   X'30'                    613 ABEND TST          @ZA08900
X61      EQU   X'61'                    613 ABEND TST          @ZA08900
ACQ      EQU   X'02'                    ACQUIRE REQUEST        @Y30LSFY
MNT      EQU   X'08'                    MOUNT REQUEST          @Y30LSFY
DMNT     EQU   X'06'                    DISMOUNT REQUEST       @Y30LSFY
REL      EQU   X'04'                    RELINQUISH REQUEST     @Y30LSFY
*                                       TRACE MODULE TO GET CTRL Y02144
         BALR  RBASE,R0                 ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING PDDSECT,RC
         USING UCB,RUCB
         USING TIOT,RTIOT
         USING FORCORE,RCORE
         USING IHADCB,RDCB
         USING WTG,RWTG                                          XM8309
         LR    RC,R1                    PTR TO P.D WKAREA      @Y30LSFY
         CLC   SS1OPF,PDABCODE          SS/1 OPEN FAILURE      @Y30LSFY
         BE    PDF03100                 YES - ISSUE TWO MSGS   @Y30LSFY
         CLC   SS1EOVF,PDABCODE         SS/1 EOV FAILURE       @Y30LSFY
         BE    PDF03100                 YES - ISSUE TWO MSGS   @Y30LSFY
PDF01200 EQU   *                                               @Y30LSFY
         LR    RB,R1                    PTR TO P.D. WKAREA
         MVI   TWO(RB),MCSFLGS          SET MCSFLAGS
         LA    RB,MCSLNG+IDLNG(RB)      BUMP MSG PTR
         CLI   PDABCODE,ZERO            IS THERE AN ABEND CODE   Y02144
         BNE   PDF02000                 YES, FORMAT ABEND CODE   Y02144
         TM    PDABCODE+ONE,ABTEST      IS THERE AN ABEND CODE   Y02144
         BZ    PDF02010                 NO, FORMAT RETURN CODE   Y02144
         SPACE 3
********                                                        SA48558
******** FORMAT THE ABEND CODE IN THE INFORMATIVE MESSAGE       SA48558
********                                                        SA48558
PDF02000 EQU   *                        FORMAT ABEND CODE IN MSG Y02144
         UNPK  ORG(ABENDLNG,RB),PDABCODE
*                                       UNPACK ABEND CODE IN MSG
         OI    TWO(RB),DECZERO          CONVERT SIGN
         TR    ORG(ABENDLNG,RB),ABTABLE
*                                       CONVERT CODE TO PRINT
         MVI   ABENDLNG(RB),DASH        MOVE HYPHEN TO MSG
         LA    RB,ABENDLNG+ONE(RB)      BUMP MSG PTR
         EJECT
********                                                        SA48558
******** FORMAT THE RETURN CODE IN THE INFORMATIVE MESSAGE      SA48558
********                                                        SA48558
PDF02010 EQU   *                                                SA48558
*                                                                YM1305
*   THE FOLLOWING CHECK IS MADE TO DETERMINE IF A ZERO           YM1305
*   RETURN CODE SHOULD BE FORMATTED INTO THE MESSAGE.            YM1305
*   ONLY TWO PROBLEM DETERMINATION TABLE ENTRIES HAVE A          YM1305
*   RETURN CODE FIELD OF ZERO: TCLOSE INTERNAL CODE 142          YM1305
*   AND CLOSE INTERNAL CODE 112. A RETURN CODE OF ZERO           YM1305
*   SHOULD ONLY APPEAR IN MESSAGE IEC225I RELATED TO             YM1305
*   INTERNAL CODE 142 FOR TCLOSE.  A ZERO RETURN CODE            YM1305
*   SHOULD NOT APPEAR IN MESSAGE IEC223I RELATED TO              YM1305
*   INTERNAL CODE 112 FOR CLOSE. THE TWO ENTRIES ARE             YM1305
*   DISTINGUISHED HERE BY THE PRESENCE OR ABSENCE OF A           YM1305
*   TRACE CODE, ONE OF WHICH EXISTS FOR TCLOSE INTERNAL          YM1305
*   CODE 142 BUT NOT FOR CLOSE INTERNAL CODE 112.                YM1305
*                                                                YM1305
         NC    PDRETCOD(TWO),PDRETCOD   SHOULD RETURN CODE BE    YM1305
*                                       FORMATTED INTO MESSAGE   YM1305
         BZ    PDF02020                 NO, BYPASS FORMATTING    YM1305
         MVO   THREE(TWO,RB),PDRETCOD   MOVE RETURN CODE WITH OFFSET
*                                       SO IT CAN BE UNPACKED
         UNPK  ORG(RETCDLNG,RB),THREE(TWO,RB)
*                                       PUT RETURN CODE IN BUFFER
         OI    ONE(RB),DECZERO          CONVERT SIGN
         TR    ORG(RETCDLNG,RB),ABTABLE CONVERT TO PRINT
         MVI   RETCDLNG(RB),COMMA       MOVE FIELD SEPARATOR TO MSG
         LA    RB,RETCDLNG+ONE(RB)      BUMP MSG PTR
         SPACE 3
********
******** LOCATE TIOT AND MOVE JOBNAME TO MESSAGE
********
PDF02020 EQU   *                        MOVE JOBNAME TO MSG
*                                                                YM3945
         MVC   ORG(L'WTGMODNM,RB),PDERRMOD MODULE IN ERROR       YM3945
         MVI   ORG+L'WTGMODNM(RB),COMMA MOVE IN COMMA            YM3945
         LA    RB,L'WTGMODNM+ONE(,RB)   BUMP PASSED MOD NAME     YM3945
*                                                                YM3945
         L     R1,DXTCBADR              GET CURRENT TCB ADDRESS  Y02134
         L     RET,TCBTIO-TCB(R1)       TIOT PTR
         LA    RET,ZERO(RET)            ZERO HI-ORDER BYTE
         MVC   ORG(JOBNLNG,RB),TIOCNJOB-TIOT(RET)
*                                       MOVE JOBNAME TO MSG
         LA    RB,JOBNLNG-ONE(RB)       BUMP MSG PTR
         BAL   RF,PDF02260              GET RID OF TRAILING BLANKS
         EJECT
********
******** MOVE STEPNAME TO MESSAGE AND LOCATE FIRST TIOT DD ENTRY
********
         MVC   ORG(STPNLNG,RB),TIOCSTEP-TIOT(RET)
*                                       MOVE STEPNAME TO MSG
         LA    RB,STPNLNG-ONE(RB)       BUMP MSG PTR
         BAL   RF,PDF02260              GET RID OF TRAILING BLANKS
         SR    R0,R0                    ZERO CONCAT NUMBER
*
*        DXDSABAD POINTS TO THE DSAB BEING PROCESSED (POINTING   Y02134
*        TO THE TIOT ENTRY CORRESPONDING TO THE TIOT OFFSET IN   Y02134
*        THE DCB), NOT NECESSARILY POINTING TO THE TIOT ENTRY    Y02134
*        WITH A DDNAME IN IT IF CONCATENATION IS TAKING PLACE.   Y02134
*
*        THE DSAB POINTED TO BY DXDSAB WILL BE USED TO FIND THE  Y02134
*        TIOT ENTRY CONTAINING THE DDNAME, CHAINING BACWARD      Y02134
*        IF THE TIOT DDNAME IS BLANK, UNTIL A DSAB IS REACHED    Y02134
*        WHOSE TIOT ENTRY CONTAINS A DDNAME                      Y02134
*
*        THE DSABS WILL THEN BE CHAINED THROUGH FORWARD UNTIL    Y02134
*        ONE IS FOUND WHOSE TIOT ENTRY CORRESPONDS TO THE        Y02134
*        CONTENTS OF RTIOT. THIS WILL ESTABLISH THE              Y02134
*        CONCATENATION NUMBER.                                   Y02134
*
         L     R1,DXDSAB                FIRST DSAB               Y02134
         USING DSAB,R1                  DSAB DSECT USING         Y02134
         L     RTIOT,DSABTIOT           GET TIOT POINTER         YM1239
PDF02030 EQU   *                        FIND DDNAME              Y02134
         LTR   R1,R1                    IS THERE A FIRST DSAB?   Y02134
         SPACE 3
         BZ    PDF02078                 BR IF NO                 Y02134
********
         L     RF,DSABTIOT              LOAD TIOT ENTRY ADDRESS  Y02134
******** MOVE DDNAME TO MESSAGE
         CLI   TIOEDDNM-TIOENTRY(RF),C' ' DDNAME IN THIS ONE?    Y02134
********
         BNE   PDF02035                 BRANCH IF YES            Y02134
         L     R1,DSABBCHN              CHAIN BACKWARDS TO ONE   Y02134
*                                       WITH DDNAME IN TIOENTRY  Y02134
         B     PDF02030                 CHECK PREVIOUS ONE       Y02134
PDF02035 EQU   *                        MOVE DDNAME TO MSG       Y02134
         MVC   ORG(DDNLNG,RB),TIOEDDNM-TIOENTRY(RF) MOVE DDNM    Y02134
PDF02040 EQU   *                        SET CONCATENATION NUMBER Y02134
         C     RTIOT,DSABTIOT           TIOT IN THIS DSAB        Y02134
         BE    PDF02080                 WE'VE GOT IT             Y02134
         L     R1,DSABFCHN              FWRD CHAIN TO NEXT DSAB  Y02134
         AH    R0,CONH1                 INCREMENT CONCAT COUNT   Y02134
         LTR   R1,R1                    IS THERE ANOTHER DSAB    Y02134
         BNZ   PDF02040                 BRANCH IF YES            Y02134
********
******** DDNAME NOT FOUND, SO MOVE 'UNKNOWN' TO MESSAGE AND      A52396
******** TREAT AS A DUMMY DATA SET FOR REMAINDER OF MESSAGE      A52396
********                                                         A52396
PDF02078 EQU   *                                                 A52396
         SR    RTIOT,RTIOT              ZERO OUT TIOT PTR        YM1239
         MVC   0(L'UNKNOWN,RB),UNKNOWN  MOVE UNKNOWN TO MSG      A52396
         LA    RB,L'UNKNOWN-ONE(RB)     BUMP MSG PTR             A52396
         BAL   RF,PDF02260              REMOVE TRAILING BLANKS   A52396
         SR    RUCB,RUCB                UCB ADDR UNKNOWN, SO SET A52396
*                                       TO ZERO AND TREAT AS     A52396
*                                       A DUMMY DATA SET         A52396
         B     PDF02100                 GO CONTINUE              A52396
         SPACE 3
********
******** IF CONCATENATION (R0 NE 0), MOVE CONCATENATION NUMBER TO MSG
********
PDF02080 EQU   *                        MOVE CONCATENATION NO. TO MSG
         LA    RB,DDNLNG-ONE(RB)        BUMP MSG PTR
         BAL   RF,PDF02260              GET RID OF TRAILING BLANKS
         L     RUCB,DXUCBADR            GET ADDR OF UCB          Y02134
*
         LTR   R0,R0                    CONCAT NUMBER ZERO
         BZ    PDF02100                 YES
         BCTR  RB,ZERO                  BACK PTR PAST COMMA
         MVI   ORG(RB),DASH             MOVE HYPHEN TO MSG
         LA    RB,ONE(RB)               BUMP MSG PTR
         AH    R0,CONH1                 BUMP CONCAT NO. TO COUNT FROM 1
*                                       INSTEAD OF 0
         CVD   R0,CONCATNO(RC)          CONVERT CONCATNO. TO DEC
         UNPK  ORG(CCNLNG,RB),CONCATNO+SIX(TWO,RC)
*                                       CONVERT TO ZONED DEC
         OI    CCNLNG-ONE(RB),DECZERO   CONVERT SIGN
         MVI   CCNLNG(RB),COMMA         MOVE COMMA TO MSG
         LA    RB,CCNLNG+ONE(RB)        BUMP MSG PTR
         SPACE 3
********
******** IF DUMMY DATA SET, NO VOLID BECAUSE NO UCB
********
PDF02100 EQU  *                         CHK FOR DUMMY DATA SET
         LA    RUCB,ZERO(RUCB)          CLEAR HI-ORDER BYTE
         MVI   ORG(RB),COMMA            MOVE COMMA TO ACCOUNT FOR
*                                       MISSING UCBNAME FOR DUMMY D. S.
         MVI   ONE(RB),COMMA            ACCOUNT FOR MISSING VOLID FOR
*                                       DUMMY DATA SET
         LTR   RUCB,RUCB                DUMMY DATA SET?
         BNZ   PDF02120                 NO, MOVE UCBNAME TO MSG
         LA    RB,ONE(RB)               UPDATE BUFFER PTR
         B     PDF02180                 GO MOVE DSNAME TO MSG
********
******** LOCATE UNIT NAME AND VOLID
********
PDF02120 MVC   ORG(UNITLNG,RB),UCBNAME  MOVE UNIT NAME TO MSG
         MVI   UNITLNG(RB),COMMA        MOVE FLD SEPARATOR TO MSG
         LA    RB,UNITLNG+ONE(RB)       BUMP MSG PTR
         MVI   ORG(RB),COMMA            MOVE COMMA TO BUFFER     YM3945
         TM    UCBTYP+TWO,MTDA          TAPE OR DA
         BZ    PDF02180                 NO                       Y02664
         CLI   SRTEVOLI,ZERO            VALID VOL SER NO.
         BE    PDF02180                 NO, MOVE COMMA TO INDICATE
*                                       MISSING FIELD
         CLI   SRTEVOLI,NOCELL          VALID VOL SER NO.      @ZA09123
         BE    PDF02180                 NO BRANCH              @ZA09123
         MVC   ORG(VOLLNG,RB),SRTEVOLI  MOVE VOLID TO MSG
         LA    RB,VOLLNG(RB)            BUMP MSG PTR
         MVI   ORG(RB),COMMA            MVC FLD SEPARATOR TO MSG YM5367
********
******** LOCATE DSNAME AND MOVE TO MESSAGE
********
PDF02180 EQU   *                        NO DSNAME IF SPOOLED
*                                                                YM3111
         LTR   RTIOT,RTIOT              TEST FOR TIOT FOUND      YM3111
         BZ    PDF02220                 BRANCH IF NO TIOT        YM3111
*                                                                YM3111
         TM    TIOELINK-TIOENTRY(RTIOT),TIOESYIN+TIOESYOT       XL02942
*                                       IS DATA SET SPOOLED     XL02942
         BNZ   PDF02220                 SKIP DSNAME              YM3111
*                                                                YM3111
         CLC   TIOEJFCB-TIOENTRY(L'TIOEJFCB,RTIOT),ZEROS EXIST   YM3111
         BZ    PDF02220                 BRANCH IF ZERO           YM3111
*                                                                YM3111
         LA    RB,ONE(RB)               BUMP MSG PTR TO ACCOUNT
*                                       FOR COMMA
PDF02200 EQU   *                        MOVE DSNAME TO MSG
         LR    RD,RB                    SAVE CURRENT PTR
*                                                                YM3111
         LA    RET,JFCBDSNM             POINT TO FIRST JFCB      YM3111
         C     R1,DXDSABAD              TEST FOR CONCATENATION   YM3111
         BE    PDF02210                 BRANCH IF NOT            YM3111
         LA    RET,TIOEJFCB-TIOENTRY(,RTIOT) POINT TO JFCB ADDR  YM3111
         IECRES LOCJFCB,(RET)           GET JFCB PTR             YM3111
*                                                                YM3111
PDF02210 EQU   *                        DSNAME TO MESSAGE        YM3111
*                                                                YM3111
         MVC   ORG(DSNLNG,RB),JFCBDSNM-INFMJFCB(RET) DSNAME      YM3111
         LA    RB,DSNLNG-ONE(RB)        BUMP MSG PTR
         BAL   RF,PDF02260              REMOVE TRAILING BLANKS
         BCTR  RB,ZERO                  BACK PTR PAST COMMA      YM5367
         EJECT
********
******** FINAL INITIALIZATION BEFORE ISSUING WTP
********
PDF02220 EQU   *                        FINAL INIT FOR WTP
*                                                                YM3945
         CLI   ORG(RB),COMMA            SEE IF COMMA             YM3945
         BNE   PDF02230                 BRANCH, LAST CHAR OF MSG YM3945
         BCT   RB,PDF02220              LOOP CHECK NEXT          YM3945
*                                                                YM3945
PDF02230 EQU   *                        MOVE IN ROUTING CODE     YM3945
*                                                                YM3945
         LA    RB,ONE(,RB)              BUMP PASSED LAST CHAR    YM3945
         CLI   PDABCODE,X61             ABEND CODE 61X?        @ZA08900
         BNE   PDF02235                 NO, BRANCH             @ZA08900
         CLI   PDABCODE+ONE,X30         ABEND CODE 613?        @ZA08900
         BNE   PDF02235                 NO, BRANCH             @ZA08900
         MVC   ORG(RTCDLNG,RB),ROUTCOD1 USE NEW ROUTCODE       @ZA08900
         B     PDF02240                                        @ZA08900
PDF02235 EQU   *                                               @ZA08900
         MVC   ORG(RTCDLNG,RB),ROUTCOD  MOVE ROUTCODE TO MSG
PDF02240 SR    RB,RC                    DETERMINE LENGTH OF MSG
         STH   RB,ORG(RC)               PUT LENGTH IN MSG
         CH    RB,CONH76                IS IT GREATER 76
         BNH   PDF02250                 NO, ISSUE WTP
         CLI   PDABCODE,X61             ABEND CODE 61X?        @ZA08900
         BNE   PDF02245                                        @ZA08900
         TM    PDABCODE+ONE,X30         ABEND CODE 613?        @ZA08900
         BNO   PDF02245                                        @ZA08900
         MVC   ORG(RTCDLNG,RD),ROUTCOD1 MOVE NEW RTCDE TO MSG  @ZA08900
         B     PDF02248                                        @ZA08900
PDF02245 MVC   ORG(RTCDLNG,RD),ROUTCOD  MOVE ROUTCODE TO MSG
PDF02248 SR    RD,RC                    YES, GET LENGTH W/O DSNAME
         SR    RB,RB                    ZERO REG TO ACT AS SWITCH
         STH   RD,ORG(RC)               STORE LENGTH IN MSG
         SPACE 3
********
******** ISSUE WTP
********
PDF02250 EQU   *                        ISSUE WTP
         WTO   MF=(E,(RC))              ISSUE WRITE-TO-PROG
         LTR   RB,RB                    ANOTHER LINE NEEDED FOR DSNAME
         BNZ   PDF02300                 NO, EXIT TO NEXT MODULE
         LA    RB,MCSLNG+IDLNG(RC)      POINT MSG PTR TO AREA FOR DSN
         B     PDF02200                 GO MOVE DSNAME TO BUFFER
         SPACE 3
********
******** SUBROUTINE TO REMOVE BLANKS FROM INFORMATIVE MESSAGE
********
PDF02260 EQU   *                        REMOVE BLANKS
*                                       THIS ROUTINE WILL REMOVE
*                                       BLANKS FROM VARIABLE LENGTH
*                                       FIELDS IN THE MESSAGE, SUCH
*                                       AS JOBNAME, DDNAME, ETC.
         CLI   ORG(RB),BLANK            BLANK CHAR?
         BNE   PDF02280                 NO, BRANCH
         BCT   RB,PDF02260              YES, POINT TO PRECEDING
*                                       CHARACTER AND BRANCH TO
*                                       CHECK IT
PDF02280 EQU   *                        MOVE COMMA TO MSG
         MVI   ONE(RB),COMMA            MOVE COMMA TO MSG
         LA    RB,TWO(RB)               UPDATE BUFFER PTR
         BR    RF                       RETURN TO CALLER
         EJECT
********
******** XCTL TO NEXT MODULE
********
PDF02300 EQU   *                        PT TO NEXT MOD NAME
         LA    RD,TRACEID               PT TO IFG0199D ID        Y02144
         CLI   PDCODE,SDTRACE           CHK IF IFG0199D NEEDED   Y02144
         BNE   PDF02340                 BR YES                   Y02144
         LA    RD,TRACE9C+SIX           PT TO IFG0559C ID        YM3063
PDF02340 EQU   *                         GO TO NEXT MODULE       Y02144
         LR    R1,RC                    RESTORE PTR TO PD WKAREA
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,MODID=(RD)    YM3063
         EJECT
********                                                       @Y30LSFY
******** WRITE IECX66I MESSAGE TO INDICATE MSS  FAILURE        @Y30LSFY
********                                                       @Y30LSFY
         USING ACQLST,RB                                       @Y30LSFY
PDF03100 L     RB,DXREGB                GET PARM LIST PTR      @Y30LSBS
         MVC   ARRES0(K3),PDMSG+K3      SAVE ID CHARS          @Y30LSFY
         MVC   PDMSGLNG(IDMSML),IDMSM   SET BASIC MSG          @Y30LSFY
         MVC   PDMSG+K3(K1),ARRES0      SET COMPONENT ID       @Y30LSFY
         L     RF,CVTPTR                GET CVT ADDR           @Y30LSFY
         L     RF,CVTTCBP-CVT(,RF)      GET ADDR TCB WORDS     @Y30LSFY
         L     RF,CURTCB(,RF)           GET CURRENT TCB PTR    @Y30LSFY
         L     RF,TCBTIO-TCB(,RF)       GET TIOT START PTR     @Y30LSFY
         MVC   PDMSG+K8(K8),TIOCNJOB-TIOT(RF) SET JOBNAME      @Y30LSFY
         TM    AROP,MNT                 MOUNT REQUEST          @Y30LSFY
         BZ    PDF03280                 NO                     @Y30LSFY
         MVC   PDMSG+K44(K11),KMNT      SET MOUNT FUNCTION     @Y30LSFY
         B     PDF03380                 CONTINUE               @Y30LSFY
PDF03280 TM    AROP,DMNT                DEMOUNT REQUEST        @Y30LSFY
         BNO   PDF03300                 NO                     @Y30LSFY
         MVC   PDMSG+K44(K11),KDMNT     SET DEMOUNT FUNCTION   @Y30LSFY
         B     PDF03380                 CONTINUE               @Y30LSFY
PDF03300 EQU   *                        ACQUIRE REQUEST        @Y30LSBS
         MVC   PDMSG+K44(K11),KACQ      SET ACQUIRE FUNCTION   @Y30LSFY
PDF03320 MVI   PDMSG+K23,BLANK          BLANK DDD FIELD        @Y30LSFY
         MVC   PDMSG+K24(K3),PDMSG+K23                         @Y30LSFY
         SR    RF,RF                    CLEAR CODE REG         @Y30LSFY
PDF03340 LH    RF,ARCOMPC               GET REASON CODE        @Y30LSFY
         LTR   RF,RF                    IS IT NON-ZERO         @Y30LSFY
         BNZ   PDF03360                 YES - USE IT IN MSG    @Y30LSFY
         L     R1,ARNEDB                GET NEXT LIST PTR      @Y30LSFY
         LTR   R1,R1                    IS IT NULL             @Y30LSFY
         BZ    PDF03360                 YES - USE CODE IN LIST @Y30LSFY
         MVC   K6(K2,R1),ARRES0+K1      SAVE MSG ID            @Y30LSFY
         LR    RB,R1                    SET NEW LIST PTR       @Y30LSFY
         B     PDF03340                 EXAMINE REASON CODE    @Y30LSFY
PDF03360 STH   RF,ACQLST                SAVE REASON CODE       @Y30LSFY
         B     PDF03390                 CONTINUE               @Y30LSFY
PDF03380 MVC   PDMSG+K24(K3),UCBNAME    SET DDD                @Y30LSFY
PDF03390 CLI   ARVOL,ZERO               IS VOLSER VALID        @Y30LSFY
         BE    PDF03400                 NO - USE SCRTCH        @Y30LSFY
         MVC   PDMSG+K17(K6),ARVOL      SET VOLSER FROM LIST   @Y30LSFY
         B     PDF03420                 CONTINUE               @Y30LSFY
PDF03400 MVC   PDMSG+K17(K6),SCRTCH     SET SCRTCH AS VOLSER   @Y30LSFY
PDF03420 LH    RF,ACQLST                GET  REASON CODE       @Y30LSFY
         SLL   RF,K4                    SHIFT FOUR BITS        @Y30LSFY
         STH   RF,ACQLST                RESET REASON CODE      @Y30LSFY
         UNPK  PDMSG+K61(K3),ACQLST(K2) UNPACK REASON CODE     @Y30LSFY
         OI    PDMSG+K63,DECZERO        ENSURE VALID DIGIT     @Y30LSFY
         TR    PDMSG+K61(K3),ABTABLE    MAKE IT PRINTABLE      @Y30LSFY
         LR    R1,RC                    SET UP PTR TO WKAREA   @Y30LSBS
         WTO   MF=(E,(1))               ISSUE WTO,WTP          @Y30LSFY
         MVC   PDMSG+K4(K2),ARRES0+K1   RESET ORIGINAL MSG ID  @Y30LSFY
         XC    PDMSG+K8(K68),PDMSG+K8   CLEAR ALL BUT  PREFIX  @Y30LSFY
         LR    R1,RC                    SET UP PTR TO WKAREA   @Y30LSBS
         B     PDF01200                 CONTINUE WITH P.D.     @Y30LSBS
         DROP  RB                                              @Y30LSFY
         EJECT
********                                                         Y02080
******** CONSTANTS AND WORK AREAS
********
CONH1    DC    H'1'                     CONST USED TO BUMP CONCAT NO.
CONF4    DC    F'4'                     BUMP RTECDE PTR.       @ZA07212
CONH76   DC    H'76'                    MAX LNG OF MSG
ZEROS    DC    AL3(0)                   CONSTANT OF 0            YM3111
UNKNOWN  DC    CL8'UNKNOWN'             UNKNOWN DDNAME FOR MSG   A52396
SCRTCH   DC    C'SCRTCH'                NON-SPECIFIC VOL REQ   @Y30LSFY
IDMSM    WTO   'IECX66I JJJJJJJJ,VOLSER,DDD  MSS FAILURE IN RELINQUISH.X
                CODE=HHH.',MF=L,DESC=4,ROUTCDE=(2,11)          @Y30LSFY
IDMSML   EQU   *-IDMSM                  TOTAL LENGTH OF MSG    @Y30LSFY
KMNT     DC    CL11'MOUNT.'             MOUNT                  @Y30LSFY
KDMNT    DC    CL11'DISMOUNT.'          DISMOUNT               @Y30LSFY
KACQ     DC    CL11'ACQUIRE.'           ACQUIRE                @Y30LSFY
SS1OPF   DC    X'41302C'                413-2C ABEND           @Y30LSFY
SS1EOVF  DC    X'737034'                737-34 ABEND           @Y30LSFY
ABTABLE  EQU   *-240                    TRANSLATE TALBLE
         DC    C'0123456789ABCDEF'      TABLE TO TRANSLATE ABEND AND
*                                       AND RET CODE TO EBCDIC
ROUTCOD  DC    X'04000020'              ROUT AND DESC CODES
ROUTCOD1 DC    X'04002020'              R-T CDE FOR 613        @ZA07212
*                                       FOR WTP                @ZA07212
         XCTLTABL ID=(TRACEID,9D,TRACE9C,IFG0559C),              YM3063*
               BRT=YES,LENGTH=                                   Y02144
         IECPDSCT
         IECDSECS MAIN,CVT,DCB,TCB,WTG,TIOT,UCB,PREFX,           Y02134*
               DSAB,EXPAND=YES                                   Y02134
ACQLST DSECT                                                   @Y30LSFY
         ICBACREL TYPE=ACQ,MF=L         IDMS PARM LIST         @Y30LSFY
         END
