         TITLE 'IFG0551F   EOV BASIC READ JFCB'
IFG0551F CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 03 DELETIONS                                   *
*0000                                                          @ZA02187
*          VS2 RELEASE 02 DELETIONS                                   *
*
*
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0551F (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = EOV BASIC READ JFCB                              *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE IS THE SECOND LOAD OF THE EOV ROUTINES AND       *
*        PERFORMS THE FOLLOWING FUNCTIONS.                            *
*                                                                     *
*        THE DEB IS VALIDITY CHECKED (IF NOT ENTERED FROM THE         *
*        CONCATENATION FUNCTION TO PROCESS LIKE ATTRIBUTES            *
*        CONCATENATION) BY ISSUING THE DEBCHK MACRO.                  *
*        THIS IS NOT DONE FOR VSAM.                                   *
*                                                                     *
*        EXCEPT FOR VSAM, CONCATENATION, FEOV REPOSITIONING           *
*        FREE-OLD-DEB PROCESSING, AND FOR SPOOLED DCBS, THE DEBDCBAD  *
*        POINTED TO THE COPIED DCB AND THE DEB IS PURGED TO           *
*        ENSURE THAT NO OUTSTANDING I/O IS IN PROCESS AND DOES        *
*        NOT GET INITIATED DURING EOV.                                *
*                                                                     *
*        THE JFCB IS MOVED INTO THE EOV WORKAREA UNLESS A VSAM        *
*        CATALOG AMB, IN WHICH CASE MODULE IFG0550Y IS GIVEN          *
*        CONTROL TO LOCATE THE JFCB AND MOVE IT INTO THE EOV          *
*        WORKAREA. IFG0550Y RETURNS CONTROL TO THIS MODULE.           *
*                                                                     *
*        THE USER TOTALING SAVE AREA IS UPDATED TO INDICATE           *
*        THE LAST RECORD OF THE LAST BLOCK ON THE VOLUME BEING        *
*        PROCESSED.                                                   *
*                                                                     *
*        THE NUMBER OF UNITS ALLOCATED IN THE TIOT ENTRY IS           *
*        DETERMINED AND DXNOUNIT IS INITIALIZED WITH THIS VALUE       *
*        EXCEPT FOR VSAM.                                             *
*                                                                     *
*        IF IFG0550Y DETERMINED AN ERROR IN LOCATING THE JFCB         *
*        FOR A VSAM CATALOG, VSAM PROBLEM DETERMINATION MODULE        *
*        IDA0192P IS LOADED AND BALRED TO.                            *
         EJECT
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO EOV WORK AREA                               *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0551F                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        GIVEN CONTROL BY LOADING AND BEING BRANCHED TO OR BY         *
*        USE OF THE XCTL MACRO.                                       *
         EJECT
* INPUT =                                                             *
*        CONTROL IS PASSED IN PROTECT KEY 5.                          *
*        REGISTER 2 POINTS TO A COPIED DCB, UNLESS VSAM, IN WHICH     *
*              CASE REGISTER 2 POINTS TO THE AMB.                     *
*        REGISTER 4 POINTS TO THE EOV WORKAREA.                       *
*                                                                     *
*        REGISTER 14 CONTAINS A BRANCH TABLE CODE -                   *
*        0 - ENTERED FROM IGC0005E, THE FIRST LOAD OF EOV,            *
*        FOR NON-VSAM DATA SETS, OR                                   *
*        FROM IGC0003A, THE FIRST LOAD OF FEOV.                       *
*        4 - ENTRY FROM IFG0550Y FOR VSAM CATALOG DATA SETS.          *
*        8 - ENTERED FROM THE CONCATENATION MODULE, IFG0552X,         *
*        TO PROCESS LIKE ATTRIBUTES CONCATENATION. THE EOV            *
*        WORKAREA HAS BEEN UPDATED TO POINT TO THE NEW DSAB           *
*        AND TIOT ENTRY BEING CONCATENATED TO.                        *
*        12 - ENTERED FROM IGC0005E FOR VSAM AMBS.                    *
*                                                                     *
*        DCBC2FEOV, BIT 6, IN DCBCIND2 IS SET TO 1 BY IGC0003A        *
*        TO INDICATE FEOV PROCESSING.                                 *
*                                                                     *
*        DCBOCON, BIT 2, IN DCBOFLGS IS SET TO 1 BY IFG0552X          *
*        TO INDICATE CONCATENATION OF LIKE ATTRIBUTE DATA SETS.       *
*                                                                     *
* OUTPUT =                                                            *
*        CONTROL IS PASSED IN PROTECT KEY 5.                          *
*        REGISTER 2 POINTS TO A COPIED DCB UNLESS VSAM, IN WHICH      *
*              REGISTER 2 POINTS TO THE AMB.                          *
*        REGISTER 4 POINTS TO THE EOV WORKAREA.                       *
*                                                                     *
*        DEBDCBAD POINTS TO COPIED DCB EXCEPT FOR SPOOLED DCBS,       *
*        VSAM AMBS, AND IF CONCATENATION IS BEING PROCESSED.          *
*                                                                     *
*        THE JFCB IS IN THE EOV WORKAREA AT LABEL DXJBF.              *
*                                                                     *
*        DXXNOUNIT INITIALIZED TO THE NUMBER OF UNITS IN THE          *
*        TIOT ENTRY FOR NON VSAM DATA SETS.                           *
*                                                                     *
*        VSAM PROBLEM DETERMINATION PARAMETER LIST CONSTRUCTED        *
*        BEFORE BALRING TO VSAM PROBLEM DETERMINATION MODULE          *
*        IDA0192P.                                                    *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0551H FOR NOT SPOOLED DCBS.                               *
*        IFG0552X FOR SPOOLED DCBS.                                   *
*        IFG0550Y TO LOCATE JFCB FOR VSAM CATALOG DATA SETS.          *
*        IFG0557A FOR ALL VSAM DATA SETS.                             *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P, EOV PROBLEM DETERMINATION, WITH AN INTERNAL        *
*        ABEND CODE IN REGISTER 0 -                                   *
*                                                                     *
*        219 - CAUSING AN A37-08 ABEND IF THE SPOOLED DCB'S DEB       *
*        POINTS TO AN ACB (THROUGH DEBDCBAD) WHICH DOES NOT           *
*        POINT BACK (THROUGH ACBDEBAD) TO THE SAME DEB, OR IF         *
*        THE SPOOLED DCB'S DEB DOES NOT POINT (THROUGH DEBECBAD)      *
*        BACK TO THE DCB.                                             *
         EJECT
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IDA0192P GIVEN CONTROL IF IFG0550Y DETECTED AN ERROR         *
*        LOCATING THE JFCB FOR A VSAM CATALOG DATA SET.               *
*                                                                     *
*    DATA AREAS = NONE.                                               *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        DCB                                                          *
*        TIOT                                                         *
*        TCB                                                          *
*        AMB                                                          *
*        DSAB                                                         *
*        UCB                                                          *
*        USER TOTALING AREA                                           *
*                                                                     *
* TABLES =                                                            *
*        EOV WORKAREA.                                                *
*                                                                     *
* MACROS =                                                            *
*        DEBCHK                                                       *
*        DMABCOND                                                     *
*        MODESET                                                      *
*        IECRES LOAD                                                  *
*        PURGE                                                        *
*        WAIT                                                         *
*        IECRES LOCJFCB                                               *
*        LOAD                                                         *
*        DELETE                                                       *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*        IDAAMB                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD          *
*                                                                     *
***********************************************************************
         EJECT
*
EABD219  EQU   219                      INTERNAL CODE FOR ABEND A37-08
*
         USING UCB,RUCB
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING CVT,RET
         USING TIOENTRY,RTIOT
         USING DEBBASIC,RDEB                                     YM1272
         USING IHADCB,RDCB
*
***********************************************************************
*              END OF VOLUME PROCESSING STARTS HERE
***********************************************************************
*
EIN10800 BALR  RBASE,0                  ESTABLISH BASE
         USING *,RBASE
*
         L     RPAR,CVTPTR              CVT ADDRESS              Y02082
         L     RPAR,CVTDMSR-CVT(,RPAR)  RESIDENT ROUTINE ADDR    Y02082
         B     EIN10850(RET)            BR TO INDICATED FUNCTION X02989
EIN10850 EQU   *                        BRANCH TABLE             X02989
         B     EIN10875                 INITIAL ENTRY            YM1277
         B     EIN11251                 ENTRY FOR VSAM CATALOG   X02989
*                                       EOV ROUTINE              X02989
         B     EIN10900                 ENTRY FOR CONCAT(552X)   YM1277
         B     EIN11150                 VSAM ENTRY FROM 005E     YM1391
EIN10875 EQU   *                        INITIAL ENTRY            YM1277
         NI    DCBOFLGS,ALLBITS-DCBOCON FORCE OFF CONCAT BIT     YM1277
EIN10900 EQU   *                        CONCATENATION ENTRY      X02989
*                                                                Y02082
         L     RET,CVTPTR               GET CVT ADDR             Y01018
         USING TIOENTRY,RTIOT           RE-DEFINE TIOT BASE      Y01018
         L     RTIOT,DXTIOTAD           GET TIOT ENTRY ADDRESS   Y02134
         ST    RCORE,DXXCORE-K1         SAVE WORK AREA PTR       X02989
         L     RDEB,DCBDEBAD            POINT TO DEB
         NI    DCBIFLGS,X'FF'-DCBIFPIO  RESET ERROR FLAGS        Y02082
         TM    TIOELINK,TIOTSPOL        SPOOLED ENTRY?           Y02120
         BZ    EIN11050                 NO,CONTINUE
         EJECT
*
*        SPOOLED DCB'S DEB DOES NOT POINT BACK TO DCB, BUT TO    Y02120
*        THE SPOOLED ACB WHICH CAN BE DEBCHK VERIFIED.           Y02120
*        DEBECBAD POINT TO SPOOLED DCB.                          Y02120
*
         LA    RDCB,K0(RDCB)            CLEAR HIGH BYTE          Y02120
         L     R7,DEBECBAD              GET CI DCB ADDRESS       Y02120
         LA    R0,EABD219               A37 ABEND CODE           Y02120
         CLM   R7,B'0111',DXUDCBAD+K1   DOES DEB PT TO USER DCB  Y02082
         BNE   EIN11040                 NO--INVALID DCB          Y02120
         L     R7,DEBDCBAD              GET ACB TO DEBCHK        Y02120
         LA    R7,K0(,R7)               CLEAR HIGH BYTE          Y02120
         DEBCHK (R7),AM=SUBSYS          VERIFY DEB               Y02120
         LA    RDEB,K0(RDEB)            CLEAR HIGH BYTE          Y02120
         LA    R1,K0(R1)                CLEAR HIGH BYTE          Y02120
*                                       OF DEB RETURNED IN REG 1 Y02120
         LA    R0,EABD219               A37 ABEND CODE           Y02120
         CR    R1,RDEB                  DEBS EQUAL               Y02120
         BE    EIN11240                 BR TO BYPASS PURGE DEB   Y02120
EIN11040 EQU   *                        PROBLEM DETERMINATION EXIT
         LA    RWTGC,DXXENTRY           POINT TO CURRENT ENTRY   A50321
         DMABCOND (0),MODPD1F,REGSAVE=YES                        Y02134
         SPACE 2
EIN11050 EQU   *                        NON-SPOOLED DEB CHECK
         TM    DCBOFLGS,DCBOCON         CHK FOR CONCAT PROC      Y02082
         BO    EIN11200                 YES, BR TO BYPASS DEBCHK Y02082
         L     R1,DXUDCBAD              POINT TO USER'S DCB      Y02082
         DEBCHK (R1)                    VALIDATE DEB             Y02082
         LR    RDEB,R1                  LOAD VERIFIED DEB ADDR   Y01021
         STCM  RDEB,B'0111',DCBDEBAD+K1 STORE VALID DEB ADDR IN  Y02082
*                                       COPIED DCB               Y02082
         B     EIN11200                 CONTINUE                 YM3809
         EJECT
*
*        VSAM ENTRY FROM IGC0005E
*
*        GIVE VSAM CATALOG JFCB FINDING MODULE CONTROL IF AMB
*        IS CONNECTED TO A VSAM CATALOG
*
EIN11150 EQU   *                        VSAM ENTRY               YM1391
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          YM1391
         USING  IDAAMB,RDCB             DEFINE BASE TO AMB       YM1391
         TM    AMBINFL,AMBCAT+AMBSCRA+AMBUCRA  VSAM CATALOG?   @Y30DSDT
         USING IHADCB,RDCB              REDEFINE BASE FOR DCB    YM1391
         BZ    EIN11250                 BR IF NO               @Y30DSDT
         MVC   DXXMODID,MODVS0Y         MOVE ID TO NAME          YM1391
         MVC   DXXMODEP+K1(K3),MODVS0Y+K2 MOVE IN TTR            YM1391
         OI    DXATEOV,DXATVCAT         GOING TO VSAM CATLG 550Y YM1391
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=DIRECT               YM1391
*                                       XCTL TO VSAM CATLG MOD   YM1391
         EJECT
EIN11200 EQU   *                        I/O CTL BLKS
*
*        SETUP EOV WORK AREA & FORMAT
*
         NI    DXXPATHS+K1,WTGTSENQ     ZERO ALL BUT TSENQ BIT   YM2179
         TM    DCBOFLGS,DCBOCON         IF CONCATENATION, BYPASS Y02082
         BO    EIN11240                 DEBCHK DELETE            YM1391
         TM    DCBMACRF,DCBMEXCP        EXCP                     YM5370
         BO    EIN11220                 BRANCH IF NO             YM5370
         TM    DCBCIND2,DCBC2FEO        FEOV                     YM5370
         BZ    EIN11220                 BRANCH IF NO             YM5370
         TM    DCBIOBAD,DCBUPDCM+DCBSVDEB FEOV REPOSITIONING,    YM5370
*                                       FREE OLD DEB FUNCTION    YM5370
         BO    EIN11240                 BRANCH IF YES-BYPASS     YM5370
*                                       DEBCHK DELETE, PURGE     YM5370
EIN11220 EQU   *                        POINT DEB TO COPY DCB    YM5370
*                                                                Y02082
* SIMULATE DEBCHK DELETE BY DISCONNECTING DEB FROM USER'S DCB    Y02082
*                                                                Y02082
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXPDCBAD+K1 POINT DEB  Y02082*
                                        TO COPIED DCB            Y02082
         L     R1,DXDEBXAD              GET PTR TO DEB EXTN      YM1272
         OI    DEBXFLG1-DEBXTN(R1),DEBXCDCB INDIC DEB PT TO COPY YM1272
*                                                                Y02082
* PURGE DEBS FOR ALL DCBS (NOT ACBS) EXCEPT SPOOLED DCBS         Y02082
*                                                                Y02082
         LA    R1,DXCCW                 BUILD PURGE PARM LIST IN Y02082
         USING PURGPRM,R1                 CCW WORK AREA.         Y02082
         ST    RDEB,PURGDEB             STORE DEB TO BE PURGED   Y02082
         MVI   PURGOPT,X80+X20          SET OPTION BITS          Y02082
         XC    PURGECB,PURGECB          CLEAR COMPLETION CODE    Y02082
         LA    R0,DEBUSRPG              SET POINTER TO IOB CHAIN Y02082
         ST    R0,PURGCHN                                        Y02082
         XC    PURGMVM,PURGMVM          CLEAR 4TH WORD OF LIST   Y02082
         PURGE (1)                      PURGE ALL IOBS, THIS DEB Y02082
         LA    R1,DXCCW                 ADDRESS PURGE PARM LIST  Y02082
         LA    R1,PURGECB-PURGPRM(R1)   POINT TO PURGE ECB       Y02082
         WAIT  ECB=(1)                  WAIT TILL PURGE COMPLETE Y02082
         DROP  R1                                                Y02082
         EJECT
EIN11240 EQU   *                        FORMAT WORKAREA          YM1391
*
*              CONSTRUCT DUMMY BLOCKS IN WORK AREA
*
         LA    RC,DXDCB                 DUMMY DCB ADDR
         ST    RC,IOBDCBPT-K1           DCB PTR GOES IN DUMMY IOB
         LA    RC,DXECB                 DUMMY ECB ADDR
         ST    RC,IOBECBPT              ECB PTR GOES IN DUMMY IOB
         LA    RC,DXCCW                 LOC OF CHANNEL PROGRAM
         ST    RC,IOBSTART-K1           CHNL PRGM PTR INTO DUMMY IOB
         OI    IOBFLAG1,K2              NO RELATION BETWEEN IO REQSTS
         LA    RC,DXDEB                 DUMMY DEB ADDR
         ST    RC,DXDCBDEB              DEB PTR GOES IN DUMMY DCB
         L     R1,CVTSVDCB              LOC OF SVCLIB DCB        Y02120
         L     R1,DCBDEBAD-IHADCB(K0,R1)  LOC OF SVCLIB DEB      Y02120
         MVC   DXDEB+K4(K44),K4(R1)     USE SVCLIB DEB           Y02120
         MVI   DXDEB+(DEBNMEXT-DEBBASIC),K1 SET NO. EXTENTS 1   YA03003
         MVC   DXDEBAPP,CVTXAPG         SET DUMMY APPEND VEC TBL Y02080
         MVI   DXDEBMOD,K0              SET FILE MASK TO ZERO    YM6841
         XC    DXDEB+K21(K3),DXDEB+K21  ZERO DEBECBAD
         IC    R0,DXDEBID               SAVE BYTE 0
         LA    RC,DXDCB                 LOC OF DUMMY DCB
         ST    RC,DXDEBDCB              DUMMY DCB PTR IN DUMMY DEB
         STC   R0,DXDEBID               RESTORE BYTE 0
         LA    R1,DXDEB                 POINT TO DUMMY DEB
         ST    RCORE,DXXCORE-K1         PUT WORK AREA PTR IN PARM
         SPACE 2
EIN11250 EQU   *                        VSAM NON-CATALOG ENTRY   YM1391
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM1391
*                                                                Y02134
         L     RTIOT,DXDSABAD           LOAD POINTER TO DSAB     Y02134
         L     RTIOT,DSABTIOT-DSAB(,RTIOT) GET TIOT ENTRY        Y02134
         LA    RET,TIOEJFCB             POINT TO JFCB POINTER    Y02134
         IECRES LOCJFCB,(RET)           LOCATE JFCB              Y02134
         MVC   DXJBF(JFCBLGTH),INFMJFCB-INFMJFCB(RET) GET JFCB   Y02134
*                                                                Y02134
* TURN ON 'JFCB OPENED' BIT TO INDICATE THIS FACT TO SCHEDULER   Y02134
* IN CASE WE ARE PASSING THROUGH THIS CODE FOR LIKE ATTRIBUTES   Y02134
* CONCATENATION                                                  Y02134
*                                                                Y02134
         OI    JFCFLGS1,X80             SET BIT                  Y02134
         EJECT
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          YM1391
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    X02989
         BO    EIN11255                 BR IF YES, NOT ACB       X02989
         TM    DCBDSORG+K1,ACBDORGA     IS CNTRL BLK AN ACB/AMB  X02989
         BNO   EIN11255                 BR IF NO                 X02989
         USING IDAAMB,RDCB              DEFINE BASE TO AMB       X02989
         TM    AMBID,AMBIDENT           IS CNTRL BLK AN AMB      X02989
         BNO   EIN11255                 BR IF NO                 X02989
EIN11251 EQU   *                        IFG0550Y RETURN          X02989
         MVC   DXXIDTTR(K5),MODVS7A     LD ID OF VSAM MOD IN WTG X02989
         LA    RWTG,DXXAREA             POINT TO EOV WTG TABLE   XM1037
         SR    RET,RET                  ZERO RETURN REG          XM1037
         TM    AMBINFL,AMBCAT+AMBSCRA+AMBUCRA  VSAM CATALOG?   @Y30DSDT
         USING IHADCB,RDCB              REDEFINE BASE TO DCB     X02989
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM1391
         BZ    EIN11252                 BR IF NO               @Y30DSDT
         TM    DXECB,ECBNOERR           TEST FOR I/O             X02989
         BNO   EIN11253                 BR IF ERROR              X02989
EIN11252 EQU   *                        GO TO VSAM               YM1391
         OI    DXATGENS,DXATVSMG        VSAM STRING TO GET CNTRL Y02144
         B     EIN12975                 BR TO GO TO NEXT MODULE  X02989
         EJECT
EIN11253 EQU   *                        VSAM PROBLEM DETERMINATION
         LA    RC,DXIOB                 LD ADDR OF WORK AREA     X02989
         USING IDAPDPRM,RC              SET BASE FOR PARM LIST   X02989
         XC    IDAPDPRM(PDPLNGTH),IDAPDPRM ZERO PARAMETER LIST   X02989
         MVI   PDPCALL,PDPEOV           INDICATE CALLER          X02989
         MVI   PDPCODE,VSJFBERR         SET INTERNAL ERROR CODE  X02989
         MVI   PDPFUNC,VSEOV            LD FUNCTION CODE         X02989
         ST    RDCB,PDPACB              ST ADDR OF AMB           X02989
         ST    RTIOT,PDPTIOT            ST ADDR OF TIOT ENTRY    X02989
         L     RD,CVTADDR               GET CVT ADDR             X02989
         L     RD,CVTSVDCB-CVT(,RD)     GET SVCLIB DCB ADDR      XM1037
         MVC   DXXCTL,EIN1347P          LD NAME OF PROB DET RTN  XM1037
         LOAD  EPLOC=DXXCTL,DCB=(RD)    GET ADDR OF ROUTINE      XM1037
         LR    RF,R0                    LOAD ADDR OF PD ROUTINE  X02989
         LR    R1,RCORE                 LD ADDR OF WORK AREA     X02989
         BALR  RET,RF                   BR TO VSAM PD ROUTINE    X02989
         DELETE EPLOC=DXXCTL            DELETE VSAM PD ROUTINE   XM1037
         XC    DXXCTL,DXXCTL            ZERO NAME FIELD          XM1037
         MVI   JFCDSRG2,JFCORGAM        SET VSAM INDICATOR       X02989
         OI    DXATGENS,DXATVSMG        VSAM STRING TO GET CNTRL Y02144
         B     EIN12975                 BR TO GO TO NEXT MODULE  X02989
         EJECT
EIN11255 EQU   *                        NON-VSAM EOV             X02989
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM1391
         TM    TIOELINK,TIOTSPOL        SPOOLED ENTRY?           YM1308
         BM    EIN12900                 YES,BRANCH               YM1308
         DROP  RC                                                X02989
***********************************************************************
*        NON-SPOOLED DCB - FEOV AND NOT FEOV
***********************************************************************
*
*        PREPARE NOW TO KNOW IF A.M. EXECUTOR NEEDS CONTROL
*        BEFORE RETURNING TO PROBLEM PROGRAM
*
         TM    DCBMACRF,DCBMEXCP        EXCP
         BO    EIN11270                 YES, GO
         OI    DXOPCLSW,UCBMOUNT        SET SWITCH TO LOAD EXECUTOR
*
EIN11270 EQU   *                        INITIALIZE WORKAREA DEB
*
         MVC   DXDEBECC(K4),MAXN        MAX CYL NO
*
***     SET REDUCED ERROR RECOVERY BIT IN EOV'S WORK DEB-UNL TAPE
*
         L     RUCB,DXUCBADR            LOAD CURRENT UCB         Y02134
         TM    UCBTBYT3,DCBDEVTP        IS THIS A TAPE DEVICE
         BZ    EIN11600                 NO
         NI    K40(RDEB),ALLBITS-X80    TURN OFF DOS CHKPT BIT  YA03190
         NI    DXDEBOFL,ALLBITS-K1      INSURE REDUCED ERROR RECOV BIT
*                                       IS OFF
         TM    JFCBLTYP,JFCNL           IS THIS AN UNLABELED TAPE
         BZ    EIN11600                 NO
         OI    DXDEBOFL,K1              YES,TURN ON RED ERROR REC BIT
         EJECT
EIN11600 EQU   *                        SKIP OPTION INIT IF CONCAT
*                                                                Y02134
         TM    DCBOFLGS,DCBOCON         TEST FOR CONCATENATION   Y02134
         BO    EIN12900                 BRANCH, CONCAT IN PROG   Y02134
*                                                                Y02134
         L     RPARC,DXXPREFX           LOAD PREFIX POINTER      Y02134
         L     RPARC,IECUPRML-IECPREFX(,RPARC) LOAD PTR TO PARMS Y02134
         USING USERPRML,RPARC           RPARC POINTS TO PARMS    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        INITIALIZE OPTION 2 FLAG                                Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP          @ZA02187
         BO    EIN11620                 BR, CANNOT BE FEOV     @ZA02187
         TM    DCBCIND2,DCBC2FEO        TEST FOR FEOV            Y02134
         BNO   EIN11610                 BRANCH NOT FEOV          Y02134
         TM    DXDCBLST,PLISTOP2        TEST FOR FEOV OPT2       Y02134
         BNZ   EIN11620                 BRANCH IF FEOV OPT2 SPEC Y02134
*                                                                Y02134
EIN11610 EQU   *                        REWIND/REREAD FROM DEB   Y02134
*                                                                Y02134
         MVZ   DXDCBLST(K1),DEBOPATB    MOVE IN OPEN OPTION 2    Y02134
         OI    DXDCBLST,LASTNTRY        SET END OF LIST          Y02134
*                                                                Y02134
EIN11620 EQU   *                        OPEN OPTION FROM DEB     Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        INITIALIZE OPTION 1 FLAG                                Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         MVN   DXDCBLST(K1),DEBOPATB    MOVE OPEN OPTION1 IN LST Y02134
*                                                                Y02134
         TM    DCBMACRF,DCBMEXCP        CHECK FOR EXCP
         BO    EIN12900                 BRANCH IF EXCP
         TM    DCBOFLGS,DCBOWRIT        TEST FOR A WRITE
         BZ    EIN12900                 BR IF NOT
*                                                                Y02134
         OI    DXDCBLST,PLISTOUT        SET TO OUTPUT            Y02134
         DROP  RPARC                                             Y02134
*                                                                Y02134
         TITLE 'IFG0551F - EOV/TOTALING SPECIAL PROCESSING'
         TM    DCBOPTCD,DCBOPTT         IS TOTAL OPTION BIT ON
         BZ    EIN12900                 NO, GO XCTL
*
*              USER TOTALING ROUTINE
*
*              THE PURPOSE OF THIS ROUTINE IS TO PROVIDE SPECIAL      *
*              PROCESSING OF THE POINTER TO THE USER TOTALING         *
*              FACILITIE'S SAVE AREA WHICH CORRESPONDS TO THE         *
*              LAST RECORD OF THE LAST BLOCK ON THE VOLUME BEING      *
*              TERMINATED.                                            *
*                                                                     *
*              THE TOTALING SAVE AREA IS DESCRIBED BY THE TOTSAVWA    *
*              DSECT AT THE END OF THIS MODULE.  THE WORK AREA IS     *
*              POINTED TO BY THE SECOND WORD OF THE ACCESS METHOD     *
*              SECTION OF THE DEB                                     *
*                                                                     *
***********************************************************************
*  NOW GET THE ADDRESS OF THE SAVE AREA FROM THE DEB                  *
***********************************************************************
*                                                                     *
         SR    R7,R7                    CLEAR THIS REGISTER
         SR    RC,RC                    CLEAR THIS REGISTER
         IC    R7,DEBNMEXT              GET NO. OF EXTENTS
         IC    RC,DEBEXSCL              GET EXTENT SCALING FACTOR
         SLL   R7,K0(RC)                MULT TO GET EXTENT SIZE
         L     RWTG,K36(RDEB,R7)        GET IMAGE SAVE AREA ADDR
         USING TOTSAVWA,RWTG            ESTABLISH TOTAL AREA BASE
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*                                                                     *
***********************************************************************
*RUCB CONTAINS THE ADDRESS OF THE IMAGE SAVE AREA
***********************************************************************
*                                                                     *
         TM    DCBCIND2,DCBC2FEO        TEST FOR FEOV CONDITION
         BO    EIN12800                 BR IF FEOV BIT ON
         TM    DCBCIND2,DCBC2CHN        TEST FOR CHAINED SCDEDLNG
         BO    EIN12500                 BR IF SPECIFIED
         EJECT
***********************************************************************
*  NEXT COUNT THE IOB'S SCHEDULED BY EOB ROUTINE BUT NOT POSTED AS
*        COMPLETE.  THIS POINTER TO THE LAST IMAGE AREA WILL HAVE TO
*        BE ADJUSTED TO POINT TO THE IMAGE AREA WHICH CORRESPONDS TO
*        THE LAST BLOCK ACTUALLY WRITTEN
***********************************************************************
         L     R7,DCBIOBA               GET THE CURRENT IOB ADDR
         L     RC,K4(R7)                GET 'ERROR' IOB
         LA    RC,K0(RC)                CLEAR HIGH-ORDER BYTE
         L     RD,K0(R7)                GET NEXT IOB IN CHAIN
         LA    RD,K0(RD)                CLEAR HIGH-ORDER BYTE
         SR    RET,RET                  CLEAR THIS REGISTER
***********************************************************************
*  NOTE - RD WILL SERVE AS A COUNTER FOR THE NUMBER OF IOB'S OUTSTANDNG
***********************************************************************
*
EIN11800 EQU   *                        SYMBOLIC ADDR
*
         LA    RET,K1(RET)              BUMP COUNT BY ONE
         L     RD,K0(RD)                GET NEXT IOB IN CHAIN
         LA    RD,K0(RD)                CLEAR HIGH-ORDER BYTE
         CR    RD,RC                    COMPARE NEXT IOB TO ERROR IOB
         BNE   EIN11800                 BR IF NOT EQUAL
         EJECT
***********************************************************************
*  NOTE - THE COUNT IN REGISTER RD WILL BE USED TO LOGICALLY BACKSPACE
*        THE EOV IMAGE AREA POINTER.
***********************************************************************
*                                                                     *
*
EIN11900 EQU   *                        SYMBOLIC ADDR
*
         L     R7,TOTCURNT              GET THE CURRENT IMAGE AREA
         TM    DCBDEVT,DCBDEVTP         TEST FOR TAPE DEV
         BZ    EIN12000                 BR IF NOT TAPE
         BCTR  RET,R0                   DECREMENT COUNT IF TAPE
         LTR   RET,RET                  CHECK IF COUNT IS 0
         BZ    EIN12300                 IF COUNT=0 CURRENT IS
*                                       CORRECT-NOT NECESS TO
*                                       BACKUP IMAGE POINTER
*
EIN12000 EQU   *                        SYMBOLIC ADDR
*                                                                     *
         L     RC,TOTSVLNG              GET THE SEG (IMAGE) LENGTH
         L     RD,TOTSTART              GET ADDR OF FIRST SEG
*                                                                     *
EIN12100 EQU   *                        ESTABLISH LAST SEGMENT
*                                                                     *
         SR    R7,RC                    POINT TO PREVIOUS SEG
         CR    R7,RD                    COMPARE TO FIRST SEG
         BNL   EIN12200                 BR IF NOT LOW
         L     R7,TOTENDAD              A LOW SO GET LAST SEG
*
EIN12200 EQU   *                        SYMBOLIC ADDR
*
         BCT   RET,EIN12100             BR ON COUNT
***********************************************************************
*  R7 NOW POINTS TO THE SAVE IMAGE AREA WHICH CORRESPONDS TO THE LAST *
*        BLOCK ACTUALLY WRITTEN AT EOV AND THIS IS TO BE STORED IN THE*
*        SAVE AREA FIRLD TOTEOVPT, AND WILL LATER BE PASSED TO THE USR*
***********************************************************************
*
EIN12300 EQU   *                        SYMBOLIC ADDR
*                                                                     *
         ST    R7,TOTEOVPT              STORE IMAGE ADDR IN CTL BLOCK
EIN12400 EQU   *                        SYMB. ADDR
         B     EIN12900                 BRANCH TO COMPUTE DXNOUNIT
         EJECT
***********************************************************************
*  THE FOLLOWING SECTION OF CODE COUNTS THE NUMBER OF                 *
*        ICB'S WHICH HAVE NOT BEEN POSTED AS COMPLETE.  THIS COUNT    *
*        IS USED TO CALCULATE THE ADDRESS OF THE SAVE IMAGE AREA      *
*        THAT CORRESPONDS TO THE LAST BLOCK WRITTEN PRIOR TO          *
*        END-OF-VOLUME.                                               *
***********************************************************************
*
EIN12500 EQU   *                        SYMBOLIC ADDR
*
         LA    RET,K1                   MAKE COUNT = 1
         L     RC,DCBIOBAD              GET IOB ADDR FROM DCB
         L     RC,K8(RC)                GET ICB ADDR
         LA    RC,K0(RC)                CLEAR HIGH ORDER BYTE
         L     R7,K0(RC)                GET NEXT ICB
*
EIN12600 EQU   *                        SYMBOLIC ADDR
*
         LA    R7,K0(R7)                CLEAR HIGH ORDER BYTE
         CR    RC,R7                    CHECK FOR FIRST ICB
         BE    EIN12700                 BR IF LOOP COMPLETE
*
         LA    RET,K1(RET)              BUMP COUNT BY ONE
         L     R7,K0(R7)                POINT TO NEXT ICB
*
         B     EIN12600                 UNCONDITIONAL BRANCH
*
EIN12700 EQU   *                        SYMBOLIC ADDR
*
         LTR   RET,RET                  TEST IF COUNT IS ZERO
         BNZ   EIN11900                 BR IF NOT ZERO
*
         L     R7,TOTCURNT              GET CURRENT IMAGE AREA
*
         B     EIN12300                 UNCONDITIONAL BRANCH
***********************************************************************
*                                                                     *
EIN12800 EQU   *                        SYMBOLIC ADDRESS              *
*                                                                     *
***********************************************************************
* SINCE IT HAS BEEN DETERMINED THAT A FEOV HAS OCCURRED THE LAST      *
*        IMAGE AREA STORED IS THE LAST WRITTEN SINCE FEOV TERMINATES  *
*        ALL I/O PRIOR TO XCTL'ING TO THIS MOD.                       *
***********************************************************************
*                                                                     *
         L     R7,TOTCURNT              POINT TO LAST IMAGE SAVED
         ST    R7,TOTEOVPT              STORE IN EOV IMAGE POINTER
         TITLE 'IFG0551F   EOV BASIC READ JFCB'
*
*              COMPUTE NUMBER OF UNITS ALLOCATED TO DATA SET IN TIOT
*              FIRST LOCATE THE DATA SET ENTRY IN THE TIOT
*
EIN12900 SR    R7,R7                    ZERO FOR IC
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         IC    R7,TIOELNGH              LENGTH OF ENTRY
         LA    RC,TIOESTTB-TIOENTRY(K0,K0)  DSP OF UCB(1) PTR IN TIOENT
         SR    R7,RC                    BYTES IN ALL POINTERS
         SRL   R7,K2                    R7 CONTAINS NO. OF UNITS ALLOC.
         STH   R7,DXNOUNIT              SAVE NO. UNITS IN WORK AREA
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         USING WTG,RWTG                 RWTG POINTS TO WTG TABLE Y02134
         TM    DCBMACRF,DCBMEXCP        DCB USING EXCP
         BO    EIN12950                 YES, BYPASS SPOOL TEST
         TM    TIOELINK,TIOTSPOL        SPOOLED DCB?             Y02120
         BZ    EIN12950                 NO,CONTINUE
         MVC   DXXIDTTR,MOD2X1F         MOVE ID TO WORK AREA     Y02134
         B     EIN12975                 BR TO CONTINUE
EIN12950 EQU   *                        IFG0551H NEXT
         MVC   DXXIDTTR,MOD1H1F         MOVE ID TO WORK AREA     Y02134
EIN12975 EQU   *                        TRANSFER CONTROL
         MVC   DXXMODNM(K6),IFG1F       SET UP XCTL NAME
         LA    R0,DXECB                 GET ECB ADDR             Y02080
         L     R1,DXXPREFX              GET POINTER TO PREFIX    Y02080
         USING IECPREFX,R1                                       Y02080
         L     R1,IECRESWA              PTR TO RESIDENT WKAREA   Y02080
         USING RWARESWA,R1                                       Y02080
         ST    R0,RWALIST               ST IN PARM               Y02080
         MVI   RWALIST,UCBMOUNT         IND END OF LIST          Y02080
         DROP  R1                                                Y02080
         L     RES,CVTPTR               LOAD POINTER TO CVT      Y02080
         L     RES,CVTDMSR-CVT(,RES)    LOAD IFG019RA PTR        Y02080
         TM    JFCBMASK+K6,JFCTRACE     CHK FOR TRACE OPTION
         BZ    EIN13300                 BR, NO
         OI    DXXPATHS+K1,UCBMOUNT     IND TRACE INIT
*                                                                Y02134
EIN13300 IECRES LOAD,BRANCH=QUEUED      GO TO NEXT LOAD          Y02134
         EJECT
*
*                   CONSTANTS
*
SPOOLM   EQU   X'08'                    DCB SPOOLED INDICATOR
EIN1347P DC    C'IDA0192P'              VSAM PROB DET RTN        XM1037
IFG1F    DC    C'IFG055'                1ST 6 CHAR OF MODULE NAME
XCTLCN1F DC    X'C37800'                MODULE
         DC    X'04000400'              ATTRIBUTES
CON40Z   DC    H'4'                     HWD CONSTANT OF 4
CON6     DC    H'6'                     HWD CONSTANT OF 6
MAXN     DC    X'019B7FFF'              MAX EXTENT NO
         EJECT
*
*              IFG0551F XCTL TABLE
XCTLTA0Z XCTLTABL ID=(MODPD1F,0P,MOD1H1F,1H,MOD2X1F,2X,MODVS7A,7A,     *
               MODVS0Y,0Y),SVC=055,BRT=YES,LENGTH=               Y02080
         EJECT
         IECDSECS CVT,TCB,DSAB,TIOT,DCB,ACB,UCB,IEZDEB,          YM1272X
               MAIN,PREFX,WTG,USERTOT,IDAPDPRM,EXPAND=YES
PURGPRM  DSECT                          PURGE PARAMETER LIST     Y02082
PURGDEB  DS    0F                       DEB TO BE PURGED         Y02082
PURGOPT  DS    C                        OPTION BITS              Y02082
         DS    AL3                      DEB POINTER              Y02082
PURGECB  DS    0F                       USE THIS FIELD FOR ECB   Y02082
         DS    C                        COMPLETION CODE          Y02082
PURGTCB  DS    AL3                      TCB POINTER (0=CURRENT)  Y02082
PURGCHN  DS    AL4                      CHAIN OF IOBS            Y02082
PURGMVM  DS    F                        4TH WORD FOR MVM         Y02082
IFG0551F CSECT                                                   Y02082
         IECEQU AOS=YES,IEZDEB=YES                               YM1272
         IDAAMB                                                  X02989
TIOTSPOL EQU   X'06'                    JESSPOOL D.S. INDICATORS Y01021
         END
