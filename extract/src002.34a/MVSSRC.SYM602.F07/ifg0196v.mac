         TITLE 'IFG0196V/OPEN - ACCESS METHOD EXECUTOR DETERMINATION'
IFG0196V CSECT
***********************************************************************
*                                                                     *
*        VS2 RELEASE 04 DELETIONS/CHANGES                             *
*0000                                                          @ZA02899
*0000330670                                                    @ZA04309
*                                                                     *
*        VS2 RELEASE 03 DELETIONS/CHANGES                             *
*0000330660,330670                                              ZA00017
*                                                                     *
* MODULE NAME = IFG0196V (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = ACCESS METHOD EXECUTOR DETERMINATION             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. STOP PARALLEL PROCESSING WITH RESIDENT ROUTINE UNTIL      *
*        RETURN FROM ACESS METHOD EXECUTORS.                          *
*                                                                     *
*        2. PERFORM ACB MERGES AND ACB EXIT PROCESSING.               *
*                                                                     *
*        3. MERGE ACB TO JFCB.                                        *
*                                                                     *
*        4. DETERMINE PROPER ACCESS METHOD EXECUTOR MODULE TO GIVE    *
*        CONTROL TO FOR THIS DCB, AND STORE ITS IDTTR IN THE WTG      *
*        TABLE ENTRY FOR THIS DCB.                                    *
*                                                                     *
*        5. COPY DCB FROM THE OPEN WORK AREA TO THE USER'S STORAGE.   *
*                                                                     *
*        6. COPY DCB FROM THE USER'S STORAGE TO THE OPEN WORK AREA    *
*                                                                     *
*        7. IF THIS IS A CHECK POINT DATA SET, ESTABLISH THE SECURITY *
*        INTERFACE INCLUDING BUILDING A SECURE DCB IN GOTTEN CORE.    *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD LABEL BEFORE ORG STATEMENT AT END        *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                  PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY, *
*                  LINK PACK AREA RESIDENT/PAGEABLE                   *
*                                                                     *
* ENTRY POINT = IFG0196V FROM:                                        *
*                 IFG0196M                                            *
*                 IFG0193A                                            *
*                 IFG0196O                                            *
*                 IFG0196U                                            *
*                 IFG0196P                                            *
*                 IFG0196T                                            *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        FROM IFG0196M:                                               *
*        IECRES LOAD,MODID=ID6M6V,BRCODE=0,BRANCH=QUEUED              *
*                                                                     *
*        FROM IFG0193A:                                               *
*        IECRES LOAD,MODID=LOAD6V3A,BRCODE=0,BRANCH=QUEUED            *
*                                                                     *
*        FROM IFG0196O:                                               *
*        MVC   WTGIDTTR,ID6O6V                                        *
*        LA    RET,K8                                                 *
*        IECRES LOAD,BRANCH=QUEUED                                    *
*                                                                     *
*        FROM IFG0196U:                                               *
*        LA    RET,K8                                                 *
*        LA    RF,ID6U6V                                              *
*        IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED            *
*                                                                     *
*        FROM IFG0196T:                                               *
*        XR    RET,RET                                                *
*        IC    RET,DXRETCOD                                           *
*        IECRES LOAD,MODID=DXRETMOD,BRCODE=(RET)                      *
*        (WITH DXRETCOD AND DXRETMOD HAVING BEEN SET IN IFG0196V.)    *
*                                                                     *
* INPUT = REGISTERS AND WORK AREA                                     *
*                                                                     *
* OUTPUT = REGISTERS, WORK AREA, UPDATED DCB                          *
*                                                                     *
* EXIT-NORMAL = IGG0191A EXCP, BSAM, QSAM, TSO DUMMY, BPAM            *
*               IGG0192A ISAM                                         *
*               IGG0193A BDAM                                         *
*               IGG0193M BTAM                                         *
*               IGG0193P GET/PUT DSORG = MQ                           *
*               IGG0193Y GRAPHICS                                     *
*               IGG0191C SAM NULL DUMMY                               *
*               IGG01935 TCAM LINE GROUP                              *
*               IGG01930 TCAM MESSAGE QUEUE                           *
*               IGG01946 TCAM DUMMY PS                                *
*               IGG0198B TCAM 3705                                    *
*               IGG0199F SPOOLED DCB EXECUTOR                         *
*               IGG0193K SPOOL ACB EXECUTOR                           *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0190P PROBLEM DETERMINATION                               *
*           913-28 ABEND - IMPROPER DATA SET ORG                      *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG019RA                                              *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCK = ACB, JFCB, DCB                                   *
*                                                                     *
* TABLES = OPEN, CLOSE, OR EOV WORK AREA                              *
*                                                                     *
* MACROS = IECRES, MODESET, IECDSECS                                  *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TCB,RB,TIOT,UCB,DCB,ACB,MAIN,PREFX,WTG,    Y02080*
               DSAB,                                             Y02083*
               RRPL                                              Y02144
ACBRCFM  EQU   X'7F'                    RECFM MASK
TIOTSPOL EQU   X'06'
TIOTSPIN EQU   X'04'
EABD239  EQU   239                      913-28 INTERNAL ABEND CD Y02083
         IECEQU AOS=YES
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING UCB,RUCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING TIOENTRY,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING RRPLIST,RC                                        Y02144
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
***********************************************************************
*
*  PARALLEL PROCESSING OF DCB'S BY THE RESIDENT ROUTINE STOPS HERE
*  SO THAT THE ACCESS METHOD EXECUTORS CAN WORK AS THEY HAVE WITHOUT
*  REQUIRING A CODING CHANGE.
*
***********************************************************************
*
         USING WTG,RWTG                 DEFINE BASE TO XCTL/WTG TABLE
         L     RPAR,WTGPREFX            GET PTR TO WTG PREFIX    Y02080
         USING IECPREFX,RPAR                                     Y02080
         L     RC,IECRRPRM              GET RRPLIST PTR          Y02144
         L     RPAR,IECUPRML            LOAD PTR TO DCB PARM LST Y02080
         DROP  RPAR                                              Y02080
         LR    RPARC,RPAR               CURRENT DCB PARM ADDR
         USING USERPRML,RPARC                                    Y02080
*
         LA    RWTGC,WTGENTRY           CALC ADDR OF FIRST WTG ENTRY
         USING WTGENTRY,RWTGC           DEFINE BASE TO WTG ENTRY
*
         TM    RRFLAGS1,RRFAMEXG        FR AM EXECS VIA PROB DET Y02144
         BO    OMG91800                 BR YES, GO TO EXECS      Y02144
*                                                                Y02144
OMG90400 EQU   *                        PROCESS DCB
         L     RCORE,WTGCORE-K1         LOAD ADDR DCB WORK AREA
         LA    RCORE,0(RCORE)           TEST IF THE DCB IS NOT
         LTR   RCORE,RCORE              BEING OPENED
         BZ    OMG91200                 BR IF NOT BEING OPENED
*
         L     RDCB,DXUDCBAD            LOAD USER DCB ADDR     @ZA02899
         LA    RDCB,IHADCB              CLEAR HI BYTE          @ZA02899
         ST    RDCB,DXUDCBAD            SAVE USER DCB PTR      @ZA02899
*
         L     RDCB,0(,RPARC)           LOAD CURRENT DCB ADDR
         TM    DCBOFLGS,DCBOLOCK+DCBOBUSY CHK LOCK AND OPEN BITS YM1342
         BNO   OMG91200                 BR IF NOT STILL OPENING  YM1342
         L     RTIOT,DXREG9             LOAD CURRENT TIOT DD ADDR
*
***********************************************************************
*                                                                     *
* TEST FOR ACB
*                                                                     *
***********************************************************************
*
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP
         BO    OMG90580                 YES, CANNOT BE AN ACB
*
         TM    DCBDSORG+K1,ACBDORGA     IS THIS AN ACB
         BZ    OMG90410                 NO
         CLI   ACBAMETH-IFGACB(RDCB),ACBVTAM IS THIS VTAM ACB?   YM3011
         BE    OMG91200                 YES, GO TO NEXT PARM     Y02004
*
* ASSUME SPOOLED SYSIN OR SYSOUT ACB
*
         B     OMG90420                 MEGE ACB
*
***********************************************************************
*                                                                     *
* TEST FOR SPOOLED SYSIN OR SYSOUT DCB
*                                                                     *
***********************************************************************
*
OMG90410 EQU   *                        TEST FOR SPOOLED SYSIN/SYSOUT
         TM    TIOELINK,TIOTSPOL        IS THIS SPOOLED SYIN OR SYSOUT
         BZ    OMG90580                 NO
*
         LA    RF,OMG9990X              POINT TO IDTTR OF TRANSLATE
         B     OMG91400                 MOVE IDDTR INTO CURR WTG ENTRY
*
***********************************************************************
*                                                                     *
* SPOOLED ACB SET UP
* BRANCH AND LINK TO ACB MERGE ROUTINE
*                                                                     *
***********************************************************************
*
OMG90420 EQU   *                        SPOOLED ACB SET UP
         BAL   RET,OMG90450             EXECUTE MERGES AND ACB EXIT
         USING IFGACB,RACB
*
* SET UP LRECL WITH DEFAULT VALUE IF ZERO
*
         CLC   ACBLRECL(K2),ZERO0000    IS LRECL ZERO            X02050
         BNE   OMG90430                 NO
*
         CLC   ACBBLKSZ(K2),ZERO0000    IS BLKSIZE ZERO        @ZA04309
         BE    OMG90422                 YES,USE FIXED DEFAULTS @ZA04309
         MVC   ACBLRECL(K2),ACBBLKSZ    MOVE BLKSIZE TO LRECL  @ZA04309
         B     OMG90425                 CONTINUE               @ZA04309
*                                                              @ZA04309
OMG90422 MVI   ACBLRECL+K1,ACBOUTLN     PUT IN OUTPUT DEFAULT  @ZA04309
*
         TM    DXDCBLST-USERPRML(RPARC),PLISTOIN OUTPUT & OUTIN ZA00017
         BO    OMG90425                 BRANCH IF OUTPUT/OUTIN  ZA00017
*
         MVI   ACBLRECL+K1,ACBINLN      PUT IN DEFAULT FOR INPUT X02050
*
OMG90425 EQU   *                        MERGE TO JFCB           ZA00017
         OI    JFCBMASK+K3,JFCBLREC     LRECL SWITCH FOR CLOSE  ZA00017
         MVC   JFCLRECL(K2),ACBLRECL    MERGE TO JFCB           ZA00017
*
OMG90430 EQU   *                        ACBSPOOL EXECUTOR
         LA    RF,OMG0000X              POINT TO SPOOL EXECUTOR TTR
         B     OMG91400                 MOVE IDTTR INTO CURR WTG ENTRY
*
***********************************************************************
*                                                                     *
* ACB MERGE ROUTINE
*                                                                     *
***********************************************************************
*
OMG90450 EQU   *                        ACB MERGE ROUTINE
         LR    RB,RET                   SAVE RETURN ADDRESS
         CLC   ACBLRECL(K2),ZERO0000    LRECL SPECIFIED IN ACB   X02050
         BNE   OMG90470                 YES, TEST FOR BLOCKSIZE
         MVC   ACBLRECL(K2),JFCLRECL    MERGE JFCB LRECL TO ACB  X02050
         OI    JFCBMASK+K3,JFCBLREC     SET LRECL SWITCH ON FOR MERGE
OMG90470 EQU   *                        TEST FOR BLOCKSIZE
         CLC   ACBBLKSZ(K2),ZERO0000    BLKSIZE SPECIFIED IN ACB X02050
         BNE   OMG90480                 YES, DO NOT MERGE
         MVC   ACBBLKSZ(K2),JFCBLKSI    MOVE JFCB BLKSIZE TO ACB X02050
         OI    JFCBMASK+K2,JFCBBKSZ     SET BLKSIZE SWITCH ON FOR MERGE
OMG90480 EQU   *                        DO NOT MERGE, BLKSIZE SPECIFIED
         CLC   ACBCCTYP(K1),ZERO0000    ARE CONTROL CHARACTERS SPECIF
         BNE   OMG90490                 YES, DO NOT MERGE
         MVC   ACBCCTYP(K1),JFCRECFM    MERGE CONTROL CHARACTERS CODE
         OI    JFCBMASK+K2,JFCBRCFM     SET RECFM SWITCH ON FOR MERGE
OMG90490 EQU   *                        CONTROL CHARACTERS SPECIFIED
         TM    ACBRECFM,ACBRCFM         IS RECORD FORMAT SPECIFIED
         BM    OMG90495                 YES  DO NOT MERGE
         ICM   RF,8,JFCRECFM            PICKUP RECFM FIELD
         SRL   RF,K1                    MAP JFCB RECFM TO ACB RECFM
         ICM   R1,8,ACBRECFM            SAVE HIGH ORDER BIT
         OR    RF,R1                    IF ON
         STCM  RF,8,ACBRECFM            MERGE JFCB RECFM WITH ACB
         OI    JFCBMASK+K2,JFCBRCFM     SET RECFM SWITCH ON FOR MERGE
*
* GET POINTER TO USER EXIT LIST
*
OMG90495 EQU   *                        GET EXIT LIST POINTER
         L     RF,ACBUEL                GET USER EXIT LIST PTR   X02050
         LTR   RF,RF                    IS THERE AN EXIT LIST
         BZ    OMG90520                 NO, MERGE ACB TO DCB
*
* CHECK EXIT LIST FOR ACB EXIT ROUTINE
*
         USING IFGEXLST,RF                                       X02050
         MODESET KEYADDR=DXUKEY,WORKREG=14 TO LOOK AT EXIT LIST  Y02082
         CLI   EXLLEN+K1,EXLOPNL        ACB USER EXIT SPECIFIED  X02050
         BL    OMG90520                 NO, BYPASS USER EXIT     X02050
         TM    EXLOPNF,EXLACTV          ACB EXIT ACTIVE          X02050
         BZ    OMG90520                 NO, BYPASS USER EXIT     X02050
*
* SET UP TO TAKE USER ACB EXIT
*
         L     RET,EXLOPNP              GET ACB USER EXIT ADDR   X02050
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGT KEY   Y02082
         NI    ACBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT FOR EXIT    Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         IECRES UEXIT,EXITAD=(RET),REG1=DXUDCBAD,                      *
               STM=(2,13,WTGPREFX)                               Y02082
         OI    ACBOFLGS,DCBOLOCK        RESET ACB LOCK BIT       Y02082
*                                                                Y02082
* COPY THE DCB FROM THE USER'S STORAGE TO OUR WORK AREA          Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    ACBOFLGS,DCBOLOCK        SET LOCK BIT             Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
         L     RDCB,DXPDCBAD            POINT TO COPIED DCB      Y02082
*
* MERGE ACB TO JFCB
*
OMG90520 EQU   *                        ACB TO JFCB MERGE
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
         TM    JFCBTSDM,K2              IS ACB TO JFCB MERGE OK
         BO    OMG90540                 NO
         TM    0(RPARC),PARMININ        IS IT INPUT OR INOUT
         BZ    OMG90550                 YES
*
         MVC   JFCLRECL(K2),ACBLRECL    MERGE ACB LRECL TO JFCB  X02050
         MVC   JFCBLKSI(K2),ACBBLKSZ    MOVE ACB BLKSIZE TO JFCB X02050
OMG90530 EQU   *                        MERGE RECFM
         IC    RF,ACBRECFM              POCKUP ACB RECFM FIELD
         SLL   RF,K1                    MAP ACB RECFM TO JFCB RECFM
         STC   RF,JFCRECFM              MERGE ACB RECFM TO JFCB RECFM
         OC    JFCRECFM,ACBCCTYP        MERGE ACB CCTYPE TO JFCB RECFM
*
         OI    JFCBMASK+K4,JFCBMOD      TURN ON JFCB MODIFIED SWITCH
*
* RETURN TO CALLER
*
OMG90540 EQU   *                        RETURN TO CALLER
         LR    RET,RB                   RESTORE RETURN ADDRESS
         BR    RET                      RETURN TO CALLER
*
*
*
OMG90550 EQU   *                        YES IS INPUT OR INOUT
         CLC   JFCLRECL(K2),ZERO0000    IS JFCB LRECL ZERO
         BNE   OMG90560                 NO TEST BLKSIZE
         MVC   JFCLRECL(K2),ACBLRECL    MERGE ACB LRECL TO JFCB  X02050
         OI    JFCBMASK+K4,JFCBMOD      TURN ON JFCB MODIFIED SWITCH
*
OMG90560 EQU   *                        TEST JFCB BLKSIZE
         CLC   JFCBLKSI(K2),ZERO0000    IS JFCB BLKSIZE ZERO
         BNE   OMG90570                 NO TEST RECFM FOR CONTROL CHAR
         MVC   JFCBLKSI(K2),ACBBLKSZ    MOVE ACB BLKSIZE TO JFCB X02050
         OI    JFCBMASK+K4,JFCBMOD      TURN ON JFCB MODIFIED SWITCH
OMG90570 EQU   *                        TEST RECFM FOR CONTROL CHAR
         CLC   JFCRECFM,ZERO0000        IS JFCB RECFM ZERO
         BE    OMG90530                 YES MERGE RECFM
         BNE   OMG90540                 NO  RETURN
OMG90580 EQU   *                        VSAM OR EXCP, NOT SPOOLED
         USING IHADCB,RDCB
*
***********************************************************************
*                                                                     *
*  DETERMINE EXECUTOR MODULE TO PROCESS THIS DCB AND STORE ITS ID TTR
*  IN THE WTG TABLE ENTRY FOR THIS DCB.
*                                                                     *
***********************************************************************
*
         L     RTIOT,DXREG9             LOAD CURRENT TIOT DD ADDR
*
         LA    RF,OMG9740X              POINT TO EXCP EXECUTOR IDTTR
         TM    DCBMACRF,DCBMEXCP        TEST IF EXCP DCB
         BO    OMG91400                 BR IF YES
*
         TM    DCBDSORG,DCBORGPS        TEST IF DSORG=PS DATA SET
         BZ    OMG90800                 BR IF NO
*
OMG90600 EQU   *                        DSORG NOT MQ
         LA    RF,OMG9740X              POINT TO PS BSAM/QSAM IDTTR
*
         TM    JFCBMASK+K4,JFCMNULL     TEST IF DUMMY DATA SET
         BZ    OMG91400                 BR IF NO, ORDINARY PS
*
         LA    RF,OMG9960X              POINT TO TCAM DUMMY PS IDTTR
         TM    TIOELINK,TIOEQNAM        TEST IF TCAM DUMMY
         BO    OMG91400                 BR IF YES
*
         LA    RF,OMG9740X              POINT TO TSO DUMMY PS IDTTR
         TM    TIOELINK,TIOTTERM        TEST IF TSO DUMMY PS
         BO    OMG91400                 BR IF YES
*
         LA    RF,OMG9900X              POINT TO BSAM/QSAM DUMMY PS
         B     OMG91400                 BR TO SET UP ORDINARY PS DUMMY
*
OMG90800 EQU   *                        DSORG NOT PS
         LA    RF,OMG9740X              POINT TO BPAM EXECUTOR IDTTR
         TM    DCBDSORG,DCBORGPO        TEST IF DSORG=PO
         BO    OMG91400                 BR IF YES
*
         LA    RF,OMG9760X              POINT TO BISAM/QISAM IDTTR
         TM    DCBDSORG,DCBORGIS        TEST IF DSORG=IS
         BO    OMG91400                 BR IF YES
*
         LA    RF,OMG9780X              POINT TO BDAM EXECUTOR IDTTR
         TM    DCBDSORG,DCBORGDA        TEST IF DSORG=DA
         BO    OMG91400                 BR IF YES
*
         LA    RF,OMG9880X              POINT TO GRAPHICS IDTTR
         TM    DCBDSORG+K1,DCBORGGR     TEST IF DSORG=GS
         BO    OMG91400                 BR IF YES
*
         TM    DCBDSORG,DCBORGCX        TEST IF DSORG=CX
         BZ    OMG91000                 BR IF NO
*
*
*        THE HIGH ORDER BIT OF DXREG1 MUST BE ZERO WHEN CONTROL IS
*        TRANSFERRED TO THE BTAM EXECUTORS.
*
         MVI   DXREG1,K0                ZERO BIT FOR BTAM        XM5598
*                                       EXECUTOR
         LA    RF,OMG9820X              POINT TO BTAM EXECUTOR IDTTR
         B     OMG91400                 BR TO SET UP BTAM IDTTR
*
OMG91000 EQU   *                        DSORG NOT CX
         LA    RF,OMG9920X              POINT TO TCAM LINE GROUP IDTTR
         TM    DCBDSORG+K1,DCBORGTX     TEST IF DSORG=TX
         BO    OMG91400                 BR IF YES
*
         LA    RF,OMG9940X              POINT TO TCAM MESSAGE QUEUE
         TM    DCBDSORG+K1,DCBORGTQ     TEST IF DSORG=TQ
         BO    OMG91400                 BR IF YES
*
         LA    RF,ID6V8B                POINT TO TCAM 3705 EXEC  S22024
         TM    DCBDSORG+K1,DCBDSGTR     TEST IF DSORG = TR       S22024
         BO    OMG91400                 YES, SET UP 3705 EXEC    S22024
*
         TM    DCBDSORG,DCBORGMQ        TEST IF DSORG=MQ
         BZ    OMG90600                 BR IF NO, DEFAULT TO PS  M1158
         LA    RF,OMG9960X              PT TO TCAM DUMMY IDTTR   M1158
         B     OMG91400                 BR TO SET IDTTR          M1158
*
OMG91200 EQU   *                        NOT BEING OPENED
*                                       CLEAR MODULE ID SO THAT THE
         XC    WTGIDTTR,WTGIDTTR        EXECTORS WILL NOT PROCESS DCB
         B     OMG91600                 BR TO ADVANCE TO NEXT DCB
*
***********************************************************************
*
*  MOVE ACCESS METHOD ID TTR INTO CURRENT DCB'S WTG TABLE ENTRY
*                                                                     *
***********************************************************************
*
OMG91400 EQU   *
         MVC   WTGIDTTR,0(RF)           MOVE IDTTR INTO WTG TABLE
*                                       ZERO DCB ADDR IN XCTL PARM LIST
         XC    DXCCW12+K4(K4),DXCCW12+K4  USED BY A.M.E. TO XCTL
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                     *
***********************************************************************
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*
***********************************************************************
*              IF THIS IS A CHECK POINT DATA SET ESTABLISH THE        *
*              SECURITY INTERFACE.                                    *
***********************************************************************
         L     RD,DXDSAB                DSAB ADR                 Y02083
         USING DSAB,RD                                           Y02083
         TM    DSABFLG4,DSABCKVL        SECURE CHK PT VOL REF    Y02083
         BO    OMG91420                 YES, SEE IF S/I NEEDED   YM5932
         MODESET EXTKEY=SCHED           ASSUME DSAB KEY          YM5932
         NI    DSABFLG4,X'FF'-DSABCKSI  RESET RESIDUAL S/I FLAG  YM5932
         MODESET EXTKEY=DATAMGT         RESUME D/M KEY           YM5932
         B     OMG91600                 CONTINUE NON-S/I OPEN    YM5932
OMG91420 EQU   *                        TEST FOR NEEDED S/I      YM5932
         TM    DSABFLG4,DSABCKSI        SECURITY INTERFACE EST   Y02083
         BO    OMG91500                 YES BYPASS AUTHOR. TEST  Y02083
         DROP  RD                                                Y02083
         TESTAUTH FCTN=1,KEY=YES,STATE=YES                       YM6538
         LTR   RF,RF                    USER AUTHORIZED          Y02083
         BZ    OMG91600                 YES CONTINE NORMAL PROC  Y02083
OMG91500 EQU   *                        TEST FOR PROPER DSORG    Y02083
***********************************************************************
*              TEST FOR PROPER DATA SET ORGANIZATION                  *
***********************************************************************
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP DCB        Y02083
         BO    OMG91505                 YES, ABEND               Y02083
         TM    DCBDSORG,DCBORGPS        DSORG=PS                 Y02083
         BO    OMG91510                 YES BUILD SECURITY INT   Y02083
         TM    DCBDSORG,DCBORGPO        DSORG=PO                 Y02083
         BO    OMG91510                 YES BUILD SECURITY INT   Y02083
***********************************************************************
*              IMPROPER DATA SET ORG ABEND 913-28                     *
***********************************************************************
OMG91505 EQU   *                        ISSUE 913-28 ABEND       Y02083
         LA    R0,EABD239               LOAD INTERNAL ABEND CDE  Y02083
         MVC   DXCALLID,OMGDUMMY        SET UP IFG019XX          Y02083
         IECRES LOAD,MODID=ID6V0P,BRANCH=DIRECT,PREFIX=WTGPREFX  Y02083
***********************************************************************
*              GET STORAGE FOR PROTECTED DCB (SECURE INTERFACE)       *
***********************************************************************
OMG91510 EQU   *                        GET CORE FOR PROT'D DCB  Y02083
         TM    DCBMACRF,DCBMREAD        IS IT BSAM READ          YM3806
         BO    OMG91515                 YES, CONTINUE            YM3806
         TM    DCBMACRF+K1,DCBMWRIT     IS IT BSAM WRITE         YM3806
         BNO   OMG91505                 NOT BSAM, ABEND          YM3806
OMG91515 EQU   *                        BUILD SECURITY INTERFACE YM3806
         XC    DCBEXLSA,DCBEXLSA        ZERO EXIT LIST, CHKPT SI YM3863
         LH    RD,DXUDCBPL              COMPUTE GETMAIN SIZE     Y02083
         AH    RD,DXUDCBML              PREFIX + MOVED DCB       Y02083
         LA    RD,K4(RD)                + 4 BYTES FOR POINTER    Y02083
         LA    RD,L'CKSITEXT(RD)        + LENGTH OF EXPLANATORY  YM5766X
                                        TEXT PRECEDING THE DCB   YM5766
         IECRES GET,LV=(RD),SP=252,KEY=0,ID=SCHK,                Y02083*
               PREFIX=NO,STM=(2,14,WTGPREFX)                     YM3947
***********************************************************************
*              BUILD SECURE DCB IN GOTTEN STORAGE                     *
***********************************************************************
         MVC   K0(L'CKSITEXT,R1),CKSITEXT  MOVE IN TEXT          YM5766
         LA    R1,L'CKSITEXT(R1)        INCREMENT PAST THIS TEXT YM5766
         STC   RD,K0(,R1)               SAVE GETMAIN LENGTH      YM7828
         MVC   K1(K3,R1),DXUDCBAD+K1    SAVE PTR TO USERS DCB    YM7828
         LA    R1,K4(R1)                INCR PAST PTR            Y02083
         ST    R1,DXUDCBAD              SI DCB BECOMES USERS DCB Y02083
         AH    R1,DXUDCBPL              COMPUTE FIRST MOVE LOC   Y02083
         L     RF,DXPDCBAD              ADR OF DCB TO COPY       Y02083
         AH    RF,DXUDCBPL              STEP TO FIRST MOVE LOC   Y02083
         LH    RD,DXUDCBML              NUMBER OF BYTES TO MOVE  Y02083
         BCTR  RD,R0                    DECREMENT FOR MOVE       YM2874
         EX    RD,OMG91520              EXECUTE DCB MOVE         Y02083
         L     RD,DXDSAB                LOAD DSAB ADDRESS        YM5363
         MODESET EXTKEY=SCHED           SWITCH TO SCHEDULER KEY  YM5363
         OI    DSABFLG4-DSAB(RD),DSABCKSI SET SECURITY INTERFACE YM5363X
                                        ESTABLISHED BIT IN DSAB  YM5363
         MODESET EXTKEY=DATAMGT         GET INTO DATA MGT KEY    Y02083
         MVI   DXUKEY,K0                SET USER KEY TO ZERO     Y02083
         B     OMG91600                 CONTINUE NORMAL PROC     Y02083
*
OMG91520 EQU   *                        MOVE COPY OF USERS DCB   Y02083
         MVC   K0(K0,R1),K0(RF)         MOVE COPY OF USERS DCB   Y02083
OMG91600 EQU   *
         LA    RWTGC,L'WTGENTRY(RWTGC)  ADVANCE TO NEXT WTG ENTRY
         TM    0(RPARC),LASTNTRY        TEST IF LAST DCB IN PARM LIST
         LA    RPARC,K4(RPARC)          ADVANCE TO NEXT DCB IN PARM
         BZ    OMG90400                 BR IF NO TO PROCESS NEXT DCB
*
***********************************************************************
*
*  SET UP ID TTR OF LAST LOAD FOR USE BY ACCESS METHOD EXECUTORS
*  IN TERMINATING THEIR EXECUTION AND RETURNING TO THE OPEN MODULES.
*  IT IS STORED IN THE VERY LAST WTG ENTRY, WHICH IS ONE
*  MORE ENTRY THAN DCB'S IN THE OPEN PARAMETER LIST.
*  NOTE THAT THE ID MUST BE 0S, SINCE THE EXECUTORS TEST FOR
*  THIS RATHER THAN TEST THE X'80' BIT IN THE DCB PARAMETER LIST.
*
***********************************************************************
*
         MVC   WTGIDTTR,OMG9720X        ID FOR OPEN FINAL LOAD
*
*  XCTL TO OPEN EXECUTOR.
*
*  EVERY DCB BEING OPENED GOES TO AN EXECUTOR.  HOWEVER, DCBS
*  THAT ARE NOT OPENABLE HAVE A ZERO WTG TABLE ENTRY.
*
         LR    RPARC,RPAR               POINT TO START OF DCB LIST
         LA    RWTGC,WTGENTRY-WTG(,RWTG)  POINT TO START OF WTG ENTRIES
*
OMG91800 EQU   *                        CHECK WTG ENTRY
         CLI   WTGIDTTR,K0              IS THIS ENTRY ZERO
         BNE   OMG92000                 BR IF NO TO XCTL TO IT
         LA    RWTGC,L'WTGENTRY(RWTGC)  ADVANCE TO NEXT WTG ENTRY
         LA    RPARC,K4(RPARC)          ADVANCE TO NEXT DCB IN LIST
         B     OMG91800                 BR TO CHECK NEXT WTG ENTRY
*
OMG92000 EQU   *                        ENTRY NOT ZERO
         MVI   WTGMODNM+K1,C'G'         CHANGE XCTL NAME TO IGG019XX
         MVC   WTGMODID,WTGIDTTR        ID OF EXECUTOR TO XCTL TABLE
         MVC   WTGMODEP+K1(K3),WTGIDTTR+K2 TTR OF NEXT MODULE    Y02080
         MVC   WTGATTRB(K7),WTGCONSI    SET PSEUDO BLDL LIST FOR
*                                       XCTLING BY EXECUTORS
*                                                                YM1342
*  NOTE: IT IS POSSIBLE TO BE AT THIS POINT WITH THE WTGMODNM    YM1342
*        FIELD CONTAINING THE NAME IGG0190S, INDICATING THAT     YM1342
*        THE ONLY NON-ZERO ID LEFT IN A WTG ENTRY WAS '0S' IN    YM1342
*        THE LAST WTG ENTRY. CONTROL WILL BE GIVEN TO IGG0190S   YM1342
*        (AN ALIAS FOR IFG0196W, NOT AN EXECUTOR) FOR SETTING    YM1342
*        THE CORRECT ENTRY OFFSET TO IFG0198N.                   YM1342
*                                                                Y02082
*                                       DEBUG SERVICE AID - MODULE
         LM    R0,R1,WTGMODNM           NAME IN SVC TRACE TABLE REGS
         L     RC,WTGPREFX              GET BASE PREFIX PTR      YM1342
         L     RC,IECRRPRM-IECPREFX(RC) GET RRPLIST PTR          YM1342
         OI    RRFLAGS1,RRFAMEXG        SHOW GOING TO A.M. EXECS Y02144
*
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT               Y02080
*                                       XCTL TO EXECUTOR MODULE  Y02080
*
         DROP  RWTG,RWTGC
*
***********************************************************************
*
*        CONSTANTS
*
WTGCONSI DC    X'C379'                  MODULE ATTRIBUTES
         DC    X'000400'                MODULE SIZE
         DC    X'0400'                  TEXT LENGTH
CKSITEXT DC    CL24'CHECKPOINT PROTECTED DCB'  EXPLANATORY TEXT  YM5766
ZERO0000 DC    F'0'                     ZERO CONSTANT
*
*
OMG9700X XCTLTABL ID=(OMGDUMMY,6V,ID6V0P,0P,,FFFF,OMG9740X,1A,   Y02080X
               OMG9760X,2A,OMG9780X,3A,OMG9820X,3M,OMG9880X,3Y,  Y02080X
               OMG9920X,35,OMG9940X,30,OMG9960X,46,OMG9900X,1C,  Y02080X
               OMG9990X,9F,OMG0000X,3K,OMG9720X,0S,ID6V8B,8B),   Y02080X
               BRT=YES,LENGTH=                                   Y02080
         EJECT                                                   YM5363
         IFGEXLST                                                X02050
         SPACE 2                                                 YM5363
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
*
         END
