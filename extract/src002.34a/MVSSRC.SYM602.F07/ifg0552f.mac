         TITLE 'IFG0552F EOV TAPE OUT HEADER 2/USER LABEL PREPARATION'
         COPY  LCGASMSW
IFG0552F CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 037 DELETIONS/CHANGES                          *
*0000                                                          @ZA02850
*240999-241666,560500,560600                                   @ZA02210
*0000                                                          @ZA08326
*0000                                                          @ZA13576
*0000234000                                                    @ZA14707
*0000                                                          @ZA19724
*C240999,241432,241656-241750                                  @ZA26229
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0552F (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OUTPUT TAPE - WRITE HEADER LABEL 2, USER LABELS  *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        ENTRY ONE                                                    *
*        1) WAIT FOR I/O TO COMPLETE INITIATED IN PREVIOUS MODULE.    *
*        2) IF I/O ERROR, A NEW VOLUME WILL BE REQUESTED BY           *
*        TRANSFERRING CONTROL TO IFG0552N, BRANCH CODE = 0.           *
*        3) CONSTRUCT HEADER LABEL 2 USING INFORMATION FROM THE JFCB  *
*        AND TIOT. IF ASCII SPECIFIED, TRANSLATE THE LABEL BEFORE     *
*        WRITING.                                                     *
*        4) WRITE HEADER LABEL 2. IF I/O ERROR OCCURS, REQUEST A NEW  *
*        VOLUME AS IN 2) ABOVE.                                       *
*        5) IF USER LABELS ARE SPECIFIED, PROCESS THEM.               *
*        6) WRITE TAPE MARK AFTER HEADER LABEL 2 (OR USER LABELS).    *
*        7) ISSUE TAPE ATTRIBUTE MESSAGE BY TRANSFERRING CONTROL TO   *
*        IFG0554J, BRANCH CODE = 48. RETURN TO THIS MODULE WITH A     *
*        RETURN BRANCH CODE OF 4.                                     *
*        ENTRY TWO                                                    *
*        8) IF THE ACCESS METHOD EXECUTOR IS NEEDED, TRANSFER CONTROL *
*        TO IFG0551L, BRANCH CODE = 0. OTHERWISE, COPY THE DCB FROM   *
*        THE WORK AREA TO CALLER'S STORAGE, FREE THE EOV WORK AREA,   *
*        AND RETURN TO THE CALLER OF EOV.                             *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0552F                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0551L - ACCESS METHOD MODULE, BRANCH CODE = 0             *
*        IFG0554J - ISSUE TAPE ATTRIBUTE MSG, BRANCH CODE = 48        *
*           RETURN TO IFG0552F, BRANCH CODE = 4                       *
*        IFG0552N - I/O ERROR-ASK FOR NEW VOLUME, BRANCH CODE=0       *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        DSAB                                                         *
*        JFCB                                                         *
*        PSA                                                          *
*        RB                                                           *
*        TCB                                                          *
*        UCB                                                          *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        IECRES LOAD                                                  *
*        IECRES GET                                                   *
*        IECRES FREE                                                  *
*        IECRES INIT                                                  *
*        IECRES UEXIT                                                 *
*        IECRES EXIT                                                  *
*        IECRES WAIT                                                  *
*        EXCP                                                         *
*        XLATE                                                        *
*        SETLOCK                                                      *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
CHARC    EQU   C'C'                     CHARACTER C              Y02083
EABD144  EQU   144                      I/O ERROR WRITING LBL  @ZA02850
         SPACE 1
*                   ADDRESSABILITY
         SPACE 1
         BALR  RBASE,0                  ESTABLISH BASE
         USING *,RBASE
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING DEBBASIC,RDEB                                     YM1272
         USING IHADCB,RDCB
         USING SRT,RUCB
         SPACE 1
*                                                                Y02134
         B     ETO20300(RET)            BR TO INDICATED FUNCTION Y02134
*                                                                Y02134
ETO20300 EQU   *                        BRANCH TABLE             Y02134
*                                                                Y02134
         B     ETO20400                 BRANCH IF SL/AL          Y02134
         B     ETO24300                 BRANCH FOR NL/NSL/BLP    Y02134
*                                                                Y02134
         EJECT
*                                                                Y02134
ETO20400 EQU   *                        WAIT FOR HDR1            Y02134
*                                                                Y02134
         BAL   RC,ETO22200              GO WAIT FOR HDR1         YM3927
         BNO   ETO24000                 BR IF I/O ERROR
*                   PREPARE HEADER LABEL 2
         SPACE 1
         MVI   FL1NO,CHAR2              SET FILE LABEL IDENTIFIER TO 2
         MVI   FL2TRTCH,BLANK           SET PART OF LABEL TO
         MVC   FL2TRTCH+K1(K45),FL2TRTCH  BLANKS - 47 CHARACTERS
         SPACE 1
*                  BLOCKING ATTRIBUTE
         SPACE 1
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,JFCRECFM              PICK UP RECORD FORMAT FROM THE
         SRL   R7,K3                    BITS 0,1 CONTAIN BLK ATTRIBUTE
         STC   R7,DXLBL+K38             ZERO ALL BUT BITS 0,1 TO
         NI    DXLBL+K38,K3             PREPARE FOR TRANSLATE
         TR    DXLBL+K38(K1),ABLKA0W    TRANSLATE TO S, B, R OR BLANK
*
*                  RECORD FORMAT
*
         TM    JFCRECFM,JFCRFO          TEST FOR RECFM = D
         BZ    ETO20500                 NO, GET RECORD FORMAT
         MVI   FL2RECFM,DCBRECUN+DCBRECCA  SET RECFM = D IN LABEL
         B     ETO20600                 GO GET BLOCK SIZE
ETO20500 EQU   *                        GET RECORD FORMAT
         SRL   R7,K3                    BITS 0,1 CONTAIN RECORD FORMAT
         STC   R7,FL2RECFM              F = BIT 0  V = BIT 1  U = BITS
         TR    FL2RECFM,ARECFM0W        TRANSLATE TO V,F OR U
         SPACE 1
ETO20600 EQU   *                        GET BLOCK SIZE
         L     R7,DXDSAB                ADR OF DSAB              Y02083
         USING DSAB,R7                                           Y02083
         TM    DSABFLG4,DSABCKDS        DSAB IND A CHECK PT DS   Y02083
         BNO   ETO20610                 NO   CONTINUE            Y02083
         MVI   FL2DSIND,CHARC           PUT CHK PT CHAR IN LABEL Y02083
         DROP  R7                                                Y02083
ETO20610 EQU   *                        INSTR MUST FOLLOW        Y02083
*                             BUFFER OFFSET
         SPACE 1
         LH    R7,JFCBLKSI              PICK UP BLOCK LENGTH
         CVD   R7,DXCCW2                CONVERT BLOCK LENGTH TO DECIMAL
         UNPK  FL2BLKL,DXCCW2           BLOCK LENGTH IN EBCDIC TO LABEL
         OI    FL2BLKL+K4,ZONEOF        RESET SIGN BITS
         LH    R7,JFCLRECL              PICK UP LOGICAL RECORD LENGTH
         CH    R7,AGRTR30W              IS LRECL INDIC GRTR 32K
         BE    ETO20700                 BR TO SET LABEL TO 9'S
         CVD   R7,DXCCW2                CONVERT LOGICAL REC LEN TO DEC
         UNPK  FL2LRECL,DXCCW2          LOGICAL REC LEN IN EBCDIC
         OI    FL2LRECL+K4,ZONEOF       RESET SIGN BITS
         B     ETO20800                 BR TO CONTINUE MERGE
ETO20700 EQU   *                        SET LRECL TO NINES
         MVI   FL2LRECL,ALLBITS-K6      SET LRECL TO 9'S
         MVC   FL2LRECL+K1(K4),FL2LRECL  INDICATING GRTR 32K
*
*                  DENSITY
ETO20800 EQU   *                        SET DENSITY
         MVI   FL2DEN,CHAR4             SET DENSITY TO 4          99223
         TM    JFCDEN,DEN6250           IS DENSITY 6250           99223
         BO    ETO20850                 YES,BRANCH                99223
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,JFCDEN                PICK UP DENSITY FROM THE JFCB
         SRL   R7,K6                    BITS 0 AND 1 CONTAIN DENSITY
         STC   R7,FL2DEN                00=200 01=556 10=800 11=1600
         OI    FL2DEN,DENSET            SET DENSITY TO EBCDIC
*
*                   FILE POSITION AND JOB/STEP IDENTIFICATION
*
ETO20850 EQU   *                        DENSITY = 6250            99223
         MVI   FL2FILP,FILPOS1          A VOLUME SWITCH HAS OCCURRED
         L     R7,DEBTCBAD              REESTABLISH THE ADDRESS OF THE
         L     R7,TCBTIO-TCB(K0,R7)     BEGINNING OF THE TIOT
         MVC   FL2JOBD,TIOCNJOB-TIOT(R7)  PLACE JOB/STEP IDENTIFICATION
         MVI   FL2JSSP,SLASH            (INSERT SLASH)
         MVC   FL2STEPD,TIOCSTEP-TIOT(R7)  FROM THE TIOT TO LABEL
         SPACE 1
*                   TAPE RECORDING TECHNIQUE
         SPACE 1
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,JFCTRTCH              PICK UP TAPE RECORDING TECH
         SRL   R7,K4                    13=C, 23=E , 2B=ET, 0=BLANK
         STC   R7,FL2TRTCH              PLACE FIRST CHARACTER OF TRTCH
         TR    FL2TRTCH(K1),ATRTCH0W    THE LABEL AS BLANK,C,E OR T
         CLI   JFCTRTCH,DCBTRTET        IS IT BOTH EVEN PARITY AND TRAN
         BC    6,ETO20900               NO,THE SECOND CHAR S/B BLANK
         MVI   FL2TRTCH+K1,CHART        YES,TAPE RECORD TRANS
         SPACE 1
*                   CARRIAGE CONTROL CHARACTER SET
         SPACE 1
ETO20900 TM    JFCRECFM,DCBRECCM        JFCB SPECIFY MACHINE CODE CTL
         BC    12,ETO21000              NO,GO SEE IF ASA CONTROL CHAR
         MVI   FL2CNTRL,CHARM           YES,SET MACHINE CODE CTL CHAR
ETO21000 TM    JFCRECFM,DCBRECCA        JFCB SPECIFY ASA CONTROL CHAR
         BC    12,ETO21100              NO,DO NOT SET UP CARRIAGE CNTRL
         MVI   FL2CNTRL,CHARA           YES,SET CONTROL CHAR TO ASA
*
ETO21100 EQU   *                        DON'T SET CARRIAGE CONTROL
*                             BUFFER OFFSET
         TM    JFCBLTYP,JFCBAL          WERE ANSI LABEL SPEC.
         BNO   ETO21350                 NO, CHECK FOR 6250        99223
ETO21200 SR    R7,R7                    CLEAR REG
         IC    R7,JFCBUFOF              LOAD OFFSET LENGTH
         A     R7,BITOFF0W              TURN OFF BUFOFF = L BIT@ZA14707
ETO21300 CVD   R7,DXCCW2                CONVERT TO DECIMAL
         UNPK  FL2BUFOF,DXCCW2          UNPACK
         OI    FL2BUFOF+K1,ZONEOF       TURN OFF SIGN BIT
         MVC   FL1LABI,HDR0W            MOVE IN HEADER CONSTANT
*   TRANSLATE LABEL BEFORE WRITING
         XLATE DXLBL,K80,TO=A           TRANSLATE
         B     ETO21400                 GO WRITE LABEL            99223
*  IF CREATING SL ON A 6250 BPI TAPE UNIT, THE ID OF THE CREATING
*  DEVICE IS PLACED IN HDR2/EOF2/EOV2. TAPE UNIT ID IS FOUND IN THE
*  UCB EXTENSION.
ETO21350 EQU   *                        SET TAPE UNIT ID          99223
         CLI   UCBTBYT4,UCB3400         TEST FOR 3400 DRIVE      YM1491
         BNE   ETO21400                 NO - BRANCH              YM1491
         L     R7,UCBEXTPT              GET UCB EXTEN PTR        Y02146
         CLI   UCBSNSCT-UCBCMEXT(R7),K24 IS IT 3420 TAPE UNIT    Y02146
         BNE   ETO21400                 NO - BRANCH               99223
         USING UCBMT,R7                 SET UP ADDRESSABILITY     99223
         L     R7,UCBXTN                GET EXTENSION ADDRESS     99223
         LH    R7,UCBCTD                PUT ID OF CREATING DRIV@ZA08326
         N     R7,SNMASK                INTO R7                @ZA08326
         DROP  R7                                                 99223
         CVD   R7,DXCCW2                CONVERT ID                99223
         UNPK  FL2ID,DXCCW2             PLACE IN LABEL         @ZA08326
         OI    FL2ID,ZONEOF             STRIP SIGN             @ZA13576
* GET THE MODEL NO. CODE FROM THE SENSE INFORMATION AND
* PLACE THE MODEL NO. CHARACTER INTO THE SERIAL NO.
         LA    RC,DXCCW2                GET AREA ADDRESS       @ZA26229
         MVC   DXCCW1+K4(K4),CCW2FK07   SILI FLAG,7 SNS BYTES  @ZA02210
         ST    RC,DXCCW1                PUT AREA ADDR INTO CCW @ZA26229
         MVI   DXCCW1,CCWSENSE          SNS CMD CODE INTO CCW  @ZA02210
         BAL   RC,ETO22100              GO ISSUE SENSE COMMAND @ZA02210
         BZ    ETO24000                 IF I/O ERR,NOTIFY OPER @ZA02210
         IC    RC,DXCCW2+K6             GET SIXTH SENSE BYTE   @ZA26229
         SLL   RC,K28                   CLEAR RC EXCEPT FOR    @ZA26229
         SRL   RC,K28                   HALF BYTE MOD. NO.     @ZA26229
         IC    RC,CHARTBL(RC)           GET CHAR. FROM TABLE   @ZA26229
         STC   RC,FL2ID                 PLACE MOD NO INTO LBL. @ZA26229
         OI    FL2ID+K4,ZONEOF          STRIP SIGN             @ZA08326
ETO21400 EQU   *                        WRITE LABEL
         SPACE 1
*                   WRITE HEADER LABEL 2
         SPACE 1
         MVC   DXCCW1,ANOPCCW           GET BASIC CCW
         ST    RCORE,DXCCW1             ADDRESS OF WRITE AREA
         MVI   DXCCW1,CCWWRTAP          WRITE COMMAND
         BAL   RC,ETO22100              GO WRITE FILE LABEL 2    YM3927
         BC    12,ETO24000              IF I/O ERROR, GO NOTIFY THE OP
         SPACE 1
*                   SEE IF USER LABELS ARE TO BE PROCESSED
         SPACE 1
ETO21500 EQU   *                        CHECK FOR USER LABELS SPEC
         TM    JFCBLTYP,JFCBUL          BRANCH IF NOT 'AUL' OR
         BNO   ETO21900                 'SUL' AS LABEL TYPE
         TM    DCBMACRF,DCBMEXCP        IS THIS EXCP
         BZ    ETO21600                 NO, GO
         TM    DCBMACRF,DCBMFOUN        DOES DCB HAVE FOUNDATION EXT.
         BZ    ETO21900                 NO, GO
ETO21600 EQU   *                        EXAMINE EXIT LIST
         L     R7,DCBEXLST              PICK UP EXIT LIST FROM DCB
         LA    R7,K0(K0,R7)             ZERO HI ORDER BYTE OF EXIT LIST
         LTR   R7,R7                    IS THE EXIT LIST ZERO
         BZ    ETO21900                 YES, GO TO WRITE TAPE MARK
ETO21700 EQU   *                        EXIT LIST NON-ZERO       Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         CLI   K0(R7),XLOUHL            IS THIS ACTIVE EXIT 2    Y02082
         BE    ETO22300                 YES, PROCESS USER LABELS
         CLI   K0(R7),XLOUHL+LASTNTRY   SEE IF LAST IND ALSO ON
         BE    ETO22300                 YES, PROCESS USER LABELS
         TM    K0(R7),LASTNTRY          IS THIS LAST ENTRY IN LIST
         LA    R7,K4(K0,R7)             POINT TO NEXT ENTRY
         BC    12,ETO21700              IF NOT,LAST,CHECK NEXT ENTRY
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         EJECT
ETO21800 EQU   *                        WRITE TAPE MARK
         SPACE 1
*                   WRITE TAPE MARK FOLLOWING HEADER LABELS
         SPACE 1
ETO21900 MVC   DXCCW1(K16),AWTMCCWW     SET UP CCW TO WRITE TAPE MARK
         BAL   RC,ETO22100              GO TO WRITE TAPE MARK    YM3927
         BC    12,ETO24000              IF I/O ERROR,GO NOTIFY THE OPER
         OI    DXATOUTA,DXATHDTM        TM WRITTEN AFTER HDR LBL Y02144
         MVI   DXCCW1+K4,CCWSILI        RESET CHAIN COMMAND FLAG IN CCW
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        GO ISSUE TAPE ATTRIBUTE MESSAGE                         Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         MVC   DXRETMOD,ID2F2F          SET UP RETURN LOAD       Y02134
         MVI   DXRETCOD,K4              RETURN OFFSET            Y02134
*                                                                Y02134
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN       Y02134
         LA    RWTG,DXXAREA             POINT TO EOV WTG         Y02134
         IECRES LOAD,MODID=ID2F4J,BRCODE=K48,BRANCH=QUEUED       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*                   EXIT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
ETO22000 SR    RET,RET                  ZERO RETURN REG
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         IECRES LOAD,MODID=(R7),BRANCH=QUEUED GO TO NEXT MODULE  Y02080
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*                   CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
*                        IT IS ASSUMED THAT ALL CONTROL BLOCKS
*                        HAVE ALREADY BEEN SET UP
*                             BAL  R8,PRHR50
*                             RETURN
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
ETO22100 EQU   *                        I/O ROUTINE
*                                                                Y02134
         EXCP  DXIOB                    ISSUE I/O OPERATION
*                                                                Y02134
ETO22200 IECRES WAIT                    WAIT FOR I/O             Y02134
*                                                                Y02134
         TM    DXECB,ECBNOERR           IS THERE AN UNUSUAL I/O COND
         BR    RC                       RETURN TO CALLER         YM3927
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*                   EXIT TO USER LABEL HANDLING ROUTINE
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
ETO22300 EQU   *                        PROCESS USER LABELS
*                                                                Y02134
         L     R7,K0(K0,R7)             PICK UP EXIT ADDRESS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LR    RC,R7                    SET UP REG 12 TO PASS EXIT ADR
         LA    R7,K0(K0,R7)             ZERO THE HI ORDER BYTE
         LTR   R7,R7                    IS EXIT ADDR ZERO IF ACTIVE
         BZ    ETO21900                 YES,DO NOT PROCESS USER LABELS
         EJECT
*  OBTAIN USER CORE FOR WORK AREA, LABEL BUFFER, AND PARAMETER
*  LIST AREA                                                     Y02082
*
         IECRES GET,LV=USERLDM,PREFIX=YES,SP=K229,               Y02082*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
*                                                                Y02082
         USING ULDMWK,R1                                         Y02082
         STM   RPAR,RC,ULREGSAV         SAVE REGS                Y02082
         DROP  R1                                                Y02082
         LR    RUCB,R1                                           Y02082
         USING ULDMWK,RUCB                                       Y02082
*    GET CORE FOR USER'S USER LABEL WORK AREA                    Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,SP=K229,KEY=USER,        Y02082*
               STM=(2,14,WTGPREFX)                               Y02082
         LR    R9,R1                    ADDR OF GOTTEN CORE      Y02082
         USING ULUWK,R9                                          Y02082
*                                                                Y02082
*
*  OUTPUT LABEL PROCESSING
         MVI   ULBUFR,BLANK             SET LABEL BUFFER AREA
         MVC   ULBUFR+K1(K79),ULBUFR    TO BLANKS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    R1,CHAR0                 INIT COUNT               Y02082
         STH   R1,ULCNT                 SAVE FOR LATER USE       Y02082
ETO22400 EQU   *                        CHECK FOR ANSI LABELS
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABELS SPEC.
         BO    ETO22500                 YES, SKIP LABEL COUNTING
         LH    R1,ULCNT                 PICK UP PREVIOUS COUNT
         LA    R1,K1(K0,R1)             INCREMENT BY 1
         STH   R1,ULCNT                 SAVE UPDATED COUNT
         CLI   ULCNT+K1,MAXNOLAB        TEST,BR IF MAX NBR OF UL
         BH    ETO23100                 ALREADY PROCESSED
ETO22500 EQU   *                        INITIALIZE BUFFER HEADING
         ICM   R8,K14,UHLCON            SET UHL                  Y02082
         IC    R8,ULCNT+K1              SET LABEL NUMBER         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R8,ULBUFR                SET 'UHLN' IN BUFFER     Y02082
         BAL   R8,ETO23200              GO TO SYNCH TO USER
*
*
         LTR   RF,RF                    TEST,BR IF LABEL NOT
         BZ    ETO23100                 TO BE WRITTEN
*  RESET FIRST 4 CHAR OF LABEL THEN
*  ESTABLISH CHANNEL PROGRAM TO WRITE USER LABEL
*
*
         MVC   ULDMBUFR(K3),UHLCON      SET 'UHL'                Y02082
ETO22700 EQU   *                        CHECK FOR ANSI LABELS
         TM    JFCBLTYP,JFCBAL+JFCBUL   IF 'AUL' SPECIFIED, BYPASS
         BO    ETO22800                 RESTORING LABEL NUMBER
         MVC   ULDMBUFR+K3(K1),ULCNT+K1 LABEL NUMBER             Y02082
ETO22800 EQU   *                        POINT TO LABEL BUFFER
         LA    R1,ULDMBUFR              POINT TO LABEL BUFFER    Y02082
         ST    R1,DXCCW1                SAVE ADDRESS
         MVI   DXCCW1,CCWWRTAP          WRITE OP-CODE TO CCW
         MVC   DXCCW1+K4(K4),ANOPCCW+K4  80-CHAR LENGTH
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABEL SPEC.
         BNO   ETO22900                 NO, BYPASS TRANSLATE
*   TRANSLATE LABEL BEFORE PROCESSING
         XLATE (R1),K80,TO=A            TRANSLATE USER LABEL
         MODESET KEYADDR=DXUKEY,WORKREG=8 ASSUME USER KEY        Y02082
         LA    R1,ULBUFR                POINT TO LABEL BUFFER    Y02082
         XLATE (R1),K80,TO=A            TRANSLATE USER'S LABEL   Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
ETO22900 EQU   *                        GO WRITE LABEL
         BAL   RC,ETO22100              GO TO ISSUE EXCP         YM3927
*  ERROR CHECKING
         BZ    ETO23000                 BR IF ERROR
         TM    IOBSTAT0,CSWUNITX        CHECK FOR UNIT EXCEPTION
*                                       WRITING BEYOND EOT REFLECTOR
         BO    ETO23000                 CREATING HEADERS
*
*
         CLI   ULRETCOD,WRITNEXT        TEST,BR IF USER RETURNED A CODE
         BE    ETO22400                 TO CONTINUE UL PROCESSING
*  OTHERWISE, IT IS ASSUMED THE USER RETURNED A CODE = 4, I.E. NO
*  FURTHER UL PROCESSING.
         B     ETO23100                 UNCONDITIONAL BRANCH
*
ETO23000 EQU   *                        ERROR WRITING LABEL
*  ERROR WHEN ATTEMPTING TO WRITE LABEL.  GO TO USER WITH ERROR
*  INDICATIONS, THEN TERMINATE UL PROCESSING (RETURN CODE NOT
*  EXAMINED).
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULPARM+K8             IN PARAMETER LIST
         OI    ULPARM+K8,LASTNTRY+ERROROUT  FLAG IN ERROR
         BAL   R8,ETO23300              GO TO SYNCH TO USER (BUFFER
*                                       CONTAINS LABEL UNABLE TO WRITE)
*
ETO23100 EQU   *                        FREE UL WORK AREAS
*
*
         LM    RPAR,RWTGC,ULREGSAV      RESTORE REGS 5-8         YM3971
* FREE USER LABEL WORK AREA, LABEL BUFFER AND PARAMETER LIST     Y02080
         IECRES FREE,A=(R9),PREFIX=NO,SP=K229,KEY=USER,          Y02082*
               LV=USERLU,STM=(2,14,WTGPREFX)                     Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LR    R1,RUCB                  RUCB PTR TO AREA TO FREE Y02082
         LM    R9,RC,ULREGSAV+(R9-RPAR)*K4 RESTORE REGS 9-12     YM3971
         IECRES FREE,A=(R1),PREFIX=YES,STM=(2,14,WTGPREFX)       Y02082
         SPACE 2
         B     ETO21800                 GO WR TM AFTER UL
         SPACE 2
*
*
ETO23200 EQU   *                        SYNCH ENTRY 1
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR IND
ETO23300 EQU   *                        SYNCH ENTRY 2
         LA    R1,ULBUFR                POINT TO LABEL BUFFER
ETO23400 EQU   *                        SYNCH ENTRY 3
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR(K4),ULTOTPTR    ZERO TOTALING ENTRY
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
         L     R7,DCBDEBAD              GET ADDRESS OF USER'S DEB
*
ETO23500 EQU   *                        CHECK FOR EXCP
         TM    DCBMACRF,DCBMEXCP        CK IF USING EXCP
         BO    ETO23600                 EXCP, SKIP TOTALING
         TM    DCBOPTCD,DCBOPTT         CK IF TOTALING SPECIFIED
         BZ    ETO23600                 BR IF NO TOTALING
*
         L     R7,K40(R7)               GET PTR TO TOTALING AREA
         USING TOTSAVWA,R7              ESTABLISH BASE FOR AREA
         MVC   ULTOTPTR(K4),TOTEOVPT    TOTLING PTR TO PARM LIST
         DROP  R7                       DROP BASE
*
ETO23600 EQU   *                        NO USER TOTALING
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT TO ZERO     Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         MODESET EXTKEY=DATAMGT         D.M. KEY                 Y02082
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,DXXPREFX)           Y02082
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE      Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            GET PTR TO COPIED DCB    Y02082
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE DCBOFLGS IN COPY  Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE
         ST    RF,ULWK1                 SAVE RETURN CODE
*                                                                Y02082
*     COPY USER LABEL TO EOV'S BUFFER                            Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*     GET LOCAL LOCK                                             Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVEMT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
*     VERIFY USER STILL HOLD USER LABEL WORK AREA                Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULDMBUFR,ULBUFR          COPY LABEL TO EOV'S BUFF Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*     FREE LOCAL LOCK                                            Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         D.M. KEY                 Y02082
         L     RF,ULWK1                 RESTORE RETURN CODE      Y01021
         BR    R8                       RETURN
*
         SPACE 1
*
         SPACE
*EOV HAS FOUND AN UNCORRECTABLE I/O ERROR, BUT WILL ASK FOR NEW
*VOLUME RATHER THAN ABEND WITH '137'
         SPACE
ETO24000 EQU   *                        I/O ERROR DURING CONTROL OPERAT
         LA    R0,EABD144               INTERNAL CODE 637-04   @ZA02850
         LA    R7,ID2F2N                GO REJECT VOLUME         Y02134
         B     ETO22000                 GO XCTL
*              ADD 1 TO VOLUME SEQUENCE NUMBER IN DEB
*
ETO24300 LH    R1,DXVOLSEQ              GET NEW VOL SEQ          Y02134
         LA    RET,DEBBASND+K4          PT TO ACCESS METH SECT   YM1272
         USING DEBACSMD,RET             BASE FOR ACCESS METH     YM1272
         STH   R1,DEBVOLSQ              STORE VOL SEQ NO.        YM1272
         DROP  RET                                               YM1272
*
*                                                                Y02134
ETO26500 EQU   *                        PREPARE TO EXIT
*                                                                Y02134
*              RESET TAPEMARK BIT IN DCBOFLGS
*
         NI    DCBOFLGS,X'FF'-DCBOEOF   RESET TAPEMARK BIT
         OI    DCBOFLGS,DCBOLOCK        UNLOCK DCB
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXUDCBAD+K1 POINT DEB  Y02082*
                                        TO USER DCB              Y02082
         L     RF,DXDEBXAD              GET PTR TO DEB EXTENSION YM1272
         NI    DEBXFLG1-DEBXTN(RF),ALLBITS-DEBXCDCB DEB PT USER  YM1272
*                        CHECK IF EXCP SPECIFIED
         TM    DXOPCLSW,UCBMOUNT        LOAD A.M. EXECUTOR
         BO    ETO26700                 YES, GO
*                                                                Y02134
ETO26650 EQU   *                        FREE EOV WORK AREA       Y02134
*                                                                Y02134
*****************************************************************Y02134
*
*                        RELEASE EOV WORK AREA
*
*****************************************************************Y02134
*                                                                Y02134
         NI    DCBOFLGS,ALLBITS-DCBOBUSY  RESET I/O SUPPORT BIT
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,DXXPREFX)          Y02082
*                                                                Y02134
         LR    R1,RCORE                 LOC OF BYTES TO FREE
         IECRES FREE,A=(1),PREFIX=EOV                            Y02080
*                        EXIT
         SR    RF,RF                    ZERO RETURN CODE
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
*                                                                Y02080
*
*              LOAD THE ACCESS METHOD EXECUTOR
*
ETO26700 LA    R7,ID2F1L                GO TO ACCESS METHOD MOD  Y02134
         B     ETO22000                 BRANCH TO ROUTINE        Y02134
*                                                                Y02134
         EJECT
         SPACE 1
*                   CONSTANTS
         SPACE 1
AWTMCCWW CCW   X'1F',0,X'60',80         WRITE TAPE MARK CCW
ANOPCCW  CCW   X'03',0,X'20',80         NOP, COUNT FOR WRITE CCW
CHARTBL  DC    C'0003570000046800'      CHAR. TABLE FOR MOD NO @ZA19724
         DS    0H
AGRTR30W DC    X'8000'                  VALUE IN LABEL WHEN LRECLGT 32K
ATRTCH0W DC    C' CET'                  CONVERSION,EVEN PARITY,TRAN
ARECFM0W EQU   *-1                      RECFM TRANSLATE TABLE
         DC    C'VFU'                   VARIABLE,FIXED,UNKNOWN REC FMT
ABLKA0W  DC    C' SBR'                  BLK AATTRB TRANSLATE TABLE
*                                       CONS
HDR0W    DC    C'HDR'                   CHARACTERS HDR
BITOFF0W DC    F'127'                   MASK FOR BUFOFF = L BIT
SNMASK   DC    X'0000FFFF'              SER. NO. MASK          @ZA08326
*
UHLCON   DC    C'UHL'                   HEADER LABEL CONSTANT
CCW2FK07 DC    X'20000007'              CCW LENGTH ,SILI FLAG  @ZA02210
*
*                                                                Y02134
         XCTLTABL ID=(ID2F2F,2F,ID2F2N,2N,ID2F1L,1L,             YM1193X
               ID2F4J,4J),SVC=055,BRT=YES,LENGTH=2040,PATCH=100  Y02080
         IECDSECS CVT,TCB,DCB,UCB,MAIN,USERLAB,USERTOT,RB,       YM1272X
               DSAB,IEZDEB,                                      YM1272X
               TIOT,WTG,PREFX,PSA,RRPL,EXPAND=YES                Y02144
         IECEQU IEZDEB=YES                                       YM1272
         END
