         TITLE 'IFG0552R - EOV TAPE INPUT STD TRAILER LABEL FUNCTION'
         COPY  LCGASMSW
IFG0552R CSECT
         ENTRY IGG0550B                                          Y02080
IGG0550B EQU   IFG0552R                 ALLIAS ENTRY POINT       Y02080
***********************************************************************
*                                                                     *
*          VS2 RELEASE 03.7 DELETIONS                                 *
*0000207000,210000                                             @ZA19126
*                                                                     *
*          VS2 RELEASE 03 DELETIONS                                   *
*0000                                                          @ZA07712
*0000                                                          @ZA01503
*0000293000,301000,307000,346000,347000,654600                 @ZA01338
*0000364600-365000,369960                                      @ZA01342
*0000                                                          @ZA07604
*0000                                                          @ZA13589
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0552R (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = INPUT TAPE - STANDARD HEADER LABEL               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1) FOR STANDARD LABELS (BRANCH ENTRY = 0), POSITION TO       *
*        AND READ TRAILER LABEL 1 (EOV1,EOF1,HDR1) AND TRANSLATE IF   *
*        ASCII SPECIFIED.                                             *
*        2) IF THE DCB CONTAINS A DEVICE DEPENDENT SECTION, COMPARE   *
*        THE BLOCK COUNT IN THE DCB TO THE BLOCK COUNT IN THE LABEL,  *
*        PASSING CONTROL TO THE CALLER'S BLOCK COUNT EXIT ROUTINE IF  *
*        THE BLOCK COUNTS ARE UNEQUAL. THE IECRES UEXIT MACRO GIVES   *
*        CONTROL TO IFG019RA WHO WILL SYNCH TO THE CALLER. THE BLOCK  *
*        COUNT EXIT INTERFACE IS AS FOLLOWS:                          *
*        2A) REGISTERS ARE INITIALIZED FOR THE CALLER:                *
*            R0 - CONTAINS THE BLOCK COUNT FROM THE LABEL.            *
*            R1 - ADDRESS OF DCB WITH INCORRECT BLOCK COUNT.          *
*            R2-R13 - CALLER'S REGS AT ENTRY TO EOV.                  *
*            R15 - CALLER'S BLOCK COUNT EXIT ROUTINE ADDRESS.         *
*        2B) CONTROL BLOCK INDICATORS                                 *
*            THE 'LOCK' BIT IS TURNED OFF WHEN CONTROL IS             *
*            PASSED TO THE CALLER AND IS RESET UPON RETURN.           *
*        2C) RETURN CODES FROM THE CALLER PASSED IN R15.              *
*            0 - TERMINATE PROCESSING DUE TO INCORRECT BLOCK          *
*                COUNT.                                               *
*        3) CONTROL IS PASSED TO IFG0552T TO PROCESS USER LABELS IF   *
*        THEY WERE SPECIFIED AND A VALID EXIT ROUTINE ADDRESS EXISTS. *
*        USER LABELS ARE NOT PROCESSED IF DEFERRED USER LABEL PRO-    *
*        CESSING HAS BEEN SPECIFIED AND END-OF=FILE (EOF) HAS         *
*        OCCURRED.                                                    *
*        4) IF USER LABELS ARE NOT TO BE PROCESSED, POSITION THE      *
*        TAPE TO THE LOGICAL END OF THE DATA SET (IE. AT THE INTER-   *
*        BLOCK GAP FOLLOWING THE TAPE MARK FOLLOWING THE TRAILER      *
*        LABELS FOR READ FORWARD, OR AT THE INTERBLOCK GAP PRE-       *
*        CEDING HEADER LABEL 1 FOR READ BACKWARD. CONTINUE PRO-       *
*        CESSING AT 6) BELOW.                                         *
*        5) IF ENTRY IS FROM NSLETRLI (BRANCH ENTRY CODE = 12)        *
*        FOLLOWING DEFERRED LABEL PROCESSING DURING 'CLOSE', RETURN   *
*        TO IFG0202B (ALIAS IFG0556B) TO COMPLETE THAT PROCESSING.    *
*        6) FOR ALL OTHER ENTRIES, DETERMINE IF EOF HAS OCCURRED,     *
*        IN WHICH CASE CONTROL IS TRANSFERRED TO THE EOD FUNCTION     *
*        IFG0552X.                                                    *
*        7) IF NOT EOD AND SMF IS ACTIVE, TRANSFER CONTROL TO THE     *
*        CLOSE SMF RECORD BUILDER FUNCTION TO PROCESS SMF RECORDS.    *
*        SET UP TO RETURN TO IFG0552V UPON COMPLETION OF SMF          *
*        PROCESSING.                                                  *
*        8) TRANSFER CONTROL TO IFG0552V FOR EOV INPUT POSITIONING.   *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0552R                                                     *
*        IGG0550B - ALIAS                                             *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0552V - POSITION VOLUME AT EOV.                           *
*        IFG0552X - PROCESS THE DATA SET AT EOF.                      *
*        IFG0553B - PROCESS SMF RECORDS.                              *
*        IFG0556B - FINISH DEFERRED NSL PROCESSING.                   *
*        IFG0552T - PROCESS USER LABELS.                              *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P - PROBLEM DETERMINATION                             *
*             INTERNAL CODE = 180, INVALID LABEL                      *
*             INTERNAL CODE = 148, INVALID BLOCK COUNT AND NO EXLST   *
*             INTERNAL CODE = 146, POSITIONING ERROR                  *
*             INTERNAL CODE = 147, ERROR READING TRAILER LABEL        *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        JFCB                                                         *
*        TCB                                                          *
*        UCB                                                          *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        IECRES LOAD                                                  *
*        IECRES INIT                                                  *
*        IECRES UEXIT                                                 *
*        XLATE                                                        *
*        DMABCOND                                                     *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
*
*****    INTERNAL ERROR CODES
*
EABD146  EQU   146                      ERROR POS TO TRAILER LABELS
EABD147  EQU   147                      ERROR READING TRAILER LABELS
EABD148  EQU   148                      INCORRECT DCB BLOCK COUNT
EABD150  EQU   150                      ERROR POS TO END OF DATA SET
EABD180  EQU   180                      INVALID TRAILER LABEL READ
CHARH    EQU   C'H'                     CHARH = CHARACTER H    @ZA07604
CHARE    EQU   C'E'                     CHARE = CHARACTER E    @ZA07604
*
         BALR  RBASE,R0                 ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING FORCORE,RCORE
         USING IHADCB,RDCB
         USING UCB,RUCB
         USING TIOENTRY,RTIOT
         USING DEB,RDEB
         USING WTG,RWTG
         MODESET EXTKEY=DATAMGT         DM KEY                 @ZA01503
*
*****          DETERMINE TYPE OF ENTRY INTO MODULE
*
         B     ETI00100(RET)            DETERMINE TYPE OF ENTRY TO MOD
ETI00100 EQU   *                        BRANCH TABLE
         B     ETI00200                 BR IF SL ENTRY  ( 0)
         B     ETI02100                 BR IF NL ENTRY  ( 4)
         B     ETI02050                 BR IF NSL ENTRY DURING EOV ( 8)
         B     ETI02700                 BR NSL ENTRY DURING CLOSE  (12)
*                                       ..FOR DEFERRED NSL PROCESSING
         B     ETI01400                 BR IF RETURN FROM PROB @ZA01338
*                                       DETERMINATION  (16)    @ZA01338
*
ETI00200 EQU   *                        CHECK FOR READBACK
         MVC   DXCCW1(K16),ABSFCCW      INITLZ CCW FOR 'BSF' AND MOVE
*                                       ..UNCHAINED 'NOP' INTO DXCCW2
         TM    DCBOFLGS,DCBORDBK        IS READBACK INDICATED IN DCB-
         BO    ETI00250                 YES, BR TO POSITION TA @ZA19126
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP          @ZA19126
         BNO   ETI00400                 NO, READ TRAILER,HEADE @ZA19126
         TM    DCBOFLGS,DCBOEOF         TAPEMARK READ ?        @ZA19126
         BO    ETI00400                 YES, READ TRAILER,HEAD @ZA19126
         BNO   ETI00300                 NO, SPACE OVER TM.     @ZA19126
*****          POSITION TAPE TO READ HEADER LABEL 1
ETI00250 EQU   *                                               @ZA19126
         LA    RD,EABD146               POSITIONING ERR INTERNAL CODE
         BAL   RC,ETI02800              BACKSPACE PAST TAPE MARK
*                                       ..PRECEDING HEADER LBLS
         MVI   DXCCW1,CCWNOP            INITLZ CCW FOR 'NOP' COMMAND
         BAL   RC,ETI02800              ISSUE 'NOP' TO TAPE UNIT
         BAL   RC,ETI02750              ISSUE SENSE COMMAND     XA01537
         TM    DXCCW3+K1,UCBLDPT        IS TAPE AT LOAD PT      XA01537
         BO    ETI00400                 ..BR IF YES TO READ HEADER LBL
ETI00300 EQU   *                        NOT AT LOAD POINT
         MVI   DXCCW1,CCWFSF            INITLZ CCW FOR 'FWD SPACE FILE'
         OI    DXCCW1+K4,CCWCMDCH       CHAIN TO 'NOP' CMD
         BAL   RC,ETI02800              FORWARD SPACE TO HEADER LABELS
*
*****          READ TRAILER ( OR HEADER ) LABEL 1
*
ETI00400 EQU   *                        READ TRAILER/HDR LABEL
         LA    RD,EABD147               INTERNAL ERROR CODE IN CASE OF
*                                       ERROR READING TRAILER LABEL 1
         LA    RC,DXLBL                 PLACE ADDRESS OF LABEL AREA IN
         ST    RC,DXCCW1                OBTAINED CORE INTO THE CCW
         MVI   DXCCW1,CCWRDTAP          INITLZ CCW FOR 'TAPE READ' CMD
         MVC   DXCCW1+K4(K4),ARDCCW     SET LENGTH EQUAL 80, NO FLAGS
         TM    JFCBLTYP,JFCBAL          WERE ANSI LABELS SPECIFIED-
         BZ    ETI00500                 ..BRANCH IF NOT
         OI    DXCCW1+K4,CCWSILI        SET 'SILI' BIT ON
ETI00500 EQU   *                        NOT ANSI LABELS
         BAL   RC,ETI02800              READ TRAILER (OR HEADER) LABEL
         TM    JFCBLTYP,JFCBAL          WERE ANSI LABELS SPECIFIED-
         BZ    ETI00600                 ..BRANCH IF NOT
         XLATE DXLBL,K80                TRANSLATE ANSI LABELS
         CLC   FL1LABI,UVOL             IS THIS A USER VOLUME LABEL-
         BE    ETI00500                 ..BR IF YES- READ ANOTHER LABEL
ETI00600 EQU   *                        NOT USER LABEL
         LA    RD,EABD180               ERROR CODE FOR INVALID LABEL
         CLC   FL1LABI,AVOL             IS THIS A VOLUME LABEL-
         BE    ETI00500                 ..BR IF YES- READ ANOTHER LABEL
         CLI   FL1NO,FILPOS1            IS THIS A FILE LABEL 1-
         BNE   ETI02900                 ..BR IF NOT- WRONG LABEL
         CLI   FL1LABI,CHARH            IS THIS A HDR LABLE    @ZA07604
         BNE   ETI00610                 BR NO TO TEST EOV-EOF  @ZA07604
         TM    DCBOFLGS,DCBORDBK        IS RD BK INDIC IN DCB  @ZA07604
         BNO   ETI02900                 .BR IF NO WRONG LABEL  @ZA07604
         B     ETI00620                 BR TO VER BLOCK COUNT  @ZA07604
ETI00610 EQU   *                                               @ZA07604
         CLI   FL1LABI,CHARE            IS THIS A EOV-EOF LABEL@ZA07604
         BNE   ETI02900                 .BR IF NO WRONG LABEL  @ZA07604
         TM    DCBOFLGS,DCBORDBK        IS RD BK INDIC IN DCB  @ZA07604
         BNO   ETI00620                 BR TO VER BLOCK COUNT  @ZA07604
         B     ETI02900                 .BR IF NO WRONG LABEL  @ZA07604
*
***********************************************************************
*              VERIFY BLOCK COUNT. NOTE THAT IF THE DATA SET WAS      *
*              CREATED WITH A DCB THAT HAD NO DEVICE-DEPENDENT        *
*              SECTION, THE BLOCK COUNT WAS WRITTEN AS ZERO AND       *
*              CANNOT BE VERIFIED.                                    *
***********************************************************************
*
ETI00620 EQU   *                                               @ZA07604
         L     RC,DCBBLKCT              LOAD BLOCK COUNT FROM THE DCB
         PACK  DXCCW7,FL1BLKCT          CONVERT THE BLOCK COUNT IN
         CVB   RF,DXCCW7                ..THE FILE LABEL TO BINARY
         TM    DCBMACRF,DCBMEXCP        IS THIS AN 'EXCP' DCB-
         BNO   ETI00700                 ..BR IF NOT- BLOCK COUNT EXISTS
         TM    DCBMACRF,DCBMFOUN        DOES FOUNDATION EXTENSION EXIST
         BNO   ETI01900                 ..BR IF NOT- NO BLOCK COUNT
         TM    DCBMACRF+K1,DCBMDEV      DOES DEV-DEPEND SECTION EXIST-
         BZ    ETI01400                 ..BR IF NOT- CHK FOR USER LBLS
         B     ETI00900                 ..ELSE BR TO VERIFY BLOCK COUNT
ETI00700 EQU   *                        NOT EXCP
         TM    DCBCIND2,DCBC2CHN        IS CHAINED SCHEDULING IN USE-
         BO    ETI00800                 ..BRANCH IF YES
         MODESET KEYADDR=DXUKEY,WORKREG=13 ASSUME USER KEY       Y02082
         L     RD,DCBIOBA               LD ADDR OF IOB THAT CAUSED EOF
         SH    RC,IOBINCNT(,RD)         UPDATE BLOCK COUNT TO ACCOUNT
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         ST    RC,DCBBLKCT              ..FOR EOF AND STORE IN DCB
ETI00800 EQU   *                        CHAIN SCHEDULING
         LTR   RF,RF                    WAS BLOCK COUNT WRITTEN AS 0-
         BNZ   ETI00900                 ..BR IF NOT- THE BLOCK COUNT
*                                       ..IN THE LABEL IS VALID
         TM    DCBOFLGS,DCBORDBK        WAS LAST OPERATION 'READBACK'-
         BNO   ETI01400                 ..BR IF NOT- BLOCK CT NOT VALID
ETI00900 EQU   *                        VALID BLOCK COUNT
         CLR   RC,RF                    IS BLOCK COUNT IN DCB CORRECT-
         BE    ETI01400                 ..BR IF YES- TEST FOR USER LBL
*
***********************************************************************
*              INCORRECT BLOCK COUNT PROCESSING                       *
***********************************************************************
*
*****          TEST FOR A VALID BLOCK COUNT EXIT
*
ETI01000 EQU   *                        TEST FOR BLOCK COUNT EXIT
         LA    RD,EABD148               INTERNAL ERROR CODE IN CASE
*                                       ..BLOCK COUNT IS UNACCEPTABLE
         L     RC,DCBEXLST              GET EXIT LIST ADDR FROM THE DCB
         LA    RC,K0(,RC)               ZERO HI-ORDER BYTE OF EXIT LIST
         LTR   RC,RC                    IS THERE A DCB EXIT LIST-
         BZ    ETI01300                 BR IF NOT TO ERROR RTN @ZA01338
ETI01100 EQU   *                        EXIT LIST EXISTS
         MODESET KEYADDR=DXUKEY,WORKREG=14 ASSUME USER KEY     @ZA07712
         CLI   K0(RC),XLBLKCT           IS THIS AN ACTIVE BLK CT EXIT-
         BE    ETI01200                 ..BR IF YES
         CLI   K0(RC),XLBLKCT+LASTNTRY  IS 'LAST ENTRY' IND ALSO ON-
         BE    ETI01200                 ..BRANCH IF YES
         TM    K0(RC),LASTNTRY          IS THIS THE LAST LIST ENTRY-
         LA    RC,K4(,RC)               INCREMENT POINTER TO NEXT ENTRY
         BO    ETI01300                 BR IF YES TO ERROR RTN @ZA01338
         B     ETI01100                 ..ELSE BR TO TST FOR VALID EXIT
ETI01200 EQU   *                        ACTIVE BLOCK COUNT EXIT
         L     RC,K0(,RC)               GET EXIT ADDRESS FROM DCB
         LA    RC,K0(,RC)               ZERO THE HI-ORDER BYTE
         LTR   RC,RC                    IS EXIT ADDR ZERO-
         BZ    ETI01300                 BR IF YES TO ERROR RTN @ZA01338
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
****           A VALID EXIT EXISTS- INITLZ FOR 'SYNCH' TO USER
*
         LR    RET,RF                   SAVE TRAILER LBL BLK CT  Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  IND THAT USER EXIT TAKEN Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
         LR    RDCB,RET                 SAVE TRAILER LBL BLK CT  Y02082
*                                                                Y02082
         IECRES UEXIT,REG0=(RET),REG1=DXUDCBAD,EXITAD=(RC),      Y02082*
               STM=(2,12,DXXPREFX)                               Y02082
         LR    RET,RDCB                 RESTORE TRLR LBL BLK CT  Y02082
         L     RDCB,DXUDCBAD            PT TO CALLER'S DCB       YM3005
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME CALLER'S KEY    YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3005
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM3005
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE OFLGS FIELD       YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FROM USER EXIT
         LA    RD,EABD148               INTERNAL ERROR CODE IN CASE
*                                       ..BLOCK COUNT IS UNACCEPTABLE
         LTR   RF,RF                    IS THE USER'S RET CODE ZERO-
         BNZ   ETI01400                 BR IF NO TO CONTINUE   @ZA01338
ETI01300 EQU   *                                               @ZA01338
         LA    RET,K16                  RETURN OFFSET          @ZA01338
         MODESET EXTKEY=DATAMGT         DATA MANAGMENT KEY     @ZA01338
         DMABCOND (RD),ABEND2R,RETURN=MOD2R2R                  @ZA01338
*
***********************************************************************
*              TEST FOR USER LABEL PROCESSING                         *
***********************************************************************
*
ETI01400 EQU   *                        TEST FOR USER LABELS
         ST    RPARC,DXREG0             SAVE REGISTER 7         SA55619
         TM    DCBOFLGS,DCBORDBK        IS THIS 'READBACK' MODE SA55619
         BNO   ETI01450                 BRANCH IF NOT           SA55619
         CLI   DXVOLSEQ+K1,K1           LAST READBACK VOL        Y02134
         BH    ETI01456                 BRANCH IF NOT EOF        Y02134
         B     ETI01455                 SET SWITCH              SA55619
ETI01450 BAL   R7,ETI02150              TEST FOR E-O-F          SA55619
         BNE   ETI01456                 BRANCH NOT E-O-F         Y02134
ETI01455 MVC   DXREG1+K1(K3),AEOF       SET SWITCH              SA55619
ETI01456 L     RPARC,DXREG0             RESTORE REGISTER 7      SA55619
         TM    JFCBLTYP,JFCBUL          WERE USER LABELS SPECIFIED-
         BNO   ETI01900                 ..BR IF NOT TO POSITION TAPE
         TM    DCBMACRF,DCBMEXCP        IS THIS AN EXCP DCB-
         BNO   ETI01500                 ..BR IF NOT
         TM    DCBMACRF,DCBMFOUN        IS THERE A FOUNDATION EXT-
         BZ    ETI01900                 ..BR IF NOT
ETI01500 EQU   *                        NOT EXCP
         L     RC,DCBEXLST              LD EXIT LIST ADDR FROM THE DCB
         LA    RC,K0(,RC)               ZERO HI-ORDER BYTE OF EXIT LIST
         LTR   RC,RC                    IS THERE A DCB EXIT LIST-
         BZ    ETI01900                 ..BR IF NOT TO POSITION TAPE
         CLC   DXREG1+K1(K3),AEOF       IS THIS E-O-F           SA55619
         BNE   ETI01600                 BR IF NO (EOV)         @ZA01342
         L     R1,DXDSABAD              GET CURRENT DSAB       @ZA01342
         USING DSAB,R1                                         @ZA01342
         L     R1,DSABFCHN              GET NEXT DSAB          @ZA01342
         LTR   R1,R1                    IS THERE ANOTHER DSAB? @ZA01342
         BZ    ETI01650                 NO,BR (EOF)            @ZA01342
         L     R1,DSABTIOT              GET NEXT TIOT ENTRY    @ZA01342
         CLI   TIOEDDNM-TIOENTRY(R1),BLANK IS DDNAME BLANK?    @ZA01342
         BNE   ETI01650                 NO,BR (EOF)            @ZA01342
         TM    TIOELINK-TIOENTRY(R1),TIOESYIN+TIOESYOT IS IT   @ZA01342
*                                       A SPOOLED DATA SET?    @ZA01342
         BM    ETI01650                 YES,BR (EOF)           @ZA01342
         TM    DCBOFLGS,DCBOUNLK        UNLIKE CONCATENATION?  @ZA01342
         BO    ETI01650                 YES,BR (EOF)           @ZA01342
         L     RF,TIOESTTB-TIOENTRY(R1) GET CONC UCB ADDR      @ZA01342
         LA    RF,K0(RF)                CLEAR HIGH ORDER BYTE  @ZA01342
         LTR   RF,RF                    DUMMY DATA SET?        @ZA01342
         BZ    ETI01650                 YES, BR (EOF)          @ZA01342
         XC    DXREG1+K1(K3),DXREG1+K1  CLEAR EOF INDICATOR    @ZA01342
ETI01600 EQU   *                        EOV LABEL PROCESSING   @ZA01342
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER'S KEY     Y02082
         CLI   K0(RC),XLIUTL            IS THERE A TRAILER LABEL ENTRY-
         BE    ETI01800                 ..BR IF YES TO PROCESS USER LBL
         CLI   K0(RC),XLIUTL+LASTNTRY   IS 'LAST ENTRY' IND ALSO ON
         BE    ETI01800                 ..BR IF YES TO PROCESS USER LBL
         TM    K0(RC),LASTNTRY          IS THIS LAST ENTRY      SA55619
         LA    RC,K4(,RC)               INCR POINTER            SA55619
         BNO   ETI01600                 NO,CHECK NEXT ENTRY     SA55619
         CLC   DXREG1+K1(K3),AEOF       IS THIS E-O-F           SA55619
         BE    ETI01900                 YES, POSITION TAPE      SA55619
         L     RC,DCBEXLST              NO,GET EXIT LIST        SA55619
         LA    RC,K0(,RC)               ZERO HIGH ORDER BYTE    SA55619
ETI01650 EQU   *                        EOF LABEL PROCESSING   @ZA01342
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER'S KEY     Y02082
         CLI   K0(RC),XLDEFSL           IS 'DEFERRED USER TRAILER
*                                       ..LABEL PROCESSING' SPECIFIED-
         BE    ETI01700                 ..BR IF YES TO TEST FOR EOF
         CLI   K0(RC),XLDEFSL+LASTNTRY  IS 'LAST ENTRY' IND ALSO ON-
         BE    ETI01700                 ..BR IF YES TO TEST FOR EOF
         TM    K0(RC),LASTNTRY          IS THIS THE LAST LIST ENTRY-
         LA    RC,K4(,RC)               INCREMENT POINTER TO NEXT ENTRY
         BNO   ETI01650                 BR IF NOT TO CKECK NEXT ENTRYSA
         L     RC,DCBEXLST              GET EXIT LIST ADDR      SA55619
         LA    RC,K0(,RC)               ZERO HIGH ORDER BYTE    SA55619
         CLC   DXREG1+K1(K3),AEOF       IS THIS E-O-F           SA55619
         BE    ETI01600                 BR IS YES               SA55619
         B     ETI01900                 ..ELSE BR TO POSITION TAPE
*
*****          IF 'DEFERRED USER LABEL PROCESSING' WAS SPECIFIED AND
*****          EOF HAS OCCURRED, DEFER PROCESSING UNTIL 'CLOSE' OR
*****          'TCLOSE.
*****          NOTE- THE TAPE IS LEFT AT THE INTERBLOCK GAP PRECEDING
*****          USER TRAILER LABEL 1 WHEN DEFERRED USER LABEL PROCESSING
*****          IS SPECIFIED.
*
ETI01700 EQU   *                        TEST FOR EOF
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         CLC   DXREG1+K1(K3),AEOF       IS THIS E-O-F           SA55619
         BE    ETI02100                 ..BR IF YES- DO NOT PROCESS UL
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       YM7387
*
*****          IF A VALID EXIT ADDR EXISTS, EXIT TO PROCESS USER LABELS
*
ETI01800 EQU   *                        CHECK FOR VALID EXIT
         LA    RF,MOD2R2T               PT TO ID/TTR OF USER LABEL MOD
         SR    RET,RET                  LD BR TABLE OFFSET FOR THAT MOD
         L     RC,K0(,RC)               LOAD EXIT ADDRESS FROM DCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    RC,K0(,RC)               ZERO THE HI-ORDER BYTE
         LTR   RC,RC                    DOES AN EXIT ADDRESS EXIST-
         BNZ   ETI02600                 ..BR IF YES- PROCESS USER LBLS
*
***********************************************************************
*              POSITION TAPE BEYOND LABELS                            *
***********************************************************************
*
ETI01900 EQU   *                        POSITION TAPE
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    RD,EABD150               INTERNAL ERROR CODE IN CASE OF
*                                       ..POSITIONING ERROR
         MVC   DXCCW1,ABSFCCW           INITLZ CCW FOR 'BACKSPACE FILE'
         TM    DCBOFLGS,DCBORDBK        IS THIS READ BACKWARD MODE-
         BNO   ETI02000                 ..BRANCH IF NOT
         BAL   RC,ETI02800              BACKSPACE PAST HEADER LABELS
         MVI   DXCCW1,CCWNOP            INITLZ CCW FOR 'NOP' COMMAND
         BAL   RC,ETI02800              ISSUE 'NOP' TO TAPE DRIVE
         BAL   RC,ETI02750              ISSUE SENSE COMMAND     XA01537
         TM    DXCCW3+K1,UCBLDPT        IS TAPE AT LOAD PT      XA01537
         BO    ETI02100                 ..BR IF YES TO CONTINUE
ETI02000 EQU   *                        NOT AT LOAD POINT
         MVI   DXCCW1,CCWFSF            INITLZ CCW FOR 'FWD SPACE FILE'
         OI    DXCCW1+K4,CCWCMDCH       CHAIN TO 'NOP' COMMAND
         BAL   RC,ETI02800              FSF TO END OF DATA SET (READ
*                                       ..FWD) OR PRECEDING HEADER
*                                       ..LABEL (RDBACK)
         B     ETI02100                 BR TO CONTINUE PROCESSING
*
***********************************************************************
*              DETERMINE WHETHER EOV OR EOF HAS OCCURRED              *
***********************************************************************
*
*****          RESTORE REGISTERS AND WORK AREA UPON RETURN FROM
*****          NSLETRLI
*
ETI02050 EQU   *                        RETURN FROM NSLETRLI
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OC    DCBOFLGS,DCBOFLGS        TOUCH THE USER'S MEMORY  Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3005
         MVI   DXECB,K32                RESTORE DXECB          @ZA13589
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM3005
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE OFLGS FIELD       YM3005
         LR    RES,RWTGC                RESTORE RESIDENT RTN ADDRESS
         LA    RWTGC,DXXENTRY           RESTORE CURRENT ENTRY ADDRESS
         MVC   DXXMODNM(L'IFG055NM),IFG055NM  MOVE IN 'IFG055'   YM3271
         MVI   DXRESIND,K0              RESET RES RTN INDICATORS M0110
ETI02100 EQU   *                        BSF
         MVC   DXCCW1,ABSFCCW           INITLZ CCW FOR BACKSPACE FILE
         MVC   DXCCW7+K4(K4),SRTEFSCT   SAVE SEQ CT/ NO. IN WORK AREA
         LA    RF,MOD2R2X               PT TO ID/TTR OF EOD MODULE
         SR    RET,RET                  LD BR TABLE OFFSET FOR THAT MOD
         TM    DCBOFLGS,DCBORDBK        IS THIS 'READBACK' MODE-
         BO    ETI02400                 ..BR IF YES TO READBACK RTN
         ST    RPARC,DXREG0             SAVE REGISTER 7         SA55619
         BAL   R7,ETI02150              TEST FOR E-O-F          SA55619
         L     RPARC,DXREG0             RESTORE REGISTER 7      SA55619
         BE    ETI02600                 BRANCH IF ALL VOLS      SA55619
*                                       BEEN PROCESSED          SA55619
         B     ETI02300                 CONTINUE PROCESSING     SA55619
*
*****          READ FORWARD TESTING FOR EOV
*
ETI02150 EQU   *                                                SA55619
         MVC   DXCCW7(L'DXVOLSEQ),DXVOLSEQ SAVE VOL SEQ          Y02134
         CLC   JFCBNVOL,DXVOLSEQ+K1     CHECK FOR EOF            Y02134
         BCR   13,R7                    ..BRANCH IF YES         SA55619
*
*****          PERFORM POSITIVE CHECK FOR END-OF-FILE IF ON OTHER
*****          THAN THE LAST VOLUME OF A MULTI-VOLUME DATA SET.
*
         TM    JFCOPTCD,JFCALLOW        DO WE BYPASS EOF PROCESSING-
         BCR   1,R7                     ..BRANCH IF YES         SA55619
         CLC   VOLLABI(K3),AEOF         TEST FOR 'E-O-F' LABEL-
         BR    R7                       RETURN                  SA55619
*
*****    READ BACKWARD TESTING FOR EOF
*
ETI02400 EQU   *                        TEST FOR READBACK
         CLI   DXVOLSEQ+K1,K1           LAST VOL ON READBACK     Y02134
         BE    ETI02600                 BRANCH ON EOF READBACK   Y02134
         EJECT
***********************************************************************
*              END-OF-VOLUME PROCESSING                               *
***********************************************************************
*                                                                A46383
ETI02300 EQU   *                        EOV PROCESSING           Y02134
*                                                                Y02134
         LA    RF,MOD2R2V               PT TO ID/TTR OF POSITIONING MOD
         SR    RET,RET                  LD BR TABLE OFFSET FOR THAT MOD
*                                                                M0110
*****          DETERMINE WHETHER OR NOT SMF PROCESSING IS        M0110
*****          REQUIRED                                          M0110
*                                                                M0110
         TM    DXXPATHS,WTGSMF          IS SMF PROCESSING REQ'D- A38013
         BNO   ETI02600                 ..BR IF NOT- XCTL TO VOL A38013
*                                       ..POSITIONING FUNCTION   A38013
         LA    RF,MOD2RSMF              PT TO SMF MODULE'S ID/TTR
         LA    RET,K4                   LD BR TABLE OFFSET FOR THAT MOD
         MVC   DXRETMOD(K5),MOD2R2V     MOVE POSITIONING MOD ID/TTR
*                                       ..INTO RETURN ADDRESS SAVE AREA
         EJECT
***********************************************************************
*              EXITS                                                  *
***********************************************************************
*
*****          EXIT TO THE NEXT MODULE IN THE STRING
*
ETI02600 EQU   *                        EXIT
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*                                  INVOKE IECRES MACRO TO 'XCTL' Y02080
         SPACE 2
*
*****          XCTL TO 'CLOSE' FOLLOWING DEFERRED NSL PROCESSING
*
ETI02700 EQU   *                        'XCTL' TO CLOSE
         LA    RWTG,DXXMODNM            RELOAD WTG PTR         @ZA01503
         MVC   WTGMODNM,IFG0556B        MOVE ALIAS OF 'CLOSE'    M0110
*                                       ..NSL-PROCESSING MODULE INTO
*                                       ..THE WTG TABLE
         MVC   WTGMODEP+K1(K3),MOD2R6B+K2 MOVE ADDR FOR THAT MOD Y02080
*                                       ..INTO PSEUDO BLDL LIST  M0110
         LA    RF,DXCCW12               PT TO THE XCTL WORK AREA M0147
         LA    RET,K4                   LOAD TABLE OFFSET FOR IFG0202B
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=DIRECT               Y02080
*                                       XFER BY EPA TO IFG0202B  Y02080
         EJECT
***********************************************************************
*              SUBROUTINES                                            *
***********************************************************************
*
*        SUBROUTINE TO ISSUE SENSE COMMAND                      XA01537
*                                                               XA01537
ETI02750 EQU   *                                                XA01537
         LA    RET,DXCCW3               DATA AREA FOR SENSE     XA01537
         ST    RET,DXCCW1               PUT ADDR IN CCW         XA01537
         MVI   DXCCW1,CCWSENSE          MOVE IN SENSE COMMAND   XA01537
         MVI   DXCCW1+K7,K2             READ 2 SENSE BYTES      XA01537
*                                                               XA01537
*****          CLOSED SUBROUTINE TO PERFORM I/O OPERATIONS
*****          ENTRY TO THE ROUTINE IS VIA A 'BAL  RC,ETI02800'
*
ETI02800 EQU   *                        I/O SUBROUTINE
         OI    DXATALL,DXATFC           FORCE CLOSE ON ERROR     YM7099
         EXCP  DXIOB                    INITIATE I/O OPERATION
         IECRES WAIT                    INVOKE IECRES MACRO TO 'WAIT'
         TM    DXECB,ECBNOERR           TEST FOR AN UNUSUAL I/O CONDITI
         BCR   1,RC                     ..BR IF NOT- RETURN TO CALLER
         TM    IOBSENS1,UCBLDPT         IS THE TAPE AT 'LOAD POINT'-
         BCR   1,RC                     ..BR IF YES- RETURN TO CALLER
*                                       ..ELSE DROP THROUGH TO ERR RTN
         SPACE 2
***********************************************************************
*              ERROR PROCESSING                                       *
***********************************************************************
*
ETI02900 EQU   *                        ERROR PROCESSING
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         DMABCOND (RD),ABEND2R          EXIT TO PROB DETERMINATION RTN
         SPACE 3
***********************************************************************
*              CONSTANTS                                              *
***********************************************************************
*
ABSFCCW  CCW   X'2F',0,X'20',1          BSF CMD, SILI FLAG, LNG EQ 1
NOPCCW   DC    X'0300000020000001'      NOP CMD, SILI FLAG, LNG EQ 1
ARDCCW   DC    X'00000050'              NO FLAGS, LNG EQ 80 FOR STD LBL
IFG0556B DC    CL8'IFG0556B'            ALIAS OF CLOSE NSL MOD   M0110
AVOL     DC    C'VOL'                   VOLUME LABEL IDENTIFIER
UVOL     DC    C'UVL'                   USER VOLUME LABEL IDENTIFIER
AEOF     DC    C'EOF'                   END-OF-FILE LABEL IDENTIFIER
IFG055NM DC    C'IFG055'                PREFIX FOR XCTL  (EOV)   YM3271
         EJECT
***********************************************************************
*              XCTL TABLE                                             *
***********************************************************************
*
XCTLTB2R XCTLTABL ID=(ABEND2R,0P,MOD2R2T,2T,MOD2R2V,2V,MOD2R2X,2X,     C
               MOD2RSMF,3B,MOD2R6B,6B,MOD2R2R,2R),SVC=055,     @ZA01338C
               BRT=YES,LENGTH=                                   Y02080
         SPACE 2
         IECDSECS CVT,                                                 C
               TCB,                                                    C
               RB,                                                     C
               TIOT,                                                   C
               DCB,                                                    C
               DEB,                                                    C
               UCB,                                                    C
               MAIN,                                                   C
               WTG,                                                    C
               PREFX,                                            Y02080*
               RRPL,                                             Y02144*
               DSAB,                                           @ZA01342*
               EXPAND=YES
         IECEQU ,                       INVOKE OPEN/CLOSE/EOV EQUATES
         SPACE 2
         END
