         TITLE 'IFG0200V - 2ND INITIAL LOAD AND DIRECT ACCESS STRING'
IFG0200V CSECT
***********************************************************************
*                                                                     *
*          VS1 RELEASE 02 CHANGES                                     *
*0000509000,510431,510475,348689,509964,509968,510988            XM1037
*0000                                                            X02989
*0000                                                            XM1010
*          VS2 RELEASE 01 CHANGES                                     *
*0000504600,505100                                               YM3055
*                                                                     *
*                                                                     *
*          VS2 RELEASE 03.7 CHANGES/DELETIONS                         *
*THIS APAR IS ONLY RESHIPPING THIS MODULE. NO CODE WAS CHANGED @ZA12930
*                                                                     *
*          VS2 RELEASE 03 CHANGES/DELETIONS                           *
*0000751120,751700-778000                                      @ZA04398
*0000535000,535500                                             @ZA06778
*0000                                                          @ZA07590
*0000780000-790000                                             @ZA08312
*0000                                                          @ZA10537
*                                                                     *
*          RELEASE 21 DELETIONS/CHANGES                               *
*0000366000-368000,532000-534000,798000,802000-810000,962000     M0171
*0000208000,238000-254000,346000,352000,380000,526000,538000,    A38013
*0000626000-628000,672000-688000,758000,804000,814000,818000,    A38013
*0000856000,964000                                               A38013
*0000264000,376000,388000,396000,404000-436000,440000-442000,    A42112
*0000458000,956000-960000                                        A42112
*0000164000,342000,510000,516000,518000,537000-538000,586000,    M0115
*0000596000,598000-624000,750600,752000-762000,838000,           M0115
*0000846000-848000,852000,858000-870000                          M0115
*0000                                                            M2557
*0000                                                            A51461
*0000374500-376500,                                             A48649
*                                                                     *
* MODULE NAME = IFG0200V                                              *
*                                                                     *
* DESCRIPTIVE NAME = 2ND INITIAL LOAD AND DIRECT ACCESS STRING        *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE INITIALIZATION FUNCTION.                                   *
*       THIS FUNCTION STARTS IN MODULE IGC00020.                      *
*    CLOSE DA READ DSCB FUNCTION.                                     *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0200V - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             INITIAL ENTRY--                                         *
*                IGC00020 - CONTINUE PROCESSING INITIALIZATION        *
*                           FUNCTION.                                 *
*             SECOND ENTRY--                                          *
*                IFG0200P - PROCESS DA READ DSCB FUNCTION.            *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0200W - PROCESS ACCESS METHOD EXECUTOR INTERFACE FUNCTION*
*         IFG0200T - IF VSAM ACB                                      *
*         IFG0200S - IF VSAM CI                                       *
*         IFG0200U - IF VTAM ACB                                      *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*         IFG0202L - IF ERROR IN VSAM ACB                             *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING TCB,RET
         USING UCBOB,RUCB
         USING CVT,RD
         USING TIOENTRY,RTIOT
         USING DEB,RDEB
         USING WTG,RWTG
         USING WTGENTRY,RWTGC
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         B     CIN01900(RET)            USE BRANCH TABLE
CIN01900 EQU   *
         B     CIN02000                 ENTRY FROM INITIAL LOAD
         B     CIN03600                 FROM P. D. MOD/READ DSCB  M0115
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE INITIALIZATION FUNCTION.                                   *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    DETERMINE WHICH STRING IS TO CONTINUE PROCESSING.                *
*    MOVE JFCB INTO THE WORKAREA.                                     *
*    OBTAIN MAIN STORAGE FOR THE ECBLIST.                             *
*    INTERFACE WITH THE TRACE INITIALIZATION FUNCTION IF OPTIONAL     *
*    TRACE FACILITY IS REQUESTED.                                     *
*    DETERMINE IF SMF DATA SET INFORMATION IS REQUESTED.              *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    WHEN AN SVC 20 OR A CLOSE MACRO-INSTRUCTION IS ISSUED.           *
*                                                                     *
* INPUT -                                                             *
*    A POINTER IN REGISTER 1 TO THE PARAMETER LIST.                   *
*                                                                     *
* OUTPUT -                                                            *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*    THE JFCB IS IN THE WORKAREA.                                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE TAPE ACCESS METHOD EXECUTOR INTERFACE FUNCTION.            *
*    CLOSE UNIT RECORD/TELEPROCESSING FUNCTION.                       *
*    CLOSE DA READ DSCB FUNCTION.                                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH ONE OF THE FOLLOWING INTERNAL CODES--                  *
*       112 -           - INVALID CONTROL BLOCK(S) FOUND.             *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
CIN02000 EQU   *
         L     RPAR,WTGPREFX            GET ADDR BASE PREFX      Y02080
         L     RPAR,IECUPRML-IECPREFX(,RPAR) ADDR PROT PARM LIST Y02080
         LR    RPARC,RPAR               SET UP PARM LIST
         LA    RWTGC,WTGENTRY-WTG(,RWTG)  INITIALIZE CURR WTG POINTER
CIN02100 EQU   *
         L     RDCB,PLISTDCB(,RPARC)    GET DCB ADDR
         L     RCORE,WTGCORE-1          GET WORKAREA ADDR
         LA    RCORE,0(RCORE)           CLEAR HIGH ORDER BYTE
         LTR   RCORE,RCORE              IS WORKAREA PRESENT
         BZ    CIN02800                 NO, GO CHECK LAST ENTRY
         LM    RTIOT,RET,DXREG9         RESTORE REG 9 THRU 14    Y02080
         MVC   WTGIDTTR,DXRETMOD        SET NEXT MODULE          Y02080
         CLC   WTGIDTTR(K2),PDMOD       WAS ERROR DETECTED       M0115
         BNE   CIN02102                 NO PROCESSING FOR P.D    Y02080
         MVC   DXRETMOD,EXITMOD         SET RET FROM P.D.        Y02080
         MVI   DXRETCOD,K4              RET TO 202L OFFSET       Y02080
         MVC   DXCALLID,INITMOD         SET 0V AS CALLING MOD    YM6507
         B     CIN02800                 PROC NEXT ENTRY          Y02080
CIN02102 EQU   *                        TEST FOR JES ACB         Y02080
*   TEST IF JES ACB
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP
         BO    CIN02110                 YES,GO CHECK FOR SPOOLED DCB
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB
         BZ    CIN02110                 NO, GO TO DCB PROCESSING
         USING IFGACB,RDCB              SET BASE FOR ACB         X02989
*                                                                Y02004
* DO NOT READ JFCB FOR VTAM ACB                                  Y02004
*                                                                Y02004
         CLI   ACBAMETH,ACBVTAM         IS ACB FOR VTAM?         YM3011
         BE    CIN02550                 BR IF YES                Y02004
*                                                                Y02004
         CLI   ACBAMETH,ACBVSAM         IS ACB FOR VSAM          X02989
         BNE   CIN02105                 BR IF NO                 X02989
         TM    ACBINFL,ACBCAT+ACBSCRA+ACBUCRA  VSAM CATLG/CRA? @Y30DSDT
         BZ    CIN02300                 BR IF NO               @Y30DSDT
         TM    DXECB,ECBNOERR           TEST FOR READ JFCB ERROR X02989
         BO    CIN02405                 BR IF NO ERROR           Y02080
         B     CIN02410                 PROC BAD JFCB            Y02080
         USING IHADCB,RDCB              REDEFINE BASE TO DCB     X02989
CIN02105 EQU   *                        TEST FOR SPOOLING        X02989
         TM    TIOELINK,TIOTSPOL        SPOOLED DATA SET         Y02120
         BM    CIN02200                 YES READ JFCB            Y02120
         B     CIN02550                 NO, SKIP READ JFCB       Y02080
*   IS CONTROL BLOCK A SPOOLEED DCB
CIN02110 TM    TIOELINK,TIOTSPOL        SPOOLED DATA SET         Y02120
         BM    CIN02200                 YES, BYPASS READ JFCB    Y02120
*
         LTR   RUCB,RUCB                TEST FOR NULL DATA SET
         BZ    CIN02550                 BRANCH IF YES            Y02080
CIN02200 EQU   *
         TM    DEBOPATB,DEBOPOUT        IS IT OPEN FOR INPUT     A48649
         BNZ   CIN02250                 BRANCH IF NOT            A48649
         NI    DCBOFLGS,TRLRFLG         TURN OFF TRAILER SWITCH  A48649
CIN02250 EQU   *                        TEST FOR SYSTEM TASK     A48649
         CLC   TIOEJFCB(K3),ZEROS       IS THIS SYSTEM TASK
         BE    CIN02550                 BR YES,DO NOT READ JFCB  Y02080
CIN02300 EQU   *                        READ JFCB                Y02080
*                                                                Y02080
*        READ JFCB                                               Y02080
*                                                                Y02080
         LA    RET,TIOEJFCB             PT TO JFCB ADDR          Y02080
         IECRES LOCJFCB,(RET)           GET ADDR JFCB            Y02080
         MVC   DXJBF,0(RET)             MOVE JFCB TO WORK AREA   Y02080
         MVI   DXECB,K32                SET NO ERROR             Y02080
         TM    JFCBMASK+K6,JFCTRACE     IS TRACE ROUTINE DESIRED?Y02080
         BZ    CIN02405                 NO,CONTINUE PROCESSING   Y02080
         OI    WTGPATHS+K1,WTGTRACE     YES, TURN ON TRACE INDR  Y02080
CIN02405 EQU   *                        CONTINUE                 X02989
         OI    JFCBMASK+K4,JFCMJMOD     INDICATE JFCB READ       Y02120
         TM    JFCDSRG2,JFCORGAM        IS DATA SET VSAM         X02989
         BNO   CIN02500                 BRANCH IF NO             XM1037
         TM    DEBFLGS1,DEBCIFLG        IS THIS ISAM INTERFACE   XM1037
         BO    CIN02500                 BRANCH IF YES            XM1037
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    XM1037
         BO    CIN02407                 BR IF YES, NOT ACB       XM1037
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  XM1037
         BNO   CIN02407                 BRANCH IF NO             XM1037
         CLI   ACBAMETH-IFGACB(RDCB),ACBVSAM IS ACB FOR VSAM     Y02134
         BE    CIN02500                 BR TO NEXT ENTRY         Y02134
CIN02407 EQU   *                        RESET VSAM BIT           X02989
         NI    JFCDSRG2,ALLBITS-JFCORGAM RESET VSAM BIT IN JFCB  XM1037
         B     CIN02500                 PROCESS TAPE OR D.A.
CIN02410 EQU   *
         XC    DXJBF,DXJBF              CLEAR JFCB AREA
         LA    R0,CABD111               ERR- READ JFCB
*                                                                X02989
*  IF VSAM ACB, SET ACB ERROR FLAGS                              X02989
*                                                                X02989
         USING IFGACB,RDCB              DEFINE BASE FOR ACB      X02989
         MVI   ACBERFLG,VSOJFBER        SET READ JFCB ERROR FLAG X02989
         MVI   JFCDSRG2,JFCORGAM        SET VSAM DATA ORG FLAG   X02989
         LA    RET,DXIOB                LD ADDR OF WORK AREA     XM1037
         USING IDAPDPRM,RET             SET BASE FOR PARM LIST   XM1037
         XC    IDAPDPRM(PDPLNGTH),IDAPDPRM ZERO PARAMETER LIST   X02989
         MVI   PDPCALL,PDPCLOSE         INDICATE CALLER          X02989
         MVI   PDPCODE,VSJFBERR         SET INTERNAL ERROR CODE  X02989
         MVI   PDPFUNC,VSCLOSE          LD FUNCTION CODE         X02989
         ST    RDCB,PDPACB              LD ADDR OF ACB           X02989
         ST    RTIOT,PDPTIOT            LD ADDR OF TIOT ENTRY    X02989
         LR    R1,RCORE                 LD PTR TO WORK AREA      X02989
         IECRES LOAD,BRANCH=NO,PREFIX=WTGPREFX,MODNM=VSPDMOD     Y02080X
                                        LOAD VSAM P.D. MOD       Y02080
         L     RF,WTGMODEP              GET EPA                  Y02080
         XC    WTGMODEP,WTGMODEP        CLEAR NEXT MOD ADDR      Y02080
         BALR  RET,RF                   BR TO VSAM PD ROUTINE    X02989
         MVI   JFCDSRG2,JFCORGAM        SET VSAM INDICATOR       X02989
         NI    ACBOFLGS,X'FF'-DCBOBUSY  TURN OFF BUSY BIT        X02989
         USING IHADCB,RDCB              REDEFINE BASE TO DCB     X02989
         USING TCB,RET                                           XM1037
         MVC   WTGIDTTR,EXITMOD         LD ID TTR OF EXIT MOD    X02989
         LA    RET,K4                   P.D. ENTRY TO LAST LOAD  Y02080
         ST    RET,DXREGE               SET FOR P.D.             Y02080
         B     CIN02800                 BR TO GET NEXT ENTRY     X02989
CIN02500 EQU   *
         TM    JFCBMASK+K6,JFCTRACE     OPTIONAL TRACE FACILITY
         BZ    CIN02550                 BRANCH IF NOT            A38013
         OI    WTGPATHS+K1,WTGTRACE     IND. OPTIONAL TRACE
CIN02550 EQU   *                        TEST FOR SMF             A38013
         L     RD,CVTPTR                GET CVT ADDR             YM3055
         L     RF,CVTSMCA               GET ADDR OF SMCA         A38013
         LTR   RF,RF                    TEST FOR AN SMF SYSTEM   A38013
         BZ    CIN02600                 BRANCH IF NO             A38013
         USING SMCABASE,RF                                       A38013
         TM    SMCAOPT,SMCADSA          IS DS INFO DESIRED       A38013
         BNO   CIN02600                 BRANCH IF NO             A38013
         TM    SMCAMISC,SMCAUSER+SMCAMAN  SYS1.MAN RECORD NEEDED A38013
         BNO   CIN02600                 BRANCH IF NO             A38013
         DROP  RF                                                A38013
         L     RET,DXTCBADR             CURRENT TCB ADDR         Y02080
         L     RF,TCBTCT                GET PTR TO TCT           A38013
         LA    RF,0(RF)                 CLEAR HIGH ORDER BYTE  @ZA07590
         LTR   RF,RF                    TEST FOR TCT             A38013
         BZ    CIN02600                 BRANCH IF NO TCT         A38013
         OI    WTGPATHS,WTGSMF          IND. SMF REQUESTED       A38013
CIN02600 EQU   *
         XR    RET,RET                  SET INIT ENTRY TO MOD    Y02080
         TM    DCBMACRF,DCBMEXCP        CHK IF EXCP              Y02080
         BO    CIN02620                 BY - YES                 Y02080
         TM    DCBDSORG+K1,ACBDORGA     CHK IF ACB               Y02080
         BNO   CIN02620                 NO THEN BR PROC DCB      Y02080
         USING IFGACB,RDCB              EST ACB ADDRESSABILITY   Y02080
         LA    RF,VSAMMOD               VSAM MODULE              Y02080
         CLI   ACBAMETH,ACBVSAM         CHK IF VSAM ACB          Y02080
         BNZ   CIN02610                 NO,CHECK FOR VTAM      @ZA06778
         OI    JFCDSRG2,JFCORGAM        INDICATE VSAM IN JFCB  @ZA06778
         B     CIN02700                 SET NEXT MODULE        @ZA06778
CIN02610 LA    RF,VTAMMOD               VTAM STRING            @ZA06778
         CLI   ACBAMETH,ACBVTAM         VTAM ACB?                YM3011
         BE    CIN02700                 Y - SET NEXT MOD         Y02080
         USING IHADCB,RDCB              EST DCB ADDRESSABILITY   Y02080
CIN02620 EQU   *                        TEST FOR SPOOLING        Y02080
         LA    RET,K8                   OFFSET FOR SPOOLED D.S.  Y02080
         LA    RF,AMMOD                 NORMAL A.M. MODULE       Y02080
         TM    TIOELINK,TIOTSPOL        CHK IF SPOOLED D.S.      Y02080
         BM    CIN02700                 Y - SET NEXT MOD         Y02080
         SPACE 1                                                 Y02080
* SINCE IT'S NOT A SUBSYSTEM CI IT MUST BE AN ISAM - CI          Y02080
         XR    RET,RET                  SET INIT ENTRY           Y02080
         LA    RF,VSIIMOD               ISAM - CI MOD            Y02080
         TM    DEBFLGS1,DEBCIFLG        CHK IF ISAM CI           Y02080
         BO    CIN02700                 Y - SET NEXT MOD         Y02080
         SPACE 1                                                 Y02080
         LA    RF,AMMOD                 NORMAL A.M. MODULE       Y02080
         LTR   RUCB,RUCB                DUMMY DATA SET?          Y02080
         BZ    CIN02700                 Y - SET NEXT MOD         Y02080
         SPACE 1                                                 Y02080
         TM    UCBTBYT3,UCB3DACC        CHK IF DA                Y02080
         BNO   CIN02700                 NO - SET MOD 200W        Y02080
         LA    RET,K4                   SET OFFSET ENTRY         Y02080
         LA    RF,INITMOD               SET THIS MOD AS NEXT     Y02080
CIN02700 EQU   *                        SET WTG TABLE ID         Y02080
         MVC   WTGIDTTR,0(RF)           SET NEXT MOD FOR ENTRY   Y02080
         STM   R0,R1,DXREG0             SAVE REGS 0-1            Y02080
         STM   RTIOT,RET,DXREGSAV       SAVE REGS 9-14           Y02080
CIN02800 EQU   *
         TM    PLISTOPT(RPARC),LASTNTRY  CK LAST ENTRY ON LIST
         LA    RWTGC,K8(,RWTGC)         NEXT WTG ENTRY
         BO    CIN02900                 BRANCH IF LAST ENTRY
         LA    RPARC,K4(,RPARC)         NEXT DCB ENTRY
         B     CIN02100                 BRANCH TO NEXT ENTRY
CIN02900 EQU   *
         L     RES,K4(RWTGC)            LOAD RES TO POINT TO RES. RTN
         L     RPARC,WTGPREFX           GET ADDRESS OF PREFIX    Y02080
         USING IECPREFX,RPARC                                    Y02080
         L     RPARC,IECUPRML           GET MOVED PARM LIST PTR  Y02080
         USING USERPRML,RPARC                                    Y02080
         LA    RWTGC,WTGENTRY-WTG(,RWTG)  INITIALIZE WTG ENTRY ADDR
CIN03300 EQU   *
         L     RCORE,WTGCORE-1          GET WORK AREA ADDR
         LA    RCORE,0(RCORE)           CLEAR HIGH ORDER BYTE
         LTR   RCORE,RCORE              WORK AREA ADDR PRESENT
         BNZ   CIN03400                 BRANCH IF YES            M0115
         LA    RWTGC,K8(,RWTGC)         GET NEXT ENTRY           M0115
         B     CIN03300                 LOOP BACK TO CHECK NEXT ENTRY
CIN03400 EQU   *
         LM    RTIOT,RET,DXREGSAV       RELOAD REG 9 THRU 14     M0115
         LM    R0,R1,DXREG0             RELOAD REG 0 AND 1       M0115
         TM    WTGPATHS+K1,WTGTRACE     OPTIONAL TRACE ON
         BZ    CIN04100                 BRANCH IF NO TO XCTL     M0115
         XC    DXDSCB,DXDSCB            CLEAR WORKAREA           M0115
         XC    DXCCW12,DXCCW12          CLEAR TEMP SAVE AREA     M0115
         B     CIN04100                 BRANCH TO PROCESS        M0115
*                                                     SERIALLY   M0115
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE DA READ DSCB FUNCTION.                                     *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    READ DSCB INTO THE WORKAREA FOR OUTPUT AND USER LABEL PROCESSING.*
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE INITIALIZATION FUNCTION.                                   *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    THE DSCB IS IN THE WORKAREA.                                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE DA ACCESS METHOD EXECUTOR INTERFACE FUNCTION.              *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH ONE OF THE FOLLOWING INTERNAL CODES--                  *
*       86 - 314 ABEND - I/O ERROR READING DSCB.                      *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
CIN03600 EQU   *                        READ DSCB                M0115
         MVI   DXECB,ECBCOD7F           SET ERROR IND. OFF       A38013
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP             @ZA10537
         BZ    CIN03800                 BRANCH IF NOT EXCP     @ZA10537
         TM    TIOELINK,TIOTSPOL        CHECK IF SUBSYS        @ZA10537
         BM    CIN04000                 Y- DON'T READ DSCB     @ZA10537
         TM    DEBOFLGS,K16             IS RELEASE SPECIFIED   @ZA10537
         BO    CIN03800                 YES READ DSCB          @ZA10537
         TM    DCBMCRF1,DCBMDEV       TEST FOR DA DEV DEP SECT @ZA10537
         BZ    CIN04000                 BRANCH IF NOT PRESENT  @ZA10537
*                                                              @ZA10537
CIN03800 EQU   *                                               @ZA10537
         LA    RUCB,0(,RUCB)            CLEAR HI ORDER BYTE
         ST    RUCB,DXDEBUCB            WORK AREA DEB TO PROPER UNIT
         MVC   DXDEBBIN,ACCW3C          ZERO BB                  M0171
CIN03900 EQU   *
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   CIN03925                 BR IF NOT                Y02132
*        READ VIO DSCB FROM SWA                                  Y02132
         MVC   DXDSCB(DSCEXT2-DSCFMTID),VDSDSCB-VDSUCB+L'JFCBDSNM(RUCB)
*                                                                Y02132
         OC    DXDSCB(DSCEXT2-DSCFMTID),DXDSCB IS DSCB ZERO?     Y02132
         BZ    CIN03935                 BR IF YES, I/O ERROR     Y02132
*                                                                Y02132
         XC    DSCEXT2(DSCBEND-DSCEXT2),DSCEXT2 ZERO REMAIN CORE Y02132
*                                                                Y02132
         B     CIN03950                 RESUME PROCESSING        Y02132
CIN03925 EQU   *                        READ DSCB                Y02132
         STM   RC,RD,DXREGC             SAVE REG.
         LR    RC,RDEB                  USE RC FOR WORK REG.     A38013
         LA    RF,K16                   DISPLACEMENT FACTOR
         SR    RC,RF                    DISPLACE TO BEGIN OF DEB
         MVC   DXDAADDR+K1(K7),K1(RC)   MOVE DISK ADDR INTO DXDAADDR
         BAL   RC,CIN04200              BUILD CHANNEL PROGRAM
         LM    RC,RD,DXREGC             RESTORE ECBLIST SIZE COUNTER
         LA    RF,DXDSCB                GET ADDR OF AREA TO READ DSCB
         ST    RF,DXCCW3                STORE IN CCW
         MVI   DXCCW3,CCWMTRD           READ DATA
         EXCP  DXIOB                    READ DSCB
         IECRES WAIT                    WAIT FOR DSCB            M0115
         TM    DXECB,ECBNOERR           PERM I/O ERROR
         MVC   WTGIDTTR,AMMOD           ID TTR OF A. M. MODULE   M0115
         BO    CIN03950                 BR IF NO PERM I/O ERROR  Y02144
CIN03935 EQU   *                        ERROR IN READ DSCB       Y02132
         LA    R0,CABD086               ERR- READ DSCB
         LA    RET,K4                   SET UP FOR BRANCH TABLE  M0115
         DMABCOND (0),PDMOD,RETURN=AMMOD  ABEND MACRO            M0115
CIN03950 EQU   *                        SET AUDIT INDICATORS     Y02144
         OI    DXATDACC,DXATRDDB        DSCB READ                Y02144
CIN04000 EQU   *
         LA    RET,K4                   SET UP FOR BRANCH TABLE  M0115
         MVC   WTGIDTTR,AMMOD           ID TTR OF A. M. MOD.
CIN04100 EQU   *
*
         IECRES LOAD,BRANCH=QUEUED      XCTL TO RESIDENT ROUTINE Y02080
         EJECT
         SPACE 1
**********                  MACRO                            **********
*                                                                     *
         SPACE 1
*          CLOSED SUBROUTINE TO SET UP A CHANNEL PROGRAM
*           TO READ A DIRECT ACCESS DEVICE JFCB OR DSCB
*
*        ENTRY TO THE ROUTINE IS AS FOLLOWS-
*           BAL   RC,CIN04200
*        RETURN TO THE CALLING ROUTINE TAKES PLACE AS FOLLOWS-
*           BR    RC
*
*        CHANNEL CONTROL WORDS ARE SET UP AS FOLLOWS-
*          CCW1  SEARCH = ID   ADDR OF CCHHR  COMM CHAIN  5 CHAR
*          CCW2  TIC           ADDR OF CCW1   COMM CHAIN
*          CCW3  READ DATA     ADDR OF DSCB               LEN DSCB
         SPACE 1
CIN04200 EQU   *
         LA    RD,DXDAADDR+K3           PLACE ADDRESS OF CCHHR INTO
         ST    RD,DXCCW1                FIRST CCW
         LA    RD,DXCCW1                PLACE ADDRESS OF SEARCH CCW
         ST    RD,DXCCW2                INTO TIC CCW
         MVI   DXCCW1,CCWSCHID          SEARCH FOR EQUAL ID OP CODE
         MVC   DXCCW1+K4(K5),ACCW1C     COMMAND CHAIN, 5 CHAR, TIC OP
         MVC   DXCCW2+K4(K5),ACCW2C     COMMAND CHAIN,READ DATA OP CODE
         MVC   DXCCW3+K4(K4),ACCW3C     LENGTH OF THE DSCB
         BR    RC                       RETURN TO CALLER OF SUBROUTINE
         SPACE 1
*                                                                     *
**********                                                   **********
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*                       CONSTANTS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
ZEROS    DC    3X'00'                   3 BYTE OF ZEROS
ACCW1C   DC    X'6000000508'            COMM CHAIN,SILI,5 CHAR,TIC OP
ACCW2C   DC    X'4000000086'            COMMAND CHAIN,READ DATA OP CODE
ACCW3C   DC    X'00000060'              96 CHARACTERS
*
         XCTLTABL ID=(PDMOD,0P,AMMOD,0W,VTAMMOD,0U,EXITMOD,2L,   Y02080X
               VSPDMOD,IDA0192P,VSAMMOD,0T,VSIIMOD,0S,           Y02080X
               INITMOD,0V),SVC=020,BRT=YES,LENGTH=               Y02080
         IDDVDSCB                                                Y02132
TIOTSPOL EQU   X'06'
ACBMJEP  EQU   X'40'
TIOTSPOT EQU   X'02'
*
*
         IECDSECS CVT,TCB,TIOT,DCB,DEB,UCB,MAIN,WTG,SMF,PREFX,   Y02080*
               ACB,IDAPDPRM,RRPL,EXPAND=YES                      Y02144
QM0YWRK  EQU   400                      QMNGRIO WORK AREA SIZE
QM0YREG  EQU   324                      OFFSET TO QM REG SAVE AREA
         IECEQU  AOS=YES
         END
