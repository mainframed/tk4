         TITLE 'IFG0193A                      OPEN INITIAL JFCB PROCESSI
               ING'                                              Y02134
IFG0193A CSECT
***********************************************************************
*                                                                     *
*        VS2 RELEASE 03 DELETIONS/CHANGES                             *
*0000                                                          @ZA02193
*0000506000                                                    @ZA12906
*0000517488                                                    @ZA12942
*A314000-315600,A316400,517488,273146                          @ZA25895
*A506000                                                       @ZA25251
*A36981700,37031700                                            @ZA26878
*D50750037                                                     @ZA26878
*                                                                     *
* MODULE NAME = IFG0193A (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN INITIAL JFCB PROCESSING                     *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. INITIALIZE LAST PLUS NEXT WHERE-TO-GO ENTRY.              *
*                                                                     *
*        2. TURN ON TRACE ROUTINE INDICATOR IF REQUIRED.              *
*                                                                     *
*        3. LOCATE DCB AND START PARALLEL PROCESSING:                 *
*           A. GET CORE STORAGE FOR DEB EXTENSION FOR ALL DCB/ACB'S   *
*           EXCEPT SPOOLED DCB'S;                                     *
*           B. GO TO PROBLEM DETERMINATION IF VSAM ACB IS BEING       *
*           PROCESSED (IDA0192P);                                     *
*           C. GO ISAM INTERFACE MODULE IF ISAM TO VSAM INTERFACE     *
*           (IFG0192I).                                               *
*                                                                     *
*        4. PERFORM ANY PROCESSING FOR AN OPEN OVERRIDE REQUEST       *
*        (LABEL = (,,,IN) OR LABEL = (,,,OUT) IN THE DD STATEMENT).   *
*                                                                     *
*        5. TURN OFF NEGATIVE INDICATOR FOR OPEN ACCESS METHOD        *
*        EXECUTOR IF DIRECT ACCESS WITH RPS.                          *
*                                                                     *
*        6. MERGE DSORG FROM JFCB PRIOR TO SELECTING VOLUME SERIAL    *
*        NUMBER.                                                      *
*                                                                     *
*        7. TEST FOR A VALID VOLUME SEQUENCE NUMBER. WHEN PROCESSING  *
*        STARTS WITH A SELECTED VOLUME OF A PHYSICAL SEQUENTIAL DATA  *
*        SET, THEN THE VOLUME SEQUENCE NUMBER MUST BE LESS THAN OR    *
*        EQUAL TO THE NUMBER OF VOLUMES ALLOCATED.                    *
*                                                                     *
*        8. SET UP PARAMETERS TO MOUNT TAPE AND DA VOLUMES.           *
*                                                                     *
*        9. SET RPS INDICATOR FOR ACCESS METHOD. IF ALL        Z30TSRJ*
*        VOLUMES WILL ACCEPT RPS COMMANDS, AND AT LEAST        Z30TSRJ*
*        ONE IS NON-VIO, SET TO ALLOW RPS COMMANDS.            Z30TSRJ*
*
*        10. ZERO NOT-READY BIT IN UCB FOR 3895 DOCUMENT       @Z30HSRB
*        READER/INSCRIBER DEVICE.                              @Z30HSRB
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0193A FROM:                                        *
*                 IGC0001I FOR NORMAL PROCESSING                      *
*                 IGC0002B FOR NORMAL PROCESSING                      *
*                                                                     *
*    PURPOSE = DETERMINE DEVICE DEPENDENT PROCESSING STRING.          *
*                                                                     *
*    LINKAGE = STANDARD OPEN/CLOSE/EOV INTERFACE.                     *
*                                                                     *
* INPUT = STANDARD OPEN/CLOSE/EOV INTERFACE.                          *
*                                                                     *
* OUTPUT = CONTROL BLOCKS & WORKAREAS INITIALIZED FOR DEVICE          *
*          DEPENDENT PROCESSING. STANDARD OPEN/CLOSE/EOV              *
*          LINKAGE CONVENTIONS USED.                                  *
*                                                                     *
* EXIT-NORMAL = AS FOLLOWS -                                          *
*               IFG0192I - ISAM TO VSAM INTERFACE MODULE              *
*               IFG0196J - FIRST COMMON MERGE MODULE                  *
*               IFG0192A - VSAM STRING                                *
*               IFG0194A - VOLUME SELECT (TAPE - DIRECT ACCESS)       *
*               IFG0192F - VTAM STRING                                *
*               IFG0196V - ACCESS METHOD EXECUTOR                     *
*                                                                     *
* EXIT-ERROR = IFG0190P - PROBLEM DETERMINATION                       *
*              IDA0192P - VSAM PROBLEM DETERMINATION                  *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG0190P,IFG0194A,IFG0196J,IFG0192A,IFG0198N,         *
*               IFG0192I,IFG0196V,IFG0192F,IFG0192P,IFG0195A,         *
*               IFG0195B,IFG0195C,IFG0195D.                           *
*                                                                     *
*    DATA AREAS = SEE PARAMETERS OF IECDSECS MACRO.                   *
*                                                                     *
*    CONTROL BLOCK = SEE PARAMETERS OF IECDSECS MACRO.                *
*                                                                     *
* TABLES = SEE XCTLTABL MACRO.                                        *
*                                                                     *
* MACROS = IECDSECS,IECEQU,IECRES,MODESET,SETLOCK,DMABCOND,XCTLTABL.  *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
*        VS2 RELEASE 041 DELETIONS/CHANGES                     @Z40JSGD
*0000                                                          @Z40JSGD
*        VS2 RELEASE 03.7 SU 30                                @Z30HSRB
*0000512680                                                    @Z30HSRB
*0000                                                          @ZM44722
*
*        VS2 RELEASE 03 DELETIONS/CHANGES                             *
*0000273320,273420,273478                                       Y30ASJC
*    517532,517532                                              Z30TSRJ
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TCB,TIOT,UCB,DCB,ACB,MAIN,PREFX,WTG,       Y02080*
               PSA,DSAB,                                         Y02082*
               IEZDEB,IDAPDPRM                                   Y02004
TIOTSPOL EQU   X'06'                    SPOOL INDICATOR          YM3070
ACBMJEP  EQU   X'40'                    ACB JEPS INDICATOR       X02989
DATAMGT  EQU   X'50'                    DATA MANAGEMENT KEY      YM3070
WALNTH   EQU   X'23A'                   LENGTH OF 2311 ERP WA    YM3153
         IECEQU AOS=YES,IEZDEB=YES                               Y02134
*
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING WTG,RWTG                 DEFINE BASE TO XCTL/WTG TABLE
         USING TIOENTRY,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING UCBOB,RUCB               DEFINE BASE TO MAIN UCB
         USING USERPRML,RPARC           RPARC POINTS TO CURRENT  Y02134
*
         BALR  RBASE,R0                 ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
         B     OIN30200(RET)            BR TO INDICATED FUNCTION
*
OIN30200 B     OIN30400                 RET=0 INITIAL ENTRY FROM OPEN
         B     OIN32800                 RET=4 PARALLEL OPEN DCB START
*
***********************************************************************
*
*  INTIALIZE WTG TABLE ENTRIES
*
OIN30400 EQU   *                        INITIAL ENTRY
         L     RPAR,WTGPREFX            PT TO BASE PREFIX        Y02080
         L     RPAR,IECUPRML-IECPREFX(,RPAR) ADDR OF PARAMLIST   Y02080
         LR    RPARC,RPAR               ADDR FIRST ENTRY IN PARM LIST
         LA    RWTGC,WTGENTRY           ADDR FIRST ENTRY IN WTG TABLE
         USING WTGENTRY,RWTGC           DEFINE BASE TO CURRENT WTG
*
OIN30600 EQU   *                        LOOP FOR NEXT DCB
         L     RF,WTGCORE-K1            LOAD DCB WORK AREA ADDR  A39979
         LTR   RF,RF                    IS DCB BEING OPENED      A39979
         BZ    OIN31300                 BR IF NO                 A39979
*
         LR    RCORE,RF                 WORK AREA ADDR TO RCORE  A39979
         LA    RET,K4                   BRANCH INDEX             Y02080
         ST    RET,DXREGE               STORE FOR LOAD BY RESIDENT RTN
*
         TM    JFCBMASK+K6,JFCTRACE     IS TRACE ROUTINE DESIRED
         BZ    OIN31300                 BR IF NO TO NEXT DCB     A39979
*
         OI    WTGPATHS+K1,WTGTRACE     SET TRACE ROUTINE INDR
*
OIN31300 EQU   *                        CHECK FOR MORE DCBS      A39979
         TM    DXDCBLST,LASTNTRY        CHECK FOR LAST ENTRY     Y02134
         LA    RPARC,L'DXDCBLST(,RPARC) ADVANCE TO NEXT PARM DCB Y02134
         LA    RWTGC,L'WTGENTRY(,RWTGC) ADVANCE NEXT WTG ENTRY   Y02134
         BZ    OIN30600                 BR IF NO TO NEXT DCB     A39979
*
         XC    WTGENTRY,WTGENTRY        CLEAR EXTRA WTG ENTRY
*
***********************************************************************
*
*  LOCATE A DCB TO START PARALLEL PROCESSING.
*
OIN32200 EQU   *                        PARALLEL PROCESSING
*
         LA    RWTGC,WTGENTRY-WTG(,RWTG) POINT TO FIRST ENTRY IN WTG
         LR    RPARC,RPAR               POINT TO FIRST DCB IN PARM LIST
         L     RES,CVTPTR               GET CVT ADDR             A39979
         L     RES,CVTDMSR-CVT(,RES)    GET RESIDENT RTN ADDR    A39979
*
OIN32400 EQU   *                        CHECK IF ACTIVE
         CLC   WTGIDTTR(K2),OIN3930X    IS DCB ACTIVE IN THIS MODULE
         BE    OIN32600                 BR IF YES
*
         LA    RPARC,L'DXDCBLST(,RPARC) ADVANCE TO NEXT PARM     Y02134
         LA    RWTGC,L'WTGENTRY(,RWTGC) ADVANCE TO NEXT WTGENTRY Y02134
         B     OIN32400                 BR TO FIND ACTIVE DCB
*
OIN32600 EQU   *                        INITIALIZE REGS
         L     RDCB,DXDCBLST            LOAD CURRENT DCB ADDR    Y02134
         L     RCORE,WTGCORE-K1         LOAD CURRENT WORK AREA ADDR
         L     RTIOT,DXTIOTAD           LOAD ADDR TIOT DD ENTRY  YM1294
         L     R0,DXREG0                INT ABEND CODE           Y02080
         LTR   R0,R0                    DEF ABEND FROM 1ST LOADS Y02080
         BNZ   OIN37800                 ABEND IF DEFERRED        Y02080
*
         DROP  RWTGC
*
***********************************************************************
*
*  FROM THIS POINT ON, ALL PARALLELISM OF DCB'S IS HANDLED BY THE
*  RESIDENT ROUTINE.
*
***********************************************************************
*
OIN32800 EQU   *                        PARALLEL PROCESSING ENTRY
*
*        GET DEB EXTENSION FOR ALL DCB/ACBS EXCEPT SPOOLED DCBS  Y02134
*        FOR WHICH NO DEB IS OBTAINED DIRECTLY                   Y02134
*        ALSO, DO NOT GET DEB EXTENSION FOR VTAM ACB, WHICH     Y30ASJC
*        HAS KEY 6 ACDEB INSTEAD OF REGULAR DEB.                Y30ASJC
*
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP   Y30ASJC
         BO    OIN32810                 BR IF YES, NOT AN ACB   Y30ASJC
*
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB Y30ASJC
         BZ    OIN32810                 BR IF NO                Y30ASJC
*                                                                Y02004
         CLI   ACBAMETH-IFGACB(RDCB),ACBVTAM TEST FOR VTAM ACB  Y30ASJC
         BE    OIN37600                 YES, BYPASS JFCB READ   Y30ASJC
*
OIN32810 EQU   *                        NON VTAM DATA SET       Y30ASJC
*
         LTR   RTIOT,RTIOT              DON'T TEST TIOT IF ZERO  YM2436
         BZ    OIN32820                 BRANCH IF NO TIOT ADDR   YM2436
         TM    TIOELINK,TIOTSPOL        IS DS SPOOLED SYSIN-OUT  Y02134
         BZ    OIN32820                 BR IF NO                 Y02134
         TM    DCBDSRG2,ACBDORGA        IS IT AN ACB?            Y02134
         BZ    OIN32850                 BR IF NO - NO DEB EXT    Y02134
OIN32820 EQU   *                        GET DEB EXTENSION
         LA    RET,LTHODEBX(0,0)        LENGTH OF DEB EXT      @ZM43353
         IECRES GET,PREFIX=NO,LV=(RET),STM=(2,14,WTGPREFX)       Y02134
         ST    R1,DXDEBXAD              STORE DEBX ADDR IN WKA   Y02134
         USING DEBXTN,R1                DEB EXTENSION USING      Y02134
         STH   RET,DEBXLNGH             LENGTH OF DEB EXTENSION  Y02134
         MVC   DEBXDSAB,DXDSABAD        DSAB ADDR IN DEBX        Y02134
         MVC   DEBXDSO1(L'DCBDSORG),DCBDSORG DSORG IN DEBX       Y02134
         MVC   DEBXMCF1(L'DCBMACRF),DCBMACRF MACRF IN DEBX       Y02134
         DROP  R1                                                Y02134
         LTR   RTIOT,RTIOT              DON'T TEST TIOT IF ZERO  YM2436
         BZ    OIN32840                 BRANCH IF NO TIOT ADDR   YM2436
*
*  DETERMINE IF THE CONTROL BLOCK IS FOR A SPOOLED DATA SET
*
         TM    TIOELINK,TIOTSPOL        IS DS SPOOLED SYSIN-OUT  A39979
         BM    OIN32850                 BR IF YES                Y02120
*
*  TEST FOR AN ACB
*
OIN32840 EQU   *                        DCB OR ACB              Y30ASJC
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    A39979
         BO    OIN32950                 BR IF YES, NOT AN ACB    A39979
*
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  A39979
         BZ    OIN32950                 BR IF NO                 A39979
         B     OIN32900                 BRANCH IF NO             Y02120
*
*  A JES DCB OR ACB IS BEING PROCESSED
*
OIN32850 EQU   *                        SPOOLED DATA SET         Y02120
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    Y02120
         BZ    OIN32900                 BRANCH IF NO             Y02120
OABD051  EQU   51                       013 INTERNAL ABEND CODE  Y02120
         LA    R0,OABD051               013 ABEND IF EXCP/SPOOL  Y02120
         B     OIN37800                 BRANCH TO ABEND          Y02120
OIN32900 EQU   *                        TEST FOR JFCB ERROR      A39979
         TM    DXECB,ECBNOERR           JFCB READ GOOD           X02989
         BO    OIN32930                 BR IF YES                X02989
         USING IFGACB,RACB              DEFINE BASE TO ACB       X02989
*                                                                X02989
*  IF A VSAM ACB IS BEING PROCESSED, INITIALIZE PARAMETER LIST   X02989
*  AND BRANCH TO VSAM PROBLEM DETERMINATION.                     X02989
*                                                                X02989
         TM    ACBINFL,ACBMJEP          IS THIS A JEPS ACB       X02989
         BO    OIN32950                 BR IF YES                X02989
         TM    TIOELINK,TIOTSPOL        IS THIS A SPOOLED ACB    X02989
         BM    OIN32950                 BR IF YES                X02989
         MVI   ACBERFLG,VSOJFBER        SET READ JFCB ERROR      X02989
         LA    RC,DXIOB                 LD ADDR OF WORK AREA     X02989
         USING IDAPDPRM,RC              SET BASE FOR PARM LIST   X02989
         XC    IDAPDPRM(PDPLNGTH),IDAPDPRM ZERO PARAMETER LIST   X02989
         MVI   PDPCALL,PDPOPEN          INDICATE CALLER          X02989
         MVI   PDPCODE,VSJFBERR         SET INTERNAL ERROR CODE  X02989
         MVI   PDPFUNC,VSOPEN           LOAD FUNCTION CODE       X02989
         ST    RDCB,PDPACB              LOAD ADDR OF ACB         X02989
         ST    RTIOT,PDPTIOT            LOAD ADDR OF TIOT ENTRY  X02989
         LR    R1,RCORE                 LD ADDR OF WORK AREA     X02989
         IECRES LOAD,MODNM=OIN4010K,BRANCH=NO,PREFIX=WTGPREFX    Y02080*
                                        LOAD VSAM PD ROUTINE     Y02080
         L     RF,WTGMODEP              GET EPA                  Y02080
         BALR  RET,RF                   BR TO VSAM PD ROUTINE    X02989
         MVC   WTGMODNM,OIN3870K        RESET MOD NAME TO OPEN   Y02080
         XC    WTGMODEP,WTGMODEP        CLEAR ADDR               Y02080
         MVI   JFCDSRG2,JFCORGAM        SET VSAM INDICATOR       X02989
         NI    ACBOFLGS,X'FF'-DCBOBUSY  TURN OFF BUSY BIT        X02989
         B     OIN37500                 BR TO XCTL               X02989
*                                                                X02989
*  SET LOCK BIT ON IN ALL ACBS, AND SET VSAM FLAG IN VSAM ACBS.  X02989
*                                                                X02989
OIN32930 EQU   *                        VALIDITY CHECK ACB       X02989
         TM    TIOELINK,TIOTSPOL        SPOOLED DATA SET?        Y02120
         BM    OIN32937                 BRANCH IF YES            Y02120
         TM    JFCDSRG2,JFCORGAM        TEST FOR VSAM            X02989
         BO    OIN32933                 BRANCH IF YES            YM5597
         MVI   ACBERFLG,VSOACBIN        SET ACB INVALID ERROR    YM5597
         MVI   JFCDSRG2,JFCORGAM        SET VSAM BIT IN JFCB     YM5597
         NI    ACBOFLGS,ALLBITS-DCBOBUSY TURN OFF BUSY BIT       YM5597
         B     OIN37500                 XCTL TO VSAM STRING      YM5597
*                                       TO RESTORE ACB           YM5597
OIN32933 EQU   *                        VSAM PROCESSING          YM5597
         MVI   ACBAMETH,ACBVSAM         SET VSAM FLAG IN ACB     X02989
         TM    DXWORK1,ACBCAT+ACBSCRA   OPEN VSAM CATLG/SCRA    Z30SSRL
         BM    OIN32935                 BR IF YES              @Y30DSDT
         SR    RTIOT,RTIOT              ZERO TIOT PTR            X02989
OIN32935 EQU   *                        VSAM ACB PROCESSING      X02989
         XC    DXWORK1,DXWORK1          ZERO VSAM CATLG FLAG     X02989
         B     OIN37500                 BR TO XCTL TO VSAM MOD   X02989
OIN32937 EQU   *                        SPOOLED ACB PROCESSING   Y02120
         USING IHADCB,RDCB              DEFINE BASE TO DCB       Y02120
         TM    DCBDSRG2,ACBDORGA        ACB? (CAN'T BE EXCP)     Y02120
         BZ    OIN37000                 IFG0196J IF SPOOLED DCB  Y02120
         USING IFGACB,RACB              DEFINE BASE TO ACB       Y02120
         MVI   ACBAMETH,ACBSUBS         SET SUBSYSTEM FLAGS      Y02120
OIN32940 EQU   *                        GO TO SPOOLED DCB        X02989
         USING IHADCB,RDCB              DEFINE BASE TO DCB       X02989
*
         IECRES LOAD,MODID=LOAD6V3A,BRCODE=0, XCTL TO SELECT     Y02080*
               BRANCH=QUEUED            A.M. EXECUTOR            Y02080
*
OIN32950 EQU   *                        CHECK PREVIOUS ERROR     A39979
         L     RUCB,DXUCBADR            PREPARE FOR DEVICE TYPE  Y02134
*                                       DEPENDENT PROCESSING     Y02134
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR
         BO    OIN33200                 BR IF NO ERROR
OABD034  EQU   34                       JFCB EXIT LIST ENTRY MISSING
         LA    R0,OABD034               LOAD OPEN J ERROR CODE
         CLI   DXECB,ECBCOD7F-ECBNOERR  IS THIS OPEN J EXIT LIST ERROR
         BE    OIN37800                 BR IF YES
*
OABD033  EQU   33                       I/O ERROR READING JFCB
         LA    R0,OABD033               LOAD JFCB ERROR CODE
         B     OIN37800                 BRANCH TO PROBLEM DET    Y02134
*
OIN33200 EQU   *                        INITIALIZE IOB IN WORK AREA
         LA    RF,DXCCW1                RESTORE START CCW ADDR IN
         ST    RF,IOBSTART-K1           WORK IOB IN CASE RPS JFCB
         EJECT
         MVC   DXCCW6(K1),DXDCBLST      OPEN OPTIONS           @Z40JSGD
         NI    DXCCW6,PLISTOP1          REMOVE ALL BUT OPTION1 @Z40JSGD
*                                                              @Z40JSGD
* IF EXTEND OR OUTINX OPTION WAS REQUESTED THEN SAVE DISP      @Z40JSGD
* SET DISP=MOD AND CHANGE OPEN OPTION TO OUTPUT OR OUTIN.      @Z40JSGD
* IFG0196X WILL RESTORE JFCBDISP BEFORE REWRITING THE JFCB     @Z40JSGD
*                                                              @Z40JSGD
         NI    JFCBMASK+K7,ALLBITS-JFCMDSPM-JFCMDSPO CLEAR     @Z40JSGD
*                                       DISP                   @Z40JSGD
         CLI   DXCCW6,PLISTEXT          IS IT OPEN FOR EXTEND  @Z40JSGD
         BE    OIN33220                 YES - SAVE DISP        @Z40JSGD
         CLI   DXCCW6,PLISTOIX          IS IT OPEN FOR OUTINX  @Z40JSGD
         BNE   OIN33290                 NO-DON'T SAVE DISP     @Z40JSGD
* CORRECT THE OPEN PARAMETER LIST EXTEND AND OUTINX NOT        @Z40JSGD
* EXPECTED BY ACCESS METHOD EXECUTORS.                         @Z40JSGD
OIN33220 OI    DXDCBLST,X01             CHANGE OUTPUT/OUTINX   @Z40JSGD
* CHECK IF SCHEDULER SET DISP TO NEW FROM MOD                  @Z40JSGD
         TM    JFCBFLG2,JFCMODNW        DID SCHE RESET DISP    @Z40JSGD
         BO    OIN33270                 YES - SAVE DISP=MOD    @Z40JSGD
* SAVE JFCBDISP IN THE JFCBMASK                                @Z40JSGD
         TM    JFCBIND2,JFCMOD          IS BIT 1 SET           @Z40JSGD
         BZ    OIN33250                 NO-DON'T SAVE BIT 1    @Z40JSGD
         OI    JFCBMASK+K7,JFCMDSPM     YES-SAVE BIT 1         @Z40JSGD
OIN33250 TM    JFCBIND2,JFCOLD          IS BIT 2 SET           @Z40JSGD
         BZ    OIN33260                 NO-DON'T SAVE BIT 2    @Z40JSGD
         OI    JFCBMASK+K7,JFCMDSPO     YES-SAVE BIT 2         @Z40JSGD
OIN33260 EQU   *                        SET JFCBDISP=MOD       @Z40JSGD
* CHANGE DISP TO MOD FOR ACCESS METHOD EXECUTORS               @Z40JSGD
* AND THE REST OF OPEN.                                        @Z40JSGD
         NI    JFCBIND2,ALLBITS-JFCDISP CLEAR DISPOSITION      @Z40JSGD
         OI    JFCBIND2,JFCMOD          DISP = MOD             @Z40JSGD
         B     OIN33290                 DONE                   @Z40JSGD
* SAVE DISP = MOD BECAUSE SCHEDULER SET THE DISP TO NEW        @Z40JSGD
OIN33270 NI    JFCBFLG2,ALLBITS-JFCMODNW RESET SCHEDULER SW SO @Z40JSGD
*                                       RESTORE WILL NOT BE    @Z40JSGD
*                                       DONE                   @Z40JSGD
         OI    JFCBMASK+K7,JFCMDSPM     SAVE DISP=MOD          @Z40JSGD
OIN33290 EQU   *                        DONE                   @Z40JSGD
         EJECT
*                                                                X02989
* IF ISAM TO VSAM INTERFACE IS INDICATED,                        X02989
* SET WTGIDTTR FOR DCB TO ISAM INTERFACE MODULE.                 X02989
*                                                                X02989
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    X02989
         BO    OIN33300                 BR IF YES                X02989
         TM    DCBDSRG1,DCBDSGIS        ISAM DCB                 X02989
         BNO   OIN33300                 BR IF NO                 X02989
         TM    JFCDSRG2,JFCORGAM        IS DATA SET VSAM         X02989
         BNO   OIN33300                 BR IF NO                 X02989
         NI    DCBOFLGS,X'FF'-DCBOLOCK  TURN OFF LOCK BIT        X02989
         OI    DXATGENS,DXATVCIG        ISAM-VSAM CI GIVEN CNTRL Y02144
         IECRES LOAD,MODID=OIN3990Y,BRCODE=0,                    Y02080*
               BRANCH=QUEUED                                     Y02080
OIN33300 EQU   *                        OUTIN/INOUT OVERIDE      X02989
***********************************************************************
*
*   PERFORM ANY PROCESSING REQUIRED FOR AN OPEN OVERRIDE REQUEST.
*   THE REQUEST IS MADE BY THE LABEL=(,,,IN)
*   OR LABEL=(,,,OUT) DD STATEMENT PARAMETER.
*
***********************************************************************
*
         TM    JFCBMASK+K6,JFCINOP+JFCOUTOP  IS AN OVERRIDE REQUESTED
         BZ    OIN33800                 BR IF NO
         BO    OIN33600                 IF BOTH ON, IGNORE THEM
         TM    JFCBMASK+K6,JFCINOP      IS IT LABEL=(,,,IN)
         BO    OIN33400                 BR IF YES
*                                       LABEL=(,,,OUT)
         TM    DXDCBLST,PLISTOIN        OPENING FOR OUTIN        Y02134
         BNO   OIN33800                 BR IF NO
         TM    DXDCBLST,PLISTOP1-PLISTOIN  OPENING FOR OUTPUT    Y02134
         BNZ   OIN33800                 BR IF OUTPUT
         OI    DXDCBLST,PLISTOUT        CHANGE OPEN TO OUTPUT    Y02134
         OI    JFCBMASK+K6,JFCINOP      INDIC OVERRIDE REQ       YM5943
         B     OIN33800                 PERFORM OUTPUT PROCESSING
*
OIN33400 EQU   *                        FIRST,CHECK BDAM       @ZA25895
         TM    DCBDSORG,DCBDSGDA        IS DCB FOR BDAM?       @ZA25895
         BNO   OIN33450                 NO,BRANCH              @ZA25895
         TM    DXDCBLST,PLISTOUT-PLISTUPD  OPENING FOR OUTPUT? @ZA25895
         BNZ   OIN33450                 YES,THEN NOT UPDATE    @ZA25895
         TM    DXDCBLST,PLISTUPD        OPENING FOR UPDATE?    @ZA25895
         BNO   OIN33800                 NO,IGNORE LABEL OVERRID@ZA25895
         B     OIN33500                 YES,LABEL OVERRIDE     @ZA25895
OIN33450 TM    DXDCBLST,PLISTIO         OPENING FOR INOUT      @ZA25895
         BNO   OIN33800                 BR IF NO
         TM    DXDCBLST,PLISTOP1-PLISTIO ENSURE IT IS ONLY INOUT Y02134
         BNZ   OIN33800                 BR IF ANYTHING ELSE
OIN33500 EQU   *                                               @ZA25895
         NI    DXDCBLST,X'FF'-PLISTOP1+PLISTIN CHANGE TO INPUT   Y02134
         OI    JFCBMASK+K6,JFCOUTOP     INDIC OVERRIDE REQ       YM5943
         B     OIN33800                 PERFORM INPUT PROCESSING
*
OIN33600 NI    JFCBMASK+K6,X'FF'-JFCINOP-JFCOUTOP  IGNORE OVERRIDE
*                                       REQUEST BECAUSE OF
*                                       CONFLICTING INFORMATION
OIN33800 EQU   *                        DD DUMMY OR NULLFILE
*
***********************************************************************
*
*        NEGATIVE INDICATOR FOR OPEN ACCESS METHOD EXECUTORS.
*        WILL BE TURNED OFF IF DIRECT ACCESS WITH RPS FEATURE.
         OI    JFCBMASK+K6,JFCMNRPS     TURN ON NO RPS INDICATOR BIT
*
         CLC   OIN3820K,JFCBDSNM        CHECK FOR DUMMY, NULL DATA SET
         BE    OIN34000                 BR IF YES
*
         TM    TIOELINK,TIOEQNAM        IS THIS A TCAM DUMMY
         BNZ   OIN34000                 BRANCH IF NO             YM5397
         LTR   RUCB,RUCB                CHECK FOR NO UCB         YM5397
         BNZ   OIN34200                 BRANCH IF NOT A DUMMY    YM5397X
                                        DATA SET (UCB PRESENT)   YM5397
*
OIN34000 EQU   *                        DD DUMMY OR DSN=NULLFILE
         OI    JFCBMASK+K4,JFCMNULL     SET NULL DATA SET SW ON
         MODESET EXTKEY=SUPR            KEY OF UCB               Y02082
         XC    TIOEFSRT(K3),TIOEFSRT    ZERO UCB ADDR FOR NULL DATA SET
         MODESET EXTKEY=DATAMGT         BACK TO DATA MGMT KEY    Y02082
         B     OIN37000                 BR TO GO TO MERGE MODULE
*
OIN34200 EQU   *                        PARTIAL RELSE INVALID FOR ISAM
         TM    JFCDSORG,JFCORGIS        IS THIS ISAM            SA53186
         BZ    OIN34300                 BRANCH IF NO            SA53186
         NI    JFCBIND1,X'FF'-JFCRLSE   YES, SET PARTIAL RLSE   SA53186
*                                       BITS TO ZERO            SA53186
OIN34300 EQU   *                        DA & TAPE PROCESSING    SA53186
*
         TM    UCBTBYT3,UCB3TAPE+UCB3DACC  TEST IF MAGNETIC TAPE OR
         BZ    OIN36600                 DIRECT ACCESS, BR IF NO  Y02134
*                                                                A44135
*        INITIALIZE NO. OF VOLUMES TO 1 IF ZERO                  Y02134
*                                                                Y02134
         CLI   JFCBNVOL,K0              CHECK FOR ZERO NO. VOL   Y02134
         BNE   OTA03200                 BR IF NO                 Y02134
         MVI   JFCBNVOL,K1              SET NO. VOL TO ONE       Y02134
*                                                                Y02134
OTA03200 EQU   *                        MERGE DSORG              Y02134
*
*****************************************************************A44135
*                                                                A44135
* MERGE DSORG FROM JFCB TO DCB PRIOR TO SELECTING VOLUME SERIAL  A44135
* NUMBER                                                         A44135
*                                                                A44135
*****************************************************************Y02134
*                                                                Y02134
         L     RC,DXDEBXAD              DEB EXTENSION ADDR       Y02134
         USING DEBXTN,RC                DEB EXTENSION USING      Y02134
         TM    DCBMACRF,DCBMEXCP        IS DCB EXCP              A44135
         BZ    OIN34620                 NO, BR, DSORG IS PRESENT A44135
         MVI   DEBXDSO1,DCBORGPS        SET DEFAULT TO PS        Y02134
         TM    DCBMACRF,DCBMFOUN        DOES DSORG FIELD EXIST   A44135
         BZ    OIN34660                 NO, BR, TREAT EXCP WITH  A44135
*                                       NO DSORG AS PS           A44135
OIN34620 EQU   *                        DSORG FIELD EXISTS       A44135
*                                                                YM3070
         MVC   DEBXDSO1(L'DCBDSORG),DCBDSORG UPDATE DEBX DSORG   YM3070
         TM    DCBDSORG,DCBORGPS        IS THIS A PS DATA SET    Y02134
         BO    OIN34660                 BRANCH IF PS             YM3070
         NC    DCBDSORG,DCBDSORG        SEE IF DSORG SPECIFIED   YM3070
         BNZ   OIN36600                 BRANCH IF SPECIFIED      YM3070
         TM    JFCDSORG+K1,ACBDORGA     TEST FOR VSAM            YM3070
         BO    OIN34660                 BRANCH IF VSAM           YM3070
         NC    JFCDSORG,JFCDSORG        CHECK FOR DSORG IN JFCB  YM3070
         BZ    OIN34660                 BRANCH IF NO DSORG       YM3070
*                                                                YM3070
         MVC   DCBDSORG,JFCDSORG        MERGE DSORG TO DCB       YM3070
         OI    JFCBMASK+K3,X01          DSORG MERGE MASK         YM3070
*                                                                YM3070
         TM    DCBDSORG,DCBDSGPS        TEST FOR PS              YM3070
         BO    OIN34660                 BRANCH IF SPECIFIED      YM3070
*                                                                YM3070
*****************************************************************Y02134
*                                                                Y02134
*        RECOPY DCB WITH PROPER SIZE                             YM3070
*                                                                Y02134
*****************************************************************Y02134
*                                                                YM3070
         L     RDCB,DXUDCBAD            SAVE USER DCB PTR        YM3070
         ICM   RDCB,B'1000',DXUKEY      SAVE USER KEY            YM3070
         MVC   DXUDCBAD,DXPDCBAD        SET USER=PROTECT         YM3070
         MVI   DXUKEY,DATAMGT           SET DM KEY               YM3070
         IECRES INIT,DCBCOPY=TOWKAR,STM=(2,14,WTGPREFX),         YM3070X
               PREFIX=WTGPREFX                                   YM3070
*                                                                YM3070
         STCM  RDCB,B'1000',DXUKEY      RESTORE KEY              YM3070
         STCM  RDCB,B'0111',DXUDCBAD+K1 RESTORE USER DCB ADDRESS YM3070
         L     RDCB,DXPDCBAD            LOAD COPY DCB ADDRESS    YM3070
         MVC   DEBXDSO1(L'DCBDSORG),DCBDSORG UPDATE DEBX DSORG   YM3070
*                                                                YM3070
*        RESTORE DCB FROM ORIGINAL WITH PROPER LENGTH            YM3070
         IECRES INIT,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX),         YM3070X
               PREFIX=WTGPREFX                                   YM3070
*                                                                YM3070
         MVC   DCBDSORG,DEBXDSO1        RESTORE PROPER DSORG     YM3070
*                                                                YM3070
         OI    JFCBMASK+K3,X01          SET DSORG MERGE MASK BIT A44135
         MVC   DEBXDSO1(L'DCBDSORG),DCBDSORG DSORG TO DEBX       Y02134
         B     OIN36600                 BYPASS PS PROCESS        YM3070
         DROP  RC                                                Y02134
*                                                                Y02134
OIN34660 EQU   *                        SEQ OF 1ST VOL TO MOUNT  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*   TEST FOR A VALID VOLUME SEQUENCE NUMBER. WHEN PROCESSING IS  Y02134
*   TO BEGIN WITH A SELECTED VOLUME OF A PHYSICAL SEQUENTIAL     Y02134
*   DATA SET, THIS NUMBER IS USED AS AN INDEX TO THE APPROPRIATE Y02134
*   VOLUME SERIAL NUMBER IN THE JFCB. IT MUST BE LESS THAN OR    Y02134
*   EQUAL TO THE NUMBER OF VOLUMES ALLOCATED TO THE DATA SET.    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         MVC   DXVOLSEQ,JFCBVLSQ        MOVE VOLUME SEQ TO WA    Y02134
OABD037  EQU   37                       VOL. SEQ. NO. IS TOO BIG Y02134
         LA    R0,OABD037               LOAD PROB. DET. CODE     Y02134
         CLC   JFCBNVOL,DXVOLSEQ+K1     NO. OF VOLS & VOL SEQ    Y02134
         BL    OIN37800                 BRANCH IF VOLSEQ GT VOLS Y02134
*                                                                Y02134
         CLC   DXVOLSEQ,ZEROS           TEST FOR VOL SEQ OF ZERO Y02134
         BH    OIN36600                 BRANCH NOT ZERO, USE IT  Y02134
*                                                                Y02134
         TM    DXDCBLST,PLISTM03        CHECK FOR RDBACK         Y02134
         BM    OIN35000                 BR IF YES                Y02134
*                                                                Y02134
         TM    DXDCBLST,PLISTM01        IS IT UPDAT OR INPUT     Y02134
         BZ    OIN36600                 BR IF YES, IGNORE MOD    Y02134
         TM    DXDCBLST,PLISTM06        IS IT INOUT              Y02134
         BM    OIN36600                 BR IF YES, IGNORE MOD    Y02134
*                                                                Y02134
         TM    JFCBIND2,JFCOLD          TEST FOR MOD             Y02134
         BNZ   OIN36600                 BRANCH IF NOT MOD        Y02134
*                                                                Y02134
OIN35000 EQU   *                        USE LAST VOLUME          Y02134
         MVC   DXVOLSEQ+K1(K1),JFCBNVOL USE NO. OF VOLS          Y02134
         TM    DXDCBLST,PLISTM03        CHECK FOR RDBACK       @ZA26878
         BM    OIN36610                 BRANCH IF RDBACK       @ZA26878
*                                                                Y02134
OIN36600 EQU   *
*
         TM    JFCBIND2,JFCNEW          TEST FOR NEW           @ZA12906
         BNO   OIN36610                 BRANCH NOT NEW         @ZA12906
         MVC   DXVOLSEQ,ONE             SET VOLSEQ TO ONE      @ZA12906
         OI    JFCBMASK+K4,X'01'        VOLSEQ MERGE MASK      @ZA25251
*
OIN36610 EQU   *                 SAVE INITIAL DEVICE SELECTION @ZA12906
*
         LA    RUCB,0(,RUCB)            CLEAR HIGH ORDER BYTE
         ST    RUCB,DXDEBUCB            STORE UCB ADDR IN WORK DEB
*
         TM    UCBTBYT3,UCB3TAPE+UCB3DACC  TAPE OR DA            Y02134
         BNZ   OIN36780                 BRANCH IF EITHER         YM5792
         CLI   UCBTBYT3,UCB3UREC        UNIT RECORD DEVICE       Y02082
         BNE   OIN37000                 BRANCH IF NO             Y02082
         CLI   UCBTBYT4,K9              IS IT A 3211 PRINTER     Y02082
         BE    OIN36615                 BRANCH IF YES          @Z30HSRB
         CLI   UCBTBYT4,UCB3895         IS IT A 3895           @Z30HSRB
         BNE   OIN37000                 BRANCH IF NO             Y02082
*
*        MARK 3895 DEVICE READY                                @Z30HSRB
*
         MODESET EXTKEY=ZERO            KEY ZERO TO CHANGE UCB @ZM44722
         NI    UCBFLA,X'FF'-UCBNOTRD    ZERO NOT-READY BIT     @Z30HSRB
         MODESET EXTKEY=DATAMGT         RETURN TO KEY FIVE     @ZM44722
         B     OIN37000                 ON TO MERGE MODULES    @Z30HSRB
OIN36615 EQU   *                        3211 SUPPORT           @Z30HSRB
         L     RF,WTGPREFX              PREFIX ADDRESS           Y02082
         STM   RA,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
         MODESET EXTKEY=SUPR            UCB, SETLOCK KEY         Y02082
OIN36620 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=(LOCAL,IFG0193A(OIN36760)) GET LOCAL LOCK Y02082
         LTR   RD,RD                    SETLOCK ERROR            Y02082
         LM    RA,RET,IECREGSV-IECPREFX(RF) RESTORE SETLOCK REGS Y02082
         BNZ   OIN37900                 BRANCH IF SETLOCK ERROR  Y02082
         L     RC,UCBXTADR              PRINTER EXTENSION        Y02082
         USING UCBUCS,RC                                         Y02082
         SR    RF,RF                    ZERO RF FOR IC, LTR      Y02082
         IC    RF,UCBERADR              GET USE COUNT            Y02082
         LTR   RF,RF                    IS IT NOW ZERO           Y02082
         LA    RF,K1(,RF)               INCREMENT BY ONE         Y02082
         STC   RF,UCBERADR              STORE UPDATED COUNT      Y02082
         BNZ   OIN36740                 BRANCH IF COUNT WASN'T 0 Y02082
*                                                                YM3153
*        GET ERP WORKAREA WITH LOCK HELD                         YM3153
         IECRES GET,WLH,LV=WALNTH,KEY=K0,SP=K255,PREFIX=NO,      YM3153X
               STM=(2,14,WTGPREFX)                               YM3153
         STCM  R1,B'0111',UCBERADR+K1   STORE WORKAREA ADDR      Y02082
*                                                                YM3153
OIN36740 EQU   *                        RELEASE LOCK             YM3153
*                                                                YM3153
         L     RF,WTGPREFX              PREFIX ADDRESS           Y02082
         MODESET EXTKEY=DATAMGT         D.M.KEY FOR SAVEAREA     Y02082
         STM   RA,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
         MODESET EXTKEY=SUPR            UCB, SETLOCK KEY         Y02082
OIN36760 SETLOCK RELEASE,TYPE=LOCAL,                             Y02082*
               RELATED=(LOCAL,IFG0193A(OIN36620)) RELEASE LOCK   Y02082
         LTR   RD,RD                    SETLOCK ERROR TEST       Y02082
         LM    RA,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         BNZ   OIN37900                 BRANCH IF SETLOCK ERROR  Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02082
         B     OIN37000                 BRANCH TO MERGE          Y02082
OIN36780 EQU   *                        SEQ VALIDITY CHECK       Y02082
         CLC   DXVOLSEQ,ZEROS           TEST FOR VOL SEQ OF ZERO Y02134
         BH    OIN36800                 BRANCH NOT ZERO, USE IT  Y02134
         MVC   DXVOLSEQ,ONE             SET VOL SEQ TO ONE       Y02134
*                                                                Y02134
OIN36800 EQU   *                        DEVICE DEPENDENT PROC    Y02134
*                                                                Y02134
         TM    UCBTBYT3,UCB3TAPE        TEST FOR TAPE            Y02134
         BO    OIN36810                 BRANCH IF TAPE           Y02134
*
         CLC   DXDSAB,DXDSABAD          OPENJ DYNAMIC ALLOC    @ZA02193
         BE    OIN36801                 BRANCH IF NO           @ZA02193
*
         L     RC,DXDEBXAD              LOAD DEB EXT ADR       @ZA02193
         MVC   DEBXOPNJ-DEBXTN(L'DXDSAB,RC),DXDSAB CHAIN OPENJ @ZA12942
*                                       ALLOCATION FOR CLOSE   @ZA02193
         MVC   DXDSAB,DXDSABAD          RESET DSAB ADR         @ZA02193
*
OIN36801 EQU   *                        CONTINUE DA PROCESS    @ZA02193
*                                                                Y02134
         NI    JFCBMASK+K6,X'FF'-JFCMNRPS  TURN OFF NO RPS BIT   Y02134
*                                                                YM5792
         L     RB,DXDSABAD              LOAD DSAB POINTER        YM5792
         SR    RF,RF                    ZERO RF FOR RPS INDIC   Z30TSRJ
*                                                                YM5792
OIN36803 EQU   *                        LOOP FOR NEXT DSAB       YM5792
*                                                                YM5792
         TM    UCBTBYT2,UCBRPS          DEVICE HAVE RPS FEATURE  YM5792
         BZ    OIN36806                 BRANCH IF NO RPS         YM5792
*                                                                YM5792
         TM    UCBJBNR,UCBVRDEV         VIO UCB                 Z30TSRJ
         BO    OIN36804                 BRANCH IF VIO           Z30TSRJ
         LR    RF,RUCB                  INDICATE REAL RPS FOUND Z30TSRJ
*                                                               Z30TSRJ
OIN36804 EQU   *                        CONTINUE SEARCH         Z30TSRJ
*                                                               Z30TSRJ
         L     RB,DSABFCHN-DSAB(RB)     LOAD NEXT DSAB PTR       YM5792
         LTR   RB,RB                    TEST FOR END OF CHAIN    YM5792
         BZ    OIN36809                 BRANCH, END OF CHAIN    Z30TSRJ
*                                                                YM5792
         L     RTIOT,DSABTIOT-DSAB(RB)  LOAD TIOT POINTER        YM5792
*                                                                YM5792
         CLC   TIOEDDNM,BLANKS          CHECK FOR CONCATENATION  YM5792
         BNE   OIN36809                 BRANCH IF NOT           Z30TSRJ
*                                                                YM5792
         L     RUCB,TIOEFSRT-K1         GET UCB ADDRESS          YM5792
         LTR   RUCB,RUCB                TEST FOR UCB ADDRESS     YM5792
         BZ    OIN36809                 BRANCH IF NOT VALID     Z30TSRJ
         TM    UCBTBYT3,UCB3DACC        MAKE SURE OF DA          YM5792
         BO    OIN36803                 BRANCH IF DA             YM5792
*                                                                YM5792
OIN36806 EQU   *                        SET NO RPS INDICATOR     YM5792
*                                                                YM5792
         OI    JFCBMASK+K6,JFCMNRPS     TURN ON NO RPS BIT       YM5792
*                                                                YM5792
OIN36808 EQU   *                        SET DA RETURN MOD        YM5792
*                                                                Y02134
         L     RTIOT,DXTIOTAD           RELOAD TIOT ADDR         YM5792
         L     RUCB,DXUCBADR            LOAD CURRENT UCB         YM5792
*                                                                YM5792
         XC    DXRETCOD,DXRETCOD        ZERO OUT RETURN CODE     Y02134
         MVC   DXRETMOD,ID3A5A          MOVE IN DA MERGE LOAD    Y02134
*                                                                Y02134
         B     OIN36840                 BRANCH TO MOUNT VOLUMES  Y02134
*                                                                Y02134
OIN36809 EQU   *                        CHECK IF REAL RPS FOUND Z30TSRJ
*                                                               Z30TSRJ
         LTR   RF,RF                    IS IT NOW ZERO          Z30TSRJ
         BZ    OIN36806                 BRANCH IF NO REAL RPS   Z30TSRJ
         B     OIN36808                 BRANCH IF REAL RPS      Z30TSRJ
*                                                               Z30TSRJ
OIN36810 EQU   *                        TAPE PROCESSING          Y02134
*                                                                Y02134
         CLC   JFCBFLSQ,ZEROS           TEST FOR FILE SEQ = ZERO Y02134
         BH    OIN36815                 BRANCH NOT ZERO, USE IT  Y02134
         MVC   JFCBFLSQ,ONE             SET FILE SEQ TO ONE      Y02134
*                                                                Y02134
OIN36815 EQU   *                        LBL TYP INDICATES STRING Y02134
*                                                                Y02134
         TM    JFCBLTYP,JFCNL+JFCBLP    TEST FOR NL OR BLP       Y02134
         BZ    OIN36820                 BRANCH IF NEITHER        Y02134
         XC    DXRETCOD,DXRETCOD        ZERO OUT RETURN CODE     Y02134
         MVC   DXRETMOD,ID3A5C          MOVE IN NL/BLP LOAD      Y02134
         B     OIN36840                 BRANCH TO MOUNT VOLUMES  Y02134
*                                                                Y02134
OIN36820 EQU   *                        NSL, SL, AL              Y02134
*                                                                Y02134
         TM    JFCBLTYP,JFCNSL          TEST FOR NSL             Y02134
         BZ    OIN36830                 BRANCH TO ASSUME AL/SL   Y02134
         TM    DXDCBLST,PLISTOIN        TEST FOR OUTPUT OR OUTIN Y02134
         BO    OIN36825                 BRANCH IF EITHER         Y02134
         MVI   DXRETCOD,K12             SET CODE INIT PROCESS    Y02134
         MVC   DXRETMOD,ID3A5D          MOVE IN NSL INPUT LOAD   Y02134
         B     OIN36840                 BRANCH TO MOUNT VOLUMES  Y02134
*                                                                Y02134
OIN36825 EQU   *                        NSL OUTPUT               Y02134
*                                                                Y02134
         XC    DXRETCOD,DXRETCOD        ZERO OUT RETURN CODE     Y02134
         MVC   DXRETMOD,OIN3960X        MOVE IN NSL OUTPUT LOAD  Y02134
         B     OIN36840                 BRANCH TO MOUNT VOLUMES  Y02134
*                                                                Y02134
OIN36830 EQU   *                        SL/AL PROCESSING STRING  Y02134
*                                                                Y02134
         XC    DXRETCOD,DXRETCOD        ZERO OUT RETURN CODE     Y02134
         MVC   DXRETMOD,ID3A5B          MOVE IN SL/AL LOAD       Y02134
*                                                                Y02134
OIN36840 EQU   *                        SELECT VOL/UNIT          Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        BRANCH TO VOLUME SELECT MODULE                          Y02134
*
*****************************************************************Y02134
*                                                                Y02134
         IECRES LOAD,MODID=OIN3940X,BRCODE=0,BRANCH=QUEUED       Y02134
*
OIN37000 EQU   *                        UNIT RECORD, NULLFILE, ETC.
*
         IECRES LOAD,MODID=OIN3960X,BRCODE=0, XCTL TO FIRST      Y02080*
               BRANCH=QUEUED            COMMON MERGE MODULE      Y02080
*
OIN37500 EQU   *                        VSAM STRING              XM1037
*
         OI    DXATGENS,DXATVSMG        VSAM STRING TO GET CNTRL Y02144
         IECRES LOAD,MODID=OIN3980X,BRCODE=0, XCTL TO VSAM       Y02080*
               BRANCH=QUEUED            STRING                   Y02080
*
OIN37600 EQU   *                        VTAM STRING              Y02004
*
         OI    DXATGENS,DXATVTMG        VTAM STRING TO GET CNTRL Y02144
         IECRES LOAD,MODID=OIN4000X,BRANCH=QUEUED                Y02004
*                                                                Y02134
OIN37800 EQU   *                        BRANCH TO PROBLEM DET    Y02134
*                                                                Y02134
         DMABCOND (0),OIN3920X          BRANCH TO PROBLEM DET    Y02134
*
OIN37900 EQU   *                        ERROR IN SETLOCK         Y02082
         DMABCOND PCK,SETLOCK           SETLOCK ERROR ANALYSIS   Y02082
*                                       ROUTINE                  Y02082
         EJECT
***********************************************************************
*
*        CONSTANTS
*
***********************************************************************
*
OIN3820K DC    C'NULLFILE '             DSNAME FOR NULL DATA SET
BLANKS   DC    CL8' '                   DDNAME FOR CONCATENATION YM5792
*
         SPACE 1
ZEROS    DC    X'0000'                  CONSTANT 0               Y02134
ONE      DC    X'0001'                  CONSTANT ONE             Y02134
OIN3870K DC    C'IFG0193A'              NAME FOR RESTORE         Y02080
*
         XCTLTABL  ID=(OIN3920X,0P,OIN3930X,3A,OIN3940X,4A,      Y02134X
               OIN3960X,6J,OIN3980X,2A,OIN3990X,8N,OIN3990Y,2I,  Y02134X
               LOAD6V3A,6V,OIN4000X,2F,OIN4010K,IDA0192P,        Y02134X
               ID3A5A,5A,ID3A5B,5B,ID3A5C,5C,ID3A5D,5D),         Y02134X
               SVC=019,BRT=YES,LENGTH=                           Y02080
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
UCB3895  EQU   X'19'                    3895 DEVICE TYPE CODE- @Z30HSRB*
               DELETE IT WHEN THE IEFUCBOB MACRO CONTAINS IT   @Z30HSRB
DEBXTN   DSECT                          REESTABLISH DEBX DSECT @ZM43353
LTHODEBX EQU   *-DEBXTN                 LENGTH OF DEBX         @ZM43353
IFG0193A CSECT                          REESTABLISH MODULE     @ZM43353
         END
