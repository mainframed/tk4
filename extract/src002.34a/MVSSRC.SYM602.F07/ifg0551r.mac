         TITLE 'IFG0551R - EOV TAPE OUTPUT TRAILER LABEL 2 PREPARATION'
         COPY  LCGASMSW
IFG0551R CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*          VS2 RELEASE 037 DELETIONS/ADDITIONS                        *
*                                                                     *
*0000                                                         @ZA10242*
*0000                                                         @ZA19724*
*C252790-252796,252850-252882,252898-252906                   @ZA24994*
***********************************************************************
*                                                                     *
*                                                                     *
* MODULE NAME = IFG0551R (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = TAPE OUTPUT TRAILER LABEL 2                      *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1) WAIT FOR WRITE TO COMPLETE (TRAILER 1) WHICH WAS INITIATED*
*        IN PREVIOUS MODULE (551P).                                   *
*        2) CONSTRUCT TRAILER LABEL 2 FROM INFORMATION IN THE JFCB,   *
*        TIOT, DCB, UCB, ETC..                                        *
*        3) IF ASCII WAS SPECIFIED, TRANSLATE THE LABEL TO ASCII.     *
*        4) WRITE TRAILER LABEL 2.                                    *
*        5) IF USER LABELS ARE SPECIFIED IN THE JFCB, SEARCH THE      *
*        CALLER'S EXIT LIST FOR AN ACTIVE USER LABEL EXIT.            *
*        6) IF NO USER LABELS ARE SPECIFIED, OR IF NO ACTIVE USER     *
*        LABEL EXIT EXISTS, OR UPON COMPLETION OF USER LABEL PRO-     *
*        CESSING, CONTROL IS PASSED TO IFG0551T.                      *
*        7) FOR USER LABEL PROCESSING, 2 WORK AREAS ARE OBTAINED      *
*        FROM FETCH PROTECTED SUBPOOL 229 CORE. A 152 BYTE AREA IS    *
*        GOTTEN FOR EOV IN KEY 5 AND A 96 BYTE AREA IS GOTTEN FOR     *
*        THE CALLER IN THE CALLER'S PROTECT KEY. THE IECRES UEXIT     *
*        MACRO IS USED TO PASS CONTROL TO THE CALLER'S USER LABEL     *
*        ROUTINE TO ENABLE THE CALLER TO FORMAT HIS OUTPUT LABEL.     *
*        8) UPON RETURN FROM THE CALLER'S USER LABEL ROUTINE, A       *
*        RETURN CODE IS EXAMINED AS FOLLOWS:                          *
*        0 - DO NOT WRITE CURRENT LABEL AND DISCONTINUE USER LABEL    *
*        PROCESSING.                                                  *
*        4 - WRITE CURRENT LABEL AND DISCONTINUE USER LABEL PROC      *
*        8 - WRITE CURRENT LABEL AND CONTINUE USER LABEL PROC.        *
*        9) THE CALLER MAY WRITE UP TO 8 USER LABELS (THE LIMIT       *
*        DOES NOT APPLY TO ASCII). ALSO, ASCII LABELS ARE             *
*        TRANSLATED BEFORE BEING WRITTEN.                             *
*        10) IF AN I/O ERROR OCCURS WHILE WRITING TRAILER LABEL 2     *
*        OR USER LABELS, PROBLEM DETERMINATION IS GIVEN CONTROL       *
*        WITH AN INTERNAL CODE OF 141.                                *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0551R                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0551T - VOLUME DISPOSITION, BRANCH CODE = 0               *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P - PROBLEM DETERMINATION, I/O ERROR, INT CODE=141    *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        JFCB                                                         *
*        UCB                                                          *
*        TCB                                                          *
*        TIOT                                                         *
*        DSAB                                                         *
*        PSA                                                          *
*        RB                                                           *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES LOAD                                                  *
*        IECRES GET                                                   *
*        IECRES FREE                                                  *
*        IECRES UEXIT                                                 *
*        IECRES INIT                                                  *
*        EXCP                                                         *
*        WAIT                                                         *
*        DMABCOND                                                     *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
CHARC    EQU   C'C'                     CHARACTER C              Y02083
ETOCHAR9 EQU   X'F9'                    CHARACTER NINE (9)
         SPACE 1
*                   ADDRESSABILITY
         SPACE 1
         BALR  RBASE,0                  ESTABLISH BASE
         USING *,RBASE
         USING FORCORE,RCORE
         USING IHADCB,RDCB
         USING DEB,RDEB
         USING SRT,RUCB
         BAL   R8,ETO04700              GO WAIT FOR EOV1 TO COMPLETE
         BNO   ETO04900                 BR IF I/O ERROR
         OI    DXATOUTA,DXATTRL1        TRL1 LABEL WRITTEN       Y02144
*                   PREPARE DATA SET TRAILER LABEL 2
         SPACE 1
         MVI   FL1NO,CHAR2              SET FILE LABEL IDENTIFIER TO 2
         MVI   FL2TRTCH,BLANK           SET PART OF LABEL TO
         MVC   FL2TRTCH+K1(K45),FL2TRTCH  BLANKS - 47 CHARACTERS
         SPACE 1
*                  BLOCKING ATTRIBUTE
         SPACE 1
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,JFCRECFM              PICK UP RECORD FORMAT FROM THE
         SRL   R7,K3                    BITS 0,1 CONTAIN BLK ATTRIBUTE
         STC   R7,DXLBL+K38             ZERO ALL BUT BITS 0,1 TO
         NI    DXLBL+K38,K3             PREPARE FOR TRANSLATE
         TR    DXLBL+K38(K1),ABLKA9E    TRANSLATE TO S,B,R, OR BLANK
*
*                  RECORD FORMAT
         TM    DCBRECFM,JFCVARD         FORMAT D RECORDS
         BZ    ETO02000                 NO, BRANCH
         MVI   FL2RECFM,CHARD           MOVE D-FORMAT TO LABEL
         B     ETO02100                 GO MOVE BLOCK SIZE
ETO02000 EQU   *                        NOT FORMAT D RECORDS
         SRL   R7,K3                    BITS 0,1 CONTAIN RECORD FORMAT
         STC   R7,FL2RECFM              F = BIT 0  V = BIT 1  U = BITS
         TR    FL2RECFM,ARECFM9E        TRANSLATE TO V,F OR U
         SPACE 1
*                   BLOCK SIZE AND LOGICAL RECORD LENGTH
ETO02100 EQU   *                        SET BLKSIZE AND LRECL
         SPACE 1
         L     R1,DXDSAB                ADR OF DSAB              Y02083
         USING DSAB,R1                                           Y02083
         TM    DSABFLG4,DSABCKDS        CHK PT DS IND ON IN DSAB Y02083
         BNO   ETO02110                 NO                       Y02083
         MVI   FL2DSIND,CHARC           SET CHK PT IND IN LABEL  Y02083
         MODESET EXTKEY=SCHED                                    Y02083
         NI    DSABFLG4,X'FF'-DSABCKVL  RESET CHK PT IND         Y02083
         MODESET EXTKEY=DATAMGT                                  Y02083
         DROP  R1                                                Y02083
ETO02110 EQU   *                        INSTR MUST FOLLOW        Y02083
         LH    R1,JFCBLKSI              PICK UP BLOCK LENGTH
         CVD   R1,DXCCW2                CONVERT BLOCK LENGTH TO DECIMAL
         UNPK  FL2BLKL,DXCCW2           BLOCK LENGTH IN EBCDIC TO LABEL
         OI    FL2BLKL+K4,ZONEOF        REMOVE SIGN BITS
         LH    R1,JFCLRECL              PICK UP LOGICAL RECORD LENGTH
         CH    R1,AGRTR39E              IS LRECL INDIC GRTR 32K
         BE    ETO02200                 BR TO SET LABEL TO 9'S
         CVD   R1,DXCCW2                CONVERT LOGICAL REC LEN TO DEC
         UNPK  FL2LRECL,DXCCW2          LOG RECORD LEN IN EBCDIC TO LBL
         OI    FL2LRECL+K4,ZONEOF       REMOVE SIGN BITS
         B     ETO02300                 BRANCH TO CHK DUAL DENSITY
ETO02200 EQU   *                        SET LRECL TO NINES
         MVI   FL2LRECL,ETOCHAR9        SET LRECL TO 9'S
         MVC   FL2LRECL+K1(K4),FL2LRECL  INDICATING GRTR 32K
         SPACE 1
ETO02300 EQU   *                        CHECK FOR DUAL DENSITY
         TM    UCBTBYT2,UCBDDMSK        DUAL DENSITY UNIT         99223
         BNM   ETO02400                 NO, BRANCH                99223
         TM    DEBOPATB,K4              INOUT PROCESSING
         BO    ETO02400                 BR IF NO
         LA    R0,DXCCW3                PREPARE
         ST    R0,DXCCW1                FOR
         MVI   DXCCW1,CCWSENSE          SENSE COMMAND
         MVC   DXCCW1+K4(K4),SEN89E     LENGTH 8 BYTES, SILI      99223
         XC    DXCCW3(K8),DXCCW3        CLEAR SENSE AREA          99223
         BAL   R8,ETO04600              GO TO PERFORM SENSE OPERATION
         TM    UCBTBYT2,PE              PHASE-ENCODED UNIT        99223
         BO    ETO02350                 YES,GO SET 1600/800 BPI   99223
         MVI   FL2DEN,CHAR4             SET DENSITY TO 6250 BPI   99223
         TM    DXCCW3+K6,X10            ALT DENSITY SET IN UNIT   99223
         BNO   ETO02500                 NO,MUST BE 6250           99223
         MVI   FL2DEN,CHAR3             YES,MUST BE 1600 BPI      99223
         B     ETO02500                 GO SET FILE POSITION      99223
ETO02350 EQU   *                        CHECK FOR 1600 OR 800 BPI 99223
         MVI   FL2DEN,CHAR3             SET DENSITY IN LABEL TO 1600
         TM    DXCCW3+K3,K4             IS DENSITY ON UNIT 1600
         BO    ETO02500                 BR IF YES-DENSITY MERGE IS COMP
         MVI   FL2DEN,CHAR2             SET DENSITY IN LABEL TO 800
         B     ETO02500                 DENSITY MERGE IS COMPLETE
ETO02400 EQU   *                        NOT INOUT
         MVI   FL2DEN,CHAR4             SET DENSITY TO 6250 BPI   99223
         CLI   JFCDEN,DCBD6250          6250 BPI SPECIFIED        99223
         BE    ETO02500                 YES,CONTINUE              99223
         IC    R7,JFCDEN                GET DENSITY FROMJFCB
         SRL   R7,K6                    SHIFT TO LOW BITS
         STC   R7,FL2DEN                STORE IN LBL
         OI    FL2DEN,ZONEOF            OR IN ZONE
ETO02500 MVI   FL2FILP,ZONEOF           SET FILE POSITION TO ZERO
         CLC   UCBVOLI,JFCBVOLS         IS THIS THE FIRST VOL OF DS
         BE    ETO02600                 YES, LEAVE FILE POS IND 0
         MVI   FL2FILP,CHAR1            NO,SET FILE POSITION INDICATOR
ETO02600 L     R7,DEBTCBAD              REESTABLISH THE ADDRESS OF THE
         L     R7,TCBTIO-TCB(K0,R7)     START OF THE TIOT
         MVC   FL2JOBD,TIOCNJOB-TIOT(R7)  PLACE JOB/STEP IDENTIFICATION
         MVI   FL2JSSP,SLASH            (INSERT SLASH)
         MVC   FL2STEPD,TIOCSTEP-TIOT(R7)  FROM THE TIOT TO LABEL
         SPACE 1
*                   TAPE RECORDING TECHNIQUE
         SPACE 1
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,JFCTRTCH              PICK UP TAPE RECORDING TECH
         SRL   R7,K4                    13=C, 23=E , 2B=ET, 0=BLANK
         STC   R7,FL2TRTCH              PLACE FIRST CHARACTER OF TRTCH
         TR    FL2TRTCH(K1),ATRTCH9E    THE LABEL AS BLANK,C,E OR T
         CLI   JFCTRTCH,DCBTRTET        IS IT BOTH EVEN PARITY AND TRAN
         BNE   ETO02700                 NO,THE SECOND CHAR S/B BLANK
         MVI   FL2TRTCH+K1,CHART        YES,TAPE REC TECH SHOULD BE T
         SPACE 1
*                   CARRIAGE CONTROL CHARACTER SET
         SPACE 1
ETO02700 TM    JFCRECFM,DCBRECCM        JFCB SPEC MACH CODE CTL CHAR
         BNO   ETO02800                 NO,GO SEE IF ASA CONTROL CHAR
         MVI   FL2CNTRL,CHARM           YES,SET MACHINE CODE CTL CHAR
ETO02800 TM    JFCRECFM,DCBRECCA        JFCB SPECIFY ASA CONTROL CHAR
         BNO   ETO02900                 NO,DO NOT SET UP CARRIAGE CTL
         MVI   FL2CNTRL,CHARA           YES,SET CONTROL CHAR TO ASA
ETO02900 EQU   *                        CHECK FOR USASI
*                                                                     *
*  IF CREATING A USASI LABEL, MERGE BUFFER OFFSET AND TRANSLATE LABEL *
*                                                                     *
         TM    JFCBLTYP,JFCBAL          IS THIS A USASI LABEL
         BNO   ETO02950                 NO,BRANCH/WRITE LABEL     99223
         SR    R7,R7                    CLEAR REGISTER
         IC    R7,JFCBUFOF              GET BLOCK PREFIX LENGTH
         N     R7,BITOFF9E              TURN OFF BUFOFF=L BIT
         CVD   R7,DXCCW3                CONVERT LENGTH TO
*                                       DECIMAL
         UNPK  FL2BUFOF(K2),DXCCW3+K6(K2)  UNPACK LENGTH TO LABEL
         OI    FL2BUFOF+K1,ZONEOF       CHANGE SIGN CODE
         MVC   FL1LABI,AEOV             MOVE IN EOV CHARACTERS
         XLATE DXLBL,K80,TO=A           TRANSLATE LABEL TO ASCII
         B     ETO03000                 GO WRITE LABEL 2          99223
         SPACE 1
ETO02950 EQU   *                        CHECK FOR TAPE UNIT ID    99223
         CLI   UCBTBYT4,UCB3400         TEST FOR 3400 DRIVE      YM1491
         BNE   ETO03000                 NO,GO WRITE LABEL        YM1491
         L     R7,UCBEXTPT              GET UCB EXTEN PTR        Y02146
         CLI   UCBSNSCT-UCBCMEXT(R7),K24 IS THIS 3420 TAPE UNIT  Y02146
         BNE   ETO03000                 NO,GO WRITE LABEL         99223
         L     R7,UCBXTN                GET UCB EXTENSION ADDR    99223
         USING UCBMT,R7                                           99223
         LH    R7,UCBCTD                GET ID OF CREATING DRIVE  99223
         N     R7,SNMASK                CLEAR HI ORDER         @ZA13576
         DROP  R7                                                 99223
         CVD   R7,DXCCW3                CONVERT ID TO DECIMAL     99223
         UNPK  FL2ID,DXCCW3             UNPACK ID TO EBCDIC       99223
         OI    FL2ID+K4,ZONEOF          REMOVE SIGN BITS          99223
* GET THE MODEL NO. FROM THE SIXTH SENSE BYTE AND
* PLACE IT IN THE LABEL.
         LA    R7,DXCCW3                GET AREA ADDRESS       @ZA24994
         ST    R7,DXCCW1                PUT AREA ADR. IN CCW   @ZA24994
         MVC   DXCCW1+K4(K4),SEN89E     SILI AND COUNT         @ZA13576
         MVI   DXCCW1,CCWSENSE          SENSE CMD CODE         @ZA13576
         BAL   R8,ETO04600              ISSUE SENSE CMD.       @ZA13576
         BZ    ETO04900                 BR. IF IO ERROR        @ZA13576
         IC    R7,DXCCW3+K6             GET SIXTH SNS BYTE     @ZA24994
         SLL   R7,K28                   CLEAR RB EXCEPT FOR    @ZA24994
         SRL   R7,K28                   HALF BYTE SER NUMBER   @ZA24994
         IC    R7,CHARTBL(R7)           GET CHAR. FROM TABLE   @ZA24994
         STC   R7,FL2ID                 PLACE MOD NO. IN LBL.  @ZA24994
*            RESET CCW TO WRITE LABEL                          @ZA13576
         LA    R7,DXLBL                 GET AREA ADDR.         @ZA24994
         ST    R7,DXCCW1                PUT AREA ADR. IN CCW   @ZA24994
         MVI   DXCCW1,CCWWRTAP          INSERT WRITE OP CODE   @ZA13576
         MVC   DXCCW1+K4(K4),LENGTH     SILI AND LNGTH OF 80   @ZA13576
*                   WRITE END OF VOLUME FILE LABEL 2
ETO03000 EQU   *                        WRITE EOV2 LABEL
         SPACE 1
         BAL   R8,ETO04600              GO WRITE FILE LABEL 2
         BNO   ETO04900                 IF I/O ERROR,GO ABEND
         OI    DXATOUTA,DXATTRL2        TRL2 LABEL WRITTEN       Y02144
         SPACE 1
*                   SEE IF USER LABELS ARE TO BE PROCESSED
         SPACE 1
         TM    JFCBLTYP,JFCBUL          USER LABELS SPECIFIED
         BZ    ETO03300                 NO, BRANCH TO EXIT
         TM    DCBMACRF,DCBMEXCP        IS THIS EXCP
         BZ    ETO03100                 NO, GO
         TM    DCBMACRF,DCBMFOUN        DOES EXCP DCB HAVE FOUND. EXT.
         BZ    ETO03300                 NO, GO
ETO03100 EQU   *                        CHECK EXIT LIST
         L     R7,DCBEXLST              PICK UP EXIT LIST FROM DCB
         LA    R7,K0(K0,R7)             ZERO HI ORDER BYTE OF EXIT LIST
         LTR   R7,R7                    IS THE EXIT LIST ZERO
         BZ    ETO03300                 YES, EXIT TO NEXT LOAD EOV
ETO03200 EQU   *                        EXIT LIST ADDR NOT 0     Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         CLI   K0(R7),XLOUTL            IS THIS ACTIVE EXIT 4    Y02082
         BE    ETO03400                 YES, PROCESS USER LABELS
         CLI   K0(R7),XLOUTL+LASTNTRY   SEE IF LAST IND ALSO ON
         BE    ETO03400                 YES, PROCESS USER LABELS
         TM    K0(R7),LASTNTRY          IS THIS LAST ENTRY IN LIST
         LA    R7,K4(K0,R7)             POINT TO NEXT ENTRY
         BNO   ETO03200                 IF NOT,LAST,CHECK NEXT ENTRY
ETO03300 EQU   *                        NO USER LABEL ENTRY
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         SPACE 1
*                   EXIT
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         SR    RET,RET                  ZERO RETURN REG
         IECRES XCTL,MOD1T1R            GO TO NEXT MODULE
*                   EXIT TO USER LABEL HANDLING ROUTINE
ETO03400 EQU   *                        VALID USER LABEL ENTRY
         L     R7,K0(K0,R7)             PICK UP EXIT ADDRESS
         LR    RC,R7                    SET UP REG 12 TO PASS EXIT ADR
         LA    R7,K0(K0,R7)             ZERO THE HI ORDER BYTE
         LTR   R7,R7                    IS EXIT ADDR ZERO IF ACTIVE
         BZ    ETO03300                 YES,DO NOT PROCESS USER LABELS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
*    OBTAIN CORE FOR USER LABEL WORK AREAS                       Y02082
*                                                                Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES,SP=K229,               Y02082*
               STM=(2,14,DXXPREFX),ID=ULWA                       Y02144
         USING ULDMWK,R1                                         Y02082
         STM   RPAR,RC,ULREGSAV         SAVE REGS 5 - 12         Y02082
         DROP  R1                                                Y02082
         LR    RUCB,R1                  PT TO GOTTEN CORE        Y02082
         USING ULDMWK,RUCB                                       Y02082
*                                                                Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,KEY=USER,SP=K229,        Y02082*
               STM=(2,14,DXXPREFX)                               Y02082
         LR    R9,R1                    PT TO GOTTEN CORE        Y02082
         USING ULUWK,R9                                          Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    R1,CHAR0                 INITIALIZE COUNT
         STH   R1,ULCNT                 SAVE FOR LATER USE
*  OUTPUT LABEL PROCESSING
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         MVI   ULBUFR,BLANK             SET LABEL BUFFER AREA
         MVC   ULBUFR+K1(K79),ULBUFR    TO BLANKS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
ETO03500 EQU   *                        CHECK FOR ASCII
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABELS SPEC.
         BO    ETO03600                 YES, SKIP LABEL COUNTING
         LH    R1,ULCNT                 PICK UP PREVIOUS COUNT
         LA    R1,K1(K0,R1)             INCREMENT BY 1
         STH   R1,ULCNT                 SAVE UPDATED COUNT
         CLI   ULCNT+K1,MAXNOLAB        TEST,BR IF MAX NBR OF UL
         BH    ETO04000                 ALREADY PROCESSED
ETO03600 EQU   *                        INITIALIZE BUFFER HEADING
         IC    R8,ULCNT+K1              GET LABEL NUMBER         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         STC   R8,ULBUFR+K3             PUT LABEL NO. IN USER BUFY02082
         MVC   ULBUFR(K3),UTLCON        INITIALIZE FIRST 4 CHAR OF
         BAL   R8,ETO04100              GO TO SYNCH TO USER
*
*
         LTR   RF,RF                    TEST,BR IF LABEL NOT
         BZ    ETO04000                 TO BE WRITTEN
*  RESET FIRST 4 CHAR OF LABEL THEN
*  ESTABLISH CHANNEL PROGRAM TO WRITE USER LABEL
*
         L     RF,DXXPREFX              PT TO PREFIX             Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*    OBTAIN LOCAL LOCK                                           Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL BUFFER                   Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULDMBUFR,ULBUFR          COPY LABEL FROM USER     Y02082
         L     RF,DXXPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
         MVC   ULDMBUFR(K3),UTLCON      SET 'UTL' IN LABEL       Y02082
         TM    JFCBLTYP,JFCBAL+JFCBUL   IF 'AUL' SPEC, BYPASS
         BO    ETO03700                 RESTORING LABEL NUMBER
         MVC   ULDMBUFR+K3(K1),ULCNT+K1 LABEL NO. IN LABEL       Y02082
ETO03700 EQU   *                        POINT TO LABEL BUFFER
         LA    R1,ULDMBUFR              PT CCW TO LABEL BUFFER   Y02082
         ST    R1,DXCCW1
         MVI   DXCCW1,CCWWRTAP          WRITE OP-CODE TO CCW
         MVC   DXCCW1+K4(K4),LENGTH     80-CHAR LENGTH
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABEL SPEC.
         BNO   ETO03800                 NO, BYPASS TRANSLATE
*   TRANSLATE LABEL BEFORE PROCESSING
         XLATE (R1),K80,TO=A            TRANSLATE USER LABEL
ETO03800 EQU   *                        GO WRITE LABEL
         BAL   R8,ETO04600              GO ISSUE EXCP
         BZ    ETO03900                 ERROR ENCOUNTERED.
*
*
         CLI   ULRETCOD,WRITNEXT        TEST,BR IF USER RETURNED A CODE
         BE    ETO03500                 TO CONTINUE UL PROCESSING
*  OTHERWISE, IT IS ASSUMED THE USER RETURNED A CODE = 4, I.E. NO
*  FURTHER UL PROCESSING.
         B     ETO04000                 UNCONDITIONAL BRANCH
*
ETO03900 EQU   *                        ERROR PROCESSING
*  ERROR WHEN ATTEMPTING TO WRITE LABEL.  GO TO USER WITH ERROR
*  INDICATIONS, THEN TERMINATE UL PROCESSING (RETURN CODE NOT
*  EXAMINED).
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULPARM+K8             IN PARAMETER LIST
         OI    ULPARM+K8,LASTNTRY+ERROROUT  FLAG IN ERROR
         BAL   R8,ETO04200              GO TO SYNCH TO USER (BUFFER
*                                       CONTAINS LABEL UNABLE TO WRITE)
ETO04000 EQU   *                        FREE USER LABEL WORK AREAS
*
*
*                                                                Y02082
*    FREEMAIN CORE FOR USER LABEL WORK AREAS                     Y02082
*                                                                Y02082
         IECRES FREE,A=(9),PREFIX=NO,LV=USERLU,SP=K229,          Y02082*
               KEY=USER,STM=(2,14,DXXPREFX)                      Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*    FREE EOV'S USER LABEL WORK AREA    Y02082
         LR    R1,RUCB                  ADDR OF WORK AREA (UL)   Y02082
         LM    RPAR,RC,ULREGSAV         RESTORE REGS 5 - 12      Y02082
         IECRES FREE,A=(1),PREFIX=YES,STM=(2,14,DXXPREFX)        Y02082
         SPACE 2
         B     ETO03300                 BRANCH TO DO XCTL
         SPACE 2
*
ETO04100 EQU   *                        SYNCH ENTRY 1
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR IND
ETO04200 EQU   *                        SYNCH ENTRY 2
         LA    R1,ULBUFR                POINT TO LABEL BUFFER
ETO04300 EQU   *                        SYNCH ENTRY 3
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR(K4),ULTOTPTR    ZERO TOTALING ENTRY
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
         L     R7,DCBDEBAD              GET ADDRESS OF USER'S DEB
*
         TM    DCBMACRF,DCBMEXCP        CK IF USING EXCP
         BO    ETO04400                 EXCP, SKIP TOTALING
         TM    DCBOPTCD,DCBOPTT         CK IF TOTALING SPECIFIED
         BZ    ETO04400                 BR IF NO TOTALING
*
         L     R7,K40(R7)               GET PTR TO TOTALING AREA
         USING TOTSAVWA,R7              ESTABLISH BASE FOR AREA
         MVC   ULTOTPTR(K4),TOTEOVPT    TOTLING PTR TO PARM LIST
         DROP  R7                       DROP BASE
*
ETO04400 EQU   *                        COPY DCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT TO ZERO     Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,DXXPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         MVC   DEBDCBAD(K4),DXUDCBAD    USER DCB ADDR TO DEB   @ZA10242
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,DXXPREFX)           Y02082
         STCM  R2,K7,DEBDCBAD+K1        COPIED DCB ADDR TO DEB @ZA10242
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE      Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            GET PTR TO COPIED DCB    Y02082
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE DCBOFLGS IN COPY  Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE
         ST    RF,ULWK1                 SAVE RETURN CODE         YM4663
         BR    R8                       RETURN
*
*
         SPACE 1
         EJECT
*                   CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
         SPACE 1
*                        IT IS ASSUMED THAT ALL CONTROL BLOCKS
*                        HAVE ALREADY BEEN SET UP
         SPACE 1
*                             BAL  R8,PRTR50
*                             RETURN
         SPACE 1
ETO04600 EQU   *                        I/O ROUTINE
         EXCP  DXIOB                    INITIATE I/O OPERATION
ETO04700 WAIT  ,ECB=DXECB               WAIT FOR COMPLETION OF I/O OPER
         TM    IOBSTAT0,CSWUNITX        IS THERE A UNIT EXCEPTION ERROR
         BC    12,ETO04800              NO,GO CHECK IF ANY I/O ERROR
         TM    IOBSTAT0,IOERR           TEST FOR UNIT CHK ALSO  SA58747
         BO    ETO04800                 YES, CHK ANY I/O ERROR  SA58747
         OI    DXECB,ECBCOD7F           IGNORE ERROR
ETO04800 EQU   *                        CHECK FOR ERROR
         TM    DXECB,ECBNOERR           IS THERE AN UNUSUAL I/O COND
         BR    R8                       RETURN TO CALLER
         EJECT
* ***
* ***          NOTIFY OPERATOR THAT JOB IS BEING TERMINATED
* ***          DUE TO I/O ERROR
* ***
* ***
ETO04900 EQU   *                        ABEND
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         DMABCOND 141,MODPD1R           GO TO PROB DETER. FOR ABEND
*                                       137
         SPACE 1
*                   CONSTANTS
         LTORG
         SPACE 1
SEN89E   DC    X'20000008'              SENSE 8 BYTES - SILI      99223
ATRTCH9E DC    C' CET'                  CONVERSION,EVEN PARITY,TRANSLAT
SNMASK   DC    X'0000FFFF'              SER NUMBER MASK        @ZA13576
CHARTBL  DC    C'0003570000046800'      CHAR. TBL FOR MOD NO.  @ZA19724
         DS    0H
AGRTR39E DC    X'8000'                  VALUE IN LABEL WHEN LRECLGT 32K
AEOV     DC    C'EOV'                   CHARACTERS -EOV-
ARECFM9E EQU   *-1                      RECFM TRANSLATE TABLE
         DC    C'VFU'                   VARIABLE,FIXED,UNKNOWN REC FMT
ABLKA9E  DC    C' SBR'                  BLK AATTRB TRANSLATE TABLE
BITOFF9E DC    F'127'                   MASK FOR BUFOFF=L BIT
*
*                        CONSTANTS
*
LENGTH   DC    X'20000050'              SILI, COUNT = 80 BYTES
UTLCON   DC    C'UTL'                   TRAILER LABEL CONSTANT
*
XCTLTA1R XCTLTABL ID=(MOD1T1R,1T,MODPD1R,0P),                    Y02080X
               SVC=055,BRT=YES,LENGTH=                           Y02080
         IECDSECS CVT,TCB,RB,DCB,UCB,MAIN,DEB,USERLAB,USERTOT,         X
               DSAB,                                             Y02083X
               WTG,PREFX,PSA,                                    Y02080*
               TIOT,RRPL,EXPAND=YES                              Y02144
         IECEQU
         END
