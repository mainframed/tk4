         TITLE 'IFG0195B - OPEN TAPE INPUT AND OUTPUT SL POSITIONING'
         COPY  LCGASMSW
IFG0195B CSECT
***********************************************************************
*                                                                     *
*        VS2 RELEASE 3.7 DELETIONS/CHANGES                            *
*0000333164                                                    @ZA11150
*0000                                                          @ZA28320
*        VS2 RELEASE 03 DELETIONS/CHANGES                             *
*0000                                                          @ZA00003
*0000                                                          @ZA04600
*0000                                                          @ZA04601
*0000                                                          @ZA04602
*0000                                                          @ZA04603
*0000                                                          @ZA04605
*0000                                                          @ZA04606
*0000                                                          @ZA04607
*0000                                                          @ZA04608
*0000                                                          @ZA05622
*0000                                                          @ZA07028
*0000827400                                                    @ZA07589
*0000                                                          @ZA08035
*        VS2 RELEASE 02 DELETIONS/CHANGES                             *
*0000332863                                                    @ZA02882
*                                                                     *
* MODULE NAME = IFG0195B (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN - LABELED TAPE POSITIONING                  *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 4, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. ZERO THE DCB BLOCK COUNT.                                 *
*                                                                     *
*        2. ENSURES THAT CHECK POINT DATA SETS ONLY GO ON SECURE      *
*        VOLUMES AND THAT NON CHECK POINT DATA SETS DON'T GO ON CHECK *
*        POINT SECURE VOLUMES.                                        *
*                                                                     *
*        3. TEST THE UCB FILE SEQUENCE NUMBER.  IF IT IS ZERO, THEN   *
*        THE JFCB FILE SEQUENCE NUMBER IS EXAMINED.  IF IT INDICATES  *
*        THAT A FILE GREATER THAN THE FIRST IS BEING OPENED, THEN THE *
*        HEADER LABEL IS READ.  THE FILE SEQUENCE NUMBER FROM THE     *
*        LABEL IS PLACED IN THE UCB.  THE TAPE IS FORWARD OR BACK     *
*        SPACED AS NECESSARY TO POSITION IT TO THE REQUESTED FILE (   *
*        POSITIONING IS DETERMINED BY COMPARING THE UCB AND JFCB FILE *
*        SEQUENCE NUMBERS.)                                           *
*        THE TAPE IS POSITIONED TO THE HEADER 1 LABEL FOR NORMAL INPUT*
*        OPERATIONS, AND IT IS POSITIONED TO THE TRAILER 1 LABEL FOR  *
*        RDBACK OR DISP=MOD PROCESSING.                               *
*                                                                     *
*        4. STARTS READ FILE LABEL 1.                                 *
*                                                                     *
*        5. VERIFIES THAT THE DSNAME FROM THE LABEL IS THE SAME AS    *
*        THAT SPECIFIED IN THE JFCB.                                  *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                  PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY, *
*                  LINK PACK AREA RESIDENT/PAGEABLE                   *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0195B R14 = 0 NORMAL ENTRY                                *
*        IFG0195B R14 = 4 RETURN FROM IFG0194J                        *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        FROM IFG0194A:                                               *
*           IC  RET,DXSAVOFF                                          *
*           IECRES LOAD,MODID=DXSAVMOD,BRCODE=(RET),BRANCH=QUEUED     *
*                                                                     *
*        FROM IFG0194J:                                               *
*           IC RET,DXRETCOD                                           *
*           IECRES LOAD,MODID=DXRETMOD,BRCODE=(RET),BRANCH=QUEUED     *
*                                                                     *
* INPUT = STANDARD                                                    *
*                                                                     *
* OUTPUT =                                                            *
*        1. TAPE POSITIONED AT REQUESTED FILE.                        *
*           DXCCW3 SET TO INDICATE TO IFG0195H THAT RDBACK OR OUTPUT  *
*           DISP=MOD POSITIONING HAS BEEN DONE.                       *
*                                                                     *
*        2. INDICATORS SET FOR:                                       *
*           A. SETTING SECURITY INDICATOR IN LABEL AND EXTENDING TO   *
*           ANOTHER VOLUME IF A MOD DATA SET REACHES EOV.             *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0194A                                                     *
*        IFG0195H TAPE INPUT HEADER LABEL VERIFICATION                *
*        IFG0196J JFCB TO DCB MERGE                                   *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0190P ABEND:                                              *
*        9 - 613-04 ABEND - I/O ERROR POSITIONING TAPE.               *
*       10 - A13-04 ABEND - BACKSPACED INTO LOAD POINT DUE TO A       *
*            INCORRECT UCB FILE SEQUENCE COUNT OR TAPE POSITION.      *
*       11 - 613-08 ABEND - I/O ERROR READING LABEL. (RECOVERABLE)    *
*       12 - 613-0C ABEND - INVALID TAPE LABEL READ. (RECOVERABLE)    *
*       14 - 813-04 ABEND - INCORRECT DATA SET NAME. (RECOVERABLE,    *
*            (DETECTED BY IFG0195B, ISSUED BY IFG0195H)               *
*      152 - A13-08 ABEND - FILE SEQUENCE BEFORE START OF VOLUME      *
*            WHILE POSITIONING TO START OF FILE.                      *
*      153 - A13-0C ABEND - FILE SEQUENCE BEFORE START OF VOLUME      *
*            WHILE POSITIONING TO END OF FILE.                        *
*            (DETECTED BY IFG0195B, ISSUED BY IFG0195H)               *
*      154 - A13-10 ABEND - TM INSTEAD OF HDR1 DURING FSF POSITIONING.*
*            (DETECTED BY IFG0195B, ISSUED BY IFG0195H)               *
*      156 - A13-18 ABEND - EOV1 ON LAST OR ONLY VOLUME AND           *
*            DESIRED FILE SEQUENCE IS GREATER THAN EOV1'S.            *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG019RA                                              *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCKS =                                                 *
*        UCB, JFCB, DSAB                                              *
*                                                                     *
* TABLES = O/C WORK AREA:                                             *
*              WTG TABLE, CCW, DXRETMOD, DXSAVMOD                     *
*                                                                     *
* MACROS = IECEQU, IECDSECS, MODESET, DMABCOND, IECRES, XLATE, EXCP,  *
*          XCTLTABL, WTO                                              *
*                                                                     *
* CHANGE ACTIVITY = SEE DELETIONS/CHANGES ABOVE AT START OF LISTING.  *
*                                                                     *
***********************************************************************
         EJECT
         BALR  RBASE,0
         USING *,RBASE
*
         USING FORCORE,RCORE
*        USING WTG,RWTG                 DEFINE BASE TO WTG TABLE
         USING IHADCB,RDCB
         USING TIOENTRY,RTIOT
         USING UCBOB,RUCB
*
         B     LABEL00(RET)             BR ON REG 14 CODE        Y02083
LABEL00  B     OTA25000                 NORMAL ENTRY             Y02083
         B     OTA25455                 RETURN IFG0194J          Y02083
*
***********************************************************************
*
*  ZERO DCB TAPE BLOCK COUNT
*
OTA25000 EQU   *                        NORMAL ENTRY
OTA25200 TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP
         BNO   OTA25300                 BRANCH IF NOT EXCP
         TM    DCBMACRF+1,DCBMDEV       IS DEV DEP SECTION PRESENT
         BZ    OTA25400                 BRANCH IF DEV DEP NOT PRESENT
OTA25300 EQU   *                        NOT EXCP
         XC    DCBBLKCT,DCBBLKCT        ZERO BLOCK COUNT
         EJECT
***********************************************************************
*                                                                     *
*          MAKE SURE CHECK POINT DATA SETS ONLY GO ON SECURE VOLUMES  *
*          AND THAT NON CHECK POINT DATA SETS DONT GO ON CHECK POINT  *
*          SECURE VOLUMES.                                            *
*                                                                     *
***********************************************************************
OTA25400 EQU   *
         MVI   DXLBL,K0                 IND NO HDR1 READ, POS  @ZA04601
         L     RB,DXDSAB                GET DSAB ADDRESS         YM7580
         USING DSAB,RB                                           YM7580
         TM    DSABFLG4,DSABCKVL        CHECK IF SECURE VOL      YM7580
         BO    OTA25480                 BRANCH IF SECURE         YM7580
         DROP  RB                                                YM7580
         TM    JFCBLTYP,JFCBAL          ANSI LABEL               Y02083
         BO    OTA25480                 YES   NO PROCESSING  REQ Y02083
         CLC   JFCBFLSQ,BSRCCW+K6       FILE SEQ NO. GT ONE      Y02083
         BNH   OTA25480                 NO                       Y02083
         CLC   SRTEFSCT,BSRCCW+K6       SEQ CNT GT ONE           Y02083
         BNH   OTA25405                 NO, READ HDR 1           Y02083
***********************************************************************
*              BACK SPACE FILE TWICE TO GET IN FRONT OF EOV1 OR EOF1  *
***********************************************************************
         MVC   DXCCW1,BSFCCWD           SET UP FOR BSF           Y02083
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT  Y02083
         BZ    OTA27500                 BRANCH IF I/O ERROR      Y02083
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT@ZA04601
         BZ    OTA27500                 BRANCH IF I/O ERROR    @ZA04601
***********************************************************************
*              FORWARD SPACE FILE ONCE TO GET TO EOV1 OR EOF1         *
***********************************************************************
         MVI   DXCCW1,CCWFSF            SET UP FORWARD SPACE FILEY02083
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT  Y02083
         BZ    OTA27500                 BRANCH IF I/O ERROR      Y02083
***********************************************************************
*              READ 80 BYTES     HDR1 (VOL/EOV1/EOF1/TM) EXPECTED     *
***********************************************************************
OTA25405 EQU   *                        INSTR MUST FOLLOW        Y02083
         BAL   RD,OTA25650              GO READ LABEL OR TM    @ZA04601
         BO    OTA25420                 BRANCH IF NO I/O ERROR   Y02083
         TM    IOBSTAT0,CSWUNITX        WAS TAPE MARK READ     @ZA04601
         BO    OTA25441                 BR IF YES TO BSF/NONE  @ZA04601
OTA25415 EQU   *                        I/O ERROR READING LABEL@ZA04601
OABD011  EQU   011                      I/O ERROR READING LBL  @ZA04601
         LA    R0,OABD011               LOAD 613-08 ABEND CODE @ZA04601
         CLC   JFCBFLSQ,BSRCCW+K6       FILE SEQ NO. GT ONE    @ZA28320
         BH    OTA25416                 YES, ABEND             @ZA28320
         B     OTA25451                 REJECT VOLUME          @ZA11150
*
OTA25416 EQU   *                        INVALID LABEL READ     @ZA04601
         MVC   DXSAVMOD,ID5B5B          SAVE THIS LOAD FOR RETRN Y02083
         MVI   DXSAVOFF,K0              SAVE RETURN OFFSET       Y02083
         LA    RET,K24                  INITIALIZE RETRY OFFSET  Y02083
         DMABCOND (0),ID5B0P,RETURN=ID5B4A  GO PROB DET/ABEND  @ZA04601
*
OTA25418 EQU   *                        INVALID LABEL READ     @ZA04601
OABD012  EQU   012                      INVALID LABEL READ     @ZA04601
         LA    R0,OABD012               LOAD 613-0C ABEND CODE @ZA04601
         B     OTA25416                 BR TO COMMAND ABEND    @ZA04601
*
OTA25420 EQU   *                        INSTR MUST FOLLOW        Y02083
         CLC   FL1LABI(K4),OP2KHDR1     FILE HEADER LABEL        Y02083
         BE    OTA25425                 CHK SEQ NUMBER           Y02083
         CLC   FL1LABI(K4),OP2KEOV1     EOV TRAILER LABEL      @ZA04601
         BE    OTA25425                 BR IF YES TO USE IT    @ZA04601
         CLC   FL1LABI(K4),OP2KEOF1     FILE TRAILER LABEL       Y02083
         BE    OTA25425                 BR IF YES TO USE IT    @ZA04601
         CLC   FL1LABI,VOL195B          VOLN LABEL             @ZA04601
         BE    OTA25405                 BR IF YES TO READ NEXT @ZA04601
         B     OTA25418                 BR ABEND INVALID LABEL @ZA04601
OTA25425 EQU   *                        INSTR MUST FOLLOW        Y02083
         CLC   SRTEFSEQ(K2),DANULLD     SEQ NO. = ZERO           Y02083
         BNE   OTA25440                 NO                       Y02083
         LA    RB,K1                    ASSUME FILE SEQ NO IS 1@ZA07028
         TM    FL1FILSQ,ALLBITS-BLANK   FILE SEQ NO BLANK OR 0 @ZA07028
         BZ    OTA25435                 YES, BRANCH            @ZA07028
         PACK  DXWORK(K8),FL1FILSQ      PACK SEQ NO.             YM4659
         CVB   RB,DXWORK                CONV SEQ NO. TO BINARY   Y02083
OTA25435 EQU   *                                               @ZA07028
         MODESET EXTKEY=SUPR                                     Y02083
         STH   RB,SRTEFSEQ              STORE FILE SEQ NO.       Y02083
         MVI   UCBFSCT+K1,K1            SET FILE SEQ COUNT TO 1  YM5321
         MODESET EXTKEY=DATAMGT                                  Y02083
***********************************************************************
*              READ 80 BYTES   HDR2 (EOV2/EOF2/UHL/UTL/TM) EXPECTED   *
***********************************************************************
OTA25440 EQU   *                        INSTR MUST FOLLOW        Y02083
         BAL   RB,OTA27400              READ LABEL               Y02083
         BO    OTA25442                 BRANCH IF NO I/O ERROR @ZA02882
         TM    IOBSTAT0,CSWUNITX        WAS TAPE MARK READ?    @ZA02882
         BZ    OTA25415                 NO, BRANCH TO ABEND    @ZA02882
OTA25441 EQU   *                        TAPE MARK, NOT HDR1/2  @ZA04601
         L     RB,DXDSAB                DSAB ADR               @ZA02882
         USING DSAB,RB                                         @ZA02882
         MODESET  EXTKEY=SCHED                                 @ZA02882
         NI    DSABFLG4,X'FF'-DSABCKDS-DSABCKVL  RESET DSAB CK @ZA02882
*                                       PT DS AND CP VOL INDS  @ZA02882
         MODESET  EXTKEY=DATAMGT                               @ZA02882
         CLC   SRTEFSCT,BSRCCW+K6       SEQ GT ONE             @ZA02882
         BH    OTA25480                 YES, BR TO NORMAL PROC @ZA02882
         MVI   DXCCW1,CCWBSF            SET UP BACKSPACE FILE  @ZA02882
         BAL   RB,OTA27400              BR TO EXCP AND WAIT    @ZA02882
         BZ    OTA27500                 BR IF I/O ERROR        @ZA02882
         CLC   FL1LABI(K4),OP2KHDR1     WAS A HDR1 ALSO READ   @ZA04601
         BNE   OTA25480                 BR IF NO, DONE         @ZA04601
         B     OTA25477                 BR TO DO 1 BSR         @ZA02882
*
OTA25442 EQU   *                                               @ZA02882
         CLC   FL1LABI,OP2KHDR1         IS THIS HDR(2) LABEL   @ZA04601
         BE    OTA25443                 BR IF YES              @ZA04601
         CLC   FL1LABI,OP2KEOV1         IS THIS EOV(2) LABEL   @ZA04601
         BE    OTA25443                 BR IF YES              @ZA04601
         CLC   FL1LABI,OP2KEOF1         IS THIS EOF(2) LABEL   @ZA04601
         BNE   OTA25445                 BR IF NO, NOT LBL(2)   @ZA04601
OTA25443 EQU   *                                               @ZA04601
         CLI   FL1NO,C'2'               IS THIS LBL2 (HDR2)    @ZA04601
         BNE   OTA25445                 BR IF NO, NOT HDR2 LBL @ZA04601
         CLI   FL2DSIND,CHARC           CHK PT IND ON IN HDR2    Y02083
         BE    OTA25450                 YES                      Y02083
OTA25445 EQU   *                        INSTR MUST FOLLOW        Y02083
         L     RB,DXDSAB                DSAB ADR                 Y02083
         USING DSAB,RB                                           Y02083
         MODESET  EXTKEY=SCHED                                   Y02083
         NI    DSABFLG4,X'FF'-DSABCKDS-DSABCKVL  RESET DSAB CK   Y02083
*                                       PT DS AND CP VOL INDS    Y02083
         MODESET  EXTKEY=DATAMGT                                 Y02083
         B     OTA25470                 CHK FILE SEQ CNT         Y02083
OTA25450 EQU   *                        INSTR MUST FOLLOW        Y02083
         CLC   DXVOLSR2,SCRATCH         IS SCRATCH MOUNTED?    @ZA05622
         BNE   OTA25453                 BRANCH IF NOT          @ZA05622
OTA25451 MVC   DXRETMOD,ID5B5B          LOAD RETURN 5B         @ZA11150
         MVI   DXRETCOD,K0              ZERO RETURN CODE       @ZA05622
         MVC   DXVOLSR1,UCBVOLI         MOVE IN VOLSER         @ZA05622
         IECRES LOAD,MODID=ID5B4A,BRCODE=K16,  LOAD 194A TO    @ZA05622X
               PREFIX=WTGPREFX,BRANCH=QUEUED   REJECT TAPE     @ZA05622
*************************************************************  @ZA05622
*       ASK OPERATOR IF VOLUME IS SECURE                    *  @ZA05622
*************************************************************  @ZA05622
OTA25453 EQU   *                        INSTR MUST FOLLOW      @ZA05622
         MVC   DXRETMOD,ID5B5B          SET RETURN NAME & ADR    Y02083
         MVI   DXRETCOD,K4              SET BR TABLE RETURN VAL  Y02083
         XC    DXWORK1,DXWORK1          ZERO WTOR REPLY AREA     Y02083
         LA    R1,DXWORK1               POINT TO REPLY AREA      Y02083
         LA    R0,K3                    SET REPLY LENGTH         Y02083
         SLL   R0,K24                   MOVE LENGTH TO HI BYTE   Y02083
         OR    R1,R0                    SET UP WTOR PARM         Y02083
         IECRES LOAD,MODID=ID5B4J,BRCODE=K56,BRANCH=QUEUED       Y02083
OTA25455 EQU   *                        INSTR MUST FOLLOW        Y02083
         IECRES WAIT                    WAIT FOR REPLY           Y02083
         OC    DXWORK1(K3),BLANKS       FOLD REPLY TO UPPER CASE Y02083
         CLC   KYES,DXWORK1             REPLY=YES                Y02083
         BE    OTA25460                 YES                      Y02083
         CLC   KNO,DXWORK1              REPLY=N0                 Y02083
         BE    OTA25445                 YES                      Y02083
         B     OTA25450                 NEITHER ISSUE MSG AGAIN  Y02083
OTA25460 EQU   *                        INSTR MUST FOLLOW        Y02083
         L     RB,DXDSAB                DSAB ADR                 Y02083
         MODESET  EXTKEY=SCHED                                   Y02083
         OI    DSABFLG4,DSABCKDS+DSABCKVL       SET DSAB CHK PT  YM6514
*                                       DS AND CP VOL INDS       Y02083
         MODESET  EXTKEY=DATAMGT                                 Y02083
OTA25470 EQU   *                        INSTR MUST FOLLOW        Y02083
         CLC   SRTEFSCT,BSRCCW+K6       SEQ CNT GT ONE           Y02083
         BNH   OTA25475                 NO                       Y02083
***********************************************************************
*              FORWARD SPACE ONE FILE TO GET AFTER TRAILER LABELS     *
***********************************************************************
         MVI   DXCCW1,CCWFSF            SET UP FORWARD SPACE FILEY02083
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT  Y02083
         BZ    OTA27500                 BRANCH IF I/O ERROR      Y02083
         B     OTA25480                 START NORMAL PROCESSING  Y02083
***********************************************************************
*              BACK SPACE RECORD TWICE TO GET IN FRONT OF HDR LABELS  *
***********************************************************************
OTA25475 EQU   *                        INSTR MUST FOLLOW        Y02083
         MVC   DXCCW1,BSRCCW            SET UP FOR BACKSPACE REC Y02083
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT  Y02083
         BZ    OTA27500                 BRANCH IF I/O ERROR      Y02083
OTA25477 EQU   *                        BACKSPACE 1 RECORD     @ZA04601
         MVC   DXCCW1,BSRCCW            SET UP FOR BSR         @ZA04601
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT@ZA04601
         BZ    OTA27500                 BRANCH IF I/O ERROR
         DROP  RB                                                Y02083
OTA25480 EQU   *                        INSTR MUST FOLLOW        Y02083
*
***********************************************************************
         EJECT
***********************************************************************
*
*  READ HDR1 LABEL TO DEFINE UCB FILE SEQUENCE NUMBER IF TAPE NOT YET
*  USED.  (ONLY OPEN OUTPUT TO FILE 1 OR EOV OUTPUT WILL OVERRIDE THIS)
*  IF VOL LABEL WAS JUST CREATED BY OMODVOL1, IT IS FOLLOWED BY A TM.
*  IF THE NUMBER IN THE UCB IS ZERO, THEN THE VOLUME MUST HAVE JUST
*  BEEN VERIFIED AND SO TAPE IS POSITIONED AFTER VOL1 LABEL.
*
         MVI   DXLBL,K0                 IND NO POSITIONING DONE@ZA04601
*                                       AND SO EOV1 TEST MAY BE NEEDED
         CLC   UCBFSEQ,DANULLD          IS FILE SEQ NUMBER IN SRT ZERO
         BNE   OTA26100                 BRANCH IF NO
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         MVC   UCBFSCT(L'UCBFSCT+L'UCBFSEQ),FW5B101  SET UCB   @ZA04601
*                                       FILE COUNT AND SEQ TO 1
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
OTA25600 EQU   *                        READ A RECORD
         BAL   RD,OTA25650              GO READ LABEL OR TM    @ZA04601
         BO    OTA25900                 BR IF LABEL READ OK    @ZA04601
         TM    IOBSTAT0,CSWUNITX        TEST UNIT EXCEPTION TM @ZA04601
         BZ    OTA25415                 BR IF NO, I/O ERROR    @ZA04601
         MVC   DXCCW1,BSFCCWD           SET UP TO BSF OVER TM  @ZA04601
         B     OTA26000                 BR TO BSF OVER TM      @ZA04601
*
OTA25900 EQU   *                        TEST FOR HDR 1
         CLC   FL1LABI(4),OP2KHDR1      IS THIS A FILE HEADER LABEL
         BE    OTA25950                 BR IF YES TO USE IT    @ZA04601
         CLC   FL1LABI,VOL195B          IS THIS A VOL LABEL    @ZA04601
         BE    OTA25600                 BR YES, READ NEXT LABEL@ZA04601
         CLC   FL1LABI,UVL195B          IS THIS A UVL LABEL    @ZA04601
         BE    OTA25600                 BR YES, READ NEXT LABEL@ZA04601
         B     OTA25418                 BR ABEND INVALID LABEL @ZA04601
*
OTA25950 EQU   *                        HAVE HDR1 LABEL        @ZA04601
         LA    RB,K1                    ASSUME FILE SEQ NO IS 1@ZA07028
         TM    FL1FILSQ,ALLBITS-BLANK   FILE SEQ NO BLANK OR 0 @ZA07028
         BZ    OTA25960                 YES, BRANCH            @ZA07028
         PACK  DXCCW2,FL1FILSQ          PACK FILE SEQ NUMBER FROM LBL
         CVB   RB,DXCCW2                CONVERT FIL SEQ NO TO BINARY
OTA25960 EQU   *                                               @ZA07028
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         STH   RB,UCBFSEQ               STORE RESULTS IN UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY    @ZA04601
*
         MVC   DXCCW1,BSRCCW            SET UP TO BSR          @ZA04601
OTA26000 EQU   *                        TO DO BSF              @ZA04601
         BAL   RB,OTA27400              BR TO EXCP AND WAIT    @ZA04601
         BZ    OTA27500                 BR IF I/O ERROR        @ZA04601
*
***********************************************************************
*
*  DETERMINE IF POSITIONING TO START OR TO END OF FILE.
*
OTA26100 EQU   *                        POSITION TAPE
         XC    DXCCW3(K2),DXCCW3        ZERO END FILE POS IND  @ZA00003
*
         LH    RC,JFCBFLSQ              JFCB FIL SEQ CTR
         LH    RD,UCBFSEQ               SRT FIL SEQ CTR
         TM    0(RPARC),PLISTOP1-PLISTRBK  PRELIMINARY TO RDBACK TEST
         BNZ   OTA26150                 BRANCH IF NOT RDBACK   @ZA00003
         TM    0(RPARC),PLISTRBK        IS IT  RDBACK
         BO    OTA26200                 BRANCH IF RDBACK       @ZA00003
*
OTA26150 EQU   *
         TM    0(RPARC),PLISTUPD        TEST FOR INPUT         @ZA00003
         BZ    OTA26800                 BR IF YES, POS TO START@ZA00003
         TM    JFCBIND2,JFCOLD          OUTPUT, IS DISP=MOD    @ZA00003
         BO    OTA26700                 BR NO, DISP=OLD OR NEW @ZA04601
*
*----------------------------------------------------------------------
*
*  READ BACKWARD OR DISP=MOD OUTPUT POSITIONING TO END OF FILE FOLLOWS
*
OTA26200 EQU   *                        POSITION FOR READBACK
         STH   RC,DXCCW3                SAVE END FILE POS IND  @ZA00003
*
         LA    RF,K1(RD)                CALC FILE SEQ AT WHICH @ZA04602
         SH    RF,UCBFSCT               THIS TAPE STARTS       @ZA04602
OABD153  EQU   153                      FILE BEFORE START TAPE @ZA04602
         LA    R0,OABD153               LOAD A13-0C ABEND CODE @ZA04602
         CR    RF,RC                    IS FILE ON THIS TAPE   @ZA04602
         BH    OTA26940                 BR IF NOT ON TAPE TO   @ZA04602
*                                       POSSIBLE RECOVERY PREVIOUS TAPE
*
         LA    RC,K1(,RC)               INCR JFCB FIL SEQ NR
         CR    RC,RD                    JFCB+1=SRT
         BE    OTA26600                 BR IF THEY ARE EQUAL
         BH    OTA26900                 BR IF JFCB HIGH
*
*----------------------------------------------------------------------
*
*  JFCB FILE SEQUENCE NO. IS LOW
*
OTA26300 EQU   *                        TAPE NEEDS BSF POSITIONING
         MVC   DXCCW1,BSFCCWD           SET UP BSF CCW         @ZA00003
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT
         BZ    OTA27500                 BRANCH IF I/O ERROR
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT@ZA00003
         BZ    OTA27500                 BRANCH IF I/O ERROR    @ZA00003
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT@ZA00003
         BZ    OTA27500                 BRANCH IF I/O ERROR    @ZA00003
*
         L     RD,UCBFSCT+UCBFSEQ-UCBFSEQ  DECREMENT UCB FILE  @ZA00003
         S     RD,FW5B101               COUNT AND SEQUENCE     @ZA00003
         MODESET EXTKEY=SUPR            UCB KEY                @ZA00003
         ST    RD,UCBFSCT+UCBFSEQ-UCBFSEQ  BY 1 EACH           @ZA00003
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY    @ZA00003
*
         CH    RC,UCBFSEQ               CHECK AT DESIRED FILE  @ZA00003
         BL    OTA26300                 BR IF NO, CONTINUE BSF @ZA00003
*
         BAL   RB,OTA27400              BR TO DO EXTRA BSF     @ZA00003
         BZ    OTA27500                 BR IF I/O ERROR        @ZA00003
*
         MVI   DXCCW1,CCWFSF            SET UP FORWARD SPACE FILE
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT
         BZ    OTA27500                 BRANCH IF I/O ERROR
         B     OTA26100                 BR TO CHECK FOR RDBACK OUT MOD
*                                       POSITIONING TO PREVIOUS FILE
*----------------------------------------------------------------------
*
*  RDBACK OR DISP=MOD OUTPUT, JFCB FILE SEQUENCE NO. IS EQUAL
*  (NO TEST FOR EOV1 BECAUSE EITHER THIS IS THE LAST VOLUME, A SPECIFIC
*  VOLUME SEQUENCE REQUEST, OR THE DATA SET IS MISSING FROM THE NEXT
*  VOLUME AND WE ARE ALREADY IN DISP=MOD VOLUME POSITIONING RECOVERY)
*
OTA26600 EQU   *
         MVC   DXCCW1,BSFCCWD           SET UP FOR BSF
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT
         BZ    OTA27500                 BRANCH IF I/O ERROR
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT@ZA00003
         BZ    OTA27500                 BRANCH IF I/O ERROR    @ZA00003
         MVI   DXCCW1,CCWFSF            SET UP FORWARD SPACE FILE
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT
         BZ    OTA27500                 BRANCH IF I/O ERROR
*
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         L     RD,UCBFSCT+UCBFSEQ-UCBFSEQ  DECREMENT UCB FILE  @ZA00003
         S     RD,FW5B101               COUNT AND SEQUENCE     @ZA00003
         ST    RD,UCBFSCT+UCBFSEQ-UCBFSEQ  BY 1 EACH           @ZA00003
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
         B     OTA27000                 SKIP CODE FOR NOT RDBACK
*
*----------------------------------------------------------------------
*
*  INPUT OR OUTPUT POSITIONING TO START OF FILE FOLLOWS
*
*              IF OPENING TO FILE 1, THEN WE CAN PROTECT AGAINST
*              PREVIOUS ABENDS WHICH MAY HAVE LEFT THE TAPE
*              MISPOSITIONED BY REWINDING THE TAPE TO FILE 1.
*              NO REWIND IS REQUIRED IF THIS OPEN JUST VERIFIED
*              THE VOLUME BY REWINDING IT, READING VOL1, AND
*              READING HDR1 IN THIS MODULE.  IF WE DO A REWIND,
*              IT WILL PROBABLY BE A NOP, BECAUSE EOV OR CLOSE
*              DID A REWIND TO POSITION THE TAPE TO FILE 1 AND
*              THUS WE ARE NOT SPENDING TIME READING VOL1 TWICE.
*
OTA26700 EQU   *                        OUTPUT TO START OF FILE@ZA04601
         CH    RC,FW5B101               IS JFCB FILE SEQ = 1   @ZA04601
         BNE   OTA26800                 BR IF NO TO USE UCBFSEQ@ZA04601
         CLC   UCBFSCT,FW5B101          IS TAPE AT COUNT = 1   @ZA04601
         BNE   OTA26850                 BR IF NO TO REWIND     @ZA04601
         CLI   DXLBL,K0                 WAS HDR1 JUST READ     @ZA04601
         BE    OTA26850                 BR IF NO TO DO REWIND  @ZA04601
         B     OTA26860                 BR TO SET UCB FSEQ = 1 @ZA04601
*
OTA26800 EQU   *                        INPUT TO START OF FILE @ZA04601
         LA    RF,K1(RD)                CALC FILE SEQ AT WHICH @ZA04601
         SH    RF,UCBFSCT               THIS TAPE STARTS       @ZA04601
OABD152  EQU   152                      FILE STARTS BEFORE TAPE@ZA04601
         LA    R0,OABD152               LOAD A13-08 ABEND CODE @ZA04601
         CR    RC,RF                    CHECK IF FILE ON TAPE  @ZA04601
         BL    OTA27600                 BR NOT ON TAPE TO ABEND@ZA04601
         BH    OTA26870                 BR HIGH TO BSF,NONE,FSF@ZA04601
         CLI   DXLBL,K0                 WAS HDR1 JUST READ     @ZA04601
         BNE   OTA26870                 BR YES, NO WANT REWIND @ZA04601
*
OTA26850 EQU   *                        REWIND TAPE            @ZA04601
         MVC   DXCCW1,REWCCWD           SET UP CCW FOR REWIND  @ZA04601
         BAL   RB,OTA27400              BR TO EXCP AND WAIT    @ZA04601
         BZ    OTA27500                 BR IF I/O ERROR        @ZA04601
         MODESET EXTKEY=SUPR            UCB KEY                @ZA04601
         MVC   UCBFSCT,FW5B101          SET UCB FILE COUNT TO 1@ZA04601
OTA26860 EQU   *                                               @ZA04601
         MODESET EXTKEY=SUPR            UCB KEY                @ZA04601
         STH   RC,UCBFSEQ               SET UCB TO JFCB FSEQ   @ZA04601
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY    @ZA04601
         B     OTA27000                 BR, TAPE NOW POSITIONED@ZA04601
*
OTA26870 EQU   *                                               @ZA04601
         CR    RC,RD                    IS JFCB FSEQ = UCB FSEQ@ZA04601
         BL    OTA26300                 BR IF LOW TO DO BSF    @ZA04601
         BE    OTA26995                 BR IF EQUAL, CHECK EOV1@ZA04601
*                                       HIGH, DO FSF           @ZA04601
*
*----------------------------------------------------------------------
*
*  JFCB FILE SEQUENCE NO. IS HIGH
*
OTA26900 EQU   *                        TAPE NEEDS FSF POSITIONING
         BAL   RC,OTA26990              GO CHECK FOR PREV EOV1 @ZA04606
*
OTA26905 EQU   *                                               @ZA00003
         BAL   RD,OTA25650              GO READ HDR1 OR TM     @ZA00003
         BZ    OTA26930                 BR IF I/O ERROR OR TM  @ZA04603
*
         CLC   FL1LABI,VOL195B          IS THIS A VOL LABEL    @ZA00003
         BE    OTA26905                 BR YES, READ NEXT LABEL@ZA00003
         CLC   FL1LABI,UVL195B          IS THIS A UVL LABEL    @ZA00003
         BE    OTA26905                 BR YES, READ NEXT LABEL@ZA00003
         CLC   FL1LABI(K4),OP2KHDR1     IS THIS A HDR1 LABEL   @ZA00003
         BNE   OTA25418                 BR NO, INVALID LABEL   @ZA00003
*
         CLC   UCBFSEQ,DXCCW3           IS THIS HDR1 OF DESIRED@ZA00003
         BNE   OTA26920                 END FILE, BR IF NO     @ZA00003
*
*  DOING THE DSN TEST NOW TO HDR1 RATHER THAN ONLY LATER TO EOV1/EOF1
*  SAVES 10 MINUTES PER REEL IF DOING DISP=MOD VOLUME POSITIONING
*  RECOVERY DUE TO STARTING SEARCH ON A VOLUME LATER THAN THE
*  LAST ONE ACTUALLY WRITTEN ON, OR IF WILL DSN ABEND ANYWAY.
*
*  DETERMINE 17 LEAST SIGNIFICANT NON-BLANK
*  CHARACTERS IN JFCB DATA SET NAME
*
         LA    RD,JFCBDSNM              POINT TO DSNAME        @ZA00003
         LA    RB,JFCBDSNM+K27          ADDR 1ST POSS SIG CHAR @ZA00003
OTA26910 EQU   *                                               @ZA00003
         CLI   K16(RB),BLANK            IS THE CHARACTER BLANK @ZA00003
         BNE   OTA26912                 NO,GO SET UP START ADDR@ZA00003
         BCT   RB,OTA26910              GO CHECK NEXT CHAR     @ZA00003
OTA26912 EQU   *                                               @ZA00003
         LA    RC,K17(RB)               POINT TO FIRST BLANK   @ZA00003
         CLR   RB,RD                    LEFT PTR WITHIN FIELD  @ZA00003
         BNL   OTA26914                 BR IF YES              @ZA00003
         LR    RB,RD                    SET BASE OF START      @ZA00003
*
*  COMPARE THE DATA SET NAME IN THE HDR1 LABEL AGINST THE NAME IN THE
*  JFCB. CONTINUE IF EQUAL. IF NOT EQUAL AND THE DATA SET IS A
*  GENERATION DATA SET, IT MAY BE A DOS TAPE IN WHICH CASE THE
*  DATA SET NAME MUST BE COMPARED SEPARATELY FROM THE GENERATION
*  AND VERSION NUMBERS.
*
OTA26914 EQU   *                                               @ZA00003
         CLC   FL1ID,0(RB)              COMPARE 17 CHAR DSNAME @ZA00003
         BE    OTA26920                 BR EQUAL, CORRECT DSN  @ZA00003
*
         LA    RET,K8                   BR TABLE OFFSET DSN BAD@ZA00003
         TM    JFCBIND1,JFCGDG          GENERATION DATA SET    @ZA00003
         BNO   OTA27200                 BR IF NO, INCORRECT DSN@ZA00003
         LA    RF,K9                    PREP TO BACK OVER GEN  @ZA00003
         SR    RC,RF                    BACK UP END POINTER    @ZA00003
         BNE   OTA27200                 BR IF NOT EQUAL        @ZA00003
         CLC   FL1VNG,K7(RC)            COMPARE VERSION NUMBER @ZA00003
         BNE   OTA27200                 BR IF NOT EQUAL        @ZA00003
         SR    RB,RF                    BACK UP COMPARE START  @ZA00003
         CLR   RB,RD                    LEFT PTR WITHIN FIELD  @ZA00003
         BNL   OTA26917                 BR IF YES TO COMP 17   @ZA00003
         SR    RC,RD                    GET CHAR COUNT         @ZA00003
         LA    RF,FL1ID(RC)             PT DSN IN LBL +CHAR CNT@ZA00003
         CLI   0(RF),BLANK              SHOULD BE PAST NAME    @ZA00003
         BNE   OTA27200                 BR, LONGER THAN IN JFCB@ZA00003
         BCTR  RC,0                     SUB 1 FOR EX INSTR     @ZA00003
         EX    RC,OTA26916              COMPARE SHORT DSNAMES  @ZA00003
         B     OTA26918                 GO TEST COMPARE RESULT @ZA00003
OTA26916 CLC   FL1ID(*-*),JFCBDSNM      CLC INSTR FOR EXEC     @ZA00003
OTA26917 CLC   FL1ID,0(RB)              COMPARE DSNAMES        @ZA00003
OTA26918 BNE   OTA27200                 BR IF DSNAME INCORRECT @ZA00003
*
OTA26920 EQU   *                        DSN CORRECT OR NOT FILE@ZA00003
         MVC   DXCCW1,FSFCCWD           SET UP FOR FSF
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT
         BZ    OTA27500                 BRANCH IF I/O ERROR
*
         L     RD,UCBFSCT+UCBFSEQ-UCBFSEQ  INCREMENT UCB FILE  @ZA04608
         A     RD,FW5B101               COUNT AND SEQUENCE     @ZA04608
         MODESET EXTKEY=SUPR            UCB KEY                @ZA04608
         ST    RD,UCBFSCT+UCBFSEQ-UCBFSEQ  BY 1 EACH           @ZA04608
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY    @ZA04608
*
         BAL   RC,OTA27420              TEST TRLR LBLS FOR EOV1 SA55582
*                                       RETURN IF NOT EOV1      SA55582
         B     OTA26100                 GO LOOP UNTIL PROPER FILE IS
*                                       REACHED
*
OTA26930 EQU   *                        I/O ERR OR TM FOR HDR1 @ZA04603
         TM    IOBSTAT0,CSWUNITX        TEST UNIT EXCEPTION TM @ZA04603
         BZ    OTA25415                 BR IF NO, I/O ERROR    @ZA04603
*
         MVC   DXCCW1,BSFCCWD           SET UP FOR BSF OVER TM @ZA04603
         BAL   RB,OTA27400              BR TO EXCP AND WAIT    @ZA04603
*
OABD154  EQU   154                      TM BEFORE DESIRED FILE @ZA04603
         LA    R0,OABD154               LOAD A13-10 ABEND CODE @ZA04603
OTA26940 EQU   *                                               @ZA00003
         LA    RET,K12                  LOAD BR TABLE OFFSET   @ZA00003
         B     OTA27200                 GO IFG0195H POS RECOVRY@ZA00003
*
*----------------------------------------------------------------------
*
*  EOV1 LABEL ENCOUNTERED IN FRONT OF OR AT END OF DESIRED FILE.
*  IF POSITIONING TO START OF FILE, TRY TO GO TO NEXT TAPE AND
*  CONTINUE FSF TO CORRECT FILE.
*  IF POSITIONING TO END OF FILE, ABEND UNLESS EOV1 IS FOR DESIRED
*  FILE AND SO CAN TREAT AS EOF.  (NO RECOVERY BECAUSE
*  IF JFCBVLSQ=0, THEN ALREADY ON LAST VOLUME, AND
*  IF JFCBVLSQ NOT 0, THEN REQUEST FOR SPECIFIC VOLUME IN THE LIST
*  AND IT WILL NOT BE OVERRIDDEN.  ALSO, NO RECOVERY IN CASE HAVE
*  JUST BACKED UP FROM A VOLUME NOT CONTAINING THE DATA SET AND THUS
*  DO NOT WANT TO GET INTO A LOOP ADVANCING AND BACKING UP VOLUMES.)
*
OTA26950 EQU   *                        EOV1 ENCOUNTERED
OABD156  EQU   156                      FILE SEQ BEYOND EOV1   @ZA04605
         LA    R0,OABD156               LOAD A13-18 ABEND CODE @ZA04605
         LH    RC,DXCCW3                IS THIS RDBACK, OUT MOD@ZA04605
         LTR   RC,RC                    (OTHERWISE FILE BEYOND @ZA04605
         BZ    OTA26960                 EOV1), BR IF NO        @ZA04605
         LA    RC,K1(RC)                IS THIS FILE SEQUENCE  @ZA04605
         CH    RC,UCBFSEQ               OF DESIRED FILE        @ZA04605
         BNE   OTA27600                 BR IF NO TO ABEND      @ZA04605
         TM    JFCBIND2,JFCOLD          DISPOSITION MOD        @ZA08035
         BZ    OTA26960                 YES, BRANCH            @ZA08035
         B     OTA26600                 BR TO POSITION RDBACK  @ZA04605
*
OTA26960 EQU    *                       POS TO START OF FILE   @ZA04605
         LH    RB,DXVOLSEQ              LOAD VOLUME SEQUENCE NO SA55582
         SR    RC,RC                    ZERO REG                SA68161
         IC    RC,JFCBNVOL              LOAD NUMBER OF VOLS     SA68161
         CR    RC,RB                    IS VOLSEQ = NO. OF VOLS SA68161
         BE    OTA27600                 BR IF YES TO ABEND      SA68161
         LA    RB,K1(,RB)               INCREMENT VOLSEQ BY 1   SA55582
         STH   RB,DXVOLSEQ              AND STORE IT BACK       SA55582
         STH   RB,JFCBVLSQ              UPDATE JFCB NEXT OPEN  @ZA04607
*
*  WRITE MSG 'IEC140I DDNAMEXX,VOLIDX START OF DATA SET NOT ON VOLUME'
*
         MVC   MSGLSTSZ(OTA27701),OTA27700  MOVE MSG WORK AREA  SA55582
         MVC   MSGACTN(L'TIOEDDNM),TIOEDDNM  DDNAME TO MSG      SA55582
         MVC   MSGVOLSR+K3,UCBVOLI      VOLID TO MESSAGE        SA55582
         WTO   MF=(E,MSGLSTSZ)          WRITE MSG TO PROGRAMMER SA55582
*
         MVC   DXVOLSR1,UCBVOLI         GET VOLUME SERIAL NO.   SA55582
         MODESET EXTKEY=SUPR            UCB KEY                 SA55582
         MVI   UCBDMCT,K0               SET DATAMGT COUNT TO 0  SA55582
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY     SA55582
         MVC   DXRETMOD,ID5B5B          ID OF THIS MODULE       SA55582
         MVI   DXRETCOD,K0              BR TABLE ENTRY ON RETURNSA55582
         IECRES LOAD,MODID=ID5B4A,BRCODE=K0,BRANCH=QUEUED      @ZA04605
*
*----------------------------------------------------------------------
*
*  SUBROUTINE TO CHECK IF PREVIOUS FILE ENDED IN EOV ON THIS VOLUME.
*  TAPE IS AT START OF A FILE AND WILL BE FSF'ED OR IS AT DESIRED FILE.
*  IF NO POSITIONG DONE, CHECK PREVIOUS TRAILER LABELS FOR EOV.
*
OTA26990 EQU   *                        ENTRY VIA BAL RC,---   @ZA00003
         CLI   DXLBL,K0                 WAS VOL REPOSITIONED   @ZA00003
         BCR   7,RC                     RETURN IF YES          @ZA00003
         CLC   UCBFSCT,FW5B101          IS UCB FILE COUNT =1   @ZA04600
         BCR   8,RC                     RETURN IF EQUAL        @ZA04600
         MVC   DXCCW1,BSFCCWD           SET UP FOR BSF         @ZA00003
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT@ZA00003
         BZ    OTA27500                 BRANCH IF I/O ERROR    @ZA00003
         BAL   RB,OTA27400              BRANCH TO EXCP AND WAIT SA55582
         BZ    OTA27500                 BRANCH IF I/O ERROR     SA55582
         B     OTA27420                 TEST TRLR LBLS FOR EOV1@ZA00003
*                                       RETURN TO CALLER IF NOT EOV1
*
*----------------------------------------------------------------------
*
*  TAPE IS AT START OF DESIRED FILE.  IF NO POSITIONG DONE, CHECK
*  PREVIOUS TRAILER LABELS FOR EOV.
*
OTA26995 EQU   *                                               @ZA00003
         BAL   RC,OTA26990              GO CHECK FOR PREV EOV1 @ZA00003
*
***********************************************************************
         EJECT
***********************************************************************
*
OTA27000 EQU   *
         LA    RF,ID5B6J                MERGE MODULE IDTTR
         TM    PLISTOPT(RPARC),PLISTOIN  OUTPUT OR OUTIN         S21940
         BNO   OTA27100                 NO, BRANCH
         TM    JFCBIND2,JFCOLD          DISPOSITION MOD
         BNZ   OTA27300                 NO, BRANCH
*
***********************************************************************
*
*  START READ HDR1 (EOV1/EOF1) LABEL OF DESIRED DATA SET
*
OTA27100 EQU   *
*
         BAL   RB,OTA27350              GO SET UP READ CCW     @ZA00003
*
         EXCP  DXIOB
*
         LA    RET,K4                   SET FOR NEXT MOD ENTRY
OTA27200 EQU   *                        XCTL TO IFG0195H       @ZA00003
         LA    RF,ID5B5H                FILE LABEL 1 MOD IDTTR
OTA27300 EQU   *                        GO TO NEXT MODULE
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
         EJECT
***********************************************************************
*
*  SUBROUTINE TO SET UP READ CCW
*
OTA27350 EQU   *                        ENTRY VIA BAL RB,---   @ZA00003
         LA    RF,DXLBL                 ADDR TO READ IN LABEL  @ZA00003
         ST    RF,DXCCW1                STORE INTO CCW         @ZA00003
         MVI   DXCCW1,CCWRDTAP          READ TAPE COMMAND CODE @ZA00003
         LA    RF,K80                   NO FLAGS, LENGTH 80    @ZA00003
         ST    RF,DXCCW1+K4             STORE INTO CCW         @ZA00003
         TM    JFCBLTYP,JFCBAL          IS THIS ANSI LABEL     @ZA00003
         BCR   8,RB                     RETURN IF NO           @ZA00003
         MVI   DXCCW1+K4,CCWSILI        TURN ON SILI FOR AL    @ZA07589
         BR    RB                       RETURN                 @ZA00003
*
***********************************************************************
*
*  SUBROUTINE TO READ ONE RECORD, TEST FOR ERRORS, AND XLATE IF AL
*
OTA25650 EQU   *                        ENTRY VIA BAL RD,---   @ZA00003
         BAL   RB,OTA27350              GO SET UP READ CCW     @ZA00003
         BAL   RB,OTA27400              READ LABEL             @ZA00003
         BCR   8,RD                     RETURN IF I/O ERROR    @ZA00003
*
         TM    JFCBLTYP,JFCBAL          CHECK FOR ANSI LABEL   @ZA00003
         BZ    OTA25690                 BR IF NO               @ZA00003
         XLATE DXLBL,K80                TRANSLATE LABEL DATA   @ZA00003
OTA25690 EQU   *                                               @ZA00003
         TM    DXECB,ECBNOERR           SET NO I/O ERROR CODE  @ZA00003
         BR    RD                       RETURN                 @ZA00003
*
***********************************************************************
*
*  SUBROUTINE TO EXCP, WAIT, AND TEST ECB CODE FOR I/O ERROR
*
OTA27400 EQU   *                        ENTRY VIA BAL RB,---
         EXCP  DXIOB                    ISSUE I/O OPERATION
         IECRES WAIT
         TM    DXECB,ECBNOERR           CK FOR PERMANENT I/O ERROR
         BR    RB                       RETURN
*
***********************************************************************
*
*  SUBROUTINE TO TEST TRAILER LABELS FOR EOV
*
OTA27420 EQU   *                        ENTRY VIA BAL RC,---    SA55582
         MVC   DXCCW1,FSFCCWD           SET UP FOR FSF          SA55582
         BAL   RB,OTA27400              EXCP AND WAIT           SA55582
         BZ    OTA27500                 BR IF I/O ERROR         SA55582
         BAL   RD,OTA25650              GO READ A RECORD         YM1132
         BZ    OTA25415                 BR IF I/O ERROR        @ZA00003
         MVC   DXCCW1,FSFCCWD           SET UP FOR FSF          SA55582
         BAL   RB,OTA27400              EXCP AND WAIT           SA55582
         BZ    OTA27500                 BR IF I/O ERROR         SA55582
         CLC   FL1LABI(K4),OP2KEOV1     TEST FOR EOV RECORD     SA55582
         BE    OTA26950                 BR IF EOV RECORD        SA55582
         BR    RC                       RETURN IF NOT EOV RCD   SA55582
*
***********************************************************************
*
OTA27500 EQU   *                        POSITIONING ERROR
OABD010  EQU   010                      WRONG FILE SEQ NO.       S21940
         LA    R0,OABD010               LOAD A13-04 ABEND CODE   S21940
         TM    IOBSENSE+1,UCBLDPT       IS TAPE AT LOAD POINT   SA65081
         BO    OTA27600                 ERROR IF AT LOAD POINT  SA65081
OABD009  EQU   009                      I/O ERROR POSITIONING    S21940
         LA    R0,OABD009               LOAD 613-04 ABEND CODE   S21940
*
OTA27600 EQU   *                        POSITIONING ERROR
         DMABCOND (0),ID5B0P
         EJECT
***********************************************************************
*
*        CONSTANTS
*
OTA27700 WTO  'IEC140I DDNAMEXX,VOLIDX START OF DATA SET NOT ON VOLUME'X
               ,MF=L,DESC=6,            JOB STATUS             @ZA00003X
               ROUTCDE=11               PROGRAMMER INFORMATION @ZA00003
OTA27701 EQU   *-OTA27700               LENGTH OF WTO           SA55582
OP2KEOV1 DC    CL4'EOV1'                EOV1 LABEL ID           SA55582
VOL195B  DC    C'VOL'                   VOL LABEL ID           @ZA04601
UVL195B  DC    C'UVL'                   USER VOL LABEL ID      @ZA04601
FW5B101  DC    0F'0',H'1',H'1'          TO SET UCB COUNT+SEQ 1 @ZA04601
OP2KHDR1 DC    CL4'HDR1'                HDR 1 LBL ID
OP2KEOF1 DC    CL4'EOF1'                EOF 1 LBL ID             Y02083
BSRCCW   DC    X'2700000020000001'      BSR CCW
BSFCCWD  DC    X'2F00000020000001'      BSF CCW
FSFCCWD  DC    X'3F00000020000001'      FSF CCW
REWCCWD  DC    X'0700000020000001'      REW CCW
DANULLD  EQU   REWCCWD+1                3 BYTES OF ZEROES
BLANKS   DC    C'   '                   3 BLANK CHARS            Y02083
KYES     DC    C'YES'                   YES REPLY MASK           Y02083
KNO      DC    C'NO '                   NO REPLY MASK            Y02083
SCRATCH  DC    C'SCRTCH'                SCRATCH REQUEST        @ZA05622
*
XCTL5B   XCTLTABL ID=(ID5B4A,4A,ID5B5H,5H,ID5B6J,6J,ID5B0P,0P,   Y02080X
               ID5B4J,4J,                                        Y02083X
               ID5B5B,5B),BRT=YES,LENGTH=                        Y02080
         EJECT
         IECEQU ,                       DEFINE EQUATES
CHARC    EQU   C'C'                     CHARACTER C              Y02083
         IECDSECS TIOT,DSAB,UCB,DCB,MAIN,                      @ZA00003X
               EXPAND=YES                                        Y02083
         END
