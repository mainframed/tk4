         TITLE 'IFG0202J - CLOSE FINAL COMMON FUNCTION STRING'
IFG0202J CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 04.0 DELETIONS/CHANGES                         *
*0000342000,348000,348200,348300                               @ZA02211
*          VS2 RELEASE 2 DELETIONS/CHANGES                            *
*0000480636,480661                                              ZA00702
*          RELEASE 21 DELETIONS/CHANGES                               *
*0000479000,628900,629000                                        M1752
*0000018000,047600-050000,247500,367000,376000-384000,417000-    M0528
*0000477000,480000,482000-483000,485000-619000,628000-630000,    M0528
*0000639000                                                      M0528
*0000018000,025000-033000,048000,086000-185000,205000,248000,    A38013
*0000638000-639000                                               A38013
*0000019000,049000-050000,116000-124000,193000,209000-217000,    A41440
*0000372000                                                      A41440
*0000266000-267000                                               M1798
*                                                                     *
* MODULE NAME = IFG0202J
*                                                                     *
* DESCRIPTIVE NAME = CLOSE FINAL COMMON FUNCTION STRING               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE FINAL RESTORE DATA MANAGEMENT FUNCTION.                    *
*    CLOSE FINAL RESTORE SYSTEM FUNCTION.                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0202J - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             IFG0200Y - PROCESS CLOSE FINAL STRING FUNCTION.         *
*             IFG0202B                                                *
*             IFG0202E                                                *
*             IFG0202F                                                *
*             IFG0202H                                                *
*             IFG0202I                                                *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202K - CONTINUE PROCESS CLOSE FINAL RESTORE             *
*                    SYSTEM FUNCTION.                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING UCBOB,RUCB
         USING CVT,RD
         USING TIOENTRY,RTIOT
         USING DEBBASIC,RDEB                                     Y02134
         USING WTG,RWTG
         USING WTGENTRY,RWTGC
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
***********************************************************************
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE FINAL RESTORE DATA MANAGEMENT FUNCTION.                    *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    DELETE ACCESS METHOD SUBROUTINES AND I/O APPENDAGES LOADED WHEN  *
*    DATA SET WAS OPENED.                                             *
*    RELEASE USER TOTALING SAVE AREA.                                 *
*    DECREMENT COUNT IN UCBERADR (NO. OF DCB'S OPEN TO 3211 PRINTER)  *
*    AND FREEMAIN ERP WORKAREA IF LAST DCB.                           *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE UNIT RECORD/TELEPROCESSING FUNCTION.                       *
*    CLOSE TAPE NONSTANDARD LABEL FUNCTION.                           *
*    CLOSE DA EXIT FUNCTION.                                          *
*    CLOSE TAPE VOLUME DISPOSITION FUNCTION.                          *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    ALL SUBROUTINES AND I/O APPENDAGES DELETED.                      *
*    USER TOTALING SAVE AREA RELEASED.                                *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE FINAL RESTORE SYSTEM FUNCTION.                             *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
         L     RD,CVTPTR                GET VECTOR TABLE ADDRESS M0528
         L     RTIOT,DXTIOTAD           LOAD TIOT ENTRY ADDR     Y02134
*
         L     RUCB,DXUCBADR            SRT-UCB ADDRESS          Y02134
         LA    RUCB,0(RUCB)             CLEAR HI-ORDER BYTE      M0528
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP
         BO    CFN00499                 YES NORMAL PROCESSING
         TM    DCBDSORG+K1,ACBDORGA     IS THIS AN ACB
         BO    CFN01710                 YES JAM OR SPOOL ACB
CFN00499 EQU   *
         TM    TIOELINK,TIOESYIN+TIOESYOT SPOOLED DCB?           Y02120
         BM    CFN01230                 BRANCH IF YES            Y02120
         LTR   RUCB,RUCB                TEST FOR DUMMY           A38013
         BZ    CFN00550                 BRANCH IF DUMMY         SA68439
*
*    FREE ERP WORKAREA FOR LAST DCB OPEN TO A 3211 PRINTER
*    WHEN EXCP IS BEING USED
*
CFN00500 EQU   *
         CLI   UCBTBYT3,UCB3UREC        CHK FOR UNIT REC DEVICE
         BNE   CFN00550                 BRANCH IF NOT 3211
         CLI   UCBTBYT4,X'09'           CHK FOR 3211 PRINTER
         BNE   CFN00550                 BRANCH IF NOT 3211
         L     RC,UCBXTADR              GET PRINTER EXT FROM UCB
         USING UCBUCS,RC
         L     RF,WTGPREFX              PREFIX ADDRESS           Y02082
         STM   RA,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
         MODESET EXTKEY=SUPR            UCB, SETLOCK KEY         Y02082
CFN00520 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=(LOCAL,IFG0202J(CFN00545)) GET LOCAL LOCK Y02082
         LTR   RD,RD                    TEST SETLOCK RETURN CODE Y02082
         LM    RA,RET,IECREGSV-IECPREFX(RF) RESTORE SETLOCK REGS Y02082
         BNZ   CFN01730                 BRANCH IF SETLOCK ERROR  Y02082
         SR    RF,RF                    CLEAR REG
         IC    RF,UCBERADR              NO. OF DCBS OPEN TO 3211
         LTR   RF,RF                    IS COUNT 0              SA63705
         BZ    CFN00540                 YES, AVOID DECREMENT    SA63705
         BCTR  RF,0                     DECREMENT BY 1
         STC   RF,UCBERADR              STORE NO. OF DCBS
         LTR   RF,RF                    LAST DCB OPEN TO 3211
         BNZ   CFN00540                 NO, BR AROUND FREEMAIN   Y02082
         L     R1,UCBERADR              GET ERP W/A ADDR
         LA    R0,WALNTH                SET SUBPOOL LENGTH       YM2445
WALNTH   EQU   X'23A'                   SUBPOOL LENGTH           YM2445
         XC    UCBERADR,UCBERADR        ZERO ERP WORKAREA ADDR  SA63705
         IECRES FREE,WLH,LV=(0),A=(1),KEY=K0,SP=K255,PREFIX=NO,  Y02082*
               STM=(2,14,WTGPREFX)      FREE 3211 ERP WORKAREA   Y02082
         DROP  RC
CFN00540 EQU   *                        NOT LAST DCB             Y02082
         L     RF,WTGPREFX              PREFIX ADDRESS           Y02082
         MODESET EXTKEY=DATAMGT         KEY 5 FOR SAVE AREA      Y02082
         STM   RA,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
         MODESET EXTKEY=SUPR            UCB, SETLOCK KEY         Y02082
CFN00545 SETLOCK RELEASE,TYPE=LOCAL,                             Y02082*
               RELATED=(LOCAL,IFG0202J(CFN00520)) RELEASE LOCK   Y02082
         LTR   RD,RD                    TEST SETLOCK RETURN CODE Y02082
         LM    RA,RET,IECREGSV-IECPREFX(RF) RESTORE SETLOCK REGS Y02082
         BNZ   CFN01730                 BRANCH IF SETLOCK ERROR  Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       Y02082
*
***********************************************************************
*
*  DELETE THE IGG019XX ACCESS METHOD SUBROUTINES AND I/O APPENDAGES
*  WHOSE ID IS STORED IN THE SUBROUTINE NAME SECTION OF THE DEB.
*
CFN00550 EQU   *
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         SR    R0,R0                    CLEAR REG 0
         SR    RC,RC                    CLEAR REG C
         IC    RC,DEBNMSUB              PICK UP NUM OF SUBROUTINES
         LTR   RC,RC                    ARE THERE ANY SUBRTNS
         BZ    CFN01100                 BRANCH IF NO SUBRTNS INDICATED
         SR    RD,RD                    CLEAR REG
         IC    RD,DEBNMEXT              PICK UP NR OF EXTENTS
         SLL   RD,2                     MULTIPLY BY TWO
         TM    DEBEXSCL,X'04'           TEST EXTENT TYPE FOR NON-D.A.
         BZ    CFN00600                 BRANCH IF NOT D.A.
         SLL   RD,2                     MULTIPLY BY TWO
CFN00600 EQU   *
         LA    RD,DEBSUCBA-DEBBASIC(,RD) ADD SIZE OF DEB BASIC   Y02134
*                                       SECTION                  Y02134
         IC    R0,DEBAMLNG              PICK UP SIZE OF AM SECTION
         TM    DCBMACRF,DCBMEXCP        IS DCB EXCP              A41440
         BO    CFN00700                 BRANCH IF SO             A41440
         TM    DCBDSORG,DCBORGDA        IS IT BDAM
         BZ    CFN00700                 BRANCH IF NOT BDAM
         SLL   R0,2                     GET NUMBER OF BYTES
CFN00700 EQU   *
         AR    RD,R0                    TOTAL OFFSET TO SUBRTN SECT
         AR    RD,RDEB                  POINTER TO SUBRTN SECT IN RC
         MVC   WTGMODNM,CL3IGG          SET UP FOR DELETE FUNCTION
CFN00800 EQU   *
         TM    DCBOFLGS,DCBOCON         SEQTL CONCATENATION
         BZ    CFN00900                 BRANCH IF NO
         CLC   0(K2,RD),GERRID          IS THIS THE GERR SUBRTN
         BE    CFN01000                 BR IF IT IS GERR
         CLC   0(K2,RD),CHECKID         IS THIS THE CHECK SUBRTN
         BE    CFN01000                 BR IF IT IS CHECK
CFN00900 EQU   *
         MVC   WTGMODID,0(RD)           MOVE IN SUBRTN ID
         LR    R0,RWTG                  SUBRTN NAME POINTER
         DELETE EPLOC=(0)               DELETE
CFN01000 EQU   *
         LA    RD,K2(,RD)               POINT TO NEXT ID IN THE DEB
         BCT   RC,CFN00800              TEST FOR LOOP COMPLETION
         L     RC,DXDSAB                FETCH DSAB ADDRESS       YM1234
         USING DSAB,RC                  ADDRESS DSAB             YM1234
         TM    DSABFLG4,DSABCKSI        DOES CHKPT S/I EXIST     YM1234
         DROP  RC                       DSAB ADDRESSABILITY      YM1234
         BZ    CFN01005                 IF NOT, BRANCH           YM1234
         MVC   WTGMODID,ID19SI          SETUP TO DELETE S/I      YM1234
         LR    R0,RWTG                  ROUTINE 'IGG019SI'       YM1234
         DELETE EPLOC=(0)               DELETE                   YM1234
CFN01005 EQU   *                        END OF DELETE LOGIC      YM1234
         MVI   DXATCLOS,DXATDELT        SHOW A.M. SUBROUTINES &  Y02144
*                                       I/O APPENDAGES DELETED   Y02144
*
***********************************************************************
*
*  QSAM PARALLEL INPUT PROCESSING OCCURS HERE.  IF DCBPOPEN IS 1,
*  DCBPOPEN IS SET TO 0; THE ADDRESS OF THE PARALLEL DATA ACCESS
*  BLOCK IS OBTAINED FROM THE DCB EXIT LIST; THE DCB ADDRESS IS
*  REMOVED FROM THE DCB ADDRESS QUEUE IN THE PDAB; AND THE PARALLEL
*  GET ROUTINE IS DELETED.
*
         TM    DCBMACF1,DCBMEXCP        USING EXCP              YL03123
         BO    CFN01100                 BR YES                  YL03123
         TM    DCBDSRG2,DCBACBM         CONTROL BLOCK AN ACB    YL03123
         BO    CFN01100                 BR YES                  YL03123
         TM    DCBDSRG1,DCBDSGPS+DCBDSGPO CAPABLE OF QSAM       YL03123
         BZ    CFN01100                 BR NO                   YL03123
         TM    DCBMACF1,DCBMRGET        QSAM INPUT              YL03123
         BZ    CFN01100                 BR NO                   YL03123
         TM    DCBQSWS,DCBPOPEN         USING PARALLEL GET      YL03123
         BZ    CFN01100                 BR NO                   YL03123
         NI    DCBQSWS,X'FF'-DCBPOPEN   RESET PARALLEL INPUT    YL03123
         L     RC,DCBEXLST                                      YL03123
         N     RC,ADDRMASK              EXIT LIST PRESENT       YL03123
         BZ    CFN01100                 BR NO                   YL03123
         L     RDCB,DXUDCBAD            ADDR USER DCB           YL03127
         MODESET KEYADDR=DXUKEY,WORKREG=1                       YL03123
         NI    DCBQSWS,X'FF'-DCBPOPEN   RESET PARALLEL INPUT     YM1343
CFN01010 EQU   *                        CHECK NEXT ENTRY        YL03123
         CLI   0(RC),XLQPIP             PDAB ADDR               YL03123
         BE    CFN01020                 BR YES                  YL03123
         CLI   0(RC),XLQPIP+LASTNTRY    PDAB ADDR               YL03123
         BE    CFN01020                 BR YES                  YL03123
         TM    0(RC),LASTNTRY           LAST EXLST ENTRY        YL03123
         BO    CFN01050                 BR YES                  YL03123
         LA    RC,K4(,RC)               STEP TO NEXT ENTRY      YL03123
         B     CFN01010                 GO CHECK NEXT ENTRY     YL03123
CFN01020 EQU   *                        PDAB ADDR FOUND         YL03123
         L     RC,0(,RC)                LOCATE PDAB             YL03123
         USING IHAPDAB,RC                                       YL03123
         LA    RD,PDADCBAL-K4           DCB QUEUE FOR BXH INSTR YL03123
         LM    RET,R1,PDADCBAI          GET PDAB PARMS          YL03123
         LA    RDCB,0(,RDCB)            READY FOR COMPARE       YL03123
CFN01030 EQU   *                                                YL03123
         BXH   RD,RET,CFN01050          BR IF END OF DCB LIST   YL03123
         C     RDCB,0(,RD)              FOUND DCB ENTRY         YL03123
         BNE   CFN01030                 BR NO                   YL03123
         MVC   0(K4,RD),0(RF)           DELETE CLOSED DCB ENTRY YL03123
         XC    0(K4,RF),0(RF)           HOUSEKEEPING            YL03123
         SR    RF,RET                   BOTTOM DCB ENTRY ADDR   YL03123
         SR    R1,RET                   UPDATE ECB INDEX        YL03123
         STM   RET,R1,PDADCBAI          UPDATE PDAB PARMS       YL03123
         LH    R1,PDANODCB              FETCH NUMBER OF DCB'S   YL03123
         SH    R1,HWONE                 SUBTRACT THIS ENTRY     YL03123
         BP    CFN01040                 BR IF QUEUE NOT EMPTY   YL03123
         XC    PDAGRTNA,PDAGRTNA        CLEAR PARALLEL GET ADDR YL03123
CFN01040 EQU   *                        QUEUE NOT EMPTY         YL03123
         STH   R1,PDANODCB              UPDATE NO. OF DCB'S     YL03123
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      YM1466
         MVC   WTGMODID,QPGET           IGG019JD                YL03123
         LR    R0,RWTG                                          YL03123
         DELETE EPLOC=(0)               DELETE PARALLEL GET RTN YL03123
         B     CFN01060                 AVOID 2ND MODESET        YM1466
CFN01050 EQU   *                        GET IN DM KEY           YL03123
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY     YL03123
CFN01060 EQU   *                        RELOAD DCB REG           YM1466
         L     RDCB,DXPDCBAD            ADDR COPY OF DCB        YL03123
CFN01100 EQU   *
         MVC   WTGMODNM,CLIFGNM         MOVE BACK IFG0202J      SA68439
*
***********************************************************************
*
*    IF USER TOTALING WAS SPECIFIED, FREE THE TOTALING SAVE AREA
*
*
         TM    DCBMACRF,DCBMEXCP        CK FOR EXCP
         BO    CFN01200                 IF EXCP, SKIP TOTALING
         TM    DCBDSORG,DCBORGPS        CK FOR PHYS SEQ
         BZ    CFN01200                 NOT PS, SKIP TOTALING
         TM    DCBOPTCD,DCBOPTT         TEST IF TOTALING SPECIFIED
         BZ    CFN01200                 NO,BR TO SKIP TOTALING
         LTR   RUCB,RUCB                TEST FOR DUMMY          SA68439
         BZ    CFN01200                 BRANCH IF YES           SA68439
         TM    DEBOPATB,DEBOPOUT-DEBOPRBK  CK IF OPENED FOR EITHER
*                                       INPUT OR RDBACK
         BZ    CFN01200                 YES, SKIP TOTALING
*
*              GET ADDRESS OF TOTALING AREA FROM ACCESS METHOD
*              PORTION OF DEB.
*
         SR    RC,RC                    CLEAR REGISTER
         IC    RC,DEBNMEXT              GET NUMBER OF EXTENTS
         IC    R1,DEBEXSCL              GET EXTENT SCALE
         SLL   RC,0(R1)                 COMPUTE LENGTH OF EXTENTS
         L     R1,K36(RC,RDEB)          ADDR OF TOTLING SAVE AREA
         LA    R1,0(,R1)                CLEAR HI-ORDER BYTE
         LTR   R1,R1                    IS SAVE AREA ADDR ZERO
         BZ    CFN01200                 YES,DO NOT ISSUE FREEMAIN
         MODESET  KEYADDR=DXUKEY,WORKREG=12   ENTER USER KEY     YM1359
         L     RC,TOTTOTLN-TOTSAVWA(,R1)  TOTAL LENGTH OF AREA @ZA02211
         LA    RC,K0(,RC)               1ST BYTE IS SUBPOOL      YM3056
         FREEMAIN R,LV=(RC),A=(1)       FREE USER TOTAL AREA   @ZA02211
         MODESET EXTKEY=DATAMGT         CLOSE KEY RESTORED       YM3056
         MVI   DXATCLOS,DXATUTOT        USER TOTALING SAVE AREA  Y02144
*                                       RELEASED                 Y02144
         EJECT
***********************************************************************
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE FINAL RESTORE SYSTEM FUNCTION.                             *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    RESTORE DCB TO ITS PRE-OPEN STATE IF THE DCB WAS MODIFIED BY OPEN*
*    DECREMENT DATA MANAGEMENT COUNT.                                 *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE FINAL RESTORE DATA MANAGEMENT FUNCTION.                    *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    DATA MANAGEMENT COUNT DECREMENTED BY ONE.                        *
*    DEB REMOVED FROM THE DEB CHAIN.                                  *
*    DCB RESTORED TO ITS PRE-OPEN STATE.                              *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE FINAL TERMINATION FUNCTION.                                *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
CFN01200 EQU   *
         TM    DEBOFLGS,DEBOFDCB        WAS DCB MODIFIED
         BZ    CFN02300                 BR IF DCB NOT MODIFIED   M1752
         B     CFN01270                 RESTORE DEB              Y02120
*
*        THIS ROUTINE WILL RESTORE DCB TO A FRESH CONDITION
*
*        THERE IS NO DEB REMAINING FOR A SPOOLED DCB - THE       Y02120
*        C/I CLOSE EXECUTORS SAVE THE DCB  MODIFICATION MASK IN  Y02120
*        THE FIRST WORD OF THE CLOSE WORK AREA.                  Y02120
*
CFN01230 EQU   *                        REFRESH DCB              Y02120
         STM   RES,RDEB,DXCCW1          SAVE REGISTERS           Y02120
         LR    RDEB,RCORE               POINT RDEB TO MOD MASK   Y02120
         B     CFN01280                 CONTINUE REFRESHING DEB  Y02120
*  WHEN RESTORING DCB TO PRE-OPEN STATUS, IT IS REQUIRED THAT
*        1)  HIARCHY FLAGS (DCBBFTEK BITS 0,5) ARE NOT RESET,
*   AND  2)  HIARCHY FLAGS DO NOT INTERFERE WITH THE RESETTING
*            OF THE BFTEK/BFALN FIELDS.
CFN01270 EQU   *                                                Y02120
         STM   RES,RDEB,DXCCW1          SAVE REGISTERS           M0528
         L     RDEB,DXDEBXAD            GET DEB EXTENSION ADDR   Y02134
         USING DEBXTN,RDEB                                       Y02134
         LA    RDEB,DEBXDCBM            POINT TO DCB MOD MASK    Y02134
CFN01280 EQU   *                        CONTINUE REFRESHING DCB  Y02120
         L     RPAR,0(,RDEB)            PICK UP MASK             M0528
         MVI   DXCCW11,K0               CLEAR TEMP SAVE AREA     M0528
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP            M0528
         BZ    CFN04200                 BRANCH IF NOT EXCP       M0528
         TM    DCBMACRF,DCBMFOUN        TEST IF FBE IS PRESENT   M0528
         BZ    CFN04500                 BRANCH IF NOT            M0528
CFN04200 EQU   *                        NOT EXCP                 M0528
         TM    DCBDSORG,DCBORGIS+DCBORGDA+DCBORGPO  IS, DA OR PO M0528
         BM    CFN04400                 BRANCH IF ISAM, DA OR PO M0528
         TM    DCBDSORG,DCBORGPS        IS THIS PS               M0528
         BNO   CFN04300                 NOT PS                   M0528
         TM    TIOELINK,TIOEQNAM        IS THIS TCAM PS          M0528
         BNZ   CFN04500                 BRANCH IF TCAM           M0528
         TM    K3(RDEB),X08             FUNC BIT MASK            M0528
         BZ    CFN04400                 BRANCH IF NOT            M0528
         MVI   DCBFUNC,K0               RESTORE DCB FUNC FIELD   M0528
         B     CFN04400                 CONTINUE WITH PS         M0528
*                                       PROCESSING               M0528
CFN04300 TM    DCBDSORG+K1,DCBORGGR     IS THIS GRAPHIC          M0528
         BO    CFN04500                 BRANCH IF YES            M0528
         TM    DCBDSORG+K1,DCBORGTX+DCBORGTQ  IS THIS TX OR TQ   M0528
         BM    CFN05100                 BRANCH IF YES            M0528
         TM    DCBDSORG+K1,DCBDSGTR     DSORG=TCAM TR            S22024
         BO    CFN05650                 YES, BRANCH              S22024
*  ELIMINATED ALL EXCEPT TAM.  FOR TAM, ONLY (CX)BTAM HAS
*  VALID HIARCHY FLAGS.
         TM    DCBMACRF,DCBMREAD        TEST FOR 'READ'          M0528
         BO    CFN04400                 BRANCH IF 'READ'         M0528
         TM    DCBMACRF+K1,DCBMWRIT     TEST FOR 'WRITE'         S22024
         BO    CFN04400                 BRANCH IF BTAM USED      M0528
         B     CFN04500                 BYPASS SAVING OF HIARCHY M0528
*                                       FLAGS                    M0528
CFN04400 EQU   *                        SAVE FLAGS               M0528
         MVC   DXCCW11(K1),DCBHIARC     SAVE HIARCHY FLAGS UNTIL M0528
*                                       RESTORE COMPLETED
         NI    DXCCW11,DCBH0+DCBH1      CLEAR ALL BITS EXCEPT    M0528
*                                       HIARCHY INDICATIONS
CFN04500 EQU   *                        BYPASS SAVING FLAGS      M0528
         LA    R1,K1                    INITIALIZE R1 WITH ONE   M0528
         LA    RC,DADSP                 POINT TO DCB             M0528
*                                       DISPLACEMENT LIST        M0528
         LA    RD,DALGH                 POINT TO DCB FIELD       M0528
*                                       LENGTH LIST              M0528
         SR    RET,RET                  CLEAR RET                M0528
         SR    RF,RF                    AND RF                   M0528
*
*      CHECK  TO SEE IF NEXT FIELD IN DCB WAS ALTERED
*
CFN04700 EQU   *                        WAS NEXT DCB ALTERED     M0528
         NR    R1,RPAR                  WAS DCB FIELD MODIFIED   M0528
         BZ    CFN04900                 NO, IT WAS NOT CHANGED   M0528
         IC    RET,0(,RC)               INSERT DCB FIELD         M0528
*                                       DISPLACEMENT             M0528
         IC    RF,0(,RD)                INSERT DCB FIELD         M0528
*                                       LENGTH-1                 M0528
         CLI   0(RC),X'24'              IS THIS FIELD RECFM      M0528
         BE    CFN05000                 BR IF IT IS RECFM        M0528
CFN04800 EQU   *                        RESTORE DCB FIELD        M0528
         AR    RET,RDCB                 LOCATION OF FIELD IN DCB M0528
         EX    RF,CFN05700              EXECUTE MOVE INSTRUCTION M0528
*
*        FIELD  IN  DCB  HAS  BEEN  RETURNED  TO ITS
*                       FORMER  STATUS
CFN04900 EQU   *                        CHECK NEXT FIELD         M0528
         SRL   RPAR,1                   SHIFT MASK               M0528
         SR    RET,RET                  CLEAR RET                M0528
         SR    RF,RF                    AND RF                   M0528
         LA    RC,K1(,RC)               GET NEXT DISP PARAMETER  M0528
         LA    RD,K1(,RD)               GET NEXT LENGTH          M0528
*                                       PARAMETER                M0528
         LA    R1,K1                    REINITIALIZE R1 WITH ONE M0528
         CLI   0(RC),K0                 END OF RESTORE TABLE     M0528
         BE    CFN05800                 BRANCH IF THE END        M0528
         B     CFN04700                 CHECK NEXT FIELD         M0528
CFN05000 EQU   *                        RESTORE RECFM            M0528
         TM    DCBRECFM,K1              INDICATIOR BIT ON IN     M0528
*                                       RECFM                    M0528
         BZ    CFN04800                 BR IF INDICATOR BIT OFF  M0528
         MVC   DCBRECFM,DANULL          CLEAR RECFM              M0528
         OI    DCBRECFM,K1              SET INDICATOR BIT ON     M0528
         B     CFN04900                 BR TO LOOK AT NEXT FIELD M0528
*
* FOR TCAM WITH DSORG=TX OR DSORG=TQ, BUFMAX, PCI, RESERVE, BUFSIZE,
* AND THRESH FIELDS MAY HAVE BEEN MERGED FROM THE JFCB WITH A UNIQUE
* MERGE. THE MERGED FIELDS WILL BE RESTORED TO ZERO.
*
CFN05100 EQU   *                        RESTORE MERGED FIELDS    M0528
         LA    R1,K8                    THRESH BIT MASK          M0528
         NR    R1,RPAR                  WAS FIELD MERGED         M0528
         BZ    CFN05200                 BRANCH IF NO             M0528
         MVI   K32(RDCB),K0             RESTORE FIELD TO ZERO    M0528
CFN05200 LA    R1,K256                  BUFMAX BIT MASK          M0528
         NR    R1,RPAR                  WAS FIELD MERGED         M0528
         BZ    CFN05300                 BRANCH IF NO             M0528
         MVI   K28(RDCB),K0             RESTORE FIELD TO ZERO    M0528
CFN05300 LA    R1,K1                    BUFSIZE BIT MASK         M0528
         SLL   R1,K12                   SHIFT MASK               M0528
         NR    R1,RPAR                  WAS FIELD MERGED         M0528
         BZ    CFN05400                 BRANCH IF NO             M0528
         SR    RD,RD                    ZERO OUT RD              M0528
         STH   RD,54(,RDCB)             RESTORE FIELD TO ZERO    M0528
CFN05400 LA    R1,K1                    RESERVE BIT MASK         M0528
         SLL   R1,K19                   SHIFT MASK               M0528
         NR    R1,RPAR                  WAS FIELD MERGED         M0528
         BZ    CFN05500                 BRANCH IF NO             M0528
         ST    RD,K56(,RDCB)            RESTORE FIELD TO ZERO    M0528
CFN05500 LA    R1,K1                    PCI BIT MASK             M0528
         SLL   R1,K21                   SHIFT MASK               M0528
         NR    R1,RPAR                  WAS FIELD MERGED         M0528
         BZ    CFN05600                 BRANCH IF NO             M0528
         MVI   K25(RDCB),K0             RESTORE FIELD TO ZERO    M0528
CFN05600 EQU   *                                                 M0528
         B     CFN04500                 CHECK OTHER FIELDS       M0528
CFN05650 EQU   *                        TCAM TR BRANCH           S22024
         LA    R1,X80                   IPLTX BIT MASK           S22024
         NR    R1,RPAR                  WAS FIELD MERGED         S22024
         BZ    CFN02200                 BRANCH IF NO            ZA00702
         MVC   DCBIPLTX,BLANKMSK        RESTORE FIELD TO BLANKS  S22024
         B     CFN02200                 XCTL TO NEXT MODULE     ZA00702
CFN05700 MVC   0(K1,RET),DANULL         MOVE ZEROS TO DCB FIELD  M0528
*
*
CFN05800 EQU   *                                                 M0528
*
*     RESTORE WRITE CHECK BIT IN DCBOPTCD TO PRE-OPEN STATUS
*
         TM    K1(RDEB),DCBOPTW         WAS WRITE CHECK BIT SET  M0528
*                                       ON                       M0528
         BZ    CFN05900                 BRANCH IF NOT            M0528
         NI    DCBOPTCD,X'FF'-DCBOPTW   RESTORE WRITE CHECK TO   M0528
*                                       OFF                      M0528
CFN05900 EQU   *                                                 M0528
         TM    0(RDEB),DCBUSAON         WAS DCBUSASI BIT SET ON  M0528
         BZ    CFN06000                 BRANCH IF NOT            M0528
         NI    DCBUSASI,X'FF'-DCBUSAON  TURN OFF DCBUSASI BIT    M0528
CFN06000 EQU   *                        BFTEK/BFALN              M0528
*
*  BFTEK/BFALN FIELDS HAVE BEEN RESTORED TO PRE-OPEN STATUS,
*  BUT HIARCHY INDICATIONS ARE NOT .
         OC    DCBHIARC,DXCCW11         MAINTAIN HIARCHY FLAGS   M0528
*                                       AFTER                    M0528
*  CLOSE HAS RESTORED THE BFTEK/BFALN FIELDS.
*  FOR GAM,EXCP W/O FBE, AND QTAM THIS RESULTS IN OR'ING ZEROS.
*  NOTE - IF BOTH B0 AND B5 ARE ON, THIS ERROR CONDITION WILL
*  NOT BE ELIMINATED UNTIL THE DATA SET IS OPENED AGAIN.  THIS
*  CONDITION WILL DEFAULT TO A HIARCHY=0 INDICATION  AFTER THE
*  DCB TO JFCB MERGE DURING OPEN.
*
CFN02200 EQU   *                        RESTORE REGISTERS       ZA00702
         LM    RPAR,RDEB,DXCCW1         RESTORE REGS             M0528
CFN02300 EQU   *
         MVI   DXATCLOS,DXATRDCB        DCB RESTORATION FINISHED Y02144
         IECRES LOAD,MODID=FINMOD,BRANCH=QUEUED XCTL TO FINMOD   Y02080
*  HAVE JAM OR SPOOLED ACB
CFN01710 EQU   *                        ENTRY FROM JES
         TM    TIOELINK,TIOESYOT        SPOOLED OUTPUT FILE
         BZ    CFN02300                 NO-BYPASS JFCB WRITE     Y02134
         LR    RC,RET                   SAVE CURRENT TCB ADDR
         LA    R0,DXJBF                 POINT TO JFCB           SA68439
         LA    R1,TIOEJFCB              JFCB TTR IN TIOT        SA68439
         IECRES  WRJFCB,(R1),(R0)       WRITE JFCB              SA68439
         B     CFN02300                 XCTL TO NEXT MODULE
CFN01730 EQU   *                        SETLOCK ERROR            Y02082
         DMABCOND PCK,SETLOCK           SETLOCK ERROR ANALYSIS   Y02082
*                                       ROUTINE                  Y02082
         EJECT
**********************************************************************
*                                                                    *
*                    CONSTANTS                                       *
*                                                                    *
**********************************************************************
         SPACE 1
*
*
*        THE FOLLOWING TABLE REPRESENTS THE DISPLACEMENTS
*
*        OF FIELDS WITHIN THE DCB
*
*
DADSP    DS    0F                                                M0528
         DC    FL1'26'                  DSORG                    M0528
         DC    FL1'82'                  LRECL                    M0528
         DC    FL1'24'                  INTVL                    M0528
         DC    FL1'32'                  CPRI                     M0528
         DC    FL1'24'                  SOWA                     M0528
         DC    FL1'16'                  KEY LENGTH               M0528
         DC    FL1'20'                  BUFNO                    M0528
         DC    FL1'24'                  BUFL                     M0528
         DC    FL1'32'                  BFTEK AND BFALN          M0528
         DC    FL1'18'                  DENSITY                  M0528
         DC    FL1'36'                  RECFM                    M0528
         DC    FL1'52'                  OPTCOD                   M0528
         DC    FL1'62'                  BLOCK SIZE               M0528
         DC    FL1'72'                  BSAM NCP                 M0528
         DC    FL1'81'                  BDAM LIMCT               M0528
         DC    FL1'82'                  ISAN-QSAM LRECL          M0528
         DC    FL1'84'                  ISAM-QSAM EROPT          M0528
         DC    FL1'72'                  ISAM NCP                 M0528
         DC    FL1'112'                 ISAM DUBFN               M0528
         DC    FL1'60'                  ISAM RKP                 M0528
         DC    FL1'55'                  ISAM CYLOF               M0528
         DC    FL1'54'                  ISAM NTM                 M0528
         DC    FL1'81'                  BUFOF - ASCII            M0528
ENDOFTAB DC    X'00'                    END OF OFFSET TABLE      M0528
*
*
*
*
*
*        THE FOLLOWING IS A TABLE OF THE LENGTHS-1 OF
*
*        THE FIELDS IN THE DCB WHICH WILL BE RESTORED AT CLOSE TIME
*
*
*
DALGH    DS    0F                                                M0528
         DC    FL1'0'                   DSORG                    M0528
         DC    FL1'1'                   LRECL                    M0528
         DC    FL1'0'                   INTVL                    M0528
         DC    FL1'0'                   CPRI                     M0528
         DC    FL1'1'                   SOWA                     M0528
         DC    FL1'0'                   KEY LENGTH               M0528
         DC    FL1'0'                   BUFNO                    M0528
         DC    FL1'1'                   BUFL                     M0528
         DC    FL1'0'                   BFTEK AND BFALN          M0528
         DC    FL1'0'                   DENSITY                  M0528
         DC    FL1'0'                   RECFM                    M0528
         DC    FL1'0'                   OPTCOD                   M0528
         DC    FL1'1'                   BLOCK SIZE               M0528
         DC    FL1'0'                   BSAM NCP                 M0528
         DC    FL1'2'                   BDAM LIMCT               M0528
         DC    FL1'1'                   ISAM-QSAM LRECL          M0528
         DC    FL1'0'                   ISAM-QSAM EROPT          M0528
         DC    FL1'0'                   ISAM NCP                 M0528
         DC    FL1'0'                   ISAM DUBFN               M0528
         DC    FL1'1'                   ISAM RKP                 M0528
         DC    FL1'0'                   ISAM CYLOF               M0528
         DC    FL1'0'                   ISAM NTM                 M0528
         DC    FL1'0'                   BUFOF - ASCII            M0528
DANULL   DC    X'000000'                ZERO CONSTANT            M0528
BLANKMSK DC    CL8' '                   BLANK CONSTANT           S22024
CL3IGG   DC    C'IGG019'                APPENDAGE FOR SUBRTN ID
GERRID   DC    C'AQ'                    INPUT SYNCH ROUTINE
CHECKID  DC    C'BB'                    CHECK ROUTINE
ID19SI   DC    C'SI'                    CHKPT S/I ROUTINE ID     YM1234
CLIFGNM  DC    C'IFG0202J'              CLOSE MOD NAME
QPGET    DC    C'JD'                    QSAM PARALLEL INPUT MOD YL03123
HWONE    DC    H'1'                                             YL03123
ADDRMASK DC    A(X'FFFFFC')             ADDRESS MASK            YL03123
*
         XCTLTABL ID=(FINMOD,2K,PDMOD,0P),                             *
               SVC=020,BRT=YES,LENGTH=                           Y02080
         EJECT
         IECEQU IEZDEB=YES              DEFINE EQUATES
         IECDSECS CVT,TIOT,IEZDEB,UCB,ACB,MAIN,WTG,USERTOT,      S22024*
               PSA,                                              Y02082*
               DSAB,                                             YM1234*
               PREFX,PDAB,EXPAND=YES    DEFINE DSECTS
         DCBD  DSORG=(PS,IS,DA,PO,BS,TQ,TR)   INCLUDE 3705       S22024
         END
