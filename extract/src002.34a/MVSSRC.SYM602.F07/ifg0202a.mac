         TITLE 'IFG0202A - USER LABEL TAPE TRAILER PROCESSING'
IFG0202A CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          RELEASE 21 DELETIONS/CHANGES                               *
*0000431000                                                     SA55619
*                                                                     *
* MODULE NAME = IFG0202A                                              *
*                                                                     *
* DESCRIPTIVE NAME = USER LABEL TAPE TRAILER PROCESSING               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE TAPE STANDARD USER LABEL FUNCTION.                         *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0202A - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             INITIAL ENTRY--                                         *
*                IFG0200Z - PROCESS CLOSE TAPE STANDARD USER LABEL    *
*                           FUNCTION.                                 *
*             SECOND ENTRY--                                          *
*                IFG0200Y - PROCESS CLOSE TAPE STANDARD USER LABEL    *
*                           FUNCTION.                                 *
*             THIRD ENTRY--                                           *
*                IFG0200P - CONTINUE PROCESSING CLOSE TAPE STANDARD   *
*                           USER LABEL FUNCTION.                      *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202F - PROCESS CLOSE TAPE VOLUME STATISTICS FUNCTION.   *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING WTG,RWTG                 WHERE-TO-GO TABLE        Y02080
         USING TCB,RET
         USING CVT,RD
         USING DEB,RDEB
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE TAPE STANDARD USER LABEL FUNCTION.                         *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    DETERMINE IF USER LABEL PROCESSING IS REQUIRED.                  *
*    TWO USER LABEL WORK AREAS ARE OBTAINED - DESCRIBED BELOW:   Y02082
*      THE FIRST AREA IS GOTTEN IN KEY 5 FOR CLOSE (152 BYTES)   Y02082
*      1) 72 BYTE WORK AREA                                      Y02082
*      2) 80 BYTE LABEL BUFFER                                   Y02082
*      THE SECOND AREA IS GOTTEN IN THE USER'S KEY TO BE UPDATED Y02082
*      BY THE USER (96 BYTES)                                    Y02082
*      1) 80 BYTE LABEL BUFFER                                   Y02082
*      2) 16 BYTE PARAMETER LIST                                 Y02082
*                                                                Y02082
*    IF INPUT HEADER OR TRAILER ARE REQUESTED, THIS FUNCTION READS    *
*    THE USER LABELS AND PASSES THEM IN LABEL BUFFER TO APPROPRIATE   *
*    USER EXIT VIA IECRES=UEXIT. UPON RETURN, A CONDITION CODE   Y02082
*    IS EXAMINED. IF 4, CONTINUE TO READ LABELS, IF 0, EXIT.          *
*    IF OUTPUT HEADER OR TRAILER ARE REQUESTED, THIS FUNCTION FIRST   *
*    EXITS TO APPROPRIATE USER EXIT TO FORMAT USER LABELS AND UPON    *
*    RETURN, REACTS ACCORDING TO THE CODE RETURNED BY THE USER -      *
*    0 - DO NOT WRITE LABEL, DISCONTINUE USER LABEL PROCESSING (I.E.  *
*        RETURN TO CALLER OF THIS ROUTINE),                           *
*    4 - WRITE LABEL, THEN DISCONTINUE UL PROCESSING,                 *
*    8 - WRITE LABEL, AND IF LESS THAN 8 LABELS HAVE BEEN CREATED,    *
*        RETURN TO USER. IF 8 LABELS HAVE BEEN CREATED, UL PROCESSING *
*        IS ENDED.                                                    *
*    FOR ASCII TAPE, LABELS ARE TRANSLATED BEFORE WRITING.            *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE TAPE ACCESS METHOD EXECUTOR INTERFACE FUNCTION.            *
*    CLOSE TAPE STANDARD TRAILER LABEL FUNCTION.                      *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY.                                 *
*       DD ENTRY IN THE TIOT.                                         *
*       WTG TABLE.                                                    *
*       CURRENT WTG TABLE ENTRY.                                      *
*       DCB.                                                          *
*       CLOSE WORK AREA.                                              *
*       RESIDENT ROUTINE.                                             *
*       UCB.                                                          *
*       DEB.                                                          *
*                                                                     *
* OUTPUT -                                                            *
*    USER LABELS READ OR WRITTEN ON TAPE FOR USER.                    *
*    THE TAPE IS LEFT POSITIONED -                                    *
*    1) BEYOND THE LAST UL PROCESSED, OR                              *
*    2) IF NO UL, BEYOND THE DATA SET LABELS.                         *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    USER'S EXIT ROUTINES - ENTERED BY MEANS OF SYNCHRONOUS EXIT      *
*    (SVC 12).                                                        *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE TAPE VOLUME STATISTICS FUNCTION.                           *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH THE FOLLOWING INTERNAL CODE--                          *
*       64 - 214 ABEND - ERROR IN READING USER LABEL.                 *
*    IF THERE IS A READ/WRITE ERROR, THIS FUNCTION SYNCHS TO USER     *
*    WITH A PARAMETER LIST WHICH (IN THE THIRD ENTRY) CONTAINS AN     *
*    ERROR FLAG AND A POINTER TO STATUS INFO (CSW STATUS). AFTER THE  *
*    USER HAS HAD THE OPPORTUNITY TO EXAMINE ERROR INFO, THIS         *
*    FUNCTION REACTS AS FOLLOWS -                                     *
*    1) OUTPUT ERROR - UL PROCESSING IS ENDED                         *
*    2) INPUT ERROR - USER RETURNS A CODE OF 0 OR 4                   *
*       0 - DISCONTINUE UL PROCESSING                                 *
*       4 - READ NEXT LABEL IF LESS THAN 8 HAVE BEEN READ. IF 8 UL    *
*           HAVE BEEN READ, UL PROCESSING IS ENDED.                   *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
         B     CTA03000(RET)            USE BRANCH TABLE
CTA03000 EQU   *
         B     CTA03200                 ENTRY FROM SL PROCESSING
         B     CTA03100                 ENTRY FROM RETURN OF EXECUTOR
         B     CTA03300                 ENTRY FROM P.D. MOD
CTA03100 EQU   *
         LA    RC,SLPSUP                PT TO 'DEFERRED PROCESSING'
         B     CTA03400                 BR TO CHK EXIT LIST FOR CODE
CTA03200 EQU   *
         IECRES WAIT                    WAIT FOR TRL2
         TM    IOBSTAT0,CSWUNITX        UNIT EXCEPTION
         BO    CTA03250                 BRANCH IF YES            Y02144
         TM    DXECB,ECBNOERR           PERM. I/O ERROR
         BC    12,CTA06500              BRANCH IF ERROR
CTA03250 EQU   *                        USER RECOVERY INDICATOR  Y02144
         OI    DXATOUTA,DXATTRL2        SHOW TRL2 WRITTEN        Y02144
CTA03300 EQU   *
*
*****          INITIALIZE FOR SUL EXIT-LIST CODE CHECK
*
         LA    RC,EXIT4                 PT TO OUTPUT USER TRAILER LABEL
CTA03400 EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=15                       Y02082
         L     RF,DCBEXLST              LOAD EXIT LIST ADDR FROM DCB
         LA    RF,0(,RF)                ZERO HIGH-ORDER BYTE OF EXLST
         LTR   RF,RF                    IS THE EXIT LIST ADDR ZERO-
         BZ    CTA05300                 YES, DON'T PROCESS USER LABELS
CTA03500 EQU   *
         CLC   0(K1,RF),0(RC)           DO CODE BYTES MATCH-
         BE    CTA03600                 BR IF YES TO PROCESS USER
         CLC   0(K1,RF),K1(RC)          CHECK AGAIN ('LAST ENTRY' BIT)
         BE    CTA03600                 BR IF YES TO PROCESS USER
         TM    0(RF),LASTNTRY           TEST FOR LAST EXIT LIST ENTRY-
         LA    RF,K4(,RF)               INCREMENT TO NEXT ENTRY
         BC    12,CTA03500              BR IF NOT LAST TO CHK NEXT
         B     CTA05300                 BR TO POSITION TAPE- NO UL
CTA03600 EQU   *
         L     RC,0(,RF)                EXIT LIST ENTRY
         MODESET EXTKEY=DATAMGT         RETURN TO CLOSE KEY      Y02082
         LA    RF,0(,RC)                ZERO HI-ORDER BYTE
         LTR   RF,RF                    IS EXIT ADDRESS ZERO-
         BZ    CTA05300                 YES, DON'T PROCESS USER LABELS
*    GET USER LABEL WORK AREA FOR CLOSE                          Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES, GET USER LBL WORKAREA Y02144*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
         USING ULDMWK,R1                DEFINE BASE FOR UL W.A.  Y02082
         STM   RES,RC,ULREGSAV          SAVE REGS (INCLUDES DCB  Y02082
*                                       EXIT LIST ENTRY FOR UL)  Y02082
         LR    RC,R1                    POINT TO AREA OBTAINED
         USING ULDMWK,RC                DEFINE UL WORK AREA BASE Y02082
*    GET USER LABEL WORK AREA FOR USER                           Y02082
         IECRES GET,LV=USERLU,KEY=USER,PREFIX=NO,SP=K229,        Y02082*
               STM=(2,14,WTGPREFX)                               YM3926
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO CLOSE KEY      Y02082
         USING ULUWK,RA                 USER'S UL WK AREA BASE   Y02082
         LR    RA,R1                    GET ADDR OF GOTTEN CORE  Y02082
         LA    R1,CHAR0                 INITIALIZE COUNT
         STH   R1,ULCNT                 AND SAVE FOR LATER USE
         NI    ULREQ,X'FF'-LASTNTRY     ZERO HI-ORDER BIT OF UL ENTRY
*******************************************************************
*        TEST FOR NEW CODE BYTE X'0C' . IF PRESENT,LABEL PROCESS-
*        ING WILL BE DEFERRED AT EOF AND NOT AT EOV.
*******************************************************************
         CLI   ULREQ,XLDEFSL            DEFERRED LABEL PROCESSING
         BE    CTA04300                 YES,PERFORM NORMAL PROCESSING
*                                       SINCE THIS MODULE WILL NOT
*                                       BE ENTERED AT EOF(DEFERRED).
         EJECT
*  OUTPUT LABEL PROCESSING
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         MVI   ULBUFR,BLANK             SET LABEL BUFFER AREA
         MVC   ULBUFR+K1(L'ULBUFR-K1),ULBUFR  TO BLANKS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
CTA03700 EQU   *
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABELS SPEC.
         BO    CTA03800                 YES,SKIP LABEL COUNTING
         LH    R1,ULCNT                 PICK UP PREVIOUS COUNT
         LA    R1,K1(,R1)               INCREMENT BY 1
         STH   R1,ULCNT                 SAVE UPDATED COUNT
         CLI   ULCNT+K1,MAXNOLAB        TEST,BR IF MAX NBR OF UL
         BH    CTA05200                 ALREADY PROCESSED
CTA03800 EQU   *                        INITIALIZE BUFFER HEADING
         IC    RB,ULCNT+K1              GET LABEL NUMBER         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         STC   RB,ULBUFR+K3             STORE IN USER'S BUFFER   Y02082
         MVC   ULBUFR(K3),UTLCON        SET 'UTL' IN LABEL       Y02082
*                                                                Y02082
*    MODULE WILL RETURN FROM SYNCH IN DATA MANAGEMENT KEY        Y02082
         BAL   RB,CTA05400              GO TO SYNCH TO USER
*
*
         LTR   RF,RF                    TEST,BR IF LABEL NOT
         BZ    CTA05200                 TO BE WRITTEN
*****************************************************************Y02082
*    THE FOLLOWING CODE MOVES THE UTL FROM THE USER'S FETCH      Y02082
*    PROTECTED CORE TO CLOSE'S USER LABEL WORK AREA BUFFER       Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE=RELEASED BELOW') Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY CORE HELD IN USER'S KEY AND MEMORY                   Y02082
         OC    ULUWK(USERLU),ULUWK      PROGRAM CHECK IF NOT     Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*                                                                Y02082
         MVC   ULDMBUFR,ULBUFR          COPY LABEL FROM USER W.A.Y02082
*                                                                Y02082
*    RESET FIRST FOUR CHARACTERS OF LABEL THEN ESTABLISH         Y02082
*    CHANNEL PROGRAM TO WRITE USER LABELS                        Y02082
*                                                                Y02082
         MVC   ULDMBUFR(K3),UTLCON      SET 'UTL' IN DM LABEL    Y02082
         MVC   ULBUFR(K3),UTLCON        SET 'UTL' IN USER'S LABELY02082
         TM    JFCBLTYP,JFCBAL+JFCBUL   IF 'AUL' SPEC, BYPASS    Y02082
         BO    CTA03850                 RESTORING LABEL NUMBER   Y02082
         MVC   ULDMBUFR+K3(K1),ULCNT+K1 LABEL NO. IN DM LABEL    Y02082
         MVC   ULBUFR+K3(K1),ULCNT+K1   LABEL NO. IN USER'S LABELY02082
CTA03850 EQU   *                        RELEASE LOCK             Y02082
*    RELEASE LOCK                                                Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*                                                                Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
*****************************************************************Y02082
CTA03900 EQU   *                        POINT TO LABEL BUFFER
         LA    R1,ULDMBUFR              PT CCW TO LABEL BUFFER   Y02082
         ST    R1,DXCCW1                STORE IN CCW
         MVI   DXCCW1,CCWWRTAP          WRITE OP-CODE TO CCW
         MVC   DXCCW1+K4(K4),LENGTH     80-CHAR LENGTH
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABELS SPEC.
         BNO   CTA04000                 NO,BYPASS TRANSLATE
* TRANSLATE LABEL BUFFER DATA BEFORE WRITING
         XLATE (R1),K80,TO=A            TRANSLATE USER LABEL
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY CORE HELD IN USER'S KEY AND MEMORY                   Y02082
         OC    ULUWK(USERLU),ULUWK      PROGRAM CHECK IF NOT     Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*                                                                Y02082
         MVC   ULBUFR,ULDMBUFR          COPY TRANSLATED LABEL    Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*                                                                Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
CTA04000 EQU   *                        GO WRITE LABEL
         BAL   RB,CTA06300              GO TO ISSUE EXCP
*  ERROR CHECKING
         BZ    CTA04100                 BR IF NO UNIT EXCEPTION (I.E.
*                                       WRITING BEYOND EOT REFLECTOR)
         OI    DXECB,ECBCOD7F           IGNORE UF FOR TRAILERS
CTA04100 TM    DXECB,ECBNOERR           TEST FOR UNCORRECTABLE I/O ERR
         BNZ   CTA04200                 NO ERROR ENCOUNTERED.
*
*  ERROR WHEN ATTEMPTING TO WRITE LABEL.  GO TO USER WITH ERROR
*  INDICATIONS, THEN TERMINATE UL PROCESSING (RETURN CODE NOT
*  EXAMINED).
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULERRPTR              IN PARAMETER LIST
         OI    ULERRPTR,ERROR           FLAG IN ERROR
*    MODULE WILL RETURN HERE IN DATA MANAGEMENT KEY              Y02082
         BAL   RB,CTA05500              GO TO SYNCH TO USER (BUFFER
*                                       CONTAINS LABEL UNABLE TO WRITE)
*
*  NOTE - CLOSE (AND TCLOSE) PROCESS USER LABELS PRIOR TO
*  TURNING OFF OPENED BIT IN DCBOFLGS.
         B     CTA05200                 UL PROCESSING COMPLETED
CTA04200 EQU   *
         CLI   ULRETCOD,WRITNEXT        TEST,BR IF USER RETURNED A CODE
         BE    CTA03700                 TO CONTINUE UL PROCESSING
*  OTHERWISE, IT IS ASSUMED THE USER RETURNED A CODE = 4, I.E. NO
*  FURTHER UL PROCESSING.
         B     CTA05200                 UNCONDITIONAL BRANCH
         EJECT
CTA04300 EQU   *
*  INPUT LABEL PROCESSING
*
*
         LA    R1,ULDMBUFR              PT CCW TO LABEL BUFFER   Y02082
         ST    R1,DXCCW1                STORE IN CCW
         MVI   DXCCW1,CCWRDTAP          READ OP-CODE TO CCW
         MVC   DXCCW1+K4(K4),LENGTH     80-CHAR LENGTH
CTA04400 EQU   *
         BAL   RB,CTA06300              GO TO ISSUE EXCP
*
         BO    CTA04900                 BR IF UNIT EXCEPTION ON READ
*                                       (READ TAPE MARK)
         TM    DXECB,ECBNOERR           TEST,BR IF PERM I/O ERR
         BZ    CTA04800                 ENCOUNTERED
*
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABELS SPEC.
         BNO   CTA04500                 NO,BYPASS TRANSLATE
*  TRANSLATE LABEL BEFORE PROCESSING
         XLATE ULDMBUFR,K80             TRANSLATE LABEL          Y02082
CTA04500 EQU   *                        CHECK LABEL TYPE
         CLC   ULDMBUFR(K3),UTLCON      TEST,BR IF USER HDR LABELY02082
         BE    CTA04600                 WAS READ
         CLC   ULDMBUFR(K3),UTLCON      TEST,BR IF USER TRLR LAB Y02082
         BE    CTA04600                 WAS READ
*  NOTE - INPUT TRAILER LABEL PROCESSING LEAVES TAPE POSITIONED BETWEEN
*  FIRST AND SECOND DATA SET TRAILER.
*  THE FOLLOWING ALLOWS PROCESSING OF USER LABELS EVEN THOUGH THE
*  TAPE MAY CONTAIN MORE DATA SET LABELS THAN CAN CURRENTLY BE
*  CREATED UNDER O/S.
         CLC   ULDMBUFR(K3),EOV         TEST, BR TO READ AGAIN   Y02082
         BE    CTA04400                 IF TRAILER WAS READ
         CLC   ULDMBUFR(K3),AEOF        TEST, BR TO READ AGAIN   Y02082
         BE    CTA04400                 IF TRAILER WAS READ
         CLC   ULDMBUFR(K3),HDR         TEST, BR TO READ AGAIN   Y02082
         BE    CTA04400                 IF HEADER WAS READ
         B     CTA05200                 UNCONDITIONAL BRANCH    SA57218
*
*
*
CTA04600 EQU   *
         MVC   ULCNT+K1(K1),ULDMBUFR+K3 SAVE LABEL NUMBER        Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
*    VERIFY CORE HELD IN USER'S KEY AND MEMORY                   Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         OC    ULUWK(USERLU),ULUWK      PROG CHK IF NOT USER'S   Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*                                                                Y02082
         MVC   ULBUFR,ULDMBUFR          COPY LABEL FOR USER      Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*                                                                Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    MODULE WILL RETURN FROM SYNCH IN DATA MANAGEMENT KEY        Y02082
         BAL   RB,CTA05400              GO TO SYNCH TO USER
CTA04700 EQU   *
         CLI   ULRETCOD,READNEXT        TEST,BR IF USER DID NOT RETURN
         BNE   CTA04750                 CODE TO READ NEXT LABEL SA57218
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI LABELS SPEC.
         BO    CTA04400                 YES,GO READ ANOTHER
         CLI   ULCNT+K1,MAXNOLAB        TEST,BR IF MAX NBR OF USER
         BL    CTA04400                 BR TO READ NEXT RECORD  SA57218
*
* DONE WITH LABEL PROCESSING, BUT MAY HAVE READ A TAPE MARK.    SA57218
* NOW POSITION TO LOGICAL END OF FILE BY SPACING PAST THE       SA57218
* TAPEMARK AT THE END OF THE TRAILER LABEL SET.                 SA57218
*
CTA04750 EQU   *                                                SA57218
         MVI   DXCCW1,CCWFSF            FORWARD SPACE OPCODE    SA57218
         MVI   DXCCW1+K7,K1             SET COUNT TO ONE        SA57218
         BAL   RB,CTA06300              GO TO ISSUE EXCP        SA57218
*        THE ABOVE IMMEDIATE OPERATION MAY RETURN               SA57218
*        A CONTROL UNIT OR DEVICE ERROR AFTER CHANNEL END       SA57218
*        HAS BEEN POSTED.                                       SA57218
         TM    DXECB,ECBNOERR           TEST FOR I/O ERROR      SA57218
         BNO   CTA06400                 GO TO ABEND ROUTINE     SA57218
         B     CTA05200                 FREEMAIN IF NO ERROR    SA57218
CTA04800 EQU   *
*  ERROR ENCOUNTERED DURING READ
*
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULERRPTR              IN PARAMETER LIST
         OI    ULERRPTR,ERROR           FLAG ERROR
         MODESET EXTKEY=DATAMGT         W/A FETCH PROT           Y02082
         LH    R1,ULCNT                 UPDATE LABEL NUMBER
         MODESET KEYADDR=DXUKEY,WORKREG=15 RET TO USER KEY       Y02082
         LA    R1,K1(,R1)               BY 1
         STC   R1,ULBUFR+K3             PASS NO OF LABEL UNABLE TO READ
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         STH   R1,ULCNT                 SAVE UPDATE LABEL NO.    Y02082
         LA    RB,CTA04700              TO USER - SYNCH TO USER THEN
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    MODULE WILL RETURN TO CTA04700 IN DATA MANAGEMENT KEY       Y02082
         B     CTA05500                 RETURN TO TEST RETURN CODE.
*
CTA04900 EQU   *
*  TAPE MARK READ.  IF USER HAS PROCESSED ANY PREVIOUS LABELS,
*  FREEMAIN AND RETURN TO CALLER.                               SA57218
*  IF USER HAS NOT PROCESSED ANY PREVIOUS LABELS, SYNCH TO USER
*  WITH LABEL BUFFER POINTER SET TO ZERO, THEN                  SA57218
*  FREEMAIN AND RETURN TO CALLER.
*
         CLI   ULCNT+K1,CHAR0           TEST,BR IF PREVIOUS LABELS
         BH    CTA05200                 HAVE BEEN PROCESSED     SA57218
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE AUL'S SPECIFIED
         BO    CTA05200                 YES, BRANCH-CONTINUE    SA57218
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    MODULE WILL RETURN IN DATA MANAGEMENT KEY                   Y02082
         XC    ULERRPTR,ULERRPTR        ZERO ERROR PARM
         SR    R1,R1                    ZERO BUFFER PTR
         BAL   RB,CTA05600              GO TO SYNCH TO USER
*
*
CTA05200 EQU   *
*  ESTABLISH NAME OF ROUTINE WHICH CALLED THIS ROUTINE, THEN
*  FREEMAIN AND RETURN TO CALLER.
*
*    FREEMAIN USER'S USER LABEL WORK AREA                        Y02082
         IECRES FREE,A=(RA),PREFIX=NO,SP=K229,LV=USERLU,         Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*                                                                Y02082
         LM    RES,RB,ULREGSAV          RESTORE REGS             Y02082
*    FREEMAIN CLOSE'S USER LABEL WORK AREA                       Y02082
         IECRES FREE,A=(RC),PREFIX=YES,STM=(2,14,WTGPREFX)       Y02082
*
*****          TEST FOR RETURN FROM UL PROCESSING ROUTINES
*
CTA05300 EQU   *
         MODESET EXTKEY=DATAMGT         CLOSE NORMAL KEY         Y02082
         SR    RET,RET                  SET UP FOR BRANCH TABLE
         IECRES LOAD,MODID=VOLDPMOD,BRCODE=(RET),BRANCH=QUEUED   Y02080
*                                       XCTL TO VOLDPMOD         Y02080
         EJECT
CTA05400 EQU   *
         XC    ULERRPTR,ULERRPTR        ZERO ERROR IND
CTA05500 EQU   *
         LA    R1,ULBUFR                POINT TO LABEL BUFFER
CTA05600 EQU   *
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR,ULTOTPTR        ZERO TOTALING ENTRY
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
         L     R7,DCBDEBAD              LOAD DEB ADDR            Y02082
         CLC   0(K3,R1),UTLCON          CK IF PROCESSING TRLRS
         BE    CTA05700                 TRLRS,BR TO CK FOR EOF
*
         TM    DCBOFLGS,DCBOWRIT        IS IT OUTPUT
         BO    CTA06000                 YES, BR WITH NO EOF FLAG
         TM    DEBOPATB-DEB(R7),DEBOPRBK  IS DCB OPEN FOR RDBACK
         BNM   CTA05700                 NO,BR TO CHK FOR EOF
*
         LH    R1,DEBVOLSQ-DEB(R7)      GET DEB VOL SEQ NUMBER
         BCT   R1,CTA06000              DECREMENT--IF NOT ZERO
         B     CTA05900                 IF ZERO, BR TO INDIC EOF
*
CTA05700 EQU   *
         LH    R1,JFCBVLSQ              WAS VOL SEQ SPECIFIED IN DD
         LTR   R1,R1                    TEST
         BZ    CTA05800                 BR IF VOL SEQ NOT SPECIFIED
         BCTR  R1,0                     DECR BY ONE SINCE DEB VOL SEQ
*                                       ALWAYS STARTS WITH ONE
CTA05800 EQU   *
         AH    R1,DEBTVLSQ-DEB(R7)      ADD DEB VOL SEQ         SA55619
         SR    RF,RF                    CLEAR WORK REGISTER
         IC    RF,JFCBNVOL              GET TOTAL NUMBER OF VOLS
         CR    R1,RF                    COMPARE VOLS USED TO TOTAL
         BE    CTA05900                 IF EQ INDICATE EOF
         CLC   VOLLABI,AEOF             CHK FOR EOF IF ON OTHER
*                                       THAN THE LAST VOLUME OF
*                                       A MULTI-VOLUME DATA SET
         BNE   CTA06000                 IF NOT EQ, BR TO INDICATE EOV
CTA05900 EQU   *
         OI    ULDCBPTR,EOFFLG          SET FLAG TO INDICATE EOF
*
CTA06000 EQU   *
         TM    DCBMACRF,DCBMEXCP        CK IF USING EXCP
         BO    CTA06100                 EXCP, SKIP TOTALING
         TM    DEBOPATB-DEB(R7),DEBOPOUT-DEBOPRBK  OPENED FOR INPT/RDBK
         BZ    CTA06100                 YES, SKIP TOTALING
         TM    DCBOPTCD,DCBOPTT         CK IF TOTALING SPECIFIED
         BZ    CTA06100                 BR IF NO TOTALING
*
         L     R7,K40(R7)               GET PTR TO TOTALING AREA
         USING TOTSAVWA,R7              ESTABLISH BASE FOR AREA
         MVC   ULTOTPTR,TOTEOVPT        TOTLING PTR TO PARM LIST
         DROP  R7                       DROP BASE
*
CTA06100 EQU   *
*  TAKE USER EXIT WITH IECRES-UEXIT MACRO                        Y02082
*
         MODESET EXTKEY=DATAMGT         KEY OF CLOSE W/A         Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT TO ZERO     Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST  Y02082
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,WTGPREFX)           Y02082
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE      Y02082
         IC    R1,DCBOFLGS              GET USER'S DCBOFLGS      Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            POINT TO COPIED DCB      Y02082
         LA    R0,DCBOBUSY              SET MASK FOR BUSY BIT    Y02082
         NR    R1,R0                    SELECT THE BUSY BIT      Y02082
         IC    R0,DCBOFLGS              COMBINE WITH DCBOFLGS    Y02082
         OR    R1,R0                      FROM COPIED DCB.       Y02082
         STC   R1,DCBOFLGS              UPDATE DCBOFLGS IN COPY  Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE
         STC   RF,ULRETCOD              SAVE USERS RETURN CODE   YM4618
         BR    RB                       RETURN
         EJECT
CTA06300 EQU   *
         EXCP  DXIOB                    ISSUE EXCP
         IECRES WAIT                    WAIT FOR I/0 COMPLETION
         TM    IOBSTAT0,CSWUNITX        TEST FOR UNIT EXCEPTION AND SET
*                                       CONDITION CODE ACCORDINGLY
         BR    RB                       RETURN TO CALLER
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*                        ERROR PROCESSING                             *
*                                                                     *
***********************************************************************
         SPACE 1
CTA06400 EQU   *
         LA    R0,CABD064               ERR- READ UL
         DMABCOND (0),PDMOD,RETURN=VOLDPMOD  ABEND MACRO
CTA06500 EQU   *
         LA    R0,CABD063               ERR- WRITE TRL2
         LA    RET,K8                   SET UP FOR BRANCH TABLE
         DMABCOND (0),PDMOD             ABEND MACRO
         EJECT
*
*                        CONSTANTS
*
LENGTH   DC    X'20000050'              SILI, COUNT = 80 BYTES
UTLCON   DC    C'UTL'                   TRAILER LABEL CONSTANT
UHLCON   DC    C'UHL'                   HEADER LABEL CONSTANT
EOV      DC    C'EOV'                   FIRST THREE CHAR OF LABEL
HDR      DC    C'HDR'                   FIRST THREE CHAR OF LABEL
AEOF     DC    C'EOF'                   FIRST THREE CHAR OF LABEL
*
*****          DCB EXIT LIST CODE BYTES USED FOR TESTING
*
EXIT4    DC    X'04'                    CREATE OUTPUT UTL
         DC    X'84'                    SAME BUT LAST ENTRY
SLPSUP   DC    X'0C'                    SUL PROCESSING WAS
*                                       SUPPRESSED AT EOF
         DC    X'8C'                    SAME BUT LAST ENTRY
*
         LTORG
         XCTLTABL ID=(PDMOD,0P,VOLDPMOD,2F),SVC=020,             Y02080X
               BRT=YES,LENGTH=                                   Y02080
         IECDSECS CVT,TCB,RB,DCB,DEB,MAIN,USERLAB,USERTOT,PREFX, Y02080X
               WTG,PSA,RRPL,EXPAND=YES                           Y02144
         IECEQU
         END
