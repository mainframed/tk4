         TITLE 'IFG0200Z - STANDARD LABEL TAPE TRAILER PROCESSING'
IFG0200Z CSECT
***********************************************************************
*                                                                     *
*          VS2 RELEASE 037 CHANGES                                    *
*415652-415957,503500,503600                                   @ZA02210
*0000422000-424000                                             @ZA07585
*0000                                                          @ZA08326
*0000                                                          @ZA13576
*0000414917-415047-415147                                      @ZA19724
*C415026-415056,415116,415392,415925                           @ZA24994
*          VS2 RELEASE 03 DELETIONS                                   *
*0000185500                                                     ZA00016
*          VS1 RELEASE 02 DELETIONS                                   *
*0000                                                            XM1201
*                                                                     *
*          RELEASE 21 DELETIONS/CHANGES                               *
*                                                                A41662
* MODULE NAME = IFG0200Z                                              *
*                                                                     *
* DESCRIPTIVE NAME = STANDARD LABEL TAPE TRAILER PROCESSING           *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE TAPE STANDARD TRAILER LABEL FUNCTION.                      *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0200Z - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             INITIAL ENTRY--
*                IFG0200Y - PROCESS CLOSE TAPE STANDARD TRAILER LABEL
*                           FUNCTION.
*             SECOND ENTRY--
*                IFG0200P - CONTINUE PROCESSING CLOSE TAPE STANDARD
*                           TRAILER LABEL FUNCTION.
*             THIRD ENTRY--
*                IFG0200P - CONTINUE PROCESSING CLOSE TAPE STANDARD
*                           TRAILER LABEL FUNCTION.
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202A - PROCESS CLOSE TAPE STANDARD USER LABEL FUNCTION. *
*         IFG0202F - PROCESS CLOSE TAPE VOLUME STATISTICS FUNCTION.   *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING WTG,RWTG                 WHERE-TO-GO TABLE        Y02080
         USING TCB,RET
         USING UCBOB,RUCB
         USING CVT,RD
         USING TIOENTRY,RTIOT
         USING DEB,RDEB
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE TAPE STANDARD TRAILER LABEL FUNCTION.                      *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    WRITE A TAPE MARK FOLLOWING DATA SET.                            *
*    CONSTRUCT AND WRITE TRAILER LABEL 1 FROM INFORMATION IN THE JFCB,*
*    DCB, AND UCB.                                                    *
*    CONSTRUCT AND WRITE TRAILER LABEL 2 FROM INFORMATION IN THE JFCB *
*    AND TIOT.                                                        *
*    FOR ASCII TAPE, LABELS ARE TRANSLATED BEFORE WRITING.            *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE TAPE ACCESS METHOD EXECUTOR INTERFACE FUNCTION.            *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY.                                 *
*       DD ENTRY IN THE TIOT.                                         *
*       WTG TABLE.                                                    *
*       CURRENT WTG TABLE ENTRY.                                      *
*       DCB.                                                          *
*       CLOSE WORK AREA.                                              *
*       RESIDENT ROUTINE.                                             *
*       UCB.                                                          *
*       DEB.                                                          *
*                                                                     *
* OUTPUT -                                                            *
*    TRAILER LABELS 1 AND 2.                                          *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE TAPE STANDARD USER LABEL FUNCTION.                         *
*    CLOSE TAPE VOLUME STATISTICS FUNCTION.                           *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH THE FOLLOWING INTERNAL CODES--                         *
*       61 - 714 ABEND - ERROR IN WRITING TRAILER LABEL 1.            *
*       62 - 714 ABEND - ERROR IN WRITING TAPE MARK.                  *
*       63 - 714 ABEND - ERROR IN WRITING TRAILER LABEL 2.            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
         B     CTA00100(RET)            USE BRANCH TABLE
CTA00100 EQU   *
         B     CTA00200                 ENTRY FOR SL TRAILER PROC.
         B     CTA00300                 ENTRY FROM P.D. AFTER TM
         B     CTA01500                 ENTRY FROM P.D. AFTER TRL1
*
*****          WRITE TAPE MARK FOLLOWING USER'S DATA
*
CTA00200 EQU   *
         MVC   DXCCW1,AWTMCCWB          SET UP CCW TO WRITE TAPE MARK
         MVI   DXCCW1+K4,CCWCMDCH+CCWSILI  COMMAND CHAIN
         MVC   DXCCW2,AWTMCCWB          SET UP NEXT CCW
         MVI   DXCCW2,CCWNOP            NOP OP CODE
         BAL   RC,CTA02800              WRITE TAPE MARK BEFORE TRAILER
         LA    R0,CABD062               ERR-WRITE TAPE MARK
         LA    RET,K4                   SET UP FOR BRANCH TABLE
         BC    12,CTA02900              BRANCH IF I/O ERROR
         OI    DXATOUTA,DXATDATM        SHOW TM AFTER DATA       Y02144
         SPACE 1
*
*****          CONSTRUCT END OF FILE LABEL 1
*
CTA00300 EQU   *
         MVC   FL1LABI,AEOF             SET FILE LABEL ID TO EOF
         MVI   FL1NO,CHAR1              SET FILE LABEL NUMBER TO 1
         SPACE 1
*
*****          DETERMINE 17 LEAST SIGNIFICANT NON-BLANK
*****          CHARACTERS IN DATA SET NAME IN JFCB
*
         LA    RD,JFCBDSNM              STARTING ADDR OF JFCB TO REG
         LA    RF,JFCBDSNM+27           GET ADDR OF 1ST POSSIBLE A41662
CTA00400 EQU   *                        SIGNIFICANT CHARS        A41662
         CLI   K16(RF),BLANK            IS CHAR NOT BLANK        A41662
         BNE   CTA00500                 BR TO FINISH ROUTINE     A41662
         BCT   RF,CTA00400              DECR PTR AND BR TO TEST  A41662
CTA00500 EQU   *                        NEXT CHAR TO LEFT        A41662
         CLR   RF,RD                    IS LEFT PTR WITHIN FIELD A41662
         LA    RD,L'FL1ID(,RF)          POINT TO FIRST BLANK    ZA00016
         BNL   CTA00600                 BR TO BUILD DSNAME       A41662
         SPACE 1
*
*****          PLACE DSNAME FROM JFCB INTO FILE IDENTIFICATION
*
         MVC   FL1ID,JFCBDSNM           INSERT FIRST 17 CHARACTERS
         B     CTA00700                 GO SET UP GENERATION NUMBER
CTA00600 EQU   *
         MVC   FL1ID,0(RF)              USE LAST 17 LEAST SIG    A41662
*                                       CHARACTERS               A41662
         SPACE 1
*
*****          GENERATION NUMBER AND VERSION NUMBER OF GENERATION
*
CTA00700 EQU   *
         MVI   FL1GNO,BLANK             SET GENERATION NUM AND VERSION
         MVC   FL1GNO+K1(K44),FL1GNO    NUMBER OF GENERATION TO BLANKS
         CLI   JFCBELNM+K1,BLANK        IS THIS A GENERATION DATA SET-
         BE    CTA00800                 NO, GO SET UP FILE SERIAL NUM
         LA    RET,K8                   YES, SUBTRACT 8 FROM REGISTER
         SLR   RD,RET                   CONTAINING FIRST BLANK IN DSN
         MVC   FL1GNO,K1(RD)            RD NOW POINTS TO GENERATION NUM
         MVC   FL1VNG,K6(RD)            WHICH IS OF FORM GNNNNVNN
         SPACE 1
*
*****          FILE SERIAL, VOLUME SEQUENCE, AND FILE SEQUENCE NOS.
*
CTA00800 EQU   *
         MVC   FL1FILSR,UCBSQC          FILE SERIAL NUMBER
         LH    RC,JFCBVLSQ              VOL SEQ NUM OF FIRST VOL
         LTR   RC,RC                    IS IT ZERO-
         BZ    CTA00900                 YES, VOL SEQ NO. IN DEB CORRECT
         BCTR  RC,0                     NO, SUBTRACT 1 AND ADD VOL SEQ
*                                       NO. IN THE DEB
CTA00900 EQU   *
         AH    RC,DEBTVLSQ              FIRST VOL OF DS IN DEB IS 1
         CVD   RC,DXCCW2                BINARY TO PACKED DECIMAL
         UNPK  FL1VOLSQ,DXCCW2          VOLUME SEQUENCE NUM IN EBCDIC
         OI    FL1VOLSQ+K3,ZONEOF       REMOVE SIGN BITS
         LH    RC,JFCBFLSQ              PICK UP FILE SEQUENCE NUMBER
         CVD   RC,DXCCW2                BINARY TO PACKED DECIMAL
         UNPK  FL1FILSQ,DXCCW2          FILE SEQUENCE NUM IN EBCDIC
         OI    FL1FILSQ+K3,ZONEOF       REMOVE SIGN BITS
         SPACE 1
*
*****          CREATION DATE
*
         SR    RC,RC                    CLEAR WORK REGISTER
         IC    RC,JFCBCRDT              YEAR OF CREATION IS 1 BYTE JFCB
         CVD   RC,DXCCW2                CONVERT YEAR TO DECIMAL
*                                       LABEL TO BE OF FORM  BYYDDD
         UNPK  FL1CREDT+K1(K2),DXCCW2   PLACE YEAR IN EBCDIC INTO LABEL
         OI    FL1CREDT+K2,ZONEOF       REMOVE SIGN BITS
         IC    RC,JFCBCRDT+K1           PICK UP THE TWO CHARACTERS OF
         SLA   RC,K8                    THE DAY OF CREATION
         IC    RC,JFCBCRDT+K2           FROM THE JFCB
         CVD   RC,DXCCW2                CONVERT DAY TO DECIMAL
         UNPK  FL1CREDT+K3(K3),DXCCW2   CREATION DAY IN EBCDIC TO LABEL
         OI    FL1CREDT+K5,ZONEOF       REMOVE SIGN BITS
         SPACE 1
*
*****          EXPIRATION DATE
*
         SR    RC,RC                    CLEAR WORK REGISTER
         IC    RC,JFCBXPDT              PICK UP YEAR OF EXPIRATION
         CVD   RC,DXCCW2                CONVERT YEAR TO DECIMAL
*                                       LABEL FIELD IS BYYDDD
         UNPK  FL1EXPDT+K1(K2),DXCCW2   PLACE YEAR IN EBCDIC INTO LABEL
         OI    FL1EXPDT+K2,ZONEOF       REMOVE SIGN BITS
         LH    RC,JFCBXPDT+K1           PICK UP DAY OF EXPIRATION
         CVD   RC,DXCCW2                CONVERT DAY TO DECIMAL
         UNPK  FL1EXPDT+K3(K3),DXCCW2   DAY IN EBCDIC TO TRAILER LABEL
         OI    FL1EXPDT+K5,ZONEOF       REMOVE SIGN BITS
         SPACE 1
*
*****          BLOCK COUNT
*
         L     RC,DCBBLKCT              BLOCK COUNT FROM THE DCB
         CVD   RC,DXCCW2                CONVERT BLOCK COUNT TO DECIMAL
         UNPK  FL1BLKCT,DXCCW2          BLOCK COUNT IN EBCDIC TO LABEL
         OI    FL1BLKCT+K5,ZONEOF       REMOVE SIGN BITS
         TM    DCBMACRF,DCBMEXCP        THE PROBLEM PROGRAM USING EXCP
         BC    12,CTA01000              NO, BLOCK COUNT IN DCB IS VALID
         TM    DCBMCRF1,DCBMDEV         TAPE DEPENDENT PORTION EXIST
         BC    5,CTA01000               YES, ASSUME BLOCK CT IN DCB OK
         MVI   FL1BLKCT,CHAR0           SET BLOCK CT IN LABEL TO ZEROS
         MVC   FL1BLKCT+K1(K5),FL1BLKCT  SINCE FIELD NOT PRESENT IN DCB
         SPACE 1
*
*****          DATA SET SECURITY
*
CTA01000 EQU   *
         MVI   FL1FSEC,FL1NOSEC         RESET DATA SET SECURITY IND.
         TM    JFCBIND2,JFCBSCTY        DOES THE JFCB SPECIFY SECURITY-
         BC    12,CTA01100              NO, DO NOT SET INDICATOR
         MVI   FL1FSEC,FL1SECTY         YES, SET DATA SET SECURITY IND
         TM    JFCBIND2,JFCBRWPW        DOES JFCB SPECIFY RWPW OPTION
         BNO   CTA01100                 BR IF NOT
         MVI   FL1FSEC,FL1WRSEC         IND SECURITY IS FOR WRITE ONLY
         SPACE 1
*
*****          SYSTEM CODE AND RESERVED FIELDS
*
CTA01100 EQU   *
         SPACE 1
*
*****          TRANSLATE ANSI LABEL DATA BEFORE WRITING LABEL
*
         TM    UCBSTAB,UCBBSTR          TEST FOR ANSI LABELS-
         BNO   CTA01300                 BR IF NOT- BYPASS TRANSLATION
         TM    JFCBIND2,JFCBSCTY        DOES JFCB SPECIFY SECURITY-
         BO    CTA01200                 BR IF YES TO SET SYSTEM CODE
         MVI   FL1FSEC,BLANK            NO, ACCESS. BYTE TO BLANK
CTA01200 EQU   *
         MVC   FL1SYSCD(K5),ASYSCD      MOVE IN NEW SYSTEM CODE
         BAL   RC,CTA02750              TRANSLATE LABEL DATA
         B     CTA01400                 BR TO WRITE LABEL
CTA01300 EQU   *                        ANSI
         MVC   FL1SYSCD,VSSYSC          INSERT VS SYSTEM CODE    XM1201
*                                       INTO TRAILER             XM1201
         SPACE 1
CTA01400 EQU   *
*
*****          SET UP CHANNEL PROGRAM TO WRITE LABEL
*
         LA    RC,DXLBL                 PLACE ADDRESS OF LABEL AREA TO
         ST    RC,DXCCW1                OBTAINED CORE INTO CCW
         MVI   DXCCW1,CCWWRTAP          DITTO FOR WRITE OPERATION CODE
         MVC   DXCCW1+K4(K4),AWTMCCWB+K4  SPECIFY SILI FLAG, LENGTH 80
*
*****          WRITE END-OF-FILE LABEL 1
*
         BAL   RC,CTA02800              BR TO WRITE TRAILER LABEL 1
         LA    R0,CABD061               ERR- WRITE TRL1
         LA    RET,K8                   SET UP FOR BRANCH TABLE
         BC    12,CTA02900              BRANCH IF I/O ERROR
         OI    DXATOUTA,DXATTRL1        SHOW TRL1 WRITTEN        Y02144
         SPACE 1
*
*****          PREPARE DATA SET TRAILER LABEL 2
*
CTA01500 EQU   *
         MVI   FL1NO,CHAR2              SET FILE LABEL IDENTIFIER TO 2
         MVI   FL2TRTCH,BLANK           SET PART OF LABEL TO
         MVC   FL2TRTCH+K1(K45),FL2TRTCH  BLANKS - 47 CHARACTERS
         SPACE 1
*                                                                Y02083
*****          SET CHECKPOINT D/S INDICATOR IF APPROPRIATE       Y02083
*                                                                Y02083
         L     RC,DXDSAB                FETCH DSAB ADDRESS       Y02083
         USING DSAB,RC                  ADDRESS DSAB             Y02083
         TM    DSABFLG4,DSABCKDS        Q - CHECKPOINT D/S       Y02083
         BZ    CTA01600                 IF NOT, BR               Y02083
         DROP  RC                       DSAB ADDRESSABILITY      Y02083
         MVI   FL2DSIND,FL2CKDS         SET CHKPT LABEL FLAG     Y02083
CTA01600 EQU   *                                                 YO2083
         SPACE 1
*
*****          BLOCKING ATTRIBUTE
*
         SR    RC,RC                    CLEAR WORK REGISTER
         IC    RC,JFCRECFM              RECORD FORMAT FROM JFCB
         SRL   RC,3                     BITS 0,1 CONTAIN BLK ATTRIB
         STC   RC,FL2BLKA               TO PREPARE FOR TRANSLATE, ZERO
         NI    FL2BLKA,X'03'            ALL BUT BITS 0,1
         TR    FL2BLKA,ABLKA            TRANSLATE TO S,B,R, OR BLANK
         SPACE 1
*
*****          RECORD FORMAT
*
         SRL   RC,3                     BITS 0,1 CONTAIN RECORD FORMAT
         STC   RC,FL2RECFM              F = BIT 0  V = BIT 1  U = 0,1
*              DEFAULT TO RECFM=D IF NEITHER BIT ON
         TR    FL2RECFM,ARECFM          TRANSLATE TO D,V,F OR U
         SPACE 1
*
*****          BLOCK SIZE AND LOGICAL RECORD LENGTH
*
         LH    RC,JFCBLKSI              PICK UP BLOCK LENGTH FROM JFCB
         CVD   RC,DXCCW2                CONVERT BLOCK LENGTH TO DECIMAL
         UNPK  FL2BLKL,DXCCW2           BLOCK LENGTH IN EBCDIC TO LABEL
         OI    FL2BLKL+K4,ZONEOF        REMOVE SIGN BITS
         LH    RC,JFCLRECL              PICK UP LOGICAL RECORD LENGTH
         CH    RC,AGRTR32K              IS LRECL GREATER THAN 32K-
         BE    CTA01800                 BR IF YES TO SET LABEL TO 9'S
         CVD   RC,DXCCW2                CONVERT LOGICAL RECORD LENGTH
         UNPK  FL2LRECL,DXCCW2          LOG RECORD LENGTH IN EBCDIC
         OI    FL2LRECL+K4,ZONEOF       REMOVE SIGN BITS
         B     CTA01900                 BR TO CONTINUE MERGE
CTA01800 EQU   *
         MVI   FL2LRECL,X'F9'           SET LRECL TO 9'S INDICATING
         MVC   FL2LRECL+K1(K4),FL2LRECL  GREATER THAN 32K
CTA01900 EQU   *
         MVI   FL2DEN,CHAR4             SET DENSITY TO FOUR       99223
         TM    JFCDEN,DEN6250           IS DENSITY 6250 BPI       99223
         BO    CTA02000                 YES- BRANCH               99223
         SR    RC,RC                    CLEAR WORK REGISTER
         IC    RC,JFCDEN                PICK UP DENSITY FROM THE JFCB
         SRL   RC,6                     BITS 0 AND 1 CONTAIN DENSITY
         STC   RC,FL2DEN                00=200 01=556 02=800 03=1600BPI
         OI    FL2DEN,DENSET            SET DENSITY TO EBCDIC 0,1,2,3
CTA02000 EQU   *                                                  99223
         MVI   FL2FILP,C'0'             SET FILE POSITION TO ZERO
         CLC   UCBVOLI,JFCBVOLS         IS THIS THE 1ST VOL-
         BE    CTA02100                 YES, FILE POSITION IND S/B ZERO
         MVI   FL2FILP,FILPOS1          NO, SET FILE POSITION IND TO 1
CTA02100 EQU   *
         USING TIOT,RC
         L     RD,CVTPTR                VECTOR TABLE ADDRESS
         L     RC,CVTTCBP               POINTER TO TCB
         L     RC,K4(,RC)               TCB ADDRESS
         L     RC,TCBTIO-TCB(,RC)       TIOT ADDRESS
         MVC   FL2JOBD,TIOCNJOB         PLACE JOB/STEP IDENTIFICATION
         MVC   FL2STEPD,TIOCSTEP        FROM THE TIOT INTO THE LABEL
         DROP  RC
         MVI   FL2JSSP,SLASH            INSERT SLASH
         SPACE 1
*
*****          TAPE RECORDING TECHNIQUE
*
         SR    RC,RC                    CLEAR WORK REGISTER
         IC    RC,JFCTRTCH              PICK UP TAPE RECORDING TECH
         SRL   RC,4                     13=C , 2B=ET, 0=BLANK
         STC   RC,FL2TRTCH              PLACE FIRST CHARACTER OF TRTCH
         TR    FL2TRTCH(K1),ATRTCH      INTO LABEL AS BLANK, C, E, OR T
         CLI   JFCTRTCH,JFCTREV         IS IT BOTH EVEN PARITY AND TRAN
         BC    6,CTA02200               NO, THE SECOND CHAR S/B BLANK
         MVI   FL2TRTCH+K1,CHART        TAPE RECORD TECH SHOULD BE ET
         SPACE 1
*
*****          CARRIAGE CONTROL CHARACTER SET
*
CTA02200 EQU   *
         TM    JFCRECFM,JFCMAC          JFCB SPECIFY MACHINE CODE CNTRL
         BC    12,CTA02300              NO, SEE IF ASA CONTROL CHAR
         MVI   FL2CNTRL,CHARM           SET MACHINE CODE CONTROL CHAR
CTA02300 EQU   *
         TM    JFCRECFM,JFCASA          JFCB SPECIFY ASA CNTRL CHAR SET
         BC    12,CTA02400              NO, DO NOT SET CARRIAGE CNTRL
         MVI   FL2CNTRL,CHARA           YES, SET CONTROL CHAR TO ASA
CTA02400 EQU   *
         TM    UCBSTAB,UCBBSTR          TEST FOR ANSI LABEL-
         BO    CTA02450                 YES, SKIP TAPE ID
*
*****          SET UP TAPE DRIVE ID FOR 3400 SERIES STANDARD LABELS
*
CTA01950 EQU   *                                                  99223
         CLI   UCBTBYT4,UCB3400         TEST FOR 3400 DRIVE      YM1491
         BNE   CTA02500                 NO - BRANCH              YM1491
         L     RC,UCBEXTPT              GET ADDR OF COMMON EXT   Y02146
         CLI   UCBSNSCT-UCBCMEXT(RC),K24  IS IT MODEL A          Y02146
         BNE   CTA02500                 NO                        99223
         USING UCBMT,RC                 SET UP ADDRESSABILITY FOR 99223
*                                       THE UCB EXTENSION         99223
         L     RC,UCBXTN                GET EXTENSION ADDRESS    99223
         LH    RC,UCBCTD                PUT ID OF CREATING     @ZA24994
         N     RC,SNMASK                DRIVE INTO RET         @ZA24994
         DROP  RC                                                 99223
         CVD   RC,DXCCW2                CONVERT ID             @ZA24994
         UNPK  FL2ID,DXCCW2             PUT ID IN LABEL        @ZA13576
         OI    FL2ID+K4,ZONEOF          STRIP SIGN             @ZA13576
* GET THE MODEL NUMBER,POSITION IT AT BITS 12-15 IN            @ZA08326
* REG C, AND ADD IT TO THE DEVICE SERIAL NUMBER.               @ZA08326
         LA    RC,DXCCW2                GET AREA ADR.          @ZA24994
         ST    RC,DXCCW1                PUT AREA ADR. IN CCW   @ZA02210
         MVC   DXCCW1+K4(K4),CCW0ZK07   SILI FLAG. 7 SNS BYTES @ZA02210
         MVI   DXCCW1,CCWSENSE          SNS CMD CODE IN CCW    @ZA02210
         BAL   RC,CTA02800              GO ISSUE SENSE CMD     @ZA02210
         BZ    CTA02900                 BRANCH IF I-O ERROR    @ZA02210
         IC    RC,DXCCW2+K6             GET SIXTH SENSE BYTE   @ZA24994
         SLL   RC,K28                   CLEAR RC EXCEPT FOR    @ZA08326
         SRL   RC,K28                   HALF BYTE MOD NO.      @ZA13576
         IC    RC,CHARTBL(RC)           GET CHAR FROM TABLE    @ZA13576
         STC   RC,FL2ID                 PLACE MOD NO INTO LBL  @ZA13576
*****          RESET CCW TO WRITE LABEL                        @ZA08326
         LA    RC,DXLBL                 GET AREA ADDRESS       @ZA02210
         ST    RC,DXCCW1                PUT AREA ADR IN CCW    @ZA02210
         MVI   DXCCW1,CCWWRTAP          DITTO FOR WRT OP CODE  @ZA02210
         MVC   DXCCW1+K4(K4),AWTMCCWB+K4  SILI FLAG, LENGTH 80 @ZA02210
         B     CTA02500                 BR IF NOT TO WRITE LABEL
         SPACE 1
*
*****          BUFFER ALIGNMENT
*
CTA02450 EQU   *                                                  99223
         MVC   DXCCW3(K1),JFCBUFOF      GET BUFFER OFFSET LENGTH
         NI    DXCCW3,X'FF'-JFCBFOFL    TURN OFF BIT 0
         SR    RC,RC                    CLEAR WORK REGISTER    @ZA07585
         IC    RC,DXCCW3                PLACE BUF LNGTH IN REG @ZA07585
         CVD   RC,DXCCW3                CONV BUFF LNG TO DECIM @ZA07585
         UNPK  FL2BUFOF,DXCCW3          UNPACK AND PLACE INTO LABEL
         OI    FL2BUFOF+K1,ZONEOF       RESET SIGN BITS
         MVC   FL1LABI,AEOF             MOVE IN E-O-F CONSTANT
         SPACE 1
*
*****          TRANSLATE ANSI DATA BEFORE WRITING LABEL
*
         BAL   RC,CTA02750              TRANSLATE LABEL DATA
         SPACE 1
*
*****          WRITE END OF FILE LABEL 2
*
CTA02500 EQU   *
         EXCP  DXIOB                    GO WRITE FILE LABEL 2
         TM    JFCBTSDM,JFCSDS          IS DATA SET SYSOUT
         BO    CTA02700                 YES, DO NOT PROCESS USER LA
         TM    JFCBLTYP,JFCBUL          WAS SUL SPECIFIED-
         BNO   CTA02700                 NO, DO NOT PROCESS USER LABELS
         SR    RET,RET                  SET UP FOR BRANCH TABLE
         LA    RF,ULTAMOD               UL MOD ID
CTA02600 EQU   *
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*                                    XCTL TO ULTAMOD OR VOLDPMOD YO2080
CTA02700 EQU   *
         LA    RF,VOLDPMOD              VOL DISP MOD ID
         LA    RET,K8                   SET UP FOR BRANCH TABLE
         B     CTA02600                 BRANCH TO XCTL
         EJECT
CTA02750 EQU   *
         XLATE DXLBL,K80,TO=A           TRANSLATE LABEL DATA
         BR    RC                       RETURN TO CALLER
         EJECT
         SPACE 1
**********                MACROS                             **********
*                                                                     *
         SPACE 1
*            CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
*            AND TEST FOR UNIT EXCEPTION AND I/O ERROR
*  ( IT IS ASSUMED THAT ALL CONTROL BLOCKS HAVE ALREADY BEEN SET UP )
*
*        ENTRY TO THE ROUTINE IS AS FOLLOWS-
*           BAL   RC,CTA02800
*        RETURN TO THE CALLING ROUTINE TAKES PLACE AS FOLLOWS-
*           BO    12(RC)           RETURN IF UNIT EXCEPTION
*        OR
*           BR    RC               RETURN IF NO UNIT EXCEPTION
*
*        THE CONDITION CODE WILL HAVE BEEN SET TO '1' IF AN I/O
*        ERROR HAS OCCURRED.
         SPACE 1
CTA02800 EQU   *
         EXCP  DXIOB                    INITIATE I/O OPERATION
         IECRES WAIT                    WAIT FOR I/O COMPLETION
         TM    IOBSTAT0,CSWUNITX        TEST FOR UNIT EXCEPTION CAUSED
         BO    K12(RC)                  END-OF-TAPE - BR IF YES
         TM    DXECB,ECBNOERR           TEST FOR UNUSUAL I/O CONDITION
         BR    RC                       RETURN TO CALLER OF SUBROUTINE
         SPACE 1
*                                                                     *
**********                                                   **********
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*                        ERROR PROCESSING                             *
*                                                                     *
***********************************************************************
         SPACE 1
CTA02900 EQU   *
         DMABCOND (0),PDMOD             ABEND MACRO
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*                       CONSTANTS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
AWTMCCWB DC    X'1F00000020000050'      WRITE TAPE MARK;COUNT FOR WRITE
AEOF     DC    C'EOF'                   CHARACTERS EOF
CHARTBL  DC    C'0003570000046800'      MOD. CODE TO CHAR TABLE@ZA19724
         DS    0F
SNMASK   DC    X'0000FFFF'              TAPE MODEL NUMBER      @ZA08326
CCW0ZK07 DC    X'20000007'              CCW LENGTH             @ZA02210
ASYSCD   DC    C'OS360'                 ANSI SYSTEM CODE
VSSYSC   DC    C'IBM OS/VS 370'         VS SYSTEM CODE
ARECFM   EQU   *                        RECFM TRANSLATE TABLE
         DC    C'DVFU'                  DEC,VARIABLE,FIXED,UNKNOWN
ATRTCH   DC    C' CET'                  CONVERSION,EVEN,TRANSLATE
ABLKA    DC    C' SBR'                  BLK ATTRB TRANSLATE TABLE
         DS    0H
AGRTR32K DC    X'8000'                  VALUE IN LABEL WHEN LRECLGT 32K
         LTORG
         XCTLTABL ID=(PDMOD,0P,ULTAMOD,2A,VOLDPMOD,2F),SVC=020,  Y02080X
               BRT=YES,LENGTH=2040,PATCH=100                     Y02080
FL2CKDS  EQU   C'C'                TAPE CHKPT D/S INDICATOR      Y02083
         IECDSECS CVT,TCB,TIOT,DCB,DEB,UCB,DSAB,MAIN,WTG,        Y02083*
               EXPAND=YES                                        Y02083
         IECEQU
         END
