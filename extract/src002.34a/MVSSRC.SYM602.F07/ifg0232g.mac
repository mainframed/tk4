         TITLE 'IFG0232G - TCLOSE TAPE STANDARD TRAILER LABEL FUNCTION'
IFG0232G CSECT
*
***********************************************************************
*                                                                     *
*           VS1 RELEASE 02 DELETIONS                                  *
*0000                                                            XM1201
*                                                                     *
*          VS2 RELEASE 037 DELETIONS/CHANGES                         *
*821460-821831916500,917000                                   @ZA02210
*0000                                                         @ZA13576
*0000                                                         @ZA19724
*C821460,821496                                               @ZA26229
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000820420                                                      Y02146
*0000666000-678000,912000-914000                                 YM1431
*0000144000,370500-374000,492000,944000,954000                   YM1272
*          RELEASE 21.7 DELETIONS/CHANGES                             *
*0000348000                                                     SA57250
*0000                                                           SA53865
*          RELEASE 21 DELETIONS/CHANGES                               *
*                                                                M0150
*                                                                A41662
*                                                                     *
* MODULE NAME - IFG0232G                                              *
*                                                                     *
* DESCRIPTIVE NAME - TCLOSE TAPE STANDARD TRAILER LABEL PROCESSING    *
*                                                                     *
* COPYRIGHT - NONE                                                    *
*                                                                     *
* CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING THE CSECT CARD.   *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS PART I OF THE 'TCLOSE TAPE STANDARD TRAILER *
*    LABEL FUNCTION'. REFER TO THE FOLLOWING 'FUNCTION PROLOG'        *
*    FOR DETAILS.                                                     *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0232G - REFER TO 'INPUT' FOR A LIST OF CALLING MODULES   *
*                    AND THEIR RESPECTIVE ENTRY CONDITIONS.           *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REGISTER 14 ('RET') WILL CONTAIN ONE OF THE BRANCH TABLE OFFSETS *
*    LISTED BELOW, THE BRANCH TABLE BEING USED TO DETERMINE AT WHICH  *
*    POINT PROCESSING IS TO BEGIN-                                    *
*       0 - ENTRY FROM IGC0002C TO PROCESS OUTPUT TRAILER LABELS.     *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG' FOR ADDITIONAL INPUT.   *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - O/C/EOV/DADSM COMMON FUNCTION ROUTINE TO UPDATE  *
*                    THE DCB, WAIT, AND BRANCH.                       *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* EXITS, ERROR -                                                      *
*         IFG0230P - WHEN AN ERROR CONDITION OCCURS IN THIS MODULE.   *
*                    REFER TO 'OUTPUT' IN THE FOLLOWING 'FUNCTION     *
*                    PROLOG' FOR A LIST OF ERROR CONDITIONS.          *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
***********************************************************************
*
*****    TCLOSE INTERNAL ERROR CODES
*
TABD141  EQU   141                      CODE FOR POSITIONING ERROR
*                                       ..FOLLOWING USER LABEL PROC
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING FORCORE,RCORE
         USING IHADCB,RDCB
         USING UCB,RUCB
         USING DEBBASIC,RDEB            ADDRESSABILITY TO DEB    YM1272
         USING WTG,RWTG
*
         B     TCT00200(RET)            DETERMINE TYPE OF ENTRY TO MOD
TCT00200 EQU   *
         B     TCT00400                 BR IF SL OUTPUT PROCESSING
         EJECT
***********************************************************************
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME - 'TCLOSE TAPE STANDARD TRAILER LABEL FUNCTION'       *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    1. WRITE A TAPE MARK TO DELIMIT THE DATA. IF A 'TAPE INDICATE'   *
*       (I.E., END-OF-TAPE) CONDITION IS DETECTED AND THE POSITIONING *
*       OPTION IS 'LEAVE', THE TAPE IS BACKSPACED PAST THE TAPE MARK  *
*       AND THE FORCE END-OF-VOLUME (FEOV) MACRO IS ISSUED TO         *
*       CONTINUE THE DATA SET ON ANOTHER VOLUME. UPON RETURN FROM     *
*       FEOV PROCESSING, THE TAPE MARK IS RE-WRITTEN (ON THE NEW      *
*       VOLUME) AND PROCESSING CONTINUES;                             *
*    2. FORMAT AND WRITE END-OF-FILE LABEL 1;                         *
*    3. BEGIN FORMATTING END-OF-FILE LABEL 2;                         *
*                                                                     *
* ENTRY POINTS -                                                      *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* INPUT -                                                             *
*    1. REGISTER CONTENTS AT ENTRY ARE AS FOLLOWS-                    *
*       'RDCB' - ADDRESS OF THE DCB BEING PROCESSED;                  *
*       'RCORE'- ADDRESS OF THE WORK AREA FOR THAT DCB;               *
*       'RES'  - ADDRESS OF THE OPEN/CLOSE/EOV RESIDENT ROUTINE;      *
*       'RWTG' - ADDRESS OF THE WHERE-TO-GO TABLE;                    *
*       'RPARC'- ADDRESS OF THE CURRENT TCLOSE PARAMETER LIST ENTRY;  *
*       'RWTGC'- ADDRESS OF THE CURRENT WHERE-TO-GO TABLE ENTRY;      *
*       'RTIOT'- ADDRESS OF THE CURRENT TIOT ENTRY FOR THE DCB;       *
*       'RUCB' - ADDRESS OF THE CURRENT UCB FOR THE DCB;              *
*       'RDEB' - ADDRESS OF THE DCB'S DEB;                            *
*                                                                     *
* OUTPUT -                                                            *
*    1. AT EXIT TO IFG0232M-                                          *
*       REGISTER CONTENTS ARE THE SAME AS AT ENTRY EXCEPT THAT        *
*          REGISTER 'RET' CONTAINS A BRANCH TABLE OFFSET OF '0';      *
*       WORK AREA FIELDS- TRAILER LABEL EOF2 IS PARTIALLY FORMATTED;  *
*       TAPE POSITION- AT THE INTERBLOCK GAP FOLLOWING TRAILER LABEL  *
*                      EOF1.                                          *
*    2. AT EXIT TO IFG0230P (PROBLEM DETERMINATION)-                  *
*       REGISTER CONTENTS ARE THE SAME AS AT ENTRY EXCEPT THAT        *
*          REGISTER 'R0' CONTAINS ONE OF THE FOLLOWING INTERNAL       *
*          ERROR CODES (THE CORRESPONDING ABEND AND RETURN CODES ARE  *
*          INDICATED IN PARENTHESES)-                                 *
*          122 (717/04)- ERROR WRITING TAPE MARK FOLLOWING DATA.      *
*          123 (717/08)- ERROR WRITING END-OF-FILE LABEL 1.           *
*          140 (117/2C)- ERROR BACKSPACING PAST TAPE MARK FOLLOWING   *
*                        DATA WHEN FEOV IS TO BE ISSUED.              *
*       WORK AREA INDICATORS-                                         *
*          'DXCALLID' - CONTAINS THE ID OF THIS MODULE.               *
*    3. AT EXIT TO THE FEOV FUNCTION-                                 *
*       REGISTER CONTENTS ARE THE SAME AS AT ENTRY EXCEPT THAT        *
*          REGISTER 'R1' CONTAINS THE ADDRESS OF THE DCB AT EOV.      *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* EXITS, NORMAL -                                                     *
*         IFG0232M - TO FINISH FORMATTING AND WRITE END-OF-FILE LABEL *
*                    1 AND TO PROCESS OUTPUT USER TRAILER LABELS      *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE TCLOSE WORK AREA AND THE WHERE-TO-GO (WTG)                   *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
***********************************************************************
*
*****          WRITE TAPE MARK FOLLOWING USER'S DATA
*
TCT00400 EQU   *
         MVC   DXCCW1,AWTMCCWB          INITLZ CCW TO WRITE TAPE MARK
         MVI   DXCCW1+K4,CCWCMDCH+CCWSILI  CHAIN A NOP, SET SILI FLAG
         MVC   DXCCW2,AWTMCCWB          INITLZ SECOND CCW
         MVI   DXCCW2,CCWNOP            MAKE SECOND CCW A NOP
         LA    RD,TABD122               LOAD INTERNAL ERROR CODE
         OI    DXATALL,DXATFC           FORCE CLOSE ON ERROR     YM7099
         BAL   RC,TCT04800              BRANCH TO WRITE TAPE MARK
         TM    IOBSTAT0,CSWUNITX        WAS ERROR CAUSED BY 'TAPE
*                                       ..INDICATE' CONDITION-
         BNO   TCT00800                 ..BR IF NOT TO ERROR RTN
         TM    PLISTOPT(RPARC),PLISTLV  IS DISPOSITION 'LEAVE'-
         BM    TCT00800                 ..BRANCH IF REREAD      SA57250
*
*****          ISSUE END-OF-VOLUME- USER HAS RUN OUT OF SPACE
*****          AND MAY WISH TO CONTINUE WRITING DATA
*
TCT00600 EQU *
         TM    DEBOFLGS,DEBOFRLS        IS THIS AN EMULATION TAPE-
         BO    TCT00800                 ..BR IF YES- BYPASS FEOV
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR BACKSPACE CMD
         LA    RD,TABD140               LOAD INTERNAL ERROR CODE
         BAL   RC,TCT04800              BACKSPACE PAST TAPE MARK
         NI    DXATALL,X'FF'-DXATFC     RESET FORCE CLOSE INDIC  YM7099
         OI    DCBCIND1,DCBC1EOB        TURN ON 'VOL FULL' BIT IN DCB
*
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,WTGPREFX)          YM1272*
                                        UPDATE USER'S COPY       YM1272
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXUDCBAD+K1  POINT DEB YM1272*
                                        TO USER'S DCB FOR FEOV   YM1272
         LR    R1,RDEB                  GET DEB ADDRESS          YM1272
         LA    RF,DEBBASIC-DEBXTNP      NEGATIVE OFFSET TO DEB   YM1272
*                                       EXTENSION ADDRESS        YM1272
         SR    R1,RF                    POINT R1 TO DEB PREFIX   YM1272
         L     RF,DEBXTNP-DEBXTNP(,R1)  LOAD DEB EXTENSION ADDR  YM1272
         NI    DEBXFLG1-DEBXTN(RF),X'FF'-DEBXCDCB  DEBDCBAD      YM1272
*                                       POINTS TO THE USER'S DCB YM1272
*
         MODESET KEYADDR=DXUKEY,WORKREG=1  GET IN USER KEY       YM1272
*
         L     R1,DXUDCBAD              GET USER'S DCB AGAIN     YM1272
         FEOV  (1)                      ISSUE FEOV FOR NEXT VOL  YM1272
*
         MODESET EXTKEY=DATAMGT         RETURN TO DM KEY         YM1272
         IECRES INIT,DCBCOPY=TOWKAR,STM=(0,14,WTGPREFX)          YM1272X
                                        UPDATE THE COPIED DCB    YM1272
         L     R1,DXUDCBAD              GET PTR TO USER'S DCB    YM1272
         DEBCHK (1)                     CHECK DEB                YM1272
*
         LR    RDEB,R1                  GET VERIFIED DEB POINTER YM1272
         STCM  RDEB,B'0111',DCBDEBAD+K1  UPDATE DCB COPY'S DEBAD YM1272
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXPDCBAD+K1  POINT     YM1272*
                                        DEB TO COPIED DCB        YM1272
         LA    RF,DEBBASIC-DEBXTNP      NEGATIVE OFFSET TO DEB   YM1272
*                                       EXTENSION ADDRESS        YM1272
         SR    R1,RF                    POINT R1 TO DEB PREFIX   YM1272
         L     RF,DEBXTNP-DEBXTNP(,R1)  LOAD DEB EXTENSION ADDR  YM1272
         OI    DEBXFLG1-DEBXTN(RF),DEBXCDCB  INDICATE DEBDCBAD   YM1272
*                                       POINTS TO THE COPIED DCB YM1272
*
*        PURGE ANY OUTSTANDING I/O (THERE SHOULD BE NONE)        YM1272
*
         LA    R1,DXCCW4                BUILD PURGE PARM LIST    YM1272
         USING PURGPRM,R1               PARM LIST ADDRESSABILITY YM1272
         ST    RDEB,PURGDEB             STORE DEB TO BE PURGED   YM1272
         MVI   PURGOPT,B'10100000'      SET OPTION BITS          YM1272
         XC    PURGECB,PURGECB          CLEAR COMPLETION CODE    YM1272
         LA    R0,DEBUSRPG              SET POINTER TO IOB CHAIN YM1272
         ST    R0,PURGCHN                                        YM1272
         XC    PURGMVM,PURGMVM          CLEAR 4TH WORD OF LIST   YM1272
         PURGE (1)                      PURGE ALL IOBS, THIS DEB YM1272
*
         LA    R1,DXCCW4                ADDRESS PURGE PARM LIST  YM1272
         LA    R1,PURGECB-PURGPRM(R1)   POINT TO PURGE ECB       YM1272
         WAIT  ECB=(1)                  WAIT TILL PURGE COMPLETE YM1272
*
         DROP  R1                                                YM1272
         B     TCT00400                 BR TO PERFORM TRAILER LABEL
*                                       ..PROCESSING ON NEW VOLUME
*
*****          CONSTRUCT END-OF-FILE LABEL 1
*
TCT00800 EQU   *
         OI    DXATOUTA,DXATDATM        TM WRITTEN AFTER DATA    Y02144
         MVC   FL1LABI,AEOF             MOVE LABEL IDENTIFIER INTO BFR
         MVI   FL1NO,FILPOS1            SET FILE LABEL NUMBER TO 1
*
*****          DETERMINE 17 LEAST SIGNIFICANT NON-BLANK
*****          CHARACTERS IN DATA SET NAME IN JFCB
*
         LA    RD,JFCBDSNM              PT TO JFCB DSNAME FIELD  A41662
         LA    RET,JFCBDSNM+K27         POINT TO FIRST POSSIBLE  A41662
*                                       ..SIGNIFICANT CHARACTER  A41662
TCT01000 EQU   *                                                 A41662
         CLI   K16(RET),BLANK           IS THE 17TH SIGNIFICANT  A41662
*                                       ..CHARACTER A BLANK-     A41662
         BNE   TCT01200                 ..BR IF NOT- 'RET' PTS   A41662
*                                       ..TO FIRST SIGNIFICANT   A41662
*                                       ..CHARACTER              A41662
         BCT   RET,TCT01000             DECR STARTING ADDR AND   A41662
*                                       ..BR TO CHECK AGAIN      A41662
TCT01200 EQU   *                                                 A41662
         CLR   RET,RD                   IS DSNAME STARTING ADDR  A41662
*                                       ..WITHIN JFCB DSN FIELD- A41662
         BNL   TCT01400                 ..BR IF YES- USE 'RET'   A41662
         LR    RET,RD                   ..ELSE USE JFCBDSNM      A41662
*                                       ..AS STARTING ADDRESS    A41662
*                                                                A41662
*****          PLACE DSNAME FROM JFCB INTO TRAILER LABEL 1       A41662
*                                                                A41662
TCT01400 EQU   *                                                 A41662
         MVC   FL1ID,K0(RET)            MOVE NAME INTO LABEL     A41662
*
*****          GENERATION NUMBER AND VERSION NUMBER OF GENERATION
*
TCT01600 EQU   *
         MVI   FL1GNO,BLANK             INITLZ GENERATION NUMBER AND
         MVC   FL1GNO+K1(K5),FL1GNO     ..VERSION NUMBER OF GENERATION
         MVC   FL1GNO+K1(K44),FL1GNO    ..NUMBER TO BLANKS
         TM    JFCBIND1,JFCGDG          IS THIS A GENERATION DATA SET-
         BE    TCT01800                 ..BRANCH IF NOT
         LA    RET,K8                   SUBTRACT 8 FROM REG CONTAINING
         SLR   RD,RET                   ..FIRST BLANK IN DSNAME
         MVC   FL1GNO,K1(RD)            'RD' NOW PTS TO GENERATION NO.
         MVC   FL1VNG,K6(RD)            ..WHICH IS OF FORM GNNNNVNN
*
*****          FILE SERIAL, VOLUME SEQUENCE, AND FILE SEQUENCE NOS.
*
TCT01800 EQU   *
         MVC   FL1FILSR,UCBSQC          MOVE FILE SERIAL NO. INTO BFR
         LH    RC,JFCBVLSQ              LOAD JFCB VOLUME SEQUENCE NO.
         LTR   RC,RC                    IS IT ZERO-
         BZ    TCT02000                 ..BR IF YES- DEBVOLSQ OKAY
         BCTR  RC,0                     ..ELSE DECREMENT JFCBVLSQ BY 1,
*                                       ..SINCE DEBVOLSQ ALWAYS STARTS
*                                       ..WITH '1'
TCT02000 EQU   *
         LA    R1,DEBSUCBA+K4           POINT TO END OF DEVICE   YM1272
*                                       DEPENDENT SECTION OF DEB YM1272
         USING DEBACSMD,R1              ADDRESSABILITY           YM1272
         AH    RC,DEBVOLSQ              ADD JFCBVLSQ-1 TO THE    YM1272
*                                       DEB VOLUME SEQUENCE NBR  YM1272
         DROP  R1                                                YM1272
         CVD   RC,DXCCW5                CONVERT IT FROM BINARY TO
         UNPK  FL1VOLSQ,DXCCW5          ..UNPACKED DECIMAL, STORE IN
         OI    FL1VOLSQ+K3,ZONEOF       ..BUFFER, AND REMOVE SIGN BITS
         LH    RC,JFCBFLSQ              LOAD JFCB FILE SEQUENCE NUMBER
         CVD   RC,DXCCW5                CONVERT IT FROM BINARY TO
         UNPK  FL1FILSQ,DXCCW5          ..EBCDIC, STORE IN BUFFER,
         OI    FL1FILSQ+K3,ZONEOF       ..AND REMOVE SIGN BITS
*
*****          CREATION DATE- TO BE IN THE FORM BYYDD
*
         MVI   FL1CREDT,BLANK           SET 1ST BYTE OF DATE TO BLANK
         SR    RC,RC                    CLEAR WORK REGISTER AND INSERT
         IC    RC,JFCBCRDT              ..YEAR OF CREATION FROM JFCB
         CVD   RC,DXCCW5                CONVERT YEAR FROM BINARY TO
         UNPK  FL1CREDT+K1(K2),DXCCW5   ..EBCDIC, STORE IN BUFFER,
         OI    FL1CREDT+K2,ZONEOF       ..AND REMOVE SIGN BITS
         IC    RC,JFCBCRDT+K1           LOAD 1ST CHARACTER OF DAY OF
         SLA   RC,K8                    ..CREATION AND POSITION IT
         IC    RC,JFCBCRDT+K2           LOAD SECOND CHARACTER
         CVD   RC,DXCCW5                CONVERT DAY FROM BINARY TO
         UNPK  FL1CREDT+K3(K3),DXCCW5   ..EBCDIC, STORE IN BUFFER,
         OI    FL1CREDT+K5,ZONEOF       ..AND REMOVE SIGN BITS
*
*****          EXPIRATION DATE- TO BE OF FORM BYYDD
*
         MVI   FL1EXPDT,BLANK           SET 1ST BYTE OF DATE TO BLANK
         SR    RC,RC                    CLEAR WORK REGISTER AND INSERT
         IC    RC,JFCBXPDT              ..YEAR OF EXPIRATION FROM JFCB
         CVD   RC,DXCCW5                CONVERT YEAR FROM BINARY TO
         UNPK  FL1EXPDT+K1(K2),DXCCW5   ..EBCDIC, STORE IN BUFFER,
         OI    FL1EXPDT+K2,ZONEOF       ..AND REMOVE SIGN BITS
         LH    RC,JFCBXPDT+K1           LD DAY OF EXPIRATION FROM JFCB
         CVD   RC,DXCCW5                CONVERT DAY FROM BINARY TO
         UNPK  FL1EXPDT+K3(K3),DXCCW5   ..EBCDIC, STORE IN BUFFER,
         OI    FL1EXPDT+K5,ZONEOF       ..AND REMOVE SIGN BITS
*
*****          BLOCK COUNT
*
         L     RC,DCBBLKCT              LOAD BLOCK COUNT FROM DCB
         CVD   RC,DXCCW5                CONVERT BLK CT FROM BINARY TO
         UNPK  FL1BLKCT,DXCCW5          ..EBCDIC, STORE IN BUFFER,
         OI    FL1BLKCT+K5,ZONEOF       ..AND REMOVE SIGN BITS
         TM    DCBMACRF,DCBMEXCP        IS THE ACCESS METHOD EXCP-
         BNO   TCT02200                 ..BR IF NOT- BLK CT VALID
         TM    DCBMACRF+K1,DCBMDEV      DOES TAPE DEPEND SECTION EXIST-
         BNZ   TCT02200                 ..BR IF YES- BLK CT VALID
         MVI   FL1BLKCT,CHAR0           SET LABEL BLOCK COUNT TO 0,
         MVC   FL1BLKCT+K1(K5),FL1BLKCT ..INDICATING THAT THERE WAS NO
*                                       ..DCB BLOCK COUNT
*
*****          DATA SET SECURITY
*
TCT02200 EQU   *
         MVI   FL1FSEC,FL1NOSEC         INDICATE NO DATA SET SECURITY
         TM    JFCBIND2,JFCBSCTY        DOES THE JFCB SPECIFY SECURITY-
         BNO   TCT02400                 ..BR IF NOT- SECURITY COMPLETE
         MVI   FL1FSEC,FL1SECTY         INDICATE READ/WRITE SECURITY
         TM    JFCBIND2,JFCBRWPW        DOES JFCB SPECIFY WRITE-ONLY
*                                       ..SECURITY-
         BNO   TCT02400                 ..BR IF NOT- SECURITY COMPLETE
         MVI   FL1FSEC,FL1WRSEC         INDICATE WRITE-ONLY SECURITY
*
*****          SYSTEM CODE AND RESERVED FIELDS
*
TCT02400 EQU   *
         MVC   FL1SYSCD,VSSYSC          INSERT SYSTEM CODE       XM1201
*                                       INTO BUFFER              XM1201
         MVI   FL1RES,BLANK             PAD THE REST OF THE BUFFER
         MVC   FL1RES1,FL1RES           ..BLANKS (7 CHARACTERS)
*
*****          SET UP CHANNEL PROGRAM TO WRITE LABEL
*
         LA    RC,DXLBL                 LOAD ADDRESS OF BUFFER AND
         ST    RC,DXCCW1                ..STORE IT IN WRITE CCW
         MVI   DXCCW1,CCWWRTAP          INITLZ CCW FOR WRITE COMMAND
         MVC   DXCCW1+K4(K4),AWTMCCWB+K4  SET LNG EQ 80, SILI FLAG ON
*
*****          TRANSLATE ANSI LABEL DATA BEFORE WRITING LABEL
*
         TM    SRTESTAB,UCBBSTR         WERE ANSI LABELS SPECIFIED-
         BNO   TCT02800                 ..BR IF NOT- BYPASS TRANSLATION
         TM    JFCBIND2,JFCBSCTY        DOES JFCB SPECIFY SECURITY-
         BO    TCT02600                 ..BR IF YES TO OBTAIN SYS CODE
         MVI   FL1FSEC,BLANK            ..ELSE SET ACCESSIBILITY
*                                       ..INDICATOR TO BLANK
TCT02600 EQU   *
         MVC   FL1SYSCD(K5),ASYSCD      MOVE NEW SYSTEM CODE INTO BFR
         XC    FL1SYSCD+K5(L'FL1SYSCD-K5),FL1SYSCD+K5  ZERO REST YM1431X
                                        OF SYSTEM CODE FIELD     YM1431
         XLATE DXLBL,K80,TO=A           TRANSLATE LABEL DATA     YM1431
*                                                                YM1431
TCT02800 EQU   *
*
*****          WRITE END-OF-FILE LABEL 1
*
TCT03000 EQU   *
         LA    RD,TABD123               LOAD INTERNAL ERROR CODE
         BAL   RC,TCT04800              BR TO WRITE TRAILER LABEL 1
         OI    DXATOUTA,DXATTRL1        TRL1 LABEL WRITTEN       Y02144
*
*****          PREPARE END-OF-FILE LABEL 2
*
TCT03200 EQU   *
         MVI   FL1NO,CHAR2              SET FILE LABEL IDENTIFIER TO 2
         MVI   FL2TRTCH,BLANK           SET PART OF LABEL TO
         MVC   FL2TRTCH+K1(K45),FL2TRTCH  BLANKS - 47 CHARACTERS
*
*****          BLOCKING ATTRIBUTE
*
         SR    RC,RC                    CLEAR WORK REGISTER AND INSERT
         IC    RC,JFCRECFM              ..RECORD FORMAT FROM JFCB
*                                       ..(BITS 0 AND 1 CONTAIN THE
*                                       ..BLOCKING ATTRIBUTE)
         SRL   RC,K3                    POSITION BLK ATTRIBUTE AND SAVE
         STC   RC,DXLBL+K38             ..PREPARATORY TO TRANSLATION
         NI    DXLBL+K38,K3             ZERO ALL BUT BITS 0 AND 1
         TR    DXLBL+K38(K1),ABLKA      TRANSLATE TO S,B,R, OR BLANK
*
*****          RECORD FORMAT
*
         TM    JFCRECFM,JFCVARD         DOES RECORD FORMAT EQUAL 'D'-
         BNO   TCT03400                 ..BR IF NOT TO FIND RCD FORMAT
         MVI   FL2RECFM,DRECFM          SET RECFM TO 'D'
         B     TCT03600                 BR TO GET BLOCKSIZE
TCT03400 EQU   *
         SRL   RC,K3                    BITS 0,1 CONTAIN RECORD FORMAT
         STC   RC,FL2RECFM              STORE RCD FORMAT IN BUFFER
         TR    FL2RECFM,ARECFM          TRANSLATE TO V, F, OR U
*
*****          BLOCK SIZE AND LOGICAL RECORD LENGTH
*
TCT03600 EQU   *
         LH    RC,JFCBLKSI              LOAD BLOCK LENGTH FROM JFCB
         CVD   RC,DXCCW5                CONVERT BLOCK LNG FROM BINARY
         UNPK  FL2BLKL,DXCCW5           ..TO EBCDIC, STORE IN BUFFER,
         OI    FL2BLKL+K4,ZONEOF        ..AND REMOVE SIGN BITS
         LH    RC,JFCLRECL              LOAD LOGICAL RCD LNG FROM JFCB-
         CH    RC,AGRTR32K              IS LRECL GREATER THAN 32K-
         BE    TCT03800                 ..BARNCH IF YES- UNACCEPTABLE
         CVD   RC,DXCCW5                CONVERT LOGICAL RECORD LENGTH
         UNPK  FL2LRECL,DXCCW5          ..FROM BINARY TO EBCDIC, STORE
         OI    FL2LRECL+K4,ZONEOF       ..IN BFR, AND REMOVE SIGN BITS
         B     TCT04000                 BR TO CONTINUE MERGE
TCT03800 EQU   *
         MVI   FL2LRECL,X'F9'           SET LRECL TO 9'S, INDICATING
         MVC   FL2LRECL+K1(K4),FL2LRECL ..THAT IS IS GREATER THAN 32K
*
*****          TAPE RECORDING DENSITY
*
TCT04000 EQU   *
         MVI   FL2DEN,CHAR4             SET DENSITY TO 6250 BPI   99223
         TM    JFCDEN,DEN6250           IS DENSITY 6250 BPI       99223
         BO    TCT04200                 ..BR IF YES- DENSITY COMP 99223
         MVI   FL2DEN,CHAR3             SET DENSITY TO 1600 BPI
         TM    JFCDEN,DEN1600           IS DENSITY 1600 BPI-
         BO    TCT04200                 ..BR IF YES- DENSITY COMPLETE
         MVI   FL2DEN,CHAR2             SET DENSITY TO 'HIGH' (800 BPI)
         TM    JFCDEN,DCBDEN08          IS DENSITY 'HIGH'-
         BO    TCT04200                 ..BR IF YES- DENSITY COMPLETE
         MVI   FL2DEN,CHAR1             SET DENSITY TO 'MEDIUM' (556
*                                       ..BPI)
         TM    JFCDEN,DCBDEN05          IS DENSITY 'MEDIUM'-
         BO    TCT04200                 ..BR IF YES- DENSITY COMPLETE
         MVI   FL2DEN,CHAR0             SET DENSITY TO 'LOW' (200 BPI)
*
*****          SET UP TAPE DRIVE ID FOR 3400 SERIES TAPE IN
*****          THE STANDARD LABEL
*
TCT04200 EQU   *
         TM    UCBSTAB,UCBBSTR          ANSI LABELS               99223
         BO    TCT04300                 YES - BRANCH              99223
         CLI   UCBTBYT4,UCB3400         TEST FOR 3400 DRIVE      YM1491
         BNE   TCT04300                 NO - BRANCH              YM1491
         L     RC,UCBEXTPT              GET COMMON EXTENSION PTR Y02146
         CLI   UCBSNSCT-UCBCMEXT(RC),K24  TEST IF A 3420         Y02146
         BNE   TCT04300                 NO - BRANCH               99223
         USING UCBMT,RC                 SET UP ADDRESSABILITY     99223
         L     RC,UCBXTN                GET EXTENSION ADDRESS     99223
         LH    RC,UCBCTD                GET ID OF CREATING DRIVE  99223
         DROP  RC                                                 99223
         CVD   RC,DXCCW5                CONVERT ID                99223
         UNPK  FL2ID,DXCCW5             ID IN EBCDIC              99223
         OI    FL2ID+K4,ZONEOF          REMOVE SIGN BITS          99223
***********************************************************************
* GET THE MODEL NO. CODE FROM THE SENSE INFORMATION AND
* PLACE THE MODEL NO. CHARACTER INTO THE SERIAL NO.
         LA    RC,DXCCW5                GET AREA ADDRESS       @ZA26229
         ST    RC,DXCCW1                PUT AREA ADR IN SNS CCW@ZA02210
         MVC   DXCCW1+K4(K4),CCW2GK07   SILI FLAG,7 SNS BYTES  @ZA02210
         MVI   DXCCW1,CCWSENSE          SNS CMD CODE INTO CCW  @ZA02210
         BAL   RC,TCT04800              GO ISSUE SENSE COMMAND @ZA02210
         IC    RC,DXCCW5+K6             GET SIXTH SENSE BYTE   @ZA26229
         SLL   RC,K28                   CLEAR REGISTER EXCEPT  @ZA02210
         SRL   RC,K28                   FOR HALF BYTE MODEL NO @ZA02210
         IC    RC,CHARTBL(RC)           GET CHAR FROM TABLE    @ZA13576
         STC   RC,FL2ID                 MODEL CHAR INTO SER NO.@ZA02210
*
*****        RESET CHANNEL PROGRAM TO WRITE LABEL
*
         LA    RC,DXLBL                 GET AREA ADDRESS       @ZA02210
         ST    RC,DXCCW1                PUT AREA ADR IN WRT CCW@ZA02210
         MVI   DXCCW1,CCWWRTAP          INITLZ CCW FOR WRT CMD @ZA02210
         MVC   DXCCW1+K4(K4),AWTMCCWB+K4  LNG EQ 80, SILI FLAG @ZA02210
***********************************************************************
*
TCT04300 EQU   *                                                  99223
         MVI   FL2FILP,CHAR0            SET FILE POSITION TO ZERO
         CLC   SRTEVOLI,JFCBVOLS        IS THIS THE FIRST VOULME-
         BE    TCT04400                 ..BR IF YES- FILE POS COMPLETE
         MVI   FL2FILP,CHAR1            SET FILE POSITION TO 1
*
*****          COMPLETE TRAILER LABEL 2 IN NEXT MODULE
*
TCT04400 EQU   *
         LA    RF,MOD2G2M               PT TO ID/TTR OF NEXT MOD
         SR    RET,RET                  BR TABLE OFFSET FOR THAT MODULE
         EJECT
***********************************************************************
*              EXITS                                                  *
***********************************************************************
*
TCT04600 EQU   *
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*                                  INVOKE IECRES MACRO TO 'XCTL' Y02080
         SPACE 2
***********************************************************************
*              SUBROUTINES                                            *
***********************************************************************
*
*****          CLOSED SUBROUTINE TO PERFORM I/O OPERATIONS
*
*        ENTRY TO THE SUBROUTINE IS VIA A 'BAL RC,TCT04800'
*
TCT04800 EQU   *
         EXCP  DXIOB                    INITIATE I/O OPERATION
         IECRES WAIT                    INVOKE IECRES MACRO TO 'WAIT'
         TM    IOBSTAT0,CSWUNITX        TEST FOR TAPE INDICATE  SA53865
         BZ    TCT04950                 BRANCH IF NOT           SA53865
         MVI   DXECB,ECBCOD7F           INDICATE SUCCESSFUL     SA53865
*                                       COMPLETION FOR FEOV     SA53865
         BR    RC                       RETURN TO CALLER        SA53865
TCT04950 EQU   *                                                SA53865
         TM    DXECB,ECBNOERR           TEST FOR SUCCESSFUL COMPLETION-
         BCR   1,RC                     ..BR IF YES- RETURN TO CALLER
*                                       ..ELSE DROP THRU TO ERR RTN
         SPACE 2
***********************************************************************
*              ERROR PROCESSING                                       *
***********************************************************************
*
TCT05000 EQU   *
         DMABCOND (RD),ABEND2G          EXIT TO PROB DETERMINATION RTN
         EJECT
***********************************************************************
*              CONSTANTS                                              *
***********************************************************************
*
AWTMCCWB CCW   X'1F',0,X'20',80         WRITE TAPE MARK;COUNT FOR WRITE
AEOF     DC    C'EOF'                   END-OF-FILE LABEL IDENTIFIER
CHARTBL  DC    C'0003570000046800'      MOD. CODE TO CHAR TABLE@ZA19724
CCW2GK07 DC    X'20000007'              CCW LENGTH             @ZA02210
ARECFM   DC    C'TVFU'                  RECFM TRANSLATE TABLE (NO 0 VAL
*                                       VARIABLE,FIXED,UNKNOWN RECORD F
ABLKA    DC    C' SBR'                  BLK ATTRB TRANSLATE TABLE
ASYSCD   DC    C'OS360'                 ANSI SYSTEM CODE
VSSYSC   DC    C'IBM OS/VS 370'         VS SYSTEM CODE           XM1201
         DS    0H                       ALIGN TO HALF WORD BNDRY XM1201
AGRTR32K DC    X'8000'                  VALUE IN LBL WHEN LRECL GT 32K
         SPACE 2
***********************************************************************
*              XCTL TABLE                                             *
***********************************************************************
*
XCTLTB2G XCTLTABL ID=(ABEND2G,0P,MOD2G2M,2M),SVC=023,            Y02080X
               BRT=YES,LENGTH=                                   Y02080
         SPACE 2
         IECDSECS DCB,CVT,PREFX,                                 Y02082C
               IEZDEB,                                           YM1272C
               UCB,                                                    C
               MAIN,                                                   C
               WTG,                                                    C
               EXPAND=YES
PURGPRM  DSECT                          PURGE PARAMETER LIST     YM1272
PURGDEB  DS    0F                       DEB TO BE PURGED         YM1272
PURGOPT  DS    C                        OPTION BITS              YM1272
         DS    AL3                      DEB POINTER              YM1272
PURGECB  DS    0F                       USE THIS FIELD FOR ECB   YM1272
         DS    C                        COMPLETION CODE          YM1272
PURGTCB  DS    AL3                      TCB POINTER (0=CURRENT)  YM1272
PURGCHN  DS    AL4                      CHAIN OF IOBS            YM1272
PURGMVM  DS    F                        4TH WORD FOR MVM         YM1272
         EJECT                                                   YM1272
         IECEQU IEZDEB=YES              EQUATES                  YM1272
         END
