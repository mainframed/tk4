         TITLE 'IFG0551D  WTP MODULE'
IFG0551D CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*        VS2 RELEASE 02 DELETIONS                                     *
*        VS2 RELEASE 037 DELETIONS/ADDITIONS                          *
*39920121-40321                                               @ZA17054*
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0551D (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = WTP MODULE                                       *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE WILL WRITE A MESSAGE TO THE SYSOUT DATA SET      *
*        AND THEN EITHER ABEND USING THE CALLING MODULE'S ABEND       *
*        CODE OR RETURN TO THE MODULE NAME INDICATED.                 *
*        THE MESSAGE WILL CONTAIN THE ABEND CODE (IF PRESENT),        *
*        RETURN CODE (IF PRESENT), MESSAGE ID, ALL PASSED BY THE      *
*        CALLING MODULE. THIS MODULE WILL PLACE INTO THE MESSAGE      *
*        THE JOBNAME, STEPNAME, DDNAME, UNIT NAME (IF PRESENT),       *
*        VOLUME SERIAL (IF MEANINGFUL), AND DATA SET NAME (IF         *
*        TAPE OR DIRECT ACCESS). ANOTHER LINE OF THE MESSAGE WILL     *
*        CONTAIN A MESSAGE PASSED BY THE CALLING MODULE.              *
*                                                                     *
*        IF REGISTER 7 IS ZERO ON ENTRY, THIS MODULE WILL SET UP      *
*        MESSAGE 'IEC020I NON-ACCEPTABLE ERROR' ACCORDING TO THE      *
*        INPUT REQUIREMENTS OF THIS MODULE, CAUSING AN 001 ABEND      *
*        TO BE ISSUED AFTER THE MESSAGE IS WRITTEN.                   *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO EOV WORKAREA                                *
         EJECT
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0551D                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = TRANSFERRED CONTROL BY XCTL OR IECRES-LOAD MACRO       *
         EJECT
* INPUT =                                                             *
*        ENTERED IN PROTECT KEY 5                                     *
*        REGISTER 2 POINTS TO THE USER'S DCB                          *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*        REGISTER 7 INDICATES ONE OF TWO INPUT CONDITIONS -           *
*                                                                     *
*        REGISTER 7 NON-ZERO -                                        *
*        REGISTER 1 POINTS TO A MESSAGE AREA OF 12 BYTES IN THE       *
*        FOLLOWING FORMAT -                                           *
*              BYTE 0-1 - ABEND CODE                                  *
*              BYTE 2-3 - ZERO                                        *
*              BYTES 4-7 - ADDRESS OF 8 BYTE MODULE ID TO BE          *
*              RETURNED CONTROL AFTER WRITING THE MESSAGE             *
*              BYTES 8-B - ZERO                                       *
*        REGISTER 4 POINTS TO AN EOV WORKAREA CONTAINING A MESSAGE    *
*        AT OFFSET 8 INTO THE WORKAREA OF THE FOLLOWING FORMAT -      *
*              BYTES 0-7 - UNUSED                                     *
*              BYTES 8-9 - LENGTH OF MESSAGE INCLUDING THE 4 BYTES    *
*              AT OFFSET 8-B                                          *
*              BYTE A - UNUSED                                        *
*              BYTE B - RETURN CODE ASSOCIATED WITH ABEND CODE        *
*              IN THE PARAMETER LIST TO WHICH REGISTER 1 POINTS       *
*              BYTES C-XX - MESSAGE                                   *
*                                                                     *
*        REGISTER 7 ZERO -                                            *
*        REGISTER 4 POINTS TO EOV WORKAREA                            *
*        MESSAGE 'IEC020I NON-ACCEPTABLE ERROR' WILL BE MOVED         *
*        INTO OFFSET 8 OFF REGISTER 4 SIMULATING THE INPUT FORMAT     *
*        EXPLAINED ABOVE.                                             *
*        REGISTER 1 WILL BE POINTED TO DXREG1 IN THE EOV WORKAREA     *
*        AND THIS LOCATION WILL INDICATE AN 001 ABEND SIMULATING      *
*        THE INPUT FORMAT EXPLAINED ABOVE.                            *
*                                                                     *
* OUTPUT =                                                            *
*        SYSTEM MESSAGE AS PASSED TO THIS MODULE.                     *
*        SYSTEM ABEND AS PASSED TO THIS MODULE, OR CONTROL            *
*        WILL BE RETURNED TO THE MODULE INDICATED BY THE CALLING      *
*        MODULE. IF CONTROL IS RETURNED, REGISTERS 2-13 WILL BE       *
*        AS ON ENTRY.                                                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        SYSTEM ABEND AS INDICATED.                                   *
*        CONTROL TRANSFERRED AS INDICATED.                            *
*                                                                     *
* EXIT-ERROR =                                                        *
*        NONE.                                                        *
         EJECT
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        NONE.                                                        *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*        SVRB EXTENDED SAVE AREA TO SAVE REGISTERS.                   *
*        108 (DECIMAL) BYTE WORKAREA IN WHICH MESSAGE IS CONSTRUCTED. *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        TCB                                                          *
*        SVRB                                                         *
*        TIOT                                                         *
*        DCB                                                          *
*        DEB                                                          *
*        UCB                                                          *
*                                                                     *
* TABLES =                                                            *
*        NONE                                                         *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES-GET                                                   *
*        IECRES-FREE                                                  *
*        IECRES-LOAD                                                  *
*        IECRES-LOCJFCB                                               *
*        DEBCHK                                                       *
*        WTO                                                          *
*        ABEND                                                        *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD          *
*                                                                     *
***********************************************************************
         EJECT
         BALR  RBASE,0                  ESTABLISH BASE
         USING *,RBASE
         USING FORCORE,RCORE
         USING WTG,RWTG                                          Y02080
         USING UCBOB,RUCB
         USING CVT,RET
         USING TIOT,RTIOT
         USING IHADCB,RDCB
DASH     EQU   C'-'                     DASH CONSTANT
         LTR   R7,R7                    TEST FOR ENTRY TO BUILD SA53086
*                                       MESSAGE                 SA53086
         BNZ   EIN08400                 NO, BRANCH TO NORMAL    SA53086
*                                       ENTRY                   SA53086
         LA    R1,DXREG1                RE-ESTABLISH FOR MSG    SA53086
         XC    K0(K12,R1),K0(R1)        CLEAR AREA              SA53086
         MVI   K1(R1),K16               ABEND CODE              SA53086
         LA    R7,MSG12F                GET ADDR FOR NON-       SA53086
*                                       ACCEPTABLE ERROR MSG    SA53086
         LH    RF,K0(R7)                GET LENGTH OF MESSAGE   SA53086
         BCTR  RF,K0                    DECREMENT BY ONE        SA53086
         EX    RF,EIN08475              MOVE MSG TO WKAREA      SA53086
EIN08400 EQU   *                        COMMON ENTRY
         MVC   K2(K1,R1),MCSFLAGS+K1    PUT ID IN MSG            M0067
         XC    MCSFLAGS(K2),MCSFLAGS    ZERO MCSFLAGS            M0067
         LA    R7,MSGLSTSZ              GET MSG LENGTH ADDRESS   M0067
         ST    R7,K8(R1)                STORE MSG LENGTH ADDRESS M0067
         L     RF,CVTPTR                PTR TO CVT
         L     RF,CVTTCBP-CVT(RF)       PTR TO TCB ADDRESSES
         L     RF,K4(RF)                PTR TO CURRENT TCB
         L     RET,K12(RF)              PTR TO TIOT
         L     RF,K0(RF)                PTR TO SVRB
         MODESET EXTKEY=SUPR            ASSUME KEY ZERO          Y02082
         STM   RDCB,RD,K96(RF)          SAVE REGS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LR    RTIOT,RET                SAVE TIOT PTR
         LR    R8,RF                    SAVE SVRB PTR
         LR    RC,R1                    SAVE PARM LIST ADDR
         EJECT
         LA    R0,CORE                  LOAD HEX 6C IN REG 0
         IECRES GET,LV=(0),PREFIX=YES,STM=(2,14,DXXPREFX)        Y02080
*                                      WORKAREA TO BUILD MESSAGE Y02080
*
*        MESSAGE AREA POINTED TO BY REGISTER - R7
*
         LR    R7,R1                    ESTABLISH BASE
         XC    0(K4,R7),0(R7)           ZERO CONTROL FIELD OF MSG AREA
         MVI   K2(R7),X80               SET MCSFLAGS
         LA    RWTG,K4(R7)              INITIALIZE LOCATION POINTER
         L     R1,K8(RC)                GET ADDR OF 2ND LINE
         MVC   K0(K8,RWTG),K4(R1)       PUT ID IN MSG
         LA    RWTG,K8(RWTG)            UPDATE LOCATION PTR
         EJECT
         NC    K0(K2,RC),K0(RC)         ABEND CODE
         BZ    EIN08700                 NO
         UNPK  K0(K3,RWTG),K0(K2,RC)    PUT ABEND CODE IN MESSAGE
         OI    K2(RWTG),ZONEOF          CONVERT SIGN
         TR    K0(K3,RWTG),ABTBLE-K240  CONVERT TO PRINT
         MVI   K3(RWTG),DASH            MOVE IN A CHARSCTER DASH
         LA    RWTG,K4(RWTG)            UPDATE LOCATION PTR
         CLI   K2(RC),K0                RETURN CODE
         BE    EIN08700                 NO
         MVC   K0(K1,RWTG),K2(RC)       MOVE RET CODE TO MSG
         OI    K0(RWTG),ZONEOF          CONVERT SIGN
         MVI   K1(RWTG),COMMA           MOVE COMMA TO MSG
         LA    RWTG,K2(RWTG)            UPDATE LOCATION PTR
EIN08700 EQU   *                        JOBNAME/STEPNAME TO MSG
         MVC   K0(K8,RWTG),TIOCNJOB     MOVE JOB NAME TO MSG
         LA    RWTG,K7(RWTG)            UPDATE LOCATION PTR
         BAL   R1,EIN10400              GO REMOVE BLANKS
         MVC   K0(K8,RWTG),TIOCSTEP     MOVE STEP NAME TO MSG
         LA    RWTG,K7(RWTG)            UPDATE LOCATION PTR
         BAL   R1,EIN10400              GO REMOVE BLANKS
         MODESET KEYADDR=DXUKEY,WORKREG=15                       Y02082
         TM    DCBOFLGS,DCBOPEN         IS DCB OPEN ***
         BZ    EIN08800                 NO
         AH    RTIOT,DCBTIOT            POINT TO DD ENTRY IN TIOT
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         MVC   K0(K8,RWTG),K4(RTIOT)    MOVE DDNAME TO MSG
         LA    RWTG,K7(RWTG)            UPDATE LOCATION PTR
         BAL   R1,EIN10400              GO REMOVE BLANKS
         B     EIN08900                 BR TO CHECK FOR ISAM
         EJECT
EIN08800 EQU   *                        DDNAME FROM DCB
         LR    RUCB,R2                  SAVE REG TWO             Y02082
         LM    R1,R2,DCBDDNAM           GET DDNAME IN REGS       Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         STM   R1,R2,K0(RWTG)           DDNAME TO MESSAGE        Y02082
         LR    R2,RUCB                  RESTORE REG TWO          Y02082
         LA    RWTG,K7(RWTG)            UPDATE LOCATION PTR
         BAL   R1,EIN10400              GO REMOVE BLANKS
         B     EIN09400                 BR TO GET MSG INFO
*
***********************************************************************
*
*        FOR BISAM, BDAM, BSAM-BPAM NEED TO GET THE I/O ERROR   SA47319
*        RELATED TO THE EXTENT IN THE DEB TO GET PROPER UCB FOR SA47319
*        MULTI-VOLUME BISAM AND BDAM DATA SETS AND CONCATENATED SA47319
*        PARTITIONED DATA SETS.                                 SA47319
*
***********************************************************************
*
EIN08900 EQU   *                        VERIFY DEB
         DEBCHK (RDCB)                  LOAD DEB ADDRESS         YM0844
         LR    RUCB,R1                  GET DEB ADDRESS          YM0844
         MODESET KEYADDR=DXUKEY,WORKREG=15                       Y02082
         STCM  RUCB,B'0111',DCBDEBAD+K1 REFRESH DCBCOPY'S DEBAD  Y02082
         TM    DCBDSORG,DCBORGIS        ISAM
         BZ    EIN08920                 NO, BR TO TEST FOR BDAM SA47319
*
         L     RUCB,DCBWKPT2            TO BISAM WORKAREA       SA47319
         L     RUCB,K48(RUCB)           DCWFIOBE QUEUE POINTER  SA47319
         LA    RUCB,K0(RUCB)            CLEAR HIGH BYTE OF IOB  SA47319
*                                       ADDRESS                 SA47319
         LTR   RUCB,RUCB                QUEUE COULD BE EMPTY    SA47319
         BNZ   EIN08945                 IF IT IS NOT THEN       SA47319
*                                       BRANCH TO CONTINUE      SA47319
         L     RUCB,DCBDEBAD            PTR TO DEB              SA47319
         L     RUCB,K48(RUCB)           GET SEEK ADDRESS        SA47319
         B     EIN09100                 BR TO TAKE FIRST UCB    SA47319
         EJECT
EIN08920 EQU   *                        GET IOB IF BDAM         SA47319
         TM    DCBDSORG,DCBORGDA        IS DSORG DA             SA47319
         BNO   EIN08940                 NO, BR TO CHECK FOR PO  SA47319
         L     RUCB,K24(RD)             DECB POINTER IN USER    SA47319
*                                       SAVE AREA               SA47319
         L     RUCB,K16(RUCB)           PTR TO IOB IN ERROR     SA47319
         LA    RUCB,0(,RUCB)            CLEAR HIGH ORDER BYTE   SA61144
         LTR   RUCB,RUCB                IS IOB ADDR ZERO (FOR   SA61144
*                                       AN INVALID REQUEST)     SA61144
         BNZ   EIN08945                 BR IF NO TO GET UCB PTR SA61144
         L     RUCB,DCBDEBAD            RELOAD DEB ADDRESS      SA61144
         B     EIN08950                 BR TO TAKE FIRST UCB    SA61144
EIN08940 EQU   *                        GET IOB IF BPAM         SA47319
         TM    DCBDSORG,DCBORGPO        IS DSORG PARTIONED      SA47319
         BZ    EIN08950                 NO, BR TO TAKE FIRST    SA47319
*                                       UCB                     SA47319
         TM    DCBCIND2,DCBC2QSM        IS IT BSAM,BPAM         SA47319
         BO    EIN08950                 NO, BR TO TAKE FIRST    SA47319
*                                       UCB                     SA47319
         L     RUCB,K32(RD)             DECB POINTER IN USER    SA47319
*                                       SAVE AREA               SA47319
         L     RUCB,K16(RUCB)           GET IOB IN ERROR        SA47319
EIN08945 EQU   *                        EXTENT NUMBER IN IOB    SA47319
         XR    R1,R1                    CLEAR FOR INDEX INTO    SA47319
*                                       DEB                     SA47319
         TM    DCBCIND2,DCBCNCHS        CHAINED SCHED ACTIVE   @ZA17054
         BO    EIN08947                 YES, BRANCH            @ZA17054
         IC    R1,K32(RUCB)             EXTENT NUMBER IN THE    SA47319
*                                       IOB SEEK FIELD          SA47319
         B     EIN08948
EIN08947 IC    R1,K24(RUCB)             EXTENT NUMBER IN THE   @ZA17054
*                                       ICB SEEK FIELD         @ZA17054
EIN08948 SLL   R1,K4                    MULTIPLY BY  LENGTH     SA47319
*                                       OF ENTRY                SA47319
         L     RUCB,DCBDEBAD            PTR TO DEB              SA47319
         L     RUCB,K32(R1,RUCB)        UCB ADDRESS             SA47319
         B     EIN09100                                         SA47319
EIN08950 EQU   *                                                SA47319
         L     RUCB,K32(RUCB)           PTR TO UCB              SA47319
EIN09100 EQU   *                        UNIT NAME TO MSG FROM UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         MVC   K0(K3,RWTG),UCBNAME      MOVE UNIT NAME TO MSG
         MVI   K3(RWTG),COMMA           MOVE COMMA TO MSG
         LA    RWTG,K4(RWTG)            UPDATE LOCATION PTR
         EJECT
         TM    UCBTBYT3,UCB3TAPE+UCB3DACC TAPE OR DA
         BZ    EIN09400                 NO
         MVC   K0(K6,RWTG),UCBVOLI      MOVE VOLSER TO MSG
         LA    RWTG,K5(RWTG)            UPDATE LOCATION PTR
         BAL   R1,EIN10400              GO REMOVE BLANKS
         L     RF,DXTIOTAD              POINTER TO TIOT ENTRY    Y02080
         USING TIOENTRY,RF              RF POINTS TO ENTRY       Y02080
         CLC   TIOEJFCB,ZEROS           CHECK FOR VALID POINTER  Y02080
         BZ    EIN09400                 BRANCH IF INVALID        Y02080
         LA    RET,TIOEJFCB             POINT TO JFCB POINTER    Y02080
         IECRES LOCJFCB,(RET)           LOCATE JFCB              Y02080
         MVC   DXJBF,K0(RET)            MOVE JFCB TO BUFFER      Y02080
         DROP  RF                                                Y02080
         LR    RPAR,RWTG                LOAD PTR TO MSG AREA     Y02080
         MVC   K0(K44,RWTG),JFCBDSNM    MOVE DSN TO MSG
         LA    RWTG,K43(RWTG)           UPDATE LOCATION PTR
         BAL   R1,EIN10400              GO REMOVE BLANKS
EIN09400 EQU   *                        SETUP FOR WTO
         BCTR  RWTG,0                   DUNK PTR OF MSG AREA BY ONE
         MVC   K0(K4,RWTG),DESRTCOD     SET DESC AND ROUT CODES
         LA    R0,K0(R7)                GET ADDR OF BEGINNING OF MSG
         SR    RWTG,R0                  GET LENGTH OF MSG
         CH    RWTG,CON72               LONGER THAN 72 BYTES
         BH    EIN09700                 YES
         MVI   DXCCW,K0                 NO CONTINUATION
EIN09500 EQU   *                        LENGTH IN PARM LIST
         STH   RWTG,K0(R7)              STORE LENGTH
         LA    R1,K0(R7)                GET ADDR OF MSG
         WTO   MF=(E,(1))
         CLI   DXCCW,K1                 TEST FOR CONTINUATION
         BNZ   EIN09800                 YES
         MVC   K12(K44,R7),JFCBDSNM     MOVE DSN TO MSG
         LA    RWTG,K44+K12-K1(R7)      UPDATE LOCATION PTR OF MSG AREA
         BAL   R1,EIN10400              GO REMOVE BLANKS
         B     EIN09400                 BR TO FIND SIZE OF MSG AREA
EIN09700 EQU   *                        MSG TOO LONG-DSN ON 2ND LINE
         LR    RWTG,RPAR                BACK UP TO END OF PRECEDING FLD
         MVC   K0(K4,RWTG),DESRTCOD     SET DESC AND ROUT CODES
         LA    R0,K0(R7)                BEGINNING OF MSG
         SR    RWTG,R0                  CALCULATE LENGTH
         MVI   DXCCW,K1                 INDICATE CONTINUATION
         B     EIN09500                 BR,GET MSG PTR /ISSUE SVC WTO
         EJECT
EIN09800 EQU   *                        FREE WORKAREA
         LR    R1,R7                    ADDR OF WKAREA
         IECRES FREE,A=(1),PREFIX=YES,STM=(0,14,DXXPREFX)        Y02080
*                                       FREE WORK AREA           Y02080
         L     RWTG,K8(RC)              POINT TO 2ND LINE
         LR    RPAR,RWTG                SET PTR OF MSG AREA
         MVI   K2(RPAR),X80             SET MCSFLAGS
         AH    RPAR,K0(RPAR)            POINT TO END OF MSG
         MVC   K0(K4,RPAR),DESRTCOD     SET DESC AND ROUT CODES
         WTO   MF=(E,(RWTG))
         EJECT
EIN10000 EQU   *                        XCTL IF ABEND NOT REQUESTED
         NC    K4(K4,RC),K4(RC)         ABEND REQUESTED
         BZ    EIN10200                 YES
         LR    R1,RC                    LOAD REG 12 INTO REG 1
         LR    RF,R8                    SVRB PTR
         LM    RDCB,RD,K96(RF)          RESTORE REGS
         L     RET,K4(R1)               PT TO CALLING RTN ID
         SR    RDCB,RDCB                SET RETURN INDICATOR
         IECRES LOAD,MODNM=(RET),PREFIX=DXXPREFX,BRANCH=DIRECT   Y02080X
                                        RETURN TO CALLER         Y02080
EIN10200 EQU   *                        ISSUE SYSTEM ABEND
         LH    R1,K0(RC)                GET ABEND CODE
         SRL   R1,K4                    POSITION FOR ABEND       Y02080
         ABEND (1),DUMP,,SYSTEM         SYSTEM ABEND WITH DUMP   Y02080
         EJECT
EIN10400 EQU   *                        BLANK REMOVAL ROUTINE
*
*                                       THIS ROUTINE WILL REMOVE
*                                       BLANKS FROM VARIABLE LENGTH
*                                       FIELDS IN THE MESSAGE, SUCH
*                                       AS DDNAME, JOBNAME, ETC.
*
         CLI   K0(RWTG),BLANK           IS CHARACTER BLANK
         BNE   EIN10500                 NO, BRANCH
         BCT   RWTG,EIN10400            POINT TO PRECEDING CHARACTER
*                                       AND BRANCH TO CHECK IT
EIN10500 EQU   *                        END WITH COMMA
         MVI   K1(RWTG),COMMA           MOVE COMMA TO MSG
         LA    RWTG,K2(RWTG)            UPDATE LOCATION PTR
         BR    R1                       RETURN
         EJECT
EIN08475 MVC   MSGLSTSZ(K0),K0(R7)      INSTRUCTION TO MOVE MSG SA53086
MSG12F   DC    AL2(ENDMS12F-*)          ERROR                   SA53086
         DC    AL2(3)                   MESSAGE                 SA53086
MSGID    DC    C'IEC020I NON-ACCEPTABLE ERROR'  IEC020I         SA53086
ENDMS12F EQU   *                        END OF MESSAGE          SA53086
         SPACE
ABTBLE   DC    C'0123456789ABCDEF'      TRANSLATE TABLE
CON72    DC    H'72'                    HWD WITH 72 FOR LNGTH OF MSG
ZEROS    DC    A(0)                     CONSTANT OF ZEROS        Y02080
DESRTCOD DC    X'04000020'              DESC AND ROUT CODES
         EJECT
XCTLTA1D XCTLTABL SVC=055,BRT=YES,LENGTH=                        Y02080
         IECDSECS CVT,DCB,UCB,DEB,MAIN,TIOT,WTG,PREFX,EXPAND=YES Y02080
         IECEQU AOS=YES
         END
