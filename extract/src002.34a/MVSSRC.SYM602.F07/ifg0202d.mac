         TITLE 'IFG0202D - DA OUTPUT USER TRAILER LABEL PROCESSING'
IFG0202D CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          RELEASE 21 DELETIONS/CHANGES                               *
*                                                                     *
* MODULE NAME = IFG0202D                                              *
*                                                                     *
* DESCRIPTIVE NAME = DA OUTPUT USER TRAILER LABEL PROCESSING          *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE DA OUTPUT USER LABELS FUNCTION.                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0202D - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             IFG0201R - CONTINUE PROCESSING OUTPUT USER LABELS       *
*                        FUNCTION.                                    *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202E - PROCESS CLOSE DA WRITE FILE MARK FUNCTION.       *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING ULDMWK,RC                                         Y02080
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING WTG,RWTG                 WHERE-TO-GO TABLE        Y02080
         USING UCBOB,RUCB
         USING TCB,RET
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE DA OUTPUT USER LABELS FUNCTION.                            *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    DETERMINE IF CURRENT VOLUME IS FIRST VOLUME FOR NEW DA DATA SET. *
*    LOCATE FIRST VOLUME BY SEARCHING THE UCB'S FOR ALL UNITS         *
*    ALLOCATED TO THE DATA SET.                                       *
*    READ THE FORMAT 1 DSCB.                                          *
*    A 152 BYTE USER LABEL WORK AREA IS OBTAINED FOR CLOSE FROM  Y02082
*    FETCH PROTECTED SUBPOOL 229 IN DATA MANAGEMENT KEY. A 96    Y02082
*    BYTE USER LABEL WORK AREA IS OBTAINED FOR THE USER FROM     Y02082
*    FETCH PROTECTED SUBPOOL 229 IN USER KEY.                    Y02082
*    IF A TRACK WAS ALLOCATED FOR USER LBLS,CONTROL IS GIVEN TO THE   *
*    USER'S LABEL CONSTRUCTION ROUTINE VIA IECRES-UEXIT MACRO.   Y02082
*    ON RETURN FROM THE USER'S ROUTINE, IF A LABEL WAS CONSTRUCTED, IT*
*    IS WRITTEN FOLLOWED BY 2 FILEMARKS FOR HEADERS (UHL(N+1)), OR    *
*    ONE FILEMARK FOR TRAILERS (UTL(N+1)).  DEPENDING ON THE RETURN   *
*    CODE PASSED BY THE USER'S ROUTINE, ANOTHER LABEL IS PROCESSED OR *
*    CONTROL IS GIVEN BACK TO THE I/O SUPPORT FUNCTION.               *
*    WRITE UP TO EIGHT USER TRAILER LABELS AS REQUIRED FOR DATA SETS  *
*    ON DIRECT ACCESS VOLUMES.                                        *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE DA WRITE DSCB FUNCTION.                                    *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY.                                 *
*       DD ENTRY IN THE TIOT.                                         *
*       WTG TABLE.                                                    *
*       CURRENT WTG TABLE ENTRY.                                      *
*       DCB.                                                          *
*       CLOSE WORK AREA.                                              *
*       RESIDENT ROUTINE.                                             *
*       UCB.                                                          *
*       DEB.                                                          *
*                                                                     *
* OUTPUT -                                                            *
*    USER TRAILER LABELS ARE WRITTEN ON THE FIRST VOLUME FOR NEW DA   *
*    DATA SETS.                                                       *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CONVERT ROUTINE TTR TO MBBCCHHR.                                 *
*    USER'S OUTPUT LABEL EXIT ROUTINES - ENTERED FROM IFG019RA   Y02082
*    THROUGH IECRES-UEXIT MACRO WITH THE FOLLOWING INPUT         Y02082
*       REG 0    CONTAINS NO MEANINGFUL INFO                          *
*           1    POINTER TO 4 WORD PARAMETER LIST WHICH CONTAINS -    *
*                POINTER TO LABEL BUFFER                              *
*                POINTER TO DCB                                       *
*                FLAG BYTE, PTR TO STATUS INFO (IF PERMANENT ERROR)   *
*                OR ZERO                                              *
*                POINTER TO IMAGE AREA (IF TOTALING WAS REQUESTED)    *
*                OR ZERO                                              *
*           2-13 CONTENTS OF USER'S REGS BEFORE I/O SUPP. LOADED Y02082
*                BY IFG019RA                                     Y02082
*           14   RETURN ADDRESS                                       *
*           15   EXIT ADDRESS                                         *
*                                                                     *
*    THE LOCK BIT (BIT 6) IN DCBOFLGS FIELD IS SET TO            Y02082
*    1 TO PREVENT ANOTHER I/O SUPPORT FUNCTION FROM OPERATING ON THIS *
*    DCB WHILE THE USER IS IN CONTROL.  ON RETURN FROM THE USER'S     *
*    ROUTINE, THIS BIT IS RESET TO 0.                                 *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CLOSE DA WRITE FILE MARK FUNCTION.                               *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    EXIT WITH THE FOLLOWING INTERNAL CODES--                         *
*       89 - 314 ABEND - ERROR IN READING THE FORMAT 1 DSCB FROM      *
*                        THE FIRST VOLUME.                            *
*    NO USER LABEL EXTENT EXISTS-THE APPROPRIATE EXIT ROUTINE IS      *
*    ENTERED WITH THE BUFFER POINTER SET TO ZERO.   OTHER             *
*    INPUT AS USUAL.                                                  *
*    I/O ERROR WRITING A USER LABEL - THE USER'S ROUTINE IS ENTERED.  *
*    AGAIN WITH                                                       *
*       BIT 0 OF FLAG BYTE SET TO ONE, PTR TO STANDARD                *
*       STATUS INFORMATION.                                           *
*    OTHER INPUT AS FOR NORMAL ENTRY.                                 *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
*    OBTAIN USER LABEL WORK AREA FOR CLOSE                       Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES,STM=(2,14,WTGPREFX),   Y02082*
               SP=K229,ID=ULWA                                   Y02144
         STM   RES,RC,0(R1)             SAVE REGS 5-12 FOR CALLER
         LR    RC,R1                    SET BASE FOR ULWK DSECT
*    OBTAIN USER LABEL WORK AREA FOR USER                        Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,STM=(2,14,WTGPREFX),     Y02082*
               SP=K229,KEY=USER                                  Y02082
         USING ULUWK,R9                 DEFINE USER'S UL BASE    Y02082
         LR    R9,R1                    ADDR OF GOTTEN CORE      Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         NI    ULREQ,X'FF'-LASTNTRY     TURN OFF LAST ENTRY INDIC IF ON
         XC    DXCCW1(DXCCW8-DXCCW1),DXCCW1  CLEAR CHAN PROG AREA
*
*        DETERMINE IF A USER LABEL EXTENT HAS BEEN ALLOCATED FOR THIS
*        DATA SET.
*
         CLI   DSCEXTYP,ULEXT           IS 1ST EXTENT FOR USER LABELS
         BE    CDA05200                 YES, CONTINUE
*
*        NO USER LABEL TRACK WAS ALLOCATED.  EXIT TO USER'S ROUTINE
*        WITH POINTER TO LABEL BUFFER ZEROED.
*
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULERRPTR,ULERRPTR        CLEAR ANY ERROR INDICTNS
         SR    R1,R1                    BUFFER POINTER TO ZERO
         LA    RB,CDA05500              POINT TO RETURN AFTER SYNCH
         B     CDA06300                 GO SYNCH TO USER
*                                                                Y02134
*        RETURN IN DATAMGT KEY                                   Y02134
*                                                                Y02134
*
*        EXTENT EXISTS - PROCESS USER LABELS
*
CDA05200 EQU   *
         XC    DXDAADDR,DXDAADDR        ZERO IOBOADAD IN IOS' IOB
         MVC   DXDAADDR+K3(K4),DSCLOWLM  CCHH FROM START OF 1ST EXTENT
*
*        PROCESS USER TRAILER LABELS.
*
*
*        STRUCTURE COUNT AND KEY FIELDS IN WORK AREA.  SET IOBDADAD
*        IN I/O SUPPORT'S IOB.
*
         LA    R1,ULWK8                 ADDR OF COUNT
         ST    R1,DXCCW1                READ COUNT INTO WK1
         LA    R1,ULWK10                ADDR OF KEY
         ST    R1,DXCCW2                SEARCH ON KEY IN WK3
         LA    R1,DXCCW1                ADDR OF READ COUNT CCW
         ST    R1,DXCCW3                TIC TO CCW1
         OC    DXCCW1(K32),ULCP13       OR CP SKELETON OVER ADDRESSES
         MVC   ULWK10,UTLCONS3          KEY=UTLO FOR SEARCH KEY EQUAL
*
         BAL   RB,CDA06000              EXECUTE CP TO FIND UTL0
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR
         BZ    CDA05400                 ERROR, BR TO SET UP EXIT TO USR
         SPACE
*                           SET UP  CP TO WRITE USER TRLR
*                           AS EACH LABEL (UTLN) IS WRITTEN, A FILE
*                           MARK (UTL(N+1)) WILL BE WRITTEN FOLLOWING
*
         XC    DXCCW1(DXCCW5-DXCCW1),DXCCW1  CLEAR CHNL PGM 1 OUT
         LA    R1,DXDAADDR+K3           ADDR OF ID
         ST    R1,DXCCW1                SEARCH ID FROM IOBDADAD+3
         LA    R1,DXCCW1                ADDR OF SEARCH ID CCW
         ST    R1,DXCCW2                TIC TO CCW1
         LA    R1,ULWK8                 ADDR OF COUNT AND KEY
         ST    R1,DXCCW3                WRITE C,K FROM ULWK1
         LA    R1,ULWK5                 ADDR OF DATA
         ST    R1,DXCCW4                WRITE LABEL FROM BUFFER
         OC    DXCCW1(K32),ULCP23       OR CP SKELETON OVER ADDRESSES
         MVC   DXCCW5(K24),DXCCW1       APPEND CP FOR WRITE CHECKING
         LA    R1,DXCCW5                ADDR OF SEARCH ID CCW
         ST    R1,DXCCW6                TIC BACK TO CCW5
         MVI   DXCCW6,CCWTIC            RESTORE TIC OP
         MVI   DXCCW7,X'1E'             MAKE OP READ
         OI    DXCCW7+K4,X'10'          SET SKIP BIT ON
         NI    DXCCW7+K4,X'FF'-CCWCMDCH  TURN OFF CC FLAG IN LAST CCW
         MVC   ULWK5(K12),ULWK8         SET UP COUNT, KEY FOR FILE MARK
         SR    R1,R1                    CLEAR R1
         STC   R1,ULWK6+K3              DATA LENGTH=0 FOR FILE MRK
*                                       IF DISP=MOD,UTL0 MAY HAVE
*                                       LENGTH OF 80 BYTES
CDA05300 EQU   *
         IC    R1,ULWK9                 R OF COUNT FOR UTL TO BE WRITTN
         BCTR  R1,0                     R-1
         STC   R1,DXDAADDR+K7           R IN IOBDADAD
         LA    R1,K2(,R1)               R-1+2=R+1
         STC   R1,ULWK6                 R IN COUNT FIELD OF UTL(N+1)
*
         IC    R1,ULWK10+K3             N FROM LABEL TO BE WRITTEN
         LA    R1,K1(,R1)               N+1
         STC   R1,ULWK7+K3              KEY FOR UTL(N+1)
*
         MVI   ULWK9+K3,K80             DATA LENGTH = 80 FOR UTLN
*
         CLI   ULWK7+K3,MAXNOLAB        CHECK IF 8 TRAILERS      YM1122
         BH    CDA05500                 YES,BR TO SET UP RETURN  YM1170
*
         MVC   ULDMBUFR(K4),ULWK7       PRIME LAB BUFF WITH UTLN YM1122
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASE BELOW')  Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL WORK AREA CORE           Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHK IF NOT USER CORE Y02082
*                                                                Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULBUFR(K4),ULDMBUFR      COPY 'UTLN' TO USER BUFF Y02082
*                                                                Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*
*        GO TO USER'S ROUTINE TO CONSTRUCT LABEL.
*
         BAL   RB,CDA06100              GO EXIT TO USER'S ROUTINE
*                                                                Y02134
*        RETURN IN DATAMGT KEY                                   Y02134
*                                                                Y02134
         LTR   RF,RF                    CHECK FOR RETURN CODE=0
         BZ    CDA05500                 CODE IS ZERO, BRANCH TO RETURN
         ST    RF,ULWK1                 SAVE RETURN CODE
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL WORK AREA CORE           Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHK IF NOT           Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*                                                                Y02082
         MVC   ULDMBUFR,ULBUFR          COPY USER'S BUFFER       Y02082
         MVC   ULDMBUFR(K4),ULWK7       PRIME LAB BUFF WITH UTLN YM1122
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         BAL   RB,CDA06000              GO WRITE LABEL
*
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR
         BZ    CDA05400                 YES, BR TO TAKE SPECIAL EXIT
         CLI   ULWK1+K3,READNEXT        CHECK RET CODE FOR MORE LABELS
         BE    CDA05500                 NO, PREVIOUS LABEL WAS LAST
         CLI   ULWK1+K3,WRITNEXT        CHECK IF RETURN CODE IS VALID
         BNE   CDA05500                 BRANCH IF NOT VALID
*
         MVC   ULWK8(K12),ULWK5         UTL(N+1) BECOMES C,K OF NXT LBL
         B     CDA05300                 BR TO PROCESS NEXT LABEL
         EJECT
CDA05400 EQU   *
*
*        IF AN I/O ERROR OCCURS WRITING USER TRAILER LABELS, A SPECIAL
*        EXIT IS TAKEN TO THE USER'S ROUTINE.  INPUT TO THE USER'S
*        ROUTINE IS THE SAME AS FOR OTHER EXITS WITH ONE EXCEPTION-
*        IN THE THIRD WORD OF THE PARAMETER LIST, BIT 0 IS SET TO ONE
*        AND THE THREE LOW ORDER BYTES CONTAIN A POINTER TO STATUS
*        INFO (PTR TO IOB).
*
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULERRPTR              IN PARAMETER LIST
         OI    ULERRPTR,ERROR           FLAG ERROR
         BAL   RB,CDA06200              GO TO SYNCH TO USER
*    CONTROL WILL BE RETURNED HERE IN DATA MANAGEMENT KEY        Y02082
*
*        DETERMINE WHICH I/O SUPPORT FUNCTION  REQUIRED USER
*        TRAILER LABELS TO BE WRITTEN
*
CDA05500 EQU   *                        SET RETURN FOR TRLR PROCESSING
*
*        CONTROL IS FROM CLOSE.  FOR NEW DIRECT DATA SETS, THE
*        UCB ADDRESS IN THE WORK DEB REFLECTS THE 1ST VOLUME AND MUST
*        BE RESTORED TO THE UCB ADDRESS FOR THE CURRENT VOLUME BEFORE
*        CONTINUING WITH CLOSE PROCESSING.
*
         L     RB,DXTIOTAD              GET TIOT ADDR            Y02082
         USING TIOENTRY,RB              TIOT ENTRY BASE          Y02082
         L     RUCB,DXUCBADR            GET ADDRESS OF CURR UCB  Y02134
         DROP  RB                                                Y02082
*
         ST    RUCB,DXCCW10             STORE UCB ADDRESS        Y02134
         MVC   DXDEBUCB+K1(K3),DXCCW10+K1  RESTORE WORK DEB UCB ADDR
*    FREEMAIN USER'S USER LABEL WORK AREA                        Y02082
         IECRES FREE,A=(R9),PREFIX=NO,SP=K229,LV=USERLU,         Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
*                                                                Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
*        FREE  WORKAREA AND LABEL BUFFER AND XCTL TO I/O SUPPORT
*        MODULE WHICH CALLED THIS MODULE.
*
         LR    R1,RC                    START OF AREA TO BE FREED
         LM    RES,RC,0(R1)             RESTORE CALLING MODULE'S REGS
         IECRES FREE,A=(R1),PREFIX=YES,STM=(2,14,WTGPREFX)       Y02082
*
         SR    RET,RET                  SET UP FOR BRANCH TABLE
         IECRES LOAD,MODID=DAFINMOD,BRCODE=(RET),BRANCH=QUEUED   Y02080
*                                       XCTL TO DAFINMOD         Y02080
         EJECT
         SPACE 2
*
*        CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
*
         SPACE
*        IT IS ASSUMED THAT ALL CONTROL BLOCKS HAVE ALREADY BEEN SET UP
         SPACE 3
CDA06000 EQU   *
         EXCP  DXIOB                    INITIATE I/O
*
         IECRES WAIT                    WAIT FOR I/O COMPLETION
*
         BR    RB                       UNCONDITIONAL BRANCH
         EJECT
*        CLOSED SUBROUTINE TO ISSUE IECRES-UEXIT MACRO TO GIVE   Y02082
*        CONTROL TO USER EXIT ROUTINE FROM IFG019RA.             Y02082
*        REGISTER CONTENTS AT ENTRY TO USER EXIT ARE AS FOLLOWS-
*                        R0 - CONTAINS NO MEANINGFUL INFO
*                        R1 - PTR TO PARAMETER LIST
*                    R2-R13 - USER'S CONTENTS BEFORE I/O SUPPORT
*                       R14 - RETURN ADDRESS
*                       R15 - EXIT ADDRESS
*
CDA06100 EQU   *
         XC    ULERRPTR,ULERRPTR        ZERO ERROR INDICATIONS
CDA06200 EQU   *
         LA    R1,ULBUFR                PTR TO LABEL BUFFER
CDA06300 EQU   *
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR,ULTOTPTR        ZERO TOTALING AREA
         TM    DCBDSORG,DCBORGDA        CK FOR DIRECT ORGANIZATION
         BO    CDA06400                 BR IF DIRECT
         TM    DCBMACRF,DCBMEXCP        CK IF EXCP
         BO    CDA06400                 BR IF EXCP,SKIP TOTALING
         TM    DCBOPTCD,DCBOPTT         TEST,BR IF USER TOTALING
         BZ    CDA06400                 HAS NOT BEEN REQUESTED
*
         L     R7,DCBDEBAD              GET ADDRESS OF USER'S DEB
         SR    R1,R1                    CLEAR WORK REG
         IC    R1,DEBNMEXT-DEB(R7)      GET NUMBER OF EXTENTS
         SLL   R1,K4                    MULTIPLY BY 16
         L     R7,K36(R1,R7)            GET ADDR TOTALING WORKAREA-
*                                       DEB ADDR+32+4+LENGTH EXTENTS
         USING TOTSAVWA,R7              SET BASE - TOTALING AREA
         MVC   ULTOTPTR,TOTEOVPT        CURRENT IMAGE AREA ADDR TO
*                                       USR LBL PARM LIST
         DROP  R7                       DROP TOTALING AREA BASE
*
CDA06400 EQU   *
         MODESET EXTKEY=DATAMGT         ASSUME DATAMGT KEY       Y02134
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT = 0         Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,WTGPREFX)           Y02082
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT = 1         Y02082
         IC    R1,DCBOFLGS              GET USER'S DCBOFLGS      Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            POINT TO COPIED DCB      Y02082
         LA    R0,DCBOBUSY              SET MASK FOR BUSY BIT    Y02082
         NR    R1,R0                    SELECT THE BUSY BIT      Y02082
         IC    R0,DCBOFLGS              COMBINE WITH DCBOFLGS    Y02082
         OR    R1,R0                      FROM COPIED DCB.       Y02082
         STC   R1,DCBOFLGS              UPDATE DCBOFLGS IN COPY  Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT = 1
         MVC   ULDMBUFR(K4),ULWK10      REINSERT UTLN/UHLN       Y02082
         BR    RB                       UNCONDITIONAL BRANCH
         EJECT
         SPACE 1
**********************************************************************
*                                                                    *
*                    CONSTANTS                                       *
*                                                                    *
**********************************************************************
         SPACE 1
         DS    0F
UTLCONS3 DC    C'UTL0'                  KEY USED IN SEARCH KEY EQ
ULCP13   CCW   X'12',0,X'40',8          READ COUNT
         CCW   X'29',0,X'40',4          SEARCH KEY EQUAL
         CCW   X'08',0,0,0              TIC
         CCW   X'03',0,0,1              NOP
*
ULCP23   CCW   X'31',0,X'40',5          SEARCH ID EQUAL
         CCW   X'08',0,0,0              TIC TO CCW1
         CCW   X'1D',0,X'40',92         WRITE CKD    UTLO     LABEL
         CCW   X'1D',0,X'40',12         WRITE CKD    UTL0     FILE MARK
         XCTLTABL ID=(DAFINMOD,2E),SVC=020,BRT=YES,LENGTH=       Y02080
         IECDSECS CVT,TCB,RB,TIOT,DCB,DEB,UCB,MAIN,USERLAB,USERTOT,    *
               PREFX,WTG,PSA,RRPL,EXPAND=YES                     Y02144
         IECEQU
         END
