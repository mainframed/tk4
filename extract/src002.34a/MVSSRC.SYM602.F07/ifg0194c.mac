         TITLE 'IFG0194C                      DIRECT ACCESS MOUNT VERIF*
               ICATION ROUTINE'                                  Y02134
IFG0194C CSECT
         ENTRY IFG0554C                 ENTRY FROM EOV           Y02134
IFG0554C EQU   IFG0194C                 ALIAS ENTRY POINT        Y02134
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0194C (OS/VS2)                                     *
*                                                                     *
* CHANGE ACTIVITY - AS FOLLOWS:                                       *
*                                                                     *
*        VS2 RELEASE 2 DELETIONS                               @ZM30032
*                                                                     *
*        VS2 RELEASE 3 DELETIONS                                      *
*0000034249,420496-420522,525424,600403-600420,609900-611020   @Y30LSBS
*0000000000                                                    @Z40RSDH
*0000477640,477680                                             @ZA02859
*0000                                                          @ZA03658
*0000                                                          @ZA02209
*0000                                                          @ZA04643
*0000                                                          @ZA02225
*0000                                                          @ZA05097
*0000                                                          @ZA08882
*0000                                                          @ZA08332
*C60660,C47404                                                 @ZA33308
*A525583-525584,C525585,A600410,607312-607323                  @ZA26665
*C515025                                                       @ZA30123
*                                                                     *
*        VS2 RELEASE 3.818 ADDITIONS/CHANGES/DELETIONS                *
*A610686,610696,610726                                         @ZA29779
*C621381                                                       @ZM44627
*A000                                                          @G18MSBS
*C000048538-048738,525702,525712,525732                        @G18MSBS
*D000034987,034991,420484-420615,420762-420777                 @G18MSBS
*
*        VS2 RELEASE 3.832 ADDITIONS/CHANGES/DELETIONS                *
*SEQUENCE LINE NUMBER RIPPLE HAS CAUSED A LARGE NUMBER OF      @G32DSMI
*LINES TO BE RE-SEQUENCED. PREVIOUS LINE REFERENCE BY SEQUENCE @G32DSFS
*NUMBERS MAY THEREFORE NOT BE MEANINGFUL                       @G32DSFS
*        VS2 RELEASE 3.860 ADDITIONS/CHANGES DELETIONS         @G60ASRB
*C404800-404880,486036-486600,492850-493200,498250-498350,     @G60ASRB
*C515015-515045,515135-515165,515300,530000-530400             @G60ASRB
*A504401-504419,548884-549412,600484-600486,608639-608898,     @G60ASRB
*A609611-609740,611081-611107,621413-621423,628961-629001,     @G60ASRB
*A629081-629411,877261-883261                                  @G60ASRB
*D498000,530600-534800,607896                                  @G60ASRB
*                                                              @ZA32427
*                                                              @ZA32427
*                                                                     *
* FUNCTION = 1. FINDS THE VOLUME LABEL READ AREA;                     *
*            2. READS THE VOLUME LABEL FROM RECORD 3 TRACK 0;         *
*            3. DETERMINES IF THERE ARE ANY OUTSTANDING MOUNT REQUESTS*
*            4. VERIFIES IF VOLUME IS ON DEVICE; CHECKS FOR ASCENDING *
*            VOLUME SEQUENCE NUMBERS, EXPIRATION DATE,                *
*            RAC AUTHORIZATION AND/OR PASSWORD;                       *
*            5. UPDATES VOLUME DISPOSITION IN UCB:                    *
*               A. PRIVATE OR NOT PRIVATE                             *
*               B. PASS OR NOT PASS                                   *
*               C. PUBLIC OR NOT PUBLIC                               *
*            6A. READ DSCB OF THE DATA SET                     @G60ASRB
*            INDICATED BY THE DSNAME IN                        @G60ASRB
*            THE JFCB FROM THE VOLUME INDICATED IN THE INPUT. THE     *
*            DSCB IS READ WITH THE EXTENTS OF THE VTOC. IT IS READ    *
*            DIRECTLY USING THE TTR IN THE JFCB OR A SEARCH IS        *
*            PERFORMED ON THE DSNAME IF THE JFCB TTR IS NOT AVAILABLE.*
*            6B. IF FORMAT 1 DSCB NOT FOUND, THEN CALL THE     @G60ASBJ
*            INSTALLATION EXIT MODULE IFG0EX0A.  RETURN CODE   @G60ASRB
*            FROM EXIT IS -                                    @G60ASRB
*                0 CONTINUE                                    @G60ASRB
*                4 RETRY ONE TIME THE READ OF THE DSCB         @G60ASRB
*                8 EXIT ERROR-ABEND                            @G60ASRB
*            7. THE JFCB DSCB TTR IS UPDATED IF NECESSARY.            *
*            8. THE EXTENTS OF THE DATA SET ARE VERIFIED.             *
*            9. THE VOLUME IS MADE SECURE IF THE DATA SET IS A        *
*            CHECKPOINT DATA SET.                                     *
*            10. ANY FORMAT 2 AND 3 DSCBS ARE READ (EXTENTS ARE       *
*            VERIFIED) AND CHAINED TO THE PREVIOUS WORK AREA.         *
*            11. ANY VERIFIED VIRTUAL VOLUME ON A JES3 MANAGED UNIT   *
*            WILL OFFER THE VOLUME CHOICE TO JES3 FOR APPROVAL.       *
*            12. LAST REFERENCED DATE OR BACKUP COPY BIT       @G60ASRB
*            UPDATED IN FORMAT 1 DSCB IF REQUIRED.  DSCB       @G60ASRB
*            WRITTEN   IF NOT THE FIRST DSCB1, SUCH AS CONCAT. @G60ASRB
*            PDS OR ISAM OR BDAM.  FIRST DSCB WRITTEN IN       @G60ASRB
*            IFG0196W.                                         @G60ASRB
*                                                              @G60ASRB
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER   *
*                   CODE WAS USED FOR ASSEMBLY.  THE MODULE MUST BE   *
*                   REASSEMBLED IF A DIFFERENT CHARACTER SET IS USED  *
*                   FOR EXECUTION.                                    *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING                                         *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN,CLOSE,EOV DATA MANAGEMENT)              *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON ORG *
*                  STATEMENT AT END OF LISTING.                       *
*                                                                     *
*     ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,         *
*                  PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY, *
*                  LINK PACK AREA RESIDENT/PAGEABLE                   *
*                                                                     *
* ENTRY POINT = IFG0194C FROM OPEN                                    *
*               IFG0554C FROM EOV                                     *
*                                                                     *
*     PURPOSE = TO MOUNT AND VERIFY A SPECIFIED DIRECT ACCESS VOLUME. *
*                                                                     *
*     LINKAGE = IECRES LOAD,MODID=ID4C,BRCODE=OFFSET,BRANCH=QUEUED    *
*                                                                     *
* INPUT = STANDARD O/C/E INPUT.                                       *
*        DXVOLSR2 CONTAINS THE VOLUME SERIAL NUMBER OF THE            *
*        VOLUME SERIAL NUMBER OF THE VOLUME TO BE MOUNTED             *
*        AND DXUCBADR CONTAINS THE UCB ADDRESS OF THE UNIT            *
*        TO CONTAIN THE VOLUME. DXDSAB CONTAINS THE CURRENT           *
*        DSAB ADDRESS OF THE DATA SET BEING PROCESSED.                *
*                                                                     *
* OUTPUT = THE SPECIFIED VOLUME IS MOUNTED AND VERIFIED ON THE        *
*          SPECIFIED UNIT AND THE FORMAT 2 AND 3 DSCBS ARE            *
*          CHAINED TO THE WORK AREA CONTAING THE FORMAT 1.            *
*                                                                     *
* EXIT-NORMAL = IFG0194A - TO PARALLEL MOUNT MORE VOLUMES, OR         *
*                          TO LOOK-AHEAD MOUNT THE NEXT VOLUME, OR    *
*                          TO EXIT TO CALLER, OR                      *
*                          TO PROCESS DISP=MOD ERROR RECOVERY, OR     *
*                          TO REJECT VOLUME AND UNIT PASSED.          *
*               IFG0194J - TO ISSUE MESSAGES.                         *
*               IFG0195T - TO VERIFY PASSWORD FOR THE DATA SET.       *
*               IFG0554P - TO EXTEND THE DATA SET.                    *
*               IFG0EX0A - FORMAT 1 DSCB-NOT-FOUND             @G60ASRB
*                          INSTALLATION EXIT.                  @G60ASRB
*                                                                     *
* EXIT-ERROR = IFG0190P - PROBLEM DETERMINATION ROUTINE.              *
*                         SEE LABEL DAMVER19 FOR A LIST OF ABENDS     *
*                         PROCESS 413-30 FOR WRONG VOLUME MOUNT@Y30LSBS
*                         OPEN.                                @Y30LSBS
*                         PROCESS 737-38 FOR WRONG VOLUME MOUNT@Y30LSBS
*                         EOV.                                 @Y30LSBS
*                         PROCESS 03D-0C FOR BDAM ACCESSING    @ZA02225
*                         AN ISAM DATA SET DURING OPEN         @ZA02225
*                         PROCESS 413-34 FOR JES3 ERROR-OPEN   @ZM44627
*                         PROCESS 737-28 FOR JES3 ERROR-EOV    @G18MSBS
*                         737-04 I/O ERROR WRITING DSCB(EOV)   @G60ASRB
*                         737-3C DSCB-NOT-FOUND INSTALLATION   @G60ASRB
*                         EXIT ERROR(EOV)                      @G60ASRB
*              IFG0195G - TO PROCESS 213 ABEND.                       *
*                         213-18 I/O ERROR WRITING DSCB(OPEN)  @G60ASRB
*                         213-2C DSCB-NOT-FOUND INSTALLATION   @G60ASRB
*                         EXIT ERROR(OPEN).                    @G60ASRB
*                                                                     *
* EXTERNAL REFERENCES = AS FOLLOWS -                                  *
*                                                                     *
*    ROUTINES = IFG0190P - ALIAS IFG0550P.                            *
*               IFG0194A - ALIAS IFG0554A.                            *
*               IFG0194J - ALIAS IFG0554J.                            *
*               IFG0195T - ALIAS IFG0555T.                            *
*               IFG0195G.                                             *
*               IFG0554P.                                             *
*               IFG0EX0A.                                      @G60ASRB
*               IEAQCDSR                                       @G60ASRB
*               IEAVVMSR                                       @G60ASRB
*                                                                     *
*    DATA AREAS = SEE PARAMETERS OF IECDSECS MACRO.                   *
*                                                                     *
*    CONTROL BLOCKS = SEE PARAMETERS OF IECDSECS MACRO.               *
*                                                                     *
* TABLES = NUCLEUS UCB LOOK-UP TABLE.                                 *
*          OPEN/EOV INTERNAL ABEND CODE TABLE. ONE ERROR GENERATES A  *
*          DIFFERENT ABEND CODE FOR OPEN AND EOV.                     *
*                                                                     *
* MACROS = AS FOLLOWS -                                               *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*        IECRES                                                       *
*        EXCP                                                         *
*        MODESET                                                      *
*        NIL                                                          *
*        DOM                                                          *
*        ENQ                                                          *
*        SETLOCK                                                      *
*        OIL                                                          *
*        TESTAUTH                                                     *
*        DMABCOND                                                     *
*        XCTLTABL                                                     *
*        IEFAJCTB                                              @G18MSBS
*        IEFASCTG                                              @G18MSBS
*        IEFJESCT                                              @G18MSBS
*        IEFJSSOB                                              @G18MSBS
*        IEFSSREQ                                              @G18MSBS
*                                                                     *
* CHANGE ACTIVITY = SEE CHANGE ACTIVITY BEFORE FUNCTION DESCRIPTION   *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,JSCB,TIOT,DSAB,PSA,DSCB1,DSCB4,DCB,ACB,    Y02146X
               CDE,LPDE,                                       @G60ASRB*
               UCB,IEZDEB,ICHACHKL,                            @Z40RSRJ*
               MAIN,WTG,PREFX                                    Y02146
K213     EQU   213                      INDICATOR FOR 213 ABEND  Y02134
OUTPUT   EQU   X'0E'                    MASK FOR INPUT OR RDBACK Y02134
DSCBCKDS EQU   X'01'                    DSCB CHKPT INDICATOR     Y02083
DATAMGT  EQU   X'50'                    DM KEY                   YM3070
HIORDER  EQU   X'80'                    HI-ORDER BIT OF A BYTE @G18MSBS
SWAPREFX EQU   16                       PREFIX OF QUEUE ELEMENT@G18MSBS
         IECEQU AOS=YES,IEZDEB=YES      DEFINE EQUATES           YM3070
*
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING WTG,RWTG                 WHERE-TO-GO TABLE        Y02080
         USING USERPRML,RPARC           RPARC POINTS TO CURRENT  Y02134
         USING IHADCB,RDCB              RDCB POINTS TO DCB       Y02134
         USING TIOENTRY,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING UCBOB,RUCB               DEFINE BASE TO MAIN UCB
*
         BALR  RBASE,R0                 ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*                                                                Y02134
DAMV0000 EQU   *                        BASE ADDRESS           @Z40RSDH
         B     DAMV0010(RET)            BRANCH TO BRANCH TABLE   Y02134
*                                                                Y02134
DAMV0010 EQU   *                        BRANCH TABLE             YM1472
*                                                                Y02134
         B     DAMV0050                 BRANCH IF ENTRY FROM 4A  Y02134
         B     DAMV0100                 BRANCH ENTRY FROM REJECT Y02134
         B     DAMV2450                 RETURN FROM EXPIRATION   Y02134
         B     DAMV2550                 RETURN FROM PASSWORD     Y02083
         B     DAMV0020                 RETURN FROM CHECKPOINT   Y02083
*                                                                YM3925
DAMV0020 EQU   *                        CHECKPOINT WTOR RETURN   YM3925
*                                                                YM3925
         L     RF,CHKPTRET              GET RETURN ADDRESS       YM3925
         BR    RF                       RETURN FROM MESSAGE      YM3925
         EJECT
*
DAMV0050 EQU   *                        VOLUME MOUNT/VERIFY      YM3070
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        FIND VOLUME LABEL READ AREA                             Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         LA    RCORE,DXDSCB             CLEAR HI ORDER BYTE      Y02134
         LR    RB,RCORE                 INITIALIZE FOR LOOP      Y02134
*                                                                Y02134
DAMV0060 EQU   *                        LOOP TO FIND LAST AREA   YM1472
*                                                                Y02134
         C     RB,CORECH(,RB)           TEST FOR SAME AREA       YM3807
         BE    DAMV0090                 BRANCH IF REUSE REQUESTD Y02134
*                                                                Y02134
         CLI   DXDSCB-DXDSCB(RB),CHAR1  CHECK FOR F1 AREA        Y02134
         BNE   DAMV0070                 BRANCH NOT F1 AREA       Y02134
*                                                                Y02134
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY    YM3925
*        EVEN IF NOT IN USERS DCB.                               YM3925
         TM    DCBDSORG,DCBDSGPO        BPAM & DSN = CHAR ONE    YM3925
         BO    DAMV0070                 BRANCH IF BPAM           YM3925
*                                                                YM3925
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP            Y02134
         BO    DAMV0075                 BR IF EXCP               YM3807
*                                                                Y02134
         TM    DCBDSORG,DCBDSGIS        TEST FOR ISAM            Y02134
         BNO   DAMV0075                 BRANCH IF NOT ISAM       YM3807
*                                                                Y02134
* CHECK FOR VOLUME ALREADY PROCESSED                             Y02134
* NOTE-AN AREA CHAINED FOR REUSE WILL NOT BE BYPASSED BY THE     YM1472
*      FOLLOWING CODE BECAUSE THE CONDITION BELOW WILL ALWAYS    YM1472
*      ARISE BEFORE THE CONDITION CAUSING THE RECHAINING.        YM1472
         CLC   DXUCBADR,DSCSCALO-DXDSCB(RB) VOL ALREADY PROC?    Y02134
         BE    DAMV6000                 BRANCH TO GET NEXT       Y02134
         B     DAMV0075                 BRANCH, CHECK NEXT AREA  YM3807
*                                                                Y02134
DAMV0070 EQU   *                        INCREMENT FOR AREAS      YM1472
*                                       PRECEDED WITH 44 BYTE KEYYM1472
*                                                                YM3807
         CR    RB,RCORE                 TEST IF FIRST AREA       YM3807
         BE    DAMV0075                 BRANCH IF FIRST          YM3807
*                                                                YM3807
         LA    RB,L'JFCBDSNM(,RB)       INCREMENT PASSED KEY     Y02134
*                                                                YM3807
DAMV0075 EQU   *                        INCREMENT TO NEXT AREA   YM3807
*                                                                YM3807
         NC    CORECH(K4,RB),CORECH(RB) TEST FOR END OF CHAIN    YM3807
         BZ    DAMV0080                 BRANCH IF END OF CHAIN   YM3807
*                                                                YM3807
         L     RB,CORECH(,RB)           LOAD NEXT CHAIN POINTER  YM3807
         B     DAMV0060                 BRANCH TO LOOP           Y02134
         EJECT
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
*        GET NEXT AREA AND CHAIN TO LAST                         YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                Y02134
DAMV0080 EQU   *                        BPAM F1 AREA GETS 44 MOREYM1472
*                                                                Y02134
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY    YM3925
*        EVEN IF NOT IN USERS DCB.                               YM3925
         LA    R0,F1LTH                                        @G60ASRB
         TM    DCBDSORG,DCBDSGPO        BPAM CONCATENATION       Y02134
         BNO   DAMV0085                 BRANCH NOT BPAM          Y02134
         LA    R0,F1POLTH                                      @G60ASRB
*                                                                Y02134
DAMV0085 EQU   *                        GET F1 DSCB AREA         YM1472
*                                                                Y02134
         L     RF,ADDRF1                GET THE GETF1 ADDRESS  @G18MSBS
         BALR  RET,RF                   GO GET F1 DSCB AREA    @G18MSBS
*                                                                Y02134
         ST    R1,CORECH(,RB)           CHAIN AREAS              Y02134
         LR    RB,R1                    LOAD WORK AREA POINTER   Y02134
         EJECT
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
*        MOVE DATA SET NAME TO AREA FOR BPAM CONCATENATION.      YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                Y02134
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY    YM3925
*        EVEN IF NOT IN USERS DCB.                               YM3925
         TM    DCBDSORG,DCBDSGPO        BPAM CONCATENATION       Y02134
         BNO   DAMV0089                 BRANCH NOT BPAM          Y02134
*                                                                Y02134
         LA    RD,INFMJFCB              LOAD POINTER TO JFCB     Y02134
         CLC   DXDSABAD,DXDSAB          CHECK IF CURRENT JFCB    Y02134
         BE    DAMV0087                 BRANCH IF CURRENT        Y02134
         LA    RD,TIOEJFCB              PTR TO CURRENT JFCB PTR  Y02134
         IECRES LOCJFCB,(RD)            LOCATE JFCB              Y02134
*                                                                YM1472
DAMV0087 EQU   *                        MOVE DSNM TO KEY OF DSCB YM1472
*                                                                Y02134
         MVC   JFCBDSNM-INFMJFCB(L'JFCBDSNM,RB),INFMJFCB-INFMJFCB(RD)
         LA    RB,L'JFCBDSNM(,RB)       POINT TO F1 AREA         Y02134
*                                                                Y02134
DAMV0089 EQU   *                        SAVE UCB ADDRESS         YM1472
*                                                                Y02134
         MVC   DXUCBSAV-DXUCBSAV+CORECH+K4(L'DXUCBADR,RB),DXUCBADR
         MVC   DXUCBSAV-DXUCBSAV+CORECH+K4(K1,RB),DXUNITOF+K1    Y02134
*                                                                Y02134
DAMV0090 EQU   *                        INDICATE END OF CHAIN    YM1472
*                                                                Y02134
         XC    CORECH(K4,RB),CORECH(RB) CLEAR CHAIN POINTER      Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        SET UP EXTENT TO COVER THE WHOLE DISK.                  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV0100 EQU   *                                                 Y02134
*                                                                Y02134
         XC    DXDEBSCC(K4),DXDEBSCC    EXTENT TO COVER DISK     Y02134
*                                                                Y02134
         L     RF,CVTPTR                GET CVT ADDR             Y02134
         L     RF,CVTZDTAB-CVT(,RF)     I/O DEVICE TABLE ADDRESS Y02134
*                                                                Y02134
         XR    R1,R1                    ZERO WORK REGISTER       Y02080
         IC    R1,UCBTBYT4              GET UCB DEVICE TYPE      Y02134
         IC    R1,0(R1,RF)              INDEX TO DEVICE OFFSET   Y02134
         AR    RF,R1                    ADDR OF DEVICE ENTRY     Y02134
         MVC   DXDEBECC(K4),0(RF)       SET MAX EXTENT FROM TBL  Y02134
         MVC   DXCCW8(K4),0(RF)         SAVE MAX PACK EXTENTS    Y02082
*                                                                Y02134
         MVC   DXDEBNTR,ODA0660K        SET TRACKS TO LARGEST NO Y02134
         MVC   DXDEBUCB+K1(K3),DXUCBADR+K1 UCB ADDRESS TO DEB    Y02134
         XC    DXDEBBIN,DXDEBBIN        ZERO OUT BIN NUMBER      Y02134
*                                                                YM3192
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         YM3822
         BO    DAMV0205                 BR IF VIO                YM3192
*                                                                YM3192
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        TEST FOR OUTSTANDING MOUNT REQUEST.                     Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         TM    UCBDMCT,UCBMOUNT         OUTSTANDING MOUNT        Y02134
         BNO   DAMV0200                 BRANCH, NO MOUNT ISSUED  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        READ THE VOLUME LABEL FROM RECORD 3 OF TRACK 0.         Y02134
*        WILL GO INTO A WAIT STATE UNTIL THE VOLUME IS MOUNTED.  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         XC    DXDAADDR,DXDAADDR        DA VOL LABEL ADDR CCHH = 0000
         MVI   DXDAADDR+K7,K3           VOL LABEL IS ALWAYS RECORD 3
*                                                                Y02134
*****************************************************************Y02134
*
*        CONSTRUCT CHANNEL PROGRAM TO READ VOLUME LABEL.
*
*        SEARCH ID EQ
*        TIC *-8
*        READ DATA
*
*****************************************************************Y02134
*                                                                Y02134
         XC    DXCCW1(K24),DXCCW1       CLEAR CCW AREA
         LA    RF,DXDAADDR+K3           SEARCH ADDRESS
         ST    RF,DXCCW1
         LA    RF,DXCCW1                TIC ADDRESS
         ST    RF,DXCCW2
         ST    RB,DXCCW3                STORE READ IN AREA PTR   Y02134
         OC    DXCCW1(K24),ODA7440K     OR IN CMND CODE, FLAGS, LENGTH
         MVC   DXCCW2+K5(K3),DXDEBUCB+K1 SAVE UCB ADDRESS        Y02134
         EJECT
*****************************************************************YM7890
*                                                                YM7890
*        IF MOUNT PENDING AND UNIT NOT READY MEMORY MAY          YM7890
*        NOT BE SWAPPED OUT, BECAUSE IF OPERATOR CANCELS         YM7890
*        THE JOB, THE JOB WILL NOT TERMINATE UNTIL THE           YM7890
*        MOUNT IS SATISFIED.                                     YM7890
*                                                                YM7890
*****************************************************************YM7890
*                                                                YM7890
         TM    UCBFL1,UCBNOTRD          TEST IF READY            YM7890
         BZ    DAMV0105                 BR READY- BYPASS NOSWAP  YM7890
*                                                                YM7890
         SYSEVENT DONTSWAP              IN CASE OPERATOR CANCEL  YM7890
*                                                                YM7890
         SLL   R1,K24                   CLEAR HI 3 BYTES         YM7890
         LTR   R1,R1                    CHECK FOR ERROR          YM7890
         BNZ   DAMV0105                 BRANCH IF ERROR          YM7890
*                                                                YM8511
         OI    DXATALL,DXATSWAP         SET RECOVERY INDICATOR   YM8511
*                                                                YM7890
         EXCP  DXIOB                    READ VOLUME LABEL        YM7890
*                                                                YM7890
         IECRES WAIT                    WAIT FOR I/O TO FINISH   YM7890
*                                                                YM8511
         NI    DXATALL,ALLBITS-DXATSWAP RESET RECOVERY INDICATOR YM8511
*                                                                YM7890
         SYSEVENT OKSWAP                ALLOW SWAPOUT-UNIT READY YM7890
*                                                                YM7890
         B     DAMV0110                 BRANCH TO VERIFY LABEL   YM7890
*                                                                YM7890
DAMV0105 EQU   *                        READ LABEL - UNIT READY  YM7890
*
         EXCP  DXIOB                    READ VOLUME LABEL
*
         IECRES WAIT                    WAIT FOR MOUNT AND LABEL READ
         EJECT
*                                                                Y02134
DAMV0110 EQU   *                        VERIFY MOUNTED VOLUME    YM7890
*                                                                YM7890
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         TM    DXECB,ECBNOERR           TEST FOR I/O ERROR     @ZA08332
         BZ    DAMV0111                 BRANCH IF I/O ERROR    @G18MSBS
         MVC   UCBVOLI,VOLSERNO-DXLBL(RB) VOL SERIAL FOR REJECT  YM7023
*                                                              @ZA08332
DAMV0111 EQU   *                                               @G18MSBS
*                                                              @ZA08332
*        RESET MOUNT BIT                                         Y02134
         NIL   UCBDMCT,ALLBITS-UCBMOUNT,REF=UCBOB,WREGS=(,,RF)   Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         EJECT
*        NO DOM SUPPORT AVAILABLE FOR DA BECAUSE OF UCB CHANGES  YM7310
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR      Y02134
         BNZ   DAMV0112                 BR IF NO ERROR           Y02134
*                                                                Y02134
         CLC   DXVOLSR2,SCRTCH          CHECK IF SCRTCH REQUEST  Y02134
         LA    R0,K1                    OPEN=413-20 EOV=737-08   Y02080
         BNE   DAMV9900                 BRANCH IF SPECIFIC REQ   Y02134
         B     DAMV8000                 BRANCH TO GET NEW VOLUME Y02134
         EJECT
*                                                                Y02134
DAMV0112 EQU   *                        VERIFY MOUNTED VOLUME    YM1472
         SPACE
         CLC   DXVOLSR2,VOLSERNO-DXLBL(RB) CHECK FOR RIGHT VOL   Y02134
         BE    DAMV0115                 BRANCH, BYPASS DISMOUNT  Y02134
        SPACE
         NC    DXVOLSR1,DXVOLSR1        WRONG VOL MNT INDICATOR@G18MSBS
         MVC   DXVOLSR1,VOLSERNO-DXLBL(RB) VOL SER FOR REJECT  @G18MSBS
         BNZ   DAMV0113                 BRANCH TO MSS TEST     @G18MSBS
        SPACE
         CLC   DXVOLSR2,SCRTCH          SCRATCH REQUEST ?      @G18MSBS
         BE    DAMV0114                 YES, GO ENQ TO REJ VOL @G18MSBS
        SPACE
DAMV0113 EQU   *                                               @G18MSBS
        SPACE
         TM    UCBTBYT2,UCBRVDEV        VIRTUAL DASD ?         @G18MSBS
         BNO   DAMV8000                 NO, BRANCH TO REJ VOL  @G18MSBS
         SPACE
*                      YES, SSC MOUNTED WRONG VIRTUAL VOLUME - @G18MSBS
         LA    R0,K14                   OPEN=413-30 EOV=737-38 @G18MSBS
         B     DAMV9900                 GO ABEND               @G18MSBS
        SPACE
DAMV0114 EQU   *                                               @G18MSBS
        SPACE
         MVC   DXWORK1(K16),ENQLIST     INIT ENQ LIST            Y02134
         L     RF,DXJSCBAD              LOAD JSCB ADDRESS        Y02134
         L     R0,JSCBTCBP-IEZJSCB(,RF) INITIATOR TCB POINTER    Y02134
DAMV0202 ENQ   (,DXVOLSR1),TCB=(0),RET=USE,MF=(E,DXWORK2),       Y02134X
               RELATED=(SYSZVOLS,IFG0194A(VUS02450))             Y02134
*                                                                Y02134
         LTR   RF,RF                    VOLUME ALREADY IN USE    Y02134
         BNZ   DAMV8000                 BRANCH IF ERROR, REJECT  Y02134
         EJECT
*                                                                Y02134
DAMV0115 EQU   *                        CONVERT MBBCCHHR TO TTR  YM1472
*                                                                Y02134
         XC    DXVOLSR1,DXVOLSR1        CLEAR REJECT VOLUME      Y02134
*                                                                Y02134
         L     RF,WTGPREFX              LOAD PREFIX ADDRESS      Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        Y02134
*                                                                Y02134
         MODESET EXTKEY=ZERO            SETLOCK KEY              Y02082
*                                                                Y02134
DAMV0120 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02134X
               RELATED=(LOCAL,IFG0194C(DAMV0190))                Y02134
*                                                                Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         LTR   RD,RD                    TEST FOR SETLOCK ERROR   Y02134
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     Y02134
         BNZ   DAMV9000                 BRANCH IF SETLOCK ERROR  Y02134
*
***********************************************************************
*
*  CONVERT VTOC ADDR FROM MBBCCHHR TO TTR FORM
*
***********************************************************************
*
         MVC   DXDAADDR+K3(K5),VOLVTOC-DXLBL(RB) CCHHR VTOC ADDR Y02134
         L     RF,IECPRLTV              EPA OF IECPRLTV CONV RTN YM3070
         BALR  RET,RF                   LINK TO CONVERT ROUTINE  YM3070
         ST    R0,DXDAADDR              SAVE CONVERTED TTR       Y02134
         EJECT
*
***********************************************************************
*
*        INSERT VTOC TTR ADDR IN UCB.                            Y02134
*
***********************************************************************
*
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         MVC   UCBVTOC(K3),DXDAADDR     PLACE VTOC TTR INTO UCB  Y02134
         MVC   UCBVOLI,VOLSERNO-DXLBL(RB) MOVE SERIAL NO. TO UCB Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02134
*                                                                Y02134
         L     RF,WTGPREFX              LOAD PREFIX ADDRESS      Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        Y02134
*                                                                Y02134
         MODESET EXTKEY=ZERO            SETLOCK KEY              Y02134
*                                                                Y02134
DAMV0190 SETLOCK RELEASE,TYPE=LOCAL,                             Y02134X
               RELATED=(LOCAL,IFG0194C(DAMV0120))                Y02134
*                                                                Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         LTR   RD,RD                    TEST FOR SETLOCK ERROR   Y02134
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     Y02134
         BNZ   DAMV9000                 BRANCH IF SETLOCK ERROR  Y02134
         B     DAMV0205                 GET VOLUME DISPOSITION   Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        VERIFY VOLUME ON DEVICE                                 Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV0200 EQU   *                        VERIFY PREMOUNTED VOLUME YM1472
*                                                                Y02134
         CLC   UCBVOLI,ZEROS            CHECK FOR NO VOL         Y02134
         BE    DAMV8000                 BRANCH IF NO VOL         Y02134
*                                                                Y02134
         NC    DXVOLSR1,DXVOLSR1        WRONG VOL MNT INDICATOR  YM1472
         BNZ   DAMV8000                 BRANCH TO REJECT         YM1472
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        UPDATE UCB VOLUME DISPOSITION                           Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV0205 EQU   *                                                 Y02134
*                                                                Y02134
         XC    DXVOLSR1,DXVOLSR1        CLEAR REJECT VOLUME      Y02134
*                                                                Y02134
         L     RF,WTGPREFX              LOAD PREFIX ADDRESS      Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        Y02134
*                                                                Y02134
         MODESET EXTKEY=ZERO            SETLOCK KEY              Y02082
*                                                                Y02134
DAMV0210 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02134X
               RELATED=(LOCAL,IFG0194C(DAMV0290))                Y02134
*                                                                Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         LTR   RD,RD                    TEST FOR SETLOCK ERROR   Y02134
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     Y02134
         BNZ   DAMV9000                 BRANCH IF SETLOCK ERROR  Y02134
*                                                                Y02134
         TM    UCBDMCT,UCBDMC-K1        TEST FOR ONE USER        Y02134
         BNZ   DAMV0285                 BRANCH, MORE THAN 1 USER Y02134
         TM    UCBSTAB,UCBBSVL          TEST FOR SHAREABLE       Y02134
         BZ    DAMV0285                 BRANCH IF SHAREABLE UNIT Y02134
*                                                                Y02134
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         NI    UCBJBNR,ALLBITS-UCBMONT  SET PASS TO 0            YM1472
         NI    UCBSTAB,ALLBITS-UCBBPRV  SET PRIVATE TO 0         YM1472
         NI    UCBSTAB,ALLBITS-UCBBPUB  SET PUBLIC TO 0          YM1472
         OI    UCBSTAT,UCBDADI          INDICATE SL VOLUME       YM1472
*                                                                Y02134
* REGISTER RB RESTORED AFTER SETLOCK RELEASE                     Y02134
         L     RB,DXDSAB                CURRENT DSAB POINTER     Y02134
         TM    DSABFLG3-DSAB(RB),DSABPASS TEST FOR PASSED DATA   Y02134
         BNO   DAMV0220                 BRANCH IF NOT PASSED     Y02134
*                                                                Y02134
         OI    UCBJBNR,UCBMONT          SET PASS INDICATOR       YM1472
*                                                                Y02134
DAMV0220 EQU   *                        TEST PRIVATE REQUEST     Y02134
*                                                                Y02134
         TM    TIOESTTA,TIOSDSP1        TEST FOR PRIVATE DATA    Y02134
         BNO   DAMV0230                 BRANCH IF NOT PRIVATE    Y02134
*                                                                Y02134
         OI    UCBSTAB,UCBBPRV          SET PRIVATE INDICATOR    YM1472
*                                                                Y02134
DAMV0230 EQU   *                        TEST PUBLIC REQUEST      Y02134
*                                                                Y02134
         TM    TIOESTTA,TIOSDSP2        TEST FOR PUBLIC DATA     Y02134
         BNO   DAMV0280                 BRANCH IF NOT PUBLIC     Y02134
*                                                                Y02134
         OI    UCBSTAB,UCBBPUB          SET PUBLIC INDICATOR     YM1472
*                                                                Y02134
DAMV0280 EQU   *                        SEE IF NOT SCRTCH        Y02134
*                                                                Y02134
         TM    TIOESTTA,TIOSDSP1        TEST FOR PRIVATE DATA    Y02134
         BNO   DAMV0285                 BRANCH IF NOT PRIVATE    Y02134
*                                                                Y02134
         L     RET,UCBEXTPT             LOAD UCB EXTENSION PTR   Y02146
         USING UCBCMEXT,RET             RET POINTS TO EXTENSION  Y02146
         OI    UCBFLP1,UCBNSRCH         SET NON-SCRTCH INDICATOR Y02146
         DROP  RET                                               Y02146
*                                                                Y02134
DAMV0285 EQU   *                        RELEASE LOCK             Y02134
*                                                                Y02134
         MODESET EXTKEY=ZERO            SETLOCK KEY              Y02082
*                                                                Y02134
DAMV0290 SETLOCK RELEASE,TYPE=LOCAL,                             Y02134X
               RELATED=(LOCAL,IFG0194C(DAMV0210))                Y02134
*                                                                Y02134
         MODESET EXTKEY=DATAMGT         DM KEY                   Y02082
*                                                                Y02134
         LTR   RD,RD                    TEST FOR SETLOCK ERROR   Y02134
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     Y02134
         BNZ   DAMV9000                 BRANCH IF SETLOCK ERROR  Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02132
*                                                                Y02132
*        TEST FOR VIO UCB BEFORE READING F1 OR F4 DSCB'S         Y02132
*                                                                Y02132
*****************************************************************Y02132
*                                                                Y02134
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   DAMV1010                 BR IF NOT                Y02132
*                                                                Y02134
*****************************************************************Y02132
*                                                                Y02132
*        READ FORMAT ONE DSCB FROM SWA FOR VIO                   Y02132
*                                                                Y02134
*****************************************************************Y02132
*                                                                Y02132
         LA    R0,K3                    OPEN=213-04 EOV=737-04   YM7888
         LA    RD,INFMJFCB              LOAD POINTER TO JFCB     YM7888
         CLC   DXDSABAD,DXDSAB          CHECK IF CURRENT JFCB    YM7888
         BE    DAMV1005                 BRANCH IF CURRENT        YM7888
         LA    RD,TIOEJFCB              POINT TO CURRENT JFCB    YM7888
         IECRES LOCJFCB,(RD)            LOCATE JFCB              YM7888
*                                                                YM7888
DAMV1005 EQU   *                        USE JFCB TTR IF VALID    YM7888
         CLC   K0(L'JFCBDSNM,RD),VDSDSCB-VDSUCB(RUCB) DSNS EQUAL YM7888
         BNE   DAMV9100                 BRANCH IF NOT CORRECT    YM7888
*                                                                Y02132
         MVC   K0(DSCEXT2-DSCFMTID,RB),VDSDSCB-VDSUCB+L'JFCBDSNM(RUCB)
*                                                                Y02132
         OC    K0(DSCEXT2-DSCFMTID,RB),K0(RB) IS DSCB = ZERO?    Y02132
         BZ    DAMV9100                 BRANCH IF DSCB NOT FOUND Y02132
*                                                                Y02132
         XC    DSCEXT2-DXDSCB(DSCBEND-DSCEXT2,RB),DSCEXT2-DXDSCB(RB)
*                                                                Y02132
         B     DAMV2000                 CONTINUE PROCESSING      Y02132
*                                                                Y02134
DAMV1010 EQU   *                        READ FORMAT 4            YM1472
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        READ THE FORMAT 4 DSCB TO INITIALIZE THE DEB            Y02134
*        EXTENTS TO THOSE OF THE VTOC                            Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         LA    R1,UCBVTOC               LOAD POINTER TO VTOC TTR Y02134
         L     RF,IECPCNVT              EPA OF IECPCNVT CONV RTN YM3070
         BALR  RET,RF                   LINK TO CONVERT ROUTINE  YM3070
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CONSTRUCT CHANNEL PROGRAM TO READ FORMAT 4              Y02082
*        SEARCH ID EQ                                            Y02134
*        TIC *-8                                                 Y02134
*        SEARCH KEY EQ                                           Y02134
*        NOP  (NO CHAIN BIT, SLI)                                Y02134
*        READ DATA (DSCB)                                        Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         XC    DXCCW1(K40),DXCCW1       CLEAR AREA (5 CCWS)      Y02134
         LA    RF,DXDAADDR+K3           SEARCH ADDRESS           Y02134
         ST    RF,DXCCW1                                         Y02134
         LA    RF,DXCCW1                TIC ADDRESS              Y02134
         ST    RF,DXCCW2                                         Y02134
         MVC   K0(K4,RB),ODA0670K       MOVE KEY TO SEARCH ON    Y02082
         ST    RB,DXCCW3                                         Y02134
         ST    RB,DXCCW5                                         Y02134
         OC    DXCCW1(K40),ODA0640K     CMND CODE, FLAGS, LENGTH Y02134
         OI    DXCCW3+K4,CCWSILI        SLI BIT ON SEARCH KEY    Y02082
         MVI   DXCCW3+K7,K4             SEARCH 4 BYTES OF KEY    Y02082
*                                                                Y02134
         EXCP  DXIOB                    READ DSCB VIA EXCP       Y02134
*                                                                Y02134
         IECRES WAIT                    WAIT FOR READ TO FINISH  Y02134
*                                                                Y02134
         LA    R0,K1                    OPEN=413-20 EOV=737-08   Y02080
         TM    DXECB,ECBNOERR           CHECK FOR IO ERROR       Y02134
         BZ    DAMV9900                 BR IF I/O ERROR          Y02082
*                                                                Y02134
         CLI   DXDSCB-DXDSCB(RB),CHAR4  CHECK FOR F4 READ        Y02134
         BNE   DAMV9900                 BRANCH IF BAD PACK       Y02134
*                                                                Y02134
         CLC   JFCBDSNM,ODA0670K        TEST FOR VTOC DSNAME   @ZA33308
         BNE   DAMV1020                 BRANCH IF NOT            Y02134
*                                                                Y02134
         TM    UCBJBNR,UCBJES3          DOES JES3 MANAGE UNIT? @G18MSBS
         BNO   DAMV1015                 NO, CONTINUE           @G18MSBS
         TM    UCBTBYT2,UCBRVDEV        YES, THEN VIRTUAL VOL? @G18MSBS
         BNO   DAMV1015                 NO, CONTINUE           @G18MSBS
         LA    RC,K4                    SET FINAL PASS SWITCH  @G18MSBS
         L     RF,JES3ROUT              GET JES3 ROUTINE ADDR  @G18MSBS
         BALR  RET,RF                   BRANCH TO JES3 ROUTINE @G18MSBS
DAMV1015 EQU     *                                             @G18MSBS
         MVC   DXCCW7(K5),DXDAADDR+K3   SAVE DSCB CCHHR TO UPDAT Y02134
         B     DAMV7000                 FORMAT 4 REQUESTED       Y02082
         EJECT
*                                                                Y02134
DAMV1020 EQU   *                        SAVE CCHHR               YM1472
*                                                                Y02134
         MVC   DXCCW6(K4),DS4VTOCE+K6-DSCB4(RB) SAVE END CCHH    Y02082
         MVC   DXCCW6+K4(K1),DS4DEVDT-DSCB4(RB) SAVE R           Y02082
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        DXCCW6 CONTAINS THE CCHHR OF THE HIGHEST DSCB ON THE    Y02082
*        VTOC                                                    Y02082
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         LA    RD,INFMJFCB              LOAD POINTER TO JFCB     Y02134
         CLC   DXDSABAD,DXDSAB          CHECK IF CURRENT JFCB    Y02134
         BE    DAMV1050                 BRANCH IF CURRENT        Y02134
         LA    RD,TIOEJFCB              POINT TO CURRENT JFCB    Y02134
         IECRES LOCJFCB,(RD)            LOCATE JFCB              Y02134
*                                                                Y02134
DAMV1050 EQU   *                        USE JFCB TTR IF VALID    Y02134
*                                                                Y02134
         CLC   DXVOLSR2,JFCBVOLS-INFMJFCB(RD) FIRST VOLUME       Y02134
         BNE   DAMV1100                 BR IF NOT FIRST VOLUME   Y02134
*                                                                Y02134
         CLC   JFCBDSCB-INFMJFCB(K3,RD),UCBVTOC TTR INVALID OR 0 Y02134
         BL    DAMV1100                 INVALID-SEARCH FULL VTOC Y02134
*                                                                Y02134
         LA    R1,JFCBDSCB-INFMJFCB(,RD) LOAD POINTER TO DSCB    Y02134
         L     RF,IECPCNVT              EPA OF IECPCNVT CONV RTN YM3070
         BALR  RET,RF                   LINK TO CONVERT ROUTINE  YM3070
         LTR   RF,RF                    TTR WITHIN VTOC?         Y02082
         BNZ   DAMV1100                 BR IF TTR OUTSIDE VTOC   Y02082
         CLC   DXDAADDR+K3(K4),DS4VTOCE+K6-DSCB4(RB) CCHH      @ZA02859
*                                       WITHIN THE VTOC        @ZA02859
         BH    DAMV1100                 BRANCH IF NOT            Y02082
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CONSTRUCT CHANNEL PROGRAM TO READ DSCB DIRECTLY         Y02134
*        SEARCH ID EQ                                            Y02134
*        TIC *-8                                                 Y02134
*        SEARCH KEY EQ                                           Y02134
*        NOP  (NO CHAIN BIT, SLI)                                Y02134
*        READ DATA (DSCB)                                        Y02134
*                                                                Y02134
*        CHANNEL PROGRAM TO READ FORMAT 4 IS CORRECT TO READ     Y02082
*        FORMAT 1 EXCPT THE SEARCH KEY EQUAL MUST SEARCH ON 44   Y02082
*        BYTES OF THE JFCB DSNAME AND OMIT THE SLI BIT           Y02082
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02082
         MVI   DXCCW3+K7,L'JFCBDSNM     COUNT OF 44              Y02082
         NI    DXCCW3+K4,ALLBITS-CCWSILI TURN OFF SLI BIT        Y02082
         LA    RF,JFCBDSNM-INFMJFCB(,RD) DATA SET NAME KEY ADDR  Y02082
         STCM  RF,B'0111',DXCCW3+K1     STORE KEY ADDR IN CCW    Y02134
*                                                                Y02082
         EXCP  DXIOB                    READ DSCB VIA EXCP       Y02134
*                                                                Y02134
         IECRES WAIT                    WAIT FOR READ TO FINISH  Y02134
*                                                                Y02134
         TM    DXECB,ECBNOERR           CHECK FOR IO ERROR       Y02134
         BZ    DAMV1100                 BR IF YES, SEARCH VTOC   Y02134
*                                                                Y02134
         LA    RF,DXCCW6                TEST IF CHANNEL PROGRAM  Y02134
         L     R1,IOBCOMAD              TERMINATED AFTER READ    Y02134
         LA    R1,0(R1)                 CCW BY EXAMINING CSW     Y02134
         CR    R1,RF                    STORED IN IOB            Y02134
         BNE   DAMV1100                 BR IF NO, SEARCH VTOC    M0033
*                                                                Y02134
*        DO NOT MOVE CCHHR INTO DXCCW7 FOR THE EXECUTORS UNLESS  Y02134
*        THIS IS THE FIRST DSCB READ                             Y02134
*                                                                Y02134
         LA    RB,K0(,RB)               CLEAR HIGH BYTE          Y02134
         LA    RCORE,K0(,RCORE)         CLEAR HIGH BYTE          Y02134
         CR    RB,RCORE                 IS THIS FIRST DSCB READ  Y02134
         BNE   DAMV1070                 BRANCH IF NOT          @G60ASRB
         MVC   DXCCW7(K5),DXDAADDR+K3   SAVE DSCB CCHHR TO UPDAT Y02134
*                                                                Y02134
         B     DAMV2000                 BRANCH TO PROCESS F1     Y02134
*                                                              @G60ASRB
DAMV1070 EQU   *                        SAVE CCHHR             @G60ASRB
*                                                              @G60ASRB
         MVC   F1CCHHR-F1DATA(,RB),DXDAADDR+K3 MOVE CCHHR OF   @G60ASRB*
                                        F1 DSCB                @G60ASRB
         B     DAMV2000                 PROCESS F1             @G60ASRB
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        START SEARCHING FOR DSCB FROM THE START OF THE VTOC.    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV1100 EQU   *                                                 Y02134
*                                                                Y02134
         L     R1,UCBVTOC               LOAD TTR OF VTOC AND     Y02134
         SRL   R1,K8                    DECREMENT R BY ONE TO    Y02134
         BCTR  R1,R0                    READ COUNT & READ R1     Y02134
         ST    R1,DXWORK1               AFTER SEARCH FOR R0      Y02134
         LA    R1,DXWORK1+K1            POINT TO TTR             Y02134
         L     RF,IECPCNVT              EPA OF IECPCNVT CONV RTN YM3070
         BALR  RET,RF                   LINK TO CONVERT ROUTINE  YM3070
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CONSTRUCT CHANNEL PROGRAM TO READ FORMAT 1 DSCB         Y02082
*                                                                Y02134
*DXCCW1  SEARCH ID EQUAL (VTOC CCHHR)                            Y02082
*DXCCW2  TIC *-8                                                 Y02082
*DXCCW3  TIC TO GETMAIN WORKAREA                                 Y02082
*                                                                Y02134
*        GETMAIN AREA                                            Y02082
*                                                                Y02134
*WACCW1  SEARCH ID EQ MULTI-TRACK (CCHHR OF LAST DSCB IN VTOC)   Y02082
*WACCW2  TIC WACCW6                                              Y02082
*WACCW3  SEARCH KEY EQUAL (DATA SET NAME)                        Y02082
*WACCW4  NOP (COUNT=1, SLI BIT ON)                               Y02082
*WACCW5  TIC WACCW8                                              Y02082
*WACCW6  SEARCH KEY EQUAL (DATA SET NAME)                        Y02082
*WACCW7  TIC WACCW1                                              Y02082
*WACCW8  READ DATA (96 BYTES)                                  @G60ASRB
*WACCW9  READ COUNT (DXCCW7 IF FIRST DSCB, OR F1CCHHR IF NOT)  @G60ASRB
*                                                                Y02082
*****************************************************************Y02082
*                                                                Y02134
*        GO GET STORAGE AREA FOR THE ABOVE CCW'S               @G18MSBS
*                                                              @G18MSBS
         L     RF,ADDRCCWS              GET ADDRESS OF GETCCWS @G18MSBS
         BALR  RET,RF                   GO GET THE WORK AREA   @G18MSBS
*                                                                Y02082
*****************************************************************Y02082
*                                                                Y02082
*        R1 POINTS TO CCW AREA - SAVE IN DXCCW3 AS TIC ADDRESS   Y02082
*                                                                Y02082
*****************************************************************Y02082
*                                                                Y02082
         USING WACCW,R1                                          Y02082
         ST    R1,DXCCW3                SAVE IN DXCCW3           Y02082
         MVI   DXCCW3,CCWTIC            MAKE DXCCW3 A TIC        Y02082
         XC    WACCW1(K72),WACCW1       CLEAR CCWS               Y02082
         LA    RF,DXCCW6                HIGH VTOC CCHHR          Y02082
         ST    RF,WACCW1                STORE IN SERRCH ID HIGH  Y02082
         LA    RF,WACCW6                TIC TO ADDR              Y02082
         ST    RF,WACCW2                SAVE IN TIC              Y02082
         LA    RF,JFCBDSNM-INFMJFCB(,RD) DATA SET NAME           Y02082
         ST    RF,WACCW3                SAVE IN SEARCH KEY       Y02082
         ST    RF,WACCW6                SAVE IN OTHER SEARCH KEY Y02082
         LA    RF,WACCW8                TIC TO ADDR              Y02082
         ST    RF,WACCW5                STORE IN TIC             Y02082
         LA    RF,WACCW1                TIC TO ADDR              Y02082
         ST    RF,WACCW7                STORE IN TIC             Y02082
         LA    RF,K0(,RB)               DSCB BUFFER              Y02082
         ST    RF,WACCW8                STORE IN READ DATA       Y02082
         LA    RF,DXCCW7                COUNT ADDRESS            Y02082
         ST    RF,WACCW9                STORE IN READ COUNT      Y02082
         LA    RCORE,K0(,RCORE)         CLEAR HI BYTE FOR CR     Y02082
         LA    RB,K0(,RB)               CLEAR HI BYTE FOR CR     Y02082
         CR    RB,RCORE                 IS DSCB TO BE READ INTO  Y02082
*                                       DCB WORKAREA             Y02082
         BE    DAMV1150                 BRANCH IF YES          @G60ASRB
         LA    RF,F1CCHHR-F1DATA(,RB)   CCHHR AREA             @G60ASRB
         ST    RF,WACCW9                PUT IN READ COUNT CCW  @G60ASRB
*                                                              @G60ASRB
DAMV1150 EQU   *                        OR IN OP CODES         @G60ASRB
*                                                              @G60ASRB
         OC    WACCW1(K72),ODA0650K     OR IN CMDS,FLGS,COUNTS @G60ASRB
*                                                              @G60ASRB
         NI    DXFLAG1,X'FF'-DXEX0A01   ZERO THE SECOND PASS   @G60ASRB*
                                        BIT                    @G60ASRB
         EJECT                                                 @G60ASRB
*                                                                Y02134
DAMV1200 EQU   *                        READ A FORMAT 1 DSCB     YM1472
*                                                                Y02134
         EXCP  DXIOB                    READ DSCB VIA EXCP       Y02134
*                                                                Y02134
         IECRES WAIT                    WAIT FOR READ TO FINISH  Y02134
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
*        CHECK FOR I/O ERROR                                     Y02082
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR      Y02082
         BO    DAMV1300                 BR IF NO                 YM1472
*                                                                YM1472
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY    YM3925
*        EVEN IF NOT IN USERS DCB.                               YM3925
         TM    DCBDSORG,DCBDSGPO        TEST FOR BPAM DATA SET   YM3925
         LA    R0,K2                    OPEN=213-0C EOV=737-0C   YM3925
         BO    DAMV9100                 BRANCH, BPAM ERROR       YM3925
*                                                                YM3925
         LA    R0,K3                    OPEN=213-04 EOV=737-04   YM1459
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    YM1472
         BO    DAMV9100                 BRANCH EXCP, ASSUME PS   YM1472
         NC    DCBDSORG,DCBDSORG        CHECK IF DSORG SPECIFIED YM1472
         BZ    DAMV9100                 BRANCH 0, ASSUME PS      YM1472
         TM    DCBDSORG,DCBDSGPS        PHYSICAL SEQUENTIAL DCB  YM1472
         BO    DAMV9100                 BRANCH IF DSORG=PS       YM1472
*                                                                YM1472
         LA    R0,K2                    OPEN=213-0C EOV=737-0C   YM1472
         B     DAMV9100                 BRANCH IF NOT PS         YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
*        IF CSW INDICATES CHANNEL PROGRAM ENDED AT NOP, DSCB     YM1472
*        WAS NOT READ. THE DATA SET IS NOT ON THE VOLUME.        YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
DAMV1300 EQU   *                        CHECK FOR NO DSCB        YM1472
*                                                                YM1472
         L     RF,IOBCOMAD              CSW'S ENDING CCW+8       YM1472
         LA    RF,K0(,RF)               CLEAR HIGH BYTE          YM1472
         L     R1,DXCCW3                CCW AREA                 YM1472
         LA    R1,WACCW5                CCW PAST NOP             YM1472
         CR    RF,R1                    ARE THEY EQUAL           YM1472
         BE    DAMV1350                 BRANCH IF YES-NO DSCB    YM1472
         CLI   DXDSCB-DXDSCB(RB),CHAR1  FORMAT 1 ID              YM1472
         BE    DAMV1500                 BRANCH IF DATA SET FOUND YM1472
         DROP  R1                                                YM1472
*                                                                Y02134
DAMV1350 EQU   *                        PROCESS NO DSCB          YM1472
*                                                                Y02134
*                                                              @G60ASRB
*        CALL THE DSCB NOT FOUND INSTALLATION EXIT. RETURN     @G60ASRB
*        WILL CONTAIN RETURN CODE IN REG 15.                   @G60ASRB
*          0 - CONTINUE                                        @G60ASRB
*          4 - RETRY READ OF DSCB                              @G60ASRB
*          8 - EXIT ERROR                                      @G60ASRB
*                                                              @G60ASRB
         L     RF,DSNOTFA               SUBROUTINE ADDRESS     @G60ASRB
         BALR  RET,RF                                          @G60ASRB
         B     DAMV1360(RF)                                    @G60ASRB
DAMV1360 EQU   *                        TEST RESULT            @G60ASRB
         B     DAMV1370                 CONTINUE               @G60ASRB
         B     DAMV1200                 RETRY                  @G60ASRB
         B     DAMV9900                 ABEND                  @G60ASRB
*                                                              @G60ASRB
DAMV1370 EQU   *                        DSCB NOT FOUND         @G60ASRB
*                                                              @G60ASRB
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY    YM3925
*        EVEN IF NOT IN USERS DCB.                               YM3925
         TM    DCBDSORG,DCBDSGPO        TEST FOR BPAM DATA SET   YM3925
         LA    R0,K2                    OPEN=213-0C EOV=737-0C   YM3925
         BO    DAMV9100                 BRANCH, BPAM ERROR       YM3925
*                                                                YM3925
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    Y02134
         BO    DAMV1400                 BRANCH EXCP, ASSUME PS   Y02134
*                                                                Y02134
         NC    DCBDSORG,DCBDSORG        CHECK IF DSORG SPECIFIED Y02134
         BZ    DAMV1400                 BRANCH 0, ASSUME PS      Y02134
*                                                                Y02134
         TM    DCBDSORG,DCBDSGPS        PHYSICAL SEQUENTIAL DCB  Y02134
         LA    R0,K2                    OPEN=213-0C EOV=737-0C   Y02134
         BNO   DAMV9100                 BRANCH IF NOT PS         Y02134
*                                                                Y02134
DAMV1400 EQU   *                        CHECK IF OUTPUT          YM1472
*                                                                Y02134
         TM    DXDCBLST,PLISTOIN        TEST FOR OUTPUT          YM1459
         LA    R0,K3                    OPEN=213-04 EOV=737-04   YM1459
         BNO   DAMV9100                 BRANCH IF INPUT NO DSCB  YM1459
*                                                                YM1459
         CLC   WTGMODNM+K3(K3),DAMVEOV  TEST FOR EOV             Y02134
         BNE   DAMV1450                 BRANCH IF NOT EOV        Y02134
*                                                                Y02134
         EJECT
*                                                                Y02083
*****************************************************************Y02083
*                                                                Y02083
*        EOV CHECKPOINT DATA SET PROCESSING                      Y02083
*                                                                Y02083
*****************************************************************Y02083
*                                                                Y02083
         L     RF,DXDSAB                FETCH DSAB ADDRESS       YM1311
         TM    DSABFLG4-DSAB(RF),DSABCKDS TEST FOR CHKPT D/S     YM1311
         BZ    DAMV1420                 IF NOT, CONTINUE       @G18MSBS
*                                                                YM3925
         LA    RET,K52                  CAN VOL BE SECURED       YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDR         YM3925
         BALR  RC,RF                    ISSUE MESSAGE            YM3925
*                                                                YM3925
         LA    R0,K10                   OPEN=NA EOV=937-10       YM3925
         BNE   DAMV7510                 BRANCH IF NOT SECURE     YM5957
         L     RF,DXDSAB                FETCH DSAB ADDRESS       YM5957
         MODESET EXTKEY=SCHED           ASSUME DSAB KEY          YM5957
         OI    DSABFLG4-DSAB(RF),DSABCKVL SET SECURE BIT         YM5957
         MODESET EXTKEY=DATAMGT         RESUME D/M KEY           YM5957
         EJECT
*                                                              @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
**       FOR JES3 MANAGED UNIT, OFFER VOLUME CHOICE TO JES3    @G18MSBS
**       FOR APPROVAL BEFORE TRYING TO EXTEND ON NEW VOLUME    @G18MSBS
*                                                              @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
DAMV1420 EQU   *                                               @G18MSBS
         TM    UCBJBNR,UCBJES3          DOES JES3 MANAGE UNIT? @G18MSBS
         BNO   DAMV1430                 NO, CONTINUE           @G18MSBS
         TM    UCBTBYT2,UCBRVDEV        YES, THEN VIRTUAL VOL? @G18MSBS
         BNO   DAMV1430                 NO, CONTINUE           @G18MSBS
         XR    RC,RC                    SET FIRST PASS SWITCH  @G18MSBS
         L     RF,JES3ROUT              GET JES3 ROUTINE ADDR  @G18MSBS
         BALR  RET,RF                   BRANCH TO JES3 ROUTINE @G18MSBS
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
*        TRY TO EXTEND ON NEW VOLUME                             YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
DAMV1430 EQU   *                                                 Y02083
*                                                              @ZA04643
***************************************************************@ZA04643
*                                                              @ZA04643
*        THE FORMAT1 DSCB HAS NOT BEEN FOUND ON THE NEW        @ZA04643
*        VOLUME. THEREFORE, SET THE 'TREAT AS NEW' INDICATOR   @ZA04643
*        IN THE DEB SO THAT THE NEXT EOV WILL TREAT THE DATA   @ZA04643
*        SET AS IF IT WERE NEW AND FOLLOW THE NORMAL RULES     @ZA04643
*        FOR OBTAINING SPACE ON THE VOLUME.                    @ZA04643
*                                                              @ZA04643
***************************************************************@ZA04643
*                                                              @ZA04643
         L     RET,DCBDEBAD             GET DEB ADDR           @ZA04643
         SR    RF,RF                    ZERO WORK REG          @ZA04643
         IC    RF,DEBNMEXT-DEBBASIC(RET) GET NUMBER OF EXTENTS @ZA04643
         SLL   RF,4                     MPY BY 16-BYTES/EXT    @ZA04643
         AR    RF,RET                   ADD DEB BASE ADDR      @ZA04643
         OI    DEBVOLSQ-DEBVOLSQ+DEBSUCBA-DEBBASIC(RF),JFCMOD  @ZA04643
*                                       TURN ON TREAT AS       @ZA04643
*                                       NEW SW IN DEB          @ZA04643
DAMV1435 EQU   *                                               @ZA04643
         MVI   DXRETCOD,K4              SET UP RETURN OFFSET     Y02134
         MVC   DXRETMOD,ID4C4C          SET UP RETURN MODULE     Y02134
         MVI   DXEXTSW,CHAR00           ZERO EXTEND SWITCH       Y02082
         LA    RCORE,K0(RCORE)          ZERO HI BYTE           @ZA08882
         ST    RCORE,CORECH(,RCORE)     REUSE W.A. FOR F1      @ZA05097
*                                                                Y02134
         IECRES LOAD,MODNM=IFG0554P,BRCODE=K8,BRANCH=QUEUED      Y02080
         EJECT
*                                                                Y02134
*****************************************************************YM1472
*                                                                YM1472
*        CHECK FOR DISP=MOD AND OUTPUT                           YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
DAMV1450 EQU   *                                                 Y02082
*                                                                Y02134
*                                       TEST FOR DISP=MOD        Y02134
         TM    JFCBIND2-INFMJFCB(RD),JFCOLD NOT OLD OR NEW       Y02134
         LA    R0,K3                    OPEN=213-04 EOV=737-04   Y02134
         BO    DAMV9100                 BRANCH IF NOT MOD        Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02082
*        IF JFCBVLSQ IS GREATER THAN 1, IT MUST HAVE BEEN        Y02134
*        SPECIFIED IN THE DD STATEMENT.  A FAILURE TO FIND       Y02134
*        THE INITIAL DSCB ON VOLUME 1 WILL RESULT IN A 213       Y02134
*        ABEND, SINCE THERE CAN BE NO RECOVERY WHEN              Y02134
*        THE DATA SET IS NOT EVEN ON THE FIRST VOLUME.           Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02082
         CLC   JFCBVLSQ-INFMJFCB(L'JFCBVLSQ,RD),ONE VOL SEQ GE 1 Y02134
         LA    R0,K3                    OPEN=213-04 EOV=737-04   Y02134
         BNL   DAMV9100                 BR IF YES TO 213 ABEND   Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        DISP=MOD ERROR RECOVERY                                 Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         ST    RB,CORECH(,RB)           CHAIN FOR REUSE          Y02134
         MVI   DXEXTSW,ALLBITS          DSCB NOT FOUND INDICATOR Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID4C4A,BRCODE=K20,BRANCH=QUEUED       Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        IF THE VTOC DSCB SEARCH JUST DONE WAS FOR THE FIRST     Y02134
*        VOLUME, UPDATE THE JFCB DSCB TTR SO THAT THE DSCB CAN   Y02134
*        BE READ DIRECTLY THE NEXT TIME THE DATA SET IS OPENED.  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV1500 EQU   *                                                 Y02134
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
*        IF R IN COUNT READ IS 1, THE COUNT OF THE DSCB READ IS  Y02082
*              THE LAST ON THE TRACK                             Y02082
*        OTHERWISE R MUST BE REDUCED BY ONE AS THE COUNT OF      Y02082
*              RECORD R+1 WAS READ                               Y02082
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         USING WACCW,R1                 R1 POINTS TO CCWS        YM1472
         L     R1,DXCCW3                CCW AREA                 Y02082
         L     RF,WACCW9                CCHHR OF NEXT DSCB     @G60ASRB
         CLI   K4(RF),K1                IS RECORD NO. 1        @ZA30123
         BE    DAMV1550                 BR IF YES                Y02082
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02082
*        REDUCE R BY 1 AS CCHHR IS OF DSCB PAST THE ONE READ     Y02082
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
         SR    R1,R1                    ZERO FOR IC              Y02082
         IC    R1,K4(RF)                RECORD NUMBER          @G60ASRB
         BCTR  R1,K0                    REDUCE BY 1              Y02082
         STC   R1,K4(RF)                RESTORE                @G60ASRB
         B     DAMV1600                 BRANCH TO FREE WORKAREA  Y02082
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
*        R IS 1 - R SHOULD BE HIGH R ON TRACK                    Y02082
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
DAMV1550 EQU   *                                                 Y02082
*                                                                Y02082
         MVC   K4(K1,RF),DXCCW6+K4      HIGH R ON VTOC TRACK   @G60ASRB
         EJECT
*                                                                Y02082
*****************************************************************Y02134
*                                                                Y02082
*        FREE CCW AREA                                           YM1472
*                                                                YM1472
*****************************************************************Y02134
*                                                                YM1472
DAMV1600 EQU   *                                                 Y02082
*                                                                Y02082
         L     R1,DXCCW3                WORKAREA CCW CORE ADDR   Y02082
         LA    R1,WACCW                 CLEAR HI BYTE            YM1472
         DROP  R1                                                YM1472
*                                                                YM1472
         L     RF,ADDRFREE              GET ADDRESS OF FREECCW @G18MSBS
         BALR  RET,RF                   GO FREE CCW WORKAREA   @G18MSBS
*                                                                Y02134
         LA    RCORE,K0(RCORE)          SET HI ORDER BYTE TO 0   Y02134
         LA    RB,K0(RB)                SET HI ORDER BYTE TO 0   Y02134
         CR    RCORE,RB                 CHECK FOR INCORE JFCB    Y02134
         BNE   DAMV2000                 BRANCH NOT FIRST DSCB    Y02134
*                                                                Y02134
         TM    JFCBTSDM,JFCNDSCB        DSCB-JFCB MERGE INHIBITD Y02134
         BO    DAMV2000                 BRANCH IF MERGE IHIBITED Y02134
*                                                                Y02134
         MVC   DXDAADDR+K3(K5),DXCCW7   ADD ACTUAL CCHHR TO MBB  Y02134
         L     RF,IECPRLTV              EPA OF IECPRLTV CONV RTN YM3070
         BALR  RET,RF                   LINK TO CONVERT ROUTINE  YM3070
*                                                                Y02134
         STCM  R0,B'1110',JFCBDSCB      UPDATE TTR IN JFCB       Y02134
         OI    JFCBMASK+K6,JFCMCTTR     SET RE-CATALOG DSCB TTR  Y02134
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SWITCH ON   Y02134
         EJECT
*                                                                Y02072
*****************************************************************Y02072
*                                                                Y02072
*        CHECK FOR DOS COMPATIBILITY                             Y02072
*        NO SPLIT CYLINDER EXTENTS EXCEPT THE FIRST              Y02134
*        IGNORE USER LABEL EXTENT                                Y02134
*                                                                Y02072
*****************************************************************Y02072
*                                                                Y02134
DAMV2000 EQU   *                                                 Y02134
*                                                                Y02134
         XR    RF,RF                    CLEAR REG FOR IC INST    Y02134
         IC    RF,DSCNOEXT-DXDSCB(,RB)  GET NO OF EXTENTS        Y02134
         CLI   DSCEXTYP-DXDSCB(RB),X40  CHECK FOR UL EXTENT      Y02134
         BNE   DAMV2010                 BRANCH IF NOT UL EXTENT  Y02134
         LA    RF,K1(,RF)               REFLECT UL EXTENT        Y02134
         STC   RF,DXWORK                SAVE NO OF EXTENTS       Y02134
         B     DAMV2020                 BRANCH, CHECK 3RD EXTENT Y02134
*                                                                Y02134
*****************************************************************Y02072
*                                                                Y02134
*        CHECK FOR SPLIT CYLINDERS ON SECOND EXTENT              Y02134
*                                                                Y02134
*****************************************************************Y02072
*                                                                Y02134
DAMV2010 EQU   *                                                 Y02134
*                                                                Y02072
         STC   RF,DXWORK                SAVE NO OF EXTENTS       Y02134
*                                                                Y02134
         CLI   DXWORK,K2                CHECK FOR 2ND EXTENT     Y02072
         BL    DAMV2030                 BRANCH IF NO 2ND EXTENT  Y02072
*                                                                Y02134
         CLI   DSCEXT1-DXDSCB(RB),X80   IS THIS A SPLIT CYLINDER?Y02072
         LA    R0,K9                    OPEN=213-24 EOV=C37-08   Y02134
         BE    DAMV9100                 YES - GO TO PROB DET     Y02072
*                                                                Y02134
*****************************************************************Y02072
*                                                                Y02134
*        CHECK FOR SPLIT CYLINDERS ON THIRD EXTENT               Y02134
*                                                                Y02134
*****************************************************************Y02072
*                                                                Y02134
DAMV2020 EQU   *                                                 Y02072
*                                                                Y02134
         CLI   DXWORK,K3                CHECK FOR 3RD EXTENT     Y02072
         BL    DAMV2030                 BRANCH IF NO 3RD EXTENT  Y02072
*                                                                Y02134
         CLI   DSCEXT2-DXDSCB(RB),X80   IS THIS A SPLIT CYLINDER?Y02072
         LA    R0,K9                    OPEN=213-24 EOV=C37-08   Y02134
         BE    DAMV9100                 YES - GO TO PROB DET     Y02072
*                                                                Y02072
*****************************************************************Y02072
*                                                                Y02072
*        CHECK FOR DOS COMPATIBILITY                             Y02072
*                                                                Y02072
*****************************************************************Y02072
*                                                                Y02134
DAMV2030 EQU   *                                                 Y02072
*                                                                Y02134
         CLI   DXWORK,K16               MORE THAN 16 EXTENTS?    Y02072
         LA    R0,K8                    OPEN=213-20 EOV=C37-04   Y02134
         BH    DAMV9100                 YES - GO TO PROBLEM DET  Y02072
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        F1 DSCB HAS BEEN READ                                   Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV2100 EQU   *                        F1 DSCB PROCESSING       Y02134
*                                                                Y02134
         L     RF,ISAMRTN                                      @ZA26665
         BALR  RET,RF                   CHK ISAM NO NEXT DSCB  @ZA26665
DAMV2105 CLC   DAMVEOV,WTGMODNM+K3      CHECK FOR EOV          @ZA26665
         BE    DAMV2150                 BRANCH IF EOV            YM3070
         LA    RCORE,DXDSCB             CLEAR HI BYTE            YM3070
         LA    RB,DXDSCB-DXDSCB(,RB)    CLEAR HI BYTE            YM3070
         CR    RCORE,RB                 CHECK FOR 1ST VOL MOUNT  YM3070
         BNE   DAMV2150                 BRANCH IF NOT FIRST      YM3070
         NC    DCBDSORG,DCBDSORG        SEE IF DSORG SPECIFIED   YM3070
         BNZ   DAMV2150                 BRANCH IF SPECIFIED      YM3070
         TM    DSCFILTY+K1,ACBDORGA     TEST FOR VSAM            YM3070
         BO    DAMV2150                 BRANCH IF VSAM           YM3070
         NC    DSCFILTY,DSCFILTY        CHECK FOR DSORG IN DSCB  YM3070
         BZ    DAMV2150                 BRANCH IF NO DSORG       YM3070
*                                                                YM3070
*        MERGE DSORG IN COPY EVEN IF FIELD DOES NOT EXIST FOR    YM3925
*        EXCP. IT WILL BE IGNORED EXCEPT FOR BPAM DSORG=PO.      YM3925
         MVC   DCBDSORG,DSCFILTY        MERGE DSORG TO DCB       YM3070
         OI    JFCBMASK+K3,X01          DSORG MERGE MASK         YM3070
*                                                                YM3070
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP ORG        YM3925
         BNO   DAMV2110                 BRANCH IF NOT EXCP       YM3925
         TM    DCBMACRF,DCBMFOUN        DOES DSORG FIELD EXIST   YM3925
         BNO   DAMV2150                 BRANCH IF NO DSORG       YM3925
*                                                                YM3925
DAMV2110 EQU   *                        DSORG=PS NEEDS NO RECOPY YM3925
*                                                                YM3925
         TM    DCBDSORG,DCBDSGPS        TEST FOR PS              YM3070
         BO    DAMV2150                 BRANCH IF SPECIFIED      YM3070
*                                                                YM3070
*****************************************************************Y02134
*                                                                Y02134
*        RECOPY DCB WITH PROPER SIZE                             YM3070
*                                                                Y02134
*****************************************************************Y02134
*                                                                YM3070
         L     RDCB,DXUDCBAD            SAVE USER DCB PTR        YM3070
         ICM   RDCB,B'1000',DXUKEY      SAVE USER KEY            YM3070
         MVC   DXUDCBAD,DXPDCBAD        SET USER=PROTECT         YM3070
         MVI   DXUKEY,DATAMGT           SET DM KEY               YM3070
*        GET PROPER SIZE AREA FOR NEW DCB (DSORG IS DIFFERENT)   YM3070
         IECRES INIT,DCBCOPY=TOWKAR,STM=(2,14,WTGPREFX),         YM3070X
               PREFIX=WTGPREFX                                   YM3070
*                                                                YM3070
         STCM  RDCB,B'1000',DXUKEY      RESTORE KEY              YM3070
         STCM  RDCB,B'0111',DXUDCBAD+K1 RESTORE USER DCB ADDRESS YM3070
         L     RDCB,DXPDCBAD            LOAD COPY DCB ADDRESS    YM3070
         L     R1,DXDEBXAD              LOAD DEB EXTENSION ADDR  YM3070
         USING DEBXTN,R1                R1 POINTS TO DEB EXT     YM3070
         MVC   DEBXDSO1(L'DCBDSORG),DCBDSORG UPDATE DEBX DSORG   YM3070
         DROP  R1                                                YM3070
*                                                                YM3070
*        RESTORE DCB FROM ORIGINAL WITH PROPER LENGTH            YM3070
         IECRES INIT,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX),         YM3070X
               PREFIX=WTGPREFX                                   YM3070
*                                                                YM3070
         TM    DCBDSORG,DCBDSGDA        DSORG=DA                 YM3925
         BZ    DAMV2150                 BR IF NO                 YM3070
*                                                                YM3070
         MVI   DCBDRDX,K0               INITIALIZE EXTENTS TO 0  YM3070
         EJECT
*                                                                YM3070
DAMV2150 EQU   *                        CHECK AM DEPND PROCESS   YM3070
*                                                                YM3070
         CLC   WTGMODNM+K3(K3),DAMVEOV  TEST FOR EOV           @ZA02209
         BNE   DAMV2155                 NO, BR TO CONTINUE     @G18MSBS
         TM    DCBMACRF,DCBMEXCP        EXCP?                  @ZA02209
         BO    DAMV2155                 YES, BR TO CONTINUE    @G18MSBS
         TM    DCBCIND2,DCBC2PUT        TEST FOR EOV CALLED BY @ZA02209
*                                       CLOSE EXECUTORS WHEN   @ZA02209
*                                       FLUSHING THE BUFFERS   @ZA02209
         BZ    DAMV2155                 NO, BR TO CONTINUE     @G18MSBS
         L     RET,DCBDEBAD             GET DEB ADDRESS        @ZA02209
         OI    DEBFLGS1-DEBBASIC(RET),DEBF1CEV SET INDICATOR IN@ZA02209
*                                       DEB TO TELL CLOSE TO   @ZA02209
*                                       READ FORMAT1 DSCB      @ZA02209
*                                       ON NEW VOLUME          @ZA02209
         EJECT
*                                                              @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
**       FOR JES3 MANAGED UNIT, OFFER VOLUME CHOICE TO JES3    @G18MSBS
**       FOR APPROVAL BEFORE CONTINUING                        @G18MSBS
*                                                              @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
DAMV2155 EQU   *                                               @G18MSBS
         TM    UCBJBNR,UCBJES3          DOES JES3 MANAGE UNIT? @G18MSBS
         BNO   DAMV2160                 NO, CONTINUE           @G18MSBS
         TM    UCBTBYT2,UCBRVDEV        YES, THEN VIRTUAL VOL? @G18MSBS
         BNO   DAMV2160                 NO, CONTINUE           @G18MSBS
         LA    RC,K4                    SET FINAL PASS SWITCH  @G18MSBS
         L     RF,JES3ROUT              GET JES3 ROUTINE ADDR  @G18MSBS
         BALR  RET,RF                   BRANCH TO JES3 ROUTINE @G18MSBS
         SPACE 3
***************************************************************@G18MSBS
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY    YM3925
*        EVEN IF NOT IN USERS DCB.                               YM3925
*                                                              @ZA02209
DAMV2160 EQU   *                                               @ZA02209
*                                                              @ZA02209
         TM    DCBDSORG,DCBDSGPO        TEST FOR BPAM DATA SET   YM3925
         BO    DAMV2300                 BRANCH IF BPAM           YM3925
*                                                                YM3925
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    Y02134
         BO    DAMV2200                 BRANCH IF EXCP           YM1228
*                                                                Y02134
         NC    DCBDSORG,DCBDSORG        CHECK IF DSORG SPECIFIED Y02134
         BZ    DAMV2200                 BRANCH 0, ASSUME PS      Y02134
*                                                                Y02134
         TM    DCBDSORG,DCBDSGPS        PHYSICAL SEQUENTIAL DCB  Y02134
         BNO   DAMV2300                 BRANCH IF NOT PS         Y02134
*                                                                Y02134
DAMV2200 EQU   *                        DSORG=PS                 YM1472
*                                                                Y02134
         CLC   WTGMODNM+K3(K3),DAMVEOV  CHECK FOR EOV            Y02134
         BNE   DAMV2210                 BRANCH IF NOT EOV        YM1108
*                                                                YM1108
         CLI   DXEXTSW,X04              CHECK IF DS EXTENDED     YM1174
         BE    DAMV3000                 BRANCH YES, CONTINUE     YM3925
*                                                                YM1108
         CLC   DXVOLSR2,SCRTCH          NON-SPECIFIC REQUEST     YM1108
         BNE   DAMV2400                 BRANCH IF SPECIFIC REQ   YM1108
         B     DAMV7500                 GET NEW VOLUME           YM6514
         EJECT
*                                                                YM1108
DAMV2210 EQU   *                        TEST FOR DISP=MOD        YM1108
*                                                                Y02134
         TM    DXDCBLST,PLISTOIN        TEST FOR OUTPUT          YM1459
         BNO   DAMV2410                 BRANCH IF INPUT          YM1459
*                                                                YM1459
         TM    JFCBIND2-INFMJFCB(RD),JFCOLD NOT OLD OR NEW       Y02134
         BO    DAMV2410                 BRANCH IF NOT MOD        YM1108
         TM    DSCDSIND-DXDSCB(RB),X80  LAST VOLUME INDICATOR    Y02134
         BO    DAMV2410                 BRANCH IF LAST VOLUME    YM1108
         XR    RF,RF                    CLEAR REG FOR IC INST    Y02134
         IC    RF,JFCBNVOL              GET NUMBER OF VOLUMES    Y02134
         CH    RF,DXVOLSEQ              CHECK FOR LAST VOLUME    Y02134
         BNH   DAMV2410                 BRANCH IF LAST VOLUME    YM1108
         BCTR  RF,R0                    DECREMENT TO N-1 VOLUME  Y02134
         CH    RF,DXVOLSEQ              CHECK FOR N-1 VOLUME     Y02134
         BNH   DAMV2410                 ACCEPT IF N-1 VOLUME     YM1108
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        LAST VOLUME INDICATOR WAS NOT SET BEFORE RELEASE 17.    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         TM    DXEXTSW,ALLBITS          TEST FOR USE VOL FOR MOD Y02134
         BO    DAMV2410                 BRANCH, USE ANYWAY       YM1108
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        DISP=MOD ERROR RECOVERY                                 Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         ST    RB,CORECH(,RB)           CHAIN FOR REUSE          Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID4C4A,BRCODE=K20,BRANCH=QUEUED       Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CHECK FOR ASCENDING VOLUME SEQUENCE NUMBER IN FORMAT 1  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV2300 EQU   *                        DSORG NOT PS             YM1472
*                                                                Y02134
         CLC   DXVOLSEQ,DS1VOLSQ-DS1FMTID(RB) COMPARE VOL SEQ NO Y02134
         LA    R0,K6                    OPEN=03D-04 EOV=NA       Y02080
         BH    DAMV2360                 BR IF NOT SAME         @ZA09644
*                                                                Y02134
         TM    DSCFILTY-DXDSCB(RB),DCBDSGPO TEST FOR BPAM F1     YM7817
         BNO   DAMV2340                 BRANCH IF NOT PO         Y02134
*                                                                Y02134
         TM    DCBDSORG,DCBDSGPO        TEST FOR BPAM            YM7817
         LA    R0,K10                   OPEN=013-14 EOV=NA       Y02080
         BNO   DAMV9900                 BRANCH IF NOT SAME       Y02134
*                                                                Y02134
DAMV2340 EQU   *                        TEST FOR BDAM            YM1472
*                                                                Y02134
         TM    DCBDSORG,DCBDSGDA        TEST IF BDAM             Y02134
         BZ    DAMV2350                 BR IF NO                 Y02134
*                                                                Y02134
         SR    R0,R0                    GET NO. OF BDAM EXTENTS  Y02134
         IC    R0,DCBDRDX               SO FAR FROM DCB          Y02134
         SR    R1,R1                    GET BDAM EXTENTS ON THIS Y02134
         IC    R1,DS1NOEPV-DS1FMTID(,RB) VOL FROM FORMAT 1 DSCB  Y02134
         AR    R0,R1                    ADD TO CURRENT TOTAL     Y02134
         STC   R0,DCBDRDX               UPDATE COUNT IN DCB      Y02134
*                                                                Y02134
DAMV2350 EQU   *                        TEST FOR ISAM            YM1472
*                                                                Y02134
         TM    DCBDSORG,DCBDSGIS        TEST FOR ISAM            Y02134
         BNO   DAMV2400                 BRANCH IF NOT ISAM       YM1108
*                                                              @ZA09644
DAMV2355 EQU   *                                               @ZA09644
*                                                              @ZA09644
         MVC   DSCSCALO-DXDSCB(L'DSCSCALO,RB),DXUCBADR ISAM UCB  Y02134
         CLC   DXDSABAD,DXDSAB          COMPARE FIRST TO CURRENT Y02134
         BE    DAMV2400                 BR IF FIRST IS CURRENT   YM3807
         LA    R0,K11                   913-2C ERROR CODE        Y02082
         CLC   JFCBDSNM(L'JFCBDSNM),JFCBDSNM-INFMJFCB(RD) IS     Y02082
*                                       CURRENT DSN THE SAME AS  Y02082
*                                       THE FIRST JFCB'S         Y02082
         BNE   DAMV9900                 BRANCH IF NO TO ABEND    Y02082
         B     DAMV3000                 BRANCH TO CONTINUE       Y02082
         EJECT                                                 @ZA09644
*                                                              @ZA09644
***************************************************************@ZA09644
*                                                              @ZA09644
*      CHECK ISAM ASCENDING SEQUENCE NUMBER IN DSCB            @ZA09644
*                                                              @ZA09644
***************************************************************@ZA09644
*                                                              @ZA09644
DAMV2360 EQU   *                                               @ZA09644
*                                                              @ZA09644
         TM    DCBDSORG,DCBDSGIS        TEST FOR ISAM          @ZA09644
         BNO   DAMV9900                 NO, CONTINUE ABEND     @ZA09644
*                                                              @ZA09644
         CR    RB,RCORE                 TEST IF FIRST AREA     @ZA09644
         BE    DAMV9900                 YES, CONTINUE ABEND    @ZA09644
*                                                              @ZA09644
         LR    RB,RCORE                 GET FIRST ARE POINTER  @ZA09644
         LH    R0,DS1VOLSQ-DS1FMTID(,RB) GET VOLUME SEQUENCE   @ZA09644
*                                       NUMBER FROM FIRST DSCB @ZA09644
DAMV2370 EQU   *                                               @ZA09644
*                                                              @ZA09644
         AH    R0,ONE                   ADD ONE TO IT          @ZA09644
*                                                              @ZA09644
DAMV2380 EQU   *                                               @ZA09644
*                                                              @ZA09644
         NC    CORECH(K4,RB),CORECH(RB) IS THERE A NEXT AREA   @ZA09644
         BZ    DAMV2355                 NO, BR, DON'T ABEND    @ZA09644
         L     RB,CORECH(,RB)           POINT TO NEXT AREA     @ZA09644
         CLI   DXDSCB-DXDSCB(RB),CHAR1  IS IT A FMT 1 AREA     @ZA09644
         BNE   DAMV2390                 BRANCH IF NOT          @ZA09644
         CH    R0,DS1VOLSQ-DS1FMTID(,RB) IS VOLUME SEQUENCE    @ZA09644
*                                        NUMBER NEXT IN        @ZA09644
*                                        ASCENDING SEQUENCE    @ZA09644
         BE    DAMV2370                 YES, CHECK NEXT AREA   @ZA09644
         LA    R0,K6                    OPEN=03D-04, EOV=NA    @ZA09644
         B     DAMV9900                 BRANCH TO ABEND        @ZA09644
*                                                              @ZA09644
DAMV2390 EQU   *                                               @ZA09644
*                                                              @ZA09644
         LA    RB,L'JFCBDSNM(,RB)       INCREMENT PASSED KEY   @ZA09644
         B     DAMV2380                 CHECK NEXT AREA        @ZA09644
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CHECK EXPIRATION DATE                                   Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV2400 EQU   *                        EOV AND NON-PS ENTRY     YM1108
*                                                                YM1108
         CLC   DXVOLSR2,JFCBVOLS-INFMJFCB(RD) FIRST VOLUME       Y02134
         BNE   DAMV2500                 BR IF NOT FIRST VOLUME   Y02083
*                                       TO CHECK FOR SECURITY    Y02082
*                                                                Y02134
DAMV2410 EQU   *                        OPEN DSORG=PS ENTRY      YM1108
*                                                                Y02134
         TM    JFCBIND2-INFMJFCB(RD),JFCNEW CHECK FOR NEW        Y02134
         BO    DAMV2500                 BR IF NEW                Y02082
         TM    DXDCBLST,OUTPUT          INPUT OR RDBACK CHECK    Y02134
         BZ    DAMV2500                 BRANCH IF EITHER         Y02134
*                                                                Y02134
         L     RF,DOCVTD                 CVTDATE TO DXWORK2    @G60ASRB
         BALR  RET,RF                    CALL DATE ROUTINE     @G60ASRB
*                                                                Y02134
         CLC   DSCEXPDT-DXDSCB(K3,RB),DXWORK2+K1 BIN TO BIN VALU Y02134
         BNH   DAMV2500                 BR IF DATE HAS EXPIRED   Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        GO TO ERROR ROUTINE TO WRITE EXPIRATION DATE            Y02134
*        ERROR MESSAGE TO THE OPERATOR, AND WAIT FOR             Y02134
*        HIS REPLY TO USE OR NOT USE THE DATA SET.               Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV2440 EQU   *                                                 Y02134
*                                                                Y02134
         MVC   DXRETMOD,ID4C4C          RETURN ID TO SAVE AREA   Y02134
         MVI   DXRETCOD,K8              SET RETURN INDICATOR     Y02134
*                                                                Y02134
         XC    DXWORK1,DXWORK1          SET REPLY AREA TO BLANKS Y02134
         LA    R1,DXWORK1               POINT TO REPLY AREA      Y02134
         LA    R0,K1                    SET REPLY LENGTH         Y02134
         SLL   R0,K24                   MOVE LENGTH TO HI BYTE   Y02134
         OR    R1,R0                    SET UP WTOR PARM         Y02134
         LA    R0,JFCBDSNM-INFMJFCB(,RD) GET DSNAME ADDRESS      Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID4C4J,BRCODE=K20,BRANCH=QUEUED       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        RETURN HERE FROM EXPIRATION CHECK                       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV2450 EQU   *                                                 Y02134
*                                                                Y02134
         IECRES WAIT                    WAIT FOR OPERATOR REPLY  Y02134
*                                                                Y02134
         OI    DXWORK1,BLANK            FOLD REPLY               Y02134
         CLI   DXWORK1,CHARU            CHECK FOR REPLY U        Y02134
         BE    DAMV2500                 BRANCH TO USE            Y02134
*                                                                Y02134
         CLI   DXWORK1,CHARM            CHECK IF REJECT          Y02134
         BNE   DAMV2440                 BRANCH, INCORRECT REPLY  Y02134
*                                                                Y02134
         B     DAMV7500                 BRANCH TO REJECT VOLUME  Y02134
         EJECT
*                                                                Y02134
***************************************************************@Z40RSDH
*                                                              @Z40RSDH
*        TEST FOR RAC AUTHORIZATION                            @Z40RSDH
*                                                              @Z40RSDH
***************************************************************@Z40RSDH
DAMV2500 EQU   *                        RAC CHECK              @Z40RSDH
         L     RF,RACRTN                GET RAC ROUTINE        @Z40RSDH
         BALR  RET,RF                   CHK RAC AUTH TO D.S.   @Z40RSDH
*                                                              @Z40RSDH
*        RETURN CODE IN REG 15                                 @Z40RSDH
*        0     DATA SET RAC DEFINED - ENVIRONMENT OK           @Z40RSDH
*        4     DATA SET NOT RAC DEFINED                        @Z40RSDH
*        8     ERROR - ABCODE TBL OFFSET IN REG 0              @Z40RSDH
*                                                              @Z40RSDH
         B     DAMV2502(RF)             PROCESS RAC RETURN     @Z40RSDH
DAMV2502 EQU   *                        BRANCH TABLE           @Z40RSDH
         B     DAMV2550                 RAC OK - BYP PW        @Z40RSDH
         B     DAMV2504                 NO RAC - CHK PW        @Z40RSDH
         B     DAMV9900                 ABEND                  @Z40RSDH
*                                                              @Z40RSDH
*****************************************************************Y02134
*                                                                Y02134
*        TEST FOR PASSWORD NEEDED                                Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV2504 EQU   *                                               @Z40RSDH
*                                                                Y02134
         TM    DSCDSIND-DXDSCB(RB),DS1SECTY TEST IF PASSWORD REQ Y02134
         BNO   DAMV2550                 BRANCH IF NOT NEEDED     Y02083
         CLC   WTGMODNM+K3(K3),DAMVEOV  TEST FOR EOV             Y02082
         BE    DAMV2505                 GO TEST PASSWORD         Y02082
         TM    JFCBIND2-INFMJFCB(RD),JFCNEW IS DISP = NEW        Y02082
         BNO   DAMV2505                 BR IF NO                 Y02082
         TM    JFCBMASK+K5-INFMJFCB(RD),JFCBPWBP JFCB MODIFIED?  Y02082
         BNO   DAMV2555                 BR IF NO                 Y02083
*                                                                Y02082
         L     RF,ADDRTEST              GET ADDRESS OF TESTAUTH@G18MSBS
         BALR  RET,RF                   GO TEST AUTHORIZATION  @G18MSBS
*                                                                Y02082
         LTR   RF,RF                    WAS CALLER AUTHORIZED    Y02082
         BZ    DAMV2550                 BR IF YES                Y02083
*                                                                Y02082
DAMV2505 EQU   *                        DISP NOT NEW             Y02082
*                                                                Y02134
         TM    DSCDSIND-DXDSCB(RB),DS1WRSEC TEST IF WRITE ONLY   Y02134
         BZ    DAMV2510                 BRANCH IF NOT            Y02134
*                                                                Y02134
         TM    DXDCBLST,OUTPUT          INPUT OR RDBACK CHECK    Y02134
         BZ    DAMV2555                 BRANCH IF EITHER         Y02083
*                                                                Y02134
DAMV2510 EQU   *                        ASK OPERATOR FOR PASSWORDY02134
*                                                                Y02134
         OI    JFCBMASK+K4,JFCMPSWD     CHECK PASSWORD           YM7835
*
         MVC   DXRETMOD,ID4C4C          SET UP RETURN LOAD       Y02134
         MVI   DXRETCOD,K12             SET UP RETURN OFFSET     Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID4C5T,BRCODE=K12,BRANCH=QUEUED       Y02134
         EJECT
*                                                                Y02083
*****************************************************************Y02083
*                                                                Y02083
*        CHECKPOINT DATA SET SECURITY PROCESSING                 Y02083
*                                                                Y02083
*****************************************************************Y02083
*                                                                Y02083
DAMV2550 EQU   *                        RESET PASSWORD BYPASS    YM3925
*                                                                YM3925
         NI    JFCBMASK+K5,ALLBITS-JFCBPWBP TURN OFF PW BYPASS   YM3925
*                                                                YM3925
DAMV2555 EQU   *                        CHECKPOINT PROCESSING    YM3925
*                                                                YM3925
         L     RD,DXDSAB                FETCH DSAB ADDRESS       Y02083
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP            YM1228
         BO    DAMV2557                 BRANCH EXCP TO ASSUME PS YM1228
         TM    DCBDSORG,DCBDSGPS        PHYSICAL SEQUENTIAL D/S  Y02083
         BO    DAMV2557                 IF PS, BRANCH            YM5957
         TM    DCBDSORG,DCBDSGPO        PARTITIONED D/S          YM5957
         BO    DAMV2640                 IF PO, BRANCH            YM5957
         LA    R0,K12                   ANTICIPATE 913-28 ABEND  YM5957
         TM    DSABFLG4-DSAB(RD),DSABCKDS TEST FOR CHKPT D/S     YM5957
         BO    DAMV2556                 IF CHKPT, SEE IF ERROR   YM5957
         TM    DSCDSIND-DXDSCB(RB),DSCBCKDS F1 INDICATE CHKPT    YM5957
         BO    DAMV2556                 IF CHKPT, SEE IF ERROR   YM5957
         B     DAMV3000                 CONTINUE                 YM5957
DAMV2556 EQU   *                        SEE IF USER IS AUTH      YM5957
         TM    DSABFLG4-DSAB(RD),DSABCKSI IS USER KNOWN NOT AUTH YM5957
         BO    DAMV9900                 IF YES, GO ABEND         YM5957
*                                                              @G18MSBS
         L     RF,ADDRTEST              GET ADDRESS OF TESTAUTH@G18MSBS
         BALR  RET,RF                   GO TEST AUTHORIZATION  @G18MSBS
*                                                              @G18MSBS
         LTR   RF,RF                    CHECK RETURN CODE        YM5957
         BNZ   DAMV9900                 IF NOT AUTH, GO ABEND    YM5957
*                                                                YM1228
DAMV2557 EQU   *                        PS CHECK FOR EOV OR OPEN YM1228
*                                                                YM1228
         CLC   WTGMODNM+K3(K3),DAMVEOV  TEST FOR EOV             Y02083
         BE    DAMV2610                 BR IF EOV FOR PS         Y02083
*                                                                Y02083
*        OPEN FOR PS D/S                                         Y02083
*                                                                Y02083
DAMV2570 TM    DSCDSIND-DXDSCB(RB),DSCBCKDS F1 INDICATE CHKPT    Y02083
         BO    DAMV2590                 IF YES, BRANCH           Y02083
DAMV2580 MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         NI    DSABFLG4-DSAB(RD),X'FF'-DSABCKVL RESET            Y02083
*                                       DSAB CHKPT FLAGS         Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         TM    DSABFLG4-DSAB(RD),DSABCKDS CHKPT DS               Y02083
         BNO   DAMV3000                 BRANCH IF NOT CHKPT      Y02083
         LA    RET,K52                  CAN VOL BE SECURED       YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDR         YM3925
         BALR  RC,RF                    ISSUE MESSAGE            YM3925
*                                                                YM3925
         BNE   DAMV3000                 BRANCH IF NOT SECURE     YM5957
         MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         OI    DSABFLG4-DSAB(RD),DSABCKVL SET SECURE VOL FLAG    Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         B     DAMV3000                 CONTINUE                 Y02083
DAMV2590 TM    DSABFLG4-DSAB(RD),DSABCKVL VOL ALREADY SECURE     Y02083
         BO    DAMV3000                 IF YES, CONTINUE         Y02083
         LA    RET,K56                  IS VOL SECURE            YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDR         YM3925
         BALR  RC,RF                    ISSUE MESSAGE            YM3925
*                                                                YM3925
         BNE   DAMV2580                 BRANCH IF NOT SECURE     YM3925
DAMV2600 MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         OI    DSABFLG4-DSAB(RD),DSABCKDS+DSABCKVL SET CHKPT FLGSY02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         B     DAMV3000                 CONTINUE                 Y02083
*                                                                Y02083
*        PS EOV PROCESSING                                       Y02083
*                                                                Y02083
DAMV2610 MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         NI    DSABFLG4-DSAB(RD),X'FF'-DSABCKVL RESET SECURE     Y02083
*                                       VOLUME FLAG              Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         TM    DSCDSIND-DXDSCB(RB),DSCBCKDS F1 INDICATE CHKPT    Y02083
         BZ    DAMV2620                 IF NOT, BRANCH           Y02083
         LA    RET,K56                  IS VOL SECURE            YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDR         YM3925
         BALR  RC,RF                    ISSUE MESSAGE            YM3925
*                                                                YM3925
         BE    DAMV2630                 BRANCH IF NOT SECURE     YM3925
DAMV2620 LA    R0,K10                   ANTICIPATE 937-10 ABEND  Y02083
         TM    DSABFLG4-DSAB(RD),DSABCKDS DSAB INDICATE CHKPT    Y02083
         BO    DAMV9900                 IF YES, IT'S AN ERROR    Y02083
*                                       VOLUME NOT SECURABLE     Y02083
         B     DAMV3000                 OTHERWISE, CONTINUE      Y02083
DAMV2630 LA    R0,K11                   ANTICIPATE 937-14 ABEND  Y02083
         TM    DSABFLG4-DSAB(RD),DSABCKDS DSAB INDICATE CHKPT    Y02083
         BZ    DAMV9900                 IF NOT, IT'S AN ERROR    Y02083
*                                       D/S USE IS NOT CONSISTANTY02083
*                                       WITH CHKPT STATUS        Y02083
         MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         OI    DSABFLG4-DSAB(RD),DSABCKVL SET SECURE VOL FLAG    Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         B     DAMV3000                 CONTINUE                 Y02083
*                                                                Y02083
*        PO OPEN PROCESSING                                      Y02083
*                                                                Y02083
DAMV2640 L     RF,DSABTIOT-DSAB(RD)     FETCH TIOT ENTRY ADDRESS Y02083
         CLI   TIOEDDNM-TIOENTRY(RF),BLANK CONCATENATED PO       Y02083
         BNE   DAMV2570                 IF NOT, BRANCH           Y02083
         L     RF,DSABBCHN-DSAB(RD)     FETCH PREVIOUS DSAB ADDR Y02083
         TM    DSABFLG4-DSAB(RF),DSABCKDS PREVIOUS CONCATENATED  Y02083
*                                       MEMBER A CHKPT D/S       Y02083
         BZ    DAMV2660                 IF NOT, BRANCH           Y02083
         TM    DSCDSIND-DXDSCB(RB),DSCBCKDS F1 INDICATE CHKPT    Y02083
         BZ    DAMV2670                 IF NOT, ISSUE 937-14     Y02083
         TM    DSABFLG4-DSAB(RD),DSABCKVL VOL ALREADY SECURE     Y02083
         BO    DAMV2650                 IF YES, SKIP ASKING OPER Y02083
         LA    RET,K56                  IS VOL SECURE            YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDR         YM3925
         BALR  RC,RF                    ISSUE MESSAGE            YM3925
*                                                                YM3925
         BNE   DAMV2670                 BRANCH IF NOT SECURE     YM3925
*                                       GO ISSUE 913-14 ABEND    Y02083
*                                       IF NOT SECURE            Y02083
DAMV2650 MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         OI    DSABFLG4-DSAB(RD),DSABCKDS+DSABCKVL SET CHKPT FLGSY02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         B     DAMV3000                 CONTINUE                 Y02083
DAMV2660 MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         NI    DSABFLG4-DSAB(RD),X'FF'-DSABCKDS-DSABCKVL RESET   Y02083
*                                       CHKPT FLAGS              Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         TM    DSCDSIND-DXDSCB(RB),DSCBCKDS F1 INDICATE CHKPT    Y02083
         BZ    DAMV3000                 IF NOT, CONTINUE         Y02083
         LA    RET,K56                  IS VOL SECURE            YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDR         YM3925
         BALR  RC,RF                    ISSUE MESSAGE            YM3925
*                                                                YM3925
         BNE   DAMV3000                 BRANCH IF NOT SECURE     YM3925
*                                       BRANCH IF NOT SECURE     Y02083
DAMV2670 LA    R0,K5                    SET 913-14 ABEND INDEX   Y02083
         B     DAMV9900                 GO ISSUE 913-14 ABEND    Y02083
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        UPDATE ACCESSED DATE AND BACKUP COPY BIT.             @G60ASRB
*        READ IN ANY FORMAT 2 AND 3 DSCBS THAT DESCRIBE ISAM     Y02134
*        INFORMATION OR ADDITIONAL EXTENTS INTO ADDITIONAL       Y02134
*        GETMAINED CORE STORAGE.                                 Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV3000 EQU   *                                                 Y02134
*                                                                Y02134
         L     RF,DSCUPDA               UPDATE ROUTINE         @G60ASRB
         BALR  RET,RF                   CALL ROUTINE           @G60ASRB
*                                                              @G60ASRB
*        REG 15 CONTAINS 0 IF EXCP DONE IN THE UPDATE          @ZA32427
*        ROUTINE, AND 4 IF EXCP NOT DONE.                      @ZA32427
*                                                              @G60ASRB
         B     DAMV3001(RF)             DETERMINE PATH         @G60ASRB
DAMV3001 EQU   *                        BRANCH TABLE           @G60ASRB
         B     DAMV3002                 NO EXCP DONE           @ZA32427
         IECRES WAIT                                           @ZA32427
         TM    DXECB,ECBNOERR           CHECK I/O ERROR        @ZA32427
         BO    DAMV3002                 BRANCH IF NO           @ZA32427
         LA    R0,K24                   ABEND TABLE CODE       @ZA32427
         B     DAMV9900                 ABEND                  @ZA32427
*                                                              @G60ASRB
DAMV3002 EQU   *                                               @G60ASRB
*                                                              @G60ASRB
         XR    RD,RD                    CLEAR REG FOR IC INST    Y02072
         IC    RD,DSCNOEXT-DXDSCB(,RB)  GET NO. OF EXTENTS       Y02072
         CLI   DSCEXTYP-DXDSCB(RB),X40  CHECK FOR UL EXTENT      Y02134
         BNE   DAMV3005                 BRANCH IF NOT UL EXTENT  Y02134
         LA    RD,K1(,RD)               REFLECT UL EXTENT        Y02134
*                                                                Y02134
DAMV3005 EQU   *                        RD HAS NO. OF EXTENTS    YM1472
*                                                                Y02134
         SH    RD,THREE                 EXTENTS IN FORMAT 1      Y02072
         B     DAMV3020                 BRANCH TO READ F2 & F3   Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        LOOP TO READ FORMAT 3 DSCB                              YM1472
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV3010 EQU   *                                                 Y02134
*                                                                Y02134
         LA    RB,L'JFCBDSNM(,RB)       INCREMENT PASSED KEY     Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        CHECK FOR MORE DSCB'S.                                  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV3020 EQU   *                        LOOP TO READ F2 & F3     YM1472
*                                                                Y02134
         NC    DSCNEXT-DXDSCB(L'DSCNEXT,RB),DSCNEXT-DXDSCB(RB)   Y02134
         BZ    DAMV7000                 BRANCH IF NO MORE        Y02134
*                                                                Y02134
         MVC   DXDAADDR+K3(L'DSCNEXT),DSCNEXT-DXDSCB(RB) CCHHR   YM1472
*                                                                YM1472
         LA    R0,DSCBLNG+K4            LENGTH OF DSCB + PTR     Y02134
*                                                              @G18MSBS
         L     RF,ADDRF2F3              GET ADDRESS OF GETF2F3 @G18MSBS
         BALR  RET,RF                   GO GET F2F3 WORKAREA   @G18MSBS
*                                                                Y02134
         LA    R1,DXDSCB-DXDSCB(,R1)    CLEAR HIGH ORDER BYTE    Y02134
         ST    R1,CORECH(,RB)           CHAIN TO PREVIOUS CORE   Y02134
         LR    RC,RB                    SAVE LAST AREA PTR       YM1472
         LR    RB,R1                    LOAD DSCB BUFFER ADDR    Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        MODIFY CCW TO READ NEXT FORMAT 2 OR 3 DSCB KEY & DATA   Y02134
*                                                                Y02134
*        SEARCH ID EQ                                            Y02134
*        TIC *-8                                                 Y02134
*        READ KEY & DATA                                         Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         XC    DXCCW1(K16),DXCCW1       CLEAR CCW CORE         @ZA03658
         LA    RF,DXDAADDR+K3           SEARCH ADDR            @ZA03658
         ST    RF,DXCCW1                                       @ZA03658
         LA    RF,DXCCW1                TIC ADDR               @ZA03658
         ST    RF,DXCCW2                                       @ZA03658
         OC    DXCCW1(K16),ODA7440K     INIT CCWS              @ZA03658
DAMV3025 EQU   *                        READ NEXT DSCB           YM1472
*                                                                YM1472
         XC    DXCCW3,DXCCW3            CLEAR CCW                YM1472
         ST    RB,DXCCW3                DSCB BUFFER ADDRESS      YM1472
         OC    DXCCW3,ODA0630K          READ KEY & DATA/96 BYTES YM1472
*                                                                Y02134
         EXCP  DXIOB                    READ FORMAT 2 OR 3 DSCB  Y02134
*                                                                Y02134
         IECRES WAIT                    WAIT FOR READ COMPLETE   Y02134
*                                                                Y02134
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR      Y02134
         LA    R0,K4                    OPEN=313-04 EOV=737-1C   Y02134
         BNO   DAMV9900                 BRANCH IF ERROR          Y02134
*                                                                Y02134
         CLC   DSCNEXT-DXDSCB(L'DSCNEXT,RC),L'JFCBDSNM+DSCNEXT-DXDSCB(RB
               B)                       TEST FOR DSCB LOOP       YM1472
         LA    R0,K4                    OPEN=313-04 EOV=737-1C   YM1472
         BE    DAMV9900                 BRANCH IF IN LOOP        YM1472
*                                                                YM1472
         C     RB,CORECH(RCORE)         TEST FOR FIRST AREA      YM1472
         BNE   DAMV3030                 BRANCH IF NOT            YM1472
*                                                                YM1472
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP            YM1472
         BO    DAMV3030                 BR IF EXCP               YM1228
         TM    DCBDSORG,DCBDSGIS        TEST FOR ISAM            YM1472
         BNO   DAMV3030                 BRANCH IF NOT ISAM       YM1472
*                                                                YM1472
         LA    R0,K7                    OPEN=03D-08 EOV=NA       YM1228
         CLI   L'JFCBDSNM(RB),CHAR2     TEST FOR FORMAT 2        Y02134
         BNE   DAMV9900                 BRANCH IF NOT F2         YM1472
         B     DAMV3010                 BRANCH IF NO ERROR       Y02134
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
*        CHECK FOR FORMAT 2 AND NOT DSORG=IS                     YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                Y02134
DAMV3030 EQU   *                        CHECK F3 EXTENTS         Y02134
*                                                                Y02134
         CLI   L'JFCBDSNM(RB),CHAR2     TEST FOR FORMAT 2        YM1472
         BNE   DAMV3035                 BRANCH TO CHECK FOR F3   YM1472
*                                                                YM1472
         LA    R0,K15                   OPEN = 03D-0C  EOV=NA  @ZA02225
         TM    DCBDSORG,DCBDSGDA        TEST IF BDAM           @ZA02225
         BO    DAMV9900                 IF YES,ERROR           @ZA02225
*                                                              @ZA02225
         NC    L'JFCBDSNM+DSCNEXT-DXDSCB(L'DSCNEXT,RB),L'JFCBDSNM+DSCNEX
               XT-DXDSCB(RB)            TEST FOR MORE DSCBS      YM1472
         BZ    DAMV3060                 BRANCH IF NO MORE        YM1472
*                                                                YM1472
         MVC   DXDAADDR+K3(L'DSCNEXT),L'JFCBDSNM+DSCNEXT-DXDSCB(RB)
*                                       MOVE IN F3 CCHHR         YM1472
         B     DAMV3025                 BRANCH TO READ F3        YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
*        CHECK FOR SPLIT CYLINDER EXTENTS IN FORMAT 3            YM1472
*                                                                YM1472
*****************************************************************YM1472
*                                                                YM1472
DAMV3035 EQU   *                        CHECK FOR F3 DSCB        YM1472
*                                                                YM1472
         CLI   L'JFCBDSNM(RB),CHAR3     TEST FOR FORMAT 3        Y02134
         LA    R0,K4                    OPEN=313-04 EOV=737-1C   Y02134
         BNE   DAMV9900                 BRANCH IF NOT F3         Y02134
*                                                                Y02134
         LTR   RD,RD                    IS THERE ANOTHER EXT?    YM1472
         BNP   DAMV3060                 NO - CONTINUE            YM1472
*                                                                Y02134
         LA    RC,K4                    NO. OF EXTS IN FMT3 KEY  Y02072
         LR    R1,RB                    SAVE F3 POINTER          Y02134
*                                                                Y02134
DAMV3040 EQU   *                        LOOP FOR EXTENTS IN KEY  YM1472
*                                                                Y02134
         LTR   RD,RD                    IS THERE ANOTHER EXT?    Y02072
         BNP   DAMV7000                 NO - CONTINUE            YM1472
*                                                                Y02134
         CLI   DSCBEXTY-DSCBF3C(R1),X80 IS THIS A SPLIT CYLINDER?Y02072
         LA    R0,K9                    OPEN=213-24 EOV=C37-08   Y02134
         BE    DAMV9100                 YES - GO TO PROB DET     Y02072
*                                                                Y02072
         LA    R1,L'DSCEXT1(,R1)        INCREMENT TO NEXT EXT    Y02072
         BCTR  RD,R0                    DECREMENT EXTENT COUNT   Y02072
         BCT   RC,DAMV3040              CHECK ALL EXTS           Y02072
         EJECT
*                                                                Y02072
         LA    RC,K9                    NO. OF EXTS IN RECORD    Y02072
*                                                                Y02134
DAMV3050 EQU   *                        LOOP FOR EXTENTS IN F3   YM1472
*                                                                Y02134
         LTR   RD,RD                    IS THERE ANOTHER EXT?    Y02072
         BNP   DAMV7000                 NO - CONTINUE            YM1472
*                                                                Y02134
         CLI   DSCBEXTY-DSCBF3C+L'DSCBFMID(R1),X80 SPLIT CYLINDR Y02072
         LA    R0,K9                    OPEN=213-24 EOV=C37-08   Y02134
         BE    DAMV9100                 YES - GO TO PROB DET     Y02072
*                                                                Y02072
         LA    R1,L'DSCEXT1(,R1)        INCREMENT TO NEXT EXT    Y02072
         BCTR  RD,R0                    DECREMENT EXTENT COUNT   Y02072
         BCT   RC,DAMV3050              CHECK ALL EXTS           Y02072
         B     DAMV7000                 BRANCH IF NO ERROR       YM1472
*                                                                YM1472
DAMV3060 EQU   *                        CLEAR LAST CHAIN PTR     YM1472
*                                                                YM1472
         XC    CORECH(K4,RC),CORECH(RC) CLEAR CHAIN PTR          YM1472
         B     DAMV7000                 EXIT                     YM1472
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        ISAM VOLUME SPECIFIED ALREADY MOUNTED AND               Y02134
*        EXTENTS SPECIFIED ELSEWHERE.                            Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV6000 EQU   *                                                 Y02134
*                                                                Y02134
         LA    RF,K1                    LOAD DECREMENT VALUE     Y02134
*        SHIFT DECREMENT TO USE WITH CS INSTRUCTION              Y02134
         SLL   RF,K24-(K8*((UCBDMCT-UCBOB)-(((UCBDMCT-UCBOB)/K4)*K4)))
         L     R0,UCBOB+(((UCBDMCT-UCBOB)/K4)*K4) ALLIGN & LOAD  Y02134
*                                                                Y02134
DAMV6010 EQU   *                        LOOP FOR CS              Y02134
*                                                                Y02134
         LR    RET,R0                   SAVE CS OPERAND          Y02134
         SLL   RET,K25                  LEAVE ONLY UCBDMCT COUNT Y02134
         LTR   RET,RET                  TEST FOR COUNT OF 0      Y02134
         BZ    DAMV6020                 BRANCH IF ALREADY 0      Y02134
*                                                                Y02134
         LR    R1,R0                    LOAD OLD VALUE TO MODIFY Y02134
         SR    R1,RF                    ADD DECREMENT TO COUNT   Y02134
*                                                                Y02134
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         CS    R0,R1,UCBOB+(((UCBDMCT-UCBOB)/K4)*K4) UPDAT COUNT Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         BNE   DAMV6010                 BRANCH IF NOT THE SAME   Y02134
*                                                                Y02134
DAMV6020 EQU   *                        DECREMENT COMPLETE       Y02134
*                                                                YM1472
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        RETURN TO IFG0194A TO PARALLEL MOUNT                    Y02134
*        OR LOOK AHEAD MOUNT.                                    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV7000 EQU   *                                                 Y02134
*                                                                Y02072
         LH    RF,DXUNITOF              GET UNIT OFFSET IN TIOT  Y02134
         AR    RF,RTIOT                 ADD OFFSET TO ENTRY      Y02134
         MODESET EXTKEY=SUPR            TIOT/UCB KEY             Y02082
         OI    TIOESTTB-TIOESTTB(RF),TIOSUSED DATA SET ON DEVICE Y02134
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*                                                                Y02134
         IECRES LOAD,MODID=ID4C4A,BRCODE=K12,BRANCH=QUEUED       Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        RETURN TO IFG0194A TO REJECT VOLUME.                    Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV7500 EQU   *                                                 Y02134
*                                                                Y02134
         LA    R0,K13                   OPEN= 713-08 EOV= 737-08 YM6514
         B     DAMV9900                 DETERMINE ABEND CODE     YM6514
*                                                                YM1472
DAMV7510 EQU   *                        ENTRY WITH CODE IN R0    YM1472
*                                                                YM1472
         CLC   UCBVOLI,ZEROS            CHECK FOR WRONG VOLUME   YM7396
         BNZ   DAMV7520                 BYPASS REJECT SWITCH     YM7396
*                                                                YM7396
         XR    R0,R0                    CLEAR FOR REJECT         YM7396
*                                                                YM7396
DAMV7520 EQU   *                        RETURN TO ABEND OR REJECTYM7396
*                                                                YM7396
         ST    RB,CORECH(,RB)           CHAIN FOR REUSE          Y02134
         MVC   DXRETMOD,DXSAVMOD        SAVE RETURN LOAD         Y02134
         MVC   DXRETCOD,DXSAVOFF        SAVE RETURN OFFSET       Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID4C4A,BRCODE=K16,BRANCH=QUEUED       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        REJECT WRONG VOLUME MOUNTED.                            Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV8000 EQU   *                                                 Y02134
*                                                                Y02134
         TM    UCBDMCT,UCBDMC-K1        TEST FOR ONE USER        YM1472
         BNZ   DAMV7500                 BRANCH, MORE THAN 1 USER YM1472
         TM    UCBSTAB,UCBBSVL          TEST FOR SHAREABLE       YM1472
         BZ    DAMV7500                 BRANCH IF SHAREABLE UNIT YM1472
*                                                                YM1472
         MVC   DXRETMOD,ID4C4C          RETURN ID TO SAVE AREA   Y02134
         MVI   DXRETCOD,K4              SET RETURN INDICATOR     Y02134
*                                                                Y02134
         IECRES LOAD,MODID=ID4C4J,BRCODE=K4,BRANCH=QUEUED        Y02134
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        AN ERROR HAS BEEN DETECTED.                             Y02134
*                                                                Y02134
*****************************************************************Y02134
*
DAMV9000 DMABCOND PCK,SETLOCK           SETLOCK ERROR ROUTINE    Y02134
*                                                                Y02080
*****************************************************************Y02134
*                                                                Y02134
*        213 ABEND EXIT ROUTINE                                  Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV9100 EQU   *                                                 Y02080
*                                                                Y02134
         MVI   DXWORK,K213              SET 213 CODE             Y02134
         B     DAMV9901                 BRANCH TO ERROR ROUTINE  Y02134
*                                                                Y02080
*****************************************************************Y02134
*                                                                Y02134
*        GO TO PROBLEM DETERMINATION                             YM3111
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV9900 EQU   *                        REGULAR ENTRY            Y02080
*                                                                Y02134
         MVI   DXWORK,K0                SET 213 SWITCH OFF       Y02134
*                                                                Y02134
DAMV9901 EQU   *                        213 ABEND ENTRY          Y02080
*                                                                Y02134
         L     RF,ABEND                 EPA OF INTERFACE ROUTINE YM3070
         BR    RF                       BRANCH, GET INTERNAL CDE YM3070
         EJECT
*
***********************************************************************
*
*        CONSTANTS
*
***********************************************************************
*
ISAMRTN  DC    A(DAMV2103)                                     @ZA26665
RACRTN   DC    A(DAMV4500)              RAC ROUTINE            @Z40RSDH
CHKPTWTO DC    A(DAMV4000)              CHECKPOINT MSG ROUTINE   YM3925
CHKPTRET DC    A(DAMV4010)              CHECKPOINT WTOR RETURN   YM3925
JES3ROUT DC    A(DAMV5000)              JES3 INTERFACE ROUTINE @G18MSBS
IECPRLTV DC    A(DAMV8800)              IECPRLTV INTERFACE RTN   YM3070
IECPCNVT DC    A(DAMV8900)              IECPCNVT INTERFACE RTN   YM3070
ABEND    DC    A(DAMV9999)              PROB DET INTERFACE RTN   YM3070
ADDRF1   DC    A(GETF1)                 IECRES GET FOR F1 DSCB @G18MSBS
ADDRF2F3 DC    A(GETF2F3)               IECRES GET FOR F2/F3   @G18MSBS
ADDRCCWS DC    A(GETCCWS)               IECRES GET FOR CCW'S   @G18MSBS
ADDRFREE DC    A(FREECCWS)              IECRES FREE FOR CCW'S  @G18MSBS
ADDRTEST DC    A(DAMVTEST)              TEST AUTHORIZED USER   @G18MSBS
DSNOTFA  DC    A(DSNOTFND)              DSCB-NOT-FOUND ROUTINE @G60ASRB
DSCUPDA  DC    A(DSCUPD)                UPDATE DSCB ROUTINE    @G60ASRB
DOCVTD   DC    A(DOCVTDTE)              CONVERT CVT DATE RTN.  @G60ASRB
ENQLIST  DC    A(0)                     ENQ LIST                 Y02134
         ENQ   (SYSZVOLS,,E,6,SYSTEM),TCB=,RET=USE,MF=L          Y02134
DASSOBID DC    CL4'SSOB'                SSOB HEADER ID         @G18MSBS
SYSZVOLS DC    CL8'SYSZVOLS'            ENQ VOL SER MAJOR NAME   Y02134
SCRTCH   DC    CL6'SCRTCH'              SCRTCH REQUEST NAME      Y02134
KNO      DC    C'NO '                   WTOR REPLY COMPARAND     Y02083
KYES     DC    C'YES'                   WTOR REPLY COMPARAND     Y02083
BLANKS   DC    CL6' '                   BLANK VOLUME SERIAL NO.  Y02134
ZEROS    DC    XL6'00'                  ZERO VOLUME SERIAL NO.   Y02134
DAMVEOV  DC    CL3'055'                 EOV MOD ID               Y02134
ONE      DC    H'1'                     CONSTANT OF ONE          Y02134
THREE    DC    H'3'                     CONSTANT OF THREE        Y02072
         EJECT
*                                                                Y02134
***********************************************************************
*                                                                Y02134
*        CCW'S TO READ VOLUME LABEL                              Y02134
*                                                                Y02134
***********************************************************************
*                                                                Y02134
ODA7440K DC    X'3100000040000005'      SEARCH ID EQ             Y02134
         DC    X'0800000000000000'      TIC *-8                  Y02134
         DC    X'0600000000000050'      READ DATA                Y02134
*                                                                Y02134
***********************************************************************
*                                                                Y02134
*        CCW'S TO READ FORMAT 1 OR 4 DSCB DIRECTLY.              Y02134
*                                                                Y02134
***********************************************************************
*                                                                Y02134
ODA0630K CCW   CCWRDKEY,K0,K0,DSCBLNG   READ KEY AND DATA        YM1472
*                                                                YM1472
ODA0640K DC    X'3100000040000005'      SEARCH ID EQ             Y02134
         DC    X'0800000000000000'      TIC *-8                  Y02134
         DC    X'290000004000002C'      SEARCH KEY EQ            Y02134
         DC    X'0300000020000001'      NOP  (NO CHAIN, SLI)     Y02134
         DC    X'0600000000000060'      READ DATA (DSCB)         Y02134
*                                                                Y02134
ODA0650K CCW   CCWMTSID,K0,CCWCMDCH+CCWSILI,K5 CCWS TO FIND F1   Y02082
         CCW   CCWTIC,K0,K0,K0                                   Y02082
         CCW   CCWSCHKE,K0,CCWCMDCH+CCWSILI,L'JFCBDSNM           Y02134
         CCW   CCWNOP,K0,CCWSILI,K1                              Y02082
         CCW   CCWTIC,K0,K0,K0                                   Y02082
         CCW   CCWSCHKE,K0,CCWCMDCH+CCWSILI,L'JFCBDSNM           Y02134
         CCW   CCWTIC,K0,K0,K0                                   Y02082
         CCW   CCWRDDA,K0,CCWCMDCH,K96                           Y02082
         CCW   CCWRDCNT,K0,K0,K8                                 Y02082
*                                                                Y02134
ODA0660K DC    X'7FFF'                  MAX NO. TRACKS IN EXTENT Y02134
ODA0670K DC    44X'04'                  KEY OF FORMAT 4 DSCB   @ZA33308
*                                                                Y02134
         EJECT
         XCTLTABL ID=(ID4C0P,0P,ID4C4C,4C,ID4C4A,4A,ID4C4J,4J,   Y02134X
               ID4C5T,5T,ID4C5G,5G,,IFG0554P),                   Y02134X
               SVC=019,BRT=SHORT,LENGTH=4K                       YM3070
         EJECT
*                                                                YM3925
***************************************************************@ZA26665
*       SETUP 03D-08 ABEND IF ISAM AND NO NEXT DSCB            @ZA26665
***************************************************************@ZA26665
*                                                              @ZA26665
DAMV2103 EQU   *                                               @ZA26665
         TM    DCBDSORG,DCBDSGIS        TEST FOR ISAM          @ZA26665
         BNO   DAMV2105                 BR IF NOT ISAM         @ZA26665
         LA    R0,K7                    OPEN=03D-08            @ZA26665
         NC    DSCNEXT,DSCNEXT          NEXT DSCB ?            @ZA26665
         BZ    DAMV9900                 NO BR TO ERROR         @ZA26665
         BR    RET                      RETURN                 @ZA26665
*                                                              @ZA26665
*****************************************************************YM3925
*                                                                YM3925
*        ISSUE CHECKPOINT MESSAGES                               YM3925
*                                                                YM3925
*        ON ENTRY -                                              YM3925
*        RC = RETURN ADDRESS                                     YM3925
*        RF = ENTRY ADDRESS                                      YM3925
*        R0,R1 = VOLATILE                                        YM3925
*        RET = 52 - CAN VOLUME BE MADE SECURE FOR CHECKPOINT     YM3925
*              56 - IS THE VOLUME A SECURE CHECKPOINT VOLUME     YM3925
*                                                                YM3925
*        ON RETURN -                                             YM3925
*        CC=8 (ZERO) MEANS SECURE VOLUME                         YM3925
*                                                                YM3925
*****************************************************************YM3925
*                                                                YM3925
DAMV4000 EQU   *                        CHECKPOINT MSGS          YM3925
*                                                                YM3925
         USING *,RF                     ESTABLISH ADDRESSABILITY YM3925
         STC   RET,DXWORK1              SAVE WTOR OFFSET         YM3925
         ICM   RC,B'1000',DXWORK1       RETREIVE OFFSET          YM3925
*                                                                YM3925
         MVC   DXWORK1(L'KYES),KYES     SET UP VIO REPLY         YM3925
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO DATA SET    YM3925
         BO    DAMV4020                 BRANCH IF VIO DATA SET   YM3925
         DROP  RF                                                YM3925
*                                                                YM3925
         XC    DXWORK1,DXWORK1          CLEAR WTOR REPLY AREA    YM3925
         LA    R1,DXWORK1               POINT TO REPLY AREA      YM3925
         LA    R0,K3                    SET REPLY LENGTH         YM3925
         SLL   R0,K24                   MOVE LENGTH TO HI BYTE   YM3925
         OR    R1,R0                    SET UP WTOR PARM         YM3925
*                                                                YM3925
         MVC   DXRETMOD,ID4C4C          SET RETURN NAME & EPA    YM3925
         MVI   DXRETCOD,K16             SET BR TABLE RETURN CODE YM3925
         IECRES LOAD,MODID=ID4C4J,BRCODE=(14),BRANCH=QUEUED      YM5957
*                                                                YM3925
*****************************************************************YM3925
*                                                                YM3925
*        RETURN HERE WITH OPERATOR REPLY                         YM3925
*                                                                YM3925
*****************************************************************YM3925
*                                                                YM3925
DAMV4010 EQU   *                        WTOR RETURN              YM3925
*                                                                YM3925
         IECRES WAIT                    WAIT FOR REPLY           YM3925
*                                                                YM3925
         USING *,RET                    ESTABLISH ADDRESSABILITY YM3925
         OC    DXWORK1,BLANKS           FOLD REPLY TO UPPER CASE YM3925
         CLC   KYES,DXWORK1             CHECK CORRECT REPLY      YM3925
         BE    DAMV4020                 BRANCH TO SET CODE       YM3925
         CLC   KNO,DXWORK1              CHECK CORRECT REPLY      YM3925
         BE    DAMV4020                 BRANCH TO SET CODE       YM3925
         L     RF,CHKPTWTO              GET MSG RTN ADDRESS      YM3925
         LR    RET,RC                   GET OFFSET IN HI BYTE    YM3925
         SRL   RET,K24                  SHIFT TO LOW BYTE        YM3925
         BR    RF                       RE-ISSUE MSG             YM3925
*                                                                YM3925
DAMV4020 EQU   *                        SET RETURN CODE          YM3925
*                                                                YM3925
         CLC   KYES,DXWORK1             REPLY = 'YES'            YM3925
         BR    RC                       RETURN                   YM3925
         DROP  RET                                               YM3925
         EJECT                                                 @Z40RSDH
***********************************************************************
*                                                                     *
*        RAC VERIFICATION ROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
*        REG   CONTENTS AT ENTRY                                      *
*        2     PTR DCB COPY                                           *
*        4     WORK AREA ADDR                                         *
*        6     WTG TABLE                                              *
*        7     CURRENT PARM LIST ENTRY                                *
*        A     CURRENT UCB ADDRESS                                    *
*        B     CURRENT F1 DSCB AREA                                   *
*        D     CURRENT JFCB ADDR                                      *
*        E     RETURN ADDR                                            *
*        F     ENTRY POINT                                            *
*                                                                     *
*        THIS ROUTINE PERFORMS ALL CHECKS FOR RAC ON DASD DATA @Z40RSDH
*        SETS.                                                 @Z40RSDH
*              1. CHECK THE CURRENT ENVIRONMENT'S AUTHORIZATION@Z40RSDH
*                 TO RAC DEFINED DATA SETS.                    @Z40RSDH
*              2. FOR PS OUTPUT AT EOV, ENSURE THAT THE DATA   @Z40RSDH
*                 SET ON THE SUBSEQUENT VOLUME IS CONSISTENTLY @Z40RSDH
*                 DEFINED TO RAC WITH RESPECT TO THE PREVIOUS  @Z40RSDH
*                 VOLUME.                                      @Z40RSDH
*                                                                     *
*        RETURN IS VIA REG 14 WITH THE FOLLOWING IN REG 15:           *
*                                                                     *
*        0     RAC OK, BYPASS PASSWORD                                *
*        4     NO RAC, PROCESS PASSWORD                               *
*        8     ABEND - REG 0 CONTAINS INDEX TO 194C INTERNAL ABEND TBL*
*                                                                     *
*        REGISTERS 2-14 ARE PRESERVED.                                *
***********************************************************************
         SPACE 1                                               @Z40RSDH
*                                                              @Z40RSDH
*        DATA FOR RAC                                          @Z40RSDH
*                                                              @Z40RSDH
*        THE FOLLOWING ARE OFFSETS TO THE ERROR CODE TABLES    @Z40RSDH
*        IN THIS MODULE FOR RAC ABENDS                         @Z40RSDH
OABRAC01 EQU   16                       OPEN=913-38 EOV=937-28 @Z40RSDH
OABRAC02 EQU   OABRAC01+1               EOV=937-2C             @Z40RSDH
OABRAC03 EQU   OABRAC01+2               OPEN=913-3C EOV=937-30 @Z40RSDH
OABRAC04 EQU   OABRAC01+3               OPEN=913-40 EOV=937-34 @Z40RSDH
OABRAC05 EQU   OABRAC01+4               EOV=937-3C             @Z40RSDH
OABRAC06 EQU   OABRAC01+6               EOV=937-40             @G32DSMI
*
         SPACE 2                                               @Z40RSDH
*                                                              @Z40RSDH
* RAC ROUTINE                                                  @Z40RSDH
*                                                              @Z40RSDH
DAMV4500 EQU   *                        RAC CHECK              @Z40RSDH
         L     R1,WTGPREFX              ADDR OF PREFIX         @Z40RSDH
         STM   R2,RET,IECREGSV-IECPREFX+R2*K4(R1) SAVE REGS    @Z40RSDH
         LR    RC,R1                    SAVE REG SAEA          @Z40RSDH
         LR    RBASE,RF                 SET BASE FOR RAC CODE  @Z40RSDH
         USING DAMV4500,RBASE           EPA IS BASE            @Z40RSDH
         L     R9,DXJSCBAD              PTR ACTV JSCB          @Z40RSDH
         USING IEZJSCB,R9               JSCB BASE REG          @Z40RSDH
         TM    JSCBSWT1,JSCBPASS        CHK BYPASS RAC         @Z40RSDH
         BO    DAMV4910                 BR - NO RAC CHECKING   @Z40RSDH
*                                                              @Z40RSDH
*        A VSAM DATA SPACE MAY NOT BE DEFINED TO RAC; VSAM     @Z40RSDH
*        PERMITS DATA SETS, CATALOGS, ETC. BUT NOT DATA SPACES @Z40RSDH
*                                                              @Z40RSDH
         TM    DSCFILTY+K1-DXDSCB(RB),ACBDORGA VSAM DATA SPACE @Z40RSDH
         BNO   DAMV4520                 BR NOT VSAM DATA SPACE @Z40RSDH
         LA    R0,OABRAC04              INT ABEND CODE OFFSET  @Z40RSDH
         TM    DSCDSIND-DXDSCB(RB),DS1RACDF CHK IF RAC FMT1    @Z40RSDH
         BO    DAMV4920                 OPEN=913-40 EOV=937-34 @Z40RSDH
*                                                              @Z40RSDH
DAMV4520 EQU   *                        CHECK COMPONENT        @Z40RSRJ
         MVC   DXCCW9(RACLLEN),RACLIST  SET UP RACHECK LIST    @G32DSMI
         CLC   WTGMODNM+K3(K3),DAMVEOV2 CHK IF EOV             @Z40RSDH
         BE    DAMV4600                 BR IF EOV              @Z40RSDH
*                                                              @Z40RSDH
* OPEN OR CONCATENATION - RACF                                 @G32DSMI
*                                                              @Z40RSDH
DAMV4530 EQU   *                                               @G32DSMI
         L     RET,DXDEBXAD             GET ADDRESS OF DEB EXT @G32DSMI
         USING DEBXTN,RET                                      @G32DSMI
         NI    DEBXFLG1,X'FF'-DEBXDSSI  TURN OFF RACF FLAG     @G32DSMI
         DROP  RET                                             @G32DSMI
         TM    DSCDSIND-DXDSCB(RB),DS1RACDF CHK F1 RAC DEFINED @Z40RSDH
         BNO   DAMV4910                 BR F1 NOT RAC DEFINED  @Z40RSDH
         BAL   RET,DAMV4800             PERFORM RACHECK        @Z40RSDH
         LTR   RF,RF                    CHK IF AUTH            @Z40RSDH
         BZ    DAMV4900                 BR IF RAC AUTH         @Z40RSDH
         LA    R0,OABRAC03              NO RAC PROFILE         @Z40RSDH
         CL    RF,DAMVRNAU              CHK IF NOT AUTHORIZED  @Z40RSDH
         BNE   DAMV4920                 OPEN=913-3C            @Z40RSDH
         LA    R0,OABRAC01              NOT AUTHORIZED         @Z40RSDH
         B     DAMV4920                 OPEN=913-38            @Z40RSRJ
*                                                              @Z40RSDH
* EOV - RAC                                                    @Z40RSDH
*                                                              @Z40RSDH
DAMV4600 EQU   *                        EOV RAC                @Z40RSDH
         TM    DCBOFLGS,DCBOFEOV        CONCATENATION          @G32DSMI
         BO    DAMV4530                 YES - TREAT LIKE OPEN  @G32DSMI
         TM    DXDCBLST,OUTPUT          CHK OPEN OUTPUT        @Z40RSDH
         BZ    DAMV4660                 BR INPUT ONLY          @Z40RSDH
*                                                              @Z40RSDH
*        CHECK FOR PO BEFORE EXCP, DSORG FIELD EXISTS IN COPY  @Z40RSDH
*        EVEN IF NOT IN USER DCB                               @Z40RSDH
         TM    DCBDSORG,DCBDSGPO        CHK IF PO              @Z40RSDH
         BO    DAMV4660                 BR IF PO               @Z40RSDH
         TM    DCBMACRF,DCBMEXCP        CHK IF EXCP            @Z40RSDH
         BO    DAMV4620                 EXCP ASSUME PS         @Z40RSDH
         NC    DCBDSORG,DCBDSORG        CHK IF DSORG SPECIFIED @Z40RSDH
         BZ    DAMV4620                 NO DSORG ASSUME PS     @Z40RSDH
         TM    DCBDSORG,DCBDSGPS        CHK PHYSICAL SEQ       @Z40RSDH
         BNO   DAMV4660                 BR NOT PS              @Z40RSDH
*                                                              @Z40RSDH
*        PS OUTPUT                                             @Z40RSDH
*                                                              @Z40RSDH
DAMV4620 EQU   *                        PS OUTPUT              @Z40RSDH
         L     R9,DXDEBXAD              GET CURRENT DEBX       @Z40RSDH
         USING DEBXTN,R9                DEBX ADDR              @Z40RSDH
         TM    DEBXFLG1,DEBXDSSI        CHK IF 1ST VOL RAC DEF @Z40RSRJ
         BZ    DAMV4640                 BR IF NOT RAC DATA SET @Z40RSDH
         DROP  R9                                              @Z40RSDH
*                                                              @Z40RSDH
*        ON OUTPUT IF FIRST VOLUME IS RAC DEFINED THEN ALL     @Z40RSDH
*        SUCCEEDING VOLUMES MUST BE RAC DEFINED.               @Z40RSRJ
*                                                              @Z40RSDH
         LA    R0,OABRAC02              INCONSISTENT RAC DEFN  @Z40RSDH
         TM    DSCDSIND-DXDSCB(RB),DS1RACDF CHK CURR RAC DEFN  @Z40RSDH
         BNO   DAMV4920                 EOV=937-2C             @Z40RSDH
         LA    R9,DXCCW9                ADDRESS OF THE RACHECK @G32DSMI
         USING ACHKLIST,R9              PARAMETER LIST         @G32DSMI
         LA    RET,DXOLDVOL             ADDRESS OF OLDVOL PARM @G32DSMI
         ST    RET,ACHKOVOL             STORE ADD OF OLD VOL   @G32DSMI
         DROP  R9                                              @G32DSMI
         BAL   RET,DAMV4800             GO PERFORM RACHECK     @Z40RSRJ
         B     DAMV4670                 GO CHECK RESULTS       @Z40RSRJ
*                                                              @Z40RSDH
*        ON OUTPUT IF THE FIRST VOLUME IS NOT RAC DEFINED      @Z40RSDH
*        THEN ALL SUCCEEDING VOLUMES MUST NOT BE RAC DEFINED.  @Z40RSDH
*                                                              @Z40RSDH
DAMV4640 EQU   *                        FIRST VOL NOT RAC DEF  @Z40RSDH
         LA    R0,OABRAC05              INCONSISTENT RAC DEFN  @Z40RSDH
         TM    DSCDSIND-DXDSCB(RB),DS1RACDF CHK CURR RAC DEFN  @Z40RSRJ
         BO    DAMV4920                 EOV=937-3C             @Z40RSDH
         B     DAMV4910                 NOT RAC DEFN - CONTIN  @Z40RSDH
*                                                              @Z40RSDH
*        NOT PS OUTPUT                                         @Z40RSDH
*                                                              @Z40RSDH
DAMV4660 EQU   *                        NOT PS OUTPUT          @Z40RSDH
         TM    DSCDSIND-DXDSCB(RB),DS1RACDF CHK CURR F1 RAC    @Z40RSDH
         BNO   DAMV4910                 BR CURR VOL NOT RAC    @Z40RSDH
         BAL   RET,DAMV4800             CHK RAC AUTH TO VOL    @Z40RSDH
DAMV4670 EQU   *                        CHECK RESULTS          @Z40RSRJ
         LTR   RF,RF                    CHK AUTHORIZED         @Z40RSDH
         BZ    DAMV4905                 RAC AUTH CONTIN        @Z40RSRJ
         LA    R0,OABRAC03              NO RAC PROFILE         @Z40RSDH
         CL    RF,DAMVRNAU              CHK IF NOT AUTHORIZED  @Z40RSDH
         BL    DAMV4920                 EOV=937-30 NO PROFILE  @Z40RSDH
         LA    R0,OABRAC01              NOT RAC AUTHORIZED     @Z40RSDH
         BE    DAMV4920                 EOV=937-28             @G32DSMI
         LA    R0,OABRAC06              INCONSISTANT DS        @G32DSMI
         B     DAMV4920                 EOV=937-40             @G32DSMI
         SPACE 2                                               @Z40RSDH
*                                                              @Z40RSDH
*        PERFORM RACHECK                                       @Z40RSDH
*        RETURN WITH RACHECK RETURN CODE IN REG 15             @Z40RSDH
*                                                              @Z40RSDH
DAMV4800 EQU   *                        RACHECK                @Z40RSDH
         LA    R5,ACHKTRD               CHK READ AUTH          @Z40RSRJ
         TM    DXDCBLST,OUTPUT          TEST FOR OUTPUT        @Z40RSDH
         BZ    DAMV4820                 BR READ ONLY           @Z40RSDH
         LA    R5,ACHKTUPD              CHK UPDATE AUTH        @Z40RSRJ
DAMV4820 EQU   *                        ISSUE RACHECK          @Z40RSDH
         RACHECK ENTITY=((RD)),VOLSER=UCBVOLI,ATTR=(R5),       @Z40RSDH*
               MF=(E,DXCCW9)            CHK AUTHORIZATION      @Z40RSRJ
*                                                              @Z40RSDH
*        RETURN CODE FROM RACHECK                              @Z40RSDH
*          0 - AUTHORIZED                                      @Z40RSDH
*          4 - ENTITY/VOLUME NOT DEFINED TO RAC                @Z40RSDH
*          8 - NOT AUTHORIZED                                  @Z40RSDH
*                                                              @Z40RSDH
         BR    RET                      RETURN                 @Z40RSDH
*                                                              @Z40RSDH
* RETURN TO CALLER                                             @Z40RSDH
*                                                              @Z40RSDH
DAMV4900 EQU   *                        RAC OK - OPEN          @Z40RSRJ
         L     R9,DXDEBXAD              GET CURRENT DEBX       @Z40RSDH
         USING DEBXTN,R9                DEBX ADDR              @Z40RSDH
         OI    DEBXFLG1,DEBXDSSI        INDIC 1ST VOL RAC DEF  @Z40RSRJ
         DROP  R9                                              @Z40RSRJ
DAMV4905 EQU   *                        RAC OK - EOV           @Z40RSRJ
         LA    RF,K0                    RAC OK                 @Z40RSDH
         B     DAMV4950                 EXIT                   @Z40RSDH
DAMV4910 EQU   *                        NOT RAC DEFINED        @Z40RSDH
         LA    RF,K4                    NOT RAC DEFINED        @Z40RSDH
         B     DAMV4950                 EXIT                   @Z40RSDH
DAMV4920 EQU   *                        ABEND                  @Z40RSDH
         LA    RF,K8                    ABEND - TBL OFFSET R0  @Z40RSDH
         B     DAMV4950                 EXIT                   @Z40RSDH
*                                                              @Z40RSDH
DAMV4950 LM    R2,RET,IECREGSV-IECPREFX+R2*K4(RC) RESTORE REGS @Z40RSDH
         BR    RET                      RETURN                 @Z40RSDH
         SPACE 2                                               @Z40RSDH
*                                                              @Z40RSDH
* CONSTANTS FOR RAC CODE                                       @Z40RSDH
*                                                              @Z40RSDH
RACLIST  RACHECK CLASS=DATASET,DSTYPE=N,MF=L RACHECK PLIST     @Z40RSRJ
RACLLEN  EQU   *-RACLIST                LENGTH RACHECK PLIST   @Z40RSDH
DATASET  DC    AL1(7),CL7'DATASET'      CLASS NAME             @Z40RSRJ
DAMVRNAU DC    F'8'                     RACHECK RETURN CODE    @Z40RSDH*
                                        FOR NOT AUTHORIZED     @Z40RSDH
         USING DAMV0000,RBASE           REESTABLISH BASE USING @Z40RSDH
         EJECT
*                                                              @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
*      **************************                              @G18MSBS
*      * JES3 INTERFACE ROUTINE *                              @G18MSBS
*      **************************                              @G18MSBS
*                                                              @G18MSBS
*        ON ENTRY -                                            @G18MSBS
*        R0 AND R1 ARE VOLATILE                                @G18MSBS
*        RC  = PASS SWITCH: 0=FIRST PASS; 4=FINAL PASS         @G18MSBS
*        RET = RETURN ADDRESS                                  @G18MSBS
*        RF  = ENTRY ADDRESS                                   @G18MSBS
*                                                              @G18MSBS
*        THIS ROUTINE WILL GET SPACE FOR AND BUILD THE SSOB    @G18MSBS
*        HEADER AND EXTENSION TO PASS TO JES3 VIA THE MACRO:   @G18MSBS
*        'IEFSSREQ', OFFERING THE VOLUME CHOICE TO JES3 FOR    @G18MSBS
*        APPROVAL.  UPON RETURN, REGISTER 15 WILL CONTAIN:     @G18MSBS
*                                                              @G18MSBS
*               REGISTER 15 = 0  : JES3 RESPONDED-OK           @G18MSBS
*               REGISTER 15 = >0 : JES3 ERROR-ABEND            @G18MSBS
*                                                              @G18MSBS
*        IF REGISTER 15 CONTAINS ZERO, THEN 'SSOBRETN'         @G18MSBS
*        IS TESTED FOR ZERO.  ZERO ALLOWS OPEN/EOV TO          @G18MSBS
*        CONTINUE AND A NON-ZERO INDICATES JES3 DETERMINED     @G18MSBS
*        THAT VOLUME COULD NOT BE USED BY THIS JOB NOW. IT     @G18MSBS
*        WILL BE REJECTED BY OPEN/EOV LIKE A WRONG VOLUME.     @G18MSBS
***************************************************************@G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
DAMV5000 EQU   *                        JES3 ROUTINE           @G18MSBS
        SPACE
         L     RF,WTGPREFX              GET WHERE TO GO PREFIX @G18MSBS
         LA    RF,IECREGSV-IECPREFX(,RF) ADDR OF REG SAVE AREA @G18MSBS
         STM   R0,RET,K0(RF)            SAVE REGISTERS         @G18MSBS
         LR    R8,RF                    SAVE SAVEAREA          @G18MSBS
         IECRES GET,PREFIX=YES,ID=SSOB,LV=SSOBSIZE,A=(RF)      @G18MSBS
         LM    R2,RET,K8(R8)            RESTORE REGS           @G18MSBS
         USING SSOB,R1                  ESTAB ADDRESSABILITY   @G18MSBS
         ST    R1,DASSOBAD              SAVE PARM POINTER      @G18MSBS
        SPACE
         MVC   SSOBID,DASSOBID          ID OF SSOB             @G18MSBS
         MVI   SSOBLEN+K1,SSOBHSIZ      LENGTH OF SSOBHEADER   @G18MSBS
         MVI   SSOBFUNC+K1,SSOBOEOV     OPEN/EOV FUNCTION ID   @G18MSBS
         LA    RF,SSMOBGN               GET FUNCTION DEPENDENT @G18MSBS
         ST    RF,SSOBINDV              AREA PTR AND SAVE IT   @G18MSBS
         MVI   SSMOLEN+K1,SSMOSIZE      LENGTH OF EXTENSION    @G18MSBS
         L     RF,DXJSCBAD              LOAD JSCB ADDR         @G18MSBS
         L     RF,JSCBJCT-IEZJSCB(,RF)  GET JCT PTR FROM JSCB  @G18MSBS
         LA    RF,SWAPREFX+JCTJNAME-JCTABLE(,RF) GET PTR OF    @G18MSBS
*                                       JOB NAME               @G18MSBS
         ST    RF,SSMOPNAM              AND SAVE IT FOR SSOB   @G18MSBS
         L     RF,DXJSCBAD              LOAD JSCB ADDR AGAIN   @G18MSBS
         L     RF,JSCSCT-IEZJSCB(,RF)   GET SCT PTR FROM JSCB  @G18MSBS
         LA    RF,SWAPREFX+SCTSNUMB-SCTABLE(,RF) GET PTR OF    @G18MSBS
*                                       STEP NUMBER            @G18MSBS
         ST    RF,SSMOPSTN              AND SAVE IT FOR SSOB   @G18MSBS
         LA    RF,UCBNAME               GET PTR OF UNIT ADDRESS@G18MSBS
         ST    RF,SSMOPUAD              AND SAVE IT FOR SSOB   @G18MSBS
         LA    RF,UCBVOLI               GET PTR OF VOLSER      @G18MSBS
         ST    RF,SSMOPVOL              AND SAVE IT FOR SSOB   @G18MSBS
         BALR  RF,R0                    ESTABLISH              @G18MSBS
         USING *,RF                        ADDRESSABILITY      @G18MSBS
         LTR   RC,RC                    FINAL REQ SWITCH ON?   @G18MSBS
         BZ    DAMV5020                 OFF, SKIP FINAL REQ FLG@G18MSBS
         OI    SSMOFLG1,SSMOFINL        ON, INDICATE FINAL REQ @G18MSBS
         DROP  RF                                              @G18MSBS
        EJECT
DAMV5020 EQU   *                        PREPARE TO ISSUE       @G18MSBS
         OI    DASSOBAD,HIORDER         REQUEST FOR SSOB MACRO @G18MSBS
         LA    RD,SSOBSAVE              GET SAVE AREA FOR SSOB @G18MSBS
         LA    R1,DASSOBAD              GET ADDR OF PARM PTR   @G18MSBS
         DROP  R1                                              @G18MSBS
        SPACE
*                                                              @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
**       PREPARE TO ISSUE MACRO: 'IEFSSREQ'                    @G18MSBS
*                                                              @G18MSBS
**       ON ENTRY:                                             @G18MSBS
*                                                              @G18MSBS
**       REGISTER 1 = POINTER TO SSOB PARAMETER LIST POINTER   @G18MSBS
**       REGISTER D = SAVE AREA TO BE USED BY JES3             @G18MSBS
*                                                              @G18MSBS
**       ON RETURN:                                            @G18MSBS
*                                                              @G18MSBS
**       REGISTER 0 = VOLATILE                                 @G18MSBS
**       REGISTER 1 = POINTER TO SSOB PARAMETER LIST           @G18MSBS
**       REGISTER F = RETURN CODE FROM JES3                    @G18MSBS
**                    0=JES3 RESPONDED - TEST 'SSOBRETN' CODE  @G18MSBS
*                                                              @G18MSBS
**       'SSOBRETN' CONTAINS A RETURN CODE:                    @G18MSBS
**                  0 = THIS VOLUME IS AVAILABLE FOR USE.      @G18MSBS
**                  4 = JES3 HAS SOME OTHER USE FOR THIS VOL.  @G18MSBS
***************************************************************@G18MSBS
*                                                              @G18MSBS
         IEFSSREQ                       ISSUE MACRO            @G18MSBS
        SPACE
         USING *,RET                    ESTAB ADDRESSABILITY   @G18MSBS
         LTR   RF,RF                    TEST RETURN CODE       @G18MSBS
         BZ    DAMV5030                 NO JES3 ERROR - BRANCH @G18MSBS
         LA    R0,K21                   OPEN=413-34 EOV=737-28 @ZM44627
         XC    DXVOLSR2,DXVOLSR2        CLEAR VOLSER FOR ABEND @G18MSBS
         B     DAMV9900                 JES3 ERROR - ABEND     @G18MSBS
         EJECT
DAMV5030 EQU   *                        JES3 PROCESSING OK     @G18MSBS
         USING SSOB,R1                  ESTAB ADDRESSABILITY   @G18MSBS
         L     R8,WTGPREFX              GET WHERE TO GO PREFIX @G18MSBS
         L     R9,SSOBRETN              GET JES3 FUNCT RET CODE@G18MSBS
         DROP  R1,RET                                          @G18MSBS
         SPACE
         IECRES FREE,PREFIX=YES,A=(R1)                         @G18MSBS
         SPACE
         LTR   R9,R9                    TEST RET FROM IEFSSREQ @G18MSBS
         LM    R0,RET,IECREGSV-IECPREFX(R8) RESTORE REGISTERS  @G18MSBS
         BNZ   DAMV9900                 REJECT JES3 DISAPPROVED@G18MSBS
         BR    RET                      VOLUME APPROVED-RETURN @G18MSBS
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        INTERFACE TO IECPRLTV CONVERT ROUTINE.                  Y02134
*        MBBCCHHR IS CONVERTED TO TTR                            Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        REG   CONTENTS AT ENTRY        CONTENTS AT EXIT         Y02134
*        R0    WORK REGISTER            CONVERTED TTR            Y02134
*        R4    O/C/E WORK AREA POINTER  SAME AS ENTRY            Y02134
*        R6    POINTER TO WTGTABLE      SAME AS ENTRY            Y02134
*        R14   RETURN ADDRESS           SAME AS ENTRY            Y02134
*        R15   WORK REGISTER            RETURN CODE              Y02134
*                                                                Y02134
*        MBBCCHHR IS PASSED IN DXDAADDR                          Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV8800 EQU   *                                                 Y02134
*                                                                Y02134
         L     RF,WTGPREFX              LOAD POINTER TO PREFIX   Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        Y02134
         LA    R1,DXDEB                 POINT TO OPEN WORK DEB   Y02134
         LA    R2,DXDAADDR              ADDR TO STORE MBBCCHHR   Y02134
         L     RF,CVTPTR                GET CVT ADDR             Y02134
         L     RF,CVTPRLTV-CVT(,RF)     ADDR OF IECPRLTV ROUTINE Y02134
         BALR  RET,RF                   CONVERT TTR TO MBBCCHHR  Y02134
         L     RET,WTGPREFX             LOAD POINTER TO PREFIX   Y02134
         LM    R1,RET,IECREGSV-IECPREFX+K4(RET) RESTORE REGISTRS Y02134
         BR    RET                      RETURN                   Y02134
         EJECT
DSNOTFND EQU   *                        DSCB-NOT-FOUND EXIT    @G60ASRB
*                                                              @G60ASRB
***************************************************************@G60ASRB
*        CALL IFG0EX0A, THE DSCB-NOT-FOUND INSTALLATION EXIT.  @G60ASRB
*        THIS SUBROUTINE USES REGISTERS 0,1,12,14,15.          @G60ASRB
*        RETURN ON REG 14.                                     @G60ASRB
*        EXIT INTERFACE                                        @G60ASRB
*          REG1 - PARMLIST ADDRESS                             @G60ASRB
*                 FIRST WORD UCB ADDRESS                       @G60ASRB
*                 SECOND WORD DATASET NAME ADDRESS             @G60ASRB
*          REG13 - IECREGSV   ADDRESS TO SAVE REGISTERS        @G60ASRB
*          REG14 - RETURN                                      @G60ASRB
*          REG15 - IFG0EX0A ADDRESS                            @G60ASRB
*        EXIT RETURN CODE IN REGISTER 15                       @G60ASRB
*          0 - CONTINUE DSCB NOT FOUND PROCESSING              @G60ASRB
*          4 - RETRY READ OF DSCB. EXIT NOT TAKEN IF STILL     @G60ASRB
*              MISSING.                                        @G60ASRB
*          8 - EXIT ERROR - 213-2C/737-3C                      @G60ASRB
*        ACTION BASED ON EXIT RETURN CODE                      @G60ASRB
*          0 - RETURN ON REG 14 TO CONTINUE DSCB-NOT-FOUND     @G60ASRB
*              PROCESSING, WITH 0 IN REG15.                    @G60ASRB
*          4 - SET DXEX0A01 SWITCH AND RETURN TO               @G60ASRB
*              RETRY READ OF DSCB, WITH 4 IN REG15.            @G60ASRB
*          8 - RETURN ON REG14 WITH REG0 SET TO ABEND          @G60ASRB
*              INDICATOR AND 8 IN REG15.                       @G60ASRB
***************************************************************@G60ASRB
*                                                              @G60ASRB
         ST    RET,DXCCW4               SAVE RETURN            @G60ASRB
         ST    RBASE,DXCCW4+K4          SAVE FIRST BASE        @G60ASRB
         LR    RBASE,RF                 ESTABLISH NEW BASE     @G60ASRB
         USING DSNOTFND,RBASE                                  @G60ASRB
         TM    DXFLAG1,DXEX0A01         2ND DSCB-NOT-FOUND     @G60ASRB
         BO    DSNOTFN0                 BRANCH IF YES-EXIT     @G60ASRB
         MVC   DXIDENT(K7),WTGMODNM+K4  SAVE THIS MODULE ID    @G60ASRB
         IECRES LOAD,MODNM=EX0A,BRANCH=NO,PREFIX=WTGPREFX      @G60ASBJ
         L     RC,WTGMODEP              GET IFG0EX0A ENTRY PT. @G60ASBJ
         MVC   WTGMODNM+K4(K7),DXIDENT  RESTORE THIS MODULE ID @G60ASBJ
         LA    RUCB,K0(,RUCB)                                  @G60ASRB
         ST    RUCB,DXWORK              UCB ADDRESS            @G60ASRB
         LA    RD,K0(,RD)                                      @G60ASRB
         ST    RD,DXWORK1               DATA SET NAME ADDRESS  @G60ASRB
         OI    DXWORK1,X'80'            END OF LIST INDICATOR  @G60ASRB
         LA    R1,DXWORK                PARMLIST ADDRESS       @G60ASRB
         LR    RF,RC                    ENTRY ADDRESS          @G60ASRB
         LR    RC,RD                    SAVE RD                @G60ASRB
         L     RD,WTGPREFX              PREFIX ADDRESS         @G60ASRB
         LA    RD,IECREGSV-IECPREFX(,RD) REGSAVE AREA          @G60ASRB
         BALR  RET,RF                   TAKE EXIT              @G60ASRB
         LR    RD,RC                    RESTORE RD             @G60ASRB
         LTR   RC,RF                    CODE TO RC AND TEST    @G60ASRB*
                                        IF CODE IS ZERO        @G60ASRB
         BE    DSNOTFN0                 EXIT IF YES            @G60ASRB
         LA    RF,K4                    COMPERAND OF FOUR      @G60ASRB
         CR    RF,RC                    IS RETURN CODE 4       @G60ASRB
         BE    DSNOTFN4                 BRANCH IF YES          @G60ASRB
         LA    R0,K23                   EXIT ERROR             @G60ASRB
         B     DSNOTFN8                 EXIT WITHOUT ZERO IN 0 @G60ASRB
DSNOTFN0 EQU   *                        NORMAL RETURN          @G60ASRB
         LA    RF,K0                    RETURN INDICATOR       @G60ASRB
         B     DSNOTFO                                         @G60ASRB
DSNOTFN4 EQU   *                        RETRY RETURN           @G60ASRB
         OI    DXFLAG1,DXEX0A01         SET SECOND TIME BIT    @G60ASRB
         LA    RF,K4                                           @G60ASRB
         B     DSNOTFO                                         @G60ASRB
DSNOTFN8 EQU   *                        ERROR RETURN           @G60ASRB
         LA    RF,8                                            @G60ASRB
DSNOTFO  EQU   *                        RETURN                 @G60ASRB
         L     RET,DXCCW4               RETURN ADDRESS         @G60ASRB
         L     RBASE,DXCCW4+K4          BASE REG               @G60ASRB
         BR    RET                                             @G60ASRB
         USING DAMV0000,RBASE           REESTABLISH BASE       @G60ASRB
         EJECT
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        INTERFACE TO IECPCNVT CONVERT ROUTINE.                  Y02134
*        TTR IS CONVERTED TO MBBCCHHR                            Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        REG   CONTENTS AT ENTRY        CONTENTS AT EXIT         Y02134
*        R1    POINTER TO TTR           SAME AS ENTRY            Y02134
*        R4    O/C/E WORK AREA POINTER  SAME AS ENTRY            Y02134
*        R6    POINTER TO WTGTABLE      SAME AS ENTRY            Y02134
*        R14   RETURN ADDRESS           SAME AS ENTRY            Y02134
*        R15   WORK REGISTER            RETURN CODE              Y02134
*                                                                Y02134
*        MBBCCHHR IS RETURNED IN DXDAADDR                        Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV8900 EQU   *                                                 Y02134
*                                                                Y02134
         L     RF,WTGPREFX              LOAD POINTER TO PREFIX   Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        Y02134
         XC    DXDAADDR,DXDAADDR        ZERO OUT MBBCCHHR        Y02134
         MVC   DXDAADDR(K3),K0(R1)      TTR TO WORK AREA         Y02134
         L     R0,DXDAADDR              LOAD TTR0                Y02134
         XC    DXDAADDR,DXDAADDR        ZERO OUT MBBCCHHR        Y02134
         LA    R1,DXDEB                 POINT TO OPEN WORK DEB   Y02134
         LA    R2,DXDAADDR              ADDR TO STORE MBBCCHHR   Y02134
         L     RF,CVTPTR                GET CVT ADDR             Y02134
         L     RF,CVTPCNVT-CVT(,RF)     ADDR OF IECPCNVT ROUTINE Y02134
         BALR  RET,RF                   CONVERT TTR TO MBBCCHHR  Y02134
         L     RET,WTGPREFX             LOAD POINTER TO PREFIX   Y02134
         LM    R0,RET,IECREGSV-IECPREFX(RET) RESTORE 15 REGISTRS Y02134
         BR    RET                      RETURN                   Y02134
         EJECT
DSCUPD   EQU   *                        UPDATE DSCB            @G60ASRB
*                                                              @G60ASRB
***************************************************************@G60ASRB
*        THE LAST ACCESSED DATE IN THE FORMAT 1 DSCB IS        @G60ASRB
*        UPDATED IF THE DATE IS NONZERO AND THE DATE IS        @G60ASRB
*        LESS THAN TODAY'S DATE.                               @G60ASRB
*        SET THE BACKUP COPY INDICATOR IF OPEN FOR OTHER THAN  @G60ASRB
*        INPUT.                                                @G60ASRB
*        WRITE UDPATED DSCB IF EOV OR IF NOT THE FIRST DSCB.   @G60ASRB
*        SET THE DSCB-UPDATED BIT IN JFCBMASK(JFCMDMOD) IF     @G60ASRB
*        FIRST DSCB.                                           @G60ASRB
*        RETURN WITH 0 IN REG 15 IF NO ERROR.                  @G60ASRB
*        RETURN WITH 4 IN REG 15 IF I/O ERROR WRITING DSCB.    @G60ASRB
***************************************************************@G60ASRB
*                                                              @G60ASRB
         L     R1,WTGPREFX              WTG PREFIX             @G60ASRB
         STM   R2,RET,IECREGSV-IECPREFX(R1) SAVE REGISTERS     @G60ASRB
         LR    RBASE,RF                 NEW BASE               @G60ASRB
         USING DSCUPD,RBASE                                    @G60ASRB
         LA    RC,0                     INITIALIZE TO INDICATE @G60ASRB*
                                        DSCB NOT MODIFIED      @G60ASRB
         TM    DXDCBLST,PLISTOP1        INPUT                  @G60ASRB
         BZ    DSCUP10                  BRANCH IF INPUT        @G60ASRB
         TM    DS1DSIND-DS1FMTID(RB),DS1DSCHA AREADY ON        @G60ASRB
         BO    DSCUP10                  BRANCH IF NEEDNT SET   @G60ASRB
         OI    DS1DSIND-DS1FMTID(RB),DS1DSCHA SET IT           @G60ASRB
         LA    RC,K1                    INDICATE DSCB UPDATED  @G60ASRB
*                                                              @G60ASRB
DSCUP10  EQU   *                        CHECK ACCESS DATE      @G60ASRB
         CLC   DS1REFD-DS1FMTID(,RB),DAMVZERO IS DATE ZERO     @G60ASRB
         BE    DSCUP20                  BRANCH IF ZERO-DATE IS @G60ASRB*
                                        NOT BEING MAINTAINED   @G60ASRB
         BAL   RET,DOCVTDTE             MOVE CVTDATE TO        @G60ASRB*
                                        DXWORK2 IN BINARY      @G60ASRB
         CLC   DS1REFD-DS1FMTID(,RB),DXWORK2+K1 IS DSCB DATE   @G60ASBJ*
                                        DIFFERENT FROM CVT DATE@G60ASBJ
         BE    DSCUP20                  BRANCH IF DSCB DATE IS @G60ASBJ*
                                        EQUAL TO CVT DATE      @G60ASRB
         MVC   DS1REFD-DS1FMTID(,RB),DXWORK2+K1 UPDATE DSCB    @G60ASRB
         LA    RC,K1                    INDICATE DSCB UPDATED  @G60ASRB
*                                                              @G60ASRB
DSCUP20  EQU   *                        CAUSE WRITE OF DSCB    @G60ASRB
*                                                              @G60ASRB
         LTR   RC,RC                    DSCB UPDATED           @G60ASRB
         BZ    DSCUP40                  BRANCH IF NO           @G60ASRB
         LA    RB,0(,RB)                CLEAR HIGH BYTE        @G60ASRB
         LA    RCORE,0(,RCORE)          CLEAR HIGH BYTE        @G60ASRB
         LA    RF,F1CCHHR-F1DATA(,RB)   CCHHR IF NOT 1ST DSCB  @G60ASRB
         CR    RB,RCORE                 FIRST DSCB             @G60ASRB
         BNE   DSCUP30                  BRANCH IF NOT          @G60ASRB
         LA    RF,DXCCW7                CCHHR IF EOV(1ST DSCB) @G60ASRB
         CLC   DAMVEOV2,WTGMODNM+K3     IS IT EOV              @G60ASRB
         BE    DSCUP30                  BRANCH IF YES          @G60ASRB
         OI    JFCBMASK+K4,JFCMDMOD     REWRITE DSCB LATER     @G60ASRB
         B     DSCUP40                  EXIT                   @G60ASRB
*                                                              @G60ASRB
DSCUP30  EQU   *                        WRITE DSCB             @G60ASRB
*                                                              @G60ASRB
         XC    DXCCW1(K24),DXCCW1       ZERO 3 CCWS            @G60ASRB
         MVC   DXDAADDR+K3(L'F1CCHHR),K0(RF) SET UP IOBSEEK    @G60ASRB
         ST    RF,DXCCW1                PUT IN SID CCW         @G60ASRB
         LA    RF,DXCCW1                                       @G60ASRB
         ST    RF,DXCCW2                TIC TO CCW1            @G60ASRB
         LA    RB,K0(,RB)                                      @G60ASRB
         ST    RB,DXCCW3                DSCB                   @G60ASRB
         OC    DXCCW1(K24),DAMVWRF1     OP CODES,FLAGS         @G60ASRB
         EXCP  DXIOB                    WRITE DSCB             @G60ASRB
         LA    RF,K4                    ERROR EXIT             @G60ASRB
         B     DSCUP50                  EXIT                   @G60ASRB
*                                                              @G60ASRB
DSCUP40  EQU   *                        NO EXCP DONE EXIT      @ZA32427
*                                                              @G60ASRB
         LA    RF,K0                                           @G60ASRB
*                                                              @G60ASRB
DSCUP50  EQU   *                        COMMON EXIT            @G60ASRB
*                                                              @G60ASRB
         L     RC,WTGPREFX              PREFIX                 @G60ASRB
         LM    R2,RET,IECREGSV-IECPREFX(RC) RESTORE REGISTERS  @G60ASRB
         BR    RET                      EXIT                   @G60ASRB
         USING DAMV0000,RBASE           REESTABLISH BASE       @G60ASRB
         EJECT
*                                                                Y02080
*****************************************************************Y02134
*                                                                Y02134
*        DETERMINE PROPER RETURN CODE FOR OPEN OR EOV            YM1472
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
DAMV9999 EQU   *                                                 Y02080
*                                                                Y02134
         BALR  RC,R0                    ESTABLISH NEW BASE       YM3070
         USING *,RC                     ESTABLISH ADDRESSABILITY YM3070
*                                                                YM3070
         LA    RF,DAMVERFF              GET LENGTH OF CODE LIST  Y02080
         CR    RF,R0                    CHECK IF CODE IS OK      Y02134
         BNL   DAMV9902                 BRANCH IF OK             Y02080
         LA    R0,K0                    SET BAD CODE IN REG 0    Y02080
*                                                                Y02134
DAMV9902 EQU   *                        GET PROPER ABEND TABLE   YM1472
*                                                                Y02080
         LA    RF,DAMVER19              POINT TO OPEN CODES      Y02080
         CLC   DAMVEOV,WTGMODNM+K3      CHECK FOR EOV CALL       Y02080
         BNE   DAMV9905                 BRANCH IF OPEN           Y02080
         LA    RF,DAMVER55              POINT TO EOV  CODES      Y02080
*                                                                Y02134
DAMV9905 EQU   *                        GET PROPER ABEND CODE    YM1472
*                                                                Y02080
         AR    RF,R0                    ADD ERROR OFFSET         Y02080
         IC    R0,K0(RF)                INSERT PROPER PD CODE    Y02080
*                                                                Y02134
         CLC   DAMVEOV,WTGMODNM+K3      CHECK FOR EOV CALL       Y02080
         BE    DAMV9990                 BRANCH IF EOV            Y02134
*                                                                Y02134
         CLI   DXWORK,K213              CHECK FOR 213 CODE       Y02134
         BNE   DAMV9990                 BRANCH IF NOT 213        Y02134
*
         IECRES LOAD,MODID=ID4C5G,BRCODE=0,BRANCH=QUEUED         Y02080
*                                                                Y02134
DAMV9990 EQU   *                        SEE IF NEW VOL OK        YM1472
*                                                                Y02080
         MVC   DXVOLSR1,UCBVOLI         SET UP DISMOUNT          YM1472
         CLC   DXVOLSR2,SCRTCH          CHECK FOR NON-SPECIFIC   YM1472
         BE    DAMV7510                 BRANCH IF SCRTCH         YM1472
*                                                                YM1472
         MVC   DXRETMOD,ID4C4A          SET UP RETURN MOD        Y02080
         LA    RET,K24                  SET UP RETURN OFFSET     Y02080
*                                                                Y02134
*        NOTE - 4A RETURN MODULE SAVED AT DXSAVMOD               Y02080
*                                                                Y02080
         DMABCOND (0),ID4C0P                                     Y02080
         DROP  RC
         EJECT
GETF1    EQU   *                        GET F1 DSCB WORKAREA   @G18MSBS
         IECRES GET,LV=(0),ID=F1,                              @G18MSBSX
               PREFIX=YES,STM=(R2,RET,WTGPREFX)                @G18MSBS
*                                                              @G18MSBS
         BR    RET                      RETURN TO CALLER       @G18MSBS
         SPACE 1                                               @G18MSBS
GETF2F3  EQU   *                        GET F2/F3 DSCB WKAREA  @G18MSBS
         IECRES GET,LV=(0),ID=F2F3,                            @G18MSBSX
               PREFIX=YES,STM=(2,14,WTGPREFX)                  @G18MSBS
*                                                              @G18MSBS
         BR    RET                      RETURN TO CALLER       @G18MSBS
         EJECT
DOCVTDTE EQU   *                        CVTDATE CONVERT RTNE   @G60ASRB
*                                                              @G60ASRB
*        CONVERT CVTDATE TO BINARY                             @G60ASRB
*        CVTDATE IN FORM X'00YYDDDF' IN PACKED DECIMAL.        @G60ASRB
*        DXWORK2 WILL CONTAIN X'00YYDDDD' IN BINARY.           @G60ASRB
*                                                              @G60ASRB
         L     R1,CVTPTR                GET ADDR OF CVT        @G60ASRB
         XC    DXWORK,DXWORK            CLEAR WORK AREA        @G60ASRB
         XC    DXWORK1,DXWORK1          CLEAR WORK AREA        @G60ASRB
         XC    DXWORK2,DXWORK2          CLEAR WORK AREA        @G60ASRB
         MVC   DXWORK+K6(K2),CVTDATE+K2-CVT(R1) CURRENT DAY    @G60ASRB*
                                        AS X'000000000000DDDF' @G60ASRB*
                                        IN PACKED DECIMAL      @G60ASRB
         CVB   RF,DXWORK                DAY NOW IN BINARY      @G60ASRB
         STH   RF,DXWORK2+K2            X'0000DDDD' IN BINARY  @G60ASRB
         MVO   DXWORK(K8),CVTDATE-CVT+K1(K1,R1) THE RESULT IS  @G60ASRB*
                                        X'0000000000000YYF'    @G60ASRB*
                                        IN PACKED DECIMAL      @G60ASRB
         CVB   RF,DXWORK                CONVERT YEAR TO BINARY @G60ASRB
         STH   RF,DXWORK2               DATE NOW X'00YYDDDD'   @G60ASRB*
                                        IN BINARY              @G60ASRB
         BR    RET                      RETURN                 @G60ASRB
         EJECT                                                 @G60ASRB
GETCCWS  EQU   *                        GET CCW'S WORKAREA     @G18MSBS
         IECRES GET,LV=K72,ID=CCWS,                            @G18MSBSX
               PREFIX=YES,STM=(2,14,WTGPREFX)                  @G18MSBS
*                                                              @G18MSBS
         BR    RET                      RETURN TO CALLER       @G18MSBS
         SPACE 1                                               @G18MSBS
FREECCWS EQU   *                        FREE CCW'S WORKAREA    @G18MSBS
         IECRES FREE,A=(1),PREFIX=YES,STM=(2,14,WTGPREFX)      @G18MSBS
*                                                              @G18MSBS
         BR    RET                      RETURN TO CALLER       @G18MSBS
         SPACE 1                                               @G18MSBS
DAMVTEST EQU   *                        TEST AUTHORIZED CALLER @G18MSBS
         BALR  RF,R0                   ESTABLISH ADDRESSABILITY@ZA29779
         USING *,RF                                            @ZA29779
         TESTAUTH KEY=YES,FCTN=1        TEST AUTHORIZATION     @G18MSBS
         DROP  RF                                              @ZA29779
         BR    RET                      RETURN TO CALLER       @G18MSBS
         EJECT
*
***********************************************************************
*
*        CONSTANTS
*
***********************************************************************
*                                                                Y02080
DAMVER19 DC    AL1(0)                   OPEN ERROR CODES         Y02080
         DC    AL1(27)                  CODE 1 = 413-20          Y02080
         DC    AL1(216)                 CODE 2 = 213-0C          Y02080
         DC    AL1(30)                  CODE 3 = 213-04          Y02080
         DC    AL1(36)                  CODE 4 = 313-04          Y02080
         DC    AL1(41)                  CODE 5 = 913-14          Y02083
         DC    AL1(214)                 CODE 6 = 03D-04          Y02080
         DC    AL1(215)                 CODE 7 = 03D-08          Y02080
         DC    AL1(230)                 CODE 8 = 213-20          Y02134
         DC    AL1(231)                 CODE 9 = 213-24          Y02134
         DC    AL1(53)                  CODE 10 = 013-14         Y02134
         DC    AL1(243)                 CODE 11 = 913-2C         Y02082
         DC    AL1(239)                 CODE 12 = 913-28         Y02083
         DC    AL1(28)                  CODE 13 = 713-08         YM6514
         DC    AL1(112)                 CODE 14 = 413-30       @Y30LSFY
         DC    AL1(232)                 CODE 15 = 03D-0C       @ZA02225
         DC    AL1(141)                 CODE 16 = 913-38       @Z40RSDH
         DC    AL1(0)                   CODE 17 = CANNOT OCCUR @Z40RSDH
         DC    AL1(142)                 CODE 18 = 913-3C       @Z40RSDH
         DC    AL1(143)                 CODE 19 = 913-40       @Z40RSDH
         DC    AL1(0)                   CODE 20 = CANNOT OCCUR @Z40RSDH
         DC    AL1(253)                 CODE 21 = 413-34       @ZM44627
         DC    AL1(0)                   CODE 22 = CANNOT OCCUR @G32DSMI
         DC    AL1(242)                 CODE 23 = 213-2C       @G60ASRB
         DC    AL1(31)                  CODE 24 = 213=18       @G60ASRB
*                                                                Y02134
DAMVER55 DC    AL1(0)                   EOV  ERROR CODES         Y02080
         DC    AL1(189)                 CODE 1 = 737-08          Y02080
         DC    AL1(171)                 CODE 2 = 737-0C          Y02080
         DC    AL1(190)                 CODE 3 = 737-04          Y02080
         DC    AL1(178)                 CODE 4 = 737-1C          Y02080
         DC    AL1(0)                   CODE 5 = CANNOT OCCUR    Y02080
         DC    AL1(0)                   CODE 6 = CANNOT OCCUR    Y02080
         DC    AL1(0)                   CODE 7 = CANNOT OCCUR    Y02080
         DC    AL1(230)                 CODE 8 = C37-04          Y02134
         DC    AL1(231)                 CODE 9 = C37-08          Y02134
         DC    AL1(240)                 CODE 10 = 937-10         Y02083
         DC    AL1(241)                 CODE 11 = 937-14         Y02083
         DC    AL1(0)                   CODE 12 = CANNOT OCCUR   Y02083
         DC    AL1(189)                 CODE 13 = 737-08         YM6514
         DC    AL1(112)                 CODE 14 = 737-38       @Y30LSFY
         DC    AL1(0)                   CODE 15 = CANT OCCUR   @ZA02225
         DC    AL1(1)                   CODE 16 = 937-28       @Z40RSDH
         DC    AL1(2)                   CODE 17 = 937-2C       @Z40RSDH
         DC    AL1(3)                   CODE 18 = 937-30       @Z40RSDH
         DC    AL1(4)                   CODE 19 = 937-34       @Z40RSDH
         DC    AL1(6)                   CODE 20 = 937-3C       @Z40RSDH
         DC    AL1(250)                 CODE 21 = 737-28       @G18MSBS
         DC    AL1(7)                   CODE 22 = 937-40       @G32DSMI
         DC    AL1(113)                 CODE 23 = 737-3C       @G60ASRB
         DC    AL1(190)                 CODE 24 = 737-04       @G60ASRB
DAMVERFF EQU   DAMVER55-DAMVER19        LENGTH OF CODE LIST      Y02083
DAMVZERO DC    XL3'0'                   ZEROS                  @G60ASRB
*                                                              @G60ASRB
DAMVWRF1 DS    0D                       WRITE F1DSCB CCWS      @G60ASRB
         CCW   CCWSCHID,K0,CCWCMDCH,K5  SEARCH ID EQUAL        @G60ASRB
         CCW   CCWTIC,K0,K0,K0          TIC                    @G60ASRB
         CCW   CCWWRTDA,K0,K0,DS1END-DS1FMTID WRITE DATA       @G60ASRB
LOCKERR  DMABCOND PCK,SETLOCK           SETLOCK ERROR ANALYSIS @G60ASRB*
                                        ROUTINE                @G60ASRB
DAMVEOV2 DC    CL3'055'                 EOV MOD ID             @G60ASRB
IFG0EX0A DC    C'IFG0EX0A'              DSCB-NOT-FOUND EXIT    @G60ASRB
         EJECT
*                                       CHANGED FOLLOWING LINE @G60ASBJ
         XCTLTABL BRT=YES,LENGTH=,ID=(EX0A,IFG0EX0A)
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS    YM3070
         EJECT
         IDDVDSCB                                                Y02132
         EJECT
WACCW    DSECT                                                   Y02082
WACCW1   DS    D                        EXTENDED CCW 1           Y02082
WACCW2   DS    D                        EXTENDED CCW 2           Y02082
WACCW3   DS    D                        EXTENDED CCW 3           Y02082
WACCW4   DS    D                        EXTENDED CCW 4           Y02082
WACCW5   DS    D                        EXTENDED CCW 5           Y02082
WACCW6   DS    D                        EXTENDED CCW 6           Y02082
WACCW7   DS    D                        EXTENDED CCW 7           Y02082
WACCW8   DS    D                        EXTENDED CCW 8           Y02082
WACCW9   DS    D                        EXTENDED CCW 9           Y02082
         EJECT
         IEFJSSOB MO,CONTIG=YES                                @G18MSBS
DASSOBAD DS    A                        SSOB PARM PTR          @G18MSBS
SSOBSAVE DS    10D                      SSOB SAVE AREA         @G18MSBS
SSOBSIZE EQU   *-SSOB                   SIZE OF GETMAIN        @G18MSBS
         EJECT
         IEFJESCT                                              @G18MSBS
         EJECT
JCTABLE  DSECT                                                 @G18MSBS
         IEFAJCTB                                              @G18MSBS
         EJECT
SCTABLE  DSECT                                                 @G18MSBS
         IEFASCTB                                              @G18MSBS
         EJECT
F1AREA   DSECT                                                 @G60ASRB
*                                                              @G60ASRB
*        THIS DSECT DESCRIBES THE AREA INTO WHICH A FORMAT 1   @G60ASRB
*        DSCB IS READ.  F1DSN EXISTS ONLY IF A PDS.            @G60ASRB
*                                                              @G60ASRB
F1DSN    DS    CL(L'JFCBDSNM)           DATASET NAME           @G60ASRB
F1DATA   DS    CL(DS1END-DS1FMTID)      DATA AREA OF DSCB      @G60ASRB
F1NEXT   DS    F                        CHAIN TO NEXT DSCB     @G60ASRB
F1UCB    DS    F                        UCB                    @G60ASRB
F1CCHHR  DS    CL5                      CCHHR OF FORMAT 1 DSCB @G60ASRB
F1POLTH  EQU   *-F1DSN                  LENGTH IF A PDS        @G60ASRB
F1LTH    EQU   *-F1DATA                 LENTH IF NOT A PDS     @G60ASRB
         EJECT
         END
