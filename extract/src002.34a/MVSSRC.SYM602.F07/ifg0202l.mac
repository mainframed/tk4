         TITLE 'IFG0202L                      CLOSE FINAL EXIT MODULE'
IFG0202L CSECT
         ENTRY IFG0209L                 ALIAS ENTRY POINT        YM1403
IFG0209L EQU   IFG0202L                 SECONDARY ENTRY NAME     YM1403
*                                                                YM1403
***********************************************************************
*                                                                     *
*          VS1 RELEASE 02 DELETIONS                                   *
*0000360700,360800,360900,500640-500680,500696-500699            XM1037
*0000551100-551806                                               XM0478
*0000                                                            X02989
*          VS2 RELEASE 01 DELETIONS                                   *
*                                                                     *
*0000                                                            YM0954
*0000                                                            YM2823
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000                                                          @ZA07016
*0000                                                          @ZA09156
*0000                                                          @ZA09659
*          RELEASE 21 DELETIONS/CHANGES                               *
*                                                                M0039
*0000639992-641940, 666500-682500                                Y02080
*                                                                     *
* MODULE NAME = IFG0202L                                              *
*                                                                     *
* DESCRIPTIVE NAME = CLOSE FINAL EXIT MODULE                          *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE FINAL TERMINATION FUNCTION.                                *
*       THIS FUNCTION STARTS IN MODULE IFG0202K.                      *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0202L - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             INITIAL ENTRY--                                         *
*                IFG0202K - CONTINUE PROCESSING CLOSE FINAL           *
*                           TERMINATION FUNCTION.                     *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA AN XCTL MACRO-INSTRUCTION TO THE FOLLOWING--            *
*         IGC0001I - FOR CONCATENATION OF UNLIKE ATTRIBUTES.          *
*    OR A RETURN TO THE CALLING PROGRAM.                         Y02080
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING TCB,RET
         USING UCBOB,RUCB
         USING CVT,RD
         USING TIOENTRY,RTIOT
         USING DEB,RDEB
         USING WTG,RWTG
         USING WTGENTRY,RWTGC
         USING USERPRML,RPARC           RPARC POINTS TO CURRENT  Y02134
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE FINAL TERMINATION FUNCTION.                                *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    DECREMENT DSAB OPEN COUNT FOR VSAM DATA SETS                Y02134
*    INTERFACE WITH TRACE TERMINATION FACILITY.                       *
*    FREE STORAGE FOR IRB, DEB, AND WORKAREA.                    Y02080
*    RELEASE WTG TABLE USING THE RESIDENT ROUTINE WHO WILL DEQ   Y02134
*     THE TIOT                                                   Y02134
*    EXIT TO CALLING PROGRAM OR INITIAL LOAD OF OPEN IF CONCATENATION *
*    OF UNLIKE ATTRIBUTES IS SPECIFIED.                               *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE FINAL RESTORE SYSTEM FUNCTION.                             *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY.                                 *
*       DD ENTRY IN THE TIOT.                                         *
*       WTG TABLE.                                                    *
*       CURRENT WTG TABLE ENTRY.                                      *
*       DCB.                                                          *
*       CLOSE WORK AREA.                                              *
*       RESIDENT ROUTINE.                                             *
*       UCB.                                                          *
*       DEB.                                                          *
*                                                                     *
* OUTPUT -                                                            *
*    ALL STORAGE USED BY CLOSE RELEASED.                              *
*    RETURN CODE IN REGISTER 15:                                 X02989
*       0     ALL ENTRIES IN PARAMETER LIST WERE SUCCESSFULLY    X02989
*             CLOSED.                                            X02989
*       4     ONE OR MORE ENTRIES IN CLOSE PARAMETER LIST        XM1037
*             WERE NOT CLOSED SUCCESSFULLY.                      XM1037
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*    CALLING PROGRAM.                                                 *
*    INITIAL LOAD OF OPEN.                                            *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
         MVC   WTGIDTTR,EXITMOD         SET UP ALIAS ID          YM1403
*                                                                YM1403
         IECRES SYNCHDCB                SYNCH UP TO LAST LOAD    YM1403
*                                                                YM1403
         MVI   WTGLNG,K0                SET RETURN CODE TO 0     Y02080
CFN07600 EQU   *
         L     RDCB,PLISTDCB(,RPARC)    GET DCB ADDR
         L     RCORE,WTGCORE-1          GET WORKAREA ADDR
         LA    RCORE,0(RCORE)           CLEAR HIGH ORDER BYTE
         LTR   RCORE,RCORE              WORKAREA ADDR PRESENT
         BNZ   CFN07700                 BR IF YES                X02989
         MVI   WTGLNG,K4                SET RETURN CODE TO 4     Y02080
         B     CFN07900                 BR TO GET NEXT ENTRY     X02989
CFN07700 EQU   *                        WORK AREA PRESENT        X02989
         TM    DCBOFLGS,DCBOPEN         IS OPEN BIT ON           XM0478
         BO    CFN07750                 ERROR - DCB OPEN         Y02134
*    TEST FOR VTAM ACB AND EXAMINE ERROR FLAGS(ACBERFLG).        YM3011
*    NON-ZERO ERROR FLAGS CAUSES RETURN CODE SETTING OF 4        YM3011
         CLC   DCBDDNAM(K8),=X'FF00000000000000'   VTAM ACB?     YM3011
         BNE   CFN07720                 NO, GO TEST FOR VSAM     YM3011
         CLI   ACBERFLG-IFGACB(RDCB),K0 ARE ERROR FLAGS ZERO     YM3011
         BNE   CFN07750                 NO, GO SET RETURN CODE   YM3011
         B     CFN07775                 CONTINUE                 YM3011
CFN07720 EQU   *                        TEST FOR VSAM            YM3011
         TM    JFCDSRG2,JFCORGAM        IS DATA SET VSAM         XM0478
         BNO   CFN07775                 BR IF NOT                XM0478
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  XM1037
         BO    CFN08200                 BR IF YES TO DECREMENT   YM6572
*                                       DSAB OPEN COUNT -        YM6572
*                                       RETURN TO CFN07740       YM6572
         B     CFN07775                 BRANCH IF NO             YM6572
CFN07740 EQU   *                        SEE IF CLOSE ERROR       YM6572
         CLI   ACBERFLG-IFGACB(RDCB),K0 ARE ERROR FLAGS SET      XM0478
         BE    CFN07775                 BR IF NO                 YM6572
CFN07750 EQU   *                        OPEN BIT ON              XM0478
         MVI   WTGLNG,K4                SET RETURN CODE TO 4     Y02080
CFN07775 EQU   *                        TEST OPTIONAL TRACE      XM0478
         TM    WTGPATHS+K1,WTGTRACE     OPTIONAL TRACE IND. ON
         BZ    CFN07800                 BRANCH IF NOT
         NI    WTGPATHS+K1,X'FF'-WTGTRACE  TURN OFF OPTIONAL TRACE IND
CFN07800 EQU   *
*                                                                Y02134
         L     RB,DXDSABAD              LOAD CURRENT DSAB PTR    Y02134
         USING DSAB,RB                  RB POINTS TO DSAB        Y02134
         L     RET,DXTCBADR             GET CURRENT TCB          Y02134
         TM    TCBFLGS,TCBFA            IS ABEND OCCURRING?      Y02134
         BO    CFN07900                 BR IF YES-NO CONCATENATE Y02134
         TM    DCBOFLGS,DCBOLOCK+DCBOCON LOCK & CONCAT BITS ON?  Y02134
         BNO   CFN07900                 BRANCH IF NOT            Y02134
         LTR   RB,RB                    RB=0                   @ZA07016
         BZ    CFN07830                 BRANCH YES             @ZA09659
         L     RF,DSABFCHN              GET NEXT DSAB            Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        THERE SHOULD BE ANOTHER DSAB SINCE THE CONCATENATION    Y02134
*        BIT SHOULDN'T BE ON IF THERE ISN'T.                     Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         LTR   RF,RF                    IS THERE ONE?            Y02134
         BNZ   CFN07860                 BRANCH IF ANOTHER DSAB   Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        UNCERIMONIOUSLY TURN OFF CONCATENATION BIT IF THERE'S   Y02134
*        NOT ANOTHER DSAB                                        Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
CFN07830 NI    DCBOFLGS,K255-DCBOCON    TURN OFF CONCAT BIT    @ZA09659
         B     CFN07900                 GET NEXT ENTRY           Y02134
*                                                                Y02134
CFN07860 EQU   *                        INITIALIZE CLOSE WK AREA Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        INITIALIZE CLOSE WORKAREA FOR OPEN                      Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         LR    RB,RF                    LOAD DSAB BASE POINTER   Y02134
CFN07880 ST    RB,DXDSABAD              STORE NEXT DSAB        @ZA09156
         ST    RB,DXDSAB                STORE CURRENT DSAB       Y02134
         L     RTIOT,DSABTIOT           GET NEXT TIOT ENTRY ADDR Y02134
         ST    RTIOT,DXTIOTAD           STORE NEXT TIOT ENTRY AD Y02134
         L     RA,TCBTIO                GET TIOT START ADDR      Y02134
         LR    RF,RTIOT                 GET TIOT ENTRY ADDR      Y02134
         SR    RF,RA                    GET TIOT ENTRY OFFSET    Y02134
         STH   RF,DCBTIOT               STORE IN DCB             Y02134
         L     RUCB,TIOEFSRT-K1         GET FIRST UCB ADDR       Y02134
         ST    RUCB,DXUCBADR            STORE IN WORKAREA        Y02134
*
CFN07900 EQU   *
*                                                                Y02134
         DROP  RB                       DROP DSAB POINTER        Y02134
         TM    DXDCBLST,LASTNTRY        TEST FOR LAST ENTRY      Y02134
         LA    RWTGC,WTGENTRY+L'WTGENTRY NEXT WTG ENTRY          Y02134
         LA    RPARC,DXDCBLST+L'DXDCBLST NEXT DCB ENTRY          Y02134
         BZ    CFN07600                 GET NEXT WORKAREA
         L     RPAR,WTGPREFX            ADDR OF WTG BASE PREFIX  Y02082
         USING IECPREFX,RPAR                                     Y02082
         L     RPAR,IECUPRML            GET ADDR OF USERS PARAM  Y02082
         DROP  RPAR                                              Y02082
*
*        TEST FOR EOVC ON
         L     RDCB,PLISTDCB(,RPAR)     ADDR OF FIRST DCB
         L     RD,CVTPTR                VECTOR TABLE ADDRESS
         L     RET,CVTTCBP              POINTER TO TCB
         L     RET,K4(,RET)             CURRENT TCB ADDRESS
         TM    TCBFLGS,TCBFA            IS ABEND BIT ON
         BO    CFN08000                 BR IF YES --NO CONCATENATION
         LA    RWTGC,WTGENTRY-WTG(,RWTG) WTG ENTRY POINTER       YM1109
         L     RCORE,WTGCORE-K1         GET WORKAREA ADDR        YM3177
         LA    RCORE,FORCORE            CLEAR HIGH ORDER BYTE    YM3177
         LTR   RCORE,RCORE              WORKAREA ADDR PRESENT    YM3177
         BZ    CFN08000                 BRANCH IF NOT            YM3177
         CLI   WTGIDTTR,K0              IS ENTRY ACTIVE          YM1109
         BE    CFN08000                 BR NO, NO CONCATENATION  YM1109
         TM    DCBOFLGS,DCBOLOCK+DCBOCON  CHK LOCK AND EOVC SW'S.
         BNO   CFN08000                 B, IF BOTH NOT ON
         OI    DCBOFLGS,DCBOBUSY        SET BUSY BIT ON FOR OPEN Y02082
         XC    DXDEBXAD,DXDEBXAD        ZERO OUT DEBX PTR        YM7839
         LR    R1,RPAR                  PT TO PARM LIST FOR OPEN Y02082
         L     RF,WTGPREFX              GET PREFIX ADDR          Y02144
         L     RF,IECRRPRM-IECPREFX(RF) GET ADDR OF RECOVERY     Y02144
         USING RRPLIST,RF               ESTABLISH BASE ADDR      Y02144
         XC    RRPLIST+K1(K23),RRPLIST+K1  ZERO RECOVERY PARMS   Y02144
         XC    DXATCOM1(K8),DXATCOM1    EXCEPT RRFUNCTN          Y02144
         XC    DXATCOM4(K12),DXATCOM4   AND ADDR OF RRPLIST      Y02144
         DROP  RF                       DROP BASE REG            Y02144
*
*        REFRESH USER DCB TO CLOSED STATUS
*
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,WTGPREFX) COPYBACK YM8552
*
*        XCTL TO OPEN FOR CONCATENATION OF UNLIKE ATTRIBUTES
*
         IECRES LOAD,MODNM=OPENLD,PREFIX=WTGPREFX,               Y02080*
               BRANCH=DIRECT            XCTL TO OPEN             Y02080
         EJECT
CFN08000 EQU   *
*                                                                Y01018
         L     RPARC,WTGPREFX           LOAD PREFIX ADDRESS      Y02134
         L     RPARC,IECUPRML-IECPREFX(,RPARC) PARM LIST POINTER Y02134
         LA    RWTGC,WTGENTRY-WTG(,RWTG) WTG ENTRY POINTER       Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
CFN08005 EQU   *                        COPY BACK DCB            Y01018
*                                                                Y02134
         L     RDCB,DXDCBLST            LOAD DCB ADDRESS         Y02134
         L     RCORE,WTGCORE-K1         GET WORKAREA ADDR        Y02134
         LA    RCORE,FORCORE            CLEAR HIGH ORDER BYTE    Y02134
         LTR   RCORE,RCORE              WORKAREA ADDR PRESENT    Y02134
         BZ    CFN08025                 BRANCH IF NOT            YM1342
*
* AVOID COPYBACK IF DELAYED/IGNORED ABEND IS PENDING OR OPEN BIT IS ON
         TM    JFCBMASK+K4,JFCMABND     DELAYED ABEND PENDING    Y02144
         BO    CFN08030                 BR IF YES                Y02144
         TM    DXATOPEN,DXATIGN         IGNORED ABEND PENDING    Y02144
         BO    CFN08030                 BR IF YES                Y02144
         TM    DCBOFLGS,DCBOPEN         IS OPEN BIT ON           YM7304
         BO    CFN08025                 BRANCH IF ON, DCB ERROR  YM7304
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
         TM    JFCDSRG2,JFCORGAM        IS DATA SET VSAM         Y02134
         BNO   CFN08010                 BRANCH IF NOT VSAM       Y02134
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  Y02134
         BNO   CFN08010                 BRANCH IF NO             Y02134
         CLI   ACBERFLG-IFGACB(RDCB),K0 ARE ERROR FLAGS SET      Y02134
         BNE   CFN08025                 BRANCH IF YES            Y02134
         EJECT
CFN08010 EQU   *                        NOT VSAM ACB             Y02134
*                                                                Y02134
         L     RET,DXTCBADR             GET CURRENT TCB          Y02134
         L     RB,DXDSABAD              LOAD DSAB POINTER        Y02134
         LTR   RB,RB                    IS THERE A DSAB          YM1342
         BZ    CFN08025                 BR IF NO                 YM1342
         USING DSAB,RB                  RB POINTS TO DSAB        Y02134
*
*        IF A CHECKPOINT DATA SET SECURITY INTERFACE EXISTS,     YM3156
*        UPDATE THE USER'S DCB FROM THE COPIED DCB AND           YM3947
*        FREE THE CHECKPOINT DCB (KEY 0 DCB).                    YM3947
*        SUBSEQUENT PROCESSING WILL FREE THE COPIED DCB.         YM3947
*        IF A SECURITY INTERFACE EXISTS, THERE ARE 3 DCBS, THE   YM3806
*        USERS IN FETCH PROTECTED CORE KEY OF USER, THE COPIED   YM3806
*        DCB IN KEY 5, AND THE CHECKPOINT DCB IN FETCH PROTECTED YM3086
*        CORE KEY ZERO.  THE KEY ZERO DCB REPRESENTS THE USER    YM3806
*        DCB IS THE CHKPT CODE.  BUT NOW THE TRUE USER'S DCB     YM3806
*        WILL BE UPDATED WITH THE TRUE COPIED DCB KEY 5.         YM3806
*
         TM    DSABFLG4,DSABCKSI+DSABCKDS  CHKPT SECURITY INT    YM3973
         BNO   CFN08015                 IF NOT, BRANCH           YM3973
         L     RC,DXUDCBAD              GET PROT. DCB ADDRESS    Y02083
         LA    RC,K0(RC)                CLEAR HIGH ORDER BYTE    YM5766
         LA    RD,K4                    BACKUP PROT. DCB ADDR BY Y02083
         SR    RC,RD                    4 TO GET USER DCB ADDR   Y02083
         LR    RF,RC                    SAVE PTR TO CHECKPT DCB  YM3947
         MODESET EXTKEY=ZERO            GO TO KEY ZERO           YM3806
         L     RDCB,K0(,RC)             GET USER'S DCB ADDR      Y02083
         ST    RDCB,DXUDCBAD            UPDATE WA USER DCB ADDR  Y02083
         ICM   RA,B'0111',DCBEXLSA      SAVE USER EXIT LIST ADDR YM3863
         L     RC,DXPDCBAD              GET PT TO KEY 5 DCB      YM3806
         AH    RC,DXUDCBPL              PNT PAST PROT. DCB PREFX Y02083
         AH    RDCB,DXUDCBPL            PNT PAST USER DCB PREFX  Y02083
         LH    RD,DXUDCBML              GET DCB MOVE LENGTH      Y02083
         BCTR  RD,R0                    ADJUST FOR MOVE INSTR    Y02083
         MODESET KEYADDR=TCBPKF,WORKREG=1 USER KEY               Y02083
         EX    RD,CFNMOVER              UPDATE USER'S DCB        Y02083
         SH    RDCB,DXUDCBPL            RESET DCB PTR            YM3863
         STCM  RA,B'0111',DCBEXLSA      RESTORE USER EXIT ADDR   YM3863
         MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         NI    DSABFLG4,X'FF'-DSABCKSI  RESET S/I INDICATOR      Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
         STC   R1,DXUKEY                RESET TO USER KEY        YM3939
         L     RDCB,DXPDCBAD            RESTORE COPIED DCB ADDR  Y02083
*        FREE THE CHECKPOINT DCB                                 YM3947
         LR    RC,RF                    RESTORE PTR TO KEY 0 DCB YM3947
         LA    RD,L'CKSITEXT            LENGTH OF EXPLANATORY    YM5766X
                                        TEXT PRECEDING THE DCB   YM5766
         SR    RC,RD                    POINT TO TRUE W/A START  YM5766
         LA    RD,K4(RD)                ADD POINTER LENGTH       YM5766
         AH    RD,DXUDCBPL              + DCB PREFIX LENGTH      YM5766
         AH    RD,DXUDCBML              + MOVED DCB LENGTH       YM5766
         IECRES FREE,PREFIX=NO,LV=(RD),A=(RC),SP=252,KEY=0,      YM3947*
               STM=(2,14,WTGPREFX)                               YM3947
         EJECT
CFN08015 EQU   *                        CLOSE OPTION FREE        Y02134
*
*        BUILD PARAMETER LIST IF DD ENTRY TO BE UNALLOCATED
*
*        THE PARM LIST IS BUILT FOR EACH DCB REQUESTING THIS
*        SO THAT IN THE NEXT LOOP THROUGH THE DCB'S, THE TIOT
*        CAN BE DEQUEUED AND THE PARM LIST WILL STILL HAVE
*        DDNAME WITHOUT HAVING TO GET IT OUT OF THE TIOT
*
         L     RTIOT,DSABTIOT           GET TIOT ENTRY ADDRESS   Y02134
         L     RUCB,DXUCBADR            LOAD UCB ADDRESS         Y02134
         TM    TCBFLGS,TCBFA            IS ABEND OCCURRING?      Y02134
         BO    CFN08025                 BR IF YES-NO UNALLOCATE  Y02134
         TM    DXDCBLST,CLOSEREW        IS REWIND SPECIFIED      YM3177
         BO    CFN08018                 BR IF YES TO TEST DSAB   YM3177
         TM    DXDCBLST,PLISTLV         IS LEAVE SPECIFIED       YM3177
         BO    CFN08025                 BR IF YES TO SKIP UNALL  YM3177
         TM    DXDCBLST,FREE            TEST FOR CLOSE OPT FREE  Y02134
         BO    CFN08020                 BRANCH TO UNALLOCATE     Y02134
         TM    DXDCBLST,PLISTOP2        IS DISP SPECIFIED        YM3177
         BNZ   CFN08025                 BR IF NO TO SKIP UNALL   YM3177
CFN08018 EQU   *                        TEST DSAB FOR RELEASE    YM3177
         TM    DSABFLG2,DSABUNAL        TEST FOR RELEASE=CLOSE   Y02134
         BNO   CFN08025                 NO UNALLOCATION REQUESTD Y02134
*                                                                Y02134
CFN08020 EQU   *                        CLOSE OPTION FREE        Y02134
*                                                                Y02134
         MODESET EXTKEY=SCHED           DSAB IS SCHEDULER KEY    Y02082
         NC    DSABOPCT,DSABOPCT        CHECK IF ANY USERS       Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGT KEY   Y02082
         BNZ   CFN08025                 BRANCH IF USERS          Y02134
         TM    DSABFLG1,DSABCATM        TEST FOR CONCATENATION   Y02134
         BO    CFN08025                 BRANCH IF CONCATENATION  Y02134
         DROP  RB                       DSAB ADDRESSABILITY      Y02083
         XC    DXLBL,DXLBL              ZERO OUT DYN ALLOC PARML Y02134
         LA    R1,DXLBL                 LOAD POINTER TO PARMS    Y02134
         USING S99RBP,R1                R1 POINTS TO PARM LIST   Y02134
         LA    RC,S99RBP+K4             S99RB POINTER            Y02134
         USING S99RB,RC                 RC POINTS TO S99RB AREA  Y02134
         LA    RD,S99RBEND              POINTER TO S99TUPL       Y02134
         USING S99TUPL,RD               RD POINTS TO S99TUPL     Y02134
         LA    RF,S99TUPL+K8            POINTER TO S99TUNIT      Y02134
         USING S99TUNIT,RF              RF POINTS TO S99TUNIT    Y02134
         ST    RC,S99RBPTR              STORE BLOCK POINTER      Y02134
         OI    S99RBPTR,S99RBPND        SET HI ORDER BIT         Y02134
         MVI   S99RBLN,S99RBEND-S99RBLN SET LENGTH INDICATOR     Y02134
         OI    S99VERB,S99VRBUN         INDICATE UNALLOCATE      Y02134
         ST    RD,S99TXTPP              TEXT BLOCK POINTER       Y02134
         ST    RF,S99TUPTR              TEXT UNIT POINTER        Y02134
         MVC   S99TUKEY,DYNPERM         PERMANENT UNALLOCATE     Y02134
         LA    RF,S99TUENT              NEXT TEXT UNIT           Y02134
         ST    RF,S99TUPTR+K4           NEXT TEXT UNIT POINTER   Y02134
         MVI   S99TUPTR+K4,S99TUPLN     END OF TEXT              Y02134
         MVC   S99TUKEY,DYNDDNAM        SET DDNAME IN TEXT       Y02134
         MVI   S99TUNUM+K1,K1           INDICATE ONE PARM        Y02134
         LA    RF,S99TUENT              PARM IN TEXT UNIT        Y02134
         DROP  RF                                                Y02134
         USING S99TUFLD,RF              RF POINTS TO PARM        Y02134
         MVI   S99TULEN+K1,L'TIOEDDNM   DDNAME LENGTH            Y02134
         MVC   S99TUPRM(K8),TIOEDDNM    TIOT ENTRY DDNAME        Y02134
         DROP  R1,RC,RD,RF                                       Y02134
         B     CFN08030
CFN08025 EQU   *                        NEITHER UNALLOCATE NOR   Y02134
*                                       DELAY/IGNORE ABEND       Y02134
         XC    WTGENTRY,WTGENTRY        CLEAR WTG TABLE ENTRY
*
*        WTGENTRY IS NONZERO FOR THE NEXT LOOP THROUGH
*        THE DCB'S ONLY IF A DELAY OR IGNORE ABEND IS BEING
*        PROCESSED OR IF A DYNAMIC UNALLOCATION IS TO
*        TAKE PLACE. THESE ARE MUTUALLY EXCLUSIVE SITUATIONS
*                                                                Y02082
CFN08030 EQU   *                        CHECK LAST ENTRY         Y02134
         TM    DXDCBLST,LASTNTRY        TEST FOR LAST ENTRY      Y02134
         LA    RWTGC,WTGENTRY+L'WTGENTRY NEXT WTG ENTRY          Y02134
         LA    RPARC,DXDCBLST+L'DXDCBLST NEXT DCB ENTRY          Y02134
         BZ    CFN08005                 GET NEXT WORKAREA        Y02134
         EJECT
         L     RPARC,WTGPREFX           LOAD PREFIX ADDRESS      Y02134
         L     RPARC,IECUPRML-IECPREFX(,RPARC) PARM LIST POINTER Y02134
         LA    RWTGC,WTGENTRY-WTG(,RWTG) WTG ENTRY POINTER       Y02134
CFN08035 EQU   *                        UNALLOCATE IF REQUESTED  Y02134
         L     RDCB,DXDCBLST            LOAD DCB ADDRESS         Y02134
         L     RCORE,WTGCORE-K1         GET WORKAREA ADDR        Y02134
         LA    RCORE,FORCORE            CLEAR HIGH ORDER BYTE    Y02134
         LTR   RCORE,RCORE              WORKAREA ADDR PRESENT    Y02134
         BZ    CFN08055                 BRANCH IF NOT            YM1342
         TM    JFCBMASK+K4,JFCMABND     DELAYED ABEND PENDING    Y02144
         BO    CFN08055                 BR IF YES                Y02144
         TM    DXATOPEN,DXATIGN         IGNORED ABEND PENDING    Y02144
         BO    CFN08055                 BR IF YES                Y02144
*
*        THIS DCB MUST NEED IT'S DD ENTRY UNALLOCATED
*
         TM    WTGPATHS+K1,WTGTSENQ     ENQ ON TIOT?             YM3160
         BO    CFN08040                 YES, DEQ TIOT            YM3160
*
*        NO, TEST FOR CALLER ENQ                                 YM3160
*        WTGTSENQ MAY BE OFF BECAUSE WE HAVE ALREADY DEQED       YM3160
*        FOR A PREVIOUS DCB IN THIS LOOP, OR BECAUSE THE CALLER  YM3160
*        OF CLOSE HAS OBTAINED THE TIOT RESOURSE.                YM3160
*        AN ENQ RET=TEST WILL BE ISSUED. IF THE RESOURSE IS      YM3160
*        HELD BY THIS TASK, IT MUST BE BECAUSE THE CALLER HAS    YM3160
*        ENQED. IN THIS CASE THE UNALLOCATE WILL BE BYPASSED.    YM3160
*        THIS HANDLES AN INNER ACB CLOSE FOR A COMPATIBILITY     YM3159
*        INTERFACE SITUATION AS THE OUTER CLOSE HAS ENQED ON     YM3159
*        THE TIOT ALREADY.                                       YM3159
*
         MVC   ENQLIST(ENQLTH),ENQMACRO MOVE IN LIST FORM        YM3160
         L     RC,DXASCBAD              ASCB ADDRESS             YM3160
         USING ASCB,RC                                           YM3160
         MVC   ENQASID,ASCBASID         ASID TO MINOR NAME       YM3160
         DROP  RC                                                YM3160
         L     RC,DXTCBADR              CURRENT TCB              YM3160
         L     RC,TCBJSCB-TCB(,RC)      TCB'S JSCB               YM5333
         USING IEZJSCB,RC                                        YM3160
         L     RC,JSCBACT               ACTIVE JSCB              YM3160
         MVC   ENQDSABQ,JSCDSABQ        DSAB QDB TO MINOR NAME   YM3160
         DROP  RC                                                YM3160
         ENQ   (,ENQMIN),MF=(E,ENQLIST)  ENQ TIOT                YM3160
         LTR   RF,RF                    CALLER ENQUEUED?         YM3160
         BZ    CFN08045                 USER NOT ENQ, UNALLOC    YM3160
         CLI   K3(RF),PREVREQ           CALLER OBTAINED RESOURCE YM3160
         BE    CFN08050                 YES, NO UNALLOC          YM3160
         B     CFN08045                 UNALLOCATE IF RC=4 SINCE YM3160
*                                       UNALLOC WILL WAIT FOR IT YM3160
*
PREVREQ  EQU   08                       PREVIOUS REQUEST, RESOR  YM3160
*
CFN08040 EQU   *                        DEQUEUE RESOURCE         YM3160
*
*        THE TIOT RESOURSE WILL BE DEQED BEFORE CALLING          YM3160
*        DYNAMIC UNALLOCATION.                                   YM3160
*
         L     RC,DXASCBAD              ASCB ADDR                YM3160
         USING ASCB,RC                                           YM3160
         MVC   DEQASID,ASCBASID         MOVE ASID TO MIN NAME    YM3160
         L     RC,DXTCBADR              CURRENT TCB              YM3160
         L     RC,TCBJSCB-TCB(,RC)      TCB'S JSCB               YM5333
         USING IEZJSCB,RC                                        YM3160
         L     RC,JSCBACT               ACTIVE JSCB ADDR         YM3160
         MVC   DEQDSABQ,JSCDSABQ        MOVE DSAB QDB ADDR TO    YM3160
*                                       MINOR NAME               YM3160
         DROP RC                                                 YM3160
         MVC   DEQLIST(DEQLTH),DEQMACRO  MOVE IN LIST FORM       YM3160
         DEQ   (,DEQMIN),MF=(E,DEQLIST) DEQ TIOT                 YM3160
         NI    WTGPATHS+K1,ALLBITS-WTGTSENQ TURN OFF ENQ BIT     YM3160
CFN08045 EQU   *
         LA    R1,DXLBL                 LOAD POINTER TO PARMS    Y02134
         DYNALLOC ,                     INVOKE DYN UNALLOCATION  Y02134
CFN08050 EQU   *                        END OF S/I PROCESSING    Y02083
         XC    WTGENTRY,WTGENTRY        CLEAR WTG TABLE ENTRY
*                                                                Y02082
CFN08055 EQU   *                        CHECK LAST ENTRY         Y02134
         TM    DXDCBLST,LASTNTRY        TEST FOR LAST ENTRY      Y02134
         LA    RWTGC,WTGENTRY+L'WTGENTRY NEXT WTG ENTRY          Y02134
         LA    RPARC,DXDCBLST+L'DXDCBLST NEXT DCB ENTRY          Y02134
         BZ    CFN08035                 GET NEXT WORKAREA        Y02134
*
***********************************************************************
*
*  SEE IF THERE IS A DCB LEFT THAT HAS A DEFERRED ABEND PENDING.
*
         L     RPAR,WTGPREFX            WTG PREFIX ADDR          YM3159
         L     RPAR,IECUPRML-IECPREFX(,RPAR) GET PARM LIST       YM3159
         LR    RPARC,RPAR               ADDR OF FIRST DCB ENTRY  Y02144
         LA    RWTGC,WTGENTRY-WTG(,RWTG) ADDR OF FIRST WTG ENTRY Y02144
         L     RC,WTGPREFX              GET WTG PREFIX PTR       Y02144
         L     RC,IECRRPRM-IECPREFX(,RC) GET RRPLIST ADDRESS     Y02144
         USING RRPLIST,RC                                        Y02144
*
CFN08080 EQU   *                         GET WA ADDR             Y02144
         L     RCORE,WTGCORE-K1         LOAD MAIN WORK AREA ADDR Y02144
         LA    RCORE,0(RCORE)           CLEAR HIGH ORDER BYTE    Y02144
         LTR   RCORE,RCORE              WORK AREA PRESENT        Y02144
         BZ    CFN08090                 BR IF NO, ADDR CLEARED   Y02144
         TM    JFCBMASK+K4,JFCMABND     DELAYED ABEND DCB?       Y02144
         BO    CFN08095                 YES, GO ISSUE ABEND      Y02144
*                                       NO,MUST BE IGNORED ABEND Y02144
         CLC   RRMLRTRY,RRFWORK         PRIOR IGNORED ABEND DCB  Y02144
         BNE   CFN08090                 YES,GO CHK IF LAST ENTRY Y02144
         STM   RPARC,RWTGC,RRMLRTRY     SAVE CURR DCB ENTRY ADDR Y02144
*                                       AND CURR WTG ENTRY ADDR  Y02144
***********************************************************************
*
*  CHECK FOR END OF LOOP LOOKING FOR A DELAYED/IGNORED ABEND.
*
CFN08090 EQU   *                        LOOK FOR DELAYED ABEND   Y02144
         TM    PLISTOPT(RPARC),LASTNTRY CHECK FOR LAST DCB ENTRY Y02144
         LA    RPARC,K4(RPARC)          POINT TO NEXT DCB ENTRY  Y02144
         LA    RWTGC,L'WTGENTRY(RWTGC)  POINT TO NEXT WTG ENTRY  Y02144
         BZ    CFN08080                 BR NO TO CHK FURTHER FOR Y02144
*                                       A DELAYED ABEND DCB      Y02144
         CLC   RRMLRTRY,RRFWORK         IGNORED ABEND PENDING    Y02144
         BE    CFN08100                 NO, BR TO FREE WTG TABLE Y02144
         LM    RPARC,RWTGC,RRMLRTRY     GET CURR DCB ENTRY ADDR  Y02144
*                                       AND CURR WTG ENTRY ADDR  Y02144
         LA    RCORE,CFN08100           GET MAINLINE RETRY ADDR  Y02144
         ST    RCORE,RRMLRTRY           SAVE MAINLINE RETRY ADDR Y02144
         XC    RRFWORK,RRFWORK          CLEAR RRPLIST WORK WORD  Y02144
         L     RCORE,WTGCORE-K1         LOAD MAIN WORK AREA ADDR Y02144
*
***********************************************************************
*
*  DO A DELAYED/IGNORED ABEND ON THIS DCB.  RESTORE REGISTERS FIRST.
*
CFN08095 EQU   *                        DO DELAYED ABEND         Y02144
         L     RDCB,DXUDCBAD            LOAD CURRENT DCB ADDR    YM5924
         LM    RTIOT,RET,DXREG9         RESTORE REGISTERS 9-14   Y02144
         L     R0,DXREG0                RESTORE REGISTER 0       Y02144
*                                                                Y02144
         SR    RF,RF                    CLEAR REG                Y02144
         IC    RF,DXRETCOD              LOAD RETURN CODE         Y02144
         LH    R1,DXABCODE              LOAD ABEND CODE INTO R1  Y02144
         SRL   R1,K4                    POSITION THE ABEND CODE  Y02144
         ABEND (1),DUMP,,SYSTEM,        SYSTEM ABEND WITH A DUMP Y02144*
               DUMPOPT=SNAPLIST                                  Y02144
*                                                                Y02144
*****************************************************************Y02134
*                                                                Y01018
*        RELEASE WTG TABLE CORE                                  Y01018
*                                                                Y02134
*****************************************************************Y02134
CFN08100 EQU   *                        RELEASE WORK AREAS       Y02144
*                                                                Y01018
         SR    R9,R9                    ZERO REGISTER            Y02080
         IC    R9,WTGLNG                SAVE RETURN CODE         Y02080
         IECRES FREE,A=(RWTG),PREFIX=WTG  FREE WTG TABLE         Y02080
         LR    RF,R9                    LOAD RETURN CODE         X02080
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
*                                                                Y02080
         EJECT
*
*        DECREMENT DSAB OPEN COUNT FOR VSAM ACB                  Y02134
*
*        FIRST CHECK IF DSAB EXISTS                              YM3974
CFN08200 EQU   *                        DECREMENT DSAB OPEN CT   YM3974
         MVI   DXATCLOS,DXATSABS        START DECREMENTING OPEN  YM3974
*                                       COUNT IN DSAB(S)         Y02134
         L     RB,DXDSABAD              GET DSAB                 YM3974
         LA    RB,K0(,RB)               ZERO HIGH ORDER BYTE     YM3974
         LTR   RB,RB                    TEST FOR ZERO            YM3974
         BZ    CFN08550                 IF NO DSAB GO TO RETURN  YM3974
         MODESET EXTKEY=SCHED           DSAB KEY                 Y02134
         USING DSAB,RB                                           Y02134
CFN08300 EQU   *                        DSAB                     Y02134
         L     RC,DSABOPCT-K2           FULLWORD HOLDING COUNT   Y02134
         LR    RF,RC                    SAVE FOR CS              Y02134
         SRDL  RC,K16                   SHIFT COUNT TO RD        Y02134
         SRA   RD,K16                   PROPOGATE SIGN FOR LTR   Y02134
         LTR   RD,RD                    MAKE SURE ITS POSITIVE   Y02134
         BNP   CFN08400                 BRANCH IF NO-NEXT DSAB   Y02134
         BCTR  RD,R0                    DECREMENT COUNT          Y02134
         SLL   RD,K16                   SHIFT TO HIGH 16 BITS    Y02134
         SLDL  RC,K16                   UPDATED FULLWORD IN RC   Y02134
         CS    RF,RC,DSABOPCT-K2        TRY TO SNEAK IT IN       Y02134
         BNZ   CFN08300                 BRANCH TO TRY ONCE MORE  Y02134
CFN08400 EQU   *                        CHECK FOR NEXT DSAB      Y02134
         L     RB,DSABFCHN              NEXT DSAB                Y02134
         LTR   RB,RB                    IS THERE ANOTHER         Y02134
         BZ    CFN08500                 BRANCH IF NO TO EXIT     Y02134
         L     RTIOT,DSABTIOT           GET TIOT ENTRY           Y02134
         CLI   TIOEDDNM,C' '            CONCATENATION            Y02134
         BE    CFN08300                 BRANCH IF YES            Y02134
CFN08500 EQU   *                        NO MORE DSAB'S           Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMT KEY  Y02134
CFN08550 EQU   *                        SET RECOVERY IND         YM3974
         MVI   DXATCLOS,DXATSABF        FINISHED DECREMENTING    Y02134
*                                       OPEN COUNT IN DSAB(S)    Y02134
         L     RTIOT,DXTIOTAD           RELOAD TIOT ADDRESS      Y02134
         B     CFN07740                 RETURN                   YM6572
         EJECT
**********************************************************************
*                                                                    *
*                    CONSTANTS                                       *
*                                                                    *
**********************************************************************
         SPACE 1
CFNMOVER MVC   K0(K0,RDCB),K0(RC)       OBJECT OF EXECUTE INS    Y02083
DYNDDNAM DC    AL2(DUNDDNAM)            DYN UNALLOC CONSTANT     Y02134
DYNPERM  DC    AL2(DUNUNALC)            DYN UNALLOC CONSTANT     Y02134
CKSITEXT DC    CL24'CHECKPOINT PROTECTED DCB'  EXPLANATORY TEXT  YM5766
*
SNAPLIST SNAP  SDATA=TRT,MF=L           READ ONLY SNAP LIST FOR  Y02144*
                                        ABEND OPTION DUMPOPT     Y02144
*
ENQMACRO ENQ   (SYSZTIOT,,S,6,SYSTEM),RET=TEST,MF=L ENQ PARMLIST YM3160
ENQLTH   EQU   *-ENQMACRO               LENGTH OF PARM LIST      YM3160
DEQMACRO DEQ   (SYSZTIOT,,6,SYSTEM),RET=HAVE,MF=L DEQ PARMLIST   YM3160
DEQLTH   EQU   *-DEQMACRO               LENGTH OF PARM LIST      YM3160
SYSZTIOT DC    CL8'SYSZTIOT'            TIOT ENQ MAJOR NAME      YM3160
*
***********************************************************************
*              XCTL TABLE                                             *
***********************************************************************
*
         XCTLTABL ID=(EXITMOD,9L,OPENLD,IGC0101I),SVC=020,       YM1403X
               BRT=YES,LENGTH=                                   Y02080
         IECEQU AOS=YES                                          X02989
FREE     EQU   X'20'                    CLOSE OPTION FREE        Y02134
         IEFZB4D0                                                Y02134
         IEFZB4D2                                                Y02134
         IECDSECS CVT,TCB,RB,DSAB,TIOT,DCB,ACB,DEB,UCB,          Y02134X
               MAIN,WTG,PREFX,RRPL,JSCB,ASCB,EXPAND=YES          YM3160
FORCORE  DSECT                          REESTABLISH FORCORE      YM3159
         ORG   DXCCW                    ENQ DSECT OVER CCW AREA  YM3159
ENQLIST  DS    0C                       ENQ MACRO AREA           YM3160
         ORG   *+ENQLTH                                          YM3160
ENQMIN   DS    0CL6                     MINOR NAME               YM3160
ENQASID  DS    CL2                      ASID AREA                YM3160
ENQDSABQ DS    CL4                      DSAB QDB ADDRESS AREA    YM3160
ENQPARML EQU   *-ENQLIST                LENGTH OF ENQPARMS       YM3160
         SPACE 2                                                 YM3160
         ORG   DXCCW                    DEQ DSECT OVER CCW AREA  YM3159
DEQLIST  DS    0C                       DEQ MACRO AREA           YM3160
         ORG   *+DEQLTH                                          YM3160
DEQMIN   DS    0CL6                     MINOR NAME               YM3160
DEQASID  DS    CL2                      ASID AREA                YM3160
DEQDSABQ DS    CL4                      DSAB QDB ADDRESS AREA    YM3160
DEQPARML EQU   *-DEQLIST                LENGTH OF DEQPARMS       YM3160
         END
