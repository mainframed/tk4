         TITLE 'IFG0196L/OPEN - DCB EXIT'
         COPY  LCGASMSW
IFG0196L CSECT
***********************************************************************
*                                                                     *
*        VS2 RELEASE 03 DELETIONS/CHANGES                             *
*0000                                                          @ZA02166
*0000                                                          @ZA07611
*                                                                     *
* MODULE NAME = IFG0196L (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN MERGE DCB EXIT                              *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. FOR TSO TERMINALS OPENED FOR INPUT,INOUT,RDBACK, OR UPDAT,*
*        DETERMINE BLOCKSIZE AND LOGICAL RECORD LENGTH.               *
*                                                                     *
*        2. IF A VALID DCB EXIT EXISTS, SYNCH TO THE CALLER'S DCB EXIT*
*        ROUTINE TO ALLOW HIM TO INSPECT AND MODIFY HIS DCB BEFORE    *
*        STARTING THE BACKWARD MERGE.                                 *
*                                                                     *
*        3. EXECUTE THE DCB TO JFCB MERGE.                            *
*                                                                     *
*        4. IF THE DATA SET BEING OPENED IS THE VTOC AND THE OPEN IS  *
*        NOT FOR INPUT, THE CALLER'S AUTHORIZATION IS CHECKED.        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                  PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY, *
*                  LINK PACK AREA RESIDENT/PAGEABLE                   *
*                                                                     *
* ENTRY POINT = IFG0196L                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        FROM IFG0196J:                                               *
*           IECRES LOAD,MODID=ID6J6L,BRANCH=QUEUED                    *
*                                                                     *
*        FROM IFG0196K:                                               *
*           IECRES XCTL,ID6K6L                                        *
*                                                                     *
* INPUT = STANDARD                                                    *
*                                                                     *
* OUTPUT = STANDARD                                                   *
*                                                                     *
* EXIT-NORMAL = IFG0196M AND USER EXIT                                *
*               IFG0196V FOR TCAM TR 3705 SUPPORT                     *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0190P PROBLEM DETERMINATION                               *
*           IC = 044 FOR 013-68 ABEND, BLOCKSIZE GREATER THAN 32767   *
*           IC = 046 FOR 013-6C ABEND, TRACK OVERFLOW REQUESTED AND   *
*                                      NOT AVAILABLE                  *
*           IC = 024 FOR 913-10 ABEND, UNAUTHORIZED JOB STEP ATTEMPTS *
*                                      TO OPEN THE VTOC OTHER THAN    *
*                                      INPUT                          *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCK = NONE                                             *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, IECRES, DMABCOND, XCTLTABL, IECDSECS, IECEQU      *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TCB,RB,TIOT,UCB,JSCB,TSB,ASCB,DSAB,ACB,    YM3806C
               MAIN,WTG,RRPL,PREFX,IEZDEB                        S22024
         IECEQU IEZDEB=YES              DEFINE EQUATES           YM3070
*    EQUATES                                                     YM3070
*
DMKEY    EQU   X'50'                    DATA MANAGEMENT KEY      YM3070
XLJFCBE  EQU   X'15'              JFCBE EXIT REQST CODE        @Z40MSRZ
*
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING WTG,RWTG                 WHERE-TO-GO TABLE        Y02080
         USING TIOENTRY,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING UCBOB,RUCB               DEFINE BASE TO MAIN UCB
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
***********************************************************************
*
*  FOR TSO TERMINALS OPENED FOR INPUT, INOUT, RDBACK, OR UPDAT,
*  CHECK IF DCBBLKSI AND DCBLRECL ARE SPECIFIED.
*  IF ONLY ONE IS, DEFAULT BLKSIZE WITH LRECL OR LRECL WITH BLKSIZE.
*  IF BOTH ARE NOT, DEFAULT WITH THE TERMINAL LINE SIZE, BUT NOT
*  LARGER THAN ANY SPECIFIED BUFFER LENGTH.
*  IF DCBRECFM IS NOT SPECIFIED, DEFAULT WITH FIXED.
*
         TM    TIOELINK,TIOTTERM        IS THIS A TSO TERMINAL
         BZ    OMG30180                 BR IF NO
*
         TM    0(RPARC),PLISTOIN        IS OPEN FOR OUTPUT OR OUTIN
         BO    OMG30180                 BR IF YES
*
         LH    RET,DCBBLKSI             GET DCB BLKSIZE
         LH    RF,DCBLRECL              GET DCB LRECL
         LTR   RET,RET                  IS BLKSIZE SPECIFIED
         BZ    OMG30110                 BR IF NO
         LTR   RF,RF                    IS LRECL SPECIFIED
         BNZ   OMG30160                 BR IF YES, BOTH SPECIFIED
*
         STH   RET,DCBLRECL             SET LRECL FROM BLKSIZE
         OI    JFCBMASK+K2,X'80'        INDICATE LRECL MERGED
         B     OMG30160                 BR TO CHECK RECFM
*
OMG30110 EQU   *                        BLKSIZE NOT SPECIFIED
         LTR   RF,RF                    IS LRECL SPECIFIED
         BZ    OMG30120                 BR IF NO, NEITHER SPECIFIED
*
         STH   RF,DCBBLKSI              SET BLKSIZE FROM LRECL
         OI    JFCBMASK+K2,X'10'        INDICATE BLKSIZE MERGED
         B     OMG30160                 BR TO CHECK RECFM
*
OMG30120 EQU   *                        BOTH BLKSIZE AND LRECL ARE 0
         L     RF,DXASCBAD              GET PTR TO ASCB          Y02080
         L     R1,ASCBTSB-ASCB(,RF)     GET TSB PTR              Y02080
         SR    RF,RF                    CLEAR REGISTER
         MODESET EXTKEY=TCAM            KEY 6 FOR TCAM           YM3936
         IC    RF,TSBLNSZ-TSB(,R1)      GET TERMINAL LINE SIZE
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGT KEY   YM3936
         LH    RET,DCBBUFL              GET DCB BUFFER LENGTH
         LTR   RET,RET                  IS BUFFER LENGTH SPECIFIED
         BZ    OMG30140                 BR IF NO TO USE TERMINAL SIZE
         CR    RF,RET                   IS TERMINAL LINE SIZE .LE.
         BNH   OMG30140                 BUFFER LENGTH, BR IF YES
*
         LR    RF,RET                   BUFFER LENGTH TO LINE SIZE REG
OMG30140 STH   RF,DCBBLKSI              SET DEFAULT DCB BLKSIZE
         STH   RF,DCBLRECL              SET DEFAULT DCB LRECL
         OI    JFCBMASK+K2,X'90'        IND BLKSIZE AND LRECL MERGED
*
OMG30160 EQU   *                        CHECK RECFM
         TM    DCBRECFM,X'FF'-DCBRECKY  IS RECFM SPECIFIED
         BNZ   OMG30180                 BR IF YES
*
         OI    DCBRECFM,DCBRECFX        DEFAULT RECFM TO FIXED
         OI    JFCBMASK+K2,X'04'        INDICATE RECFM MERGED
*
         EJECT                                                 @Z40MSRZ
***************************************************************@Z40MSRZ
***************************************************************@Z40MSRZ
*                 OPEN EXITS TO USER                           @Z40MSRZ
***************************************************************@Z40MSRZ
***************************************************************@Z40MSRZ
OMG30180 EQU   *                        NOT TERM, OPEN FOR OUT
*
***********************************************************************
*
*
         TM    DCBMACRF,DCBMEXCP        CHECK FOR EXCP
         BZ    OMG30200                 BR IF NO
*
         TM    DCBMACRF,DCBMFOUN        CHECK FOR FOUNDATION EXTENSION
         BZ    OMG30800                 BR IF NO, NO DCB EXIT LIST
*
OMG30200 EQU   *                        NOT EXCP
         L     RB,DCBEXLST              GET DCB EXIT LIST ADDR
         CLC   DCBEXLST+K1(K3),OMG3800K  TEST IF ADDR 0 OR 1
         BNH   OMG30800                 BR IF 0 OR 1
*
***************************************************************@Z40MSRZ
*                            DCB   EXIT                        @Z40MSRZ
***************************************************************@Z40MSRZ
OMG30400 EQU   *                        SEARCH EXIT LIST
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY TO    Y02082*
                                        LOOK AT USER'S EXIT LIST Y02082
         CLI   0(RB),XLDCB              CHECK FOR ACTIVE X'05' DCB EXIT
         BE    OMG30450                 BR IF YES
         CLI   0(RB),XLDCB+LASTNTRY     CHECK FOR ACTIVE X'85' DCB EXIT
         BNE   OMG30500                 NO;CHECK FOR JFCBE     @Z40MSRZ
*                                                              @Z40MSRZ
OMG30450 EQU   *                                               @Z40MSRZ
         BAL   RET,OMG30600             GO EXIT TO USER        @Z40MSRZ
         B     DCBRTRN                  GO HANDLE ONLY DCB     @Z40MSRZ
*
***************************************************************@Z40MSRZ
*                           JFCBE  EXIT                        @Z40MSRZ
***************************************************************@Z40MSRZ
*        A PTR TO THE JFCBE (AND FCB ID FROM JFCB) WILL BE     @Z40MSRZ
*        PASSED TO THE USER IN REG 0. IF THE JFCBE DOESN'T     @Z40MSRZ
*        EXIST, REG 0 WILL BE SET TO ZERO.                     @Z40MSRZ
*                                                              @Z40MSRZ
OMG30500 EQU   *                                               @Z40MSRZ
         CLI   0(RB),XLJFCBE            IS JFCBE EXIT PRESENT  @Z40MSRZ
         BE    OMG30550                 YES,PREPARE FOR EXIT   @Z40MSRZ
         CLI   0(RB),XLJFCBE+LASTNTRY   NO,CHECK FOR 15 + 80   @Z40MSRZ
         BNE   OMG30575                 NO,CHECK FOR LAST NTRY @Z40MSRZ
*                                                              @Z40MSRZ
OMG30550 EQU   *            PREPARE FOR JFCBE EXIT TO USER     @Z40MSRZ
         BAL   RET,OMG36000             GET STG AND JFCBE      @Z40MSRZ
         BAL   RET,EXITRTNE             EXIT TO USER           @Z40MSRZ
         BAL   RET,OMG36500             HANDLE RETURN FROM USER@Z40MSRZX
                                        FOR JFCBE              @Z40MSRZ
         B     DCBRTRN                  HANDLE RETURN FROM USER@Z40MSRZX
                                        FOR DCB                @Z40MSRZ
*
OMG30575 EQU   *             CHECK FOR LAST ENTRY              @Z40MSRZ
         TM    0(RB),LASTNTRY           CHECK FOR END OF EXIT LIST
         BO    OMG30800                 BR IF END
         LA    RB,K4(RB)                ADVANCE TO NEXT ADDR IN LIST
         B     OMG30400                 BR TO SEARCH EXIT LIST
         SPACE   5
*
EXITRTNE EQU   *                                               @Z40MSRZ
OMG30600 EQU   *                        ACTIVE DCB EXIT
***************************************************************@Z40MSRZ
*        GO TO USER OPEN EXIT ROUTINE     DCB OR JFCBE/DCB
***************************************************************@Z40MSRZ
*
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY            @Z40MSRZ
         L     RB,K0(,RB)               LOAD EXIT ADDRESS        Y02082
         MODESET EXTKEY=DATAMGT         KEY OF PROT DCB          Y02082
         ST    RET,DXREGE               SAVE SUBR BR REG       @Z40MSRZ
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET (NOT-)LOCK BIT OFF   Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         L     R0,DXCCW1                RESET RO TO USER AREA  @Z40MSRZ*
                                        IN CASE EXIT IS A JFCBE@Z40MSRZ
         IECRES UEXIT,EXITAD=(RB),REG1=DXUDCBAD,REG0=(0),      @Z40MSRZX
               STM=(2,13,WTGPREFX)                               Y02082
         OI    DCBOFLGS,DCBOLOCK        RESET DCB LOCK BIT
         L     RET,DXREGE               RESTORE BRANCH REG     @Z40MSRZ
         BR    RET                      RETURN TO INVOKING CODE@Z40MSRZ
*
         SPACE 3
*********************************************
DCBRTRN  EQU   *                   HANDLE DCB FROM USER  EXIT  @Z40MSRZ
         L     RDCB,DXUDCBAD            LOAD USER DCB PTR      @ZA02166
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY - USER DCB @ZA02166
         TM    DCBOFLGS,DCBOFPPC        TEST FOR UNLIKE CHAR   @ZA02166
         BNO   OMG30610                 BRANCH IF NOT UNLIKE   @ZA02166
         MODESET EXTKEY=DATAMGT         KEY OF PROTECTED DCB   @ZA02166
         L     RDCB,DXPDCBAD            LOAD PROTECTED DCB PTR @ZA02166
         OI    DCBOFLGS,DCBOFPPC        SET UNLIKE CHAR IN COPY@ZA02166
         B     OMG30620                 BRANCH TO CONTINUE     @ZA02166
OMG30610 EQU   *                        RELOAD DCB POINTER     @ZA02166
         MODESET EXTKEY=DATAMGT         KEY OF OPEN WORK AREA  @ZA02166
         L     RDCB,DXPDCBAD            LOAD PROTECTED DCB PTR @ZA02166
OMG30620 EQU   *                        VERIFY DSORG           @ZA02166
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP?              YM2316
         BO    OMG30700                 YES, DON'T SAVE DSORG    YM2316
         ICM   RC,B'0011',DCBDSORG      SAVE COPIED DSORG        YM3070
*                                                                Y02082
* COPY THE DCB FROM THE USER'S STORAGE TO OUR WORK AREA          Y02082
*                                                                Y02082
OMG30700 EQU   *                        COPY DCB, USER TO W.A.   YM2316
         IECRES INIT,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP?              YM2316
         BO    OMG30750                 YES, COPY APPEN REQ BIT  YM2316
*
*    IF COPY DSORG IS NONZERO, USER CANNOT CHANGE DSORG. IF IT ISYM3070
*    ZERO AND USER SUPPLIES A DSORG THAT IS NOT PS, THEN CREATE  YM3070
*    A NEW COPIED DCB. ACBDORGA CANNOT BE CHANGED BY USER.       YM3070
*
         CLM   RC,B'0011',NDSORG        IS COPY DSORG ZERO       YM3070
         BNE   OMG30720                 NO, USER CAN'T CHG DSORG YM3070
*
*    YES, CHECK IF USER DSORG SPECIFIED AND IF IS IS PS.  IF IT  YM3070
*    IS NOT PS, MAKE A NEW COPY.                                 YM3070
*
         L     RDCB,DXUDCBAD            PT TO USER DCB           YM3070
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY              YM3070
         NI    DCBDSORG+K1,ALLBITS-ACBDORGA TURN OFF ACBDSORGA   YM3070
         CLC   DCBDSORG,NDSORG          DSORG SUPPLIED BY USER?  YM3070
         BE    OMG30720                 NO, NO NEW COPY          YM3070
         ICM   RC,B'0011',DCBDSORG      USER'S DSORG             YM3070
         TM    DCBDSRG1,DCBDSGPS        IS IT PS                 YM3070
         BO    OMG30720                 YES, NO NEW COPY         YM3070
*    NOT PS. RECOPY AND REPLACE DSORG FROM USER.                 YM3070
*
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3070
         ICM   R2,B'1000',DXUKEY        SAVE USER'S KEY          YM3070
         MVC   DXUDCBAD,DXPDCBAD        USER DCB PT = COPY       YM3070
         MVI   DXUKEY,DMKEY             SET USER KEY = DM KEY    YM3070
         L     RF,DXPDCBAD              COPY DCB PT              YM3070
         STCM  RC,B'0011',DCBDSORG-IHADCB(RF) USER DSORG INTO          C
                                        COPY DSORG               YM3070
*    GET CORE AND INITIALIZE FOR NEW DCB COPY                    YM3070
         IECRES INIT,DCBCOPY=TOWKAR,STM=(2,14,WTGPREFX)          YM3070
         STCM  R2,B'1000',DXUKEY        RESTORE USER'S KEY       YM3070
         STCM  R2,B'0111',DXUDCBAD+K1   RESTORE PT USER DCB      YM3070
*    COPY USER'S DCB INTO NEW COPY                               YM3070
         IECRES INIT,DCBCOPY=TOWKAR,STM=(2,14,WTGPREFX)          YM3070
*
*    RESTORE DCBDSORG IN COPIED DCB. MERGE BITS 3-7 OF BOTH      YM2316
*    BYTES OF DCBMACRF FROM USER'S DCB INTO COPIED DCB.          YM2316
*
OMG30720  EQU     *                     RESTORE DSORG MERGE MACRFYM3070
         L     RDCB,DXPDCBAD            GET PT COPY DCB          YM3070
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3070
         STCM  RC,B'0011',DCBDSORG      REPLACE DSORG IN COPIED  YM3070
         ICM   R0,B'0011',DCBMACRF      COPIED DCB MACRF FIELD   YM2316
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER'S KEY     Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT             Y02082
         ICM   R1,B'0011',DCBMACRF      USER DCBMACRF FIELD      YM2316
         N     R1,USERMSK               PREPARE U FIELD FOR MERGEYM2316
         N     R0,COPYMSK               PREPARE C FIELD FOR MERGEYM2316
         OR    R1,R0                    MERGE C INTO U DCBMACRF  YM2316
         STCM  R1,B'0011',DCBMACRF      USER'S DCBMACRF FIELD    YM2316
         L     RDCB,DXPDCBAD            GET PT TO COPIED DCB     YM2316
         MODESET EXTKEY=DATAMGT         DM KEY                   YM2316
         STCM  R1,B'0011',DCBMACRF      COPIED DCBMACRF FIELD    YM2316
         B     OMG30900                 CHECK DSORG              YM2316
*
OMG30750 EQU   *                        COPY APPENDAGE REQ BIT   YM2316
         L     RDCB,DXUDCBAD            PT USER'S DCB            YM2316
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY              YM2316
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT USER        YM2316
         ICM   RC,B'0011',DCBDSORG      USER'S DSORG             YM3070
         TM    DCBMACF1,DCBMRAPG        APPEND REQUIRED          YM2316
         BO    OMG30760                 YES, SET BIT ON IN COPY  YM2316
         L     RDCB,DXPDCBAD            COPIED DCB               YM2316
         MODESET EXTKEY=DATAMGT         DM KEY                   YM2316
         NI    DCBMACF1,ALLBITS-DCBMRAPG TURN OFF BIT IN COPY    YM2316
         B     OMG30850                 CHECK FOR COMMON SECT    YM2316
*
OMG30760 EQU   *                        SET BIT ON               YM2316
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM2316
         MODESET EXTKEY=DATAMGT         DM KEY                   YM2316
         OI    DCBMACF1,DCBMRAPG        TURN ON BIT              YM2316
         B     OMG30850                 CHECK FOR COMMON SECT    YM2316
*
         SPACE  3
OMG30800 EQU   *                        NO FOUNDATION EXTEN
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
         L     RDCB,DXPDCBAD            POINT TO COPIED DCB      Y02082
         TM    DCBMACRF,DCBMEXCP        CHECK FOR EXCP           S22024
         BZ    OMG30950                 NO, CKECK DSORG          S22024
         TM    DCBMACRF,DCBMCOM         COMMON SECTION PRESENT   YM3817
         BO    OMG30950                 YES, TEST DSORG          YM3817
         B     OMG31400                 NO, NO DSORG             YM3817
*
OMG30850 EQU   *                        CHECK FOR COMMON SECTION YM2316
         USING DEBXTN,R1                ADDRESSABILITY           YM3070
         TM    DCBMACRF,DCBMCOM         IS COMMON SECTION PRESENTS22024
         BZ    OMG31400                 NO, NO DSORG             S22024
         STCM  RC,B'0011',DCBDSORG      USER'S DSORG INTO COPY   YM3817
*
OMG30900 EQU   *                        CHECK DSORG              S22024
         L     R1,DXDEBXAD              DEB EXTEN ADDR           YM3070
         LTR   R1,R1                    CHECK FOR DEB EXTEN      YM3817
         BZ    OMG30950                 NO, DON'T SAVE DSORG     YM3817
         STCM  RC,B'0011',DEBXDSO1      SAVE DSORG IN DEB EXTEN  YM3070
         DROP  R1                       THROUGH WITH DEB EXTEN   YM3070
OMG30950 EQU   *                        DON'T SAVE DSORG, CONTIN YM3817
         TM    DCBDSORG+K1,DCBORGGR+DCBDSGTR IS DSORG = GR OR TR S22024
         BM    OMG34100                 YES, CHECK FOR TCAM TR   S22024
*
***********************************************************************
*
* TEST FOR BLKSIZE GREATER THAN 32767 BYTES
*
         TM    DCBMACRF,DCBMEXCP        CHECK FOR EXCP
         BO    OMG31400                 BR IF YES
         TM    DCBDSORG,DCBORGIS+DCBORGPS+DCBORGDA+DCBORGPO
         BZ    OMG31400                 BR IF NOT IS, PS, DA, PO
         TM    DCBBLKSI,X80             TEST BLKSIZE HIGH ORDER BIT
         BZ    OMG31200                 BRANCH IF LESS THAN 32768
*
OABD044  EQU   44                       BLKSIZE GREATER THAN 32767
         LA    R0,OABD044               LOAD ERROR CODE
*
OMG31000 EQU   *                        ABEND USER
         DMABCOND (0),ID6L0P            XCTL TO PROBLEM DET / ABEND
*
OMG31200 EQU   *                        BLKSIZE LESS THAN 32768
         L     RUCB,DXUCBADR            GET UCB ADDRESS          Y02132
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   OMG31400                 BR IF NOT                Y02132
         TM    DCBDSORG,DCBORGPS+DCBORGPO+DCBORGDA TEST FOR DA,  Y02132
*                                       PHY SEQ OR PART ORG DS   Y02132
         BZ    OMG31400                 BR IF NOT                Y02132
         TM    DCBOPTCD,DCBOPTW         TEST WRITE CHECK BIT     Y02132
         BZ    OMG31400                 BR IF NOT SET            Y02132
         L     RC,DXDSAB                GET CURRENT DSAB PT      YM1279
         USING DSAB,RC                  DSAB ADDRESSABILITY      YM1279
OMG31250 EQU   *                        START LOOP THRU DSAB'S   YM1279
         L     RC,DSABFCHN              GET NEXT DSAB PT         YM1279
         LTR   RC,RC                    END OF DSAB CHAIN?       YM1279
         BZ    OMG31300                 YES TURN OFF WR CHK BIT  YM1279
         L     R1,DSABTIOT              GET TIOT PT FOR NEXT DSABYM1279
         DROP  R9                       RELEASE OLD TIOT REG     YM1279
         USING TIOENTRY,R1              TIOT ADDRESSABILITY      YM1279
         CLI   TIOEDDNM,BLANK           IS DDNAME BLANK          YM1279
         BNE   OMG31300                 NO TURN OFF WR CHK BIT   YM1279
         L     R1,TIOEFSRT-K1           GET UCB PT               YM1279
         LA    R1,0(R1)                 CLEAR HIGH BYTE          YM1279
         LTR   R1,R1                    VALID UCB?               YM1279
         BZ    OMG31400                 NO DON'T TURN OFF BIT    YM1279
         TM    UCBJBNR-UCB(R1),UCBVRDEV IS VIO UCB?              YM1279
         BNO   OMG31400                 NO DON'T TURN OFF WR CHK YM1279
         CLC   UCBTBYT3(K1),UCBTBYT3-UCB(R1) THIS UCB EQUAL CURR?YM1279
         BNE   OMG31400                 NO DON'T TURN OFF WR CHK       C
                                        BIT                      YM1279
         B     OMG31250                 LOOP THRU DSAB'S         YM1279
*
         DROP  RC                                                YM1279
         DROP  R1                                                YM1279
         USING TIOENTRY,RTIOT           TIOT ADDRESSABILITY      YM1279
*
OMG31300 EQU   *                        TURN OFF WRITE CHECK BIT YM1279
         NI    DCBOPTCD,ALLBITS-DCBOPTW TURN OFF WRITE CHECK BIT Y02132
         OI    JFCBMASK+K1,X80          SET DCB MODIFY BIT       Y02132
OMG31400 EQU   *                        DON'T TURN OFF WR CHK BIT
*
         L     RUCB,DXUCBADR            GET FIRST UCB ADDR       Y02134
***********************************************************************
*
*   MERGE RECFM FROM DCB TO JFCB
*
         TM    JFCBTSDM,JFCNDCB         IS DCB TO JFCB MERGE INHIBITED
         BO    OMG32200                 BR IF YES
*
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP               A44840
         BNO   OMG31480                 NO, BRANCH               A44840
*      EXCP
         TM    DCBMACRF,DCBMCOM         YES, IS COMMON PRESENT   A44840
         BNO   OMG31440                 NO, CAN'T TEST DSORG     A44840
         TM    DCBDSORG+1,DCBORGGR      YES, IS IT GRAPHICS      A44840
         BO    OMG32200                 YES, SKIP RECFM MERGE    A44840
OMG31440 EQU   *                        CAN'T TEST DSORG         A44840
         TM    DCBMACRF,DCBMFOUN        NO, IS FOUND EXT PRESENT A44840
         BNO   OMG32200                 NO, SKIP RECFM MERGE     A44840
         B     OMG31560                 YES, GO MERGE RECFM      A44840
*      NOT EXCP
OMG31480 EQU   *                        NOT EXCP                 A44840
         TM    DCBDSORG+1,DCBORGGR      IS IT GRAPHICS           A43865
         BO    OMG32200                 YES, SKIP RECFM MERGE    A44840
*
*      MERGE RECFM
OMG31560 EQU   *                        MERGE RECFM              A44840
         TM    0(RPARC),PLISTM0C        CHECK FOR INPUT OR INOUT
         BNZ   OMG31600                 BR IF NO
         CLI   JFCRECFM,K0              IS RECFM = 0
         BNE   OMG31800                 BR IF NO
OMG31600 EQU   *                        NOT INPUT OR INOUT
         MVC   JFCRECFM,DCBRECFM        ****MERGE RECFM****
         NI    JFCRECFM,X'FF'-DCBRECKY  UNMERGE KEYLEN=0 BIT
         OI    JFCBMASK+4,JFCMJMOD      SET JFCB MODIFIED        A44840
OMG31800 EQU   *                        RECFM NOT ZERO
*
         TM    JFCRECFM,DCBRECUN+DCBRECTK  IS RECFM INDICATED
         BNZ   OMG32200                 BR IF YES                A44840
*
         OI    JFCRECFM,DCBRECUN        SET RECFM = U
         OI    DCBRECFM,DCBRECUN        SET DCB RECFM=U        @ZA07611
         OI    JFCBMASK+K2,X'04'        IND DCBRECFM MERGED    @ZA07611
         TM    DCBDSORG,DCBORGIS        IS IT INDEXED SEQUENTIAL
         BZ    OMG32200                 BR IF NO                 A44840
         NI    JFCRECFM,DCBRECFX        SET RECFM=F FOR ISAM
*
OMG32200 EQU   *                        DCB TO JFCB MERGE INHIBITED
*
*   CHECK DEVICE FOR TRK OVERFLOW IF USER-SPECIFIED
*
         TM    JFCBMASK+K4,JFCMNULL     TEST IF DUMMY DATA SET
         BO    OMG34100                 BR IF YES
         TM    TIOELINK,TIOESYIN+TIOESYOT SPOOLED DATA SET?      Y02120
         BM    OMG34100                 BRANCH IF YES            Y02120
*
         L     RUCB,DXUCBADR            GET FIRST UCB ADDR       Y02134
         TM    UCBTBYT3,UCB3DACC        IS DEVICE DIRECT ACCESS
         BNO   OMG33800                 BR IF NO
*
         CLI   JFCBDSNM,K4              IS DATASET NAME THAT OF  Y01048
*                                       THE FORMAT 4 DSCB?
         BNE   OMG32300                 BRANCH IF NO             Y01048
         TM    0(RPARC),PLISTOUT        OPEN FOR INPUT           Y01048
         BZ    OMG32300                 BRANCH IF YES            Y01048
*        TESTAUTH CLOBBERS REGS 14-3. REGS 2 & 3 MUST BE SAVED.  Y02082
         L     RC,WTGPREFX              GET PREFIX ADDRESS       Y02082
         STM   RDCB,RBASE,IECREGSV-IECPREFX(RC) SAVE REGS        Y02082
         TESTAUTH FCTN=1,KEY=YES,BRANCH=YES TEST AUTHORIZATION   Y02080
         LM    RDCB,RBASE,IECREGSV-IECPREFX(RC) RESTORE REGS     Y02082
         LTR   RF,RF                    ZERO RETURN CODE?        Y01048
         BZ    OMG32300                 BRANCH IF YES            Y01048
*
OABD024  EQU   024                      THE VTOC MAY NOT BE      Y01048
*                                       OPENED BY AN UNAUTHORIZED
*                                       USER FOR OUTPUT PROCESSING
*
         DMABCOND OABD024,ID6L0P        XCTL TO PROB DET / ABEND Y01048
*
OMG32300 EQU   *                        DSNAME NOT THAT OF FORMAT 4
         TM    JFCRECFM,DCBRECTK        USER SPECIFY TRACK OVERFLOW
         BNO   OMG32400                 BR IF NO
*
OABD046  EQU   46                       DEVICE DOES NOT SUPPORT
*                                       TRACK OVERFLOW
         LA    R0,OABD046               LOAD ERROR CODE
*
         TM    UCBTBYT2,UCB2OPT1        DOES DEVICE HAVE TRACK OVERFLOW
         BNO   OMG31000                 BR IF NO TO ABEND USER
*
OMG32400 EQU   *                        USER DID NOT SPEC TRK OFLOW
*
***********************************************************************
*
*  DETERMINE IF OUTPUT DIRECT ACCESS USER LABELS SHOULD BE PROCESSED
*
*  (INPUT USER LABELS WERE READ EARLIER.  NOTE THAT FOR BDAM,
*  USER LABELS WERE READ AND OPTIONALLY UPDATED WHEN THE INPUT
*  LABELS WERE PROCESSED.  SINCE A BDAM DATA SET CAN NEVER BE
*  NEW, NEW OUTPUT LABELS ARE NEVER CREATED.)
*  (THE DETERMINATION IS MADE HERE BEFORE IT IS NEEDED, BECAUSE
*  IT DOES NOT FIT IN THE LATER MODULE WHERE IT ACTS ON THIS
*  DECISION.)
*
         NI    JFCBMASK+K5,X'FF'-X'04'  CLEAR OPEN UL INDICATOR
*
         TM    JFCBTSDM,JFCSDS          IS IT SYSIN OR SYSOUT
         BO    OMG33600                 YES, DON'T PROCESS UL'S
*
         TM    DCBMACRF,DCBMEXCP        IS THIS AN EXCP DCB
         BZ    OMG32600                 BR IF NO TO CHECK FOR USR LBLS
         TM    DCBMACRF,DCBMFOUN        DOES FBE EXIST
         BZ    OMG33600                 BR IF NO, IGNORE USER LABELS
*
OMG32600 EQU   *                        CHECK FOR USER LABELS
         TM    DCBDSORG,DCBORGPS        IS THE DATA SET PS
         BZ    OMG33600                 BR IF NO
*                                       NOTE THAT PS INCLUDES BDAM
*                                       LOAD MODE.
*
         TM    0(RPARC),X'07'           CHECK FOR OUTPUT OR OUTIN
         BNO   OMG33600                 BR IF NO
*
         TM    JFCBIND2,JFCOLD          IS THIS DISP=MOD (NOT NEW, OLD)
         BZ    OMG33600                 BR IF YES MOD
*
         TM    JFCBLTYP,JFCSUL          WAS SUL SPECIFIED
         BNO   OMG33000                 BR IF NO TO CHECK FURTHER
*
         L     RC,DCBEXLST              PICK UP EXIT LIST ADDRESS
         LA    RC,0(RC)                 ZERO OUT HIGH ORDER BYTE
         LTR   RC,RC                    IS THE EXIT LIST ZERO
         BZ    OMG33000                 BR IF YES, SEE IF UL TRACK
*
OMG32800 EQU   *                        CHECK ENTRY
         MODESET KEYADDR=DXUKEY,WORKREG=13 USER KEY TO LOOK AT   Y02082*
               EXIT LIST                                         Y02082
         CLI   0(RC),XLOUHL             CHECK FOR OUTPUT UHL EXIT
         BE    OMG33200                 BR IF YES
         CLI   0(RC),XLOUHL+LASTNTRY    CHECK IF ALSO LAST ENTRY
         BE    OMG33200                 BR IF YES
*
         TM    0(RC),LASTNTRY           CHECK IF LAST ENTRY IN LIST
         BO    OMG33000                 BR IF YES, SEE IF UL TRACK
*
         LA    RC,K4(RC)                INCREMENT POINTER
         B     OMG32800                 BR TO CK NEXT ENTRY
*
OMG33000 EQU   *                        CHECK LABELS FURTHER
         MODESET EXTKEY=DATAMGT         RETURN TO DM KEY         Y02082
         TM    DSCEXTYP,ULEXT           IS A UL TRACK ALLOCATED
         BZ    OMG33600                 BR IF NO
*
*        GO WRITE TWO FILE MARKS
*
         LA    RC,XLOUHL                INSERT OUTPUT UHL INDICATR
         SLL   RC,K24                   SHIFT TO HIGH ORDER BYTE
         B     OMG33400                 BR TO SET OUTPUT UHL IND
*
*
OMG33200 EQU   *                        OUTPUT UHL EXIT OR LAST
*        WE ARE NOW IN THE USER'S PROTECT KEY                    Y02082
         L     RC,0(,RC)                LOAD EXIT LIST DATA INTO R12
         LA    RF,0(RC)                 ZERO HIGH ORDER BYTE
         LTR   RF,RF                    IS DCB EXIT LIST ZERO
         BZ    OMG33000                 BR IF YES, SEE IF UL TRACK
*
OMG33400 EQU   *                        SET UHL INDICATOR
         MODESET EXTKEY=DATAMGT         RETURN TO DM KEY         Y02082
         OI    JFCBMASK+K5,X'04'         SET OPEN UL INDICATOR
         MVC   DXDEBSYS(K1),PLISTOPT(RPARC)  OPEN ATTRBS IN WORK DEB
         ST    RC,DXCCW6                SAVE FOR LATER XCTL TO UL MOD
*
OMG33600 EQU   *                        NO UL TRACK ALLOCATED
         B     OMG34100                 BR TO XCTL TO IFG0196M
*
***********************************************************************
*
*  MERGE DCB FUNC TO JFCB FUNC IF 3525 UNIT RECORD DEVICE.       S21088
*                                                                S21088
***********************************************************************
OMG33800 EQU   *                        DCB TO JFCB MERGE        221088
         TM    JFCBTSDM,JFCNDCB         IS DCB TO JFCB MERGE     S21088
         BO    OMG34100                 INHIBITED, BR IF YES     S21088
*                                                                S21088
         CLI   UCBTBYT3,UCB3UREC        IS DEVICE UNIT RECORD    S21088
         BNE   OMG34100                 BR IF NO                 S21088
*                                                                S21088
         CLI   UCBTBYT4,X'0C'           IS DEVICE 3525           S21088
         BNE   OMG34100                 BR IF NO                 S21088
*                                                                S21088
         TM    DCBMACRF,DCBMEXCP        IS THIS EXCP DCB         S21088
         BZ    OMG33900                 BR IF NO                 S21088
*                                                                S21088
         TM    DCBMACRF,DCBMDI5W+DCBMDI4W+DCBMDI3W+DCBMDI1W      S21088
         BZ    OMG34100                 BR IF NO DCB FUNC FIELD  S21088
*                                                                S21088
OMG33900 EQU   *                        NOT EXCP DCB             S21088
         TM    0(RPARC),PLISTM0C        TEST IF INPUT OR INOUT   S21088
         BNZ   OMG34000                 BE IF NO                 S21088
*                                                                S21088
         CLI   JFCFUNC,K0               CHECK FOR ZERO JFCB FUNC S21088
         BNE   OMG34100                 BR IF NOT ZERO           S21088
*                                                                S21088
OMG34000 EQU   *                        NOT INPUT OR INOUT       S21088
         MVC   JFCFUNC,DCBFUNC          MERGE FUNC FROM DCB      S21088
*                                                                S21088
OMG34100 EQU   *                        GO TO IFG0196M           S21088
         TM    DCBDSORG+K1,DCBDSGTR     TCAM TR?                 S22024
         BO    OMG34200                 YES, GO TO IFG0196V      S22024
*
***********************************************************************
*
         IECRES LOAD,MODID=ID6L6M,BRANCH=QUEUED                  Y02080
*                                       XCTL TO NEXT MODULE      Y02080
*
***********************************************************************
*
OMG34200 EQU   *                        CHECK FOR REVERSE MERGE  S22024
         CLI   JFCIPLTX,BLANK           REVERSE MERGE REQ?       S22024
         BNE   OMG34300                 NO, GO TO NEXT MODULE    S22024
         MVC   JFCIPLTX,DCBIPLTX        REVERSE MERGE IPLTX      S22024
OMG34300 EQU   *                        GO TO IFG0196V           S22024
         IECRES LOAD,MODID=ID6L6V,BRANCH=QUEUED  GO TO NEXT MOD  S22024
*
***********************************************************************
         EJECT                                                 @Z40MSRZ
***************************************************************@Z40MSRZ
***************************************************************@Z40MSRZ
*                       INTERNAL MODULE SUBROUTINES            @Z40MSRZ
***************************************************************@Z40MSRZ
***************************************************************@Z40MSRZ
*                                                              @Z40MSRZ
***************************************************************@Z40MSRZ
*        SUBROUTINE          OMGJFCBE1                         @Z40MSRZ
*   SET UP FOR JFCBE EXIT TO USER:                             @Z40MSRZ
*        1:    GETMAIN STG:                                    @Z40MSRZ
*                     A:    176 + 8 BYTES IN USER AREA         @Z40MSRZ
*                            ADD'L 8 BYTES IS TO GIVE THE FCB  @Z40MSRZ
*                            ID FROM THE JFCB TO THE USER EXIT @Z40MSRZ
*                            SP230 IS USED (NOT FETCH PROT) TO @Z40MSRZ
*                            ALLOW THE COPY-BACK TO SWA.       @Z40MSRZ
*   NOTE; IF THE JFCBE DOES NOT EXIST, SET REG 0 = ZERO.       @Z40MSRZ
*    THIS SUBROUTINE ENTERED VIA BAL  14,                      @Z40MSRZ
***************************************************************@Z40MSRZ
OMG36000 EQU  *                                                @Z40MSRZ
         MODESET EXTKEY=DATAMGT
         TM    JFCUCSOP,JFCBEXTP        IS A JFCBE PRESENT     @Z40MSRZ
         BO    OMG36010                 YES, GET IT FOR USER   @Z40MSRZ
*                                                              @Z40MSRZ
         SR    R0,R0                    NO,GO TO USER WITH R0=0@Z40MSRZ
         ST    R0,DXCCW1                SAVE INTENDED VALUE    @Z40MSRZ
         BR    RET                      RETRN TO INVOKING CODE @Z40MSRZ
*                                                              @Z40MSRZ
OMG36010  EQU  *             GET SPACE IN USER STG             @Z40MSRZ
         SR    R1,R1                    CAUSE AREA TO BE CHAIND@X40MSRZ
*                                         BY ITSELF            @Z40MSRZ
         IECRES GET,LV=184,PREFIX=YES,ID=UJFE,SP=230,KEY=USER, @Z40MSRZX
               STM=(2,14,WTGPREFX),A=(1)
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5        @Z40MSRZ
         ST    R1,DXCCW1                SAVE THAT STG ADDR     @Z40MSRZ
*
         LA    RA,JFCBEXAD              ADDR OF EXT PTR        @Z40MSRZ
         IECRES LOCJFCB,(RA)            GET TRU EXT ADDR       @Z40MSRZ
*                                (RA=RUCB,MUST BE RESET LATER) @Z40MSRZ
         MODESET EXTKEY=ZERO       MVC'S FROM SWA/OPEN TO USER @Z40MSRZ
         MVC   0(JFCBLGTH,R1),0(RA)     MOVE A COPY TO USER    @Z40MSRZ
         MVC   JFCBLGTH(4,R1),JFCFCBID  FCB ID INTO USER AREA  @Z40MSRZ
         MODESET EXTKEY=DATAMGT                                @Z40MSRZ
*                                                              @Z40MSRZ
         LR    R0,R1                    PT TO USER STG         @Z40MSRZ
         BR    RET                     RETURN TO INVOKING CODE @Z40MSRZ
         EJECT
***************************************************************@Z40MSRZ
*        SUBROUTINE          OMGJFCBE2                         @Z40MSRZ
*    HANDLE RETURN FROM USER JFCBE EXIT                        @Z40MSRZ
*              1: THE JFCBE WHICH WAS READ INTO THE USER AREA  @Z40MSRZ
*                 PRIOR TO THE USER EXIT IS NOW MERELY         @Z40MSRZ
*                 RE-WRITTEN BACK TO SWA (SEE NOTE BELOW)      @Z40MSRZ
*              2: THE FCB ID WHICH WAS MADE AVAILABLE TO THE   @Z40MSRZ
*                 USER IN HIS AREA ALONG WITH THE JFCBE IS     @Z40MSRZ
*                 REPLACED IN THE JFCB IN THE O/C WORK AREA    @Z40MSRZ
*                 TO EFFECT ANY MODIFICATION BY THE USER.      @Z40MSRZ
*   NOTE;-IF THE EXIT TO THE USER WAS TAKEN WITHOUT A          @Z40MSRZ
*         JFCBE EXISTING, R0 WAS SET TO ZERO.                  @Z40MSRZ
*        -IF THE USER DOES MODIFY THE JFCBE DURING THE EXIT,   @Z40MSRZ
*         THE USER MUST TURN ON BIT JFCBEOPN IN THE JFCBE.     @Z40MSRZ
*         THIS BIT IS THEN CHECKED HERE TO DETERMINE WHETHER   @Z40MSRZ
*         THE USER COPY SHOULD BE USED TO UPDATE THE SWADS     @Z40MSRZ
*         COPY. (SCHEDULER RESTART ALSO MAKES USE OF THIS BIT) @Z40MSRZ
*    THIS SUBROUTINE IS ENTERED VIA BAL  14                    @Z40MSRZ
***************************************************************@Z40MSRZ
OMG36500 EQU   *
         MODESET EXTKEY=DATAMGT                                @Z40MSRZ
         TM    JFCUCSOP,JFCBEXTP        DOES A JFCBE EXIST     @Z40MSRZ
         BNO   OMG36550                 NO;NO NEED TO UPDATE   @Z40MSRZ
         L     R1,DXCCW1                USER AREA PTR INTO R1  @Z40MSRZ
         USING JFCBE,R1                                        @Z40MSRZ
*                                                              @Z40MSRZ
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER KEY            @Z40MSRZ
         L     RF,JFCBLGTH(R1)          FCB ID FROM USER       @Z40MSRZ
         MODESET EXTKEY=DATAMGT         BACK TO DATAMGT KEY    @Z40MSRZ
         ST    RF,JFCFCBID              FCB ID TO JFCB         @Z40MSRZ
*                                                              @Z40MSRZ
         TM    JFCBFLAG,JFCBEOPN        HAS JFCBE BEEN MODIFIED@Z40MSRZ
         BNO   OMG36540                 NO;NO NEED TO UPDATE   @Z40MSRZ
*                                                              @Z40MSRZ
         LA    RA,JFCBEXAD              YES;SET UP UPDATE      @Z40MSRZ
         IECRES WRJFCB,(RA),(R1)        UPDATE SWA AND SWA DS  @Z40MSRZ
*                                        COPIES OF THE JFCBE   @Z40MSRZ
         MODESET EXTKEY=DATAMGT                                @Z40MSRZ
*                                                              @Z40MSRZ
OMG36540 EQU   *           FREE USER STORAGE                   @Z40MSRZ
         IECRES FREE,PREFIX=YES,A=(1),STM=(2,14,WTGPREFX)      @Z40MSRZ
*                                                              @Z40MSRZ
OMG36550 EQU   *                                               @Z40MSRZ
         L     RA,DXREGA                RESTORE RUCB           @Z40MSRZ
         BR    RET                      RETURN TO INVOKING CODE@Z40MSRZ
         EJECT                                                 @Z40MSRZ
*******************************************************************
*        CONSTANTS
*
OMG3800K DC    FL3'1'                   CONSTANT 1 - INVALID ADDR
         DS    0F
USERMSK  DC    X'00001F1F'              MASK FOR USER DCBMACRF   YM2316
COPYMSK  DC    X'0000E0E0'              MASK FOR COPY DCBMACRF   YM2316
NDSORG   DC    X'0000'                  HALF WORD ZERO NO DSORG  YM3070
*
         XCTLTABL ID=(ID6L0P,0P,ID6L6M,6M,ID6L6V,6V),BRT=YES,LENGTH=
*                                                                S22024
         DCBD DSORG=(PS,IS,DA,PO,BS,TQ,TR)                       S22024
*
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
*
*  INVOKE TSO DSECT MACROS NOT CURRENTLY DEFINED BY IECDSECS MACRO.
*
         IKJTIOCP ,                     INVOKE TIOC REFERENCE PTR TABLE
*
         EJECT                                                 @Z40MSRZ
         IEFJFCBE                       INVOKE JFCBE           @Z40MSRZ
         END
