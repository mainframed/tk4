         TITLE 'IFG0551B - SYNAD DIAGNOSTIC ROUTINE'
IFG0551B CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*        VS2 RELEASE 02 DELETIONS                                     *
*                                                                     *
*        VS2 RELEASE 03 DELETIONS                                     *
*0000428000                                                    @ZA01339
*                                                                     *
*        VS2 RELEASE 037 DELETIONS                                    *
*D27950002-31560002,35000021-35100021,43000021-43300002        @ZA16052
*D46400002-48900002                                            @ZA16052
*A31550102-31550902,44180121-44180421,44187002-44189002        @ZA16052
*C290000                                                       @ZA25479
*0000                                                          @ZA27758
*
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0551B (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = SYNAD DIAGNOSTIC ROUTINE                         *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE IS ENTERED FROM IGC0005E FOR THREE REASONS WITH  *
*        A BRANCH TABLE OFFSET IN REGISTER 7 INDICATING THE FUNCTION  *
*        DESIRED.                                                     *
*                                                                     *
*        1)-REGISTER 7 = 20 - PROBLEM DETERMINATION MESSAGE 'IEC020I  *
*        EROPT=ABE OR AN INVALID CODE AND/OR NO SYNAD EXIT SPECIFIED' *
*        IS MOVED TO OFFSET 8 INTO THE EOV WORKAREA AND MODULE        *
*        IFG0551D IS GIVEN CONTROL TO WRITE THE MESSAGE AND ISSUE     *
*        AN 001 ABEND.                                                *
*                                                                     *
*        2)-REGISTER 7 = 0 - THE SYNAD EXIT IS TAKEN FOR A QSAM DCB.  *
*                                                                     *
*        3)-REGISTER 7 = 4, 8, 12, 16 - THIS MODULE ATTEMPTS TO ALLOW *
*        A QSAM/BSAM DCB TO CONTINUE PROCESSING AFTER AN I/O ERROR BY *
*        ANALYZING THE TYPE OF ERROR. IF THE ERROR CAN BE ACCEPTED OR *
*        SKIPPED THE APPROPRIATE CHANNEL PROGRAMS ARE RESTARTED AND   *
*        RETURN IS MADE TO THE ACCESS METHOD CALLER OF EOV. IF THE    *
*        ERROR CAN NOT BE IGNORED OR SKIPPED, MODULE IFG0551D IS      *
*        GIVEN CONTROL TO ISSUE AN 001 ABEND AND AN INFORMATIONAL     *
*        MESSAGE EXPLAINING THE SITUATION.                            *
         EJECT
*        THE SPECIFIC MEANINGS OF THE SETTINGS OF REGISTER 7          *
*        UNDER CASE 3) ABOVE, ARE AS FOLLOWS -                        *
*        4 - A QSAM DCB HAS EITHER RETURNED FROM THE SYNAD ROUTINE    *
*        (THIS THEN BEING THE SECOND ENTRY TO EOV), OR THERE IS NO    *
*        SYNAD ROUTINE IN THE DCB (THIS THEN BEING THE FIRST ENTRY    *
*        TO EOV). IN EITHER CASE THE DCBEROPT ERROR OPTION IS USED    *
*        TO DETERMINE WHETHER TO SKIP OR ACCEPT THE ERROR, OR TO      *
*        ABEND IMMEDIATELY.                                           *
*        8, 12, 16 - THIS INDICATES A SECOND ENTRY TO EOV FOR A BSAM  *
*        DCB WHICH HAS RETURNED FROM THE SYNAD ROUTINE, IMPLYING THE  *
*        I/O ERROR IS TO BE ACCEPTED IF POSSIBLE.                     *
*        8 - THERE IS AT LEAST ONE CHANNEL PROGRAM TO BE RESCHEDULED. *
*        12 - CHAINED SCHEDULING.                                     *
*        16 - THERE IS AT LEAST 1 CHANNEL PROGRAM TO RESCHEDULE AND   *
*        THE DEVICE BEING PROCESSED IS A PRINTER.                     *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
         EJECT
* ENTRY POINT = IFG0551B                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO.                                                       *
*                                                                     *
* INPUT =                                                             *
*        ENTERED IN PROTECT KEY 5                                     *
*        REGISTER 2 POINTS TO THE USER'S DCB.                         *
*        REGISTER 4 POINTS TO THE EOV WORKAREA.                       *
*        REGISTER 6 CONTAINS THE ADDRESS OF THE IOB HAVING THE   YM4610
*              I/O ERROR IF REGISTER 7 CONTAINS 8 OR 16          YM4610
*        REGISTER 7 CONTAINS AN ENTRY CODE USED IN A BRANCH TABLE.    *
*              THE CONTENTS ARE EXPLAINED ABOVE UNDER FUNCTION.       *
*        REGISTER 12 POINTS TO THE IOB HAVING THE I/O ERROR IF        *
*              REGISTER 7 CONTAINS 4 OR 12.                           *
*        REGISTER 12 POINTS TO THE LAST SCHEDULED IOB IF         YM4610
*              REGISTER 7 CONTAINS 8 OR 16                       YM4610
*                                                                     *
* OUTPUT =                                                            *
*        IFG0551D PASSED CONTROL IN PROTECT KEY 5 -                   *
*        REGISTER 7 = 0 INDICATES THE EOV WORKAREA CONTAINS MESSAGE   *
*        'IEC020I DCB EROPT=ABE OR AN INVALID CODE AND/OR NO SYNAD    *
*        EXIT SPECIFIED', AND AN 001 ABEND IS TO BE ISSUED.           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA.                       *
*        REGISTER 1 POINTS TO DXREG1 WHERE THE 001 ABEND IS INDICATED.*
*        REGISTER 2 POINTS TO THE USER'S DCB.                         *
*                                                                     *
*        IFG0551D PASSED CONTROL IN PROTECT KEY 5 -                   *
*        REGISTER 7 SET TO 4 INDICATES IFG0551D IS TO CONSTRUCT AND   *
*        ISSUE MESSAGE 'IEC020I NON-ACCEPTABLE ERROR' AND ISSUE AN    *
*        001 ABEND.                                                   *
*        REGISTER 2 POINTS TO THE USER'S DCB.                         *
*        REGISTER 4 POINTS TO THE EOV WORKAREA.                       *
*                                                                     *
*        SYNAD EXIT - REGISTER 15 CONTAINS THE SYNAD ADDRESS. THE     *
*        SVRB CONTAINS THE USER'S REGSITERS FOR USE IN THE SYNAD      *
*        ROUTINE.                                                     *
*                                                                     *
*        RETURN TO THE ACCESS METHOD MODULES TO CONTINUE ACCESS       *
*        METHOD PROCESSING AFTER RESTARTING ALL NECESSARY CHANNEL     *
*        PROGRAMS TO ACCEPT OR SKIP AN I/O ERROR. REGISTER 15 SET TO  *
*        ZERO. SVRB CONTAINS THE ACCESS METHOD REGISTERS AS IN THE    *
*        FIRST ENTRY TO EOV.                                          *
         EJECT
* EXIT-NORMAL =                                                       *
*        IFG0551D TO ISSUE PROBLEM DETERMINATION MESSAGE AND ABEND.   *
*        EXIT TO ACCESS METHOD CALLER OF EOV.                         *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0551D TO ISSUE PROBLEM DETERMINATION MESSAGE AND ABEND.   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        NONE.                                                        *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*        SVRB SAVE AREA.                                              *
*        USER REGISTER SAVE AREA.                                     *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        TCB                                                          *
*        SVRB                                                         *
*        UCB                                                          *
*        DCB                                                          *
*        ACCESS METHOD IOBS/ICBS                                      *
*                                                                     *
* TABLES =                                                            *
*        NONE                                                         *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES FREE                                                  *
*        IECRES EXIT                                                  *
*        IECRES GET                                                   *
*        EXCP                                                         *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD          *
*                                                                     *
***********************************************************************
         EJECT
         BALR  RBASE,0                  ESTABLISH BASE
         USING EIN05300,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
*
EIN05300 EQU   *                        BASE ADDRESS
*
*        THE FOLLOWING ROUTINE CHAINS DOWN THE CVT,TCB AND RB TO PICK
*        UP THE CURRENT SVRB
*
         L     RET,CVTPTR               CVT ADDRESS              Y02080
         L     RET,K0(K0,RET)           ADDR TO TCB PTRS         Y02080
         L     RET,K4(K0,RET)           ACTIVE TCB PTR           Y02080
         L     RET,K0(K0,RET)           SVRB PTR                 Y02080
         USING RBSECT,RET                                        M0135
*
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       YM4610
         BAL   RBASE,EIN05600           BRANCH AROUND ABEND SUBRTN
         USING EIN05400,RBASE           ESTABLISH NEW ADDRESSABILITY
*        RBASE IS USED FOR BASE REGISTER AND ABEND ENTRY POINT
         EJECT
EIN05400 EQU   *                        GO TO IFG0551D
*
*        REGISTER 7 INDICATES THE CALLING SEQUENCE TO IFG0551D
*
*        R7=0 - GO TO IFG0551D WITH R7=0 INDICATING FOR IT TO
*              CONSTRUCT AND WRITE THE NON-ACCEPTABLE ERROR MSG
*              AND ISSUE AN 001 ABEND
*
*        R7 POINTS TO MESSAGE WHICH IS MOVED TO WORKAREA, INDICATING
*              FOR IFG0551D TO WRITE IT AND ISSUE 001 ABEND BY
*              PASSING IFG0551D R7=4.
*
         USING WTG,RWTG                                          Y02080
         LTR   R7,R7                    CHECK FOR PROPER ENTRY  SA53086
*                                       TO MESSAGE MODULE       SA53086
         BZ    EIN05450                 BRANCH TO INDICATE      SA53086
*                                       NON-ACCEPTABLE ERROR    SA53086
*                                       MESSAGE TO MSG MODULE   SA53086
         LA    R1,DXREG1                RE-ESTABLISH REG 1
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         XC    K0(K12,R1),K0(R1)
         MVI   K1(R1),K16               INDICATE 001 ABEND
         LH    RF,K0(R7)                GET LENGTH OF MSG
         BCTR  RF,R0                    DECR BY 1 FOR EX OPCODE
         EX    RF,EIN05500              MOVE MSG TO WKAREA
         LA    R7,K4                    INDICATE NORMAL ENTRY   SA53086
*                                       FOR MSG MODULE          SA53086
EIN05450 EQU   *                        GIVE IFG0551D CONTROL
         MODESET EXTKEY=DATAMGT         RET EOV KEY              Y02082
         MVC   DXXMODNM,ERRNAME         GET IFG0551D NAME
         MVC   DXXMODEP+K1(K3),MOD2E2F+K2 GET TTR OF IFG0551D    Y02080
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=DIRECT               Y02080
EIN05500 EQU   *                        MOVE MESSAGE TO WORKAREA
         MVC   MSGLSTSZ(K0),K0(R7)
         EJECT
EIN05600 EQU   *                        DETERMINE FUNCTION REQUESTED
         B     EIN05700(R7)             BR TABLE FOR PROCESSING SYNAD
EIN05700 EQU   *                        BRANCH TABLE
         B     EIN06200                 0-SETUP FOR GET OR PUT ROUTINE
         B     EIN06500                 4-CHECK FOR USER ERROR OPTIONS
         B     EIN07500                 8-CHECK FOR SCHEDULING
         B     EIN07800                 12-GO ISSUE SVC FOR EXCP
         B     EIN07400                 16-GET NEXT IOB FOR SCHEDULING
         LA    R7,MSG22F                20-GET ADDR FOR IEC020I MSG
         BR    RBASE                    BR TO SETUP ABEND AND XCTL
         SPACE 2
EIN05900 EQU   *                        EXIT TO ACCESS METHOD
         LR    RC,RCORE                 SAVE WORKAREA POINTER    YM3068
         TM    DCBSYNAD+K3,K1           IS SYNAD PRESENT
         BO    EIN06000                 NO BRANCH
         LM    R0,R8,K28(RD)            GET ERR REGS PRE-SAVED IN REG13
         MVC   K36(K28,RD),K40(RET)     RESTORE USER REGS - 2--8
         MODESET EXTKEY=SUPR                                     Y02082
         STM   R0,R8,K32(RET)           RESTORE ERROR FLAGS TO SVRB
EIN06000 EQU   *                        FREE EOV WORKAREA
         MODESET EXTKEY=DATAMGT                                  YM5000
         LR    R1,RC                    WORK AREA TO R 1         YM3068
         IECRES FREE,A=(1),PREFIX=EOV   FREE WORK AREA           Y02080
         XR    RF,RF                    INDICATE NO SYNAD        A42485
         IECRES EXIT                    RETURN                   Y02080
         EJECT
EIN06100 EQU   *                        RESCHEDULE IOBS FOR QSAM
*                                       FIXED-STANDARD DATA SET
*
*   MUST GO TO EOB RTN IF FIXED-STANDARD DATA SET AND LAST IOB SO THAT*
*   SEARCH ADDRESS CAN BE UPDATED FOR SKIP ONLY                       *
*
         L     RTIOT,DCBIOBA            GET IOB ADDRESS FORM DCB
         LA    RTIOT,K0(RTIOT)          CLEAR HIGH BYTE
         CR    RWTG,RTIOT               ARE WE BACK TO ORIGINAL IOB
         BNE   EIN07400                 NO  BRANCH
         SR    R7,R7                    CLEAR REG
         IC    R7,DCBOFFSR              READ CCW OFFSET FOR EOB RT
***********************************************************************
*
*        THE FOLLOWING ROUTINE DETERMINES IF A SYNCH OR BALR SHOULD BE
*        TAKEN TO THE EOB ROUTINE AND TAKES IT.  THE DECISION IS MADE
*        ON THE BASIS OF THE CALLING RB. IF IT IS KEY 0-7, CHANGE OF
*        KEY IS UNNECESSARY AND BALR IS USED. IF IT IS USER KEY, THE
*        KEY IS CHANGED TO THAT OF THE USER VIA A SYNCH MACRO.
*        A GETMAIN IS ISSUED TO GET A SAVEAREA FOR THE I/O
*        ROUTINE IN SP 230. IT IS FREED UPON RETURN. ALL EOV
*        REGISTERS ARE SAVED IN THE EOV WORKAREA (+0).  THIS ADDRESS
*        IS PASSED TO EOB WHEN BALR IS USED.  EOB STORES 2 REGISTERS
*        (9,10) AT OFFSET 64 IN THIS WORKAREA.
*
***********************************************************************
EIN06130 EQU   *                        SAVE REGISTERS           M0135
         MODESET EXTKEY=DATAMGT                                  Y02082
         STM   R0,RF,K0(RCORE)          SAVE EOV REGISTERS IN    M0135
*                                       WORKAREA
         MODESET EXTKEY=SUPR            SVRB KEY                 Y02082
         ST    RCORE,RBEXSAVE           SAVE RCORE               Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO D.M.KEY        Y02082
         EJECT
         L     R0,CONREGMN              LOAD GETMAIN CONSTANT    Y02082
         IECRES GET,LV=(0),PREFIX=NO,STM=(2,14,DXXPREFX),        Y02082*
               KEY=USER                 GET SAVEAREA             Y02082
         LR    RD,R1                    PUT PTR TO GOTTEN CORE   Y02082
*                                       IN R13                   Y02082
         L     RF,DCBEOB                LOAD EOB ADDRESS IN R15  M0135
         L     RC,RBLINK                PTR TO PREVIOUS RB       M0135
         CLI   RBOPSW+K1-RBSECT(RC),X80 IS PREVIOUS RB IN        Y02082
*                                       SYSTEM KEY               Y02082
         BNL   EIN06140                 NO, BR TO SET UP SYNCH   Y02082
         LR    RBASE,RWTG               PUT IOB IN R3 FOR EOB    M0135
         BALR  RET,RF                   BRANCH TO EOB            M0135
         BALR  RET,0                    ESTABLISH ADDRESSABILITY Y02082
         USING *,RET                    BASE FOR FOLLOWING BRANCH
         B     EIN06150                 RESTORE REGS             Y02082
         DROP  RET                      NO LONGER NEEDED
EIN06140 EQU   *                        SYNCH                    M0135
         LR    RBASE,RWTG               PUT IOB PTR IN R3        M0135
         SYNCH (15)                     GO TO EOB IN PROB PGM    M0135
*                                       STATE                    M0135
         EJECT
*
*        THE FOLLOWING ROUTINE CHAINS DOWN THE CVT,TCB AND RB TO PICK
*        UP THE CURRENT SVRB AFTER GOING TO EOB ROUTINE
*
EIN06150 EQU   *                        GET REGS TO FREEMAIN     Y02082
         L     RET,CVTPTR               CVT ADDRESS              M0135
         L     RET,K0(K0,RET)           ADDR TO TCB PTRS         M0135
         L     RET,K4(K0,RET)           ACTIVE TCB PTR           M0135
         L     RET,K0(K0,RET)           SVRB PTR                 M0135
*
         USING RBSECT,RET                                        M0135
         L     RCORE,RBEXSAVE           LOAD PTR TO EOV WKAREA   M0135
         L     RBASE,K12(RCORE)         RELOAD BASE REGISTER     M0135
         L     R0,CONREGMN              LOAD GETMAIN CONSTANT    Y02082
         MODESET EXTKEY=DATAMGT                                  Y02082
         IECRES FREE,A=(RD),PREFIX=NO,STM=(0,14,DXXPREFX),       Y02082*
               KEY=USER,LV=(0)          FREE SAVEAREA            Y02082
         DROP  RET                                               M0135
         LM    R0,RF,K0(RCORE)          RESTORE ALL EOV          M0135
*                                       REGISTERS                M0135
         B     EIN05900                 BR TO EXIT               M0135
         EJECT
*
*        REG 7 = 0 ENTRY POINT - TAKE QSAM SYNAD EXIT
*
EIN06200 EQU   *                        QSAM I/O ERROR ANALYSIS
         SR    RWTG,RWTG                CLEAR REG
         TM    K0(RC),IOBWRITE          IOB IN WRITE STATUS
         IC    RWTG,DCBOFFSW            GET WRITE CCW OFFSET
         BO    EIN06300                 YES - BRANCH
*
         IC    RWTG,DCBOFFSR            GET READ CCW OFFSET
EIN06300 EQU   *                        GET CCW
         SH    RWTG,EIGHTCON            REDUCE OFFSET BY 8
         SLL   RWTG,K24                 SHIFT TO HIGH ORDER BYTE
         LA    R7,K8(RC)                PUT IOBAD IN SAME REG AS
*                                       OFFSET CONSTANT
         OR    RWTG,R7                  OFFSET CONSTANT
         LR    RC,RCORE                 PRIME RC                 YM1304
         LR    RTIOT,RWTG               SET UP PARM REG FOR RET  A43881
         LR    RUCB,R1                  SAVE PARM IN UCB REG
         L     RF,DCBSYNAD              GET SYNAD ADDRESS        A42485
         LA    RF,K0(RF)                CLEAR HIGH BYTE        @ZA27758
         LM    R2,R8,K36(RD)            GET GERR/PERR REGS 2-8   Y02082
         MVC   K32(K32,RD),K36(RET)     RESTORE REGISTERS 1-8    Y02082
         MODESET EXTKEY=ZERO                                     Y02082
         STM   R2,R8,K40(RET)           SAVE GERR PERR REGS      Y02082
         LR    R8,RUCB                  SAVE PARM IN R8          Y02080
         IECRES FREE,A=(RC),PREFIX=EOV  FREE WORK AREA           Y02080
         LR    R0,RTIOT                 RESTORE PARAMETER REGS
         LR    R1,R8                    RESTORE PARM FROM R8     Y02080
         IECRES EXIT                    RETURN TO ACCESS METHOD  Y02080
         EJECT
*
*        REG 7 = 4 ENTRY POINT - IMPLEMENT ERROR OPTION IF
*        ERROR CAN BE ACCEPTED.
*        RETURN FROM SYNAD FOR QSAM OR NO SYNAD PRESENT.
*
EIN06500 EQU   *                        RESET ERROR FLAGS
*
         NI    DCBIFLGS,X'FF'-DCBIFPIO  TURN OFF ERROR FLAGS
         NI    DCBCIND2,ALLBITS-X10     TURN OFF 2ND ENTRY FLAG
*
*  COPY THE IOB PREFIX ADDRESS FOR NORMAL SCHEDULING OR THE
*  INTERRUPT CONTROL BLOCK (ICB) ADDRESS FOR CHAINED CHANNEL-
*  PROGRAM SCHEDULING, PASSED FROM IGC0005E.
*
         LR    RWTG,RC                 COPY IOB OR ICB ADDRESS
*
*  THE FOLLOWING ROUTINE DETERMINES THOSE ERRORS WHICH THE USER
*  CANNOT ACCEPT.
*
         XR    R7,R7                    SET INDICATOR TO TELL   SA53086
*                                       MSG MODULE TO BUILD     SA53086
*                                       NON-ACCEPTABLE MESSAGE  SA53086
*
*  TEST SECOND CSW STATUS BYTE FOR NON-ACCEPTABLE ERRORS;
*  PROGRAM CHECK, PROTECTION CHECK, CHANNEL DATA CHECK,
*  CHANNEL CONTROL CHECK, INTERFACE CONTROL CHECK,
*  CHAINING CHECK.
*
         TM    K21(RWTG),ALLBITS-X80-X40  NON-ACCEPTABLE ERROR   A44814
         BNZR  RBASE                    YES BRANCH TO ABEND
         TM    K20(RWTG),X02            DOES UNIT CHECK EXIST    A44814
         BNO   EIN06600                 NO-BRANCH TO ERR OPT TEST
         TM    DCBDEVT,DCBDEVDA         DA USED
         BNO   EIN06600                 NO-BRANCH TO ERR OPT TEST
*
*  TEST SENSE BYTES FOR NON-ACCEPTABLE ERRORS, THAT IS
*  ANYTHING BUT A DATA CHECK (NOT IN COUNT FIELD).
*
         TM    K10(RWTG),ALLBITS-X08    TEST FIRST SENSE BYTE    A44814
*                                       FOR NON ACCEPTABLE ERROR
         BNZR  RBASE                    YES BRANCH TO ABEND
         TM    K11(RWTG),ALLBITS        TEST SECOND SENSE BYTE   A44814
*                                       FOR NON-ACCEPTABLE ERROR
         BNZR  RBASE                    YES BRANCH TO ABEND
         EJECT
EIN06600 EQU   *                        ERROR ACCEPTABLE-TEST DCBEROPT
         TM    DCBEROPT,DCBERACC+DCBERSKP  TEST USERS ERROR      A44814
*                                       OPTION FOR SKIP OR ACCEPT
         BM    EIN06700                 YES, EITHER SKIP OR      A44814
*                                       ACCEPT SPECIFIED, DO NOT ABEND
*
         LA    R7,MSG22F                GET ADDR OF IEC020I MSG
         BR    RBASE                    BRANCH TO ABEND
         SPACE 2
EIN06700 EQU   *                        SKIP OR ACCEPT I/O ERROR
*
         LR    RA,RC                    SAVE BAD ICB ADDR.     @ZA16052
         TM    DCBCIND2,DCBC2CHN        IS PCI BEING USED?     @ZA16052
         BO    EIN06725                 YES,DEFAULT TO ACCEPT  @ZA25479
         TM    DCBEROPT,X40             IS EROPT=SKP?          @ZA16052
         BO    EIN06800                 YES,NON PCI GO TO SKIP @ZA16052
EIN06725 EQU   *                        ACCEPT SECTION         @ZA16052
*                                                              @ZA16052
         MVI   K4(RC),ECBCOD7F          FLAG IOB AS COMPLETE     A43881
*                                       WITHOUT ERROR            A43881
*
         TM    K0(RC),IOBWRITE          IN WRITE STATUS
         BO    EIN07700                 YES BRANCH
*
         TM    DCBCIND2,DCBC2CHN        IS PCI BEING USED
         BO    EIN07800                 YES BRANCH TO PCI SECTION
         B     EIN07500                 NO,BRANCH TO GET NEXT IOB
         SPACE 2
EIN06800 EQU   *                        SKIP ERROR OPTION
*
         TM    K0(RC),IOBWRITE          IN WRITE STATUS
         LA    R7,MSG22F                GET ADDR OF IEC020I MSG
         BCR   1,RBASE                  YES - BRANCH
*
*
         L     RWTG,K0(RC)              GET NEXT IOB
*
         LA    RWTG,K0(RWTG)            CLEAR HI BYTE
         EJECT
*
*   IF NO SYNAD IS PRESENT WITH SKIP OPTION, REGS WERE NOT SAVED IN
*   USER SAVE AREA BY A PREVIOUS ENTRY.  MUST UPDATE SVRB SAVE AREA
*   DIRECTLY TO GIVE GERR THE CORRECT IOB TO WAIT ON.
*
         TM    DCBSYNAD+K3,K1           IS SYNAD PRESENT
         BO    EIN06900                 NO-----BRANCH
*
         ST    R6,K40(RD)               SAVE FOR GERR
         B     EIN07000                 BR TO CHECK FOR PCI
*
EIN06900 EQU   *                        PUT IOB ADDR IN SVRB SAVEAREA
*
         MODESET EXTKEY=ZERO                                     Y02082
         ST    R6,K44(RET)              SAVE FOR GERR
         MODESET KEYADDR=DXUKEY,WORKREG=1                        Y02082
*
EIN07000 EQU   *                        UPDATE IOBSEEK IF ONE IOB,
*                                       DA, NOT PCI, OR SEARCH DIRECT
*
         TM    DCBDEVT,DCBDEVDA         DA USED
         BZ    EIN07100                 NO BRANCH
*
         TM    DCBCIND1,BLANK           SEARCH DIRECT
         BO    EIN07100                 YES BRANCH
*
         CLC   K1(K3,RC),K1(R6)         MORE THAN ONE IOB
         BNE   EIN07100                 YES BRANCH
*
         MVC   K40(K8,R6),DCBFDAD       PUT NEXT REC ADDR IN IOB
*
EIN07100 EQU   *                        BSAM SHOULDN'T BE HERE
*
         TM    DCBCIND2,DCBC2QSM        DCB USING QSAM
         BZ    EIN07400                 NO BRANCH
         EJECT
EIN07200 EQU   *                        SETUP FOR EXCP FOR QSAM
*
         TM    DCBCIND2,DCBC2CHN        IS PCI BEING USED
         BO    EIN07800                 IF SO, BRANCH TO PCI SECTION.
         TM    DCBDEVT,DCBDVPR1         DCB USING PRINTER?      SA67189
         BNO   EIN07210                 NO, BRANCH              SA67189
         TM    DCBDEVT,X10              IS DCB A PRINTER?       SA67189
         BNO   EIN07233                 YES, BRANCH             SA67189
*                                                               SA67189
EIN07210 EQU   *                        NOT A PRINTER           SA67189
*                                                               SA67189
         XC    DCBIOBA+K1(K3),DCBIOBA+K1  CLEAR ADDRESS FIELD IOBA
         B     EIN07267                 BR, ISSUE EXCP          SA67189
*                                                               SA67189
EIN07233 EQU   *                        OPENED TO PRINTER       SA67189
*                                                               SA67189
         LA    RC,K0(RC)                CLEAR HIGH BYTE         SA67189
         LR    R6,RC                    COPY IOB ADDRESS        SA67189
         B     EIN07550                 PROCESS NEXT IOB        SA67189
*                                                               SA67189
EIN07267 EQU   *                        NOT A PRINTER           SA67189
*                                                               SA67189
         O     RC,DCBIOBA               FLAGS TO REG HI BYTE
         ST    RC,DCBIOBA               SAVE THIS IOB ADDRESS IN DCB
         L     RC,K0(RC)                GET NEXT IOB IN CHAIN
         LA    RC,K0(RC)                H1 BYTE CLEARED
EIN07300 EQU   *                        RESCHEDULE IOB
         LR    R6,RC                    COPY IOB ADDRESS
*
*        REG 7 = 16 ENTRY POINT - BSAM PRINTER
*
EIN07400 EQU   *                        ISSUE EXCP
*
         LA    R1,K8(R6)                LOAD ADDRESS OF IOB FOR EXCP
*
         EXCP  (1)
*
*        REG 7 = 8 ENTRY POINT - BSAM NON-PCI
*
EIN07500 EQU   *                        QSAM-ACCEPT NON-PCI
*
         TM    DCBCIND2,DCBC2QSM        IS QSAM BEING USED
         BZ    EIN07675                 NO,BRANCH OUT           SA53086
*                                                               SA67189
EIN07550 EQU   *                        PROCESS NEXT IOB        SA67189
*                                                               SA67189
         L     R6,K0(R6)                GET NEXT IOB IN CHAIN
         LA    R6,K0(R6)                CLEAR BYTE H1
         TM    DCBEROPT,X80             ACC OPTION USED
         BO    EIN07600                 YES, BRANCH
         TM    DCBCIND1,BLANK           SEARCH DIRECT
         BO    EIN06100                 BR TO PROCESS IOB
EIN07600 EQU   *                        SCHEDULE IF NOT ALREADY
         CR    RC,R6                    HAS IOB BEEN SCHEDULED
         BNE   EIN07400                 NO BRANCH TO SCHEDULE IT
         B     EIN05900                 RETURN TO GERR/PERR/CHECK
         EJECT
*
*     FOR BSAM, NON CHAINED SCHEDULING RESTART IO FROM THE IOB  SA53086
*     AFTER THE ONE IN ERROR UP TO AND INCLUDING THE LAST ONE   SA53086
*     ISSUED.                                                   SA53086
*
*     IF AN IOB HAS BIT 4 IN THE IOB PREFIX SET TO ONE, THE IOB  YM7557
*     REPRESENTS A READ WHEN LABEL OVERRIDE (,,,OUT) IS          YM7557
*     SPECIFIED, OR A WRITE WHEN LABEL OVERRIDE (,,,IN) IS       YM7557
*     SPECIFIED. IN EITHER CASE THE ECB IS ALREADY POSTED AND    YM7557
*     WILL NOT BE RESCHEDULED. THE PERMANENT ERROR FLAGS ARE     YM7557
*     SET AND NO FURTHER IOBS WILL BE RESCHEDULED.               YM7557
*
EIN07650 EQU   *                        EXCP IOB
         TM    K0(RWTG),X08             INVALID REQUEST          YM7557
         BZ    EIN07655                 BRANCH IF NOT            YM7557
         OI    DCBIFLGS,X40+X80         SET PERMANENT ERROR FLGS YM7557
         B     EIN05900                 RETURN                   YM7557
EIN07655 EQU   *                        SCHEDULE IOB             YM7557
         LA    R1,K8(RWTG)               ADDR OF IOB FOR EXCP   SA53086
         EXCP  (1)                       ISSUE EXCP             SA53086
         CR    R6,RC                     LAST TO BE SCHEDULED   SA53086
         BE    EIN05900                  YES, RETURN            SA53086
EIN07675 EQU   *                        TEST IF MORE
         L     RWTG,0(RWTG)              NEXT IOB TO START      SA53086
         LA    RWTG,0(RWTG)              CLEAR HIGH BYTE        SA53086
         B     EIN07650                  BRANCH TO RESTART      SA53086
*
**********************************************************************
*
EIN07700 EQU   *                        QSAM SKIP OUTPUT ERROR
*                                       ABEND UNLESS PRINTER DEVICE
         LA    R7,MSG22F                GET ADDR OF IEC020I MSG
*
         TM    DCBDEVT,K72              DCB USING PRINTER
         BNOR  RBASE                    NO - BRANCH
*
         CLI   K12(RC),X40+X04          WAS IOB INTERCEPTED
         BE    EIN07300                 YES BR TO RESCHEDULE IT
         B     EIN07200                 NO BR TO RESCHEDULE NEXT
         EJECT
*
*        REG 7 = 12 ENTRY POINT - BSAM PCI
*
EIN07800 EQU   *                        RESET FLAGS IN MAIN IOB PREFIX
         L     R8,DCBIOBAD              GET MAIN IOB.            A49379
*
         MVI   K24(R8),K0               SET FLAG 3 TO ZERO       A49379
         MVI   K17(R8),K0               CLEAR FLAG2            @ZA01339
         NI    K16(R8),IOBDATCH+IOBCMDCH  RESET FLAG1          @ZA01339
*
*
*
*    ICB'S WILL BE RESTARTED ONLY IF TIC'ED ON TO NEXT ICB     @ZA16052
*    INDICATING USER HAS MORE THAN ONE UNCHECKED I/O REQUEST. 19CU
*    UPDATES SO THAT LAST NOP LINKS TO ICB IN ERROR IF RESTART IS
*    NECESSARY. IF ICB IN ERROR AND LAST NOP ARE SAME THEN THERE ARE
*    NOT ANY OUTSTANDING REQUESTS,(I.E.,ICB IN ERROR WAS LAST IN
*    CHAIN AND THEREFORE DID NOT TIC TO NEXT ICB).
*       FOR BSAM,                                              @ZA16052
*     IF THE FIRST ICB TO BE SCHEDULED HAS BIT 4 IN THE ICB      YM7557
*     PREFIX SET TO ONE, THE ICB                                 YM7557
*     REPRESENTS A READ WHEN LABEL OVERRIDE (,,,OUT) IS          YM7557
*     SPECIFIED, OR A WRITE WHEN LABEL OVERRIDE (,,,IN) IS       YM7557
*     SPECIFIED. IN EITHER CASE THE ECB IS ALREADY POSTED AND    YM7557
*     THE MAIN IOB WILL NOT BE EXCPED.                           YM7557
*
         MVI   K4(R8),ECBCOD7F          SET THE MAIN IOB'S ECB   A49379
*                                       COMPLETE AS EOB ROUTINE  A49379
*                                       MAY TRY TO JOIN RATHER   A49379
*                                       THAN RESTARTING ICB'S    A49379
*                                                              @ZA16052
         TM    DCBCIND2,DCBC2QSM        IF QSAM,               @ZA16052
         BC    1,EIN07925               GO EXCP                @ZA16052
*                                                              @ZA16052
         L     R6,K0(RC)                GET NEXT ICB             YM7557
         TM    K0(R6),X08               INVALID REQUEST          YM7557
         BO    EIN05900                 BRANCH IF YES            YM7557
*                                                              @ZA16052
EIN07925 EQU   *                        EXCP                   @ZA16052
*                                                              @ZA16052
         L     R6,K12(R8)               GET POINTER TO ICB WITH  A49379
         SR    R9,R9                      LAST NOP.
         IC    R9,K2(R8)                GET NOP OFFSET           A49379
         SR    R6,R9                    SUBTRACT NOP OFFSET
         LA    RC,K0(RC)                ZERO HIGH BYTE BAD ICB   A49379
         LA    R6,K0(R6)                ZERO HIGH BYTE
         EJECT
*                                                                A49379
*        IF THE ICB THAT ENDS THE CHAIN, POINTED TO BY THE LAST  A49379
*        NOP POINTER IN THE MAIN IOB, IS THE SAME AS THE ICB IN  A49379
*        ERROR THEN THE ERROR OCCURRED ON THE LAST REQUEST IN    A49379
*        THE CHAIN, THEREFORE DON'T RESTART.                     A49379
*                                                                A49379
         CR    RC,R6                    COMPARE BAD ICB WITH ICB A49379
*                                       WITH LAST NOP WHICH IS   A49379
*                                       LAST ICB IN THE CHAIN    A49379
         BE    EIN05900                 BR IF ERROR ICB IS LAST  A49379
*                                       IN CHAIN, DON'T RESTART  A49379
EIN07950 EQU   *                        YES,ISSUE EXCP
         MVI   K4(R8),K0                SET MAIN IOB NOT         A49379
*                                       COMPLETE
         LA    R8,K16(R8)               GET IOS' IOB.            A49379
*
         EXCP  (R8)                                              A49379
*
         B     EIN05900                 BR TO GERR/PERR/CHECK
         EJECT
         EJECT
**********************************************************************
**********                     CONSTANTS                    **********
**********************************************************************
*
CON322F  DC    H'32'                    CONSTANT OF 32
MSG22F   DC    AL2(ENDMS22F-*)          ERROR MESSAGE
         DC    AL2(4)                   IEC020I INVLD/NO SYNAD SPECIFED
         DC    C'IEC020I DCB EROPT=ABE OR AN ' MSG PART 1
         DC    C'INVALID CODE, AND/OR ' MSG PART 2
         DC    C'NO SYNAD EXIT SPECIFIED' MSG PART 3             A39511
ENDMS22F EQU   *                        END OF MSG
         SPACE 2
EIGHTCON DC    H'8'                     CONSTANT OF 8
CONREGMN DS    0F                       USER SAVEAREA SP, LENGTH M0135
         DC    AL1(250)                 SUBPOOL VALUE            M0135
         DC    AL3(K72)                 LENGTH VALUE             M0135
         EJECT
XCTLTA2F XCTLTABL ID=(MOD2E2F,1D,ERRNAME,IFG0551D),SVC=055,      Y02080X
               BRT=YES,LENGTH=                                   Y02080
         IECDSECS  DCB,UCB,CVT,RB,MAIN,WTG,PREFX,EXPAND=YES      Y02080
IOBDATCH EQU   X'80'                    DATA CHAIN             @ZA01339
IOBCMDCH EQU   X'40'                    COMMAND CHAIN          @ZA01339
         IECEQU
         END
