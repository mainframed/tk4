         TITLE 'IFG0202I - SMF DIRECT ACCESS MODULE'
IFG0202I CSECT
***********************************************************************
*                                                                     *
*          VS 2 RELEASE 03 DELETIONS/CHANGES                         *
*0000                                                           ZA00822
*0000405020,696000,696300,696650,697900,698000,698100           Z30AAJC
*000069592003,69600003                                         @ZA05226
*0000677900,678700                                             @ZA08712
*0000                                                          @ZA15962
*          VS 1 RELEASE 01 DELETIONS                                  *
*0000                                                            XM5543
*          VS 1 RELEASE 02 DELETIONS                                  *
*0000643500                                                      XM0454
*                                                                     *
*          RELEASE 21 DELETIONS/CHANGES                               *
* 304000-308000,394000,400000,404000-508000,686000-690000        M1771
*                                                                A39153
*                                                                A42935
*                                                                A38013
*                                                                A43330
*                                                                A44480
*0000414500                                                     SA55575
*                                                                     *
* MODULE NAME = IFG0202I                                              *
*                                                                     *
* DESCRIPTIVE NAME = SMF DIRECT ACCESS MODULE                         *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE FUNCTION(S) OR PART(S) OF FUNCTION(S)-- *
*    CLOSE/EOV SMF RECORD BUILDER FUNCTION.                           *
*       THIS FUNCTION STARTS IN MODULE IFG0202H, AND CONTINUES HERE   *
*       ONLY FOR DIRECT ACCESS DATA SETS.                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)' FOR DETAILS.         *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IFG0202I - ENTRY POINT VIA AN XCTL FROM THE FOLLOWING--     *
*             IFG0202H - CONTINUE PROCESSING CLOSE/EOV SMF RECORD     *
*                        BUILDER FUNCTION.                            *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN DATA MANAGEMENT KEY                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IFG019RA - OPEN/CLOSE/EOV RESIDENT ROUTINE FOR XCTL AND     *
*                    WAIT.                                            *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    EXIT VIA THE RESIDENT ROUTINE XCTL TO THE FOLLOWING--            *
*         IFG0202J - PROCESS CLOSE FINAL STRING.                      *
*         IFG0553P - PROCESS EOV DIRECT ACCESS INPUT FUNCTION.        *
*         IFG0554P - PROCESS EOV DIRECT ACCESS OUTPUT FUNCTION.       *
*         IFG0RROB - FORCE CLOSE PROCESSING                           *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*    EXIT IS TO THE PROBLEM DETERMINATION MODULE IFG0200P, IF AN      *
*    ABEND SITUATION OCCURS IN THIS MODULE.  REFER TO THE FOLLOWING   *
*    'FUNCTION PROLOG(S)'.                                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG(S)'.                     *
*                                                                     *
***********************************************************************
         EJECT
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING UCBOB,RUCB
         USING TIOENTRY,RTIOT
         USING DEB,RDEB
         USING CVT,RD
         USING SMF14RCD,R7
         USING TCTUCBP,RF
         USING WTG,RWTG
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE
         EJECT
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    CLOSE/EOV SMF RECORD BUILDER FUNCTION.                           *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    THIS FUNCTION IS CALLED BY CLOSE/EOV WHEN THE SYSTEM MANAGEMENT  *
*    FACILITIES DATA SET INFORMATION IS DESIRED. THIS FUNCTION BUILDS *
*    THE TYPE 14/15 SMF RECORD AND ISSUE AN SVC 83 TO HAVE THE RECORD *
*    WRITTEN ON THE SYS1.MAN DATA SET.                                *
*    IF ENTRY WAS FROM CLOSE, THIS FUNCTION SETS UP POINTERS TO       *
*    VARIOUS CONTROL BLOCKS REQUIRED TO BUILD THE SMF RECORD.         *
*    A GETMAIN IS ISSUED FOR THE CORE REQUIRED TO BUILD THE RECORD IF *
*    ENTRY WAS FROM EOV OR IF THE RECORD WILL NOT FIT IN THE WORKAREA *
*    USED BY CLOSE.                                                   *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTERED FROM THE FOLLOWING--                                     *
*    CLOSE SMF INTERFACE FUNCTIONS.                                   *
*    EOV SMF INTERFACE FUNCTIONS.                                     *
*                                                                     *
* INPUT -                                                             *
*    A POINTER TO EACH OF THE FOLLOWING--                             *
*       CURRENT PARAMETER LIST ENTRY- RPARC                           *
*       DD ENTRY IN THE TIOT- RTIOT                                   *
*       WTG TABLE- RWTG                                               *
*       CURRENT WTG TABLE ENTRY- RWTGC                                *
*       DCB- RDCB                                                     *
*       WORK AREA- RCORE                                              *
*       RESIDENT ROUTINE- RES                                         *
*       UCB- RUCB                                                     *
*       DEB- RDEB                                                     *
*                                                                     *
* OUTPUT -                                                            *
*    AN SMF RECORD IS WRITTEN FOR TAPE AND D. A. DATA SETS.           *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*    CLOSE/EOV FUNCTIONS THAT CALLED THIS FUNCTION.                   *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* NOTES -                                                             *
*    NOT APPLICABLE                                                   *
*                                                                     *
***********************************************************************
         EJECT
*
*   THIS SECTION BUILDS THE DCB/DEB EXTENSION.
*
         LR    R7,R1                    RESTORE BASE REG FOR SMF REC
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP               A39153
         BZ    CCM02520                 BRANCH IF NOT            A39153
         TM    DCBMACRF,DCBMCOM         COMMON INTERFACE PRESENT A39153
         BZ    CCM02600                 BRANCH IF NOT            A39153
         TM    DCBMACRF+K1,DCBMDEV      DEV. INTERFACE PRESENT   A39153
         BZ    CCM02600                 BRANCH IF NOT            A39153
CCM02520 EQU   *                        NOT EXCP                 A39153
         TM    DCBDSORG,DCBORGDA        TEST FOR DIRECT ORG      A43330
         BZ    CCM02540                 BRANCH IF NOT            A43330
         OI    SMF14RIN,SMF14DDA        SET DA INDICATOR         A43330
         B     CCM02600                 BRANCH TO RESTORE REG    A43330
CCM02540 EQU   *                        NOT DIRECT ORG           A43330
         TM    DCBDSORG,DCBORGPS        TEST FOR PHYSICAL SEQ
         BZ    CCM02600                 BRANCH IF NOT PS         A39153
         LR    R1,RDEB                  SET UP PARM REGS FOR IECPRLTV
         LA    RDCB,DCBFDAD             GET DISK ADDR TO BE CONVERTED
         L     RD,CVTPTR                GET POINTER TO CVT
         L     RF,CVTPRLTV              GET ADDRESS OF CONVERT ROUTINE
         BALR  RET,RF                   LINK TO CONVERT ROUTINE
CCM02600 L     RDCB,REGSAVE             RESTORE REGISTERS
         LM    RCORE,RET,REGSAVE+K4     RESTORE REGISTERS
         LTR   RF,RF                    TEST RETURN CODE
         BNZ   CCM02700                 BRANCH IF NOT ZERO
         ST    R0,SMF14NTU              INSERT TRACKS USED IN RECORD
CCM02700 EQU   *
         L     RF,REGSAVE+K48           RESTORE PTR TO TCTUCBP
         XC    REGSAVE(K52),REGSAVE     CLEAR REGSAVE CORE       A39153
         OI    SMF14RIN,SMF14DAD        SET DASD INDICATOR
         ST    R8,SMF14TME+K2           SAVE R8
         STM   RC,RET,SMF14TME+K6       SAVE REGISTERS
         XR    RD,RD                    CLEAR REG
         IC    RD,TCTSCTR               GET NO. UCB ENTRIES IN TCT
         SLL   RD,3                     MULTIPLY BY ENTRY SIZE
         LA    RD,K4(RD,RF)             GET ADDR OF RLSE INFO
         MVC   SMF14NTR+K1(K3),K1(RD)   NBR OF TRACKS RELEASED   YM6805X
                                        BY DADSM PARTIAL RELEASE YM6805
         MVC   SMF14NER,K0(RD)          NUMBER OF EXTENTS       SA60362
*                                       RELEASED BY DADSM       SA60362
         MODESET EXTKEY=SUPR            GET IN SUPERV KEY        YM5936
         XC    K0(K4,RD),K0(RD)         ZERO RLSE INFO IN TCT   SA60362
         MODESET EXTKEY=DATAMGT         RESUME DM KEY            YM5936
*
*   THIS SECTION PREPARES TO BUILD THE UCB SEGMENT(S) FOR AN ISAM
*   DATA SET. ONE UCB SEGMENT WILL BE BUILT FOR EACH OF THE INDEX
*   AND OVERFLOW AREAS PLUS ONE UCB SEGMENT FOR EACH PRIME VOLUME.
*
         LR    RD,RTIOT                 GET TIOT ADDRESS         YM6805
         LA    R9,SMF14UCB              SET BASE FOR UCB SEGS    YM6805
         USING SMF14UCB,R9              UCB SEGMENT ADDRESSING   YM6805
         XR    R8,R8                    ZERO LOOP CONTROL REGS
         XR    R0,R0                    ZERO REGISTER            YM6805
         LA    R1,DEBDVMOD-DEB(RDEB)    POINT TO FIRST EXTENT
         TM    SMFDCBOR,DCBORGIS        IS THIS AN ISAM DATA SET
         BZ    CCM02740                 BRANCH IF NOT ISAM       M1771
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP               A42935
         BO    CCM02770                 BRANCH IF YES            M1771
         XR    RET,RET                  ZERO REGISTER            YM6805
         XC    DXXCTL,DXXCTL            CLEAR TEMP WORK AREA     YM6805
         IC    R0,TIOELNGH-TIOENTRY(,RD)  LENGTH OF DD ENTRY     YM6805
         AR    RD,R0                    POINT TO NEXT ENTRY      YM6805
         LA    RC,K2                    SET LOOP CONTROL         YM6805
CCM02703 EQU   *                        TEST IF LAST ENTRY       YM6805
         IC    R0,TIOELNGH-TIOENTRY(,RD)  GET ENTRY LENGTH       YM6805
         LTR   R0,R0                    IS NEXT ENTRY LAST       YM6805
         BZ    CCM02706                 YES, BRANCH              YM6805
         CLI   TIOEDDNM-TIOENTRY(RD),BLANK  CONCAT'D DD ENTRY    YM6805
         BNE   CCM02706                 NO, BRANCH               YM6805
         LA    RET,K1(,RET)             INCR NBR ADDITIONAL DDS  YM6805
         AR    RD,R0                    POINT TO NEXT ENTRY      YM6805
         BCT   RC,CCM02703              LOOP IF POSSIBLE 3 DDS   YM6805
*                                                                YM6805
CCM02706 EQU   *                        GET NBR OF INDEX EXTENTS YM6805
         STC   RET,DXXCTL               SAVE ADDITIONAL DD COUNT YM6805
         IC    R8,DEBNIEE               GET NBR OF INDEX EXTENTS M1771
         LTR   R8,R8                    TEST FOR ZERO EXTENTS    M1771
         BZ    CCM02710                 BRANCH IF ZERO           M1771
         L     R1,DEBFIEAD              ADDR OF 1ST INDEX EXTENT M1771
         BAL   RET,CCM02800             GO BUILD THE UCB SEGMENT YM6805
         STCM  RUCB,3,DXXCTL+K2         SAVE INDEX UNIT USED    Z30AAJC
         CLI   DXXCTL,K2                3 DD CARDS               YM6805
         BNE   CCM02710                 NO, BRANCH               YM6805
         MVI   DXXCTL,K1                SET DD COUNT TO ONE      YM6805
         BAL   RET,CCM05500             GET NEXT TCT DD ENTRY    YM6805
*                                                                YM6805
CCM02710 EQU   *                        GET NBR OF PRIME EXTENTS YM6805
         IC    R8,DEBNPEE               GET NO. OF PRIME EXTENTS M1771
         LTR   R8,R8                    TEST FOR ZERO EXTENTS    M1771
         BZ    CCM02720                 BRANCH IF ZERO           M1771
         CLI   DEBNOEE,K0               OVERFLOW EXIST           YM6805
         BE    CCM02715                 NO, BRANCH               YM6805
         L     R1,DEBFOEAD              PT TO 1ST OVFLOW EXTENT  YM6805
         MVC   DXXCTL+6(K2),K2(R1)      SAVE OVERFLOW UNIT       YM6805
CCM02715 EQU   *                        BUILD PRIME UCB SEGMENTS YM6805
         L     R1,DEBFPEAD              ADDR OF 1ST PRIME EXTENT M1771
         BAL   RET,CCM02800             GO BUILD UCB SEGMENT(S)  YM6805
         CLI   DXXCTL,K0                ANOTHER DD CARD          YM6805
         BE    CCM02720                 NO, BRANCH               YM6805
         MVI   DXXCTL,K0                SET DD COUNT TO ZERO     YM6805
         BAL   RET,CCM05500             GET NEXT TCT DD ENTRY    YM6805
*                                                                YM6805
CCM02720 EQU   *                        GET NBR OF OVFLOW EXTNTS YM6805
         IC    R8,DEBNOEE               NO. OF OVERFLOW EXTENTS  M1771
         LTR   R8,R8                    TEST FOR ZERO EXTENTS    M1771
         BZ    CCM03650                 BRANCH IF ZERO           M1771
         MVC   DXXCTL+2(K2),DXXCTL+4    MOVE OVERFLOW UNIT USED  YM6805
         L     R1,DEBFOEAD              1ST OVERFLOW EXTENT ADDR M1771
         LA    RET,CCM03650             RETURN TO ISAM SECTION   YM6805
         B     CCM02800                 GO BUILD THE UCB SEGMENT M1771
*
*   THIS SECTION PREPARES TO BUILD A UCB SEGMENT FOR EACH
*   DATA SET IN CONCATENATED BPAM INPUT.
*
CCM02740 EQU   *                        NOT ISAM                 M1771
         TM    SMFDCBOR,DCBORGPO        TEST FOR BPAM DATA SET  SA55575
         BZ    CCM02770                 BRANCH IF NOT BPAM       M1771
         TM    DEBOPATB,DEBOPOUT        TEST FOR INPUT           M1771
         BNZ   CCM02770                 BRANCH IF NOT INPUT      M1771
         SR    RD,RD                    CLEAR REGISTER FOR IC    YM6805
         IC    RD,DEBAMLNG              LENGTH OF BPAM SECTION   M1771
         LTR   RD,RD                    IS IT CONCATENATED INPUT M1771
         BZ    CCM02770                 BRANCH IF NOT            M1771
         XR    RC,RC                    ZERO REGISTER            M1771
         IC    RC,DEBNMEXT              GET NUMBER OF EXTENTS    M1771
         MH    RC,XTNTSIZE              CALCULATE EXTENT LENGTH  M1771
         AR    RC,R1                    POINT TO BPAM SECTION    M1771
         IC    R8,0(,RC)                GET NUMBER OF EXTENTS    M1771
*                                       FOR THE FIRST DATA SET   M1771
CCM02750 EQU   *                        FROM DEBEXTNM FIELD      M1771
         STM   RC,RD,DXXCTL             SAVE CURRENT POINTER AND M1771
*                                       NO. OF BYTES LEFT IN     M1771
*                                       BPAM SECTION             M1771
         BAL   RET,CCM02800             GO BUILD THE UCB SEGMENT YM6805
         BAL   RET,CCM05500             GET NEXT TCT DD ENTRY    YM6805
         LM    RC,RD,DXXCTL             RESTORE BPAM SECTION PTR M1771
*                                       AND NO. OF BYTES IN BPAM M1771
*                                       SECTION                  M1771
         SR    RET,RET                  ZERO REGISTER FOR IC     YM6805
         IC    RET,0(,RC)               EXTENT NO. OF CURRENT    YM6805X
                                        DATA SET                 YM6805
         LA    RC,K1(RC)                POINT TO NEXT EXTENT NO. M1771
         IC    R8,0(,RC)                EXTENT NO. OF NEXT D/S   M1771
         SR    R8,RET                   CALCULATE NBR OF EXTENTS YM6805X
                                        FOR THIS DATA SET        YM6805
         BCT   RD,CCM02750              GO BUILD THE UCB SEGMENT M1771
CCM02760 EQU   *                        BUILD UCB SEG            M1771
         XR    R8,R8                    ZERO REGISTER            M1771
         IC    R8,DEBNMEXT              GET NUMBER OF EXTENTS    M1771
         SR    R8,RET                   CALCULATE NO. OF EXTENTS YM6805X
                                        FOR THE LAST DATA SET    YM6805
         BAL   RET,CCM02800             GO BUILD THE UCB SEGMENT YM6805
         XC    DXXCTL,DXXCTL            CLEAR THE STORAGE AREA   M1771
         B     CCM04400                 GO COMPLETE THE RECORD   M1771
*
*   THIS SECTION PREPARES TO BUILD THE UCB SEGMENT(S) FOR
*   ALL OTHER DATA SETS.
*
CCM02770 EQU   *                        NOT CONCATENATED         M1771
         IC    R8,DEBNMEXT              GET NUMBER OF EXTENTS    M1771
         BAL   RET,CCM02800             GO BUILD THE UCB SEGMENT YM6805
         TM    SMFDCBOR,DCBORGIS        IS THIS AN ISAM DATA SET
         BNO   CCM04400                 BRANCH IF NO
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP              YA03180
         BO    CCM04400                 NO ISAM EXTENSION IF SO YA03180
*
*   THIS SECTION BUILDS THE ISAM EXTENSION SEGMENT.
*
CCM03650 EQU   *                        ZERO EXTENTS             M1771
         TM    SMFJFCB1+(JFCDSORG-INFMJFCB),JFCORGIS  TEST FOR ISAM
         BNO   CCM03700                 BRANCH IF NOT ISAM IN JFCB
         OI    SMF14RIN,SMF14JIS        SET JFCB ISAM BIT
CCM03700 MVI   SMF14SET,K28             SET EXTENSION SIZE
         OI    SMF14RIN,SMF14IS         SET DCB ISAM BIT
         USING SMFISAMX,R9              ISAM SEGMENT ADDRESSING  YM6805
         MVC   SMFDCBMA,DCBMAC          DCBMAC FIELD
         MVC   SMFDCBNL,DCBNLEV         DCBNLEV FIELD
         MVC   SMFDCBR3(K8),DCBRORG3    DCBRORG3 FIELD
         MVC   SMFDCBR2,DCBRORG2        DCBRORG2 FIELD
         MVC   SMFDCBNO,DCBNOREC        DCBNOREC FIELD
         MVC   SMFDCBR1,DCBRORG1        DCBRORG1 FIELD
         IC    R8,DEBNIEE               GET NUM OF EXTENTS IN INDEX
         LTR   R8,R8                    TEST FOR ZERO EXTENTS
         BZ    CCM03900                 BRANCH IF ZERO
         STC   R8,SMFDEBNI              STORE IN SMF RECORD
         L     R1,DEBFIEAD              ADDR OF 1ST INDEX EXTENT YM6805
         BAL   RET,CCM05010             CALCULATE NUMBER OF      YM6805X
                                        CYLINDERS IN INDEX AREA  YM6805
         STH   RD,SMFNCYLS              STORE NUM OF CYLINDERS
CCM03900 EQU   *
         IC    R8,DEBNPEE               GET NUM OF EXTENTS IN PRIME
         LTR   R8,R8                    TEST FOR ZERO EXTENTS
         BZ    CCM04100                 BRANCH IF ZERO
         STC   R8,SMFDEBNP              STORE IN SMF RECORD
         L     R1,DEBFPEAD              ADDR OF 1ST PRIME EXTENT YM6805
         BAL   RET,CCM05010             CALCULATE NUMBER OF      YM6805X
                                        CYLINDERS OF PRIME DATA  YM6805
         STH   RD,SMFNPCYL              STORE NUM OF CYLINDERS
CCM04100 EQU   *
         IC    R8,DEBNOEE               GET NUM OF EXTENTS IN OVFL
         LTR   R8,R8                    TEST FOR ZERO EXTENTS
         BZ    CCM04300                 BRANCH IF ZERO
         STC   R8,SMFDEBNO              STORE IN SMF RECORD
         L     R1,DEBFOEAD              ADDR OF 1ST OVFLW EXTENT YM6805
         BAL   RET,CCM05010             CALCULATE NUMBER OF      YM6805X
                                        CYLINDERS IN OVERFLOW    YM6805
         STH   RD,SMFNOCYL              STORE NUM OF CYLINDERS
CCM04300 EQU   *
         LA    R9,SMFNOCYL+L'SMFNOCYL-SMFISAMX(R9)  INCREMENT    YM6805X
                                        TO END OF ISAM SEGMENT   YM6805
*
*   THIS SECTION FILLS IN THE REMAINING FIELDS AND ISSUES THE
*   SMFWTM MACRO TO WRITE THE RECORD ON THE SYS1.MAN DATA SET.
*
CCM04400 SR    R9,R7                    GET RECORD LENGTH        YM6805
         STH   R9,SMF14LEN              STORE LENGTH IN RECORD   YM6805
         DROP  R9                                                YM6805
         L     R8,SMF14TME+K2           RESTORE R8
         LM    RC,RET,SMF14TME+K6       RESTORE REGS
         XC    SMF14TME+2(K16),SMF14TME+2  CLEAR TEMP REG SAVE AREA
*     CHECK FOR A TEMPORARY DATA SET BY EXAMINING THE DSN       SA60779
         CLC   JFCBDSNM(K3),SYSDS2I     SYSTEM GENERATED NAME?  SA60779
         BNE   CCM05100                 BRANCH, NOT A TEMP DS   SA60779
         CLC   JFCBDSNM+K8(K2),SYSTME2I  CHECK FOR '.T'         SA60779
         BNE   CCM05100                 BRANCH IF NOT A TEMP DS SA60779
         CLI   JFCBDSNM+K16,PERIOD      TEST FOR '.'            SA60779
         BNE   CCM05100                 BRANCH IF NOT A TEMP DS SA60779
         OI    SMF14RIN,SMF14TDS        SET TEMP INDICATOR
CCM05100 EQU   *
         MVI   SMF14RTY,K14             SET RECORD TYPE TO 14
         TM    SMFDEBOP,DEBOPOUT-DEBOPRBK  TEST FOR INPUT RDBACK DS
         BZ    CCM05200                 BRANCH IF INPUT/RDBACK
         OI    SMF14RTY,K15             SET RECORD TYPE TO 15
CCM05200 TIME  BIN                      ISSUE TIME SVC
         STM   R0,R1,SMF14TME+K2        SAVE REGS
         MVC   SMF14TME(K8),SMF14TME+K2  MOVE IN TIME
         L     R1,SMF14JBN+K10          GET PTR TO JMR
         USING JMRJOB,R1
         MVC   SMF14JBN(SMF14UID-SMF14JBN),JMRJOB  JMRJOB FIELD
         MVC   SMF14UID,JMRUSEID        JMRUSEID FIELD
         MVC   SMF14SID(K4),JMRCPUID    JMRCPUID FIELD
         MVI   SMF14SDC,SMF14UCB-SMFDCBDE  DCBDEBSZ FIELD
         MVI   SMF14SUC,SMF14UCE-SMF14UCB  UCBSEQSZ FIELD        YM3791
         OC    DXREGE,DXREGE            TEST FOR CLOSE ENTRY
         BZ    CCM05300                 BRANCH IF YES
         OI    SMF14RIN,SMF14EOV        SET EOV BIT
CCM05300 EQU   *                        POINT TO SMF RECORD
         SMFWTM (R7)                    WRITE SMF RECORD
         L     R1,WTGPREFX              GET BASE PREFIX ADDR     YM4614
         LA    RF,IECREGSV-IECPREFX(,R1) ADDR OF REG SAVE AREA   YM4614
         CLC   IECCORID-IECPREFX(K4,R1),RECCORID  RECOVERY ENTRY YM4614
         BNE   CCM05350                 BR IF NOT RECOVERY ENTRY YM4614
         L     RF,8(,RF)                RECOVERY REG SAVE AREA   YM4614
CCM05350 EQU   *                                                 YM4614
         LR    R1,R7                    SET UP FOR FREEMAIN
         IECRES FREE,A=(1),PREFIX=YES,STM=(0,14,0(RF))           YM4614*
                                        FREE SMF RECORD AREA     YM4614
         L     RF,DXATCOM3              GET RRPLIST PTR          YM4614
         USING RRPLIST,RF                                        YM4614
         L     R1,WTGPREFX              GET BASE PREFIX ADDR     YM4614
         CLC   IECCORID-IECPREFX(K4,R1),RECCORID  RECOVERY ENTRY YM4614
         BNE   CCM05400                 BR IF NOT RECOVERY ENTRY YM4614
         NI    RRFLAGS1,X'FF'-RRFSMF    RESET SMF IN CONTROL FLG YM4614
         MVC   WTGMODNM,RECMOD          MOVE RECOVERY MOD NAME   YM4614
         L     RF,RRFWORK               RECOVERY SUBRTN SAVEAREA YM4614
         L     RET,IECREGSV-IECEXTPR+K4*RET(,RF) GET RETURN ADDR YM4614
         ST    RET,WTGMODEP             SET EPA TO RETURN ADDR   YM4614
         LM    R0,RD,0(RF)              GET RECOVERY SUBRTN REGS YM4614
         IECRES LOAD,EXTPR=(RF),BRANCH=DIRECT RETURN TO IFG0RR0B YM4614
*
CCM05400 EQU   *
         LM    RTIOT,RET,DXREGSAV       RESTORE CALLER'S
         LM    R0,R1,DXREG0             REGISTERS
         LA    RET,K0(,RET)             CLEAR HIGH ORDER BYTE
         LTR   RET,RET                  ENTRY FROM CLOSE
         LA    RET,K12                  SET RETURN OFFSET        A38013
         BZ    CCM05410                 BRANCH IF YES
         L     RET,DXREGE               RESTORE RETURN OFFSET
         MVC   WTGMODNM+4(K2),EOVSVC    MOVE IN C'55' FOR EOV
CCM05405 EQU   *
*                                       CLEAR TTR TO ENABLE      XM0454
*                                       XCTLING BY NAME          XM0454
         NI    RRFLAGS1,X'FF'-RRFSMF    SHOW SMF               @ZA08712
*                                       NOT IN CONTROL         @ZA08712
         IECRES LOAD,MODID=DXRETMOD,BRCODE=(RET),BRANCH=QUEUED   Y02080
*                                    XCTL TO FINALMOD, OR EOV DA Y02080
CCM05410 EQU   *                        XCTL TO FINALMOD
         NI    RRFLAGS1,X'FF'-RRFSMF    SHOW SMF               @ZA08712
*                                       NOT IN CONTROL         @ZA08712
         IECRES LOAD,MODID=FINALMOD,BRCODE=(RET),BRANCH=QUEUED   Y02080
         EJECT                                                   YM6805
*
*   THIS ROUTINE ADVANCES TO THE NEXT DD ENTRY IN THE TCT.
*
CCM05500 EQU   *                        GET  NEXT TCT ENTRY      YM6805
         L     RD,CVTPTR                POINT TO CVT             YM6805
         L     RD,CVTTCBP               POINT TO TCB WORDS       YM6805
         L     RD,K4(RD)                POINT TO CURRENT TCB     YM6805
         USING TCB,RD                                            YM6805
         L     RD,TCBTCT                POINT TO TCT             YM6805
         USING SMFTCT,RD                                         YM6805
         L     RD,TCTIOTBL              POINT TO TCT IO TBL      YM6805
         USING TCTTIOT,RD                                        YM6805
         SR    RF,RD                    OFFSET TO CURRENT DD     YM6805
         LA    RC,TCTDCBTD              POINT TO FIRST DD ENTRY  YM6805
         USING TCTDCBTD,RC                                       YM6805
CCM05600 EQU   *                        TEST FOR CURRENT DD      YM6805
         CH    RF,TCTIOTSD              IS THIS CURRENT DD       YM6805
         BE    CCM05700                 BRANCH IF YES            YM6805
         LA    RC,TCTDCBLE              POINT TO NEXT DD ENTRY   YM6805
         B     CCM05600                 GO CHECK NEXT            YM6805
CCM05700 EQU   *                        TEST IF END OF TCT       YM6805
         XR    RF,RF                    ZERO REGISTER            YM6805
         C     RF,TCTDCBLE              IS THIS END OF TCT       YM6805
         BE    CCM05800                 YES, GO USE THIS OFFSET  YM6805
         LA    RC,TCTDCBLE              POINT TO NEXT DD ENTRY   YM6805
CCM05800 EQU   *                        GET OFFSET OF NEXT DD    YM6805
         LH    RF,TCTIOTSD              OFFSET OF NEXT DD        YM6805
         AR    RF,RD                    POINT TO NEXT DD ENTRY   YM6805
         BR    RET                      RETURN                   YM6805
         DROP  RC,RD                                             YM6805
         EJECT                                                   YM6805
*
*   THIS ROUTINE CALCULATES THE NUMBER OF CYLINDERS IN AN ISAM
*   INDEX, PRIME, OR OVERFLOW AREA.
*
CCM05010 EQU   *
         XR    RD,RD                    CLEAR REG
CCM05030 AH    RD,DEBENDCC-DEBDVMOD(,R1)  ADD ENDING CYL ADDR    YM6805
         SH    RD,DEBSTRCC-DEBDVMOD(,R1)  LESS STARTING CYL ADDR YM6805
         LA    RD,K1(,RD)               CALCULATE NO. OF CYL     M1771
         LA    R1,DEBVOLSQ-DEBDVMOD(,R1)  INCREMENT TO NEXT      YM6805X
                                        EXTENT                   YM6805
         BCT   R8,CCM05030              BRANCH IF MORE EXTENTS
         BR    RET                      RETURN TO CALLER         YM6805
         EJECT                                                   YM6805
*
*   THIS ROUTINE BUILDS THE UCB SEGMENT(S).
*
         USING DEBDVMOD,R1              BASE FOR DEB EXTENT      M1771
         USING SMF14UCB,R9              BASE FOR UCB SEGMENT     YM6805
CCM02800 IC    RD,SMF14NUC              GET NUMBER OF UCB        M1771
         LA    RD,K1(RD)                INCREMENT NO. OF UCB'S   M1771
         STC   RD,SMF14NUC              STORE NUMBER OF UCB      M1771
         L     RUCB,DEBUCBAD            GET UCB ADDR FROM EXTNT@ZA05226
         LA    RUCB,UCBOB               CLEAR HI ORDER BYTE    @ZA05226
         MVC   SMFUCBCH(K2),UCBCHA      UCBCHA FIELD             YM6805
         NI    SMFUCBCH,ALLBITS-X80-X40  MASK OFF BITS 0 AND 1   YM6805
         TM    UCBTYP+K1,X'08'          MSS VOLUME?            @ZA15962
         BZ    CCM02900                 NO, BRANCH             @ZA15962
         OI    SMFUCBCH,X'80'           SET MSS VOLUME BIT     @ZA15962
CCM02900 MVC   SMFUCBTY,UCBTYP          UCBTYP FIELD           @ZA15962
         MVC   SMFSRTEV,UCBVOLI         UCBVOLI FIELD            YM6805
         MVC   SMFSRTES,UCBSTAB         UCBSTAB FIELD            YM6805
CCM03000 EQU   *                        GET NBR OF UCB ENTRIES   YM6805
         XR    RC,RC                    CLEAR REGISTER FOR IC    YM6805
         USING TCTUCBP,RF                                        Y02144
         IC    RC,TCTSCTR               SET LOOP CONTROL - GET   YM6805X
                                        NO. OF UCB ENTRIES       YM6805
         LR    RD,RF                    WORKING PTR TO TCTUCBP'S YM6805
         TM    TCTFLGS,TCTVAMDS         TEST FOR VAM DATA SET   ZA00822
         BO    CCM03206                 BRANCH IF VAM NOT ISAM  ZA00822
*
CCM03100 CLM   RUCB,3,TCTUCBP-TCTUCBP(RD)  TEST FOR CORRECT UCB Z30AAJCX
                                        ENTRY IN TCTTIOT         YM6805
         BE    CCM03200                 BRANCH IF CORRECT UCB    YM6805
         LA    RD,TCTDCTR+L'TCTDCTR-TCTUCBP(RD)  INCR INDEX      YM6805
         BCT   RC,CCM03100              TEST FOR LAST ENTRY      YM6805
         TM    DCBMACRF,DCBMEXCP        EXCP DCB                 YM6805
         BO    CCM03300                 YES, BRANCH              YM6805
         TM    DCBDSORG,DCBORGIS        ISAM DCB                 YM6805
         BZ    CCM03300                 NO, BRANCH               YM6805
         IC    RC,DXXCTL                GET ADDITIONAL DD CNT    YM6805
         LTR   RC,RC                    ANY MORE DD CARDS        YM6805
         BZ    CCM03300                 NO, BRANCH               YM6805
         BCTR  RC,0                     DECREMENT                YM6805
         STC   RC,DXXCTL                STORE BACK               YM6805
         ST    RET,SMF14NTA             SAVE RETURN ADDRESS      YM6805
         BAL   RET,CCM05500             GET NEXT TCT DD ENTRY    YM6805
         L     RET,SMF14NTA             RESTORE RETURN ADDR      YM6805
         B     CCM03000                 GO CHECK THIS TCT DD     YM6805X
                                        ENTRY FOR UNIT           YM6805
*
CCM03200 EQU   *                        SAVE OVFLOW UNIT USED    YM6805
         TM    DCBMACRF,DCBMEXCP        EXCP DCB                 YM6805
         BO    CCM03206                 YES, BRANCH              YM6805
         TM    DCBDSORG,DCBORGIS        ISAM DCB                 YM6805
         BZ    CCM03206                 NO, BRANCH               YM6805
         CLM   RUCB,3,DXXCTL+K6         SAME AS OVFLOW UNIT     Z30AAJC
         BNE   CCM03203                 NO, BRANCH               YM6805
         STCM  RUCB,3,DXXCTL+K4         SAVE OVFLOW UNIT USED   Z30AAJC
CCM03203 EQU   *                        TEST IF ALREADY USED     YM6805
         CLM   RUCB,3,DXXCTL+K2         THIS UNIT ALREADY USED  Z30AAJC
         BE    CCM03300                 YES, BRANCH              YM6805
CCM03206 EQU   *                        MOVE IN EXCP COUNT       YM6805
         MVC   SMFEXCP,TCTDCTR-TCTUCBP(RD)  EXCP COUNT           YM6805
*
CCM03300 XR    RC,RC                    ZERO COUNT               YM6805
         XR    RD,RD                    CLEAR REGISTER           YM6805
CCM03400 AH    RC,DEBNMTRK              ADD SPACE FOR EACH       YM6805X
                                        EXTENT (NO. OF TRACKS)   YM6805
         LA    RD,K1(,RD)               INCREMENT EXTENT COUNT   YM6805
         BCT   R8,CCM03500              BRANCH IF MORE EXTENTS   YM6805
         B     CCM03600                 BRANCH IF NO MORE        YM6805
CCM03500 CLC   DEBUCBAD+K1(K3),DEBUCBAD+K17  IS NEXT EXTENT ON   YM6805X
                                        SAME UNIT AS THIS        YM6805
         LA    R1,K16(,R1)              INCREMENT TO NEXT EXTENT YM6805
         BE    CCM03400                 BRANCH IF SAME UCB       YM6805
CCM03600 ST    RC,SMF14NTA              NUMBER OF TRACKS         YM6805
         STC   RD,SMF14NEX              NUMBER OF EXTENTS        YM6805
         LA    R9,SMF14NTA+L'SMF14NTA-SMF14UCB(R9)  INCREMENT    YM6805X
                                        BASE TO UCB SEGMENT      YM6805
         LTR   R8,R8                    TEST FOR MORE EXTENTS    YM6805
         BNZ   CCM02800                 BRANCH IF MORE EXTENTS   YM6805
         LA    R1,K16(,R1)              INCREMENT TO NEXT EXTENT YM6805
         BR    RET                      RETURN TO CALLER         YM6805
         DROP  R1                       DROP BASE TO DEB EXTENT  YM6805
         DROP  RF                       DROP BASE TO TCTUCBP     YM6805
         EJECT                                                   YM6805
**********************************************************************
*                                                                    *
*              CONSTANTS                                             *
*                                                                    *
**********************************************************************
         SPACE 1
XTNTSIZE DC    H'16'                    DEB EXTENT LENGTH        M1771
EOVSVC   DC    C'55'                    SVC CODE FOR EOV
SYSDS2I  DC    C'SYS'                   SYSTEM GENERATED NAME   SA60779
SYSTME2I DC    C'.T'                    SYSTEM GENERATED TIME   SA60779
RECCORID DC    C'RR0A'                  RECOVERY CORE ID         YM4614
         SPACE 1                                                 YM6805
         XCTLTABL ID=(FINALMOD,2J,RECMOD,IFG0RR0B),              YM4614*
               SVC=020,BRT=YES,LENGTH=                           YM4614
         IECDSECS CVT,TCB,TIOT,SMF,SMFRCD,SMFTCT,JMR,DCB,DEB,UCB,WTG,  *
               MAIN,PREFX,RRPL,EXPAND=YES                        Y02144
         IECEQU
         END
