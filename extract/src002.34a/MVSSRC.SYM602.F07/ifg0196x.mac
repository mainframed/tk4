         TITLE 'IFG0196X/OPEN - LOAD EXCP APPENDAGES, WRITE BACK JFCB'
IFG0196X CSECT
***********************************************************************
*                                                                     *
*        VS2 RELEASE 999 DELETIONS/CHANGES                            *
*0000                                                          @ZA02876
*0000717100                                                    @ZA07588
*                                                                     *
* MODULE NAME = IFG0196X (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = LOAD EXCP APPENDAGES, WRITE BACK JFCB            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. WAIT FOR DSCB WRITE-BACK TO COMPLETE WHICH WAS INITIATED  *
*        IN IFG0196W IF DSCB WAS  MODIFIED.                           *
*                                                                     *
*        2. FOR MAGNETIC TAPE, IF REDUCED ERROR RECOVERY (RER) WAS    *
*        REQUESTED, INFORM CALLER VIA WTP AND INDICATE RER IN DEB.    *
*                                                                     *
*        3. IF DCB IS EXCP WITH APPENDAGES AND THE CALLER IS AUTHO-   *
*        RIZED, LOAD THE APPENDAGES AND STORE THEIR ADDRESSES IN THE  *
*        DEB APPENDAGE VECTOR TABLE FOR THE DCB.                      *
*                                                                     *
*        4. RESTORE THE OPEN PARAMETER LIST DCB "OPEN OPTION" FOR     *
*        DCB'S STILL BEING OPENED.                                    *
*                                                                     *
*        5. INITIATE CHANNEL PROGRAM TO WRITE BACK THE JFCB SO THAT   *
*        IT  WILL BE AVAILABLE FOR WRITING TRAILER LABELS DURING      *
*        EOV OR WHEN THE DATA SET IS REOPENED.                        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD LABEL BEFORE ORG STATEMENT AT END        *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                  PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY, *
*                  LINK PACK AREA RESIDENT/PAGEABLE                   *
*                                                                     *
* ENTRY POINT = IFG0196X                                              *
*                  R14 = 0 DSCB WAIT FUNCTION                         *
*                  R14 = 4 WRITE BACK JFCB FUNCTION                   *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        LA  RET,K0                                                   *
*        IECRES LOAD,MODID=ID6W6X,BRCODE=(RET),BRANCH=QUEUED          *
*                                                                     *
* INPUT = REGISTERS AND WORK AREA                                     *
*                                                                     *
* OUTPUT =                                                            *
*        EXCP APPENDAGES LOADED AND AVT FILLED IF DCB IS EXCP WITH    *
*        APPENDAGES AND CALLER IS AUTHORIZED.                         *
*                                                                     *
*        JFCB WRITTEN BACK.                                           *
*                                                                     *
* EXIT-NORMAL = IFG0198N - CONTINUE OPENING DCB                       *
*                                                                     *
* EXIT-ERROR = IFG0190P ABEND PROCESSING                              *
*                INTERNAL CODE:                                       *
*                  31 - I/O ERROR WRITING BACK F1 DSCB                *
*                  228 - INVALID APPENDAGE ID                         *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCK = NONE                                             *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS =                                                            *
*        IECRES, DMABCOND,MODESET, TESTAUTH, LOAD, XCTABL, IECDSECS   *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
*        CHANGE ACTIVITY VS2 RELEASE 041                       @Z40JSGD
*0000                                                          @Z40JSGD
*0000715100                                                    @VS42097
*                                                                     *
***********************************************************************
          EJECT
         IECDSECS CVT,TCB,TIOT,SMFTCT,RRPL, DEFINE DSECTS TO BE. YM7835*
               UCB,MAIN,WTG,PREFX,APP,ACB,IEZDEB               @Z40JSGD
PGFXFLG  EQU   X'02'                    USER PGFX APPENDAGE INDR YM2877
         IECEQU AOS=YES,IEZDEB=YES                             @Z40JSGD
*
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING WTG,RWTG                 DEFINE BASE TO WTG TABLE
         USING TIOENTRY,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING UCBOB,RUCB               DEFINE BASE TO MAIN UCB
         USING DEBBASIC,RDEB            DEFINE BASE TO DEB     @Z40JSGD
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
         B     OFN30200(RET)            BR TO INDICATED FUNCTION
*
OFN30200 B     OFN30400                 RET=0 DSCB WAIT          XM5603
         B     OFN50000                 RET=4 NULL DATA SET OR WRITE   X
                                        BACK JFCB
***********************************************************************
*                                                                     *
*        DSCB WAIT FUNCTION                                           *
*                                                                     *
*       IF I/O ERROR WRITING BACK THE DSCB, XCTL TO IFG0190P WITH     *
*       OPEN INTERNAL ABEND CODE 031 TO GIVE A 213-18 ABEND.          *
*                                                                     *
***********************************************************************
*                                                                     *
OFN30400 EQU   *                        DSCB WAIT FUNCTION       XM5603
         L     RTIOT,DXTIOTAD           GET CURRENT TIOT ENTRY   Y02080
         TM    DCBMACRF,DCBMEXCP        IS THIS AN EXCP DCB      XM5603
         BO    OFN30450                 YES, CAN'T BE SPOOLED    XM5603
         TM    DCBDSORG+K1,ACBDORGA     IS THIS A SPOOLED ACB OR XM5603
*                                       JAM ACB                  XM5603
         BO    OFN50000                 YES,GO WRITE BACK JFCB   XM5603
*
         TM    TIOELINK,TIOESYIN+TIOESYOT  SPOOLED DATA SET?     Y02120
         BM    OFN50000                 BRANCH IF YES            Y02120
*
***********************************************************************
*
*        WAIT FOR ANY DSCB WRITE BACK TO COMPLETE
*        (WRITE WAS INITIATED IN PREVIOUS MODULE IFG0196W)
*
OFN30450 EQU   *                        DSCB WAIT CONTINUED      XM5603
         TM    JFCBMASK+K4,JFCMDMOD     IS DSCB MODIFIED SW ON
         BZ    OFN40000                 NO GO TO EXCP APPEND FUNCTION
         L     RUCB,DXUCBADR            GET CURRENT UCB ADDR     YM3875
         TM    UCBJBNR,UCBVRDEV         VIO UCB?                 YM3875
         BO    OFN32400                 YES, CONTINUE            YM3875
*
         IECRES WAIT                    WAIT FOR WRITE TO COMPLETE
*
         TM    DXECB,ECBCOD7F           CHECK FOR I/O ERROR
         BNO   OFN32200                 BR IF YES
*
         LA    RF,DXCCW5                TEST IF CHANNEL PROGRAM
         L     R1,IOBCOMAD              TERMINATED AFTER NOP CCW
         LA    R1,0(R1)                 BY EXAMINING CSW STORED
         CR    R1,RF                    IN IOB
         BNE   OFN32400                 BR IF NO, THE WRITE WAS GOOD
*
OFN32200 EQU   *                        I/O ERROR WRITING DSCB
*
OABD031  EQU   31                       I/O ERROR WRITING BACK
*                                       FORMAT 1 DSCB
         DMABCOND OABD031,ID6X0P        XCTL TO PROB DET / ABEND
*
OFN32400 EQU   *                        DSCB WRITE GOOD, CONTINUE
         OI    DXATDACC,DXATUPDB        UPDATED DSCB WRITTEN     Y02144
         LM    RTIOT,RUCB,DXWORK1       RESTORE SAVED REGS 9-10
         NI    JFCBMASK+K4,X'FF'-JFCMDMOD  RESET DSCB MODIFIED SWITCH
*
***********************************************************************
*                                                                     *
*    LOAD IGG019XX EXCP APPENDAGE ROUTINES FOR EXCP DCB WHICH HAS     *
*    REQUESTED THEM, AND STORE THEIR ADDRESSES IN THE DEB APPENDAGE   *
*    VECTOR TABLE FOR THIS DCB.                                       *
*                                                                     *
*    ONE ABEND IS POSSIBLE: 913-20                                    *
*                                                                     *
***********************************************************************
*
OFN40000 EQU   *                        EXCP APPENDAGE FUNCTION
         L     RUCB,DXUCBADR            GET CURRENT UCB ADDR     Y02080
*
         TM    UCBTBYT3,UCB3DACC        IS DEVICE DIRECT ACCESS
         BO    OFN40600                 BR IF YES
*
         TM    UCBTBYT3,UCB3TAPE        IS DEVICE MAGNETIC TAPE
         BNO   OFN40600                 BR IF NO
*
*
***********************************************************************
*                                                                     *
*  PROCESSING FOR MAGNETIC TAPE ONLY.
*                                                                     *
***********************************************************************
*
         TM    JFCBLTYP,JFCNSL          TEST IF NSL
         BZ    OFN40200                 BR IF NO
         OI    DEBOFLGS,DEBOFNSL        SET NSL BIT IN DEB FOR CLOSE
OFN40200 EQU   *                        STANDARD LABELS
*
***********************************************************************
*                                                                     *
*  TEST IF MAGNETIC TAPE REDUCED ERROR RECOVERY IS DESIRED,
*  SO THAT A MESSAGE CAN BE WRITTEN TO THE PROGRAMMER,
*  AND A BIT SET ON IN THE DEB TO INDICATE IT TO IOS.
*                                                                     *
***********************************************************************
*
         TM    DCBMACRF,DCBMEXCP        IS EXCP SPECIFIED
         BNO   OFN40400                 BR IF NO
         TM    DCBMACRF,DCBMAPP         DO WE HAVE A SHORT DCB
         BNO   OFN40600                 BR IF YES, NO OPTCD
         CLI   DCBOPTCD,ALLBITS         WAS DCB EXPANDED UNDER
*                                       RELEASE 16 EXCP
         BE    OFN40600                 BR IF YES, REDUCED ERROR
*                                       RECOVERY NOT ACTUALLY REQUESTED
*
OFN40400 EQU   *                        NOT EXCP
         TM    DCBOPTCD,DCBOPTZ         IS REDUCED ERROR RECOVERY
         BZ    OFN40600                 SPECIFIED BY USER, BR IF NO
         L     RF,CVTPTR                GET ADDRESS OF CVT
         L     RC,CVTZDTAB-CVT(,RF)     GET DEVICE TABLE ADDR
         TM    0(RC),X01                IS RER FEATURE SYSGENED
         BZ    OFN40600                 BR IF NO
         OI    DEBOFLGS,DEBOFERR        SET RER BIT IN DEB
*
***********************************************************************
*                                                                     *
*        WRITE MESSAGE TO PROGRAMMER STATING THAT REDUCED ERROR
*        RECOVERY HAS BEEN REQUESTED.
*                                                                     *
***********************************************************************
*
         MVC   MSGLSTSZ(OFN5800L),OFN5800K  MOVE MSG TO WORK AREA
         MVC   MESSAGEA+K8(K3),UCBNAME  MOVE IN UNIT NAME
         L     RF,CVTTCBP-CVT(,RF)      GET ADDR TCB POINTERS
         L     RF,K4(,RF)               GET CURRENT TCB ADDR
         L     RF,TCBTIO-TCB(,RF)       GET TIOT STARTING ADDR
         MVC   MESSAGEA+K12(K8),TIOCNJOB-TIOT(RF)  ADD JOB NAME
*
         WTO   MF=(E,MSGLSTSZ)          WRITE MSG TO PROGRAMMER
*
***********************************************************************
*
*  CHECK FOR EXCP WITH APPENDAGES
*                                                                     *
***********************************************************************
*
OFN40600 EQU   *                        SHORT DCB
*
         TM    DCBMACRF,DCBMEXCP+DCBMAPP  IS DCB EXCP WITH APPENDAGES
         BNO   OFN50000                 NO, GO TO FINAL WRITE JFCB
*
***********************************************************************
*                                                                     *
*  LOAD EXCP APPENDAGES SPECIFIED IN THE EXCP DCB
*                                                                     *
***********************************************************************
*
         SR    RD,RD                    CLEAR FOR IC INSTR
         SR    RF,RF                    CLEAR FOR IC INSTR
         IC    RF,DEBNMEXT              NO OF EXTENTS
         IC    RD,DEBEXSCL              SHIFT BY SCALE FACTOR
         SLL   RF,0(RD)                 SIZE OF DEV DEPEND SECT IN RF
         IC    RD,DEBAMLNG              GET AM SECTION LENGTH
         AR    RF,RD                    ADD AM SECTION
         LA    RF,K32(RF,RDEB)          PT TO ID SECTION
*
         MVC   WTGMODNM(K6),OFN5860K    MODULE NAME STARTS WITH IGG019
         L     RC,DEBAPPAD              PT TO APPENDAGE BLOCK
         LA    RC,K0(RC)                ZERO HIGH ORDER BYTE     YM2877
*
         MVC   DXCCW1(L'DCBEOEA),DCBEOEA  SET UP EOE ENTRY       YM6415
         MVC   DXCCW1+K2(L'DCBSIOA),DCBSIOA  SWAP PCI AND SIO    YM6415X
                                        ENTRIES SO THAT ORDER OF YM6415X
                                        ENTRIES IS SAME AS DEB   YM6415
         MVC   DXCCW1+K4(L'DCBPCIA),DCBPCIA  SET UP PCI ENTRY    YM6415
         MVC   DXCCW1+K6(L'DCBCENDA+L'DCBXENDA),DCBCENDA  SET UP YM6415X
                                        CE AND ABE ENTRIES       YM6415
*
         LA    RUCB,K0                  INDEX OF FIRST APP ID    YM1133
         LR    RD,RF                    POINT TO FIRST DEBSUBID
*
OFN41200 EQU   *                        PROCESS APPENDAGE, LOOP ENTRY
         LA    RET,DXCCW1(RUCB)         GET ADDR OF CURRENT APP  YM6415
         CLI   K1(RET),BLANK            CHECK FOR BLANK ID       YM1133
         BE    OFN41400                 BR IF NO ID
*
         MVC   WTGMODID,0(RET)          ADD ID TO IGG019 MOD NME YM1133
         MVC   0(2,RD),0(RET)           SAVE ID IN DEB           YM1133
         LA    RD,2(RD)                 NEXT DEB RTNE ID ADDR
*                                                                Y02082
***********************************************************************
*                                                                     *
* MAKE SURE USER IS AUTHORIZED TO LOAD THESE APPENDAGES          Y02082
*                                                                     *
***********************************************************************
*                                                                Y02082
         TESTAUTH KEY=YES,FCTN=1 IS CALLER AUTHORIZED?           Y02082
         LTR   RF,RF                    ZERO IF YES              Y02082
         BZ    OFN41250                 LOAD APPENDAGES          Y02082
*                                                                Y02082
         LR    R0,RUCB                  SAVE APPEN ID INDEX      YM1133
         SLL   R0,K1                    CALC SUBSCRIPT ENTRY     YM1133
         L     RF,CVTPTR                POINTER TO CVT           Y02082
         L     RF,CVTAIDVT-CVT(,RF)     PTR TO APP NAME TABLE    Y02082
         LA    R1,APPENTRY-APPNMTBL(,RF) POINT TO 1ST ENTRY      Y02082
         AR    R1,R0                    SUBSCRIPTED AS PER DCB   Y02082
         LH    R0,APPCOUNT-APPTYPE(,R1) COUNT OF APPENDAGE IDS   Y02082
         LH    R1,APPOFFST-APPTYPE(,R1) OFFSET TO 1ST ID IN LIST Y02082
         LA    R1,APPNAMID-APPNMTBL(R1,RF) BEGINNING OF LIST     Y02082
         LTR   R0,R0                    CHECK FOR EMPTY LIST     Y02082
         BZ    OFN41240                 YES, ISSUE ABEND         Y02082
*                                                                Y02082
OFN41230 EQU   *                        IDS SEARCH               Y02082
         CLC   0(K2,R1),WTGMODID        COMPARE ID TO VALID LIST Y02082
         BE    OFN41250                 EQUAL, OK TO LOAD        Y02082
         LA    R1,K2(,R1)               STEP TO NEXT ID          Y02082
         BCT   R0,OFN41230              LOOP FOR NO. OF IDS      Y02082
*                                                                Y02082
OABD0228 EQU   228                      INTER CONST 913-20 ABEND Y02082
*                                                                Y02082
OFN41240 EQU   *                        ABEND 913-20             Y02082
         MVC   0(K8,RWTG),ID6X6X        RESTORE MODULE NAME      Y02082
         DMABCOND OABD0228,ID6X0P       INVALID APPENDAGE ID     Y02082
*                                                                Y02082
OFN41250 EQU   *                        LOAD APPEND ADDR IN AVT  Y02082
         IECRES LOAD,BRANCH=NO,PREFIX=WTGPREFX GET APPEND EP     YM1133
         L     R0,WTGMODEP              SAVE APPEND EP           YM1133
         XC    WTGMODEP,WTGMODEP        ZERO APPEND EP           YM1133
*
         ST    R0,0(,RC)                STORE ADDR IN APP VECTOR TBL
         L     R1,DEBAPPAD              POINT TO START OF AVT    YM2877
         LA    R1,K4(R1)                POINT TO SIO APP ENTRY   YM2877
         CR    R1,RC                    IS CURRENT ENTRY SIO     YM2877
         BNE   OFN41350                 BRANCH IF NOT SIO APP    YM2877
         TM    DCBMACRF,PGFXFLG         TEST IF THE CALLER HAS   YM2877X
                                        A PGFIX APPENDAGE        YM2877
         BZ    OFN41300                 BRANCH IF NOT            YM2877
         OI    K0(RC),DEBPGFX           SET PGFX FLAG FOR IOS    YM2877
OFN41300 EQU   *                        TEST IF AUTHORIZED       YM2877
         TESTAUTH KEY=YES,STATE=YES,FCTN=1  TEST IF CALLER IS    YM2877X
                                        AUTHORIZED FOR EXCPVR    YM2877
         LTR   RF,RF                    ZERO IF AUTHORIZED       YM2877
         BNZ   OFN41350                 BRANCH IF NOT            YM2877
         OI    K0(RC),DEBIOVR           SET EXCPVR AUTHORIZED    YM2877X
                                        FLAG IN DEB FOR IOS      YM2877
OFN41350 EQU   *                        UPDATE NUMBER OF ID'S    YM2877
         IC    R1,DEBNMSUB              UPDATE NUMBER OF
         LA    R1,K1(R1)                SUBROUTINE ID'S IN
         STC   R1,DEBNMSUB              DEB BY 1
*
OFN41400 EQU   *                        NO ID, TRY NEXT ONE
         LA    RUCB,2(RUCB)             NEXT ID PTR
         LA    RC,4(RC)                 NEXT ENTRY IN APP VECTOR TBL
*
         CH    RUCB,MAXAPPNO            CHECK IF DONE 5 APPEN    YM1133
         BL    OFN41200                 BR IF NO, LOOP ON APPENDAGES
*
         MVC   WTGMODNM,ID6X6X          RESTORE MOD NAME TO IFG0196X
*
***********************************************************************
*                                                                     *
*    WRITE BACK THE JFCB SO THAT MERGED AND UPDATED FIELDS WILL BE    *
*    AVAILABLE FOR WRITING TRAILER LABELS DURING EOV AND CLOSE,       *
*    OR WHEN THE DATA SET IS REOPENED.                                *
*                                                                     *
*    THE WRITE JFCB ROUTINES ARE IN IFG019RA.                         *
*                                                                     *
***********************************************************************
*                                                                     *
OFN50000 EQU   *                        FINAL JFCB WRITE
         TM    JFCBMASK+K6,X'10'        WAS MOD CHANGED TO NEW
         BZ    OFN50200                 BR IF NO
         NI    JFCBMASK+K6,X'FF'-X'10'  RESET SWITCH
         NI    JFCBIND2,X'FF'-JFCNEW+JFCMOD  CHANGE NEW BACK TO MOD
OFN50200 EQU   *                        MOD NOT CHANGED TO NEW
*
         TM    JFCBMASK+K4,X01          WAS VOL SEQ NO. MODIFIED A38147
         BZ    OFN50300                 BR IF NO                 A38147
         XC    JFCBVLSQ,JFCBVLSQ        RESET VOL SEQ NO. TO 0   A38147
OFN50300 EQU   *                        VOL SEQ NOT MOD          A38147
*                                       RESET ANY BPAM CONCATENATION,
*                                       ISAM/BDAM PARALLEL MOUNT,
*                                       RECOVERED ABEND, AND
*                                       VOL SEQ NO. MODIFIED BITS
         NI    JFCBMASK+K4,X'FF'-JFCMBPAM-JFCMISAM-JFCMABND-X01  A38147
         NI    JFCBMASK+K6,X'FF'-JFCMNRPS-JFCMSDIR  RESET ANY NO RPS
*                                       AND SEARCH DIRECT INDR BITS
*
***********************************************************************
*
*  RESTORE THE OPEN PARAMETER LIST DCB OPEN OPTION.
*  THE SAME FUNCTION IS PERFORMED IN IFG0198N FOR DCB'S THAT ARE NO
*  LONGER BEING OPENED.
*                                                                     *
***********************************************************************
*
         TM    JFCBMASK+K6,JFCINOP+JFCOUTOP  WAS AN OVERRIDE USED
         BNO   OFN50600                 BRANCH IF NO
*
         TM    0(RPARC),PLISTOUT        IS OPEN FOR OUTPUT (OUTIN)
         BZ    OFN50400                 BR IF NO, IT WAS INPUT
*                                       ASSUME LABEL=(,,,OUT) AND
*                                       CHANGE THE PARAMETER LIST
         NI    0(RPARC),X'FF'-PLISTOP1+PLISTOIN  ENTRY BACK TO OUTIN
         NI    JFCBMASK+K6,X'FF'-JFCINOP  RESTORE JFCB LABEL PARM
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP           SA61146
         BO    OFN50600                 BR IF EXCP              SA61146
         MVC   DCBOFFSR,DCBOFFSW        EQUATE READ WITH WRITE CCW
         L     RDCB,DXUDCBAD            ADDRESS USER DCB         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER KEY        Y02082
* REPEAT DCB FIELD CHANGES                                       Y02082
         MVC   DCBOFFSR,DCBOFFSW        EQUATE READ WITH WR CCW  Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            ADDRESS COPY OF DCB      Y02082
         B     OFN50600                 BR TO CONTINUE
*
OFN50400 OI    0(RPARC),PLISTIO         CHANGE ENTRY BACK TO INOUT
         NI    JFCBMASK+K6,X'FF'-JFCOUTOP  RESTORE JFCB LABEL PARM
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP           SA61146
         BO    OFN50600                 BR IF EXCP              SA61146
         MVC   DCBOFFSW,DCBOFFSR        EQUATE WRITE WITH READ CCW
         L     RDCB,DXUDCBAD            ADDRESS USER DCB         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER KEY        Y02082
* REPEAT DCB FIELD CHANGES                                       Y02082
         MVC   DCBOFFSW,DCBOFFSR        EQUATE WRITE WITH RD CCW Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            ADDRESS COPY OF DCB      Y02082
*
OFN50600 EQU   *                        CONTINUE WRITE JFCB FUNCTION
*
*
* RESTORE JFCBDISP IF IT WAS SAVED IN JFCBMASK BY IFG0193A     @Z40JSGD
*
         TM    JFCBMASK+K7,JFCMDSPM+JFCMDSPO WAS DISP SAVED    @Z40JSGD
         BZ    OPN50720                 NO-BYPASS RESTORE      @Z40JSGD
         NI    JFCBIND2,ALLBITS-JFCDISP CLEAR DISP BEFORE REST @Z40JSGD
         TM    JFCBMASK+K7,JFCMDSPM     WAS BIT 1 SAVED        @Z40JSGD
         BZ    OPN50710                 NO-BIT 2 MUST BE REST  @Z40JSGD
         OI    JFCBIND2,JFCMOD          YES-RESTORE BIT 1      @Z40JSGD
         TM    JFCBMASK+K7,JFCMDSPO     WAS BIT 2 SAVED        @Z40JSGD
         BZ    OPN50715                 NO-RESTORE FINISHED    @Z40JSGD
OPN50710 OI    JFCBIND2,JFCOLD          YES-RESTORE BIT 2      @Z40JSGD
OPN50715 EQU   *                        SET EXTENT FULL SW     @Z40JSGD
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP             @Z40JSGD
         BNO   OPN50716                 NO-CHECK FOR PS        @Z40JSGD
         TM    DCBMACRF,DCBMCOM         IS IT COM              @Z40JSGD
         BZ    OPN50717                 NO-PS                  @Z40JSGD
OPN50716 NC    DCBDSORG,DCBDSORG        IS IT SAM              @Z40JSGD
         BZ    OPN50717                 YES-SET SW             @Z40JSGD
         TM    DCBDSORG,DCBDSGPS        IS IT SAM              @Z40JSGD
         BNO   OPN50720                 NO-NO EXTENT FULL SW   @Z40JSGD
OPN50717 SR    RD,RD                    WORK REG               @Z40JSGD
         SR    RF,RF                    WORK REG               @Z40JSGD
         IC    RF,DEBNMEXT              NUMBER OF EXTENTS      @Z40JSGD
         IC    RD,DEBEXSCL              LENGTH OF EXTENTS      @Z40JSGD
         SLL   RF,0(RD)                 LENGTH OF DEVICE SECT  @Z40JSGD
         LA    RD,DEBBASND(RF)          START OF ACCESS METH   @Z40JSGD
         USING DEBACSMD,RD              ADDRESSABILITY         @Z40JSGD
         OI    DEBVOLBT,DEBEXFUL        SET EXTENT FULL SWITCH @Z40JSGD
*                                       TO FORCE ADDING EXTENTS@Z40JSGD
*                                       TO CURRENT VOLUME      @Z40JSGD
         DROP  RD                                              @Z40JSGD
OPN50720 EQU   *                        RESTORE COMPLETE       @Z40JSGD
***********************************************************************
*
*  WRITE BACK JFCB IF MODIFIED
*
         MVI   DXECB,ECBCOD7F           'POST' ECB SO THAT WAIT CAN
*                                       BE DONE WHETHER OR NOT THE
*                                       JFCB IS WRITTEN BACK.
         TM    JFCBTSDM,JFCNWRIT        IS JFCB WRITE BACK INHIBITED
         BO    OFN51600                 BR IF YES
*
***  NOTE, BECAUSE MANY PLACES IN OPEN AND OPEN EXECUTOR MODULES
***  DO NOT SET THE JFCB MODIFIED BIT WHEN THEY MODIFY THE JFCB,
***  THE JFCB MUST BE WRITTEN BACK NO MATTER HOW THIS BIT IS SET
***  IN ORDER TO NOT LOSE ANY MODIFICATIONS TO THE JFCB.
***  THUS, AS LONG AS THIS SITUATION EXISTS, THE FOLLOWING TWO LINES
***  MUST BE COMMENTS AND NOT ACTUAL INSTRUCTIONS.
***      TM    JFCBMASK+K4,JFCMJMOD     HAS JFCB BEEN MODIFIED
***      BZ    OFN51600                 BR IF NO
*
         NI    JFCBMASK+K4,X'FF'-JFCMJMOD  RESET JFCB MODIFIED SWITCH
*
***  SET 'JFCB OPENED' BIT ON TO INDICATE THIS FACT TO SCHEDULER Y02134
*
         OI    JFCFLGS1,X'80'           SET BIT                  Y02134
*
*        IF JFCBPWBP IS ON USER MODIFIED JFCB SO THAT DISP=NEW,  YM7835
*        CAUSING PASSWORD CHECKING TO BE BYPASSED, AND OPENED    YM7835
*        FOR INPUT TO WRITE-PASSWORD PROTECTED DATASET SO        YM7835
*        THAT PASSWORD WAS NOT REQUESTED. JFCB MUST NOT BE       YM7835
*        REWRITTEN OR A SUBSEQUENT OPEN FOR OUTPUT WILL NOT      YM7835
*        CAUSE PASSWORD TO BE REQUESTED.                         YM7835
*        TESTING JFCBPWBP CAN BE BYPASSED IF NL, NSL OR BLP    @ZA02876
*        TAPE DATA SETS ARE BEING OPENED, SINCE THEY CAN NOT   @ZA02876
*        BE PASSWORD PROTECTED.                                @ZA02876
*
         TM    JFCBLTYP,JFCSL+JFCBAL    SL OR AL TAPE?         @ZA02876
         BZ    OFN51000                 NO, BR TO REWRITE JFCB @ZA02876
         TM    JFCBMASK+K5,JFCBPWBP     DID USER MODIFY JFCB     Y02082
         BO    OFN51600                 BR IF YES, DON'T REWRITE YM7835
*                                       JFCB                     YM7835
OFN51000 EQU   *                        REWRITE JFCB
         LA    R0,DXJBF                 LOAD POINTER TO JFCB     Y02134
         LA    R1,TIOEJFCB              JFCB TTR IN TIOT         Y02134
*
         IECRES WRJFCB,(R1),(R0)        WRITE JFCB               Y02134
         SPACE
OFN51600 EQU   *                        DO NOT WRITE JFCB
         IECRES LOAD,MODID=ID6X8N,BRCODE=0,BRANCH=QUEUED         Y02080
*                                       XCTL TO IFG0198N TO WAIT Y02080
*
         DROP  RWTG,RDEB
*
***********************************************************************
*
*        CONSTANTS
*
MAXAPPNO DC    H'10'                    MAX NO OF APPENDAGES ID  YM1133
OFN5800K WTO   'IEC105I DDD,JOBNAMEX REDUCED ERROR RECOVERY REQUESTED',X
               MF=L,DESC=4,             SYSTEM STATUS                  X
               ROUTCDE=(11)             PROGRAMMER INFORMATION
OFN5800L EQU   *-OFN5800K               LENGTH OF MESSAGE
*
OFN5860K DC    C'IGG019'                PREFIX NAME OF EXCP APPENDAGES
*
         XCTLTABL ID=(ID6X6X,IFG0196X,ID6X0P,0P,                 Y02080X
               ID6X8N,8N),BRT=YES,LENGTH=                        Y02080
         EJECT
         DCBD  DSORG=(PS,IS,DA,TQ,XA)                          @VS42097
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
*
         END
