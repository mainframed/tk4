         TITLE 'IFG0195N INPUT USER LABEL PROCESSING'
         COPY  LCGASMSW
IFG0195N CSECT
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0195N (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = TAPE INPUT USER LABEL PROCESSING                 *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. CHECK THE DCB EXIT LIST FOR AN ACTIVE INPUT USER LABEL    *
*        ROUTINE ENTRY.                                               *
*                                                                     *
*        2. IF AN ACTIVE ENTRY EXISTS, OBTAIN A 152 BYTE USER LABEL   *
*        WORK AREA FOR OPEN FROM THE FETCH PROTECTED SUBPOOL 229 IN   *
*        DATA MANAGEMENT KEY AND OBTAIN A 96 BYTE USER LABEL WORK AREA*
*        FOR THE CALLER FROM THE FETCH PROTECTED SUBPOOL 229 IN THE   *
*        CALLER'S KEY.  READ THE USER LABELS FROM THE TAPE AND SYNCH  *
*        TO THE CALLER'S USER LABEL ROUTINE.  ON RETURN, TEST THE     *
*        RETRUN CODE TO SEE IF ANY MORE LABELS ARE TO BE PROCESSED,   *
*        AND CONTINUE UNTIL ALL LABELS HAVE BEEN PROCESSED.           *
*                                                                     *
*        3. POSITION TAPE TO FIRST DATA RECORD.                       *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0195N FROM IFG0195K TAPE FILE LABEL 2 PROCESSING   *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        FROM IFG0195K:                                               *
*        LA    RF,ID5K5N                                              *
*        IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED            *
*                                                                     *
* INPUT = STANDARD                                                    *
*                                                                     *
* OUTPUT = TAPE POSITIONED TO FIRST DATA RECORD                       *
*                                                                     *
* EXIT-NORMAL = IFG0196J                                              *
*               IFG0195T - SECURITY PROCESSING                        *
*                                                                     *
* EXIT-ERROR = IFG0190P - PROBLEM DETERMINATION                       *
*              EXIT WITH INTERNAL CODE 9 - 613 ABEND - I/O ERROR      *
*              POSITIONING TAPE.                                      *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG019RA                                              *
*                                                                     *
*    DATA AREAS = STANDARD                                            *
*                                                                     *
*    CONTROL BLOCK = CVT, DCB, JFCB, UCB                              *
*                                                                     *
* TABLES = STANDARD                                                   *
*                                                                     *
* MACROS = IECEQU, MODESET, IECRES, XLATE, SETLOCK, EXCP, DMABCOND,   *
*          XCTLTABL, IECDSECS                                         *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
*0000656000                                                     SA62427
***********************************************************************
         EJECT
         IECEQU
*
*                   ADDRESSABILITY
         SPACE 1
         BALR  RBASE,0                  ESTABLISH ADDRESSABLIITY
         USING *,RBASE
*
         USING SRT,RUCB                 ADDRESS OF SRT
         USING FORCORE,RCORE            ADDRESS OF WORK AREA
         USING WTG,RWTG                 ADDRESS OF WTG TABLE     Y02080
         USING IHADCB,RDCB
*
*                   SEE IF USER LABELS ARE TO BE PROCESSED
         SPACE 1
OTA34900 EQU   *                        CHECK IF USER LABELS
         TM    DCBMACRF,DCBMEXCP        IS THIS AN EXCP DCB
         BC    12,OTA35000              NO, CK FOR UL EXITS
         TM    DCBMACRF,DCBMFOUN        EXCP, DOES FBE EXIST
         BZ    OTA36700                 NO FBE, DON'T CK USR LBLS
OTA35000 EQU   *                        UL EXIT CHECK
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         L     RB,DCBEXLST              PICK UP EXIT LIST ADDRESS
         LA    RB,K0(R0,RB)             ZERO HIGH ORDER BYTE
         LTR   RB,RB                    IS ADDRESS ZERO
         BZ    OTA36700                 YES, DON'T PROCESS USR LBLS
         TM    JFCBIND2,X'40'           IS DISP MOD
         BO    OTA35200                 NO, SKIP MOD PROCESSING
         TM    K0(RPARC),DEBOPOIN       IS IT OUTPUT OR OUTIN
         BC    12,OTA35200              NO, SKIP MOD PROCESSING
OTA35100 EQU   *                        CHECK ENTRY
         CLI   K0(RB),XLIUTL            IS THIS ACTIVE INPUT UTL EXIT
         BE    OTA35300                 YES, GO PROCESS USR LBLS
         CLI   K0(RB),XLIUTL+LASTNTRY   IS THIS ALSO LAST ENTRY
         BE    OTA35300                 YES, GO PROCESS USR LBLS
         TM    K0(RB),LASTNTRY          IS THIS LAST ENTRY IN LIST
         LA    RB,K4(R0,RB)             INCREMENT TO NEXT ENTRY
         BC    12,OTA35100              NOT LAST ENTRY, CK NEXT
         L     RB,DCBEXLST              PICK UP EXIT LIST ADDR   XM4403
OTA35150 EQU   *                        DEFER INPUT AND LAST CHK XM4403
         CLI   K0(RB),XLDEFSL           DEFER INPUT UTL EXIT     XM4403
         BE    OTA35300                 YES, PROCESS USER LABEL  XM4403
         CLI   K0(RB),XLDEFSL+LASTNTRY  CHECK IF ALSO LAST       XM4403
         BE    OTA35300                 YES, PROCESS USER LABEL  XM4403
         TM    K0(RB),LASTNTRY          IS THIS THE LAST ENTRY   XM4403
         LA    RB,K4(RB)                INCREMENT POINTER        XM4403
         BNO   OTA35150                 NOT LAST, TRY NEXT       XM4403
         B     OTA36700                 NO ACTIVE EXIT, CONT PROC
OTA35200 EQU   *                        ACTIVE INPUT UHL EXIT CHK
         CLI   K0(RB),XLIUHL            IS THIS ACTIVE INPUT UHL EXIT
         BE    OTA35300                 YES, BR TO PROCESS USR LBLS
         CLI   K0(RB),XLIUHL+LASTNTRY   IS THIS ALSO LAST ENTRY
         BE    OTA35300                 YES, GO PROCESS USR LBLS
         TM    0(RB),LASTNTRY           IS THIS LAST ENTRY IN LIST
         LA    RB,K4(R0,RB)             INCREMENT TO NEXT ENTRY
         BC    12,OTA35200              NOT LAST, CHECK NEXT
         B     OTA36700                 NO ACTIVE ENTRY, CONT PROC
*
OTA35300 EQU   *                        USER LABELS
         L     RC,K0(R0,RB)             LOAD EXIT LIST DATA IN R12
         LA    RB,K0(R0,RC)             ZERO HI ORDER BYTE IN R11
         LTR   RB,RB                    IS EXIT ADDRESS ZERO
         BZ    OTA36700                 YES, DO NOT PROCESS USR LBLS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
         SPACE 2
*                                                                Y02082
*    OBTAIN CORE FOR USER LABEL WORK AREAS                       Y02082
*                                                                Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES,SP=K229,               Y02082*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
         USING ULDMWK,R1                                         Y02082
         STM   RPAR,RC,ULREGSAV         SAVE REGS                Y02082
         DROP  R1                                                Y02082
         USING ULDMWK,RC                                         Y02082
         LR    RC,R1                    POINT TO WORK AREA       Y02082
*    GET USER'S USER LABEL WORK AREA                             Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,SP=K229,KEY=USER,        Y02082*
               STM=(2,14,WTGPREFX)                               Y02082
         USING ULUWK,R9                                          Y02082
         LR    R9,R1                                             Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    R1,CHAR0                 INITIALIZE COUNT
         STH   R1,ULCNT                 AND SAVE FOR LATER USE
         NI    ULREQ,X'FF'-LASTNTRY     ZERO HI-ORDER BIT OF UL ENTRY
*  INPUT LABEL PROCESSING
*
*
         LA    R1,ULDMBUFR              POINT CCW TO LABEL BUFFER
         ST    R1,DXCCW1
         MVI   DXCCW1,CCWRDTAP          READ OP-CODE TO CCW
         MVC   DXCCW1+K4(K4),LENGTH     80-CHAR LENGTH
OTA35500 EQU   *                        READ LABEL
         BAL   RB,OTA37700              GO TO ISSUE EXCP
*
         BO    OTA35700                 BR IF NO ERROR ON READ
         TM    IOBSTAT0,CSWUNITX        UNIT EXCEPTION CAUSE ERROR
         BO    OTA36100                 YES, BRANCH
*
*  ERROR ENCOUNTERED DURING READ
*
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULPARM+K8             IN PARAMETER LIST
         OI    ULPARM+K8,LASTNTRY       FLAG ERROR
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LH    R1,ULCNT                 UPDATE LABEL NUMBER
         LA    R1,K1(K0,R1)             BY 1
         STH   R1,ULCNT                 SAVE UPDATED LABEL NUMBER
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         STC   R1,ULBUFR+K3             PASS NUMBER UNABLE TO READ
         LA    RB,OTA36000              TO THE USER - GO TO USER
         B     OTA37300                 RETURN TO TEST RETURN CODE.
*
OTA35700 EQU   *                        NO ERROR ON READ
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABEL SPEC.
         BNO   OTA35800                 NO, BYPASS TRANSLATE
*    TRANSLATE LABEL BEFORE PROCESSING
         XLATE ULDMBUFR,K80                                      Y02082
OTA35800 EQU   *                        CHECK LABEL TYPE
         CLC   ULDMBUFR(K3),UHL1        BR IF USER HDR LABEL     Y02082
         BE    OTA35900                 WAS READ
         CLC   ULDMBUFR(K3),UTL1        BR IF USER TRLR LABEL    Y02082
         BE    OTA35900                 WAS READ
         TM    JFCBLTYP,JFCBAL+JFCBUL   ANSI USER LABEL SPEC.     M0986
         BNO   OTA35850                 NO, SKIP TEST FOR ASCII   M0986
*                                       OPTIONAL ADDITIONAL HDR,  M0986
*                                       EOF, AND EOV LABELS       M0986
         CLC   ULDMBUFR(K3),HDR         AL ADDITIONAL HDR LABEL  Y02082
         BE    OTA35500                 YES, GO READ ANOTHER LBL  M0986
         CLC   ULDMBUFR(K3),EOF         AL ADDITIONAL EOF LABEL  Y02082
         BE    OTA35500                 YES, GO READ ANOTHER LBL  M0986
         CLC   ULDMBUFR(K3),EOV         AL ADDITIONAL EOV LABEL  Y02082
         BE    OTA35500                 YES, GO READ ANOTHER LBL  M0986
OTA35850 EQU   *                        BACKSPACE RECORD          M0986
         MVI   DXCCW1,CCWBSR            BACKSPACE RECORD OP-CODE
         B     OTA36300                 UNCONDITIONAL BRANCH
*
*
*
OTA35900 EQU   *                        WAS READ
         MVC   ULCNT+K1,ULDMBUFR+K3     SAVE LABEL NUMBER        Y02082
         MODESET EXTKEY=ZERO            SUPERVISOR KEY           Y02082
         L     RF,WTGPREFX                                       Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    OBTAIN LOCAL LOCK                                           Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL BUFFER                   Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            SUPERVISOR KEY           Y02082
         MVC   ULBUFR,ULDMBUFR          COPY LABEL TO USER       Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         BAL   RB,OTA37200              GO TO SYNCH TO USER
OTA36000 EQU   *                        RETURN FROM USER
         CLI   ULRETCOD,READNEXT        TEST,BR IF USER DID NOT RETURN
         BNE   OTA36400                 A CODE TO READ THE NEXT LABEL
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI LABELS SPEC.
         BO    OTA35500                 YES, GO READ ANOTHER
         CLI   ULCNT+K1,MAXNOLAB        TEST,BR IF MAX NBR OF USER
         BC    10,OTA36400              LABELS HAS BEEN READ
         B     OTA35500                 BR TO READ NEXT RECORD
*
*
*  TAPE MARK READ.  IF USER HAS PROCESSED ANY PREVIOUS LABELS,
*  REPOSITION TAPE, FREEMAIN AND RETURN TO CALLER.
*  IF USER HAS NOT PROCESSED ANY PREVIOUS LABELS, SYNCH TO USER
*  WITH LABEL BUFFER POINTER SET TO ZERO, THEN REPOSITION TAPE,
*  FREEMAIN AND RETURN TO CALLER.
*
OTA36100 EQU   *                        UNIT EXCEPTION CAUSED ERROR
         CLI   ULCNT+K1,CHAR0           TEST,BR IF PREVIOUS LABELS
         BH    OTA36200                 HAVE BEEN PROCESSED
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE AUL'S SPECIFIED
         BO    OTA36200                 YES, BRANCH - CONTINUE
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR PARM
         SR    R1,R1                    ZERO BUFFER PTR
         BAL   RB,OTA37400              GO TO SYNCH TO USER
*
OTA36200 EQU   *                        PROCESS LABELS
         MVI   DXCCW1,CCWBSF            BACKSPACE FILE OP-CODE
OTA36300 EQU   *                        REPOSITION TAPE
         MVI   DXCCW1+K7,K1             SET COUNT TO ONE
         BAL   RB,OTA37700              GO TO ISSUE EXCP
*                          THE ABOVE IMMEDIATE OPERATION MAY RETURN
*                          A CONTROL UNIT OR DEVICE ERROR AFTER CE
*                          HAS BEEN POSTED.
         BNO   OTA37800                 GO TO ABEND ROUTINE
*
*  ESTABLISH NAME OF ROUTINE WHICH CALLED THIS ROUTINE, THEN
*  FREEMAIN AND RETURN TO CALLER.
*
*
OTA36400 EQU   *
         IECRES FREE,A=(R9),LV=USERLU,PREFIX=NO,SP=K229,         Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LR    R1,RC                    PTR TO AREA TO BE FREED  Y02082
         LM    RPAR,RC,ULREGSAV         RESTORE REGS 5 - 12      Y02082
         IECRES FREE,A=(1),PREFIX=YES,STM=(2,14,WTGPREFX)        Y02082
*
*  CHECK IF FURTHER PROCESSING REQUIRED AFTER RETURN FROM USER
*  LABEL PROCESSING.
*
         TM    DCBOFLGS,DCBOBUSY        CK IF BUSY BIT TURNED OFF
         BZ    OTA37000                 YES, SKIP TO NEXT DCB
         SPACE 1
*                   POSITION TAPE TO FIRST DATA RECORD
         SPACE 1
OTA36700 EQU   *                        POSITION TAPE
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         MVC   DXCCW1,ABSFCCWG          SET UP CCW TO BACKSPACE FILE
         TM    0(RPARC),DEBOPIO         DCB BEING OPENED FOR READBACK
         BM    OTA36900                 YES,GO BYPASS TM PRECEDING
         TM    K0(RPARC),DEBOPOIN       OUTPUT OR OUTIN
         BO    OTA36900                 YES, BRANCH
*
         MVI   DXCCW1,CCWFSF            BYPASS TM FOLLOWING HDRS
         SPACE 1
         SPACE 1
OTA36900 EQU   *                        OUTPUT OR OUTIN
         BAL   RB,OTA37700              GO PERFORM NON-DATA OPERATION
         BNO   OTA37800                 IF I/O ERROR,GO NOTIFY THE
         MVI   DXCCW1,CCWNOP            ISSUE NOP
         BAL   RB,OTA37700              WAIT FOR FSF OR BSF
         BNO   OTA37800                 I/O ERROR, NOTIFY OPERATOR
         SPACE 1
OTA37000 EQU   *                        NEXT DCB
         SPACE 1
*                   EXIT
         SPACE 1
         LA    RET,K0                   ENTRY VALUE
         LA    RF,ID5N6J                MERGE MODULE IDTTR
         TM    JFCBMASK+K4,DS1WRSEC     CK FOR SECURITY LOAD
         BNO   OTA37100                 BR IF NO
         LA    RF,ID5N5T                SECURITY PROCESSING IDTTR
         LA    RET,K0                   ENTRY OFFSET             Y02134
         MVC   DXRETMOD,ID5N6J          SET UP RETURN LOAD       Y02134
         MVI   DXRETCOD,K0              SET UP RETURN OFFSET     Y02134
OTA37100 EQU   *                        GO TO NEXT MODULE
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*
*
OTA37200 EQU   *                        SYNCH TO USER
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR IND
OTA37300 EQU   *                        TEST RETURN CODE
         LA    R1,ULBUFR                POINT TO LABEL BUFFER
OTA37400 EQU   *                        SYNCH TO USER
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN USER PARM LIST    Y02082
         XC    ULTOTPTR(K4),ULTOTPTR    ZERO TOTALING ENTRY
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
*
*  TAKE USER EXIT WITH IECRES-UEXIT MACRO                        Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT TO ZERO     Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST  Y02082
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,WTGPREFX)           Y02082
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE      Y02082
         OC    DCBOFLGS,DCBOFLGS        TOUCH USER'S CORE        YM3005
         LA    R0,ALLBITS-DCBOBUSY      SET MASK FOR BUSY BIT    YM3005
         IC    R1,DCBOFLGS              GET USER'S DCBOFLGS      Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         OR    R0,R1                    COMBINE COPIED DCBOFLGS  YM3005
         L     RDCB,DXPDCBAD            WITH USER'S DCBOFLGS     YM3005
         IC    R1,DCBOFLGS              MAKING COPIED BUSY BIT   YM3005
         NR    R1,R0                    SAME AS USER'S BUSY BIT  YM3005
         STC   R1,DCBOFLGS              UPDATE DCBOFLGS IN COPY  Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT TO ONE
         ST    RF,ULWK1                 SAVE RETURN CODE
         BR    RB                       RETURN
         SPACE 1
*                   CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
         SPACE 1
*                        IT IS ASSUMED UPON ENTRY THAT ALL CONTROL
*                             BLOCKS HAVE ALREADY BEEN SET UP
         SPACE 1
*                             BAL  RA,HRCK80
*                             RETURN
         SPACE 1
OTA37700 EQU   *                        I/O SUBROUTINE
         EXCP  DXIOB                    ISSUE I/O OPERATION
         IECRES WAIT
         TM    DXECB,ECBNOERR           IS THERE AN UNUSUAL CONDITION
         BCR   15,RB                    RETURN TO CALLER
* ***
* ***          NOTIFY OPERATOR THAT JOB IS BEING TERMINATED
* ***          DUE TO UNRECOVERABLE I/O ERROR WHILE ATTEMPTING
* ***          TO DO A CONTROL OPERATION
* ***
OTA37800 EQU   *                        GO TO PROB DETERMINATION
         DMABCOND K9,ID5N0P
         SPACE 1
*                   CONSTANTS
         SPACE 1
UHL1     DC    C'UHL1'                  UHL CONSTANT
UTL1     DC    C'UTL1'                  UTL CONSTANT
HDR      DC    CL3'HDR'                 HDR CONSTANT              M0986
EOF      DC    CL3'EOF'                 EOF CONSTANT              M0986
EOV      DC    CL3'EOV'                 EOV CONSTANT              M0986
ABSFCCWG CCW   X'2F',0,X'20',1          BACKSPACE FILE
ARDCCWG  DC    X'00000050'              READ OP - NO FLAGS,80 CHAR
LENGTH   DC    X'20000050'              SILI, COUNT = 80 BYTES
         LTORG
*
XCTL5N   XCTLTABL ID=(ID5N5T,5T,ID5N6J,6J,ID5N0P,0P),BRT=YES,    Y02080X
               LENGTH=                                           Y02080
         IECDSECS CVT,TCB,TIOT,DCB,UCB,MAIN,USERLAB,USERTOT,WTG,RB,    X
               PREFX,RRPL,PSA,EXPAND=YES                         Y02144
         END
