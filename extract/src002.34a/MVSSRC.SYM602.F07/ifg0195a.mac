         TITLE 'IFG0195A                      OPEN - DIRECT ACCESS - DSC
               B TO JFCB MERGE'                                  Y02134
IFG0195A CSECT
***********************************************************************
*                                                                     *
*          VS2 RELEASE 037 CHANGES/DELETIONS                          *
*C304000,A304000-378100                                        @ZA21108
*C38210                                                        @ZA18524
*0000304000                                                    @ZA14709
*A30400-50500,A379200-279900                                   @ZA28423
*A57000-57090                                                  @ZA26775
*                                                                     *
*          VS2 RELEASE 030 CHANGES/DELETIONS                          *
*                                                                     *
*0000                                                          @ZA10248
*                                                                     *
* MODULE NAME = IFG0195A (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN - DIRECT ACCESS - DSCB TO JFCB MERGE        *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*                                                                     *
*        1. MOVES DSCB FIELDS TO ZERO FIELDS IN JFCB.                 *
*                                                                     *
*        2. SEE SPECIAL NOTE FOR BDAM OPTCD PROCESSING                *
*                                                                     *
*        3. SETS UP TTR OF LAST RECORD FOR DISP=MOD                   *
*                                                                     *
* NOTES = THIS ROUTINE GETS CONTROL FRON IFG0193A VIA IFG0194A.       *
*                                                                     *
*    DEPENDENCIES =                                                   *
*                                                                     *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*            THIS ROUTINE ADHERES TO OPEN/CLOSE/EOV PROGRAMMING       *
*            CONVENTIONS AND REGISTER USAGE.                          *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = SEE IECEQU MACRO.                         *
*                                                                     *
*    PATCH LABEL = SEE XCTLTABL MACRO.                                *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
*    ENTRY POINT = IFG0195A FROM IFG0193A VIA IFG0194A.               *
*                                                                     *
*    PURPOSE = OPEN DSCB TO JFCB MERGE.                               *
*                                                                     *
*    LINKAGE = AS FOLLOWS -                                           *
*                                                                     *
*        IECRES LOAD,MODID=MOD5A,BRCODE=0,BRANCH=QUEUED               *
*                                                                     *
* INPUT = AS FOLLOWS -                                                *
*                                                                     *
*        RDCB (REG 2) = CONTENTS OF CURRENT PARMLIST ENTRY            *
*                       CONTAINING DCB POINTER                        *
*        RCORE (REG 4) = OPEN/EOV WORK AREA POINTER                   *
*                        CORECH POINTS TO F1,F2,F3 DSCB CHAIN         *
*        REG 5 = POINTER TO RESIDENT ROUTINE                          *
*        RWTG (REG 6) = POINTER TO OPEN/EOV WTG TABLE                 *
*        RPARC (REG 7) = POINTER TO CURRENT ENTRY IN PARMLIST         *
*        RWTGC (REG 8) = POINTER TO CURRENT WTG ENTRY                 *
*        RTIOT (REG 9) = POINTER TO CURRENT TIOT ENTRY                *
*        RUCB (REG 10) = POINTER TO FIRST UCB                         *
*                                                                     *
* OUTPUT = SAME AS INPUT + MERGE COMPLETE                             *
*                                                                     *
* EXIT-NORMAL = IFG0195J,IFG0196J.                                    *
*                                                                     *
* EXIT-ERROR = NONE.                                                  *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG0195J,IFG0196J.                                    *
*                                                                     *
*    DATA AREAS = MAIN WORKAREA,WTG TABLE,PREFIX                      *
*                                                                     *
*    CONTROL BLOCK = CVT,TIOT,UCB,ACB,DCB.                            *
*                                                                     *
* TABLES = SEE XCTLTABL AND WTGTABLE.                                 *
*                                                                     *
* MACROS = IECRES,XCTLTABL,IECDSECS,IECEQU.                           *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TIOT,UCB,ACB,DCB,MAIN,WTG,PREFX            Y02134
*
OUTPUT   EQU   X'0E'                    EVERYTHING BUT INPUT & RDBACK
         IECEQU ,                       DEFINE EQUATES
*
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING WTG,RWTG                 DEFINE BASE TO WTG TBL   Y02080
         USING TIOELNGH,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING UCBOB,RUCB               DEFINE BASE TO MAIN UCB
*
         BALR  RBASE,R0                 ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
         CLI   DSCFMTID,CHAR1           IS THIS FORMAT 1 DSCB (ELSE 4)
         BNE   ODA15800                 BR IF NO, SKIP FMT 1 PROCESSING
*
*        CHECK EXPIRATION DATE
*
         TM    JFCBIND2,JFCNEW          CHECK FOR NEW
         BO    ODA11600                 BR IF NEW
         TM    K0(RPARC),OUTPUT         CHECK FOR INPUT OR RDBACK
         BNZ   ODA11200                 BR IF NOT              @ZA28423
         CLC   JFCBCRDT(K6),DSCCREDT    JFCB/DSCB SAME?        @ZA28423
         BE    ODA11600                 YES, CONTINUE          @ZA28423
         B     ODA11550                 MERGE DSCB TO JFCB
*                                                               SA66665
ODA11200 CLC   JFCBCRDT,DSCCREDT        JFCB DATE = DSCB DATE   SA66665
         BE    ODA11400                 BRANCH TO CHECK EXPDT   SA66665
         NC    DSCCREDT,DSCCREDT        DSCB CREATE SPECIFIED   SA66665
         BZ    ODA11300                 BRANCH NO TO MERGE      SA66665
         MVC   JFCBCRDT,DSCCREDT        MOVE DSCB DATE TO JFCB  SA66665
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB WRITE SWITCH
         B     ODA11400                 BR TO CONTINUE          SA66665
*                                                               SA66665
ODA11300 EQU   *                        JFCB TO DSCB MERGE      SA66665
*                                                               SA66665
         NC    JFCBCRDT,JFCBCRDT        JFCB DATE SPECIFIED     SA66665
         BZ    ODA11400                 BRANCH NO, CHECK NEXT   SA66665
         MVC   DSCCREDT,JFCBCRDT        MOVE JFCB DATES TO DSCB SA66665
         OI    JFCBMASK+K4,JFCMDMOD     SET DSCB WRITE SWITCH
*                                                               SA66665
ODA11400 EQU   *                        EXPDT FIELD MERGE       SA66665
*                                                               SA66665
         CLC   JFCBXPDT,DSCEXPDT        JFCB DATE = DSCB DATE   SA66665
         BE    ODA11600                 BRANCH TO CHECK EXPDT   SA66665
         NC    JFCBXPDT,JFCBXPDT        JFCB DATE SPECIFIED     SA66665
         BZ    ODA11500                 BRANCH NO TO MERGE      SA66665
         MVC   DSCEXPDT,JFCBXPDT        MOVE JFCB DATES TO DSCB SA66665
         OI    JFCBMASK+K4,JFCMDMOD     SET DSCB WRITE SWITCH   SA66665
         B     ODA11600                 BR TO CONTINUE          SA66665
*                                                               SA66665
ODA11500 EQU   *                        DSCB TO JFCB MERGE      SA66665
*                                                               SA66665
         NC    DSCEXPDT,DSCEXPDT        DSCB CREATE SPECIFIED   SA66665
         BZ    ODA11600                 BRANCH NO, CHECK NEXT   SA66665
         MVC   JFCBXPDT,DSCEXPDT        MOVE DSCB DATE TO JFCB  SA66665
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB WRITE SWITCH   SA66665
         B     ODA11600                 CONTINUE PROCESSING    @ZA21108
*                                                              @ZA21108
ODA11550 EQU  *                         MOVE DSCB CREATION     @ZA21108
         MVC  JFCBCRDT,DSCCREDT         DATE TO JFCB           @ZA21108
         MVC  JFCBXPDT,DSCEXPDT         EXPDT TO JFCB          @ZA28423
         OI   JFCBMASK+K4,JFCMJMOD      SET JFCB WRITE SWITCH  @ZA28423
*
ODA11600 EQU   *                        SECONDARY ALLOCATION
         TM    JFCBCTRI,X'DF'           IS JFCB SEC ALLOCATION SPECIFD
*                                                              @ZA18524
         BNE   ODA11800                 BR IF YES
         OC    JFCBCTRI(K4),DSCSCALO    MOVE SCQTY, CHECK FOR ZERO
         BZ    ODA11800                 BR IF DSCB FIELD ALSO ZERO
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB WRITE SWITCH
*
***********************************************************************
*
*        DSCB TO JFCB MERGE
*
***********************************************************************
*
ODA11800 EQU   *                        MERGE RECFM
*
         TM    JFCBTSDM,JFCNDSCB        IS DSCB TO JFCB MERGE INHIBITED
         BO    ODA15400                 BR IF YES
*
         TM    JFCBIND2,JFCBRWPW        TEST PW BITS IN JFCB   @ZA10248
         BNZ   ODA12300                 BRANCH IF EITHER ON    @ZA10248
         TM    DSCDSIND,K16             TEST PROTECTION BIT 3  @ZA10248
         BZ    ODA12300                 BRANCH IF OFF          @ZA10248
         OI    JFCBIND2,JFCSECUR        MERGE BIT              @ZA10248
         TM    DSCDSIND,K4              TEST PROTECTION BIT 5  @ZA10248
         BZ    ODA12300                 BRANCH IF BIT OFF      @ZA10248
         OI    JFCBIND2,JFCBRWPW        MERGE BIT              @ZA10248
*                                                              @ZA10248
ODA12300 EQU   *                                               @ZA10248
*
         CLI   JFCRECFM,K0              CHECK FOR RECORD FORMAT FIELD
         BNE   ODA12800                 BR IF SPECIFIED           M0943
         MVC   JFCRECFM,DSCRECFM        MERGE
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SW ON
*
ODA12800 EQU   *                        MERGE KEY LENGTH
*
         CLI   JFCKEYLE,K0              CHECK FOR KEY LENGTH
         BNE   ODA13000                 BR IF SPECIFIED
         MVC   JFCKEYLE,DSCKEYL         MERGE
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SW ON
*
ODA13000 EQU   *                        MERGE DSORG
*
         OC    JFCDSORG,JFCDSORG        CHECK FOR DSORG
         BNZ   ODA13200                 BR IF SPECIFIED
         TM    DSCFILTY+K1,ACBDORGA     IS THIS A VSAM DATA SET  XM1037
         BO    ODA13200                 BRANCH IF YES            XM1037
         MVC   JFCDSORG,DSCFILTY        MERGE
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SW ON
*
ODA13200 EQU   *                        CHECK FOR DSORG FIELD IN DCB
*
         TM    DCBMACRF,DCBMEXCP        IS THIS EXCP
         BZ    ODA13400                 BR IF NO, ALWAYS DSORG FIELD
         TM    DCBMACRF,DCBMFOUN        IS FOUNDATION BLOCK EXT PRESENT
         BZ    ODA13800                 BR IF NO, HAS NO DSORG FIELD
*
ODA13400 EQU   *                        MERGE DSORG TO DCB
*
         NC    DCBDSORG,DCBDSORG        IS DSORG SPECIFIED IN DCB
         BNZ   ODA13600                 BR IF YES
         TM    DCBMACRF,DCBMEXCP        IS THIS EXCP?          @ZA26775
         BZ    ODA13500                 NO, BRANCH             @ZA26775
         TM    DSCFILTY+K1,ACBDORGA     IS THIS VSAM DS?       @ZA26775
         BO    ODA13600                 YES, NO MERGE          @ZA26775
ODA13500 MVC   DCBDSORG,JFCDSORG        **** MERGE DSORG ****
         OI    JFCBMASK+K3,X01          SET DSORG MERGE MASK BIT
*
ODA13600 EQU   *                        IF ISAM, USE DSCB BLKSIZE
*
         TM    DCBDSORG,DCBORGIS        IS IT ISAM
         BZ    ODA13800                 NO, CONTINUE
         OC    DSCBLKL,DSCBLKL          IS BLKSIZE IN DSCB
         BE    ODA14200                 NO, SKIP MERGE
         TM    DCBMACRF+K1,DCBMPMOV+DCBMLOC  IS THIS LOAD MODE
         BZ    ODA14000                 BRANCH NOT LOAD MODE
*
ODA13800 EQU   *                        CHECK IF SPECIFIED
*
         OC    JFCBLKSI,JFCBLKSI        CHECK FOR BLKSIZE
         BNZ   ODA14200                 BR IF SPECIFIED
*
ODA14000 EQU   *                        MERGE BLOCKSIZE
*
         MVC   JFCBLKSI,DSCBLKL         MERGE
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SW ON
*
ODA14200 EQU   *                        MERGE LRECL
*
         OC    JFCLRECL,JFCLRECL        CHECK FOR LRECL
         BNZ   ODA14400                 BR IF SPECIFIED
         MVC   JFCLRECL,DSCLRECL        MERGE
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SW ON
*
ODA14400 EQU   *                        MERGE KEY POSITION
*
         OC    JFCRKP,JFCRKP            CHECK KEY POSITION FOR ISAM
         BNZ   ODA14600                 BR IF SPECIFIED
         MVC   JFCRKP,DSCRKP            MERGE
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MOD SWITCH ON
*
ODA14600 EQU   *                        CHECK FOR BDAM OPTCD
*
* MERGE OPTCD ONLY IF DSORG IN DSCB AND DCB ARE BOTH DA OR BOTH   M0943
* NOT DA.  IF ONE IS DA AND THE OTHER IS NOT, THE DATA SET IS     M0943
* BEING ACCESSED DIFFERENTLY THAN AT CREATION, AND OPTCD BIT      M0943
* MEANINGS MAY CONFLICT.  PARTICULARLY, BDAM OPTCD A AND SAM      M0943
* ASCII OPTCD Q ARE THE SAME BIT.                                 M0943
         TM    DCBMACRF,DCBMEXCP        EXCP                      M0943
         BZ    ODA14830                 NO, BR, DSORG PRESENT     M0943
         TM    DCBMACRF,DCBMFOUN        FOUNDATION BLOCK EXT      M0943
         BZ    ODA14950                 NO, GO SKIP MERGE, DSORG  M0943
*                                       NOT PRESENT               M0943
ODA14830 EQU   *                        DSORG PRESENT IN DCB
*                                                                 M0943
         TM    DSCFILTY,DCBORGDA        DSCB DSORG DA             M0943
         BNO   ODA14860                 NO, GO TEST DCB           M0943
         TM    DCBDSORG,DCBORGDA        DCB DSORG DA              M0943
         BNO   ODA14950                 NO, GO SKIP MERGE         M0943
         B     ODA14900                 BOTH DA, GO MERGE         M0943
*                                                                 M0943
ODA14860 EQU   *                        CHECK IF BOTH NOT BDAM
*                                                                 M0943
         TM    DCBDSORG,DCBORGDA        DCB DSORG DA              M0943
         BO    ODA14950                 YES, GO SKIP MERGE        M0943
*                                       NO, BOTH NOT DA, MERGE    M0943
*                                                                 M0943
ODA14900 EQU   *                        MERGE OPTCD
*                                                                 M0943
         CLI   JFCOPTCD,K0              OPTCD SPECIFIED IN JFCB   M0943
         BNE   ODA14950                 YES, GO SKIP MERGE        M0943
         MVC   JFCOPTCD,DSCOPTCD        MERGE OPTCD TO JFCB       M0943
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MODIFICATION SW  M0943
*                                                                 M0943
ODA14950 EQU   *                        DISP=MOD POSITIONING
*                                                                 M0943
***********************************************************************
*
*  SAVE REPOSITIONING INFO FOR DISP=MOD DATA SETS IN CASE THERE
*  IS AN IMMEDIATE STEP RESTART.  THE INFO DENOTING THE END
*  OF THE DATA SET ('TTRLL') IS ONLY SAVED WHEN THE DATA SET
*  IS FIRST OPENED.  THEN IF RESTART OCCURS, THE SAVED INFO
*  IS PLACED BACK IN THE DSCB.  THUS, IF DATA WAS WRITTEN
*  DURING ORIGINAL EXECUTION, IT WILL BE OVERWRITTEN AFTER
*  THE STEP IS RESTARTED.
*
***********************************************************************
*
         TM    JFCBIND2,JFCOLD          IS DATA SET MOD (NOT NEW,OLD)
         BO    ODA15400                 BR IF NO
*
*        IF JFCB FIELDS ARE ZERO, INSERT TTR AND LL FROM DSCB
         OC    JFCBOTTR,JFCBOTTR        IS 'JFCB-TTR' FIELD ZERO
         BNZ   ODA15000                 BR IF NO                 A43756
         OC    JFCTRKBL,JFCTRKBL        IS 'JFCB-TRK BAL' FIELD ZERO
         BNZ   ODA15000                 BR IF NO                 A43756
         MVC   JFCBOTTR,DSCLSTAR        MOVE TTR FROM DSCB TO JFCB
         MVC   JFCTRKBL,DSCLSTAR+K3     TRK BAL FROM DSCB TO JFCB
         B     ODA15200                 BR TO SET JFCB MOD SW ON
*
ODA15000 EQU   *                        CHECK FOR RESTART
*
         TM    JFCBTSDM,JFCTTR          IS IT IMMED STEP RESTART A43756
         BZ    ODA15400                 BR IF NO                 A43756
*
         MVC   DSCLSTAR(K3),JFCBOTTR    MOVE TTR FROM JFCB TO DSCB
         MVC   DSCLSTAR+K3(K2),JFCTRKBL  TRK BAL FROM JFCB TO DSCB
         OI    JFCBMASK+K4,JFCMDMOD     SET DSCB MODIFIED SW ON
*
ODA15200 EQU   *                        FINISH RESTART PROCESSING
*
         NI    JFCBTSDM,X'FF'-JFCTTR    RESET ANY RESTART INDR   A43756
         OI    JFCBMASK+K4,JFCMJMOD     SET JFCB MODIFIED SW ON
*
***********************************************************************
*
ODA15400 EQU   *                        MERGE DIRECTORY INFO
*
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP
         BO    ODA15600                 BR IF YES
         TM    DSCFILTY,DCBORGPO        IS DSCB DSORG=PO
         BNO   ODA15600                 BR IF NO
         TM    0(RPARC),X02             IS OPEN FOR OUTPUT,OUTIN,INOUT
         BZ    ODA15600                 BR IF NO
         MVC   DCBDIRCT+K1(K1),DSCBLDBL  MOVE IN DIRECTORY FIELD
*
ODA15600 EQU   *                        GO TO IFG0195J
*
         IECRES LOAD,MODID=ODA1940X,BRCODE=0,BRANCH=QUEUED       Y02080
*
ODA15800 EQU   *                        GO TO IFG0196J
*
         IECRES LOAD,MODID=ODA1950X,BRCODE=0,BRANCH=QUEUED       Y02080
*                                    XCTL TO COMMON MERGE MODULE Y02080
*
***********************************************************************
*
*        CONSTANTS
*
*
         XCTLTABL ID=(ODA1940X,5J,ODA1950X,6J),BRT=YES,LENGTH=   Y02134
*
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
         END
