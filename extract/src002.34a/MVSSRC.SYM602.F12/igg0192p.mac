         TITLE 'IGG0192P - OPEN,BISAM, READ HIGH LEVEL INDEX INTO CORE'
IGG0192P CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192P                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, BISAM MODE WHERE HIGH-LEVEL INDEX IS  *
*                    SEARCHED IN STORAGE.                             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = VALIDATE DCBMSHI FIELD.  INITIALIZE AND EXECUTE CP87 TO  *
*            READ HIGH-LEVEL INDEX INTO CORE.                         *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 816 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0192P                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0192H FOR  *
*              FIXED LENGTH RECORDS, IGG0192W FOR VLR. RECEIVES       *
*              CONTROL IN STORAGE PROTECT KEY 5, AND PRIVILEGED STATE.*
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM OPEN EXECUTOR IGG0192I IN STORAGE        *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = ABEND CODES:                                           *
*              033 - DCBMSHI INVALID, OR ERROR OCCURRED WHILE READING *
*                    INDEX.                                           *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = RESIDENT VALIDITY-CHECK ROUTINE                       *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 PSA - PREFIXED SAVE AREA                            *
*                                                                     *
*    CONTROL-BLOCKS = DCB, DCB COPY, DEB, AND IOB                     *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, SETLOCK, EXCP, WAIT, XCTL, AND ABEND              *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                  CHANGES SINCE VS2-3.7
*A048710                                                       @ZA30069
*C041100,A006960,A008210-008220                                @ZA30666
*                                                                     *
***********************************************************************
         EJECT
RE       EQU   00                       WORK REG
RF       EQU   01                       WORK REG
RDCB     EQU   02                       USER'S DCB
RBASE    EQU   03                       BASE REG
RG       EQU   04                       WORK REG - ADDR OF CP87
RPAR     EQU   05                  *    PARAMETER LIST ADDRESS
RWTG     EQU   06                  *    WHERE TO GO TABLE BIGINNING
RPARC    EQU   07                  *    CURRENT ENTRY,PARAMETER LIST
RWTGC    EQU   08                  *    CURRENT ENTRY, WTG TABLE
RCORE    EQU   09                       OPEN WA ADDRESSABILITY   Y02072
RWORK    EQU   10                       WORK REG                 Y02072
RA       EQU   11                       WORK REG
RB       EQU   12                       WORK REG                 M3272
RC       EQU   13                       WORK REG
RD       EQU   14                       WORK REG                 M3272
R15      EQU   15                       WORK REG
BYTE     EQU   8                        ONE BYTE SHIFT CONSTANT  A50707
ONE      EQU   1                        CONSTANT
HLINDOF  EQU   X'04'                    HI LEV INDEX GT 65535  @ZA30666
         SPACE 3
*                   *     MEANS SET BEFORE ENTRY AND BEFORE EXIT
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         L     RDCB,0(RPARC)            RDCB=ADDR OF DCB
         USING IHADCB,RDCB
         USING WTGDSECT,RWTGC           WTG ADDRESSABILITY       Y02072
         L     RCORE,OPENWA             OPEN WORK AREA ADDR      Y02072
         USING FORCORE,RCORE            WA ADDRESSABILITY        Y02072
***********************************************************************
*   TEST TO SEE IF HIGH LEVEL INDEX REQUIRES MORE THAN 65535 BYTES    *
*   OF STORAGE. IF SO, DO NOT READ IT IN. INSTEAD, GO XCTL TO THE     *
*   NEXT LOAD.                                                        *
***********************************************************************
         TM    DSCOPTCD,HLINDOF         HI LEV INDEX OVERFLOW? @ZA30666
         BO    NOREAD                   YES-DONT READ IN       @ZA30666
         SR    RG,RG                    CLEAR TCB REGISTER       Y02072
         L     RF,DCBMSHI               GET FIELD TO VALIDATE    Y02072
         LA    RF,0(RF)                 CLEAR HIGH BYTE          Y02072
*
         MODESET KEYADDR=ZERO,WORKREG=13 SET KEY TO ZERO         Y02072
*
*    OBTAIN THE LOCAL LOCK.  FREED AT FLCL1.
*
GLCL1    SETLOCK  OBTAIN,TYPE=LOCAL,MODE=UNCOND, OBTAIN THE      Y02072*
               RELATED=('VALIDATE USER ADDRESS') LOCAL LOCK      Y02072
*
         SR    RDCB,RDCB                VALIDATE ADDR ONLY       Y02072
         SR    RWORK,RWORK              ZERO IF ADDR ERROR       Y02072
         L     R15,CVTPTR               GO TO CVT                Y02072
         L     R15,CVT0VL00(R15)        GET LOCATION OF ADDRESS  Y02072
         BALR  RD,R15                   CHCKING RTN AND GO THERE Y02072
         BNZ   FLCL1                    ERROR IF R C NOT = TO 0  Y02072
         LA    RWORK,ONE(RWORK)         IND. NO ERROR IN ADDR    Y02072
*
*    RELEASE THE LOCAL LOCK. WAS OBTAINED AT GLCL1.
*
FLCL1    SETLOCK  RELEASE,TYPE=LOCAL,   FREE LOCAL LOCK          Y02072*
               RELATED=('VALIDATE USER ADDRESS')
*
         MODESET  KEYADDR=DXUKEY,WORKREG=14 CHANGE TO USER KEY   Y02072
*
         LTR   RWORK,RWORK              ADDR VALID               Y02072
         BZ    ABENDT33                 BR IF ADDR ARG ERROR     Y02072
         L     RDCB,0(RPARC)            RESTORE DCB COPY ADDRESS Y02072
         LA    RC,DCBKEYLE              ADDR OF FLD IN COPY DCB  Y02072
         L     RDCB,DXUDCBAD            USERS DCB ADDR           Y02072
         LH    RD,DXUDCBML              LENGTH OF COPIED DCB     Y02072
         BCTR  RD,0                     LENGTH-1 FOR MOVE        Y02072
         EX    RD,COPYDCB               MOVE ISAM DCB FIELDS     Y02072
*                                       FROM COPY TO USERS DCB
         L     RG,DCBWKPT1              PTR TO WORKAREA FOR IOB  Y02072
         USING IHAIOB,RG                IOB ADDRESSABILITY       Y02072
         XC    IHAIOB(40),IHAIOB
         ST    RDCB,IOBDCBAD-1           CP'S FOR IOB,OPEN WA AND
         MVI   AIOBFLG1,FLAGS           CP87                     Y01021
         LA    RA,CP87ECB
         ST    RA,IOBECBAD
         LA    RA,CP87
         ST    RA,AIOBSTRT-ONE          POINT TO CHANNEL PROGRAM Y01021
         LA    RB,CP87DAD+3             CZ1  X'31',CP87DAD+3,X'40',5
         O     RB,CZ1CON
         ST    RB,CZ1
         MVC   CZ1+4(4),CZ1CON+4
         ST    RA,CZ2                   CZ2  X'08',CZ1,X'00',0
         MVI   CZ2,X'08'                 NO. OF READS = SIZE OF
         L     RD,DCBWKPT2               AREA IN DOUBLE WORDS -
         LH    RB,DCWSIZE(RD)            DCB WA - OPEN WA - 2
         LA    RC,CZ3
         SR    RC,RD
         SRL   RC,3
         SR    RB,RC
         ST    RB,CZ2+4                 PLACE IN CZ2, WORD 2
         SR    RB,RB                    COMPUTE N = TOTAL NO. OF INDEX
         SR    RC,RC                    ENTRIES                    MC1A
         IC    RC,DCBNCRHI                                         MC1A
         SLL   RC,8                                                MC1A
         IC    RC,DCBNCRHI+1                                       MC1A
         SR    RD,RD                         NO. BYTES FOR HI-LVL INDEX
         IC    RD,DCBKEYLE               N = --------------------------
         LA    RD,10(RD)                     KEY LENGTH +10
         DR    RB,RD                     RC CONTAINS ANSWER
         L     RD,DCBDEBAD              RD ADDR OF DEB
         USING IHADEB,RD
*
*      SET UP THE ADDRESS OF THE FIRST TRACK OF HI-LEVEL INDEX TO BE
*       READ INTO MAIN STORAGE. (DOES NOT CONTAIN REAL BB)
*
         MVC   CP87DAD(7),DCBFTHI       MOVE MBBCCHH OF FIRST TRACK
         MVC   CURH,DCBFTHI+6           INITIALIZE CURRENT TRACK NO.
*
         MVI   CURR,X'01'               INITIALIZE RECORD NUMBER
         SR    RA,RA                    SET KEY-LENGTH + 10 IN EACH
         IC    RA,DCBKEYLE               COUNT FIELD FOR THE READ KD
         LA    RA,10(RA)                 CCWS.
         LA    RB,CZ3
         L     RE,CZ2+4
OPNO5D4A ST    RA,4(RB)
         LA    RB,8(RB)
         BCT   RE,OPNO5D4A
         L     RA,DCBMSHI               RA  ADDRESS OF DATA AREA
         SR    RB,RB                    RD   DEB EXTENT
         IC    RB,CP87DAD
         SLL   RB,4
         AR    RD,RB
*
*
*      FOR EACH NEW EXTENT, GET BB, SET ENDING TRACK
*
OPNO5D4L MVC   CP87DAD+1(2),DEBBINUM    MOVE BB FROM CORRECT EXTENT
         MVC   ENDH,DEBENDHH+1          RESET END TRACK NO.
OPNO5D4B MVC   CP87DAD+6(2),CURH        MOVE HR TO IOB MBBCCHHR AS THE
*                                       STARTING ADDRESS FOR THIS
*                                        EXECUTION OF THE CHANNEL PRGM.
*
*      DETERMINE HOW MANY READS ARE TO BE ISSUED AND INITIALIZE THE
*       CCWS
*
         L     RE,CZ2+4                 RE  NO. OF READ KD CCWS.
         LA    RB,CZ3                   RB  ADDR. FIRST READ KD CCW
OPNO5D4C ST    RA,0(RB)                 SET UP ADDRESS IN CCW
         MVI   0(RB),X'8E'
         BCT   RC,OPNO5D4D              IF NOT END OF INDEX
         B     OPNO5D4H
OPNO5D4D CLC   CURR(1),DCBHIRCM             OR END OF CYLINDER
         BNE   OPNO5D4E
         CLC   CURH,ENDH
         BE    OPNO5D4H
OPNO5D4E BCT   RE,OPNO5D4F                  OR END OF CP
         B     OPNO5D4H
OPNO5D4F OI    4(RB),X'40'               CC ON
         AH    RA,6(RB)                  GET NEXT DATA AREA
         LA    RB,8(RB)                  GET NEXT CCW
*
*      DETERMINE TRACK AND RECORD NUMBER OF THE NEXT ENTRY TO BE READ.
*
         CLC   CURR,DCBHIRCM                (END OF TRACK TEST)
*        READ IN ONLY ONE TRACK AT A TIME FOR AOS TO DISABLE PAGE
*        FAULTS USING LONG CHANNEL PROGRAMS.
EIGHT    EQU   8                        8
SIX      EQU   6                        6
         BNE   OPNOAOSG                 NEED TO DETERMINE END OF
         LA    RF,EIGHT                 LENGTH OF ONE CCW
         SR    RB,RF                    MOVE BACK ONE CCW
         SH    RA,SIX(RB)               LAST DATA ADDR
         B     OPNO5D4H                 DO AN EXCP
OPNOAOSG EQU   *                        *
         IC    RF,CURR                      CYLINDER AND ALSO TO
         LA    RF,1(RF)                     REINITIALIZE IOB ON NEXT
         STC   RF,CURR                      USE OF CP87
         B     OPNO5D4C
*
*      INCREMENT TRACK NO. AND SET RECORD NO. TO ONE
*
OPNO5D4G IC    RF,CURH                  INCREMENT TRACK NOW BEING READ
         LA    RF,1(0,RF)
         STC   RF,CURH
         MVI   CURR,X'01'
         B     OPNO5D4C                  BRANCH TO SET UP NEXT CCW
*
*      ALL READS WHICH CAN BE EXECUTED WITH THIS EXCP ARE NOW SET UP.
*
OPNO5D4H NI    4(RB),X'BF'              END OF INDEX, CP, OR CYLINDER.
         LR    RB,RD                                             M3272
         EXCP  IHAIOB                   EXECUTE CHAN PROG
         WAIT  ECB=CP87ECB              EXCP
         LR    RD,RB                    RESTORE REG 14           M3272
         CLI   CP87ECB,X'7F'            AWAIT COMPLETION
         BNE   ABENDT33                 IF PERM ERROR, ABNORMAL END
         LTR   RC,RC                    IF END OF INDEX
         BZ    OPNO5J4                   BRANCH OUT
         AH    RA,CZ3+6                 RA  ADDRESS NEXT DATA AREA
         CLC   CURR(1),DCBHIRCM         TEST END OF TRACK
         BE    OPNO5D4I
         IC    RF,CURR                   IF NOT, ADD 1 TO CURRENT
         LA    RF,1(RF)                  RECORD NUMBER
         STC   RF,CURR
         B     OPNO5D4B                  AND BRANCH
*
OPNO5D4I MVI   CURR,X'01'               SET RECORD NO. TO ONE
         CLC   CURH,ENDH                TEST FOR END OF CYLINDER
         BE    OPNO5D4J                  YES, GO CALC. NEXT CYLINDER
         IC    RF,CURH                   NO, ADD 1 TO TRACK NUMBER
         LA    RF,1(0,RF)
         STC   RF,CURH
         B     OPNO5D4B                  AND BRANCH
*
OPNO5D4J MVI   CURH,0                   ZERO CURRENT TRACK NO.
         CLC   CP87DAD+3(3),DEBENDCC    TEST CCH FOR END OF EXTENT
         BE    OPNO5D4K                  YES, GO GET ADDR. FROM NEXT
*                                         EXTENT
*                                        IF NOT, INCREMENT CCH TO NEXT
*                                         VALID ADDR. WITHIN EXTENT.
*
OPNADD2  EQU   *                        CYLINDER FIELD =2 BYTES  A50707
         IC    R15,CP87DAD+3            PICK UP HIGH ORDER BYTE  A50707
         SLL   R15,BYTE                 SHIFT                    A50707
         IC    R15,CP87DAD+4            PICK UP LOW ORDER BYTE   A50707
         LA    R15,ONE(R15)             NEXT CYLINDER            A50707
         STC   R15,CP87DAD+4            LOW ORDER BYTE           A50707
         SRL   R15,BYTE                 SHIFT                    A50707
         STC   R15,CP87DAD+3            HIGH ORDER BYTE          A50707
         B     OPNO5D4B                 DONE                     A50707
*
OPNO5D4K LA    RD,16(RD)                END OF EXTENT.
         IC    RF,CP87DAD               RD  ADDRESS NEXT EXTENT
         LA    RF,1(RF)                 IOB M        OLD M + 1
         STC   RF,CP87DAD
         MVC   CP87DAD+3(3),DEBSTRCC    MOVE NEW EXTENT CCH TO IOB SEEK
         B     OPNO5D4L                 BRANCH
OPNO5J4  SR    RB,RB                    FIND AND STORE ADDRESS OF LAST
         IC    RB,DCBKEYLE               ACTIVE ENTRY
         LA    RA,0(RA,RB)
OPNO5J4A CLC   DCBNLEV,8(RA)             TEST F OF MBBCCHHRFP OF INDEX
         BE    OPNO5J4B                   ENTRY FOR INDEX TYPE 0
         SH    RA,CZ3+6
         B     OPNO5J4A
OPNO5J4B SR    RA,RB
         L     RG,DCBWKPT2
         ST    RA,DCWMSHIL(0,RG)
*
NOREAD   MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY @ZA30666
*
         MVC   0(L'LOAD2I,RWTGC),LOAD2I ID OF MODULE IGG0192I    Y02072
         LR    RG,RCORE                 GET OPEN WORK AREA ADDR  Y02072
         DROP  RCORE                    END OPEN WA USING        Y02072
         USING FORCORE,RG               WA ADDRESSABILITY        Y02072
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT NAME ON THE WTG TABLE
         LA    RPARC,PLOFF(0,RPARC)         AND DCB ON THE PARAM TABLE
         CLC   0(2,RWTGC),OPNEXNAM      IF NAME ON TABLE S1ME ID AS
         BCR   8,RBASE                   CURRENT LOAD, BRANCH TO REPEAT
         CLC   0(2,RWTGC),OPIDCNST   IF NOT END OF WTG TABLE BRANCH
         BNE   RELOOP                    TO TRY NEXT NAME
         LR    RPARC,RPAR               OTHERWISE, RETURN TO START OF
         LA    RWTGC,WAOFF(0,RWTG)       BOTH TABLES AND SEARCH FOR
ZCHECK   CLI   0(RWTGC),ZCNST            FIRST NON-ZERO ID
         BNE   TCTLRTN
         LA    RWTGC,WGOFF(0,RWTGC)
         LA    RPARC,PLOFF(0,RPARC)
         B     ZCHECK
TCTLRTN  MVC   6(2,RWTG),0(RWTGC)       WHEN FOUND, SET UP P1R1M5T592
         LA    R15,DXCCW12              WA ADDRESS               Y01021
TRCTL    XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
*
COPYDCB  MVC   DCBKEYLE-IHADCB(0,RDCB),0(RC)     MOVE FIELDS     Y02072
*                                       FROM COPY DCB TO USER DCB
WGOFF    EQU   8                        SIZE OF ONE ENTRY ON WTG TABLE
PLOFF    EQU   4                        SIZE OF ONE ENTRY ON PARAM TAB
ZERO     DC    X'00'                    CHANGE TO KEY ZERO       Y02072
OPNEXNAM DC    C'2P'                    ID OF THIS OPEN EXECUTOR
OPIDCNST DC    C'0S'                    ID OF OPEN LOAD #7
ZCNST    EQU   X'00'                    ZERO - SIGNALS INACTIVE ENTRY
K4       EQU   4                        CONSTANT OF 4            Y01021
FOUR     EQU   K4                       MISC
WAOFF    EQU   32                       SIZE OF WA AT START OF WTG TAB
CZ1CON   CCW   X'31',0,X'40',5
CVTPTR   EQU   16             POINTER TO COMMUNICATION VECTOR TABLE
CVTDEVAD EQU   64             CVT - POINTER TO I/O DEVICE TABLE
DEVHH    EQU   2              DEV TAB NO. TRACKS PER CYLINDER
UCBDEVTA EQU   19             UCB - DEVICE TABLE DISPLACEMENT
CVT0VL00 EQU   24                                                 24504
DCWMSHIL EQU   32                      DCB WA LABELS
DCWSIZE  EQU   38
FLAGS    EQU   X'42'                    IOBFLAGS
*
         DS    0H
ABENDT33 EQU   *                        ABNORMAL RETURN, CODE 33
         L     RG,DXUDCBAD              USERS DCB ADDR         @ZA30069
         ABEND X'033',DUMP,,SYSTEM      PERMANENT ERROR ON READ  Y02072
*
*
LOAD2I   DC    C'2I'                    ID OF MODULE IGG0192I    Y02072
*
MODID    DC    C'IGG0192P'              MODULE NAME            @ZA30069
DATE     DC    CL8'&SYSDATE'            COMPILATION DATE       @ZA30069
FIX      DC    C'OZ30666'               LATEST FIX             @ZA30069
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         EJECT
         DCBD  DSORG=(IS)
IHADEB   DSECT
DEBNMSUB DS    0BL1           # SUBROUTINES LOADED AT OPEN
DEBTCBAD DS    A              TCB POINTER
DEBAMLNG DS    0BL1           LENGTH OF ACCESS METHOD SECTION
DEBDEBAD DS    A              POINTER TO NEXT DEB IN TASK
DEBOFLGS DS    0BL1           DATA SET STATUS FLAGS
DEBIRBAD DS    A              POINTER TO IRB FOR ERROR EXIT
DEBOPATB DS    0BL1           FILE TYPE
DEBSYSPG DS    A              SYSTEM PURGE CHAIN
DEBNMEXT DS    0BL1           NUMBER OF EXTENTS CONSTRUCTED
DEBUSRPG DS    A              USER   PURGE CHAIN
DEBPRIOR DS    0BL1           DISPATCHING PRIORITY
DEBECBAD DS    A              POINTER TO ECB
DEBPROTG DS    0BL1           TASK PROTECTION FLAG
DEBDEBID DS    0BL1           F TO IDENTIFY AS A DEB
DEBDCBAD DS    A              POINTER TO CORRESPONDING DCB
DEBEXSCL DS    0BL1           SCALE TO DETERMINE SIZE OF DEVICE SECTION
DEBAPPAD DS    A              POINTER TO APPENDAGE BLOCK
DEBNIEE  DS    0BL1           # INDEX EXTENTS
DEBFIEAD DS    A              ADDR OF 1ST INDEX EXTENT
DEBNPEE  DS    0BL1           # PRIME DATA EXTENTS
DEBFPEAD DS    A              ADDR OF 1ST PRIME DATA EXTENT
DEBNOEE  DS    0BL1           # OVERFLOW EXTENTS
DEBFOEAD DS    A              ADDR OF 1ST OVERFLOW EXTENT
DEBDISAD DS    A              POINTER TO DISABLED MODULE
*                             ***********************************
         ORG   IHADEB+32
*              ADDRESS THE FOLLOWING BY ADDING M X 16
*                                     EXTENT ENTRY
DEBDVMOD DS    0BL1           DEVICE MODIFIER
DEBUCBAD DS    A              POINTER TO UCB
DEBBINUM DS    BL2            BB OF EXTENT
DEBSTRCC DS    BL2            CYLINDER ADDR FOR START OF EXTENT
DEBSTRHH DS    BL2            HEAD NUMBER FOR START OF EXTENT
DEBENDCC DS    BL2            CYLINDER ADDR FOR END OF EXTENT
DEBENDHH DS    BL2            HEAD NUMBER FOR END OF EXTENT
DEBNMTRK DS    BL2            NUMBER OF TRACKS IN EXTENT
DEBID1   DS    CL2                      MODULE ID 1
DEBID2   DS    CL2                      MODULE ID 2
DEBID2A  DS    CL2                      MODULE ID 2A
DEBID3   DS    CL2                      MODULE ID 3
DEBID4   DS    CL2                      MODULE ID 4
DEBID5   DS    CL2                      MODULE ID 5
****     FORMAT OF OPEN MODULE IGG0192P WA,
*              SET UP IN AREA WHERE PERMANENT CP'S WILL BE
IHAIOB   DSECT
         DS    0F
AIOBFLG1 DS    CL1                      IOB FLAG BYTE 1          Y01021
AIOBFLG2 DS    CL1                      FLAG BYTE 2              Y01021
AIOBSENS DS    CL2                      SENSE BYTES              Y01021
IOBECBAD DS    A
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD      Y01021
AIOBSIOC DS    CL1                      SIO CC                   Y01021
AIOBSTRT DS    CL3                      CHANNEL PROGRAM ADDRESS  Y01021
AIOBWGHT DS    CL1                                               Y01021
IOBDCBAD DS    CL3
IOBRESTA DS    A
IOBBCTIN DS    CL2
AIOBERR  DS    CL2                      ERROR COUNTER            Y01021
CP87DAD  DS    0D
IOBDADAD DS    CL8
CP87ECB  DS    F                        EVENT CB
ENDH     DS    BL1                      LAST TRACK OF CURRENT CYLINDER
CURH     DS    BL1                      CURRENT TRACK BEING READ
CURR     DS    CL1                      CURRENT R  BEING INITIALIZED
CP87     DS    0D                       CHANNEL PROGRAM 87
CZ1      DS    D
CZ2      DS    D
CZ3      DS    D
WTGDSECT DSECT                                                   Y02072
IDTTR    DS    F                        IDTTR OF EXECUTOR        Y02072
OPENWA   DS    F                        OPEN WORK AREA ADDR      Y02072
         EJECT
FORCORE  DSECT                          OPEN/CLOSE/EOV WORK AREA Y01021
         IECDSECT                                                Y01021
         EJECT
         IHAPSA
         END
