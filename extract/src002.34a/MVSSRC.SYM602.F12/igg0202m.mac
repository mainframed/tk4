         TITLE 'IGG0202M - QISAM LOAD MODE CLOSE- PAD HI-LVL INDICIES'
IGG0202M CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0202M                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM CLOSE, LOAD MODE                            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = IF HIGH-LEVEL INDICES EXIST, WRITE FINAL DUMMY ENTRIES   *
*            FOR THEM.  PAD ANY UNUSED INDEX SPACE WITH INACTIVE      *
*            ENTRIES.                                                 *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = CLOSE EXECUTOR                                        *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 1104 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0202L                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM CLOSE EXECUTOR IGG0202L IN  *
*              STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.            *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM CLOSE EXECUTOR IGG0202D IN STORAGE       *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = SYNCH TO PROCESSING ROUTINE TO TAKE SYNAD EXIT IF AN   *
*              I/O ERROR OCCURS.                                      *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = ISAM LOAD MODE PROCESSING ROUTINE                     *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - CLOSE WORK AREA                           *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB, DCB COPY, DEB, CVT, TCB, IOB, AND SVRB     *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, EXCP, WAIT, SYNCH, AND XCTL                       *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*        OS/VS2-02 CHANGES/DELETIONS                                  *
*                                                               YM06745
*              OS/VS2 RELEASE 030 CHANGES
* D078800-080700,D081400-082000,D082400-082600,C080800-081000,  OZ05937
*  A081700                                                      OZ05937
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
*****************************
* CLOSE WORK AREA REFERENCE *
*****************************
FORCORE  DSECT                          OPEN/CLOSE/EOV WORK AREA Y01021
         IECDSECT                                                Y01021
         EJECT
CVT      DSECT                                                   Y02072
         CVT                                                     Y02072
         SPACE 2
TCB      IKJTCB                                                  Y02072
         EJECT
         IKJRB                                                   Y02072
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   DSECT
         USING IHADEB,R8
         DS    0D
DEBNMSUB DS    0CL1
DEBTCBAD DS    A
DEBAMLNG DS    0CL1
DEBDEBAD DS    A
DEBOFLGS DS    0CL1
DEBIRBAD DS    A
DEBOPATB DS    0CL1
DEBSYSPG DS    A
DEBNMEXT DS    0CL1
DEBUSRPG DS    A
DEBPRIOR DS    0CL1
DEBECBAD DS    A
DEBPROTG DS    0BL1
DEBDEBID DS    0BL1
DEBDCBAD DS    A
DEBEXSCL DS    0CL1
DEBAPPAD DS    A
DEBNIEE  DS    0CL1
DEBFIEAD DS    A
DEBNPEE  DS    0CL1
DEBFPEAD DS    A
DEBNOEE  DS    0CL1
DEBFOEAD DS    A
         DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    A
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
*
ISLCOMON DSECT
         USING ISLCOMON,R12
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE
ISLEOB   DS    F                        END OF BUFFR ADR
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD
ISLOCNT  DS    CL8                      OVFLOL IX COUNT, CCHHRKDD
ISLDCNT  DS    CL8                      DUMMY IX COUNT,  CCHHRKDD
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP
         DS    CL2
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP
         DS    CL1
ISLBUFNO DS    CL1                      DCBBUFNO OR 2
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)
ISLVRSAV DS    18F                      ISL SAVE AREA
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE
*
TSTWK1C  DS    F                        WORK AREA                 13711
TSTWK2C  DS    F                        WORK AREA                 13711
         DS    F                        WORK AREA                 13711
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES
ISLD     DS    F                        DISCPLACEMENT FROM CP18 START
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK
*
ISLF8AD  DS    F                        ADDR OF PUT ISLF800
ISLFXAD  DS    F                        ADDR OF PUT ISLFX20
ISLFYAD  DS    F                        ADDR OF PUT ISLFY01
ISLFZAD  DS    F                        ADDR OF PUT ISLFZ01
ISLPAAD  DS    F                        ADDR OF PUT ISLPA01
ISLF1AD  DS    F                        ADDR OF APP ISLF110
*
*
* ISLVPTRS REFERENCE       C(DCBWKPT6)=A(ISLVPTRS)
*
ISLVPTRS EQU   *                                                  25463
ISLVPTR1 DS    A                        A(AREA Y)                 25463
ISLVPTR2 DS    A                        A(KEYSAVE)                25463
ISLVPTR3 DS    A                        A(IOBBCT)                 25463
ISLVPTR4 DS    A                        A(CP18)                   25463
ISLVPTR5 DS    A                        A(CP19)                   25463
ISLVPTR6 DS    A                        A(CP20)                   25463
ISLVPTR7 DS    A                        A(CP21)                   25463
ISLVPTR8 DS    A                        SIZE OF ISLCOMON AREA     25463
ISLVPTR9 DS    A                        SIZE OF CHAN PROG AREA    25463
ISLVPTRA DS    A                        ADDRESS OF BAD BUFFER     25463
ISLVPTRB DS    A                        UNUSED                    25463
ISLVPTRC DS    A                        UNUSED                    25463
ISLFXWK1 DS    F                        WORK AREA                 13711
ISLFXWK2 DS    F                        WORK AREA                 13711
ISLF9WK1 DS    F                        WORK AREA                 13711
*
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
AIOBSENS DS    CL2                      SENSE BYTES              Y01021
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD      Y01021
AIOBSIOC DS    0CL1                     SIO CC                   Y01021
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
*
********************
* IXLT REFERENCE   *
********************
*
IXLT     DSECT
         USING IXLT,R7
         DS    0D
IXLTIND  DS    CL1                      INDICATOR                  LEV1
IXLBEG   DS    CL8                      BEGINING COUNT MBBCCHHR
IXLSTP   DS    CL8                      STEPPING COUNT MBBCCHHR
IXLEND   DS    CL8                      ENDING COUNT   MBBCCHHR
         DS    CL1
         DS    CL26                                                LEV2
         DS    CL26                                                LEV3
         DS    CL26                                                LEV4
         EJECT
IGCX     DSECT
         IGGLDCP ,                      LOAD CP SKELETON         S20201
         EJECT
IGG0202M CSECT
ISLC300  BALR  R15,0
         USING *,R15
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         L     R12,DCBWKPT1
         LR    RBASE,R15
         USING FORCORE,RCORE            CLOSE WA ADDRESSABILITY  Y02072
         STM   R1,R14,DXCCW1            SAVE  REGISTERS 1-14     Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=2   CHANGE TO USER KEY  Y02072
*
         L     R1,DXUDCBAD              USERS DCB ADDRESS        Y02072
         L     R10,DCBWKPT6
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R10      EQU   10
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   9
RBASE    EQU   3
RCORE    EQU   11                       CLOSE WORK AREA BASE     Y02072
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RJ       EQU   15
*
K8       EQU   8                        CONSTANT                 S20201
LEVEL    EQU   26                       LENGTH 1 ENTRY IXLT      S20201
K4       EQU   4                        CONSTANT                 S20201
BITS23   EQU   X'30'                    LEVEL 2,3 SWS            S20201
         EJECT
***********************************************************************
* CHART C3 - PAD HI-LEV IX                                            *
***********************************************************************
*
ISLC301  CLI   DCBNLEV,X'00'            TEST NLEV VS 0
         BE    ISLC319                  B IF 0 TO END OF JOB
         LA    R2,ISLIOBC               C(R2)=A(IOBC)
         L     R10,16(R10)              C(R10)=A(CP91)
         USING CM1,R10                  ADDRESSABILITY ON CP91   S20201
         LA    R5,1                     C(R5)=0001
         XC    ISLD(4),ISLD             SET D=0 END,NEW CYL,CHAIN SWS
*
* SET DCBOPTCD = 0 (NO CYL OVFL)
*
         MVI   DCBOPTCD,X'00'           SET OPTCD TO ZERO
*
* LOCATE LEVEL IN INDEX LOCATION TABLE AT CYLINDER INDEX
*
         LA    R7,ISLIXLT               C(R7)=A(IXLT)
         OI    0(R7),X'20'              IXLTIND BIT-2 ON IN LEV1
         NI    26(R7),X'DF'                     BIT-2 OFF IN LEV2
         NI    52(R7),X'DF'                                  LEV3
         NI    78(R7),X'DF'                                  LEV4
         B     ISLC305
*
* STEP TO NEXT LEVEL IN INDEX LOCATION TABLE
*
ISLC302  LA    R7,ISLIXLT               C(R7)=A(IXLT) FOR CURR LEVEL
         LA    R5,1                     C(R5)=0001 FOR LEVEL CNT
ISLC303  LR    R6,R7                    C(R6)=A(IXLT) FOR PREV   S20201
*                                       LEVEL                    S20201
         LA    R7,LEVEL(R7)             STEP R7 TO NEXT LEVEL    S20201
         LA    R5,1(R5)                 STEP COUNT
         TM    0(R6),X'20'              TEST IF R6 = PREV LEVEL
         BZ    ISLC303                  LOOP                     S20201
*
ISLC304  NI    0(R6),X'DF'              PREV IXLTIND BIT-2 OFF
         OI    0(R7),X'20'              CURR IXLTIND BIT-2 ON
*
* SET F BYTE IN MBBCCHHRFP TO CURR LEVEL, BITS 2 AND 3 ON (INACTIVE)
*
ISLC305  L     R3,CM27+K4                                        S20201
*                                       C(R3)=C(CM27+4)=A(MBBCCHHS20201
         STC   R5,K8(R3)                STORE LEVEL              S20201
         OI    K8(R3),BITS23            SET BITS 2 AND 3 ON      S20201
         ST    R7,ISLFXWK2              SAVE R7
*
* GET CURR MBBCCHHR FROM SX, R = R + 1
*
         MVC   ISLNDAT(8),9(R7)         NDAT = MBBCCHHR CURR
         SR    R3,R3
         IC    R3,ISLNDAT+7             C(R3)=R
         LA    R3,1(R3)                 C(R3) =  R+1
         STC   R3,ISLNDAT+7             NDAT = MBBCCHHR WITH R=R+1
*
* GET END MBBCCHHR FROM EX
*
         MVC   ISLODAT(8),17(R7)        ODAT = MBBCCHHR END
*
* TEST CURR R VS HIRCM, WAS LAST TRACK COMPLETED
*
         CLC   ISLNDAT+7(1),DCBHIRCM    TEST CURR R VS HIRCM
         BC    2,ISLC311                B TO ACCESS NEXT TRACK
*
* TEST CURR CCHH VS END CCHH (ARE WE AT LAST TRACK OF CURR LEVEL)
*
ISLC310  CLC   ISLNDAT(7),ISLODAT       TEST CURR VS END MBBCCHH
         BNL   ISLC318                  B IF LAST TRACK OF LEVEL
*
* TEST CURR HH VS IXLT+22, ARE WE AT HI HH OF A CYLINDER
*
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,ISLAREAZ+87           GET DEVICE MASK
ISLC3101 IC    R3,ISLNDAT+6             C(R3)= CURRENT H
         NR    R3,R7                    CALCULATE TRACK
         IC    R14,ISLIXLT+23
         NR    R14,R7                   CALCULATE TRACK
         CLR   R3,R14                   CURRENT HH VS HI HH
         BNL   ISLC312                  B IF HI HH
*
* SET CNT A = HIRCM - R +2 (SIM FIRSH R)
*
         IC    R7,DCBHIRCM              CNT A = HIRCM
         IC    R3,ISLNDAT+7             C(R3) = CURR R
         SR    R7,R3                    CNT A = HIRCM - R
         LA    R7,2(R7)                 CNT A=HIRCM - R + 2
*
         BAL   R14,ISLC201              LINK TO C2 RT TO WRITE IX TRK
*
* STEP CURR HH TO NEXT TRK, R = 1
*
ISLC311  L     R3,ISLNDAT+4             C(R3)= CURR CHHR
         LA    R3,256(R3)               CURR HH = NEXT HH
         IC    R3,ISL1+1                CURR R = 1                12041
         STH   R3,ISLNDAT+6
*
         B     ISLC310                 *B TO PROCESS NEXT TRACK OF IX
*----------------------------------------------------------------------
*
* SET TO PROCESS LAST TRK OF CYL, CNT A = HIRCM - R +1 (SIM FIRSH R -1)
*
ISLC312  EQU   *
         IC    R7,DCBHIRCM              CNT A = HIRCM
         IC    R3,ISLNDAT+7             C(R3) = CURR R
         SR    R7,R3                    CNT A = HIRCM - R
         LA    R7,1(R7)                 CNT A = HIRCM-R+1         12041
*
* SET END SW AND CHAINED SW ON
*
         OI    ISLD,X'60'               TURN D BITS 1 AND 2 ON
         MVC   ISLNOENT+3(1),DCBHIRCM   SET R = HI R              P4701
*
* TEST CURR CC VS END CC IN DEB (ARE WE AT END OF EXTENT)
*
         DROP  R1                       END USING ON USER DCB    Y02072
         L     R4,DXCCW1                PROTECTED DCB ADDR       Y02072
         USING IHADCB,R4                COPY ADDRESSABILITY      Y02072
         L     R8,DCBDEBAD              C(R8)= A(DEB)
         DROP  R4                       END USING ON COPY DCB    Y02072
         USING IHADCB,R1                USER DCB ADDRESSABILITY  Y02072
         SR    R4,R4
         IC    R4,ISLNDAT               C(R4)= CURRENT 000M
         SLL   R4,4                     C(R4)=(M-1)X16 (USE AS INDEX)
         LA    R8,32(R4,R8)             C(R8) = A(CURR EXTENT)     MC1A
         SR    R3,R3
         SR    R5,R5
         CLI   ISLAREAZ+86,X'02'          TEST FOR 2301
         BNE   ISLC312B                 BRANCH IF NOT
         LA    R4,248
         IC    R3,ISLNDAT+6             GET CURNT TRK
         NR    R3,R4                    REDUCE TO CYL VALUE
         IC    R5,3(R8)                 GER END TRK
         NR    R5,R4                    REDUCE TO CYL VALUE
         CLR   R3,R5                    CURNT CYL VS END CYL
         B     ISLC312B+6
ISLC312B CLC   ISLNDAT+3(3),10(R8)      CURR CCH VS. HIGH CCH      MC1A
         BE    ISLC313                  B IF EQUAL, END OF EXTENT
*
* STEP CC TO NEXT CYL, SAME M
*
         LA    R4,ISLNDAT+4             C(R4)=A(CURR CHHR)
         L     R5,0(R4)                 C(R5)= CHHR             OZ05937
         SRL   R5,24                    C(R5)=000C              OZ05937
         AH    R5,ISL1                  000C+1                    12041
         SLL   R5,24                    C(R5)=C000              OZ05937
         ST    R5,ISLDCNT+4             ISLDCNT+4=C000
         MVC   ISLDCNT(4),ISLNDAT       ISLDCNT=MBBCC000          12749
         MVI   ISLDCNT+7,X'01'          ISLDCNT=MBBCC001
         B     ISLC314
*
* STEP M TO NEXT EXTENT AND GET NEXT CC FROM DEB
*
ISLC313  SR    R4,R4
         ST    R4,ISLDCNT               CLEAR MBBC                 MC1A
         IC    R4,ISLNDAT               C(R4)= CURR 000M
         LA    R8,16(R0,R8)             C(R8) = A(NEXT EXTENT)     MC1A
         MVC   ISLDCNT+3(4),6(R8)       INSERT CCHH
         MVI   ISLDCNT+7,X'01'          CCHH1, BB ALWAYS 0
         LA    R4,1(R4)                 C(R4) = NEXT M
         STC   R4,ISLDCNT               ISLDCNT = MBBCCHHR, R=1
ISLC314  BAL   R14,ISLC201             LINK TO C2 RTN TO WRITE IX TRK
*
* SET CURR MBBCCHHR = NEXT MBBCCHHR
*
         MVC   ISLNDAT(8),ISLDCNT       CURR MBBCCHHR = NEXT MBBCCHHR
         B     ISLC310                 *B TO PROCESS NEXT TRK OF IX
*----------------------------------------------------------------------
*
* SET TO PROCESS LAST TRK OF LEV, CNT A = ENDR - R +1 (SIM FIRSH R -1)
*
ISLC318  SR    R7,R7                    CNT A = R7
         IC    R7,ISLODAT+7             CNT A = ENDR
         SR    R3,R3
         IC    R3,ISLNDAT+7             C(R3) = CURR R
         SR    R7,R3                    CNT A = ENDR - CURR R
         LA    R7,1(R7)                 CNT A = ENDR-CURR R +1    12041
*
* SET END SW ON
*
         OI    ISLD,X'40'               TURN D BIT 1
         MVC   ISLNOENT+3(1),ISLODAT+7  SET R = END R             P4701
*
         BAL   R14,ISLC201              LINK TO C2 RT TO WRITE IX TRK
*
         L     R7,ISLFXWK2              RESTORE R7
*
* TEST IXLT TO SEE IF CURR LEVEL WAS LAST LEVEL (ARE WE DONE)
*
         TM    0(R7),X'80'              TEST IXLTIND BIT 0
         BC    8,ISLC302                B IF 0 TO PROCESS NEXT LEVEL
*
* END OF JOB
*
ISLC319  MVC   DCBOPTCD(1),ISLF9WK1+3   RESTORE DCBOPTCD
         MVC   DCBFIRSH(3),ISLF9WK1     RESTORE DCBFIRSH
*
* TEST DCBEXCD1 BIT 5 FOR PREVIOUS UNCORRECTABLE WRITE ERROR
*
         TM    DCBEXCD1,X'04'           TEST EXCD1 BIT 5
         BC    8,ISLC320                B IF NOT ON
         OI    DCBST,X'40'              SET FIRST TIME SWITCH ON IN
*                                       CASE NO DATA WAS CREATED
         L     RJ,CVTPTR                ADDRESS OF CVT           Y02072
         USING CVT,RJ                   CVT ADDRESSABILITY       Y02072
         L     RJ,CVTTCBP               ADDR OF TCB PTRS         Y02072
         L     RJ,0(RJ)                 TCB ADDRESS              Y02072
         USING TCB,RJ                   TCB ADDRESSABILITY       Y02072
         L     RJ,TCBRBP                ADDRESS OF SVRB          Y02072
         USING RBBASIC,RJ               SVRB ADDRESSABILITY      Y02072
*
         MODESET  KEYADDR=KEY0,WORKREG=14  SET PROTECTION KEY 0  Y02072
*
         STM   R8,RCORE,RBEXSAVE        SAVE REGS 8-11           Y02072
         L     R15,ISLF8AD              SET FOREIGN BASE ***WR ERROR***
         DROP  RJ                       END USING ON SVRB        Y02072
         LR    RJ,R15                   ENTRY POINT ADDR         Y02072
*
         SYNCH (15)                     GO HANDLE SYNAD EXIT     Y02072
*
         L     RJ,CVTPTR                CVT ADDRESS              Y02072
         USING CVT,RJ                   CVT ADDRESSABILITY       Y02072
         L     RJ,CVTTCBP               ADDR OF TCB PTRS         Y02072
         L     RJ,0(RJ)                 TCB ADDRESS              Y02072
         USING TCB,RJ                   TCB ADDRESSABILITY       Y02072
         L     RJ,TCBRBP                ADDRESS OF SVRB          Y02072
         USING RBBASIC,RJ               SVRB ADDRESSABILITY      Y02072
         LM    R8,RCORE,RBEXSAVE        RESTORE REGS 8-11        Y02072
*
ISLC320  EQU   *                                                  P4701
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         LM    R1,R14,DXCCW1            RESTORE REGISTERS        Y02072
         USING BASETAG,RBASE
         MVC   0(L'LOAD2D,RWTGC),LOAD2D NEXT LOAD - IGG0202D     Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLI   0(RWTGC),X'F0'           TEST FOR END OF WTG TABLE  MC1A
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
*
         USING FORCORE,RCORE                                     Y01021
         LA    RJ,DXCCW12               WA ADDRESS               Y01021
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15))  XCTL TO IGG0202D  Y02072
*
         DROP  RBASE
         EJECT
***********************************************************************
* CHART C2 - WRITE IX PADDING                                         *
***********************************************************************
*
ISLC201  EQU   *
*
* TEST FOR NEW CYLINDER
*
         TM    ISLD,X'80'               TEST NEW CYL SW (D BIT 0)
         BC    8,ISLC202                B IF OFF
*
* NEW CYL - SET NEW CYL SW OFF
*
         NI    ISLD,X'7F'               SET NEW CYL SW OFF (D BIT 0)
*
* SET F = 30
*
         L     R5,CM27+K4                                        S20201
*                                       C(R5)=C(CM27+4)=A(MBBCCHHS20201
         OI    8(R5),X'10'              SET F = 3X (ADD BIT 3)
         NI    8(R5),X'F7'              SET F = UNCHAINED (BIT 4 OFF)
         XC    0(8,R5),0(R5)            SET MBBCCHHR TO ZEROS
*
* TEST FOR CYL OVFL AREA
*
         LR    R4,R10                   C(R4)= A(CM5)
         TM    DCBOPTCD,X'08'           TEST OPTCD BIT-4 FOR CYL OVFL
         BC    7,ISLC203
*
* SET CPSTART IN IOBC TO CM5
*
ISLC202  LA    R4,CM5                   C(R4)=A(CM5)             S20201
ISLC203  ST    R4,IOBCPSAD              STORE CPSTRT IN IOBC CP START
*
* SET IOBC+32 TO CURR MBBCCHHR, WITH R=R-1
*
         MVC   IOBDADAD(8),ISLNDAT      C(IOBC+32)=CURR MBBCCHHR
         L     RJ,DXCCW1                DCB COPY ADDRESS         Y02072
         USING IHADCB,RJ                COPY DCB ADDRESSABILITY  Y02072
         L     R8,DCBDEBAD              C(R8)= A(DEB)
         USING IHADEB,R8                R8 = DEB ADDRESS         Y01021
         DROP  RJ                       END USING ON DCB COPY    Y02072
         USING IHADCB,R1                USERS DCB                Y02072
         L     R3,DEBFPEAD              C(R3)= A(1ST PRIME EXTENT
         SR    R4,R4
         IC    R4,ISLNDAT               C(R4)= CURR 000M
         BCTR  R4,0                     C(R4)= M-1
         SLL   R4,4                     C(R4)=(M-1)X16
         LA    R4,0(R4,R3)              C(R4)=A(M-1 EXTENT)
         MVC   IOBDADAD+1(2),4(R4)      SET BB                     MC1A
         IC    R3,IOBDADAD+7            C(R3)=R
         BCTR  R3,0                     C(R3)= R-1
         STC   R3,IOBDADAD+7            C(IOBC+32)=MBBCCHHR, R=R-1
*
* SET COUNTS IN AREA Z AND TURN ON ALL CC FLAGS IN CP91, TURN 10TH OFF
*
         L     R3,ISL10                 C(R3)=10 = LOOP COUNT
         LA    R8,ISLAREAZ             R8 = A(AREAZ)
         LA    R4,6(R8)                 C(R4)=A(Z+6) = COUNT 1 ADR
         SR    R5,R5
         IC    R5,ISLNDAT+7             C(R5)=CURR R
         LA    R6,CM8+K4                C(R6)=A(CC FLAG FOR      S20201
*                                       CM8)-CP91                S20201
ISLC204  MVC   0(4,R4),ISLNDAT+3        MOVE CURR CCHH
         STC   R5,4(R4)                 STORE R
         OI    0(R6),X'40'              TURN ON CC FLAG IN CP91
         LA    R4,8(R4)                 STEP Z
         LA    R5,1(R5)                 BUMP R
         LA    R6,16(R6)                STEP CP91
         BCT   R3,ISLC204               LOOP
         NI    CM26+K4,X'FF'-CC         TURN OFF TENTH CC FLAG   S20201
*                                       IN CP91                  S20201
*
* TEST CNT A VS 1 (ONLY 1 ENTRY ON LAST TRACK OF IX)
*
         CH    R7,ISL1                  TEST CNT A VS 1           12041
         BNH   ISLC208                  BR, WRITE DUMMY END ONLY  18218
*
* TEST CNT A VS 10 (SET UP A(CC FLAG) OF LAST WR)
*
         SR    R4,R4
         LR    R5,R7                    C(R5)=CNT A (SIM FIRSH)
         BCTR  R5,0                     C(R5)= CNT A -1
         D     R4,ISL10                 C(R4)=R
*                                       C(R5)=Q
         LTR   R4,R4                    TEST R VS 0
         BC    7,ISLC205                BRANCH IF R NOT 0
         L     R4,ISL10                 C(R4)=10
         BCTR  R5,0                     C(R5)= Q-1
ISLC205  SLL   R4,4                     MULTIPLY R X 16
         LA    R6,CM6+K4(R4)            C(R6)= A(CC FLAG) OF     S20201
*                                       LAST WR                  S20201
         LTR   R5,R5                    TEST Q VS 0
         BC    7,ISLC206                BRANCH IF NOT 0,CNT GTR 10
*
* TEN OR LESS ENTRIES TO WR
*
         NI    0(R6),X'BF'              SET OFF CC FLAG BASED ON CNT A
         ST    R5,12(R10)               SET CM2+4 = 0000          12749
         B     ISLC207
*
* MORE THAN TEN ENTRIES TO WR
*
ISLC206  STC   R7,DCBFIRSH+2            SET FIRSH R = CNT A
         ST    R6,12(R10)               SET CM2+4 = A(CC FLAG)
*
* EXECUTE CP91
*
ISLC207  LA    R13,ISLVRSAV             C(R13)=A(VRSAV)
         LR    R3,R1                    SAVE R1
         L     R4,IOBECBAD              C(R4)=A(ECB)
         LR    R6,R14                   SAVE R14
         EXCP  IHAIOB                   EXECUTE CHANNEL PROGRAM
*
* AWAIT COMPLETION
*
         LR    R1,R4                    C(R1)=A(ECB)
         WAIT  ECB=(1)                  WAIT
         LR    R1,R3                    RESTORE R1
         LR    R14,R6                   RESTORE R14
*
* SET CPSTART IN IOBC TO CM5
*
         LA    R4,CM5                   C(R4)=A(CM5)             S20201
         ST    R4,IOBCPSAD              STORE CPSTART IN IOBC CP START
*
* TEST ENDSW FOR LAST TRACK OF CURR IX
*
ISLC208  TM    ISLD,X'40'               TEST D BIT 1 (ENDSW)
         BCR   8,R14                    RETURN TO C1 IF OFF
*
* LAST TRACK OF CURR IX - SET ENDSW OFF, NEW CYL SW ON
*
         NI    ISLD,X'BF'               TURN D BIT 1 OFF (ENDSW)
         OI    ISLD,X'80'               TURN D BIT 0 ON (NEW CYL SW)
*
* SET UP IOBC AND AREA Z FOR WRITING DUMMY END IX ENTRY
*
         SR    R3,R3
         IC    R3,ISLNOENT+3            C(R3) = R                 P4701
         STC   R3,10(R8)                C(1ST CNT IN AREA Z) = FINAL R
         BCTR  R3,0                     C(R3)=NIRT R-1 OR PREV R
         STC   R3,IOBDADAD+7            C(IOBC+32) = PREV R
         MVC   IOBDADAD+5(2),ISLNDAT+5  C(IOBC+32) = CURR HH
*
* SET CC FLAG FOR CM8 IN CP91 OFF TO WRITE LAST ENTRY
*
         NI    CM8+K4,X'FF'-CC          TURN OFF 1ST CC FLAG IN  S20201
*                                       CP91                     S20201
*
* SET F = 20
*
         L     R5,CM27+K4               C(R5)=A(MBBCCLLRFP)      S20201
         NI    8(R5),X'EF'              SET F = 2X (DELETE BIT 3)
         SR    R4,R4
         ST    R4,12(R10)               SET CM2+4 = 0000
*
* TEST CHAINED SW
*
         TM    ISLD,X'20'               TEST D BIT 2 (CHAINED SW)
         BC    8,ISLC207                B IF OFF TO WR LAST ENTRY
         OI    8(R5),X'08'              SET F = CHAINED (BIT 4 ON)
         NI    ISLD,X'DF'               SET D BIT 2 OFF (CHAINED SW)
         MVC   0(8,R5),ISLDCNT          MOVE A(NEXT IX) TO MBBCCHHR
         B     ISLC207                  B TO WR LAST ENTRY
*
* --------------------------------------------------------------------*
         EJECT
*
* CONSTANTS
*
ISL1     DC    H'0001'                                            12041
ISL10    DC    F'0010'
KEY0     EQU   ISL10                    STORAGE PROTECT KEY ZERO Y02072
*
THISLOAD DC    C'2M'
MASK     DC    X'0018'
         DC    X'0B18'
         DC    X'1810'
         DC    X'1818'                  SHIFT CON FOR CYL SWITCH A51539
         DC    X'1818'                  SHIFT CON FOR CYL SWITCH A51539
         DC    X'1818'                  SHIFT CON FOR CYL SWITCH A51539
*
LOAD2D   DC    C'2D'                    MODULE ID                Y02072
*
PATCH    DC    XL((*-IGG0202M)/20)'00'  ZEROED PATCH AREA        Y02072
         END
