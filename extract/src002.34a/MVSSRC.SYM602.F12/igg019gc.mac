 TITLE 'IGG019GC  - APPENDAGE ROUTINES, W/O WR CHK'
IGG019GC CSECT
*          RELEASE OS/VS2-02 DELETIONS                                *
*          RELEASE 19 DELETIONS                                       *
*2182068600-069000                                               A28706
*2182034800-034900                                               O19110
*2182065800                                                      A27321
*          RELEASE 20 DELETIONS                                       *
*0492                                                            A30945
*0492015000,015200-021800,022200,022400,022600-035400,072800,    S20201
*0492074200,074600,076000,077200,077400,077600,080400,080800,    S20201
*0492081600,085400,085600,089200,089400,089700,095400,095600,    S20201
*0492095800,096000,190800,192000                                 S20201
*          RELEASE 21 DELETIONS                                       *
*3523046000,052200,052600                                        S21045
*D069100                                                        SA55487
*C196700                                                        XA04602
*          RELEASE 22 DELETIONS                                       *
*STATUS CHANGE LEVEL 011
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE CONTAINS THE APPENDAGE ROUTINES FOR  *
*   PROCESSING ALL LOAD MODE I/O RETURNS. THE CHANNEL END APPENDAGE   *
*   ROUTINES SIGNAL THE COMPLETION OF INDEX AND/OR BUFFER WRITING.    *
*   THE ABNORMAL APPENDAGE ROUTINE PREPARES FOR AN ABNORMAL TERMIN-   *
*   ATION OF THE JOB.  THIS MODULE SUPPORTS BOTH FIXED AND
*   VARIABLE LENGTH RECORD FORMATS.
*                                                                     *
*ENTRY POINTS- 'IGG019GC' IS THE ENTRY POINT WHEN NO APPENDAGE        *
*   PROCESSING IS REQUIRED.                                           *
*              'IGG019GC+4' IS THE ENTRY POINT FOR CHANNEL END        *
*   APPENDAGE PROCESSING.                                             *
*              'IGG019GC+12' IS THE ENTRY POINT FOR ABNORMAL END      *
*   APPENDAGE PROCESSING.                                             *
*   ACCESS TO THIS MODULE IS PROVIDED BY A VECTOR OF FIVE ADDRESSES   *
*   LOCATED AT DEB-36.                                                *
*                                                                     *
*INPUT- REGISTER 2  -POINTS TO IOB.                                   *
*       REGISTER 3  -POINTS TO DEB.                                   *
*       REGISTER 4  -POINTS TO DCB.                                   *
*       REGISTER 14 -POINTS TO RETURN FROM APPENDAGE.                 *
*                                                                     *
*OUTPUT- SAME REGISTER SETTING AS INPUT.                              *
*                                                                     *
*EXTERNAL ROUTINES- THIS MODULE WORKS IN CONJUNCTION WITH LOAD MODE   *
*   PUT (IGGO19GA), CHANNEL PROGRAMS, AND IOS.                        *
*                                                                     *
*EXITS-NORMAL- (ISLF115) FOR NORMAL RETURN TO IOS, CHANNEL END.       *
*              (ISLF340) FOR EXCP RETURN TO IOS - CP19.               *
*              (ISLF440) FOR EXCP RETURN TO IOS - CP21.               *
*              (ISLF505) FOR EXCP RETURN TO IOS - CP21 CYL DUMMY.     *
*              (ISLF604) FOR EXCP RETURN TO IOS - CP21 MAST DUMMY.    *
*              (ISLF125) FOR NORMAL RETURN TO IOS, ABNORMAL.          *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*   DCB      - COMMUNICATION WITH USER.                               *
*   DEB      - COMMUNICATION WITH IOS.                                *
*   ISLCOMON - COMMUNICATION WITHIN LOAD MODE.                        *
*   ISLIOBA  - COMMUNICATION WITH I/O FOR CP18 AND CP20.              *
*   ISLIOBB  - COMMUNICATION WITH I/O FOR CP21.                       *
*   ISLIOBC  - COMMUNICATION WITH I/O FOR CP19.                       *
*   ISLAREAZ - WORK AREA USED FOR PREFORMATTING.                      *
*   ISLIXLT  - INDEX LOCATION TABLE, LOCATES HI-LEVEL INDICIES.       *
*   ISLY     - WORK AREA USED WHEN WRITING INDICIES.                  *
*   ISLVPTRS - VARIABLE POINTERS, REFERENCE VARIABLE LENGTH BLOCKS.   *
*   IOBBCT   - BUFFER CONTROL TABLE, CONTROLS BUFFER USAGE.           *
*                                                                     *
*ATTRIBUTES- READ ONLY, REENTRANT, PRIVILEGED, DISABLED, REUSABLE.    *
*                                                                     *
*NOTES- SECTIONS OF THE PROCESSING IN THIS MODULE ARE ENTERED         *
*   DIRECTLY FROM CLOSE PROCESSING. IN SUCH CASES, PROCESSING IS      *
*   CARRIED ON AS THOUGH IT WAS PART OF CLOSE.                        *
*        ENTRY POINT - ISLF110                                        *
*                                                                     *
*    ******************************************************************
*    THE FOLLOWING NOTATION IS FREQUENTLY USED THROUGHOUT COMMENTS -  *
*              C(FIELD X) = A(FIELD Y)                                *
*     CONTENTS OF FIELD X = ADDRESS OF FIELD Y                        *
*    ******************************************************************
*                                                                     *
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   IGGDEBD
         EJECT
ISLCOMON IGGLOAD
         USING ISLCOMON,R12                                      S20201
         SPACE 2
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         EJECT
LOADCPS  DSECT
         IGGLDCP
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLAG1 DS    CL1                      FLAGS 1                   15924
IOBFLAG2 DS    CL1                      FLAGS 2                   15924
         DS    CL1
IOBSENSE DS    CL1                      SENSE
IOBECBAD DS    A                        ECB POINTER
IOBCSW   DS    CL8                      CHANNEL STATUS WORD
IOBSIOCC DS    0CL1                     SIO CC
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBERRCT DS    CL2                      ERROR COUNT               15924
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
         ORG   IOBDADAD+5
IOBDAHHR DS    XL3                      HHR                      Y02072
*
********************
* IXLT REFERENCE   *
********************
*
IXLT     DSECT
         USING IXLT,R7
         DS    0D
IXLTIND  DS    CL1                      INDICATOR                  LEV1
IXLBEG   DS    CL8                      BEGINING COUNT MBBCCHHR
IXLSTP   DS    CL8                      STEPPING COUNT MBBCCHHR
IXLEND   DS    CL8                      ENDING COUNT   MBBCCHHR
         DS    CL1
         DS    CL26                                                LEV2
         DS    CL26                                                LEV3
         DS    CL26                                                LEV4
         EJECT
REGSAVE  DSECT                          REGISTER SA FROM IOS     Y02072
REGSAV14 DS    F                        REGISTER 14              Y02072
REGSAV15 DS    F                        REGISTER 15              Y02072
REGSAV0  DS    F                        REGISTER 0               Y02072
REGSAV1  DS    F                        REGISTER 1               Y02072
REGSAV2  DS    F                        REGISTER 2               Y02072
REGSAV3  DS    F                        REGISTER 3               Y02072
REGSAV4  DS    F                        REGISTER 4               Y02072
REGSAV5  DS    F                        REGISTER 5               Y02072
REGSAV6  DS    F                        REGISTER 6               Y02072
REGSAV7  DS    F                        REGISTER 7               Y02072
REGSAV8  DS    F                        REGISTER 8               Y02072
REGSAV9  DS    F                        REGISTER 9               Y02072
REGSAV10 DS    F                        REGISTER 10              Y02072
REGSAV11 DS    F                        REGISTER 11              Y02072
REGSAV12 DS    F                        REGISTER 12              Y02072
REGSAV13 DS    F                        REGISTER 13              Y02072
         EJECT
IGG019GC CSECT
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R9       EQU   8
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   9
R16      EQU   15
EXCP     EQU   8                                                  15924
HHR      EQU   3                        LENGTH OF HHR IN BYTES   Y02072
LO3BYTES EQU   7                        STORE LOW 3 ORDER BYTES  Y02072
ALL      EQU   X'FF'                    ALL SWS ON               S20201
CM24X    EQU   CM2+4                    COUNT FOR MULTIPLE CP19  S20201
*                                       * EXECUTIONS.
CM64     EQU   CM6+4                    FIRST TIME INDICATOR     S20201
CM264    EQU   CM26+4                   LAST CC SPOT             S20201
CM273    EQU   CM27+3                   CCHHR FOR CM5            S20201
L4       EQU   4                        LENGTH                   S20201
*
FLAGS    EQU   10                       FLAG BYTE IN TISA
CP20CNXT EQU   X'02'                    SCHEDULE CP20C NEXT
CP18NEXT EQU   X'01'                    SCHEDULE CP18 NEXT
CP20LAST EQU   CP18NEXT+CP20CNXT        LAST CP SCHEDULED
         EJECT
***********************************************************************
* GENERAL APPENDAGE ROUTINE                                           *
***********************************************************************
*
*
* APPENDAGE ROUTINE ENTRANCES
*
         B     0(R14)                   NO APPENDAGE RT, RETURN TO IOS
         USING *+8,R15                                           S21045
CE       LA    R15,TWOINSTR(R16)        SET COMMON BASE          S21045
TWOINSTR EQU   8                        LENGTH OF TWO            S21045
*                                       INSTRUCTIONS             S21045
         B     ISLF110                  B TO CE RT
ABE      LR    R15,R16                  SET COMMON BASE          S21045
         B     ISLF120                  B TO AE RT
*
         EJECT
*
* CE ENTRANCE AND EXIT
**********************
*
ISLF110  EQU   *                                                 Y02072
         BAL   R12,ISLF130              LINK TO COMMON HSK       Y02072
*
* LOCATE PROPER CHANNEL END APPENDAGE ROUTINE
*
         LA    R3,0(R2)                 C(R3)=A(IOBX)
         LA    R4,ISLIOBB               C(R4)=A(IOBB)
         CR    R3,R4                    COMP IOBX VS IOBB
         BH    ISLF301                  B IF IOBX = IOBC (CP19)
         BE    ISLF401                  B IF IOBX = IOBB (CP21)
         B     ISLF201                  B IF IOBX = IOBA (CP18-CP20)
*
*
ISLF115  BAL   R13,ISLF140              LINK TO COMMON END
         B     0(R14)                   NORMAL RETURN TO IOS
*
*
* AE ENTRANCE AND EXIT
**********************
*
ISLF120  EQU   *                                                 Y02072
         BAL   R12,ISLF130              LINK TO COMMON HSK       Y02072
         TM    DCBEXCD1,X'04'           TEST EXCD1 BIT 5 FOR PREV ERR
         BC    1,ISLF125                B IF ON, ONLY 1 ERR PER JOB
         B     ISLF701                  B TO ABNORMAL APPENDAGE
*
ISLF125  BAL   R13,ISLF140              LINK TO COMMON END
         B     0(R14)                   NORMAL RETURN TO IOS
*
*
* COMMON APPENDAGE HOUSEKEEPING
***********************************************************************
*
ISLF130  EQU   *                                                 Y02072
         STM   R14,R13,0(R13)           SAVE REGS IN IOS SA      Y02072
         LR    R14,R13                  SAVE ADDR OF SAVE AREA   Y02072
         USING IHADEB,R3                                         Y02072
*
         MODESET KEYADDR=DEBPROTG,WORKREG=13  SET USERS KEY      Y02072
*
         LR    R13,R12                  SAVE RETURN ADDRESS      Y02072
         DROP  R3                                                Y02072
         LR    R1,R4                    C(R1)=A(DCB)
         L     R12,DCBWKPT1             C(R12)=A(COMMON)
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
         L     R11,8(R10)               C(R11)=A(IOBBCT)
*                                       C(R2)=A(IOB) - GIVEN
         LR    R0,R3                    DEB ADDRESSABILITY
*
*
         BR    R13                      EXIT
*
*
EXCPRTRN XC    IOBFLAG2(3),IOBFLAG2     CLEAR FLAG2,SENSE BYTES   15924
         XC    IOBCSW(9),IOBCSW         CLEAR FLAG3,CSW,SIOCC     15924
         XC    IOBERRCT(2),IOBERRCT     CLEAR ERROR COUNT         15924
         NI    IOBFLAG1,X'C2'           RESET FLAG1               15924
*
*
* COMMON APPENDAGE END
***********************************************************************
*
         USING REGSAVE,R14                                       Y02072
ISLF140  EQU   *                                                 Y02072
*
         MODESET  KEYADDR=KEY0,WORKREG=9  SET PROTECT KEY ZERO   Y02072
*
         LM    R14,R12,REGSAV14         RESTORE REGS FRM IOS SA  Y02072
         SR    R15,R15                  CLEAR 9
*
         BR    R13                      EXIT
         DROP  R14                                               Y02072
         EJECT
***********************************************************************
* CHART F2 - APPENDAGE, CP18 AND CP20 CHANNEL END                     *
***********************************************************************
*
* SET FLAGS BIT 0 = 0, (IWR)- CP(S) IS NOW AVAILABLE
*
ISLF201  EQU   *                                                 A27321
*
*              FOR FULL TRACK INDEX WRITE OPTION - IF CP20
*              WAS EXECUTED WITHOUT CP18 (BIT 4 OF FLAG FIELD
*              IN THE TRACK INDEX SAVE AREA IS ON) THEN RETURN
*              TO IOS WITHOUT UPDATING BUFFER POINTER.
*
         TM    36(R10),X'C0'            SUCCESSFUL GETMAIN FOR   O19110
*                                       FULL TRACK INDEX WRITE
         BNO   ISLF2014                 NO - BR TO CONTINUE      O19110
         L     R4,36(R10)               C(R4)=A(FTIW TI SAVE     O19110
*                                       AREA)
*   IF AOS CP20A OF B ,CP20C AND CP18 ARE SCHEDULED SEPARATELY AND
*   MUST BE RESTARTED FROM THIS APPENDAGE.
         TM    FLAGS(R4),CP20LAST       WAS CP18 LAST SCHEDULED
         BO    ISLF2014                 YES - DONE
AOSNT20C EQU   *                        SCHEDULE CP18 IF NECESSARY
         TM    10(R4),X'08'             CP20 EXECUTED ALONE      O19110
         BO    ISLF115                  YES-RETURN TO IOS EXIT   O19110
*   START CP 18 IF NECESSARY.
         TM    FLAGS(R4),CP18NEXT       SHOULD CP18 BE SCHE
         BNO   ISLF2014                 NO - FINISHED
         MVC   IOBCPSAD,ISLVPTR4        ASSUME CP18 NEXT
         MVC   IOBDADAD,0(R4)           *
         OI    FLAGS(R4),CP20LAST       MARK CP20 SCHEDULED
         BAL   R13,EXCPRTRN             REFRESH IOB
         B     EXCP(R14)                LINK TO IOS TO EXCP
*
* SET OFF STATUS BITS 1 AND 2, 00 = BUFFER AVAILABLE
* SET OFF STATUS BIT 4, 0 = T-BIT OFF
* DO THIS FOR EACH BUFFER THAT WAS JUST WRITTEN AND UPDATE PTR A AT THE
* SAME TIME. AT FINISH, PTR A WILL POINT TO NEXT SLOT TO SCHEDULE FOR
* WRITING.
*
ISLF2014 EQU   *                                                 O19110
         L     R3,IOBPTRA               C(R3)=A(1ST SLOT WRITTEN)
         LA    R3,0(R3)
ISLF202  TM    0(R3),X'60'              TEST BITS 1 AND 2 VS 11
         BC    1,ISLF203                B IF BITS 1 AND 2 = 11
*
*                                       BITS 1 AND 2 NOT 11, FINISHED
         STCM  R3,LO3BYTES,IOBPTRA+L'IOBFLAGS  STORE FIRST SLOT  Y02072
*                                       ADDR INTO PTRA           A28706
         B     ISLF115                  NORMAL RETURN TO IOS EXIT
*----------------------------------------------------------------------
*
ISLF203  NI    0(R3),X'97'              TURN BITS 1,2 AND 4 (IF ON) OFF
         A     R3,ISL4                  BUMP R3 TO ADR NEXT SLOT
         C     R3,ISLBUFN               TEST FOR ADR OF NTH SLOT
         BH    ISLF204                  B IF OUTSIDE TBL = WRAPAROUND
         B     ISLF202                  LOOP AGAIN
*
*                                       WRAPAROUND
ISLF204  LA    R3,IOBABUF               C(R3)=A(SLOT 1)
         B     ISLF202                  LOOP AGAIN
         EJECT
***********************************************************************
* CHART F3 - APPENDAGE, CP19 CHANNEL END                              *
***********************************************************************
*
ISLF301  L     R10,16(R10)              C(R10)=A(CP19)
         USING CM1,R10                  ADDRESSABILITY ON CP19   S20201
         CLC   CM24X(L4),ISL0           TEST CM2+4 VS 0000 = 10  S20201
*                                       OR LESS.
         BE    ISLF115                  B IF TEN OR LESS ENTRIES TO BE
*                                       PREFORMATTED FOR NORMAL IOS
*                                       RETURN.
*
* MORE THAN TEN ENTRIES TO PREFORMAT
*
         CLC   CM64(L4),ISL0            TEST CM6+4 VS 0000 = 1ST S20201
*                                       CE                       S20201
         BE    ISLF302                  B IF 1ST CE FOR THIS CYLINDER
         CLC   CM64(L4),ISLFF           TEST FOR CM6+4 FOR END   S20201
         BNE   ISLF303                  B IF PREFORMATTING IN PROCESS
         B     ISLF320                  B IF END
*
*
* 1ST CE WHILE PREFORMATTING THIS CYLINDER
*
ISLF302  LA    R4,CM5                   C(R4)=A(CM5)             S20201
         IC    R5,IOBSIOCC              SAVE SIOCC
         ST    R4,IOBCPSAD              STORE A(CM5) IN IOBC CP START
         STC   R5,IOBSIOCC              RESTORE SIOCC
*
         LA    R4,35(R2)                CM5
         IC    R5,CM5                                            S20201
         ST    R4,CM5                        STORE ADR IOBC+35   S20201
         STC   R5,CM5                                            S20201
*
* CALCULATE COUNT OF NO. OF EXECUTES OF CP19 FROM APPENDAGE
*
         SR    R4,R4
         SR    R5,R5
         IC    R5,DCBFIRSH+2            C(R5)=R OF FIRSH
         S     R5,ISL1                  DIVIDEND = 0000000N IN R4-R5
         D     R4,ISL10                 DIVISOR  = 000A
*                                       C(R4) = REMAINDER R = 000R
*                                       C(R5) = QUOTIENT Q
         C     R4,ISL0                  TEST R VS 0
         BNE   ISLF3025                 B IF R NOT 0
         S     R5,ISL1                  R=0, ADJUST Q DOWNWARDS
ISLF3025 ST    R5,CM64                  C(CM6+4)=Q, Q GR 0       S20201
*
ISLF303  L     R5,CM64                  C(R5) = COUNT Q          S20201
         C     R5,ISL1                  TEST FOR LAST EXECUTE
         BE    ISLF305                  B IF LAST EXECUTE
         S     R5,ISL1                  DECREMENT COUNT Q
         ST    R5,CM64                  C(CM6+4) = Q, Q GR 0     S20201
*
* PREPARE TO EXECUTE PREFORMAT
*
ISLF304  LA    R9,ISLAREAZ              C(R9)=A(AREA Z)
         MVC   37(3,R2),80(R9)          C(IOBC+37)=HHR FROM COUNT 10
         SR    R5,R5
         IC    R5,82(R9)                C(R5)=R FROM COUNT 10
         BAL   R13,ISLF310              B TO SET UP AREA Z
*
* EXCP RETURN TO IOS - EXECUTE CP19 AGAIN
*
         BAL   R13,EXCPRTRN             EXCP HOUSEKEEP            15924
         B     EXCP(R14)                TAKE EXCP IOS RETURN      15924
*
*
* PREPARE TO EXECUTE LAST PREFORMAT FOR THIS CYLINDER
*
ISLF305  L     R4,ISLFF                 C(R4)=FFFF
         ST    R4,CM64                  C(CM6+4) = FFFF = END    S20201
         L     R4,CM24X                 C(R4)=C(CM2+4)=A(CC      S20201
*                                       FLAG)                    S20201
         NI    0(R4),X'BF'              TURN CC FLAG OFF
         B     ISLF304                  B TO COMMON PREPARE
*
* SUBROUTINE TO SET UP AREA Z
*
ISLF310  L     R3,ISL10                 C(R3)=10  = LOOP COUNT
         LA    R4,10(R9)                C(R4)=A(Z+10) = 1ST R
ISLF311  A     R5,ISL1                  STEP R
         STC   R5,0(R4)                 STORE R IN Z
         A     R4,ISL8                  STEP Z
         BCT   R3,ISLF311               LOOP
         BR    R13                      EXIT
*
*
* END OF APPENDAGE - RESET CONDITIONS
*
ISLF320  SR    R5,R5
         ST    R5,CM64                  C(CM6+4) = 0000          S20201
         L     R4,CM24X                 C(R4)=C(CM2+4)=A(CC      S20201
*                                       FLAG)                    S20201
         OI    0(R4),X'40'              TURN CC FLAG BACK ON
         NI    CM264,ALL-CC             TURN OFF TENTH CC FLAG   S20201
*                                        1187                    S20201
         LA    R9,ISLAREAZ              C(R9)=A(AREA Z)
         BAL   R13,ISLF310              B TO SET UP AREA Z, 1ST R = 1
*
         TM    DCBOPTCD,X'08'           TEST OPTCD BIT-4 FOR CYL OVFL
         BC    8,ISLF325                B IF NO CYL OVFL
*
*                                       CYL OVFL ON
         IC    R5,IOBSIOCC              SAVE SIOCC
         ST    R10,IOBCPSAD             STORE A(CM1) IN IOBC CP START
         STC   R5,IOBSIOCC              RESTORE SIOCC
*
         XC    IOBDAHHR,IOBDAHHR        SET HEAD,RCD TO ZERO     Y02072
*
         CLI   DCBFIRSH+1,X'00'         FIRSH TRACK VS 0
         BE    ISLF115                  B IF CYL OVFL RCD IS ON SHARED
*                                       TRACK = CM5 OK - EXIT,NORM RTRN
*
*                                       CYL OVFL RCD NOT ON SHARED TRK
         TM    IOBFLAGS,X'10'     CP 91 IN CONTROL
         BO    ISLF115            YES, CP 91 IN CONTROL RETURN TO IOS
         LA    R4,CM273                 CM5                      S20201
         IC    R5,CM5                                            S20201
         ST    R4,CM5                     STORE ADR CM27+3       S20201
         STC   R5,CM5                                            S20201
*
         B     ISLF115                  EXIT,NORM RTRN
*
*                                       NO CYL OVFL - CP START OK
ISLF325  EQU   *
         MVI   39(R2),X'00'             SET R=0 IN IOBC+39
*
ISLF326  MVC   38(1,R2),DCBFIRSH+1      SET IOBC+38 TO TRACK FROM FIRSH
*                                       CM5 OK
         B     ISLF115                  EXIT,NORM RTRN
         EJECT
***********************************************************************
* CHART F4 - APPENDAGE, CP21 CHANNEL END                              *
***********************************************************************
*
ISLF401  LA    R7,ISLIXLT               C(R7)=A(IXLT)
         L     R9,0(R10)                C(R9)=A(AREA Y)
         LR    R6,R7                    C(R6)=A(IXLT)=A(LEV1)
         L     R5,ISL1                  C(R5)=0001 FOR CURRENT LEVEL
         L     R3,24(R10)               C(R3)=A(CP21)
         TM    20(R3),X'80'             TEST CQ42 FOR DC
         BC    8,ISLF115                B IF OFF = EOF, NORMAL RETURN
*
* LOCATE CURRENT LEVEL IN IXLT
*
         TM    0(R7),X'20'              TEST LEVEL IND BIT-2
         BC    1,ISLF403                B IF LEVEL 1, CYL IX
ISLF402  A     R7,ISL26                 STEP TO NEXT LEVEL IN IXLT
         A     R5,ISL1                  C(R5)=CURRENT LEVEL
         TM    0(R7),X'20'              TEST LEVEL IND BIT-2
         BC    8,ISLF402                B IF NOT THIS LEVEL (LOOP)
*
* MASTER INDEX, TEST FOR DUMMY ENTRY
*
         TM    0(R7),X'40'              TEST LEVEL IND BIT-1
         BC    1,ISLF601                B IF MST DUMMY
         B     ISLF410
*
* CYLINDER INDEX, TEST FOR DUMMY ENTRY
*
ISLF403  TM    0(R7),X'40'              TEST LEVEL IND BIT-1
         BC    1,ISLF501                B IF CYL DUMMY
*
         EJECT
*
* NORMAL ENTRY APPENDAGE ROUTINE, CYLINDER OR MASTER INDEX
*            * R6 POINTS TO CYLNDER IXLT LEVEL *
*            * R7 POINTS TO CURRENT IXLT LEVEL *
*
* TEST R IN COUNT FIELD IN AREA Y FOR END OF TRACK
*
ISLF410  CLC   4(1,R9),DCBHIRCM         TEST R VS HI R
         BNE   CONTINUE                 BRANCH NOT EQUAL          21347
         CLI   16(R7),X'00'             IS R OF SX = 0 ?          21347
         BE    ISLF420                  BRANCH IF EQUAL           21347
         B     ISLF415                                            21347
CONTINUE EQU   *                                                  21347
*
*                                       NOT END OF TRACK
* REPLACE R OF STEPPING COUNT BY R OF Y
*
         MVC   16(1,R7),4(R9)           R OF SX = R OF Y
         TM    IOBFLAGS,X'12'           ARE WE IN CLOSE           VLR
         BC    1,ISLF420                B IF ON = CLOSE
*
* TEST HH OF STEPPING COUNT FOR END OF CYLINDER
*
         MVC   TSTWK1C(1),15(R7)        GET CURRENT TRK FROM IXLT
         MVC   TSTWK1C+2(1),23(R6)      GET HI TRK FROM IXLT
         NC    TSTWK1C(1),ISLAREAZ+87   REDUCE CURRENT TO TRACK
         NC    TSTWK1C+2(1),ISLAREAZ+87  REDUCE HIGH TO TRACK
         CLC   TSTWK1C(1),TSTWK1C+2     CURRENT TRACK VS HI TRACK
         BNE   ISLF450                  B IF NOT END OF CYLINDER - EXIT
*
*                                       LAST TRACK ON CYLINDER
*
* TEST R OF STEPPING COUNT FOR NEXT-TO-LAST R ON LAST TRACK
*
         SR    R3,R3
         IC    R3,DCBHIRCM              C(R3)=HI R
         S     R3,ISL1                  C(R3)=HI R -1
         SR    R4,R4
         IC    R4,16(R7)                C(R4)=R OF SX
         CR    R3,R4                    TEST HI R -1 VS R OF SX
         BNE   ISLF450                  B IF NOT NEXT-TO-LAST R  - EXIT
*
* NEXT TO LAST R ON LAST TRACK OF A CYLINDER HAS BEEN WRITTEN FOR THIS
* LEVEL INDEX. THE LAST SLOT IN A HI-LEVEL INDEX ON A GIVEN CYLINDER
* MUST CONTAIN A DUMMY ENTRY. SET DUMMY SW ON FOR THIS LEVEL INDEX SO
* NEXT WRITE WILL PRODUCE DUMMY ENTRY.
*
         OI    0(R7),X'40'              SET LEVEL IND BIT-1 ON
         B     ISLF420
*
*
* LAST R WRITTEN WAS END OF TRACK- STEP STEPPING COUNT TO NEXT TRACK
*
ISLF415  MVI   16(R7),X'00'             R OF SX = 0
         LH    R3,14(R7)                C(R3)=HH OF SX
         A     R3,ISL1                  C(R3)=HH+1
         STH   R3,14(R7)                C(SX)=MBBCCHHR, HH=HH+1, R=0
*
* TEST FOR ANY HIGHER LEVEL INDEXES
*
ISLF420  TM    0(R7),X'80'              TEST LEVEL IND BIT-0
         BC    1,ISLF450
*
* HIGHER LEVEL INDEX PRESENT, STEP TO NEXT LEVEL IN IXLT
*
         NI    0(R7),X'DF'              TURN BIT-2 IN CURR LEV IND OFF
         A     R7,ISL26                 STEP R7 TO REF NEXT LEVEL
         A     R5,ISL1                  C(R5)=CURRENT LEVEL
         OI    0(R7),X'20'              TURN BIT-2 IN CURR LEV IND ON
*
* CONSTRUCT COUNT FOR MASTER INDEX ENTRY IN AREA Y, Y+0
*
         MVC   0(4,R9),12(R7)           COUNT = CCHH FROM IXLT SX
         SR    R3,R3
         IC    R3,16(R7)                C(R3)=R FROM IXLT SX, 00NN
         A     R3,ISL1                  C(R3)=R+1
         STC   R3,4(R9)                 COUNT = CCHHR WITH R=R+1
*
* CONSTRUCT DATA FOR MASTER INDEX ENTRY IN AREA Y, Y+8
*
         STC   R5,16(R9)                STORE LEVEL IN F-BYTE 00000III
*
         TM    0(R7),X'40'              TEST IXLTIND BIT 1 (DUMMY SW)
         BC    1,ISLF430                B IF ON
*
*                                       DUMMY SW OFF
*  A. NORMAL DATA
*
         MVC   8(7,R9),IOBDADAD         DATA=MBBCCHH FROM IOBB+32
         MVI   15(R9),X'00'             DATA=MBBCCHHR WITH R=0
*                                       DATA=MBBCCHHRF, F=00000III
         MVC   TSTWK1C(4),IOBDADAD+3    MOVE CCH FROM IOBB+32
         MVC   TSTWK2C(4),12(R7)        MOVE CCH FROM IXLT SX
         MVI   TSTWK1C+3,X'00'          ZERO TRACK NO.
         MVI   TSTWK2C+3,X'00'          ZERO TRACK NO.
ISLF421  CLC   TSTWK1C(4),TSTWK2C       CC IN IOBB+32 VS CC IN SK
         BNE   ISLF4215                 BR IF NOT EQUAL
*
*                                       CCS EQUAL
         MVI   17(R9),X'1B'             DATA=MBBCCHHRFP WITH P=1B
         B     ISLF424
*
*                                       UNEQUAL
ISLF4215 EQU   *                                                 Y02072
*
ISLF422  MVI   17(R9),X'0B'             DATA=MBBCCHHRFP WITH P=0B
*
*                                       SET CQ43 (CP21) TO ADDRESS KEY
*                                       OF LAST RECORD IN LAST BUFFER
*
ISLF424  L     R10,24(R10)              C(R10)=A(CP21-CQ40)
         L     R4,ISLKEYAD              C(R4)=A(KEY OF LAST WR CKD)
         IC    R5,24(R10)               SAVE OP
         ST    R4,24(R10)               STORE ADDR OF KEY
         STC   R5,24(R10)               RESTORE OP
*
         B     ISLF440
*
*
*                                       DUMMY SW ON
*  B. DUMMY DATA
*
*                                       TEST CC+1 VS DEBENDCC FOR
*                                       POSSIBLE END OF INDEX EXTENT
*
ISLF430  EQU   *
         SR    R6,R6
         IC    R6,9(R7)                 C(R6) = M FROM IXLT SX, 000M
         S     R6,ISL1                  C(R6) = M-1 (M=1 FOR EXTENT 0)
         SLL   R6,4                     C(R6) = M-1 X 16 (USE AS INDX)
*
         LR    R9,R0                    RESTORE DEB POINTER
         USING IHADEB,R9                *
         L     R4,DEBFPEAD              C(R4)=A(1ST PRIM EXTENT ENTRY)
         DROP  R9
         LA    R4,0(R6,R4)              C(R4)=A(CURR INDX EXTENT ENTRY)
*
         MVC   TSTWK1C(4),10(R4)        CCHH - END OF CURRENT EXTENT
         L     R4,TSTWK1C               C(R4)=CCHH  TRK=0 FOR 2301
         MVC   TSTWK1C(4),12(R7)        CCHH FROM IXLT
         L     R3,TSTWK1C               C(R3)=CCHH   CURRENT CYL ADDR.
*
         IC    R4,ISL0                  SET TRACK=0              Y02072
*
         SRL   R3,16                    C(R3)=00CC               Y02072
         LA    R3,1(R3)                 CYL+1
         SLL   R3,16                    C(R3)=CC00   CC= CYL=1
*
         CR    R3,R4                    COMP NEXT CC VS END CC IN DEB
         BH    ISLF431                  B IF NEXT CC HIGH
*
*                                       NEXT CC IS IN CURRENT EXTENT
         L     R9,0(R10)                C(R9)=A(AREA Y)
         MVC   8(3,R9),9(R7)            DATA = MBB FROM IXLT SX
         ST    R3,TSTWK1C
         MVC   11(4,R9),TSTWK1C         DATA=MBBCCHH  CYL+1, TRK=0
         B     ISLF432
*
*                                       NEXT CC IS IN NEW EXTENT
ISLF431  SRL   R6,4                     C(R6) = M-1
         A     R6,ISL1                  C(R6) = M FOR NEXT EXTENT
         SLL   R6,4                     C(R6) = M X 16 (USE AS INDX)
         LR    R9,R0                    RESTORE DEB POINTER
         USING IHADEB,R9                *
         L     R4,DEBFPEAD              C(R4)=A(1ST PRIM EXTENT ENTRY)
         DROP  R9
         LA    R4,0(R6,R4)              C(R4)=A(NEXT INDX EXTENT ENTRY)
*
         L     R9,0(R10)                C(R9)=A(AREA Y)
         MVC   9(6,R9),4(R4)            DATA = BBCCHH FROM NEW EXTENT
         SRL   R6,4                     C(R6) = M FOR NEXT EXTENT
         A     R6,ISL1                  C(R6) = M+1 (M=1 FOR EXTENT 0)
         STC   R6,8(R9)                 DATA = MBBCCHH OF NEW EXTENT
*
ISLF432  MVI   15(R9),X'00'             DATA=MBBCCHHR, R=0
         OI    16(R9),X'28'             DATA=MBBCCHHRF, F=00101III
         MVI   17(R9),X'07'             DATA=MBBCCHHRFP WITH P=07
*
*                                       SET CQ43 (CP21) TO ADDRESS KEY
*                                       OF ALL ONES AT Y+62
*
         L     R10,24(R10)              C(R10)=A(CP21-CQ40)
         LA    R4,62(R9)                C(R4)=A(AREA Y +62)
         IC    R5,24(R10)               SAVE OP
         ST    R4,24(R10)               STORE ADDR OF KEY OF ONES
         STC   R5,24(R10)               RESTORE OP
*
*
* PLACE IXLT SX IN IOBB+32
*
ISLF440  MVC   IOBDADAD(8),9(R7)        C(IOBB+32)=C(IXLT SX), MBBCCHHR
ISLF441  EQU   *
         SR    R13,R13
         IC    R13,IOBDADAD
         SLL   R13,4
         LR    R9,R0                    RESTORE DEB POINTER
         LA    R13,32(R9,R13)           POINT TO EXTENT
         MVC   IOBDADAD+2(1),5(R13)     MOVE BB
*
*
* EXCP RETURN TO IOS - EXECUTE CP21 TO WRITE MASTER INDEX
*
         BAL   R13,EXCPRTRN             EXCP HOUSEKEEP            15924
         B     EXCP(R14)                TAKE EXCP IOS RETURN      15924
*
*
* NORMAL RETURN TO IOS - SET C-BIT OFF AND EXIT
*      * ADDR OF STATUS BYTE WITH CURRENT
*        C-BIT IS IN CP21 AT CQ41 *
*
ISLF450  L     R10,24(R10)              C(R10)=A(CP21-CQ41)
         L     R7,12(R10)               C(R7)=A(LAST SLOT SCHED)
         NI    0(R7),X'FB'              TURN S BIT 5 OFF (C-BIT)
         B     ISLF115                 *NORMAL EXIT
*
         EJECT
***********************************************************************
* CHART F5 - APPENDAGE CYL DUMMY, CP21 CHANNEL END - ENTERED FROM F4  *
***********************************************************************
*
* A DUMMY-CYLINDER INDEX ENTRY HAS JUST BEEN WRITTEN AS THE LAST ENTRY
* ON THE PREVIOUS TRACK. THE DATA PORTION OF THAT ENTRY CONTAINS THE
* CYLINDER AND TRACK ADDRESS OF THE REAL CYLINDER INDEX ENTRY. THE REAL
* CYLINDER INDEX ENTRY MUST NOW BE WRITTEN ON THE NEW TRACK.
*                   * R7 POINTS TO CYLINDER IXLT LEVEL *
*
* TURN DUMMY SW OFF
*
ISLF501  NI    0(R7),X'BF'              SET LEVEL IND BIT-1 OFF
*
*
* UPDATE STEPPING COUNT USING DUMMY DATA CONTENTS, PLACE IN IOBB+32
*
         MVC   9(8,R7),8(R9)            C(S0)=MBBCCHHR FROM AREA Y +8
         MVC   IOBDADAD(8),9(R7)        C(IOBB+32)=C(IXLT S0), MBBCCHHR
*
* CONSTRUCT COUNT FOR CYLINDER INDEX ENTRY IN AREA Y, Y+0
*
         MVC   0(4,R9),12(R7)           COUNT = CCHH FROM IXLT SX
         MVI   4(R9),X'01'              COUNT = CCHHR WITH R=1
*
* CONSTRUCT DATA FOR CYLINDER INDEX ENTRY IN AREA Y, Y+8
*
         LA    R2,ISLIOBA               C(R2)=A(IOBA)
         MVC   8(7,R9),IOBDADAD         DATA=MBBCCHH FROM IOBA+32
         MVI   14(R9),X'00'             SET TO TRACK 0
*
ISLF5017 EQU   *
         CLC   DCBFIRSH(2),ISL0         TEST HH OF FIRSH VS 00
         BNE   ISLF502                  B IF HH NOT 00
*                                       HH OF FIRSH = 00
         MVC   15(1,R9),DCBFIRSH+2      DATA = MBBCCHHR WITH R OF FIRSH
         B     ISLF503
*                                       HH OF FIRSH NOT 00
ISLF502  MVI   15(R9),X'00'             DATA = MBBCCHHR WITH R=00
ISLF503  MVI   16(R9),X'01'             DATA = MBBCCHHRF WITH F = 01
*
         SR    R6,R6
         IC    R6,9(R7)                 C(R6) = M FROM IXLT S0
         S     R6,ISL1                  C(R6) = M-1 (M=1 FOR EXTENT 0)
         SLL   R6,4                     C(R6) = M-1 X 16 (USE AS INDX)
*
         SR    R5,R5
         IC    R5,IOBDADAD              C(R5) = M FROM IOBA+32
         S     R5,ISL1                  C(R5) = M-1 (M=1 FOR EXTENT 0)
         SLL   R5,4                     C(R5) = M-1 X 16 (USE AS INDX)
*
         LR    R9,R0                    RESTORE DEB POINTER
         USING IHADEB,R9                *
         L     R4,DEBFPEAD              C(R4)=A(1ST PRIM EXTENT ENTRY)
         LA    R4,0(R6,R4)              C(R4)=A(CURR INDX EXTENT ENTRY)
         L     R3,DEBFPEAD              C(R3)=A(1ST PRIM EXTENT ENTRY)
         LA    R3,0(R5,R3)              C(R3)=A(CURR PRIM EXTENT ENTRY)
         DROP  R9
         L     R9,0(R10)                C(R9)=A(AREA Y)
*
         LA    R2,ISLIOBB
         MVC   IOBDADAD+1(2),4(R4)      MOVE DEB BB TO IOB
*
         CLC   1(3,R3),1(R4)            COMP UCB ADDRS, PRIM VS INDX
         BNE   ISLF504                  B IF NOT EQUAL
*
*                                       UCBS EQUAL
*
ISLF5039 EQU   *
         MVI   17(R9),X'0B'             DATA = MBBCCHHRFP WITH P=0B
         B     ISLF505
*
*                                       UCBS UNEQUAL
ISLF504  MVI   17(R9),X'07'             DATA = MBBCCHHRFP WITH P=07
*
*                                       SET CQ43 (CP21) TO ADDRESS KEY
*                                       OF LAST RECORD IN LAST BUFFER
*
ISLF505  L     R10,24(R10)              C(R10)=A(CP21-CQ40)
         L     R4,ISLKEYAD              C(R4)=A(KEY OF LAST WR CKD)
         IC    R5,24(R10)               SAVE OP
         ST    R4,24(R10)               STORE ADR OF KEY
         STC   R5,24(R10)               RESTORE OP
*
*
* EXCP RETURN TO IOS - EXECUTE CP21 TO WRITE CYLINDER INDEX
*
         BAL   R13,EXCPRTRN             EXCP HOUSEKEEP            15924
         B     EXCP(R14)                TAKE EXCP IOS RETURN      15924
*
         EJECT
***********************************************************************
* CHART F6 - APPENDAGE MST DUMMY, CP21 CHANNEL END - ENTERED FROM F4  *
***********************************************************************
*
* A DUMMY MASTER INDEX ENTRY HAS JUST BEEN WRITTEN AS THE LAST ENTRY
* ON THE PREVIOUS TRACK. THE DATA PORTION OF THAT ENTRY CONTAINS THE
* CYLINDER AND TRACK ADDRESS OF THE REAL MASTER INDEX ENTRY. THE REAL
* MASTER INDEX ENTRY MUST NOW BE WRITTEN ON THE NEW TRACK.
*                   * R7 POINTS TO CURRENT IXLT LEVEL *
*
* TURN DUMMY SW OFF
*
ISLF601  NI    0(R7),X'BF'              SET LEVEL IND BIT-1 OFF
*
*
* UPDATE STEPPING COUNT USING DUMMY DATA CONTENTS, PLACE IN IOBB+32
*
         MVC   9(8,R7),8(R9)            C(SX)=MBBCCHHR FROM AREA Y +8
         MVC   IOBDADAD(8),9(R7)        C(IOBB+32)=C(IXLT SX), MBBCCHHR
*
* CONSTRUCT COUNT FOR MASTER INDEX ENTRY IN AREA Y, Y+0
*
         MVC   0(4,R9),12(R7)           COUNT = CCHH FROM IXLT SX
         MVI   4(R9),X'01'              COUNT = CCHHR WITH R=1
*
* CONSTRUCT DATA FOR MASTER INDEX ENTRY IN AREA Y, Y+8
*
         STC   R5,16(R9)                STORE LEVEL IN F-BYTE 00000III
*
         MVI   15(R9),X'00'             DATA WITH R=0
*
         LR    R5,R7                    C(R5)=A(CURRENT LEVEL IXLT)
         S     R5,ISL26                 C(R5)=A(NEXT LOWER LEVEL IXLT)
         MVC   8(6,R9),9(R5)            DATA=MBBCCH OF LOWER LEVEL SX
         IC    R4,15(R5)                C5R4)=H OF LOWER LEVEL SX
         TM    0(R5),X'40'              IS DUMMY BIT ON NEXT     A30945
*                                       * LOWER LEVEL
         BO    ISLF6011                 YES - INDEX ENTRY OK     A30945
         BCTR  R4,0                     C(R4)=H-1
ISLF6011 EQU   *                        *                        A30945
         MVC   TSTWK1C(4),12(R7)        MOVE CCHH FROM IXLT SX
*
         MVI   14(R9),X'00'             SET TRACK=0
         MVI   TSTWK1C+3,X'00'          SET TRACK=0
*
ISLF6015 CLC   11(4,R9),TSTWK1C         CCH0 IN IOBB+32 VS CCH0 IN SX
         STC   R4,14(R9)                SET H BACK TO TRACK ADDRESS
         BNE   ISLF6017
*
*                                       CCS EQUAL
         MVI   17(R9),X'1B'             DATA=MBBCCHHRFP WITH P=1B
         B     ISLF604
*
*                                       UNEQUAL
ISLF6017 EQU   *
*                                       CCS UNEQUAL
ISLF602  MVI   17(R9),X'0B'             DATA=MBBCCHHRFP WITH P=0B
*
*                                       SET CQ43 (CP21) TO ADDRESS KEY
*                                       OF LAST RECORD IN LAST BUFFER
*
ISLF604  L     R10,24(R10)              C(R10)=A(CP21-CQ40)
         L     R4,ISLKEYAD              C(R4)=A(KEY OF LAST WR CKD)
         IC    R5,24(R10)               SAVE OP
         ST    R4,24(R10)               STORE ADDR OF KEY
         STC   R5,24(R10)               RESTORE OP
*
*
* EXCP RETURN TO IOS - EXECUTE CP21 TO WRITE MASTER INDEX
*
         B     ISLF441                  GO GET DEB BB
*                                          AND EXCP RETURN
*
         EJECT
***********************************************************************
* CHART F7 - APPENDAGE, ABNORMAL END                                  *
***********************************************************************
*
* TEST IOB FOR PERMENANT ERROR
*
ISLF701  TM    IOBECBAD,X'20'           TEST BIT 2 OF ECBCC       11643
         BZ    ISLF702                  B IF PERMANENT ERROR      11643
         B     ISLF115                  NON-PERM ERR = NORMAL RETURN
*
* TEST IF CP18 HUNG ON A WR CKD
*
ISLF702  L     R3,IOBCSW                C(R3)=COMMAND ADDR+8     S20201
         LA    R3,0(R3)
         S     R3,ISL8                  C(R3)=COMMAND ADDR OF LAST CCW
         L     R4,12(R10)               C(R4)=A(CP18)
         LA    R4,24(R4)                C(R4)=A(CP18, 1ST WR CKD)
         L     R5,16(R10)               C(R5)=A(CP19)
         S     R5,ISL16                 C(R5)=RA(CP18, LAST WR   S20201
*                                       CKD)                     S20201
         CR    R3,R4                    LAST CCW VS CP18 CCW 1
         BL    ISLF710                  B IF NOT IN CP18
         CR    R3,R5                    LAST CCW VS CP18 CCW N
         BH    ISLF710                  B IF NOT IN CP18
*
* CP18 HUNG ON A WR CKD - GET ADDR OF LAST BUFFER WRITTEN
*
         TM    0(R3),X'1D'              TEST FOR CCW WITH OP CODE
         BC    1,ISLF703                B IF FOUND
         S     R3,ISL8                  BACK UP 1 CCW
         TM    0(R3),X'1D'              TEST FOR CCW WITH OP CODE
         BC    1,ISLF703                B IF FOUND
         S     R3,ISL8                  BACK UP 1 CCW
*
ISLF703  L     R6,0(R3)                 C(R6)=DATA ADDR OF LAST WR CKD
         LA    R6,0(R6)
         B     ISLF711
*
ISLF710  SR    R6,R6                    ERROR NOT IN CP18, C(R6)=0
*
ISLF711  NI    IOBFLAG1,X'FB'           TURN OFF EXCEPTION FLAG   15924
         OI    DCBEXCD1,X'04'           SET EXCD1 BIT 5 ON = WR ERROR
         STCM  R6,LO3BYTES,ISLVPTRA+1   SAVE A(BAD BUFFER),     XA04602
*                                       KEEP FTIW FLAGS         XA04602
         LA    R3,IOBS                  C(R3)=A(BUF 1 STATUS)
*
ISLF712  NI    0(R3),X'B0'              TURN BIT 1 OFF
         OI    0(R3),X'20'              TURN BIT 2 ON
         A     R3,ISL4                  BUMP R3 TO NEXT SLOT
         C     R3,ISLBUFN               TEST FOR NTH SLOT
         BNH   ISLF712                  LOOP UNTIL ALL STATUS = 01
*
         B     ISLF125
*
         SPACE 4
*
* CONSTANTS
*
ISL0     DC    F'0000'
ISL1     DC    F'0001'
ISL4     DC    F'0004'
ISL8     DC    F'0008'
ISL10    DC    F'0010'
ISL16    DC    H'16'                    CONSTANT                 S20201
ISL26    DC    F'0026'
ISLFF    DC    F'8888'
KEY0     EQU   ISL0                     STORAGE PROTECT KEY ZERO Y02072
*
PATCH    DC    XL((*-IGG019GC)/20)'00'  ZEROED PATCH AREA        Y02072
*
         END
