         TITLE 'IGG0192C - ISAM OPEN, THIRD LOAD'
IGG0192C CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192C                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, THIRD LOAD                            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 01                                *
*                                                                     *
* FUNCTION = IF INDEPENDENT OVERFLOW ON A DIFFERENT DEVICE THAN       *
*            PRIME IS ON, RESET DCBDEVT TO REFLECT THE DEVICE TYPE    *
*            FOR PRIME DATA.                                          *
*                                                                     *
*            IF NOT VIRTUAL = REAL ENVIRONMENT AND BISAM SPECIFIED,   *
*            LOAD BISAM CHANNEL PROGRAM SPLITTING APPENDAGE IGG019JG. *
*                                                                     *
*            IF OPENED FOR LOAD MODE TRANSFER CONTROL TO NEXT         *
*            EXECUTOR, ELSE TEST FOR DISP = SHR.  IF OPENED WITH      *
*            SHARED DISP, SEARCH FOR FIELD AREA FOR DATA SET BEING    *
*            OPENED.  IF A FIELD AREA EXISTS FOR THE DATA SET BEING   *
*            OPENED, INCREMENT TOTAL USE COUNT BY ONE.  IF FIRST DCB  *
*            FROM THIS ADDRESS SPACE, ADD NEW ASID AND ASID USE COUNT.*
*            IF NO FIELD AREA IS FOUND FOR THIS DATA SET, OBTAIN CORE *
*            FROM SUBPOOL 241 (CSA) IN PROTECT KEY 5 FOR A FIELD AREA *
*            AND INITIALIZE IT.                                       *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES                      *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT                              *
*                                                                     *
* MODULE-TYPE = ISAM OPEN EXECUTOR                                    *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 992 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = REENTRANT, PRIVILEGED                               *
*                                                                     *
* ENTRY-POINT = IGG0192C                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0192B      *
*              IN STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.         *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED ON ENTRY ARE                          *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = TRANSFERS CONTROL IN STORAGE PROTECT KEY 5 TO         *
*               IGG01921 IF LOAD MODE, ELSE TO IGG01920 IF FIXED      *
*               RECORD FORMAT OR IGG01950 IF VARIABLE FORMAT.         *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 IHAPSA - LOW CORE ADDRESSABILITY                    *
*                                                                     *
*    CONTROL-BLOCKS = ASCB, CVT, DCB COPY, DEB, F2 DSCB, JFCB, DCBFA, *
*                    AND TCB.                                         *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = GETMAIN, LOAD, MODESET, SETLOCK, AND XCTL                  *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*          RELEASE OS/VS2-02 DELETIONS                                *
*                                                               YM01159
*                                                               YM06899
*                                                               YM07856
*                                                               YM08221
*                                                                     *
***********************************************************************
         EJECT
FORCORE  DSECT
         IECDSECT
TCB      IKJTCB
         EJECT
         IHAPSA
         EJECT
         IHAASCB
         EJECT
TIOT     DSECT
TIOELNGH DS    CL1
TIOESTTA DS    CL1                      STATUS -A-
TIOERLOC DS    CL2                      REL LOC OF POOL
TIOEDDNM DS    2F
TIOEJFCB DS    1F                       JFCB DISL ADDRESS
TIOESTTB DS    0CL1
TIOEFSRT DS    CL4
         DS    CL1
IHADEB   IGGDEBD
         EJECT
         CVT   DSECT=YES
         SPACE 4
         DCBD  DSORG=(IS)
         EJECT
DCBFA    IGGDCBFA
         SPACE 2
         SPACE 3
IHADSCB  DSECT
DSCBK1   DS    BL1                      X'02'
DSCBK2   DS    CL7                      DCBFTMI2
DSCBK3   DS    CL5                      DCBLEMI2
DSCBK4   DS    CL7                      DCBFTMI3
DSCBK5   DS    CL5                      DCBLETI
DSCBK6   DS    CL19                     SPARE
DSCBD1   DS    CL1                      EBCDIC '2'
DSCBD2   DS    CL1                      DCBNLEV
DSCBD3   DS    CL1                      DCBNTM
DSCBD4   DS    CL3                      DCBFIRSH
DSCBD5   DS    CL2                      DCBLDT
DSCBD6   DS    CL1                      DCBCYLOF
DSCBD7   DS    CL1                      DCBHIRCM
DSCBD8   DS    CL1                      DCBHIRPD
DSCBD9   DS    CL1                      DCBHIROV
DSCBD10  DS    CL1                      DCBHIRSH
DSCBD11  DS    CL2                      RESERVED
DSCBD12  DS    CL2                      DCBTDC
DSCBD13  DS    CL3                      DCBRORG3
DSCBD14  DS    CL2                      DCBNCRHI
DSCBD15  DS    CL1                      DCBNTHI
DSCBD16  DS    CL4                      DCBNREC
DSCBD17  DS    BL1                      DCBST
DSCBD18  DS    CL7                      DCBFTCI
DSCBD19  DS    CL7                      DCBFTMI3
DSCBD20  DS    CL7                      DCBFTHI
DSCBD21  DS    CL08                     DCBLPDA
DSCBD22  DS    CL5                      LAST TRACK IX ENTRY ADDR
DSCBD23  DS    CL5                      LAST CYLDR IX ENTRY ADDR
DSCBD24  DS    CL5                      LAST MASTR IX ENTRY ADDR
DSCBD25  DS    CL8                      DCBLIOV
DSCBD26  DS    CL2                      DCBNBOV
DSCBD27  DS    CL2                      DCBRORG2
DSCBD28  DS    CL2                      DCBNOREC
DSCBD29  DS    CL2                      DCBRORG1
DSCBD30  DS    CL3                      SPARE
DSCBD31  DS    CL5                      PTR TO FORMAT 3 DSCB
         SPACE 4
CHAIN    DSECT
LSTCHAIN DS    F
         EJECT
IGG0192C CSECT
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        WORK REGISTER
RDEB     EQU   1                        BASE REGISTER FOR USERS DEB
R2       EQU   2                        WORK REGISTER
RDCB     EQU   2                        BASE REG FOR DCB
R3       EQU   3                        WORK REGISTER
RCORE    EQU   4                        BASE REG FOR OPEN WORK AREALE
RPAR     EQU   5    *                   ADDRESS OF PARAMETER TABLE
RWTG     EQU   6    *                   ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7    *                   CURRENT PARAMETER ENTRY
RWTGC    EQU   8    *                   CURRENT WHERE-TO-GO ENTRY
RBASE    EQU   9                        BASE REGISTER
RA       EQU   10                       WORK REGISTER
RB       EQU   11                       WORK REGISTER
RC       EQU   12                       WORK REGISTER
RD       EQU   13                       WORK REGISTER
RE       EQU   14                       WORK REGISTER
RF       EQU   15                       WORK REGISTER
*
*        EQUATES USED IN MODULE
*
DSORG    EQU   26
MACRF    EQU   42
WKPTR1   EQU   228
WKPTR2   EQU   232
WKPTR3   EQU   236
WKPTR5   EQU   244                                               A37175
OFLGS    EQU   48                                                A37175
JFCBSHR  EQU   X'08'                    JFCB INDICATOR, DISP=SHR A47331
NULL     EQU   0                        FOR ZERO DISPLACEMENT    A47331
SHR      EQU   X'80'                    SHR INDICATOR FOR DCB    A47331
INCR     EQU   X'01'                    CONSTANT FOR INCREMENT   A47331
CSA241   EQU   241                      CSA SUBPOOL 241          Y02072
KEYZERO  EQU   0                        CHANGE TO KEY ZERO       Y02072
LOADMODE EQU   X'18'                    LOAD INDICATOR
SCANMODE EQU   X'40'                    SCAN INDICATOR
PAGE     EQU   2048                     PAGE LENGTH
VIRTUAL  EQU   X'80'                    VIRTUAL INDICATOR
DWORD    EQU   3                        DOUBLE WORD
THREE    EQU   3                        CONSTANT
FOUR     EQU   4                        CONSTANT
TWENTY4  EQU   24                       CONSTANT
ID       EQU   6                        DISP TO ID IN MOD NAME
K2       EQU   2                        CONSTANT
L5       EQU   5                        LENGTH
ONE      EQU   1                        CONSTANT
ZERO     EQU   0                        CONSTANT
RPSID    EQU   X'E0'                    RPS IDENTIFIER
         EJECT
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING IHADEB,RDEB
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         L     RDCB,0(RPARC)            RDCB = ADR OF DCB
         L     RCORE,4(RWTGC)           RCORE = ADR OF OPEN WK AREA
*
*
         L     RC,DSCCORE               RC=ADR OF FORMAT 2 DSCB
         CLI   52(RC),X'00'             WAS CYLOFL ALLOCATED     M0657
         BE    NOCYL                    NO - CONTINUE            M0657
         OI    DCBOPTCD,X'08'           USE CYLOFL FIRST         M0657
NOCYL    CLC   126(2,RC),CONZERO        ANY INDEPENDENT OVERFLOW M0657
         BE    NOIND                    NO - CONTINUE            M0657
         OI    DCBOPTCD,X'10'           USE INDEPENDENT OVERFLOW M0657
NOIND    EQU   *                                                 M0657
         MVC   DCBST(1),71(RC)          STATUS FROM FMT2 DSCB     P4701
         L     RCORE,4(RWTGC)           ADR OF OPEN WK AREA
*
*        IF INDEPENDENT OVERFLOW ON DIFFERENT DEVICE THEN DCBDEVT AND
*        DCBHMASK MUST BE RESET TO REFLECT DEV TYPE FOR PRIME DATA
*
         L     RDEB,DCBDEBAD            GET PTR TO DEB
         L     R3,DEBFPEAD              PTR TO PRIME EXTENT
         L     R3,0(R3)                 PTR TO UCB
         MVC   DCBDEVT(1),19(R3)        RESET DEVT
         MVI   DCBHMASK,X'FF'           SET MASK FOR LOW ORDER   A53128
*                                       HEAD BYTE                A53128
* SET UP OVERFLOW DEVICE TYPE, DEFAULT = PRIME DEVICE TYPE
         MVC   DCBOVDEV,DCBDEVT         ASSUME NO IND OVFL       M0673
         L     R3,DEBFOEAD              FIND THE FIRST           M0673
         LA    R3,0(R3)                 * OVERFLOW EXTENT        M0673
         LTR   R3,R3                    DOES IT EXIST            M0673
         BZ    NOINDOV                  NO - TAKE DEFAULT TYPE   M0673
         L     R3,0(R3)                 PT TO UCB                M0673
         MVC   DCBOVDEV,19(R3)          GET DEVICE TYPE          M0673
NOINDOV  EQU   *                                                 O19112
         SPACE 4
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   IF NOT VIRTUAL = REAL AND BISAM, LOAD BISAM CHANNEL PGM         *
*   SPLITTING MODULE.  PUT ITS ADDRESS IN THE AVT AND ITS ID IN     *
*   THE DEB SUBROUTINE LOAD LIST.                                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         L     R3,DEBTCBAD              TCB ADDRESSABILITY
         USING TCB,R3                   *
         SPACE 1
         L     RA,DEBAPPAD              ADDRESSABILITY ON AVT
         USING DEBAVT,RA                *
         MVI   DEBSIOA,ZERO             MARK AS NOT VIRTUAL
         TM    TCBFLGS6,TCBRV           IS IT VIRTUAL = REAL
         BO    INITSIO                  BR YES, NO CP SPLITTING YM08221
*
*   TEST MODE TO DETERMINE IF BISAM MODULE SHOULD BE LOADED
*
         OI    DEBSIOA,VIRTUAL          MARK IT AS VIRTUAL       Y02072
         TM    DCBMACF2,LOADMODE        IS IT LOAD               Y02072
         BNZ   NOTVIRT                  BR YES - CLEAR DEB EXT  YM08221
         SPACE 1
         TM    DCBMACRF,SCANMODE        IS IT SCAN MODE
         BO    NOTVIRT                  BR YES - CLEAR DEB EXT  YM08221
         SPACE 1
         LA    R3,IGG019JG              IS BISAM - LOAD CP       Y02072
*                                       SPLITTING MODULE         Y02072
         SPACE 1
         L     RB,CVTPTR                CVT ADDRESS             YM01159
         USING CVT,RB                   CVT ADDRESSABILITY      YM01159
         L     RB,CVTLINK               ADDRESS OF LINKLIB DCB  YM01159
         DROP  RB                       END CVT ADDRESSABILITY  YM01159
*
         MVC   ID(L'IGG019JG,RWTG),0(R3) BUILD MODULE NAME       Y02072
         SPACE 1
         LOAD  EPLOC=(RWTG),DCB=(RB)    LOAD IT
         SPACE 1
*   PUT ADDRESS AND LENGTH OF MODULE IN AVT.
         ST    R0,DEBSIOA               ADDRESS OF CP SPLIT APPENDAGE
         OI    DEBSIOA,VIRTUAL          MARK IT AS VIRTUAL
         L     R1,DCBDEBAD              RESTORE DEB ADDRESS
         DROP  RA
         SPACE 1
*   PUT PGFX ID IN THE N OR N-1 SLOT OF THE DEB LOAD LIST
         SPACE 1
         SR    RA,RA                    CLEAR
*   ALLOW FOR ISAM DEPENDANT SECTION - SYSTEM INTEGRITY S21045 *
         L     RB,DEBEXPTR              ISAM DEPENDANT SECTION
         IC    RA,BISAMLEN              LENGTH ISAM SECTION      Y02072
         AR    RB,RA                    ALLOW FOR ISAM SECTION
         IC    RA,DEBNMSUB              NUMBER OF SUB RTNS LOADED
         AR    RB,RA                    ALLOW TWO BYTES FOR EACH ID.
         AR    RB,RA                    *
*   ALLOW FOR POSSIBLE RPS ID
         SH    RB,HWOF3                 BACK UP TO RPS ID.
         TM    DEBRPSID,RPSID           IS THIS AN RPS DATA SET
         BNZ   RPS001                   RPS - USE N-1 SLOT
         LA    RB,K2(RB)                NOT RPS - USE N SLOT
RPS001   EQU   *                        *
*   MOVE CORRECT ID IN.
         MVC   0(K2,RB),0(R3)           *
         B     NOTVIRT                  INIT FOR NEXT LOAD       Y02072
         SPACE 1
INITSIO  EQU   *                        INIT SIO PTR IN AVT     YM08221
         USING DEBAVT,RA                AVT ADDRESSABILITY      YM07856
         L     RB,CVTPTR                ADDRESS OF CVT          YM07856
         USING CVT,RB                   CVT ADDRESSABILITY      YM07856
         LA    RB,CVTBRET               ADDR OF BR 14 IN CVT    YM07856
         DROP  RB                       END CVT ADDRESSABILITY  YM07856
         ST    RB,DEBSIOA               ADDR BR 14 TO DEB SIO   YM07856
         DROP  RA                       END DEB AVT ADDRESS     YM07856
         SPACE 1
NOTVIRT  EQU   *                        *
         MVC   0(L'LOAD21,RWTGC),LOAD21 INITIAL WTG TO IGG01921  Y02072
         TM    DCBMACRF+1,X'18'          IS IT LOAD MODE
         BM    LOADMRG                  YES, BRANCH              A52029
         L     RCORE,4(RWTGC)           RCORE = ADR OF OPEN WK AREA
***********************************************************************
*
*        TEST FOR DISP = SHR, IF NOT WILL EXIT
*
         TM    JFCBIND2,JFCBSHR         TEST DISP OF DATA SET    A47331
         BNO   FININIT                  IF NOT, NO FIELD AREA    A47331
****
*    THIS DATA SET OPENED TO SHR.  WILL SEARCH FOR ALL ISAM
*        FA'S TO FIND ONE OPENED ON THE SAME DATA SET
****
         STM   R0,RF,DXCCW1             SAVE REGISTERS           Y02072
         MODESET KEYADDR=KEY0,WORKREG=13 CHANGE TO KEY ZERO      Y02072
*
*    OBTAIN THE LOCAL LOCK, RELEASED AT FLCL IN THIS MODULE.
*
GLCL     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,  OBTAIN THE      Y02072*
               RELATED=(DCBFA,IGG0192C) *        LOCAL LOCK      Y02072
*
*    OBTAIN THE CMS LOCK, FREED AT FCMS IN THIS MODULE.
*
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,    OBTAIN CROSS    Y02072*
               RELATED=(DCBFA,IGG0192C) *        MEMORY LOCK     Y02072
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY   Y02072
*
         L     R3,CVTPTR                ADDR OF CVT              A47331
         USING CVT,R3                                            A47331
         L     R3,CVTEXT1               ADDR OF CVT EXTENSION    A47331
         USING CVTXTNT1,R3
         L     RA,CVTFACHN              ADDR OF FIRST FA         A47331
         LA    R3,CVTFACHN              ADDR OF CHAIN PTR TO FA  A47331
         LTR   RA,RA                    TEST IF ANY FIELD AREAS  A47331
         BZ    ENDSRCH                  NO, CREATE ONE           A47331
***********************************************************************
*        SEARCH FA CHAIN FOR EXISTING FA FOR THIS DATA SET
*
         USING DCBFA,RA
CHNSRCH  CLC   DFAID,DCBWKPT3           SAME DATA SET ID AS DCB  A47331
         BE    FOUNDFA                  YES USE THIS FIELD AREA  A47331
         LA    R3,DFACHAIN              NO, UPDATE CHAIN AREA PT A47331
         CLC   DFACHAIN(L'EOC),EOC      ANY MORE FA'S IN CHAIN   Y02072
         BE    ENDSRCH                  B IF END OF CHAIN TO     A47331
*                                       CREATE FIELD AREA        A47331
         L     RA,DFACHAIN              UPDATE FA ADDR           A47331
         B     CHNSRCH                  B TO CONTINUE SEARCH     A47331
***********************************************************************
*
*        IF NO FIELD AREA FOUND FOR THIS DATA SET, WILL
*        GET AREA FOR FIELD AREA AND INITIALIZE IT.
*
***********************************************************************
         USING CHAIN,R3
ENDSRCH  LA    RC,DFASIZE(R0)           SIZE OF FA FOR GETMAIN   A47331
         BAL   RWTG,GETCORE             GET CORE FOR FIELD AREA  Y02072
         LTR   RA,RA                    THIS FIRST FA IN CHAIN   Y02072
         BNZ   ADDFA                    BR NO                    Y02072
         MODESET KEYADDR=KEY0,WORKREG=13  CHANGE TO KEY ZERO     Y02072
         ST    R1,LSTCHAIN              ADDR OF DCBFA TO CVT     Y02072
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY   Y02072
         B     CLEARFA                  CLEAR FIELD AREA         Y02072
*                                       DCBFA FIRST IN CHAIN,    Y02072
ADDFA    EQU   *                        ADD FA TO CHAIN          Y02072
         ST    R1,LSTCHAIN              SET LAST CHAIN PTR FOR   Y02072
*                                       THIS FIELD AREA          Y02072
         DROP  R3                       END FA PTR USING         Y02072
CLEARFA  LR    RA,R1                    FA ADDRESSABILITY        Y02072
         XC    DCBFA(DFASIZE),DCBFA     ZERO FA                  A47331
         MVC   DFAID,DCBWKPT3           MOVE IN DATA SET ID      A47331
         MVC   DFACHAIN(L'EOC),EOC      SET NEW END OF CH IND    Y02072
*
***********************************************************************
*
*    COMPLETE  FIELD AREA  INITIALIZATION.
*
***********************************************************************
FOUNDFA  LA    RA,NULL(RA)             CLRAR HIGH ORDER BYTE     A47331
         ST    RA,DCBWKPT5             SET FA ADDR IN DCB        A47331
         OI    DCBWKPT5,SHR            SET SHR INDICATOR         A47331
         LH    RB,DFAUSE               GET USE COUNT             A47331
         LA    RB,INCR(RB)             INCREMENT USE COUNT       A47331
         STH   RB,DFAUSE                                         A47331
         L     RDEB,DCBDEBAD            PROTECTED DEB ADDRESS    Y02072
         L     RB,DEBEXPTR              PTR TO ISAM DEB EXT.     Y02072
         USING DEBEXT,RB                DEB EXT. ADDRESSABILITY  Y02072
         L     RA,DCBWKPT5              PTR TO FIELD AREA        Y02072
         ST    RA,DEBDCBFA              FIELD AREA ADDR TO DEB   Y02072
         DROP  RB                       END USING ON DEB EXT.    Y02072
*
**********************************************************************
*    INCREMENT ADDRESS SPACE USE COUNT.  IF ANOTHER DCB IS OPEN TO
*    THE DATA SET FROM THIS ASID, INCR THE APPROPRIATE USE COUNT BY
*    ONE.  IF THIS IS THE FIRST DCB IN THIS ADDRESS SPACE,STORE THE
*    ASID IN THE FIRST AVAILABLE USER ASID FIELD IN THE FIELD AREA
*    OR EXTENSION AND SET THE USE COUNT TO ONE.
*
         USING PSA,R0                   LOW CORE ADDRESSABILITY  Y02072
         L     RB,PSAAOLD               ASCB ADDRESS             Y02072
         USING ASCB,RB                  ASCB ADDRESSABILITY      Y02072
         LH    RB,ASCBASID              ADDRESS SPACE ID         Y02072
         DROP  RB                       DROP USING ON REGISTER   Y02072
*
         LA    RA,DFAASID1              ADDR OF USER ASID FIELD  Y02072
         USING DFAASID,RA               USER ASID'S FIELDS       Y02072
NOASIDS  LA    R3,DFANOIDS              NO. ASIDS IN FIELD AREA  Y02072
*                                       AND FA EXTENSIONS        Y02072
         B     ASIDSRCH                 SEARCH FA FOR THIS ASID  Y02072
*
NXTASID  LA    RA,DFANXPTR(RA)          PT TO NEXT ASID ENTRY    Y02072
ASIDSRCH LH    RC,DFAASIDX              USER ASID                Y02072
         LTR   RC,RC                    IS THERE AN ASID         Y02072
         BZ    NOASID                   BR IF ZERO, NO ASID      Y02072
         CR    RC,RB                    ASID EQ THIS ADDR SPACE  Y02072
         BE    FNDASID                  BR IF THIS ADDR SPACE    Y02072
         BCT   R3,NXTASID               BR IF MORE ASID'S        Y02072
*
         LR    R3,RA                    SAVE ADDR ON CURR ENTRY  Y02072
         DROP  RA                       ESTAB NEW ADDRESSABILITY Y02072
         USING DFAASID,R3               ON CURRENT ENTRIES       Y02072
*
         L     RA,DFAPTR                PTR TO FIELD EXTENSION   Y02072
         LTR   RA,RA                    ANOTHER EXTENSION EXIST  Y02072
         BNZ   NOASIDS                  BR IF EXTENSION EXISTS   Y02072
*
         LA    RC,DFEXSIZE              SIZE OF FA EXTENSION     Y02072
         BAL   RWTG,GETCORE             GET CORE FOR EXTENSION   Y02072
*
         ST    R1,DFAPTR                ADD EXTENSION TO CHAIN   Y02072
         DROP  R3                       ESTABLISH ADDRESSABILITY Y02072
         USING DFAASID,RA               * ON NEW EXTENSION FLDS  Y02072
         LR    RA,R1                    FA EXTENSION ADDR        Y02072
         USING DCBFAEX,R1               FA EXTENSION
         XC    DCBFAEX(DFEXSIZE),DCBFAEX CLEAR EXTENSION         Y02072
         DROP  R1                       DROP USING ON REGISTER   Y02072
*
NOASID   STH   RB,DFAASIDX              STORE ASID               Y02072
FNDASID  LH    R1,DFAUSEX               ASID USE COUNT           Y02072
         LA    R1,DFAINCR(R1)           INCR USE COUNT BY ONE    Y02072
         STH   R1,DFAUSEX               STORE USE COUNT          Y02072
*
*    RELEASE CMS AND LOCAL LOCKS
*
         MODESET KEYADDR=KEY0,WORKREG=13  CHANGE TO KEY ZERO     Y02072
*
*    RELEASE CMS LOCK, OBTAINED AT GCMS IN THIS MODULE.
*
         SETLOCK RELEASE,TYPE=CMS,RELATED=(DCBFA,IGG0192C)       Y02072
*
*    RELEASE THE LOCAL LOCK, OBTAINED AT GLCL IN THIS MODULE.
*
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(DCBFA,IGG0192C)     Y02072
*
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY   Y02072
         LM    R0,RF,DXCCW1             RESTORE REGISTERS        Y02072
         B     FININIT                  FINISH MERGE TO DCB      Y02072
*
*    SUBROUTINE FOR GETMAIN, LENGTH IS IN REGISTER RC (12)
*
GETCORE  LR    RPAR,RCORE               SAVE WORK AREA ADDRESS   Y02072
         ST    RPARC,DXCCW9             ADDR CURR PARAM ENTRY    Y02072
         ST    R3,DXCCW10               SAVE FA CHAIN PTR        Y02072
         L     RCORE,DCBDEBAD           DEB ADDRESS              Y02072
         USING IHADEB,RCORE             DEB ADDRESSABILITY       Y02072
         L     RCORE,DEBTCBAD           TCB ADDRESS              Y02072
         DROP  RCORE                    DROP USING ON REGISTER   Y02072
         USING PSA,R0                   LOW CORE ADRESSABILITY   Y02072
         L     RPARC,PSAAOLD            ASCB ADDRESS             Y02072
         MODESET KEYADDR=KEY0,WORKREG=13  CHANGE TO KEY ZERO     Y02072
*
         GETMAIN RU,LV=(RC),SP=CSA241,KEY=05,BRANCH=YES          Y02072
*
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY   Y02072
         LR    RCORE,RPAR               RESTORE WORK AREA ADDR   Y02072
         USING FORCORE,RCORE            WORK AREA ADDRESSABILITY Y02072
         L     RPARC,DXCCW9             AND CURR PARAM ENTRY     Y02072
         L     R3,DXCCW10               RESTORE FA CHAIN PTR     Y02072
         BR    RWTG                     RETURN                   Y02072
*
**********************************************************************
*
FININIT  EQU   *
*   MERGE FORMAT2 DSCB FIELDS THAT WON'T BE VALIDATED FOR BISAM
*   AND QISAM SCAN.
         USING FORCORE,RCORE            WA ADDRESSABILITY        Y02072
         L     R3,DSCCORE               ADDRESSABILITY ON FORMAT2
         USING IHADSCB,R3               *
         MVC   DCBNLEV,DSCBD2           MOVE VARIOUS FIELDS FROM S20201
*                                       DSCB                     S20201
         MVC   DCBNTM,DSCBD3                                     S20201
         MVC   DCBFIRSH,DSCBD4           TO DCB                  S20201
         MVC   DCBLDT,DSCBD5             * CONTINUE MERGING      S20201
         MVC   DCBCYLOF,DSCBD6           *                       S20201
*        MOVE FIELDS FROM DSCBD7, DSCBD8, DSCBD9 AND DSCBD10
*        TO DCBHIRCM, DCBHIRPD, DCBHIROV, AND DCBHIRSH.
         MVC   DCBHIRCM(FOUR),DSCBD7    *
         MVC   DCBTDC,DSCBD12            *                       S20201
         MVC   DCBRORG3+L'DCBRORG3-L'DSCBD13(L'DSCBD13),DSCBD13 *
         MVC   DCBNCRHI,DSCBD14          *                       S20201
         MVC   DCBNTHI,DSCBD15           *                       S20201
         MVC   DCBFTCI,DSCBD18          * CONTINUE DCB MERGE     S20201
         MVC   DCBFTMI1,DSCBD19         * FROM FORMAT 2 DSCB     S20201
         MVC   DCBFTHI,DSCBD20          *                        S20201
         MVC   DCBLECI,DSCBD23          *                        S20201
         MVC   DCBLEMI1,DSCBD24         *                        S20201
         MVC   DCBLETI,DSCBD22          LAST TRACK INDEX ENTRY
         MVC   DCBRORG1,DSCBD29         *                        S20201
*        MOVE FIELDS FROM DSCBK2, DSCBK3, DSCBK4, AND DSCBK5
*        TO DCBFTMI2, DCBLEMI2, DCBFTMI3 AND DCBLEMI3.
         MVC   DCBFTMI2(L'DSCBK2+L'DSCBK3+L'DSCBK4+L'DSCBK5),DSCBK2
         MVC   0(L'LOAD20,RWTGC),LOAD20 SET UP TO GO TO IGG01920 Y02072
         TM    DCBRECFM,X'80'           IS IT FIXED LENGTH
         BO    RELOOP                   YES, GO TO IGG01920
         MVC   0(L'LOAD50,RWTGC),LOAD50 SET UP TO GO TO IGG01950 Y02072
         B     RELOOP                   SKIP LOAD MODE MERGE     A52029
*
LOADMRG  EQU   *                                                 A52029
         L     R3,DSCCORE               ADDRESSABILITY ON F2     A52029
         USING IHADSCB,R3               TELL ASSEMBLER           A52029
         TM    JFCBIND2,X'80'           IS DISP OLD              A52029
         BO    RELOOP                   NOT OLD,SKIP MERGE       A52029
         NC    DCBNTM,DCBNTM            WAS NTM CODED IN JCL     A52029
         BNZ   CYLOFCK                  YES SPECIFIED, NO MERGE  A52029
         MVC   DCBNTM,DSCBD3            MOVE IN FROM FORMAT2     A52029
CYLOFCK  EQU   *                                                 A52029
         NC    DCBCYLOF,DCBCYLOF        WAS CYLOF CODED IN JCL   A52029
         BNZ   RELOOP                   YES SPECIFIED, NO MERGE  A52029
         MVC   DCBCYLOF,DSCBD6          MOVE IN FROM FORMAT2     A52029
**********************************************************************
*
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BNE   RELOOP                   BRANCH = NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BNE   TCTLRTN                  BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RF,DXCCW12
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
* CONSTANTS
*                                       BOX, HI SPEED OR LCS.
         DS    0F
HWOF3    DC    H'3'                     CONSTANT
*
*
IGG019JG DC    C'JG'                    BISAM
BISAMLEN DC    AL1(BISAMEXT-1)          LEN ACC METH SEC DEB - BISAM
*
CONZERO  DC    F'0'
KEY0     EQU   CONZERO                  ZERO STORAGE PROTECT KEY Y02072
EOC      DC    XL4'00FFFFFF'
THISLOAD DC    C'2C'
OPNLOD7  DC    C'0S'
*
LOAD20    DC    C'20'                     ID OF MODULE IGG01920  Y02072
LOAD21    DC    C'21'                     ID OF MODULE IGG01921  Y02072
LOAD50    DC    C'50'                     ID OF MODULE IGG01950  Y02072
*
PATCH    DC    50X'00'                  ZEROED PATCH AREA        Y02072
         END
