         TITLE 'IGG0192R - OPEN, QISAM LOAD MODE,SET UP CP 18,NO WC'
IGG0192R CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192R                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, LOAD MODE WITHOUT WRITE CHECK         *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 01                                *
*                                                                     *
* FUNCTION = LOAD PUT, APPENDAGE, AND CHANNEL PROGRAM MODULES WHEN NO *
*            WRITE CHECK IS SPECIFIED.  FOR FIXED LENGTH RECORDS      *
*            (FLR) LOAD IGG019GA, IGG019GC, AND IGG019GE.  FOR VLR,   *
*            LOAD IGG019IA, IGG019GC, AND IGG019IE.  FOR FLR WITH     *
*            FULL TRACK INDEX WRITE (FTIW), LOAD IGG019I1 INSTEAD OF  *
*            IGG019GA.  ALSO GETMAIN FOR CHANNEL PROGRAMS AND         *
*            INITIALIZE CP18.                                         *
*                                                                     *
* NOTES = FOR FTIW, THE LENGTH OF CP20 IS LEFT IN THE CALCULATION FOR *
*         THE CHANNEL PROGRAM GETMAIN TO ALLOW ENOUGH SPACE FOR CP91  *
*         TO OVERLAY CP19.                                            *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 868 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0192R                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0195U IF   *
*              FTIW SPECIFIED; OTHERWISE FROM IGG0192G IF INITIAL     *
*              LOAD, OR IGG0195D IF RESUME LOAD WITH HIGH-LEVEL       *
*              INDICES, OR IGG0196G IF RESUME LOAD WITHOUT HIGH-LEVEL *
*              INDICES.  RECEIVES CONTROL IN STORAGE PROTECT KEY 5    *
*              AND PRIVILEGED STATE                                   *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM OPEN EXECUTOR IGG0192S IN STORAGE        *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB COPY, DEB, IOB, AND CVT                     *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, LOAD, GETMAIN, AND XCTL                           *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*          RELEASE OS/VS2-02 DELETIONS                                *
*                                                               YM01159
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   IGGDEBD
         USING IHADEB,R8                                         S20201
         EJECT
ISLCOMON IGGLOAD
         USING ISLCOMON,R12                                      S20201
         EJECT
*
* * * * * * * * * *  LOAD CHANNEL PROGRAM SOURCE SKELETON * * * * * * *
LOADCPS  DSECT
         IGGLDCP
         SPACE 4
*
*   MASK USED TO DESCRIBE RELATIVE LOCATIONS OF THE CHANNEL PRORAMS.
CPSTO    DSECT
CPS1     DS    D                        1ST CCW                  S20201
CPS2     DS    D                        2ND CCW                  S20201
CPS3     DS    D                        3RD CCW                  S20201
CPS4     DS    D                        4TH CCW                  S20201
CPS5     DS    D                        5TH CCW                  S20201
*
         EJECT
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         SPACE 4
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
         DS    CL1
AIOBSENS DS    CL1                      SENSE
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD
AIOBSIOC DS    0CL1                     SIO CC
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
*
         EJECT
****************************
* OPEN WORK AREA REFERENCE *
****************************
FORCORE  DSECT                          OPEN/CLOSE/EOV WORK AREA Y01021
         IECDSECT                                                Y01021
         EJECT
CVTAREA  DSECT
         CVT
         USING CVTAREA,R9
         EJECT
**********************************************************************
* ISL PUT OPEN #2                                                     *
**********************************************************************
*
*
IGG0192R CSECT
TSTF800  BALR  R15,0
         USING *,R15
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         L     R12,DCBWKPT1
         LR    RBASE,R15
         USING FORCORE,RCORE                                     Y02072
         STM   R0,R15,DXCCW1            SAVE REGISTERS           Y02072
         L     R8,DCBDEBAD               DEB ADDRESSABILITY      S21045
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=11  SET USERS KEY       Y02072
         SPACE 2
         L     R11,ISLVPTR3             BUFFER CONTROL TABLE
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RJ       EQU   15
*
L32      EQU   32                       LENGTH                   S20201
K7       EQU   7                        CONSTANT                 S20201
BLKED    EQU   X'10'                    DATA SET BLOCKED         S20201
K0       EQU   0                        CONSTANT                 S20201
K8       EQU   8                        CONSTANT                 S20201
K16      EQU   16                       CONSTANT                 S20201
K40      EQU   40                       CONSTANT                 S20201
K35      EQU   35                       CONSTANT                 S20201
K6       EQU   6                        CONSTANT                 S20201
K4       EQU   4                        CONSTANT                 S20201
K24      EQU   24                       CONSTANT                 S20201
L24      EQU   24                       LENGTH                   S20201
L1       EQU   1                        CONSTANT                 S20201
L2       EQU   2                        CONSTANT                 S20201
VIRTUAL  EQU   X'80'                    VIRTUAL=VIRTUAL
CEDISP   EQU   4                        CE DISPLACEMENT
AEDISP   EQU   12                       AE DISPLACEMENT
ID       EQU   6                        DISPLACEMENT TO MODULE ID
         EJECT
*
         DROP RCORE                     END OPEN WA USING        Y02072
         LR    R13,RCORE                ADDR OF OPEN WORK AREA   Y02072
         USING FORCORE,R13              OPEN WA ADDRESSABILITY   Y02072
*
TSTHSK   LA    R2,ISLIOBA               C(R2)=A(IOBA)
*
* LOAD PUT, APP, AND CP MODULES  (NO WR CHK)
*
         L     R9,CVTPTR                CVT ADDRESS             YM01159
         L     R9,CVTLINK               LINKLIB DCB ADDRESS     YM01159
*                                       FOR LOAD                YM01159
         DROP  R9                       END CVT ADDRESSABILITY  YM01159
         LR    R3,R15                   SAVE R15, BASE
         LR    R4,R1                    SAVE R1
         USING IHADCB,R4                ADDRESSABILITY ON DCB
         DROP  R1                       *
         USING BASETAG,R3               ADDRESSABILITY
         DROP  R15                      *
         LA    R7,CPVLR-CP              ASSUME VLR
         TM    DCBRECFM,X'80'           VLR?                      VLR
         BNO   LOADPUT                  NO - VLR CORRECT
         SR    R7,R7                    ASSUME FIXED - NOT FTIW
         TM    ISLVPTRA,X'C0'           FTIW-SUCCESSFUL GETMAIN  O19110
         BNO   LOADPUT                  NO - VLR CORRECT
         LA    R7,CPFTIW-CP             IT IS FIXED - FTIW
LOADPUT  EQU   *                        LOAD PROCESSING TIME MODULE
         LH    R5,PROC(R7)              LAST TWO BYTES OF NAME
         STH   R5,ISLVPTR5              SAVE ID FOR DEB
*
*   SAVE MACRO TIME MODULE ID FOR DEB.
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 1
         BAL   R10,LOAD                 LOAD PROCESSING MODULE
         SPACE 2
         IC    R5,DCBPUT                SAVE O FLAGS
         ST    R0,DCBPUT                ADDRESS OF PUT MODULE
         STC   R5,DCBPUT                RESTORE O FLAGS
*
*   SAVE PROCESSING MODULE ADDRESS FOR CLOSE - IGG0202I.
*
         L     R5,DEBEXPTR              ADDRESSABILITY DEB EXTENSION
         USING DEBEXT,R5                *
         ST    R0,DEBPUT                SAVE PUT MODULE ADDRESS
         DROP  R5
*
*   LOAD CHANNEL END AND ABNORMAL END APPENDAGE MODULE - IGG019GC.
*
         LH    R5,APP                   LAST TWO BYTES OF NAME
         BAL   R10,LOAD                 LOAD APPENDAGE MODULE
         ST    R0,DCBWKPT5              ADDRESS OF APPENDAGE
         SPACE 3
*   LOAD CHANNEL PROGRAM MODULE.
*
         LH    R5,CP(R7)                LAST TWO BYTES OF NAME.
LOAD     EQU   *                        LOAD ANY MODULE
         STH   R5,ID(RWTG)              FINISH MODULE NAME
         LOAD  EPLOC=(RWTG),DCB=(R9)    LOAD CPS
*
*   SUBROUTINE RETURNS TO LAST BAL OR BALR ISSUED ON R10, THIS
*   INCLUDES THE BALR INSTRUCTION THAT FOLLOWS.
*
         BALR  R10,R10                  RETURN TO LOAD NEXT
*
         L     R10,DCBWKPT6             ADDRESSABILITY ISLVPTRS
         SPACE 1
         MODESET  KEYADDR=DXUKEY,WORKREG=1   SET USERS KEY       Y02072
         SPACE 1
         ST    R0,CL1AD                 PTR TO CP MODULE
         LR    R15,R3                   RESTORE BASE
         LR    R1,R4                    RESTORE R1
         USING BASETAG,R15              REVERSE ADDRESSABILITY
         DROP  R3                       *
         USING IHADCB,R1                ADDRESSABILITY ON DCB
         DROP  R4                       *
         L     R6,CL1AD                 C(R6)=ADDR CP18 SKLTN    S20201
         LA    R6,CP18LEN(R6)           ADD SIZE OF CP18         S20201
*                                        VLR                     S20201
         ST    R6,CM1AD                 STORE ADDR CP19 SKLTN    S20201
*                                        VLR                     S20201
         LA    R6,CP19LEN(R6)           ADD SIZE OF CP19         S20201
*                                        VLR                     S20201
         ST    R6,CQ1AD                 STORE ADDR CP20 SKLTN    S20201
*                                        VLR                     S20201
         LA    R6,CP20LEN(R6)           ADD SIZE OF CP20         S20201
*                                        VLR                     S20201
         ST    R6,CQ40AD                STORE ADDR CP21 SKLTN
*
* SET UP APPENDAGE VECTOR TABLE IN 5 WORDS ON TOP DEB
*
         L     R7,DEBAPPAD              C(R7)=A(VECTOR)
         USING DEBAVT,R7                ADDRESSABILITY ON AVT
         L     R3,DCBWKPT5              APPENDAGE ADDRESS
         SPACE 2
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 2
         ST    R3,DEBEOEA               END OF EXTENT PTR
         LA    R3,0(R3)                 *
         TM    DEBSIOA,VIRTUAL          VIRTUAL = REAL
         BO    TSTHSIO                  NO - DON'T OVERLAY SIO PTR
         ST    R3,DEBSIOA               YES - OVERLAY SIO
TSTHSIO  EQU   *                        *
         LR    R4,R3                    PCI ADDRESS
         LA    R5,CEDISP(R3)            CE ADDRESS
         LA    R6,AEDISP(R3)            AE ADDRESS
         STM   R4,R6,DEBPCIA            STORE APPENDAGE ADDRESS
         DROP  R7
*
* STORE PUT AND APPENDAGE MODULE IDS BEYOND LAST EXTENT IN DEB
*
         SR    R4,R4
         IC    R4,DEBNMEXT              NUMBER OF EXTENTS        S20201
*                                       *  ISAM DEPENDANT SECTION
         SLL   R4,4                     C(R4)=NO. OF EXTENTS X 16
         LA    R5,LOADEXT               GET DEB EXTENSION LENGTH S21045
         STC   R5,DEBAMLNG              DEB EXTENSION=ACS METH   S21045
*                                       SECTION                  S21045
         AR    R4,R5                    ADD EXTENSION LENGTH     S21045
         LA    R5,DEBNIEE(R4)           PT TO ID LIST
*   MOVE SAVED ID INTO DEB.
*
         MODESET  KEYADDR=DXUKEY,WORKREG=3  SET USER'S KEY       Y02072
*
         LH    R3,ISLVPTR5              PROCESSING MODULE ID     Y02072
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         STH   R3,0(,R5)                STORE ID IN DEB         Y02072
         MVC   L2(L'APP,R5),APP         MOVE IN APP ID
         SPACE 1
*
*
* CALCULATE AMT OF STORAGE NEEDED FOR CHANNEL PROGRAMS (NO WR CHK)
*
         LA    R3,K8                    BASIC CP LENGTH FOR EACH S20201
*                                       *  BUFFER
         TM    DCBRECFM,BLKED           TEST FOR BLOCKED (BIT-3) S20201
         BC    1,TSTHK081               B IF BLOCKED             S20201
*                                       *****                    S20201
         NC    DCBRKP,DCBRKP            DOES RKP = 0             S20201
         BZ    TSTHK082                 YES - USE BASIC LENGTH   S20201
*                                       NO - EXTEND BASIC LENGTH
TSTHK081 LA    R3,K16(R3)               INCREASE LENGTH          S20201
TSTHK082 SR    R4,R4
         SPACE 1
         MODESET  KEYADDR=DXUKEY,WORKREG=5   SET USERS KEY       Y02072
         SPACE 1
         SR    R5,R5
         IC    R5,ISLBUFNO              C(R4+R5) = BUFNO
         MR    R4,R3                    C(R5) = ZXBUFNO
         LA    R5,K40(R5)               C(R5) = 32+(ZXBUFNO)     S20201
         LR    R3,R5                    C(R3) = SIZE OF CP18
*                                                                * CP19
         SR    R4,R4                                             ******
         CLI   DCBHIRSH,X'00'           TEST HIRSH VS 0          S20201
         BNE   TSTHK083                 B NOT 0 = SHARED
         TM    DCBOPTCD,X'08'           TEST OPTCD BIT 4, CYL OVFL
         BC    8,TSTHK084               B NOT ON = NO CP19 NEEDED
*
*   ADD LENGTH OF CP 18 AND CP19
*
TSTHK083 LA    R5,CP19LEN(R5)                                    S20201
         LA    R4,CP19LEN(R4)           C(R4)=SIZE CP19          S20201
*                                       O1911                    S20201
*
*   ADD LENGTH OF CP20 AND CP21
*
TSTHK084 LA    R5,CP20LEN+CP21LEN(R5)                            S20201
*
* GET MAIN FOR CHANNEL PROGRAMS
*
         ST    R5,32(R10)               STORE SIZE OF CPS FOR DELETE
         LA    R0,250                   SUBPOOL NO. 250
         SLL   R0,24                    C(R0) = P000, P = SUBPOOL NO.
         OR    R0,R5                    C(R0) = PNNN, NNN = POOL SIZE
         LR    R6,R1                    SAVE R1
         LR    R7,R15                   SAVE R15, BASE
*
         GETMAIN R,LV=(0)
*
         LR    R15,R7                   RESTORE R15
         LR    R7,R1                    C(R7)=A(SUBPOOL)
         LR    R1,R6                    RESTORE R1
         LR    R6,R7                    SAVE DESTINATION         S20201
         LA    R7,K8(R7)                ALLOW FOR RPS            S20201
*                                       INSTRUCTION              S20201
*
*
* SET UP ISLVPTRS FOR CHANNEL PROGRAM ADDRESSES
*
         ST    R7,12(R10)               A(CP18)
         AR    R7,R3                    ADD SIZE OF CP18
         ST    R7,16(R10)               A(CP19)
         AR    R7,R4                    ADD SIZE OF CP19 (MAY BE 0)
         TM    36(R10),X'C0'            FTIW-SUCCESSFUL GETMAIN  O19110
         BO    SKPCP20                  BR-DO NOT STORE CP20     O19110
*                                       ADDR                     O19110
         ST    R7,20(R10)               A(CP20)
SKPCP20  EQU   *                                                 O19110
         LA    R7,CP20LEN(R7)           ADD SIZE OF CP20         S20201
         ST    R7,24(R10)               A(CP21)
*
         EJECT
*
* INITIALIZE CP18
*
         LR    R10,R6                   NEXT DESTINATION         S20201
         USING CPSTO,R10                                         S20201
         L     R9,CL1AD                 C(R9)=A(CP18 SKLTN, CL1)
         USING LOADCPS,R9                                        S20201
         SR    R3,R3
         IC    R3,ISLBUFNO              C(R3)=NO OF BUFFRS
         MVC   CPSTO(L32),0(R9)         MOVE CLO,CL1,CL2,CL3     S20201
* * CL0 INITIALIZATION
         LA    R4,ISLRPSSS              SET SECTOR               S20201
         O     R4,CL0                   *                        S20201
         ST    R4,CPS1                  *                        S20201
* * CL1 INITIALIZATION
         LA    R4,K35(R2)               SEARCH ID EQUAL          S20201
         O     R4,CL1                   *  I0B+35                S20201
         ST    R4,CPS2                  *                        S20201
* * CL2 INITIALIZATION
         LA    R4,CPS2                  TIC TO CL1               S20201
         O     R4,CL2                   *                        S20201
         ST    R4,CPS3                  *                        S20201
* * CL3 INITIALIZATION
         LA    R4,CPS5                  TIC TO CL4               S20201
         ST    R4,CPS4                  *                        S20201
         MVI   CPS4,TIC                 *                        S20201
         LA    R10,CPS5                 C(R10)=A(DEST CL4)       S20201
*
         SR    R8,R8                    CLEAR REGISTER 8         O19110
         SPACE 1
         MVI   ISLOFFST+3,24            THREE CCWS PER BUFFER    M0170
         L     R7,0(R11)                1ST AVAILABLE BUFFER
         MVI   ISLD+3,44                D = 44                   M0170
         LA    R7,0(R7)                 CLEAR HIGH BYTE
         TM    DCBRECFM,X'10'           TEST RECFM BIT 3 FOR BLOCKED
         BC    1,TSTHK15                B IF 1 = BLOCKED
*
*                                       UNBLOCKED
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 1
         NC    DCBRKP,DCBRKP            TEST RKP VS 0            S20201
         SPACE 1
         MODESET  KEYADDR=DXUKEY,WORKREG=4   SET USERS KEY       Y02072
         SPACE 1
         BNZ   TSTHK20                  BR IF RKP NOT 0          S20201
*                                       O1911                    S20201
*                                       UNBLOCKED, RKP = 0
         MVI   ISLOFFST+3,8             IF RECFM=F, RKP=0 ONE    M0170
         MVI   ISLD+3,28                CCW PER BUFFER           M0170
         OI    0(R11),X'01'             SET FLAGS BIT 7 = 1 IN BCT
         IC    R8,DCBKEYLE              C(R8)=KEYLE, 000N = IL
         AH    R8,DCBLRECL              C(R8)=AL+IL              O19110
         LA    R8,K8(R8)                C(R8)=AL+IL+8, 00NN      S20201
*
TSTHK09  MVC   CPS1,CL4                 MOVE CL4                 S20201
         STH   R8,CPS1+K6               LEN FOR WRITE            S20201
         L     R4,0(R7)                 C(R4)=C(SLOT S)=A(BUF B)
         LA    R4,0(R4)
         O     R4,CL4                   *COMBINE OP CODE         S20201
*                                        1333                    S20201
         ST    R4,CPS1                  STORE COUNT ADR IN CL4   S20201
         LA    R10,CPS2                 C(R10)=A(NEXT DEST)      S20201
         LA    R7,K4(R7)                C(R7)=A(NEXT SLOT)       S20201
         BCT   R3,TSTHK09               LOOP
*
         B     TSTHK30                  B TO MOVE CL5
*
*
TSTHK15  EQU   *                                                 O19110
         LH    R8,DCBBLKSI              C(R8)=BLKSI              O19110
         SH    R8,DCBLRECL              C(R8)=BLKSI-LRECL        O19110
*
*                                       COMMON RT FOR CL6, CL7, +CL8
TSTHK20   EQU  *                                                 O19110
         AH    R8,DCBRKP                C(R8)=REL KEY ADR        O19110
*
TSTHK26  MVC   CPS1(L24),CL6            MOVE CL6, CL7, CL8       S20201
         MVC   CPS2+K7(L1),DCBKEYLE     LEN FOR WR KEY           S20201
         MVC   CPS3+K6(L2),DCBBLKSI     LEN FOR WR DATA          S20201
         L     R4,0(R7)                 C(R4)=C(SLOT S)=A(BUFF B)
* * CL6 INITIALIZATION
         IC    R5,CL6                   WRITE COUNT              S20201
         ST    R4,CPS1                                           S20201
         STC   R5,CPS1                                           S20201
* * CL7 INITIALIZATION
         LA    R4,K8(R4)                PT TO DATA               S20201
         ST    R4,CPS3                                           S20201
* * CL8 INITIALIZATION
         AR    R4,R8                    PT TO HIGH KEY IN BLOCK  S20201
         ST    R4,CPS2                  WRITE KEY                S20201
         LA    R10,CPS4                 C(R10)=A(NEXT DEST       S20201
         LA    R7,K4(R7)                C(R7)=A(NEXT SLOT)       S20201
         BCT   R3,TSTHK26               LOOP
*
*                                       MOVE CL5
TSTHK30  EQU   *                        FINALE                   S20201
         MVC   CPS1,K24(R6)             MOVE SAVED TIC ADDRESS   S20201
*
         EJECT
*
* EXIT ********** EXIT ***************** EXIT *********** EXIT ********
*
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         DROP  R13                      END WA USING             Y02072
         SPACE 1
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 1
         USING BASETAG,RBASE
         USING FORCORE,RCORE            ADDRESSABILITY OPEN WORKAREA
         MVC   0(L'LOAD2S,RWTGC),LOAD2S ID OF MODULE IGG0192S    Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RJ,DXCCW12               PARAMETER LIST
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
*
*   LAST TWO BYTES OF MODULE NAMES - USED TO CONSTRUCT NAMES.
         SPACE 5
*   CHANNEL END AND ABNORMAL END APPENDAGE MODULE.
APP      DC    C'GC'                    IGG019GC - LOAD APPENDAGE
*   CHANNEL PROGRAM MODULES.
CP       DC    C'GE'                    IGG019GE - FIXED NON FTIW
CPVLR    DC    C'IE'                    IGG019IE - VLR
CPFTIW   DC    C'GE'                    IGG019GE - FIXED FTIW
*   PROCESSING MODULES( MACRO TIME ).
PROC     DC    C'GA'                    IGG019GA - FIXED NON FTIW
         DC    C'IA'                    IGG019IA - VLR
         DC    C'I1'                    IGG019I1 - FIXED FTIW
         DS    F                        ALIGNMENT
THISLOAD DC    C'2R'
OPNLOD7  DC    C'0S'
LOAD2S   DC    C'2S'                    ID OF MODULE IGG0192S    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
