         TITLE 'IGG0192B - ISAM OPEN, BUFFERS'
IGG0192B CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192B                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, BUILD BUFFERS                         *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = COMPUTE REQUIRED BUFFER LENGTH AND THEN TEST FOR USER    *
*            SUPPLIED BUFFERS.  IF NOT PROVIDED OBTAIN CORE FOR THE   *
*            ISAM BUFFER CONTROL BLOCK AND BUFFERS, STRUCTURE THE     *
*            BUFFER CONTROL BLOCK, AND LINK THE BUFFERS.  THEN BUILD  *
*            THE EXTENT ENTRIES IN THE DEB.                           *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES                      *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT                              *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 910 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = REENTRANT, PRIVILEGED                               *
*                                                                     *
* ENTRY-POINT = IGG0192B                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0192A      *
*              IN STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.         *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED ON ENTRY ARE                          *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = TRANSFER CONTROL TO ISAM OPEN EXECUTOR IGG0192C IN    *
*               STORAGE PROTECT KEY 5.                                *
*                                                                     *
* EXIT-ERROR = ABEND CODES:                                           *
*              037 - USER SUPPLIED BUFFERS INADEQUATE                 *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                                                                     *
*    CONTROL-BLOCK = DCB COPY, DEB, DSCB, AND UCB.                    *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = ABEND, GETMAIN, MODESET, AND XCTL                          *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*          RELEASE OS/VS2-02 DELETIONS                                *
*                                                               YM02426
*C045410,045530                                                 YM04649
*                                                                     *
*          RELEASE OS/VS2-030 CHANGES
* A037441,037442,037443,037444,100048                          @ZA02659
* A057700                                                      @ZA26816
* C057700                                                      @ZA31855
***********************************************************************
         EJECT
FORCORE  DSECT
         IECDSECT
*  TASK CONTROL BLOCK
TCB      DSECT
DXTCB    DS    0CL124                                             13270
TCBRBP   DS    F                                                  13270
TCBPIE   DS    F                                                  13270
TCBDEB   DS    F                                                  13270
TCBTIO   DS    F                                                  13270
TCBCMP   DS    F                                                  13270
TCBTRN   DS    F                                                  13270
TCBMSS   DS    F                                                  13270
TCBPKF   DC    X'00'                                              13270
TCBFLGS  DC    X'0000000000'                                      13270
TCBLMP   DS    CL1                                                13270
TCBDSP   DS    CL1                                                13270
TCBLLS   DS    F                                                  13270
TCBJLB   DS    F                                                  13270
TCBJSE   DS    F                                                  13270
TCBGRS   DS    CL64                                               13270
TCBIDF   DS    CL1                                                13270
TCBFSA   DS    CL3                                                13270
TCBTCB   DS    F                                                  13270
TCBTME   DS    F                                                  13270
TIOT     DSECT
TIOELNGH DS    CL1
TIOESTTA DS    CL1                      STATUS -A-
TIOERLOC DS    CL2                      REL LOC OF POOL
TIOEDDNM DS    2F
TIOEJFCB DS    1F                       JFCB DISL ADDRESS
TIOESTTB DS    0CL1
TIOEFSRT DS    CL4
         DS    CL1
         SPACE 2
         IGGBCB TYPE=SAM
         SPACE 2
IHADEB   IGGDEBD
         DCBD  DSORG=(IS)
         EJECT
IGG0192B CSECT
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        WORK REGISTER
R9       EQU   9                        WORK REGISTER
RDEB     EQU   1                        BASE REGISTER FOR USERS DEB
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDCB     EQU   2                        BASE REG FOR DCB
RBASE    EQU   3                        BASE REGISTER FOR THIS MODULE
RCORE    EQU   4                        BASE REG FOR OPEN WORK AREALE
RPAR     EQU   5    *                   ADDRESS OF PARAMETER TABLE
RWTG     EQU   6    *                   ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7    *                   CURRENT PARAMETER ENTRY
RWTGC    EQU   8    *                   CURRENT WHERE-TO-GO ENTRY
RTIOT    EQU   9                        ADDRESS OF TIOT
RDSCB    EQU   10                       WORK REGISTER
RB       EQU   12                       WORK REGISTER
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RA       EQU   11                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
*  COMMON WORK AREA EXCLUDING VARIABLE POINTERS AND  VARIABLE AREAS
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING IHADEB,RF
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         L     RDCB,0(RPARC)            RDCB = ADR OF DCB
         L     RCORE,4(RWTGC)           RCORE = ADR OF OPEN WK AREA
*                                                                     *
*  COMPUTE DCBBUFL FOR BISAM, SCAN OR LOAD MODES, BLOCKED OR UNBLOCKED*
*
ISL01E4  EQU   *                                                 S20201
ISL01H3  SR    RB,RB                                             S20201
         TM    DCBMACRF,SCAN            BIT 1 = SCAN             S20201
         BC    8,ISL01H32               BRANCH = NO              S20201
*
         TM    DCBRECFM,BLOCKED         TEST IF BLOCKED          S20201
         BC    1,ISL01H31               YES                      S20201
*
         IC    RB,DCBKEYLE              NO                       S20201
         LA    RB,SEVENTEN(RB)          UNBL, BUFL=LRECL+(K+10)  S20201
         SRL   RB,THREE                 K+10 IS A MULTIPLE OF 8  S20201
         SLL   RB,THREE                                          S20201
         AH    RB,DCBBLKSI              ADD BLKSIZE              S20201
         B     ISL01H35                 BR--BUFL COMPLETE        S20201
ISL01H31 LH    RB,DCBBLKSI              SCAN BLOCKED AND BISAM   S20201
****************************************************************
*     IF VARIABLE ADD 12 TO BUFF LENGTH, FIXED ADD 16
*     ADD 16 TO BUFF LENGTH IF VLR AND DBL WORD ALGNMT
*
         TM    DCBRECFM,FIXED           IS IT VLR?               S20201
         BO    ISL01H3X                 NO, ADD 16               S20201
         TM    DCBBFALN,FWORD           DOUBLEWORD ALIGNMENT?    S20201
         BO    ISL01H3Y                 NO, ADD 12               S20201
ISL01H3X LA    RB,FOUR(RB)              ADD 4                    S20201
ISL01H3Y LA    RB,TWELVE(RB)            ADD 12                   S20201
****************************************************************
         B     ISL01H35                 BR, BUFL COMPLETE        S20201
ISL01H32 TM    DCBMACRF,READ            TEST IF BISAM            S20201
*
         BO    ISL01H31                 YES                      S20201
         TM    DCBMACRF+ONE,WRITE       TEST IF BISAM - WRITE    S20201
         BO    ISL01H31                 BRANCH = YES             S20201
ISL01H33 TM    DCBRECFM,BLOCKED         IS IT BLOCKED            Y02072
         BC    1,ISL01H34               BLOCKED                  S20201
         CLC   DCBRKP(TWO),ZERO         UNBLOCKED                S20201
         BNE   ISL01H34                 RKP NOT = 0              S20201
         IC    RB,DCBKEYLE              UNBL,RKP=0,BUFL=K+8+BLK  S20201
ISL01H34 LA    RB,EIGHT(RB)             BLK, UNBLK, RKP NOT = 0  S20201
         AH    RB,DCBBLKSI              BUFL = 8 + BLKSI         S20201
*
ISL01H35 STH   RB,DCBBUFL                                        S20201
*                                                                     *
* IF VALID DCBBUFCB, CHECK USERS DCBBUFL AND DCBBUFNO                 *
*                                                                     *
ISL01E41 TM    DCBBUFCB+THREE,ONE       USER BUFFERS SUPPLIED    S20201
         BO    ISL02A2                  NO                       S20201
         TM    DCBMACRF,DYNREQ          TEST FOR DYNAMIC       @ZA02659
*                                       BUFFERING REQUEST      @ZA02659
*                                       IF YES - IT IS A       @ZA02659
         BO    ISL01H5                  CONFLICT - ABEND       @ZA02659
ISL01G5  L     RA,DCBBUFCB              CHECK USERS BUFFERS      S20201
         LH    RB,DCBBUFL                                        S20201
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=13  CHANGE TO USER KEY YM02426
         SPACE 2
         CH    RB,SIX(RA)                                        S20201
         BNH   ISL01KY5                 USERS BUFFERS ADEQUATE  YM02426
* USERS BUFFER MAY BE TOO SMALL, EXCEPT IF SCAN, UNBLOCKED, DATA ONLY
         TM    DCBMACRF,SCAN            TEST FOR SCAN            S20201
         BC    8,ISL01H5                BRANCH=NOT SCAN          S20201
         TM    DCBRECFM,BLOCKED         TEST IF BLOCKED          S20201
         BC    1,ISL01H5                BRANCH=BLOCKED           S20201
         SR    RB,RB                    UNBLOCKED                S20201
         TM    DCBMACRF+ONE,SETL        WAS SETL IMPLIED         S20201
         BO    ISL01G51                 YES, KEYLEN NOT A FACTOR S20201
         IC    RB,DCBKEYLE              RB=KEYLEN                S20201
ISL01G51 AH    RB,DCBBLKSI                +BLKSIZE               S20201
         LA    RB,SIXTEEN(RB)             +16                    S20201
         CH    RB,SIX(RA)                                        S20201
         BNH   ISL01KY5                 BR IF BUFFERS OK        YM02426
ISL01H5  EQU   *                                                 S20201
*
*  ABEND ERROR CODE OF HEX 37 = USERS BUFFERS ARE INADEQUATE
*
         ABEND X'037',DUMP,,SYSTEM      ISSUE 037 ABEND          Y02072
*
ISL01KY5 EQU   *                        CHANGE TO DATA MGT KEY  YM02426
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY (5)    YM02426
         SPACE 2
ISL02A2  EQU   *                                                 S20201
ISL01G55 CLI   DCBBUFNO,X'00'           IS BUFFER NUMBER         S20201
*                                       SPECIFIED                S20201
         BNE   ISL01G56                  YES                     S20201
         MVI   DCBBUFNO,TWO              NO, ASSUME TWO          S20201
ISL01G56 EQU   *                        *                        S20201
*
*
***********************************************************************
*  GET MAIN FOR ISAM BUFFER CONTROL BLOCK AND BUFFER POOL             *
***********************************************************************
ISL02A1  TM    DCBBUFCB+3,X'01'         TEST BUFCB FOR VALID ADDRESS
         BZ    ISL02A3                   BRANCH = VALID (USER BUFFERS)
         TM    DCBMACRF,X'20'           TEST IF READ
         BO    ISL02A11                 BRANCH = BISAM, READ
         TM    DCBMACRF+1,X'20'         TEST IF WRITE
         BZ    ISL02B1                  BRANCH = QISAM
ISL02A11 EQU   *
         TM    DCBMACRF,X'04'           TEST FOR DYNAMIC BUFFERING
         BZ    ISL02A3                  BRANCH = BISAM W/O DYN BUF
*  ISAM SCAN, ISAM LOAD OR BISAM WITH DYNAMIC BUFFERING
*
ISL02B1  EQU   *
         LH    RA,DCBBUFL               RA=BUFFER LENGTH CALCULATED
         SR    RB,RB                    CLEAR WORK REGISTERS
         SR    RC,RC
         IC    RC,DCBBUFNO              SET RC = BUFNO
         LA    RA,7(RA)
         SRL   RA,3
         SLL   RA,3                     RA=BUFFER LENGTH IN MULT OF 8
         MR    RB,RA                    RC=AMT OF CORE FOR BUFFER POOL
         TM    DCBMACRF,X'20'           TEST IF READ
         BO    ISL02B12                 BRANCH = BISAM, READ
         TM    DCBMACRF+1,X'20'         TEST IF WRITE
         BZ    ISL02B13                 BRANCH = SCAN OR LOAD
ISL02B12 EQU   *
         LA    RC,16(RC)                BISAM CONTROL BLOCK=24 BYTES
         B     ISL02B2
ISL02B13 EQU   *
         TM    DCBBFALN,X'01'           TEST IF FULL WORD ALIGN
         BZ    ISL02B2                  BRANCH = DOUBLE WORD
         LA    RC,8(RC)                 FULL WORD
ISL02B2  EQU   *
         LA    RC,8(RC)
*
*HIARCHY TEST PRIOR TO GETMAIN. DETERMINE WHETHER CORE             DM0E
* WILL BE GOTTEN FROM HI SPEED STORAGE OR LCS.                     DM0E
         SR    RF,RF                    HOUSEKEEP PARM REG 1.      DM0E
         TM    DCBBFTEK,HIARCHY         TEST FOR HI SPEED STORAGE  DM0E
*                                       OR LCS.                    DM0E
         BO    GETH1                                               DM0E
         GETMAIN R,LV=(RC),SP=0,HIARCHY=0                       YM04649
         B     GETBUFNO                                            DM0E
GETH1    EQU   *                                                   DM0E
         GETMAIN R,LV=(RC),SP=0,HIARCHY=1                       YM04649
*
GETBUFNO IC    RB,DCBBUFNO                                         DM0E
         ST    RF,DCBBUFCB              SET DCBBUFCB=ADR OF CTRL BLOCK
         STC   RB,DCBBUFNO
*
         MODESET  KEYADDR=DXUKEY,WORKREG=10  CHANGE TO USER KEY  Y02072
*
         XC    0(8,RF),0(RF)            CLEAR BUFFER CONTROL BLOCK
         TM    DCBMACRF,X'20'           TEST IF READ
         BO    ISL02C1                  BRANCH = BISAM, READ2
         TM    DCBMACRF+1,X'20'         TEST IF WRITE
         BZ    ISL02D1                  BRANCH = SCAN OR LOAD
*
*  STRUCTURE BISAM BUFFER CONTROL BLOCK
*
ISL02C1  EQU   *
         ST    RC,12(RF)                SAVE SIZE OF POOL AND CB
         LA    RC,20(RF)                RC=ADR OF 1ST BUF, IF FULL WD
         TM    DCBBFALN,X'01'           TEST IF FULL WD ALIGN
         BO    ISL02C2                  BRANCH=FULL WORK ALIGN
         LA    RC,4(RC)                 RC POINTS TO FIRST BUFFER
ISL02C2  ST    RC,8(RF)                 3RD WD OF BISAM CB=1ST BUF ADR
         B     ISL02E1
*
*  STRUCTURE SCAN/LOAD BUFFER CONTROL BLOCK
*
         USING BCBLK,RF                 BUFFER CONTROL BLOCK     Y02072
ISL02D1  EQU   *
         STC   RB,BCBBUFNO              INSERT BUFNO IN CONTROL BLOCK
ISL02D12 EQU   *
         STH   RA,BCBBUFSZ              INSERT BUFF LENGTH IN CTRL BLK
         LA    RC,8(RF)                 RC=ADR OF 1ST BUF, IF DBL WD
         TM    DCBBFALN,X'01'           TEST ALIGN
         BZ    ISL02D2                  BRANCH = DOUBLE
         LA    RC,4(RC)                 ADD 4 BYTES IF FULL WD ALIGN
         OI    BCBFLGS,BCBEXTND         IND FULL WORD ALIGNMENT  Y02072
ISL02D2  ST    RC,0(RF)                 1ST WD OF BCB=PTR TO 1ST BUFFR
         B     ISL02E1                                            13270
         DROP RF                        END BCB USING            Y02072
*                                                                     *
* LINKING BUFFERS FOR BISAM WITH DYNAMIC BUFFERING AND SCAN/LOAD
*                                                                     *
ISL02E2  AR    RC,RA                    ADVANCE TO NEXT BUFFER    13270
         ST    RC,0(RD)                 EACH BUFFER POINTS TO NEXT13270
ISL02E1  LR    RD,RC                    RD=ADR OF FIRST BUFFER
         BCT   RB,ISL02E2               RB = NUM OF BUFFERS - 1
         ST    RB,0(RD)                 SET LAST BUFFER PTR = ZERO
***********************************************************************
ISL02A3  EQU   *
         LR    RDSCB,RCORE              FORMAT 1 DSCB ADDRESS    Y02072
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
***********************************************************************
*  BUILD USERS DEB EXTENT ENTRIES                                     *
***********************************************************************
* PICK UP PTRS SAVED IN 192A                                      13270
         LM    RA,RC,DXCCW8             RA=POINTER TO PRIME ENTRY 13270
*                                       RB=POINTER TO INDEX ENTRY 13270
*                                       RC=POINTER TO OVFLO ENTRY 13270
*  DCBNBOV CLEARED IN 192A                                        13270
ISL02A32 LA    RF,61(RDSCB)             RF=POINTER TO EXTENT ENTRY
         LA    R0,3                     R0=COUNT
         MVC   DXDEBUCB(4),50(RDSCB)    MOVE UCB ADR TO WKAREA DEBUCB
         L     R9,DXDEBUCB              R9= UCB ADDRESS
         LA    R9,0(R9)
         MVC   DCBDEVT(1),19(R9)        SUPPLY DCB WITH DEVICE TYPE
         XC    50(4,RDSCB),50(RDSCB)    SET 2NDARY ALLOCATION TO ZERO
         MVC   50(1,RDSCB),JFCBCTRI     MOVE IN ALLOC TYPE     @ZA31855
ISL02A4  TM    0(RF),X'01'              TEST IF PRIME
         BC    8,ISL02B4                NO
         LR    RD,RA                    RD= ADDRESS OF EXTENT ENTRY
         LA    RA,16(RA)                RA POINTS TO NEXT ENTRY
         B     ISL02A5
ISL02B4  TM    0(RF),X'04'              TEST IF INDEX
         BC    8,ISL02C4                NO
         LR    RD,RB                    RD=ADDRESS OF EXTENT ENTRY
         LA    RB,16(RB)                RB POINTS TO NEXT ENTRY
         B     ISL02A5
ISL02C4  TM    0(RF),X'02'              TEST IF OVFLO
         BZ    ISL02H4                  BRANCH = NO
         LR    RD,RC                    RD=ADDRESS OF EXTENT ENTRY
         LA    RC,16(RC)                RC POINTS TO NEXT ENTRY
ISL02A5  XC    0(16,RD),0(RD)           CLEAR EXTENT
         MVC   6(8,RD),2(RF)            FILL IN DEBSTRCCHH AND ENDCCHH
         MVI   DCBFIRSH+3,X'FF'         SET MASK FOR LOW ORDER TRK BYTE
         LH    R9,10(RD)                R9=ENDCC
         LA    R9,1(R9)
         SH    R9,6(RD)                 SUBTRACT STRCC
         STH   R9,14(RD)
         SR    R9,R9                    CLEAR AND LOAD ENDH2     Y02072
         IC    R9,13(RD)                R9= ENDH2
ISL02A52 LA    R9,1(R9)
         MH    R9,14(RD)
         STH   R9,14(RD)                SET DEBNMTRK = EXTENT BOUNDARYS
         MVC   0(4,RD),DXDEBUCB         MOVE UCB ADR TO USERS DEB EXTNT
         MVI   0(RD),X'10'                   SEEK HEAD ONLY SO IOS CAN
*              PUT IMBEDDED SEEK ADDRESS IN UCB FOR ALT TRACK RECOVERY
*                          (PROHIBIT WRITE HA, PERMIT SEEK CCHH OR HH)
         MVC   5(1,RD),DXDEBUCB         MOVE BIN NUMBER TO DEB
         BCT   R0,ISL02F3               DECREMENT COUNT
ISL02H4  EQU   *
         CLI   0(RDSCB),X'F1'           TEST IF CURNT DSCB=FORMAT 1
         BE    ISL02H41                 YES
         LA    RDSCB,44(RDSCB)          EXTRA OFFSET IF NOT FORMAT 1
ISL02H41 EQU   *
         L     RDSCB,96(RDSCB)          RDSCB=POINTER TO NEXT DSCB
         LTR   RDSCB,RDSCB              TEST IF ADDITIONAL DSCB'S
         BZ    ISL03A3                  BRANCH = NO MORE DSCBS
         SR    RE,RE                    CLEAR WORK REGISTER
         LA    RF,0(RDSCB)              RF = ADR OF DSCB
         CLI   0(RDSCB),X'03'           TEST IF FORMAT 3 DSCB
         BE    ISL02K3                  YES
         CLI   0(RDSCB),X'F1'           TEST IF FORMAT 1 DSCB
         BNE   ISL02H4                  NO
         B     ISL02A32
ISL02K3  LA    RE,13                    DSCB FORMAT 3 MAY HAVE 13 EXTNT
         LA    RF,4(RF)                 FIRST EXTENT STARTS AT 4
         B     ISL02A4
ISL02F3  CH    R0,DECON9                TEST IF COUNTER = 9
         BNE   ISL02H3                  NO
         CLI   0(RDSCB),X'03'           TEST IF FORMAT 3
         BNE   ISL02H3                  BRANCH = NOT FORMAT 3
         LA    RF,1(RF)                 ADVANCE EXTENT POINTER
ISL02H3  LA    RF,10(RF)
         B     ISL02A4
ISL03A3  EQU   *
*
*
ISL04A5  MVC   0(L'LOAD2C,RWTGC),LOAD2C INITIALIZE WHERE-TO-GO   Y02072
*
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RJ,DXCCW12
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NXT LOAD   Y02072
* CONSTANTS
ZERO     DC    H'0'                     CONSTANT OF ZERO         S20201
ONE      EQU   1                        *                        S20201
TWO      EQU   2                        *                        S20201
THREE    EQU   3                        *                        S20201
FOUR     EQU   4                        *                        S20201
EQFIVE   EQU   5                        *                        S20201
SIX      EQU   6                        *                        S20201
EIGHT    EQU   8                        *                        S20201
TWELVE   EQU   12                       *                        S20201
SIXTEEN  EQU   16                       *                        S20201
SEVENTEN EQU   17                       *                        S20201
FIXED    EQU   X'80'                    FIXED RECFM              S20201
SCAN     EQU   X'40'                    SCAN MODE                S20201
SETL     EQU   X'80'                    SETL MACRO               S20201
BLOCKED  EQU   X'10'                    BLOCKED RECFM            S20201
FWORD    EQU   X'01'                    BUFFER ALIGNMENT         S20201
READ     EQU   X'20'                    READ FOR BISAM           S20201
WRITE    EQU   X'20'                    BISAM WRITE              S20201
PUT      EQU   X'10'                    QISAM PUT                S20201
HIARCHY  EQU   X'80'         TEST DCBBFTEK FOR WHICH STORAGE     S20201
*                                         DM0                    S20201
*                                       BOX, HI SPEED OR LCS.      DM0E
DYNREQ   EQU   X'04'                    DYNAMIC BUFFERING      @ZA02659
         DS    0F                                                S20201
DECON9   DC    X'0009'
THISLOAD DC    C'2B'
OPNLOD7  DC    C'0S'
*
LOAD2C   DC    C'2C'                    ID OF MODULE IGG0192C    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
