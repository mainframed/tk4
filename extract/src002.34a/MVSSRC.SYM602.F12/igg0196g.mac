 TITLE 'IGG0196G - OPEN, RESUME LOAD'
IGG0196G CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0196G                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, RESUME LOAD MODE                      *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = INITIALIZE COUNT FIELDS FOR ISLNCNT, OCNT, DCNT, BUFFER  *
*            1, AND IOBA.  SET ISLCBF, ISLWRSAV, AND, IF APPLICABLE,  *
*            EOT AND EOC BITS IN DCBST.                               *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 950 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0196G                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0195G IN   *
*              STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.            *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL IN STORAGE PROTECT KEY 5 TO ISAM OPEN EXECUTOR   *
*               IGG0195D IF HIGH-LEVEL INDEXES EXIST, OR TO IGG0195T  *
*               IF FULL TRACK INDEX WRITE IS SPECIFIED, OR TO         *
*               IGG0192U IF WRITE CHECK IS SPECIFIED, OTHERWISE TO    *
*               IGG0192R.                                             *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB COPY, DEB, AND IOB.                         *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET AND XCTL.                                          *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   DSECT
         USING IHADEB,R8
         DS    0D
DEBNMSUB DS    0CL1
DEBTCBAD DS    A
DEBAMLNG DS    0CL1
DEBDEBAD DS    A
DEBOFLGS DS    0CL1
DEBIRBAD DS    A
DEBOPATB DS    0CL1
DEBSYSPG DS    A
DEBNMEXT DS    0CL1
DEBUSRPG DS    A
DEBPRIOR DS    0CL1
DEBECBAD DS    A
DEBPROTG DS    0BL1
DEBDEBID DS    0BL1
DEBDCBAD DS    A
DEBEXSCL DS    0CL1
DEBAPPAD DS    A
DEBNIEE  DS    0CL1
DEBFIEAD DS    A
DEBNPEE  DS    0CL1
DEBFPEAD DS    A
DEBNOEE  DS    0CL1
DEBFOEAD DS    A
         DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    A
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
*
ISLCOMON DSECT
         USING ISLCOMON,R12
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE
ISLEOB   DS    F                        END OF BUFFR ADR
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD
ISLOCNT  DS    CL8                      OVFLOL IX COUNT, CCHHRKDD
ISLDCNT  DS    CL8                      DUMMY IX COUNT,  CCHHRKDD
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP
         DS    CL2
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP
         DS    CL1
ISLBUFNO DS    CL1                      DCBBUFNO OR 2
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)
ISLVRSAV DS    18F                      ISL SAVE AREA
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE
*
TSTWK1C  DS    F                        WORK AREA FOR FORMAT 000N
TSTWK2C  DS    F                        WORK AREA FOR FORMAT 00NN
         DS    F
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES
ISLD     DS    F                        DISCPLACEMENT FROM CP18 START
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK
*
CL1AD    DS    F                        ADDR CP18 SKLTN
CM1AD    DS    F                        ADDR CP19 SKLTN
CQ1AD    DS    F                        ADDR CP20 SKLTN
CQT1AD   DS    F                        ADDR CP20 WR CHK EXTN
CQ40AD   DS    F                        ADDR CP21 SKLTN          O19110
CQ45AD   DS    F                        ADDR CP21 WR CHK EXTN    O19110
*
         SPACE 3
*
* ISLVPTRS REFERENCE       C(DCBWKPT6)=A(ISLVPTRS)
*
ISLVPTRS DS    A                        A(AREA Y)
         DS    A                        A(KEYSAVE)
         DS    A                        A(IOBBCT)  BUF CTRL TBL ADR
         DS    A                        A(CP18)
         DS    A                        A(CP19)
         DS    A                        A(CP20)
         DS    A                        A(CP21)
         DS    A                        SIZE OF DCB WORK AREA    O19110
         DS    A                        SIZE OF CHANNEL PGM AREA O19110
         DS    A                        A(TRACK INDEX SAVE AREA) O19110
*                                       BIT 0-FULL TRK INDX WRITE
*                                       BIT 1-SUCCESSFUL GETMAIN
         DS    A                        A(CP20B)-FULL TRK INDX   O19110
*                                       WR                       O19110
         DS    A                        A(CP20C)-FULL TRK INDX   O19110
*                                       WR                       O19110
ISLFXWK1 DS    F                        WORK AREA                 13711
ISLFXWK2 DS    F                        WORK AREA                 13711
ISLF9WK1 DS    F                        WORK AREA                 13711
*
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
         DS    CL1
AOBSENSE DS    CL1                      SENSE
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD
AOBSIOCC DS    0CL1                     SIO CC
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    0CL8
IOBDADA0 DS    CL1                      M
IOBDADA1 DS    CL1                       B
IOBDADA2 DS    CL1                        B
IOBDADA3 DS    CL1                         C
IOBDADA4 DS    CL1                          C
IOBDADA5 DS    CL1                           H
IOBDADA6 DS    CL1                            H
IOBDADA7 DS    CL1                             R
*
         EJECT
****************************
* OPEN WORK AREA REFERENCE *
****************************
FORCORE  DSECT
         IECDSECT
         EJECT
IGG0196G CSECT
         BALR  R9,0
         USING *,R9
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         USING FORCORE,RCORE            OPEN WA ADDRESSABILITY   Y02072
         L     R12,DCBWKPT1
         STM   R0,R15,DXCCW1            SAVE REGISTERS           Y02072
         LR    ROPENWA,RCORE            OPEN WORK AREA ADDRESS   Y02072
         DROP  RCORE                    END USING ON OPEN WA     Y02072
         USING FORCORE,ROPENWA          OPEN WA ADDRESSABILITY   Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
ROPENWA  EQU   13                       OPEN WORK AREA ADDRESS   Y02072
R14      EQU   14
R15      EQU   15
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
K3       EQU   3                        CONSTANT                 S20201
L1       EQU   1                        LENGTH                   S20201
LOCATE   EQU   X'08'                    LOCATE MODE - DCBMACRF   S20201
K4       EQU   4                        CONSTANT                 S20201
K1       EQU   1                        CONSTANT                 S20201
BOBSW    EQU   X'08'                                             A34959
FIXED    EQU   X'80'                                             A34959
BOBOFF   EQU   X'F7'                                             A34959
*
EOTSW    EQU   X'08'                    END OF TRACK SW          S20201
ALLBITS  EQU   X'FF'                    EVERYTHING               S20201
EOCSW    EQU   X'04'                    EOC SW                   S20201
EOT      EQU   X'01'                    EOT SW                   S20201
EOC      EQU   X'10'                    EOC SW                   S20201
         EJECT
         MVC   DCBFTMI3(L'DCBLPDA),DCBLPDA SAVE LPDA FOR CLOSE   Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=2  SET USERS KEY        Y02072
*
TSTHSK   LA    R2,ISLIOBA               C(R2)=A(IOBA)
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
         MVI   ISLECBA,X'40'            SIMULATE I/O ALREADY     M2676
*                                       * COMPLETED AS BUFFERS HAVE
*                                       * ALREADY BEEN WRITTEN
         L     R11,8(R10)               C(R11)=A(BCT)
***********************************************************************
*                                                                     *
*              SET COUNT FIELDS IN NCNT, OCNT, DCNT,                  *
*              BUFFR1, DCBLPDA, AND IOBA+32.                          *
*                                                                     *
***********************************************************************
TSTHK09  EQU   *
         LH    R8,DCBLRECL              C(R8)-LOGICAL RECORD LEN
         L     R3,8(0,R11)              C(R3)-A(BUF1)
         L     R6,4(0,R10)              C(R9)-A(KEYSAVE)
         SR    R5,R5                    C(R5)=ZERO
         IC    R5,DCBKEYLE              C(R5)-KEYLENGTH
         STC   R5,ISLNCNT+5             NCNT=XXXXXKXX
         MVC   ISLNCNT+6(2),TST10       NCNT=XXXXXKDD
         MVC   ISLOCNT+5(3),ISLNCNT+5   OCNT=XXXXXKDD
         MVC   ISLDCNT+5(3),ISLNCNT+5   DCNT=XXXXXKDD
         L     R7,0(0,R10)              C(R7)=A(AREA Y)
         MVC   5(3,R7),ISLNCNT+5        C(Y+5)=KDD FROM NCNT
         MVC   0(5,R3),DCBLPDA+3        CCHHR OF BUF1 FROM LPDA
         EJECT
***********************************************************************
*                                                                     *
*       RESUME LOAD ON LPDA TRACK - CHECK LAST BLOCK FOR PADDING      *
*                                                                     *
***********************************************************************
*
*   IS LAST PRIME DATA BLOCK PADDED - IF SO RESUME LOAD
*   TO OVERLAY PADDING
*
TSTHK05  LH    R7,DCBRKP                C(R7)-RELATIVE KEY POSIT
         LA    R4,8(R7,R3)              C(R9)-A(KEY OF PAD BLK)
         BCTR  R5,0                     DECREMENT KEYLENGTH FOR
*                                       SEQUENCE CHECK
         LA    R7,8(R3)                 C(R7)-START OF BLOCK READ M3214
         TM    DCBRECFM,FIXED           IS RECORD FORMAT FIXED   A34959
         BNO   TSTHK051                 NO - VARIABLE -- BR      A34959
*   FIXED LENGTH - USE BLKSIZE
         AH    R7,DCBBLKSI              C(R7)-END OF BLOCK READ   M3214
         B     TSTHK05A                 SKIP VLR PROCESSING      A34959
*   VARIABLE LENGTH - USE BLOCK DESCRIPTOR WORD FOR BLOCKSIZE
TSTHK051 EQU   *                        *                        A34959
         LA    R10,4(R7)                PT TO START OF RECORD    A34959
         AH    R7,0(R7)                 ADD BDW TO GET END       A34959
         LA    R4,4(R4)                 ALLOW FOR BDW            A34959
*   VLR - USE RECORD DESCRIPTOR WORD FOR LRECL
TSTHK052 EQU   *                                                 A34959
         TM    DCBRECFM,FIXED           IS RECORD FORMAT FIXED   A34959
         BO    TSTHK05A                 YES, BRANCH              A34959
         MVC   TSTWK1C(2),0(R10)        RDW                      A34959
         LH    R8,TSTWK1C               LRECL                    A34959
         AH    R10,TSTWK1C              PT TO NEXT RECORD        A34959
TSTHK05A EX    R5,COMPKEY               COMPARE REC K TO HIGH K
         LA    R4,0(R8,R4)              C(R9)-A(KEY OF NXT RCD)
         BE    TSTHK05C                 BR IF KEY IS IN BLOCK     24503
         CR    R7,R4                    IS NEXT KEY OUT OF BLOCK  M3214
         BH    TSTHK052                 BR TO CONTINUE SEARCH    A34959
*                                  LAST BLOCK IS FULL
         TM    DCBRECFM,FIXED           IS RECORD FORMAT FIXED   A34959
         BNO   TSTHK05F                 BR IF VARIABLE           A34959
TSTHK05C EQU   *                        *                        A34959
         TM    DCBRECFM,FIXED           IS RECORD FORMAT FIXED   A34959
         BO    TSTHK05D                 BR IF FIXED LEN RECS     A34959
         NI    IOBFLAGS,BOBOFF          SET BOB SW OFF           A34959
         B     TSTHK05F                 BRANCH, WILL NOT         A34959
*                                       OVERLAY INDEX IF VLR
TSTHK05D EQU   *                                                 A34959
FULLSW   EQU   X'02'                    BUFFER FULL INDICATOR    S20201
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         NI    DCBST,X'FF'-FULLSW       LAST BLOCK NOT FULL      S20201
         CR    R7,R4                    END OF BLOCK             S20201
*                                       A3249                    S20201
         BH    TSTHK05F                 YES - MOVE MODE / END OF S20201
*                                       * BUFFER, MUST CHECK FOR
*                                       * LOCATION AND SET SWITCHES.
         OI    DCBST,FULLSW             BLOCK FULL               S20201
*
         MODESET  KEYADDR=DXUKEY,WORKREG=7  SET USERS KEY        Y02072
*
         IC    R5,K3(R3)                SAVE LOW HEAD            S20201
         NC    K3(L1,R3),DCBHMASK       NORMALIZE HEAD           S20201
         BAL   R7,FULLMOVE              BR TO TEST               S20201
         STC   R5,K3(R3)                RESTORE LOW HEAD         S20201
         TM    DCBRECFM,LOCATE          LOCATE MODE              S20201
         BO    TSTHK05F                 YES - BOB NOT NEEDED     S20201
         NI    IOBFLAGS,X'FF'-BOBSW     TURN OFF BOB SW TO FORCE S20201
*                                       * NEW BUFFER
*                                       * INDICATOR
TSTHK05F EQU   *                        *                        S20201
*
         MODESET KEYADDR=DXUKEY,WORKREG=7  SET USERS KEY         Y02072
*
*                                       NEXT LOGICAL RECORD
         SH    R4,DCBRKP                C(R4)-CURRENT BUFF PTR   S20201
*                                        M321                    S20201
         SR    R4,R8                    PT TO LAST FIKLED ENTRY  S20201
*                                       A3249                    S20201
         ST    R4,ISLCBF                STORE CURRENT BUFF PTR   S20201
         MVC   ISLDCNT(5),DCBLETI       INIT CCHHR               A34959
         MVC   ISLNCNT(5),DCBLETI       INIT CCHHR               A34959
         TM    DCBRECFM,FIXED           IS RECORD FORMAT FIXED   A34959
         BO    TSTHK06                  BR IF FIXED              A34959
         TM    IOBFLAGS,BOBSW           TEST IF TRACK FULL       A34959
         BO    TSTHK18                  NO NEED TO RESET BUFF    A34959
*                                       LEN                      A34959
*                                       AND TRACK CAPACITY
         LA    R7,8(R3)                 POINT TO START OF BLOCK  A34959
         LH    R5,0(R7)                 PICK UP BDW              A34959
         SR    R5,R8                    SUBTRACT LENGTH OF       A34959
*                                       BLOCK READ
         STH   R5,0(R7)                 RESET LENGTH             A34959
*
*   MUST NOW SET REMAINING CAPACITY OF TRACK TO WHAT IT WAS
*        BEFORE BLOCK WRITTEN.
*
         AR    R5,R8                    R5 = BLKLEN              A34959
         SR    R6,R6                                             A34959
         IC    R6,DCBKEYLE              R6 = KEY LENGTH          A34959
         AR    R5,R6                    R5 = BLKLEN + KEYLEN     A34959
         L     R8,DCBLRAN               PTR TO ENTRY IN DEV      A34959
*                                       TABLE                    A34959
         IC    R6,7(R8)                 R6 = LIDO                A34959
         AR    R5,R6                    R5 = BLKLEN+KEYLEN+LIDO  A34959
         AH    R5,ISLWRSAV              ADD REMAINING CAPACITY   A34959
         STH   R5,ISLWRSAV              RESET REMAINING CAPACITY A34959
*
TSTHK06  EQU   *                                                 A34959
***********************************************************************
*                                                                     *
*        SET NORMAL TRACK INDEX TO OVERLAY CURRENT ENTRY.             *
*                                                                     *
***********************************************************************
TSTHK07A MVC   ISLOCNT(5),DCBLETI
         IC    R7,ISLNCNT+3
         BCTR  R7,0
         SR    R6,R6                    CLEAR                    S20201
         IC    R6,ISLHIRT
         SR    R5,R5
*   DETERMINE WHICH INDEX ENTRY TO PASS TO PROCESSING MODULE
         TM    DCBST,EOT+FULLSW         EOT - NOT SCHE TO WRITE  S20201
         BO    EOTEXT                   YES - USE NEXT INDEX     S20201
NOTEOTX  EQU   *                        SAME ENTRY               S20201
*   BACK UP NCNT SO PROCESSING MODULE WILL INCREMENT TO SAME ENTRY
         IC    R5,DCBLETI+4
         BCTR  R5,0
         LTR   R5,R5
         BZ    TSTHK07B
         STC   R5,ISLOCNT+4
         BCTR  R5,0
         LTR   R6,R5
         BP    TSTHK07D
         STC   R7,ISLNCNT+3
         B     TSTHK07C
TSTHK07B EQU   *                        TEST HEAD FOR NEW CYL   SA53743
         NC    ISLOCNT+K3(L'DCBHMASK),DCBHMASK HEAD ZERO        SA53743
         BNZ   TSTHK                    BR IF NOT HEAD ZERO     SA53743
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         OI    DCBST,EOC                SET INDICATOR TO BEGIN  SA53743
*                                       ON NEW CYLINDER         SA53743
         MODESET  KEYADDR=DXUKEY,WORKREG=4  SET USERS KEY        Y02072
*
TSTHK    STC   R7,ISLOCNT+3                                     SA53743
         STC   R7,ISLNCNT+3
         STC   R6,ISLOCNT+4
TSTHK07C BCTR  R6,0
TSTHK07D STC   R6,ISLNCNT+4
         B     TSTHK18
*   END OF TRACK OR CYLINDER USE CURRENT ENTRIES
EOTEXT   EQU   *                        *                        S20201
         SR    R7,R7                    CLEAR                    S20201
         IC    R7,ISLOCNT+K4            RECORD NUMBER            S20201
         LA    R7,K1(R7)                OF OVERFLOW              S20201
         IC    R5,ISLOCNT+K3            HEAD OF OVERFLOW         S20201
         LA    R5,K1(R5)                + ONE                    S20201
         CR    R6,R7                    IS IT VALID              S20201
         BNL   EOTEXT1                  YES-SAVE IT              S20201
         STC   R5,ISLOCNT+K3            INCREMENT HEAD           S20201
         LA    R7,K1                    RECORD = 1               S20201
         STC   R5,ISLDCNT+K3            HEAD OF DUMMY            S20201
EOTEXT1  EQU   *                        *                        S20201
         STC   R7,ISLOCNT+K4            RECORD                   S20201
         LA    R7,K1(R7)                INCREMENT TO DUMMY       S20201
         CR    R6,R7                    RECORD VALID             S20201
         BNL   EOTEXT2                  YES                      S20201
         STC   R5,ISLDCNT+K3            HEAD                     S20201
         LA    R7,K1                     RECORD = 1              S20201
EOTEXT2  EQU   *                        *                        S20201
         STC   R7,ISLDCNT+K4            RECORD NUMBER            S20201
         B     TSTHK18                  DONE                     S20201
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*              M O V E  M O D E  -  END OF BUFFER                   *
*                                                                   *
*   SET IOBFLAGS TO PROPER STATUS                                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
FULLMOVE EQU   *                        *                        A32496
*   MAKE SURE FIRST BUFFER NOT SCHEDULED
         NI    IOBS,ALLBITS-EOTSW-EOCSW REMOVE INDICATORS        S20201
         LA    R6,DCBHIRPD              ASSUME NOT SHARED        A32496
         CLI   DCBFIRSH+2,1             IS THERE A SHARED TRACK  A32496
         BE    QNOTSHRD                 NO - NORMAL PRIME TRACK  A32496
         CLC   DCBFIRSH+1(1),3(R3)      IS THIS A SHARED TRACK   A32496
         BNE   QNOTSHRD                 NO - NORMAL PRIME TRACK  A32496
         LA    R6,DCBHIRSH              PT TO HI R OF TRK        A32496
QNOTSHRD EQU   *                        *                        A32496
         CLC   4(1,R3),0(R6)            LAST ON TRACK            A32496
         BCR   7,R7                     NO - FINISHED            A32496
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         OI    DCBST,EOT                SET EOT SW               S20201
*
         MODESET  KEYADDR=DXUKEY,WORKREG=6  SET USERS KEY        Y02072
*
*   TEST FOR END OF CYLINDER
         CLC   DCBLDT+1(1),3(R3)        LAST TRACK OF CYLINDER   A32496
         BCR   7,R7                     NO - FINISHED            A32496
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         OI    DCBST,EOC                D.S. STARTS ON NEW CYL   S20201
*
         MODESET  KEYADDR=DXUKEY,WORKREG=6  SET USERS KEY        Y02072
*
         BR    R7                       RETURN                   A32496
         EJECT
TSTHK18  MVC   IOBDADA0(3),DCBLPDA
         MVC   IOBDADA3(5),0(R3)
         IC    R5,IOBDADA7
         BCTR  R5,0
         STC   R5,IOBDADA7
TSTHK19  MVI   ISLDCNT+4,X'00'
         SR    R3,R3                    C(R3)=ZERO
         IC    R3,DCBKEYLE              C(R3)=KEYLENGTH
         BCTR  R3,0                     KEYLENGTH-1 FOR EXECUTE
         L     R3,8(0,R11)              C(R3)-A(BUF1)
         MVC   TSTWK1C(4),1(R3)         CHHR OF BUF1 TO WORK AREA
VLR      EQU   X'40'                    VLR BIT                  A46070
         TM    DCBRECFM,VLR             VLR?                     A46070
         BO    TSTHK19B                 YES, SET EOT,EOC MAYBE   A46070
         TM    DCBST,EOT+FULLSW         IS IT EOT                S20201
         BO    EXIT                     YES - DONE               S20201
         B     TSTHK19C                 BR AROUND BOBSW TEST     M0935
TSTHK19B EQU   *                        FINISH MARKING           S20201
         TM    IOBFLAGS,BOBSW           END OF TRACK?            A46070
         BO    TSTHK20                  YES, SET IOBS BITS       A46070
TSTHK19C EQU   *                                                 M0935
         CLI   DCBHIRSH,X'00'           TEST FOR SHARED TRACK
         BE    TSTHK23                  BR-NO SHARED TRACK
         CLC   DCBFIRSH+1(1),TSTWK1C+2  FIRST REC ON SHARED TRK? A47330
         BNE   TSTHK23                  BRANCH IF NOT
         CLC   DCBHIRSH(1),TSTWK1C+3    HI R ON SHARED TRK
         BH    EXIT                     BR-NOT EOT
TSTHK20  OI    8(R11),X'08'             T-BIT ON IN BUF1
         CLC   DCBLDT+1(1),TSTWK1C+2    LAST TRACK ON CYL
         BH    EXIT                     BR-NOT EOC
         OI    8(R11),X'04'             C-BIT ON IN BUF1
         B     EXIT
TSTHK23  CLC   DCBHIRPD(1),TSTWK1C+3    HI R ON UNSHARED TRK
         BE    TSTHK20                  BR-EOT
         EJECT
*
* EXIT ********** EXIT ***************** EXIT *********** EXIT ********
*
EXIT     EQU   *
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         DROP  ROPENWA                  END USING ON OPEN WA     Y02072
         USING FORCORE,RCORE            EST ADDR ON OPEN WA      Y02072
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         USING BASETAG,RBASE            ESTABLISH BASE           O19110
         CLI   DCBNLEV,X'00'            ANY HIGH LEVEL INDEXES    24503
         MVC   0(L'LOAD5D,RWTGC),LOAD5D XCTL TO 5D IF YES        Y02072
         BNE   RELOOP                   BR IF YES                M4874
         TM    DCBOPTCD,X'40'           FULL TRACK INDEX WRITE   O19110
         BO    EXIT5T                   YES                      O19110
         TM    DCBOPTCD,X'80'           TEST FOR WRITE CHECK      24503
         MVC   0(L'LOAD2R,RWTGC),LOAD2R XCTL TO 2R IF NOT        Y02072
         BZ    RELOOP                   BR IF NOT                M4874
         MVC   0(L'LOAD2U,RWTGC),LOAD2U XCTL TO 2U IF WRITE CHCK Y02072
         B     RELOOP                   BRANCH TO RELOOP         O19110
EXIT5T   MVC   0(L'LOAD5T,RWTGC),LOAD5T MOVE 5T ID               Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BE    BASETAG                  BR-BEGIN THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BNE   RELOOP                   BR IF NOT AT END         M4874
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BNE   TCTLRTN                  BR IF NOT AT END         M4874
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    R15,DXCCW12
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
*
COMPKEY  CLC   0(1,R6),0(R4)            COMPARE CURRENT KEY TO
*                                       HIGH KEY
TST10    DC    H'10'
THISLOAD DC    C'6G'                    CURRENT MODULE ID
OPNLOD7  DC    C'0S'
LOAD2R   DC    C'2R'                    ID OF MODULE IGG0192R    Y02072
LOAD2U   DC    C'2U'                    ID OF MODULE IGG0192U    Y02072
LOAD5D   DC    C'5D'                    ID OF MODULE IGG0195D    Y02072
LOAD5T   DC    C'5T'                    ID OF MODULE IGG0195T    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
