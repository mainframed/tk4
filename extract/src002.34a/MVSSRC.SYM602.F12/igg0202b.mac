         TITLE 'IGG0202B  ISAM FORCE/TASK CLOSE EXECUTOR'
IGG0202B CSECT
         ENTRY IGG0202C
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0202B                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM FORCE/TASK CLOSE EXECUTOR                   *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = THIS ROUTINE IS ENTERED DURING NORMAL AND ABNORMAL       *
*            MEMORY TERMINATION, NORMAL AND ABNORMAL TASK             *
*            TERMINATION, AND DURING FORCE CLOSE PROCESSING TO        *
*            ENSURE THAT ALL DCB FIELD AREAS ARE FREED WHEN ALL OF    *
*            THE DCBS REFERENCING THEM ARE CLOSED.                    *
*                                                                     *
*            WHEN INVOKED DURING MEMORY TERMINATION (NORMAL OR        *
*            ABNORMAL), OR TASK TERMINATION (NORMAL OR ABNORMAL)      *
*            WHEN IT IS THE JOB STEP TASK, THE ADDRESS SPACE WILL     *
*            BE DISASSOCIATED FROM THE FIELD AREAS IT IS USING. THE   *
*            TOTAL USE COUNT OF EACH FIELD AREA WILL BE DECREMENTED   *
*            BY THE NUMBER OF USERS IN THE TERMINATING ADDRESS        *
*            SPACE (OR TASK).  IF THE TOTAL USE COUNT GOES TO ZERO,   *
*            THE FIELD AREA'S CORE WILL BE FREED.                     *
*                                                                     *
*            WHEN INVOKED DURING NORMAL OR ABNORMAL TASK TERMINATION, *
*            WHEN NOT THE JOB STEP TASK, OR FORCE CLOSE PROCESSING,   *
*            THE APPROPRIATE USE COUNTS WILL BE DECREMENTED BY ONE.   *
*            THE FIELD AREA WILL BE FREED IF ITS USE COUNT GOES TO    *
*            ZERO.                                                    *
*                                                                     *
*            IN ALL CASES, WHEN AN ADDRESS SPACE (ASID) USE COUNT     *
*            GOES TO ZERO, IT WILL BE REPLACED BY THE LAST ASID USE   *
*            COUNT ENTRY IN THE FIELD AREA OR FIELD AREA EXTENSION.   *
*            THE LAST ENTRY WILL THEN BE CLEARED.  IF THIS LAST       *
*            ENTRY WAS THE ONLY ASID USE COUNT ENTRY IN A FIELD AREA  *
*            EXTENSION, THE EXTENSIONS CORE WILL BE FREED.            *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES                      *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT                              *
*                                                                     *
* MODULE-TYPE = RECOVERY ROUTINE                                      *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 858 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = REENTRANT, SUPERVISOR STATE, ENABLED                *
*                                                                     *
* ENTRY-POINT = IGG0202B, IGG0202C                                    *
*                                                                     *
*    PURPOSE = FOR ENTRY POINT IGG0202B, FORCE CLOSE PROCESSING.      *
*                                                                     *
*    LINKAGE = FOR ENTRY POINT IGG0202B, FORCE CLOSE ENTRY:           *
*              REGISTER  2 - ADDR OF COPIED DCB BEING FORCED CLOSED.  *
*              REGISTER  4 - ADDR OF O/C/E WORK AREA.                 *
*              REGISTER  5 - O/C/E RECOVERY ROUTINE WORK AREA ADDR.   *
*              REGISTER  6 - ADDR OF WHERE-TO-GO (WTG) TABLE.         *
*              REGISTER  7 - ADDR OF RECOVERY TERMINATION             *
*                            COMMUNICATION AREA (RTCA).               *
*              REGISTER  8 - ADDR OF PARAMETER LIST DEFINED BY O/C/E  *
*                            WHEN IT ISSUED ESTAE ESTABLISHING ITS    *
*                            RECOVERY ROUTINE.                        *
*              REGISTER  9 - ADDR OF DD ENTRY FOR DCB BEING FORCED    *
*                            CLOSED, OR ZERO.                         *
*              REGISTER 11 - ADDR OF DEB FOR DCB BEING FORCED         *
*                            CLOSED, OR ZERO.                         *
*              REGISTER 13 - ADDR OF 18 WORD REGISTER SAVE AREA,      *
*                            STORAGE PROTECT KEY 5.                   *
*              REGISTER 14 - RETURN ADDRESS.                          *
*              REGISTER 15 - ENTRY POINT IGG0202B ADDRESS.            *
*                                                                     *
*    PURPOSE = FOR ENTRY POINT IGG0202C, MEMORY OR TASK TERMINATION.  *
*                                                                     *
*    LINKAGE = FOR ENTRY POINT IGG0202C, TASK CLOSE:                  *
*              REGISTER  1 - POINTS TO PARAMETER LIST WHICH HAS       *
*                            POINTER TO RECOVERY WORK AREA (IHARMPL). *
*              REGISTER 13 - POINTS TO 18 WORD STANDARD SAVE AREA,    *
*                            STORAGE PROTECT KEY 0.                   *
*              REGISTER 14 - RETURN ADDRESS.                          *
*              REGISTER 15 - ENTRY POINT IGG0202C ADDRESS.            *
*              REGISTERS 0, 2-12 UNRELIABLE.                          *
*                                                                     *
* INPUT = SEE DESCRIPTION OF LINKAGES AS DEFINED FOR ENTRY POINTS     *
*         IGG0202B AND IGG0202C ABOVE.                                *
*                                                                     *
* OUTPUT = RESTORE REGISTERS UPON EXITING.                            *
*                                                                     *
* EXIT-NORMAL = REGISTER 15 WITH RETURN CODE TO CALLER:               *
*               00 - RETURN CODE TO TASK CLOSE.                       *
*               04 - RETURN CODE TO FORCE CLOSE                       *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = SETLOCK                                               *
*               FREEMAIN                                              *
*                                                                     *
*    DATA-AREAS = PREFIXED SAVE AREA (PSA)                            *
*                 RECOVERY WORK AREA (IHARMPL)                        *
*                                                                     *
*    CONTROL-BLOCK = CVT                                              *
*                    DCBFA (DCB FIELD AREA)                           *
*                    DEB                                              *
*                    ASCB                                             *
*                    TCB                                              *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = SAVE, SAVE REGISTERS ON ENTRY.                             *
*          MODESET, CHANGE STORAGE PROTECT KEY.                       *
*          RETURN, TO RESTORE REGISTERS AND SET RETURN CODE FOR EXIT. *
*          SETLOCK, TO OBTAIN/RELEASE LOCAL AND CMS LOCKS.            *
*          FREEMAIN, BRANCH ENTRY TO FREE FIELD AREA OR EXTENSION.    *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*        OS/VS2-02 DELETIONS/CHANGES                                  *
*                                                               YM07088
* C483400,A493900                                               ZA01285
*              VS2 RELEASE 030 CHANGES
* C494400-495400                                                OZ04534
*              CHANGES SINCE VS2-3.7                                  *
* A162500-163000                                               @ZA08299
* C165320                                                      @ZA08299
*A183400,187600,194900,498400                                  @ZA19614
*C186900,188300                                                @ZA19614
*A058600-059100                                                @ZA31151
***********************************************************************
         EJECT
* REGISTER EQUATES
*
RWRK1    EQU   0                        WORK REGISTER
RWRK2    EQU   1                        WORK REGISTER
RCURRID  EQU   2                        CURRENT MEMORY ASID
RWRK3    EQU   3                        WORK REGISTER
RTCB     EQU   4                        TCB REGISTER
RDCBFA   EQU   5                        DCB FIELD AREA (FA) REGISTER
RLINK    EQU   6                        SUBROUTINE LINKAGE REGISTER
RASCB    EQU   7                        ASCB REGISTER/WORK REGISTER
RDEB     EQU   8                        ADDR OF CURR DEB IN QUEUE
RBASE    EQU   9                        BASE REGISTER
RSAVE    EQU   10                       SAVE SAVE AREA ADDR
RASID    EQU   11                       PTR TO ASID COUNT FIELDS
REXT     EQU   12                       FIELD AREA EXTENSION PTR
RCNTR    EQU   13                       SAVE AREA ADDR ON ENTRY, USED
*                                       AS COUNTER FOR ASID ENTRIES
RRETRN   EQU   14                       RETURN ADDR ON ENTRY, USED AS
*                                       WORK REGISTER
RENTRY   EQU   15                       ENTRY POINT ADDR, USED AS WORK
*                                       REGISTER
***********************************************************************
*                                                                     *
*    IGG0202B - ISAM FORCE CLOSE EXECUTOR ENTRY POINT.  ON ENTRY WILL *
*               TEST FOR DEB ADDRESS BEING PASSED.  IF NONE PASSED,   *
*               WILL SET RETURN CODE OF 4 AND RETURN.  ENTERED IN     *
*               STORAGE PROTECT KEY 5, SUPERVISORY STATE.             *
*                                                                     *
***********************************************************************
         SPACE 2
         USING IGG0202B,RENTRY          ESTABLISH ADDRESSABILITY
         LTR   RASID,RASID              DEB ADDRESS PASSED
         BNZ   CONTINUE                 BR YES
         LA    RENTRY,RCODE4            NO DEB ADDR, SET RTRN CODE 4
         BR    RRETRN                   RETURN TO FORCE CLOSE
*
CONTINUE SAVE  (14,12)                  SAVE REGISTERS
         DROP  RENTRY                   END BASE USING
         LR    RBASE,RENTRY             ESTABLISH NEW BASE REGISTER
         USING IGG0202B,RBASE           MODULE ADDRESSABILITY
         LR    RSAVE,RCNTR              SAVE SAVE AREA ADDRESS
*
         LR    RDEB,RASID               DEB ADDRESS
         USING DEBBASIC,RDEB            DEB ADDRESSABILITY
         LR    RWRK3,RDEB               DEB ADDRESS            @ZA31151
         SH    RWRK3,NPFX               POINT TO DEB PREFIX    @ZA31151
         USING DEBPREFX,RWRK3           DEB PFX ADDRESSABILITY @ZA31151
         CLC   DEBAMTYP,ISAM            IS THIS AN ISAM DEB?   @ZA31151
         BNE   FCEXIT                   NO-RET TO FORCE CLOSE  @ZA31151
         DROP  RWRK3                    END USING ON DEB PRFX  @ZA31151
         L     RASCB,DEBEXPT            ADDR OF DEB EXTENSION
         USING DEBACSMD,RASCB           DEB EXTENSION ADDRESSABILITY
         TM    DEBDCBFA,SHR             DATA SET OPENED FOR DISP = SHR
         BNO   FCEXIT                   BR NO, RETURN TO FORCE CLOSE
*
         L     RDCBFA,DEBDCBFA          ADDRESS OF DCB FIELD AREA
         USING DCBFA,RDCBFA             FIELD AREA ADDRESSABILITY
         SR    RWRK1,RWRK1              ZERO REGISTER
         ST    RWRK1,DEBDCBFA           CLEAR FIELD AREA PTR IN DEB
         DROP  RASCB                    END DEB EXTENSION USING
         LA    RDCBFA,0(RDCBFA)         CLEAR HIGH BYTE
         L     RTCB,DEBTCBAD            TCB ADDRESS
         SPACE 2
         MODESET KEYADDR=KEY0,WORKREG=11  CHANGE TO PROTECT KEY ZERO
         SPACE 2
*    OBTAIN LOCAL AND CMS LOCKS, WILL BE IN PROTECT KEY 5 UPON
*    RETURN FROM GETLOCKS SUBROUTINE.
*
         BAL   RLINK,GETLOCKS           OBTAIN LOCAL AND CMS LOCKS
*
*    OBTAIN ADDRESS SPACE ID
*
         USING PSA,0                    LOW CORE ADDRESSABILITY
         L     RCURRID,PSAAOLD          ASCB ADDRESS
         USING ASCB,RCURRID             ASCB ADDRESSABILITY
         LH    RCURRID,ASCBASID         ADDRESS SPACE ID
         DROP  RCURRID                  END USING ON ASCB
         SPACE 2
*    SEARCH FIELD AREA AND EXTENSION(S) FOR ENTRY FOR THIS
*    ADDRESS SPACE.
*
         BAL   RLINK,ASIDSRCH           SEARCH FA FOR ASID ENTRY
*
         LTR   RASID,RASID              ASID FOUND IN FIELD AREA
         BZ    FREELCKS                 BR NO, FREE LOCKS AND RETURN
*
         LH    RWRK1,DFAUSE             TOTAL OF ALL ASID USE COUNTS
         BCT   RWRK1,STORUSE            LESS ONE, BR IF NOT ZERO
         SPACE 2
*    TOTAL USE COUNT FOR FIELD AREA HAS GONE TO ZERO.  GO REMOVE
*    FROM FIELD AREA CHAIN AND FREE ITS CORE
*
         BAL   RLINK,FREEFA             FREE FIELD AREA CORE
*
         B     FREELCKS                 FREE LOCKS AND RETURN
         SPACE 2
*    STORE NEW USE COUNT.  DECREMENT CURRENT ASID USE COUNT AND IF
*    IT GOES TO ZERO, MOVE LAST ASID ENTRY IN FIELD AREA OR EXTENSION
*    TO REPLACE IT.  IF LAST ENTRY IS ONLY ENTRY IN AN EXTENSION,
*    FREE ITS CORE.
*
STORUSE  STH   RWRK1,DFAUSE             STORE NEW TOTAL USE COUNT
         USING DFAASID,RASID            ASID ENTRY ADDRESSABILITY
         LH    RWRK1,DFAUSEX            ASID USE COUNT
         BCT   RWRK1,STORCNT            ASID COUNT LESS ONE, BR NOT 0
*
         BAL   RLINK,ASIDUPDT           MOVE LAST ASID ENTRY
*
         B     FREELCKS                 FREE LOCKS AND RETURN
*
STORCNT  STH   RWRK1,DFAUSEX            STORE NEW ASID USE COUNT
         DROP  RASID                    END ASID ENTRY USING
         SPACE 2
*    RELEASE THE CMS AND LOCAL LOCKS AND RETURN TO FORCE CLOSE.
*
FREELCKS BAL   RLINK,FREELOCK           RELEEASE LOCKS, RETURNS IN
*                                       PROTECT KEY 0.
         SPACE 2
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY
         SPACE 2
FCEXIT   LR    RCNTR,RSAVE              SAVE AREA ADDR
         RETURN (14,12),RC=4            RETURN TO FORCE CLOSE
*                                       WITH RETURN CODE OF 4
         EJECT
***********************************************************************
*    IGG0202C - TASK CLOSE ROUTINE.  THIS ROUTINE IS ENTERED IN THE   *
*    EVENT OF A NORMAL OR ABNORMAL MEMORY OR TASK TERMINATION.  IN    *
*    THE EVENT OF A TASK TERMINATION, AND NOT THE JOB STEP TCB, THE   *
*    ROUTINE WILL SEARCH THE TCB'S DEB QUEUE FOR AN ISAM DEB.  IF     *
*    THAT DEB IS FOR A SHARED DATA SET, IT WILL BE DISASSOCIATED      *
*    FROM THE FIELD AREA AND THE APPROPRIATE USE COUNTS DECREMENTED.  *
*    IN ALL OTHER EVENTS THE TOTAL USE COUNT WILL BE DECREMENTED BY   *
*    THE ASID USE COUNT AND THEN THAT ASID USE COUNT SET TO ZERO.     *
***********************************************************************
         SPACE 2
IGG0202C DS    0F                       TASK CLOSE, IN PROTECT KEY 0
         SAVE  (14,12)                  SAVE REGISTERS
         USING IGG0202C,RENTRY          ADDRESSABILITY
         L     RBASE,COMMON             ADDR OF BEGINNING OF MODULE
         DROP  RENTRY                   END BASE USING
         USING IGG0202B,RBASE           COMMON BASE ADDRESSABILITY
         LR    RSAVE,RCNTR              SAVE SAVE AREA ADDR
         SPACE 2
*    DETERMINE IF THERE ARE ANY FIELD AREAS, RETURN TO TASK CLOSE
*    NO FIELD AREAS.
*
         L     RASCB,CVTPTR             ADDRESS OF CVT
         USING CVT,RASCB                CVT ADDRESSABILITY
         L     RASCB,CVTEXT1            ADDR OF CVT EXTENSION
         USING CVTXTNT1,RASCB           CVT EXTENSION ADDRESSABILITY
         L     RDCBFA,CVTFACHN          FIELD AREA POINTER
         DROP  RASCB                    END CVT EXTENSION USING
         LTR   RDCBFA,RDCBFA            ANY FIELD AREAS
         BZ    TCEXIT                   BR NO, RETURN TO TASK CLOSE
         SPACE 2
*    OBTAIN THE LOCAL AND CMS LOCKS.  GETLOCKS ROUTINE WILL OBTAIN
*    LOCKS AND RETURN IN DATA MGT PROTECT KEY (5)
*
         L     RWRK3,0(RWRK2)           RECOVERY WORK AREA ADDR YM07088
         BAL   RLINK,GETLOCKS           OBTAIN LOCKS, WILL BE IN
         USING CVTXTNT1,RASCB           PROVIDE ADDRESSABILITY @ZA08299
         L     RDCBFA,CVTFACHN          POINTER TO FIELD AREA  @ZA08299
         DROP  RASCB                    NO LONGER NEEDED       @ZA08299
         LTR   RDCBFA,RDCBFA            DOES FIELD AREA EXIST? @ZA08299
         BNZ   FINDTERM                 IF YES - CONTINUE      @ZA08299
         B     KEYZRO                   ELSE RETURN            @ZA08299
*                                       PROTECT KEY 5 ON RETURN
         SPACE 2
*    OBTAIN ADDRESS SPACE ID
*
         USING RMPL,RWRK3               RECOVERY WA ADDR        YM07088
FINDTERM LH    RCURRID,RMPLASID         ADDRESS SPACE ID       @ZA08299
         SPACE 2
*    DETERMINE TYPE OF TERMINATION IN PROGRESS.
*
         SR    RTCB,RTCB                NO TCB FOR MEMORY TERMINATION
         TM    RMPLFLG1,MEMTERM         MEMORY TERMINATION
         BO    FAADDR                   BR YES
*
         L     RTCB,RMPLTCBA            TCB ADDRESS
         TM    RMPLFLG1,JSTCB           THIS THE JOB STEP TCB
         BO    FAADDR                   BR YES
         SPACE 2
***********************************************************************
*    SUBTASK TERMINATING - SEARCH TCB DEB QUEUE FOR ISAM DEBS.  IF    *
*    DATA SET OPENED FOR SHARE, DISASSOCIATE DEB FROM FIELD AREA,     *
*    DECREMENT APPROPRIATE USE COUNTS.                                *
***********************************************************************
         SPACE 2
         USING TCB,RTCB                 TCB ADDRESSABILITY
         DROP  RWRK3                    END RECOVERY WA USING
         L     RDEB,TCBDEB              ADDR OF FIRST DEB
         LA    RDEB,0(RDEB)             CLEAR THE HIGH BYTE    @ZA19614
         LTR   RDEB,RDEB                ANY DEBS IN QUEUE
         BZ    KEYZRO                   BR NO, RELEASE LOCKS
         USING DEBBASIC,RDEB            DEB ADDRESSABILITY
*
TSTAMTYP LR    RWRK3,RDEB               COPY DEB ADDRESS       @ZA19614
         SH    RWRK3,NPFX               POINT TO DEB PREFIX    @ZA19614
         USING DEBPREFX,RWRK3           DEB PREFIX ADDRESSABLE @ZA19614
*
         CLC   DEBAMTYP,ISAM            THIS AN ISAM DEB
         BE    SEARCH                   BR YES
         DROP  RWRK3                    END USING ON DEB PREFIX
*
QUEUE    L     RDEB,DEBDEBAD            ADDR OF NEXT DEB IN QUEUE
         LA    RDEB,0(RDEB)             CLEAR THE HIGH BYTE    @ZA19614
         LTR   RDEB,RDEB                ANOTHER DEB
         BNZ   TSTAMTYP                 BR YES
         B     KEYZRO                   NO, END OF DEB QUEUE
         SPACE 2
*    TEST FOR SHARED DATA SET.  IF SHARED SEARCH FIELD AREA AND
*    EXTENSION (IF PRESENT) FOR ASID ENTRY.
*
SEARCH   EQU   *                        TEST FOR SHARED DISP.
         L     RWRK3,DEBEXPT            ADDR OF DEB EXTENSION
         USING DEBACSMD,RWRK3           EXTENSION ADDRESSABILITY
         TM    DEBDCBFA,SHR             THIS A SHARED DATA SET
         BZ    QUEUE                    BR NO, TEST NEXT DEB
         L     RDCBFA,DEBDCBFA          YES, FIELD AREA ADDRESS
         LA    RDCBFA,0(RDCBFA)         CLEAR HIGH BYTE
*
         BAL   RLINK,ASIDSRCH           IS THIS ASID REF. IN FIELD
*                                       AREA POINTED TO BY DEB
         LTR   RASID,RASID              ASID FOUND
         BZ    QUEUE                    BR NO, TEST FOR MORE DEBS
         SPACE 2
*    ASID ENTRY FOUND IN FIELD AREA (OR EXTENSION).  SUBTRACT ONE
*    FROM TOTAL USE COUNT, IF ZERO FREE FIELD AREA CORE.
*
         LH    RWRK2,DFAUSE             TOTAL USE COUNT
         BCT   RWRK2,STORECNT           LESS ONE, BR IF NOT 0
*
         SR    RWRK2,RWRK2              SET REGISTER TO ZERO
         ST    RWRK2,DEBDCBFA           CLEAR FIELD AREA POINTER
         DROP  RWRK3                    END DEB EXTENSION USING
         BAL   RLINK,FREEFA             FREEFIELD AREA CORE
         B     QUEUE                    TEST FOR MORE DEBS
         SPACE 2
*    TOTAL USE COUNT OF FIELD AREA DID NOT GO TO ZERO.  STORE NEW
*    USE COUNT AND UPDATE ASID USE COUNT FIELDS.
*
STORECNT STH   RWRK2,DFAUSE             STORE UPDATED USE COUNT
*
         USING DFAASID,RASID            ASID ENTRY ADDRESSABILITY
         LH    RWRK2,DFAUSEX            ASID USE COUNT
         BCT   RWRK2,STIDCNT            ASID COUNT LESS ONE, BR NOT 0
*
         BAL   RLINK,ASIDUPDT           MOVE LAST ASID ENTRY TO
*                                       REPLACE THIS ASID'S ENTRY
         B     QUEUE                    TEST FOR MORE DEBS
*
STIDCNT  STH   RWRK2,DFAUSEX            STORE NEW ASID USE COUNT
         B     QUEUE                    TEST FOR MORE DEBS
         DROP  RASID                    END ASID ENTRY USING
         SPACE 4
***********************************************************************
*    MEMORY OR JOB STEP TERMINATION.  REMOVE ALL OF THIS ADDRESS      *
*    SPACES ENTRIES IN ALL FIELD AREAS.  THE TOTAL USE COUNT OF       *
*    EACH FIELD AREA IS TO BE DECREMENTED BY THE ASID USE COUNT.      *
*    IF THE TOTAL USE COUNT GOES TO ZERO, THE FIELD AREA CORE WILL    *
*    BE FREED.  RDCBFA CONTAINS ADDRESS OF FIRST FA IN CHAIN.         *
***********************************************************************
         SPACE 2
FAADDR   BAL   RLINK,ASIDSRCH           FA ENTRY FOR THIS ASID
         LTR   RASID,RASID              ASID IN THIS FIELD AREA
         BZ    NXTFA                    BR NO, TEST NEXT FIELD AREA
*
         LH    RWRK1,DFAUSE             TOTAL OF ASID USE COUNTS
         USING DFAASID,RASID            ASID ADDRESSABILITY
         SH    RWRK1,DFAUSEX            C(RWRK1)=(TOTAL)-(ASID COUNT)
         BNZ   IDUPDT                   BRANCH IF TOTAL USE COUNT
*                                       DID NOT GO TO ZERO
         DROP  RASID                    END USING ON ASID
*
*    TOTAL USE COUNT IS ZERO.  REMOVE FIELD AREA FROM CHAIN AND
*    FREE ITS CORE.
*
         L     RCNTR,DFACHAIN           ADDR OF NEXT FA IN CHAIN
         BAL   RLINK,FREEFA             FREE FIELD AREA CORE
         C     RDCBFA,ENDCHN            WAS THAT LAST FA IN CHAIN
         BE    KEYZRO                   BR YES - FINISHED
         B     FAADDR                   TEST FA FOR ASID
*
NXTFA    L     RDCBFA,DFACHAIN          ADDR ON FEXT FIELD AREA
         C     RDCBFA,ENDCHN            REACHED END OF FA CHAIN
         BNE   FAADDR                   BR NO
         B     KEYZRO                   BR YES, RELEASE LOCKS
*
*    MOVE LAST ASID ENTRY TO REPLACE CURRENT ENTRY, FREE EXTENSION
*    IF LAST ASID ENTRY ONLY ENTRY IN THE EXTENSION.
*
IDUPDT   STH   RWRK1,DFAUSE             STORE NEW TOTAL USE COUNT
*
         BAL   RLINK,ASIDUPDT           MOVE LAST ASID ENTRY TO
*                                       REPLACE THIS ASID'S ENTRY
         B     NXTFA                    TEST FOR ANOTHER FIELD AREA
         SPACE 2
*    CHANGE TO KEY 0 AND RELEASE CMS AND LOCAL LOCKS.  CONTROL WILL
*    BE RETURNED IN PROTECT KEY 0.
*
KEYZRO   BAL   RLINK,FREELOCK           RELEASE LOCKS
*
TCEXIT   LR    RCNTR,RSAVE              SAVE AREA ADDRESS
         RETURN (14,12),RC=0            RESTORE REGS, RETURN CODE = 0
         EJECT
***********************************************************************
*                                                                     *
*    GETLOCKS - THIS SUBROUTINE OBTAINS THE LOCAL AND CROSS MEMORY    *
*               SERVICES (CMS) LOCKS.  ON ENTRY TO THIS ROUTINE MUST  *
*               BE IN PROTECT KEY 0.  UPON EXIT FROM THIS ROUTINE     *
*               THE LOCAL AND CMS LOCKS WILL BE HELD AND WILL BE IN   *
*               PROTECT KEY 5.  REGISTERS 11, 12, 13, 14 ARE ALTERED. *
*                                                                     *
***********************************************************************
         SPACE 2
*    OBTAIN LOCAL LOCK, RELEASED AT FLCL IN THIS MODULE.
*
GETLOCKS EQU   *                        OBTAIN LOCKS
         SPACE 2
GLCL     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,   OBTAIN THE           *
               RELATED=(DCBFA,IGG0202B(FLCL))     LOCAL LOCK
         SPACE 2
*    OBTAIN CMS LOCK, RELEASED AT FCMS IN THIS MODULE
*
GCMS     SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,     OBTAIN CROSS MEMORY  *
               RELATED=(DCBFA,IGG0202B(FCMS))     SERVICES LOCK
         SPACE 2
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY
         SPACE 2
         BR    RLINK                    RETURN
         EJECT
***********************************************************************
*                                                                     *
*    FREELOCK - THIS SUBROUTINE RELEASES THE CMS AND LOCAL LOCKS.     *
*               ENTRY TO THIS ROUTINE ASSUMES THAT THE CMS AND LOCAL  *
*               LOCKS ARE HELD AND IN PROTECT KEY 5.  UPON EXIT FROM  *
*               THIS ROUTINE NO LOCKS WILL BE HELD AND WILL BE IN     *
*               KEY 0.  REGISTERS 11, 12, 13, 14 ARE ALTERED.         *
*                                                                     *
***********************************************************************
         SPACE 2
FREELOCK MODESET KEYADDR=KEY0,WORKREG=11  CHANGE TO PROTECT KEY 0
         SPACE 2
*    RELEASE CMS LOCK WHICH WAS OBTAINED AT GCMS IN THIS MODULE.
*
FCMS     SETLOCK RELEASE,TYPE=CMS,              RELEASE CMS            *
               RELATED=(DCBFA,IGG0202B(GCMS))   LOCK
         SPACE 2
*
*    RELEASE LOCK, OBTAINED AT GLCL IN THIS MODULE.
*
FLCL     SETLOCK RELEASE,TYPE=LOCAL,            RELEASE LOCK           *
               RELATED=(DCBFA,IGG0202B(GLCL))   LOCKS
         SPACE 2
         BR    RLINK                    RETURN
         EJECT
***********************************************************************
*                                                                     *
*    ASIDSRCH - THIS ROUTINE SEARCHES THE ASID ENTRIES IN A FIELD     *
*               AREA AND ITS EXTENSIONS FOR THE ASID OF THE CURRENT   *
*               TASK (MEMORY).  ON ENTRY TO THIS ROUTINE REGISTER     *
*               DCBFA MUST CONTAIN THE ADDRESS OF THE FIELD AREA AND  *
*               RCURRID THE ASID OF THE TERMINATING TASK (MEMORY).    *
*               UPON EXIT RASID WILL CONTAIN THE ADDRESS OF THE ASID  *
*               ENTRY IN THE FIELD AREA OR ZERO (ASID NOT FOUND),     *
*               REXT (REG 12) WILL CONTAIN THE ADDRESS OF THE         *
*               EXTENSION OR ZERO (ASID IN FIELD AREA), AND RCNTR     *
*               (REG 13) CONTAINS THE NO. OF ASID ENTRIES REMAINING   *
*               PLUS ONE.                                             *
*                                                                     *
***********************************************************************
         SPACE 2
ASIDSRCH LA    RASID,DFAASID1           ADDR OF FIRST ASID ENTRY
         SR    REXT,REXT                IND. SEARCH IN FIELD AREA
         USING DFAASID,RASID            ASID ADDRESSABILITIES
NOASIDS  LA    RCNTR,DFANOIDS           NO. OF ASID ENTRIES IN DCBFA
TESTASID CH    RCURRID,DFAASID          ASID FOR THIS ADDR SPACE
         BE    FOUND                    BR YES
         BCT   RCNTR,INCRPTR            BR IF MORE ENTRIES
         L     REXT,DFAPTR              ADDR OF EXTENSION
         LTR   REXT,REXT                IS THERE AN EXTENSION
         BZ    NOTFND                   BR NO, ASID NOT FOUND
         USING DCBFAEX,REXT             FA EXTENSION ADDRESSABILITY
         LA    RASID,DFAXSID1           ADDR OF FIRST ASID ENTRY IN
*                                       FIELD AREA EXTENSION
         B     NOASIDS                  SEARCH EXTENSION FOR ASID
         DROP  REXT                     END USING OF FA EXTENSION
*
INCRPTR  LA    RASID,DFANXPTR(RASID)    PT TO NEXT ASID ENTRY FIELD
         B     TESTASID                 TEST NEXT ASID
*
NOTFND   SR    RASID,RASID              IND. ASID NOT FOUND IN FA
FOUND    EQU   *                        BR HERE IF ASID FOUND
         BR    RLINK                    RETURN
         EJECT
***********************************************************************
*                                                                     *
*    ASIDUPDT - THIS ROUTINE FINDS THE LAST ASID ENTRY IN THE FIELD   *
*               AREA (OR EXTENSION) AND MOVES IT INTO THE ASID FIELD  *
*               THAT IS BEING DELETED.  IF THE LAST ASID IS FOUND TO  *
*               BE THE ONLY ENTRY IN A FIELD AREA EXTENSION, THIS     *
*               ROUTINE WILL BRANCH TO THE FREEFA ROUTINE TO FREE     *
*               THE EXTENSIONS CORE.  INPUT TO THIS ROUTINE ARE       *
*               REGISTERS RASID (11), REXT (12), AND RCNTR (13) AS    *
*               DEFINED IN ROUTINE ASIDSRCH.                          *
*                                                                     *
***********************************************************************
         SPACE 2
ASIDUPDT LR    RWRK2,RASID              PT TO DELETED ASID ENTRY
         LR    RWRK3,RASID              PTR TO LAST ASID ENTRY FOUND
         SR    RWRK1,RWRK1              ZERO FOR COMPARE
LOOP     BCT   RCNTR,NXTFLD             BR IF MORE ENTRIES
         L     REXT,DFAPTR              ADDR OF EXTENSION
         LTR   REXT,REXT                IS THERE AN EXTENSION
         BZ    MOVEID                   BR NO, MOVE LAST ENTRY
         USING DCBFAEX,REXT             FA EXTENSION ADDRESSABILITY
         LA    RASID,DFAXSID1           ADDR OF FIRST ASID ENTRY
         DROP  REXT                     END USING ON EXTENSION
         LA    RCNTR,DFANOIDS           NO. ASID ENTRIES IN EXTENSION
         B     TESTID                   TEST FOR ASID ENTRY
*
NXTFLD   EQU   *                        TEST NEXT ENTRY
         LA    RASID,DFANXPTR(RASID)    PT TO NEXT ASID ENTRY
*
TESTID   CH    RWRK1,DFAASID            IS THERE AN ASID ENTRY
         BE    MOVEID                   BR IF NO ASID
         LR    RWRK3,RASID              SAVE ADDR OF LAST ASID FOUND
         B     LOOP                     TEST FOR MORE ASID FIELDS
*
*    THE LAST ASID ENTRY HAS BEEN FOUND.  MOVE LAST ENTRY TO REPLACE
*    THE ASID ENTRY OF THIS ADDRESS SPACE.
*
MOVEID   EQU   *                        MOVE LAST ENTRY
         L     RENTRY,0(RWRK3)          LAST ASID ENTRY AND STORE
         ST    RENTRY,0(RWRK2)          IN DELETED ENTRY FIELD
         ST    RWRK1,0(RWRK3)           CLEAR LAST ENTRY
         CR    RWRK3,REXT               WAS LAST ENTRY THE ONLY ENTRY
*                                       IN A FIELD AREA EXTENSION
         BNE   0(RLINK)                 BR NO - RETURN
*
*    FIELD AREA EXTENSION TO BE FREED.
*
         L     RENTRY,DFAASIDN          ADDR OF FIRST EXTENSION
         LA    RRETRN,DFAASIDN          ADDR OF EXTENSION PTR
FINDEXT  CR    RENTRY,REXT              THIS THE EXTENSION
*                                       TO BE FREED
         BE    CLRPTR                   BR YES, CLEAR PTR TO EXTENSION
         USING DCBFAEX,RENTRY           EXTENSION ADDRESSABILITY
         LA    RRETRN,DFAEXN            ADDR OF PTR TO NEXT EXTENSION
         L     RENTRY,DFAEXN            ADDR OF NEXT EXTENSION
         DROP  RENTRY                   END EXTENSION USING
         B     FINDEXT                  TEST THIS EXTENSION
*
*    FIELD AREA OR EXTENSION POINTING TO EXTENSION TO BE FREED,
*    CLEAR POINTER
*
CLRPTR   ST    RWRK1,0(RRETRN)          CLEAR PTR TO EXT. TO BE FREED
*
         L     RWRK1,EXTSP              SUBPOOL AND LENGTH OF EXT.
         LR    RWRK2,REXT               ADDR OF CORE TO BE FREE
         B     FREEEXT                  BR TO FREE FA EXTENSION,
*                                       FREEFA WILL RETURN TO CALLER
*                                       OF ASIDUPDT
         EJECT
***********************************************************************
*                                                                     *
*    FREEFA - THIS ROUTINE FREES THE DCB FIELD AREA OR FIELD AREA     *
*             EXTENSION CORE.  IT USES THE BRANCH ENTRY TO FREEMAIN.  *
*             THE ENTRY TO FREE THE EXTENSION CORE IS FREEEXT.        *
*                                                                     *
***********************************************************************
         SPACE 2
FREEFA   L     RWRK3,CVTPTR             CVT ADDRESS
         USING CVT,RWRK3                ADDRESSABILITY ON CVT
         L     RWRK3,CVTEXT1            ADDR OF CVT EXTENSION
         USING CVTXTNT1,RWRK3           CVT EXTENSION ADDRESSABILITY
         L     RWRK2,CVTFACHN           ADDR OF FIRST FA IN CHAIN
         LA    RWRK2,0(RWRK2)           CLEAR HIGH BYTE
*
         LA    RENTRY,CVTFACHN          ADDR OF PTR TO FIELD AREA
         CLC   DFACHAIN,ENDCHN          FA LAST IN CHAIN
         BNE   UNCHAIN                  BR NO
         CR    RWRK2,RDCBFA             FIRST AND LAST IN CHAIN
         BNE   UNCHAIN                  BR NO
*
*    FIELD AREA IS ONLY ONE IN CHAIN, CLEAR POINTER IN CVT.
*
         SR    RWRK1,RWRK1              SET REGISTER TO ZERO
*
CHAINCVT EQU   *                        CVT FA PTR TO BE CHANGED
         SPACE 2
         MODESET KEYADDR=KEY0,WORKREG=14  CHANGE TO KEY 0
         SPACE 2
         ST    RWRK1,CVTFACHN           UPDATE FIELD AREA PTR IN CVT
         SPACE 2
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY
         SPACE 2
         B     FREEFLD                  FREE FIELD AREA
*
*    REMOVE FIELD AREA FROM CHAIN
*
         DROP  RDCBFA                   END USING ON CURR FA
         USING DCBFA,RWRK2              USING ON FIELD AREA
UNCHAIN  CR    RWRK2,RDCBFA             FIELD AREA FIRST IN CHAIN
         BNE   SRCHCHN                  NO, BR TEST NEXT FA IN CHAIN
         L     RWRK1,DFACHAIN           YES
         B     CHAINCVT                 REMOVE FROM CHAIN
*
SRCHCHN  LA    RENTRY,DFACHAIN          ADDRESS OF NEXT DCBFA POINTER
         L     RWRK2,DFACHAIN           POINT TO NEXT FIELD AREA
         CR    RWRK2,RDCBFA             THIS THE FA TO FREE
         BNE   SRCHCHN                  BR NO
         L     RWRK1,DFACHAIN           NEXT FIELD AREA ADDR FROM
*                                       DCBFA BEING FREED
*
         ST    RWRK1,0(RENTRY)          REMOVE FA FROM CHAIN
*
FREEFLD  EQU   *                        FREE FIELD AREA
         L     RDCBFA,DFACHAIN          ADDR OF NEXT FA OR END IND.
         L     RWRK1,FASP               SUBPOOL AND LENGTH OF CORE
*
FREEEXT  EQU   *                        ENTRY TO FREE EXTENSION. REGS
*                                       RWRK1 AND RWRK2 WERE INIT.
*                                       IN ASIDUPDT
*
         LR    RWRK3,RWRK1              LENGTH OF CORE TO CLEAR
         LA    RWRK3,0(,RWRK3)          CLEAR HIGH ORDER BYTE
         BCTR  RWRK3,0                  LENGTH LESS ONE FOR EXECUTE
         EX    RWRK3,CLEAR              CLEAR FIELD AREA CORE
*
         USING PSA,0                    LOW CORE ADDRESSABILITY
         L     RASCB,PSAAOLD            ASCB ADDRESS
         SPACE 2
         MODESET KEYADDR=KEY0,WORKREG=14  CHANGE TO PROTECT KEY 0
         SPACE 2
*
*        FREE DCBFA OR FA EXTENSION
*
         FREEMAIN RU,LV=(0),A=(1),SP=CSA241,KEY=05,BRANCH=YES   ZA01285
         SPACE 2
         MODESET EXTKEY=DATAMGT         CHANGE TO PROTECT KEY 5
         SPACE 2
         BR    RLINK                    RETURN
         SPACE 2
CLEAR    XC    0(0,RWRK2),0(RWRK2)      CLEAR FIELD AREA CORE
         SPACE 5
*    CONSTANTS AND EQUATES
*
COMMON   DC    A(IGG0202B)              ADDR OF BEGINNING OF MODULE
KEY0     DC    X'00'                    STORAGE PROTECT KEY 0
EOC      DC    X'FFFFFF'                END OF FA CHAIN, INC. KEY0.
ENDCHN   EQU   KEY0                     USID TO TEST END OF FA CHAIN
CSA241   EQU   241                      CSA SUBPOOL 241         ZA01285
FASP     DC    AL4(DFASIZE)             LNGTH OF FIELD AREA     OZ04534
EXTSP    DC    AL4(DFEXSIZE)            LNGTH OF EXTENSION      OZ04534
         SPACE 2
ISAM     DEBCHK AM=ISAM,MF=L            ID FOR ISAM IN DEBAMTYP FIELD
NPFX     DC    H'16'                    NEG DISP TO DEB PREFIX @ZA19614
         SPACE 2
*    MAINTENANCE WORK AREA
***************************************************************@ZA19614
* MODULE ID                                                    @ZA19614
*                                                              @ZA19614
NAME     DC    CL8'IGG0202B'             MODULE NAME           @ZA19614
SHIP     DC    CL8' OZ31151'             SHIP CODE             @ZA19614
DATE     DC    CL8'&SYSDATE'             DATE LAST CHANGED     @ZA19614
         DS    0F
PATCH    DC    XL50'00'                 ZEROED PATCH AREA
***************************************************************@ZA19614
         SPACE 2
JSTCB    EQU   X'04'                    JOB STEP TERMINATION
MEMTERM  EQU   X'40'                    MEMORY TERMINATION
RCODE4   EQU   4                        RETURN CODE FOR FORCE CLOSE
SHR      EQU   X'80'                    TEST FOR DISP EQ SHR
         EJECT
DCBFA    IGGDCBFA
         EJECT
         IEZDEB
         EJECT
         IHARMPL
         EJECT
         CVT   DSECT=YES
         SPACE 2
         IHAPSA
         EJECT
         IHAASCB
         EJECT
         IKJTCB
         END
