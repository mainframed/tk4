         TITLE 'IGG019I9 - APPEND-VLR-READ AND UPD-WC AND NO WC'
IGG019I9 CSECT                                                      
*        RELEASE 0S/VS2-02 DELETIONS
*
*        RELEASE 19 DELETIONS
*        RELEASE 20 DELETIONS
*1996383000-384000                                               A34619
*1996105000,106000,107000,109000,110000,111000,113000,114000,    S20201
*1996117000,118000,119000,122000,224000,225000-230000,231000-    S20201
*1996244000,254000,255000,327000,328000-329000,331000,333000,    S20201
*1996335000,341000,345000,353000,354000,411000,412000-418000,    S20201
*1996431000,435000,437000-455000,474000-481000,485000,486000,    S20201
*1996487000,488000-492000,495000,497000,498000,502000-504000,    S20201
*1996550000,551000-579000,580000-604000,605000-640000,654000,    S20201
*1996655000-678000,679000,680000-686000,687000-753000            S20201
*        RELEASE 21 DELETIONS
*1192                                                            A33533
*XXXX                                                            A49403
*1192                                                            A51109
*1192089000                                                      A50670
*
*        VS2 030 CHANGES
* C219000,519000                                               @ZA07025
*        CHANGES SINCE VS2-3.7                                        *
*A099300-099600,A520600-520700                                 @ZA26522
*
*STATUS CHANGE LEVEL 004
* FUNCTION/OPERATION' APPENDAGE ROUTINES FOR BISAM WHEN READ AND UPDATE
*        IS USED WITHOUT WRITE KN - BOTH WC & NO WC ARE INCLUDED    
*        IN THIS MODULE                                             
*
*        ABEND - IF CP4 ENDS WITH AN ABNORMAL END BECAUSE OF FILE PRO-
*                 TECTION, THIS IS A SIGNAL THAT THE DESIRED RECORD IS
*                 IN AN OVERFLOW CHAIN. THEREFORE, CP6 IS INITIALIZED
*                 TO SEARCH THE OVERFLOW CHAIN AND AN EXCP RETURN IS
*                 MADE TO IOS.
*                IF ABEND OCCURED WHILE TRYING TO READ BACK A RECORD
*                 AFTER WRITING IT SUCCESSFULLY, AND 10 ATTEMPTS HAVE
*                 NOT BEEN MADE TO WRITE THIS RECORD, REINITIALIZE THE
*                 CP AND MAKE AN EXCP RETURN TO IOS
*                IF THE ABEND WAS CAUSED BECAUSE OF A REAL ERROR, THE
*                 ERROR CODE IS INSERTED IN THE DECB AND AN
*                 ASYNCHRONOUS ROUTINE IS SCHEDULED.
*        CEND - TEST TO SEE IF CP REALLY ENDED WITHOUT ERROR.  IF SO,
*                 AND IF A MASTER INDEX HAS JUST BEEN SUCCESSFULLY
*                 SEARCHED, REINITIALIZE TO SEARCH THE NEXT LOWER INDEX
*                 AND MAKE AN EXCP RETURN TO IOS.
*               IF CP5 COMPLETED WITHOUT ERROR FOR A WRITE COMMAND,
*                 REINITIALIZE THE CP TO ATTEMPT TO RE-READ THE RECORD
*                 AND MAKE AN EXCP RETURN TO IOS.
*               FOR ANY COMPLETION IN ERROR, SET THE EXCEPTION CODE IN
*                 THE DECB.
*               FOR ANY COMPLETION IN ERROR, OR FOR ANY COMPLETION
*                 WITHOUT ERROR NOT MENTIONED ABOVE, SCHEDULE AN
*                 ASYNCHRONOUS ROUTINE TO CONTINUE PROCESSING.
* ENTRY POINTS'
*        ENTRY POINT               FUNCTION
*        -----------               --------
*        APPCEND                   CEND
*        APPABEND                  ABEND
* INPUT - N/A
* OUTPUT - N/A
* EXTERNAL ROUTINES - N/A
* EXITS  1. RETURN TO IOS VIA THE APPENDAGE RETURN VECTOR TABLE POINTED
*            TO BY REGISTER 14.  SEE THE DSECT LABELED IHAAPPRV FOR THE
*            FORMAT OF THIS TABLE AND THE USE OF EACH EXIT.
*        2. SCHEDULE AN ASYNCHRONOUS ROUTINE - BRANCH VIA THE EXIT
*            EFFECTOR ADDRESS IN THE COMMUNICATION VECTOR TABLE.
* TABLES/WORK AREAS ' DECB, DCB, IOB AND EXTENTION, DCB WA (DCW), DEB,
*        COMMUNICATION VECTOR TABLE.
*        SEE DSECTS AT END OF MODULE FOR FORMAT AND DESCRIPTIONS.
* ATTRIBUTES' REENTRANT. DISABLED.
* NOTES - NONE
* GENERAL REGISTERS ARE USED AS FOLLOWS BY THE CEND AND ABEND ROUTINES
R0       EQU   0                   *    -----
R1       EQU   1                   *    12* ADDRESS
R2       EQU   2                   *    IOB
R3       EQU   3                   *    DEB
R4       EQU   4                   *    DCB
BASEXXXX EQU   5                        BASE REG FOR CLEANUP     Y02072
R6       EQU   6                   *    -----
R7       EQU   7                   *    UCB
SAVEXXXX EQU   8                        SAVE AREA FOR CLEANUP    Y02072
R9       EQU   9                   #    WORK REGISTER
R10      EQU   10                       CHANNEL PROGRAM
R11      EQU   11                       DECB
R12      EQU   12                       WORK REGISTER
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       IOS RETURN VECTOR TABLE
R15      EQU   15                       BASE REGISTER
*        * MEANS THIS REGISTER IS SET UP UPON ENTRY AND MAY NOT BE
*            DESTROYED BECAUSE OF THE NEEDS OF IOS
*        #     MEANS THIS REGISTER MAY BE CHANGED, BUT UPON RETURN MUST
*            BE IN THE FORM 000X BECAUSE OF THE NEEDS OF IOS
*
         USING APPRET,R15
         USING IHAAPPRV,R14
         USING IHADECB,R11
         USING IHAIOB,R2
         USING IHADEB,R3
         USING IHADCB,R4
         USING RQE,R1                   RQE ADDRESSABILITY       Y02072
REEXCP   EQU   8                        REEXCP RETURN TO IOS     Y02072
SKIPX    EQU   4                        SKIP RETURN TO IOS       Y02072
BYPASS   EQU   12                       BYPASS RETURN TO IOS     Y02072
FMVIOL   EQU   X'04'                    FILE MASK VIOLATION      Y02072
NOTSEEK  EQU   8                        CC - SEEK TEST SENSE B0  Y02072
SEEKCHK  EQU   X'01'                    SEEK CHECK INDICATOR     Y02072
ABENTRY  EQU   X'01'                    ABEND ENTRY INDICATOR    A50670
PERRMASK EQU   X'20'          IF B2 OF IOBECBAD IS OFF, PERM ERR
NORMAL   EQU   0                        NORMAL RETURN TO IOS     A50670
READKU   EQU   X'20'                    READ KEY FOR UPDATE     SA65011
*                        APPENDAGE VECTOR TABLE
APP      EQU   *
*              OFFSETS USED BY OPEN
         DC    A(APPCEND-APP)           CEND
         DC    A(APPABEND-APP)          ABEND
*
K1       EQU   1                        1
K4       EQU   4                        4
K5       EQU   5                        5
K7       EQU   7                        7
MIS      EQU   PERRMASK                 MASTER IDX SRCH MASK
CCOFF    EQU   X'BF'                    TURN OFF CC MASK
APPRET   EQU   *
APPCEND  NI    IOBINDCT,X'FE'           NORMAL CHANNEL END
         B     SETREGS
*
APPABEND EQU   *                                                 A50670
          USING  APPABEND,R15
*                                                                A50670
*        IF THIS IS A CORRECTABLE DATA CHECK FROM AN RPS         A50670
*        DEVICE THEN RETURN TO IOS FOR ERP HANDLING              A50670
*                                                                A50670
         TM    IOBECBAD,PERRMASK        PERMANENT ERROR          A50670
         BZ    NOCDACK                  YES CONTINUE AS USUAL    A50670
         TM    IOBSENS1,FMVIOL          WAS IT A SEEK CHECK      Y02072
         BCR   NOTSEEK,R14              NO - RETURN TO ERPS      Y02072
         SPACE 3
NOCDACK  EQU   *                                                 A50670
         OI    IOBINDCT,ABENTRY         INDICATE ABEND ENTRY     A50670
SETREGS  EQU   *
         L     R15,DEBAPPAD             SET BASE OF THIS MODULE
         L     R15,12(0,R15)             FROM APPENDAGE LIST
         USING APPRET,R15
*
*   SAVE IOS REGISTERS AND SET UP ADDRESSABILITY TO RETURN TO SPECIAL
*   CLEANUP ROUTINE.
*
         STM   R14,R12,0(R13)           SAVE REGISTERS           Y02072
         LR    SAVEXXXX,R13             SAVE SAVE AREA PTR       Y02072
         LA    R14,IOSRETS              RETURN TO RETURN TO IOS  Y02072
         LR    BASEXXXX,R14             BASE REG FOR RETURN      Y02072
         SPACE 2
         MODESET KEYADDR=RQEPRT,WORKREG=13 ACQUIRE USER KEY      Y02072
         SPACE 2
         L     R10,IOBCCWAD             INITIALIZE REGISTERS
         LA    R10,0(R10)               CLEAR HIGH ORDER BYTE    A49403
         MVC   IOBECBAD+1(3),IOBBCHAD+1 RESTORE ECB              A33533
         L     R11,IOBECBAD
         L     R12,IOBCSW               R12= LAST CCW EXECUTED + 8
         LA    R12,0(0,R12)
*
         SR    R9,R9                    BRANCH PER APPENDAGE CODE
         IC    R9,IOBAPP                 TIMES 4
         CH    R9,SIX                   IS APPCODE GT 6?       @ZA26522
         BH    INVAPPCD                 IF YES-GO PROGCHK      @ZA26522
         SLL   R9,2
         TM    IOBINDCT,X'01'           IF ENTRY WAS ABNORMAL END
         BO    APPABENT(R9)              USE CORRECT BRANCH TABLE.
         B     APPCENDT(R9)             USE NORMAL BRANCH TABLE.
*
APPCENDT B     APPABA2                  CODE O                   S20201
         B     APPABA2                  CODE 1                   S20201
         B     APPADB2                  CODE 2                   S20201
         B     APPAAB2                  CODE 3
         B     APPCEND                  CODE 4 INVALID           S20201
         B     APPACA2                  CODE 5                   S20201
         DC    2H'0'                    CODE 6 INVALID           S20201
*
APPABENT B     APPABD2                  CODE O                   S20201
         B     APPABD2                  CODE 1                   S20201
         B     APPAIB2                  CODE 2
         B     APPAAA2                  CODE 3
         B     APPABENT                 CODE 4 INVALID           S20201
         B     APPACE2                  CODE 5                   S20201
         DC    2H'0'                    CODE 6 INVALID           S20201
*
         EJECT
*   SPECIAL IOS RETURN CLEANUP ROUTINE INTERCEPTS ALL RETURNS TO
*   IOS AND RESTORES REGISTERS AND SETS PROTECTION KEY TO 0.
         SPACE 2                                                 Y02072
IOSRETS  EQU   *                        RETURN POINT             Y02072
         USING *,BASEXXXX               ADDRESSABILITY           Y02072
         B     NORMRET                  NORMAL RETURN            Y02072
         B     SKIPRET                  SKIP POST RETURN         Y02072
         B     REEXCPRT                 REEXCP RETURN            Y02072
         SPACE 2
BYPASRET EQU   *                        BYPASS POST RETURN       Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         LA    R14,BYPASS(R14)          SCHEDULE ASYNCH ROUTINE  Y02072
         L     R13,CVTPTR               CVT ADDRESS              Y02072
         USING IHACVTEX,R13             ADDRESSABILITY           Y02072
         L     R13,CVTEXEF              ASYNCH SCHED ROUTINE     Y02072
         DROP  R13                      END USING ON CVT         Y02072
         BR    R13                      GO TO ROUTINE            Y02072
         SPACE 2
REEXCPRT EQU   *                        REEXCP RETURN            Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         B     REEXCP(R14)              RETURN - REEXCP          Y02072
         SPACE 2
SKIPRET  EQU   *                        RETURN - SKIP            Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         B     SKIPX(R14)               RETURN - SKIP            Y02072
         SPACE 2
NORMRET  EQU   *                        RETURN - NORMAL          Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         BR    R14                      RETURN                   Y02072
         SPACE 1
IOSRETX  EQU   *                        RESTORE REGS AND KEY     Y02072
         SPACE 1
         MODESET KEYADDR=KEY0,WORKREG=13   SET KEY = 0           Y02072
         SPACE 1
         LM    R14,R11,0(SAVEXXXX)      RESTORE REGISTERS        Y02072
         BR    R12                      RETURN                   Y02072
         DROP  BASEXXXX                 RESET ADDRESSABILITY     Y02072
         SPACE 1                                                 Y02072
KEY0     DC    H'0'                     KEY 0                    Y02072
         EJECT                                                   Y02072
APPHCA14 DC    A(CA14-IHACP47+8)
APPHCA21 DC    A(CA20-IHACP47+8)        OFFSET OF CA20           S20201
APPHCA23 DC    A(CA23-IHACP47+8)
APPHCA24 DC    A(CA24-IHACP47+8)
APPHCA31 DC    A(CA31-IHACP47+8)
APPCA31B DC    A(CA31B-IHACP47+8)       OFFSET OF CA31B          S20201
APPHCA36 DC    A(CA36-IHACP47+8)
APPHCA43 DC    A(CA43-IHACP47+8)
APHCA43C DC    A(CA43C-IHACP47+8)
APPHCA10 DC    A(CA10-IHACP47+8)        CA10 OFFSET
         SPACE 2
*        CHANNEL END APP CODE 3 (CP2) CHART AA
         USING CP2,R10
APPAAB2  L     R13,DCBWKPT2             R13  ADDR DCB WA
         USING IHADCW,R13
         CLI   DCWNLSD,X'01'            BRANCH IF NLSD NOT 1, I.E.
         BH    APPAEB2                   IF CP1 IS BEING USED
         LA    R13,C35+8                TEST, STOP AT C35
         CLR   R12,R13
         BNE   APPAAB3                  NO   B3
         TM    C37,X'20'                YES  DUMMY OR INACTIVE TEST
         BO    APPAAC3                  YES  C3
         MVC   IOBDADAD,C36             NO   C36 TO IOBDADAD
         MVI   IOBASYN,X'03'         E2      ASYNC CD SET=3 (G CP1,2)
         B     APPABSAR
APPAAC3  TM    C37,X'08'                TEST DUMMY CHAINED
         BO    APPAAD3                  YES  D3
         IC    R12,C37                  NO   TEST NLEV PER F = DCBNLEV
         NI    C37,X'07'
         CLC   DCBNLEV,C37
         STC   R12,C37
         BNE   APPAAB3                  NO   B3
         OI    DECBEXC1,X'80'        C5 YES  DECB EXCEP SET=NO RCD FND
APPAAD4  MVI   IOBASYN,X'07'         D4      ASYNC CD SET=7 (NG CP1,2)
         B     APPABSAR                      SAR
APPAAD3  MVC   IOBDADAD,C36             C36 TO IOBDADAD
         B     APPRVXCP                      EXCP RETURN TO IOS
APPAAB3  OI    DECBEXC1,X'04'        B3      DECB EXCEP SET=UNREACHABLE
         B     APPAAD4                       D4
*
*        ABNORMAL END APP CODE 3 (CP2) CHART AA
*
APPAAA2  L     R13,DCBWKPT2            R13  ADDR DCB WA
         CLI   DCWNLSD,X'01'            BRANCH IF NLSD NOT 1, I.E.
         BNE   APPAEJ2                    IF CP1 IS BEING USED
APPAAA3  TM    IOBECBAD,PERRMASK        TEST PERM ERR
         BNE APPRVNOR                   NO  NORMAL RET TO IOS
         B     APPAAB3                  YES BRANCH TO INDICATE UNRCHBLE
         DROP  R13
*
*              CHART AE                 END CP1
*              CHANNEL END
         USING CP1,R10
APPAEB2  EQU   *
         LA    R13,C6+8                 TEST FINAL CCW EQUAL C6
         CLR   R12,R13
         BE    APPAEC2                  BRANCH IF YES
         LA    R13,C16+8                TEST EQUAL C16
         CLR   R12,R13
         BE    APPAEC4                  BRANCH IF YES
         B     APPAAB3                  ERROR IF NO
*              INTERRUPT AT C6
APPAEC2  EQU   *                        *
*
         TM    C6+K5,CC                 WAS C6 CHAINED
         BZ    APPAOS1                  NO, CONTINUE
         NI    C6+K5,CCOFF              TURN OFF INDICATOR
         OI    C6+K4,CC                 RECHAIN C6
         CLI   C10,SEEKHH               C10 SET TO DO SEEK HEAD
         BNE   APPAOSJ2                 NO, FILE PROTECT
         LA    R13,C10A                 RESET IOBSTART TO
         ST    R13,IOBSTART-K1          RESTART AT C10A
         B     APPAEG2                  RESCHEDULE CP1
APPAOS1  EQU   *                        *
*
         TM    C9+K7,MIS                END MASTER INDEX SEARCH.
         BO    APPAEC3                  BRANCH IF YES
         TM    C9+7,X'04'               IF LEVEL OF INDEX IS 3
         BO    APPAEG2                   SET CC IN CP1 TO CHAIN TO
         OI    C6+4,X'40'                SEARCH CYLINDER INDEX
APPAEG2  MVC   IOBDADAD,C8+7            ADDR NEXT SRCH ADDR IN IOB
         B     APPRVXCP                 RETURN TO EXCP
*
*              DUMMY OR INACTIVE
*
APPAEC3  TM    C9+7,X'08'               TEST DUMMY ENTRY CHAINED
         BO    APPAEG2                  BRANCH IF YES
         IC    R12,C9+7                 COMPARE LEVEL OF INDEX READ TO
         SLL   R12,29                    DCB INDEX LEVEL
         IC    R13,DCBNLEV
         SLL   R13,29
         CLR   R12,R13
         BNE   APPAAB3                  BRANCH IF NOT EQUAL
         OI    DECBEXC1,X'80'           SET NO REC FND IN EXCEPTION CD
         B     APPAAD4
*
*              END OF CYLINDER SEARCH
*
APPAEC4  TM    C18,X'20'                TEST DUMMY OR INACTIVE
         BO    APPAEC5             BRANCH IF YES
         MVC   IOBDADAD,C17                  ADDR NEXT SRCH IN IOB
         MVI   IOBASYN,X'03'       SET ASYNC CODE
         B     APPABSAR                 SCHEDULE ASYNCH RTN
APPAEC5  TM    C18,X'08'                IF DUMMY ENTRY NOT CHAINED,
         BZ    APPAAB3                   BRANCH TO INDICATE UNRCHBLE
         MVC   IOBDADAD,C17             OTHERWISE, RESTART CHAN PROG
         LA    R12,C11                   WITH NEW SRCH ADDRESS
         ST    R12,IOBSTART-1
         B     APPRVXCP                 RETURN TO IOS
*
*              ABNORMAL END
*
APPAEJ2  TM    IOBSENSE+1,X'04'        FILE PROTECT
         BZ    APPAAA3                  BRANCH IF NO.
         LA    R13,C10+8                TEST, STOP AT C10
         CLR   R12,R13                  BRANCH TO INDICATE UNREACHABLE
         BNE   APPAAB3                   IF NO.
*
APPAOSJ2 EQU   *                        *
*
         TM    C9+7,X'20'              IF DUMMY OR INACTIVE RECORD
         BO    APPAEC3                   BRANCH TO SAME PROCEDURE AS
         LA    R12,C11                   CHANNEL END
         ST    R12,IOBSTART-1           OTHERWISE, RESTART AT C11
         NI    IOBFLAG1,X'06'                                  @ZA07025
         B     APPAEG2
*
*        CHANNEL END APP CODE O,1 (CP4,5) CHART AB
         USING CP4,R10
APPABA2  EQU   *                                                 S20201
*
         L     R12,IOBCSW               CP STOP ADDR
         LA    R12,0(R12)               CLEAR HI ORDER BYTE
         SR    R12,R10                  DID CHAN PROG
*
         CL    R12,APPHCA23             STOP AT CCW CA23        SA65011
         BNE   NOTCA23                  BRANCH IF NO            SA65011
         TM    DECBTYP2,READKU          READ K FOR UPDATE       SA65011
         BZ    NOTCA23                  BRANCH IF NO            SA65011
         CLI   CA24,RDSECT              CA24 READ SECTOR CCW    SA65011
         BE    APPABF3                  BR IF YES - SET UNREACH SA65011
*                                       BLK, ASYN CODE OF 4     SA65011
NOTCA23  EQU   *                        CONTINUE - CP OK        SA65011
         CL    R12,APPHCA10             STOP AT CA10
         BNE   APPAOSA2                 NO
         TM    CA10+K5,CC               WAS CA10 COMMAND CHAINED
         BZ    APPAOSA2                 NO
         OI    CA10+K4,CC               TURN CC BACK ON
         NI    CA10+K5,CCOFF            TURN INDICATOR OFF
         CLI   CA14,SEEKHH              CA14 SEEK HEAD
         BNE   APPAOS21                 NO, FILE PROTECT
         MVC   IOBDADAD,CA12+K7         RESET IOBSEEK
         LA    R12,CA16A                RESET IOBSTART TO
         ST    R12,IOBSTART-K1          START AT CA16A
         B     APPRVXCP                 GO DO AN EXCP
APPAOSA2 EQU   *                        *
*
         NI    DECBEXC1,NOTOVFLO        B2 YES DECB EXCP CD      S20201
*                                       SET NOT OFLO
         MVC   IOBDADAD+FIVE(THREE),CA25+FIVE                    S20201
APPABB3  MVI   IOBASYN,X'00'         B3      ASYNC CD SET=0 (G CP4,5,6)
APPABSAR B     BYPASS(R14)              SCHEDULE ASYNCH ROUTINE  Y02072
         SPACE 2
*        ABNORMAL END APP CODE 0,1 (CP4,5) CHART AB
*
APPABD2  TM    IOBSENSE+1,X'04'      D2      FILE PROT CHK{
         BO    APPABD21                 YES  21                  S20201
         TM    IOBECBAD,PERRMASK        PERMANENT I/O ERROR      S20201
         BZ    APPABD3                  YES, BRANCH              S20201
         B     APPAHD2                  OTHERWISE, RETRY         S20201
APPABD21 SR    R12,R10                  YES, STOP AT CA14        S20201
         CL    R12,APPHCA14
         BNE   APPABF3                  NO   F3
*
APPAOS21 EQU   *                        *
*
         TM    CA13+7,X'20'        F2 YES  DUMMY OR INAC TEST
         BO    APPABF1                  YES  F1
         MVC   IOBDADAD,CA12+7     G2 NO   CA12+7 TO IOBDADAD
         MVC   CA34+7(8),CA12+7    H2   CA14+7 TO CA34+7
         LA    R12,IOBDADAD+3      G1   ADIOBDADAD(CCHH)TO CA26
         ST    R12,CA26
         MVI   CA26,X'31'
         MVC   CA28+1(3),DECBKEY+1 H1   DECBKEY+1 TO CA28 AD
         CLI   IOBAPP,X'00'          J1      READ OR WRITE{
         BE    APPABJ2                  READ J2
         LA    R12,CA40            K1 WRITE CA30 TIC TO CA40
         STH   R12,CA30+2
         SRL   R12,16
         STC   R12,CA30+1
         L     R12,DECBAREA            AREA + 2 TO CA40 ADDR        
         LA    R12,2(R12)                                           
         ST    R12,CA40
         NI    CA31+4,X'DF'            TURN SILI BIT OFF            
         MVI   CA40,X'06'
         MVC   CA43+1(3),CA40+1        AREA + 2 TO CA43 ADDR        
          LA   R13,CA43+6               LENGTH+10 TO CA43 CNT
         LH    R12,10(R12)             KNOWN BLKL FROM BUFFER       
APPABK2  MVI   CA28,SKEQ                SCH EQ FOR WRITE         S20201
APPABK4B LA    R12,10(R12)
         STH   R12,0(R13)
         MVC   CA43C+6(2),CA43+6        SET COUNT IN CA43C
APPABK5  MVI   IOBAPP,X'05'          K5      APPEN CD SET=5
         LA    R12,CA26            J5   AD CA26 TO IOBSTART
         ST    R12,IOBSTART-1
         MVI   IOBFLAG1,X'42'        H5 RESTORE IOB FLAGS AND ERR CTR
         MVI   IOBFLAG2,X'00'            CC AND UNRELATED FLAGS ON
         MVI   IOBCSW,X'00'              OTHERS OFF
         XC    IOBERRCT,IOBERRCT
         MVI   IOBCOUNT,X'0A'           INITIALIZE ERR CTR FOR 10 TRIES
APPRVXCP EQU   *
         SR    R12,R12             G5   TEST OFLO SAME VOLUMN
         IC    R12,IOBDADAD
         SLL   R12,4
         LA    R12,32(R3,R12)           POSITION TO THE NEW EXTENT
         MVC   IOBDADAD+1(2),4(R12)     MOVE BB TO IOB SEEK
         L     R12,0(0,R12)             LOAD NEW UCB ADDRESS
         LA    R7,0(R7)
         LA    R12,0(R12)
         CLR   R7,R12
         BE    EXCPRTN                                            15924
         MVI   IOBASYN,X'01'         G4 NO   ASYNC CD SET=1 (EXCP)
         B     APPABSAR                      SAR
EXCPRTN  XC    IOBFLAG2(3),IOBFLAG2                               15924
         XC    IOBCSW(9),IOBCSW                                   15924
         XC    IOBERRCT(2),IOBERRCT                               15924
         NI    IOBFLAG1,X'C2'                                     15924
         B     EXCP                                               15924
APPABJ2  LA    R12,CA31              J2 CA30 TIC TO CA31
         STH   R12,CA30+2
         SRL   R12,16
         STC   R12,CA30+1
         OI    CA31+4,X'20'            SILI ON                      
         L     R12,DECBAREA            AREA + 2 TO CA31 ADDR        
         LA    R12,2(R12)                                           
         ST    R12,CA31
         MVI   CA31,X'06'
         LA    R13,CA31+6                    LENGTH+10 TO CA31 COUNT
         SR    R12,R12                                           S20201
         AH    R12,DCBRKP               TEST FOR  RKP=0          S20201
         LH    R12,DCBLRECL                                         
         LA    R12,4(R12)               ADD 4 FOR OFLOW BLKL FLD
         BNZ   APPABJ4                  BIF RKP NOT = 0          S20201
         TM    DCBRECFM,BLOCKED         RECFM=BLOCKED            S20201
         BZ    APPABK2                  BIF NOT BLOCKED          S20201
APPABJ4  MVI   CA28,SKEQHI             SCH EQHI FOR (READ AND    S20201
*                                       RKP NE 0                 S20201
*                                       OR (READ AND RKP=0 AND BLKD)
         B     APPABK4B                                             
APPABF1  CLI   DCBNLEV,X'00'         F1      DCBNLEV=0{
         BE    APPABD5                  YES  D5
APPABF3  OI    DECBEXC1,X'04'        F3 NO   DECB EXCEP SET=UNREACHABLE
APPABG3  MVI   IOBASYN,X'04'         G3      ASYNC CD SET=4(NG CP4,5,6)
         B     APPABSAR                      SAR
APPABD3  SR    R12,R10                  DETERMINE STOPPING       S20201
*                                       OFFSET                   S20201
         TM    IOBSENSE+ONE,NRF         NO RCD FOUND             S20201
         BZ    APPABB1                  YES  B1
APPABE4  EQU   *                        TEST, STOP AT CA21
         CL    R12,APPHCA21
         BNE   APPAHH2                  NO   F3                  S20201
         CLI   CA21,X'69'          D4,C4 READ FORMAT BLOCKED TEST
         BE    APPABF3                  YES  F3
APPABD5  OI    DECBEXC1,X'80'        D5 NO   DECB EXCEP SET=NO RCD FND
         B     APPABG3                       G3
APPABB1  EQU   *                        STOP AT CA23
         CL    R12,APPHCA23
         BNE   APPABF3                  NO   F3
         TM    IOBSENSE,X'08'        C1 YES  DATA CHK{
         BZ    APPAHH2                  NO   F3                  S20201
APPABD1  OI    DECBEXC1,X'08'        D1 YES  DECB EXCEP SET=UNCOR IO ER
         B     APPABG3                       G3
*
*        CHANNEL END APP CODE 5 (CP6) CHART AC
*
         USING CP4,R10
APPACA2  EQU   *                        STOP AT CA31
         SR    R12,R10
         CL    R12,APPHCA31             NON-RPS HALT.            S20201
         BE    APPACA6                  BE MEANS YES             S20201
         CL    R12,APPCA31B             RPS HALT.                S20201
         BNE   APPACA3                  BIF NO HALT HERE.        S20201
         B     APPACA6A                 COMPARE KEYS            SA65011
*
APPACA6  TM    DECBTYP2,READKU          READ K FOR UPDATE       SA65011
         BZ    APPACA6A                 BRANCH IF NO            SA65011
         TM    CA31+4,CC                CA31 COMMAND CHAINED    SA65011
         BO    APPABF3                  BR IF YES - SET UNREACH SA65011
*                                       BLK, ASYN CODE OF 4     SA65011
APPACA6A CLI   CA28,SKEQHI              SEARCH HI USED.         SA65011
         BNE   APPACA8                  BIF NOT                  S20201
         SPACE 2
*        COMPARE KEYS. IF THE RECORD'S KEY IS HIGHER, TERMINATE
*        THE SEARCH OF THE OVERFLOW CHAIN.
         SPACE 2
         IC    R9,CA28+SEVEN            GET KEY LENGTH.          S20201
         BCTR  R9,R0                    SUBTRACT ONE             S20201
         L     R12,CA28                 GET KEY ADDR.            S20201
         L     R13,CA31                 GET DATA ADDR.           S20201
         AH    R13,DCBRKP               FIND THE KEY IN THE      S20201
*                                       RECORD.                  S20201
         LA    R13,KEYT(R13)            KEY FOUND.               S20201
         EX    R9,COMPARE               CHECK FOR MATCH.         S20201
         BNE   APPACG3                  BIF NO MATCH.            S20201
APPACA8  EQU   *                                                 S20201
         CLC   CA34+7(8),CA12+7         FIRST RECORD IN CHAIN   OY00310
         BE    APPACB3                  YES  B3
         L     R12,DCBRORG3             NO   ADD 1 TO DCBRORG3
         LA    R12,1(R12)
         ST    R12,DCBRORG3
         TM    DECBTYP2,X'20'           B2  TEST READ FOR UPDATE
         BZ    APPACB3                  NO   B3
         MVC    IOBDADAD,CA34+7         YES  IOBDADAD SET FOR WRITEBACK
APPACB3  OI    DECBEXC1,X'02'        B3      DECB EXCEP SET=OFLO RCD
         MVI   IOBASYN,X'00'         B4      ASYNC CD SET=0 (G CP4,5,6)
         B     APPABSAR                      SAR
APPACA3  TM    DCBOPTCD,X'80'          TEST IF WRITE CHECK          
         BO    APPAV1                  B=YES                        
         CL    R12,APPHCA43                                         
         B     APPACOM1                                             
APPAV1   CL    R12,APHCA43C                                         
APPACOM1 BNE   APPACF4                                              
         B     APPACB3                  YES  B3
*
*        ABNORMAL END APP CODE 5 (CP6) CHART AC
*
APPACE2  TM    IOBSENSE+1,X'04'      E2      FILE PROT CHK{
         BZ    APPAGG2                  NO   AG-G2
         SR    R12,R10                  STOP AT CA36
         CL    R12,APPHCA36
         BNE   APPACF4                  NO   F4
*
         CLI   CA36,SEEKHH              CA36 SET TO SEEK HEAD
         BNE   APPAOSE2                 NO
         TM    IOBECBAD,PERRMASK        PERMANENT ERROR
         BZ    APPACE3                  YES, BRANCH
         MVC   IOBDADAD,CA34+K7         RESET IOBSEEK
         B     APPRVXCP                 GO DO AN EXCP
APPAOSE2 EQU   *                        *
*
         TM    CA35+7,X'08'        G2 YES  END OR CHAINED TEST
         BZ    APPACG3                  END  G3
         MVI   IOBASYN,X'01'         J2      ASYNC CD SET=1 (EXCP)
         MVI   IOBFLAG1,X'42'        J3 RESTORE IOB FLAGS AND ERR CTR
         MVI   IOBFLAG2,X'00'            CC AND UNRELATED FLAGS ON
         MVI   IOBCSW,X'00'              OTHERS OFF
         XC    IOBERRCT,IOBERRCT
         MVC   IOBDADAD,CA34+7          SET SEEK SEARCH ADDRESS
         B     APPABSAR                      SAR
APPACE3  TM    IOBECBAD,PERRMASK        TEST PERM ERR
         BNE   APPRVNOR                  NO - NORMAL RET TO IOS
         SR    R12,R10                  STOP AT CA31 OR CA43
         CL    R12,APPHCA31
         BE    APPACE5                  YES  E5
         CL    R12,APPHCA43
         BE    APPACE5                  YES  E5
APPACF4  OI    DECBEXC1,X'04'        F4 NO   DECB EXCEP SET=UNREACHABLE
APPACG4  MVI   IOBASYN,X'04'         G4      ASYNC CD SET=4(NG CP4,5,6)
         B     APPABSAR                      SAR
APPACG3  OI    DECBEXC1,X'80'        G3      DECB EXCEP SET=NO RCD FND
         B     APPACG4                       G4
APPACE5  TM    IOBSENSE,X'08'        E5      DATA CHK{
         BZ    APPACF4                  NO   F4
APPACF5  OI    DECBEXC1,X'08'        F5 YES  DECB EXCP SET UNCOR IO ERR
         B     APPACG4                       G4
*
*              CHART AD       CHANNEL END + NORMAL END CP7
*              CHANNEL END
         USING CP7,R10
APPADB2  EQU   *                        PREPARE TO EXIT          S20201
         MVI   IOBASYN,TWO              SET ASYN CODE AND        S20201
         B     APPABSAR                 SCHEDULE ASYN ROUTINE
APPADB3  OI    DECBEXC1,X'04'           IF NOT, INDICATE UNREACHABLE IN
APPADB4  MVI   IOBASYN,X'06'             DECB AND SET ASYNCH CODE
         B     APPABSAR                 SCHEDULE ASYNCH ROUTINE
*
*              ABNORMAL END
APPADE2  TM    IOBECBAD,PERRMASK        IF NOT PERM ERR,
         BNE APPRVNOR                    NORMAL RET TO IOS
         LA    R13,CA46+8               IF STOP AT CA46 AND CAUSE IS
*                                        NOT DATA CHECK, OR IF STOP
*                                        NOT AT CA46,
         CLR   R13,R12                   GO TO APPADB3
         BNE   APPADB3
         TM    IOBSENSE,NRF                                      S20201
         BZ    APPADB3
APPADG3  OI    DECBEXC1,X'08'           DATA CHECK, SET IO UNCORRTABLE
         B     APPADB4                   ERROR BIT IN DECB
         USING CP4,R10
*
*              CHART AG  ABNORMAL END, NOT FILE PROT CHK
*
APPAGG2  TM    IOBSENSE,X'08'          WAS CAUSE OF INTERRUPT A DATA
         BZ    APPACE3                    CHECK AT CA43C
         LA    R13,CA43C+8
         CLR   R12,R13
         BNE   APPACE3                  BRANCH IF NO
         SR    R13,R13                  SUBTRACT ONE FROM ERROR COUNTER
         IC    R13,IOBCOUNT
         BCT   R13,APPAGH3              IF ZERO, BRANCH TO INDICATE
         B     APPACF5                   UNCORRECTABLE IO ERROR
APPAGH3  STC   R13,IOBCOUNT             IF NINE, FIRST TIME THRU SO
         CLI IOBCOUNT,X'09'              MUST SET UP IOB
         BNE   APPAGK4
         MVC IOBDADAD,CA34+7
         LA    R12,CA41
         ST    R12,IOBSTART-1
APPAGK4  NI    IOBFLAG1,X'FB'           RESET EXCEPTION FLAG
         B     APPRVXCP                 RETURN TO EXCP
APPAHD2  EQU   *                        STOP AT CA24C, DATA CHECK
         LA    R13,CA24C+8
         CLR   R12,R13
         BNE   APPRVNOR                 NORMAL RETURN            S20201
         TM    IOBSENSE,NRF             IS IT DATA CHECK         S20201
         BZ    APPRVNOR                 BRANCH IF NO             S20201
         LA    R13,CA24D                 START ADDRESS = CA24D
         ST    R13,IOBSTART-1
         MVC   IOBDADAD+3(5),CA25+3     RESET IOBSEEK           SA62417
         B     APPRVXCP                 RETURN TO EXCP
APPAHH2  EQU   *                                                 S20201
         AR    R12,R10                  CORRECT BASE REG         S20201
         TM    IOBSENSE,DATACHK         IS THERE A DATA CHK      S20201
         BZ    APPABF3                  NO, UNREACHABLE BLOCK    S20201
         LA    R13,CA24C+EIGHT          STOP AT CA24C            S20201
         BE    APPABD1                  YES, UNCORRECTABLE I/0   S20201
*                                       ERROR                    S20201
         LA    R13,CA24F+8              IF PERMANENT, WAS STOP AT
         CLR   R12,R13                   CA24F
         BNE   APPABF3                  BRANCH IF NO
         B     APPABD1                  BRANCH IF YES            S20201
DATACHK  EQU   X'08'                                             S20201
         SPACE 1
*              CHART AI  ABNORMAL END, CODE 2, CP7, WRITE CHECK
         SPACE 1
         USING CP7,R10
APPAIB2  TM    IOBECBAD,PERRMASK        PERMANENT ERROR
         BO    APPRVNOR                 NO RETRY
         TM    IOBSENSE,X'08'           DATA CHECK
         BZ    APPADE2                   CA46C TEST
         LA    R13,CA46C+8
         CLR   R12,R13
         BNE   APPADE2                  BRANCH IF NO
         SR    R13,R13                  SUBTRACT 1 FROM ERR CTR
         IC    R13,IOBCOUNT
         BCT   R13,APPAIF2
         B     APPADG3                  IF ZERO, BRANCH
APPAIF2  STC   R13,IOBCOUNT
         NI    IOBFLAG1,X'FE'           RESET EXCEPTION FLAG   @ZA07025
         B     APPRVXCP                 RETURN TO IOS EXCP
COMPARE  CLC   0(ONE,R12),0(R13)                                 S20201
INVAPPCD DC    H'0'                 PROGCHK FOR BAD APP CODE   @ZA26522
SIX      DC    X'0006'              MAX VALUE FOR APP CODE     @ZA26522
*
ONE      EQU   1                        1                        S20201
TWO      EQU   2                        2                        S20201
THREE    EQU   3                        3                        S20201
FIVE     EQU   5                        5                        S20201
SEVEN    EQU   7                        7                        S20201
EIGHT    EQU   8                        8                        S20201
CVTPTR   EQU   16                       ADDR COMMUNICATION VECTOR TABLE
NOTOVFLO EQU   X'FD'                    INDICATE NOT OVERFLOW    S20201
BLOCKED  EQU   X'10'                    TEST FOR BLOCKED RECORDS S20201
NRF      EQU   X'08'                    INDICATE NO RECORD FOUND S20201
KEYT     EQU   14                       KEY TEST                 S20201
*
MODID    DC    C'IGG019I9'              MODULE NAME            @ZA26522
DATE     DC    CL8'&SYSDATE'            FIX DATE               @ZA26522
FIX      DC    C' OZ26522'              LATEST FIX             @ZA26522
PATCH    DC    XL((*-IGG019I9)/20)'00'  ZEROED PATCH AREA        Y02072
*
         SPACE 4
*
*              DATA EVENT CONTROL BLOCK
IHADECB  DSECT
         DS    0F
DECBECB  DS    CL4                      EVENT CONTROL BLOCK (ECB)
DECBTYP1 DS    BL1                      TYPE B6 - 1 IF LENGTH IS S
*                                            B7 - 1 IF AREA IS S
DECBTYP2 DS    BL1                           B0 - 1 IF READ K
*                                            B1 - 1 IF READ KX
*                                            B2 - 1 IF READ KU
*                                            B4 - 1 IF WRITE K
*                                            B5 - 1 IF WRITE KN
DECBLGTH DS    CL2                      LENGTH OF BLOCK
DECBDCBA DS    A                        POINTER TO DCB
DECBAREA DS    A                        ADDRESS OF AREA
DECBLOGR DS    A                        POINTER TO LOGICAL RECORD
DECBKEY  DS    A                        POINTER TO KEY
DECBEXC1 DS    BL1                      EXCPTN CD B0-RECORD NOT FOUND
*                                                 B1-RECORD LGTH CHK
*                                                 B3-INVALID REQUEST
*                                                 B4-UNCORRECTABLE IO
*                                                 B5-UNREACHABLE BLOCK
*                                                 B6-OVERFLOW RECORD
*                                                 B7-DUPLICATE REC
DECBEXC2 DS    BL1                                B7-READ KU
         SPACE 2
RQE      IECDRQE ,                      RQE                      Y02072
         EJECT
         DCBD  DSORG=(IS)
         EJECT
IHAIOB   IGGIOBD
         SPACE 4
IHADCW   IGGBISAM OPTCD=V                 DCB WORK AREA          S20201
         SPACE 4
IHADEB   IGGDEBD
IHABUF   DSECT                DYNAMIC BUFFERING VECTOR TABLE
BUFFREED DS    A                       FREEDBUF ENTRANCE
BUFSIO   DS    A                       APPENDAGE ENTRANCE
BUFASYN  DS    A                       ASYNCHRONOUS ENTRANCE
IHAAPPRV DSECT                APPENDAGE RETURN VECTOR TABLE
APPRVNOR DS    A                       NORMAL
APPRVSKP DS    A                       SKIP POST
EXCP     DS    A                       EXCP
APPRVBYP DS    A                       BYPASS
IHACVTEX DS    0F             COMMUNICATION VECTOR TABLE
         DS    A
CVTEXEF  DS    A
CP1      DSECT                          CP1
         IGGCP1
         ORG   CP1                      CP2                      S20201
CP2      DS    0D                                                S20201
         IGGCP2
IHACP47  IGGCP47   OPTCD=W                                       S20201
         END
