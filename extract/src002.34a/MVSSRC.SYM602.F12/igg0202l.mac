         TITLE 'IGG0202L   QISAM LOAD MODE CLOSE - PAD TRACK INDEX'
IGG0202L CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0202L                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM CLOSE, LOAD MODE                            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = WRITE THE FINAL DUMMY, END-INDEX ENTRY.  PAD THE UNUSED  *
*            TRACK INDEX SPACE OF THE CYLINDER CONTAINING THE LAST    *
*            PRIME DATA RECORD WITH INACTIVE ENTRIES.                 *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = CLOSE EXECUTOR                                        *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 950 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0202L                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM CLOSE EXECUTOR IGG0202K IN  *
*              STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.            *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM CLOSE EXECUTOR IGG0202M IN STORAGE       *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - CLOSE WORK AREA                           *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB, DCB COPY, DEB, IOB, CVT, TCB, AND SVRB     *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, EXCP, WAIT, AND XCTL                              *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
*****************************
* CLOSE WORK AREA REFERENCE *
*****************************
FORCORE  DSECT                          OPEN/CLOSE/EOV WORK AREA Y01021
         IECDSECT                                                Y01021
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   DSECT
         USING IHADEB,R8
         DS    0D
DEBNMSUB DS    0CL1
DEBTCBAD DS    A
DEBAMLNG DS    0CL1
DEBDEBAD DS    A
DEBOFLGS DS    0CL1
DEBIRBAD DS    A
DEBOPATB DS    0CL1
DEBSYSPG DS    A
DEBNMEXT DS    0CL1
DEBUSRPG DS    A
DEBPRIOR DS    0CL1
DEBECBAD DS    A
DEBPROTG DS    0BL1
DEBDEBID DS    0BL1
DEBDCBAD DS    A
DEBEXSCL DS    0CL1
DEBAPPAD DS    A
DEBNIEE  DS    0CL1
DEBFIEAD DS    A
DEBNPEE  DS    0CL1
DEBFPEAD DS    A
DEBNOEE  DS    0CL1
DEBFOEAD DS    A
         DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    A
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
*
ISLCOMON DSECT
         USING ISLCOMON,R12
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE
ISLEOB   DS    F                        END OF BUFFR ADR
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD
ISLOCNT  DS    CL8                      OVFLOL IX COUNT, CCHHRKDD
ISLDCNT  DS    CL8                      DUMMY IX COUNT,  CCHHRKDD
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP
         DS    CL2
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP
         DS    CL1
ISLBUFNO DS    CL1                      DCBBUFNO OR 2
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)
ISLVRSAV DS    18F                      ISL SAVE AREA
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE
*
TSTWK1C  DS    F                        WORK AREA                 13711
TSTWK2C  DS    F                        WORK AREA                 13711
         DS    F                        WORK AREA                 13711
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES
ISLD     DS    F                        DISCPLACEMENT FROM CP18 START
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK
*
ISLF8AD  DS    F                        ADDR OF PUT ISLF800
ISLFXAD  DS    F                        ADDR OF PUT ISLFX20
ISLFYAD  DS    F                        ADDR OF PUT ISLFY01
ISLFZAD  DS    F                        ADDR OF PUT ISLFZ01
ISLPAAD  DS    F                        ADDR OF PUT ISLPA01
ISLF1AD  DS    F                        ADDR OF APP ISLF110
*
         SPACE 4
*
* ISLVPTRS REFERENCE       C(DCBWKPT6)=A(ISLVPTRS)
*
ISLVPTRS EQU   *                                                  25463
ISLVPTR1 DS    A                        A(AREA Y)                 25463
ISLVPTR2 DS    A                        A(KEYSAVE)                25463
ISLVPTR3 DS    A                        A(IOBBCT)                 25463
ISLVPTR4 DS    A                        A(CP18)                   25463
ISLVPTR5 DS    A                        A(CP19)                   25463
ISLVPTR6 DS    A                        A(CP20)                   25463
ISLVPTR7 DS    A                        A(CP21)                   25463
ISLVPTR8 DS    A                        SIZE OF ISLCOMON AREA     25463
ISLVPTR9 DS    A                        SIZE OF CHAN PROG AREA    25463
ISLVPTRA DS    A                        ADDRESS OF BAD BUFFER     25463
ISLVPTRB DS    A                        UNUSED                    25463
ISLVPTRC DS    A                        UNUSED                    25463
ISLFXWK1 DS    F                        WORK AREA                 13711
ISLFXWK2 DS    F                        WORK AREA                 13711
ISLF9WK1 DS    F                        WORK AREA                 13711
*
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
AIOBSENS DS    CL2                      SENSE BYTES              Y01021
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD      Y01021
AIOBSIOC DS    0CL1                     SIO CC                   Y01021
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
*
********************
* IXLT REFERENCE   *
********************
*
IXLT     DSECT
         USING IXLT,R7
         DS    0D
IXLTIND  DS    CL1                      INDICATOR                  LEV1
IXLBEG   DS    CL8                      BEGINING COUNT MBBCCHHR
IXLSTP   DS    CL8                      STEPPING COUNT MBBCCHHR
IXLEND   DS    CL8                      ENDING COUNT   MBBCCHHR
         DS    CL1
         DS    CL26                                                LEV2
         DS    CL26                                                LEV3
         DS    CL26                                                LEV4
         EJECT
CPSX     DSECT
         IGGLDCP OPTCD=N                LOAD CP SKELETON         S20201
         EJECT
IGG0202L CSECT
ISLC100  BALR  R15,0
         USING *,R15
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         USING FORCORE,RCORE            WA ADDRESSABILITY        Y02072
         L     R12,DCBWKPT1             C(R12)=A(COMMON)          22841
         LR    RBASE,R15
         STM   R1,RJ,DXCCW1             SAVE REGISTERS 1-15      Y02072
         L     R1,DXUDCBAD              USER'S DCB ADDRESS       Y02072
         DROP  RCORE                    END CLOSE WA USING       Y02072
         LR    RWKAREA,RCORE            CLOSE WORK AREA ADDR     Y02072
         USING FORCORE,RWKAREA          WA ADDRESSABILITY        Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=2  CHANGE TO USER KEY   Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   8
R10      EQU   10
RWKAREA  EQU   11                       CLOSE WORK AREA BASE REG Y02072
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   9
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RJ       EQU   15
CVTPTR   EQU   16                                                 22922
L8       EQU   8                        LENGTH                   S20201
K56      EQU   56                       CONSTANT                 S20201
K0       EQU   0                        CONSTANT                 S20201
K1       EQU   1                        CONSTANT                 S20201
ONE      EQU   1                        CONSTANT
K3       EQU   3                        CONSTANT                 S20201
K4       EQU   4                        CONSTANT                 S20201
ALL      EQU   X'FF'                    ALL BITS                 S20201
K8       EQU   8                        CONSTANT                 S20201
K16      EQU   16                       CONSTANT OF 16           Y01021
CM28     EQU   CM27+8                   CM28                     S20201
CM29     EQU   CM27+16                  CM29                     S20201
*
         EJECT
***********************************************************************
* CHART C1 - PAD TRK IX                                               *
***********************************************************************
*
ISLC101  EQU   *                                                  22841
         LA    R2,ISLIOBC               C(R2)=A(IOBC)
         L     R10,ISLVPTR5             C(R10)=A(CP91)
         USING CM1,R10                  ADDRESSABILITY CP91      S20201
         SR    R3,R3                    CLEAR REG 3
         ST    R3,ISLD                  SET D = 0 END - NEW CYL SWS
*
* SET UP CURR MBBCCHHR TO LOCATE PADDING BASED ON LAST TRK IX
*
         MVC   ISLNDAT+3(5),DCBLETI     CCHHR FROM LETI
         C     R3,DCBNREC               RECORD COUNT ZERO        S20201
         BNZ   ISLC1015                 BRANCH IF NOT             22922
         L     R13,CVTPTR               FIND USER'S SAVEAREA      22922
         L     R13,0(R13)               GET TCB POINTER           22922
         L     R13,4(R13)               GET TCB                   22922
         L     R13,0(R13)               GET SVRB ADDRESS          22922
         L     R13,84(R13)              PICK UP SAVEAREA PTR      22922
         ST    R13,ISLVRSAV+4           SAVE IN CASE OF I/O ERROR 22922
         B     ISLC1017                 CONTINUE PROCESSING       22922
ISLC1015 EQU   *                                                  22922
         IC    R3,ISLNDAT+7             C(R3)=R
         LA    R3,1(R3)                 C(R3)=R+1                 21054
         STC   R3,ISLFXWK2              STORE R+1 FOR COMPARE     21054
         LA    R3,1(R3)                 C(R3)=R+2                 21054
         STC   R3,ISLNDAT+7             NDAT = MBBCCHHR WITH R=R+2
ISLC1017 EQU   *                                                  22922
*
* TEST CURR HH VS NIRT (ARE WE ON LAST TRK OF CURR TRK IX) *1ST TIME*
*
         BAL   R13,DRUMTST              TO DEV TST RTN
         BE    ISLC105                  B IF EQUAL (ON LAST TRK)
*
* TEST CURR R VS HIRT (ARE WE AT END OF TRK)
*
         CLC   ISLFXWK2(1),ISLHIRT      CMPR LETI R+1 VS HIRT R   21054
         BE    ISLC1035                 END OF TRACK              21054
         BL    ISLC103                  NOT END OF TRACK          21054
         MVI   ISLNDAT+7,X'02'          SET CURR R TO 2 WHEN NORM 21054
*                                       AND OVFLW ENTRIES SPLIT   21054
*                                       ACROSS A TRACK            21054
         B     ISLC104                  NORMAL AND OVERFLOW INDEX 21054
*                                       ENTRIES SPLIT             21054
DRUMTST  EQU   *                        LAST TRACK TEST
         CLC   ISLNDAT+6(1),ISLNIRT+ONE TEST NDAT TRK VS NIRT TRK
         BR    R13                      RETURN
*
* TEST CURR HH VS NIRT (ARE WE ON LAST TRK OF CURR TRK IX)
*
ISLC102  BAL   R13,DRUMTST              TO DEVICE TEST ROUTINE
         BE    ISLC106                  B IF EQUAL (ON LAST TRK)
*
* SET CNT A = HIRT - R + 2 (SIM FIRSH R)
*
ISLC103  SR    R7,R7                    CNT A = R7
         IC    R7,ISLHIRT               CNT A = HIRT
         SR    R3,R3
         IC    R3,ISLNDAT+7             C(R3) = CURR R
         SR    R7,R3                    CNT A = HIRT - R
         LA    R7,2(R7)                 CNT A = HIRT-R+2
*
         BAL   R14,ISLC201              LINK TO C2 RT TO WRITE IX TRK
*
* STEP CURR HH TO NEXT TRK, R = 1
*
ISLC1035 MVI   ISLNDAT+7,X'01'          SET CURR R TO 1           21054
ISLC104  L     R3,ISLNDAT+4             C(R3)= CURR CHHR
         LA    R3,256(R3)               CURR HH+1
         STH   R3,ISLNDAT+6             CURR HH=NEXT HH ; R=1
*
         B     ISLC102                 *B TO PROCESS NEXT TRACK OF IX
*
*----------------------------------------------------------------------
*
* TEST CURR R VS NIRT (HAVE WE COMPLETED LAST TRK OF CURR IX) *1ST TIME
*
ISLC105  CLC   ISLNDAT+7(1),ISLNIRT+2   TEST NDAT R VS NIRT R
         BC    12,ISLC106               BRNCH IF TRK NOT COMPLETE  8841
*
* SET NEW CYL SW ON - WE HAVE COMPLETED LAST TRK OF CURR IX
*
         OI    ISLD,X'80'               TURN D BIT 0 ON
         B     ISLC109                                            21054
*
* LAST TRACK OF CURR CYLINDER, TEST FOR PREFORMATTED SHARED TRACK
*
ISLC106  EQU   *                        *
ISLC1061 CLC   ISLNDAT+3(3),ISLIOBA+35  CURRENT CCH VS EOF CCH    13270
         BNE   ISLC1065                 B IF NOT LAST USED CYL
         CLC   ISLNDAT(1),ISLIOBA+32    TEST FOR DIFFERENT M      14089
         BNE   ISLC1065                                           14089
ISLC1062 CLI   DCBHIRSH,X'00'           TEST HIRSH VS ZERO        15365
         BNE   ISLC120                  B IF CURR CYL PREFORMATTED
*
* SET CNT A = NIRT - R + 1 (SIM FIRSH R - 1)
*
ISLC1065 TM    ISLF1AD,X'80'            EOF ON LPDA'S CYLINDER    15365
         BZ    ISLC1066                 YES,BRANCH--NORMAL CASE   15365
         NI    ISLF1AD,X'7F'            NO--TURN OFF BIT          15365
         B     ISLC1062                 SEE IF PREFORMATTED CYL   15365
ISLC1066 SR    R7,R7                    CNT A = R7                15365
         IC    R7,ISLNIRT+2             CNT A = NIRT R
         SR    R3,R3
         IC    R3,ISLNDAT+7             C(R3) = CURR R
         SR    R7,R3                    CNT A = NIRT - R
         LA    R7,1(R7)                 CNT A = NIRT - R + 1      21054
*
* SET END SW ON - WE HAVE ARRIVED AT THE LAST TRK OF CURR IX
*
         OI    ISLD,X'40'               TURN D BIT 1 ON
*
         BAL   R14,ISLC201              LINK TO C2 RT TO WRITE IX TRK
ISLC109  EQU   *                                                 A29276
*
*   CHECK IF DATA SET ENDS ON LAST PRIME TRACK OF A CYLINDER. PADDING
*   COMPLETE IF NOT, MUST PAD NEXT CYLINDER OTHERWISE.
*
         TM    ISLD,X'10'               HAS EXTRA CYLINDER BEEN  A29276
*                                       *    PADDED ALREADY
         BO    ISLC109A                 YES-BR INDICES FINISHED  A29276
         CLC   DCBLPDA+5(2),DCBLDT      DID DATA SET END ON LST  A29276
*                                       *    TRACK OF CYLINDER
         BNE   ISLC109A                 NO.-BR INDICES FINISHED  A29276
*                                       YES PAD NEXT CYLINDER
         OI    ISLD,X'10'               PADDING LAST CYLINDER    M4274
         L     R4,DCBLRAN               DEVICE TABLE ADDRESS     M3639
*
         IC    R7,ISLNDAT+K4            INCREMENT                S20201
         LA    R7,K1(R7)                * LOW ORDER BYTE         S20201
         STC   R7,ISLNDAT+K4            OF CYLINDER.    C  C+1   S20201
         CLI   ISLNDAT+K4,K0            DID LOW BYTE OVERFLOW    S20201
         BNE   ISLC1093                 NO - VALUE CORRECT       S20201
         IC    R7,ISLNDAT+K3            YES - INVALID MUST       S20201
         LA    R7,K1(R7)                * INCREMENT HIGH BYTE    S20201
         STC   R7,ISLNDAT+K3            * OF CYLINDER   CC+1     S20201
ISLC1093 EQU   *                        CHECK FOR END OF EXTENT  M3639
         L     R8,DXCCW1                COPY DCB ADDR            Y02072
         USING IHADCB,R8                COPY ADDRESSABILITY      Y02072
         L     R8,DCBDEBAD              ADDRESSABILITY ON DEB    M3639
         USING IHADEB,R8                R8 = DEB ADDRESS         Y01021
         USING IHADCB,R1                USER DCB ADDRESSABILITY  Y02072
         SR    R4,R4                                             M3639
         IC    R4,ISLNDAT               CURRENT EXTENT           M3639
         SLL   R4,4                     DISPLACEMENT TO CURRENT  M3639
*                                       *  EXTENT
         LA    R3,DEBNIEE(R4)           ADDRESS OF CURRENT       M3639
*                                       EXTENT                   M3639
         MVI   ISLNDAT+7,X'FF'          INITIALIZE RECORD FOR    M3639
*                                       *  PROCESSING
         CLC   ISLNDAT+3(4),10(R3)     AT END OF EXTENT          M3639
         BNH   ISLC1015                 NO - BR - TO PAD NEW     M3639
*                                       *  CYLINDER INDEX
*                                       YES - SWITCH TO THE START OF
*                                       *  NEXT EXTENT
         MVC   ISLNDAT+1(6),20(R3)      INITIAL BBCCHH OF NEXT   M3639
*                                       *  EXTENT
         IC    R7,ISLNDAT               INCREMENT EXTENT         M3639
         LA    R7,1(R7)                 *                        M4274
         STC   R7,ISLNDAT               *                        M3639
         B     ISLC1015                 BR - TO PAD NEXT CYL     M3639
*
*   TRACK INDICES SUFFICIENT PADDED PREPARE TO TRANSFER TO
*   NEXT ROUTINE
*
ISLC109A MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         LM    R1,R13,DXCCW1            RESTORE REGISTERS        Y02072
         DROP  RWKAREA                  END CLOSE WA USING       Y02072
         MVC   0(L'LOAD2M,RWTGC),LOAD2M ID NEXT LOAD - IGG0202M  Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLI   0(RWTGC),X'F0'           TEST FOR END OF WTG TABLE  MC1A
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
*
         USING FORCORE,RCORE                                     Y01021
         LA    RJ,DXCCW12               WA ADDRESS               Y01021
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO IGG0202M   Y02072
*
         DROP  RCORE                    END CLOSE WA USING       Y02072
         EJECT
         USING FORCORE,RWKAREA          ESTABLISH WA ADDR        Y02072
*
* CURR TRACK IS PREFORMATTED, SET UP SPECIAL PROCEDURE
*
ISLC120  MVC   CM7,CM28                 MOVE CM28 TO CM7         S20201
         SR    R3,R3
         ST    R3,12(R10)               SET CM2+4 = 0000
         LA    R4,CM5                   TR TO CM5                S20201
         ST    R4,IOBCPSAD              STORE CPSTART IN IOBC CP START
ISLC121  MVC   IOBDADAD(8),ISLNDAT      C(IOBC+32)=CURR MBBCCHHR
         CLC   ISLNDAT+7(1),ISLNIRT+2   TEST CURR R VS NIRT R
         BE    ISLC122                  B IF LAST R
         IC    R3,ISLNDAT+7             STEP CURR R FOR NEXT IX
         LA    R3,1(R3)                                           21054
         STC   R3,ISLNDAT+7
*
         BAL   R14,ISLC207              LINK TO C2 RT TO WRITE 1 IX
*
         B     ISLC121                  LOOP TO WR NEXT IX ENTRY
*
*                                       LAST R TO BE WRITTEN
ISLC122  L     R5,CM27+K4               PTR TO CM27+4-MBBCCHHRFP S20201
         NI    8(R5),X'EF'              SET F = 20 (DELETE BIT 3)
*
         BAL   R14,ISLC207              LINK TO C2 RT TO WRITE 1 IX
*
         OI    8(R5),X'10'              RESET F = 30              15365
         OI    ISLD,X'80'               TURN D BIT 0 ON (NEW CYL SW)
         MVC   CM7,CM29                 MOVE CM29 TO CM7-        S20201
         B     ISLC109                                            21054
*
         EJECT
***********************************************************************
* CHART C2 - WRITE IX PADDING                                         *
***********************************************************************
*
ISLC201  EQU   *
*
* TEST FOR NEW CYLINDER
*
         TM    ISLD,X'80'               TEST NEW CYL SW (D BIT 0)
         BC    8,ISLC202                B IF OFF
*
* NEW CYL - SET NEW CYL SW OFF
*
         NI    ISLD,X'7F'               SET NEW CYL SW OFF (D BIT 0)
*
* SET F = 30
*
         L     R5,CM27+K4               PTR - CM27+4 -           S20201
*                                       MBBCCHHRFP               S20201
         OI    8(R5),X'10'              SET F = 3X (ADD BIT 3)
         NI    8(R5),X'F7'              SET F = UNCHAINED (BIT 4 OFF)
         XC    0(8,R5),0(R5)           SET MBBCCHHR = ZEROS
*
* TEST FOR CYL OVFL AREA
*
         LR    R4,R10                   C(R4)=A(CM1)
         TM    DCBOPTCD,X'08'           TEST OPTCD BIT-4 FOR CYL OVFL
         BC    7,ISLC203                BRANCH IF ON
*
*
* SET CPSTART IN IOBC TO CM5
*
ISLC202  LA    R4,CM5                   TR TO CM5                S20201
ISLC203  ST    R4,IOBCPSAD              STORE CPSTRT IN IOBC CPSTRT
*
* SET IOBC+32 TO CURR MBBCCHHR, WITH R=R-1
*
         MVC   IOBDADAD(8),ISLNDAT      C(IOBC+32)=CURR MBBCCHHR
         L     R8,DXCCW1                COPY DCB ADDRESS         Y02072
         USING IHADCB,R8                COPY ADDRESSABILITY      Y02072
         L     R8,DCBDEBAD              C(R8)=A(DEB
         USING IHADEB,R8                R8 = DEB ADDRESS         Y01021
         USING IHADCB,R1                USER DCB ADDRESSABILITY  Y02072
         L     R3,DEBFPEAD              C(R3)=A(1ST PRIME EXTENT)
         SR    R4,R4
         IC    R4,ISLNDAT               C(R4)= CURR 000M
         BCTR  R4,0                     C(R4)=CURR M-1(FOR EXTENT 0)
         SLL   R4,4                     C(R4)=(M-1)X16 (USE AS INDEX)
         LA    R4,0(R4,R3)              C(R4)=A(STRCC OF LAST EXTENT)
         MVC   IOBDADAD+2(1),5(R4)      SET UP BB
         SR    R3,R3
         IC    R3,IOBDADAD+7            C(R3)=R
         BCTR  R3,0                     C(R3)= R-1
         STC   R3,IOBDADAD+7            C(IOBC+32)=MBBCCHHR, R=R-1
*
* SET COUNTS IN AREA Z AND TURN ON ALL CC FLAGS IN CP91, TURN 10TH OFF
*
         L     R3,ISL10                 C(R3)=10 = LOOP COUNT
         LA    R9,ISLAREAZ              C(R9) = A(AREAZ)
         LA    R4,6(R9)                 C(R4)=A(Z+6) = COUNT 1 ADR
         SR    R5,R5
         IC    R5,ISLNDAT+7             C(R5)=CURR R
         LA    R6,CM8+K4                CC FLAG FOR CM8          S20201
ISLC204  MVC   0(4,R4),ISLNDAT+3        MOVE CURR CCHH
         STC   R5,4(R4)                 STORE R
         OI    0(R6),X'40'              TURN ON CC FLAG IN CP91
         LA    R4,8(R4)                 STEP Z
         LA    R5,1(R5)                 BUMP R
         LA    R6,16(R6)                STEP CP91
         BCT   R3,ISLC204               LOOP
         NI    CM26+K4,X'FF'-CC         TURN OFF LAST CC FLAG    S20201
*
* TEST CNT A VS 1 (ONLY 1 ENTRY ON LAST TRACK OF IX)
*
         CH    R7,ISL1                  TEST CNT A VS 1           21054
         BE    ISLC208                  B IF 1, TO WR DUMMY END ONLY
*
* TEST CNT A VS 10 (SET UP A(CC FLAG) OF LAST WR)
*
         SR    R4,R4
         LR    R5,R7                    C(R5)=CNT A (SIM FIRSH)
         BCTR  R5,0                     C(R5)= CNT A-1
         D     R4,ISL10                 C(R4)=R
*                                       C(R5)=Q
         LTR   R4,R4                    TEST R VS 0
         BNE   ISLC205                  B IF R NOT 0
         L     R4,ISL10                 C(R4)=10
         BCTR  R5,0                     C(R5)= Q-1
ISLC205  SLL   R4,4                     MULTIPLY R X 16
         LA    R6,CM6+K4(R4)            CC FLAG LAST WRITE       S20201
         LTR   R5,R5                    TEST Q VS 0
         BC    7,ISLC206                B IF NOT 0,CNT A WAS GTR 10
*
* TEN OR LESS ENTRIES TO WR
*
         NI    0(R6),X'BF'              SET OFF CC FLAG BASED ON CNT A
ISLC205A SR    R4,R4
         ST    R4,12(R10)               SET CM2+4 = 0000
         B     ISLC207
*
* MORE THAN TEN ENTRIES TO WR
*
ISLC206  STC   R7,DCBFIRSH+2            SET FIRSH R = CNT A
         ST    R6,12(R10)               SET CM2+4 = A(CC FLAG)
*
* EXECUTE CP91
*
ISLC207  LA    R13,ISLVRSAV             C(R13)=A(VRSAV)
         LR    R3,R1                    SAVE R1
         L     R4,IOBECBAD              C(R4)=A(ECB)
         LR    R6,R14                   SAVE R14
         EXCP  IHAIOB                   EXECUTE CHANNEL PROGRAM
*
* AWAIT COMPLETION
*
         LR    R1,R4                    C(R1)=A(ECB)
         WAIT  ECB=(1)                  WAIT
         LR    R1,R3                    RESTORE R1
         LR    R14,R6                   RESTORE R14
*
* SET CPSTART IN IOBC TO CM5
*
         LA    R4,CM5                   PTR TO CM5               S20201
         ST    R4,IOBCPSAD              STORE CPSTART IN IOBC CP START
*
* TEST ENDSW FOR LAST TRACK OF CURR IX
*
ISLC208  TM    ISLD,X'40'               TEST D BIT 1 (ENDSW)
         BCR   8,R14                    RETURN TO C1 IF OFF
*
* LAST TRACK OF CURR IX - SET ENDSW OFF, NEW CYL SW ON
*
         NI    ISLD,X'BF'               TURN D BIT 1 OFF (ENDSW)
*
* SET UP IOBC AND AREA Z FOR WRITING DUMMY END IX ENTRY
*
         SR    R3,R3
         IC    R3,ISLNIRT+2             C(R3)=NIRT R
         STC   R3,10(R9)                C(1ST CNT IN AREA Z) = FINAL R
         BCTR  R3,0                     C(R3)=NIRT R-1 OR PREV R
         STC   R3,IOBDADAD+7            C(IOBC+32) = PREV R
         MVC   IOBDADAD+5(2),ISLNDAT+5  C(IOBC+32) = CURR HH
*
* SET CC FLAG FOR CM8 IN CP91 OFF TO WRITE LAST ENTRY
*
         NI    CM8+K4,X'FF'-CC          TURN OFF CC FLAG         S20201
*
* SET F = 20
*
         L     R5,CM27+K4               PTR - CM27+4 -           S20201
*                                       MBBCCHHRFP               S20201
         NI    8(R5),X'EF'              SET F=2 (DELETE BIT 3)    12881
         B     ISLC205A                 B TO WR LAST ENTRY
*
* --------------------------------------------------------------------*
         SPACE 3
*
* CONSTANTS
*
CONF8    DC    X'F8F8'
ISL1     DC    H'01'                                              21054
ISL10    DC    F'10'                                              21054
*
THISLOAD DC    C'2L'
*
LOAD2M   DC    C'2M'                    ID OF MODULE IGG0202M    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
