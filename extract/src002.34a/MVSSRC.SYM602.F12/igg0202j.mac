         TITLE 'IGG0202J - QISAM LOAD MODE CLOSE- WRITE EOF'
IGG0202J CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0202J                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM CLOSE, LOAD MODE                            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = IF NOT A NULL RESUME LOAD, AND HIGH-LEVEL INDICES EXIST  *
*            FOR FIXED LENGTH RECORDS (FLR), GET CORE FROM SUBPOOL    *
*            230 FOR A REGISTER SAVE AREA; LINK TO CHANNEL END        *
*            APPENDAGE TO DETERMINE IF ANY INDICES NEED TO BE         *
*            WRITTEN; FINISH WRITING INDICES, IF REQUIRED; AND FREE   *
*            SAVE AREA CORE.  IF NOT A NULL RESUME LOAD, STORE INDEX  *
*            COUNTS IN DCB; SYNCH TO PUT ROUTINE TO GET A NEW COUNT   *
*            AND PREFORMAT, IF REQUIRED; FOR FLR, EXECUTE CP21 ONCE   *
*            TO WRITE EOF INDICATOR FOR PRIME DATA, AND AGAIN FOR     *
*            INDEPENDENT OVERFLOW, IF REQUIRED.                       *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = CLOSE EXECUTOR                                        *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 1102 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0202J                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM CLOSE EXECUTOR IGG0202N FOR *
*              FIXED LENGTH RECORDS, OR IGG02028 FOR VLR.  RECEIVES   *
*              RECEIVES CONTROL IN STORAGE PROTECT KEY 5 AND          *
*              PRIVILEGED STATE.                                      *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL IN STORAGE PROTECT KEY 5 TO ISAM CLOSE EXECUTOR  *
*               IGG0202D FOR A NULL RESUME LOAD, OTHERWISE TO IGG0202K*
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = ISAM LOAD MODE PROCESSING AND APPENDAGE ROUTINES      *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - CLOSE WORK AREA                           *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB, DCB COPY, CVT, SVRB, DEB, IOB, AND TCB     *
*                                                                     *
* TABLES = BUFFER CONTROL TABLE                                       *
*                                                                     *
* MACROS = MODESET, WAIT, GETMAIN, FREEMAIN, EXCP, SYNCH, AND XCTL    *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*        RELEASE OS/VS2-02 DELETIONS                                  *
*                                                               YM01334
*                                                               YM06944
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         EJECT
CVT      DSECT                                                   Y02072
         CVT                                                     Y02072
         SPACE 1
TCB      IKJTCB                                                  Y02072
         EJECT
         IKJRB                                                   Y02072
         EJECT
*****************************
* CLOSE WORK AREA REFERENCE *
*****************************
FORCORE  DSECT                          OPEN/CLOSE/EOV WORK AREA Y01021
         IECDSECT                                                Y01021
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   DSECT
         USING IHADEB,R8
         DS    0D
DEBNMSUB DS    0CL1
DEBTCBAD DS    A
DEBAMLNG DS    0CL1
DEBDEBAD DS    A
DEBOFLGS DS    0CL1
DEBIRBAD DS    A
DEBOPATB DS    0CL1
DEBSYSPG DS    A
DEBNMEXT DS    0CL1
DEBUSRPG DS    A
DEBPRIOR DS    0CL1
DEBECBAD DS    A
DEBPROTG DS    0BL1
DEBDEBID DS    0BL1
DEBDCBAD DS    A
DEBEXSCL DS    0CL1
DEBAPPAD DS    A
DEBNIEE  DS    0CL1
DEBFIEAD DS    A
DEBNPEE  DS    0CL1
DEBFPEAD DS    A
DEBNOEE  DS    0CL1
DEBFOEAD DS    A
         DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    A
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
*
ISLCOMON DSECT
         USING ISLCOMON,R12
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE
ISLEOB   DS    F                        END OF BUFFR ADR
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD
ISLOCNT  DS    CL8                      OVFLOL IX COUNT, CCHHRKDD
ISLDCNT  DS    CL8                      DUMMY IX COUNT,  CCHHRKDD
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP
         DS    CL2
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP
         DS    CL1
ISLBUFNO DS    CL1                      DCBBUFNO OR 2
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)
ISLVRSAV DS    18F                      ISL SAVE AREA
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE
*
TSTWK1C  DS    F                        WORK AREA                 13711
TSTWK2C  DS    F                        WORK AREA                 13711
         DS    F                        WORK AREA                 13711
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES
ISLD     DS    F                        DISCPLACEMENT FROM CP18 START
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK
*
ISLF8AD  DS    F                        ADDR OF PUT ISLF800
ISLFXAD  DS    F                        ADDR OF PUT ISLFX20
ISLFYAD  DS    F                        ADDR OF PUT ISLFY01
ISLFZAD  DS    F                        ADDR OF PUT ISLFZ01
ISLPAAD  DS    F                        ADDR OF PUT ISLPA01
ISLF1AD  DS    F                        ADDR OF APP ISLF110
*
         SPACE 2
*
* ISLVPTRS REFERENCE       C(DCBWKPT6)=A(ISLVPTRS)
*
ISLVPTRS EQU   *                                                  25463
ISLVPTR1 DS    A                        A(AREA Y)                 25463
ISLVPTR2 DS    A                        A(KEYSAVE)                25463
ISLVPTR3 DS    A                        A(IOBBCT)                 25463
ISLVPTR4 DS    A                        A(CP18)                   25463
ISLVPTR5 DS    A                        A(CP19)                   25463
ISLVPTR6 DS    A                        A(CP20)                   25463
ISLVPTR7 DS    A                        A(CP21)                   25463
ISLVPTR8 DS    A                        SIZE OF ISLCOMON AREA     25463
ISLVPTR9 DS    A                        SIZE OF CHAN PROG AREA    25463
ISLVPTRA DS    A                        ADDRESS OF BAD BUFFER     25463
ISLVPTRB DS    A                        UNUSED                    25463
ISLVPTRC DS    A                        UNUSED                    25463
ISLFXWK1 DS    F                        WORK AREA                 13711
ISLFXWK2 DS    F                        WORK AREA                 13711
ISLF9WK1 DS    F                        WORK AREA                 13711
*
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
AIOBSENS DS    CL2                      SENSE BYTES              Y01021
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD      Y01021
AIOBSIOC DS    0CL1                     SIO CC                   Y01021
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
*
********************
* IXLT REFERENCE   *
********************
*
IXLT     DSECT
         DS    0D
IXLTIND  DS    CL1                      INDICATOR                  LEV1
IXLBEG   DS    CL8                      BEGINING COUNT MBBCCHHR
IXLSTP   DS    CL8                      STEPPING COUNT MBBCCHHR
IXLEND   DS    CL8                      ENDING COUNT   MBBCCHHR
         DS    CL1
         DS    CL26                                                LEV2
         DS    CL26                                                LEV3
         DS    CL26                                                LEV4
         EJECT
IGG0202J CSECT
ISGL500  EQU   *                           *                     S20201
         BALR  RBASE,0                     ADDRESSIBILITY        S20201
         USING *,RBASE                                           S20201
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         USING IHADCB,R1                COPY DCB                 Y02072
         USING FORCORE,RCORE            CLOSE WORK AREA          Y02072
         L     R12,DCBWKPT1
         LR    R15,RBASE                   ADDRESSIBILITY        S20201
         ST    RBASE,DXCCW10            SAVE BASE ADDRESS        Y02072
         STM   R1,RJ,DXCCW1             SAVE REGISTERS 1-15      Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=10  CHANGE TO USER KEY  Y02072
*
         LR    R10,RCORE                WA ADDRESSABILITY        Y02072
         DROP  RCORE                    END USING ON CLOSE WA    Y02072
         USING FORCORE,R10              CLOSE WA ADDRESSABILITY  Y02072
         LR    R7,R1                    SAVE DCB COPY ADDR       Y02072
         L     R1,DXUDCBAD              USER DCB ADDRESS         Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   9
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RA       EQU   11
RB       EQU   12
RJ       EQU   15
REGSAVE  EQU   64                       REG SAVE AREA SIZE       Y02072
SUB230   EQU   230                      SUBPOOL FOR REG SAVE     Y02072
FOUR     EQU   4                        CONSTANT OF 4            Y01021
THIRTY   EQU   30                       BUFFER LIMIT FOR AOS
*
*
*   FINISH WRITING ANY HIGH LEVEL INDEXES THAT NEED TO BE WRITTEN
*   BY LINKING TO THE APPENDAGE.
*
         TM    DCBST,X'20'              IS IT A NULL RESUME LD   M0170
         BO    ISLG9066                 YES, BRANCH              M0170
         TM    DCBRECFM,X'80'           FIXED                    S20201
         BZ    ISLG501                  NO - VLR - DONE          S20201
         CLI   DCBNLEV,X'01'            CYL INDEX ONLY           S20201
         BNH   ISLG501                  NO MASTER INDEX - BR     S20201
*   WAIT ON PREVIOUS I/O TO COMPLETE.
         LA    R2,ISLIOBB               CP21                     S20201
         BAL   R14,ISLG502              LINK TO COMMON WAIT      S20201
         LR    R4,R1                    DCB ADDRESS              S20201
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         LA    R14,REGSAVE              SIZE OF REG SAVE AREA    Y02072
         DROP  RBASE                    CHANGE BASE             YM01334
         USING BASETAG,R15              REGISTER                YM01334
*
         GETMAIN  R,LV=(R14),SP=SUB230  GET SAVE AREA FOR APP    Y02072
*
*
*   SET UP DEB ADDRESS AND REGISTERS FOR APPENDAGES IGG019GC/GD.
*
         DROP  R1                       END ADDR REAL DCB        Y02072
         USING IHADCB,R7                USING ON COPY DCB        Y02072
         L     RJ,DCBRELSE              ADDR OF CE APPENDAGE     Y02072
         L     R3,DCBDEBAD              DEB ADDR APPENDAGES      Y02072
         DROP  R7                       END USING ON COPY DCB    Y02072
         USING IHADCB,R1                USING ON USER DCB        Y02072
         LR    R13,R1                   SAVAREA ADDR FOR APPEND  Y02072
         LR    R7,R1                    SAVE ADDR FOR FREEMAIN   Y02072
         LR    R1,R4                    RESTORE USERS DCB ADDR   Y02072
*
         BALR  R14,RJ                   LINK TO APPENDAGE        Y02072
*
         L     RBASE,DXCCW10            RESTORE ADDRESSABILITY   Y02072
         DROP  R15                      CHANGE BASE             YM01334
         USING BASETAG,RBASE            REGISTER                YM01334
         B     ISLG500                  ALL INDEXES WRITTEN      Y02072
*
*  APPENDAGE RETURNS TO FOLLOWING INSTRUCTION IF EXCP NEEDED
*
         MODESET  KEYADDR=DXUKEY,WORKREG=13 CHANGE TO USER KEY   Y02072
*
         L     RBASE,DXCCW10            RESTORE BASE ADDR       YM01334
         L     R12,DCBWKPT1             RESTORE LOAD WA ADDR     Y02072
         LA    R13,ISLVRSAV             SAVE AREA                S20201
         EXCP  ISLIOBB                  WRITE INDEX              S20201
*
ISLG500  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         LR    R1,R7                    ADDRESS OF CORE          Y02072
*
         FREEMAIN  R,LV=REGSAVE,A=(1),SP=SUB230    FREE CORE     Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=1  CHANGE TO USER KEY   Y02072
*
         LR    R1,R4                    RESTORE DCB ADDRESS      Y02072
         EJECT
***********************************************************************
* CHART G5 - CLOSE (FINISH PUT) HOUSEKEEPING                          *
***********************************************************************
*
ISLG501  EQU   *                           *                     S20201
         USING BASETAG,R15                                       S20201
         L     R12,DCBWKPT1                C(R12) = A(COMMON)    S20201
         L     R15,DXCCW10              RESTORE BASE ADDRESS     Y02072
         L     R11,ISLVPTR3             BUFFER CONTROL TABLE     Y02072
         LA    R2,ISLIOBB               C(R2)=A(IOBB)
         LA    R14,ISLG901              C(R14)=A(ISLG901) *WAIT IOBB*
*
ISLG502  L     R4,IOBECBAD              C(R4)=A(ECB)
         TM    0(R4),X'40'              TEST ECB BIT 1 (C-BIT)
         BC    1,0(R14)                 RETURN, I/O COMPLETE-DONT WAIT
         LA    R13,ISLVRSAV             C(R13)=A(VRSAV)
         LR    R3,R1                    SAVE R1
         LR    R1,R4                    C(R1)=A(ECB)
         LR    R4,R14                   SAVE R14                  13270
         WAIT  ECB=(1)                  WAIT
         LR    R1,R3                    RESTORE R1
         LR    R14,R4                   RESTORE R14               13270
         BR    R14                      RETURN
*
*
* ROUTINE TO ADJUST LAST ENTRY COUNTS FOR HI LEV IXS IN DCB
*
ISLG900  CLC   0(4,R4),ISL0             TEST CCHH VS 0000
         BE    0(R14)                   B IF 0000 = NO ADJUSTMENT
         CLC   4(1,R4),ISL0             TEST R VS 0
         BNE   0(R14)                   B IF NOT 0 = NO ADJUSTMENT
         LH    R3,2(R4)                 C(R3) = HH
         S     R3,ISL1                  C(R3) = HH-1
         STH   R3,2(R4)                 STORE HH-1 IN DCB LAST ENTRY
         MVC   4(1,R4),DCBHIRCM         R = HIRCM IN DCB LAST ENTRY
         BR    R14                      RETURN
*
         EJECT
***********************************************************************
* CHART G9 - CLOSE (WRITE EOF)                                        *
***********************************************************************
*
* STORE IX COUNTS IN DCB
*
ISLG901  LA    R7,ISLIXLT               C(R7)=A(IXLT)
*
         MVC   DCBFTCI(7),1(R7)         MOVE CYLINDER  MBBCCHH
         MVC   DCBFTMI1(7),27(R7)       MOVE MASTER 1  MBBCCHH
         MVC   DCBFTMI2(7),53(R7)       MOVE MASTER 2  MBBCCHH
         MVC   DCBFTMI3(7),79(R7)       MOVE MASTER 3  MBBCCHH
*
         MVC   DCBLETI(5),ISLNCNT       MOVE TRACK     CCHHR
         MVC   DCBLECI(5),12(R7)        MOVE CYLINDER  CCHHR
         MVC   DCBLEMI1(5),38(R7)       MOVE MASTER 1  CCHHR
         MVC   DCBLEMI2(5),64(R7)       MOVE MASTER 2  CCHHR
         MVC   DCBLEMI3(5),90(R7)       MOVE MASTER 3  CCHHR
*
         LA    R4,DCBLECI               C(R4)=A(LECI CCHHR)
         BAL   R14,ISLG900              B TO ADJUST IF NECESSARY
         LA    R4,DCBLEMI1              C(R4)=A(LEMI1 CCHHR)
         BAL   R14,ISLG900              B TO ADJUST IF NECESSARY
         LA    R4,DCBLEMI2              C(R4)=A(LEMI2 CCHHR)
         BAL   R14,ISLG900              B TO ADJUST IF NECESSARY
         LA    R4,DCBLEMI3              C(R4)=A(LEMI3 CCHHR)
         BAL   R14,ISLG900              B TO ADJUST IF NECESSARY
*
         CLC   DCBFTCI(1),9(R7)         TEST MS   CYLINDER
         BE    ISLG902
         MVC   DCBFTCI+1(1),9(R7)       STORE M
*
ISLG902  CLC   DCBFTMI1(1),35(R7)       TEST MS   MASTER 1
         BE    ISLG903
         MVC   DCBFTMI1+1(1),35(R7)     STORE M
*
ISLG903  CLC   DCBFTMI2(1),61(R7)       TEST MS   MASTER 2
         BE    ISLG904
         MVC   DCBFTMI2+1(1),61(R7)     STORE M
*
ISLG904  CLC   DCBFTMI3(1),87(R7)       TEST MS   MASTER 3
         BE    ISLG905
         MVC   DCBFTMI3+1(1),87(R7)     STORE M
*
* SAVE DCBLPDA (LOC OF LAST DATA RCD)
*
ISLG905  MVC   ISLNDAT(8),DCBLPDA       SAVE LPDA
         MVC   ISLODAT(8),DCBFTMI3      SAVE FTMI3
*
* LINK TO PA ROUTINE TO GET NEW COUNT AND PREFORMAT IF NECESSARY
         L     R3,IOBPTRB               GET PTR TO BUFF SLOT     A33690
         NI    0(R3),X'FB'              TURN OFF CYLINDER BIT    A33690
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         STM   R0,R5,DXCCW9             SAVE REGISTERS 0-5       Y02072
         L     RJ,CVTPTR                ADDR OF CVT              Y02072
         USING CVT,RJ                   CVT ADDRESSABILITY       Y02072
         L     RJ,CVTTCBP               ADDR OF TCB PTRS         Y02072
         L     RJ,0(RJ)                 TCB ADDRESS              Y02072
         USING TCB,RJ                   TCB ADDRESSABILITY       Y02072
         L     RJ,TCBRBP                ADDRESS OF SVRB          Y02072
         USING RBBASIC,RJ               SVRB ADDRESSABILITY      Y02072
*
         MODESET  KEYADDR=KEY0,WORKREG=13  SET TO KEY ZERO       Y02072
*
         STM   R6,R12,RBEXSAVE          SAVE REGISTERS 6-15      Y02072
         DROP  RJ                       END USING ON SVRB        Y02072
         L     R13,ISLPAAD              ADDR OF ISLPA01          Y02072
         L     R15,ISLF8AD              SET BASE FOR PUT RTN     Y02072
         LR    RJ,R13                   ENTRY POINT              Y02072
*
         SYNCH (15)                     SYNCH TO PUT RTN         Y02072
*
         L     RJ,CVTPTR                ADDRESS OF CVT           Y02072
         USING CVT,RJ                   CVT ADDRESSABILITY       Y02072
         L     RJ,CVTTCBP               ADDR OF TCB PTRS         Y02072
         L     RJ,0(RJ)                 ADDR OF TCB              Y02072
         USING TCB,RJ                   TCB ADDRESSABILITY       Y02072
         L     RJ,TCBRBP                SVRB ADDRESS             Y02072
         USING RBBASIC,RJ               RB ADDRESSABILITY        Y02072
         LM    R6,R12,RBEXSAVE          RESTORE REGS 6-15        Y02072
         DROP  RJ                       END USING ON SVRB        Y02072
*
         MODESET KEYADDR=DXUKEY,WORKREG=5 CHANGE TO USER KEY     Y02072
*
         LM    R0,R5,DXCCW9             RESTORE REGS 0-5         Y02072
*
* AWAIT COMPLETION OF ALL PRIOR I/O ACTIVITY
*
         LA    R2,ISLIOBA               C(R2)=A(IOBA)
         BAL   R14,ISLG502              B TO COMMON WAIT
         LA    R2,ISLIOBB               C(R2)=A(IOBB)
         BAL   R14,ISLG502              B TO COMMON WAIT
         LA    R2,ISLIOBC               C(R2)=A(IOBC)
         BAL   R14,ISLG502              B TO COMMON WAIT
*
         LA    R2,ISLIOBB               C(R2)=A(IOBB)
*
*
* SET UP TO WRITE EOF
*
         L     R6,ISLVPTR7              C(R6)=A(CP21)            Y02072
         NI    20(R6),X'7F'             TURN OFF DC FLAG AT CQ42
*
         L     R6,ISLVPTR1              C(R6)=A(AREA Y)          Y02072
         MVC   0(5,R6),DCBLPDA+3        MOVE CCHHR FROM LPDA
         MVC   5(3,R6),ISL0             KDD = 000
         CLC   DCBNREC(4),ISL0          NULL DATASET
         BNE   ISLG905A                 NO, BRANCH
         MVC   0(5,R6),ISLNDAT+3        SET UP COUNT IN AREA Y
         MVC   IOBDADAD(8),ISLNDAT      IOBB+32=MBBCCHHR FROM LPDA
         IC    R3,IOBDADAD+7             C(R3)= R
         BCTR  R3,0                     C(R3) = R-1
        STC    R3,IOBDADAD+7            IOBB+32=MBBCCHHR WITH R=R-1
         B     ISLG910
*
ISLG905A EQU   *
         MVC   IOBDADAD(7),DCBLPDA      IOBB+32 = MBBCCHH FROM LPDA
         SR    R3,R3
         IC    R3,DCBLPDA+7             C(R3)=R
         S     R3,ISL1                  C(R3)=R-1
         STC   R3,IOBDADAD+7            IOBB+32 = MBBCCHHR, WITH R=R-1
*
* EXECUTE CP21 - WRITE EOF
*
ISLG910  EQU   *
         TM    DCBRECFM,X'80'           IS IT VLR                 VLR
         BZ    ISLG911                  YES,BRANCH               M0651
         LA    R13,ISLVRSAV             C(R13)=A(VRSAV)
         LR    R4,R1                    SAVE R1
         EXCP  IHAIOB                   EXECUTE CHANNEL PROGRAM
         LR    R1,R4                    RESTORE R1
*   TEST IF INDEPENDANT OVERFLOW ALREADY USED - RSUME LOAD
ISLG911  CLI   DCBLIOV+7,X'00'          IND OVFLOW EXISTS        M0651
         BNE   ISLC020                  BRANCH ALREADY EXISTS    M0651
*                                       NOT USED - WRITE EOF
*                                                                 13270
* SET UP TO WRITE EOF - INDEPENDENT OVERFLOW                      13270
*                                                                 13270
ISLG912  EQU   *                                                  VLR
         CLI   DCBLIOV,X'00'            INDEPENDENT OVERFLOW EXIST13270
         BE    ISLC020                  BR IF NO IND OFL          13270
         LA    R2,ISLIOBB               *BR TO 'WAIT' ON CP21 TO  13270
         BAL   R14,ISLG502              *COMPLETE PRIME DATA EOF  13270
         MVC   IOBDADAD(8),DCBLIOV      SET SEEK ADDR IN IOB      13270
         SR    R3,R3                    R3=ZERO                   13270
         IC    R3,IOBDADAD              R3=M OF FIRST IND OFL EXT 13270
         SLL   R3,4                     R3=M X 16                 13270
         L     R8,DXCCW1                ADDRESS OF DCB COPY      Y02072
         USING IHADCB,R8                USING ON DCB COPY        Y02072
         L     R8,DCBDEBAD              PROTECTED DEB ADDR       Y02072
         DROP  R8                       END USING ON DCB COPY    Y02072
         USING IHADCB,R1                USING ON USER DCB        Y02072
         LA    R3,32(R3,R8)             R3=A(FIRST IND OFL EXT)   13270
         MVC   IOBDADAD+1(2),4(R3)      BB OF FIRST IND OFL EXT   13270
         MVC   0(4,R6),DCBLIOV+3        AREA Y - CCHH FROM LIOV   13270
         MVI   4(R6),X'01'              AREA Y - R=1              13270
         MVC   5(3,R6),ISL0             AREA Y - KDD=000          13270
*                                                                 13270
*EXECUTE CP 21 - WRITE EOF IN INDEPENDENT OVERFLOW AREA           13270
*                                                                 13270
         LA    R13,ISLVRSAV             *C(R13) = A(VRSAV)        13270
         LR    R4,R1                    *SAVE R1                  13270
         EXCP  IHAIOB                   *EXECUTE CHANNEL PROGRAM  13270
         LR    R1,R4                    *RESTORE R1               13270
*
*
* RESET MACRF IF LOCATE PUT
*
ISLC020  TM    DCBMACRF+1,X'08'         *TEST MACRF BIT 12(LOCATE)13270
         BC    8,ISLG906                B IF 0, MOVE PUT
         NI    DCBMACRF+1,X'EF'         TURN BIT 11 OFF FOR LOCATE
*
* RESTORE DCBLPDA (LOC OF LAST DATA RCD)
*
ISLG906  CLC   DCBLPDA(5),ISLNDAT       EOF ON SAME CYLINDER      15365
         BE    ISLG9065                 YES--BRANCH               15365
         TM    DCBRECFM,X'80'           IS IT VLR                 VLR
         BZ    ISLG9065                 YES, BRANCH               VLR
         OI    ISLF1AD,X'80'            NO--TURN ON BIT FOR 202L  15365
ISLG9065 MVC   DCBLPDA(8),ISLNDAT       RESTORE LPDA              15365
         MVC   DCBFTMI3(8),ISLODAT      RESTORE FTMI3
*
* RESET BUFFER POOL AND BUFFER POOL CONTROL BLOCK
*
ISLG9066 EQU   *                                                 M0170
         SR    R3,R3
         IC    R3,ISLBUFNO              C(R3)=NO OF BUFFERS
         L     R11,ISLVPTR3             C(R11) = A(IOBBCT)       Y02072
         LA    R4,8(R11)                C(R4)=A(SLOT 1) IN BCT
         LA    R5,12(R11)               C(R5)=A(SLOT 2) IN BCT IF ANY
ISLG907  BCT   R3,ISLG908               TEST FOR LAST BUF
         L     R6,0(R4)                 C(R6)=A(BUF N)
         L     R3,DCBBUFCB              C(R3)=A(BUF POOL CTL BLK)
         LA    R3,0(R3)
         L     R7,0(R3)                 C(R7)=A(BUF N+)
         LA    R7,0(R7)
*
*   CHECK IF ISLBUFNO LIMITED FOR AOS TO PREVENT LONG CHANNEL PROGRAMS
*    IF DCBBUFNO WAS GREATER THAN 30 THEN ISLBUFNO WAS SET 30,
*    IGG0192G AND IGG0196D.
*
         CLC   ISLBUFNO,DCBBUFNO        WAS BUFNO SET FROM DCB
         BE    AOSOK                    YES - THEN NOT LIMITED.
*                                       NO - CHECK IF LIMITED FOR AOS
         CLI   ISLBUFNO,THIRTY          WAS IT LIMITED FOR AOS
         BNE   AOSOK                    NO - NOT LIMITED O.K.
         LA    R7,0(R6,R8)              POINT LAST USED BUFFER TO
*                                       FIRST UNUSED BUFFER
AOSOK    EQU   *                        *                        Y02072
         ST    R7,0(R6)                 STORE A(BUF N+) IN BUF N
         LA    R4,8(R11)                C(R4)=A(SLOT 1)
         L     R6,0(R4)                 C(R6)=A(BUF 1)
         LA    R6,0(R6)
         ST    R6,0(R3)                 C(BUF POOL CTL BLK)=A(BUF 1)
         B     ISLG909
*
*                                       NOT LAST BUF
ISLG908  L     R6,0(R4)                 C(R6)=A(BUF B)
         L     R7,0(R5)                 C(R7)=A(BUF B+1)
*   CALCULATE BUFFER LENGTH.
         LR    R8,R7                    LENGTH = A(LAST BUFFER)
         SR    R8,R6                             -A(PREVIOUS BUFFER)
         LA    R7,0(R7)
         ST    R7,0(R6)                 STORE A(BUF B+1) IN BUF B
         A     R4,ISL4                  C(R4)=A(NEXT SLOT) IN BCT
         A     R5,ISL4                  C(R5)=A(NEXT SLOT+1) IN BCT
         B     ISLG907
*
         EJECT
*
* EXIT TO C0
*
ISLG909  LM    R1,RJ,DXCCW1             RESTORE REGISTERS        Y02072
         DROP  R10                      END CLOSE WA USING       Y02072
         USING FORCORE,RCORE            CLOSE WA ADDRESSABILITY YM06944
         L     R1,DXUDCBAD              USERS DCB ADDRESS       YM06944
         USING BASETAG,RBASE
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         MVC   0(L'LOAD2K,RWTGC),LOAD2K NEXT CLOSE EXECUTOR ID   Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=15  SET USERS KEY      YM06944
*
         DROP  RCORE                    END CLOSE WA ADDR       YM06944
         TM    DCBST,X'20'              NULL RESUME LOAD         M0170
         BZ    RELOOP                   NO, BRANCH               M0170
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY  YM06944
*
         MVC   0(L'LOAD2D,RWTGC),LOAD2D BYPASS REST OF CLOSE     Y02072
*
RELOOP   EQU   *                        ENSURE IN DATA MGT KEY  YM06944
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY  YM06944
*
         LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(1,RWTGC),ENDCLOSE      TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
*
         USING FORCORE,RCORE                                     Y01021
         LA    RJ,DXCCW12               WA ADDRESS               Y01021
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
         EJECT
*
* CONSTANTS
*
ISL0     DC    F'0000'
ISL1     DC    F'0001'
ISL4     DC    F'0004'
*
KEY0     EQU   ISL0                     STORAGE PROTECT KEY ZERO Y02072
*
CONSTIGG DC    C'IGG020'
THISLOAD DC    C'2J'
ENDCLOSE DC    C'00'
*
LOAD2D   DC    C'2D'                    ID OF MODULE IGG0202D    Y02072
LOAD2K   DC    C'2K'                    ID OF MODULE IGG0202K    Y02072
*
PATCH    DC    XL((*-IGG0202J)/20)'00'  ZEROED PATCH AREA        Y02072
         END
