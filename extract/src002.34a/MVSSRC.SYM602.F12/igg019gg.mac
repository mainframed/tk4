         TITLE 'IGG019GG - SIO APPENDAGE FOR RPS CHAN PGM INIT'
IGG019GG CSECT
*          RELEASE OS/VS2-02 DELETIONS
*                                                               YM03061
*                                                               YM03825
*
* FUNCTION/ OPERATION- THIS MODULE IS THE APPENDAGE ROUTINE THAT
* INITIALIZES THE LOAD MODE CHANNEL PROGRAMS TO UTILIZE THE ROTATIONAL
* POSITION SENSING (RPS) FEATURE OR NOT. THE PRESENCE OF THE FEATURE
* IS DETERMINED BY THE UCB.  THE RPS FEATURE IS EXPLOITED BY
* CHANGING CERTAIN CCW'S IN THE LOAD MODE CHANNEL PROGRAMS FROM
* NOP TO SET SECTOR, WITH ATTENDANT CALCULATION OF THE PROPER
* SECTOR VALUE.  ADDITIONALLY SOME TIC ADDRESSES MUST BE CHANGED
* TO BRING THE SET SECTOR CCW'S INTO USE.
* ENTRY POINT- IGG019GG IS THE ONLY ENTRY POINT.  THE MODULE IS
*              ENTERED AT SIO TIME BY IOS VIA THE DEB APPENDAGE
*              VECTOR TABLE.
* INPUT-       THE IOS REGISTER INTERFACE IS THE PRINCIPAL INPUT
*              TO THE MODULE. THEY PROVIDE ADDRESSABILITY FOR THE DCB.
*              WORK AREA, IOB, DEB, CHANNEL PROGRAMS , ETC.
* OUTPUT-      THE CHANNEL PROGRAM TO BE EXECUTED ON THIS SIO WILL BE
*              INITIALIZED ACCORDING TO THE DEVICE FEATURE (RPS OR
*              NON RPS) IN THE UCB.
*              EXTERNAL ROUTINES- IEA0SCRL VIA CVT0SCRL.  THE ROUTINE
*              DOES CONVERSION OF THE INPUT PARAMETERS TO A SECTOR
*              VALUE
* EXITS-       NORMAL RETURN TO IOS, TO PROCEED WITH SIO.
* TABLES/WORK AREAS - DECB, DCB, IOB AND EXTENTION, DCB WA (DCW), DEB,
*        CVT, PART 2 VECTOR TABLE.
*        SEE DSECTS AT FRONT OF MODULE FOR FORMAT AND DESCRIPTIONS.
*
         EJECT
         DCBD  DSORG=(IS)
         EJECT
IHADEB   IGGDEBD
         EJECT
ISLCOMON IGGLOAD
         EJECT
IHAIOB   IGGIOBD
         EJECT
LOADCPS  DSECT
         IGGLDCP OPTCD=W
         EJECT
CVTAREA  DSECT
         CVT
         SPACE 4
         IECDRQE
         EJECT
*   MISCELLANEOUS EQUATES
WRTCHK   EQU   X'80'
VLR      EQU   X'40'
FTIW     EQU   X'C0'                   FTIW OPTION + SUCCESSFUL GETMAIN
ONES     EQU   X'FF'                    MASK OF ALL ONES         Y02072
CP18NEXT EQU   X'01'                    SCHED CP18 NEXT          Y02072
CP20CNXT EQU   X'02'                    SCHEDULE CP20C NEXT      Y02072
CP20LAST EQU   X'03'                    CP20 SCHEDULED LAST      Y02072
ISL8     EQU   8
FIRSTIME EQU   X'80'                    FIRST TIME SWITCH FOR CP18V
ZERO     EQU   0
ONE      EQU   1
TWO      EQU   2
THREE    EQU   3
FOUR     EQU   4
TEN      EQU   10
TWOBYTES EQU   16
RESET    EQU   255
ADDR     EQU   1
AL3      EQU   3
CPSTART  EQU   IOBSTART-ONE
CAW      EQU   X'48'                    POINTER TO CP START      A44446
*
TISA     DSECT
         ORG   TISA+10                  DEFINE THE FLAG
TISAFLAG DS    C                        B0=RESUME LOAD
*                                       B1=CLOSE USES
*                                       B2=END OF T.I. TRK
*                                       B3=END OF CYL
*                                       B4=EXCP CP20 ALONE
CP20ONLY EQU   X'08'                    TEST B4 OF TISAFLAG
CCW      DSECT
OPCODE   DS    1C                       COMMAND CODE
         DS    AL3                      DATA ADDRESS
ADDRESS  EQU   OPCODE
FLAGS    DS    BL1                      CCW FLAGS
NULL     DS    1C                       UNUSED
COUNT    DS    H                        BYTE COUNT
COUNTFLD DSECT
CYL      DS    CL2                      CC
HEAD     DS    CL2                      HH
RECORD   DS    C                        R
IHAUCB   DSECT
         ORG   IHAUCB+16                DEFINE THE TYPE FLD
UCBTYP   DS    F                        UCB TYPE FIELD
TYPOPTN  EQU   UCBTYP+ONE                OPTIONAL FEATURES
TYPDEV   EQU   UCBTYP+TWO                DEVICE CLASS
TYPUNIT  EQU   UCBTYP+THREE              UNIT TYPE
*
RPSFEAT  EQU   X'10'
*
* DEVICE TABLE ENTRY FORMAT
DEVENTRY DSECT
         DS    0H                       MERLIN IS TYPICAL
CCMAX    DC    H'411'                   MAX CYL
HHMAX    DC    H'19'                    MAX HEAD
TRKCAP   DC    H'13060'                 TRACK CAPACITY
OVHDI    DC    AL1(179)                 NOT LAST RCD OVHD
OVHDL    DC    AL1(179)                 LAST RCD OVHD
OVHDK    DC    AL1(54)                  KEY OVHD
FLAG     DC    X'00'                    FLAGS
TOLRNCE  DC    H'512'                   TOLERANCE FACTOR
ALTTRK   DC    H'152'                   OCIP 58
OVHDR0   DC    H'221'                   ZEUS
NOSECT   DC    AL1(128)                 ZEUS
         DS    C                        ZEUS (RESERVED)
*
         EJECT
* GENERAL REGISTERS ARE USED AS FOLLOWS
*
R0       EQU   0                        *    -----
R1       EQU   1                        *    12* ADDRESS
R2       EQU   2                        *    IOB
R3       EQU   3                        *    DEB
R4       EQU   4                        *    DCB
R5       EQU   5                        *    -----
RSAVE    EQU   6                        *    REGISTER SAVE AREA  Y02072
R7       EQU   7                        *    UCB
R8       EQU   8                        *    -----
R9       EQU   9                        **   WORK REGISTER
R10      EQU   10                       CHANNEL PROGRAM POINTER
R11      EQU   11                       DECB
R12      EQU   12                       WORK REGISTER
R13      EQU   13                       BASE REGISTER
R14      EQU   14                       IOS RETURN VECTOR TABLE
R15      EQU   15                       WORK REGISTER
*
*        * MEANS THIS REGISTER IS SET UP UPON ENTRY FROM IOS,
*          AND ITS CONTENTS MUST BE RESTORED UPON RETURN TO IOS
*       ** MEANS THIS REGISTER MAY BE CHANGED, BUT UPON RETURN TO IOS
*          MUST CONTAIN ZEROES IN THE THREE HIGH ORDER BYTES
*
IGG019GG CSECT
         USING IGG019GG,R15             MODULE ADDRESSABILITY
         USING IHAIOB,R2                IOB ADDRESSABILITY
         USING IHADEB,R3                DEB ADDRESSABILITY
         USING IHADCB,R4                DCB ADDRESSABILITY
         USING RQE,R1                   RQE ADDRESSABILITY
         USING IHAUCB,R7                UCB ADDRESSABILITY
*
         B     SIOENTRY                 START I/O ENTRY          Y02072
         B     PGFXNTRY                 PAGE FIX TIME ENTRY     YM03061
*
SIOENTRY STM   R0,R15,0(R13)            SAVE REGISTERS           Y02072
         LR    RSAVE,R13                SAVE AREA ADDRESS        Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=10  CHANGE TO USER KEY   Y02072
*
         L     R12,DCBWKPT1             A(COMON)
         USING ISLCOMON,R12             LOAD WA ADDRESSABILITY   Y02072
         LR    R13,R15                  CLEAN UP THE EXT. RTN INTERFACE
         USING IGG019GG,R13
         DROP  R15
         LA    R2,0(R2)                 C(R2)=A(IOBX)
         LA    R8,ISLIOBB               C(R8)=A(IOBB)
         CR    R2,R8                    IOBX VS IOBB
         BH    ISLFIOBC                 CP 19
         BE    ISLFIOBB                 CP 21
         B     ISLFIOBA                 CP 18-20
*
ISLFRETN EQU   *                        RETURN TO IOS            Y02072
         SPACE 2
         MODESET KEYADDR=KEY0,WORKREG=9 CHANGE TO PROTECT KEY 0  Y02072
         SPACE 2
         LM    R0,R15,0(RSAVE)          RESTORE REGISTERS        Y02072
         SR    R9,R9                    RESTORE R9
         BR    R14                      NORMAL RETURN TO IOS
         EJECT
*
ISLTHETA EQU   *                        INTERFACE WITH THE RESIDENT
*                                       SECTOR CONVERT ROUTINE.
* THE FOLLOWING FORMULAE ARE USED TO CALCULATE THE SECTOR VALUE FOR
* MERLIN, ZEUS-ATHENS, AND ZEUS-CORINTH-
*
* FIXED RECORD LENGTHS===
*  SECTOR = (N/T)(RO + (R-1)(Y-K) + (R-1)(KL+DL))
*
* VARIABLE LENGTH RECORDS===
* SECTOR = (N/T)(RO + (R-1)(Y-K) + BB)
*
* WHERE  N= NUMBER OF SECTORS PER DEVICE
*        T= TRACK CAPACITY
*        RO= OVERHEAD FOR R0(RECORD 0)
*        R= TARGET RECORD NUMBER
*        Y= OVERHEAD FOR KEYED RECORDS (EITHER I OR L FROM DEV TAB)
*        K= OVERHEAD TO SUBTRACT FOR NON-KEYED RECORDS
*              (K=0 FOR ISAM)
*        KL= KEY LENGTH
*        DL= DATA LENGTH
*        BB= TOTAL NUMBER OF KEY AND DATA BYTES UP TO BUT NOT
*            INCLUDING THE TARGET RECORD.
* ISLTHETA CALLING SEQUENCE
*
* REGISTERS ARE LOADED AS FOLLOWS-
*              FIXED      VARIABLE
*   C(R0)       +DD        -BB        (2 BYTES, RIGHT JUSTIFIED)
*   C(R10)     000K       000I
*   C(R11)     000R       000R
*   C(R2)      0AAA       0AAA
*        BAL   R14,ISLTHETA
*
         SLL   R0,TWOBYTES              C(R0)= +DD00 OR -BB00
         OR    R0,R11                   C(R0)= +DD0R OR -BB0R
         SLL   R10,8                    C(R10)= 00K0 OR 00I0
         OR    R0,R10                   C(R0)= +DDKR OR -BBIR
         IC    R9,TYPUNIT               C(R9)= 000T
         SLL   R9,24                    C(R9)= T000
         OR    R2,R9                    C(R2)= TAAA OR TAAA
*
         L     R9,CVTPTR                C(R9)=A(CVT)
         USING CVTAREA,R9
         L     R15,CVT0SCR1             C(R15)=A(IEA0SCR1)
         LR    R12,R14                  SAVE CALLER
         BALR  R14,R15                  TO SECTOR CONVERT RTN
         LR    R14,R12                  RECOVER RETURN ADDR
         L     R12,DCBWKPT1             RECOVER WK AREA ADDR
         L     R2,RQEIOB                RECOVER IOB ADDR         Y02072
         LA    R2,0(R2)
         BR    R14                      RETURN TO CALLER
*
ISLSUB8  EQU   *                        ADJUST IOBSTART BY -8
* ADJUSTMENT BY -8 IS USED TO POINT THE IOBSTART ADDR AT THE SET
* SECTOR CCW AS PART OF INITIALIZATION FOR AN RPS DEVICE.
         L     R9,CPSTART               PICK UP ADDR
         LA    R9,0(R9)                 CLEAR HI BYTE
         S     R9,ISLEIGHT              SUBTRACT 8
         IC    R10,IOBSIOCC             SAVE SIO CODE
         ST    R9,CPSTART               PUT ADDR BACK
         STC   R10,IOBSIOCC             PUT CODE BACK
         BR    R14                      RETURN TO CALLER
ISLEIGHT DC    F'8'                     CONSTANT
VARIND   DC    H'0',X'8000'             MAKES BB INTO -BB
KEY0     EQU   VARIND                   ZERO PROTECT KEY         Y02072
*
        EJECT
ISLFIOBA EQU   *                        CP 18-20 INITIALIZATION
         TM    TYPOPTN,RPSFEAT          IS  DEV=RPS
         BO    ISL20RPS                 BIF YES
*
* NON-RPS INITIALIZATION.
* IN ESSENCE, IT REQUIRES THE TIC ADDRESSES THAT WERE BACKED UP
* (FROM SCH ID CCW'S TO SET SECTORS) FOR RPS TO BE RESET (BUMPED +8),
* AND OP CODES CHANGED FROM SETSECT TO NOP. SEE THE RPS INITIALIZATION
* CODE FOR A DESCRIPTION OF THE CHANNEL PGM SETUPS EXPECTED BY THIS MOD
*
         CLC   IOBSTART,ISLVPTR4+ONE    IS IT EXCP FOR CP18 ALONE
         BE    ISL18NON                 BIF YES
*
         TM    ISLVPTRA,FTIW            IS IT FTIW
         BNO   ISL20FVN                 BIF NOT. GO INIT CP20(F AND V)
* NON-RPS INITIALIZATION OF FTIW CP'S
         TM    DCBOPTCD,WRTCHK          IS CP20C REQ'D
         BO    ISL20CNO                 BIF YES
* NON-RPS INITIALIZATION OF CP20A/B
         L     R8,CPSTART               R8=A(CP20A OR CP20B)
         USING CQ1,R8
         L     R9,CQ2+FOUR              R9=A(TIC CP18)
         USING CCW,R9
         L     R10,ADDRESS              R10=TIC CP18
         USING CL0,R10
         CLI   CL0,SETSECT              DOES TIC GO TO A SETSECT
         BNE   ISL20TST                 BIF NOT
         LA    R10,CCWLEN(R10)          BUMP TIC ADDR +8
         ST    R10,ADDRESS              TIC NOW POINTS TO CQ1(CP18)
         B     ISL20TST                 TEST FOR CP20 ALONE
         DROP  R9,R10
ISL20CNO EQU   *                        NON-RPS INITIALIZATION OF CP20C
         L     R8,ISLVPTRC              C(R8)=A(CP20C(CQ1))
         S     R8,ISLEIGHT              BACK UP TO CQ0.
         USING CQ0,R8
         CLI   CQ0,SETSECT              IS CP20C SET FOR RPS
         BNE   ISL20TST                 BIF NOT
* INITIALIZE CP20C FOR NON- RPS
         MVI   CQ0,NOP                  SET FOR NON-RPS
         L     R9,CQ2+FOUR              C(R9)=A(TIC CP18)
         USING  CCW,R9
         L     R10,ADDRESS              C(R10)=TIC CL0 (CP18)
         A     R10,ISLEIGHT             C(R10)=TIC CL1 (CP18)
         ST    R10,ADDRESS              TIC NOW GOES TO CL1(CP18)
ISL20TST EQU   *                        TEST EXCP FOR CP20 ALONE
         L     R9,ISLVPTRA              C(R9)=A(TISA)
         USING TISA,R9
         TM    TISAFLAG,CP20ONLY        CP20 ALONE
         BO    ISLFRETN                 BIF YES
         EJECT
ISL18NON EQU   *                        CP18 NON RPS INIT
         L     R8,ISLVPTR4              A(CP18)
         USING CL1,R8
         L     R9,CL2+FOUR              GET PTR TO WRT CHK SEG(CL0*)
         DROP  R8
         USING CL0,R9
         TM    DCBOPTCD,WRTCHK          IS CL0* THERE
         BNO   ISLFRETN                 BIF NOT
         MVI   CL0,NOP                  NON-RPS INIT
         B     ISLFRETN                 EXIT
         DROP  R9
ISL20FVN EQU   *                        CP20 NON-RPS INITIALIZATION
         L     R8,ISLVPTR6              C(R8)=A(CP20)
         USING CQ1,R8
         TM    DCBOPTCD,WRTCHK          ARE CQ24,26, AND CQ9(F) THERE
         BNO   ISLCQ14N                 BIF NOT
ISLCQ24N L     R9,CQ24                  C(R9)=CQ24(L.H.)
         USING CCW,R9
         CLI   OPCODE,SETSECT           DOES CQ24 TIC TO CQT0
         BNE   ISLCQ26N                 BIF NO
         A     R9,ISLEIGHT              BUMP TIC ADDR +8
         ST    R9,CQ24                  CQ24=TIC CQT1
ISLCQ26N L     R9,CQ26                  C(R9)=CQ26(L.H.)
         CLI   OPCODE,SETSECT           DOES CQ26 TIC TO CQT0
         BNE   ISLCQ9                   BIF NOT
         A     R9,ISLEIGHT              BUMP TIC ADDR +8
         ST    R9,CQ26                  CQ26=TIC CQT1
ISLCQ9   TM    DCBRECFM,VLR             IS CQ9 THERE
         BO    ISLCQ14N                 BIF NOT
ISLCQ9N  L     R9,CQ9                   C(R9)=CQ9(L.H.)
         CLI   OPCODE,SETSECT           DOES CQ9 TIC TO CQT0
         BNE   ISLCQ14N                 BIF NOT
         A     R9,ISLEIGHT              BUMP TIC ADDR +8
         ST    R9,CQ9                   CQ9=TIC CQT1
ISLCQ14N L     R9,CQ14                  C(R9)=CQ14(L.H.)
         CLI   OPCODE,SETSECT           DOES CQ14 TIC TO A SETSECT
         BNE   ISL18NON                 BIF NOT. CP 20 OK FOR RPS
         A     R9,ISLEIGHT              BUMP TIC ADDR +8
         ST    R9,CQ14                  CQ14=TIC CQT1 OR CL1
ISLCQ4N  TM    DCBRECFM,VLR             DOES CQ4 NEED WORK
         BNO   ISL18NON                 BIF NOT
         L     R9,CQ4                   PICK UP CQ4(L.H.)
         A     R9,ISLEIGHT              BUMP TIC ADDR +8
         ST    R9,CQ4                   CQ4 TIC'S TO CL1
         TM    DCBOPTCD,WRTCHK          IS CQT8* THERE
         BNO   ISL18NON                 BIF NOT
         L     R9,CQT8                  PICK UP TIC ADDR.
         CLI   OPCODE,SETSECT           DOES IT TIC TO SET SECTOR
         BNE   ISL18NON                 BIF NO. LEAVE AS IS.
         A     R9,ISLEIGHT              BUMP ADDR +8
         ST    R9,CQT8                  CQT8 TIC'S TO CQ1.
         B     ISL18NON                 DO CP18 NON-RPS
         DROP  R9
         EJECT
ISL20RPS EQU   *                        INITIALIZE CP 20 FOR RPS
         L     R8,CPSTART               C(R8)=A(CP18 OR CP20)
         LA    R8,0(R8)                 CLEAR HIGH ORDER BYTE
         USING CCW,R8
         CLI   OPCODE,SETSECT           IS FIRST CCW A SET SECTOR
         BE    ISL18PRC                 YES. IOBSTART IS OK.
         BAL   R14,ISLSUB8              BACK UP TO THE SET SECT CCW.
         B     ISL18PRO                 R8 POINTS TO CL1 (OR CQ1)
ISL18PRC LA    R8,CCWLEN(R8)            BUMP R8 FROM CL0  (OR CQ0) TO
*                                       CL1 (OR CQ1)
ISL18PRO EQU   *
         C     R8,ISLVPTR4              IS IT EXCP FOR CP18 ALONE
         BE    ISL18RPS                 BIF YES
         DROP  R8
*
         TM    ISLVPTRA,FTIW            IS IT FTIW
         BNO   ISL20FVR                 BIF NOT. GO DO CP20 (F + V)
*
* RPS INITIALIZATION FOR FTIW CP'S. CP 18 AND/OR 20 MAY BE EXCP'D
* SEPARATELY OR TOGETHER. IN ADDITION, CP20 IS DIVIDED INTO A,B, AND C,
* AS BELOW-
*
*
* INITIALIZE CP20(FTIW) FOR RPS
* POSSIBLE SETUPS OF CP20A,B, AND C ARE-
*   SETUP 1   SETUP 2   SETUP 3   SETUP 4
*  ------------------------------------------
*    20A*      20B*      20A       20B
*                        20C*      20C*
*     *= INITIALIZATION REQUIRED
* RPS INITIALIZATION OF 20A AND 20B ARE IDENTICAL. IF CP20C IS USED
* NO INITIALIZATION OF CP20A/B IS REQUIRED.
*
         TM    DCBOPTCD,WRTCHK          IS CP20C REQ'D
         BO    ISLCP20C                 BIF YES
         L     R8,CPSTART               C(R8)=A(CP20A OR CP20B)
         USING CQ0,R8
         L     R9,CQ2+FOUR              C(R9)=A(TIC CP18)
         USING CCW,R9
         L     R10,ADDRESS              C(R10)=TIC CP18
         USING CL0,R10
         CLI   CL0,SETSECT              DOES IT TIC CL0
         BE    ISL20UPD                 BIF YES. GO UPDATE THETA.
         S     R10,ISLEIGHT             C(R10)=TIC CL0
         ST    R10,ADDRESS              TIC NOW GOES TO CL0(CP18)
         B     ISL20UPD                 UPDATE THETA
         DROP  R9,R10
*
ISLCP20C EQU   *                        RPS INITIALIZATION OF CP20C
         L     R8,ISLVPTRC              C(R8)=A(CP20C(CQ1))
         S     R8,ISLEIGHT              BACK UP TO CQ0.
         USING CQ0,R8
         CLI   CQ0,SETSECT              IS CP20C SET FOR RPS
         BE    ISL20UPD                 BIF YES. GO UPDATE THETA.
         MVI   CQ0,SETSECT              RPS INIT
         L     R9,CQ2+FOUR              C(R9)=A(TIC CL1)
         USING CCW,R9
         L     R10,ADDRESS              C(R10)=TIC CL1 (CP18)
         S     R10,ISLEIGHT             C(R10)=TIC CL0 (CP18)
         ST    R10,ADDRESS              TIC NOW GOES TO CL0(CP18)
         DROP  R9
* CALL ISLTHETA(FIXED)
ISL20UPD EQU   *                        UPDATE THETA FOR CP20(ALL)
         L     R8,CPSTART               C(R8)=A(CP20)
         USING CQ0,R8
         SR    R11,R11
         L     R10,CQ1                  C(R10)=A(CCHHR)
         USING COUNTFLD,R10
         IC    R11,RECORD               C(R11)=000R
         LA    R0,TEN                   C(R0)=+DD
         SR    R10,R10
         DROP  R10
         IC    R10,DCBKEYLE             C(R10)=000K
         LA    R2,ISLRPSSS+TWO          C(R2)=0AAA
         BAL   R14,ISLTHETA             CALL SECTOR CONVERT RTN
* TEST EXCP FOR CP20 ALONE.
         L     R9,ISLVPTRA              C(R9)=A(TISA)
         USING TISA,R9
         TM    TISAFLAG,CP20ONLY+CP18NEXT CP20 EXCPED ALONE
         BNZ   ISLFRETN                 YES - NO CP18
         DROP  R9
         EJECT
ISL18RPS EQU   *                        CP 18 RPS INIT RTN
         L     R8,ISLVPTR4              A(CP18)
         USING CL1,R8
         L     R9,CL2+FOUR              GET PTR TO WRT CHK SEG(CL0*)
         DROP  R8
         USING CL0,R9
         TM    DCBOPTCD,WRTCHK          IS CL0* THERE
         BNO   ISL18UPD                 BIF NOT
         MVI   CL0,SETSECT              RPS INIT
         DROP  R9
         USING CL1,R8
ISL18UPD EQU   *                        UPDATE SECTOR VALUE
         TM    DCBRECFM,VLR             DIFFERENT SECTOR CONVERT
*                                       PARM FOR VLR.
         BO    ISLCP18V                 BIF YES
* TEST FOR SHARED TRACK
*    SHARED TRACK SECTOR CALCULATIONS WILL USE THE VARIABLE FORM.
         L     R9,CL1                   PICK UP SEARCH ARG ADDR
         USING COUNTFLD,R9
         CLC   HEAD,DCBFIRSH            TEST FOR SHARED TRK CANDIDATE
         BNE   ISL18FXD                 BIF NOT ON SHARED TRK
         CLI   DCBFIRSH+TWO,ONE         R=1 ONLY IF NOT SHARED TRK.
         BE    ISL18FXD                 BIF NOT SHARED TRK.
*
* CALCULATE BB- SHARED TRACK
*   PARAMETERS   F=RECORD NUMBER FROM DCBFIRSH
*                R=TARGET RECORD NUMBER FROM THE SEARCH ARGUMENT
*
*   BB=(F-2)(KL+10)                          WHEN R=F-1
*   BB=(F-1)(KL+10)                          WHEN R=F
*   BB=(F-1)(KL+10)+(R-F-1)(KL+BS)           WHEN R GT F
         SR    R10,R10
         SR    R11,R11
         IC    R11,DCBFIRSH+TWO         C(R11)=F
         LA    R0,ONE
         SR    R11,R0                   C(R11)=F-1
         IC    R10,RECORD               C(R10)=R
         CR    R10,R11                  IS R=F-1
         BNE   ISL18BB2                 BIF NOT
         SR    R11,R0                   C(R11)=F-2
ISL18BB2 EQU   *                        C(R11)=Z, (F-1) OR (F-2)
         IC    R10,DCBKEYLE             C(R10)=KL
         LA    R10,TEN(R10)             C(R10)=KL+10
         MR    R10,R10                  C(R11)=Z(KL+10)
         LR    R0,R11                   C(R0)=Z(KL+10)
         SR    R10,R10
         SR    R11,R11
         IC    R11,DCBFIRSH+TWO         C(R11)=F
         IC    R10,RECORD               C(R10)=R
         CR    R10,R11                  IS R GT F
         BNH   ISLBBOK                  BIF NOT. BB IS OK.
         SR    R10,R11                  C(R10)=R-F
         LA    R11,ONE
         SR    R10,R11                  C(R10)=R-F-1
         IC    R11,DCBKEYLE             C(R11)=KL
         AH    R11,DCBBLKSI             C(R11)=KL+BS
         MR    R10,R10                  C(R11)= (R-F-1)(KL+BS)
         AR    R0,R11                 C(R0)=(F-1)(KL+10)+(R-F-1)(KL+BS)
ISLBBOK  EQU   *                        C(R0)=BB AS PER 1 OF THE 3
*                                             ALGORITHMS.
         SR    R11,R11
         IC    R11,RECORD               C(R11)=R (TARGET RCD)
         LA    R10,ONE                  C(R10)=000I
         LA    R2,ISLRPSSS              C(R2)=0AAA
         O     R0,VARIND                C(R0)=-BB
         BAL   R14,ISLTHETA             GO TO CONVERT
         B     ISLFRETN                 EXIT
         DROP  R9
* CALL ISLTHETA (FIXED)
ISL18FXD SR    R11,R11                  C(R11)=0000
         L     R10,CL1                  C(R10)=A(CCHHR)
         USING COUNTFLD,R10
         IC    R11,RECORD               C(R11)=000R
         LH    R0,DCBBLKSI              C(R0)=+DD
         SR    R10,R10
         DROP  R10
         IC    R10,DCBKEYLE             C(R10)=000K
         LA    R2,ISLRPSSS              C(R2)=0AAA
         BAL   R14,ISLTHETA             UPDATE SECTOR VALUE
         B     ISLFRETN                 EXIT
         EJECT
ISLCP18V EQU   *
* CALL ISLTHETA (VARIABLE)
* BB (PARAMETER FOR SECTOR CONVERT RTN) IS FOUND BY THE FOLLOWING
*   ALGORITHM- ALL THE WRITE CCW LENGTHS IN CP 18 ARE TOTALED, AND
*   ADDED TO THE RUNNING TOTAL HELD IN CQ10 (2 BYTES)
*
* CQ10 (CP20V) HOLDS THE CURRENT BB TOTAL. IT IS UPDATED BEFORE EXIT
*        FROM THIS MODULE, AND RESET TO ZERO WHEN THE TARGET RECORD
*              IS RECORD NUMBER ONE.
* CQ10+2 HOLDS THE BB TOTAL THAT IS ONE BLOCK BEHIND THE CURRENT TOTAL.
*
BBTOTAL  EQU   CQ10                     HOLDS TOTAL NUMBER OF KEY AND
*                                       DATA BYTES USED ON CURRENT TRK
BBTARGET EQU   CQ10+2                   SAME AS BBTOTAL, BUT ONE BLOCK
*                                       BEHIND IT. NEEDED FOR SEARCH
*                                       PREVIOUS CP LOGIC.
*   TEST FOR FIRST ENTRY TO SIO APPENDAGE.  FIRST TIME SWITCH IS SET BY
*    VLR PUT MODULES. CL2 OP CODE IS USED FOR THE SWITCH.
         TM    CL2,FIRSTIME             IS THIS FIRST ENTRY
         BZ    ISLFRETN                 BIF NOT. NO WORK TO DO.
         NI    CL2,RESET-FIRSTIME       THIS IS FIRST ENTRY. RESET SW
         L     R2,CL1                   C(R2)=A(CCHHR)
         USING COUNTFLD,R2
         SR    R11,R11
         IC    R11,RECORD               C(R11)=TARGET RECORD
         DROP  R2
         L     R9,ISLVPTR6              C(R9)=A(CP20V)
         USING CQ1,R9
         LTR   R11,R11                  IS TARGET RCD NUMBER=1
         BNZ   ISL18CAL                 BIF NOT. BB IS OK.
         STH   R11,BBTOTAL              SET BBTOTAL=ZERO
         STH   R11,BBTARGET             SET TARGET=ZERO
ISL18CAL EQU   *
         LH    R0,BBTARGET              C(R0)=00BB
* SET OTHER REGS
*                                       C(R11)=000R   (TARGET RECORD)
ISL18VAR LA    R10,ONE                  C(R10)=000I
         LA    R2,ISLRPSSS              C(R2)=0AAA
         O     R0,VARIND                C(R0)=-BB
         BAL   R14,ISLTHETA             GO TO CONVERT
         DROP  R9                       DESTROYED BY CONVERT RTN
         L     R9,ISLVPTR6              C(R9)=A(CP20)
         USING CQ1,R9
*  BB TOTALLING ROUTINE
         LA    R2,CL3                   INITIALIZE CCW LOCATOR
         USING CCW,R2
ISL18VBB EQU   *
         CLI   OPCODE,TIC               DOES LOCATOR POINT TO A TIC
         BNE   ISL18WRT                 BIF NO. TEST THIS CCW
         L     R2,ADDRESS               LOCATE NEXT CCW.
ISL18WRT EQU   *
         CLI   OPCODE,WCKD              IS THIS A WRITE CCW
         BNE   ISL18VEX                 BIF NOT. TOTAL ONLY WRT CCW'S.
         MVC   BBTARGET(TWO),BBTOTAL    MAKES TARGET FOLLOW 1 BLOCK
*                                       BEHIND TOTAL.
         TM    FLAGS,DC                 IF DATA CHAINED, THIS IS CL6.
         BO    ISL18CL6                 BRANCH TO TOTAL CL7 AND 8 LENS
ISL18CL4 EQU   *                        THIS CCW IS CL4.
         LH    R10,COUNT                COUNT FROM CL4
         S     R10,ISLEIGHT             SUBTRACT COUNT FLD LEN,
*                                        LEAVES KL+DL
         AH    R10,BBTOTAL              ADD LAST TOTAL
         STH   R10,BBTOTAL              UPDATE RUNNING TOTAL OF BB
ISL18VCC EQU   *
         TM    FLAGS,CC                 TEST FOR MORE CCW'S
         BNO   ISL18VEX                 EXIT. NO MORE TOTALLING
         LA    R2,CCWLEN(R2)            BUMP LOCATOR TO NEXT CCW.
CCWLEN   EQU   8
         B     ISL18VBB                 GO FOR NEXT WRT SEGMENT
ISL18CL6 EQU   *                        TOTAL CL7 AND CL8 LENGTHS.
         LA    R2,CCWLEN(R2)            BUMP LOCATOR
         LH    R10,COUNT                PICK UP COUNT
         AH    R10,BBTOTAL              ADD LAST TOTAL
         STH   R10,BBTOTAL              UPDATE TOTAL
         TM    FLAGS,DC                 LOOP IF DATA CHAINED.
         BO    ISL18CL6                 BACK FOR THE NEXT CCW
         B     ISL18VCC                 FINISHED WITH CL7 AND 8
         DROP  R2
ISL18VEX EQU   *
         B     ISLFRETN                 EXIT
         DROP  R9
         EJECT
* RPS INITIALIZATION FOR CP20(FIXED AND VLR)
ISL20FVR EQU   *                        CP20(F+V)
*
         L     R8,ISLVPTR6              C(R8)=A(CP20)
         USING CQ1,R8
*
* CQ24, 26, AND 9 ARE ALWAYS INITIALIZED BECAUSE THEY MAY TIC TO
*OTHER PLACES(THAN THE WRITE CHECK SEGMENT) WHILE ON AN RPS DEVICE.
*
         TM    DCBOPTCD,WRTCHK          ARE CQ24,26, AND CQ9(F) THERE
         BNO   ISL20DET                 BIF NOT
*
ISLCQ24R CLC   CQT2+ADDR(AL3),CQ24+ADDR  DOES CQ24 TIC TO CQT1
         BNE   ISLCQ26R                 BIF NOT
         L     R9,CQ24                  C(R9)=CQ24(L.H.)
         S     R9,ISLEIGHT              C(R9)=C(R9)-8
         ST    R9,CQ24                  CQ24 TIC'S TO CQT0
ISLCQ26R CLC   CQT2+ADDR(AL3),CQ26+ADDR  DOES CQ24 TIC CQT1
         BNE   ISLCQ9R                  BIF NOT
         L     R9,CQ26                  C(R9)=CQ26(L.H.)
         S     R9,ISLEIGHT              DECREMENT R9
         ST    R9,CQ26                  CQ26 TIC'S TO CQT0
ISLCQ9R  TM    DCBRECFM,VLR             IS CQ9 THERE
         BO    ISL20DET                 BIF NOT
         CLC   CQT2+ADDR(AL3),CQ9+ADDR  DOES CQ9 TIC TO CQT1
         BNE   ISL20DET                 BIF NOT
         L     R9,CQ9                   C(R9)=CQ9(L.H.)
         S     R9,ISLEIGHT              DECREMENT R9
         ST    R9,CQ9                   CQ9 TIC'S TO CQT0
* DETERMINE IF CP20 IS IN RPS OR NON-RPS STATE.
ISL20DET EQU   *
         L     R9,CQ14                  C(R9)=CQ14(L.H.)
         USING CCW,R9
         CLI   OPCODE,SETSECT           DOES CQ14 TIC TO A SET SECTOR
         BE    ISL20UPD                 BIF YES. CP20 IS SET FOR RPS.
*                                       GO TO UPDATE THETA.
* CP20(F+V) RPS INITIALIZATION REQUIRED.
ISLCQ14R S     R9,ISLEIGHT              POINT CQ14 AT THE SETSECT
         ST    R9,CQ14                  CQ14 TIC'S TO CQT0 OR CL0
ISLCQ4R  TM    DCBRECFM,VLR             IS CQ4 THERE
         BNO   ISL20UPD                 BIF NOT. CP20 OK FOR RPS.
         L     R9,CQ4                   C(R9)=CQ4(L.H.)
         S     R9,ISLEIGHT              DECREMENT R9
         ST    R9,CQ4                   CQ4 TICS TO CL0
         TM    DCBOPTCD,WRTCHK          IS CQT8* THERE
         BNO   ISL20UPD                 BIF NOT.
         L     R9,CQT8                  PICK UP TIC ADDR.
         CLI   OPCODE,SIDEQ             DOES IT TIC TO SIDEQ
         BNE   ISL20UPD                 BIF NO. LEAVE AS IS.
         S     R9,ISLEIGHT              TIC TO PREVIOUS CCW.
         ST    R9,CQT8                  TIC'S TO CQ0.
         B     ISL20UPD                 UPDATE SECTOR VALUE
         DROP  R9
         EJECT
ISLFIOBC EQU   *                        CP 19 INITIALIZATION
         USING IHAIOB,R2
         L     R8,ISLVPTR5              A(CP19)
         USING CM1,R8
         TM    TYPOPTN,RPSFEAT          IS DEV=RPS
         BO    ISL19RPS                 BIF YES
*
         MVI   CM40,NOP                 SET FOR NON-RPS
         B     ISLFRETN                 EXIT
*
ISL19RPS EQU   *                        RPS INIT
         MVI   CM40,SETSECT             RPS INIT
         L     R11,CPSTART              PICK UP IOBSTART ADDR
         USING  CCW,R11
         CLI   OPCODE,SIDEQ             DOES IOB POINT TO SIDEQ
         BNE   ISL19UPD                 BIF NOT. DON'T ADJUST IOBSTART.
         DROP  R11
         BAL   R14,ISLSUB8              IOBSTART POINTS TO A SIDEQ.
*                                       PREVIOUS CCW SHOULD BE A SET
*                                       SECTOR. BACK UP TO IT.
*
*  CALL ISLTHETA (FIXED)
ISL19UPD EQU   *
         SR    R11,R11                  C(R11)=0000
         L     R10,CM5                  C(R10)=A(CCHHR)
         USING COUNTFLD,R10
         IC    R11,RECORD               C(R11)=000R
         LA    R0,TEN                   C(R0)=+DD
         SR    R10,R10
         DROP  R10
         IC    R10,DCBKEYLE             C(R10)=000K
         DROP  R2
         LA    R2,ISLRPSSS+ONE          C(R2)=0AAA
         BAL   R14,ISLTHETA             UPDATE SECTOR VALUE
         B     ISLFRETN                 EXIT
         EJECT
ISLFIOBB EQU   *                        CP21
         USING IHAIOB,R2
         L     R8,ISLVPTR7              A(CP21)
         USING CQ40,R8
*
         TM    TYPOPTN,RPSFEAT          IS  DEV=RPS
         BO    ISL21RPS                 BIF YES
*
         DROP  R8
         L     R11,CPSTART              C(R11)=A(CHAN PGM)
         USING CQ39A,R11
         CLI   CQ39A,SETSECT            IS CP SET UP FOR NON-RPS
         BNE   ISLFRETN                 BIF YES.
         DROP  R11
         USING CQ40,R8
* CHAN PGM IS SET UP FOR RPS. CHANGE IT TO NON-RPS.
         ST    R8,CPSTART               START AT CQ40
         TM    DCBOPTCD,WRTCHK          IS CQ44A THERE
         BNO   ISLFRETN                 BIF NOT
*
         MVI   CQ44A,NOP                SET FOR NON-RPS
         B     ISLFRETN
*
ISL21RPS EQU   *                        RPS INIT
         DROP  R8
         L     R11,CPSTART              C(R11)=A(CHAN PGM)
         USING  CQ39A,R11
         CLI   CQ39A,SETSECT            IS CP SET UP FOR RPS
         BE    ISL21UPD                 BIF YES.
         DROP  R11
         USING CQ40,R8
         BAL   R14,ISLSUB8              SET C(IOBSTART)=A(CQ39A)
*
         TM    DCBOPTCD,WRTCHK          IS CQ44A THERE
         BNO   ISL21UPD                 BIF NOT
*
         MVI   CQ44A,SETSECT            RPS INIT
ISL21UPD EQU   *                        UPDATE SECTOR VALUE
*  CALL ISLTHETA (FIXED)
         SR    R11,R11                  C(R11)=0000
         L     R10,CQ40                 C(R10)=A(CCHHR)
         USING COUNTFLD,R10
         IC    R11,RECORD               C(R11)=000R
         LA    R0,TEN                   C(R0)=+DD
         SR    R10,R10
         IC    R10,DCBKEYLE             C(R10)=000K
         LA    R2,ISLRPSSS+THREE        C(R2)=0AAA
         DROP  R2
         BAL   R14,ISLTHETA             UPDATE SECTOR VALUE
         B     ISLFRETN
         EJECT
         USING IHAIOB,R2                IOB ADDRESSABILITY      YM03061
PGFXNTRY EQU   *                        PAGE FIX TIME ENTRY     YM03061
         STM   R0,R15,0(R13)            SAVE REGISTERS          YM03061
         LR    RSAVE,R13                SAVE SAVE AREA ADDRESS  YM03061
         LR    R13,R15                  MODULE ADDRESSABILITY   YM03061
         SPACE 2
         MODESET KEYADDR=RQEPRT,WORKREG=10  CHANGE TO USER KEY  YM03061
         SPACE 2
         L     R12,DCBWKPT1             ADDRESS LOAD MODE WA    YM03061
         LA    R2,0(,R2)                ADDR OF CURRENT IOB     YM03825
         LA    R8,ISLIOBA               ADDR OF IOBA (CP18-20)  YM03825
         CR    R2,R8                    IS IT IOBA (CP18-CP20)  YM03825
         BNE   ISLFRETN                 BR NO - RETURN TO IOS   YM03825
*
*    TEST FOR FULL TRACK INDEX WRITE AND IF SO SCHEDULE CP20A(B)
*    CP20C AND CP18 SEPARATELY TO PREVENT LONG CHANNEL PROGRAMS
*
         TM    ISLVPTRA,FTIW            IS IT FTIW               Y02072
         BZ    ISLFRETN                 BR IF NOT FTIW           Y02072
         L     R10,ISLVPTRA             ADDR OF TRK INDX SAVAREA Y02072
         USING TISA,R10                 TRK INDX SAVAREA ADDR    Y02072
         NI    TISAFLAG,ONES-CP20LAST   RESET CP SWITCHES        Y02072
         L     R8,ISLVPTR4              ADDR OF CP18             Y02072
         LA    R8,0(R8)                 CLEAR HIGH ORDER BYTE    Y02072
         L     R9,CPSTART               CURR CP START ADDRESS    Y02072
         LA    R9,0(R9)                 CLEAR HIGH ORDER BYTE    Y02072
         CR    R8,R9                    IS IT CP18 ALONE         Y02072
         BE    ISLFRETN                 BR IF YES, CP20'S NOT    Y02072
*                                       INCLUDED                 Y02072
         TM    DCBOPTCD,WRTCHK          WRITE CHECK SPECIFIED    Y02072
         BNO   CP18NXT                  BR NO, CP20C NOT NEXT    Y02072
         OI    TISAFLAG,CP20CNXT        SCHEDULE CP20C NEXT      Y02072
         B     ISLFRETN                 GO TEST FOR RPS DEVICE   Y02072
*
CP18NXT  EQU   *                        CP18                     Y02072
         OI    TISAFLAG,CP18NEXT        SCHEDULE CP18 NEXT       Y02072
*
         B     ISLFRETN                 RETURN TO IOS           YM03061
         SPACE 2
PATCH    DC    XL((*-IGG019GG)/20)'00'  ZEROED PATCH AREA        Y02072
*
         END

IEF314I SYSIO
