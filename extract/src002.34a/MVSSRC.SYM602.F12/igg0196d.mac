     TITLE   'IGG0196D - OPEN, RESUME LOAD'
IGG0196D CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0196D                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, RESUME LOAD MODE                      *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = DETERMINE DEVICE TYPE FOR INDEX & STORE IN INDXTYPE.     *
*            SET ISLBUFNO & DCBBUFNO IF BETWEEN 1 AND 30 INCLUSIVE;   *
*            OR LIMIT TO MAXIMUM OF 30; OR DEFAULT TO 2 IF NOT        *
*            SPECIFIED.  INITIALIZE IOBBCT.  TURN T-BIT ON FOR BUFFER *
*            1 IF ONE RECORD PER TRACK, & C-BIT ON IF ONE PRIME DATA  *
*            TRACK PER CYLINDER.  INITIALIZE ISLNDAT & ISLODAT R, F,  *
*            & P BYTES (X'00001B' AND X'FF1007' RESPECTIVELY).  GET   *
*            CORE FOR AND EXECUTE CP31A & B TO READ KEY OF LAST TRACK *
*            INDEX ENTRY INTO KEYSAVE AREA, AND READ COUNT AND DATA   *
*            OF LAST PRIME DATA BLOCK INTO FIRST BUFFER.              *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 906 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0196D                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0196C IN   *
*              STORAGE PROTECT KEY 5 AND PRIVILEGED STATE FOR RESUME  *
*              LOAD MODE ONLY.                                        *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM OPEN EXECUTOR IGG0195G IN STORAGE        *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = ABEND CODES:                                           *
*              033 - I/O ERROR DURING CP31A OR 31B                    *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB, DCB COPY, DEB, IOB, AND UCB.               *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, GETMAIN, EXCP, WAIT, FREEMAIN, XCTL, AND ABEND.   *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   DSECT
         USING IHADEB,R8
         DS    0D
DEBNMSUB DS    0CL1
DEBTCBAD DS    A
DEBAMLNG DS    0CL1
DEBDEBAD DS    A
DEBOFLGS DS    0CL1
DEBIRBAD DS    A
DEBOPATB DS    0CL1
DEBSYSPG DS    A
DEBNMEXT DS    0CL1
DEBUSRPG DS    A
DEBPRIOR DS    0CL1
DEBECBAD DS    A
DEBPROTG DS    0BL1
DEBDEBID DS    0BL1
DEBDCBAD DS    A
DEBEXSCL DS    0CL1
DEBAPPAD DS    A
DEBNIEE  DS    0CL1
DEBFIEAD DS    A
DEBNPEE  DS    0CL1
DEBFPEAD DS    A
DEBNOEE  DS    0CL1
DEBFOEAD DS    A
         DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    A
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
*
ISLCOMON DSECT
         USING ISLCOMON,R12
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
INDXTYPE EQU   ISLAREAZ+86              HI LEVEL INDEX DEV TYPE   24503
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE
ISLEOB   DS    F                        END OF BUFFR ADR
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD
ISLOCNT  DS    CL8                      OVFLOL IX COUNT, CCHHRKDD
ISLDCNT  DS    CL8                      DUMMY IX COUNT,  CCHHRKDD
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP
         DS    CL2
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP
         DS    CL1
ISLBUFNO DS    CL1                      DCBBUFNO OR 2
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)
ISLVRSAV DS    18F                      ISL SAVE AREA
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE
*
TSTWK1C  DS    F                        WORK AREA FOR FORMAT 000N
TSTWK2C  DS    F                        WORK AREA FOR FORMAT 00NN
         DS    F
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES
ISLD     DS    F                        DISCPLACEMENT FROM CP18 START
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK
*
CL1AD    DS    F                        ADDR CP18 SKLTN
CM1AD    DS    F                        ADDR CP19 SKLTN
CQ1AD    DS    F                        ADDR CP20 SKLTN
CQT1AD   DS    F                        ADDR CP20 WR CHK EXTN
CQ40AD   DS    F                        ADDR CP20 SKLTN
CQ45AD   DS    F                        ADDR CP20 WR CHK EXTN
*
         SPACE 3
*
* ISLVPTRS REFERENCE       C(DCBWKPT6)=A(ISLVPTRS)
*
ISLVPTRS DS    A                        A(AREA Y)
         DS    A                        A(KEYSAVE)
         DS    A                        A(IOBBCT)  BUF CTRL TBL ADR
         DS    A                        A(CP18)
         DS    A                        A(CP19)
         DS    A                        A(CP20)
         DS    A                        A(CP21)
         DS    A                        SIZE OF DCB WORK AREA    O19110
         DS    A                        SIZE OF CHANNEL PGM AREA O19110
         DS    A                        A(TRACK INDEX SAVE AREA) O19110
*                                       BIT 0-FULL TRK INDX WRITE
*                                       BIT 1-SUCCESSFUL GETMAIN
         DS    A                        A(CP20B)-FULL TRK INDX   O19110
*                                       WR                       O19110
         DS    A                        A(CP20C)-FULL TRK INDX   O19110
*                                       WR                       O19110
ISLFXWK1 DS    F                        WORK AREA                 13711
ISLFXWK2 DS    F                        WORK AREA                 13711
ISLF9WK1 DS    F                        WORK AREA                 13711
*
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
         DS    CL2                                                24503
IOBECBAD DS    A                        ECB POINTER
         DS    CL8                                                24503
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    0CL8                     DIRECT ACCESS DEVICE ADR
IOBDADA0 DS    CL1                      IOBSEEK   (ISLIOBA+32) M
IOBDADA1 DS    CL1                      IOBSEEK+1 (ISLIOBA+33) B
IOBDADA2 DS    CL1                      IOBSEEK+2 (ISLIOBA+34) B
IOBDADA3 DS    CL1                      IOBSEEK+3 (ISLIOBA+35) C
IOBDADA4 DS    CL1                      IOBSEEK+4 (ISLIOBA+36) C
IOBDADA5 DS    CL1                      IOBSEEK+5 (ISLIOBA+37) H
IOBDADA6 DS    CL1                      IOBSEEK+6 (ISLIOBA+38) H
IOBDADA7 DS    CL1                      IOBSEEK+7 (ISLIOBA+39) R
*
CP31A    DSECT
         DS    0D
CA1      DS    CL8                      1ST CCW
CA2      DS    CL8                      2ND CCW
CA3      DS    CL8                      3RD CCW
CA4      DS    CL1                      4TH CCW
CA41     DS    CL6                      COMMAND ADDRESS
CA47     DS    CL1                      BYTE COUNT
*
*   CP31B
CB1      DS    CL8                      SEEK HEAD                A34959
CB2      DS    CL8                      SRCH ID EQ               A34959
CB3      DS    CL8                      TIC TO CB2               A34959
CB4      DS    CL8                      READ COUNT OF LAST PD-DC A34959
CB5      DS    CL8                      READ LAST DATA RECORD    A34959
CB5V1    DS    CL8                      SEARCH FOR R0            A34959
CB5V2    DS    CL8                      TIC TO CB5V1             A34959
CB5V3    DS    CL8                      READ DATA OF R0          A34959
CB6      DS    CL1                      LPDA                     A34959
CB61     DS    CL6                      SEEK ADDRESS             A34959
CB67     DS    CL1                      R OF LPDA                A34959
CB7      DS    CL8                      SEARCH ARG FOR R0        A34959
CPEND    EQU   *                                                 A34959
         EJECT                                                  , 24503
FORCORE  DSECT                                                  , 24503
         IECDSECT                                               , 24503
         EJECT
**********************************************************************
* ISL PUT OPEN #1                                                     *
**********************************************************************
IGG0196D CSECT
         BALR  R9,0
         USING *,R9
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         USING FORCORE,RCORE                                      24503
         L     R12,DCBWKPT1
         LR    RBASE,R9
         STM   R0,R15,DXCCW1            SAVE REGISTERS           Y02072
         LR    RD,RCORE                 SAVE S/A ADDR            Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RD       EQU   14
UCBTYPE  EQU   19                       LOCATION OF UCB DEV TYPE  24503
RZERO    EQU   X'00'                                             A34959
FIXED    EQU   X'80'                                             A34959
SILICC   EQU   X'60'                                             A34959
K4       EQU   4                        LENGTH
STAT     EQU   X'80'                    STATUS BIT
         EJECT                                                  , 24503
*****************************************************************
*
*                   ENTRY POINT FOR QISAM - RESUME LOAD
*                        ENTERED FROM COMMON OPEN
*
*****************************************************************
*   SET UP INDEX DEVICE TYPE.
*
         MODESET  KEYADDR=DXUKEY,WORKREG=5  SET USERS KEY        Y02072
*
         DROP RCORE                     END OPEN WA USING        Y02072
         USING FORCORE,RD               OPEN WA ADDRESSABILITY   Y02072
*
         SR    R5,R5                    CLEAR                    M1766
         IC    R5,DCBOVDEV              GET OVERFLOW DEV TYPE    M1766
         LTR   R5,R5                    IS THERE OVERFLOW        M1766
         BNZ   OVTYPEOK                 YES ASSUME INDEX ON OVFL M1766
*                                       NO ASSUME INDEX ON PRIME
         IC    R5,DCBDEVT               GET PRIME DEVICE TYPE    M1766
OVTYPEOK EQU   *                        *                        M1766
         L     R8,DCBDEBAD                                       M1766
         USING IHADEB,R8                                         M1766
         L     R3,DEBFIEAD              R3=A(INDEX EXTENT)       M1766
         LTR   R3,R3                                             M1766
         BZ    SETTYPE                  BRANCH IF NO INDEX-USE   M1766
*                                       PRIME
         L     R3,0(R3)                 R3=A(INDEX UCB)           24503
         IC    R5,UCBTYPE(R3)           GET INDEX DEVICE TYPE     24503
SETTYPE  STC   R5,INDXTYPE              SAVE INDEX DEVICE TYPE    24503
TEST2321 SR    R6,R6                                              24503
         LA    R7,32(R8)                ADDRESS OF START          24503
*                                       DEB EXTENTS
         EJECT
*
* OPEN HOUSEKEEPING FOR PUT
*
         USING IHAIOB,R2                IOB ADDRESSABILITY       Y02072
TSTHSK   LA    R2,ISLIOBA               C(R2)=A(IOBA)
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
         L     R11,8(R10)               C(R11)=A(BCT)
         XC    TSTWK1C(8),TSTWK1C       SET WK1C AND WK2C TO 0
*
* SET ISLBUFNO = DCBBUFNO OR 2
*
         MVC   ISLBUFNO(1),DCBBUFNO     SET ISLBUFNO = DCBBUFNO
*
*   LIMIT SIZE OF CHANNEL PROGRAMS
*
K30      EQU   30                       LARGEST NUMBER BUFFERS
         CLI   ISLBUFNO,K30             BUFNO TO BIG
         BNH   NOTBIG                   NO LEAVE IT
         MVI   ISLBUFNO,K30             RESTRICT IT
NOTBIG   EQU   *                        *
         CLI   ISLBUFNO,X'00'           TEST ISLBUFNO VS ZERO
         BNE   TSTHK005                 B IF NOT 0
         MVI   ISLBUFNO,X'02'           SET ISLBUFNO = 2
*
* INITIALIZE BCT
*
*  1. SET UP KDD IN REG 6
*
TSTHK005 SR    R6,R6
         IC    R6,DCBKEYLE              C(R6)=IL, 000K
         LH    R7,DCBBLKSI              C(R7)=00DD
         SLL   R7,16                    C(R7)=DD00
         SLDL  R6,16                    C(R6)=0KDD
*
*  2. SET UP BCT, STORRING 0KDD IN BUFF CNT +4 AT SAME TIME
*
         SR    R3,R3
         IC    R3,ISLBUFNO              C(R3)=NO OF BUFFRS
         LA    R4,8(R11)                C(R4)=A(SLOT 1)
         ST    R4,0(R11)                STORE A(SLOT 1) AT PTRA
         ST    R4,4(R11)                STORE A(SLOT 1) AT PTRB
         L     R5,DCBBUFCB              C(R5)=A(BUFF POOL CTRL BLK)
         L     R5,0(R5)                 C(R5)=A(BUF1)
         LA    R5,0(R5)                 DELETE HIGH ORDER BYTE    10284
         LR    R8,R5                    C(R8)=A(BUF1) ALSO
         MVI   0(R11),X'08'             SET FLAGS BITS, BOB SW = 1
         MVI   4(R11),X'00'             SET B = 0
*---------------------------------------INIT N SLOTS
TSTHK01  EQU   *                        TEST FOR LAST SLOT
         ST    R5,0(R4)                 STORE A(BUF N) IN SLOT N
         L     R5,0(R5)                 C(R5)=A(NEXT BUFFER)
         ST    R7,0(R8)                 STORE 0000 IN BUF N CNT
         ST    R6,4(R8)                 STORE 0KDD IN BUF N CNT +4
         BCT   R3,TSTHK02               TEST FOR SLOT N
         MVI   0(R4),STAT               STATUS BIT 0 = 1 FOR BUFFR N
         ST    R4,ISLBUFN               C(BUFN)=A(SLOT N)
         LR    R4,R5                    C(R4)=A(NXT BUF)
         L     R5,DCBBUFCB              C(R5)=A(BUF POOL CTL BLK)
         ST    R4,0(R5)                 C(BUF POOL CTL BLK)=A(NXT BUF)
         CLI   DCBHIRPD,X'01'           TEST FRO 1 RCD/TRK-UNSHARED
         BNE   TSTHK03                  BRANCH G.T. 1 RCD/TRK
TSTHK014 OI    8(R11),X'08'             TURN T-BIT ON FOR BUF 1 (BIT 4)
         CLC   DCBFIRSH(2),DCBLDT       TEST FOR 1 TRK PER CYL
         BNE   TSTHK03                  B IF MORE THAN 1
         OI    8(R11),X'04'             TURN C-BIT ON FOR BUF 1 (BIT 5)
         B     TSTHK03                  EXIT
*
*                                       NOT SLOT N-
TSTHK02  EQU   *                        *
         LA    R4,K4(R4)                POINT TO NEXT SLOT
         LR    R8,R5                    C(R8)=A(NEXT BUF) ALSO
         B     TSTHK01                  LOOP
         SPACE 4
*
* GENERAL INITIALIZATION
************************
*
* INITIALIZE NDAT AND ODAT - R, F, AND P BYTES
*
TSTHK03  MVC   ISLNDAT+7(3),MVI1        RFP = 00001B
         MVC   ISLODAT+7(3),MVI2        RFP = FF1007
*
* SET ECBA, ECBB, ECBC TO COMPLETE STATE TO AVOID PREMATURE WAIT
*
         OI    ISLECBA,X'40'            SET COMPLETE BIT ON IN ECBA
         OI    ISLECBB,X'40'            SET COMPLETE BIT ON IN ECBB
         OI    ISLECBC,X'40'            SET COMPLETE BIT ON IN ECBC
         EJECT
***********************************************************************
*                                                                     *
*                        CHANNEL PROGRAM 31A                          *
*                                                                     *
*              READ THE KEY OF THE LAST OVERFLOW TRACK INDEX          *
*              ENTRY INTO THE KEYSAVE AREA.                           *
*                                                                     *
***********************************************************************
*                                                                     *
*                        CHANNEL PROGRAM 31B                          *
*                                                                     *
*              THIS CHANNEL PROGRAM WILL BE EXECUTED TO
*              READ THE COUNT AND DATA OF THE LAST PRIME DATA         *
*              BLOCK INTO THE FIRST BUFFER SPECIFIED IN THE           *
*              BUFFER CONTROL TABLE.                                  *
*                                                                     *
***********************************************************************
GETCORE  EQU   *                                                 A34959
         L     R0,CPSIZE                GET SIZE AND SUBPOOL     A34959
         LR    R3,R1                    SAVE A(DCB)
         GETMAIN R,LV=(0)               GET CORE FOR CP31
         ST    R1,IOBCPSAD              CHANNEL PROG START ADDR
         LR    R6,R5                    SAVE SIZE OF CP FOR FREEMAIN
         SLL   R6,24                    SAVE IN HIGH ORDER BYTE
         AR    R6,R1                    SAVE ADDR OF CP31
         ST    R6,ISLFXWK1              STORE A(CP31)            O19110
         BCTR  R5,0
         MVC   0(96,R1),CP31            CP SKELETON TO AREA      A34959
         LR    R5,R1                    ADDR GETMAIN AREA
         LR    R1,R3                    RESTORE A(DCB)
***********************************************************************
*                                                                     *
*              SET UP FIRST IOB ADDRESS                               *
*                                                                     *
***********************************************************************
         MVC   IOBDADA0(3),DCBLPDA      ISLIOBA+32 - MBB
         MVC   IOBDADA3(5),DCBLETI      LAST NORMAL TI - CCHHR
         USING CP31A,R5                 CP31A DSECT              A34959
         EJECT
***********************************************************************
*                                                                     *
*              INITIALIZE CP31A                                       *
*                                                                     *
***********************************************************************
         L     R6,CA1                   GET SRCH ARG             A34959
*                                       DISPLACEMENT             A34959
         AR    R6,R2                    ADD IOBDADAD             A34959
         ST    R6,CA1                   INIT CA1                 A34959
         L     R6,CA2                   GET TIC OP CODE          A34959
         AR    R6,R5                    ADD ADDR OF CA1          A34959
         ST    R6,CA2                   TIC TO CA1               A34959
         L     R6,CA3                   GET DISP TO ISLOCNT      A34959
         AR    R6,R12                   ADD ADDR OF ISLCOMMON    A34959
         ST    R6,CA3                   RD CNT OF OVFLOW TI      A34959
         L     R6,4(0,R10)              C(R6)-A(KEYSAVE)
         O     R6,CA4                   COMBINE KEYSAVE & COMAND
         ST    R6,CA4                   READ OVFLO TI KEY CCW
         IC    R6,DCBKEYLE              KEY LENGTH
         STC   R6,CA47                  INSERT KEY LENGTH IN CA4
         EJECT
***********************************************************************
*                                                                     *
*              INITIALIZE CP 31B
*                                                                     *
***********************************************************************
         MVC   CB6(8),DCBLPDA           PUT LPDA AT END OF CP31B A34959
         IC    R6,CB67                  R OF LPDA                A34959
         BCTR  R6,0                     R-1                      A34959
         STC   R6,CB67                  LPDA WITH R=R-1          A34959
         L     R6,CB1                   GET SEEK OP CODE & DISP  A34959
         AR    R6,R5                    ADD ADDR OF CHAN PROG    A34959
         ST    R6,CB1                   INIT SEEK CCW            A34959
         L     R6,CB2                   GET DISP TO SRCH ARG     A34959
         AR    R6,R5                    ADD ADDR OF CHAN PROG    A34959
         ST    R6,CB2                   INIT SRCH CCW            A34959
         L     R6,CB3                   GET DISP TO CB2          A34959
         AR    R6,R5                    ADD ADDR OF CHAN PROG    A34959
         ST    R6,CB3                   INIT TIC TO CB2          A34959
         MVC   CB4+1(3),9(R11)          BCT+9-1ST BUFFER ADDR    A34959
         MVC   CB5+1(3),9(R11)          BCT+9-1ST BUFFER ADDR    A34959
         L     R7,CB5                   READ DATA CCW            A34959
         LA    R6,8(0,0)                R6-8
         ALR   R7,R6                    ADD 8 (CNT) TO BUFFER AD
         SR    R8,R8                    CLEAR REGISTER 8
         LH    R8,DCBBLKSI              BLOCK SIZE
         STM   R7,R8,CB5                CCW TO READ LAST PD BLK  A34959
         TM    DCBRECFM,FIXED           IS RECORD FORMAT FIXED   A34959
         BO    FIXINIT                  YES, BRANCH              A34959
         OI    CB5+4,SILICC             SET SILI, CC BITS ON -   A34959
*                                       VLR                      A34959
         MVC   CB7(4),CB6+3             MOVE CCHH FOR R0         A34959
         MVI   CB7+4,RZERO              SET R OF CCHHR TO 0      A34959
         L     R6,CB5V1                 GET DISP OF SRCH ARG     A34959
         AR    R6,R5                    ADD CHAN PROG ADDR       A34959
         ST    R6,CB5V1                 INIT SRCH ARG            A34959
         L     R6,CB5V2                 GET DISP TO CB5V1        A34959
         AR    R6,R5                    ADD CHAN PROG ADDR       A34959
         ST    R6,CB5V2                 INIT TIC TO CB5V1        A34959
         L     R6,CB5V3                 GET RD DATA DISP         A34959
         AR    R6,R5                    ADD CHAN PROG ADDR       A34959
         ST    R6,CB5V3                 RD R0 DATA               A34959
FIXINIT  EQU   *                                                 A34959
         L     R3,DXUDCBAD              GET ADDR OF REAL DCB     Y02072
         LH    R4,DXUDCBML              GET MOVE LENGTH          Y02072
         BCTR  R4,0                     DECR BY 1 FOR EX INSTR   Y02072
         EX    R4,MOVEDCB               REFRESH REAL DCB         Y02072
         LR    R4,R1                    SAVE R1                  Y02072
*
         DROP  R1
         USING IHADCB,R4
*
         EXCP  IHAIOB                   EXECUTE CHANNEL PROGRAM
         L     R1,IOBECBAD         GET ECB ADDRESS FROM IOB      A49466
         LA    R1,0(R1)            CLEAR HIGH ORDER BYTE         A49466
*
         WAIT  1,ECB=(1)           WAIT FOR COMPLETION           A49466
         L     R1,IOBECBAD         GET ECB ADDRESS               A49466
         TM    0(R1),X'7F'         CHECK FOR NORMAL END          A49466
         BNO   ABEND               ABEND OF ABNORMAL END         A49466
         L     R1,IOBCPSAD         GET ADDRESS OF CP31
         TM    DCBRECFM,FIXED      TEST IF FIXED LENGTH
         BO    CPFREE              BR IF FIXED
         USING CP31A,R1
         MVC   ISLWRSAV(2),CB7+5   SAVE REM CAP FOR 192T/2V
         DROP  R1
CPFREE   EQU   *
         L     R0,CPSIZE           GET SIZE OF GOTTEN AREA       A49466
         FREEMAIN R,LV=(0),A=(1)   FREE GOTTEN CORE              A49466
         LR    R1,R4                    RESTORE R1
         DROP  R4
         USING IHADCB,R1        RE-ESTABLISH ADDRESSABILITY TO DCB
*
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
*
         MVI   DCBFIRSH+3,X'FF'         ALL DEVICES EXCEPT 2301
*
         MODESET  KEYADDR=DXUKEY,WORKREG=10  SET USERS KEY       Y02072
*
MASKA    MVC   ISLAREAZ+87(1),DCBFIRSH+3 MOVE DEVICE MASK
         EJECT
*
* EXIT ********** EXIT ***************** EXIT *********** EXIT ********
EXIT     EQU   *                                                 Y02072
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
*
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         DROP  RD                       DROP WA ADDR             Y02072
         USING FORCORE,RCORE            EST WA ADDR              Y02072
         USING BASETAG,RBASE
         MVC   0(L'LOAD5G,RWTGC),LOAD5G ID OF MODULE IGG0195G    Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    R15,DXCCW12                                        24503
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
*
ABEND    EQU   *                                                 A49466
         ABEND X'033',DUMP,,SYSTEM      SYSTEM 033 ABEND         A49466
*
MOVEDCB  MVC   DCBKEYLE-IHADCB(0,R3),DCBKEYLE    REFRESH DCB     Y02072
*
         DS    0D
*        CP31A
CP31     CCW   X'31',IOBDADA3-IHAIOB,X'40',5                     A34959
         CCW   X'08',0,X'00',0          TIC
         CCW   X'92',ISLOCNT-ISLCOMON,X'40',8                    A34959
         CCW   X'0E',0,X'60',0          RD KEY INTO KESAVE       A34959
*
*        CP31B
         CCW   X'1B',CB61-CA1,X'40',6                            A34959
         CCW   X'31',CB61+2-CA1,X'40',5                          A34959
         CCW   X'08',CB2-CA1,X'00',0                             A34959
         CCW   X'12',0,X'40',8          READ COUNT OF LAST PD-DC
         CCW   X'06',0,X'00',0          READ DATA OF LAST PD BLK
         CCW   X'31',CB7-CA1,X'40',5                             A34959
         CCW   X'08',CB5V1-CA1,X'00',0                           A34959
         CCW   X'06',CB7+5-CA1,X'20',3                           A34959
*
         DS    0F                                                A34959
CPSIZE   DC    X'FA'                    SUBPOOL 250              A34959
         DC    AL3(CPEND-CA1)           CP SIZE                  A34959
MVI1     DC    X'00001B'
MVI2     DC    X'FF1007'
THISLOAD DC    C'6D'                    CURRENT MODULE ID
OPNLOD7  DC    C'0S'
*
LOAD5G   DC    C'5G'                    ID OF MODULE IGG0195G    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
