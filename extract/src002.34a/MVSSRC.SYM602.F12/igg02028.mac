         TITLE 'IGG02028 - QISAM LOAD MODE CLOSE - FLUSH BFRS,INDICES'
IGG02028 CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG02028                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM CLOSE, LOAD MODE WITH VLR                   *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = ESTABLISH COMMUNICATION WITH PUT AND APPENDAGE ROUTINES, *
*            STORING APPENDAGE ROUTINE ADDRESS IN DCBRELSE OF THE     *
*            COPY DCB.  AWAIT COMPLETION OF ALL PRIOR I/O.  IF PUT    *
*            LOCATE, CHECK SEQUENCE OF LAST PUT.  IF IN ERROR, SYNCH  *
*            TO PROCESSING ROUTINE FOR SYNAD EXIT.  IF CURRENT        *
*            BUFFER NOT WRITTEN, SYNCH TO PROCESSING ROUTINE  AND     *
*            SCHEDULE WRITE.  IF A NULL REUSME LOAD, XCTL TO THE      *
*            NEXT ISAM CLOSE EXECUTOR.  IF THE LAST TRACK INDEX NEEDS *
*            TO BE WRITTEN, SYNCH TO PROCESSING ROUTINE AND DO IT.    *
*            IF LAST CYLINDER INDEX NEEDS TO BE WRITTEN, DO THE SAME. *
*            IF MASTER INDEX EXISTS, GET CORE FOR REGISTER SAVE AREA  *
*            AND LINK TO CHANNEL END APPENDAGE; THEN WRITE MASTER     *
*            INDEX.  FINALLY, FREE REGISTER SAVE AREA CORE.           *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = CLOSE EXECUTOR                                        *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 1159 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG02028                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM IOS CLOSE WHEN VLR SPECIFIED.    *
*              RECEIVES CONTROL IN STORAGE PROTECT KEY 5 AND          *
*              PRIVILEGED STATE.                                      *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM CLOSE EXECUTOR IGG0202J IN STORAGE       *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = SYNCH TO PROCESSING ROUTINE TO TAKE SYNAD EXIT IF A    *
*              SEQUENCE ERROR EXISTS.                                 *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = ISAM LOAD MODE PROCESSING AND APPENDAGE ROUTINES      *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - CLOSE WORK AREA                           *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB, DCB COPY, DEB, IOB, CVT, TCB, AND SVRB     *
*                                                                     *
*    TABLES = BUFFER CONTROL TABLE                                    *
*                                                                     *
* MACROS = MODESET, XCTL, WAIT, EXCP, GETMAIN, AND FREEMAIN           *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
*****************************
* CLOSE WORK AREA REFERENCE *
*****************************
FORCORE  DSECT                          OPEN/CLOSE/EOV WORK AREA Y01021
         IECDSECT                                                Y01021
         EJECT
********************
* DEB REFERENCE    *
IHADEB   IGGDEBD
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
ISLCOMON IGGLOAD
         USING ISLCOMON,R12                                      S21045
*
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         SPACE 4
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
AIOBSENS DS    CL2                      SENSE BYTES              Y01021
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD      Y01021
AIOBSIOC DS    0CL1                     SIO CC                   Y01021
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
*
********************
* IXLT REFERENCE   *
********************
*
IXLT     DSECT
         USING IXLT,R7
         DS    0D
IXLTIND  DS    CL1                      INDICATOR                  LEV1
IXLBEG   DS    CL8                      BEGINING COUNT MBBCCHHR
IXLSTP   DS    CL8                      STEPPING COUNT MBBCCHHR
IXLEND   DS    CL8                      ENDING COUNT   MBBCCHHR
         DS    CL1
         DS    CL26                                                LEV2
         DS    CL26                                                LEV3
         DS    CL26                                                LEV4
         EJECT
CVT      DSECT                                                   Y02072
         CVT                                                     Y02072
         SPACE 2
TCB      IKJTCB                                                  Y02072
         EJECT
         IKJRB                                                   Y02072
         EJECT
************************************************************** 
IGG02028 CSECT                                                 
************************************************************** 
ISLG500  BALR  R15,0
         USING *,R15
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         USING FORCORE,RCORE            WA ADDRESSABILITY        Y02072
         L     R12,DCBWKPT1
         LR    RBASE,R15
         STM   R1,RWTGC,DXCCW1          SAVE REGISTERS 1 - 8     Y02072
         LR    RWTGC,RCORE              CLOSE WA ADDRESS         Y02072
         USING FORCORE,RWTGC            WA ADDRESSABILITY        Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   9
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RJ       EQU   15
KEYZERO  EQU   0                        CHANGE TO KEY ZERO       Y02072
REGSAVE  EQU   64                       REG SAVE AREA SIZE       Y02072
SUB230   EQU   230                      SUBPOOL FOR REGSAVE      Y02072
CLOSESW  EQU   X'02'                    CLOSE INDICATOR IOBFLAGS A46890
ISLKEYVL EQU   X'04'                    KEY SEQUENCE VALID(IXLT) XM6075
RSLOAD   EQU   X'20'                    RESUME LOAD(DCBST)       XM6075
*
         EJECT
***********************************************************************
* CHART G5 - CLOSE (FINISH PUT) HOUSEKEEPING                          *
***********************************************************************
*
ISLG501  TM    DCBST,X'20'              NULL RESUME LOAD?       SA67203
         BO    ISLG812                  YES, BRANCH TO EXIT     SA67203
         L     R2,DCBDEBAD              PROTECTED DEB ADDR       Y02072
         ST    R15,DXCCW6               SAVE BASE ADDR           Y02072
         LR    R14,R1                   SAVE ADDR OF DCB COPY    Y02072
         L     R1,DXUDCBAD              ADDR OF USERS DCB        Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=12  CHANGE TO USER KEY  Y02072
*
         L     R12,DCBWKPT1             C(R12)=A(COMMON)
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
         L     R11,8(R10)               C(R11)=A(BCT)
         CLC   40(4,R10),DCBSYNAD       TEST VPTER 11 VS A(SYNAD)
         BNE   ISLG5012                 B IF NOT EQUAL
         OI    DCBEXCD2,X'20'           SET EXCD2 BIT 2 ON = NO SYNAD
ISLG5012 EQU   *                        SET BUFF CNTRL TBL FLGS  Y02072
         OI    IOBFLAGS,X'10'           SET FLAGS BIT-3 ON (CLOSE)
         NI    IOBFLAGS,X'FD'           SET FLAGS BIT 6 OFF (CLOSE X)
         NI    IOBFLAGS,X'BF'           SET FLAGS BIT 1 OFF IF ON
*
* SET UP LINES OF COMMUNICATION TO PUT AND APP MODULES
*
         USING IHADEB,R2                                         S21045
         L     R4,DEBEXPTR               GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R4                                         S21045
         L     R4,DEBPUT                 C(R4)=A(ISLF800)        S21045
         DROP  R4                                                S21045
         LA    R4,6(R4)                 ISLF800+6 = PUT BASE
         ST    R4,ISLF8AD               STORE ADDR OF PUT BASE
         A     R4,ISL4
         ST    R4,ISLFXAD               STORE ADDR OF B TO ISLFX20
         A     R4,ISL4
         ST    R4,ISLFYAD               STORE ADDR OF B TO ISLFY01
         A     R4,ISL4
         ST    R4,ISLFZAD               STORE ADDR OF B TO ISLFZ01
         A     R4,ISL4
         ST    R4,ISLPAAD               STORE ADDR OF B TO ISLPA01
*
         L     R4,DEBAPPAD              C(R4)=ADDR OF DEB AVT    Y02072
         DROP  R2                       END USING ON DEB         Y02072
         USING DEBAVT,R4                DEB AVT ADDRESSABILITY   Y02072
         L     R4,DEBCEA                ADDR OF CE APPENDAGE     Y02072
         DROP  R4                       END DEB AVT USING        Y02072
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY (5)     Y02072
*
         USING IHADCB,R14               COPY DCB ADDRESSABILITY  Y02072
         ST    R4,DCBRELSE              STORE ADDR OF ISLF110    Y02072
*                                       IN DCB COPY              Y02072
         DROP  R14                      END USING ON DCB COPY    Y02072
         USING IHADCB,R1                USER DCB ADDRESSABILITY  Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=2  SET USER'S KEY       Y02072
*
*
* AWAIT COMPLETION OF ALL PRIOR I/O ACTIVITY
*
         LA    R2,ISLIOBA               C(R2)=A(IOBA)
         BAL   R14,ISLG502              B TO COMMON WAIT
         LA    R2,ISLIOBB               C(R2)=A(IOBB)
         BAL   R14,ISLG502              B TO COMMON WAIT
         LA    R2,ISLIOBC               C(R2)=A(IOBC)
         BAL   R14,ISLG502              B TO COMMON WAIT
         LA    R2,ISLIOBA               C(R2)=A(IOBA)
         B     ISLG503
*
         USING IHAIOB,R2                IOB ADDRESSABILITY      Y02072
ISLG502  L     R4,IOBECBAD              C(R4)=A(ECB)
         TM    0(R4),X'40'              TEST ECB BIT 1 (C-BIT)
         BC    1,0(R14)                 RETURN, I/O COMPLETE-DONT WAIT
         LA    R13,ISLVRSAV             C(R13)=A(VRSAV)
         LR    R6,R14                   SAVE R14
         LR    R3,R1                    SAVE R1
         LR    R1,R4                    C(R1)=A(ECB)
         WAIT  ECB=(1)                  WAIT
         LR    R1,R3                    RESTORE R1
         LR    R14,R6                   RESTORE R14
         BR    R14                      RETURN
*
*
* TEST FOR MOVE OR LOCATE PUT
*
ISLG503  TM    DCBMACRF+1,X'10'         TEST MACRF BIT 11
         BC    1,ISLG508                B IF ON = MOVE PUT
*
* LOCATE PUT - CHECK SEQUENCE OF LAST PUT
*
*                                       HOUSEKEEPING
************************************************************** 
ISLG504  EQU   *                                               
************************************************************** 
         LH    R4,DCBRKP                C(R4)= RKP (00NN)
         A     R4,ISLCBF                C(R4)=RKP+CBF = A(KEY IN RCD)
         SR    R3,R3
         IC    R3,DCBKEYLE              C(R3)=KEYLEN
         BCTR  R3,0                     C(R3)=KEYLEN-1,FOR EXECUTE
         L     R5,4(R10)                C(R5)=A(KEYSAVE)
*
         TM    DCBEXCD1,X'FE'
         BC    7,ISLG505
         TM    DCBEXCD2,X'C8'           PREVIOUS ERROR
         BNE   ISLG505                  YES,BRANCH
************************************************************** 
         L     R10,20(R10)             A(CP20,CQ1)             
         L     R11,ISLCBF              A(REC N)                
         CLC   82(2,R10),0(R11)        REC LN VALIS            
         L     R10,DCBWKPT6            RESET REGS              
         L     R11,8(R10)                                      
         BL    ERROR                   NO REC LN BAD           
************************************************************** 
         CLC   DCBNREC(4),ISL2          TEST NREC VS 2
         BL    ISLG508                  B IF LOW, SEQ ERR IMPOSSIBLE
*
         EX    R3,ISLG504A              C(CBF+RKP) VS C(KEYSAVE)
         BH    ISLG508                  B IF NEW KEY HIGH, SEQUENCE OK
*
*                                       SEQUENCE NOT OK, TAKE SYNAD
*                                       ***************************
ERRORA   EQU   *                        *                        XM6075
         NI    DCBMACRF+1,X'EF'         TURN BIT 11 BACK OFF (LOCATE)
         L     R13,ISLF8AD              SET FOREIGN BASE         Y02072
         BAL   R14,SYNCHRTN             GO TAKE SYNAD EXIT       Y02072
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)          A35244
         TM    ISLIXLT,ISLKEYVL         WAS DATA ADDED           XM6075
         BO    ISLG504                  YES- NOT NULL RESUME LOADXM6075
         OI    DCBST,RSLOAD             INDICATE NULL RESUME LOADXM6075
         B     ISLG504                  GO TO HOUSEKEEPING AGAIN
*
ERROR    OI    DCBEXCD2,X'08'
         B     ERRORA
*                                       PREV SEQ ERR, DROP LAST RCD
*                                       ***************************
ISLG505  EX    R3,ISLG505A              MOVE KEY FROM KEYSAVE TO BUFFR
         NI    DCBEXCD2,X'3F'           TURN EXCD2 BITS 0 AND 1 OFF
         L     R3,DCBNREC               C(R3)=NREC
         BCTR  R3,0                     C(R3)=NREC-1
         ST    R3,DCBNREC               C(NREC)=NREC-1
         L     R3,IOBPTRB               C(R3)=C(PTRB) = A(CURR SLOT)
         LA    R3,0(R3)
         L     R4,0(R3)                 C(R4)=A(CURR BUFFR START)
         LA    R4,12(R4)                C(R4)=A(1ST RCD IN CURR BUFF)
         C     R4,ISLCBF                TEST A(1ST RCD) VS C(CBF)
         BNE   ISLG5085                 B NOT EQUAL TO BACK UP CBF
*
*                                       CBF POINTS TO 1ST RCD IN BUFFR
         NI    0(R3),X'80'              TURN OFF ALL STATUS BITS
         LA    R4,IOBABUF               C(R4)=A(SLOT 1)
         CR    R3,R4                    TEST A(CURR SLOT) VS A(SLOT 1)
         BE    ISLG506                  B IF CURR SLOT = SLOT 1
         S     R3,ISL4                  C(R3)=A(PREV SLOT)
         B     ISLG507
ISLG506  L     R3,ISLBUFN               C(R3)=A(SLOT N) = A(PREV SLOT)
ISLG507  IC    R5,IOBB                  SAVE B
         ST    R3,IOBPTRB               STORE A(PREV SLOT) IN PTRB
         STC   R5,IOBB                  RESTORE B
         L     R4,0(R3)                 C(R4)=A(PREV BUF)
         LA    R4,0(R4)
         MVC   DCBLPDA(8),DCBFTMI3      LPDA = PREVIOUS LPDA
         MVC   0(5,R4),DCBLPDA+3        PREV BUF CCHHR = LPDA CCHHR
         B     ISLG509
*
* BUMP CBF
*
************************************************************** 
ISLG508  EQU   *
         L     R5,12(R10)              A(CP18,CL1)             
         L     R4,20(R10)              A(CP20,CQ1)             
         L     R3,ISLCBF               A(REC N)                
         MVC   88(2,R4),0(R3)          GET REC LENGTH          
         LH    R10,88(R4)                                      
         L     R6,IOBPTRB              A(SLOT N)               
         L     R6,0(R6)                A(BUFF N)               
         AH    R10,8(R6)               LRECL + BLKL            
         STH   R10,8(R6)                                       
         AH    R3,DCBRKP               CBF+RKP=A(KEY)          
         LH    R10,80(R4)              C(R10)=PTR TO CCW SLOT  
         IC    R6,32(R5,R10)                                   
         ST    R3,32(R5,R10)           C(CL7=A(KEY))           
         STC   R6,32(R5,R10)                                   
         L     R3,ISLCBF                                       
         MVC   ISLCBF(2),0(R3)         +LRECL                  
         AH    R3,ISLCBF                                       
         ST    R3,ISLCBF               PTR TO NXT REC          
         L     R10,DCBWKPT6            RESET REGS              
         L     R11,8(R10)                                      
************************************************************** 
         CLC   DCBNREC(4),ISL0          WAS DATA CREATED
         BE    ISLG509                  NO BRANCH
*
* TEST IF CURR BUFFR FULL
*
************************************************************** 
ISLG5085 EQU   *                                               
*                                                              
************************************************************** 
*
*                                       CURR BUFFR IS FULL
*
* TEST FOR LOCATE PUT, IF LOCATE (NOT SPECIAL) FULL BUF NOT YET WRITTEN
*
************************************************************** 
*                                                              
*                                                              
************************************************************** 
*
*                                       LOCATE PUT (NOT SPECIAL)
         L     R3,IOBPTRB               C(R3)=A(CURR SLOT)
         NI    0(R3),X'DF'              SET STATUS BITS 1 AND 2 = 10
         OI    0(R3),X'40'
         SR    R3,R3
         IC    R3,IOBB                  BUMP B, B=B+1
         LA    R3,1(R3)
         STC   R3,IOBB
*
************************************************************** 
ISLG509  EQU   *                                               
************************************************************** 
*
* TEST IF CURR BUFFR HAS BEEN WRITTEN
*
         L     R3,IOBPTRB               C(R3)=A(CURR SLOT)
         LA    R3,0(R3)
         TM    0(R3),X'60'              TEST STATUS BITS 1 AND 2
         BC    8,ISLG801                B IF 00, CURR BUFFR WRITTEN
         B     ISLG703                  B IF CURR BUFFR FULL BUT A36748
*                                       NOT                      A36748
*                                       WRITTEN
         EJECT
***********************************************************************
* CHART G7 - CLOSE (WR BUFFERS)                                       *
***********************************************************************
*
* TEST B VS FBW
*
ISLG701  EQU   *                        *                        A36748
         TM    DCBEXCD1,X'FE'
         BC    7,ISLG801
************************************************************** 
*                                                              
         L     R3,IOBPTRB              A(SLOT X)               
         OI    0(R3),X'08'             TURN ON EOT BIT         
*                                                              
************************************************************** 
*
ISLG702  L     R13,ISLFYAD              C(R13)=A(ISLFY01)
         BAL   R14,SYNCHRTN             GO WRITE BUFFERS         Y02072
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
*
         LA    R2,ISLIOBA               C(R2)=A(IOBA)
         BAL   R14,ISLG502              B TO COMMON WAIT
*
* TEST B VS 0
*
ISLG703  EQU   *                        *                        A36748
         CLC   IOBB(1),ISL0             TEST B VS 0
         BH    ISLG701
*
         EJECT
***********************************************************************
* CHART G8 - CLOSE (FORCE IX)                                         *
***********************************************************************
*
* WAS LAST TRK IX WRITTEN
*
ISLG801  L     RJ,0(R10)                C(RJ)=A(AREA Y)
         CLC   DCBNREC(4),ISL0          WAS DATA CREATED
         BE    ISLG802                  NO, BRANCH
         CLC   26(7,RJ),DCBLPDA         TEST LAST NDAT VS LPDA
         BE    ISLG802                  B IF EQUAL, LAST TRK IX WRITTEN
*
* LAST TRK IX NOT WRITTEN, FORCE LAST TRK IX
*
         MVC   IOBPTRA+1(3),IOBPTRB+1   SET PTR A = PTR B = CURR BUFFR
         MVI   ISLFBW+3,X'01'           SET FBW = 1
         MVI   IOBB,X'01'               SET B = 1
         L     R3,IOBPTRB               C(R3)=A(CURR SLOT)
         LA    R3,0(R3)
         OI    0(R3),X'08'              TURN T-BIT ON (STATUS BIT-4)
         L     R6,20(R10)               C(R6)=A(CP20)
         TM    DCBOPTCD,X'80'           TEST OPTCD BIT 0 (WR CHK)
         BC    1,ISLG8012               B IF WR CHK
*
         MVI   104(R6),X'03'            NO WR CHK, SET CQ14 = NOP
         B     ISLG8014
*
ISLG8012 LA    R6,248(R6)               C(R6)=A(CQT1)
         MVI   56(R6),X'03'             WR CHK, SET CQT8 = NOP
*
ISLG8014 L     R13,ISLFYAD              C(R13)=A(ISLFY01)
         BAL   R14,SYNCHRTN             GO WRITE LAST INDEX      Y02072
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
*
************************************************************** 
*                                                              
************************************************************** 
*
*                                       LAST TRK IX WAS WRITTEN, SO
*                                       LAST TRK WAS FULL -
************************************************************** 
ISLG802  EQU   *                                               
         L     R7,IOBPTRB              A(CURR SLOT)            
         OI    0(R7),X'04'             TURN ON EOC BIT         
************************************************************** 
ISLG803  CLI   DCBNLEV,X'00'            TEST NLEV VS 0
         BE    ISLG810                  B IF 0, TRK IX ONLY
*
* NLEV NOT 0, WAS LAST CYL IX WRITTEN
*
*   TELL APPENDAGE THAT CLOSE IS IN CONTROL.
         OI    IOBFLAGS,CLOSESW         SET INDICATOR            A46890
*
         TM    ISLIXLT,X'08'            TEST IXLT LEV1 BIT-4
         BC    8,ISLG804                B IF 0 = LAST CYL IX WRITTEN
*
* LAST CYL IX NOT WRITTEN, FORCE LAST CYL IX
*
************************************************************** 
*                                                              
*                                                              
         LA    R7,0(R7)                                           15361
************************************************************** 
         L     R13,ISLFZAD              C(R13)=A(ISLFZ01)
         BAL   R14,SYNCHRTN             B TO WR LAST CYL IX      Y02072
         L     R10,DCBWKPT6             C(R10)=A(VPTRS)
*
ISLG804  CLI   DCBNLEV,X'01'            TEST NLEV VS 1
         BE    ISLG810                  B IF NO MASTER LEVEL IX
         CLC   DCBNREC(4),ISL0          WAS DATA CREATED
         BE    ISLG810                  NO,BRANCH
*
* NLEV GR THAN 1, FORCE ANY MASTER IX ENTRIES THAT NEED TO BE WRITTEN
*
         LA    R2,ISLIOBB               C(R2)=A(IOBB)
         BAL   R14,ISLG502              B TO COMMON WAIT
*
         LR    R4,R1                    C(R4)=C(R1)=A(DCB)
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         LA    R14,REGSAVE              SIZE OF REG SAVE AREA    Y02072
*
         GETMAIN  R,LV=(R14),SP=SUB230  GET SAVE AREA FOR APP    Y02072
*
         LR    R13,R1                   SA ADDR FOR APPEND       Y02072
         LR    R7,R1                    SAVE ADDR FOR FREEMAIN   Y02072
         L     R1,DXCCW1                ADDRESS OF DCB COPY      Y02072
         L     R3,DCBDEBAD              PROTECTED DEB ADDRESS    Y02072
         L     RJ,DCBRELSE              PROTECTED CE APPEND ADDR Y07072
         LR    R1,R4                    RESTORE USER DCB ADDRESS Y02072
*
         BALR  R14,RJ                   LINK TO APPENDAGE        Y02072
*
*                                       RETURN = 0(R14) = DONT WR
         L     R15,DXCCW6               RESTORE BASE REG         Y02072
         B     ISLG809                  FREE REG SAVE AREA       Y02072
*
*                                       RETURN = 8(R14) = WR MASTER
         L     R15,DXCCW6               RESTORE BASE REG         Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=10  CHANGE TO USER KEY  Y02072
*
         L     R12,DCBWKPT1             C(R10)=A(COMMON)         Y02072
*
* EXECUTE CP21
*
         LA    R13,ISLVRSAV             C(R13)=A(VRSAV)
         EXCP  IHAIOB                   EXECUTE CHANNEL PROGRAM
*
ISLG809  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         LR    R1,R7                    ADDRESS OF CORE          Y02072
*
         FREEMAIN  R,LV=REGSAVE,A=(1),SP=SUB230  FREE CORE       Y02072
*
         B     ISLG812                  RESTORE REGS             Y02072
*
ISLG810  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
ISLG812  EQU   *
         LM    R1,RWTGC,DXCCW1          RESTORE REGISTERS        Y02072
         DROP  RWTGC                    END USING ON CLOSE WA    Y02072
         USING BASETAG,RBASE
         MVC   0(L'LOAD2J,RWTGC),LOAD2J ID NEXT LOAD-IGG0202J    Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLI   0(RWTGC),X'00'           TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
*
         USING FORCORE,RCORE                                     Y01021
         LA    RJ,DXCCW12               WA ADDRESS               Y01021
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO IGG0202J   Y02072
*
         EJECT
**********************************************************************
*        SYNCH TO PROCESSING ROUTINES TO FLUSH BUFFERS,
*        INDICIES, AND HANDLE SYNAD EXIT.
**********************************************************************
*
         USING FORCORE,RWTGC            CLOSE WORK AREA ADDR     Y02072
*
SYNCHRTN MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
*
         STM   R0,R5,DXCCW8             SAVE REGISTERS 0-5       Y02072
         L     RJ,CVTPTR                ADDRESS OF CVT           Y02072
         USING CVT,RJ                   CVT ADDRESSABILITY       Y02072
         L     RJ,CVTTCBP               ADDR OF TCB POINTERS     Y02072
         L     RJ,0(RJ)                 TCB ADDRESS              Y02072
         USING TCB,RJ                   TCB ADDRESSABILITY       Y02072
         L     RJ,TCBRBP                ADDR OF SVRB             Y02072
         USING RBBASIC,RJ               RB ADDRESSABILITY        Y02072
*
         MODESET  KEYADDR=KEY0,WORKREG=5  SET PROTECT KEY ZERO   Y02072
*
         STM   R6,R14,RBEXSAVE          SAVE REGISTERS 6-14      Y02072
         DROP  RJ                       END USING ON RB          Y02072
         L     R15,ISLF8AD              SET FOREIGN BASE         Y02072
         LR    RJ,R13                   ENTRY POINT ADDR         Y02072
*
         SYNCH (15)                     SYNCH TO PROCESSING RTN  Y02072
*
         L     R5,CVTPTR                ADDR OF CVT              Y02072
         USING CVT,R5                   CVT ADDRESSABILITY       Y02072
         L     R5,CVTTCBP               ADDR OF TCB POINTERS     Y02072
         L     R5,0(R5)                 TCB ADDRESS              Y02072
         USING TCB,R5                   TCB ADDRESSABILITY       Y02072
         L     R5,TCBRBP                SVRB ADDRESS             Y02072
         USING RBBASIC,R5               RB ADDRESSABILITY        Y02072
         LM    R6,R14,RBEXSAVE          RESTORE REGISTERS 6-14   Y02072
         DROP  R5                       END USING ON RB          Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=5   CHANGE TO USER KEY  Y02072
*
         LM    R0,R5,DXCCW8             RESTORE REGISTERS 0-5    Y02072
         BR    R14                      RETURN                   Y02072
         SPACE 4
*
* CONSTANTS
*
ISL0     DC    F'0000'
ISL2     DC    F'0002'
ISL4     DC    F'0004'
*
KEY0     EQU   ISL0                     STORAGE PROTECT KEY ZERO Y02072
************************************************************** 
ISLG504A CLC   0(1,R4),0(R5)            KEY COMP TO BE EXECUTED (L)
ISLG505A MVC   0(1,R4),0(R5)            KEY MOVE TO BE EXECUTED (L)
*
************************************************************** 
THISLOAD DC    C'28'                                           
*
LOAD2J   DC    C'2J'                    ID OF MODULE IGG0202J    Y02072
*
PATCH    DC    XL((*-IGG02028)/20)'00'  ZEROED PATCH AREA        Y02072
         END
