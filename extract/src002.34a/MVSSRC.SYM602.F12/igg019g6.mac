         TITLE 'IGG019G6 - APPENDAGES-PART 1,BLKD,USR WA,NO WRT CHK'
IGG019G6 CSECT
*          RELEASE OS/VS2-02 DELETIONS                                *
*          RELEASE 19 DELETIONS                                       *
*2372077000,077500,097400                                        A27341
*2372068300,137100                                               A29928
*          RELEASE 20 DELETIONS                                       *
*0518018250,018300,018350,018400,039000-039200,039400-040200,    S20201
*0518042000,045600,045800,046000,046200,046400,046600,050200-    S20201
*0518051000,051400,053200,054200,054400-054800,056000,057400,    S20201
*0518060200,063200,069800,074620,074800,077500,077800,078600,    S20201
*0518079160,087600,090800,091400,091600,092000,094000,112000,    S20201
*0518112400,115800,128200,139000,139200,139400,139600-139680,    S20201
*0518139760,144200,144600,145600,146400,146600,156000,156200,    S20201
*0518169800,170000,170200-171000,171800,175800,176000,176200,    S20201
*0518176600,177600,187800-189600,189800-193600,193800-197600,    S20201
*0518197800-202600,202800-205600,205800-208600,208800-213400,    S20201
*0518219400-222200,222400-232200,232600-233400,233600-237760,    S20201
*0518238000-238800,239000-245400                                 S20201
*0518128000                                                      M4966
*          RELEASE 21 DELETIONS                                       *
*0980021600,023000,114800,130400                                 S21045
*0980                                                            A33533
*0980036600,047800,080008-080040,174400,179400-179600,181200-    A37184
*0980181600                                                      A37184
*0980                                                            M0060
*0980                                                            A46955
*XXXX                                                            A49403
*0980021400                                                      A50670
*           CHANGES SINCE VS2-3.7                                     *
*A023600-023690,C023720                                        @ZA26522
*                                                                     *
*STATUS CHANGE LEVEL 010
*
* FUNCTION/OPERATION- APPENDAGE ROUTINES FOR BISAM
*        WHEN WRITE KN IS USED WITH OR WITHOUT READ AND UPDATE
*        WHEN THE USER HAS     SUPPLIED A READ-IN AREA,
*        WHEN WRITE VALIDITY CHECKING IS NOT REQUESTED,
*        AND RECORD FORMAT IS   BLOCKED.
*        (PART 1)
*
*        CEND  - IF CHANNEL PROGRAM ENDS
*                **WITHOUT ERROR, EITHER
*                    PROCESSING COMPLETION WILL BE SCHEDULED,
*                    PROCESSING CONTINUATION WILL BE SCHEDULED,
*                    OR PROCESSING WILL CONTINUE.
*                **WITH A LENGTH CHECK, TESTS DETERMINE WHETHER
*                    OR NOT TO TREAT THE SITUATION AS A REAL
*                    ERROR.
*                **ANY OTHER ERROR, IN GENERAL, 'UNREACHABLE
*                    BLOCK' IS INDICATED IN THE DECB, AND
*                    PROCESSING COMPLETION WILL BE SCHEDULED.
*
*        ABEND - IF CHANNEL PROGRAM ENDS ABNORMALLY BECAUSE OF
*                **PERMANENT ERROR, 'UNCORRECTABLE I/O ERROR'
*                    IS INDICATED IN THE DECB, AND PROCESSING
*                    COMPLETION WILL BE SCHEDULED.
*                **NON-PERMANENT ERROR, ONE RE-TRY IS MADE
*                    BEFORE INDICATING A PERMANENT ERROR.
*                **FILE PROTECTION, TESTS DETERMINE WHETHER
*                    OR NOT TO TREAT THE SITUATION AS A REAL
*                    ERROR.
*                **ANY OTHER ERROR, IN GENERAL, 'UNREACHABLE
*                    BLOCK' IS INDICATED IN THE DECB, AND
*                    PROCESSING COMPLETION WILL BE SCHEDULED.
* ENTRY POINTS-
*        ENTRY POINT               FUNCTION
*        -----------               --------
*        APPCEND                   CEND
*        APPABEND                  ABEND
*
* INPUT - N/A
* OUTPUT - N/A
* EXTERNAL ROUTINES - N/A
* EXITS- 1. RETURN TO IOS VIA THE APPENDAGE RETURN VECTOR TABLE POINTED
*            TO BY REGISTER 14.  SEE THE DSECT LABELED    APPRV FOR THE
*            FORMAT OF THIS TABLE AND THE USE OF EACH EXIT.
*           USED TO CONTINUE PROCESSING.
*        2. SCHEDULE AN ASYNCHRONOUS ROUTINE - BRANCH VIA THE EXIT
*            EFFECTOR ADDRESS IN THE COMMUNICATION VECTOR TABLE.
*           USED TO SCHEDULE PROCESSING COMPLETION OR CONTINUATION.
*        3. IF THE DESIRED APPENDAGE ROUTINE IS IN PART 2, BRANCH TO
*            THAT ROUTINE VIA THE PART 2 VECTOR TABLE.  THE POINTER TO
*            THE MODULE IS IN DCBWKPT5.  SEE THE DSECT LABELED
*            IHAPART2 FOR RELATIVE ADDRESSES AND USES OF THE ROUTINES.
*
* TABLES/WORK AREAS - DECB, DCB, IOB AND EXTENTION, DCB WA (DCW), DEB,
*        CVT, PART 2 VECTOR TABLE.
*        SEE DSECTS AT END OF MODULE FOR FORMAT AND DESCRIPTIONS.
*
* ATTRIBUTES- REENTRANT. DISABLED.
* NOTES - NONE
         EJECT
* GENERAL REGISTERS ARE USED AS FOLLOWS
*
R0       EQU   0                   *    -----
R1       EQU   1                   *    12* ADDRESS
R2       EQU   2                   *    IOB
R3       EQU   3                   *    DEB
R4       EQU   4                   *    DCB
BASEXXXX EQU   5                        BASE REG FOR CLEANUP     Y02072
SAVEXXXX EQU   6                        SAVE AREA FOR CLEANUP    Y02072
R7       EQU   7                   *    UCB
R8       EQU   8                   *                             Y02072
R9       EQU   9                   #    WORK REGISTER
R10      EQU   10                       CHANNEL PROGRAM POINTER
R11      EQU   11                       DECB
R12      EQU   12                       WORK REGISTER
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       IOS RETURN VECTOR TABLE
R15      EQU   15                       BASE REGISTER
*
*        * MEANS THIS REGISTER IS SET UP UPON ENTRY FROM IOS,
*          AND ITS CONTENTS MUST BE RESTORED UPON RETURN TO IOS
*        # MEANS THIS REGISTER MAY BE CHANGED, BUT UPON RETURN TO IOS
*          MUST CONTAIN ZEROES IN THE THREE HIGH ORDER BYTES
*
PERRMASK EQU   X'20'          TO TEST FOR PERMANENT ERROR, TEST
PERRYES  EQU   8               IOBECBAD, B2. IF OFF (CONDITION CODE 8)
PERRNO   EQU   7               THERE IS A PERM ERR. ELSE B2 ON ( CD 7)
ONE      EQU   1                        MISC OFFSETS             S20201
TWO      EQU   2                        *                        S20201
THREE    EQU   3                        *                        S20201
FOUR     EQU   4                        *                        S20201
FIVE     EQU   5                        *                        S20201
SIX      EQU   6                        *                        S20201
SEVEN    EQU   7                        *                        S20201
EIGHT    EQU   8                        *                        S20201
NINE     EQU   9                        *                        S20201
SIXTEEN  EQU   16                       *                        S20201
OFLOW    EQU   X'10'                    OVERFLOW BIT OF F BYTE   S20201
DUMMY    EQU   X'20'                    DUMMY BIT OF F BYTE      S20201
KADDRCHG EQU   X'80'                    KEY ADDRESS CHANGE SW    S20201
BYP      EQU   12                       RETURN TO IOS/BYPASS     S20201
EXCP     EQU   8                        RETURN TO IOS/EXCP       S20201
NORMAL   EQU   0                        RETURN TO IOS/NORMAL     S20201
CCOFF    EQU   X'BF'                    MASK FOR CC OFF
ABENTRY  EQU   X'01'                    ABEND ENTRY INDICATOR    A50670
DATACHK  EQU   X'08'                    DATA CHECK IOB SENSE     A50670
REEXCP   EQU   8                        REEXCP RETURN TO IOS     Y02072
SKIPX    EQU   4                        SKIP RETURN TO IOS       Y02072
BYPASS   EQU   12                       BYPASS RETURN TO IOS     Y02072
FMVIOL   EQU   X'04'                    FILE MASK VIOLATION      Y02072
NOTSEEK  EQU   8                        CC - SEEK TEST SENSE B0  Y02072
SEEKCHK  EQU   X'01'                    SEEK CHECK INDICATOR     Y02072
*
         USING RQE,R1                   RQE ADDRESSABILITY       Y02072
         USING IHAIOB,R2                IOB POINTER              S20201
         USING IHADEB,R3                DEB POINTER
         USING IHADCB,R4                DCB POINTER
         USING IHAWKNCP,R10             CHANNEL PROGRAM POINTER
         USING IHADECB,R11              DECB POINTER
         USING IHADCW,R12               DCB WA POINTER ONLY AS WORK REG
         SPACE 4
*                             APPENDAGE VECTOR TABLE
APP      DC    A(APPCEND-APP)          CHAN END  -  USED BY WKN
         DC    A(APPABEND-APP)          ABNORMAL END  -     USED BY WKN
APPNO    EQU   *
         USING APPCEND,R15
APPCEND  NI    IOBINDCT,X'FE'          INDICATE CEND ENTRY
         B     SETUPREG                 BRANCH TO SET UP REGISTERS
APPABEND EQU   *                                                 A50670
         USING APPABEND,R15
*                                                                A50670
*        IF THIS IS A CORRECTABLE DATA CHECK FROM AN RPS         A50670
*        DEVICE THEN RETURN TO IOS FOR ERP HANDLING              A50670
*                                                                A50670
         TM    IOBECBAD,PERRMASK        PERMANENT ERROR          A50670
         BZ    NOCDACK                  YES CONTINUE AS USUAL    A50670
         TM    IOBSENS1,FMVIOL          WAS IT A SEEK CHK        Y02072
         BCR   NOTSEEK,R14              NO - RETURN TO ERPS      Y02072
NOCDACK  EQU   *                                                 A50670
         OI    IOBINDCT,ABENTRY         INDICATE ABEND ENTRY     A50670
SETUPREG L     R15,DEBEXPTR              GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R15                                        S21045
         L     R15,DEBWKPT4              R15  BASE               S21045
         DROP  R15
         USING APP,R15
*
*   SAVE IOS REGISTERS AND SET UP ADDRESSABILITY TO RETURN TO SPECIAL
*   CLEANUP ROUTINE.
*
         STM   R14,R12,0(R13)           SAVE REGISTERS           Y02072
         LR    SAVEXXXX,R13             SAVE SAVE AREA PTR       Y02072
         LA    R14,IOSRETS              RETURN TO RETURN TO IOS  Y02072
         LR    BASEXXXX,R14             BASE REG FOR RETURN      Y02072
         SPACE 2
         MODESET KEYADDR=RQEPRT,WORKREG=13 ACQUIRE USER KEY      Y02072
         SPACE 3
         L     R12,IOBCSW              CSW=STOP ADDR+8
         LA    R12,0(R12)              CLEAR HIGH ORDER BYTE
         L     R10,IOBCCWAD             R10  CP
         LA    R10,0(R10)               CLEAR HIGH ORDER BYTE    A49403
         MVC   IOBECBAD+1(3),IOBBCHAD+1 RESTORE ECB              A33533
         L     R11,IOBECBAD             R11  DECB
         L     R13,DEBEXPTR              GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R13                                        S21045
         L     R13,DEBWKPT5              R13  BASE, PART 2       S21045
         DROP  R13                                               S21045
         USING IHAPART2,R13
         IC    R9,IOBAPP                R9   RELATIVE ADDRESS IN
         CH    R9,TWOFOUR               IS APP CODE GT 24?     @ZA26522
         BNH   CODEOK                   IF NOT SKIP PROGCHK    @ZA26522
         DC    H'0'                     FOR PROG CHK           @ZA26522
TWOFOUR  DC    X'0018'                  MAX VALUE FOR APPCODE  @ZA26522
CODEOK   SLL   R9,2                            APPENDAGE TABLE @ZA26522
         TM    IOBINDCT,X'01'
         BO    APPABENT(R9)            IF ABEND, BRANCH VIA ABEND TABLE
         B     APPCENDT(R9)            IF CEND, BRANCH VIA THAT TABLE
         EJECT
***********************************************************************
*****              CHANNEL END APPENDAGE VECTOR TABLE             *****
***********************************************************************
APPCENDT EQU   *              CODE      FOR COMPLETION OF
         B     APPABA2   0             CP4/CP5, READ
         B     APPABA2   1             CP4/CP5, WRITE
         B     APPADB2   2             CP7
         B     APPAAB2   3             CP1 OR CP2, READ AND UPDATE
         B     APPAFB                   CP14-PART2                17332
         B     APPACA2   5             CP6
         B     APPRVNOR  6             NOT USED
         B     APPM67CE  7             CP1 OR CP2, WRITE KN
         B     APPN3B21
         B     APPN7B2   9             CP10A  - TRUE INSERT
         B     APPN8A2   10            CP10B  - TRUE INSERT
         B     APPN8A2   11            CP10B  - ADD TO END
         B     APPM4A2   12            CP14  - SETUPS 1, 2, OR 5
         B     APPM5A2   13            CP14  - SETUPS 3, 4, OR 6
         B     APPM1B21
         B     APPM2B2   15            CP16 - SITUATION 2
         B     APPM3B2   16            CP16 - SITUATION 3
         B     APPN9A2   17            CP17  - TRACK INDEX ONLY
         B     APPN9A2   18            CP17  - TRACK AND HIGHER LEVELS
         B     APPN9A2   19            CP17  - HIGHER LEVELS ONLY
         B     APPU1B2   20            CP13A
         B     APPU2B2   21            CP13B
         B     APPRVNOR  22            NOT USED
         B     APPN7B2   23             CP10A  - ADD TO END
         B     APPU6B2   24            CP13C
         EJECT
***********************************************************************
*****             ABNORMAL END APPENDAGE VECTOR TABLE             *****
***********************************************************************
APPABENT EQU   *              CODE      FOR COMPLETION OF
         B     APPABD2   0             CP4/CP5, READ
         B     APPABD2   1             CP4/CP5, WRITE
         B     APPADE2   2             CP7
         B     APPAAA2   3             CP1 OR CP2, READ AND UPDATE
         B     APPAEB                   CP14 PART 2               17332
         B     APPACE2   5             CP6
         B     APPRVNOR  6             NOT USED
         B     APPM67AE  7             CP1 OR CP2, WRITE KN
         B     APPN3E2   8             CP8
         B     APPN7J2   9             CP10A  - TRUE INSERT
         B     APPN8G2   10            CP10B  - TRUE INSERT
         B     APPN8G2   11            CP10B  - ADD TO END
         B     APPM4E2   12            CP14  - SETUPS 1, 2, OR 5
         B     APPM5E2   13            CP14  - SETUPS 3, 4, OR 6
         B     APPM1J2   14            CP15
         B     APPM2H2   15            CP16 - SITUATION 2
         B     APPM2H2   16            CP16 - SITUATION 3
         B     APPN9G4   17            CP17  - TRACK INDEX ONLY
         B     APPN9G4   18            CP17  - TRACK AND HIGHER LEVELS
         B     APPN9G4   19            CP17  - HIGHER LEVELS ONLY
         B     APPU4B2   20            CP13A
         B     APPU4G2   21            CP13B
         B     APPRVNOR  22            NOT USED
         B     APPN7B2   23             CP10A  - ADD TO END
         B     APPU6A4   24            CP13C
         DROP  R13
         EJECT
*   SPECIAL IOS RETURN CLEANUP ROUTINE INTERCEPTS ALL RETURNS TO
*   IOS AND RESTORES REGISTERS AND SETS PROTECTION KEY TO 0.
         SPACE 2                                                 Y02072
IOSRETS  EQU   *                        RETURN POINT             Y02072
         USING *,BASEXXXX               ADDRESSABILITY           Y02072
         B     NORMRET                  NORMAL RETURN            Y02072
         B     SKIPRET                  SKIP POST RETURN         Y02072
         B     REEXCPRT                 REEXCP RETURN            Y02072
         SPACE 2
BYPASRET EQU   *                        BYPASS POST RETURN       Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         LA    R14,BYPASS(R14)          SCHEDULE ASYNCH ROUTINE  Y02072
         L     R13,CVTPTR               CVT ADDRESSABILITY       Y02072
         USING CVT,R13                  *                        Y02072
         L     R13,CVT0EF00             ASYNCH SCHED ROUTINE     Y02072
         DROP  R13                      *                        Y02072
         BR    R13                      GO TO ROUTINE            Y02072
         SPACE 2
REEXCPRT EQU   *                        REEXCP RETURN            Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         B     REEXCP(R14)              RETURN - REEXCP          Y02072
         SPACE 2
SKIPRET  EQU   *                        RETURN - SKIP            Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         B     SKIPX(R14)               RETURN - SKIP            Y02072
         SPACE 2
NORMRET  EQU   *                        RETURN - NORMAL          Y02072
         BAL   R12,IOSRETX              RESTORE REGS AND KEY     Y02072
         BR    R14                      RETURN                   Y02072
         SPACE 2
IOSRETX  EQU   *                        RESTORE REGS AND KEY     Y02072
         MODESET KEYADDR=KEY0,WORKREG=13   SET KEY = 0           Y02072
         SPACE 2
         LM    R14,R11,0(SAVEXXXX)      RESTORE REGISTERS        Y02072
         BR    R12                      RETURN                   Y02072
         DROP  BASEXXXX                 RESET ADDRESSABILITY     Y02072
         SPACE 2                                                 Y02072
KEY0     DC    H'0'                     KEY 0                    Y02072
         EJECT                                                   Y02072
*              CHANNEL  END CP8,    APPENDAGE CODE  8,         CHART N3
APPN3B2  EQU   *                        *
*
         LA    R13,CB8A+EIGHT           DID CHANNEL PROGRAM END ON
         CLR   R12,R13                  CB8A
         BNE   APPAOS22                 NO, CONTINUE
         TM    CB8A+FIVE,CC             WAS CB8A CHAINED
         BZ    APPAOS22                 NO, CP UNCHANGED
         NI    CB8A+FIVE,CCOFF          RESET CHAIN IND.
         OI    CB8A+FOUR,CC             TURN CC BACK ON
         CLI   CB12,SEEKHH              CB12 SET FOR HEAD SEEK
         BNE   APPN3F3                  NO,  FILE PROTECT
         LA    R13,CB16                 RESET IOBSTART
         ST    R13,IOBSTART-ONE         START CP WITH SETSECT
         MVC   IOBDADAD,CB10+SEVEN      RESET IOBSEEK
         B     APPRVXCP                 SECHDULE EXCP IOS RETURN
APPAOS22 EQU   *                        *
*
         LA    R13,CB21+EIGHT           DID CHAN PROG STOP AT CB21
         CLR   R12,R13                  BE MEANS YES, BNE MEANS NO
         BNE   APPN3A3                  NO - CHECK FOR LENGTH ERROR
         TM    CB11+7,X'08'             TEST IF TRACK IS SHARED
         L     R12,DCBWKPT2             CREATE PROPER 'R' IN DCWHIRPS
         BO    APPN3C2A                 BO IF SHARED
         MVC   DCWHIRPS,DCBHIRPD        UNSHARED - USE DCBHIRPD
         B     APPN3C2B
APPN3C2A MVC   DCWHIRPS,DCBHIRSH        SHARED   - USE DCBHIRSH
APPN3C2B EQU   *                                                 S20201
APPN3C2D MVC   IOBDADAD+3(5),CB23+3    MOVE CB23 CCHHR TO IOB
         MVI   IOBAPP,X'14'             SET APPENDAGE CODE TO 20
         OI    IOBFLAG1,X'40'           USE COMMAND CHAINING
         NI    IOBFLAG1,X'7F'           DONT USE DATA CHAINING
         LA    R13,CF1                  START AT CF1
         ST    R13,IOBSTART-1
         L     R12,DCBWKPT2
         L     R13,CF2+4                SET OFF KEY ADDRESS CHANGE SW
         USING CP13B,R13                ESTABLISH ADDRESSABILITY S20201
         NI    CG2+FOUR,X'FF'-KADDRCHG  TURN OFF SWITCH          S20201
         IC    R9,DCWHIRPS              INITIALIZE CP13A AND CP13B
         LA    R12,0(R0,R9)             SET CC FLAGS ACCORDING TO
         IC    R9,IOBDADAD+7             NUMBER OF RCDS TO RD/WR
         SR    R12,R9
         SLL   R12,4
         LA    R13,CF3+4                REG 13 = FIRST CC FLAG
         LA    R12,0(R12,R13)           REG 12 = LAST  CC FLAG
APPN3D2A CLR   R12,R13
         BE    APPN3D2B
         MVI   0(R13),X'40'             SET CC FLAG ON
         LA    R13,16(R0,R13)
         B     APPN3D2A
APPN3D2B MVI   0(R13),X'00'             SET CC FLAG OFF
         L     R12,DCBMSWA              INSERT COUNT FIELD IN Y
         MVC   0(5,R12),IOBDADAD+3
         MVC   5(1,R12),DCBKEYLE
         MVC   6(2,R12),DCBBLKSI
         LA    R12,IOBDADAD+THREE       POINT TO IOBSEEK         S20201
         L     R13,CF2+FOUR             POINT TO CG1 OF CP13B    S20201
         STH   R12,CG1+TWO              STORE ADDR OF IOBSEEK    S20201
         SRL   R12,SIXTEEN              SHIFT                    S20201
         STC   R12,CG1+ONE              STORE ADDR OF IOBSEEK    S20201
         MVC   CL5+ONE(THREE),CG1+ONE   MOVE IOBSEEK ADDRESS     S20201
         B     APPRVXCP                 EXCP RETURN TO IOS
*
APPN3B1  EQU   *                        *                        Y02072
APPN3B3  OI    DECBEXC1,X'04'           RECORD IS UNREACHABLE
APPN3B4  MVI   IOBASYN,X'08'            SCHEDULE PROCESSING COMPLETION
APPN3B5  B     BYP(R14)                 SCHEDULE ASYNCH ROUTINE  Y02072
*
APPN3B6  LA    R13,CB8A+EIGHT           DID CP STOP AT CB8A      S20201
         CLR   R12,R13                  COMPARE REGS             S20201
         BNE   APPN3B3                  NO, UNREACHABLE BLOCK    S20201
         TM    CB11+SEVEN,OFLOW+DUMMY   OFLO, INACTIVE, OR DUMMY S20201
         BNZ   APPN3F3                  YES, GO TO FILE PROTECT  S20201
         MVC   CB23+THREE(FOUR),CB11+TWO  SET UP CCHH            S20201
         MVI   CB23+SEVEN,ONE           SET R EQUAL TO 1         S20201
         B     APPN3C2D                 GO READ RECORD           S20201
         EJECT
*              ABNORMAL END CP8,    APPENDAGE CODE  8,         CHART N3
APPN3E2  EQU   *                                                  19374
         TM    IOBSENSE+1,X'04'         WAS ABEND DUE TO          15924
*                                       FILE PROTECT              15924
         BO    APPN3F2                  YES--BRANCH               19374
         TM    IOBECBAD,PERRMASK        PERMANENT ERROR?          19374
         BC    PERRYES,APPN3B3          YES--BRANCH               19374
         B     APPRVNOR                 NO--RETRY CHANNEL PGM     19374
APPN3F2  LA    R13,CB12+8               DID CHAN PROG STOP AT CB12
         CLR   R12,R13                  BE MEANS YES, BNE MEANS NO
         BNE   APPN3B3                  NO - RECORD IS UNREACHABLE
APPN3F3  TM    CB11+SEVEN,OFLOW         WAS OFLO TRK IX ENTRY RD S20201
         BZ    APPN3G3                  BZ IF NO
         TM    CB11+SEVEN,DUMMY         DUMMY OR INACTIVE        S20201
         BO    APPN3G3                  BO IF NO
         MVC   CJ11(7),IOBDADAD        SAVE TRACK INDEX MBBCCHH
         MVI   IOBAPP,X'10'             SET APPENDAGE CODE TO 16
         NI    IOBFLAG1,X'7F'           DONT USE DATA CHAINING
         OI    IOBFLAG1,X'40'           USE COMMAND CHAINING
         LA    R13,CJ1                  START AT CJ1
         ST    R13,IOBSTART-1
         MVC   IOBDADAD,CB10+7          PUT CB10 MBBCCHHR IN IOB
         LA    R13,IOBDADAD+3           PUT SEEK ADDRESS IN CJ1 AND CJ5
         IC    R9,CJ1
         ST    R13,CJ1
         STC   R9,CJ1
         MVC   CJ5+ONE(THREE),CJ1+ONE   MOVE IN ADDR OF SEEK     S20201
         MVC   CJ3+ONE(THREE),DECBKEY+ONE  MOVE IN ADDR OF KEY   S20201
         MVC   CJ7+ONE(THREE),DECBKEY+ONE  MOVE IN ADDR OF KEY   S20201
         L     R12,DCBWKPT2             SET ON FIRST TIME ONLY SWITCH
         USING IHADCW,R12                                        S20201
         OI    DCWWKNI,X'40'
         LA    R12,0(R0,R0)             IS FIRST OFLO ON SAME MODULE
         IC    R12,CB10+7                      GET M OF OFLO ENTRY
         SLL   R12,4(R0)                       MULT BY 16
         L     R12,DEBUCBAD(R12)        LOAD UCB ADDR FROM DEB   S20201
         LA    R12,0(R0,R12)                   COMP WITH UCB AD IN 7
         CR    R12,R7
         BE    APPRVXCP                 SAME MODULE - EXCP RTRN TO IOS
         MVI   IOBASYN,X'01'            DIFFERENT MODULE - MUST EXCP
         B     APPN3B5                   IN ASYNCHRONOUS ROUTINE
APPN3A3  TM    IOBCSW+5,X'40'           DID CHAN PROG HAVE LENGTH ERROR
         BZ    APPN3B6                  GO TEST FOR SPECIAL CASE S20201
         TM    CB11+7,X'30'             WAS ENTRY INACTIVE
         BO    APPN3B3                  BO IF YES
APPN3G3  TM    CB11+7,X'20'             VERIFY ADD-TO-END SITUATION
         BZ    APPN3B3                  BZ IF DUMMY OR INACTIVE
         CLI   DCBNLEV,X'00'            ERROR IF 2 OR MORE INDEX LEVELS
         BNE   APPN3B3                  BNE IF MORE THAN 1 INDEX LEVEL
         TM    CB11+7,X'08'             TEST IF TRACK IS SHARED
         L     R12,DCBWKPT2             CREATE PROPER 'R' IN DCWHIRPS
         USING IHADCW,R12                                        S20201
         BO    APPN3G33                 BO IF SHARED
         MVC   DCWHIRPS,DCBHIRPD        UNSHARED - USE DCBHIRPD
         B     APPN3G34
APPN3G33 MVC   DCWHIRPS,DCBHIRSH        SHARED   - USE DCBHIRSH
APPN3G34 L     R13,CF2+4                SET OFF KEY ADDR CHANGE SW
         USING CP13B,R13                ESTABLISH ADDRESSABILITY S20201
         NI    CG2+FOUR,X'FF'-KADDRCHG  TURN OFF SWITCH          S20201
APPN3G5  MVI   IOBAPP,X'0E'             SET APPENDAGE CODE TO 14
         MVC   IOBDADAD(3),DCBLPDA      SEEK TO DCBLETI'S CYLINDER
         MVC   IOBDADAD+3(4),DCBLETI   CCHH TO IOB
         OC    IOBDADAD+6(1),DCBFIRSH+3  MASK OUT TRACK VALUE TO
         XC    IOBDADAD+6(1),DCBFIRSH+3  REDUCE TO A CYL BOUNDRY
         MVI   IOBDADAD+7,X'00'        R=0
         LA    R12,CI1                  START AT CI1
         ST    R12,IOBSTART-1
         NI    IOBFLAG1,X'7F'           DON'T USE DATA CHAINING
         OI    IOBFLAG1,X'40'           USE COMMAND CHAINING
         LA    R12,IOBDADAD+3           PUT SEEK ADDRESS IN CI1
         IC    R9,CI1
         ST    R12,CI1
         STC   R9,CI1
         MVC   CI5+TWO(FIVE),DCBLETI    PUT DCBLETI CCHHR IN CI5 S20201
         MVC   CI5(TWO),DCBLPDA+ONE     MOVE IN BB FOR HEAD SEEK S20201
         B     APPRVXCP
         EJECT
*              CHANNEL  END CP13A,  APPENDAGE CODE 20,         CHART U1
APPU1B2  LA    R9,8
         SR    R12,R9                   POINT TO LAST OP CODE
         CLI   0(R12),X'06'
         BNE   APPN3B3                  NO - BRANCH UNREACHABLE
         L     R12,DCBWKPT2             DCB WORK AREA
         USING IHADCW,R12                                        S20201
         TM    DCWWKNI,X'10'            WAS CP13A USED FOR ADD TO END
         BO    APPU3B2                  YES BRANCH TO A.T.E. CHART U3
*              REGISTERS 3 AND 10 WILL NOW BE DESTROYED
         L     R13,CF3                  Z+RL
         LA    R13,0(R0,R13)
         SH    R13,DCBLRECL             POINT TO RCV ADDR, Z
APPU1C3  L     R10,DECBKEY              POINT TO KEY OF INSERT
         LR    R12,R13
         AH    R12,DCBLRECL
         AH    R12,DCBRKP               POINT TO KEY OF SEND AREA
         IC    R9,DCBKEYLE
         BCTR  R9,R0                    COMPARE KEYLE BYTES
         EX    R9,APPU1C32              COMPARE INSERT TO SEND
         BL    APPU1D2                  BRANCH TO INSERT
         BE    APPU1C1                  BRANCH TO REPLACE
         SH    R12,DCBRKP               ADJUST SEND ADDRESS
         BAL   R3,APPMOV10              MOVE FORWARD ONE RECORD
*
*                       GIVE UNREACHABLE BLOCK CONDITION IF NO KEY
*                       IN FIRST BLOCK READ IS HIGHER THAN KEY
*                       TO BE ADDED
*
         L     R10,IOBCCWAD             GET CP ADDRESS AGAIN      24080
         L     R3,CF3                   ADDRESS OF BLOCK READ     24080
         LA    R3,0(0,R3)                                         24080
         AH    R3,DCBBLKSI              ADDRESS OF END OF BLOCK   24080
         CR    R12,R3                   NEXT LRECL TO BE MOVED VS 24080
*                                       END OF BLOCK
         BNL   APPN3B1                  BRANCH IF BEYOND END     A29928
         B     APPU1C3                  LOOP
APPU1C32 CLC   0(0,R10),0(R12)          EXECUTED INSTRUCTION
APPU1D2  L     R12,DECBAREA
         LA    R12,16(R0,R12)           MOVE AREA +16
         BAL   R3,APPMOV10              INSERT NEW RECORD
         L     R10,DCBWKPT3             RESTORE CP8 POINTER ONLY
         L     R3,CF2+4
         DROP  R13                      DROP REGISTER            S20201
         USING CP13B,R3                 ESTABLISH ADDRESSABILITY S20201
         LA    R3,CG1                   GET A(CG1) INTO BASE REG S20201
         IC    R9,IOBDADAD+7
         BCTR  R9,R0
         STC   R9,IOBDADAD+7            REDUCE R BY 1
         L     R12,DCBWKPT2
         USING IHADCW,R12               ESTABLISH ADDRESSABILITY S20201
         TM    IOBCSW+4,X'01'
         BO    APPU1G4                  BRANCH IF EOF
         NI    DCWWKNI,X'F7'            SET EOF INDICATOR OFF
         BAL   R11,APPURTN
         L     R11,IOBECBAD
APPU1G2  SR    R12,R9                   REDUCE BY 24
         CLR   R12,R13                  IF GONE PAST CG4
         BL    APPU1J2                  BRANCH OUT
         OI    12(R12),X'40'            OTHERWISE SET COMMAND CHNG ON
         B     APPU1G2                  AND LOOP
APPU1J2  CLC   CB10+7(7),DCBLPDA        BRANCH IF SEEK-SRCH MBBCCHH
         BNE   APPU1K2                  NOT EQUAL TO LPDA
         L     R12,DCBWKPT2
         USING IHADCW,R12               ESTABLISH ADDRESSABILITY S20201
         CLC   DCWHIRPS(1),DCBLPDA+7    BRANCH IF SEEK-SRCH R
         BNE   APPU1K2                  NOT EQUAL TO LPDA
APPU1J3  TM    DCBST,X'02'              IS LAST BLOCK FULL
         BO    APPU1K2                  BRANCH IF YES
         L     R12,DCBNREC              ADD 1 TO NUMBER OF PRIME DATA
         LA    R12,1(0,R12)              RECORDS - A LOGICAL RECORD
         ST    R12,DCBNREC               WILL REPLACE A PADDING RECORD.
         L     R12,CG2+FOUR             LOAD REGISTER            S20201
         L     R12,8(R0,R12)                                      7S083
         AH    R12,DCBBLKSI             GO TO ORIGINAL LAST RECORD7S083
         BAL   R13,APPPAD10             WAS IT REALLY PADDING     7S083
         B     APPU1J4                  YES--STATUS OK            7S083
         OI    DCBST,X'02'              NO--LAST BLOCK WAS FULL   7S083
         B     APPU1K2                  REJOIN MAINLINE CODE      7S083
APPU1J4  L     R12,CG2+FOUR             WR KEY ADDR AT CG2       S20201
         L     R12,8(R0,R12)            POINT TO LAST BLOCK
APPU1J5  STH   R12,IOBFCHAD+2
         SRL   R12,16
         STC   R12,IOBFCHAD+1           STORE LAST BLOCK ADDRESS
         L     R12,IOBFCHAD             RESTORE
         BAL   R13,APPPAD10             IS IT PADDING
         B     APPU1H5                  SUB-ROUTINE SAYS YES
         L     R12,IOBFCHAD             LAST LOGICAL RCD CHECKED
         AH    R12,DCBLRECL             TRY THE NEXT
         B     APPU1J5
APPU1H5  EQU   *                                                 A27341
         L     R12,IOBFCHAD             POINTER TO FIRST PAD
         SH    R12,DCBLRECL             POINTER TO LAST NON-PAD
APPU1H6  L     R13,CG2+FOUR             LAST WR KEY ADDR         S20201
         AH    R12,DCBRKP               POINTER TO ITS KEY
         MVC   CG2+FIVE(THREE),ONE(R13) SAVE A(ORIGINAL KEY)     S20201
         STH   R12,2(R0,R13)
         SRL   R12,16
         STC   R12,1(R0,R13)            PLACE CORRECT KEY ADDRESS
         OI    CG2+FOUR,KADDRCHG        KEY ADDR CHANGE IND ON   S20201
         USING IHADEB,R3                                         S20201
APPU1K2  ST    R3,IOBSTART-1
         L     R3,RQEDEB                RESTORE DEB ADDRESS      Y02072
         L     R12,DCBWKPT2            WORK AREA POINTER          17332
         USING IHADCW,R12                                        S20201
         TM    DCWWKNI,X'08'           DID CP13A END WITH AN EOF  17332
         BO    APPU2H2                 IF YES-BRANCH              M3216
         L     R13,CF2+4               TEST FOR KEY CHANGE        M3216
         USING CP13B,R13                ESTABLISH ADDRESSABILITY S20201
         TM    CG2+FOUR,KADDRCHG        DID KEY CHANGE           S20201
         BO    APPU2H2                 IF YES-BRANCH              M3216
         OI    CH8E+4,X'02'                                       M3216
         TM    DCWWKNI,X'10'      WAS CP13A USED FOR ADD TO END   17332
         BZ    APPU2F3            IF NO-BRANCH                    17332
APPU2H2  NI    CH8E+4,X'FD'            RESET BUMP TO OVFL FLAG    17332
         OI    IOBFLAG1,X'C0'           DATA AND COMMAND CHAINING
         MVI   IOBAPP,X'15'             SET APPENDAGE CODE TO 21
         B     APPRVXCP                 EXCP RETURN TO IOS
APPU2F3  EQU   *                                                  12999
         TM    DCBOPTCD,X'02'           OTHERWISE BRANCH IF DELETE
         BZ    APPU2J3                  OPTION NOT TAKEN
         L     R13,IOBFCHAD             IS LFTOVR RCD MRKD FOR DELETION
         L     R12,16(R0,R13)
         AH    R12,22(R0,R13)
         CLI   0(R12),X'FF'
         BNE   APPU2J3                  BRANCH IF NOT DELETED     12999
         IC    R9,IOBDADAD+6            SAVE H                    12999
         NC    IOBDADAD+6(1),DCBFIRSH+3    LEAVE ONLY TRK VALUE
         CLC   IOBDADAD+6(1),DCBLDT+1
         STC   R9,IOBDADAD+6           RESTORE SAVED H
         BE    APPD2G31                 BRANCH--LAST TRACK OF CYL 12999
         CLC   DCBLPDA(7),IOBDADAD
         BNE   APPU2H2                  NO--DON'T BUMP            12999
APPD2G31 EQU   *                                                  12999
         TM    CB11+7,X'10'             CURR IX ENTRY OFLOW       12999
         BZ    APPD2G33                 NO, BRANCH--NEXT INDEX    12999
*                                       ENTRY MUST BE OVERFLOW    12999
         TM    CB11+7,X'08'             CHAINING PRESENT          12999
         BZ    APPU2J3                  NO--BUMP DELETED REC      12999
         B     APPU2H2                  YES--DON'T BUMP           12999
APPD2G33 TM    CB26,X'08'               CHECK FOR CHAINING        12999
         BO    APPU2H2                  CHAIN--DON'T BUMP MORE    12999
*                                                                 12999
APPU2J3  EQU   *                                                 A37184
         L     R13,DECBAREA                                      A37184
         LA    R13,16(R0,R13)           RCV ADDR EQ AREA PLUS 16 A37184
*
         LR    R3,R14                   SAVE REG FOR IOS RETURN  Y02072
         LR    R12,R4                   SAVE DCB ADDRESS         Y02072
         L     R4,RQEDEB                ADDR OF CURRENT DEB      Y02072
         L     R4,0(R4)                 ADDR OF CURRENT TCB      Y02072
         LR    R8,R15                   SAVE BASE ADDRESS        Y02072
         LR    R9,R1                    SAVE RQE ADDRESS         Y02072
         LR    R10,R2                   SAVE IOB ADDRESS         Y02072
         SR    R2,R2                    NO RANGE TO BE TESTED    Y02072
         LR    R1,R13                   ADDR TO BE VALIDATED     Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=15  SET PROTECTION KEY 0  Y02072
         SPACE 2
         L     R15,CVTPTR               ADDR OF CVT              Y02072
         USING CVT,R15                  CVT ADDRESSABILITY       Y02072
         L     R15,CVT0VL00             ADDR OF VALIDATION RTN   Y02072
         DROP  R15                      END USING ON CVT         Y02072
         SPACE 1
         BALR  R14,R15                  VALIDATE ADDR            Y02072
         SPACE 1
         LR    R15,R8                   RESTORE BASE ADDRESS AND Y02072
         USING APP,R15                  MODULE ADDRESSABILITY    Y02072
         LR    R4,R12                   RESTORE DCB ADDRESS      Y02072
         LR    R1,R9                    RESTORE RQE ADDRESS      Y02072
         LR    R2,R10                   RESTORE IOB ADDRESS      Y02072
         LR    R14,R3                   RESTORE IOS RETURN ADDR  Y02072
         SPACE 2
         MODESET  KEYADDR=RQEPRT,WORKREG=10  SET USER'S KEY      Y02072
         SPACE 2
         BZ    OKAREA                   B IF VALID TO CONTINUE   A37184
         OI    DECBEXC1,X'10'           SET INVALID REQUEST      A37184
         L     R3,RQEDEB                RESTORE DEB ADDRESS      Y02072
         B     APPN3B4                  BR TO SCHED ASYNC        A37184
OKAREA   EQU   *                                                 A37184
         L     R13,IOBFCHAD             LAST WCKD                A37184
         L     R12,16(R0,R13)           LAST DATA                A37184
         AH    R12,DCBBLKSI             SEND ADDR EQ LAST DATA + A37184
*                                       AL                       A37184
         L     R13,DECBAREA                                      M0060
         LA    R13,16(R0,R13)           RCV ADDR EQ AREA + 16    M0060
         BAL   R3,APPMOV10              MOVE LEFT-OVER RCD
         SH    R12,DCBLRECL             RESTORE SEND ADDRESS
         AH    R12,DCBRKP               POINT TO LEFT-OVER KEY
         L     R13,DECBKEY              POINT TO I
         SR    R9,R9                                             A37184
         IC    R9,DCBKEYLE
         BCTR  R9,R0                    MOVE KEYLENGTH BYTES
         EX    R9,APPU2J3A              MOVE LEFT-OVER KEY
         L     R3,RQEDEB                ADDR OF CURRENT DEB      Y02072
         L     R10,IOBCCWAD             RESTORE R10 USED ABOVE
         NI    IOBINDCT,X'DF'           POINT TO AREA + I FOR OFLO RCD
         L     R13,IOBFCHAD             PUT ADDR OF KEY OF LAST
         MVC   CH7+1(3),9(R13)          BLOCK WRITTEN IN CH7
         MVI   IOBASYN,X'09'            SET ASYNCH CODE TO 9
         B     APPN3B5                  SCHEDULE ASYNCH ROUTINE
APPU2F4  L     R12,CF2+4               KEY ADDR CHANGE            17332
         BO    APPU2H2                 IF YES-BRANCH              17332
APPU1C1  TM    DCBOPTCD,X'02'          WAS DELETE OPTION TAKEN    17332
         BZ    APPU1A3                  NO  BRANCH TO DUP. RCD EXIT
         SH    R12,DCBRKP               POINT TO LOGICAL RCD BYTE 1
         CLI   0(R12),X'FF'     WAS IT DELETED                     7851
         BNE   APPU1A3          NO BRNCH TO DUP REC EXIT           7851
         L     R12,DECBAREA             YES POINT TO INSERT RCD
         LA    R12,16(R0,R12)
         BAL   R3,APPMOV10              MOVE NEW RCD INTO BLOCK
APPU1F1  L     R10,DCBWKPT3             RESTORE CP8 POINTER
         L     R12,CF3                  Z+RL
         LA    R12,0(R0,R12)
         AH    R12,DCBBLKSI             Z+RL+AL
         SH    R12,DCBLRECL             Z+AL
         CLR   R12,R13                  DOES LST RCD IN BLK EQ RCV ADDR
         BE    APPU1G1                  YES BRANCH
         LR    R12,R13                                             7851
         AH    R12,DCBLRECL  POINT TO SEND ADDR                    7851
         BAL   R3,APPMOV10              MOVE
         B     APPU1F1                  LOOP
APPU1G1  L     R10,DCBWKPT3             RESTORE CP8 POINTER
         L     R3,RQEDEB                ADDR OF CURRENT DEB      Y02072
         LA    R13,CL5
         ST    R13,IOBSTART-1
         NI    IOBFLAG1,X'7F'           DATA CHAINING OFF
         OI    IOBFLAG1,X'40'           COMMAND CHAINING ON
         MVI   IOBAPP,X'18'             SET APPENDAGE CODE TO 24
         B     APPRVXCP                 EXCP RETURN TO IOS
APPU1A3  L     R10,DCBWKPT3             RESTORE CP8 POINTER
         L     R3,RQEDEB                ADDR OF CURRENT DEB      Y02072
         OI    DECBEXC1,X'01'           DUPLICATE RECORD
         MVI   IOBASYN,X'08'            SET ASYNCHRONOUS CODE TO 8
         B     APPN3B5                  SCHEDULE ASYNCHRONOUS ROUTINE
APPU1G4  OI    DCWWKNI,X'08'            SET EOF INDICATOR ON
         TM    DCBST,X'02'              IS LAST BLOCK FULL
         BO    APPU1F5                  YES BRANCH
         L     R3,CF2+4
         DROP  R13                      DROP REGISTER            S20201
         USING CP13B,R3                 ESTABLISH ADDRESSABILITY S20201
         LA    R3,CG1                   CG1 IN REG 3             S20201
         LA    R13,CF4
         BAL   R11,APPURTN+4
         L     R11,IOBECBAD
APPU1E4  SR    R12,R9                   REDUCE BY 24
         CLR   R12,R13                  IF GONE PAST CG4
         BL    APPU1E3                  BRANCH OUT
         OI    12(R12),X'40'            OTHERWISE SET COMMAND CHNG ON
         B     APPU1E4                  AND LOOP
APPURTN  LA    R13,CF2
         L     R12,IOBCSW
         LA    R12,0(R12)
         SR    R12,R13                 16 TIMES NO. OF DATA RDS-1
         LR    R13,R12
         SRL   R13,1                   NOW 8 TIMES NO. OF RDS-1
         AR    R12,R13                 24 TIMES NO OF RDS-1
         LA    R13,CG3                                           S20201
         AR    R12,R3                  ADDR OF CC SW-8
         NI    12(R12),X'BF'           CC BIT OFF
         ST    R12,CG2+FOUR             POINT TO LAST WRITE KEY  S20201
         LA    R12,16(R12)                                        17332
APPU1GA  LA    R9,24                                              17332
         SR    R12,R9                                             17332
         ST    R12,IOBFCHAD            ADDR OF LAST CP13B CKD     17332
         LA    R12,8(R12)                                         17332
         BR    R11
APPU1E3  L     R12,CG2+FOUR             POINT TO LAST WRITE DATA S20201
         L     R12,8(R0,R12)
         LA    R12,0(R0,R12)
         AH    R12,DCBBLKSI             ADD AL
         SH    R12,DCBLRECL             SUB RL
         BAL   R13,APPPAD10             IS IT PADDING
         B     APPU1J4                  YES BRANCH
         OI    DCBST,X'02'              NO  SET LAST BLOCK FULL
         B     APPU1K2                  BRANCH TO SET UP CP13B
APPU1F5  L     R3,CF2+4
         LA    R3,CG1                   CG1 OF CP13B HI BYTE=0   S20201
         DROP  R3                       DROP REG                 S20201
         USING IHADEB,R3                ESTABLISH ADDRESSABILITY S20201
         BAL   R11,APPURTN
         L     R11,IOBECBAD
APPU1E5  SR    R12,R9                   REDUCE BY 24
         CLR   R12,R13                  IF GONE PAST CG4
         BL    APPU1D5                  BRANCH OUT
         OI    12(R12),X'40'            OTHERWISE SET COMMAND CHNG ON
         B     APPU1E5                  AND LOOP
APPU1D5  L     R12,12(R0,R3)            POINT TO LAST WR DATA
         LA    R9,8(R0,R0)
         SR    R12,R9                   POINT TO CCW LAST WR CT
         L     R12,0(R0,R12)            POINT TO COUNT
         MVC   5(1,R12),DCBKEYLE        RESET RECORD KEY &DATA
         MVC   6(2,R12),DCBBLKSI        LENGTHS AFTER EOF
         L     R12,12(R0,R3)            RESTORE TO LAST WRITE DATA
         L     R12,8(R0,R12)
         LA    R12,0(R0,R12)
         LH    R13,DCBBLKSI             MOVE (M-1)LRECL BYTES
         SH    R13,DCBLRECL
         BZ    APPU1H6                  NO PADDING (1 REC/BLOCK)  12244
         AH    R12,DCBLRECL             START PADDING AT +LRECL  A27341
APPU1D52 MVI   0(R12),X'FF'
         LA    R12,1(R0,R12)            ADD 1
         BCT   R13,APPU1D52
         NI    DCBST,X'FD'              SET LAST BLOCK NOT FULL
         B     APPU1J4                  BRANCH
         EJECT
*              TEST FOR PADDING SUBROUTINE
*
* ENTRY  LA    12,FIRSTPOS    FIRSTPOS = LOGICAL RECORD FIRST BYTE
*        BAL   13,APPPAD10
*
* DESTROYS     REGISTERS 9 (ONE BYTE), 12, 13 DESTRUCTIVELY
*              REGISTER 11, BUT RESTORES IT TO IOBECBAD
*
* RETURNS      TO BAL INSTRUCTION PLUS FOUR BYTES IF PADDING
*              TO BAL INSTRUCTION PLUS EIGHT BYTES IF NO
*
APPPAD10 CLI   0(R12),X'FF'             TEST FIRST BYTE FOR ALL ONES
         BNE   APPPAD40                 NO - NOT A PADDING RECORD
         LA    R9,255(R0,R0)            PLACE 255 IN REG 9
         LH    R11,DCBLRECL             PLACE RECORD LENGTH IN REG 11
         BCTR  R11,R0                   LRECL MINUS ONE COMPARES REQD
APPPAD20 CLR   R11,R9                   LENGTH REMAINDER MORE THAN 255
         BNH   APPPAD30                 NO - NO MORE LOOPING
         CLC   0(255,R12),1(R12)        COMPARE 255 BYTES
         BNE   APPPAD40                 NOT PADDING
         SR    R11,R9                   REDUCE LENGTH REMAINDER BY 255
         AR    R12,R9                   INCREASE INDEXING BY 255
         B     APPPAD20                 LOOP
APPPAD30 BCTR  R11,R0                   ADJUST FOR MACHINE LANGUAGE
         EX    R11,APPPAD60             COMPARE 255 OR FEWER BYTES
         BE    APPPAD50                 PADDING
APPPAD40 LA    R13,4(R0,R13)            MODIFY RETURN FOR NOT PADDING
APPPAD50 L     R11,IOBECBAD             RESTORE REGISTER 11
         BR    R13                      RETURN
APPPAD60 CLC   0(0,R12),1(R12)          EXECUTED COMPARE
         EJECT
*              GENERALIZED MOVE OF LOGICAL RECORD SUBROUTINE
*
* ENTRY  LA    12,SENDADDR    SENDADDR = SEND ADDRESS FIRST BYTE
*        LA    13,RCVADDR     RCVADDR = RECEIVE ADDRESS FIRST BYTE
*        BAL   3,APPMOV10
*
* DESTROYS     REGISTER 9 (ONE BYTE), REGISTERS 3, 10, 12, 13
*
* AT EXIT      REGISTER 3 CONTAINS RETURN ADDR
*              REGISTER 9 CONTAINS X'FF' IN LOW-ORDER BYTE
*              REGISTER 10 CONTAINS A VARIABLE QUANTITY, LESS THAN 256
*              REGISTER 12 CONTAINS SENDADDR + DCBLRECL
*              REGISTER 13 CONTAINS RCVADDR + DCBLRECL
*
* RETURNS      TO BAL INSTRUCTION PLUS FOUR BYTES
*
APPMOV10 LA    R9,255(R0,R0)            PLACE 255 IN REG 9
         LH    R10,DCBLRECL             PLACE RECORD LENGTH IN REG 10
         BCTR  R10,R0                   MOVE LRECL BYTES
APPMOV20 CLR   R10,R9                   COMPARE LENGTH REMAINDER TO 255
         BNH   APPMOV30                 BRANCH LAST TIME
         MVC   0(255,R13),0(R12)        MOVE 255 BYTES
         SR    R10,R9                   REDUCE LENGTH REMAINDER BY 255
         AR    R12,R9                   INCREASE SEND INDEXING BY 255
         AR    R13,R9                   INCREASE RCV INDEXING BY 255
         B     APPMOV20                 LOOP
APPMOV30 EX    R10,APPMOV40             MOVE 255 OR FEWER BYTES
         LA    R12,1(R12,R10)           UPDATE INDEXING BY 255 OR LESS
         LA    R13,1(R13,R10)           UPDATE INDEXING BY 255 OR LESS
         BR    R3                       RETURN FROM SUB-ROUTINE
APPMOV40 MVC   0(0,R13),0(R12)          LENGTH, RCV ADDR, SEND ADDR
         EJECT
*              CHANNEL  END CP13B,  APPENDAGE CODE 21,         CHART U2
APPU2B2  LA    R9,24                    CALC LAST CCW ADDR
         SR    R12,R9                   GET ADDR OF LAST CCW
         CLI   20(R12),X'00'
         BNE   APPN3B3                  YES, RECORD IS UNREACHABLE
         STH   R12,IOBFCHAD+2           NO, CSW - 24 = LAST WR CKD
         SRL   R12,16
         STC   R12,IOBFCHAD+1
APPU2C2  L     R13,IOBFCHAD
         L     R12,CF2+4                HAS KEY ADDR IN CP13B CHANGED
         USING CP13B,R12                ESTABLISH ADDRESSABILITY S20201
         TM    CG2+FOUR,KADDRCHG        TEST SWITCH              S20201
         BZ    APPU2B3                  NO. BRANCH FOR ADD TO END TEST
         MVC   NINE(THREE,R13),CG2+FIVE YES, RESTORE A(KEY)      S20201
         USING IHADCW,R12               ESTABLISH ADDRESSABILITY S20201
APPU2B3  L     R12,DCBWKPT2             WAS CP USED FOR ADD TO END
         USING IHADCW,R12                                        S20201
         TM    DCWWKNI,X'10'
         BO    APPU3E2                  YES. BRANCH TO ADD TO END CHART
         TM    DCWWKNI,X'08'            NO.  DID CP13A END WITH EOF
         BZ    APPU2E3                  NO.  BRANCH
         L     R13,IOBFCHAD
         L     R13,0(R13)               YES. PUT LAST RCD CHHR IN IOB
         MVC   IOBDADAD+3(5),0(R13)
         OI    DCWWKNI,X'20'            SET SAME MODULE SW ON
         MVI   IOBAPP,X'09'             SET APPENDAGE CODE TO 9
         MVC   DCBLPDA+7(1),IOBDADAD+7  UPDATE R IN LPDA          13494
         L     R15,DEBEXPTR              GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R15                                        S21045
         L     R15,DEBWKPT5              ADDRESS OF PART 2 IN    S21045
*                                       R15                      S21045
         DROP  R15                                               S21045
         USING IHAPART2,R15
         B     APPN7B4                  BRANCH TO CP10A CHART
         USING APP,R15
APPU2E3  L     R12,CF2+4                IS KEY ADDR CHANGE IND ON
         USING CP13B,R12                ESTABLISH ADDRESSABILITY S20201
         TM    CG2+FOUR,KADDRCHG        IS KEY ADDR CHANGE SW ON S20201
         BZ    APPU2F5                                            17332
         L     R13,IOBFCHAD             YES. CALCULATE ADDRESS OF LAST
         L     R12,16(R0,R13)           WRITE KEY.
         AH    R12,22(R0,R13)
         SH    R12,DCBLRECL
         BAL   R13,APPPAD10             TEST RECORD FOR PADDING
         B     APPN3B4                  YES. GO TO SCHEDULE COMPLETION
         OI    DCBST,X'03'              NO. SET LST BLCK, LST TRCK FULL
         B     APPN3B4                  GO TO SCHEDULE COMPLETION
APPU2F5  TM    CH8E+4,X'02'                                       17332
         BZ    APPT2J2                  IF NO-BRANCH              17332
         MVI   IOBAPP,X'04'             SET UP 2ND PART CP14      17332
         MVC   IOBSTART,CH21+4          TO UPDATE INDICES         17332
         MVC   IOBDADAD,CH14           RESTORE IOBSEEK            17332
         MVI   CH14,X'03'               CHANGE CH14               17332
         MVI   CH14+4,X'20'             TO ANOP                   17332
         MVI   CH14+7,X'01'                                       17332
         NI    CH8E+4,X'40'            RESET  FLAG                17332
         B     APPRVXCP                                           17332
APPT2J2  OI    IOBFLAG1,X'C0'                                     17332
         LA    R12,CK1                  START AT CK1
         ST    R12,IOBSTART-1
         MVC   IOBDADAD+5(3),CB23       SET SEEK ADDRESS
         LA    R12,IOBDADAD+3           PUT IOB ADDRESS IN CK1 AND CK4
         ST    R12,CK1
         MVI   CK1,X'31'
         MVC   CK4(4),CK1              MOVE OP CODE AND ID TO CK4
         L     R13,IOBFCHAD             ADDRESS OF LAST KEY TO CK6
         L     R13,8(R0,R13)
         ST    R13,CK6
         MVI   CK6,X'0D'
         MVI   IOBAPP,X'11'             SET APPENDAGE CODE TO 16
         B     APPRVXCP                 EXCP RETURN TO IOS
APPU2J3A MVC   0(0,R13),0(R12)     EXECUTED INSTRUCTION            7851
         EJECT
*              CP13B WHEN USED FOR ADD-TO-END, CHART U3
APPU3E2  L     R12,CF2+4                POINT TO CG1             M4966
         USING CP13B,R12                ESTABLISH ADDRESSABILITY S20201
         TM    CG2+FOUR,KADDRCHG        BR IF KEY ADDR CHANGE    S20201
         USING IHADCW,R12               ESTABLISH ADDRESSABILITY S20201
         BO    APPU3E3                  INDICATOR IS ON
         OI    DCBST,X'02'              OTHERWISE, SET LST BLCK FULL
         L     R12,DCBWKPT2
         USING IHADCW,R12                                        S20201
         CLC   DCWHIRPS,DCBLPDA+7       IS LPDA THE SAME AS HIRPS
         BNE   APPU3G4                  NO.  BRANCH
         OI    DCBST,X'01'              YES  SET LAST TRK FULL IND ON
         B     APPU3F3
APPU3E3  CLC   DCWHIRPS,DCBLPDA+7
         BE    APPU3F3                  BRANCH IF LPDA EQUALS HIRPS
APPU3G4  MVI   IOBAPP,X'17'             SET APPENDAGE CODE TO 23
         L     R15,DEBEXPTR              GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R15                                        S21045
         L     R15,DEBWKPT5              ADDRESS OF PART 2 IN    S21045
*                                       R15                      S21045
         DROP  R15                                               S21045
         USING IHAPART2,R15
         B     APPN7A3                  BRANCH TO CP10A CHART
         USING APP,R15
APPU3F3  L     R12,DCBNREC              ADD 1 TO NUMBER OF PRIME DATA
         LA    R12,1(0,R12)              RECORDS - A LOGICAL RECORD
         ST    R12,DCBNREC               WILL REPLACE A PADDING RECORD.
         OI    IOBFLAG1,X'C0'           SET FLAGS TO ALLOW CC AND DC
         LA    R12,CK1                  START AT CK1
         ST    R12,IOBSTART-1
         MVC   IOBDADAD(3),DCBLPDA      SET IOB SEEK
         MVC   IOBDADAD+3(5),DCBLETI
         LA    R12,IOBDADAD+3           PUT IOB ADDRESS IN CK1 AND CK4
         ST    R12,CK1
         MVI   CK1,X'31'
         MVC   CK4(4),CK1              MOVE OP CODE AND ID TO CK4
         MVC   CK6+1(3),DECBKEY+1
         MVI   IOBAPP,X'12'             SET APPENDAGE CODE TO 18
         B     APPRVXCP                 EXCP RETURN TO IOS
         EJECT
*              CP13A WHEN USED FOR ADD-TO-END, CHART U3
APPU3B2  L     R13,CF3                  Z PLUS RL INTO R13
         LA    R13,0(R0,R13)
         SH    R13,DCBLRECL             POINT TO RCV ADDRESS, Z
APPU3B22 L     R10,DECBKEY              POINT TO KEY OF INSERT
         LR    R12,R13
         AH    R12,DCBLRECL
         AH    R12,DCBRKP               POINT TO SEND AREA'S KEY
         IC    R9,DCBKEYLE
         BCTR  R9,R0                    COMPARE KEYLENGTH BYTES
         EX    R9,APPU1C32              COMPARE INSERT TO SEND
         BNH   APPU3B3                  INSERT
         SH    R12,DCBRKP               ADJUST SEND ADDRESS
         BAL   R3,APPMOV10              MOVE FORWARD ONE RECORD
*                       GIVE UNREACHABLE BLOCK CONDITION IF NO KEY
*                       IN FIRST BLOCK READ IS HIGHER THAN KEY
*                       TO BE ADDED
         L     R10,IOBCCWAD             GET CP ADDRESS AGAIN      24080
         L     R3,CF3                   ADDRESS OF BLOCK READ     24080
         LA    R3,0(0,R3)                                         24080
         AH    R3,DCBBLKSI              ADDRESS OF END OF BLOCK   24080
         CR    R12,R3                   NEXT LRECL TO BE MOVED VS 24080
*                                       END OF BLOCK
         BNL   APPN3B1                  BRANCH IF BEYOND END     A29928
         B     APPU3B22                 AND LOOP
APPU3B3  L     R12,DECBAREA             EXCP RETURN TO IOS
         LA    R12,16(R0,R12)           MOVE AREA PLUS 16
         BAL   R3,APPMOV10              INSERT NEW RECORD
         IC    R9,IOBDADAD+7
         BCTR  R9,R0
         STC   R9,IOBDADAD+7            REDUCE R BY 1
         L     R10,DCBWKPT3             CHANNEL PROGRAM POINTER
         L     R3,CF2+4
         USING CP13B,R3                 ESTABLISH ADDRESSABILITY S20201
         LA    R3,CG1                   CG1 WITH HI BYTE = 0     S20201
         LA    R12,CG4                                           S20201
         NI    CG5+FOUR,X'FF'-CC        CC OFF AT CG5            S20201
         ST    R12,CG2+FOUR             SAVE A(LAST KEY) AT CG2  S20201
         LA    R12,CG5+EIGHT            A(1ST CG5+8)             S20201
         BAL   R11,APPU1GA                                        17332
         L     R12,CG2+FOUR             RESTORE A(LAST KEY)      S20201
         USING IHADEB,R3                ESTABLISH ADDRESSABILITY S20201
         L     R12,8(R0,R12)            POINT TO LAST WRITE DATA
         AH    R12,DCBBLKSI             ADD AL
         SH    R12,DCBLRECL             SUBTRACT RL
         BAL   R13,APPPAD10             IS RECORD PADDING
         B     APPU1J4                  YES. CONTINUE PADDING CHECK
         B     APPU1K2                  NO.  GO TO SET UP CP13B START
         EJECT
*              ABNORMAL END CP13A,  APPENDAGE CODE 20,         CHART U4
APPU4B2  TM    IOBECBAD,PERRMASK        WAS ABEND DUE TO PERM ERROR
         BC    PERRNO,APPRVNOR          NO.  NORMAL RETURN TO IOS
         TM    IOBSENSE,X'08'           CONTINUE IF CAUSE DATA CHECK
         BZ    APPN3B3                  OTHERWISE, RECORD IS UNRCHBLE
         LA    R13,CF2+8
         CLR   R12,R13
         BNH   APPN3B3                  NO.  RECORD UNRCHBLE, BRANCH
APPU4E2  OI    DECBEXC1,X'08'           YES. UNCORRECTABLE I/O ERROR
         B     APPN3B4
         EJECT
*              ABNORMAL END CP13B,  APPENDAGE CODE 21,         CHART U4
APPU4G2  TM    IOBECBAD,PERRMASK        WAS ABEND DUE TO PERM ERROR
         BC    PERRNO,APPRVNOR          NO.  NORMAL RETURN TO IOS
         L     R13,CF2+4                CG1 POINTER
         USING CP13B,R13                ESTABLISH ADDRESSABILITY S20201
         TM    CG2+FOUR,KADDRCHG        WAS KEY ADDR CHANGED     S20201
         BZ    APPU4J1+6                NO.  BRANCH
         LA    R12,CG4                  CG4 POINTER              S20201
APPU4H1  TM    12(R12),X'40'                 WAS CC ON
         BZ    APPU4J1
         LA    R12,24(R0,R12)           YES. TRY NEXT SEQUENCE
         B     APPU4H1                  LOOP
APPU4J1  MVC   ONE(THREE,R12),CG2+FIVE  RESTORE KEY ADDRESS      S20201
         TM    IOBSENSE,X'08'           WAS CAUSE DATA CHECK
         BZ    APPN3B3                  NO.  BRANCH UNREACHABLE
         L     R12,IOBCSW               DID CP STOP AT WR CCW
         LA    R13,CG4                  CG4 ADDR                 S20201
         LA    R12,0(R0,R12)
         CLR   R12,R13
         BL    APPN3B3                  BRANCH IF NOT TO UNRCHBLE
         B     APPU4E2
         EJECT
*              CHANNEL  END CP13C,  APPENDAGE CODE 24,         CHART U6
APPU6B2  LA    R13,CL7+8
         CLR   R12,R13
         BNE   APPN3B3                  NO.  BRANCH UNREACHABLE
         B     APPN3B4                  YES. SCHEDULE COMPLETION
         EJECT
*              ABNORMAL END CP13C,  APPENDAGE CODE 24,         CHART U6
APPU6A4  TM    IOBECBAD,PERRMASK        WAS ABEND DUE TO PERM ERROR
         BC    PERRNO,APPRVNOR          NO.  NORMAL RETURN TO IOS
         TM    IOBSENSE,X'08'           YES. CONT. IF CAUSE DATA CHECK
         BZ    APPN3B3                  OTHERWISE BRANCH UNREACHABLE
         LA    R13,CL7+8
         CLR   R12,R13
         BNE   APPN3B3                  NO.  BRANCH UNREACHABLE
         OI    DECBEXC1,X'08'           YES. UNCORRECTABLE I/O ERROR
         B     APPN3B4                  BRANCH
         EJECT
*              CHANNEL  END CP15,   APPENDAGE CODE 14,         CHART M1
APPM1B2  LA    R13,CI4+8                DID CHAN PROG STOP AT CI4
         CLR   R12,R13                  BE MEANS YES, BNE MEANS NO
         BNE   APPM1B3                  NO - RECORD IS UNREACHABLE
*              SIMULATE CHART U5 SUBROUTINE
         L     R12,DCBWKPT2
         USING IHADCW,R12                                        S20201
         OI    DCWWKNI,X'10'            SET ADD-TO-END INDICATOR ON
         CLI   DCBFIRSH+TWO,ONE         TEST FOR SHARED TRACK    A46955
         BNH   APPM1B20                 NO                       A46955
         CLC   DCBFIRSH(2),DCBLPDA+5    END OF SHARED TRACK        7851
         BE    APPM1B2A                                            7851
APPM1B20 EQU   *                        *                        A46955
         MVC   DCWHIRPS(1),DCBHIRPD                                7851
         B     APPM1B2B                                            7851
APPM1B2A MVC   DCWHIRPS(1),DCBHIRSH                                7851
APPM1B2B EQU   *                                                   7851
         TM    DCBST,X'02'              IS LAST BLOCK FULL
         BO    APPU5B3                  BO IF YES
         OI    IOBFLAG1,X'40'           USE COMMAND CHAINING
         NI    IOBFLAG1,X'7F'           DONT USE DATA CHAINING
         LA    R12,CF1                  START AT CF1
         ST    R12,IOBSTART-1
         MVC   IOBDADAD,DCBLPDA         SEEK TO LAST RECORD
         LA    R12,IOBDADAD+3           PUT IOB ADDRESS IN CL5 AND CG1
         STH   R12,CL5+2
         SRL   R12,16
         STC   R12,CL5+1
         L     R13,CF2+FOUR             POINT TO CG1             S20201
         USING CP13B,R13                ESTABLISH ADDRESSABILITY S20201
         MVC   CG1+ONE(THREE),CL5+ONE   MOVE IOBSEEK TO CP13B    S20201
         MVC   CB50(FOUR),CG5           MOVE DATA ADDR TO CB50   S20201
         MVI   CF3+4,X'00'
         L     R12,DCBMSWA
         MVC   0(5,R12),IOBDADAD+3
         MVC   5(1,R12),DCBKEYLE
         MVC   6(2,R12),DCBBLKSI        ASSEMBLE COUNT FIELD AT W
         MVI   IOBAPP,X'14'             SET APPENDAGE CODE TO 20
         B     APPRVXCP
APPU5B3  TM    DCBST,X'01'              IS LAST TRACK FULL
         BO    APPM1C2                  BO IF YES, TO SET UP CP16
         L     R12,DECBAREA             NO - MOVE RECORD FROM
         LA    R12,16(R0,R12)           AREA+16 TO Z
         L     R13,CF3
         LA    R13,0(R0,R13)
         SH    R13,DCBLRECL
*              SIMULATE GENERALIZED MOVE SUBROUTINE
         LA    R9,255(R0,R0)            PLACE 255 IN IR 9
         LH    R10,DCBLRECL             RCD LGTH IN IR 10
         BCTR  R10,R0                   LRECL MOVES REQD
APPU5B3B CLR   R10,R9                   LGTH REMAINDER MORE THAN 255
         BNH   APPU5B3C                 BRANCH LAST TIME
         MVC   0(255,R13),0(R12)        MOVE 255 CHS
         SR    R10,R9                   REDUCE LGTH REMAINDER BY 255
         AR    R12,R9                   INCREASE INDEXING BY 255
         AR    R13,R9
         B     APPU5B3B                 LOOP
APPU5B3D MVC   0(0,R13),0(R12)          EXECUTED MOVE
APPU5B3C EX    R10,APPU5B3D             MOVE 255 OR FEWER BYTES
         L     R10,IOBCCWAD             RESTORE REGISTER 10
         L     R12,CF3                  FORM PADDING RCDS AS FOLLOWS
         LA    R12,0(R0,R12)            Z+RL TO REG 12
         LR    R13,R12
         AH    R13,CF3+6                Z+RL+AL TO REG 13
         SH    R13,DCBLRECL             Z+AL TO REG 13
         CLR   R12,R13                  IS PADDING NECESSARY      12244
         BE    APPU5C4B                 NO--BRANCH (1 REC/BLOCK)  12244
APPU5C4A MVI   0(R12),X'FF'             PAD
         LA    R12,1(R0,R12)            INCREMENT
         CLR   R12,R13
         BL    APPU5C4A                 LOOP
         NI    DCBST,X'FD'              LAST BLOCK NOT FULL       12244
APPU5C4B EQU   *                                                  12244
         MVI   IOBAPP,X'17'             SET APPENDAGE CODE TO 23
         MVC   IOBDADAD+3(5),DCBLPDA+3   PUT LPDA CCHHR IN IOB
         MVC   CB51(4),IOBDADAD+3       MOVE DCBLPDA CCHHR TO CB51
         IC    R12,IOBDADAD+7            THEN INCREASE CB51 R BY 1
         LA    R12,1(R0,R12)
         STC   R12,CB51+4
         OI    IOBFLAG1,X'C0'           USE DATA AND COMMAND CHAINING
         LA    R12,CB46                 START AT CB46
         ST    R12,IOBSTART-1
         LA    R12,IOBDADAD+3           MOVE IOB ADDRESS TO CB46
         STH   R12,CB46+2
         SRL   R12,16
         STC   R12,CB46+1
         MVC   CB49+1(3),DECBKEY+1      MOVE KEY  ADDRESS TO CB49
         L     R12,CF2+4
         L     R12,32(R0,R12)
         ST    R12,CB50                 MOVE DATA ADDRESS TO CB50
         B     APPRVXCP                 EXCP RETURN TO IOS
APPM1C2  EQU   *
         TM    CB26,X'08'               WAS ENTRY READ IN CB25 OFLO END
         BZ    APPM1D3                  YES  M1D3
         MVC   IOBDADAD,CB25            MOVE CB25 MBBCCHHR TO IOB
         MVI   IOBAPP,X'0F'             SET APPENDAGE CODE TO 15
         NI    IOBFLAG1,X'7F'           DONT USE DATA CHAINING
         OI    IOBFLAG1,X'40'           USE COMMAND CHAINING
         LA    R12,CJ1                  START AT CJ1
         ST    R12,IOBSTART-1
         LA    R12,IOBDADAD+3           MOVE IOB ADDRESS TO CJ1 AND CJ5
         ST    R12,CJ1
         MVI   CJ1,SIDEQ                RESTORE COMMAND CODE     S20201
         MVC   CJ5+ONE(THREE),CJ1+ONE   MOVE IN ADDR OF SEEK     S20201
         MVC   CJ3+ONE(THREE),DECBKEY+ONE  MOVE IN ADDR OF KEY   S20201
         MVC   CJ7+ONE(THREE),DECBKEY+ONE  MOVE IN ADDR OF KEY   S20201
         LA    R12,0(R0,R0)             CMP TRK INDEX AND OFLO RCD MODL
         IC    R12,CB25                  ARE THEY THE SAME
         SLL   R12,4(R0)
         L     R12,DEBUCBAD(R12)        GET UCB ADDR FROM DEB    S20201
         LA    R12,0(R0,R12)
         CLR   R12,R7
         BE    APPRVXCP                 YES - EXCP RETURN TO IOS
         MVI   IOBASYN,X'01'
         B     APPM1D4                  EXCP IN ASYNCHRONOUS ROUTINE
APPM1D3  MVI   IOBASYN,X'0A'            SET ASYNCHRONOUS CODE TO 10
APPM1D4  NI    IOBINDCT,X'DF'           INDICATE OFLO RECORD IN AREA
         B     APPM1B5                  SCHEDULE ASYNCHRONOUS ROUTINE
APPM1B3  OI    DECBEXC1,X'04'           RECORD IS UNREACHABLE
APPM1B4  MVI   IOBASYN,X'08'            SCHEDULE PROCESSING COMPLETION
APPM1B5  B     BYP(R14)                 SCHEDULE ASYNCH ROUTINE  Y02072
APPN3B21 LA    R13,APPN3B2
         BC    15,APPN3B22
APPM1B21 LA    R13,APPM1B2
APPN3B22 BR    R13                      NULL ROUTINE             Y02072
         DROP  R13                                               A37184
APPRVXCP SR    R12,R12
         IC    R12,IOBDADAD
         SLL   R12,4
         L     R3,RQEDEB                ADDR OF CURRENT DEB      Y02072
         LA    R12,DEBUCBAD(R12)        POINT TO CURRENT EXTENT  S20201
         MVC   IOBDADAD+1(2),4(R12)           MOVE IN BB
         LA    R14,EXCP(R14)            SETUP FOR EXCP IOS RETURN 15924
         XC    IOBFLAG2(3),IOBFLAG2     CLEAR FLAG2,SENSE BYTES   15924
         XC    IOBCSW(9),IOBCSW         CLEAR FLAG3,CSW,AND SIOCC 15924
         XC    IOBERRCT(2),IOBERRCT     CLEAR ERROR COUNT         15924
         NI    IOBFLAG1,X'C2'           RESET FLAG1               15924
APPRVNOR BR    R14                      RETURN TO IOS             15924
         EJECT
*              ABNORMAL END CP15,   APPENDAGE CODE 14,         CHART M1
APPM1J2  TM    IOBECBAD,PERRMASK        WAS ABEND DUE TO PERM ERROR
         BC    PERRNO,APPRVNOR          NO   CONTINUE, NORMAL IOS
         B     APPM1B3                  YES  M1B3
*
MODID    DC    C'IGG019G6'              MODULE NAME            @ZA26522
DATE     DC    CL8'&SYSDATE'            FIX DATE               @ZA26522
FIX      DC    C' OZ26522'              LATEST FIX             @ZA26522
PATCH    DC    XL((*-IGG019G6)/20)'00'  ZEROED PATCH AREA        Y02072
*
         SPACE 5
RQE      IECDRQE ,                      RQE                      Y02072
         EJECT
*                             RETURN TO IOS VECTOR TABLE
CVT      DSECT
         CVT
IHAPART2 DSECT                                 PART2 VECTOR      A37184
*                                       TABLE                    A37184
*        ROUTINE FOR          CODE      CEND COMPLETION OF
APPM67CE DS    CL6            7         CP1 OR CP2, WRITE KN
APPN7B2  DS    CL6            9,23      CP10A
APPN8A2  DS    CL6            10,11     CP10B
APPM4A2  DS    CL6            12        CP14  - SETUPS 1, 2, OR 5
APPM5A2  DS    CL6            13        CP14  - SET UPS 3, 4, OR 6
APPM2B2  DS    CL6            15        CP16 - SITUATION 2
APPM3B2  DS    CL6            16        CP16 - SITUATION 3
APPN9A2  DS    CL6            17,18,19  CP17
APPAFB   DS    CL6                                                17332
*        ROUTINE FOR          CODE     ABEND COMPLETION OF
APPM67AE DS    CL6            7         CP1 OR CP2, WRITE KN
APPN7J2  DS    CL6            9,23      CP10A
APPN8G2  DS    CL6            10,11     CP10B
APPM4E2  DS    CL6            12        CP14  -SETUPS 1, 2, OR 5
APPM5E2  DS    CL6            13        CP14  -SETUPS 3, 4, OR 6
APPM2H2  DS    CL6            15,16     CP16
APPN9G4  DS    CL6            17,18,19  CP17
APPAEB   DS    CL6                                                17332
APPN7A3  DS    CL4            CONTINUATION OF ROUTINES BEGUN IN
APPN7B4  DS    CL4                 PART 1
*        ROUTINE FOR          CODE      CEND COMPLETION OF
APPABA2  DS    CL6            0,1       CP4/CP5
APPADB2  DS    CL6            2         CP7
APPAAB2  DS    CL6            3         CP1 OR CP2, READ AND UPDATE
APPACA2  DS    CL6            5         CP6
*        ROUTINE FOR          CODE     ABEND COMPLETION OF
APPABD2  DS    CL6            0,1       CP4/CP5
APPADE2  DS    CL6            2         CP7
APPAAA2  DS    CL6            3         CP1 OR CP2, READ AND UPDATE
APPACE2  DS    CL6            5         CP6
         EJECT
*        WRITE KEY NEW CHANNEL PROGRAM REFERENCES (NO WRITE CHECK)
IHAWKNCP IGGWKNCP
         IGGCP13C
         IGGCP13A
CP13B    DSECT
         IGGCP13B
         EJECT
*              DATA EVENT CONTROL BLOCK
IHADECB  DSECT
         DS    0F
DECBECB  DS    CL4                      EVENT CONTROL BLOCK (ECB)
DECBTYP1 DS    BL1                      TYPE B6 - 1 IF LENGTH IS S
*                                            B7 - 1 IF AREA IS S
DECBTYP2 DS    BL1                           B0 - 1 IF READ K
*                                            B1 - 1 IF READ KX
*                                            B2 - 1 IF READ KU
*                                            B4 - 1 IF WRITE K
*                                            B5 - 1 IF WRITE KN
DECBLGTH DS    CL2                      LENGTH OF BLOCK
DECBDCBA DS    A                        POINTER TO DCB
DECBAREA DS    A                        ADDRESS OF AREA
DECBLOGR DS    A                        POINTER TO LOGICAL RECORD
DECBKEY  DS    A                        POINTER TO KEY
DECBEXC1 DS    BL1                      EXCPTN CD B0-RECORD NOT FOUND
*                                                 B1-RECORD LGTH CHK
*                                                 B2-NO SPACE
*                                                 B3-INVALID REQUEST
*                                                 B4-UNCORRECTABLE IO
*                                                 B5-UNREACHABLE BLOCK
*                                                 B6-OVERFLOW RECORD
*                                                 B7-DUPLICATE
DECBEXC2 DS    BL1                                B7-READ KU
         EJECT
         DCBD  DSORG=(IS)
         EJECT
IHAIOB   IGGIOBD
         EJECT
IHADCW   IGGBISAM
         EJECT
IHADEB   IGGDEBD
         END
