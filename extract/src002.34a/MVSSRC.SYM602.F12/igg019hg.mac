 TITLE  'IGG019HG  - READ APPENDAGE AOS VERSION'
IGG019HG CSECT
*          RELEASE OS/VS2-02 DELETIONS
*                                                               YM01101
*                                                               YM03876
*           VS2 RELEASE 037 CHANGES
* D028800-029000,C028200,A028100,A028300,A028700-028798         ZA03150
* C028797-028798                                                OZ05236
*           CHANGES SINCE VS2-037                                     *
*C024700,C024850,A024150-024650                                @ZA26522
*          RELEASE 21 DELETIONS
*0681032400,038000,058464,058472                                 A48227
*0681013000,020200,021800                                        S21045
*
*
*STATUS CHANGE LEVEL 006
*FUNCTION/OPERATION- A CHANNEL END COMPLETION WILL CAUSE A NORMAL     *
*   RETURN TO IOS IF PRIME DATA RECORDS ARE BEING READ, AFTER SETTING *
*   ON THE IOB-I COMPLETE BIT.  IF OVERFLOW RECORDS ARE BEING READ THE*
*   APPENDAGE SETS UP FOR AND INITIATES THE READ OF THE NEXT OVERFLOW *
*   RECORD UNTIL EITHER THE OVERFLOW CHAIN OR THE FREE BUFFER SUPPLY  *
*   IS EXHAUSTED, AT WHICH POINT IT SETS ON THE IOB-I COMPLETE BIT AND*
*   CAUSES A NORMAL RETURN TO IOS.                                    *
*                                                                     *
*   AN ABNORMAL END COMPLETION WILL RESULT IN TAGGING THE BUFFER IN   *
*   ERROR EITHER UNREADABLE OR UNREACHABLE. IF UNREADABLE, AND ANY    *
*   BUFFERS REMAIN ON THE QUEUE, THE NEXT READ IS INITIATED.  FOR     *
*   UNREACHABLE, ALL SUBSEQUENT BUFFERS ON THE QUEUE ARE ALSO MARKED  *
*   UNREACHABLE AND THE NORMAL RETURN TO IOS IS TAKEN.                *
*                                                                     *
*   THIS MODULE CONTAINS THE APPENDAGE CONTROL ROUTINE WHICH          *
*   INTERROGATES THE APPENDAGE CODES AND SENDS CONTROL TO THE         *
*   APPROPRIATE APPENDAGE.                                            *
*                                                                     *
*   THE ASYNCHRONOUS ROUTINE USED BY THE INPUT APPENDAGES TO          *
*   CONTINUE READING ON A DEVICE OTHER THAN THE ONE INITIALLY         *
*   ACCESSED BY THE EXCP IS ALSO IN THIS MODULE.                      *
*                                                                     *
*ENTRY POINTS- THE APPENDAGE VECTOR TABLE ADDRESSES THE ENTRY POINTS  *
*   TO MODULE 'IGG019HG'.                                             *
*        SISRQA3 - CHANNEL END COMPLETION ON A READ                   *
*        SISRAB2 - ABNORMAL END COMPLETION ON A READ                  *
*        SISAPRET - IMMEDIATE RETURN TO IOS IF NOT CH. END OR AB. END *
*        SISCERTN - ENTRY TO APPENDAGE CONTROL ROUTINE ON CHANNEL END *
*        SISABRTN - ENTRY TO APPENDAGE CONTROL ROUTINE ON ABNORMAL END*
*        SISAPASY - ENTRY TO ASYNCHRONOUS ROUTINE                     *
*                                                                     *
*INPUT- REGISTER 1- 12* ADDRESS                                       *
*       REGISTER 2- IOB ADDRESS                                       *
*       REGISTER 3- DEB ADDRESS                                       *
*       REGISTER 4- DCB ADDRESS                                       *
*       REGISTER 7- UCB ADDRESS                                       *
*       REGISTER 12- WORK AREA ADDRESS                                *
*       REGISTER 14- RETURN TO IOS VECTOR TABLE ADDRESS               *
*       REGISTER 15- MODULE BASE                                      *
*                                                                     *
*OUTPUT- SAME AS FOR INPUT                                            *
*                                                                     *
*EXTERNAL ROUTINES- N/A                                               *
*                                                                     *
*EXITS- NORMAL- RETURN TO IOS THROUGH REGISTER 14                     *
*   ERROR-N/A                                                         *
*                                                                     *
*TABLES/WORK AREAS- DATA EXTENT BLOCK(DEB) DESCRIBED BY SISDEB DSECT  *
*   WORKAREA,DESCRIBED BY SISWORK1 DSECT                              *
*   DATA CONTROL BLOCK DESCRIBED BY IHADCB DSECT                      *
*                                                                     *
*ATTRIBUTES - READ ONLY, REENTRANT                                    *
*                                                                     *
*NOTES- REGISTER USAGE IS CONSISTENT IN ALL SCAN MODE                 *
*   APPENDAGE MODULES.                                                *
         EJECT
         USING RQE,R1                   RQE ADDRESSABILITY       Y02072
         USING SISDEB,R3
         USING IHADCB,R4
         USING SISCP22,R5                                        S20201
         USING *,R15
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
RSAVE    EQU   6                        BASE REG FOR SAVE AREA   Y02072
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
NORMAL   EQU   0                                                  15924
ASYNCH   EQU   4                        BRANCH OFFSET TO ASYNCH  Y02072
*                                       SCHEDULING ROUTINE
EXCP     EQU   8                                                  15924
BYPASS   EQU   12                                                 15924
K4       EQU   4                        CONSTANT                 S20201
L4       EQU   4                        LENGTH                   S20201
K1       EQU   1                        CONSTANT                 S20201
L3       EQU   3                        LENGTH                   S20201
ONZERO   EQU   8                        ZEROES CONDITION         A48227
RPS      EQU   X'E0'                    DEB RPS INDICATOR        A48227
VIRTUAL  EQU   X'80'                       VIRTUAL = REAL
FIXED    EQU   X'80'                    TEST FOR FIXED FORMAT    Y02072
ONE      EQU   1                        TEST FOR FIRST RECORD    Y02072
SW22     EQU   X'10'                    CP22 INDICATOR           Y02072
ZERO     EQU   0                        TEST FOR SHARED TRACK    Y02072
ONES     EQU   X'FF'                    MASK OF ALL ONES         Y02072
         SPACE 2                                                 S20201
*        APPENDAGE CONTROL MODULE, ASSEMBLED WITH RA AND RQ
         SPACE 2
SISAPRTN DC    A(SISRQA3-SISAPRTN)      CE READ ENTRY            0
         DC    A(SISRAB2-SISAPRTN)      AB READ ENTRY            4
         DC    A(SISAPASY-SISAPRTN)     ASYNCHRONOUS RTN ENTRY   8
         DC    A(SISAPRET-SISAPRTN)     RETURN ENTRY             12
         DC    A(SISCERTN-SISAPRTN)     COMMON CE ENTRY          16
         DC    A(SISABRTN-SISAPRTN)     COMMON AB ENTRY          20
         SPACE 2
* IMEDIATE RETURN
         SPACE 2
         USING *,R15
SISAPRET BR    R14
         SPACE 2
*  CHANNEL END
         SPACE 2
         USING *,R15
SISCERTN EQU   *                                                 Y02072
         BAL   R12,SISSKEY              SET KEY AND SAVE REGS    Y02072
         L     R12,DEBEXPTR             DEB EXTENSION ADDR       Y02072
         USING DEBEXT,R12                                        S21045
         LA    R11,W1CEVECT             FOR FINDING ENTRY POINT
         LA    R10,SISAPCOM             ADDRESS OF COMMON RTN    Y02072
         BR    R10                      BRANCH TO COMMON RTN     Y02072
         SPACE 2
*  ABNORMAL END
         SPACE 2
         USING *,R15
SISABRTN EQU   *                                                 Y02072
         BAL   R12,SISSKEY              SET KEY AND SAVE REGS    Y02072
         L     R12,DEBEXPTR             DEB EXTENSION ADDR       Y02072
         LA    R11,W1ABVECT             FOR FINDING ENTRY POINT
         LA    R10,SISAPCOM
         BR    R10                      GET TO PROPER APPENDAGE  Y02072
         SPACE 3
*  SET KEY AND SAVE REGISTERS ROUTINE
         SPACE 1
SISSKEY  EQU   *                                                 Y02072
         USING REGSAVE,R13              SAVE AREA ADDRESSABILITY Y02072
         STM   R0,R15,REGSAV0           SAVE REGISTERS           Y02072
         DROP  R13                      END SAVE AREA USING      Y02072
         LR    RSAVE,R13                SAVE ADDR OF SAVE AREA   Y02072
         SPACE 2
         MODESET KEYADDR=RQEPRT,WORKREG=11  SET USERS KEY        Y02072
         SPACE 2
         BR    R12                      RETURN TO CALLING RTN    Y02072
         SPACE 3
         USING *,R10
SISAPCOM LA    R13,W1CEVECT             FOR SETTING MODULE BASE
         LA    R14,SISEXIT              GET EXIT ROUTINE ADDR    Y02072
         L     R12,DCBWKPT1             WORK AREA ADDR           S21045
         USING SISWORK1,R12                                      S21045
*                                       R2 POINTS TO IOB
         AH    R11,APPCODE(0,R2)        ADD APPROPRIATE APPENDAGE CODE
*                                        FROM EITHER IOBI OR IOBO
*************************************************************
*    TEST VALIDITY OF APPENDAGE CODE FROM IOB               *
*************************************************************
         LH    R8,APPCODE(R2)           APPENDAGE CODE         @ZA26522
         LTR   R5,R8                    TEST CODE VALUE        @ZA26522
         BNM   NOTMINUS                 GO TEST SOME MORE      @ZA26522
INVAPPCD DC    H'0'                     PROG CHK FOR BAD CODE  @ZA26522
FOUR     DC    X'0004'                  DECREMENT VALUE        @ZA26522
TWENTY   DC    X'0014'                  MAX VALUE FOR CODE     @ZA26522
NOTMINUS BZ    CODEOK                   SKIP IF CODE IS ZERO   @ZA26522
         CH    R5,TWENTY                IS APPCODE GT 20?      @ZA26522
         BH    INVAPPCD                 IF YES PROG CHK        @ZA26522
DECRIT   SH    R5,FOUR                  SUBT 4                 @ZA26522
         BP    DECRIT                   STILL PLUS-SUBT MORE   @ZA26522
         BM    INVAPPCD                 NOT MLTPL OF 4-BAD     @ZA26522
CODEOK   L     R11,0(R11)               GET ENTRY POINT        @ZA26522
         CLC   APPCODE(2,R2),SISAPCN8   IS IT THE WRITE CHECK APPENDAGE
         BH    SISAP01                  YES
         AR    R13,R8                   NO, ADD APPCODE TO GET @ZA26522
         B     SISAP02                  ADDR OF MODULE BASE
SISAP01  AH    R13,SISAPCN8             TO GET MODULE BASE ADDRESS
SISAP02  L     R13,0(R13)               PICK UP BASE
         LR    R15,R13
         BR    R11
SISAPCN8 DC    H'08'
         DROP  R10                         *
         EJECT
*  ASYNCHRONOUS ROUTINE
         SPACE 2
         USING *,R15
SISAPASY L     R1,4(0,R1)               GET IOB ADDR FROM 12*
         L     R10,4(R1)                R10 = ECB ADDRESS
         LA    R10,0(R10)               CLEAR HI ORDER BYTE
         USING ECB,R10
         L     R11,ECB                  SAVE ECB IN REG 11      ZA03150
         LR    R7,R15                   SAVE ADDRESSABILITY     ZA03150
         EXCP  (1)
         LR    R15,R7                   RESTORE ADDRESSABILITY  ZA03150
         L     R6,ECB                   GET ECB IN REG 6        ZA03150
         LTR   R6,R6                    IS ECB ZEROED?          ZA03150
         BZ    SWAP                     YES - BR                ZA03150
POST     ST    R11,ECB                  RESTORE WAITING ECB     ZA03150
         POST  (R10)                    POST ECB COMPLETE       ZA03150
EXIT     BR    R14                      RETURN                  ZA03150
SWAP     CS    R6,R11,ECB               SWAP IF R6 = ECB        ZA03150
         BE    EXIT                     BR IF NOT EQUAL         OZ05236
         B     POST                     GO TO EXIT              OZ05236
SISAPCN4 DC    X'0004'
         SPACE 3
         DROP  R15                                               Y02072
         USING *,R14                                             Y02072
SISEXIT  EQU   *                                                 Y02072
         B     SISIOSRT                 BR TO IOS RETURN RTN     Y02072
         SPACE 1
*  SCHEDULE ASYNCHRONOUS ROUTINE
         SPACE 1
         MODESET KEYADDR=KEY0,WORKREG=11  CHANGE TO KEY 0        Y02072
         SPACE 1
         USING REGSAVE,RSAVE                                     Y02072
         L     R14,REGSAV14             RESTORE IOS RETURN ADDR  Y02072
         LA    R14,BYPASS(,R14)         INCREMENT IOS RET ADDR   Y02072
         LM    R5,R8,REGSAV5            RESTORE REGS 5-8         Y02072
         L     R13,CVTPTR               CVT PTR                  Y02072
         USING CVT,R13                  CVT ADDRESSABILITY       Y02072
         L     R13,CVT0EF00             EXIT EFFECTOR ADDRESS    Y02072
         DROP  R13                      END USING ON CVT         Y02072
         SPACE 1
         BR    R13                      BR TO EXIT EFFECTOR      Y02072
         SPACE 2
*  RETURN TO IOS ROUTINE
         SPACE 1
SISIOSRT EQU   *                                                 Y02072
         SPACE 2
         MODESET KEYADDR=KEY0,WORKREG=11  CHANGE TO KEY 0        Y02072
         SPACE 2
         L     R14,REGSAV14             RESTORE IOS RETURN ADDR  Y02072
         LM    R5,R8,REGSAV5            RESTORE REGS 5-8         Y02072
         SR    R9,R9                    CLEAR REG FOR IOS        Y02072
         B     0(R10,R14)               RETURN TO IOS            Y02072
         DROP  R14                                               Y02072
         DROP  RSAVE                                             Y02072
         EJECT
         USING *,R15
SISRQA3  B     SISRQA30       USED FOR SETTING BASE REG
*                     *****************************
*                     *                           *
*                     *  ABNORMAL END APP. READ Q *
*                     *                           *
*                     *****************************
         SPACE 2
*                                  ***** CONSTANTS *****
CON8     DC    H'8'                        CONSTANT OF 8         S20201
CON16    DC    AL2(CN3-CN1)                RD KEY DATA OFFSET    S20201
CON24    DC    AL2(CN4-CN1)                RD DATA OFFSET        S20201
         SPACE 2
SISRAB2  EQU   *                        *                        A48227
         TM    W1IECBAD,X'20'           PERMANENT ERROR         SA65064
         BO    SISRQH2A                 NO--BRANCH              SA65064
*   REMOVE RPS PREFIXES AND SUFFIXES IF THEY HAVE BEEN ATTACHED.
         BAL   R8,RPSPREFX              RPS NORMALIZATION        A48227
*                                       ROUTINE                  A48227
*
         LA    R8,W1CN8                GET CCW1 ADDR OF CP24     A48227
         SPACE 2
*        THE CHECK FOR AN ERROR IN CP24 IS MADE BY COMPARING COM. ADD.
*        IN THE CSW(IOBI) WITH THE RANGE OF CCW'S OF CP24
         SPACE 2
SISRAC2  L     R5,W1COMAD               R5 = ERROR CCW + 8
         LA    R5,0(R5)                CLEAR HI ORDER BYTE
         SH    R5,CON8                 SUBTRACT 8 TO GET ERROR CCW
         CR    R5,R8                   IS ERROR IN CN8 OF CP24
         BE    SISRAC3B                 YES, CHK FOR SPECIAL SETLK CASE
*                                       NO
         LA    R8,W1CN15               PUT CN15 ADDRESS IN R8
         CR    R5,R8                   IS ERROR WITHIN RANGE OF CP24
         BNH   SISRAC3                 YES
*
*        IF THE BRANCH TO SISRAC3 IS TAKEN THEN THERE
*        WAS AN ERROR IN CP24. IF PROGRAM DOESN'T BRANCH THEN THE ERROR
*        IS IN ONE OF THE CP22'S.
         SPACE 2
*        AT THIS POINT R5 POINTS TO CCW THAT CAUSED STOP
         CLI   0(R5),RKD               CP STOP ON A RD KD--CN3   S20201
         BNE   SISRAC2A                NO
*                                      YES
         SH    R5,CON16                SET R5 TO CN1 OF CP IN ERROR
         B     SISRAC2B
SISRAC2A CLI   0(R5),RDATA             STOP ON RD DATA (CN4)     S20201
         BNE   SISRAC3                 NO                        A48227
         SH    R5,CON24               YES, SET R5, TO CN1 FOR CP IN ERR
SISRAC2B TM    W1ISENSE,X'08'          WAS STOP A DATA CHECK
         BZ    SISRAC3A                 NO, UNREACHABLE
         SPACE 2
SISRAD2C OI    CN2+K4,UNREAD           MARK BUFFER UNREADABLE    S20201
         MVC   CN5+K4(L4),W1IF1        MOVE IOB FIELDS INTO      S20201
         MVC   CN6,W1ICSW              CHAN PROG FOR USER        S20201
*                                       ERROR EXIT
         SPACE 2
SISRAF2  TM    CN2+K4,OFLOW            OVERFLOW MODE             S20201
         BO    SISRQC3                  YES, CONTINUE TO READ OFLO RCDS
SISRAF3  CLC   CN5+K1(L3),CON000       END OF READ Q,  ADDR = 0  S20201
         BE    SISRQF2                  IF YES, TAKE NORMAL EXIT
         CLI   CN5,TIC                  IS IT ATIC TO CP22       S20201
         BE    SISRAG3                  YES                      M5092
         NI    CN4+4,X'FF'-CC           NO - UNLINK STOP READS   M5092
         XC    CN5+1(3),CN5+1           *                        M5092
         B     SISRQF2                  *                        M5092
*
*                                       NO, CONTINUE READING
SISRAG3  L     R5,CN5                   GET ADDRESS OF NEXT CP   S20201
         NI    CN1,X'FF'-MT             SET OFF MT IN NEXT CP    S20201
SISRAH3  MVC   W1IDAD,CN6               SET SEEK ADDR NEXT CN6   S20201
SISRAJ3  ST    R5,W1ICPS(0)             SET CPS TO CN1 OF NEXT CP
SISRAJ4  NI    W1IF1,X'FA'
         MVI   W1IF2,X'00'
         MVI   W1KEY,X'00'             INITIALIZE FIELDS FOR
         MVC   W1IERRCT,CON000         EXCP RETURN
SISRAJ5  EQU   *                                                 Y02072
         XC    W1IF2(3),W1IF2           CLEAR FLAG2,SENSE BYTES   15924
         XC    W1ICSW(9),W1ICSW         CLEAR FLAG3,CSW,SIOCC     15924
         XC    W1IERRCT(2),W1IERRCT     CLEAR ERROR COUNT         15924
         NI    W1IF1,X'C2'              RESET FLAG1               15924
         LA    R10,EXCP                 LOAD IOS RET ADDR OFST   Y02072
         BR    R14                      RETURN TO IOS VIA EXIT   Y02072
*                                       ROUTINE IN IGG019HG
         SPACE 2
* TEST FOR SPECIAL CASE OF WHERE SETL K IS LOOKING FOR TRACK INDEX
*  ENTRY WHICH IS ON OTHER THAN THE 1ST TRACK OF TRACK INDICES
         SPACE 2
SISRAC3B TM    W1ISENSE+1,X'08'         CAUSE OF STOP NO RCD FND
         BZ    SISRAC3E                 NO
         IC    R5,W1IDAD+6              SAVE H
         NC    W1IDAD+6(1),DCBFIRSH+3  MAKE H A TRK VALUE ONLY
         CLC   W1IDAD+6(1),DCBFIRSH+1   DOES SEEK H = FIRSH H
         STC   R5,W1IDAD+6             STORE BACK SAVED H
         BE    SISRAC3E                YES, NOT SPECIAL CASE
*                           NO, CONTINUE TESTING FOR SPECIAL CASE
         SR    R5,R5                    CLEAR WORK REG
         IC    R5,W1IDAD+6              GET H OF IOB SEEK
         LA    R5,1(R5)                 ADD 1 TO H
         CLI   DCBFIRSH+2,X'01'     ARE THERE ANY SHARED TRACKS
         BE    SISRAC3C                NO
*                                       YES, SEARCH NEXT INDEX TRACK
SISRAC3D STC   R5,W1IDAD+6      ADD ONE TO HH OF IDAD
         B     SISRAJ4          EXCP RETURN
SISRAC3C IC    R8,W1IDAD+6             SAVE H
         STC   R5,W1IDAD+6              STORE NEW H TO TEST
*                                       AGAINST FIRSH H
         NC    W1IDAD+6(1),DCBFIRSH+3   AND MASK TO GET TRK VALUE
         CLC   W1IDAD+6(1),DCBFIRSH+1   DOES NEW H OF IDAD=FIRSH H
         STC   R8,W1IDAD+6             RESTORE H IN CASE COMP IS EQ
         BNE   SISRAC3D                 NO, SEARCH NEXT INDEX TRACK
         SPACE 2
*        EITHER NOT SPECIAL CASE OR ALL INDEX TRACKS HAVE BEEN
*        UNSUCCESSFULLY SEARCHED
         SPACE 2
*        IS IT PERMANENT ERROR
         SPACE
SISRAC3E TM    W1ISENSE+2,X'3F'
         BO    SISRQH2A                NO
*                                      YES
         SPACE
SISRAC3  L     R5,W1RD1ST(0)
SISRAC3A OI    CN2+K4,UNREACH          MARK BUF UNREACH.         S20201
         SPACE 2
         TM    CN2+K4,OFLOW            IS THIS AN OVERFLOW REC   S20201
         BO    SISRAC3F                YES
         CLC   CN5+K1(L3),CON000       NO, IS IT END OF READ Q   S20201
         BE    SISRQF2                 YES, TAKE NORMAL RETURN TO IOS
         CLI   CN5,TIC                  IS IT ATIC TO CP22       S20201
         BNE   SISRQF2                  NO - FINISHED            S20201
         L     R5,CN5                  GET NEXT CP ON Q          S20201
         B     SISRAC3A                 LOOP, MARKING ALL SUBSEQUENT
*                                       BUFFERS UNREACHABLE
         SPACE 2
*        IF AN OVERFLOW RECORD IS UNREACHABLE IT IS IMPOSSIBLE TO
*        CONTINUE TO READ THE OVERFLOW CHAIN.  THE READ Q COUNT AND
*        RESIDUE FIELDS MUST BE RESET.
         SPACE
SISRAC3F LH    R8,W1READR              LOAD COUNT
         BCTR  R8,0                    REDUCE BY ONE
         STH   R8,W1READR
         B     SISRQB5
         EJECT
SISCTRQ  EQU   *
*                                     **************************
*                                     *                        *
*                                     * CHANNEL END APP READ Q *
*                                     *                        *
*                                     **************************
         SPACE 2
*                                  ***** CONSTANTS *****
CON000   DC    X'000000'                3 BYTE CONSTANT OF ZERO
OFFSET4  EQU   4                        DISPLACEMENT FOR VECT. TABLE
SUB10    DC    H'10'                    * CONSTANT               S20201
         SPACE 2
SISRQA30 EQU   *                        *                        S20201
*        BAL   R8,RPSPREFX              PSUEDO BRANCH AND LINK
         LA    R8,SISRQ30               RETURN ADDRESS           A48227
*   ROUTINE TO REMOVE RPS PREFIX AND SUFFIX FROM CHANNEL PROGRAM.
*
RPSPREFX EQU   *                        *                        A48227
         TM    DEBRPSID,RPS             SIO MODULE IN            M5092
         BCR   ONZERO,R8                NO - DON'T LINK TO SIO   A48227
*
*    PLACE TOTALS IN CP22'S AND UNLINK RPS PREFIXES AND SUFFIXES
*
         L     R5,W1ICPS                ADDRESS OF CP22          Y02072
         TM    CN1,SIDEQ                START AT SET SECTOR      Y02072
         BO    TTEXIT                   NO, NOT AN RPS REQUEST   Y02072
         L     R5,W1ICPTIC              ADDR OF FIRST CP22       Y02072
         ST    R5,W1ICPS                UNLINK PREFIX            Y02072
*
*    CHECK FOR EXISTANCE OF A CP 22
*
         CLI   W1ICPTIC,TIC+SW22        WHAT CP WAS SCHEDULED    Y02072
         BE    TT000                    BR IF CP22 ALONE         Y02072
         BL    TTEXIT                   BR IF CP23 OR CP25
         L     R5,W1CN15                CP24 CHAINED TO CP22     Y02072
*
*    CHECK FOR PRIME OR OVERFLOW - PRIME
*
TT000    TM    CN2FLGS,OFLOW            OVERFLOW                 Y02072
         BO    TT005                    YES, HANDLE SEPARATELY   Y02072
*
*    CHECK FOR FIRST READ AFTER SETL
*
         LH    R3,W1TOTAL               PRIME TOTAL              Y02072
         LTR   R3,R3                    THIS FIRST GET           Y02072
         BNZ   TT001                    BR NO - SUM              Y02072
*
*    ESTIMATE THE RUNNING TOTAL
*
         IC    R3,CN6R                  RECORD NUMBER            Y02072
         BCTR  R3,0                     R-1                      Y02072
         MH    R3,W1RECLEN              (R-1)(MIN RCD LENGTH)    Y02072
         CLI   DCBHIRSH,ZERO            IS THERE A SHARED TRK    Y02072
         BE    TT001                    BR NO - GUESS GOOD       Y02072
         CLC   CN6HR(K1),DCBFIRSH+1     SHARED TRACK             Y02072
         BNE   TT001                    BR NO - GUESS GOOD       Y02072
*
*    SETL TO SHARED TRACK - MAKE CALCULATION FOR RUNNING TOTAL.
*
         SR    R3,R3                    ZERO                     Y02072
         IC    R3,CN6R                  RECORD NUMBER - R        Y02072
         SR    R9,R9                    ZERO                     Y02072
         IC    R9,DCBFIRSH+2            FIRST R ON CYL - S       Y02072
         SR    R3,R9                    R-S                      Y02072
         MH    R3,W1RECLEN              (R-S)*(RECORD LENGTH)    Y02072
         AH    R3,W1FSTSH               (R-S)*(RECORD LN)+TI     Y02072
*
*    TOTAL RECORDS
*
TT001    CLI   CN6R,ONE                 IS IT RECORD ONE         Y02072
         BNE   TT002                    BR NO - DON'T RESET      Y02072
*                                               TOTAL TO ZERO    Y02072
         SR    R3,R3                    YES, ZERO REG            Y02072
         B     TT003                    CONTINUE                 Y02072
TT002    CLI   DCBHIRSH,ZERO            IS THERE A SHARED TRACK  Y02072
         BE    TT003                    BR NO - DON'T RESET      Y02072
         CLC   CN6HR(L'DCBFIRSH-1),DCBFIRSH+1 FIRST SHARED TRACK Y02072
         BNE   TT003                    BR NO - DON'T RESET      Y02072
         LH    R3,W1FSTSH               RESET                    Y02072
*
*    STORE TOTAL IN CURRENT CHANNEL PROGRAM
*
TT003    STH   R3,CN2CNT                SAVE FOR PUTX            Y02072
*
*    ADD LENGTH OF CURRENT RECORD
*
         AH    R3,CN3KEY                ADD KEY LENGTH           Y02072
         LH    R9,CN4DL                 DATA LENGTH, FIXED       Y02072
         TM    DCBRECFM,FIXED           IS IT FIXED FORMAT       Y02072
         BO    TT004                    BR YES - LENGTH RIGHT    Y02072
         L     R9,CN4                   NO - VARIABLE LENGTH     Y02072
         LH    R9,0(R9)                 LENGTH FROM THE BDW      Y02072
TT004    AR    R3,R9                    ADD DATA LENGTH          Y02072
         STH   R3,W1TOTAL               SAVE
         TM    CN4FLGS,CC               IS CCW CHAINED           Y02072
         BZ    TTEXIT                   BR NO - FINISHED         Y02072
         LR    R9,R5                    SAVE ADDR LAST CP        Y02072
         L     R5,CN5                   ADDRESS OF NEXT CP       Y02072
         DROP  R5                       END CP USING             Y02072
         USING SISCP22,R9               ADDR ON PREV CP          Y02072
         TM    CN5,MT                   IS IT CHAINED TO SUFFIX  Y02072
         BZ    TT001                    BR NO - CONTINUE         Y02072
         MVC   CN5(L'W1CN5SAV),W1CN5SAV RESTORE NEXT COPY CP22   Y02072
         LR    R5,R9                    RESTORE BASE             Y02072
         B     TTEXITA                  FINISHED                 Y02072
*
*    RESTORE OVERFLOW CHAIN
*
         DROP  R9                       ESTABLISH ADDR ON        Y02072
         USING SISCP22,R5               CP22                     Y02072
TT005    MVC   CN5(L'W1CN5SAV),W1CN5SAV RESTORE CP CHAIN         Y02072
         L     R3,W1CN5SAV              CHAIN POINTER           YM01101
         LA    R3,0(R3)                 CLEAR HIGH BYTE         YM01101
         LTR   R3,R3                    IS IT CHAINED           YM01101
         BNZ   TTEXIT                   BR YES - DON'T RESET CC  Y02072
TTEXITA  NI    CN4FLGS,ONES-CC          UNCHAIN CP22             Y02072
TTEXIT   EQU   *                        DONE
*
         L     R3,RQEDEB                RESTORE DEB PTR          Y02072
         USING SISDEB,R3                ADDRESSABILITY ON DEB    A48227
         BR    R8                       RETURN                   A48227
         USING SISRQA3,R15              ADDRESSABILITY
         USING SISCP22,R5               ADDRESSABILITY CP22
SISRQ30  EQU   *                        *                        M5092
*   IOB MAY POINT TO RPS CP EXTENSION, CORRECT PTR IF IT DOES
         L     R5,W1ICPS                PT TO FIRST CCW          S20201
SISRQB3  TM    CN2+K4,OFLOW             OVERFLOW MODE            S20201
         BO    SISRQC3                  BRANCH IF YES
         TM    W1STATUS,X'01'           END OF FILE
         BZ    SISRQF2                  BRANCH IF NO
*                                       YES
         SPACE 1
*                                       SET END OF DATA BIT ON  YM03876
SISRQE2  OIL   W1OSBIT1,EODBIT,REF=W1OSBIT1,WREGS=(R8,R10,R11)  YM03876
         SPACE 2
*                                       SET IOBI COMPLETE BIT   YM03876
SISRQF2  OIL   W1OSBIT1,IOBIC,REF=W1OSBIT1,WREGS=(R8,R10,R11)   YM03876
         SPACE 2
SISRQG2  NI    W1IF1,X'FB'              SET IOBI EXCEPT BIT TO 0
SISRQH2A EQU   *                                                 Y02072
         LA    R10,NORMAL               LOAD IOS RET ADDR OFST   Y02072
         BR    R14                      RETURN TO IOS VIA EXIT   Y02072
*                                       ROUTINE IN IGG019HG
         SPACE 3
*OVERFLOW CHAIN PROCESSING
         SPACE 2
SISRQC3  LH    R8,W1READR               LOAD COUNT
         BCTR  R8,0
         STH   R8,W1READR(0)            SET R =R-1
SISRQB4  L     R10,CN7                 LOD R10 WITH BUF ADDRESS  S20201
         SH    R10,SUB10               GET LINK FIELD OF OVERFLOW REC.
         MVC   W1WOVFL(10),0(R10)      MOVE LINK TO INDEX AREA
         TM    7(R10),X'FF'   IS IT END OF OVERFLOW CHAIN. DOES R=255
         BO    SISRQB5                 YES,ALL OVERFLOW RCDS WERE READ
*                                       NO, STILL SOME IN CHAIN
SISRQC4  CLC   CN5+K1(L3),CON000       ARE WE AT END OF READ Q   S20201
         BE    SISRQF2                 YES
         CLI   CN5,TIC                  IS IT ATIC TO CP22       S20201
         BNE   SISRQF2                  NO - FINISHED            S20201
*                                       NO, SET UP TO READ NEXT RECORD
SISRQD4  L     R5,CN5                  LOD ADD OF NEXT CP TO R5  S20201
         NI    CN1,X'FF'-MT            SET MT BIT OFF            S20201
         NI    CN4+K4,X'FF'-CC         SET CC BIT OFF            S20201
         NI    CN2+K4,DATA             SET OFF ALL FLAGS BUT     S20201
*                                       D/KD                     S20201
         OI    CN2+K4,OFLOW            SET ON OFLOW INDIC. IN CP S20201
SISRQE4  ST    R5,W1ICPS               SET ICPS TO CN1 OF NEXT CP
SISRQF4  MVC   W1IDAD,0(R10)           SET TO MBBCCHHR OF LINK   S20201
         MVC   CN6,W1IDAD              SET CN6 OF NEXT CP        S20201
         SPACE 2
*  IS OVERFLOW RECORD ON SAME DEVICE
         SPACE
         SR    R8,R8                   CLEAR WORK REG
         IC    R8,0(R10)               GET M OF OVERFLOW
         SLL   R8,4                    M X 16
         L     R11,DEBUCBAD(R8)        GET UCB ADDR              S20201
         LA    R11,0(R11)               CLEAR HIGH ORDER BYTE
         LA    R7,0(R7)                    OF REGS
         CR    R7,R11                   SAVE DEVICE
         BE    SISRAJ4                  YES BRANCH
         SPACE 2
*  USE ASYNCHRONOUS ROUTINE TO READ NEXT OVERFLOW RECORD
         SPACE
         B     ASYNCH(,R14)             BR TO EXIT ROUTINE IN    Y02072
*                                       IGG019HG
         SPACE 2
*  END OF OVERFLOW CHAIN
         SPACE
*                                       SET OFF OVRFLW MODE IND YM03876
SISRQB5  NIL   W1OSBIT1,OFFOVFL,REF=W1OSBIT1,WREGS=(R8,R10,R11) YM03876
         LH    R8,W1READC
         SH    R8,W1READR
         STH   R8,W1READC                   SET C EQUAL TO C-R
         CLC   W1LPDR(1),DCBLPDA
         BNE   SISRQF2                  IF EXTENTS NE,NOT DATA END
         CLC   W1LPDR+3(5),DCBLPDA+3
         BNE   SISRQF2                  NO, NORMAL CASE
*                                       YES
         OI    CN2+K4,EOD               MARK BUFFER AS EOD       S20201
*                                       BUFFER                   S20201
*                                       OVERFLOW CHAIN BEING READ IS AT
*                                       END OF DATA SET
         OI    W1WOVFL+8,X'08'          SET OVERFLOW CHAINED IND ON
*                                       TESTED IN EOB ROUTINE TO KEEP
*                                       PROCESSING LAST OVERFLOW CHAIN
         B     SISRQE2
APPCODE  EQU   40
OFLOW    EQU   X'40'                    OVERFLOW RECORD          S20201
DATA     EQU   X'20'                    DATA/KEY DATA SWITCH     S20201
EOD      EQU   X'10'                    END OF DATA              S20201
UNREAD   EQU   X'08'                    UNREADABLE BLOCK         S20201
UNREACH  EQU   X'02'                    UNREACHABLE BLOCK        S20201
KEY0     EQU   CON000                   STORAGE PROTECT KEY ZERO Y02072
EODBIT   EQU   X'40'                    SET EOD BIT ON          YM03876
IOBIC    EQU   X'02'                    SET IOBI COMP. BIT ON   YM03876
OFFOVFL  EQU   X'DF'                    TURN OFF OVRFLOW IND.   YM03876
*
PATCH    DC    XL((*-IGG019HG)/20)'00'  ZEROED PATCH AREA       YM03876
*
         EJECT
         IHAECB
         EJECT
         IECDRQE
         EJECT
CVT      DSECT
         CVT
         SPACE 3
REGSAVE  DSECT                          REG SAVE AREA FROM IOS   Y02072
REGSAV0  DS    F                        REGISTER 0               Y02072
REGSAV1  DS    F                        REGISTER 1               Y02072
REGSAV2  DS    F                        REGISTER 2               Y02072
REGSAV3  DS    F                        REGISTER 3               Y02072
REGSAV4  DS    F                        REGISTER 4               Y02072
REGSAV5  DS    F                        REGISTER 5               Y02072
REGSAV6  DS    F                        REGISTER 6               Y02072
REGSAV7  DS    F                        REGISTER 7               Y02072
REGSAV8  DS    F                        REGISTER 8               Y02072
REGSAV9  DS    F                        REGISTER 9               Y02072
REGSAV10 DS    F                        REGISTER 10              Y02072
REGSAV11 DS    F                        REGISTER 11              Y02072
REGSAV12 DS    F                        REGISTER 12              Y02072
REGSAV13 DS    F                        REGISTER 13              Y02072
REGSAV14 DS    F                        REGISTER 14              Y02072
REGSAV15 DS    F                        REGISTER 15              Y02079
         EJECT
SISDEB   IGGDEBD
         EJECT
SISCP22  DSECT
         IGGCP22
SISWORK1 IGGSCAN
         EJECT
         DCBD  DSORG=(IS)
         END
