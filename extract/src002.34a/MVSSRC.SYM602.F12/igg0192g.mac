         TITLE 'IGG0192G - OPEN, QISAM LOAD MODE'
IGG0192G CSECT
*
*        OS/VS2 RELEASE 3 CHANGES
* D0904000                                                      ZA02668
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192G                                              *
*                                                                     *
* DESCRIPTIVE-NAME = OPEN, QISAM LOAD MODE--INITIAL LOAD, OR RE-LOAD  *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = PERFORM GENERAL INITIALIZATION FOR LOAD MODE.  SET UP    *
*            THE BUFFER CONTROL TABLE, INITIALIZE THE COUNT FIELDS,   *
*            SET UP CBF, EOB, BMPR, AND FBW.  SET DCBMSWA TO THE      *
*            MBBCCHH OF THE NEXT TO LAST TRACK IN THE PRIME DATA AREA *
*            ALSO INITIALIZE THE RECORD MOVING LOGIC AND AREA Y.      *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 1102 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0192G                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0192F      *
*              IN STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.         *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = TRANSFERS CONTROL IN STORAGE PROTECT KEY 5 VIA XCTL   *
*               TO IGG0195T IF FULL TRACK INDEX WRITE OPTION,         *
*               OTHERWISE TO IGG0192U IF WRITE CHECK, OR IGG0192R IF  *
*               WRITE CHECK NOT SPECIFIED.                            *
*                                                                     *
* EXIT-ERROR = ABEND CODE:                                            *
*              036 - NO PRIME DATA AREA AVAILABLE                     *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCK = DCB COPY, AND DEB                                *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = ABEND, MODESET, AND XCTL.                                  *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,R1
         EJECT
****************************
* OPEN WORK AREA REFERENCE *
****************************
FORCORE  DSECT                                                   Y01021
         IECDSECT                                                Y01021
         EJECT
********************
* DEB REFERENCE    *
********************
*
IHADEB   IGGDEBD                                                 Y02072
         USING IHADEB,R8
         EJECT
***********************************************************************
* ISLCOMON REFERENCE     C(DCBWKPT1)=A(ISLCOMMON)                     *
***********************************************************************
*
ISLCOMON DSECT
         USING ISLCOMON,R12
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUF CTRL PTR (RCD WITHIN BUF)
ISLBMPR  DS    F                        USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    F                        NO OF BUFS SCHED TO WRITE
ISLEOB   DS    F                        END OF BUFFR ADR
ISLNCNT  DS    CL8                      NORMAL IX COUNT, CCHHRKDD
ISLOCNT  DS    CL8                      OVFLOL IX COUNT, CCHHRKDD
ISLDCNT  DS    CL8                      DUMMY IX COUNT,  CCHHRKDD
ISLNDAT  DS    CL10                     NORMAL IX DATA, MBBCCHHRFP
         DS    CL2
ISLODAT  DS    CL10                     OVFLOW IX DATA, MBBCCHHRFP
         DS    CL1
ISLBUFNO DS    CL1                      DCBBUFNO OR 2
ISLBUFN  DS    F                        ADDR OF SLOT N IN BCT
ISLMVC   DS    F                        COUNT OF EXECUTED MOVE (N-1)
ISLMVCT  DS    F                        NOMBR OF 255 BYTE MOVES (N+1)
ISLVRSAV DS    18F                      ISL SAVE AREA
ISLAPSAV DS    10F                      APPENDAGE SAVE AREA
ISLWRSAV DS    16F                      ISL SAVE AREA FOR CLOSE
*
TSTWK1C  DS    F                        WORK AREA FOR FORMAT 000N
TSTWK2C  DS    F                        WORK AREA FOR FORMAT 00NN
         DS    F
ISLNOENT DS    F                        NO ENTRIES REMAINING ON TRACK
ISLOFFST DS    F                        SIZE OF WR CKD INSTR IN BYTES
ISLD     DS    F                        DISCPLACEMENT FROM CP18 START
ISLFSTBF DS    F                        ADDR OF 1ST SCHED BUF (REL)
ISLLSTBF DS    F                        ADDR OF LAST SCHED BUF (REL)
ISLCCFAD DS    F                        ADDR OF CC FLAG IN CP18
ISLKEYAD DS    F                        ADDR OF KEY OF LAST RCD ON TRK
*
CL1AD    DS    F                        ADDR CP18 SKLTN
CM1AD    DS    F                        ADDR CP19 SKLTN
CQ1AD    DS    F                        ADDR CP20 SKLTN
CQT1AD   DS    F                        ADDR CP20 WR CHK EXTN
CQ40AD   DS    F                        ADDR CP21 SKLTN          O19110
CQ45AD   DS    F                        ADDR CP21 WR CHK EXTN    O19110
*
         SPACE 3
*
* ISLVPTRS REFERENCE       C(DCBWKPT6)=A(ISLVPTRS)
*
ISLVPTRS EQU   *                                                  25463
ISLVPTR1 DS    A                        A(AREA Y)                 25463
ISLVPTR2 DS    A                        A(KEYSAVE)                25463
ISLVPTR3 DS    A                        A(IOBBCT)                 25463
ISLVPTR4 DS    A                        A(CP18)                   25463
ISLVPTR5 DS    A                        A(CP19)                   25463
ISLVPTR6 DS    A                        A(CP20)                   25463
ISLVPTR7 DS    A                        A(CP21)                   25463
ISLVPTR8 DS    A                        SIZE OF ISLCOMON AREA     25463
ISLVPTR9 DS    A                        SIZE OF CHAN PROG AREA    25463
ISLVPTRA DS    A                        ADDRESS OF BAD BUFFER     25463
*                                       A(TRACK INDEX SAVE AREA)
*                                       BIT 0-FULL TRK INDX WRITE
*                                       BIT 1-SUCCESSFUL GETMAIN
ISLVPTRB DS    A                        A(CP20B)-FULL TRK INDX   O19110
*                                       WR                       O19110
ISLVPTRC DS    A                        A(CP20C)-FULL TRK INDX   O19110
*                                       WR                       O19110
ISLFXWK1 DS    F                        WORK AREA                 13711
ISLFXWK2 DS    F                        WORK AREA                 13711
ISLF9WK1 DS    F                        WORK AREA                 13711
*
*
* IOBBCT REFERENCE         C(ISLVPTRS+8)=A(IOBBCT)
*
IOBBCT   DSECT
         USING IOBBCT,R11
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         EJECT
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,R2
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
AIOBSENS DS    CL2                      SENSE BYTES              Y01021
IOBECBAD DS    A                        ECB POINTER
AIOBCSW  DS    CL8                      CHANNEL STATUS WORD      Y01021
AIOBSIOC DS    0CL1                     SIO CC                   Y01021
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    CL8                      DIR ACESS DEV ADR MBBCCHHR
*
         EJECT
**********************************************************************
* ISL PUT OPEN #1                                                     *
**********************************************************************
*
IGG0192G CSECT
TSTF800  BALR  R15,0
         USING *,R15
BASETAG  L     R1,0(RPARC)
         L     RCORE,4(RWTGC)
         L     R12,DCBWKPT1
         LR    RBASE,R15
         USING FORCORE,RCORE                                     Y02072
         STM   R0,R15,DXCCW1            SAVE REGISTERS           Y02072
         LR    R0,RCORE                 SAVE OPEN W/A ADDR       Y02072
         L     R10,DXUDCBAD             ADDRESS OF USERS DCB     Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RJ       EQU   15
VLR      EQU   X'40'                    VARIABLE LENGTH RECFM    M2674
ONE      EQU   1                        CONSTANT OF 1            XM0863
TWO      EQU   2                        CONSTANT OF 2            XM0863
THREE    EQU   3                        CONSTANT OF 3            XM0863
FOUR     EQU   4                        CONSTANT OF 4            XM0863
FIVE     EQU   5                        CONSTANT OF 5            XM0863
SIX      EQU   6                        CONSTANT OF 6            XM0863
TEN      EQU   10                       CONSTANT OF 10           XM0863
MCCH     EQU   X'07'                    MASK TO STORE CCH        Y02072
         EJECT
*
* OPEN HOUSEKEEPING FOR PUT
*
         MODESET  KEYADDR=DXUKEY,WORKREG=2  SET USERS KEY        Y02072
*
         DROP  RCORE                    END OPEN WORK AREA USING Y02072
TSTHSK   LA    R2,ISLIOBA               C(R2)=A(IOBA)
         L     R11,ISLVPTR3             C(R11)=A(BCT)
*
* SET ISLBUFNO = DCBBUFNO OR 2
*
         MVC   ISLBUFNO(1),DCBBUFNO     SET ISLBUFNO = DCBBUFNO
*
*   DONT'T ALLOW LOAD MODE TO SCHEDULE TOO LONG A CHANNEL PROGRAM
*   BY LIMITING THE NUMBER OF BUFFERS THAT CAN BE USED AT ONE TIME.
K30      EQU   30                       LARGEST NUMBER BUFFERS
         CLI   ISLBUFNO,K30             BUFNO TO BIG
         BNH   NOTBIG                   NO LEAVE IT
         MVI   ISLBUFNO,K30             RESTRICT IT
NOTBIG   EQU   *                        *
         CLI   ISLBUFNO,X'00'           TEST ISLBUFNO VS ZERO
         BNE   TSTHK005                 B IF NOT 0
         MVI   ISLBUFNO,X'02'           SET ISLBUFNO = 2
*
* INITIALIZE BCT
*
*  1. SET UP KDD IN REG 6
*
TSTHK005 SR    R6,R6
         ST    R6,TSTWK1C               CLEAR TSTWK1C            O19110
         IC    R6,DCBKEYLE              C(R6)=IL, 000K
         LH    R7,DCBBLKSI              C(R7)=00DD
         SLL   R7,16                    C(R7)=DD00
         SLDL  R6,16                    C(R6)=0KDD
*
*  2. SET UP BCT, STORRING 0KDD IN BUFF CNT +4 AT SAME TIME
*
         SR    R3,R3
         IC    R3,ISLBUFNO              C(R3)=NO OF BUFFRS
         LA    R4,8(R11)                C(R4)=A(SLOT 1)
         ST    R4,0(R11)                STORE A(SLOT 1) AT PTRA
         ST    R4,4(R11)                STORE A(SLOT 1) AT PTRB
         L     R5,DCBBUFCB              C(R5)=A(BUFF POOL CTRL BLK)
         L     R5,0(R5)                 C(R5)=A(BUF1)
         LA    R5,0(R5)                 DELETE HIGH ORDER BYTE    10284
         TM    DCBRECFM,VLR             IS VLR SPECIFIED         M2674
         BO    BOBNOTON                 YES, LEAVE BOB SW OFF    M2674
         MVI   0(R11),X'08'             SET FLAGS BITS, BOB SW = 1
BOBNOTON EQU   *                        THROUGH WITH IOBFLAGS    M2674
         MVI   4(R11),X'00'             SET B = 0
*---------------------------------------INIT N SLOTS
TSTHK01  EQU   *                        *
         LR    R8,R5                    C(R8)=A(BUF1) ALSO
         ST    R5,0(R4)                 STORE A(BUF N) IN SLOT N
         L     R5,0(R5)                 C(R5)=A(NEXT BUF)
         ST    R7,0(R8)                 STORE 0000 IN BUF N CNT
         ST    R6,4(R8)                 STORE 0KDD IN BUF N CNT +4
         BCT   R3,TSTHK02               TEST FOR SLOT N
         MVI   0(R4),X'80'              STATUS BIT 0 = 1 FOR BUFFR N
         ST    R4,ISLBUFN               C(BUFN)=A(SLOT N)
         LR    R4,R5                    A(NEXT BUFFER)
         L     R5,DCBBUFCB              C(R5)=A(BUF POOL CTL BLK)
         ST    R4,0(R5)                 C(BUF POOL CTL BLK)=A(NXT BUF)
         CLI   DCBHIRSH,X'00'           TEST FOR SHARED TRACKS
         BE    TSTK012A                 B IF NOT SHARED
TSTHK012 CLC   DCBFIRSH+2(1),DCBHIRSH   TEST FOR 1 RCD PER TRK SHARED
         BNE   TSTHK03                  B IF MORE THAN 1
TSTHK014 OI    8(R11),X'08'             TURN T-BIT ON FOR BUF 1 (BIT 4)
         CLC   DCBFIRSH(2),DCBLDT       TEST FOR 1 TRK PER CYL
         BNE   TSTHK03                  B IF MORE THAN 1
         OI    8(R11),X'04'             TURN C-BIT ON FOR BUF 1 (BIT 5)
         B     TSTHK03                  EXIT
*
*                                       NOT SLOT N-
TSTHK02  EQU   *                        NEXT SLOT
         MVI   0(R4),X'00'              STATUS BITS = 0
         LA    R4,4(R4)                 C(R4)=A(NEXT SLOT)       O19113
         B     TSTHK01                  LOOP
*
TSTK012A CLI   DCBHIRPD,X'01'           TEST FOR 1 RCD PER TRK UNSHARED
         BE    TSTHK014                 BRANCH IF 1
         EJECT
* GENERAL INITIALIZATION
************************
*
* INITIALIZE NDAT AND ODAT - R, F, AND P BYTES
*
TSTHK03  MVC   ISLNDAT+7(3),MVI1        RFP = 00001B
         MVC   ISLODAT+7(3),MVI2        RFP = FF1007
*
* SET ECBA, ECBB, ECBC TO COMPLETE STATE TO AVOID PREMATURE WAIT
*
         OI    ISLECBA,X'40'            SET COMPLETE BIT ON IN ECBA
         OI    ISLECBB,X'40'            SET COMPLETE BIT ON IN ECBB
         OI    ISLECBC,X'40'            SET COMPLETE BIT ON IN ECBC
*
*
* SET COUNT FIELDS IN NCNT, OCNT, DCNT, BUFFR 1, DCBLPDA, AND IOBA+32
*
         L     R8,DCBDEBAD              C(R8)=A(DEB)
         USING IHADEB,R8                                         Y01021
         L     R5,DEBFPEAD              C(R5)=A(1ST PRIME EXTENT ENTRY)
         MVC   ISLNCNT(4),6(R5)         NCNT CCHH
         MVI   ISLNCNT+4,X'01'               R = 1
         MVC   ISLNCNT+5(1),DCBKEYLE         K = KEYLE
         MVC   ISLNCNT+6(2),TST10       DD=0A
         MVC   ISLOCNT(8),ISLNCNT       OCNT = NCNT WITH -
         MVI   ISLOCNT+4,X'02'               R = 2
         MVC   ISLDCNT(8),ISLNCNT       DCNT = NCNT WITH -
         MVI   ISLDCNT+4,X'00'               R = 0
*
         L     R3,8(R11)                C(R3)=A(BUF 1)
         LA    R3,0(R3)
         MVC   0(3,R3),6(R5)            BUF 1 COUNT    CCH FOR
TSTHK030 MVC   3(2,R3),DCBFIRSH+1                      HR = FIRSH
*                                                      KDD ALREADY SET
*
         DROP  R1                       DROP ADDR ON COPIED DCB  Y02072
         USING IHADCB,R10               EST ADDR ON REAL DCB     Y02072
         MVI   DCBLPDA,X'01'            LPDA           M = 1
         MVC   DCBLPDA+1(2),4(R5)                      BB
         MVC   DCBLPDA+3(5),0(R3)                      CCHHR FROM BUF 1
*
         MVC   32(8,R2),DCBLPDA         IOBA+32        MBBCCHHR
*
* SET UP CBF, EOB AND BMPR
*
         AH    R3,TST8                  C(R3)=A(BUF1+8)
         ST    R3,ISLCBF                CBF = A(BUF 1 +8)
         DROP  R10                      DROP ADDR ON REAL DCB    Y02072
         USING IHADCB,R1                EST ADDR ON COPIED DCB   Y02072
         AH    R3,DCBBUFL               C(R3)=A(BUF1+8+BUFL)     O19110
         SH    R3,TST9                  C(R3)=A(BUF1+BUFL-1)
         ST    R3,ISLEOB                EOB = A(BUF1+BUFL-1)
         LH    R3,DCBLRECL              C(R3)= LRECL
         TM    DCBRECFM,X'10'           TEST RECFM BIT 3 FOR BLOCKED
         BC    1,TSTHK04                B IF 1 = BLOCKED
         CLC   DCBRKP(2),TSTDDAT        TEST RKD=0
         BNE   TSTHK04                  B IF NOT 0
*
*                                       UNBLOCKED, RKP = 0
         MVC   TSTWK1C+3(1),DCBKEYLE    C(WK1C)=KEYLE, 000N
         A     R3,TSTWK1C               C(R3)=LRECL+KEYLE
*
TSTHK04  ST    R3,ISLBMPR               C(BMPR)=LRECL OR LRECL+KEYLE
*
* SET FBW = 1
*
         LA    R3,1                     C(R3)=1                  O19110
         ST    R3,ISLFBW                SET FBW = 1              O19110
*
         DROP  R1                       END USING ON COPY DCB    Y02072
         USING IHADCB,R10               ADDR ON REAL DCB         Y02072
         LM    R3,R4,DCBLPDA            LOAD LPDA FROM USER DCB  Y02072
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
*
         DROP  R10                      END USING ON REAL DCB    Y02072
         USING IHADCB,R1                ADDR ON COPY DCB         Y02072
         STM   R3,R4,DCBLPDA            LPDA TO DCB COPY         Y02072
         MVC   DCBFTMI3(L'DCBLPDA),DCBLPDA  SAVE LPDA FOR CLOSE  Y02072
*
* SET DCBMSWA = MBBCCHH OF NEXT-TO-LAST TRACK IN LAST PRIME EXTENT
*     NOTE - DCBMSWA IS THE SAME FIELD AS DCBLPDT.
*
         SR    R4,R4                    CLEAR REGISTER 4         O19110
         ST    R4,DCBMSWA               CLEAR MSWA               O19110
         L     R8,DCBDEBAD              C(R8)=A(DEB)
         DROP  R8                                                Y01021
         USING IHADEB,R8                R8 = DEB ADDRESS         Y01021
         L     R3,DEBFPEAD              C(R3)=A(1ST PRIME EXTENT ENTRY)
         IC    R4,DEBNPEE               C(R4)=000M
*
         CLI   DCBNLEV,0                TEST FOR NO HI LVL INDEX
         BE    TSTHK042                 BRANCH IF NONE
         CLI   DEBNIEE,X'00'            TEST SEPARATE IX AREA
         BNE   TSTHK042                 B IF PRESENT
         CLI   DEBNOEE,X'00'            TEST SEPARATE OVFLOW AREA
         BNE   TSTHK042                 B IF PRESENT
*
*  1. HIGH LEVEL INDEX WITH NO SEPERATE IX OR OVFL AREAS
*
         IC    R4,DCBFTHI               C(R4)=000M
         BCTR  R4,0                     C(R4)=000M-1 (M-1 FOR EXTENT 0)
         SLL   R4,4                     C(R4)=000M-1 X 16 (USE AS INDX)
         LA    R8,6(R4,R3)              C(R8)=STRCC OF LAST EXTENT
TSTK040  CLC   DCBFTHI+3(3),0(R8)       TEST FTHI VS STRCC OF HI M
         BNE   TSTHK041                 B IF FTHI NOT STRCC OF HI M
*
         SRL   R4,4                     FTHI = STRCC OF HI M
         B     TSTHK042                 BACK UP AN EXTENT         21919
TSTK042  CLI   DCBFTHI+4,X'00'          TEST C2 VRS 0             10284
         BNE   TSTK043                                            10284
*
         BCTR  R5,0                     C(R5)=00CC-1              10284
         SLL   R5,8                     C(R5) = CCH             XA02702
*
         B     TSTK044                                            10284
*
TSTHK041 LH    R5,DCBFTHI+3                  C(R5) = CC OF IX
         SR    R8,R8
         IC    R8,DCBDEVT               C(R8)= DEVT (INDEX FO2 2 BYTE
         SLL   R8,1                       DEVICE MASK)
         CLI   DCBFTHI+5,X'00'          TEST H1 VS 0
         BE    TSTK042                  BRANCH =  H1 IS 0
         SLL   R5,8
         IC    R5,DCBFTHI+5             C(R5)= FTHI CCH
         BCTR  R5,0                     C(R5)= FTHI CCH-1
         B     TSTK044
TSTK043  BCTR  R5,0                     C(R5)= CC-1
         SLL   R5,8                     C(R5)= CC0
TSTK044  STCM  R5,MCCH,DCBLPDT+3        C(LPDT) = 000CCH0        Y02072
         B     TSTHK043
*
*  2. SEPERATE IX OR OVFL AREA OR NO HIGH LEVEL INDEX
*
TSTHK042 BCTR  R4,0                     C(R4)= 000M-1
         SLL   R4,4                     C(R4)=000M-1 X 16 (USE AS INDX)
         LA    R8,10(R4,R3)            C(R8) = A(ENDCCH)
         MVC   DCBMSWA+3(3),0(R8)      MOVE CCH
TSTHK043 LH    R5,DCBLDT               END HH
         BCTR  R5,0                    END HH - 1
         STC   R5,DCBMSWA+6            STORE HH
         LA    R8,4(R4,R3)             C(R8)=A(BB)-1
         MVC   DCBMSWA+1(2),0(R8)       MOVE BB TO MSWA
         LR    R5,R4                    SAVE CURRENT EXTENT      XM0863
         SRL   R4,4
         LA    R4,1(R4)                 C(R4)=000M               O19110
*                                       M = 1 FOR EXTENT 0
         STC   R4,DCBMSWA               STORE M
         TM    DCBRECFM,VLR             VLR DATA SET            OX01135
         BO    CONTINUE                 NO SHARED TRKS FOR VLR  OX01135
         CLI   DCBFIRSH+TWO,ONE         ANY TRACKS SHARED        XM0863
         BE    CHECKHH                  NO                       XM0863
         CLC   DCBLDT,DCBFIRSH          SHARED TRACK ONLY TRACK  XM0863
         BH    CONTINUE                 NO - CONTINUE            XM0863
         B     CHECKCC                  CHECK FOR MORE THAN 1 CYLXM0863
CHECKHH  EQU   *
         CLC   DCBMSWA+FIVE(2),HWONE    MORE THAN 1 PRIME TRACK  XM0863
         BNL   CONTINUE                 YES                      XM0863
CHECKCC  EQU   *
         MVC   DCBMSWA+SIX(1),DCBLDT+ONE SET END0H TO LDT0H      XM0863
         LR    R4,R5                    RESET LAST EXTENT        XM0863
         LA    R8,6(R4,R3)              POINT TO START CCHH      XM0863
         CLC   0(TWO,R8),FOUR(R8)       ENDCC = BEGINCC          XM0863
         BE    CHECKM                   YES - GO CHECK EXTENTS   XM0863
         IC    R5,DCBMSWA+THREE         GET CURRENT CC           XM0863
         SLL   R5,8                     *                        XM0863
         IC    R5,DCBMSWA+FOUR          *                        XM0863
         BCTR  R5,0                     SUBTRACT 1               XM0863
         STC   R5,DCBMSWA+FOUR          RESTORE CC               XM0863
         SRL   R5,8                     *                        XM0863
         STC   R5,DCBMSWA+THREE         *                        XM0863
         B     CONTINUE                 CONTINUE                 XM0863
CHECKM   EQU   *
         CLI   DCBMSWA,ONE              MORE THAN ONE EXTENT     XM0863
         BNH   ABEND                    OUT OF EXTENTS           XM0863
         SRL   R4,FOUR                  EXTENTS - 1              XM0863
         STC   R4,DCBMSWA               NEW EXTENT               XM0863
         BCTR  R4,0                     SUBTRACT ONE TO          XM0863
         SLL   R4,FOUR                  GET BACK TO              XM0863
         LA    R8,TEN(R4,R3)            LAST GOOD                XM0863
         MVC   DCBMSWA+THREE(THREE),0(R8) CYLINDER               XM0863
CONTINUE EQU   *
*
* CALCULATE MVC AND MVCT FOR RECORD MOVE
* BY DIVIDING BMPR BY 255
*
TSTHK045 LR    R4,R0                    OPEN WA ADDRESS          Y02072
         USING FORCORE,R4               OPEN WA ADDRESSABILITY   Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=5  SET USERS KEY        Y02072
*
         DROP  R4                       END OPEN WORK AREA USING Y02072
         SR    R4,R4                    SET TO ZERO              Y02072
         L     R5,ISLBMPR               DIVIDEND = 000000NN IN R4-R5
         D     R4,TST255                DIVISOR  =     0255
*                                       C(R4) = REMAINDER R
*                                       C(R5) = QUOTIENT  Q
         LTR   R4,R4                    TEST R VS 0
         BC    8,TSTHK05                B IF R = 0
*                                       R NOT 0
         LA    R5,1(R5)                 C(R5)=Q+1                O19110
         B     TSTK055A
*
TSTHK06A MVC   63(1,R9),62(R9)          MOVE 1S IS TO BE EXECUTED
*                                       R = 0
TSTHK05  L     R4,TST255                C(R4)=0255
TSTK055A BCTR  R4,0
         ST    R4,ISLMVC                C(MVC)=0254, COUNT OF EX MOVE
         ST    R5,ISLMVCT               C(MVCT)=Q, NO OF 255 BYTE MVS
*
* INITIALIZE AREA Y
*
TSTHK055 EQU   *                        *
         L     R9,ISLVPTR1              C(R9)=A(AREA Y)
*
*  1. STORE KDD IN COUNT OF HI-LEVEL INDEX AT Y+5
*
         MVC   5(3,R9),ISLNCNT+5        C(Y+5)=KDD FROM NCNT
*
*  2. MOVE BINARY 1S TO KEY OF DUMMY INDEX ENTRY AT Y+62
*
         SR    R3,R3
         IC    R3,DCBKEYLE              C(R3)=KEYLE
         MVI   62(R9),X'FF'             SET 1ST BYTE OF KEY = 1S
         CLI   DCBKEYLE,X'01'           TEST IF KEYLE = 1
         BE    TSTHK07                  B IF KEYLE = 1
         BCTR  R3,0                     R3 EQUALS
         BCTR  R3,0                      KEYLE-2
         EX    R3,TSTHK06A              MOVE IS TO REST OF KEY
*
*
*  3. MOVE HEX 00000000000000002007 TO Y+62+IL FOR DUMMY DATA, TRK IX
*
TSTHK07  EQU   *                                                  10284
         IC    R3,DCBKEYLE              C(R3)=KEYLE
         AR    R9,R3                    C(R9)=A(AREA Y + IL)
         MVC   62(10,R9),TSTDDAT        MOVE DUMDAT TO AREA Y +62 +IL
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         EJECT
*
* EXIT ********** EXIT ***************** EXIT *********** EXIT ********
*
         LR    RCORE,R0                 RESTORE OPEN W/A ADDR    Y02072
         USING FORCORE,RCORE            OPEN WA ADDRESSABILITY   Y02072
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         USING BASETAG,RBASE            ESTABLISH BASE           O19110
         MVC   0(L'LOAD5T,RWTGC),LOAD5T ASSUME 5T NEXT           Y02072
         TM    DCBOPTCD,X'40'           FULL TRACK INDEX WRITE   O19110
         BO    EXIT5T                   YES - GO TO MODULE 5T    O19110
         MVC   0(L'LOAD2U,RWTGC),LOAD2U ASSUME 2U NEXT           Y02072
         TM    DCBOPTCD,X'80'           TEST OPTCD BIT 0 (WR CHK)
         BO    RELOOP                   WRITE CHECK 2U NEXT
TSTEXIT  MVC   0(L'LOAD2R,RWTGC),LOAD2R MOVE 2R ID               Y02072
EXIT5T   EQU   *                        *
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RJ,DXCCW12               WA ADDRESS               Y01021
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
*
ABEND    EQU   *
         ABEND X'036',DUMP,,SYSTEM      SYSTEM 036 ABEND         XM0863
MVI1     DC    X'00001B'
MVI2     DC    X'FF1007'
TST8     DC    H'08'
TST9     DC    H'09'
TST10    DC    H'10'
TST255   DC    F'0255'
MASK     DC    5H'00'
         DC    X'0904'                  2321 MASK
TSTDDAT  DC    X'00000000000000002007'  DUMMY DATA (MBBCCHHRFP)
THISLOAD DC    C'2G'
OPNLOD7  DC    C'0S'
HWONE    DC    H'1'                                              XM0863
*
*        XCTL TABLE
LOAD2R   DC    C'2R'                    ID OF MODULE IGG0192R    Y02072
LOAD2U   DC    C'2U'                    ID OF MODULE IGG0192U    Y02072
LOAD5T   DC    C'5T'                    ID OF MODULE IGG0195T    Y02072
*
PATCH    DC    XL((*-IGG0192G)/20)'00'  ZEROED PATCH AREA        Y02072
*
         END
