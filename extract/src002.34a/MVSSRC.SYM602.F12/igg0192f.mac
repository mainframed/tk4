         TITLE 'IGG0192F - OPEN, QISAM LOAD MODE'
IGG0192F CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192F                                              *
*                                                                     *
* DESCRIPTIVE-NAME = OPEN, QISAM LOAD MODE--INITIAL LOAD, OR RE-LOAD  *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = COMPLETE THE INDEX LOCATION TABLE ENTRIES, DCB POINTERS  *
*            TO INDEX ADDRESSES, COMPUTE THE AMOUNT OF CORE USED BY   *
*            HIGH LEVEL MASTER INDICES, AND DETERMINE  THE NUMBER OF  *
*            TRACKS AVAILABLE FOR OVERFLOW.                           *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 672 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0192F                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0192D IF   *
*              NO HIGH LEVEL INDICES, OTHERWISE FROM IGG0192E.        *
*              RECEIVES CONTROL IN STORAGE PROTECT KEY 5 AND          *
*              PRIVILEGED STATE.                                      *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM OPEN EXECUTOR IGG0192G IN STORAGE        *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = ABEND CODE:                                            *
*              038 - INDEX AREA INSUFFICIENT OR REQUIRES MORE THAN    *
*                    ONE VOLUME.                                      *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB COPY, CVT, JFCB, AND DEB                    *
*                                                                     *
* TABLES = I/O DEVICE CHARACTERISTICS TABLE                           *
*                                                                     *
* MACROS = ABEND, MODESET, AND XCTL.                                  *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
FORCORE  DSECT
         IECDSECT
ISLCOMON DSECT
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUR CTRL PTR
ISLBMPR  DS    CL1                      USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    CL1                      NUM BUFS SCHED TO WRITE
ISLQC    DS    H                        NUM PRIME CYLINDERS
ISLM     DS    H                        NUM ENTRIES ON LAST TRK INDEX
ISLP     DS    H                        NUM TRACKS PER CYLINDER
ISLQ     DS    H                        NUM FULL TRKS TO BE INDEXED
ISLQ1    DS    H                        NUM TOTAL TRKS TO BE INDEXED
ISLQ2    DS    H                        NUM TRACKS IN CURNT INDEX
ISLQ3    DS    H                        NUM ENTRIES IN CURNT INDEX
ISLQ4    DS    H                        NUM CYLNDRS OF MASTER INDEX
ISLR2    DS    F                        ADR OF PRIME DEV TBL ENTRY
ISLDORE  DS    CL1                      SKIP OPEN 2D INDICATOR
ISLURSAV DS    16F                      USERS REGISTERS
ISLVRSAV DS    16F
IHADEB   DSECT
         DS    0D
DEBNMSUB DS    0CL1                     NUM SUBROUTINES LOADED AT OPEN
DEBTCBAD DS    A                        TCB POINTER
DEBAMLNG DS    0CL1                     LENGTH OF ACCESS METHOD SECTION
DEBDEBAD DS    A                        POINTER TO NEXT DEB IN TASK
DEBOFLGS DS    0CL1                     DATA SET STATUS FLAGS
DEBIRBAD DS    A                        POINTER TO IRB FOR ERROR EXIT
DEBOPATB DS    0CL1                     FILE TYPE
DEBSYSPG DS    A                        SYSTEM PURGE CHAIN
DEBNMEXT DS    0CL1                     NUMBER OF EXTENTS CONSTRUCTED
DEBUSRPG DS    A                        USER PURGE CHAIN
DEBPRIOR DS    0CL1                     DISPATCHING PRIORITY
DEBECBAD DS    A                        POINTER TO ECB
DEBPROTG DS    0BL1                     TASK PROTECTION FLAG
DEBDEBID DS    0BL1                     F TO IDENTIFY AS A DEB
DEBDCBAD DS    A                        POINTER TO CORRESPONDING DCB
DEBEXSCL DS    0CL1                     SCALE FOR SIZE OF DEV SECT
DEBAPPAD DS    A                        POINTER TO APPENDAGE SECTION
DEBNIEE  DS    0CL1                     NUMBER OF INDEX EXTENTS
DEBFIEAD DS    A                        ADR OF FIRST INDEX EXTENT
DEBNPEE  DS    0CL1                     NUMBER OF PRIME DATA EXTENTS
DEBFPEAD DS    A                        ADR OF FIRST PRIME DATA EXTENT
DEBNOEE  DS    0CL1                     NUMBER OF OVERFLOW EXTENTS
DEBFOEAD DS    A                        ADR OF FIRST OVFLO EXTENT
         DS    CL4                      DISABLED MODULE
DEBDVMOD DS    0CL1                     DEVICE MODIFIER
DEBUCBAD DS    A                        POINTER TO UCB
DEBBINUM DS    CL2                      BB OF EXTENT
DEBSTRCC DS    CL2                      STARTING CC
DEBSTRHH DS    CL2                      STARTING HH
DEBENDCC DS    CL2                      ENDING CC
DEBENDHH DS    CL2                      ENDING HH
DEBNMTRK DS    CL2                      NUMBER OF TRACKS IN EXTENT
         DCBD  DSORG=(IS)
IGG0192F CSECT
START    BALR  R15,0                    ESTABLISH ADDRESSABILITY
         USING *,R15
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        BASE REGISTER FOR DCB
R2       EQU   2                        WORK REGISTER
R3       EQU   3                        WORK REGISTER
R4       EQU   4                        WORK REGISTER
R5       EQU   5                        WORK REGISTER
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
R8       EQU   8                        WORK REGISTER
R9       EQU   9                        WORK REGISTER
R10      EQU   10                       WORK REGISTER
R11      EQU   11                       WORK REGISTER
R12      EQU   12                       BASE REGISTER FOR USERS DEB
R13      EQU   13                       BASE REG FOR COMON WORK AREA
R14      EQU   14                       WORK REGISTER
R15      EQU   15                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
RBASE    EQU   3                        BASE REGISTER FOR THIS MODULE
RCORE    EQU   4                        BASE REG FOR OPEN WORK AREA
UCBTYPE  EQU   19                       OFFSET FOR TYPE OF DEVICE
CVTPTR   EQU   16                       OFFSET FOR COMMUNICATION VCTR
RPAR     EQU   5                        ADDRESS OF PARAMETER TABLE
RWTG     EQU   6                        ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7                        CURRENT PARAMETER ENTRY
RWTGC    EQU   8                        CURRENT WHERE-TO-GO ENTRY
*
*        CHART FE BLOCK A1
*
ISLFE01  EQU   *
BASETAG  L     R1,0(RPARC)              R1=ADDRESS OF DCB
         USING FORCORE,RCORE
         USING IHADEB,R12
         USING IHADCB,R1
         L     R13,DCBWKPT1             R13=ADR OF COMON WORK AREA
         USING ISLCOMON,R13
         LR    RBASE,R15                CHANGE BASE  OF THIS MODULE
         L     RCORE,4(RWTGC)           RCORE=ADR OF OPEN WORK AREA
         L     R12,DCBDEBAD             R12 = DEB
         STM   R0,R15,DXCCW1            SAVE REGISTERS           Y02072
         LR    R0,RCORE                 SAVE OPEN W/A ADDR       Y02072
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=4  SET USERS KEY        Y02072
         SPACE 2
         DROP  RCORE                    END OPEN WA ADDR         Y02072
         SR    R4,R4                     CLEAR WORK REGISTER
         CLI   ISLDORE,X'E1'            TEST IF HI LEVEL INDICES
*   ENTRANCE FROM FC
         BC    7,ISLFE05                BRANCH=NO HI LEVEL INDICES
         LA    R6,ISLIXLT               R6=ADR OF INDEX LOC TBL
         LA    R5,4                     SET UP LOOP FOR 4 ENTRIES IN
STEPLOOP EQU   *                        INDEX LOCATION TABLE
         MVC   9(7,R6),1(R6)            SET UP STEPPING ADDRESS
         LA    R6,26(R6)                ADVANCE TO NEXT ENTRY
         BCT   R5,STEPLOOP              DECREMENT COUNTER
         IC    R5,DCBNLEV               NLEV=NUM ENTRIES IN ILT
         BCTR  R5,0                     DECREMENT NLEV COUNTER
         LA    R3,26                    EACH ENTRY IN ILT IS 26 BYTES
         SR    R2,R2                    CLEAR WORK REGISTER
         MR    R2,R5                    NUM ENTRIES TIMES LENGTH
         LA    R5,128                   SET ON 1ST BIT OF 1ST BYTE OF
         LA    R6,ISLIXLT               LAST ENTRY IN INDEX LOC TABLE
         STC   R5,0(R3,R6)
         C     R4,DEBNIEE               TEST IF SEPARATE INDEX AREA
         BC    8,ISLFE04                BRANCH = NO SEPARATE INDEX AREA
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         STH   R4,DCBRORG2              SET DCBRORG2 = 0           FEA2
         LR    R6,R0                    GET OPEN WA ADDR         Y02072
         USING FORCORE,R6               EST OPEN WA ADDR         Y02072
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=6  SET USERS KEY        Y02072
         SPACE 2
         DROP  R6                       END OPEN WA ADDR         Y02072
         L     R6,DCBFTHI+3             R6= CCHH OF HIGHEST LEVEL INDEX
         IC    R4,DEBNIEE               R4= NO OF INDEX AREA EXTENTS
         L     R7,DEBFIEAD              R7= ADR OF 1ST INDX AREA EXTENT
         SR    R3,R3                    CLEAR R3
ISLFE011 LM    R8,R9,8(R7)
         SRDL  R8,16(R0)                R9= ENDCCHH OF INDX AREA EXTENT
         CR    R6,R9                    FTHI CCHH VS END CCHH
         BH    ISLFE02                  BRANCH = FTHI GTR  THAN ENDCCHH
         LM    R8,R9,4(R7)
         SRDL  R8,16(R0)                R9= STRCCHH OF INDX AREA EXTENT
         CR    R6,R9
         BL    ISLFE02                  BRANCH = FTHI LESS THAN STRCCHH
         B     ISLFE04                  FTHI IS WITHIN INDX AREA EXTNTS
ISLFE02  BCTR  R4,0                     TEST FOR ANOTHER EXTENT ENTRY
         CR    R3,R4
         BE    ISLFE03                  FTHI NOT WITHIN INDEX EXTENTS
         LA    R7,16(R7)                NEXT INDEX AREA EXTENT ENTRY
         B     ISLFE011                 BRANCH TO TEST NEW EXTNT LIMITS
ISLFE03  EQU   *                                                 Y02072
         SPACE 1
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 1
         OI    DCBEXCD1,DCBEXNSP        SPACE NOT FOUND          Y02072
*                                       FTHI NOT WITHIN INDEX EXTENTS
         ABEND X'038',DUMP,,SYSTEM      GIVE SYSTEM 038 ABEND    Y02072
*  ENTRANCE ON FE BLOCK B1
ISLFE04  EQU   *                        CALCULATE Q3(KEYLE + 10)
         SR    R4,R4                    CLEAR R4
         IC    R4,DCBKEYLE              R4 = KEYLE
         LA    R4,10(R4)                R4=(KEYLE+10)
         MH    R4,ISLQ3                 R4=Q3(KEYLE+10)
ISLFE05  EQU   *                                                 Y02072
         SPACE 1
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 1
         STH   R4,DCBNCRHI              STORE RESULT IN NCRHI    Y02072
         SR     R5,R5                    ENTRANCE FROM CHART FC  (FEB2)
         L     R4,DEBFOEAD              R4=ADR OF 1ST OVFLO EXTNT ENTRY
         CR    R4,R5                    R5=ZERO
         BNE   ISLFE051                 BR IF IND OFL EXISTS      13270
         XC    DCBLIOV(8),DCBLIOV       SET A(IND OFL) = 0        13270
         B     ISLFE09                  CONTINUE                  13270
*
*    INDEPENDENT OVERFLOW EXISTS, INITIALIZE LIOV AND RORG2.
*
ISLFE051 EQU   *                                                  13270
         STC   R5,DCBLIOV+7             SET R IN DCBLIOV = 0
         LA    R5,1                     CALCULATE M FOR DCBLIOV
         LH    R6,DEBNIEE               M = 1 + NUM INDEX EXTENTS +
         SRL   R6,8                      NUM OFLO EXTENTS.
         AR    R5,R6
         LH    R6,DEBFPEAD
         SRL   R6,8
         AR    R5,R6
         STC   R5,DCBLIOV
         LA    R6,DCBLIOV               R6 = PTR TO DCBLIOV
         XC    1(2,R6),1(R6)            SET BB=0
         MVC   3(4,R6),6(R4)            STORE CCHH IN DCBLIOV
         IC    R5,DEBNOEE               R5= NO OF OVFLO EXTENT ENTRIES
         SR    R6,R6                    CLEAR WORK REGISTERS
         SR    R7,R7
ISLFE06  LH    R8,14(R4)                R8=NO TRACKS IN EXTENT
         AR    R6,R8                    R6=ACC NMTRK
         BCTR  R5,0                     DECREMENT OVFLO EXTENT CTR
         CR    R5,R7                    TEST IF LAST EXTENT ENTRY
         BE    ISLFE07                  BRANCH = END OF ENTENT ENTRIES
         LA    R4,16(R4)                NEXT OVFLO EXTENT ENTRY
         B     ISLFE06
ISLFE07  LH    R7,DCBRORG2              R7 = RORG2
         SR    R6,R7                    R6=TOT NO TRKS - RORG2
         STH   R6,DCBRORG2              RORG2 = TOT NO TRKS - RORG2
         BC    4,ISLFE03                BRANCH IF NEGATIVE         FED1
         SR    R2,R2                                             O19113
         IC    R2,DCBOVDEV              R2=OVERFLOW DEVICE TYPE  O19113
         L     R4,CVTPTR                R4=PTR TO CVT            O19113
         L     R4,64(R4)                R4=PTR TO DEVICE TABLE   O19113
         IC    R2,0(R4,R2)              R2=OFFSET INTO DEV TABLE O19113
         LA    R2,0(R4,R2)              R2=DEVICE TABLE ENTRY    O19113
         B     ISLFE10B                                          O19113
*
*    BRANCH HERE IF NO INDEPENDENT OVERFLOW EXISTS.  TEST FOR
*    SEPARATE INDEX EXTENT AND INITIALIZE LIOV AND RORG2
*    ACCORDINGLY.
*
ISLFE09  CLI   DCBNLEV,X'00'            TEST NLEV = 0              FEB3
         BC    8,ISLFE11                BRANCH TO INITIALIZE
         C     R5,DEBFIEAD                                         FEC3
         BE    ISLFE10                  BRANCH = NO SEPARATE INDEX AREA
         L     R6,DEBFIEAD              R6=ADR OF 1ST INDEX EXTENT
         L     R7,0(R6)                 R7=ADR OF INDX-UCB
         L     R8,DEBFPEAD              R8=ADR OF 1ST PRIME EXTENT
         L     R9,0(R8)                 R9=ADR OF PRIME-UCB
         CLC   19(1,R7),19(R9)          TEST IF INDEX SAME DEV AS PRIME
         BNE   ISLFE11                  BRANCH TO INITIALIZE
         CLC   4(2,R6),4(R8)           SAME BIN NUMBER?
         BNE   ISLFE11                 NO GO INITIALIZE
ISLFE10  SR    R6,R6
         IC    R6,DCBFTHI+6             R6= H2 OF FTHI
         CR    R6,R5                   R5 = 0
         BE    ISLFE11                 BRANCH TO INITIALIZE
         STH   R5,DCBRORG2              RORG2=00
         MVC   DCBRORG2+1(1),DCBFTHI+6  RORG2=FTHI''
         NC    DCBRORG2+1(1),DCBFIRSH+3 REDUCE TO TRACK VALUE
         STH   R5,DCBLIOV+6             SET LIOV HR = 00
         MVC   DCBLIOV(7),DCBFTHI       LIOV MBBCCHH = FTHI MBBCCHH
         OC    DCBLIOV+6(1),DCBFIRSH+3
         XC    DCBLIOV+6(1),DCBFIRSH+3  LIOV HR = 00
         OI    DCBOPTCD,X'10'           SET INDEPENDENT OVERFLOW BIT
         MVC   DCBHIIOV(1),DCBHIROV     HI R ON OVFLOW TRK       O19113
         MVC   DCBOVDEV(1),DCBDEVT      OVERFLOW DEV TYPE        O19113
         LR    RCORE,R0                 IN DCB AND DSCB OPTCD    Y02072
         USING FORCORE,RCORE            EST OPEN WA ADDR         Y02072
         OI    DSCOPTCD,X'10'
         OI    JFCOPTCD,X'10'           ALSO IN JFCB OPTCD
         OI    JFCBMASK+4,X'40'         INDICATE DSCB IS TO BE WRITTEN.
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=2  SET USERS KEY        Y02072
         SPACE 2
         L     R2,ISLR2                 R2=PRIME DEV TABLE ENTRY O19113
         SPACE 1
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
         SPACE 1
ISLFE10B MVC   DCBNBOV(2),4(R2)         SET NBOV=DEV TRLNG       O19113
ISLFE11  EQU   *
         LR    RCORE,R0                 RESTORE OPEN W/A ADDR    Y02072
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         USING BASETAG,RBASE
         MVC   0(L'LOAD2G,RWTGC),LOAD2G INITIALIZE WHERE-TO-GO   Y02072
***********************************************************************
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RJ,DXCCW12
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
* CONSTANTS
THISLOAD  DC   C'2F'
OPNLOD7  DC    C'0S'
CONF8    DC    F'248'
*
*
LOAD2G   DC    C'2G'                    ID OF MODULE IGG0192G    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
