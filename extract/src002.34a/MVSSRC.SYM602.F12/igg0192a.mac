          TITLE 'IGG0192A - ISAM OPEN, BUILD DEB'
IGG0192A CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192A                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, BUILD DEB                             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
*     VS2 RELEASE 3 DELETIONS/CHANGES
* D048900-048960,A049080-049266                                 ZA00123
* A050300                                                      @ZA10784
*
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = DETERMINE THE SIZE OF THE ISAM DEB.  SCAN THE DSCB'S     *
*            COUNTING SEPARATELY THE NUMBER OF PRIME, INDEX, AND      *
*            OVERFLOW EXTENTS, AND DETERMINE THE NUMBER OF MODULES TO *
*            BE LOADED BASED UPON MODE AND DESIRED FUNCTION.  OBTAIN  *
*            CORE FOR THE DEB FROM SUBPOOL 230, STORAGE PROTECT KEY 5.*
*            INITIALIZE THE DEB PREFIX, BASIC SECTIONS AND THE M=0    *
*            EXTENT.  ISSUE DEBCHK TO PLACE THE DEB ADDRESS IN THE    *
*            DEB TABLE.                                               *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 1109 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0192A                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = CALLED BY COMMON OPEN FOR ISAM DATA SET VIA XCTL.      *
*              RECEIVES CONTROL IN STORAGE PROTECT 5 AND PRIVILEGED   *
*              STATE.                                                 *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = TRANSFERS CONTROL TO ISAM OPEN EXECUTOR IGG0192B IN   *
*               STORAGE PROTECT KEY 5.                                *
*                                                                     *
* EXIT-ERROR = ABEND CODES:                                           *
*              030 - DCBMACRF INCORRECTLY SPECIFIED                   *
*              036 - NO PRIME EXTENTS ALLOCATED                       *
*              03B - DATA SET NOT SUCCESSFULLY CREATED OR LOAD MODE   *
*                    WITH DISP = SHR SPECIFIED                        *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = DEBCHK TO PLACE DEB ADDRESS IN DEB TABLE              *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                                                                     *
*    CONTROL-BLOCKS = DCB COPY, DEB, TCB, AND UCB.                    *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = ABEND, DEBCHK, GETMAIN, MODESET, AND XCTL                  *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                               YM08221
*                                                                     *
***********************************************************************
         EJECT
FORCORE  DSECT
         IECDSECT
TCB      IKJTCB
IHADEB   IGGDEBD
IHAUCB   DSECT
         ORG   IHAUCB+16                PARTIAL UCB DEFINITION   S20201
UCBTYPA  DS    C                        TYPE FIELD               S20201
UCBTYPB  DS    C                        TYPE FIELD               S20201
UCBTYPC  DS    C                        TYPE FIELD               S20201
UCBTYPD  DS    C                        TYPE FIELD               S20201
RPSFEAT  EQU   X'10'                    USED TO TEST UCBTYP+1    S20201
         DCBD  DSORG=(IS)
         EJECT
IGG0192A CSECT
DCBMOD   EQU   X'80'                                             S20201
SUBPOOL  EQU   230                      SUBPOOL ID FOR DEB       Y02072
LASTHALF EQU   4                                                 S20201
FULLWORD EQU   4                                                 S20201
WRTCHK   EQU   X'80'                                             S20201
TWO      EQU   2                                                 S20201
RPSPRIME EQU   X'80'                                             S20201
RPSINDEX EQU   X'40'                                             S20201
RPSOVFLO EQU   X'20'                                             S20201
* BITS IN DXCCW1+4 ARE                  B0= PRIME ON RPS
*                                       B1= INDEX ON RPS
*                                       B2= OVFLO ON RPS
R0       EQU   0                        WORK REGISTER
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDEB     EQU   1                        BASE REG FOR USERS DEB   S20201
RDCB     EQU   2                        BASE REG FOR DCB
RBASE    EQU   3                        BASE REG FOR THIS MODULE
RDSCB    EQU   4                        ADDRESS OF DSCB
RPAR     EQU   5    *                   ADDRESS OF PARAMETER TABLE
RWTG     EQU   6    *                   ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7    *                   ADDRESS OF CURRENT PARM ENTRY
RWTGC    EQU   8    *                   ADDRESS OF CURRENT WTG ENTRY
R9       EQU   9                        WORK REGISTER            S20201
R10      EQU   10                       WORK REGISTER            S20201
RUCB     EQU   10                       ADDRESS OF UCB
RA       EQU   11                       WORK REGISTER
RB       EQU   12                       WORK REGISTER
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RCORE    EQU   14                       BASE FOR OPEN WORK AREA  S20201
R15      EQU   15                       WORK REGISTER
CVTPTR   EQU   16                       OFFSET FOR COMMUN VECTOR TABLE
DSCB2ST  EQU   71                       DSCB STATUS BYTE         A27355
EXTLEN   EQU   16                      LENGTH OF A DA EXTENT     S20201
ZERO     EQU   X'00'                    TEST HIRPD FOR 0         A34976
SCAN     EQU   X'40'                    TEST SCAN                A34976
ONE      EQU   X'01'                    OFFSET OF 1              A34976
DSCBD8   EQU   54                       DSCB HIRPD               A34976
SETL     EQU   X'03'                    TEST FOR SETL K/I        Y02072
JFCBSHR  EQU   X'08'                    JFCB CODE FOR DISP=SHR  OY00679
READ     EQU   X'20'                    TEST MACRF, BISAM READ   Y02072
WRITE    EQU   X'20'                    TEST MACRF, BISAM WRITE  Y02072
         EJECT
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING IHADCB,RDCB              RDCB USED AS BASE OF DCB
         USING FORCORE,RCORE            RCORE USED AS BASE OF WORK AREA
CVTTCB   EQU   0                        CVT PTR TO TCB PTRS
TCBPTR   EQU   4                        PTR TO TCB
***********************************************************************
*                                                                     *
* DETERMINE SIZE OF DEB                                               *
*                                                                     *
***********************************************************************
         L     RDCB,0(RPARC)            RDCB = ADDRESS OF DCB
         SR    RA,RA                    CLEAR RA = PRIME CTR
         SR    RB,RB                          RB = INDEX CTR
         SR    RC,RC                          RC = OVFLO CTR
         L     RDSCB,4(RWTGC)           RDSCB = ADDRESS OF 1ST DSCB
         LR    RCORE,RDSCB              WORK AREA ADDRESS        S20201
*                                                                 13270
         STH   RC,DCBNBOV               CLEAR NBOV FLD FOR USE IN 13270
*                                                                 13270
         XC    DCBWKPT1(8),DCBWKPT1                              A42900
         XC    DCBWKPT5,DCBWKPT5                                 A42900
         MVI   DXCCW1+LASTHALF,ZERO     INIT RPS INDICATORS      S20201
*                                                                     *
* SCAN DSCB'S, COUNTING SEPARATELY THE NUMBER OF PRIME, INDEX, AND    *
*  OVERFLOW EXTENT ENTRIES                                            *
*                                                                     *
ISL00A3  LA    R0,3                     R0 = COUNT = 3 IF FORMAT 1
         LA    RF,DSCEXTYP-DXDSCB(RDSCB)    OFFSET FOR F1 DSCB   S20201
         MVC   DXCCW1(FULLWORD),DSCSCALO-DXDSCB(RDSCB)   PRIME   S20201
*                                       UCB                      S20201
*                                       TO DXCCW1
         L     RUCB,DXCCW1              GET UCB ADDRESS          S20201
         USING IHAUCB,RUCB                                       S20201
*
ISL00B2  TM    0(RF),X'01'              TEST IF PRIME
         BC    8,ISL00C2                NO
         LA    RA,1(RA)                 PRIME + 1
         TM    UCBTYPB,RPSFEAT          IS DEV=RPS               S20201
         BZ    ISL00E3                  BIF NOT RPS              Y02072
         OI    DXCCW1+LASTHALF,RPSPRIME INDICATE PRIME ON RPS    S20201
         B     ISL00E3                  BRANCH TO DECREMENT COUNTER
*
ISL00C2  TM    0(RF),X'04'              TEST IF INDEX
         BC    8,ISL00D2                NO
         LA    RB,1(RB)                 INDEX + 1
         TM    UCBTYPB,RPSFEAT          IS DEV=RPS               S20201
         BZ    ISL00E3                  BIF NOT RPS              S20201
         OI    DXCCW1+LASTHALF,RPSINDEX INDICATE INDEX ON RPS    S20201
         B     ISL00E3                  BRANCH TO DECREMENT COUNTER
ISL00D2  TM    0(RF),X'02'              TEST IF OVFLO
         BC    8,ISL00F4                NO
         LA    RC,1(RC)                 OVFLO + 1
         TM    UCBTYPB,RPSFEAT          IS DEV=RPS               S20201
         BZ    ISL00E3                  BIF NOT RPS              S20201
         OI    DXCCW1+LASTHALF,RPSOVFLO INDICATE OVFLO ON RPS    S20201
ISL00E3  BCT   R0,ISL00F3               DECREMENT COUNT
*
ISL00F4  CLI   0(RDSCB),X'F1'           TEST IF FORMAT 1
         BE    ISL00F41                 BRANCH = FORMAT 1
         LA    RDSCB,44(RDSCB)          EXTRA OFFSET IF NOT FORMAT 1
ISL00F41 L     RDSCB,96(RDSCB)          RDSCB=POINTER TO NEXT DSCB
         LTR   RDSCB,RDSCB              TEST IF ADDITIONAL DSCB'S
         BZ    ISL00E2                  BRANCH = NO
         LA    RF,0(RDSCB)              SET RF TO POINT TO NEXT DSCB
         CLI   0(RDSCB),X'F1'           TEST IF FORMAT 1
         BE    ISL00A3                  YES
         CLI   0(RDSCB),X'03'           TEST IF FORMAT 3 DSCB
         BNE   ISL00F4                  NO
ISL00H5  LA    R0,13                    FORMAT 3 - COUNT = 13
         LA    RF,4(RF)                            OFFSET = 4
         B     ISL00B2
ISL00F3  CH    R0,DECON9                COUNT = 9
         BNE   ISL00H3                  NO
ISL00J3  LA    RF,1(RF)                 COUNT=9, FORMAT=3
*
ISL00H3  LA    RF,10(RF)                ADVANCE EXTENT POINTER
         B     ISL00B2
*
*        DETERMINE THE NUMBER OF MODULES TO BE LOADED
*        BASED UPON MODE AND DESIRED FUNCTIONS
*
ISL00E2  EQU   *                                                 S20201
         LR    RUCB,RCORE               RESET WORKAREA BASE      S20201
         DROP  RUCB,RCORE                                        S20201
         USING FORCORE,R10              ESTABLISH NEW BASE       S20201
         SR    RD,RD                    INITIALIZE RD = MODULE   S20201
*                                       COUNTER                  S20201
         TM    DCBMACRF,X'40'           SCAN                     S20201
         BO    ISL00D11                 YES
         TM    DCBMACRF,X'20'           READ
         BO    ISL00E2A                 BRANCH YES
         TM    DCBMAC,X'04'             WRITE UPDATE
         BZ    ISL00E2B                 BRANCH NO
ISL00E2A LA    RD,1(RD)                 ADD 1
ISL00E2B TM    DCBMAC,X'02'             WRITE ADD
         BZ    ISL00E2C                 BRANCH NO
         LA    RD,2(0,RD)              ADD 2
ISL00E2C LTR   RD,RD                    COUNTER STILL ZERO
         BZ    ISL00E2D                 BRANCH YES
         LA    RDSCB,BISAMEXT           LEN OF BISAM EXTENSION   S21045
         TM    DCBMACRF,X'04'           DYNAMIC BUFF
         BZ    ISL00E2E                                           P4700
         LA    RD,1(RD)                 ADD 1
ISL00E2E TM    DCBMACRF,X'02'           TEST FOR BISAM CHECK      8M800
         BZ    ISL00D5                  BRANCH   TO ADD 3         23216
         LA    RD,1(RD)                 ADD 1 FOR CHECK           23216
         B     ISL00D5                                            23216
ISL00E2D EQU   *
         TM    DCBMACRF+1,X'40'         PUT/PUTX                 S20201
         BO    ISL00D1                  YES
ISL00C1  EQU   *
*  ABEND ERROR CODE OF 30 = MACRF INCORRECTLY SPECIFIED
*
         ABEND X'030',DUMP,,SYSTEM      SYSTEM 030 ABEND         Y02072
*
ISL00D1  TM    DCBMACRF+1,X'18'         MOVE/LOCATE              S20201
         BZ    ISL00C1                  NO, ERROR
         TM    JFCBIND2,JFCBSHR         LOAD WITH DISP=SHR      OY00679
         BO    ISL00F21                 YES, GO ABEND           OY00679
         LA    RD,2(0,RD)               NO, LOAD MODE ADD 2 TO MODULE
         LA    RDSCB,LOADEXT            LEN OF LOAD EXTENSION    S21045
         B     ISL00G2                  BR TO PROCESS DEB COUNT   P4701
* SCAN MODE
ISL00D11 EQU   *                        *                        A34976
         LA    RDSCB,SCANEXT            LEN OF SCAN EXTENSION    S21045
         TM    DCBMACRF+ONE,SETL        TEST FOR SETL - SETL K/I A34976
         BZ    ISL00D12                 NO
         LA    RD,2(RD)                 YES, ADD 2 MODULES
ISL00D12 TM    DCBMACRF+1,X'44'         PUTX
         BZ    ISL00F2                  NO
ISL00D5  EQU   *
         LA    RD,1(RD)                 YES, ADD 1 MODULE
ISL00F2  LA    RD,2(RD)                 YES, ADD 2 MODULE
         L     RF,DSCCORE               TEST HIRPD               S20201
         TM    DSCB2ST(RF),X'20'        WAS LOAD SUCCESSFUL      A27355
         BZ    ISL00F21                 UNSUCCESSFUL, ISSUE 03B  A34976
         TM    DCBMACRF,SCAN            SCAN?                    A34976
         BO    ISL00G2                  YES                      A34976
         CLI   DSCBD8(RF),ZERO          DSCB HIRPD = 0           A34976
         BNE   ISL00G2                  NO, LOAD SUCCESSFUL      A34976
ISL00F21 EQU   *                        *                        A34976
         ABEND X'03B',DUMP,,SYSTEM      ISSUE ABEND              Y02072
*                                                                     *
* CORE REQUIREMENTS FOR DEB = 16(FOR PREFIX) + 32(FOR BASIC SECTION)  *
*  +2(NO. OF MODS)+16(NO. OF EXTENTS+1)+DEB EXTENSION
*    DEB EXTENSION LEN DEPENDS ON LOAD, SCAN, BISAM
*
ISL00G2  EQU   *                        GET CORE FOR DEB         S20201
         TM    DXCCW1+LASTHALF,RPSINDEX+RPSPRIME+RPSOVFLO        S20201
*                                       ARE EITHER INDEX, PRIME OR
*                                       OVERFLOW ON RPS
         BZ    ISL00F5                  BIF NONE ON RPS          S20201
         LA    RD,ONE(RD)               BUMP MODULE COUNT FOR AN S20201
*                                       RPS SIO APPENDAGE        S20201
ISL00F5  EQU   *                                                 S20201
         LR    RF,R10                   WORK AREA ADDRESSABILITY Y02072
         DROP  R10
         USING FORCORE,RF               EST OPEN WA ADDR         Y02072
         L     R10,CVTPTR
         L     R10,CVTTCB(R10)          *
         L     R10,TCBPTR(R10)          TCB ADDRESSABILITY
         USING TCB,R10                  *
         TM    TCBFLGS6,TCBRV           IS IT VIRTUAL
         BO    NOTVIRT                  NO - REAL
*                                       YES - TEST FOR BISAM     Y02072
         TM    DCBMACF1,READ            BISAM READ               Y02072
         BO    INCRID                   YES - BR                 Y02072
         TM    DCBMACF2,WRITE           BISAM WRITE              Y02072
         BZ    RPSTEST                  NO - BR                  Y02072
*                                       YES - IS VIRTUAL AND     Y02072
INCRID   EQU   *                        BISAM, ALLOW FOR CHANNEL Y02072
         LA    RD,ONE(RD)               PGM SPLITTING APPENDAGE
         B     NOTVIRT                  GET CORE FOR DEB         Y02072
RPSTEST  TM    DXCCW1+LASTHALF,RPSINDEX+RPSPRIME+RPSOVFLO  RPS   Y02072
         BZ    INCRID                   BR NO TO INCR. NO. RTNS  Y02072
         DROP  RF                       END OPEN WA ADDR         Y02072
NOTVIRT  EQU   *                        *
         LA    RE,SUBPOOL               DEB FROM SUBPOOL 230     Y02072
         SLL   RE,24
         LA    RF,1(RA)                 TOTAL NO. OF EXTENTS
         AR    RF,RB                    PRIME + INDEX + OVFLO + 1
         AR    RF,RC                         X 16  + 2(NO.MOD)
         SLL   RF,3
         AR    RF,RD
         SLL   RF,1
         LA    R9,68(RF,RDSCB)                                   S21045
*              PREFIX=16,BASIC=32,VECTBL=20,+EXTENSION
         OR    RE,R9
         SLL   RDSCB,16                 PACK EXTENSION LEN AND   S21045
         OR    RDSCB,RD                 NO. OF SUBS. FOR SAVING  S21045
*
         GETMAIN R,LV=(0)
         USING IHADEB-36,RDEB                                    S21045
         LR    RD,RDSCB                 RESTORE REG14            S20201
         SRL   RDSCB,16                 UNPACK DEB EXTENSION LEN S21045
*                                                                     *
* CLEAR DEB CORE & COMPLETE PREFIX AND BASIC SECTIONS OF DEB
*                                                                     *
*
         L     RDSCB,LASTHALF(RWTGC)    RDSCB = ADDR OF WORK    ZA00123
*                                       AREA                    ZA00123
         USING FORCORE,RDSCB            SET NEW WKAREA BASE     ZA00123
         STM   R10,RC,DXCCW5            STORE REGS10-13         ZA00123
         LR    R10,RF                   C(R10) =DEB AREA PTR    ZA00123
         LR    RA,R9                    C(R11) = LENGTH OF DEB  ZA00123
         SR    RB,RB                    CLEAR REG12             ZA00123
         SR    RC,RC                    CLEAR REG13             ZA00123
         MVCL  R10,RB                   ZERO COMPLETE DEB       ZA00123
         LM    R10,RC,DXCCW5            RESTORE REGS10-13       ZA00123
         LA    RE,7(R9)                 RE=LENGTH OF DEB IN DOUBLE WDS
         SRL   RE,3                     DIVIDE BY 8
         STC   RE,32(RF)                FILL IN DEBLNGTH
         MVC   23(5,RF),DXCCW7          SAVE   CCHHR OF FORMAT 1 DSCB
         MVC   22(1,RF),DSCSCALO         MOVE  BB
         MVC   28(4,RF),DXDEBXAD        SET UP DEB EXT POINTER @ZA10784
         ST    RF,64(RF)                SET UP APPAD
         LA    RDEB,36(RF)              RDEB POINTS TO BASIC
         USING IHADEB,RDEB                                       S21045
         ST    RDEB,DCBDEBAD
         MVI   DEBEXSCL,X'04'           EXTENT LENGTH = 16
         ST    R10,DEBTCBAD             FILL DEBTCBAD
         STC   RD,DEBNMSUB              FILL DEBNMSUB = NO.OF MODULES
         STM   RPAR,RWTG,DXCCW5         SAVE REGS 5 AND 6        Y02072
ISL00J1  EQU   *                        ADD DEB TO QUEUE         Y02072
         L     RPAR,TCBDEB              FIRST DEB ON QUEUE       Y02072
         MVC   DEBDEBAD+1(3),TCBDEB+1   FILL DEBDEBAD
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=6  SET PROTECT KEY ZERO   Y02072
         SPACE 1
         CS    RPAR,RDEB,TCBDEB         ADD NEW DEB IF HEAD OF   Y02072
*                                       DEB QUEUE NOT CHANGED    Y02072
         SPACE 1
         MODESET  EXTKEY=DATAMGT        SET DATA MGT KEY         Y02072
         SPACE 2
         BNE   ISL00J1                  BR NOT ADDED TO CHAIN    Y02072
*
         LM    RPAR,RWTG,DXCCW5         RESTORE REGS 5 AND 6     Y02072
         LA    RE,1(RA)                 ADD 1 EXTENT FOR M=0  + PRIME
         AR    RE,RB                    ADD INDEX EXTENTS
         AR    RE,RC                    ADD OVERFLOW EXTENTS
         STC   RE,DEBNMEXT              FILL DEBNMEXT = NO OF EXTENTS
         LR    R10,RE                   MOVE FROM REG ZERO       S21045
         SLL   R10,4                     NO. OF EXT'S X 16       S21045
         LA    RE,DEBUCBAD(R10)         AM SECTION STARTS AFTER  S21045
*                                       LAST                     S21045
*                                       EXTENT.
         ST    RE,DEBEXPTR              POINT TO AM SECTION      S21045
         L     RDCB,DXUDCBAD            USERS DCB ADDR           Y02072
         ST    RDCB,DEBDCBAD            FILL DEBDCBAD
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=10  CHANGE TO USER KEY  Y02072
         SPACE 2
*   ISSUING THE DEBCHK MACRO DESTROYS THE CONTENTS OF REGISTER 1,
*   BUT SINCE DEBCHK LOADS REGISTER 1 WITH THE DEB ADDRESS BEFORE
*   RETURNING TO THE CALLER, DEB ADDRESSABILITY IS REESTABLISHED.
*
         L     R10,DEBTCBAD             RESTORE TCB ADDRESS
         ST    RDEB,DCBDEBAD            DEB ADDR TO USER DCB     Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         DEBCHK (RDCB),TYPE=ADD,AM=ISAM ADD DEB TO DEB TABLE     Y01021
*
         L     RDCB,0(RPARC)            ADDR OF DCB COPY         Y02072
         MVC   DEBOPATB(1),0(RPARC)     1ST  POS OF PARATBL ENTRY
         NI    DEBOPATB,X'7F'           CLEAR HI ORDER BIT
         MVC   DEBPROTG(1),TCBPKF       PROTECTION FLAG           13270
         OI    DEBDEBID,X'0F'
         MVC   DEBPRIOR(1),TCBDSP       PRIORITY                  13270
         MVI   DEBOFLGS,X'C0'
         L     RCORE,4(RWTGC)
         NC    DEBOFLGS,JFCBIND2
*
*
*    COMPLETE FIRST THREE ENTRIES OF APPENDAGE VECTOR TABLE FOR BISAM
*
         DROP  R10
         L     R10,16(0,0)             GET CVT POINTER
         L     R15,20(R10)              R10 = CVT ADDRESS
         L     R15,0(0,R15)            R15 HAS CONTENTS OF 1ST SLOT
*                                      OF IOS APPENDAGE VECTOR TABLE
         L     R10,DEBAPPAD             R10= APPENDAGE VECTOR TABLE ADR
         ST    R15,0(R10)               STORE IOS ADDRESS FOR END IF
         ST    R15,8(R10)                 PCI
         ST    R15,12(R10)                  CHANNEL END AND
         ST    R15,16(R10)                     ABNORMAL END APPENDAGES
         USING DEBAVT,R10               DEB AVT ADDRESSABILITY   Y02072
         LH    RD,PGFIXCON              ESTABLISH BR 14 FOR SIO  Y02072
         STH   RD,DXATEXC1              AND PAGE FIX EXITS TAKEN Y02072
         STH   RD,DXATEXC2              BY IOS                   Y02072
         LA    RD,DXATEXC1              ADDR OF BR 14S TO        Y02072
         ST    RD,DEBSIOA               DEBSIOA FIELD OF DEB AVT Y02072
         DROP  R10                      END DEB AVT USING        Y02072
*
***  THE SECONDARY ALLOCATION FIELD IN DSCB FORMAT 1 WILL   ***
***   HAVE BEEN SET TO UCB ADDRESS IN A PRE-ISAM OPEN EXECUTOR   ***
***   ASSUMING FORMAT 2 DSCB FOLLOWS FIRST FORMAT 1 DSCB   ***
         MVC   DCBWKPT3(5),DSCNEXT      DCBWKPT3=CCHH OF DSCB FORMAT 2
         MVC   DCBWKPT4+1(3),DSCSCALO+1 DCBWKPT4=R(OF DSCB FORMAT 2)
*                                         AND UCB ADR OF DSCB FORMAT 2
*
* USING CONTENTS OF REG A, B AND C, BUILDING M=0 EXTENT
*
         LA    RD,DEBUCBAD+EXTLEN      FIND M=1 EXTENT ADDR      S20201
         ST    RD,DEBFPEAD              SET UP PTR DEBFPEAD
         ST    RD,DXCCW8                SAVE PTR TO PRIME ENTRIES 13270
*                                       FOR USE IN 192B           13270
         STC   RA,DEBNPEE               SET UP CTR = NO PRIME EXTENTS
         MVC   DEBRPSID,DXCCW1+LASTHALF SET RPS INDICATORS       S20201
         SLL   RA,4                     MPY NO PRIME EXTENTS BY LENGTH
         AR    RD,RA                    INCREMENT PTR TO 1ST PRIME EXT
         LTR   RB,RB                    TO POINT TO 1ST INDEX EXTENT
         BZ    ISL00K21                 BRANCH = NO INDEX EXTENTS
         ST    RD,DEBFIEAD              SET UP ADR OF 1ST INDEX EXTENT
         ST    RD,DXCCW8+4              SAVE PTR TO INDEX ENTRIES 13270
*                                       FOR USE IN 192B           13270
         STC   RB,DEBNIEE               SET UP CTR = NUM INDEX EXTENTS
ISL00K21 SLL   RB,4                     MPY NUM INDEX EXTENTS BY LENGTH
         LTR   RC,RC                    TEST IF OVERFLOW ENTRIES
         BZ    ISL00K3                  BRANCH = NO OVERFLOW EXTENTS
         AR    RD,RB                    INCREMENT PTR TO 1ST INDEX EXT
         ST    RD,DEBFOEAD              TO POINT TO OVFLO EXTENT
         ST    RD,DXCCW9                SAVE PTR TO OVFLO ENTRIES 13270
*                                       FOR USE IN 192B           13270
         STC   RC,DEBNOEE               SET UP OVFLO PTR AND CTR
*
* COMPLETE DEB, SET BLOCKSIZE
*
ISL00K3  TM    DCBRECFM,X'10'           TEST IF BLOCKED
         BC    1,ISL01D5                YES
****************************************************************
*     IF VARIABLE BLKSIZE=LRECL+4
*
         LH    RB,DCBLRECL              GET RECORD LENGTH         VLR
         TM    DCBRECFM,X'80'           ARE RECORDS FIXED LENGTH  VLR
         BO    ISLFIXUB                 YES, BRANCH               VLR
         LA    RB,4(RB)                 GET RECORD DESCRIPTOR     VLR
ISLFIXUB STH   RB,DCBBLKSI                                        VLR
*
****************************************************************
ISL01D5  CLI   DEBNPEE,X'00'            AT LEAST 1 PRIME EXTENT
         BC    7,ISL01E4                YES
*  ABENDT ERROR CODE OF HEX 36 = NO PRIME EXTENT ENTRIES
         ABEND X'036',DUMP,,SYSTEM      ISSUE ABEND              Y02072
ISL01E4  EQU   *                                                 S20201
*
*
         MVC   0(L'LOAD2B,RWTGC),LOAD2B INITIALIZE WHERE-TO-GO   Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    R15,DXCCW12                                       S20201
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
* CONSTANTS
DEBCLEAR XC    0(0,RF),0(RF)            CLEAR CORE FOR DEB      YM08221
DECON9   DC    X'0009'
THISLOAD DC    C'2A'
OPNLOD7  DC    C'0S'
         DS    0F                       FULLWORD ALIGNMENT       Y02072
PGFIXCON DC    X'07FE'                  PAGE FIX RET TO IOS      Y02072
KEY0     DC    X'00'                    STORAGE PROTECT KEY ZERO Y02072
*
LOAD2B   DC    C'2B'                    ID OF MODULE IGG0192B    Y02072
*
PATCH    DC    XL((*-IGG0192A)/20)'00'  ZEROED PATCH AREA        Y02072
         END
