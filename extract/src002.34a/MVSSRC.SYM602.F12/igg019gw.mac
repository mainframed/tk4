         TITLE 'IGG019GW - ASYNC ROUTINES  COMBINED WITH WRT CHK'
IGG019GW CSECT
*
*          RELEASE OS/VS2-02 DELETIONS                           Y02072
*                                                               YM01347
*        OS/VS2 RELEASE 3 CHANGES
*  A437900                                                      ZA01385
*  A748400-748720,C765900                                       ZA00956
*          CHANGES SINCE VS2-3.7                                      *
*A098400-098700,A897100-897110                                 @ZA26522
*          RELEASE 21 DELETIONS/CHANGES
*1253119700,143100,184500,205200,456300,604800,711000,745200,    A41652
*1253787500,800100,806400,844200,848700                          A41652
*1253504000,507600                                               A42240
*1253275400                                                      A43886
*1253171900,615600,714600,763200,795600,872100                   S21045
*1253885600,889200                                               A33533
*1253                                                            M1792
*XXXX204600                                                      A48664
*1253415800                                                      A50698
*1253198000                                                      A51488
*1253198000                                                      A51488
*1253199760                                                      A53751
*A205000                                                         A57232
*
*          RELEASE 20 DELETIONS/CHANGES
*0713194400-196200,203400-204300                                 M6132
*                                                                S20201
*
*
*
*STATUS CHANGE LEVEL 011
*
* THIS MODULE WAS REWRITTEN IN RELEASE 20.2 TO
* UTILIZE CHANNEL PROGRAM AND WORK AREA
* MACRO EXPANSIONS
*
* FUNCTION/OPERATION  ASYNCHRONOUS ROUTINE FOR BISAM WRITE KN
*        WITH    READ AND UPDATE WHEN WRITE VALIDITY CHECKING IS
*        REQUESTED.
*       WRITE KN
*        CP14W IS INITIALIZED TO ADD A RECORD TO AN OVERFLOW CHAIN AND
*        SET THE INDICES AND LINK FIELDS RELATING TO THAT RECORD.
*        UPON COMPLETION OF THE LAST CP NEEDED TO ADD A RECORD TO THE
*        DATA SET, COMPLETION IS POSTED AND THE NEXT IOB AWAITING
*        THIS COMPLETION (IF ANY) IS SCHEDULED.  (R=U IF NO WRITE KN)
*       READ AND UPDATE
*        UPON COMPLETION OF CP1 OR CP2, THE NEXT IOB AWAITING THE CP
*        (IF ANY) IS SCHEDULED AND, IF COMPLETION WAS SUCCESSFUL, CP4-
*        CP5 IS SCHEDULED FOR THE IOB FOR WHICH CP1 OR CP2 JUST
*        COMPLETED. IF UNSUCCESSFUL, COMPLETION IS POSTED.
*        UPON COMPLETION OF CP5, CP6 OR CP7, THE NEXT IOB AWAITING THE
*        CP (IF ANY) IS SCHEDULED AND COMPLETION IS POSTED FOR THIS IOB
*        IF NO MORE READ AND UPDATE REQUESTS ARE MADE, THE FIRST
*        WRITE KN MACRO (IN ANY) IS SCHEDULED.
* INPUT - N/A
* OUTPUT - N/A
* ENTRY POINT' REL POS 0
* EXTERNAL ROUTINES
*        CP1 OR CP2, CP4 AND CP5, AND CP7 ARE INITIALIZED AND CP4-CP5-
*        CP6 REMOVED FROM THE CP QUEUE IN SUB-ROUTINES WITHIN THE
*        PRIVILEGED MACRO-TIME ROUTINE.
*        THE FIRST CHANNEL PROGRAM NEEDED FOR A WRITE KN MACRO IS
*        SELECTED AND INITIALIZED BY A SUB-ROUTINE WITHIN THE
*        PRIVILEGED MACRO-TIME ROUTINE.
*        WHEN ALL WRITE KN MACROS ARE COMPLETE, THE PENDING READ AND
*        UPDATE MACROS ARE SCHEDULED OR ARE REPLACED ON THE UNSCHEDULED
*        QUEUE ACCORDING TO THE CHANNEL PROGRAM EACH AWAITS BY A SUB-
*        ROUTINE WITHIN THE PRIVILEGED MACRO-TIME ROUTINE.
*        ENTRY POINT NAMES ARE
*        DISCP45 - INITIALIZE CP4 AND CP5
*        DISCP7  - INITIALIZE CP7
*        DISCPS  - INITIALIZE CP1 OR CP2
*        DISCPWKN- INITIALIZE WKN CP
*        DISPRIV - SCHEDULE OR RE-QUEUE READ AND UPDATE CP'S
*        SEE THE DSECT LABELED IHADIS FOR THE RELATIVE ADDRESSES OF THE
*        ENTRY POINTS OF THESE ROUTINES.  THE POINTER TO THE PRIVILEGED
*        MACRO-TIME ROUTINE IS IN DEBDISAD (SEE DEB DSECT).
*                    THE DYNAMIC BUFFERING ROUTINE WHICH FREES A BUFFER
*        UPON COMPLETION OF A WRITE K MACRO IS ENTERED VIA 'BUFASYN'.
*        SEE THE DSECT LABELED IHABUF FOR THE RELATIVE ADDRESS OF THE
*        ENTRY POINT OF THIS ROUTINE.  THE POINTER TO THE DYNAMIC
*        BUFFERING MODULE IS IN DCBFREED (SEE DCB DSECT).
* EXITS' RETURN TO SUPERVISOR VIA REGISTER 14.
* TABLES/WORK AREAS' DECB, DCB, IOB AND EXTENTION, DCB WA (DCW), DEB
*        SEE DSECTS AT END OF MODULE FOR FORMAT AND DESCRIPTIONS
* ATTRIBUTES' REENTRANT.  DISABLED UPON ENTRY AND EXIT.  ENABLED AT
*        VARIOUS POINTS WITHIN THE MODULE.
* NOTES - NONE
* GENERAL REGISTERS ARE USED AS FOLLOWS
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        12 STAR ON ENTRY, THEN IOB
R2       EQU   2                        DECB
R3       EQU   3                        WKN USED FOR WORK REG OR DEB
*                                        R+U USED BASE REGISTER
R4       EQU   4                        DCB
R5       EQU   5                        CHANNEL PROGRAMS
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
R8       EQU   8                        WORK REGISTER OR DCB WA
R9       EQU   9                        WORK REGISTER
R10      EQU   10                       WORK REGISTER
R11      EQU   11                       WORK REGISTER
R12      EQU   12                       WORK REGISTER OR DISABLE RTN
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       RETURN ADDRESS
R15      EQU   15                       BASE ON ENTRY
*                                        R+U USES AS WORK REGISTER
SHR      EQU   X'80'                    TEST FOR SHR DATA SET    Y02072
K0       EQU   0                                                 S20201
K1       EQU   1                                                 S20201
K2       EQU   2                                                 S20201
K3       EQU   3                                                 S20201
K4       EQU   4                                                 S20201
K5       EQU   5                                                 S20201
K6       EQU   6                                                 S20201
K7       EQU   7                                                 S20201
K10      EQU   10                                                S20201
         SPACE 2
         USING RQE,R1                   RQE ADDRESSABILITY       Y02072
         USING IHADECB,2
         USING IHADEB,3
         USING IHADCB,4
         USING IHAWKNCP,5
         USING IHADCW,8
         USING ASYNCH,15
         SPACE 2
ASYNCH   EQU   *
         L     R3,RQEDEB                PROTECTED DEB ADDR       Y02072
         IC    R2,RQEPRT                CALLERS PROTECT KEY      Y02072
         DROP  R1                       END USING ON RQE         Y02072
         LR    R9,R1                    SAVE RQE ADDR            Y02072
         L     R0,SP230                 CORE SIZE AND SUBPOOL    Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        GET CORE IN DATAMGT KEY  Y02072
         SPACE 2
         LR    R5,R15                   SAVE BASE ADDR           Y02072
         GETMAIN  R,LV=(0)              GET SAVE AREA            Y02072
         LR    R15,R5                   RESTORE BASE ADDR        Y02072
         USING IGGSAVE,R1               SAVEAREA ADDRESSABILITY  Y02072
         XC    IGGSAVE(IGGSIZE),IGGSAVE  CLEAR CORE              Y02072
         ST    R14,IGGRETRN             SAVE RETURN ADDR         Y02072
         LR    R14,R1                   SAVE AREA ADDR           Y02072
         USING IGGSAVE,R14              NEW ADDRESSABILITY       Y02072
         ST    R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         STC   R2,IGGUKEY               REQUESTORS KEY           Y02072
         USING RQE,R9                   RQE ADDRESSABILITY       Y02072
         L     R1,RQEIOB                IOB ADDRESS              Y02072
         USING IHAIOB,R1                IOB ADDRESSABILITY       Y02072
         DROP  R9                       END USING ON RQE         Y02072
*
         BAL   R11,GETLOCK              OBTAIN LOCAL LOCK, RTRN  Y02072
*                                       IN USER PROTECT KEY      Y02072
         L     R2,IOBECBAD              R2   DECB
         L     R4,IOBDCBAD-1            R4 DCB POINTER
         L     R5,IOBCCWAD              R5   CP
         XC    DCBPUTX,DCBPUTX          CLEAR DECB SAVE AREA     A41652
         SR    R9,R9                    R9   ASYNCH CODE TIMES 4
         IC    R9,IOBASYN
         CH    R9,FOURTEEN              IS ASYN CODE GT 14?    @ZA26522
         BH    INVASYCD                 IF YES-GO PROG CHK     @ZA26522
         SLL   R9,2
ASYLDC2  B     ASYTAB1(R9)
         EJECT
CONF8    DC    X'F8F8'
ASYTAB1  B     ASYASB2                  CODE 0    COMPLETE CP4-5-6 OK
         B     ASYLDD3                        1   EXCP
         B     ASYASB1                  CODE 2    COMPLETE CP7 OK
         B     ASYAUB2                  CODE 3    COMPLETE CP1 OR 2 OK
         B     ASYASE5A                 CODE 4    COMPLETE CP4-5-6 ERR
         B     ASYLDC2                        5   INVALID
         B     ASYASE5A                 CODE 6    COMPLETE CP7 ERR
         B     ASYAUB2                  CODE 7    COMPLETE CP1/2 ERR
         B     ASYLAB1                        8   END WRITE KN MACRO
         B     ASYL4B2                        9   CP14 PRIME REC BUMPED
         B     ASYL5B2                       10   CP14 ADD TRK AT END
         B     ASYL8B2                       11   CP14 ADD END, OVERFLO
         B     ASYL7B2                       12   CP14 MIDDLE VRFL CHN
         B     ASYL6B2                       13   CP14 AT BEG OF VRFLCH
         B     ASYL9B2                       14   CP14 NEW REPLACE DEL
         EJECT
*              EXECUTE CHANNEL PROGRAM
ASYLDD3  BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
         EJECT
***********************************************************************
*********   WRITE KN                                         **********
***********************************************************************
         USING IHADCW,R8
         USING IHAWKNCP,R5
*              CHART LA                  COMPLETION OF W KN, CODE 8
ASYLAB1  LR    R9,R15                   SAVE BASE REG
         USING IGG019GW,R9                                       S20201
         DROP  R15                                               S20201
         LA    R7,4                                               P4700
         B     ASYASE5B                 TEST FOR ERROR ROUTINE    P4700
         DROP  R3                                                S20201
ASYASE60 LR    R0,R1                    R0= IOB ADDR             S20201
*
         BAL   R1,FREEIOB               FREE IOB CORE            Y02072
*
ASYASE61 EQU   *                                                 A41652
         ST    R2,DCBPUTX               DECB TO BE POSTED        A41652
         L     R12,IGGPDEB              VALIDATED DEB ADDR       Y02072
         LR    3,12       RESTORE  DEBADR.                        P4700
         USING IHADEB,R3                                         S20201
         LR    R15,R9                   RESTORE BASE REG
         USING IGG019GW,R15                                      S20201
         DROP  R9                                                S20201
         L    R8,DCBWKPT2
         CLI   DCWNUWKN,X'00'            AND IF   MORE IOBS FOR W KN,
         BNE   ASYAWF2                   BRANCH TO FIND NEXT
         BAL   R6,ASYLAE4Q              POST FIELD AREA          A53751
ASYLAD3  NI    DCWWKNI,X'7F'            OTHERWISE, SET W KN NOT IN PROC
ASYLAE3  L     R1,DCWFIOBU              R1   NEXT IOB ON QUEUE
         USING IHAIOB,R1                                         S20201
ASYLAE1  LTR   R1,R1
         BE    ASYFINIS                 BRANCH TO RETURN IF NONE A53751
         TM    IOBUNSQR,X'08'           IF REASON ON Q NOT W KN GOING
         BO    ASYLAF1                   ON OR WAITING, GET NEXT IOB
         L     R1,IOBFCHAD               AND BRANCH BACK
         B     ASYLAE1
ASYLAF1  L     R6,IOBBCHAD              IF REASON ON Q IS W KN GOING ON
         LTR   R6,R6                     OR WAITING, REMOVE IOB FROM Q,
         BZ    ASYLAF11
         MVC   IOBFCHAD-IHAIOB(4,R6),IOBFCHAD
         B     ASYLAF12
ASYLAF11 MVC   DCWFIOBU,IOBFCHAD
ASYLAF12 L     R6,IOBFCHAD
         LTR   R6,R6
         BZ    ASYLAF13
         MVC   IOBBCHAD-IHAIOB(4,R6),IOBBCHAD
         B     ASYLAF2
ASYLAF13 MVC   DCWLIOBU,IOBBCHAD
ASYLAF2  L     R2,IOBECBAD              R2  ADDR OF DECB FOR NEW IOB
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12                 UP CP1,CP2,CP4-5-6, OR CP7
         BAL   R13,DISPRIV               BRANCH TO THE ROUTINE
         TM    DECBEXC1,X'80'            IF RECORD FOUND
         BO    ASYLAE3
         TM    IOBINDCT,X'40'             AND IOB SCHEDULED
         BO    ASYLAE3
         OI    IOBINDCT,X'40'           LEAVE IOB UNSCHED SO THAT 24981
*        NON-PRIV M-TIME MODULE WON'T ISSUE AN EXCP ALSO.
         BAL   R13,SUBROUT1
         B     ASYLAE3                   BRANCH BACK FOR NEXT IOB
ASYLAE4  EQU   *                                                 A35340
         LA    R6,ASYFINIS              RETURN ADDRESS
ASYLAE4Q EQU   *                        *
         L     R8,IGGPDEB               VALIDATED DEB ADDR       Y02072
         USING IHADEB,R8                DEB ADDRESSABILITY       Y02072
         L     R8,DEBEXPTR              ADDR DEB EXTENSION       Y02072
         USING DEBEXT,R8                EXT ADDRESSABILITY       Y02072
         TM    DEBDCBFA,SHR             DISP EQ SHARE            Y02072
         BZ    MERGDONE                 BR IF NOT SHARED         Y02072
         L     R8,DEBDCBFA              ADDR OF FIELD AREA       Y02072
         USING DCBFA,R8                 FA ADDRESSABILITY        Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         LR    R9,R15                   SAVE BASE ADDRESS        Y02072
         LR    R3,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END SAVE AREA USING      Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11  CHANGE TO KEY ZERO    Y02072
         SPACE 2
**********************************************************************
*        OBTAIN CMS LOCK.  FREED AT FCMS1.                           *
**********************************************************************
         SPACE 2
GCMS1    SETLOCK  OBTAIN,TYPE=CMS,MODE=UNCOND,  OBTAIN CROSS     Y02072*
               RELATED=(DCBFA,IGG019GW(FCMS1)) MEMORY SRVCES LCK Y02072
*
         LR    R15,R9                   RESTORE BASE ADDR        Y02072
         USING IGGSAVE,R3               SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 1
         L     R2,DCBRORG3              ACCESSES TO OVRFLOW RCD  Y02072
         SPACE 1
         MODESET EXTKEY=DATAMGT         CHANGE TO DATA MGT KEY   Y02072
         SPACE 1
         ST    R2,DFARORG3              DCBRORG3 TO FIELD AREA   Y02072
         SPACE 1
         MODESET  KEYADDR=IGGUKEY,WORKREG=2  CHANGE TO USER KEY  Y02072
         SPACE 2
         L     R2,DCBPUTX               DECB ADDRESSABILITY      Y02072
         USING IHADECB,R2               DECB                     Y02072
         SPACE 2
**********************************************************************
*    MERGE ALL FIELDS IF WRITE KEY NEW - SELECTIVE MERGE FOR READS.  *
**********************************************************************
         SPACE 2
         TM    DECBTYP2,DECBWKN         IS IT A WRITE KN         Y02072
         BZ    ENDMERGE                 BR IF NOT WRITE KN       Y02072
         SPACE 2
         L     R1,DCBNREC               NO. PRIME DATA RECORDS   Y02072
         IC    R2,DCBST                 DCB STATUS IND           Y02072
         LH    R5,DCBNBOV               BYTES ON OVRFLOW TRK     Y02072
         LH    R9,DCBNOREC              NO RECDS IN OVRFLOW      Y02072
         LM    R6,R7,DCBLIOV            LAST IND OVRFLOW ADDR    Y02072
         LH    R10,DCBRORG1             FULL CYL OVRFLOW AREAS   Y02072
         SLL   R10,16                   SHIFT TO HIGH ORDER POS  Y02072
         LH    R11,DCBRORG2             FREE TRKS IND OVRFLOW    Y02072
         OR    R10,R11                  DCBRORG1 AND DCBRORG2    Y02072
         LM    R11,R12,DCBLPDA          LAST PRIME RCD ADDR      Y02072
         SPACE 2
*        STORE DCB FIELDS IN FIELD AREA                          Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         ST    R1,DFANREC               DCBNREC                  Y02072
         STC   R2,DFAST                 DCBST                    Y02072
         STH   R5,DFANBOV               DCBNBOV                  Y02072
         STH   R9,DFANOREC              DCBNOREC                 Y02072
         STM   R6,R7,DFALIOV            DCBLIOV                  Y02072
         ST    R10,DFARORG1             DCBRORG1 AND DCBRORG2    Y02072
         STM   R11,R12,DFALPDA          DCBLPDA                  Y02072
ENDMERGE LR    R9,R15                   SAVE BASE ADDR           Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11  CHANGE TO KEYZERO     Y02072
         SPACE 2
**********************************************************************
*        RELEASE CMS LOCK.  WAS OBTAINED AT GCMS1.                   *
**********************************************************************
         SPACE 2
FCMS1    SETLOCK  RELEASE,TYPE=CMS,     RELEASE CMS LOCK         Y02072*
               RELATED=(DCBFA,IGG019GW(GCMS1))                   Y02072
         LR    R15,R9                   RESTORE BASE ADDR        Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         DROP  R3                       END USING ON SAVE AREA   Y02072
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
MERGDONE EQU   *                        MERGE FINISHED           Y02072
         L     R8,DCBWKPT2              RESTORE WA PTR           A57232
         BR    R6                       RETURN VIA EXIT          A53751
         EJECT
         USING IHADCW,R8                                         A35340
         USING IHADEB,R3                DEB ADDRESSABILITY       Y02072
*              SUB-ROUTINE CHARTS L2-L3
*              USE 1 ENTRANCE
ASYL2A2  TM    IOBINDCT,X'20'
         BO    ASYL2B1
         TM    CH8E+4,X'80'            TEST IF UNBL,PRIME REC     17332
*                                       BUMPED                    17332
         BO    ASYL2C3                  BRANCH IF YES             17332
         XC    DECBLOGR,DECBLOGR        RECORD IS IN DECB AREA
         L     R6,DECBAREA              R6   ADDRESS OF LINK (NOT ZERO)
         LA    R6,6(R6)                 R7   ADDRESS OF KEY
         TM    IOBINDCT,X'10'
         BO    ASYL2A4
         L     R7,DECBKEY
         B     ASYL2C2
ASYL2A4  L     R7,DCBMSWA
         LA    R7,8(0,R7)
         B     ASYL2C2
ASYL2B1  L     R7,DCBMSWA
ASYL2B2  SR    R6,R6                                              17332
         IC    R6,DCBKEYLE
         AR    R6,R7
         MVC   DECBLOGR,DCBMSWA
ASYL2C2  MVC   0(10,R6),CB25            LINK PER R6 FROM CB25
         B     ASYL2D2
ASYL2C3  L     R7,CH6+4                KEY ADDR OF OVFL REC       17332
         B     ASYL2B2                                            17332
*              USE 2 ENTRANCE
ASYL2D1  SR    R6,R6                    R6   ZERO
ASYL2D2  TM    DCBOPTCD,X'08'           DETERMINE WHICH OVERFLOW AREA
         MVI   CB53+4,X'00'             CLEAR EOF SW. IN CP10B    13270
         BZ    ASYL2E3                   TO USE IF ANY AVAILABLE. TRY
         CLI   CB22+5,X'00'              CYLINDER AREA BEFORE INDEPEN-
         BNE   ASYL2H2                   DENT AREA.
ASYL2E3  TM    DCBOPTCD,X'10'
         BZ    ASYL2E4
         LH    R10,DCBRORG2             TEST INDEPENDENT AREA FULL.
         LTR   R10,R10
         BNE   ASYL3C1
ASYL2E4  OI    DECBEXC1,X'20'
         TM    IOBINDCT,X'20'           BRANCH IF THE RECORD FOR WHICH
         BO    ASYL2E5                   THERE IS NO SPACE IS IN W.
         TM    IOBINDCT,X'10'           RECORD IS IN DECB AREA.
         BZ    ASYL2E5                  BRANCH IF THE KEY IS IN DECBKEY
         SR    R11,R11                  IF NOT, MOVE IT FROM W TO THE
         IC    R11,DCBKEYLE              DECB KEY AREA.  THIS IS
         BCTR  R11,0                     NECESSARY SO THAT THE USER
         L     R6,DECBKEY                WILL KNOW WHERE TO FIND THE
         EX    R11,ASYL2E6               LOST KEY.
ASYL2E5  EQU   *
         B     ASYLAB1                  BRANCH TO POST COMPLETION
ASYL2E6  MVC   0(0,R6),0(R7)
ASYL3C1  LA    R11,4(R11)               INDEPENDENT OVERFLOW AREA.
         CLC   DCBLIOV+7(1),DCBHIIOV    LAST REC ON TRK          O19113
         BNE   ASYL3B2                  NO -- MBBCCHH ALL SET, BRANCH
         LA    R12,ASYL3B2              LOAD R12 FOR EXIT         13270
ASYL3C1A SR    R10,R10                                            13270
         IC    R10,DCBLIOV
         SLL   R10,4
         AR    R10,R3
         SR    R9,R9                    INITIALIZE R9 TO ZERO
         MVI   DCBLIOV+7,0              SET RECORD NO. TO ZERO
         CLC   DCBLIOV+6(1),DEBENDHH+1-IHADEB(R10) LAST TRACK OF CYL.
         BNE   ASYL3C3                  NO, GO INCREMENT TRACK NO.
         MVI   DCBLIOV+6,0              YES, SET TRACK NO. TO ZERO
         CLC   DCBLIOV+3(3),DEBENDCC-IHADEB(R10) LAST TRACK OF EXTENT
         BNE   ASYL3A3                  NO, GO TO INCREMENT CCH
         IC    R9,DCBLIOV               GO TO NEXT EXTENT
         LA    R9,1(0,R9)                M+1
         STC   R9,DCBLIOV
         CLC   DCBLIOV(1),DEBNMEXT      RUN OUT OF DEB (WILL NOT OCCUR)
         BE    ASYL2E4                  YES, GO SET NO SPACE INDICATION
         MVC   DCBLIOV+1(6),DEBBINUM+16-IHADEB(R10) MOVE NEW BBCCHH
         BR    R12                      EXIT                      13270
*
ASYL3A3  EQU   *                        *
         IC    R9,DCBLIOV+K3           PICK UP C1 OF CC          S20201
         SLL   R9,8                    MAKE ROOM FOR C2          S20201
         IC    R9,DCBLIOV+K4           PICK UP C2 OF CC          S20201
         LA    R9,K1(,R9)              BUMP CYL VALUE BY 1       S20201
         STC   R9,DCBLIOV+K4           RESTORE C2                S20201
         SRL   R9,8                    MOVE C1 OVER FOR STORE    S20201
         STC   R9,DCBLIOV+K3           RESTORE C1                S20201
         BR    R12                     EXIT                      S20201
ASYL3C3  IC    R9,DCBLIOV+6             INCREMENT TRACK NUMBER
         LA    R9,1(R9)
         STC   R9,DCBLIOV+6
         BR    R12                      EXIT                      13270
ASYL3B2  MVC   CH23(8),DCBLIOV          SET CH23 MBBCCHHR FROM DCBLIOV
         IC    R8,DCBLIOV+7             ADD 1 TO R IN DCBLIOV
         LA    R8,1(R8)
         STC   R8,DCBLIOV+7
         CLC   DCBLIOV+7(1),DCBHIIOV    IF NEW ADDR LAST ON TRK, O19113
         BNE   ASYL3E2                   THIS REC FILLS AN OVERFLOW
         LH    R8,DCBRORG2               AREA. THEREFORE, SUBTRACT 1
         BCTR  R8,0                      FROM NUMBER OF AREAS.
         STH   R8,DCBRORG2
ASYL3E2  MVC   CH24(5),DCBLIOV+3        SET CCHHR IN CH24 FROM DCBLIOV
         CLC   DCBLIOV+7(1),DCBHIIOV    NEW ADDRESS LAST IN TRK  O19113
         BNE   ASYL3E2B                 BRANCH IF NO              13270
         SR    R8,R8                                              13270
         CH    R8,DCBRORG2              ANY IND OFL LEFT          13270
         BE    ASYL2E4                  BRANCH TO NO SPACE FND IF 13270
         BAL   R12,ASYL3C1A             GO SET EOF ADDRESS        13270
ASYL3E2B MVC   CB55(5),DCBLIOV+3        MOVE SEARCH ADDR TO CB55  13270
         MVI   CB53+4,X'20'            SET EOF SWITCH IN CP10B    13270
         IC    R12,DCBLIOV+7            R=R+1 FOR EOF             13270
         LA    R12,1(R12)                                         13270
         STC   R12,CB55+4                                         13270
         LTR   R6,R6                    TEST USE 2
         BZ    ASYL2B5                  EXIT IF YES
         CLC   CH23(1),IOBDADAD         M IOB = M IN CH23
         BE    ASYL3F4
         MVI   CH14,X'07'               NO - SEEK BBCCHH IN CH14
         B     ASYL3F3
ASYL3F4  MVI   CH14,X'0B'               YES - SEEK CCHH IN CH14
ASYL3F3  TM    CB26,X'08'               BRANCH IF NOT CHAINED, I.E. IF
         BZ    ASYL2K5                   NO OVERFLOW CHAIN ALREADY
         CLC   CB25(1),CH23             COMP CH23 TO CB25, SET P IN
         BNE   ASYL3K2                   LINK PER REG 6 ACCORDINGLY
         L     R8,DCBWKPT2              GET DCW WORK AREA ADDR     0699
         CLC   CB25+3(3),CH23+3         MCCH=, GO TO P = SEEK HH
         BE    ASYL2J3                   M =, SET P = SEEK CCHH
         MVI   9(R6),X'0B'               M NOT =, SET P = SEEK BBCCHH
         B     ASYL2J2
ASYL3K2  MVI   9(R6),X'07'
         B     ASYL2J2
ASYL2H2  MVC   CH23(6),IOBDADAD         CYL OFLOW AREA
         CLC   DCBHIROV,CB22+2          SET CH23 MBBCC    FROM IOB
         BNE   ASYL2G2                  IF CB22 R INDICATES HI REC IN
         LH    R8,CB22                   OVERFLOW TRACK,
         LA    R8,1(R8)                     CB22      HH  OLD HH PLUS 1
         STH   R8,CB22                                  R ZERO
         MVI   CB22+2,X'00'
ASYL2G2  MVC   CH23+6(2),CB22+1         SET CH23 HR FROM CB22+1
         IC    R8,CB22+2                ADD 1 TO R IN CB22
         LA    R8,1(R8)                 IF RESULT INDICATES HI REC IN
         STC   R8,CB22+2                 OVERFLOW TRACK, SUBT 1 FROM
         CLC   DCBHIROV,CB22+2           T IN CB22 TO INDICATE ONE LESS
         BNE   ASYL2G4                   TRACK.  IF THIS RESULT IS ZERO
         IC    R8,CB22+5                 ADD ONE TO RORG1 TO INDICATE
         BCTR  R8,0                      ONE MORE FULL CYLINDER OVER-
         STC   R8,CB22+5                 FLOW AREA
         CLI   CB22+5,X'00'
         BNE   ASYL2G4
         LH    R8,DCBRORG1
         LA    R8,1(R8)
         STH   R8,DCBRORG1
ASYL2G4  MVC   CH24(3),IOBDADAD+3       CH24 CCH FROM IOB
         MVC   CH24+3(2),CB22+1         HR FROM CB22+1
         LA    R9,CH1                   SET IOB START PTR. TO CH1
         ST    R9,IOBSTART-1
         LA    R9,IOBDADAD+3            GET ADDR OF CCHHR          9445
         ST    R9,CH1                   SET UP SID CCW             9445
         MVI   CH1,X'31'                SET UP SID OP CODE         9445
         MVC   CH3A+1(3),CH1+1          SET UP WRT CK CCW          9445
         LTR   R6,R6                    EXIT IF USE 2.
         BZ    ASYL2B5
         MVI   CH14,X'1B'               CH14 SET TO SEEK HH
         TM    CB26,X'08'               BRANCH IF CHAINED IN F OF CB26
         BO    ASYL2J3
ASYL2K5  LA    R9,CH9                K5      NOT CHAINED - END
         ST    R9,CH4
         MVI   CH4,X'08'                MOVE TIC COMMAND
         OI    CB26,X'08'               RESET F TO INDICATE CHAINED
         LR    R9,R7                    PLACE REG 7 IN ADDR OF CH12
         STH   R9,CH12+2
         SRL   R9,16
         STC   R9,CH12+1
         B     ASYL2J1                  BRANCH
ASYL2J3  MVI   9(R6),X'1B'   SET P IN LINK PER R6 TO SEEK HH
ASYL2J2  LA    R9,CH8D               J2
         ST    R9,CH4
         MVI   CH4,X'08'                MOVE TIC COMMAND
ASYL2J1  MVC   CB25(3),CH23
         NI    CH18C+4,X'BF'            CH18C CC OFF
         MVC   CB25+3(5),CH24
         LR    R9,R6                    PLACE R6 IN ADDR CH18
         STH   R9,CH18+2
         SRL   R9,16
         STC   R9,CH18+1
         LR    R9,R7                    PLACE R7 IN ADDR CH17
         STH   R9,CH17+2
         SRL   R9,16
         STC   R9,CH17+1
ASYL2B5  LH    R9,DCBNOREC              ADD 1 TO NORECS
         LA    R9,1(R9)
         STH   R9,DCBNOREC
         BR    R11                      RETURN
         EJECT
*              CHART L4  ASYNCHRONOUS CODE 9
ASYL4B2  BAL   R11,MYSUBRTN
         TM    CH8E+4,X'80'            TEST IF UNBL AND UWA       17332
         BZ    ASYL4D7                 IF NO-BRANCH               17332
         L     R11,CH6+4                                          17332
         LA    R6,2                                               17332
         SR    R11,R6                  SAVE 10 BYTES              17332
         ST    R11,CH6+4               FOR OVFL REC LINK FLD      17332
         L     R6,DECBAREA             USE  DECB AREA TO SAVE     17332
         MVC   0(10,R6),0(R11)         10  PRIOR  BYTES OF RECORD 17332
         IC    R6,DCBKEYLE                                        17332
         BCTR  R6,R0                                              17332
         EX    R6,APPSDAT              SAVE DATA                  17332
ASYL4D7  BAL   R11,ASYL2A2                                        17332
         B     ASYL4C4                  CYLINDER AREA RETURN. BRANCH.
         MVC   IOBDADAD+5(2),CB23       INDEPENDENT AREA.  HH FROM CB23
         NI    CH55,X'FF'-MT            MT OFF                   S20201
         LA    R6,CH55                  CHAN PROG START AT CH55  A50698
         ST    R6,IOBSTART-1
         B     ASYL4D5                  BRANCH
ASYL4C4  LA    R6,CH5                   CYLINDER VRFLO AREA. SET CH4 TO
         ST    R6,CH4
         MVI   CH4,X'08'
         CLC   IOBDADAD+K6(K1),CB23+K1     H(COCR) = H(TRK IX)   S20201
*                                       S2020                    S20201
         BE    ASYL4C5                     YES, BR--NO HEAD SEEK S20201
*                                       S2020                    S20201
         LA    R6,CI5                      GET SEEK ADDRESS      S20201
*                                       S2020                    S20201
         ST    R6,CH5                      AND PUT IN CH5        S20201
*                                       S2020                    S20201
         MVI   CH5,SEEKHH                  SET UP COMMAND CODE   S20201
*                                       S2020                    S20201
         MVI   CH5+K7,SIX                  SET COUNT TO SIX      S20201
*                                       S2020                    S20201
         MVC   CI5(K2),IOBDADAD+K1         SET BB                S20201
*                                       S2020                    S20201
         MVC   CI5+K2(K4),CB22+K6          SET UP CCHH           S20201
*                                       S2020                    S20201
         B     ASYL4D5                     CONTINUE CP 14 SET UP S20201
*                                       S2020                    S20201
ASYL4C5  MVI   CH5,NOP                     CONVERT TO NO-OP      S20201
         MVI   CH5+K7,K1                SET COUNT TO ONE        ZA01385
ASYL4D5  OI    CH8D,X'80'            D5      MT ON
ASYL4D5A MVI   IOBAPP,12                GET APPEND CODE OF 12      9445
         LA    R6,IOBDADAD+3
         STH   R6,CH1+2
         SRL   R6,16
         STC   R6,CH1+1
         MVC   CH3A+1(3),CH1+1               WRITE CHECK SEARCH
         MVI   IOBCOUNT,X'0A'                SET COUNTER TO 10
ASYLD5B  TM    CH8E+4,X'40'             TEST IF USER WA           17332
         BZ    ASYLDD4                  IF NO-BRANCH              17332
         MVC   CH14,IOBDADAD           SAVE SEEK ADDR PART 2      17332
         MVC   CH21+4(3),IOBSTART      SAVE IOBSTART              17332
         LA    R9,CH15                  START CP14 TO             17332
         ST    R9,IOBSTART-1            WRITE OVERFLOW RECORD     17332
         MVC   IOBDADAD,CH23            SET IOBSEEK=OVERFLOW REC  17332
ASYLDD4  EQU   *                                                  17332
         MVC   CK9+7(1),IOBASYN         SAVE ASYN CODE            17332
         BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
         EJECT
*              CHART L5  ASYNCHRONOUS ROUTINE, CODE 10
ASYL5B2  BAL   R11,MYSUBRTN
ASYL5C3  BAL   R11,ASYL2A2              SUB-ROUTINE CHARTS L2-L3, USE 1
         B     ASYL5D4                  CYLINDER AREA RETURN. BRANCH
         MVC   IOBDADAD+5(2),CB24+2     INDEPENDENT AREA.  HH FROM CB24
         NI    CH8D,X'7F'            F3      MT OFF
         NI    CH95,X'FF'-MT            MT OFF                   S20201
         L     R9,CH4                G3      CP14 STARTS AT CH4 ADDRESS
         ST    R9,IOBSTART-1
         B     ASYL5F4                  BRANCH
ASYL5D4  OI    CH8D,MT                  MT ON                    S20201
         OI    CH95,MT                  MT ON                    S20201
ASYL5F4  B     ASYL4D5A                                            9445
         SPACE 10
*              CHART L6  ASYNCHRONOUS ROUTINE, CODE 13
ASYL6B2  BAL   R11,MYSUBRTN
         MVC   CB24(5),CB22+6
         MVC   CB25(10),CB10+7
         B     ASYL5C3
         SPACE 2
MYSUBRTN OC    IOBDADAD+6(1),DCBFIRSH+3 TRACK MASK
         XC    IOBDADAD+6(1),DCBFIRSH+3 REDUCE TO CYL BOUNDRY OR ZERO
         MVI   IOBDADAD+7,0
         BR    R11
         EJECT
*              CHART L7  ASYNCHRONOUS ROUTINE, CODE 12
ASYL7B2  L     R6,DECBAREA              R6  ADDR OF AREA DECB POINTS TO
         L     R7,CJ10                  R7  ADDR PER CJ10
         MVC   6(10,R6),0(R7)           MOVE LINK FIELD FROM CJ10 AREA
         BAL   R11,MYSUBRTN
         BAL   R11,ASYL2D1              SUB-ROUTINE CHARTS L2-L3, USE 2
         B     ASYL7E3                  CYLINDER OVERFLOW AREA USED.
         MVC   IOBDADAD,CH23            INDEPENDENT OVERFLOW AREA.
         LA    R10,CH15                 SET UP IOB, MBBCCHHR FROM CH23
         ST    R10,IOBSTART-1
         MVC   0(3,R7),CH23            MOVE LIOV TO LINK OF PREV  13270
         MVC   3(5,R7),CH24            RECD FROM CP14             13270
         CLC   CH23(1),CJ11             TEST SAME MCC CJ23 AND CJ11
         BNE   ASYL7K4A
         L     R8,DCBWKPT2              GET DCW WORK AREA ADDR     0699
         CLC   CH23+3(3),CJ11+3
         BNE   ASYL7K4A                 NO MEANS NOT SAME        A42240
         MVI   9(R7),X'1B'              SEEK HEAD OLD P BYTE     A42240
         B     ASYL7G3                  NEW P BYTE SET ALREADY   A42240
ASYL7K4A EQU   *
         L     R6,DECBAREA
         CLC   CH23(1),6(R6)            SET P IN DECB AREA TO
         BNE   ASYL7K3                   SEEK BBCCHH IF DIFF DEVICE(M)
         L     R8,DCBWKPT2              GET DCW WORK AREA ADDR     0699
         CLC   CH23+3(3),9(R6)          SEEK CCHH IF SAME DEVICE
         BNE   ASYL7K4                                   DIFF CYL (MCC)
         MVI   15(R6),X'1B'              SEEK     HH IF SAME DEVICE
         B     ASYL7F4                                   AND CYL(MCC)
ASYL7K4  MVI   15(R6),X'0B'
         B     ASYL7F4
ASYL7K3  MVI   15(R6),X'07'
ASYL7F4  L     R7,CJ10                  TEST SAME M CJ23 AND CJ11
         CLC   CH23(1),CJ11
         BE    ASYL7G5
         MVI   CH19,X'07'               NOT SAME, P IN CH19 AND IN AREA
         MVI   9(R7),X'07'               PER CJ10 MUST BE SEEK BBCCHH
         B     ASYL7G2
ASYL7G5  MVI   CH19,X'0B'               SAME, P IN CH19 AND IN AREA PER
         MVI   9(R7),X'0B'               CJ10 MUST BE SEEK CCHH
         B     ASYL7G2
*                                       CYLINDER OVERFLOW AREA.
ASYL7E3  MVC   0(3,R7),CH23             SET MBB OF LINK FIELD PER CJ10
         MVC   3(5,R7),CH24             SET CCHHR OF LINK FLD PER CJ10
         LA    R10,CH14                 CH4  MUST TIC TO CH14
         ST    R10,CH4
         MVI   CH4,X'08'                MOVE TIC COMMAND
ASYL7F3  MVI   CH14,X'1B'               CH14 MUST SEEK HH
ASYL7G3  MVI   CH19,X'1B'               CH19 MUST SEEK HH
ASYL7G2  OI    CH18C+4,X'40'            CH18C CC FLAG ON
         MVC   CH22+1(3),CJ10+1         ADRESS IN CH22, SAME AS CJ10
         L     R10,DECBAREA             ADDRESS CH18, DECB AREA + 6
         LA    R10,6(R10)
         STH   R10,CH18+2
         SRL   R10,16
         STC   R10,CH18+1
         MVC   CH17+1(3),DECBKEY+1      CH18 ADDRESS DECB KEY
         MVI   IOBAPP,13                APPENDAGE CODE 13
         MVI   IOBCOUNT,X'0A'                SET COUNTER TO 10
         B     ASYLD5B                                            17332
APPSDAT  MVC   0(0,R11),10(R11)                                   17332
         EJECT
*              CHART L8  ASYNCHRONOUS ROUTINE,CODE 11
ASYL8B2  BAL   R11,MYSUBRTN
         MVC   CH12+1(3),DECBKEY+1      SET ADDR IN CH12 TO DECB KEY
         L     R6,DECBAREA              R6  ADDR OF DECB AREA
         L     R7,CJ10                  R7  ADDR AREA PER CJ10
         MVC   6(10,R6),0(R7)           MBBCCHHR IN AREA+6 FROM CJ10
         OI    8(R7),X'18'              F NOW = OFLO CHAINED, NOT END
         BAL   R11,ASYL2D1              SUB-ROUTINE CHARTS L2-L3, USE 2
         B     ASYL8D2                  CYLINDER OVERFLOW AREA
         MVC   IOBDADAD(3),DCBLPDA      INDEPENDENT AREA.
         MVC   IOBDADAD+3(5),CB24       SEEK-SRCH ADDR =LAST OFLO ENTRY
         MVC   0(3,R7),CH23            SET LINK TO LAST IND OFLO  13270
         MVC   3(5,R7),CH24            RECD FROM CP14             13270
         LA    R10,CH9
         ST    R10,IOBSTART-1
         NI    CH95,X'FF'-MT            CH95 MT OFF              S20201
         CLC   DCBLPDA(1),CH23          M OF CH23 = LST PRM DATA
         BE    ASYL8G3
         MVI   CH14,X'07'               NO - CH14 OP-CODE   SEEK BBCCHH
         B     ASYL8H4
ASYL8G3  MVI   CH14,X'0B'               YES- CH14 OP-CODE   SEEK CCHH
ASYL8H4  CLC   CH23(1),CJ11             MCC CH23 AND CJ11
         BNE   ASYL7F4
         L     R8,DCBWKPT2              GET DCW WORK AREA ADDR     0699
         CLC   CH23+3(3),CJ11+3         CCH  CH23 AND CH11
         BNE   ASYL7F4                  NO - BRANCH
         L     R7,CJ10
         MVI   9(R7),X'1B'              YES - LINK PER CJ10 P = SEEK HH
         B     ASYL7G3                         AND BRANCH
ASYL8D2  L     R7,CJ10                  CYLINDER VRFLO AREA.
         MVI   9(R7),X'1B'
         MVC   0(3,R7),CH23             LINK PER CJ10 P = SEEK HH
         MVC   3(5,R7),CH24                           MBB FROM CH23
         LA    R10,CH9                                CCHHR FROM CH24
         ST    R10,CH4
         MVI   CH4,X'08'                MOVE TIC COMMAND
         OI    CH95,MT                  CH95 MT ON               S20201
         B     ASYL7F3
         EJECT
*              CHART L9  ASYNCHRONOUS CODE 14
ASYL9B2  EQU   *                        REPLACE DELETED RCD      Y02072
         LA    R10,CH20                 IOB START POINTS TO CH20
         ST    R10,IOBSTART-1
         L     R6,DECBAREA              LINK FIELD PER CJ10 MOVED TO
         L     R7,CJ10                   DECB AREA + 6
         MVC   6(10,R6),0(R7)
         MVC   IOBDADAD,CJ11            RESTORE SEEK ADDRESS FROM CJ11
         LA    R10,6(0,R6)                   DECB AREA +6
         STH   R10,CH22+2
         SRL   R10,16
         STC   R10,CH22+1                    PLACE AT CH22
         MVI   IOBAPP,13                APPENDAGE CODE 13
         MVI   IOBCOUNT,X'0A'                SET COUNTER TO 10
         MVC   CK9+7(1),IOBASYN         SAVE ASYN CODE           A27333
         BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
         DROP  R15
         USING ASYNCH,R3
         EJECT
***********************************************************************
*********   READ AND UPDATE                                  **********
***********************************************************************
*        CHART AS   ASYNCHRONOUS ROUTINES, CODES 0, 2, 4, AND 6
*              CODE 2
ASYASB1  LR    R3,R15                   SET UP BASE REGISTER
         TM    DECBTYP1,X'01'           TEST DYNAMIC BUFFERING
         BZ    ASYASE5                  BRANCH IF NO
         L     R15,IGGPDEB              PROTECTED DEB ADDR       Y02072
         USING IHADEB,R15                                        S21045
         L     R15,DEBEXPTR              GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R15                                        S21045
         L     R15,DEBFREED              LOAD ADDR DYN BUF       S21045
*                                       MODULE                   S21045
         DROP  R15                                               S21045
         USING IHABUF,R15
         BAL   R12,BUFASYN              BRANCH TO FREE BUFFER
         B     ASYASF5                  ON RETURN, BRANCH
*              CODE 0
ASYASB2  LR    R3,R15                   SET UP BASE REGISTER
         TM    DECBTYP2,X'E0'           TEST READ
         BZ    ASYASB1                  BRANCH IF NO
         L     R10,DECBAREA             R10 DEVELOP ADDRESS OF LOG REC
         LA    R10,16(R10)
         TM    DECBEXC1,X'02'           OVERFLOW OR UNBLOCKED{
         BO    ASYASC4                  BRANCH IF YES
         TM    DCBRECFM,X'10'
         BZ    ASYASC4
         LR    R7,R10                   SEARCH FOR CORRECT REC IN BLOCK
         AH    R7,DCBBLKSI              R7   COMPARAND FOR BXLE (EOB)
         BCTR  R7,0
         LH    R6,DCBLRECL              R6   INCREMENT FOR BXLE (REC L)
         AH    R10,DCBRKP               R10 ADDRESS OF KEY IN REC
         IC    R11,DCBKEYLE             R11 KEY LENGTH FOR EXECUTE
         BCTR  R11,0
         L     R8,DECBKEY               R8  ADDRESS OF KEY SOUGHT
ASYASE3  EX    R11,ASYASE2
         BE    ASYASF3
         BH    ASYASE1
         BXLE  R10,R6,ASYASE3
ASYASE1  OI    DECBEXC1,X'80'           NO FIND
         B     ASYASE5
ASYASE2  CLC   0(0,R10),0(R8)
ASYASF3  SH    R10,DCBRKP               FOUND - SUBT RKP TO GET REC AD
ASYASC4  ST    R10,DECBLOGR             STORE ADDR LOG REC IN DECB
         L     R8,DCBWKPT2
         USING IHADCW,R8
         TM    DECBTYP2,X'20'           TEST FOR READ KU         A26738
         BZ    ASYASC5                  IF NOT, SEE IF DYN BUFF  A26738
         LA    R13,DCWFUPDI             IF SO, PLACE IOB ON UPDATE Q
         BAL   R15,ASYONQ
         XC    IOBCCWAD(4),IOBCCWAD     CLEAR DYN BUFFER PTR      MC1F
         TM    DECBTYP1,X'01'           IS THERE ANY DYN BUFFER   MC1F
         BZ    ASYASF5                BRANCH TO POST COMPLETION   MC1F
         MVC   IOBCCWAD(4),DECBAREA      YES SAVE PTR             MC1F
         B     ASYASF5                   AND BRANCH TO POST COMPLETION
ASYASC5  TM    DECBTYP1,X'01'           DYNAMIC BUFFER           A26738
         BZ    ASYASE50                 NO, REDUCE NACT AND POST A26738
         SR    R7,R7                    ZERO INDEX REG           A26738
         B     ASYASE59                 KEEP IOB ON ERROR QUEUE  A26738
*                 CODE 4, CODE 6
ASYASE5  EQU   *                                                 A26738
ASYASE5A SR    R7,R7                    ZERO INDEX REG           A26738
ASYASE5B LR    R3,R15                   SET UP BASE REGISTER      P4700
ASYASE55 EQU   *                        TEST FOR ERRORS          S20201
         L     R8,DCBWKPT2              ADDRESS OF WORK AREA      P4700
         TM    DECBEXC1,X'FD'           TEST FOR ERRORS           P4700
         BZ    ASYASE6(R7)              NO ERRORS - ISSUE FREEMAINP4700
         OI    IOBUNSQR,X'04'           MARK IOB IN ERROR        A26738
ASYASE59 LA    R13,DCWFIOBE             PUT IOB ON ERROR QUEUE   A26738
         IC    R0,DCWFIOBE              GET NO OF SLOTS LEFT     A26738
         BAL   R15,ASYONQ                                        A26738
         XC    IOBCCWAD(4),IOBCCWAD     CLEAR DYN BUFFER PTR      MC1F
         TM    DECBTYP1,X'01'           IS THERE ANY DYN BUFFER   MC1F
         BZ    ASYASE5C                 NO, BRANCH               A26738
         MVC   IOBCCWAD(4),DECBAREA      YES SAVE PTR             MC1F
ASYASE5C BCTR  R0,0                     INDICATE ONE LESS SLOT   A26738
         STC   R0,DCWFIOBE                                       A26738
         CLI   DCWFIOBE,X'FF'                                    A26738
         BNE   ASYASE7(R7)              BR IF AMT NOT MINUS      A26738
*                                       TO RETAIN ALL IOBS
         MVI   DCWFIOBE,X'00'           STILL NO SPACE IN QUEUE  A26738
         L     R1,DCWFIOBE              ELSE, REMOVE FIRST IOB   A26738
         LR    R0,R2                    SAVE CURRENT DECB        A26738
         LA    R2,DCWFIOBE              POINT TO ERROR QUEUE     A26738
         LA    R13,4                    SEARCH FOR AN ERROR IOB  A26738
         BAL   R15,ASYOFFQA             REMOVE IOB               A26738
         LR    R2,R0                    RESTORE DECB REGISTER    A26738
         L     R13,IOBCCWAD             DOES THIS DEQUEUED IOB   A26738
         LTR   R13,R13                  HAVE A DYNAMIC BUFFER    A26738
         BZ    ASYASE6(R7)              NO, BR TO FREE OLD IOB   A26738
         L     R15,DCBBUFCB             OTHERWISE, FREE OLD BUFF A26738
         MVC   0(4,R13),BCBNAVB(R15)                             A26738
         ST    R13,BCBNAVB(R15)                                  A26738
         B     ASYASE6(R7)              NOW FREE OLD IOB         A26738
ASYASE7  B     ASYASF51                 OMIT FREEMAIN            A26738
         B     ASYASE61                 OMIT ISSUING OF FREEMAIN  P4700
         B     ASYASE71                 OMIT ISSUING OF FREEMAIN  P4700
ASYASE6  B     ASYASE50                 ISSUE FREEMAIN            P4700
         B     ASYASE60                 ISSUE FREEMAIN            P4700
         B     ASYASE70                 ISSUE FREEMAIN            P4700
ASYASE50 LR    R0,R1                   R0 = IOBADDR              S20201
*
         BAL   R1,FREEIOB               FREE IOB CORE            Y02072
*
ASYASF51 L     R8,DCBWKPT2        SUBSTRACT 1 FROM  NUMBER OF     7M216
         IC    R12,DCWNACT               MACRO EVENTS TO BE COMPLETED
         BCTR  R12,0                     BEFORE NEXT WRITE KN CAN BE
         STC   R12,DCWNACT               EXECUTED
ASYASF5  EQU   *                                                 A41652
         ST    R2,DCBPUTX               DECB TO BE POSTED        A41652
         L     R12,IGGPDEB              PROTECTED DEB ADDR       Y02072
         L     R8,DCBWKPT2
         USING IHADEB,R12
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12
         SRL   R9,1                     BRANCH BY ASYNCHRONOUS CODE
         B     ASYTAB2(R9)               TO RTN TO FREE CP4-5-6 OR CP7
ASYTAB2  B     ASYASH5                  CODE 0 OR 4, TO ASYASH5
         B     ASYASG2                  CODE 2 OR 6, TO ASYASG2
         B     ASYASH5
ASYASG2  CLI   DCWNUCP7,X'00'           FREE CP7. ANY IOB AWAITING ONE{
         BE    ASYASG3                  BRANCH IF NO
         LA    R13,32                   FIND IOB AWAITING CP7 AND
         BAL   R15,ASYOFFQ               REMOVE IT FROM UNSCHED QUEUE
         USING IHAIOB,R1                                         S20201
ASYASJ2  IC    R6,DCWNUCP7              SUBTRACT ONE FROM NO. IOBS
         BCTR  R6,0                      AWAITING CP7
         STC   R6,DCWNUCP7
         NI    IOBINDCT,X'7F'           CP7 ALREADY OUT OF Q
         BAL   R11,DISCP7               GO TO ROUTINE TO SET UP CP7
         B     ASYAVB2                  BRANCH TO EXCP
ASYASG3  MVC   12(4,R5),DCWFCP7         NO IOB AWAITING CP7. ADD IT TO
         ST    R5,DCWFCP7                CP7 QUEUE
         B     ASYAWB2                  BRANCH TO START PENDING WKN
ASYASH4  EQU   *                        *                       SA61539
         IC    R6,DCWNACT               DECREASE NUMBER OF      SA61539
         BCTR  R6,0                     NON-WRITE KEY NEW       SA61539
         STC   R6,DCWNACT               MACRO EVENTS            SA61539
ASYASH5  CLI   DCWNUCP4,X'00'           FREE CP4-5-6
         BE    ASYASJ5                  IF NO IOB AWAITING IT, BRANCH
         LA    R13,64                   FIND IOB ASAITING CP4-5-6 AND
         BAL   R15,ASYOFFQ              REMOVE IT FROM UNSCHEDULED Q
ASYASJ4  IC    R6,DCWNUCP4              SUBT 1 FROM NO. OF IOBS
         BCTR  R6,0                      AWAITING CP4-5-6
         STC   R6,DCWNUCP4
         NI    IOBINDCT,X'7F'           INDICATE CP4-5-6 NOT ON Q
         BAL   R11,DISCP45              GO TO SET UP CP4-5-6
         B     ASYASH4                  ERROR RETURN            SA61539
ASYAVB2  BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
ASYASJ5  MVC   12(4,R5),DCWFCP4         NO IOB AWAITING CP4-5-6, ADD IT
         ST    R5,DCWFCP4                TO AVAILABLE QUEUE
         B     ASYAWB2                  BRANCH TO START PENDING WKN
ASYAUB20 EQU   *                        *                       ZA00956
         IC    R6,DCWNACT               DECREASE NUMBER OF      ZA00956
         BCTR  R6,0                     NON-WRITE KEY NEW       ZA00956
         STC   R6,DCWNACT               MACRO EVENTS            ZA00956
         B     ASYAUB21                 *                       ZA00956
*        CHART AU   ASYNCHRONOUS ROUTINES, CODES 3 AND 7
ASYAUB2  LR    R3,R15                   SET UP BASE REGISTER
         L     R8,DCBWKPT2              R8  ADDRESS OF WORK AREA
         LR    R9,R1                    SAVE ADDRESS OF IOB
ASYAUB21 CLI   DCWNUCPS,X'00'           TEST CP1/2 QUEUE EMPTY
         BNE   ASYAUB3
         OI    DCWHIAV,X'80'            YES - SET INDICATOR TO AVAILABL
         B     ASYAUF3                   AND BRANCH TO CONTINUE IOB
ASYAUB3  EQU   *
         LA    R13,128                  FIND IOB AWAITING CP1 OR CP2 +
         BAL   R15,ASYOFFQ               REMOVE IT FROM UNSCHED QUEUE
         IC    R6,DCWNUCPS              DECREASE NO. OF IOBS AWAITING
         BCTR  R6,0                      CP1/2
         STC   R6,DCWNUCPS
         L     R12,IGGPDEB             PROTECTED DEB ADDR        Y02072
         USING IHADEB,R12
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12
         BAL   R11,DISCPS               BRANCH TO SET UP CP1/2
         B     ASYAUB20                 ERROR RETURN            ZA00956
         BAL   R13,SUBROUT1
ASYAUF3  LR    R1,R9                    RESTORE IOB ADDRESS
         L     R2,IOBECBAD              RESTORE DECB ADDRESS
         CLI   IOBASYN,X'03'            TEST ASYNCH CODE INDICATE ERROR
         BE    ASYAUD2                  BRANCH IF NO
         LA    R7,8                                               P4700
         B     ASYASE55                 TEST FOR ERROR ROUTINE   S20201
ASYASE70 LR    R0,R1                    R0=IOB ADDR              S20201
*
         BAL   R1,FREEIOB               FREE IOB CORE            Y02072
*
ASYASE71 EQU   *                                                  7S029
         IC    R9,DCWNACT               DECREASE NO. OF NON-WRITE KN
         BCTR  R9,0                      MACRO EVENTS
         STC   R9,DCWNACT
         ST    R2,DCBPUTX               DECB TO BE POSTED        A41652
         B     ASYAWB2                  BRANCH
         USING IHAIOB,R1                                         S20201
ASYAUD2  L     R5,DCWFCP4               NO - CONTINUE
         LTR   R5,R5
         BZ    ASYAUD1                  CP4-5-6 AVAILABLE {
         OI    IOBINDCT,X'80'           YES - SET UP CP4-CP5
         L     R12,IGGPDEB              PROTECTED DEB ADDR       Y02072
         USING IHADEB,R12
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12
         BAL   R11,DISCP45
         B     ASYERROR                 ERROR RETURN, BISAM BUG SA63253
         BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
ASYAUD1  MVI   IOBUNSQR,X'40'           NO - CP4-5-6 NOT AVAILABLE
         IC    R6,DCWNUCP4              ADD IOB TO UNSCHED Q
         LA    R6,1(R6)
         STC   R6,DCWNUCP4
         LA    R13,DCWFIOBU
         BAL   R15,ASYONQ
         B     ASYFINIS                 RETURN VIA EXIT          A41652
*
ASYONQ   LA    R1,0(R1)                 ADD THE IOB WHICH IS
         L     R6,4(R13)                 POINTED TO BY R1
         ST    R6,IOBBCHAD               TO THE QUEUE WHOSE FIRST IOB
         LTR   R6,R6                     POINTER IS IN 0(R13) AND
         BZ    ASYONQA                   WHOSE LAST IOB POINTER IS IN
         ST    R1,IOBFCHAD-IHAIOB(R6)    4(R13)
         B     ASYONQB
ASYONQA  ST    R1,0(R13)
ASYONQB  XC    IOBFCHAD,IOBFCHAD
         ST    R1,4(R13)
         BR    R15                      RETURN VIA R15.
ASYOFFQ  LA    R2,DCWFIOBU              POINT TO UNSCHED QUEUE   A26738
         L     R1,DCWFIOBU              FIND THE 1ST IOB ON THE  A26738
ASYOFFQA EX    R13,ASYOFFQF              UNSCHEDULED QUEUE FOR REASON
         BO    ASYOFFQB                  IN R13, PUT ITS ADDRESS IN R1,
         L     R1,IOBFCHAD               REMOVE IT FROM THE UNSCHEDULED
         B     ASYOFFQA                  QUEUE.
ASYOFFQB L     R6,IOBBCHAD
         LTR   R6,R6
         BZ    ASYOFFQC
         MVC   IOBFCHAD-IHAIOB(4,R6),IOBFCHAD
         B     ASYOFFQD
ASYOFFQC MVC   1(3,R2),IOBFCHAD+1       UPDATE PTR TO 1ST IOB    A26738
ASYOFFQD L     R6,IOBFCHAD
         LTR   R6,R6
         BZ    ASYOFFQE
         MVC   IOBBCHAD-IHAIOB(4,R6),IOBBCHAD
         B     ASYOFFQG
ASYOFFQE MVC   5(3,R2),IOBBCHAD+1       UPDATE PTR TO LAST IOB   A26738
ASYOFFQG L     R2,IOBECBAD              SET ITS DECB POINTER IN R2
         BR    R15                      RETURN VIA R15
ASYOFFQF TM    IOBUNSQR,X'00'
***********************************************************************
*********   BEGIN A WRITE KN MACRO AFTER COMPLETION OF              ***
*********     ALL READ AND UPDATE MACROS OR AFTER ANOTHER WRITE KN  ***
***********************************************************************
*        BASE REGISTER IS STILL R3
*              CHART AW   CODES 0, 2, 4 AND 6 CONTINUED
         DROP  R1                                                S20201
ASYAWB2  CLI   DCWNACT,X'00'            IF ANOTHER CP IN PROCESS
         BNE   ASYFINIS                 IF NOT GO TO EXIT        A41652
         L     R1,DCWFIOBU               OR IF NO MORE IOBS ON Q
         USING IHAIOB,R1                                         S20201
         LTR   R1,R1
         BNZ   ASYAWD2                   BIF IOB EXISTS          S20201
         B     ASYFINIS                 RETURN VIA EXIT          A41652
ASYAWD2  CLI   DCWNUWKN,X'00'           ERROR IN BISAM IF NUWKN ZERO
         LA    R6,ASYAWD2               POINT OF ERROR          SA63253
         BE    ASYERROR                 BISAM ERROR ROUTINE     SA63253
         OI    DCWWKNI,X'80'            SET WKN INDICATOR TO IN PROCESS
ASYAWE2  TM    IOBUNSQR,X'10'           FIND FIRST IOB WITH AWAITING
         BO    ASYAWE21                  WRITE KN UNSCHEDULED REASON
         L     R1,IOBFCHAD
         B     ASYAWE2
ASYAWE21 L     R6,IOBFCHAD               AND REMOVE IT FROM THE UNSCHED
         LTR   R6,R6                     QUEUE
         BZ    ASYAWE22
         MVC   IOBBCHAD-IHAIOB(4,R6),IOBBCHAD
         B     ASYAWE23
ASYAWE22 MVC   DCWLIOBU,IOBBCHAD
ASYAWE23 L     R6,IOBBCHAD
         LTR   R6,R6
         BZ    ASYAWE24
         MVC   IOBFCHAD-IHAIOB(4,R6),IOBFCHAD
         B     ASYAWG2
ASYAWE24 MVC   DCWFIOBU,IOBFCHAD
ASYAWG2  IC    R6,DCWNUWKN              DECREASE THE NUMBER OF IOBS
         BCTR  R6,0                      AWAITING W KN  CP
         STC   R6,DCWNUWKN
         L     R2,IOBECBAD              R2   ADDR OF DECB FOR NEW IOB
         L     R12,IGGPDEB              PROTECTED DEB ADDR       Y02072
         USING IHADEB,R12
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12                 UP FIRST WKN CHANNEL PROGRAM
         BAL   R11,DISCPWKN              BRANCH TO THE ROUTINE
         BAL   R13,SUBROUT1
         LR    R15,R3                   RESTORE FORMER BASE      M0702
         B     ASYLAE4                  RETURN                   A35340
ASYAWF2  L     R1,DCWFIOBU              ENTRY FROM CHART LA
         LR    R3,R15
         B     ASYAWE2
SUBROUT1 EQU   *                        *
         SR    R7,R7                                              12705
         IC    R7,IOBDADAD              GET M OF CURRENT EXTENT   12705
         SLL   R7,4                     M X 16                    12705
         L     R6,IGGPDEB               PROTECTED DEB ADDR       Y02072
         LA    R7,32(R7,R6)             PLACE BB FROM THE CURRENT 12705
         MVC   IOBDADAD+1(2),4(R7)      EXTENT INTO THE DEB       12705
         MVC   IOBBCHAD+1(3),IOBECBAD+1 SAVE ECB                 A33533
         LA    R7,IOBCSW                IOS WILL ZERO OUT        A33533
         ST    R7,IOBECBAD              CSW INSTEAD OF ECB       A33533
         LR    R7,R15                                             12705
         LR    R4,R1                    SAVE IOB ADDRESS         M1792
         BALR  15,0                     ADDRESSABILITY - ENABLE  A48664
         USING *,15                                              A48664
*
         BAL   R11,FREELOCK             RELEASE LOCAL LOCK       Y02072
*
         EXCP  (1)                                                12705
         BALR  15,0                     ADDRESSABILITY - DISABLE A48664
         USING *,15                                              A48664
*
         BAL   R11,GETLOCK              OBTAIN LOCAL LOCK        Y02072
*
         LR    R15,R7                                             12705
         LR    R1,R4                    RESTORE IOB ADDRESS      M1792
         USING IHADEB,R6                ADDRESSABILITY ON DEB    M1792
         L     R4,DEBDCBAD              RESTORE DCB ADDRESS      M1792
         DROP  R6                                                M1792
         MVC   IOBECBAD+1(3),IOBBCHAD+1 RESTORE ECB              A33533
         BR    R13
         EJECT
*        THE FOLLOWING ROUTINE IS ENTERED ON A BISAM ERROR
*        CONDITION. IT SAVES REGISTERS AND RETURNS TO USER
*        WITH ERRORS SET IN DECB.
         SPACE 1
ASYERROR EQU   *                        *
         L     R8,DCBMSWA               ADDR OF AREA TO SAVE REGSA63253
         STM   R0,R15,0(R8)             SAVE ALL REGISTERS      SA63253
         ST    R6,DCBGET                SAVE ERROR ADDRESS      SA63253
         SPACE 2
**********************************************************************
*              THE FOLLOWING IS THE COMMON EXIT TO BE USED FOR       *
*              RETURNING TO THE SUPERVISOR AFTER POSTING             *
*              A COMPLETED REQUEST IF NECESSARY                      *
**********************************************************************
         SPACE 2
ASYFINIS EQU   *                                                 A41652
         BALR  R12,R0                   ESTABLISH               YM01347
         USING *,R12                    ADDRESSABILITY          YM01347
*
         BAL   R11,FREELOCK             RELEASE LOCAL LOCK       Y02072
*
         IC    R2,IGGUKEY               USER PROTECT KEY         Y02072
         L     R0,SP230                 SIZE AND SUBPOOL         Y02072
         LR    R1,R14                   ADDR OF CORE TO FREE     Y02072
         L     R14,IGGRETRN             RETURN ADDRESS           Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         FREEMAIN  R,LV=(0),A=(1)       FREE SAVE AREA           Y02072
         SPACE 2
         MODESET  KEYADDR=(2)           CHANGE TO USER KEY       Y02072
         SPACE 2
         NC    DCBPUTX,DCBPUTX          DECB TO BE POSTED        A41652
         BZ    NOPOST                   NO - EXIT                A41652
         L     R2,DCBPUTX               GET SAVED DECB ADDR      A41652
         POST  DECBECB                  POST COMPLETION          A41652
**********************************************************************
*        DO NOT INSERT CODE BETWEEN POST AND RETURN                  *
**********************************************************************
NOPOST   EQU   *                                                 A41652
         RETURN ,                       RETURN TO SUPERVISOR     A41652
         EJECT
**********************************************************************
*        SUBROUTINES TO OBTAIN AND RELEASE THE LOCAL LOCK            *
**********************************************************************
         SPACE 2
GETLOCK  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         LR    R9,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END USING ON SAVE AREA   Y02072
         BALR  R3,R0                    ESTABLISH                Y02072
         USING *,R3                     ADDRESSABILITY           Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11 CHANGE TO KEYZERO      Y02072
         SPACE 2
**********************************************************************
*        OBTAIN THE LOCAL LOCK.  FREED AT FLCL1.                     *
**********************************************************************
         SPACE 2
GLCL1    SETLOCK  OBTAIN,TYPE=LOCAL,MODE=UNCOND,  OBTAIN THE     Y02072*
               RELATED=(IOB,IGG019GW(FLCL1))  LOCAL LOCK         Y02072
         USING IGGSAVE,R9               SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         BR    R11                      RETURN                   Y02072
         DROP  R3,R9                    END USINGS               Y02072
         SPACE 4
FREELOCK MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         LR    R9,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END USING ON SAVE AREA   Y02072
*
         BALR  R3,R0                    ESTABLISH                Y02072
         USING *,R3                     ADDRESSABILITY           Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11  CHANGE TO KEYZERO     Y02072
         SPACE 2
**********************************************************************
*        RELEASE THE LOCAL LOCK.  OBTAINED AT GLCL1.                 *
**********************************************************************
         SPACE 2
FLCL1    SETLOCK  RELEASE,TYPE=LOCAL,   RELEASE THE              Y02072*
               RELATED=(IOB,IGG019GW(GLCL1))  LOCAL LOCK         Y02072
         USING IGGSAVE,R9               SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         BR    R11                      RETURN                   Y02072
         DROP  R3,R9                    END USINGS               Y02072
         SPACE 4
**********************************************************************
*        SUBROUTINE TO FREE IOB.  ROUTINE USES BRANCH ENTRY TO       *
*        FREEMAIN                                                    *
**********************************************************************
         SPACE 2
FREEIOB  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         BALR  R9,R0                    ESTABLISH                Y02072
         USING *,R9                     ADDRESSABILITY           Y02072
         L     R5,IGGPDEB               PROTECTED DEB ADDR       Y02072
         USING IHADEB,R5                DEB ADDRESSABILITY       Y02072
         LR    R1,R0                    IOB ADDRESS              Y02072
         LA    R0,SP250IOB              IOB SIZE AND SUBPOOL     Y02072
         TM    DEBRPSID,RPS             RPS DEVICE               Y02072
         BZ    NORPS                    BR NOT RPS               Y02072
         AH    R0,RPSCCW                LNGTH OF RPS CCWS        Y02072
NORPS    L     R4,DEBTCBAD              TCB ADDR                 Y02072
         DROP  R5                       END USING ON DEB         Y02072
         USING PSA,R0                   LOW CORE ADDRESSABILITY  Y02072
         L     R7,PSAAOLD               ASCB ADDRESS             Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=5 CHANGE TO KEYZERO       Y02072
         SPACE 2
         LR    R5,R14                   SAVE SAVE AREA ADDR      Y02072
         IC    R6,IGGUKEY               USER'S PROTECT KEY       Y02072
         DROP  R14                      END USING ON SAVE AREA   Y02072
         SPACE 2
         FREEMAIN  RU,LV=(0),A=(1),SP=SP250,KEY=(R6),BRANCH=YES  Y02072
         USING IGGSAVE,R5               SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=4 CHANGE TO USER KEY   Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         BR    R1                       RETURN                   Y02072
         SPACE 4
RPS       EQU  X'E0'                    RPS MASK-BIT 0=P,1=I,2=O S20201
SIX      EQU   6                           BYTES FOR SEEK HH     S20201
RPSCCW   DC    H'16'                    LENGTH OF RPS CCW'S.     S20201
         DS    0F                                                S20201
SP250IOB EQU   56                       BASIC IOB=56 BYTES IN    Y02072
SP250    EQU   250                      SUBPOOL 250              Y02072
SP230    DC    AL1(230),AL3(IGGSIZE)    SAVEAREA IN SP 230       Y02072
KEY0     DC    X'00'                    CHANGE TO KEY ZERO       Y02072
INVASYCD DC    H'0'                PROGCHK FOR BAD ASYN CODE   @ZA26522
FOURTEEN DC    X'000E'             MAX VALUE FOR ASYN CODE     @ZA26522
*
MODID    DC    C'IGG019GW'              MODULE NAME            @ZA26522
DATE     DC    CL8'&SYSDATE'            FIX DATE               @ZA26522
FIX      DC    C' OZ26522'              LATEST FIX             @ZA26522
PATCH    DC    XL((*-IGG019GW)/20)'00'  ZEROED PATCH AREA        Y02072
*
BCBNAVB  EQU   8                        NEXT AVAIL DYN BUFF PTR  A26738
IHABUF   DSECT                DYNAMIC BUFFERING VECTOR TABLE
BUFFREED DS    A                       FREEDBUF ENTRANCE
BUFSIO   DS    A                       APPENDAGE ENTRANCE
         DS    A
BUFASYN  DS    A                       ASYNCHRONOUS ENTRANCE
IHADIS   DSECT                DISABLED MODULE VECTOR TABLE
DISQHN   DS    A                       Q-HANDLER
DISCP45  DS    A                       SET UP CP4 + CP5
DISCP7   DS    A                       SET UP CP7
DISCPS   DS    A                       SET UP CP1 OR CP2
DISCPWKN DS    A                        SET UP WRITE KN CP'S
DISPRIV  DS    A                        SCHEDULE READ AND UPDATE REQ
         EJECT
IHAWKNCP IGGWKNCP OPTCD=W WRITE KN CHANNEL PROGRAM REFERENCES    S20201
CP9A     EQU   *                                                 S20201
         IGGCP9A
         IGGCP9B OPTCD=W                                         S20201
         IGGCP9C OPTCD=W                                         S20201
         ORG     CP9A                         CP11               S20201
         IGGCP11A
         IGGCP11B OPTCD=W                                        S20201
         ORG     CP9A                         CP12A              S20201
         IGGCP12A
         ORG     CP9A                         CP12B              S20201
         IGGCP12B
         ORG     CP9A                       CP13A                S20201
         IGGCP13A
         ORG     CP9A                       CP13B                S20201
         IGGCP13B
         EJECT
*              DATA EVENT CONTROL BLOCK
IHADECB  DSECT
         DS    0F
DECBECB  DS    CL4                      EVENT CONTROL BLOCK (ECB)
DECBTYP1 DS    BL1                      TYPE B6 - 1 IF LENGTH IS S
*                                            B7 - 1 IF AREA IS S
DECBTYP2 DS    BL1                           B0 - 1 IF READ K
*                                            B1 - 1 IF READ KX
*                                            B2 - 1 IF READ KU
*                                            B4 - 1 IF WRITE K
DECBWKN  EQU   X'04'                         B5 - 1 IF WRITE KN
DECBLGTH DS    CL2                      LENGTH OF BLOCK
DECBDCBA DS    A                        POINTER TO DCB
DECBAREA DS    A                        ADDRESS OF AREA
DECBLOGR DS    A                        POINTER TO LOGICAL RECORD
DECBKEY  DS    A                        POINTER TO KEY
DECBEXC1 DS    BL1                      EXCPTN CD B0-RECORD NOT FOUND
*                                                 B1-RECORD LGTH CHK
*                                                 B2-NO SPACE
*                                                 B3-INVALID REQUEST
*                                                 B4-UNCORRECTABLE IO
*                                                 B5-UNREACHABLE BLOCK
*                                                 B6-OVERFLOW RECORD
*                                                 B7-DUPLICATE
DECBEXC2 DS    BL1                                B7-READ KU
         SPACE 2
IGGSAVE  IGGBISAV
         EJECT
         DCBD  DSORG=(IS)
         EJECT
IHAIOB   IGGIOBD
         EJECT
IHADCW   IGGBISAM
         EJECT
IHADEB   IGGDEBD
         EJECT
DCBFA    IGGDCBFA
         EJECT
CVTDEF   DSECT
         CVT
         SPACE 4
         IECDRQE                                                 Y02072
         SPACE 4
         IHAPSA                                                  Y02072
         END
