         TITLE 'IGG0192E - OPEN, QISAM LOAD MODE'
IGG0192E CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0192E                                              *
*                                                                     *
* DESCRIPTIVE-NAME = OPEN, QISAM LOAD MODE, INITIAL LOAD, OR RE-LOAD, *
*                    WITH HIGH-LEVEL INDICES.                         *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = CALCULATE THE SPACE REQUIRED FOR THE CYLINDER AND        *
*            MASTER INDICES (IF SPECIFIED).  BUILD THESE INDICES IN   *
*            INDEPENDENT INDEX AREA, OVERFLOW AREA OR IN PRIME AREA   *
*            IN THAT ORDER OF PRIORITY, BEGINNING WITH THE LAST       *
*            AVAILABLE EXTENT AND BACKING UP THROUGH PRIOR EXTENTS AS *
*            ADDITIONAL SPACE IS REQUIRED.                            *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES                      *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT                              *
*                                                                     *
* MODULE-TYPE = ISAM OPEN EXECUTOR                                    *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 974 DECIMAL BYTES                                  *
*                                                                     *
*    ATTRIBUTES = REENTRANT, PRIVILEGED                               *
*                                                                     *
* ENTRY-POINT = IGG0192E                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0192D      *
*              IN STORAGE PROTECT KEY 5 AND PRIVILEGED STATE.         *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED ON ENTRY ARE                          *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = TRANSFERS CONTROL IN STORAGE PROTECT KEY 5 TO  ISAM   *
*               OPEN EXECUTOR IGG0192F.                               *
*                                                                     *
* EXIT-ERROR = ABEND CODES:                                           *
*              038 - IN CROSSING EXTENT OBTAINING SPACE FOR INDICES   *
*                    ENCOUNTERED DIFFERENT DEVICE TYPE                *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB COPY AND DEB                                *
*                                                                     *
* TABLES = INDEX LOCATION TABLE                                       *
*                                                                     *
* MACROS = ABEND, MODESET, AND XCTL                                   *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
FORCORE  DSECT
         IECDSECT
ISLCOMON DSECT
         DS    0D
ISLECBA  DS    A                        FOR CP18 AND CP20
ISLIOBA  DS    CL40
ISLECBB  DS    A                        FOR CP21
ISLIOBB  DS    CL40
ISLECBC  DS    A                        FOR CP19
ISLIOBC  DS    CL40
ISLAREAZ DS    CL88                     FOR CP19
ISLIXLT  DS    CL104                    INDEX LOCATION TABLE
ISLNIRT  DS    CL3                      HHR OF DUMMY TRACK INDEX
ISLHIRT  DS    CL1                      NO INDX ENT ON PRIM DATA TRACK
ISLCBF   DS    F                        BUR CTRL PTR
ISLBMPR  DS    CL1                      USED TO BUMP CBF TO NEXT RCD
ISLFBW   DS    CL1                      NUM BUFS SCHED TO WRITE
ISLQC    DS    H                        NUM PRIME CYLINDERS
ISLM     DS    H                        NUM ENTRIES ON LAST TRK INDEX
ISLP     DS    H                        NUM TRACKS PER CYLINDER
ISLQ     DS    H                        NUM FULL TRKS TO BE INDEXED
ISLQ1    DS    H                        NUM TOTAL TRKS TO BE INDEXED
ISLQ2    DS    H                        NUM TRACKS IN CURNT INDEX
ISLQ3    DS    H                        NUM ENTRIES IN CURNT INDEX
ISLQ4    DS    H                        NUM CYLNDRS OF MASTER INDEX
ISLR2    DS    F                        ADR OF PRIME DEV TBL ENTRY
ISLDORE  DS    CL1                      SKIP OPEN 2D INDICATOR
ISLURSAV DS    16F                      USERS REGISTERS
ISLVRSAV DS    16F
ISLC1XF  DS    F                        WKAREA FOR TRK BACKUP RTN  MC1A
         EJECT
IHADEB   IGGDEBD                        DEB                      S20201
         EJECT
         DCBD  DSORG=(IS)
IGG0192E CSECT
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        BASE REGISTER FOR DCB
R2       EQU   2                        PTR TO I/O DEVICE TABLE
R3       EQU   3                        WORK REGISTER
R4       EQU   4                        WORK REGISTER
R5       EQU   5                        PTR TO INDEX LOCATION TABLE
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
R8       EQU   8                        PTR TO DEB EXTENT ENTRY FOR
R9       EQU   9                        WORK REG           HI LEVEL IND
R10      EQU   10                       WORK REGISTER
R11      EQU   11                       WORK REGISTER
R12      EQU   12                       BASE REG FOR USERS DEB
R13      EQU   13                       BASE FOR COMON WORK AREA
R14      EQU   14                       WORK REGISTER
R15      EQU   15                       WORK REGISTER
UCBTYPE  EQU   19                       OFFSET FOR UCB TYPE OF DEVICE
RCORE    EQU   4                        BASE FOR OPEN WORK AREA
RBASE    EQU   3                        BASE REG FOR THIS MODULE
RPAR     EQU   5                        ADDRESS OF PARAMETER TABLE
RWTG     EQU   6                        ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7                        CURRENT PARAMETER TBL ENTRY
RWTGC    EQU   8                        CURRENT WHERE-TO-GO TBL ENTRY
RJ       EQU   15                       WORK REGISTER
L1       EQU   1                        LENGTH                   S20201
***
*        CHART FD  CALCULATE HIGH LEVEL INDEX CAPACITY REQUIREMENTS
***
START    BALR  R15,0                    ESTABLISH ADDRESSABILITY
         USING *,R15
BASETAG  L     R1,0(RPARC)              R1 = ADDRESS OF DCB
         USING IHADEB,R12
         USING IHADCB,R1
         L     R13,DCBWKPT1             R13=ADR OF COMON WORK AREA
         USING ISLCOMON,R13
         LR    RBASE,R15                CHANGE MODULE BASE REGISTER
         L     RCORE,4(RWTGC)           RCORE=BASE OF OPEN WORK AREA
         USING FORCORE,RCORE
         STM   R0,R15,DXCCW1            SAVE REGISTERS           Y02072
         LR    R0,RCORE                 SAVE OPEN W/A ADDR       Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=5  SET USERS KEY        Y02072
*
         DROP  RCORE                    END ADDR                Y02072
         LA    R5,ISLIXLT               R5 POINTS TO INDX LOC TBL
*                                       WHERE EACH LEVEL INDEX START
*                                       AND END ADRESSES ARE SET UP
         L     R12,DCBDEBAD             R12 = DEB                  FDA1
         L     R2,ISLQ                  LOAD PTR TO IO DEVICE TABLE
         CLI   ISLDORE,X'E1'            TEST IF INDICES TO BE BUILT IN
*                                        PRIME
         MVI   ISLDORE,X'E1'            INDICES TO BE IN INDEX OR OVFLO
         L     R8,DCBWKPT5              R8 = PTR TO EXTENT WHERE
*                                       INDICES WILL BE BUILT
         LH    R7,ISLQ3                 R7=Q3= NUM PRIME CYL+1
         BNE   ISLFD13                  BR IF INDICES NOT IN PRIME
         SR    R8,R8                    CLEAR WORK REGISTERS
         STH   R8,18(R5)                SET ILT BB = 0
         BAL   R4,ISLFTRKS              GO CALCULATE NUMBER OF  SA67568
*                                       TRKS FOR CYLINDER INDEX SA67568
         LTR   R6,R6                    R6 = REMANIDER; R7 = Q2
         MVC   24(1,R5),DCBHIRCM        R=HIRCM IF REMAINDER = 0  18097
         BC    13,ISLFD02               BRANCH IF R = 0
         LA    R7,1(R7)                 Q2=Q2+ 1
         STC   R6,24(R5)                R= REMAINDER OF Q2 CALC   18097
ISLFD02  STH   R7,ISLQ2                 Q2=NO TRACKS NEEDED FOR CYL IND
         IC    R8,DEBNPEE               R8=NO OF PRIME EXTENT ENTRIES
         STC   R8,17(R5)                M OF ILT ENDING ADDR
         SLL   R8,4                     MPY BY 16, LENGTH OF EXTENT
         LA    R8,DEBDVMOD(R8)          PT DEVICE ENTRY          S20201
         MVC   20(4,R5),10(R8)          MOVE CCHH
         BAL   R3,ISLFF01               BACK-UP ROUTINE
ISLFD03  EQU   *
         CLI   DCBNTM,X'00'             WAS NTM SPECIFIED ?       18097
         BE    ISLFD08                  NO, BRANCH - NO MASTER    18097
*                                       INDEXES                   18097
         XC    ISLQ4(2),ISLQ4           Q4= NUM CYL OF HI LEVEL MSTR
*                                       INDX = 0 ON COMPLETION OF
*                                       CYL INDEX
ISLFD05  LH    R6,ISLQ2                 GET NUM TRKS IN THIS INDEX
         SR    R3,R3                    CLEAR WORK REGISTERS
         LR    R7,R3
         IC    R7,DCBNTM                Q2=NUM TRKS IN THIS INDEX
         CR    R6,R7                    Q2  VS NTM
         BC    2,ISLFD081               Q2 GTR THAN NTM, ANOTHER INDEX
         CH    R3,ISLQ4                 Q4=0,NUM CYL HI LVL INDX   FDE1
         BE    ISLFD08                  BRANCH=ONLY A CYLINDER INDEX
ISLFD051 C     R3,DEBFIEAD              INDICES DEVELOPED IN INDX  FDF1
         BNE   ISLFD08                  B IF YES
         C     R3,DEBFOEAD              TEST IF INDICES DEVELOPED IN
         BNE   ISLFD08                   OVFLO,  BRANCH = YES
*
* USING DEB BACK UP END ADR FOR CYL INDEX BY Q4 ENTRIES
*
         LR    R4,R3                    INDX DEVELOPED IN PRIME    FDG1
         IC    R4,ISLIXLT+24            R4=ILT END R FOR CYL INDX
         LH    R6,ISLQ4                 R6=NUM CYL USED FOR INDEX
ISLFD06  CR    R6,R4                    Q4  VS  END R
         BH    ISLFD07                  B IF Q4 GTR THAN R FOR TRACK
         SR    R4,R6                    R - Q4
         STC   R4,ISLIXLT+24            REDUCE R BY NUM CYL USED FOR
         B     ISLFD08                    MASTER INDEX
ISLFD07  SR    R6,R4                    Q4 - R
         STH   R6,ISLQ4                 R6 = Q4
         IC    R4,ISLIXLT+23            REDUCE ILT END HH BY 1 TRACK
         BCTR  R4,0                     LOOP TO REDUCE HH AND R BY Q4
         STC   R4,ISLIXLT+23
         IC    R4,DCBHIRCM              R4 = R ON TRACK
         B     ISLFD06
ISLFD08  EQU   *                                                 Y02072
         LM    R6,R7,0(R5)              LOAD FTHI = BEGIN ADDR   Y02072
         IC    R8,DCBNTHI               SAVE HI ORDER BYTE       Y02072
*
         MODESET  EXTKEY=DATAMGT        SET DATA MGMT KEY        Y02072
*
         STM   R6,R7,DCBNTHI            STORE FTHI               Y02072
         STC   R8,DCBNTHI               RESTORE HI ORDER BYTE    Y02072
         LR    RCORE,R0                 RESTORE OPEN W/A ADDR    Y02072
         USING FORCORE,RCORE            ESTABLISH ADDRESSABILITY Y02072
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         MVC   0(L'LOAD2F,RWTGC),LOAD2F INITIALIZE WHERE-TO-GO   Y02072
***********************************************************************
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BCR   8,RBASE                  BRANCH=BEGINNING OF THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
ATEND    LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
ITSZERO  LA    RWTGC,8(RWTGC)
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RJ,DXCCW12
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
         EJECT
***********************************************************************
*  DEVELOP ANOTHER INDEX
*
         DROP  RCORE                    END ADDRESSABILITY       Y02072
ISLFD081 CLI   DCBNLEV,X'04'            TEST IF 4 INDICES BUILT
         BE    ISLFD051                 BR IF YES, BUILD NO MORE
         IC    R3,DCBNLEV               INCREMENT NLEV BY ONE
         LA    R3,1(R3)
*
         MODESET  EXTKEY=DATAMGT        SET DATAMGMT KEY         Y02072
*
         STC   R3,DCBNLEV               REPLACE NLEV
         LR    R6,R0                    RESTORE OPEN WA ADDR     Y02072
         USING FORCORE,R6               ESTABLISH ADDRESSABILITY Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=6  SET USERS KEY        Y02072
*
         DROP  R6                       END ADDRESSABILITY       Y02072
*
*   USING DEB PICK UP BEGINNING ADDRESS IN CURRENT INDEX LOCATION TABLE
*   ENTRY. SET NEXT ENTRY ENDING ADDRESS TO TRACK PRECEEDING THIS ONE
*
         LA    R6,26(R5)                R6= ADDR OF NEXT ILT ENTRY
         IC    R3,7(R5)                 LAST ILT START HH
         EX    R3,TESTHH                SEE IF HEAD IS ZERO      A34907
         BZ    ISLFD10                  BR IF HH=0, CROSSING CYL
         BCTR  R3,0                     SET HH TO PRECEDING TRACK
         STC   R3,23(R6)                CURRENT ILT END H
         MVC   17(6,R6),1(R5)           SET CURNT ILT END ENTRY MBBCCH
*                                       FROM STRT ADDR OF PREV ENTRY
         B     ISLFD12                  BRANCH TO UPDATE ILT POINTER
*CROSSING A CYLINDER
ISLFD10  CLC   6(3,R8),4(R5)            BEG EXTNT CCH VS START CCH OF
*                                       LAST ILT ENTRY
         BE    ISLFD11                  BR IF CROSSING EXTENT
         LA    R9,1                     BACKUP CTR FOR SUBROUTINE
         BAL   R4,TSTCCH                SET TO PRECEDING CYLINDER
         MVC   20(3,R6),ISLC1XF+1       CURNT ILT END ENTRY CCH
         LH    R7,2(R2)                 SET R7 = NUMBER TPC
         BCTR  R7,0                                  - 1
         STC   R7,23(R6)                SET CURNT ILT END HH = TPC -1
         MVC   17(3,R6),1(R5)           SET CURNT ILT END ENTRY MBB
         B     ISLFD12                  BRANCH TO UPDATE ILT POINTER
*     CROSSING AN EXTENT
ISLFD11  SH    R8,ISLSXTEN              CROSSING AN EXTENT        18097
         CLC   0(6,R8),16(R8)           COMPARE UCB AND BB
         BNE   ABEND38                  ABEND IF NOT SAME
         IC    R3,1(R5)                 R3 = M OF EXTENT
         BCTR  R3,0                     BACK-UP 1 EXTENT
         STC   R3,17(R6)                SET CURNT ILT END ENTRY M
         MVC   20(4,R6),10(R8)          SET CURNT ILT END ENTRY CCHH
* UPDATE POINTER TO NEXT ENTRY OF INDEX LOCATION TABLE
ISLFD12  LR    R5,R6                    R5=ADR OF CURRENT ILT      FDJ2
         LH    R7,ISLQ2                 SET Q3 = Q2 + 1            FDK1
         LA    R7,1(R7)
         STH   R7,ISLQ3                 Q3 = NUM ENTRIES FOR THIS INDX
*     SET UP FOR CALCULATIONS
ISLFD13  SR    R3,R3                    CLEAR R3
         STH   R3,ISLQ2                 SET Q2=0,NUM TRKS CURNT INDX
         BAL   R4,ISLFTRKS              GO CALCULATE NUMBER OF  SA67568
*                                       TRKS FOR CYLINDER INDEX SA67568
         STH   R7,ISLQ                  Q=INTEGRAL PART Q3/HIRCM
         STH   R6,ISLM                  M=REMAINDE OF Q3/HIRCM     FDD4
         CR    R6,R3                    TEST IF REMAINDER = 0
         BE    ISLFD14                  BRANCH = YES
         LA    R7,1(R7)                 ADD 1 FOR PARTIAL TRACK
ISLFD14  STH   R7,ISLQ1                 SET Q1=Q ROUNDED, NUM TOTAL
*                                       TRKS TO BE INDEXED
         LH    R7,ISLP                  R7=P
         CR    R7,R3                    TEST IF P = 0
         BNE   ISLFD16                  BRANCH = P NOT ZERO
*  RESET P
ISLFD15  IC    R7,3(R2)                 GET TPC FROM H2          A27803
         STH   R7,ISLP                  SET  P = TPC
         LH    R6,ISLQ4                 R6=Q4,NUM CYL MSTR INDX
         LA    R6,1(R6)                 R6 = Q4+1
         STH   R6,ISLQ4                 Q4 INCREMENTED
*       GET SUFFICIENT NUMBER OF TRACKS FOR INDEX
ISLFD16  CH    R7,ISLQ1                 TPC VS TRKS NEEDED FOR THIS
*                                       INDEX
         BNL   ISLFD20                  BR IF P GTR OR = Q1
         LH    R4,ISLM                  R4 = M (REMAINDER BEYOND TRK)
         CR    R4,R9                    M VS HIRCM
         BL    ISLFD17                  BRANCH=M LESS THAN HIRCM
         LH    R7,ISLQ                  INCR NUM TRKS TO BE INDX'D FDH4
         LA    R7,1(R7)
         STH   R7,ISLQ                  REPLACE Q
         STH   R3,ISLM                  SET M TO  ZERO
         B     ISLFD18
ISLFD17  LA    R4,1(R4)                 INCREMENT M BY 1           FDG3
         STH   R4,ISLM                  REPLACE M
ISLFD18  LH    R7,ISLQ                  NUM TRKS TO BE INDX'D      FDH3
         SH    R7,ISLP                       MINUS TPC
         STH   R7,ISLQ                  R7=Q=NUM TRKS LEFT IN INDEX
         LH    R4,ISLM                  R4 = M
         CR    R4,R3                    TEST IF REMAINDER ZERO
         BE    ISLFD19                  BR IF M IS 0
         LA    R7,1(R7)                 INCR Q1, TOTAL NUM TRKS
ISLFD19  STH   R7,ISLQ1                 REPLACE Q1
         LH    R7,ISLQ2                                            FDJ3
         AH    R7,ISLP                  ADD P TO Q2
         STH   R7,ISLQ2                 REPL Q2=NUM TRKS IN THIS INDX
         LH    R7,ISLQ3
         LA    R7,1(R7)                 ADD 1 TO Q3                FDK3
         STH   R7,ISLQ3                 Q3 = NUM ENTRIES IN THIS INDEX
         B     ISLFD15
ISLFD20  EQU   *
         CLI   ISLM+1,X'00'             DO IX ENTRIES OCCUPY FULL TRK
         BNE   ISLFD21                  NO, ISLM OK
         MVC   ISLM+1(1),DCBHIRCM       SET M = HI R
ISLFD21  EQU   *
         LH    R7,ISLQ1                 ADD Q1 TO Q2               FDG5
         AH    R7,ISLQ2
         STH   R7,ISLQ2                 NEW NUM OF TRKS IN THIS INDEX
         MVC   24(1,R5),ISLM+1          SETUP ENDING R OF ILT ENTRY
         BAL   R3,ISLFF01
         LH    R7,ISLQ2                 R7=NUM TRKS USED FOR CURRENT
         AH    R7,DCBRORG2               INDEX ENTRIES
         SPACE 1
         MODESET  EXTKEY=DATAMGT        SET DATAMGMT KEY         Y02072
         SPACE 1
         STH   R7,DCBRORG2              RORG2= NUM TRKS USED FOR
*                                         ALL ENTRIES
         LR    R3,R0                    RESTORE OPEN WA ADDR     Y02072
         USING FORCORE,R3               ESTABLISH ADDRESSABILITY Y02072
*
         MODESET  KEYADDR=DXUKEY,WORKREG=3  SET USERS KEY        Y02072
*
         DROP  R3                       END ADDRESSABILITY       Y02072
         LA    R3,ISLIXLT               R3=ADR OF ILT 1ST ENTRY
         CR    R3,R5                    IF R5=R3, R5 PTS TO CYLNDR INDX
         BE    ISLFD03                  THIS IS A CYL INDEX      A34907
         B     ISLFD05                  NOT A CYLINDER INDEX
**
*          CHART FF BACK-UP SUBROUTINE -- BACK UP NECESSARY NUMBER
*            OF TRACKS TO HOLD NUMBER OF INDEX ENTRIES REQUIRED
**
ISLFF01  LH    R6,ISLQ2                 R6=Q2,NUM TRKS THIS INDX
         BCTR  R6,0                          -1
         MVI   8(R5),X'01'              SET ILT START R = 01
         MVC   1(7,R5),17(R5)           SET ILT START MBBCCHH=END ADR
ISLFF02  SR    R9,R9                    CLEAR
         SR    R10,R10                       WORK REGISTERS
         IC    R10,7(R5)                R10= START HH
ISLFF03  CR    R6,R10                   TRKS REQUIRED VS TRKS AVAILABLE
         BH    ISLFF05                  BR IF Q2-1 GTR THAN HH
*        SUBTRACT TRACKS NEEDED FROM TRACKS AVAILABLE
         SR    R10,R6                   NEED LESS THAN 1 CYLINDER
         STH   R10,ISLP                 STORE IN P TEMPORARILY
         STC   R10,7(R5)                SET ILT STRT HH =
*                                          EXTENT HH - (Q2-1)
         BAL   R4,TSTCCH                BACK UP TO GET END CC
         MVC   3(4,R5),ISLC1XF          SET ILT STRT CCH = ENDCCH
*                                          OF EXTENT MINUS BACKUP
         BR    R3                       RETURN THROUGH R3        S20201
*        SUBTRACT TRACKS AVAILABLE FROM TRACKS NEEDED
ISLFF05  SR    R6,R10                   REDUCE Q2-1 BY TRKS ON CYLINDER
         BCTR  R6,0                     ONE LESS CYL REFERENCE
         BAL   R4,TSTCCH                BACK UP TO GET END CC
         CLC   ISLC1XF+1(3),6(R8)       BACKED UP CC VS EXTNT STRT CC
         BE    ISLFF06                  BRANCH = CROSSING AN EXTENT
         LA    R9,1(R9)                 INCREMENT BACK-UP CTR
         IC    R10,3(R2)                RESET TO MAX NUM TRKS AVAILABLE
         BCTR  R10,0                          FOR NEW CYL
         B     ISLFF03                  BR TO TEST IF ENOUGH TRKS
ISLFF06  LR    R14,R8                   R14 = LAST DEB EXTENT ENTRY
         SH    R8,ISLSXTEN              BACK UP ONE EXTENT ENTRY  18097
         CLC   0(6,R8),0(R14)           COMPARE UCB ADDRESSES ABD
*                                        BB FIELDS
         BNE   ABEND38                  BRANCH-INDEX CROSSING VOLUMES
         IC    R10,1(R5)                REDUCE ILT START M BY 1
         BCTR  R10,0
         STC   R10,1(R5)                RESET START ILT ADR CCHH FROM
         MVC   4(4,R5),10(R8)             NEW EXTENT END CCHH
         B     ISLFF02                   BR TO BACK UP THRU EXTENT
*
*         BACK UP CYLINDER SUBROUTINE
*
TSTCCH   EQU   *
         MVC   ISLC1XF+1(3),4(R5)       MOVE IN CCH TO BACK UP CYL
         SR    R10,R10                  CLEAR WORK REG
         LR    R7,R9                    C(R7)= C (BACKUP CTR)
         LA    R14,ISLC1XF              C(R4)= A(ISLC1XF(CURNT CCH)
         L     R11,ISLC1XF              CC                       S20201
         SLL   R7,8                     CORRECT FOR CYL SHIFT    S20201
         SR    R11,R7                   CC-1                     S20201
         ST    R11,ISLC1XF              SAVE NEW CYLINDER        S20201
         BR    R4                       RETURN                   S20201
*
*        ROUTINE TO CALCULATE NUMBER OF TRACKS REQUIRED FOR HIGH
*        LEVEL INDICES.  ON INPUT, R7 MUST CONTAIN THE VALUE OF
*        (NO. PRIME CYLS + 1).  THIS ROUTINE ALLOWS FOR THE DUMMY
*        CHAINED ENTRY USED FOR EACH CYLINDER OF CYLINDER INDEX.
*
ISLFTRKS SR    R6,R6                    CLEAR WORK REGISTER     SA67568
         SR    R9,R9                    CLEAR REGISTER          SA67568
         IC    R9,3(R2)                 TRACKS PER CYLINDER     SA67568
         IC    R8,DCBHIRCM              INDEX ENTRIES PER TRACK SA67568
         MR    R8,R9                    NUMBER INDEX ENTRIES    SA67568
*                                       PER CYLINDER            SA67568
         BCTR  R9,0                     NO. ENTRIES PER CYL     SA67568
*                                       LESS 1 FOR DUMMY CHAIN  SA67568
         DR    R6,R9                    TOTAL NO. DUMMY CHAINED SA67568
*                                       REQUIRED FOR INDEX      SA67568
         AH    R7,ISLQ3                 (NO. PRIME CYL+1) +     SA67568
*                                          (NO. DUMMY CHAINED)  SA67568
         SR    R6,R6                    CLEAR REGISTER          SA67568
         SR    R9,R9                    CLEAR REGISTER          SA67568
         IC    R9,DCBHIRCM              INDEX ENTRIES PER TRACK SA67568
         DR    R6,R9                    NO. TRACKS REQUIRED FOR SA67568
*                                       INDEX                   SA67568
         BR    R4                       RETURN                  SA67568
*
*
ABEND38  EQU   *
         ABEND X'038',DUMP,,SYSTEM      SYSTEM 038 ABEND         Y02072
*
TESTHH   TM    ISLAREAZ+87,X'00'        EXECUTED INSTRUCTION     A34907
* CONSTANTS
ISLSXTEN DC    X'0010'
THISLOAD DC    C'2E'
OPNLOD7  DC    C'0S'
*
LOAD2F   DC    C'2F'                    ID OF MODULE IGG0192F    Y02072
*
PATCH    DC    XL50'00'                 ZEROED PATCH AREA        Y02072
         END
