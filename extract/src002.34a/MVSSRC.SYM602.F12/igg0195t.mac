         TITLE 'IGG0195T - OPEN, FULL TRACK INDEX WRITE'
IGG0195T CSECT
*
***********************************************************************
*                                                                     *
* MODULE-NAME = IGG0195T                                              *
*                                                                     *
* DESCRIPTIVE-NAME = ISAM OPEN, FULL TRACK INDEX WRITE                *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE OS/VS2-02, LEVEL 0                                 *
*                                                                     *
* FUNCTION = CALCULATE SIZE OF CP20 AND TISA (TRACK INDEX SAVE AREA)  *
*            AND GET CORE FROM SUBPOOL 250 FOR BOTH.  INITIALIZE      *
*            BOTH TISA AND CP20, USING CP20A FOR A FULL TRACK OF      *
*            TRACK INDEX ENTRIES, CP20B FOR A SHARED TRACK OF TRACK   *
*            INDEX ENTRIES, AND CP20C FOR WRITE CHECK OF CP20A/20B.   *
*            STORE ADDRESSES OF CP'S IN ISLVPTRS.  FOR VIRTUAL USERS, *
*            SPLIT CP20B FROM CP20C, AND CP20C FROM CP18 TO PREVENT   *
*            LONG CHANNEL PROGRAMS.                                   *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES.                     *
*                                                                     *
*    PATCH-LABEL = PATCH, A DC STATEMENT.                             *
*                                                                     *
* MODULE-TYPE = OPEN EXECUTOR                                         *
*                                                                     *
*    PROCESSOR = ASSEMXF-370R                                         *
*                                                                     *
*    MODULE-SIZE = 1043 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = PRIVILEGED, REENTRANT                               *
*                                                                     *
* ENTRY-POINT = IGG0195T                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = RECEIVES CONTROL FROM ISAM OPEN EXECUTOR IGG0195D FOR  *
*              RESUME LOAD WITH HIGH LEVEL INDICES, OR IGG0196G FOR   *
*              RESUME LOAD WITHOUT HIGH LEVEL INDICES, OR IGG0192G    *
*              FOR INITIAL LOAD.  RECEIVES CONTROL IN STORAGE PROTECT *
*              KEY 5 AND PRIVILEGED STATE.                            *
*                                                                     *
* INPUT = REGISTERS ESTABLISHED UPON ENTRY ARE                        *
*         REG 5 (RPAR) POINTS TO THE DCB COPY PARAMETER LIST          *
*         REG 6 (RWTG) POINTS TO THE O/C/EOV WHERE-TO-GO TABLE        *
*         REG 7 (RPARC) POINTS TO THE CURRENT ENTRY IN THE DCB COPY   *
*               PARAMETER LIST                                        *
*         REG 8 (RWTGC) POINTS TO THE CURRENT ENTRY IN THE WTG TABLE  *
*                                                                     *
* OUTPUT = REGISTERS 5 THROUGH 8 WILL BE IN THE SAME CONDITION AS     *
*          UPON ENTRY TO THIS MODULE                                  *
*                                                                     *
* EXIT-NORMAL = XCTL TO ISAM OPEN EXECUTOR IGG0195U IN STORAGE        *
*               PROTECT KEY 5.                                        *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL-REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA-AREAS = AREAS REFERENCED ARE:                               *
*                 FORCORE - OPEN WORK AREA                            *
*                 ISLCOMON - ISAM LOAD MODE WORK AREA                 *
*                                                                     *
*    CONTROL-BLOCKS = DCB COPY, DEB, AND IOB.                         *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = MODESET, GETMAIN, AND XCTL.                                *
*                                                                     *
* CHANGE-ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********************
* DCB REFERENCE    *
********************
         DCBD  DSORG=(IS)
         USING IHADCB,DCBREG
         EJECT
DEB      IGGDEBD                        DEB DSECT
         EJECT
ISLCOMON IGGLOAD
         USING ISLCOMON,ISLREG                                   S20201
         SPACE 3
IOBBCT   DSECT
         USING IOBBCT,BCTREG
         DS    0D
IOBFLAGS DS    0CL1                     FLAGS
IOBPTRA  DS    A                        PTR A
IOBB     DS    0CL1                     B
IOBPTRB  DS    A                        PTR B
IOBS     DS    0CL1                     S - STATUS FIELD FOR BUF NO 1
IOBABUF  DS    A                        A(BUF NO 1) - ADR OF BUF NO 1
         SPACE 3
********************
* IOB REFERENCE    *
********************
*
IHAIOB   DSECT
         USING IHAIOB,IOBREG
         DS    0D
IOBFLG1  DS    CL1                      FLAGS 1
IOBFLG2  DS    CL1                      FLAGS 2
         DS    CL1
IOBSNSE  DS    CL1                      SENSE
IOBECBAD DS    A                        ECB POINTER
IOBCSWD  DS    CL8                      CHANNEL STATUS WORD
IOBSIOC  DS    0CL1                     SIO CC
IOBCPSAD DS    A                        CHANNEL PROGRAM START ADR
IOBWT    DS    0CL1                     WEIGHT
IOBDCBAD DS    A                        DCB POINTER
IOBCPRAD DS    A                        CHANNEL PROGRAM RESTART ADR
IOBBCTI  DS    CL2                      BLK CTR INCR
IOBECT   DS    CL2                      ERROR CTR
IOBDADAD DS    0CL8
IOBDADA0 DS    CL1                      M
IOBDADA1 DS    CL1                       B
IOBDADA2 DS    CL1                        B
IOBDADA3 DS    CL1                         C
IOBDADA4 DS    CL1                          C
IOBDADA5 DS    CL1                           H
IOBDADA6 DS    CL1                            H
IOBDADA7 DS    CL1                             R
*
         EJECT
******************************
* OPEN WORK AREA REFERENCE   *
******************************
*
FORCORE  DSECT
         IECDSECT                                                Y02072
         EJECT
IGG0195T CSECT
         BALR  BASEREG,0                LOAD BASE REGISTER
         USING *,BASEREG                ESTABLISH BASE FOR CSECT
BASETAG  L     DCBREG,0(RPARC)          C(DCBREG)=A(DCB)
         L     RCORE,4(RWTGC)           C(RCORE)=A(OPEN WORK AREA)
         L     ISLREG,DCBWKPT1          C(ISLREG)=A(ISL WORK AREA)
         USING FORCORE,RCORE            OPEN WA ADDRESSABILITY   Y02072
         STM   R0,R15,DXCCW1            SAVE REGS FOR EXIT       Y02072
*
* EQUATE SYMBOLIC REGISTERS
*
R0       EQU   0
DCBREG   EQU   1                        DCB
IOBREG   EQU   2                        IOB
WORKREG  EQU   3
TISAREG  EQU   4
GETREG   EQU   5
GETREGA  EQU   6
GETREGB  EQU   7
GETREGC  EQU   8
BASEREG  EQU   9                        BASE FOR THIS MODULE
VPTRREG  EQU   10                       ISLVPTRS
BCTREG   EQU   11
ISLREG   EQU   12                       ISLCOMON
SAVEREG  EQU   13
REG14    EQU   14
R15      EQU   15
RBASE    EQU   3
RCORE    EQU   4
RPAR     EQU   5
RWTG     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RJ       EQU   15
K0       EQU   0                        CONSTANT                 S20201
K32      EQU   32                       CONSTANT                 S20201
K48      EQU   48                       CONSTANT                 S20201
K16      EQU   16                       CONSTANT                 S20201
K8       EQU   8                        CONSTANT                 S20201
SSECT    EQU   X'23'                    SET SECTOR               S20201
K2       EQU   2                        CONSTANT                 S20201
K4       EQU   4                        CONSTANT                 S20201
EOC      EQU   X'10'                    END OF CYLINDER
FLAG     EQU   10                       TISA FLAG BYTE
NOTVIRT  EQU   8                        NOT VIRTUAL CONDITION
VIRTUAL  EQU   X'80'                    VIRTUAL MARKER
L8       EQU   8                        CCW LENGTH
         EJECT
*
         LA    IOBREG,ISLIOBA           C(IOBREG)=A(IOBA)
         L     VPTRREG,DCBWKPT6         C(VPTRREG)=A(VPTRS)
***********************************************************************
*
*              INITIALIZE CHANNEL PROGRAM 20 FOR FULL TRACK
*              INDEX WRITE.
*
*              CP20A - FULL TRACK OF TRACK INDEX ENTRIES
*
*                      8(ISLHIRT)+32 IF WRITE CHECK OR
*                                +40 IF NO WRITE CHECK
*
*                      8(ISLNIRT) IF TRACK INDEX IS ON ONE TRACK
*
*              CP20B - SHARED TRACK OF TRACK INDEX ENTRIES
*
*                      8(3(ISLNIRT))+32 IF WRITE CHECK OR
*                                +40 IF NO WRITE CHECK
*
*                      3(ISLNIRT) - SRCH, TIC AND WRITE FOR
*                                   EACH ENTRY
*
*              CP20C - WRITE CHECK FOR CP20A/B
*
*                      8(3(ISLHIRT OR ISLNIRT))+40
*
*
*
*              CALCULATE THE SIZE OF CHANNEL PROGRAM 20B
*
***********************************************************************
*
         MODESET KEYADDR=DXUKEY,WORKREG=6  SET USERS KEY         Y02072
*
         LR    R0,RCORE                 OPEN WORK AREA ADDR      Y02072
         DROP  RCORE                    END WORK AREA USING      Y02072
*
         SR    GETREGA,GETREGA          CLEAR GETREGA
         SR    GETREGB,GETREGB          CLEAR GETREGB
         SR    GETREGC,GETREGC          CLEAR GETREGC
         CLI   DCBHIRSH,X'00'           TEST FOR SHARED TRK
         BE    FTI01                    NO CALCULATE CP20A
         IC    GETREGB,ISLNIRT+2        R OF DUMMY ENTRY
         LR    SAVEREG,GETREGB          SAVE MAX NO OF ENTRIES
*                                       FOR CP20C
         LR    TISAREG,GETREGB          SAVE FOR TISA CALCULATIONS
         MH    GETREGB,ISL24            3 CCW'S FOR EACH ENTRY   S20201
         LA    GETREGB,K32(GETREGB)     ADD 8 FOR TIC (3RD CCW)  S20201
*                                       PLUS 16 FOR TIC TO WR CHK
*                                       OR SEEK AND TIC TO CP 18
*                                       PLUS 8 FOR NOP/SET SECTOR
         CLI   ISLNIRT+1,X'00'          TI ON ONE TRACK
         BE    FTI03                    YES-SKIP CALC FOR CP20A
         EJECT
***********************************************************************
*
*              CALCULATE THE SIZE OF CHANNEL PROGRAM 20A IF NO
*              SHARED TRACK OR MULTIPLE TRACKS OF TRACK INDEX
*
***********************************************************************
FTI01    EQU   *
         IC    GETREGA,ISLHIRT          HIGH R ON TRK INDEX
         LR    SAVEREG,GETREGA          SAVE MAX NO OF ENTRIES
*                                       FOR CP20C
         LR    TISAREG,GETREGA          NO OF ENTRIES PER TRACK
         TM    ISLHIRT,X'01'            IS HIRT EVEN OR ODD
         BZ    FTI015                   BRANCH IF HIRT IS EVEN
         LA    TISAREG,1(TISAREG)       NO OF ENTRIES/TRK + 1
*                                       FOR SPLIT ENTRIES
FTI015   EQU   *
         CLI   ISLNIRT+1,X'00'          TRACK INDEX ON ONE TRACK
         BNE   FTI02                    NO - CONTINUE
*
*              CALCULATE THE SIZE OF CP20A FOR A NON-SHARED
*              TRACK THAT COULD HAVE LESS RECORDS THAN ISLHIRT
*
         IC    GETREGA,ISLNIRT+2        R OF DUMMY ENTRY
         LR    SAVEREG,GETREGA          SAVE MAX NO OF ENTRIES
*                                       FOR CP20C
         LR    TISAREG,GETREGA          NO OF ENTRIES PER TRACK
FTI02    EQU   *
         SLL   GETREGA,3                MULTPLY BY 8-SIZE OF CCW
         LA    GETREGA,K48(GETREGA)     ADD 24 FOR SRCH,TIC,TIC  S20201
*                                       PLUS 16 FOR TIC TO WR CHK
*                                       OR SEEK AND TIC TO CP18
*                                       PLUS 8 FOR NOP/SET SECTOR
         EJECT
***********************************************************************
*
*              CALCULATE THE SIZE OF THE TRACK INDEX SAVE AREA.
*
***********************************************************************
FTI03    EQU   *
         ST    SAVEREG,TSTWK1C          SAVE SAVEREG
         SR    WORKREG,WORKREG          CLEAR WORKREG
         IC    WORKREG,DCBKEYLE         C(GETREG)=KEYLEGTH
         LA    WORKREG,18(WORKREG)      ADD LENGTH OF COUNT + DATA
         LR    GETREG,WORKREG           SIZE OF EACH ENTRY
         MR    TISAREG,TISAREG          NO ENTRIES(SIZE EC ENTRY)
         LA    TISAREG,20(GETREG)       TISA+20 - CONTROL FIELD
*
*              ROUND THE SIZE OF TISA TO THE NEXT HIGHER MULTIPLE
*              OF EIGHT FOR CHANNEL PROGRAMS THAT WILL FOLLOW.
*
         LA    TISAREG,7(TISAREG)       ADD 7 TO TISA LENGTH
         ST    TISAREG,TSTWK2C          STORE TISA LENGTH
         NI    TSTWK2C+3,X'F8'          AND TISA LENGTH WITH F8
         L     TISAREG,TSTWK2C          C(TISAREG)=LENGTH OF TISA
*
*              ADD THE SIZE OF CHANNEL PROGRAM 20C IF WRITE CHECK.
*
         TM    DCBOPTCD,X'80'           WRITE CHECK
         BZ    FTI04                    NO WRITE CHECK
         LTR   GETREGA,GETREGA          TEST FOR CP20A
         BZ    FTI035                   NO
         SH    GETREGA,EIGHT            SUB CCW THAT TIC TO CP18
FTI035   LTR   GETREGB,GETREGB          IS THERE A CP20B
         BZ    FTI036                   NO
         SH    GETREGB,EIGHT            SUB CCW THAT TIC TO CP18
FTI036   LR    GETREGC,SAVEREG          MAX NO ENTRIES/TRACK
         MH    GETREGC,ISL24            3 CCW'S FOR EACH ENTRY   S20201
         LA    GETREGC,K32(GETREGC)     ADD 8 FOR TIC (3RD CCW)  S20201
*                                       PLUS 16 FOR SEEK,TIC TO CP18
*                                       PLUS 8 FOR NOP/SET SECTOR
         EJECT
***********************************************************************
*
*              GET MAIN STORAGE FOR CHANNEL PROGRAM 20 AND TISA.
*
***********************************************************************
FTI04    LR    GETREG,GETREGA           SIZE OF CP20A
         AR    GETREG,GETREGB           SIZE OF CP20B
         AR    GETREG,GETREGC           SIZE OF CP20C
         AR    GETREG,TISAREG           SIZE OF TISA
         LA    GETREG,0(GETREG)         ZERO HIGH ORDER BYTE
*
*
         LR    BCTREG,DCBREG            SAVE DCB POINTER
         LR    REG14,R0                 SAVE OPEN WA ADDR        Y02072
         GETMAIN R,LV=(GETREG),SP=250                            S20201
         LR    R0,REG14                 RESTORE OPEN WA ADDR     Y02072
         ST    GETREG,K16(DCBREG)       SAVE TISA LENGTH IN TISA S20201
         LR    GETREG,DCBREG            GET A(TISA)              S20201
         LR    DCBREG,BCTREG            RESTORE DCB POINTER      S20201
         EJECT
***********************************************************************
*
*              STORE CHANNEL PROGRAM 20 POINTERS IN ISLVPTRS.
*
***********************************************************************
FTI042   EQU   *
         ST    GETREG,36(0,VPTRREG)     VPTRS+36=A(TISA)
         OI    36(VPTRREG),X'C0'        BIT 0 ON-FULL TRACK INDEX
*                                       BIT 1 ON-SUCCESSFUL GETMAIN
         LA    GETREG,K8(GETREG,TISAREG) A(CCW1) - SKIP NOP      S20201
         LTR   GETREGA,GETREGA          IS THERE A CP20A
         BZ    FTI043                   NO
         ST    GETREG,20(0,VPTRREG)     VPTRS+20=A(CP20A)
         AR    GETREG,GETREGA           ADD LENGTH OF CP20A)
         LTR   GETREGB,GETREGB          IS THERE A CP20B
         BZ    FTI044                   NO
FTI043   EQU   *
         ST    GETREG,40(0,VPTRREG)     VPTRS+40=A(CP20B)
         AR    GETREG,GETREGB           ADD LENGTH OF CP20B
FTI044   EQU   *
         TM    DCBOPTCD,X'80'           WRITE CHECK
         BZ    FTI045                   NO - BRANCH
         ST    GETREG,44(0,VPTRREG)     VPTRS+44=A(CP20C)
FTI045   SR    GETREGC,GETREGC          CLEAR GETREGC
         LTR   GETREGA,GETREGA          IS THERE A CP20A
         BZ    INIT20C                  NO
         EJECT
***********************************************************************
*
*              INITIALIZE CHANNEL PROGRAM 20A TO WRITE A FULL
*              TRACK OF TRACK INDEX ENTRIES.
*
***********************************************************************
         L     GETREG,ISLVPTRS+20       A(CP20A)
         ST    GETREG,ISLFXWK1          SAVE FOR SEEKTIC RTN
         IC    GETREGC,ISLHIRT          NO OF REC FOR CP20A
         CLI   ISLNIRT+1,X'00'          TI ON ONE TRACK
         BNE   FTI048                   NO - CONTINUE
         IC    GETREGC,ISLNIRT+2        R OF DUMMY ENTRY
FTI048   EQU   *
         LR    BCTREG,WORKREG           TI SIZE FOR CCW
*                                       INITCP20 ROUTINE)
*
         L     TISAREG,36(VPTRREG)      A(TISA)
         LA    TISAREG,20(0,TISAREG)    A(TISA)+20
         BAL   REG14,SETSECT            ADD SET SECTOR COMMAND   S20201
         MVI   0(GETREG),SSECT          RESTORE OPCODE           S20201
         LA    GETREG,K8(GETREG)        RESTORE ADDRESSABILITY   S20201
         LA    GETREGA,IOBDADA3         IOBA+35
         BAL   REG14,SRCHTIC            SRCH, TIC CCW RTN
         BAL   REG14,TIC                BR TO TIC CCW RTN
         LM    GETREGA,GETREGB,CCW3     WRITE CKD CCW
         OR    GETREGB,BCTREG           TI ENTRY SIZE
FTI05    LA    GETREG,8(GETREG)         BUMP TO NEXT CCW
         OR    GETREGA,TISAREG          COMBINE COMMAND & ADDR
         STM   GETREGA,GETREGB,0(GETREG)
         AR    TISAREG,WORKREG          ADD TI ENTRY SIZE TO TISA
         L     GETREGA,CCW3             WRITE CKD CCW
         BCT   GETREGC,FTI05            DECREMENT NO OF REC
CC       EQU   X'40'                    COMMAND CHAINING
*   SPLIT CP 20A OR B FROM CP 20C OR CP18 TO PREVENT LONG CPS.
         BAL   R15,UNCHAIN              SPLIT IF NECESSARY
         BAL   REG14,SEEKTIC            BR TO SEEK, TIC CCW RTN
         CLI   DCBHIRSH,X'00'           SHARED TRACK
         BNE   FTI052                   YES - CONTINUE
         L     GETREGA,ISLFXWK1         A(CP20A)
         IC    GETREGC,ISLNIRT+2        R OF DUMMY ENTRY
         SLL   GETREGC,3                MULTIPLY BY 8
         SR    GETREG,GETREGC           A(1ST CCW IF HIRT>NIRT)
         ST    GETREG,20(GETREGA)       SAVE IN SECOND TIC
FTI052   B     INIT20C                  BR TO INIT CP20C
*
         EJECT
***********************************************************************
*
*              ROUTINES TO INITIALIZE CHANNEL PROGRAM 20
*
*
*
*              INITIALIZE SEARCH AND TIC CCW
*
***********************************************************************
SETSECT  EQU   *                        ATTACH NOP TO FRONT      S20201
         SH    GETREG,EIGHT             PT TO SLOT FOR NOP       S20201
         LA    GETREGA,ISLRPSSS+K2      SECTOR LOCATION          S20201
         O     GETREGA,CCW0             ADD OPCODE               S20201
         ST    GETREGA,0(GETREG)        SAVE                     S20201
         MVC   K4(K4,GETREG),CCW0+K4    SAVE                     S20201
         BR    REG14                    RETURN                   S20201
*
SRCHTIC  O     GETREGA,CCW1             COMBINE SRCH + A(CCHHR)
         L     GETREGB,CCW1A            SRCH
         STM   GETREGA,GETREGB,0(GETREG)
         LM    GETREGA,GETREGB,CCW2     TIC
         OR    GETREGA,GETREG           COMBINE TIC AND ADDR
         LA    GETREG,8(GETREG)         BUMP TO NEXT CCW
         STM   GETREGA,GETREGB,0(GETREG)
         BR    REG14                    RETURN
*
*              INITIALIZE TIC CCW
*
TIC      LA    GETREG,8(GETREG)         BUMP TO NEXT CCW
         LA    GETREGA,8(GETREG)        A(FIRST WRITE OR READ CCW)
         O     GETREGA,CCW2             TIC
         STM   GETREGA,GETREGB,0(GETREG) TIC FOR RESUME LOAD
         BR    REG14                    RETURN
*
*              ADD TIC TO CP20C IF WRITE CHECK, OTHERWISE ADD
*              SEEK AND TIC TO CP18
*
SEEKTIC  LA    GETREG,8(GETREG)         BUMP TO NEXT CCW
         TM    DCBOPTCD,X'80'           WRITE CHECK
         BO    FTI055                   YES - SET TIC TO WR CHK
*
*              SET UP SEEK TO PRIME DATA TRACK AND TIC TO CP 18
*
SEEKT    L     GETREGA,36(VPTRREG)      A(TISA)
         LA    GETREGA,1(GETREGA)       A(TISA+1)
         O     GETREGA,CCW6             COMBINE SEEK AND TISA ADDR
         L     GETREGB,CCW6A            2ND HALF OF SEEK CCW
         STM   GETREGA,GETREGB,0(GETREG) STORE SEEK CCW
         MVC   8(8,GETREG),CCW2         TIC (TO CP18)
         L     GETREGA,ISLFXWK1         A(CP20A OR B OR C)
         LA    GETREGB,8(GETREG)        ADD 8 FOR A(TIC)
         ST    GETREGB,12(GETREGA)      SAVE A(TIC TO CP18)
         B     FTI056                   BR TO INIT NEXT CP
FTI055   LM    GETREGA,GETREGB,CCW2     TIC
         L     TISAREG,ISLVPTRS+44      A(CP20C)-MAY BE ZERO
         SH    TISAREG,EIGHT            POINT TO NOP             S20201
         OR    GETREGA,TISAREG          A(CP20C) PLUS TIC
         STM   GETREGA,GETREGB,0(GETREG)
FTI056   EQU   *
         BR    REG14                    RETURN
         EJECT
***********************************************************************
*
*              INITIALIZE CHANNEL PROGRAMS 20 B AND C WITH
*              A SEARCH AND TIC CCW BETWEEN EACH READ OR
*              WRITE KEY DATA CCW.
*
***********************************************************************
CP20BC   EQU   *
         LA    TISAREG,8(SAVEREG)       ADD COUNT FOR A(KEY)
         LR    BCTREG,WORKREG           TI ENTRY SIZE
         SH    BCTREG,EIGHT             TI SIZE-8 FOR CCW CNT
         BAL   REG14,SRCHTIC            SRCH, TIC CCW RTN
         BAL   REG14,TIC                BR TO TIC CCW RTN
         B     WRITECCW                 BR TO INSERT WRITE CCW
FTI06    LA    GETREG,8(GETREG)         BUMP CP20B FOR NEXT CCW
         LR    GETREGA,SAVEREG          SRCH ADDRESS
         BAL   REG14,SRCHTIC            BR TO SRCH, TIC CCW RTN
WRITECCW EQU   *
         LM    GETREGA,GETREGB,ISLFXWK2 W KD CCW
         OR    GETREGB,BCTREG           TI ENTRY SIZE
         LA    GETREG,8(GETREG)         BUMP CP20B FOR NEXT CCW
         OR    GETREGA,TISAREG          COMBINE W KD WITH ADDR
         STM   GETREGA,GETREGB,0(GETREG)
         AR    TISAREG,WORKREG          BUMP A(TISA)-NEXT TI
         AR    SAVEREG,WORKREG          NEXT SRCH ADDRESS
         BCT   GETREGC,FTI06            DECREMENT NO OF REC
UNCHAIN  EQU   *                        *
*   TEST FOR VIRTUAL = REAL TO SEE IF CHANNEL PROGRAM SHOULD BE SPLIT.
*
         L     REG14,DCBDEBAD           DEB ADDR FROM DCB COPY   Y02072
         USING DEB,REG14                *
         L     REG14,DEBAPPAD           AVT ADDRESSABLITY
         USING DEBAVT,REG14             *
         TM    DEBSIOA,VIRTUAL          IS THIS VIRTUAL
         BCR   NOTVIRT,R15              NO - DON'T SPLIT
*   SPLIT CP 20B OR C FROM CP 20C OR CP18 TO PREVENT LONG CPS.
         NI    K4(GETREG),X'FF'-CC      DISCONNECT CP'S
         BR    R15                      RETURN
         EJECT
***********************************************************************
*
*              INITIALIZE CHANNEL PROGRAM 20C TO WRITE CHECK.
*
***********************************************************************
INIT20C  TM    DCBOPTCD,X'80'           WRITE CHECK
         BZ    INIT20B                  DO NOT INIT CP20C
         L     GETREG,ISLVPTRS+44       A(CP20C)
         BAL   REG14,SETSECT            ADD NOP COMMAND          S20201
         LA    GETREG,K8(GETREG)        RESTORE ADDRESSABILITY   S20201
         ST    GETREG,ISLFXWK1          SAVE FOR SEEKT ROUTINE
         LR    GETREGC,SAVEREG          MAX NO OF REC-FOR CP20C
         L     TISAREG,36(VPTRREG)      A(TISA)
         LA    SAVEREG,20(0,TISAREG)    A(TISA)+20
         LR    GETREGA,SAVEREG          A(1ST COUNT) FOR SRCH
         MVC   ISLFXWK2(8),CCW5         SAVE R KD FOR INIT
         BAL   R15,CP20BC               BR TO INITIALIZE CP20C
         LA    GETREG,8(GETREG)         BUMP TO NEXT CCW
         BAL   REG14,SEEKT              BR TO TIC CCW RTN
         IC    GETREGC,ISLNIRT+2        R OF DUMMY ENTRY
         MH    GETREGC,ISL24            3 CCW'S FOR EACH ENTRY   S20201
         SH    GETREGC,ISL16            ADD 16 FOR SRCH, TIC
         SR    GETREG,GETREGC           A(1ST CCW FOR SHR TRK)
         ST    GETREG,20(GETREGA)       SAVE IN SECOND TIC
*
         CLI   DCBHIRSH,X'00'           SHARED TRACK
         BE    TISAINIT                 NO - DO NOT INIT CP20B
         L     SAVEREG,0(GETREG)        A(1ST SHR TRK ENTRY IN TISA)
         SH    SAVEREG,EIGHT            BACK UP TO COUNT
         LA    SAVEREG,0(SAVEREG)       CLEAR FOR SRCH TIC ROUTINE
         B     WC20B                    BR TO INIT CP20B FOR WC
         EJECT
***********************************************************************
*
*              INITIALIZE CHANNEL PROGRAM 20B TO WRITE A SHARED
*              TRACK.
*
***********************************************************************
INIT20B  CLI   DCBHIRSH,X'00'           SHARED TRACK
         BE    TISAINIT                 NO-DO NOT INIT CP20B
         L     TISAREG,36(VPTRREG)      A(TISA)
         LA    SAVEREG,20(0,TISAREG)   + 20 FOR CONTROL FIELDS
*                                       A(CCHHR) FOR SRCH
WC20B    EQU   *
         SR    GETREGC,GETREGC          CLEAR GETREGC
         IC    GETREGC,ISLNIRT+2        R OF DUMMY ENTRY
         L     GETREG,ISLVPTRS+40       A(CP20B)
         ST    GETREG,ISLFXWK1          SAVE FOR SEEKTIC RTN
         MVC   ISLFXWK2(8),CCW4         SAVE W KD CCW
         BAL   REG14,SETSECT            ADD SET SECTOR COMMAND   S20201
         LA    GETREGA,IOBDADA3         IOBA + 35 FOR 1ST SRCH   S20201
         MVI   K0(GETREG),SSECT         RESTORE OPCODE           S20201
         LA    GETREG,K8(GETREG)        RESTORE ADDRESSABILITY   S20201
         BAL   R15,CP20BC               BR TO INITIALIZE CP20B
         BAL   REG14,SEEKTIC            BR TO SEEK, TIC CCW RTN
         EJECT
***********************************************************************
*
*              INITIALIZE TRACK INDEX SAVE AREA (TISA)
*
***********************************************************************
TISAINIT L     TISAREG,36(VPTRREG)      A(TISA)
         MVC   0(8,TISAREG),IOBDADA0    MOVE IOBA TO TISA
         SLL   WORKREG,16               SHIFT LEFT 2 BYTES
         ST    WORKREG,8(0,TISAREG)     TI ENTRY SIZE-TISA+8
         MVC   11(1,TISAREG),TSTWK1C+3  HIGH R FOR 1ST TRK OF TI
         MVI   FLAG(TISAREG),EOC        MARK IT END OF CYLINDER
         LA    GETREGB,20(0,TISAREG)    A(NEXT ENTRY)
         ST    GETREGB,12(0,TISAREG)    TISA+13=A(NEXT ENTRY)
*                                       SET CURR R = 0
         EJECT
*
* EXIT ********** EXIT ***************** EXIT *********** EXIT ********
*
EXIT     EQU   *
*
         MODESET  EXTKEY=DATAMGT        SET DATA MANAGEMENT KEY  Y02072
*
         LR    RCORE,R0                 ADDR OF OPEN WORK AREA   Y02072
         USING FORCORE,RCORE            OPEN WA ADDRESSABILITY   Y02072
         LM    R0,R15,DXCCW1            RESTORE REGISTERS        Y02072
         USING BASETAG,RBASE            ESTABLISH BASE
         MVC   0(L'LOAD5U,RWTGC),LOAD5U ID - 5U FOR RESUME LOAD  Y02072
RELOOP   LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)           INCREMENT DCB CURNT ENTRY
         CLC   0(2,RWTGC),THISLOAD
         BE    BASETAG                  BR-BEGIN THIS MODULE
         CLC   0(2,RWTGC),OPNLOD7       TEST FOR END OF WTG TABLE
         BC    7,RELOOP                 BRANCH=NOT AT END
         LR    RPARC,RPAR               INITIALIZE RPARC
         LA    RWTGC,32(RWTG)           INITIALIZE RWTGC
ZCHECK   CLI   0(RWTGC),X'00'           TEST FOR ENTRY = 0
         BC    7,TCTLRTN                BRANCH = NOT ZERO
         LA    RWTGC,8(RWTGC)           INCREMENT WTG CURNT ENTRY
         LA    RPARC,4(RPARC)
         B     ZCHECK
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID
         LA    RJ,DXCCW12
         XCTL  EPLOC=(RWTG),DCB=0,SF=(E,(15)) XCTL TO NEXT LOAD  Y02072
*
*
         EJECT
*
EIGHT    DC    H'0008'
ISL16    DC    H'16'
ISL24    DC    H'24'                    CONSTANT                 S20201
*
THISLOAD DC    C'5T'                    CURRENT MODULE ID
OPNLOD7  DC    C'0S'
*
*
*              CHANNEL PROGRAM 20 - FULL TRACK INDEX WRITE
*
         DS    0D
CCW0     CCW   X'03',0,X'60',1          NOP  RPS                 S20201
CCW1     CCW   X'31',0,X'40',5          SRCH
CCW2     CCW   X'08',0,X'00',0          TIC
CCW3     CCW   X'1D',0,X'40',0          W CKD  CP20A
CCW4     CCW   X'0D',0,X'40',0          W KD   CP20B
CCW5     CCW   X'0E',0,X'50',0          R KD   CP20C
CCW6     CCW   X'1B',0,X'40',6          SEEK
*
CCW1A    EQU   CCW1+4
CCW6A    EQU   CCW6+4
*
LOAD5U   DC    C'5U'                    ID OF MODULE IGG0195U    Y02072
*
PATCH    DC    XL((*-IGG0195T)/20)'00'  ZEROED PATCH AREA        Y02072
         END
