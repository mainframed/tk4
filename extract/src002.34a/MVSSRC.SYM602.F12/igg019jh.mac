         TITLE 'IGG019JH-SIO APPENDAGE FOR RPS AND NON-RPS CP INIT'
IGG019JH CSECT
*          RELEASE OS/VS2-02 DELETIONS/CHANGES                   Y02072
*D                                                               Y02072
*D                                                              YM02868
*A                                                              YA03708
*          RELEASE 20 DELETIONS/CHANGES
*0000                                                            M4967
*0000765000,820200-821400                                        M6178
*0000                                                            M5874
*          RELEASE 21 DELETIONS/CHANGES
*1200                                                            A45232
*1200                                                            A45232
*1200                                                            A44446
*1200298800                                                      A46644
*1200548340,551400,555600-556800                                 MXXXX
*1200                                                            A50669
*1200                                                            A51136
*D539400-540000,A536900-536920                                  SA68845
*          CHANGES SINCE VS2-3.7                                      *
*A038600-038800,A834200-834400                                 @ZA26522
*
* FUNCTION/ OPERATION- THIS MODULE IS THE APPENDAGE ROUTINE THAT
* INITIALIZES THE BISAM CHANNEL PROGRAMS TO UTILIZE THE ROTATIONAL
* POSITION SENSING (RPS) FEATURE OR NOT. THE PRESENCE OF THE FEATURE
* IS DETERMINED BY THE UCB.  THE RPS FEATURE IS EXPLOITED BY
* CHANGING CERTAIN CCW'S IN THE BISAM CHANNEL PROGRAMS FROM
* NOP TO SET SECTOR, WITH ATTENDANT CALCULATION OF THE PROPER
* SECTOR VALUE.  ADDITIONALLY SOME TIC ADDRESSES MUST BE CHANGED
* TO BRING THE SET SECTOR CCW'S INTO USE.
* ENTRY POINT- IGG019JH IS THE ONLY ENTRY POINT.  THE MODULE IS
*              ENTERED AT SIO TIME BY IOS VIA THE DEB APPENDAGE
*              VECTOR TABLE.
* INPUT-       THE IOS REGISTER INTERFACE IS THE PRINCIPAL INPUT
*              TO THE MODULE. THEY PROVIDE ADDRESSABILITY FOR THE DCB.
*              WORK AREA, IOB, DEB, CHANNEL PROGRAMS , ETC.
* OUTPUT-      THE CHANNEL PROGRAM TO BE EXECUTED ON THIS SIO WILL BE
*              INITIALIZED ACCORDING TO THE DEVICE FEATURE (RPS OR
*              NON RPS) IN THE UCB.
*              EXTERNAL ROUTINES- IEA0SCRL VIA CVT0SCRL.  THE ROUTINE
*              DOES CONVERSION OF THE INPUT PARAMETERS TO A SECTOR
*              VALUE
* EXITS-       NORMAL RETURN TO IOS, TO PROCEED WITH SIO.
* TABLES/WORK AREAS - DECB, DCB, IOB AND EXTENTION, DCB WA (DCW), DEB,
*        CVT, PART 2 VECTOR TABLE.
*        SEE DSECTS AT END OF MODULE FOR FORMAT AND DESCRIPTIONS.
*
* GENERAL REGISTERS ARE USED AS FOLLOWS
R0       EQU   0                        * WORK REGISTER
R1       EQU   1                        * 12* ADDRESS
R2       EQU   2                        * IOB AND WORK REGISTER
R3       EQU   3                        * DEB AND WORK REGISTER
R4       EQU   4                        * DCB
R5       EQU   5                        * -----
R6       EQU   6                        * ----
R7       EQU   7                        * UCB
R8       EQU   8                        * -----
R9       EQU   9                        + WORK REGISTER
R10      EQU   10                       CHANNEL PROGRAM POINTER
R11      EQU   11                       WORK REGISTER
R12      EQU   12                       WORK REGISTER
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       IOS RETURN VECTOR TABLE
R15      EQU   15                       BASE REG AND ADDR OF ENTRY
*                                       POINT TO SECTOR CALCULATION
*                                       ROUTINE
*1200513000-514200                                               A43729
*
*        * MEANS THIS REGISTER IS SET UP UPON ENTRY FROM IOS,
*          AND ITS CONTENTS MUST BE RESTORE UPON RETURN TO IOS
*        + MEANS THIS REGISTER MAY BE CHANGED, BUT UPON RETURN TO IOS
*          IT MUST CONTAIN ZEROES IN THE THREE HIGH ORDER BYTES
*
         EJECT
         USING *,R15
         USING IHADCB,R4
         USING IHAIOB,R2
         USING RQE,R1                   RQE ADDRESSABILITY       Y02072
         SPACE 2
         STM   R14,R12,0(R13)           SAVE REGS FOR EXCP      YM02868
         LR    R5,R13                   SAVE SAVE AREA ADDRESS  YM02868
         SPACE 2
         MODESET  KEYADDR=RQEPRT,WORKREG=10 CHANGE TO USERS KEY  Y02072
         SPACE 2
         L     R10,IOBSTART-ONE         ADDR OR CP OR PREFIX
         LA    R10,ZERO(R10)            CLEAR HIGH ORDER BYTE
         LA    R11,IOBSECT              SECTOR ADDR INTO R11
         MVI   IDXOVFLO,ZERO            CLEAR WORK BYTE         YA03708
         IC    R9,IOBAPP                APP CODE USED AS INDEX
         CH    R9,TWOFOUR           IS APP CODE GT 24?         @ZA26522
         BH    INVAPPCD             IF YES-GO PROG CHK         @ZA26522
         SLL   R9,2                     MULTIPLY BY 4
         B     APPSIOTB(R9)             BRANCH TO SET-UP CP'S
*
***********************************************************************
*****               SIO APPENDAGE VECTOR TABLE                    *****
***********************************************************************
*
*             APPENDAGE CODE      FOR COMPLETION OF
*                    0         CP4 OR CP5/5W FOR READ
*                    1         CP4 OR CP5/5W FOR WRITE
*                    2         CP7/7W
*                    3         CP1 OR CP2
*                    4         CP14 PART2 FOR FIXED
*                    5         CP6/6W
*                    6         INVALID
*                    7         CP1 OR CP2 FOR WKN
*                    8         CP8
*                    9         CP10A-FIXED CP14-VLR (EOF EXTN)
*                    10        CP10B-FIXED CP14-VLR
*                    11        CP10B
*                    12        CP14 OR CP14 PART1
*                    13        CP14 OR CP14 PART1
*                    14        CP15
*                    15        CP16
*                    16        CP16
*                    17        CP17-FIXED CP14-VLR
*                    18        CP17
*                    19        CP17
*                    20        CP9A,CP11A,CP12A,CP13A OR CP12AV
*                    21        CP9B,CP11B,CP12B,CP13B OR CP12BV
*                    22        CP9C,CP123W OR CP123WV
*                    23        CP10A/10AW
*                    24        CP12C/12CW OR CP13C/13CW
*
APPSIOTB EQU   *                        APPENDAGE CODES
         B     APPCD0                   0
         B     APPCD0                   1
         B     APPCD2                   2
         B     APPCD3                   3
         B     APPCD4                   4
         B     APPCD5                   5
         B     APPRET                   6
         B     APPCD3                   7
         B     APPCD8                   8
         B     APPCD9                   9
         B     APPCD10                  10
         B     APPCD10                  11
         B     APPCD4                   12
         B     APPCD4                   13
         B     APPCD14                  14
         B     APPCD15                  15
         B     APPCD15                  16
         B     APPCD17                  17
         B     APPCD170                 18
         B     APPCD170                 19
         B     APPCD20                  20
         B     APPCD21                  21
         B     APPCD22                  22
         B     APPCD23                  23
         B     APPCD24                  24
         EJECT
*
*        COMMOM EXIT ROUTINE. RESTORE REGISTERS AND RETURN
*        VIA REGISTER 14
*
APPNOMO  EQU   *                        RESTORE IOS REGISTERS AND EXIT
         L     R3,RQEDEB                RESTORE DEB ADDRESS
         LA    R3,ZERO(R3)              CLEAR HIGH ORDER BYTE
APPRET   EQU   *                        *
         SPACE 2
         MODESET  KEYADDR=KEYZERO,WORKREG=9  CHANGE TO KEY ZERO  Y02072
         SPACE 2
         LM    R14,R12,0(R5)            RESTORE REGS FOR EXCP   YM02868
         SR    R9,R9                    CLEAR REG 9
         BR    R14                      RETURN TO IOS
         EJECT
*
*        APPENDAGE CODE 0, 1, SET UP CP4-5-5W FOR READ OR WRITE
*
         USING CP4,R10
APPCD0   EQU   *                        *
         L     R9,IOBCCWAD              ADDR OF CP4
         LA    R9,ZERO(R9)              CLEAR HIGH ORDER BYTE
         CR    R10,R9                   DOES CP START AT CP4
         BNE   APPCD02                  BNE MEANS NO
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD01                  BZ MEANS NON RPS
         MVI   CA6B,SETSECT             MOVE IN SET SECT CMD CODES
         MVI   CA15,SETSECT
         ST    R11,CA24                 PUT SECTOR ADDR IN CCW
         MVI   CA24,RDSECT              MOVE IN READ SECT CMD CODE
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPRET                   BRANCH MEANS NO-EXIT
         ST    R11,CA240                PUT SECTOR ADDR IN WC CCW
         MVI   CA240,SETSECT            MOVE IN SET SECT CMD CODE
         B     APPRET                   COMMON EXIT
*
APPCD01  EQU   *                        *
         MVI   CA6B,NOP                 CHANGE SET/READ SECTO TO NOPS
         MVI   CA15,NOP
         MVI   CA24,NOP
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPRET                   BRANCH MEANS NO-EXIT
         MVI   CA240,NOP                CHANGE SET SECTOR TO NOP
         B     APPRET                   COMMON EXIT
*
APPCD02  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPRET                   BZ MEANS NO EXIT
         LA    R3,APPSUB1               RETURN TO CONVERT SECTOR
         B     APPSUB                   CP PREFIX ROUTINE
         EJECT
*
*        APPENDAGE CODE 2, SET-UP CP7 OR CP7W
*
         USING CP7,R10
APPCD2   EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBOPTCD,WRTCHK          TEST FOR WC - CP7 RPS WC ONLY
         BZ    APPNOMO                  BZ MEANS NOT WC - EXIT
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD21A                 BZ MEANS NON RPS
         MVC   CA460(FOUR),IOBCCW1      SET UP SET SECTOR CCW
         B     APPNOMO                  COMMON EXIT
APPCD21A EQU   *                        *
         MVI   CA460,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 3, SET UP CP1 OR CP2
*
         USING CP2,R10
APPCD3   EQU   *                        *
         L     R10,IOBCCWAD             ADDR OF CP1 OR CP2
         L     R13,DCBWKPT2             WA ADDRESSABILITY
         CLI   WA11(R13),ONE            IF NSLD GREATER THAN 1
         BH    APPCD31                  THEN BRANCH TO SET UP CP1
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD301                 BZ MEANS NON-RPS
         MVI   C31B,SETSECT             MOVE IN SET SECTOR CMD CODE
         B    APPRET                    COMMON EXIT
*
APPCD301 EQU   *                        *
         MVI   C31B,NOP                 CHANGE SET SECTOR TO NOP
         B     APPRET                   COMMON EXIT
*
         USING CP1,R10
APPCD31  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD33                  BZ MEANS NON-RPS
         MVI   C2B,SETSECT              MOVE IN SET SECTOR CMD CODES
         MVI   C12B,SETSECT
         B     APPRET                   COMMON EXIT
*
APPCD33  EQU   *                        *
         MVI   C2B,NOP                  CHANGE SET SECTORS TO NOPS
         MVI   C12B,NOP
         B     APPRET                   COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 4, SET UP CP14 PART2 (FIXED LENGTH RECORDS
*        WITH USER WA).THE STARTING POINT OF CP14 HAS TO BE DETERMINED.
*
         USING CP14,R3
APPCD4   EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         L     R3,IOBCCWAD              FIND THE ADDR OF
         LA    R3,SZ8(R3)               CP14 BY TAKING THE ADDR OF CP8
         TM    DCBRECFM,VLR             (TEST FOR VLR
         BZ    APPAD10B                 NOT VLR ADD SIZE CP10B
         TM    RPS(R7),RPSTST           TEST FOR RPS - VLR
         BO    APPCD4A                  BO MEANS RPS
         MVI   CH8G,NOP                 CH8G
         MVI   CH150,NOP                CH150
         MVI   CH200,NOP                CH200
         TM    DCBOPTCD,WRTCHK          VLR WITH WC
         BZ    APPNOMO                  BZ MEANS NO - COMMON EXIT
         MVI   CH3A1,NOP                CH3A1
         MVI   CH80,NOP                 CH80
         MVI   CH130,NOP                CH130
         MVI   CH180,NOP                CH180
         MVI   CH220,NOP                CH220
         B     APPNOMO                  COMMON EXIT)
*
APPAD10B EQU   *                        *
         TM    DCBOPTCD,WRTCHK          AND ADD CP8 AND CP10B/10BW
         BO    APPCD4AA                 BO MEANS WC
         LA    R3,SZ10B(R3)             LENGTH OF CP10B
         B     APPCD400                 BRANCH FOR NON- WC
*
*        THIS SECTION DETERMINES THE STARTING POINT OF CP14
*        WHEN WRITE CHECKING IS SPECIFIED FOR FIXED LENGTH
*        RECORDS AND FOR VARIBLE LENGTH RECORDS WHEATHER WRITE
*        CHECKING IS SPECIFIED OR NOT.
*
APPCD4AA EQU   *                        *
         LA    R3,SZ10BW(R3)            LENGTH OF CP10B WITH WC
APPCD4A  EQU   *                        *
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         LA    R9,CH150                 ADDR OF CH150
         CR    R10,R9                   DOES CP14 START AT CH150
         BE    APPCD12A                 BE MEANS YES
         LA    R9,CH15                  ADDR OF CH15
         CR    R10,R9                   DOES CP14 START AT CH15
         BE    APP12AA                  BE MEANS YES
         LA    R9,CH200                 ADDR OF CH200
         CR    R10,R9                   DOES CP14 START AT CH200
         BE    APPCD12D                 BE MEANS YES
         LA    R9,CH20                  ADDR OF CH20
         CR    R10,R9                   DOES CP14 START AT CH20
         BE    APPCD12E                 BE MEANS YES
         MVI   IDXOVFLO,INDEX           USE INDEX CALCULATION
         LA    R9,CH5                   ADDR OF CH5
         CR    R10,R9                   DOES CP14 START AT CH5
         BE    APPCH5                   BE MEANS YES
         LA    R9,CH1                   ADDR OF CH1
         CR    R10,R9                   DOES CP14 START AT CH1
         BE    APPCD40A                 BE MEANS YES
         LA    R9,CH55                  ADDR OF CH55
         CR    R10,R9                   DOES CP14 START AT CH55
         BE    APPCD40B                 BE MEANS YES
         LA    R9,CH8D                  ADDR OF CH8D
         CR    R10,R9                   DOES CP14 START AT CH8D
         BE    APPCD40E                 BE MEANS YES
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD4B                  IF VLR BRANCH AROUND ADDITION
         LA    R3,EIGHT(R3)             FIXED-ADD 8 TO GET TO CH9
APPCD4B  EQU   *                        *
         LA    R9,CH8G                  CH9 FOR FIXED
         CR    R10,R9                   START AT CH8G-CH9 FIXED
         BE    APPCH8G                  BE MEANS YES
         LA    R9,CH8G5                 CH95 FOR FIXED
         CR    R10,R9                   START AT CH8G5-CH95 FIXED
         BE    APPCD40G                 BE MEANS YES
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD425                 BO MEANS RPS
         B     APPCD406                 CONTINUE FOR NON-RPS INIT
*
*        THIS SECTION DETERMINES THE STARTING POINT OF CP14
*        WHEN WRITE CHECKING IS NOT SPECIFIED FOR FIXED LENGTH RECORDS.
*
APPCD400 EQU   *                        *
         MVI   IDXOVFLO,INDEX           USE INDEX CALCULATION
         LA    R9,CH1                   ADDR OF CH1
         CR    R10,R9                   DOES CP14 START AT CH1
         BE    APPCD408                 BE MEANS YES
         LA    R3,LCH3(R3)              ADD LENGTH OF COMMON
         USING CH4,R3
         LA    R9,CH5                   ADDR OF CH5
         CR    R10,R9                   DOES CP14 START AT CH5
         BE    APPCH55                  BE MEANS YES
         LA    R9,CH55                  ADDR OF CH55
         CR    R10,R9                   DOES CP14 START AT CH55
         BE    APPCD40D                 BE MEANS YES
         LA    R3,LCH8(R3)              ADD LENGTH OF COMMON
         USING CH8D,R3
         LA    R9,CH8D                  ADDR OF CH8D
         CR    R10,R9                   DOES CP14 START AT CH8D
         BE    APPCD40F                 BE MEANS YES
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD4C                  IF VLR BRANCH AROUND ADDITION
         LA    R3,EIGHT(R3)             FIXED-ADD 8 TO GET TO CH8G5
APPCD4C  EQU   *                        *
         LA    R9,CH8G5                 ADDR OF CH8G5
         CR    R10,R9                   DOES CP14 START AT CH8G5
         BE    APPCD40H                 BE MEANS YES
         LA    R9,CH8G                  ADDR OF CH8G
         CR    R10,R9                   DOES CP14 START AT CH8G
         BE    APPCH56                  BE MEANS YES
         TM    DCBRECFM,VLR             TEST FOR VLR
         BZ    APPCD4D                  BZ MEANS NOT VLR
         LA    R3,EIGHT(R3)             ADD 8 FOR VLR
APPCD4D  EQU   *                        *
         LA    R3,LCH13-EIGHT(R3)       ADD LENGTH OF COMMON
         USING CH14,R3
         LA    R9,CH14                  ADDR OF CH14
         CR    R10,R9                   DOES CP14 START AT CH14
         BE    APP431A                  BE MEANS YES
*
         LA    R9,CH150                 ADDR OF CH150
         CR    R10,R9                   DOES CP14 START AT CH150
         BE    APPCD12F                 BE MEANS YES
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         LA    R9,CH15                  ADDR OF CH15
         CR    R10,R9                   DOES CP14 START AT CH15
         BE    APPCD122                 BE MEANS YES
         LA    R3,LCH18(R3)             GET TO CH19
         USING CH19,R3
         LA    R9,CH200                 ADDR OF CH200
         CR    R10,R9                   DOES CP14 START AT CH200
         BE    APP122AA                 BE MEANS YES
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPNOMO                  BZ MEANS NON-RPS - EXIT
         L     R3,CH20                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         LA    R3,APPNOMO               RETURN TO COMMON EXIT
         B     APPSUBX                  SECTOR CONVERT ROUTINE
*
*        THE STARTING POINT OF CP14 HAS NOW BEEN DETERMINED
*
APPCD12A EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD426                 BO MEANS RPS
         B     APPCD407                 BRANCH FOR NON-RPS INIT
         USING CP14,R3
APPCD12D EQU   *                        *
         LA    R10,CH15                 FOR NEXT USING
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APP122CC                 BZ MEANS NON-RPS
         B     APP122BB                 BRANCH FOR RPS INIT
APPCD12E EQU   *                        *
         LA    R10,CH15                 FOR NEXT USING
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APP122CA                 BRANCH FOR NON-RPS INIT
         L     R3,CH20                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R11,IOBSECT+THREE        SECTOR ADDR
         B     APP122DD                 CONTINUE
APPCD12F EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD415                 BZ MEAMS NON-RPS
         LR    R10,R3                   FOR NEXT USING ON CH14
         B     APPCD431                 CONTINUE RPS INIT
         USING CH55,R10
APPCD40B EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD40C                 BZ MEANS NO
         L     R3,CH55                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R3,EIGHT                 SUBTRACT 8 FROM R10 TO
         SR    R10,R3                   GET BACK TO CH5
         B     APPSKCH5                 BO MEANS WC
APPCD40C EQU   *                        *
         LA    R10,CH80                 NEXT USING IS ON CH80
         B     APPCD402                 BRANCH TO SET UP NON-RPS
         USING CH55,R10
APPCD40D EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD410                 BZ MEANS NON-WC
         L     R3,CH55                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,LCH3+LCH3C+LCH8(R10) ADD LENGTH OF COMMON SEGMENTS
         B     APPCD430                 BRANCH TO FINISH PART1
         USING CH8D,R10
APPCD40E EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD403                 BZ MEANS NON RPS
         L     R3,CH8D                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,CH8G5                FOR NEXT USING
         B     APPCD424                 BO MEANS WC
APPCD40F EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD411                 BZ MEANS NON-RPS
         L     R3,CH8D                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,LCH13(R10)           LENGTH OF COMMON
         B     APPCD430                 GO TEST FOR SETUP PART1
         USING CH8G5,R10
APPCD40G EQU   *                        *
         BAL   R3,APPVF2                BRANCH TO TAKE OUT 8 IF FIXED
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD405                 BZ MEANS NON-RPS
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         B     APPCD424                 GO TEST FOR SETUP PART1
APPCD40H EQU   *                        *
         BAL   R3,APPVF2                BRANCH TO TAKE OUT 8 IF FIXED
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD413                 BZ MEANS NON-RPS
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,CH130-CH8G5(R10)     GET TO CH14
         B     APPCD430                 CONTINUE FOR PART1
*
APPCH5   EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD421                 BO MEANS RPS
         B     APPCD4A1                 CONTINUE PART2
APPCH55  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD435                 BO MEANS RPS
         B     APPCD409                 BRANCH FOR NON RPS INIT
APPCH8G  EQU   *                        *
         BAL   R3,APPVF01               BRANCH TO TAKE OUT 8 IF FIXED
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD423                 BO MEANS RPS
         B     APPCD404                 CONTINUE NON RPS INIT
APPCH56  EQU   *                        *
         BAL   R3,APPVF01               BRANCH TO TAKE OUT 8 IF FIXED
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD42A                 BO MEANS RPS
         B     APPCD412                 BRANCH FOR NON RPS INIT
*
APPCD40A EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD417                 BO MEANS RPS
         USING CP14,R10
         MVI   CH3A1,NOP                CHANGE SET SECTORS TO NOP
*
         LA    R10,LCH4+EIGHT(R10)      ADD LENGTH OF COMMON SEGMENT
         USING CH5,R10
APPCD4A1 EQU   *                        *
         LA    R10,LCH8-EIGHT(R10)      LENGTH OF COMMON
         USING CH80,R10
APPCD402 EQU   *                        *
         MVI   CH80,NOP                 CHANGE SET SECTOR TO NOP
         LA    R10,LCH8C(R10)           LENGTH OF COMMON
         USING CH8D,R10
APPCD403 EQU   *                        *
         LA    R10,LCH8C-EIGHT(R10)     LENGTH OF COMMON
         USING CH8G,R10
APPCD404 EQU   *                        *
         BAL   R3,APPVF                 BRANCH TO SETUP CH8G OR CH9
         LA    R10,EIGHT(R10)           ADD LENGTH OF ONE CCW
         USING CH8G5,R10
APPCD405 EQU   *                        *
         MVI   CH130,NOP                CHANGE SET SECTOR TO NOP
         LA    R10,CH14                 LENGTH OF COMMON
         USING CH14,R10
APPCD406 EQU   *                        *
         CLI   CH14,NOP                 IF CH14 IS NOP EXIT
         BE    APPNOMO                  BE MEAN YES EXIT
         LA    R10,EIGHT(R10)           LENGTH OF ONE CCW
         USING CH150,R10
APPCD407 EQU   *                        *
         MVI   CH150,NOP                CHANGE SET SECTOR TO NOP
         LA    R10,EIGHT(R10)           LENGTH OF ONE CCW
         B     APPCD121                 BRANCH TO FINISH PART1
*
         USING CP14,R10
APPCD408 EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD427                 BO MEANS RPS
         LA    R10,LCH3+EIGHT(R10)      LENGTH OF COMMON
         USING CH5,R10
APPCD409 EQU   *                        *
         LA    R10,EIGHT(R10)           LENGTH OF ONE CCW
         USING CH55,R10
APPCD410 EQU   *                        *
         LA    R10,CH8+EIGHT-CH55(R10)  ADD LENGTH OF COM SEGMENTA51136
         USING CH8D,R10
APPCD411 EQU   *                        *
         LA    R10,CH8G                 ADDRESSIBILITY ON CH9
         USING CH8G,R10
APPCD412 EQU   *                        *
         BAL   R3,APPVF                 BRANCH TO SETUP CH8G OR CH9
         LA    R10,EIGHT(R10)           LENGHT OF ONE CCW
         USING CH8G5,R10
APPCD413 EQU   *                        *
         LA    R10,CH130-CH8G5(R10)     LENGTH OF COMMON
         USING CH14,R10
APPCD414 EQU   *                        *
         CLI   CH14,NOP                 IS CH14 NOP
         BE    APPNOMO                  BE MEANS YES EXIT
         LA    R10,EIGHT(R10)           LENGTH OF ONE CCW
         USING CH150,R10
APPCD415 EQU   *                        *
         MVI   CH150,NOP                CHANGE SET SECTOR TO NOP
         LA    R10,EIGHT(R10)           LENGTH OF ONE CCW
         USING CH15,R10
*
         LA    R10,LCH18-EIGHT(R10)     LENGTH OF COMMON
         USING CH200,R10
         MVI   CH200,NOP
         B     APPNOMO                  COMMON EXIT
*
         USING CP14,R10
APPCD417 EQU   *                        *
         LA    R3,IOBCCW1+FIVE          SET SECTOR TO 0
         ST    R3,IOBCCW1               SECTOR ADDR IN CP PREFIX
         MVI   IOBCCW1,SETSECT          RESET SET SECTOR CMD CODE
         CLI   CH3A1,TIC                CH3A1 TIC TO CH4
         BE    APPCD4E                  YES SKIP CHANGE TO SET SECTOR
         MVI   CH3A1,SETSECT            MOVE IN SET SECTOR CMD CODE
APPCD4E  EQU   *                        *
         LA    R10,LCH4(R10)            LENGTH OF COMMON
         USING CH4,R10
*
         L     R9,CH4                   DETERMINE IF TIC ADDR IS
         LA    R9,ZERO(R9)              CH5,CH55,CH8D,CH9,OR CH14
         LA    R3,CH5                   ADDR OF CH5
         CR    R3,R9                    TIC TO CH5
         BE    APPCD420                 YES CH5
         LA    R3,CH55                  ADDR OF CH55
         LA    R10,EIGHT(R10)           ADD LENGTH OF ONE CCW TO GET
         CR    R3,R9                    TO CH5. TIC TO CH55
         BE    APPSKCH5                 YES CH55
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD419                 BO MEANS VLR
         USING CH5,R10
         LA    R3,CH8D                  ADDR OF CH8D
         CR    R3,R9                    TIC TO CH8D
         BE    APPLD95                  YES CH8D
APPCD419 EQU   *                        *
         LA    R3,CH8G                  ADDR OF CH8G
         CR    R3,R9                    TIC TO CH8G
         BE    APPCD422                 YES CH8G
         LA    R3,CH8G5                 ADDR OF CH8G5 (CH9 FOR FIXED)
         CR    R3,R9                    TIC TO CH8G5 (CH9)
         BE    APPCD422                 YES CH8G5 (CH9)
         LR    R10,R9                   TIC ADDR INTO CP POINTER
         B     APPCD425                 HAS TO BE CH14
*
APPCD420 EQU   *                        *
         LA    R10,EIGHT(R10)           ADD LENGTH OF ONE CCW TO
         USING CH5,R10                  GET TO CH5
APPCD421 EQU   *                        *
         CLI   CH5,SEEKHH               CH5 DOING A HEAD SEEK
         BE    APPSKCH5                 BE MEANS YES-NO CHANGE
         ST    R11,CH5                  PUT SECTOR ADDR IN CH5
         MVI   CH5,SETSECT              MOVE IN SET SECTOR CMD CODE
APPSKCH5 EQU   *                        *
         CLI   CH80,TIC                 CH80 TIC TO CH8D
         BE    APPLD55                  YES SKIP SECTOR CONVERSION
         ST    R11,CH80                 PUT IN SECTOR ADDR
         MVI   CH80,SETSECT             MOVE IN SET SECTOR CMD CODE
APPLD55  EQU   *                        *
         L     R3,CH55                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
APPLD95  EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD422                 BO MEANS YES-SETUP CH8G
         LA    R10,CH8G5                ADDRESSIBILITY FOR CH95
         B     APPCD424                 CONTINUE FOR CH9
         USING CH5,R10
APPCD422 EQU   *                        *
         LA    R10,CH8G                 CH9 FOR FIXED
         USING CH8G,R10
APPCD423 EQU   *                        *
         LA    R11,IOBSECT+ONE          ADDR OF SECTOR
         BAL   R3,APPVF                 BRANCH TO SETUP CH8G OR CH9
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,EIGHT(R10)           ADD ONE CCW LENGTH FOR CH8F0
         USING CH8G5,R10
APPCD424 EQU   *                        *
         CLI   CH130,TIC                CH130 TIC TO CH14
         BE    APPLD14                  YES SKIP SECTOR CONVERSION
         LA    R11,IOBSECT+ONE          SECTOR ADDR
         ST    R11,CH130                PUT SECTOR ADDR IN CCW
         MVI   CH130,SETSECT            MOVE IN SET SECTOR CMD CODE
         L     R3,CH13A                 GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
APPLD14  EQU   *                        *
         LA    R10,CH14                 NEXT USING ON CH14
         USING CH14,R10
APPCD425 EQU   *                        *
         CLI   CH14,NOP                 IF CH14 IS NOP EXIT
         BE    APPNOMO                  BE MEANS YES - EXIT
         LA    R10,EIGHT(R10)           ADD ONE CCW TO GET TO CH150
         USING CH150,R10
APPCD426 EQU   *                        *
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         LA    R11,IOBSECT+TWO          SECTOR ADDR
         ST    R11,CH150                PUT SECTOR ADDR IN CCW
         MVI   CH150,SETSECT            MOVE IN SET SECTOR CMD CODE
         MVC   HEAD(THREE),CH23+FIVE    MOVE HHR TO HEAD
         LA    R10,CH15                 ADDR OF PART1
         LA    R3,APPCD120              RETURN TO APPCD120
         B     APPSUBX                  SECTOR CONVERT ROUTINE
*
APPCD427 EQU   *                        *
         LA    R3,IOBCCW1+FIVE          SET SECTOR TO 0
         ST    R3,IOBCCW1               SECTOR ADDR IN CP PREFIX
         MVI   IOBCCW1,SETSECT          RESET SET SECTOR CMD CODE
         USING CH4,R10
         LA    R10,LCH3(R10)            DETERMINE IF TIC ADDR IS
         L     R3,CH4                   CH5, CH8D OR CH14
         LA    R3,ZERO(R3)              CLEAR HI ORDER BYTE
         LA    R9,CH5                   ADDR OF CH5
         CR    R3,R9                    TIC TO CH5
         BE    APPCD428                 YES CH5
         LA    R10,LCH8(R10)            ADD LENGTH OF COMMON
         USING CH8D,R10
         LA    R9,CH8G                  ADDR OF CH8G
         CR    R3,R9                    TIC TO CH8G
         BE    APPCD429                 YES CH8G
         LA    R10,LCH13(R10)           LENGTH OF COMMON
         USING CH14,R10
         CLI   CH14,NOP                 IF CH14 IS A NOP - EXIT
         BNE   APPCD431                 BNE MEANS NO
         B     APPNOMO                  YES - COMMON EXIT
APPCD428 EQU   *                        *
         LA    R10,EIGHT(R10)           ADD ONE CCW LENGTH FOR CH5
         USING CH5,R10
APPCD435 EQU   *                        *
         CLI   CH5,SEEKHH               CH5 DOING A HEAD SEEK
         BE    APPCD436                 BE MEANS YES-NO CHANGE
         ST    R11,CH5                  PUT SECTOR ADDR IN CCW
         MVI   CH5,SETSECT              MOVE IN SET SECTOR CMD CODE
         L     R3,CH55                  GET CCHHR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
APPCD436 EQU   *                        *
         LA    R10,LCH3C+LCH8+LCH8C(R10) ADD LENGTH OF COMMON SEGMENTS
         B     APPCD430                 GO FINISH PART1 IF NEEDED
         USING CH8D,R10
APPCD429 EQU   *                        *
         LA    R10,CH8G                 NEXT USING ON CH8G
         USING CH8G,R10
APPCD42A EQU   *                        *
         LA    R11,IOBSECT+ONE          SECTOR ADDR
         BAL   R3,APPVF                 BRANCH TO SETUP CH8G OR CH9
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,CH13+EIGHT-CH8G(R10) LENGTH OF COMMON
         USING CH14,R10
APPCD430 EQU   *                        *
         CLI   CH14,NOP                 IF CH14 IA A NOP - EXIT
         BE    APPNOMO                  BE MEANS YES - EXIT
APPCD431 EQU   *                        *
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         LA    R11,IOBSECT+TWO          SECTOR ADDR
         ST    R11,CH150                PUT SECTOR ADDR IN CCW
         MVI   CH150,SETSECT            MOVE IN SET SECTOR CMD CODE
         MVC   HEAD(THREE),CH23+FIVE    MOVE HHR TO HEAD         A43729
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
         LA    R10,LCH18+EIGHT(R10)     LENGTH OF COMMON
         B     APP124A                  GO FINISH PART1
APP431A  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD430                 BO MEANS RPS
         B     APPCD414                 CONTINUE FOR NON-RPS INIT
         EJECT
*
*              THIS ROUTINE DECIDES IF CP14 IS FIXED OR VLR
*              AND ADJUSTS THE CCWS ACCORDINGLY. IF IT IS VLR
*              THEN WE WANT TO SETUP CH8G BUT IF IT IS FIXED
*              WE WANT TO SETUP CH9 WHICH IS CH8G5 IN THE DESECT.
*
         USING CH8G,R10
APPVF    EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPVFA                   IF VLR BRANCH AROUND ADDITION
         LA    R10,EIGHT(R10)           FIXED-ADD 8 TO GET TO CH9
APPVFA   EQU   *                        *
*
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPVF10                  BZ MEANS NON-RPS
         ST    R11,CH8G                 PUT SECTOR ADDR IN CCW
         MVI   CH8G,SETSECT             MOVE IN SET SECTOR CMD CODE
         L     R9,CH8G5                 GET CCHHR
APPVF000 EQU   *                        *
         MVC   HEAD(THREE),TWO(R9)      MOVE HHR TO HEAD
         L     R9,CH8G5                 GET SEARCH ADDR
         CLC   TWO(TWO,R9),IOBDADAD+FIVE SAME HEAD
         BNE   APPVF01                  BNE MEANS NO
         TM    CH8G5,MT                 TEST FOR MULTI TRACK
         BZ    APPVF01                  BZ MEANS NO
         NI    CH8G5,MTOFF              TURN OFF MULTI TRACK
APPVF01  EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPVF1                   BO MEANS VLR RETURN
APPVF0   EQU   *                        *
         LA    R9,EIGHT                 GET 8 FOR SUBTRACTING
         SR    R10,R9                   SUBTRACT OUT 8 FOR FIXED
APPVF1   EQU   *                        *
         BR    R3                       RETURN
APPVF10  EQU   *                        *
         MVI   CH8G,NOP                 CHANGE SET SECTOR TO NOP
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPVF1                   BO MEANS VLR RETURN
         B     APPVF0                   BRANCH TO SUBTRACT OUT 8
APPVF2   EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPVF01                  NO - SUBTRACT 8 IF NECESSARY
         L     R9,0(R10)                SEARCH ADDR
         B     APPVF000                 SETUP HEAD
         EJECT
*
*        APPENDAGE CODE 5, SET UP CP6 OR 6W
*
APPCD5   EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX SUBROUTINE
*        ADDRESSIBILITY ON CP6 MUST BE ESTABLISHED.  (IOBSTART COULD
*        BE POINTING TO EITHER CA26 OR CA37.)
         L     R10,IOBCCWAD             POINT TO CP4
         LA    R10,SZ4+SZ5(R10)         ADD COMMON PART OF CP4 AND CP5
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD502                 BO MEANS YES
         TM    DCBOPTCD,WRTCHK          IF WRITE CHECKING SPECIFIED,
         BZ    APPCD500                 IT MUST BE ALLOWED FOR.
APPCD502 EQU   *                        *
         LA    R10,SZ5W-SZ5(R10)        ADD WRITE CHECK SEGMENT OF CP5
APPCD500 EQU   *                        R10 NOW POINTS TO CA26
         USING CP6,R10
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD51                  BZ MEANS NON-RPS
         ST    R11,CA31B                PUT IN SECTOR ADDR
         MVI   CA31B,RDSECT             MOVE IN READ SECT CMD CODE
         OI    CA31+FOUR,CC             TURN ON COMMAND CHAIN
         ST    R11,CA40A                SECTOR ADDR INTO CC
         MVI   CA40A,RDSECT             READ SECTOR
         MVC   CA40B(FOUR),IOBCCW1      SET UP SET SECTOR CCW
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPCD501                 BZ MEANS NOT WC
         MVC   CA430(FOUR),IOBCCW1      SET UP SET SECTOR CCW
*
APPCD501 EQU   *                        *
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         LA    R3,APPNOMO               COMMON EXIT
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD51  EQU   *                        *
         NI    CA31+FOUR,CCOFF          TURN OFF COMMAND CHAIN
         MVI   CA31B,NOP                CHANGE SET/READ SECTORS TO NOPS
         LA    R3,CA41                  ADDR OF CA41 FOR TIC
         ST    R3,CA40A                 SET UP CA40A TO
         MVI   CA40A,TIC                TIC TO CA41
         MVI   CA40B,NOP                CHANGE SET SECTOR TO NOP
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPNOMO                  BRANCH MEANS NOT WC EXIT
         MVI   CA430,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 8, SET-UP CP8
*
         USING CP8,R10
APPCD8   EQU   *                        *
         CLI   ZERO(R10),SIDEQ          CP8 START WITH SEARCH ID EQ
         BNE   APPRET                   NO, COMMON EXIT
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD81                  BZ MEANS NON-RPS
         MVI   IOBSECT,ZERO             SET SECTOR TO ZERO FOR   M4967
*                                       COCR                     M4967
         MVI   CB16,SETSECT             MOVE IN SET SECTOR CMD CODE
         ST    R11,CB21                 PUT SECTOR ADDR IN CCW
         MVI   CB21,RDSECT              MOVE IN READ SECTOR CMD CODE
         B     APPNOMO                  COMMON EXIT
*
APPCD81  EQU   *                        *
         MVI   CB16,NOP                 CHANGE SET/READ SECTORS TO NOPS
         MVI   CB21,NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 9, SET-UP CP10A FOR TRUE INSERT OR
*        CP14 PART 2 (VARIABLE LENGTH RECORDS) FOR EOF EXTENSION
*
         USING CP10A,R10
APPCD9   EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD92                  BO MEANS VLR
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB0                  BZ MEANS NOT WC
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD91                  BZ MEANS NON-RPS
         MVC   CB500(FOUR),IOBCCW1      SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD91  EQU   *                        *
         MVI   CB500,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
         USING CH25,R10
APPCD92  EQU   *                        *
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPCD95                  BZ MEANS NOT WC
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD93                  BZ MEANS NON-RPS
         MVI   CH280,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD93  EQU   *                        *
         MVC   CH280(FOUR),IOBCCW1      SET UP SET SECTOR CCW
APPCD94  EQU   *                        *
         MVC   HEAD(THREE),CH31+FIVE    MOVE HHR TO HEAD
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         LA    R3,APPNOMO               COMMON EXIT
         B     APPSUBX                  SECTOR CONVERT ROUTINE
*
APPCD95  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPNOMO                  BZ MEANS NON RPS
         B     APPCD94                  CONVERT SECTOR
         EJECT
*
*        APPENDAGE CODE 10, SET-UP CP10B FOR TRUE INSERT OR
*        CP14 PART2 (VARIABLE LENGTH RECORDS) WHEN PART1 HAS
*        BEEN EXECUTED.
*
         USING CP10B,R10
APPCD10  EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD4                   BO MEANS VLR
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    CB53+FOUR,OVFLO          TEST FOR OVERFLOW        A43729
         BZ    APPCD10A                 NOT OVERFLOW             A43729
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW         A43729
APPCD10A EQU   *                        *                        A43729
         TM    DCBOPTCD,WRTCHK          TEST FOR WC - RPS CP10B WC ONLY
         BZ    APPSUB0                  BZ MEANS NOT WC-CONVERT SECTOR
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD101                 BZ MEANS NON-RPS
         MVC   CB540(FOUR),IOBCCW1      SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD101 EQU   *                        *
         MVI   CB540,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 12, SET-UP CP14 OR CP14 PART1 (FIXED LENGTH
*        RECORDS WITH USER WORD AREA AND VARIABLE LENGTH RECORDS)
*        FOR SET-UPS 1, 2, AND 5.
*
         USING CH15,R10
APP12AA  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD121                 BZ MEANS NON-RPS
         MVC   HEAD(THREE),CH23+FIVE    MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
*
APPCD120 EQU   *                        *
         CLI   CH180,TIC                CH180 TIC TO CH19
         BE    APPTST18                 YES SKIP SECTOR CONVERSION
         TM    CH18+FOUR,CC             TEST FOR COMMAND CHAIN
         BZ    APPNOMO                  NO CC - EXIT
         LA    R11,IOBSECT+TWO          SECTOR ADDR PLUS 2
         ST    R11,CH180                PUT SECTOR ADDR IN CCW
         MVI   CH180,SETSECT            MOVE IN SET SECTOR CMD CODE
         L     R3,CH18A                 SEARCH ADDR
         MVC   HEAD(THREE),CH23+FIVE    MOVE HHR TO HEAD
         BAL   R3,APPSUBX               SECTOR CONVERT ROUTINE
APPTST18 EQU   *                        *
         TM    CH18C+FOUR,CC            TEST FOR COMMAND CHAIN
         BZ    APPNOMO                  BNE MEANS NO - EXIT
APP122BB EQU   *                        *
         LA    R11,IOBSECT+THREE        SECTOR ADDR PLUS 3
         ST    R11,CH200                PUT SECTOR ADDR IN CCW
         MVI   CH200,SETSECT            MOVE IN SET SECTOR CMD CODE
APP122DD EQU   *                        *
         L     R3,CH20                  GET CCHHR               SA68845
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD        SA68845
         TM    CH22+FOUR,CC             TEST FOR CMD CHAIN
         BZ    APP122EE                 NO - EXIT
         ST    R11,CH220
         MVI   CH220,SETSECT
APP122EE EQU   *                        *
         LA    R3,APPNOMO               COMMON EXIT
         B     APPSUBX                  SECTOR CONVERT ROUTINE
*
APPCD121 EQU   *                        *
         MVI   CH180,NOP                CHANGE SET SECTOR TO NOPS
APP122CC EQU   *                        *
         MVI   CH200,NOP                CHANGE SET SECTORS TO NOPS
APP122CA EQU   *                        *
         MVI   CH220,NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD122 EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS             A45232
         BZ    APP122CB                 NO, NO PREFIX NEEDED     A45232
         L     R3,CH15                  SEARCH ADDR              MXXXX
         MVC   HEAD(THREE),TWO(R3)      SETUP HEAD AND REC NO.   A45232
         BAL   R3,APPSUBX               CALCULATE SECTOR FOR     A45232
*                                       PRFX                     A45232
APP122CB EQU   *                        *                        A45232
         TM    CH18+FOUR,CC             TEST FOR COMMAND CHAIN
         BZ    APPNOMO                  BZ MEANS NOT CMD CHAIN - EXIT
         LA    R10,LCH18-EIGHT(R10)     LENGTH OF COMMON
APP122AA EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APP124A                  BO MEANS RPS
*
*
         USING CH200,R10
         MVI   CH200,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
APP124A  EQU   *                        *
         LA    R11,IOBSECT+THREE        SECTOR ADDR PLUS 3
         ST    R11,CH200                PUT SECTOR ADDR IN CCW
         MVI   CH200,SETSECT            MOVE IN SET SECTOR CMD CODE
         L     R3,CH20                  SEARCH ADDR
         MVC   HEAD(THREE),TWO(R3)      MOVE HHR TO HEAD
         LA    R3,APPNOMO               COMMON EXIT
         B     APPSUBX                  SECTOR CONVERT ROUTINE
         EJECT
*
*        APPENDAGE CODE 14, SET-UP CP15
*
         USING CP15,R10
APPCD14  EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD141                 BZ MEANS NON-RPS
         MVI   IOBSECT,ZERO             SET SECTOR TO 0 FOR COCR A50669
         MVI   IDXOVFLO,INDEX           USE INDEX CALCULATION
         LA    R11,ONE(R11)             SECTOR ADDR IS IOBSECT+1
         ST    R11,CI1D                 STORE SECTOR ADDR
         MVI   CI1D,SETSECT             MOVE IN SET SECTOR CMD CODE
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD141 EQU   *                        *
         MVI   CI1D,NOP                 CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODES 15, 16, SET-UP CP16 FOR TRUE INSERT OR
*        ADDITION TO END OF DATA SET
*
         USING CP16,R10
APPCD15  EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD151                 BZ MEANS NON-RPS
         MVC   CJ4A(FOUR),IOBCCW1       SET UP SET SECTOR CCW
         MVI   IDXOVFLO,OVFLO           TURN ON OVERFLOW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD151 EQU   *                        *
         MVI   CJ4A,NOP                 CHANGE SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 17, SET-UP CP17 FOR TRACK INDEX OR
*        CP14 PART 2 (VARIABLE LENGTH RECORDS) WHEN PART 1 HAS NOT
*        BEEN EXECUTED (NO OVERFLOW).
*        APPENDAGE CODES 18, 19, SET-UP CP17 FOR TRACK INDEX AND
*        WHEN IT IS TO BE STARTED OR CONTINUED FOR HIGHER LEVEL INDEXES
*
         USING CP17,R10
APPCD17  EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD4                   B0 MEANS VLR - CP14
APPCD170 EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD171                 BZ MEANS NON-RPS
         MVI   IDXOVFLO,INDEX           USE INDEX CALCULATION
         MVC   CK30(FOUR),IOBCCW1       SET UP SET SECTOR CCW
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB1                  BZ MEANS NOT-WC -CONVERT SECTOR
         MVC   CK70(FOUR),IOBCCW1       SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD171 EQU   *                        *
         MVI   CK30,NOP                 CHANGE SET SECTOR TO NOP
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPNOMO                  BZ MEANS NOT-WC
         MVI   CK70,NOP                 CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 20, SET-UP CP9A, OR CP11A, OR CP12A,
*        OR CP13A, OR CP12AV.
*
APPCD20  EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBRECFM,VLR             TEST FOR VLR
         BZ    APPCD202                 BRANCH MEANS NOT VLR
         LA    R9,IOBDADAD+THREE        CP12A SEARCH ADDRESS
         L     R3,ZERO(R10)             CP SEARCH ADDRESS
         LA    R3,ZERO(R3)              CLEAR HIGH ORDER BYTE
         CR    R9,R3                    IS SEARCH ADDRESS CP12A
         BNE   APPCD202                 BNE MEANS NO - USE CP12AV
*
         USING CD0A1,R10
         LA    R3,CD3                   TIC TO CD3
         L     R9,CD0C                  IF TIC ADDR IN CD0C
         LA    R9,ZERO(R9)              EQUAL ADDR OF CD3
         CR    R9,R3                    THEN NO NEED TO SET UP SETSECT
         BE    APPCD202                 BRANCH MEANS YES
         CLI   LCD0D(R10),RDATA         DOES CP START AT CD1
         BE    APPCD202                 BRANCH MEANS YES
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD201                 BZ MEANS NON-RPS
         MVC   CD0D(FOUR),IOBCCW1       SET UP SET SECTOR CCW
         MVC   APPRECNO(ONE),HZERO      REC. NO. ALWAYS 0 FOR 12AV
         LA    R3,APPNOMO               RETURN TO COMMON EXIT
         B     APPSUBX                  SECTOR CONVERT ROUTINE
*
APPCD201 EQU   *                        *
         MVI   CD0D,NOP                 CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD202 EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPNOMO                  BRANCH MEANS NON-RPS - EXIT
         B     APPSUB1                  SECTOR CONVERT ROUTINE
         EJECT
*
*        APPENDAGE CODE 21, SET-UP CP9B, OR CP11B, OR CP12B,
*        CP13B, OR CP12BV.
*
APPCD21  EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBRECFM,VLR             TEST FOR VLR
         BZ    APPCD212                 BRANCH MEANS NOT VLR
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD211                 BZ MEANS NON-RPS
*
         USING CP12B,R10
         CLI   LCE0C(R10),SHAEQ         DOES CP START AT CE1
         BE    APPCD210                 BRANCH MEANS YES
         LA    R11,ONE(R11)             SECTOR ADDR = A(IOBSECT+1)
         ST    R11,CE0C                 PUT SECTOR ADDR IN CCW
         MVI   CE0C,SETSECT             MOVE IN SET SECTOR CMD CODE
APPCD210 EQU   *                        *
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB1                  BZ MEANS NOT WC-CONVERT SECTOR
APPCD21W EQU   *                        *
         L     R10,IOBCCWAD             ADDR OF CP8
         USING CP8,R10
         L     R10,CB2+FOUR             ADDR OF CP123
         USING CP123,R10
         MVI   CEA00,SETSECT            MOVE IN SET SECTOR CMD CODE
         ST    R11,CEA3                 PUT SECTOR ADDR IN CCW
         MVI   CEA3,SETSECT             MOVE IN SET SECTOR CMD CODE
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD211 EQU   *                        *
         USING CP12B,R10
         CLI   LCE0C(R10),SHAEQ         DOES CP START AT CE1
         BE    APPCD21X                 BRANCH MEANS YES
         MVI   CE0C,NOP                 CHANGE SET SECTORS TO NOPS
APPCD21X EQU   *                        *
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPNOMO                  BRANCH MEANS NOT WC - EXIT
APPCD21Y EQU   *                        *
         L     R10,IOBCCWAD             ADDR OF CP8
         USING CP8,R10
         L     R10,CB2+FOUR             ADDR OF CP123
         USING CP123,R10
         MVI   CEA00,NOP                CHANGE SET SECTORS TO NOPS
         MVI   CEA3,NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD212 EQU   *                        *
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB0                  BZ MEANS NOT WC-CONVERT SECTOR
         TM    DCBRECFM,BLOCKED         TEST FOR BLOCKED
         BZ    APPCD216                 BZ MEANS UNBLOCKED
         CLC   HZERO,DCBSMSW            TEST FOR USER WA
         BNE   APPCD218                 BE MEANS USER WA
*
         USING CP11B,R10
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD214                 BZ MEANS NON-RPS
         MVC   CC60(FOUR),IOBCCW1       SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD214 EQU   *                        *
         MVI   CC60,NOP                 CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD216 EQU   *                        *
         CLC   HZERO,DCBSMSW            TEST FOR USER WA
         BNE   APPCD218                 BNE MEANS USER WA
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD217                 BZ MEANS NON-RPS
         USING CP9B,R10
         CLI   CB36-CB34(R10),WKD       CP START AT CB34
         BNE   APPSUB1                  NO-CONVERT SECTOR
         MVC   CB370(FOUR),IOBCCW1      SETUP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD217 EQU   *                        *
         CLI   CB36-CB34(R10),WKD       CP START AT CB34
         BNE   APPNOMO                  NO - EXIT
         MVI   CB370,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD218 EQU *                          *
         L     R10,IOBCCWAD             ADDR OF CP8
         USING CP8,R10
         L     R10,CB2+FOUR             ADDR OF CP123
         USING CP123,R10
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD219                 BZ MEANS NON-RPS
         ST    R11,CEA00                PUT SECTOR ADDR IN CCW   M5874
         MVI   CEA00,SETSECT            CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
APPCD219 EQU   *                        *
         MVI   CEA00,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 22, SET-UP CP9C, OR CP123W, OR CP123WV.
*
APPCD22  EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPCD222                 BO MEANS VLR - CP123
         CLC   HZERO,DCBSMSW            TEST FOR USER WA
         BNE   APPRET                   IF USER WA EXIT
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB0                  BZ MEANS NOT WC-CONVERT SECTOR
         USING CP9C,R10
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD221                 BZ MEANS NON-RPS
         CLI   CB43C-CB430(R10),RKD     DOES CP START AT CB43A
         BE    APPSUB0                  BE MEANS YES - CONVERT SECTOR
         MVC   CB430(FOUR),IOBCCW1      SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD221 EQU   *                        *
         CLI   CB43C-CB430(R10),RKD     DOES CP START AT CB43A
         BE    APPNOMO                  BE MEANS YES - EXIT
         MVI   CB430,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
APPCD222 EQU   *                        *
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPNOMO                  BZ MEANS NOT WC - EXIT
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BO    APPCD21W                 BO MEANS RPS
         B     APPCD21Y                 NON-RPS INIT
         EJECT
*
*        APPENDAGE CODE 23, SET-UP CP10A FOR ADDITION TO END OF
*        DATA SET
*
         USING CP10A,R10
APPCD23  EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB0                  BZ MEANS NOT WC-CONVERT SECTOR
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD231                 BZ MEANS NON-RPS
         MVC   CB500(FOUR),IOBCCW1      SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD231 EQU   *                        *
         MVI   CB500,NOP                CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        APPENDAGE CODE 24, SET-UP CP12C OR CP13C.
*
APPCD24  EQU   *                        *
         BAL   R3,APPSUB                CP PREFIX ROUTINE
         TM    DCBOPTCD,WRTCHK          TEST FOR WC
         BZ    APPSUB0                  BZ MEANS NOT WC-CONVERT SECTOR
         TM    DCBRECFM,BLOCKED         TEST FOR BLOCKED
         BO    APPCD242                 BO MEANS BLOCKED
         USING CP12C,R10
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD241                 BZ MEANS NON-RPS
         MVC   CL30(FOUR),IOBCCW1       SET UP SET SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD241 EQU   *                        *
         MVI   CL30,NOP                 CHANGE SET SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
*
         USING CP13C,R10
APPCD242 EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPCD243                 BZ MEANS NON-RPS
         MVC   CL70(FOUR),IOBCCW1       SET UP SECTOR CCW
         B     APPSUB1                  SECTOR CONVERT ROUTINE
*
APPCD243 EQU   *                        *
         MVI   CL70,NOP                 CHANGE SECTOR TO NOP
         B     APPNOMO                  COMMON EXIT
         EJECT
*
*        THIS ROUTINE DETERMINES IF A CHANNEL PROGRAM PREFIX
*        IS NEEDED OR WANTED. IF NEEDED THE CHANNEL PROGRAM  PREFIX
*        ADDRESS IS PLACED IN IOBSTART AND THE CHANNEL PROGRAM
*        ADDRESS IS PLACED IN THE TIC ADDRESS OF THE CHANNEL
*        PROGRAM PREFIX. IF THE PREFIX IS UNWANTED THEN THE CHANNEL
*        ADDRESS IS PLACED IN IOBSTART. THE TWO PREFIX CCWS ARE:
*        IOBCCW1  CCW   SETSECT,A(IOBSECT),CC,1
*        IOBCCW2  CCW   TIC,A(CP),0,0
*
*
APPSUB   EQU   *                        *
         LA    R9,IOBCCW1               ADDR OF PREFIX INTO R9
         CR    R10,R9                   IOBSTART POINT TO PREFIX
         BE    APPPFXOK                 BE-YES PREFIX IS OK
         CLI   ZERO(R10),SIDEQ          CP START WITH SIDEQ
         BCR   7,R3                     NO-DON'T USE A PREFIX
*
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BCR   8,R3                     IF NOT RPS RETURN
*
         ST    R10,IOBCCW2              CP ADDR INTO TIC ADDR
         MVI   IOBCCW2,TIC              MOVE IN TIC COMMAND CODE
         LA    R10,IOBCCW1              ADDR OF CHANNEL PROGRAM PREFIX
         STH   R10,IOBSTART+ONE         INTO IOBSTART
         SRL   R10,16                   SHIFT TO LOW ORDER HALF
         STC   R10,IOBSTART             STORE REMAINING BYTE
         ST    R11,IOBCCW1              SECTOR ADDR INTO IOBCCW1
         MVI   IOBCCW1,SETSECT          MOVE IN SETSECT COM. CODE
         MVC   IOBCCW1+FOUR(FOUR),CCDL  TURN ON CC AND DATA LENGTH
         B     APPLD10                  BRANCH TO SETUP R10
APPPFXOK EQU   *                        *
         TM    RPS(R7),RPSTST           PREFIX OK BUT IS IT WANTED
         BZ    APPNOPF1                 BZ MEANS NO IT'S NOT WANTED
         B     APPLD10                  BRANCH TO SETUP REG 10
APPNOPF1 EQU   *                        *
         MVC   IOBSTART(THREE),IOBCCW2+ONE CP ADDRESS INTO IOBSTART
APPLD10  EQU   *                        *
         L     R10,IOBCCW2              ADDR OF CP INTO R10
         LA    R10,ZERO(R10)            CLEAR HIGH ORDER BYTE
         BR    R3                       RETURN
         EJECT
*                                                                     *
*        THIS ROUTINE SETS UP REGISTES AND BRANCH TO A ROUTINE        *
*        THAT CONVERTS SECTOR VALUES                                  *
*                                                                     *
APPSUB0  EQU   *                        *
         TM    RPS(R7),RPSTST           TEST FOR RPS
         BZ    APPNOMO                  BRANCH MEANS NON-RPS - EXIT
*
APPSUB1  EQU   *                        *
         MVC   HEAD(THREE),IOBDADAD+FIVE MOVE HHR TO HEAD
         LA    R3,APPNOMO               COMMON EXIT ADDR FOR RETURN
*
APPSUBX  EQU   *                        *
         CLI   APPRECNO,TWO55           IS RECORD NO. 255        A43729
         BNE   APPNOTFF                 NO                       A43729
         MVI   ZERO(R11),TWO55          YES, NOP SET SECTOR      A43729
         BR    R3                       RETURN                   A43729
APPNOTFF EQU   *                        *                        A43729
         LR    R12,R14                  SAVE REG 14              Y02072
         LR    R14,R11                  R14 = ADDR OF AREA FOR SECTOR
         IC    R9,DEVCODE(R7)           UCB + 19 = DEVICE TYPE CODE
         SLL   R9,24                    HIGH ORDER BYTE OF R14 =
         OR    R14,R9                   DEVICE TYPE CODE
         ST    R10,DCBRELSE             SAVE CP PTR              M6178
         LR    R13,R0                   SAVE REG 0
         SR    R0,R0                    CLEAR REG 0
         TM    IDXOVFLO,INDEX           INDEX ENTRY
         BZ    APPNOIDX                 NO, TEST FOR SHARED TRACK
         LH    R0,INDEXLEN              USE 10 AS BLKSIZE
         B     APPLINK1                 GO SETUP KEY LENGTH
APPNOIDX EQU   *                        *
         SR    R10,R10                  CLEAR REG 10
         SR    R11,R11                  CLEAR REG 11
*
* CALCULATE BB FOR SHARED TRACK=(R-F)BLKSIZE+(F-1)(10)+KEYLENGTH(R-1)
* WHERE R IS THE TARGET REC NO AND F IS THE REC NO OF PRIME
*
         TM    IDXOVFLO,OVFLO           TEST FOR OVERFLOW
         BO    APPNOSHR                 BZ MEANS NO OVERFLOW
         CLC   HEAD(TWO),DCBFIRSH       SAME HEAD
         BNE   APPLINK                  NO-CAN'T BE SHARED TRACK
         CLI   DCBFIRSH+TWO,ONE         SHR TRACK ONLY R NOT 1
         BE    APPLINK                  YES IT'S ONE - NOT SHARED
         IC    R10,APPRECNO             R10=R
         IC    R11,DCBFIRSH+TWO         R11=F
         CR    R10,R11                  R GREATER THAN F
         BNH   APPFHI                   NO USE ZERO
         LR     R0,R10                  YES USE R-F
         SR     R0,R11                  R0=R-F
         MH     R0,DCBBLKSI             R0=(R-F)(BLKSIZE)
APPFHI   EQU    *                       *
         BCTR   R11,R0                  R11=F-X,X=1
         CR     R10,R11                 R=F-1
         BNE    APPFHI1                 NO USE F-1
         BCTR   R11,R0                  YES USE F-X,X=2
APPFHI1  EQU   *                        *
         LTR    R11,R11                 IS R11 MINUS
         BM     APP1IDX                 YES USE ZERO
         MH     R11,INDEXLEN            R11=(F-X)(10)
         AR     R0,R11                  R0=(R-F)(BLKSIZE)+(F-1)(10)
APP1IDX  EQU    *                       *
         SR     R11,R11                 R11=0
         IC     R11,APPRECNO            R11=R
         LTR    R11,R11                 R11=0
         BZ     APPSETI                 YES R0 ALL SET
         BCTR   R11,R0                  R11=R-1
         IC     R10,DCBKEYLE            R10=KEYLENGTH
         MR     R10,R10                 R11=(R-1)(KEYLENGTH)
         AR     R0,R11                  R0=(R-F)(BLKSIZE)+(F-1)(10)+
*                                       (R-1)(KEYLENGTH)
         B     APPSETI                  USE VLR CALCULATION
APPNOSHR EQU   *                        *
         LH    R0,LINKLEN               LOAD LENGTH OF LINK FIELD
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPVLR1                  BO MEANS VLR
         AH    R0,DCBLRECL              FOR OVERFLOW DD=LRECL
         B     APPLINK1                 GO SETUP KEYLENGTH
APPLINK  EQU   *                        *
         TM    DCBRECFM,VLR             TEST FOR VLR
         BO    APPVLR                   BO MEANS VLR
         AH    R0,DCBBLKSI              R0 = DDKR FOR FIXED
APPLINK1 EQU   *                        *
         SLL   R0,8                     DD = BLOCK SIZE
*
         IC    R0,DCBKEYLE              K = KEY LENGTH
         B     APPSETR                  BRANCH TO SETUP R
*
APPVLR   EQU   *                        *
         TM    DCBRECFM,BLOCKED         TEST FOR BLOCKED
         BO    APPVLRB                  BO MEANS BLOCKED
APPVLR1  EQU   *                        *
         AH    R0,BDW                   R0 = BBIR FOR VLR
         SR    R9,R9                    CLEAR REG 9
         IC    R9,DCBKEYLE              FOR UNBLOCKED
         AR    R0,R9                    BB = 4 + KEY LENGTH
         AH    R0,DCBRKP                + RKP  ( 4 FOR THE BDW )
         B     APPSETI                  BRANCH TO SETUP I
*
APPVLRB  EQU   *                        *
         AH    R0,DCBBLKSI              IF BLOCKED
         SH    R0,DCBLRECL              BB = BLKSIZE - LRECL
*
APPSETI  EQU   *                        *
         O     R0,HIBIT                 SET HIGH BIT OF R0 ON
         SLL   R0,8                     I= 0 FOR NON-KEYED RECORDS OR
         IC    R0,KEYED                 1 FOR KEYED - ISAM ALWAYS KEYED
APPSETR  EQU   *                        *
         SLL   R0,8                     MAKE ROOM FOR R
         IC    R0,APPRECNO              INSERT RECORD NO.
         LR    R4,R15                   SAVE BASE
         L     R15,CVTPTR               C(R15)=A(CVT)
         USING CVT,R15
         L     R15,CVT0SCR1             C(R15)=A(SECTOR CONVERT RTN)
         LR    R2,R14                   SET UP SECTOR RECEIVE ADDR
         BALR  R14,R15                  BRANCH TO THAT ROUTINE
         LR    R15,R4                   RESTORE BASE
         USING IGG019JH,R15
         L     R2,RQEIOB                RESTORE IOB POINTER
         LR    R14,R12                  RESTORE REG 14           Y02072
         LR    R0,R13                   RESTORE REG 0
         L     R4,IOBDCBAD-ONE          RESTORE DCB POINTER
         LA    R4,ZERO(R4)              CLEAR HIGH ORDER BYTE
         L     R10,DCBRELSE             RESTOR CP PTR            M6178
         LA    R11,IOBSECT              RESTORE SECTOR ADDR
         BR    R3                       RETURN
         EJECT
*
**********************************************************************
***********************  EQUATES AND CONSTANTS  **********************
**********************************************************************
*
         DS    0F                       FULLWORD BOUNDARY
HIBIT    DC    X'00008000'              TURN ON HI ORDER BIT
HZERO    DC    H'0'                     X'0000'
INDEXLEN DS    0H                       LENGTH OF INDEX ENTRIES
LINKLEN  DC    H'10'                    AND OVERFLOW LINK FIELD (10)
BDW      DC    X'0004'                  BLOCK DISCRIPTOR WORD LENGTH
CCDL     DC    X'40000001'              CC AND DATA LENGTH
KEYED    DC    X'01'                    I IN BBIR ALWAYS 1 FOR ISAM
INVAPPCD DC    H'0'                     PROGCHK FOR BAD APPCD  @ZA26522
TWOFOUR  DC    X'0018'                  MAX VALUE FOR APPCD    @ZA26522
ZERO     EQU   X'00'                    0
ONE      EQU   X'01'                    1
TWO      EQU   X'02'                    2
THREE    EQU   X'03'                    3
FOUR     EQU   X'04'                    4
FIVE     EQU   X'05'                    5
SEVEN    EQU   X'07'                    7
EIGHT    EQU   X'08'                    8
RPSTST   EQU   X'10'                    RPS MASK FOR RPS TESTING
INDEX    EQU   RPSTST                   INDEX ENTRY MASK
BLOCKED  EQU   RPSTST                   BLOCKED RECORDS MASK
WA11     EQU   11                       WORK AREA PLUS 11
RPS      EQU   17                       UCB + 17 = RPS BIT
DEC17    EQU   17                       OFFSET OF TIC IN CAW     A44446
CAW      EQU   X'48'                    LOCATION OF CAW          A44446
DEVCODE  EQU   19                       UCB + 19 = DEVICE TYPE CODE
OVFLO    EQU   X'20'                    OVERFLOW TEST MASK
VLR      EQU   X'40'                    MASK FOR VLR TEST
WRTCHK   EQU   X'80'                    WRITE VALIDITY CHECK MASK
CCOFF    EQU   X'BF'                    MASK FOR TURNING OFF CC
MTOFF    EQU   X'7F'                    TURN OFF MULTITRACK
TWO55    EQU   X'FF'                    255                      A43729
KEYZERO  EQU   HZERO                    STORAGE PROTECT KEY 0    Y02072
*
PATCH    DC    XL((*-IGG019JH)/20)'00'  ZEROED PATCH AREA        Y02072
*
         EJECT
IHARQE   DSECT
         IECDRQE                                                 Y02072
         EJECT
CVT      DSECT
         CVT
         SPACE 4
         DCBD  DSORG=(IS)
         EJECT
IHADEB   IGGDEBD
         EJECT
IHAIOB   IGGIOBD
SAVE14   EQU   IOBCSW                   SAVE RETURN ADDR REG
IDXOVFLO EQU   IOBCSW+FOUR              TEST INDEX AND OVERFLOW
HEAD     EQU   IOBCSW+FIVE              HH OF SEARCH ADDR
APPRECNO EQU   IOBCSW+SEVEN             R OF SEARCH ADDR
         EJECT
IGGWKNCP DSECT
         IGGCPOPS
CP1      DS    0D
         IGGCP1
CP2      DS    0D
         IGGCP2
CP4      DS    0D
         IGGCP4
         IGGCP5 OPTCD=W
CP6      DS    0D
         IGGCP6 OPTCD=W
CP7      DS    0D
         IGGCP7 OPTCD=W
CP8      DS    0D
         IGGCP8 OPTCD=W
CP9A     DS    0D
         IGGCP9A
CP9B     DS    0D
         IGGCP9B  OPTCD=W
CP9C     DS    0D
         IGGCP9C  OPTCD=W
CP10A    DS    0D
         IGGCP10A OPTCD=W
CP10B    DS    0D
         IGGCP10B OPTCD=W
CP11A    DS    0D
         IGGCP11A
CP11B    DS    0D
         IGGCP11B OPTCD=W
CP12A    DS    0D
         IGGCP12A OPTCD=V
LCD0D    EQU   CD0D-CD0A1
CP12B    DS    0D
         IGGCP12B OPTCD=V
LCE0C    EQU   CE0C-CE0
CP12C    DS    0D
         IGGCP12C OPTCD=W
CP13A    DS    0D
         IGGCP13A
CP13B    DS    0D
         IGGCP13B
CP13C    DS    0D
         IGGCP13C OPTCD=W
CP14     DS    0D
         IGGCP14 OPTCD=VW
LCH4     EQU   LCH3C+LCH3
*
CP15     DS    0D
         IGGCP15
CP16     DS    0D
         IGGCP16 OPTCD=VW
CP17     DS    0D
         IGGCP17 OPTCD=VW
CP123    DS    0D
         IGGCP123 OPTCD=V
         END
