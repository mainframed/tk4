         TITLE 'IGG019IZ - VLR ASYNC-COMBINED-WC AND NO WC'
IGG019IZ CSECT
*        RELEASE OS/VS2-02 DELETIONS
*                                                               YM01327
*                                                               YM01347
*                                                               YM01131
*        OS/VS2 RELEASE 3 CHANGES
*  A376720                                                      ZA01385
* A583700-583780,C595200                                        ZA00956
*              OS/VS2 RELEASE 040 CHANGES
* D177000-180000,D183600,D262200-274800,D276000-279600,         OZ05944
*  D310800-318300,A262100-267600,A276000-281065                 OZ05944
* A515900-517400                                                OZ05945
* A262100-262470,262600-263050                                 @ZA12888
*              CHANGES SINCE VS2-3.7                                  *
*A054900-055050,C055100                                        @ZA26522
*        RELEASE 21 DELETIONS
*1244055200,055800,058800-068100,070200,129600,441600,487200,    A41652
*1244501400-501800,510000-511200,559200,581400,600600,619800,    A41652
*1244624000,648000,650400,678640,678860-678866                   A41652
*1244254400,392400,406800-407400,459600-460800                   A42240
*1244136800,147600,494400,561600,593400,607800,666000,668400     S21045
*1244674400,678000                                               A33533
*1244136800                                                      A42866
*1244                                                            A45574
*1244345600,353400,355800,357000,358800                          A48560
*1244                                                            M1792
*XXXX678851                                                      A48664
*1244049500,050700,055000-055160,056601-057579,068440-068920,    M6187
*1244129210,130440                                               M6187
*1244678780                                                      A51488
*1244055500,056600-058500,059400,060200,060600,061000,061800,    A53214
*1244181800,487800,484400,489000,489600,490200,492600,493200,    A53214
*1244497400,498000,522800,522900,523000,525000,532800,545000,    A53214
*1244549900,562800,584400,668000,668400,668640,668680,668720,    A52134
*1244668760,669600,670500-678605,678636,678636,678853-678865     A52134
*1244678804                                                      A53751
*                                                               SM4379
*12446489970                                                     SMXXXX
*
*STATUS CHANGE LEVEL 004
* FUNCTION/OPERATION  ASYNCHRONOUS ROUTINE FOR BISAM WRITE KN
*        WITH  READ AND UPDATE - VARIABLE LENGTH RECORDS - WITH     
*        AND WITHOUT WRITE CHECK                                    
*        REQUESTED.
*       WRITE KN
*        CP14W IS INITIALIZED TO ADD A RECORD TO AN OVERFLOW CHAIN AND
*        SET THE INDICES AND LINK FIELDS RELATING TO THAT RECORD.
*        UPON COMPLETION OF THE LAST CP NEEDED TO ADD A RECORD TO THE
*        DATA SET, COMPLETION IS POSTED AND THE NEXT IOB AWAITING
*        THIS COMPLETION (IF ANY) IS SCHEDULED.  (R=U IF NO WRITE KN)
*       READ AND UPDATE
*        UPON COMPLETION OF CP1 OR CP2, THE NEXT IOB AWAITING THE CP
*        (IF ANY) IS SCHEDULED AND, IF COMPLETION WAS SUCCESSFUL, CP4-
*        CP5 IS SCHEDULED FOR THE IOB FOR WHICH CP1 OR CP2 JUST
*        COMPLETED. IF UNSUCCESSFUL, COMPLETION IS POSTED.
*        UPON COMPLETION OF CP5, CP6 OR CP7, THE NEXT IOB AWAITING THE
*        CP (IF ANY) IS SCHEDULED AND COMPLETION IS POSTED FOR THIS IOB
*        IF NO MORE READ AND UPDATE REQUESTS ARE MADE, THE FIRST
*        WRITE KN MACRO (IN ANY) IS SCHEDULED.
* INPUT - N/A
* OUTPUT - N/A
* ENTRY POINT' REL POS 0
* EXTERNAL ROUTINES
*        CP1 OR CP2, CP4 AND CP5, AND CP7 ARE INITIALIZED AND CP4-CP5-
*        CP6 REMOVED FROM THE CP QUEUE IN SUB-ROUTINES WITHIN THE
*        PRIVILEGED MACRO-TIME ROUTINE.
*        THE FIRST CHANNEL PROGRAM NEEDED FOR A WRITE KN MACRO IS
*        SELECTED AND INITIALIZED BY A SUB-ROUTINE WITHIN THE
*        PRIVILEGED MACRO-TIME ROUTINE.
*        WHEN ALL WRITE KN MACROS ARE COMPLETE, THE PENDING READ AND
*        UPDATE MACROS ARE SCHEDULED OR ARE REPLACED ON THE UNSCHEDULED
*        QUEUE ACCORDING TO THE CHANNEL PROGRAM EACH AWAITS BY A SUB-
*        ROUTINE WITHIN THE PRIVILEGED MACRO-TIME ROUTINE.
*        ENTRY POINT NAMES ARE
*        DISCP45 - INITIALIZE CP4 AND CP5
*        DISCP7  - INITIALIZE CP7
*        DISCPS  - INITIALIZE CP1 OR CP2
*        DISCPWKN- INITIALIZE WKN CP
*        DISPRIV - SCHEDULE OR RE-QUEUE READ AND UPDATE CP'S
*        SEE THE DSECT LABELED IHADIS FOR THE RELATIVE ADDRESSES OF THE
*        ENTRY POINTS OF THESE ROUTINES.  THE POINTER TO THE PRIVILEGED
*        MACRO-TIME ROUTINE IS IN DEBDISAD (SEE DEB DSECT).
*                    THE DYNAMIC BUFFERING ROUTINE WHICH FREES A BUFFER
*        UPON COMPLETION OF A WRITE K MACRO IS ENTERED VIA 'BUFASYN'.
*        SEE THE DSECT LABELED IHABUF FOR THE RELATIVE ADDRESS OF THE
*        ENTRY POINT OF THIS ROUTINE.  THE POINTER TO THE DYNAMIC
*        BUFFERING MODULE IS IN DCBFREED (SEE DCB DSECT).
* EXITS' RETURN TO SUPERVISOR VIA REGISTER 14.
* TABLES/WORK AREAS' DECB, DCB, IOB AND EXTENTION, DCB WA (DCW), DEB
*        SEE DSECTS AT END OF MODULE FOR FORMAT AND DESCRIPTIONS
* ATTRIBUTES' REENTRANT.  DISABLED UPON ENTRY AND EXIT.  ENABLED AT
*        VARIOUS POINTS WITHIN THE MODULE.
* NOTES - NONE
* GENERAL REGISTERS ARE USED AS FOLLOWS
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        12 STAR ON ENTRY, THEN IOB
R2       EQU   2                        DECB
R3       EQU   3                        WKN USED FOR WORK REG OR DEB
*                                        R+U USED BASE REGISTER
R4       EQU   4                        DCB
R5       EQU   5                        CHANNEL PROGRAMS
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
R8       EQU   8                        WORK REGISTER OR DCB WA
R9       EQU   9                        WORK REGISTER
R10      EQU   10                       WORK REGISTER
R11      EQU   11                       WORK REGISTER
R12      EQU   12                       WORK REGISTER OR DISABLE RTN
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       RETURN ADDRESS
R15      EQU   15                       BASE ON ENTRY
*                                        R+U USES AS WORK REGISTER
K1       EQU   1                        CONSTANT
K7       EQU   7                        CONSTANT
         SPACE 2
         USING RQE,R1                   RQE ADDRESSABILITY       Y02072
         USING IHADECB,2
         USING IHADEB,3
         USING IHADCB,4
         USING IHAWKNCP,5
         USING IHADCW,8
         USING ASYNCH,15
         SPACE 2
ASYNCH   EQU   *
         L     R3,RQEDEB                VALIDATED DEB ADDR       Y02072
         IC    R2,RQEPRT                CALLERS PROTECT KEY      Y02072
         DROP  R1                       END USING ON RQE         Y02072
         LR    R9,R1                    SAVE RQE ADDR            Y02072
         L     R0,SP230                 CORE SIZE AND SUBPOOL    Y02072
*                                       FOR REG SAVE AREA        Y02072
         MODESET  EXTKEY=DATAMGT        CORE IN DATAMGT KEY      Y02072
         SPACE 1
         LR    R5,R15                   SAVE BASE ADDR           Y02072
         GETMAIN  R,LV=(0)              GET SAVE AREA            Y02072
         LR    R15,R5                   RESTORE BASE ADDR        Y02072
*
         USING IGGSAVE,R1               SAVEAREA ADDRESSABILITY  Y02072
         XC    IGGSAVE(IGGSIZE),IGGSAVE  CLEAR CORE              Y02072
         ST    R14,IGGRETRN             SAVE RETURN ADDR         Y02072
         LR    R14,R1                   SAVE AREA ADDRESS AND    Y02072
         USING IGGSAVE,R14              * ADDRESSABILITY         Y02072
         ST    R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         STC   R2,IGGUKEY               USERS PROTECT KEY        Y02072
         USING RQE,R9                   RQE ADDRESSABILITY       Y02072
         L     R1,RQEIOB                IOB ADDRESS              Y02072
         USING IHAIOB,R1                IOB ADDRESSABILITY       Y02072
         DROP  R9                       END USING ON RQE         Y02072
*
         BAL   R11,GETLOCK              OBTAIN LOCAL LOCK,RTRN   Y02072
*                                       IN USER PROTECT KEY      Y02072
         L     R2,IOBECBAD              R2   DECB
         L     R4,IOBDCBAD-1            R4 DCB POINTER
         L     R5,IOBCCWAD              R5   CP
         XC    DCBPUTX,DCBPUTX          CLEAR DECB SAVE AREA     A41652
         SR    R9,R9                    R9   ASYNCH CODE TIMES 4
         IC    R9,IOBASYN
         CH    R9,SIXTEEN               IS ASYN CODE GT 16?    @ZA26522
         BNH   CODEOK                   IF NO-SKIP PROG CHK    @ZA26522
         DC    H'0'                     PROGCHK IF BAD CODE    @ZA26522
SIXTEEN  DC    X'0010'                  MAX VALUE FOR ASYNCODE @ZA26522
CODEOK   SLL   R9,1                     ASY CODE X 2           @ZA26522
         LH    R6,ASYTAB1(R9)           GET DISP                 A41652
ASYLDC2  EQU   *                                                 A41652
         B     0(R6,R15)                                         A41652
         EJECT
         DS    0H                                                A41652
ASYTAB1   EQU   *                                                A41652
         DC    AL2(ASYPART2-ASYNCH)     0  COMPLETE CP4-5-6 OK   A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYLDD3-ASYNCH)      1  EXCP                  A41652
         DC    AL2(ASYPART2-ASYNCH)     2  COMPLETE CP7 OK       A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYPART2-ASYNCH)     3  COMPLETE CP1-2 OK     A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYPART2-ASYNCH)     4  COMPLETE CP4-5-6 ERR  A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYLDC2-ASYNCH)      5  INVALID               A41652
         DC    AL2(ASYPART2-ASYNCH)     6  COMPLETE CP7 ERR      A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYPART2-ASYNCH)     7  COMPLETE CP1-2 ERR    A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYPART2-ASYNCH)     END WRITE KEY NEW        A53214
*                                       USE PART 2               A53214
         DC    AL2(ASYLV01-ASYNCH)      9  CP14 PRIME REC BUMP   A41652
         DC    AL2(ASYL5B2-ASYNCH)      10 CP14 ADD TRK AT END   A41652
         DC    AL2(ASYL8B2-ASYNCH)      11 CP14 ADD END,         A41652
*                                       OVERFLOW                 A41652
         DC    AL2(ASYL7B2-ASYNCH)      12 CP14 MIDDLE VRFL CHN  A41652
         DC    AL2(ASYL6B2-ASYNCH)      13 CP14 AT BEG OF VRFLCH A41652
         DC    AL2(ASYL9B2-ASYNCH)      14 CP14 NEW REPLACE DEL  A41652
         DC    AL2(ASYLV03-ASYNCH)      15 CP14 MULT REC BUMP    A41652
         DC    AL2(ASYLAB1-ASYNCH)      16                       A41652
         SPACE 4
*              EXECUTE CHANNEL PROGRAM
ASYLDD3  BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
         EJECT
***********************************************************************
*********   WRITE KN                                         **********
***********************************************************************
         USING IHADCW,R8
         USING IHAWKNCP,R5
ASYLAB1  LR    R9,R15                   SAVE BASE REG
*
*                            CODE 16-  END OF FILE WRITE KEY NEW
*
         XC    CH31(16),CH31           CLEAR CH31 AND CH32
         CLI   CH29+7,X'FF'        HAS EOF BEEN WRITTEN
         BE    ASYLAB7             YES END NORMALLY
*
         LR    R6,R1               SAVE IOB ADDR
         LA    R0,SPIOBECB              SIZE OF IOB WITH ECB     Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         STM   R2,R15,IGGREGS           SAVE REGISTERS 2-15      Y02072
         L     R4,DEBTCBAD              TCB ADDRESS              Y02072
         USING PSA,R0                   LOW CORE ADDRESSABILITY  Y02072
         L     R7,PSAAOLD               ASCB ADDRESS             Y02072
         SR    R2,R2                    CLEAR REGISTER           Y02072
         IC    R2,IGGUKEY               USER PROTECT KEY         Y02072
         LR    R8,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END SAVE AREA USING      Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=14 CHANGE TO KEY ZERO     Y02072
         SPACE 2
         GETMAIN  RU,LV=(0),SP=SP250,KEY=(R2),BRANCH=YES         Y02072
         SPACE 1
         MODESET  KEYADDR=(2)           CHANGE TO USER KEY       Y02072
         SPACE 2
         USING IGGSAVE,R8               SAVEAREA ADDRESSABILITY  Y02072
         LM    R2,R15,IGGREGS           RESTORE REGISTERS 2-15   Y02072
         DROP  R8                       END SAVE AREA USING      Y02072
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         LA    R1,0(R1)            CLEAR HI ORDER BYTE
         XC    0(EOFEND-IHAIOB,R1),0(R1) CLEAR IOB & DECB        S20201
         ST    R4,IOBDCBAD-1       PUT IN DCB ADDR
         ST    R6,EOFSV1           SAVE IOB ADDR
         ST    R2,EOFSV2           SAVE ECB ADDR
         LA    R2,EOFDECB          PICK UP ADDR OF EOF DECB
         ST    R2,IOBECBAD
         ST    R5,IOBCCWAD
         MVC   CH31(8),DCBLIOV     SET UP MBBCCHHR
         CLC   DCBNBOV(2),CH26+6   WILL 1 MORE REC FIT HERE
         BNL   ASYLAB6             YES IT WILL UP REC NUMB BY 1
         CLC   DCBRORG2,ONE             IS THIS LAST USABLE TRK  A28182
         BE    ASYLAB7                  YES, BR--NO FILE MARK    A28182
         SR    R10,R10
         IC R10,DCBLIOV            SET R10 TO ADDR OF DEB XTENTS
         SLL   R10,4
         AR    R10,R3
         SR    R9,R9
         CLC   CH31+6(1),DEBENDHH+1-IHADEB(R10)   LST TRK OF CYL
         BNE   ASYLAB5                            NO INC TRK
         CLC   CH31+3(3),DEBENDCC-IHADEB(R10)     LST TRK XTENT
         BNE   ASYLAB4                            NO INC CCH
         IC    R9,CH31             UP M BY 1
         LA    R9,1(R9)
         STC   R9,CH31
         CLC   CH31(1),DEBNMEXT    ANY MORE SPACE
         BE    ASYLAB3             NO  EOF ON SAME TRK IF IT FITS
         MVC   CH31+1(6),DEBBINUM+16-IHADEB(R10)  SET BBCCHH
         MVI   CH31+7,X'00'        ZERO OUT R
         B     ASYLAB6
*
ASYLAB3  BCTR  R9,0                RESET M TO ORIGINAL VALUE
         STC   R9,CH31
         LH    R10,CH26+4          PICK UP LIDO+10
         CH    R10,DCBNBOV         WILL EOF FIT
         LR    R9,R15                   IN CASE NOT, RESTORE REG A27360
         BH    ASYLAB7             NO SO LEAVE IT
         B     ASYLAB6             IT WILL FIT UP R
*
ASYLAB4  ST    R8,CH29+FOUR             SAVE REGISTER            S20201
         IC    R8,CH31+THREE            YES, PICK UP C2          S20201
         SLL   R8,8                     SHIFT                    S20201
         IC    R8,CH31+FOUR             PICK UP C1               S20201
         LA    R8,EQONE(R0,R8)          ADD ONE TO CYL           S20201
         STCM  R8,HW,CH31+THREE         STORE CYLINDER
*
         L     R8,CH29+4                RESET REGISTER
         XC    CH31+6(2),CH31+6    SET HR TO 0
         B     ASYLAB6
*
ASYLAB5  IC    R9,CH31+6           UP TRK BY 1
         LA    R9,1(R9)
         STC   R9,CH31+6           STORE IT
         MVI   CH31+7,X'00'        SET R TO 0
*
ASYLAB6  MVC   CH32(4),CH31+3      SET UP COUNT CCHH
         IC    R9,CH31+7           UP R
         LA    R9,1(R9)            TO 1 MORE THAN
         STC   R9,CH32+4           MBBCCHHR
         MVC   IOBDADAD(8),CH31    SET UP IOB
         LA    R9,CH25
         ST    R9,IOBSTART-1       SET START ADDR
         MVI   IOBCOUNT,X'0A'
         MVI   IOBAPP,X'09'
         MVI   IOBASYN,X'10'           SET ASYN CODE TO 16
         MVI   CH29+7,X'FF'        SET EOF WRITTEN FLAG
         B     ASYLDD3
ASYLAB7  MVI   CH29+7,X'00'        RESET FLAG
         L     R6,EOFSV1           RESETRESET IOB ADDR
         L     R2,EOFSV2           RESET DECB ADDR
         LA    R0,SPIOBECB              IOB-ECB SP, SIZE         Y02072
         BAL   R11,FREEIOB              FREE IOB-ECB             Y02072
         LR    R1,R6               SET UP ADDR OF ORIG IOB
ASYLAB8  LA    R7,4                                         VLR17 P4700
         TM    DECBEXC1,X'FD'          ANY ERRORS
         BNM   ASYLAB9                 IF NO CONTINUE            A53214
ASYLAB81 EQU   *                                                 A53214
         LA    R9,CDEAPC                2 X BR CODE,LABEL ASYAPC A53214
         B     ASYPART2                 BR TO PART 2             A53214
ASYLAB9  EQU   *                                                 A53214
*                                       SET UP CP12B OR CP14
         CLI   CK9+7,9                  REWRITE PRIME TRACK
         BE    ASYL3C4                  IF YES BRANCH
         CLI   CK9+7,12                ASYN CODE = 12
         BE    ASYLAB81                IF YES POST COMPLETION    A53214
         MVI   IOBAPP,X'0A'             IF NO UPDATE INDICES
         MVC   IOBSTART,CH13B+5         APP CODE =10
         MVC   IOBDADAD,CH14            RESTORE START + SEEK ADD
         MVI   CH14,X'03'               SET CH14
         MVI   CH14+4,X'20'             TO NOP
         MVI   CH14+7,X'01'
         B     ASYLDD3                  EXCP
ASYL3C4  MVI   IOBCOUNT,X'01'
         MVC   IOBDADAD,CH14
         OI    IOBFLAG1,X'C0'           DC ON,CC ON
         MVI   IOBAPP,X'15'             APP CODE = 21
         MVC   IOBSTART,CD2+5           CP12B STARTS AT CE0
         MVC   IOBDADAD+5(2),CD0+2     MOVE HH INTO IOBSEEK
         MVC   IOBDADAD+7(1),CB23+7    SEARCH R FOR CP12B
         MVI   CH29+6,X'00'            SET OVERFLOW FLAG
         CLC   IOBDADAD(7),DCBLPDA      TEST IF LAST TRACK
         BNE   ASYLDD3                  BRANCH IF NOT
         MVC   DCBLPDA+7(1),CD0A+2
         B     ASYLDD3                 EXCP EXIT
         SPACE 2
ASYASE60 EQU   *                        *
         L     R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         TM    DEBRPSID,RPSFLAGS        IS RPS PRESENT           S20201
         LA    R0,SP250IOB              SET LEN AND SP IOB
         BZ    NORPS                    NO, BRANCH               S20201
         AH    R0,RPSCCW                YES, ALLOW FOR RPS CCWS  S20201
NORPS    EQU   *                        FREE IOB CORE            Y02072
         BAL   R11,FREEIOB              FREE IOB                 Y02072
ASYASE61 EQU   *                                                 A41652
         ST    R2,DCBPUTX               DECB TO BE POSTED        A41652
         L     R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         LR    R12,R3                   DEB POINTER
         L    R8,DCBWKPT2
         USING IHADCW,R8                BISAM WA ADDR            Y02072
         CLI   DCWNUWKN,X'00'           IF NO MORE IOBS-WKN      A53214
         BE    ASYLAD3                  CHECK FOR UNSCHED IOB    A53214
         LA    R9,CDEAWF2               2X BR CODE-LABEL ASYAWF2 A53214
         B     ASYPART2                 START NEXT WKN           A53214
ASYLAD3  EQU   *                        *
         LA    R9,CDELAE4               2X BR CODE-LABEL ASYLAE4 A53751
         BAL   R6,ASYPART2              START NEXT WKN           A53751
         L     R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         L     R8,DCBWKPT2              WORK AREA ADDRESS        A53751
         NI    DCWWKNI,X'7F'            OTHERWISE, SET W KN NOT IN PROC
ASYLAE3  L     R1,DCWFIOBU              R1   NEXT IOB ON QUEUE
ASYLAE1  LTR   R1,R1
         BNE   ASYLAE11                 BR IF IOB PRESENT        A53214
         B     ASYFINIS                 BR IF NONE               A53751
ASYLAE11 EQU   *                                                 A53214
         TM    IOBUNSQR,X'08'           IF REASON ON Q NOT W KN GOING
         BO    ASYLAF1                   ON OR WAITING, GET NEXT IOB
         L     R1,IOBFCHAD               AND BRANCH BACK
         B     ASYLAE1
ASYLAF1  L     R6,IOBBCHAD              IF REASON ON Q IS W KN GOING ON
         LTR   R6,R6                     OR WAITING, REMOVE IOB FROM Q,
         BZ    ASYLAF11
         MVC   IOBFCHAD-IHAIOB(4,R6),IOBFCHAD
         B     ASYLAF12
ASYLAF11 MVC   DCWFIOBU,IOBFCHAD
ASYLAF12 L     R6,IOBFCHAD
         LTR   R6,R6
         BZ    ASYLAF13
         MVC   IOBBCHAD-IHAIOB(4,R6),IOBBCHAD
         B     ASYLAF2
ASYLAF13 MVC   DCWLIOBU,IOBBCHAD
ASYLAF2  L     R2,IOBECBAD              R2  ADDR OF DECB FOR NEW IOB
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12                 UP CP1,CP2,CP4-5-6, OR CP7
         BAL   R13,DISPRIV               BRANCH TO THE ROUTINE
         TM    DECBEXC1,X'80'            IF RECORD FOUND
         BO    ASYLAE3
         LTR   R1,R1                     IOB REG 0 IF UNSCHED   YM01327
*                                        FLAG SET IN PRIV RTN   YM01327
         BZ    ASYLAE3                   BR IF UNSCHED FLAG SET YM01327
         BAL   R13,SUBROUT1
         B     ASYLAE3                  CHECK NEXT ON Q          A42866
         EJECT
         USING IHADCW,R8                RESTORE WORK AREA BASE   A35340
*              SUB-ROUTINE CHARTS L2-L3
*              USE 1 ENTRANCE
ASYL2A2  TM    IOBINDCT,X'20'
         BO    ASYL2B1                 BIT 2 ON MEANS REC IS IN WA  
         XC    DECBLOGR,DECBLOGR        RECORD IS IN DECB AREA
         L     R6,DECBAREA              R6   ADDRESS OF LINK (NOT ZERO)
         LA    R6,2(R6)                OFLO LINK WILL BE IN AREA+2  
         L     R7,DECBKEY
         B     ASYL2C2
ASYL2B1  L     R6,CB26+4               OFLOW IS IN WORK AREA- LOAD  
*                                      ADDRESS FROM 'CURRENT OFLOW  
*                                      ADDRESS' WORD                
*                                      C(R6)=A(LOGR-14)             
         LA    R7,14(R0,R0)            R7=14                        
         ST    R6,DECBLOGR             C(R6)=C(DECBLOGR)=A(LINK)    
         AH    R7,DCBRKP                                            
         AR    R7,R6                   R7=A(INSERT KEY)             
ASYL2C2  MVC   0(10,R6),CB25            LINK PER R6 FROM CB25
         OI    CD0A+3,X'04'            SET USE SW FOR USE 1         
         B     ASYL2D2
*              USE 2 ENTRANCE
ASYL2D1  NI    CD0A+3,X'FB'            SET USE SW FOR USE 2         
ASYL2D2  MVC   CH8E+2(2),14(R6)        MOVE RECL TO 'SURE 2'        
         LH    R8,CH8E+2               R8=RECL                      
         LA    R8,4(R8)                R8=RECL+4                    
         STH   R8,CH8E+2               STORE IN 'SURE 2'            
         MVC   10(2,R6),CH8E+2         MOVE TO BLK CT FIELD         
         MVC   12(2,R6),ASYL00         ZERO REMAINDER OF BLK CT     
         TM    DCBOPTCD,X'08'          DETERMINE WHICH OFLOW AREA   
         BZ    ASYL2E3                   TO USE IF ANY AVAILABLE. TRY
         CLI   CB22+5,X'00'              CYLINDER AREA BEFORE INDEPEN-
         BNE   ASYL2H2                   DENT AREA.
ASYL2E3  TM    DCBOPTCD,X'10'
         BZ    ASYL2E4
         LH    R10,DCBRORG2             TEST INDEPENDENT AREA FULL.
         LTR   R10,R10
         BNE   ASYL3C1
ASYL2E4  OI    DECBEXC1,X'20'
         B     ASYLAB81                 BR TO POST COMPLETION    A53214
ASYL00   DC    X'0000'                                              
ASYL3C1  LA    R11,4(R11)               INDEPENDENT OVERFLOW AREA.
         LA    R8,(DCWLOG-DCWLPG)       PT TO OVERFLOW OVERHEADS S20201
         BAL   R10,ASYRT14              GO TO ROUTINE 1          O19113
****************************************************************
*
         LR    R10,R8                   R10=LIDO+RECL+KEYLEN+10  O19113
         SH    R10,CB5+6                R10=LIDO+RECL+10         O19113
         SH    R10,CH8E+2               R10=LIDO+10              O19113
         STH   R10,CH26+4               SAVE FOR EOF TESTING     O19113
         AH    R10,DCBLRECL             R10=LIDO+10+MAXLRECL     O19113
         AH    R10,CB5+6                                         O19113
*                                       R10=LIDO+10+MAXRECL+KEYLEO19113
         STH   R10,CH26+6               SAVE TI FOR EOF TESTING  O19113
*
****************************************************************
         CH    R8,DCBNBOV              WILL OFLOW FIT ON CURRENT TR 
         BNH   ASYL3BV                 B=YES                        
         LH    R8,DCBRORG2             REDUCE RORG2 BY ONE TRACK    
         BCTR  R8,R0                                                
         STH   R8,DCBRORG2                                          
         LTR   R8,R8                    ANY TRACKS LEFT          A28182
         BZ    ASYL2E4                  NO, SET NO SPACE         A28182
         SR    R10,R10                  R10 ADDRESS CURRENT DEB EXTENT
         IC    R10,DCBLIOV
         SLL   R10,4
         AR    R10,R3
         SR    R9,R9                    INITIALIZE R9 TO ZERO
         MVI   DCBLIOV+7,0              SET RECORD NO. TO ZERO
         CLC   DCBLIOV+6(1),DEBENDHH+1-IHADEB(R10) LAST TRACK OF CYL.
         BNE   ASYL3C3                  NO, GO INCREMENT TRACK NO.
         MVI   DCBLIOV+6,0              YES, SET TRACK NO. TO ZERO
         CLC   DCBLIOV+3(3),DEBENDCC-IHADEB(R10) LAST TRACK OF EXTENT
         BNE   ASYL3A3                  NO, GO TO INCREMENT CCH
         IC    R9,DCBLIOV               GO TO NEXT EXTENT
         LA    R9,1(0,R9)                M+1
         STC   R9,DCBLIOV
         CLC   DCBLIOV(1),DEBNMEXT      RUN OUT OF DEB (WILL NOT OCCUR)
         BE    ASYL2E4                  YES, GO SET NO SPACE INDICATION
         MVC   DCBLIOV+1(6),DEBBINUM+16-IHADEB(R10) MOVE NEW BBCCHH
         B     ASYL3B2                  EXIT
*
ASYRT1   SR    R8,R8                    CLEAR REG                S20201
ASYRT14  L     R9,DCBWKPT2              SET WKAREA BASE          S20201
         USING IHADCW,R9                                         S20201
         LH    R8,DCWLPG(R8)            R8=LIDO                  S20201
         DROP  R9                                                S20201
         AH    R8,CB5+6                R8=LIDO+KL                   
         MVC   CH8E+2(2),10(R6)        MOVE LENGTH TO 'SURE 2'      
         AH    R8,CH8E+2               R8=LIDO+KL+RECL              
         LA    R8,10(R8)               R8=LIDO+KL+RECL+10           
         BR    R10                     RETURN                       
*                                                                   
ASYRT2   L     R9,CH8F+4                LOAD DEV PTR             O19113
ASYRT24  MVC   CH8E+2(2),10(R6)         MOVE RECL TO 'SURE 2'    O19113
         LH    R8,CH8E+2                                            
         LA    R8,10(R8)                                            
         STH   R8,CH24+6               STORE (RECL+10) IN CH24      
         STH   R8,CH18+6               STORE IN CH18                
         LA    R10,8(R8)               R10=RECL+18                  
         AH    R10,CH17+6              R10=RECL+KL+18               
         STH   R10,CH18C+6             STORE IN CH18C               
         L     R10,DCBWKPT2             SET WKAREA BASE          S20201
         USING IHADCW,R10                                        S20201
         AH    R8,CB5+6                R8=10+KL+RECL                
         MH    R8,10(R9)               R8=TOL(10+KL+RECL)           
         SRA   R8,9                                                 
         C     R9,CH8B+FOUR             CHECK FOR IND OVFL       S20201
         BE    ASYRT25                  BR - - IND OVFL          S20201
         AH    R8,DCWIPG                R8=NIDO+TOL(10+KL+RECL)  S20201
         BR    R3                       RETURN                   S20201
ASYRT25  AH    R8,DCWIOG                R8=NIDO+TOL(10+KL+RECL)  S20201
         BR    R3                       RETURN                   S20201
         DROP  R10                                               S20201
*                                                                   
****************************************************************
*
ASYL3A3  EQU   *                        *
         ICM   R8,HW,DCBLIOV+THREE      PICK UP CYLINDER
         LA    R8,EQONE(R0,R8)          ADD ONE TO CYL           S20201
         STC   R8,DCBLIOV+FOUR          STORE C1                 S20201
         STCM  R8,HW,DCBLIOV+THREE      STORE CYLINDER
         B     ASYL3B2                  BR, DCBLIOV COMPLETE     S20201
*
ASYL3C3  IC    R9,DCBLIOV+6             INCREMENT TRACK NUMBER
         LA    R9,1(R9)
         STC   R9,DCBLIOV+6
ASYL3B2  L     R9,CH8B+4                LOAD DEV PTR             O19113
         MVC   DCBNBOV,4(R9)           MOVE TRACK CAPACITY          
ASYL3BV  MVC   CH23(8),DCBLIOV         SET CH23 MBBCCHHR FROM LIOV  
         IC    R8,DCBLIOV+7             ADD 1 TO R IN DCBLIOV
         LA    R8,1(R8)
         STC   R8,DCBLIOV+7
ASYL3E2  MVC   CH24(5),DCBLIOV+3        SET CCHHR IN CH24 FROM DCBLIOV
         MVI   CH29+7,X'01'             INDICATE IND OVFLOW USED
         L     R9,CH8B+4                LOAD DEV PTR             O19113
         BAL   R3,ASYRT24               GO TO ROUTINE 2          O19113
         L     R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         LH    R10,DCBNBOV                                          
         SR    R10,R8                  SUBTRACT BYTES USED FROM CAP 
         BNM   ASYBCK                                               
         SR    R10,R10                 IF MINUS MAKE ZERO           
ASYBCK   STH   R10,DCBNBOV                                          
         TM    CD0A+3,X'04'            TEST USE 2                   
         BZ    ASYL2B5                  EXIT IF YES
ASYL3F3  TM    CB26,X'08'               BRANCH IF NOT CHAINED, I.E. IF
         BZ    ASYL2K5                   NO OVERFLOW CHAIN ALREADY
         CLC   CB25(1),CH23             COMP CH23 TO CB25, SET P IN
         BNE   ASYL3K2                   LINK PER REG 6 ACCORDINGLY
         CLC   CB25+3(3),CH23+3         MCCH=, GO TO P = SEEK HH
         BE    ASYL2J3                   M =, SET P = SEEK CCHH
         MVI   9(R6),X'0B'               M NOT =, SET P = SEEK BBCCHH
         B     ASYL2J2
ASYL3K2  MVI   9(R6),X'07'
         B     ASYL2J2
ASYL2H2  MVC   CH23(6),IOBDADAD         CYL OFLOW AREA
         BAL   R10,ASYRT1              GO TO ROUTINE 1              
         L     R9,DEVPTR                LOAD DEVICE POINTER      S20201
         MVC   CH8E+2(2),CB22+3        MOVE REMAINING CAP TO 'SURE2'
         CH    R8,CH8E+2               WILL OFLOW REC FIT ON CURR TR
         BNH   ASYL2G2                 B=YES                        
         LR    R9,R3                   SAVE R3 IN R9           @ZA12888
         L     R3,16                   CVT                     @ZA12888
         L     R3,64(R3)               DEVICE CHARASTICS TBL   @ZA12888
         SR    R10,R10                 CLEAR REG 10            @ZA12888
         IC    R10,DCBDEVT             DEVICE TYPE             @ZA12888
         AR    R3,R10                  TABLE INDEX ENTRY       @ZA12888
         IC    R10,0(R3)               DEVICE OFFSET ENTRY     @ZA12888
         AR    R3,R10                  POINT TO PROPER DEVICE  @ZA12888
         IC    R10,DCBDEVT             DEVICE TYPE             @ZA12888
         SR    R3,R10                  REDUCE BY DEVICE TYPE   @ZA12888
         LH    R10,CB22                 *                       OZ05944
         LA    R10,1(R10)               * ADD 1 TO HH           OZ05944
         CH    R10,2(R3)               MAXIMUM TRACK PER CYL   @ZA12888
         LR    R3,R9                   RESTORE REG 3           @ZA12888
         L     R9,DEVPTR               LOAD DEVICE POINTER     @ZA12888
         BL    ASYL2H2A                PROCEEDE - MAX NOT HIT  @ZA12888
         LH    R10,DCBRORG1            BUMP RORG1              @ZA12888
         LA    R10,1(R10)              BY ONE                  @ZA12888
         STH   R10,DCBRORG1            PUT IT BACK             @ZA12888
         OI    CD0A+3,X'08'            SET NO ROOM SWITCH      @ZA12888
         B     ASYL2E3                 TRY INDEP. OVFLOW       @ZA12888
ASYL2H2A EQU   *                                               @ZA12888
         STH   R10,CB22                 *                       OZ05944
         MVI   CB22+2,X'00'             SET R=0                 OZ05944
         OI    CD0A+3,X'08'             SET SW-NO ROOM THIS TRK OZ05944
ASYL2G2  EQU   *
         MVC   CH23+6(2),CB22+1         SET HR FOR CH23         OZ05944
         SR    R10,R10                  CLEAR REG               OZ05944
         IC    R10,CB22+2               *                       OZ05944
         LA    R10,1(R10)               * ADD 1 TO R            OZ05944
         STC   R10,CB22+2               *                       OZ05944
*  WILL THIS RECORD FIT ON THE CURRENT TRACK?                   OZ05944
         BAL   R3,ASYRT2               GO TO ROUTINE 2              
         L     R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         MVC   CH8E+2(2),CB22+3         'SAV2'=REMAIN TRK CAP   OZ05944
         LH    R10,CH8E+2               R10 = TRK CAP           OZ05944
         STH   R8,CH8E+2                'SAV2'=REC SPACE RQIRED OZ05944
         SR    R10,R8                   SUTRACT RECORD SPACE    OZ05944
         BM    ASYBK3                   BR-NO RM FOR THIS REC   OZ05944
* WILL THIS RECORD AND A MAXIMUM LENGTH RECORD FIT THIS TRACK?  OZ05944
         L     R9,DCBWKPT2              SET WKAREA BASE         OZ05944
         USING IHADCW,R9                TELL ASSEMBLER          OZ05944
         LH    R12,DCWLPG               R12 = LIDO(TRK OVRHD)   OZ05944
         AH    R12,CB5+6                R12 = LIDO + KL         OZ05944
         AH    R12,DCBLRECL             R12=LIDO+KL+RECL        OZ05944
         LA    R12,10(R12)              R12=LIDO+KL+RECL+10     OZ05944
         SR    R10,R12                  WILL IT FIT?            OZ05944
         DROP  R9                       DROP WKAREA BASE        OZ05944
         BM    ASYBK3                   BR- NO RM FOR NEXT REC  OZ05944
         B     ASYL2G3                  BR-CAPACITY IS ADEQUATE OZ05944
ASYBK3   EQU   *
         SR    R10,R10                  CLEAR REG               OZ05944
         IC    R10,CB22+5               R10=TRKS LEFT IN CYLOFL OZ05944
         BCT   R10,ASYNEXT              SUB 1,BR=MORE TRKS LEFT OZ05944
         STC   R10,CB22+5               T=0, NO TRKS LEFT       OZ05944
         LH    R8,DCBRORG1              * BUMP DCBRORG1         OZ05944
         LA    R8,1(R8)                 * BY 1 ( NO, OF FULL    OZ05944
         STH   R8,DCBRORG1              * CYL OFL AREAS)        OZ05944
         B     ASYL2G3                  BR-SETUP CH24           OZ05944
ASYNEXT  EQU   *
         TM    CD0A+3,X'08'             ROOM ON THIS TRK?       OZ05944
         BNO   ASYL2G3                  YES-BR                  OZ05944
         STC   R10,CB22+5               NO - DECREASE T BY ONE  OZ05944
         MVC   CB22+3(2),4(R9)          YY = MAC TRK CAPACITY   OZ05944
         NI    CD0A+3,X'F7'             TURN OFF 'NO-SPACE' SW  OZ05944
ASYL2G3  EQU   *
         MVC   CH24(3),IOBDADAD+3       CH24 CCH FROM IOB       OZ05944
         MVC   CH24+3(2),CB22+1         CH24 HR FROM CB22       OZ05944
         LH    R8,CH8E+2                REC LENGTH THIS REQUEST OZ05944
         MVC   CH8E+2(2),CB22+3         AVAILABLE TRK CAPACITY  OZ05944
         LH    R9,CH8E+2                * REDUCE AVAILABLE TRK  OZ05944
         SR    R9,R8                    * CAPACITY BY LENGTH OF OZ05944
         STH   R9,CH8E+2                * THIS RECORD           OZ05944
         MVC   CB22+3(2),CH8E+2         STORE REMAINING CAPACITY
         LA    R9,CH1                   SET IOB START PTR. TO CH1
         ST    R9,IOBSTART-1
         LA    R12,IOBDADAD+3          CCHHR FOR SEARCH             
         ST    R12,CH1                 STORE INTO CCW               
         MVI   CH1,X'31'               REINITIALIZE SEARCH          
         TM    DCBOPTCD,X'80'                                       
         BZ    ASYNOWC
         MVC   CH3A+1(3),CH1+1                                      
ASYNOWC  TM    CD0A+3,X'04'
         BZ    ASYL2B5
         TM    CB26,X'08'               BRANCH IF CHAINED IN F OF CB26
         BO    ASYL2J3
ASYL2K5  LA    R9,CH12                 CH10 TICS TO CH12            
         ST    R9,CH10                  SET TIC ADDR
         MVI   CH10,TIC                 RESET COMMAND CODE
         OI    CB26,X'08'               RESET F TO INDICATE CHAINED
         LR    R9,R7                    PLACE REG 7 IN ADDR OF CH12
         ST    R9,CH12                  SET KEY AND DATA ADDR
         MVI   CH12,WKD                 RESET COMMAND CODE
         B     ASYL2J1                  BRANCH
ASYL2J3  MVI   9(R6),X'1B'   SET P IN LINK PER R6 TO SEEK HH
ASYL2J2  LA    R9,CH13                 CH10 TICS TO CH13            
         STH   R9,CH10+2                                            
         SRL   R9,16                                                
         STC   R9,CH10+1                                            
ASYL2J1  MVC   CB25(3),CH23
         TM    DCBOPTCD,X'80'          TEST IF WRITE CHECK          
         BO    ASV01                   B=YES                        
         NI    CH18+4,X'BF'            CH18  CC OFF                 
ASV01    NI    CH18C+4,X'BF'           CH18C  CC OFF                
ASV011   MVC   CB25+3(5),CH24                                       
         LR    R9,R6                    PLACE R6 IN ADDR CH18
         STH   R9,CH18+2
         SRL   R9,16
         STC   R9,CH18+1
         LR    R9,R7                    PLACE R7 IN ADDR CH17
         STH   R9,CH17+2
         SRL   R9,16
         STC   R9,CH17+1
         CLI   7(R6),X'FF'
         BNE   ASYL2B5
         MVI   8(R6),X'10'
         MVI   9(R6),X'07'
ASYL2B5  LH    R9,DCBNOREC              ADD 1 TO NORECS
         LA    R9,1(R9)
         STH   R9,DCBNOREC
         BR    R11                      RETURN
         EJECT
*                       ASYNC CODE = 9, RECORD(S) BUMPED OFF A PRIME
*                       DATA TRACK
*                       THIS ROUTINE USES CODE FROM ASYNC=10 TO
*                       DO ALL WORK EXCEPT SETTING UP CP14 TO WRITE
*                       THE PRIME INDEX ENTRY
*
ASYLV01  BAL   R11,MYSUBRTN
         OI    IOBINDCT,X'20'          INSERT RECORD IS
         SR    R10,R10                 NEW HI KEY - PRIME
         L     R12,CH7                 MOVED TO AND
         L     R13,DCBMSWA             WRITTEN FROM MSWA
         IC    R10,DCBKEYLE
         BCTR  R10,0
         EX    R10,ASYLKM
         MVC   CH7+1(3),DCBMSWA+1
         LA    R10,CH5                 CH4 TICS TO CH5
ASYLV015 STH   R10,CH4+TWO              STORE ADDRESS TO TIC TO  S20201
         SRL   R10,16
         STC   R10,CH4+1
         OI    CH8C+4,X'40'           *CC ON IN CH8C
         OI    CH8G5,MT                                          S20201
         MVI   CH29+6,X'01'             SET FIRST TIME FLAG
         B     ASYLV02
*
*                       BEGIN CODE FOR ASYNC=15  THIS ROUTINE IS
*                       ENTERED TO START WRITING OF 2ND,3RD,ETC RECORDS
*                       WHICH OVERFLOW FROM PRIME DATA TRACK
*
*    CH8E+6 IN CP14 CONTAINS THE NO. OF RECORDS THAT OVERFLOWED FROM
*    THE PRIME TRACK THAT WAS REWRITTEN.  CH8E+6 WAS SETUP IN THE
*    PART1 APPENDAGE.
*
ASYLV03  BAL   R11,MYSUBRTN
         L     R12,CB26+4
         LA    R13,CH31                USE CH31,CH32 AS SAVE ARE
         MVC   0(14,R12),0(R13)        RESTORE 14 BYTES PRECEDING LAST
*                                      OFLOW RECORD
         MVI   CH29+6,X'00'             RESET FIRST TIME FLAG
         MVC   IOBDADAD(5),CB10+7
*                                      COMBINED ASYNC 9 + 15
ASYLV02  L     R12,CH21+4
         SR    R10,R10                 CLEAR  REG 10
         L     R12,40(R12)             R12= A(1ST OFLOW)
         LH    R10,CH8E+SIX   R10=NUM OVERFLOWS                  A48560
ASYLV06  BCT   R10,ASYLV04
         B     ASYLV05                 GO TO V05 WHEN LAST OFLOW FOUND
ASYLV04  MVC   CH8E+2(2),0(R12)        MOVE RECL OF OFLOW TO SURE2
         AH    R12,CH8E+2              R12 POINTS TO NEXT OFLOW
         B     ASYLV06
*                                      R12 POINTS TO HI KEY OFLOW
ASYLV05  LA    R13,14(R0,R0)                            PR
         SR    R12,R13
         LA    R13,CH31                USE CH31,CH32 AS SAVE ARE
         MVC   0(14,R13),0(R12)        SAVE 14 BYTES PRECEDING OFLOW
         ST    R12,CB26+4              STORE ADDRESS OFF THIS OFLOW
         CLC   CH8E+SIX(TWO),HALF1      TEST IF LAST OFLOW       A48560
         BE    ASYLV10
         MVI   IOBASYN,X'0F'           SET IOBASYN = 15
         SR    R10,R10
         LH    R10,CH8E+SIX             SUBTRACT 1 FROM NUM      A48560
*                                       OFLOWS                   A48560
         BCTR  R10,R0
         STH   R10,CH8E+SIX             *                        A48560
         B     ASYL5C3                 GO USE CODE FROM ASYMC =10
ASYLV10  MVI   IOBASYN,X'09'           SET IOBASYN=9
         MVC   CH8E+SIX(TWO),HALF0      CLEAR NUM OF OFLOWS      A48560
         B     ASYL5C3
ASYLKM   MVC   0(1,R13),0(R12)
         EJECT
*              CHART L5  ASYNCHRONOUS ROUTINE, CODE 10
ASYL5B2  BAL   R11,MYSUBRTN
         L     R8,DCBWKPT2                                          
         USING IHADCW,R8                                         S20201
         NI    DCWWKNI,X'EF'           ADD TO END SW OFF            
         LA    R8,CH8G                                              
         STH   R8,CH4+2                CH4 TICS TO CH8G             
         SRL   R8,16                                                
         STC   R8,CH4+1                                             
         MVI   CH29+6,X'01'            SET FIRST TIME FLAG
ASYL5C3  BAL   R11,ASYL2A2              SUB-ROUTINE CHARTS L2-L3, USE 1
         B     ASYL5D4                  CYLINDER AREA RETURN. BRANCH
         TM    CH29+6,X'01'             TEST FIRST TIME FLAG
         BZ    ASYL5F4                  BRANCH IF NOT FIRST TIME
         NI    CH55,X'FF'-MT                                     S20201
         CLI   IOBASYN,X'0D'           TEST IF ASYNC CODE=10,13, OR 
         BE    ASYOK2                  15 - IF SO, INDEX ENTRY IS   
         CLI   IOBASYN,X'0A'           1ST WRITTEN-MT OFF IN CH8G   
         BE    ASYOK2                                               
         TM    CH8G5,MT                                          S20201
         BZ    ASYOK2                                               
         MVC   IOBDADAD+5(2),CB23      IF ASYNC=9, PRIME ENTRY      
         B     ASYOK3                  WRITTEN FIRST-MT ON IN CH8G  
ASYOK2   MVC   IOBDADAD+5(2),CB24+2                                 
         NI    CH8G5,X'FF'-MT                                    S20201
ASYOK3   L     R9,CH4                  START AT ADDR INDICATED-CH4  
         ST    R9,IOBSTART-1
         B     ASYL5F4                  BRANCH
ASYL5D4  OI    CH8G5,MT                MT ON                     S20201
         CLC   IOBDADAD+SIX(EQONE),CB23+EQONE H(COCR)=H(TRK IX)  S20201
         BE    ASYL4C5                  YES, BR--NO HEAD SEEK    S20201
         LA    R6,CI5                   GET SEEK ADDRESS         S20201
         ST    R6,CH5                   AND PUT IN CH5           S20201
         MVI   CH5,SEEKHH               SET UP COMMAND CODE      S20201
         MVI   CH5+SEVEN,SIX            SET COUNT TO SIX         S20201
         MVC   CI5(TWO),IOBDADAD+EQONE  SET BB                   S20201
         MVC   CI5+TWO(FOUR),CB22+SIX   SET UP CCHH              S20201
         B     ASYL4D5                  CONTINUE CP 14 SET UP    S20201
ASYL4C5  MVI   CH5,NOP                  CONVERT TO NO-OP         S20201
         MVI   CH5+K7,K1                SET COUNT TO ONE        ZA01385
ASYL4D5  EQU   *                        SET UP REST OF CP14      S20201
         TM    DCBOPTCD,X'80'          TEST IF WRITE CHECK          
         BO    ASYL5F4                 B=YES                        
         MVC   CH3A1(FOUR),CH4          CAUSE CH3A1 TO TIC       S20201
ASYL5F4  MVI   IOBAPP,12                APPENDAGE CODE IS 12
         MVC   CK9+7(1),IOBASYN        SAVE ASYNC CODE              
         LA    R6,IOBDADAD+3
         STH   R6,CH1+2
         SRL   R6,16
         STC   R6,CH1+1
         B     ASYL4D5A
         EJECT
*              CHART L6  ASYNCHRONOUS ROUTINE, CODE 13
ASYL6B2  BAL   R11,MYSUBRTN
         LA    R8,CH8G                 CH4 TICS TO CH8G             
         STH   R8,CH4+2                                             
         SRL   R8,16                                                
         STC   R8,CH4+1                                             
         MVC   CB24(5),CB22+6
         MVC   CB25(10),CB10+7
         MVI   CH29+6,X'01'             SET FIRST TIME FLAG
         B     ASYL5C3
MYSUBRTN OC    IOBDADAD+6(1),DCBFIRSH+3 TRACK MASK
         XC    IOBDADAD+6(1),DCBFIRSH+3 REDUCE TO CYL BOUNDRY OR ZERO
         MVI   IOBDADAD+7,0
         BR    R11
         EJECT
*              CHART L7  ASYNCHRONOUS ROUTINE, CODE 12
ASYL7B2  L     R6,DECBAREA              R6  ADDR OF AREA DECB POINTS TO
         LA    R6,2(R6)                                             
         L     R7,CJ10                  R7  ADDR PER CJ10
         MVC   0(10,R6),0(R7)          MOVE LINK FROM CJ10 AREA     
         MVI   CH29+6,X'01'             SET FIRST TIME FLAG
         BAL   R11,MYSUBRTN
         BAL   R11,ASYL2D1              SUB-ROUTINE CHARTS L2-L3, USE 2
         B     ASYL7E3                  CYLINDER OVERFLOW AREA USED.
         MVC   IOBDADAD,CH23            INDEPENDENT OVERFLOW AREA.
         LA    R10,CH15                 SET UP IOB, MBBCCHHR FROM CH23
         ST    R10,IOBSTART-1
         MVC   0(8,R7),DCBLIOV          MV LAST IND VRFLO KEY TO LINK
ASYL7K4A EQU   *
         L     R6,DECBAREA
         CLC   CH23(1),2(R6)           SET P IN DECBAREA TO
         BNE   ASYL7K3                   SEEK BBCCHH IF DIFF DEVICE(M)
         CLC   CH23+3(3),5(R6)         SEEK CCHH IF SAME DEV
         BNE   ASYL7K4                                   DIFF CYL (MCC)
         MVI   11(R6),X'1B'            SEEK HH IF SAME DEV
         B     ASYL7F4                                   AND CYL(MCC)
ASYL7K4  MVI   11(R6),X'0B'
         B     ASYL7F4
ASYL7K3  MVI   11(R6),X'07'
ASYL7F4  L     R7,CJ10                  TEST SAME M CJ23 AND CJ11
         CLC   CH23(1),CJ11
         BE    ASYL7G5
         MVI   CH19,X'07'               NOT SAME, P IN CH19 AND IN AREA
         MVI   9(R7),X'07'               PER CJ10 MUST BE SEEK BBCCHH
         B     ASYL7G2
ASYL7G5  MVI   CH19,X'0B'               SAME, P IN CH19 AND IN AREA PER
         MVI   9(R7),X'1B'              OLD P SEEK HEAD          A42240
         CLC   CH23+3(3),CJ11+3         ON SAME CYLINDER         A42240
         BE    ASYL7G2                  CONTINUE                 A42240
         MVI   9(R7),X'0B'               CJ10 MUST BE SEEK CCHH
         B     ASYL7G2
*                                       CYLINDER OVERFLOW AREA.
ASYL7E3  MVC   0(3,R7),CH23             SET MBB OF LINK FIELD PER CJ10
         MVC   3(5,R7),CH24             SET CCHHR OF LINK FLD PER CJ10
         LA    R10,CH14                 CH4  MUST TIC TO CH14
         ST    R10,CH4
         MVI   CH4,X'08'                MOVE TIC COMMAND
         TM    DCBOPTCD,X'80'                                       
         BO    ASYL7G3
         MVC   CH3A1(FOUR),CH4         MOVE IN TIC               S20201
         B     ASYL7K4A          GO BACK & SET P                  
ASYL7G3  MVI   CH19,X'0B'     CH19 SEEK CC                        
ASYL7G2  TM    DCBOPTCD,X'80'          TEST IF WRITE CHECK          
         BO    ASV02                   B=YES                        
         OI    CH18+4,X'40'            CC ON IN CH18                
ASV02    OI    CH18C+4,X'40'           CC ON IN CH18C               
ASV021   MVC   CH22+1(3),CJ10+1        ADDR IN CH22 SAME AS CJ10    
         L     R10,CJ10                R10=A(PREV OFLOW)            
         MVC   CH8E+2(2),10(R10)                                    
         LH    R6,CH8E+2               R6=LENGTH OF PREV OFLOW      
         LA    R6,10(R6)                                            
         STH   R6,CH22+6               STORE LENGTH IN CH22         
         STH   R6,CH22C+6              AND CH22C                    
         L     R10,DECBAREA             ADDRESS CH18, DECB AREA + 6
         LA    R10,2(R10)                                           
         CLI   7(R10),X'FF'
         BNE   ASV031
         MVI   8(R10),X'10'
         MVI   9(R10),X'07'
ASV031   STH   R10,CH18+2
         SRL   R10,16
         STC   R10,CH18+1
         MVC   CH17+1(3),DECBKEY+1      CH18 ADDRESS DECB KEY
         MVI   IOBAPP,13                APPENDAGE CODE 13
         MVC   CK9+7(1),IOBASYN        SAVE ASYNC CODE              
ASYL4D5A MVI   IOBCOUNT,X'0A'          SET COUNTER TO 10            
ASYL5F6  TM    CH29+6,X'01'             TEST FIRST TIME FLAG
         BZ    ASYL5F5
         MVI   CH29+6,X'00'             RESET FIRST TIME FLAG
         MVC   CH13B+5(3),IOBSTART      SAVE IOBSTART
         MVC   CH14,IOBDADAD
ASYL5F5  LA    R9,CH15                  SET IOBSTART TO CH15
         ST    R9,IOBSTART-1            TO WRITE OVERFLOW RECORD
         MVC   IOBDADAD,CH23           SET IOBSEEK=OVERFLOW REC
         BAL   R13,SUBROUT1                                       18106
         B     ASYFINIS                 RETURN VIA EXIT          A41652
         EJECT
*              CHART L8  ASYNCHRONOUS ROUTINE,CODE 11
ASYL8B2  BAL   R11,MYSUBRTN
         L     R3,IGGPDEB               VALIDATED DEB ADDR       Y02072
         MVC   CH12+1(3),DECBKEY+1      SET ADDR IN CH12 TO DECB KEY
         MVI   CH29+6,X'01'             SET FIRST TIME FLAG
         L     R6,DECBAREA              R6  ADDR OF DECB AREA
         LA    R6,2(R6)                                             
         L     R7,CJ10                  R7  ADDR AREA PER CJ10
         MVC   0(10,R6),0(R7)                                       
         OI    8(R7),X'18'              F NOW = OFLO CHAINED, NOT END
         LA    R8,CH12                 WRITE OVERFLOW ENTRY-KEY AND 
         STH   R8,CH10+2               DATA                         
         SRL   R8,16                                                
         STC   R8,CH10+1                                            
         BAL   R11,ASYL2D1              SUB-ROUTINE CHARTS L2-L3, USE 2
         B     ASYL8D2                  CYLINDER OVERFLOW AREA
         MVC   IOBDADAD(3),DCBLPDA      INDEPENDENT AREA.
         MVC   IOBDADAD+3(5),CB24       SEEK-SRCH ADDR =LAST OFLO ENTRY
         MVC   0(8,R7),DCBLIOV          SET LINK TO LAST INDEP OFLO RCD
         LA    R10,CH8G                START AT CH8G                
         ST    R10,IOBSTART-1
         NI    CH8G5,X'FF'-MT           CH8G5 MT OFF             S20201
ASYL8H4  CLC   CH23(1),CJ11             MCC CH23 AND CJ11
         BNE   ASYL7F4
         CLC   CH23+3(3),CJ11+3         CCH  CH23 AND CH11
         BNE   ASYL7F4                  NO - BRANCH
         L     R7,CJ10
         MVI   9(R7),X'1B'              YES - LINK PER CJ10 P = SEEK HH
         B     ASYL7G3                         AND BRANCH
ASYL8D2  L     R7,CJ10                  CYLINDER VRFLO AREA.
         MVI   9(R7),X'1B'
         MVC   0(3,R7),CH23             LINK PER CJ10 P = SEEK HH
         MVC   3(5,R7),CH24                           MBB FROM CH23
         LA    R10,CH8G                               CCHHR -CH24   
         ST   R10,CH4                  START AT CH8G                
         MVI   CH4,X'08'                MOVE TIC COMMAND
         TM    DCBOPTCD,X'80'          TEST IF WRITE CHECK          
         BO    ASV03                   B=YES                        
         MVC   CH3A1(FOUR),CH4         CAUSE CH3A1 TO TIC        S20201
ASV03    OI    CH8G5,MT                MT ON                     S20201
         B     ASYL8H4          GO BACK & SET UP P                
         EJECT
*              CHART L9  ASYNCHRONOUS CODE 14
ASYL9B2  EQU   *                        *
         LA    R10,CH20                 IOB START POINTS TO CH20
         ST    R10,IOBSTART-1
         L     R6,DECBAREA             LINK FIELD PER CJ9 MOVED TO  
         L     R7,CJ9                  DECBAREA +2               S20201
         MVC   2(10,R6),0(R7)                                       
         MVC   IOBDADAD,CJ11            RESTORE SEEK ADDRESS FROM CJ11
         LA    R10,2(R6)                                            
         LH    R6,14(R10)              R6=LENGTH OF RECORD          
         LA    R6,4(R6)                ADD 4 FOR BLOCK CT           
         STH   R6,CH8E+2                                            
         MVC   10(2,R10),CH8E+2
         MVC   12(2,R10),ASYL00        ZERO REST OF BLK CT FIELD    
         LA    R6,10(R6)               R6=LENGTH OF OFLOW           
         STH   R6,CH22+6               STORE IN CH22 AND            
         STH   R6,CH22C+6              CH22C                        
         STH   R10,CH22+2
         SRL   R10,16
         STC   R10,CH22+1                    PLACE AT CH22
         MVI   IOBAPP,13                APPENDAGE CODE 13
         MVC   CK9+7(1),IOBASYN                                     
         MVI   IOBCOUNT,X'0A'                SET COUNTER TO 10
         BAL   R13,SUBROUT1             DISABLE INTERRUPTS        18106
         B     ASYFINIS                 RETURN VIA EXIT          A41652
         EJECT                                                   A53214
***********************************************************************
*   THE FOLLOWING CODE IS USED TO ESTABLISH ADDRESSIBILITY FOR        *
*   PART 2.  ANY BRANCH FROM PART 1 TO A TARGET IN PART 2 MUST COME   *
*   THROUGH LABEL ASYPART2 WITH A CODE IN REGISTER 9.  THE CODE IN    *
*   REGISTER 9 MUST BE 2 TIMES THE CODE VALUE ASSIGNED IN THE TABLE   *
*   WHICH HAS THE LABEL ASYTAB11.  CONSTANTS AND SUBROUTINES SHARED   *
*   BY PART 1 AND PART 2 IMMEDIATELY FOLLOW TABLE ASYTAB11, AND ARE   *
*   ADDRESSIBLE BY BOTH PART 1 AND PART 2.                            *
***********************************************************************
*                                                                A53214
*                                                                A53214
*                                                                A53214
ASYPART2 EQU   *                                                 A53214
         BALR  R3,R0                    SET BASE FOR PART 2      A53214
BASETWO  EQU   *                                                 A53214
         USING BASETWO,R3               ADDRESSIBILITY           A53214
         LH    R15,ASYTAB11(R9)         GET BR DISPLACEMENT      A53214
         B     0(R15,R3)                BR BY CODE               A53214
*                                                                A53214
*                                                                A53214
ASYTAB11 EQU   *                                                 A53214
         DC    AL2(ASYASB2-BASETWO)     0 ASY CODE               A53214
TABAWF2  DC    AL2(ASYAWF2-BASETWO)     1 BR CODE                A53214
         DC    AL2(ASYASB1-BASETWO)     2 ASY CODE               A53214
         DC    AL2(ASYAUB2-BASETWO)     3 ASY CODE               A53214
         DC    AL2(ASYASE5A-BASETWO)    4 ASY CODE               A53214
TABLAE4  DC    AL2(ASYLAE4-BASETWO)     5 BR CODE PART 1         A53751
         DC    AL2(ASYASE5A-BASETWO)    6 ASY CODE               A53214
         DC    AL2(ASYAUB2-BASETWO)     7 ASY CODE               A53214
TABAPC   DC    AL2(ASYAPC-BASETWO)      8 ASY CODE OR            A53214
*                                         BR CODE PART 1         A53214
CDELAE4  EQU   TABLAE4-ASYTAB11         SUBROUTINE ID (ASYLAE4)  A53751
CDEAWF2  EQU   TABAWF2-ASYTAB11         SUBROUTINE ID (ASYAWF2)  A53751
CDEAPC   EQU   TABAPC-ASYTAB11          SUBROUTINE ID (ASYAPC)   A53751
*                                                                A53214
*********   SUBROUTINES SHARED BY PART 1 AND PART 2          **********
*
*        THE FOLLOWING ROUTINE IS ENTERED ON A BISAM ERROR
*        CONDITION. IT SAVES REGISTERS AND RETURNS TO USER
*        WITH ERRORS SET IN DECB.
         SPACE 1
ASYERROR EQU   *                        *
         L     R8,DCBMSWA               ADDR OF AREA TO SAVE REGSA63253
         STM   R0,R15,0(R8)             SAVE REGISTERS          SA63253
         OI    DECBEXC1,X'FD'           SET ALL ERRORS          SA63253
         ST    R6,DCBGET                SAVE ERROR ADDRESS      SA63253
         SPACE 2
*              THE FOLLOWING IS THE COMMON EXIT TO BE USED FOR
*              RETURNING TO THE SUPERVISOR AFTER POSTING A
*              COMPLETED REQUEST IF NECESSARY
*
ASYFINIS EQU   *                                                 M6187
         BALR  R12,R0                   ESTABLISH               YM01347
         USING *,R12                    ADDRESSIBILITY          YM01347
         BAL   R11,FREELOCK             RELEASE LOCAL LOCK       Y02072
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         IC    R2,IGGUKEY               USER PROTECT KEY         Y02072
         L     R0,SP230                 SIZE AND SUBPOOL         Y02072
         LR    R1,R14                   ADDR OF CORE TO FREE     Y02072
         L     R14,IGGRETRN             RETURN ADDRESS           Y02072
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         FREEMAIN  R,LV=(0),A=(1)       FREE SAVE AREA           Y02072
         SPACE 2
         MODESET  KEYADDR=(2)           CHANGE TO USER KEY       Y02072
         SPACE 2
         NC    DCBPUTX,DCBPUTX          DECB TO BE POSTED        M6187
         BZ    NOPOST                   NO - EXIT                M6187
         L     R2,DCBPUTX               GET SAVED DECB ADDR      M6187
         POST  DECBECB                  POST COMPLETION          M6187
*        DO NOT INSERT CODE BETWEEN POST AND RETURN              M6187
NOPOST   EQU   *                                                 M6187
         RETURN   ,                     RETURN TO SUPERVISOR     M6187
         DROP  R12                      END BASE REG USING      YM01347
         EJECT
*                                                                A53214
SUBROUT1 SR    R15,R15                  USE R15 INSTEAD OF R9    A53214
         IC    R15,IOBDADAD             PLACE BB FROM CURRENT    A53214
         SLL   R15,4                    EXTENT INTO              A53214
         L     R6,IGGPDEB               VALIDATED DEB ADDR       Y02072
         LA    R15,32(R15,R6)           THE                      A53214
         MVC   IOBDADAD+1(2),4(R15)     IOB                      A53214
         MVC   IOBBCHAD+1(3),IOBECBAD+1 SAVE ECB                 A53214
         LA    R15,IOBCSW               IOS WILL ZERO OUT CSW    A53214
         ST    R15,IOBECBAD             INSTEAD OF DECBECB       A53214
         OI    DECBEXC2,X'02'           EXCP SWITCH FOR JV & JW  A53214
         LR    R4,R1                    SAVE IOB ADDRESS         A53214
         BALR  15,0                     ADDRESSABILITY - ENABLE  A53214
         USING *,15                                              A53214
         SPACE 1
         BAL   R11,FREELOCK             RELEASE LOCAL LOCK       Y02072
         SPACE 1
         EXCP  (1)                                               A53214
         SPACE 1
         BALR  R15,0                    RESET BASE ADDR          A53214
         USING *,R15                                             A53214
         SPACE 1
         BAL   R11,GETLOCK              OBTAIN LOCAL LOCK        Y02072
         SPACE 1
         LR    R1,R4                    RESTORE IOB ADDRESS      A53214
         USING IHADEB,R6                ADDRESSABILITY ON DEB    A53214
         L     R4,DEBDCBAD              RESTORE DCB ADDRESS      A53214
         MVC   IOBECBAD+1(3),IOBBCHAD+1 RESTORE ECB              A53214
         L     R15,BASESAV              RESTORE BASE ADDRESS    YM01131
         DROP  R6,R15                   END USINGS              YM01347
         BR    R13                      RETURN                   A53214
         EJECT
**********************************************************************
*        SUBROUTINES TO OBTAIN AND RELEASE THE LOCAL LOCK            *
**********************************************************************
         SPACE 2
GETLOCK  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         LR    R9,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END SAVE AREA USING      Y02072
         BALR  R10,R0                   ESTABLISH SUBROUTINE    YM01347
         USING *,R10                    ADDRESSABILITY          YM01347
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11 CHANGE TO KEY ZERO     Y02072
         SPACE 2
**********************************************************************
*        OBTAIN THE LOCAL LOCK.  FREED AT FLCL1.                     *
**********************************************************************
         SPACE 2
GLCL1    SETLOCK  OBTAIN,TYPE=LOCAL,MODE=UNCOND,  OBTAIN THE     Y02072*
               RELATED=(IOB,IGG019IZ(FLCL1))  LOCAL LOCK         Y02072
         USING IGGSAVE,R9               SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         BR    R11                      RETURN                   Y02072
         DROP  R9,R10                   END USINGS              YM01347
         SPACE 5
**********************************************************************
*        RELEASE LOCAL LOCK ROUTINE - BASE ADDRESS IS IN             *
*        REGISTER 15 ON ENTRY.                                       *
**********************************************************************
         SPACE 2
FREELOCK MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         LR    R9,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END SAVE AREA USING      Y02072
         BALR  R10,R0                   ESTABLISH SUBROUTINE    YM01347
         USING *,R10                    ADDRESSABILITY          YM01347
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11  CHANGE TO KEY ZERO    Y02072
         SPACE 2
**********************************************************************
*        RELEASE THE LOCAL LOCK.  WAS OBTAINED AT GLCL1.             *
**********************************************************************
         SPACE 2
FLCL1    SETLOCK  RELEASE,TYPE=LOCAL,   RELEASE THE LOCAL        Y02072*
               RELATED=(IOB,IGG019IZ(GLCL1))  LOCK               Y02072
         USING IGGSAVE,R9               SAVEAREA ADDRESSABILITY  Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         BR    R11                      RETURN                   Y02072
         DROP  R9,R10                   BASE, SAVE AREA USINGS  YM01347
         EJECT
**********************************************************************
*        SUBROUTINE TO FREE IOB.  ROUTINE USES BRANCH ENTRY TO   Y02072
*        FREEMAIN.  INPUT - REG 0 LOADED WITH SUBPOOL SIZE       Y02072
*        AND REG 1 LOADED WITH ADDRESS OF CORE TO BE FREED.      Y02072
**********************************************************************
         SPACE 2
FREEIOB  MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         BALR  R10,R0                   ESTABLISH SUBROUTINE    YM01347
         USING *,R10                    ADDRESSABILITY          YM01347
*
         L     R4,IGGPDEB               VALIDATED DEB ADDR       Y02072
         USING IHADEB,R4                DEB ADDRESSABILITY       Y02072
         L     R4,DEBTCBAD              TCB ADDRESS              Y02072
         USING PSA,R0                   LOW CORE ADDRESSABILITY  Y02072
         L     R7,PSAAOLD               ASCB ADDRESS             Y02072
         LR    R9,R14                   SAVE SAVE AREA ADDR      Y02072
         IC    R2,IGGUKEY               USER PROTECT KEY         Y02072
         DROP  R14                      END SAVE AREA USING      Y02072
*
         MODESET KEYADDR=KEY0,WORKREG=11 SET TO KEY ZERO         Y02072
         SPACE 2
         FREEMAIN  RU,LV=(0),A=(1),SP=SP250,KEY=(R2),BRANCH=YES  Y02072
         SPACE 2
         USING IGGSAVE,R9               SAVEAREA ADDRESSABILITY  Y02072
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         BR    R11                      RETURN                   Y02072
         DROP  R4,R9,R10                END USINGS              YM01347
         USING IGGSAVE,R14              SAVEAREA ADDRESSABILITY  Y02072
         USING IHADCB,R4                DCB ADDRESSABILITY       Y02072
         SPACE 5                                                 M6187
*                                                                A53214
*********   CONSTANTS SHARED BY PART 1 AND PART 2            **********
*                                                                A53214
HALF1    DC    H'01'                    HALF WORD 1              A53214
HALF0    DC    H'00'                    HALF WORD 0              A53214
TRKEND   DC    H'0'                                              A53214
CONF8    DC    X'F8F8'                                           A53214
KEY0     EQU   HALF0                    PROTECT KEY ZERO         Y02072
         DS    0F                                                A53214
SP250IOB EQU   56                       56 BYTES IN SP250        Y02072
SP250    EQU   250                      SUBPOOL ID FOR IOB       Y02072
SP230    DC    AL1(230),AL3(IGGSIZE)    SAVEAREA SUBPOOL 230     Y02072
SPIOBECB EQU   112                      CORE FOR IOB AND ECB     Y02072
         EJECT                                                   A53214
*                                                                A53214
*                                                                A53214
PARTTWO  EQU   *                        ADDRESSIBILITY ESTAB-    A53214
*                                       LISHED AT ASYPART2       A53214
*                                                                A53214
***********************************************************************
*********   READ AND UPDATE                                  **********
***********************************************************************
*        CHART AS   ASYNCHRONOUS ROUTINES, CODES 0, 2, 4, AND 6
*              CODE 2
ASYASB1  EQU   *                                                 A53214
         TM    DECBTYP1,X'01'           TEST DYNAMIC BUFFERING   A53214
         BZ    ASYASE5                  BRANCH IF NO
         L     R15,IGGPDEB              DEB ADDRESSABILITY       Y02072
         USING IHADEB,R15                                        S21045
         L     R15,DEBEXPTR              GET ADDR OF DEB         S21045
*                                       EXTENSION PTR            S21045
         USING DEBEXT,R15                                        S21045
         L     R15,DEBFREED              LOAD ADDR DYN BUF       S21045
*                                       MODULE                   S21045
         DROP  R15                                               S21045
         USING IHABUF,R15
         BAL   R12,BUFASYN              BRANCH TO FREE BUFFER
         B     ASYASF5            BRANCH ON RETURN             
*              CODE 0
ASYASB2  EQU  *                                                  A53214
         TM    DECBTYP2,X'E0'           TEST READ                A53214
         BZ    ASYASB1                  BRANCH IF NO
         L     R10,DECBAREA             R10 DEVELOP ADDRESS OF LOG REC
         LA    R10,12(R10)             R10=START OF BLOCK           
         LR    R7,R10                                               
         MVC   DCBRELSE(2),0(R10)                                A41652
         AH    R7,DCBRELSE              R7 = END OF BLOCK        A41652
         LA    R10,4(R10)              R10=1ST LOGICAL RECORD       
         LR     R6,R10                 R6= 1ST LOGICAL RECORD       
         TM    DECBEXC1,X'02'           OVERFLOW OR UNBLOCKED{
         BO    ASYASC4                  BRANCH IF YES
         TM    DCBRECFM,X'10'
         BZ    ASYASC4
         AH    R6,DCBRKP               R6=A(1ST LOGICAL REC KEY)    
         IC    R11,DCBKEYLE             R11 KEY LENGTH FOR EXECUTE
         BCTR  R11,0
         L     R8,DECBKEY               R8  ADDRESS OF KEY SOUGHT
ASYASE3  EX    R11,ASYASE2
         BE    ASYASC4                 RECORD FOUND                 
         BH    ASYASE1
         MVC   DCBRELSE,0(R10)          DCBRELSE=RECORD LENGTH   A41652
         AH    R6,DCBRELSE              R6=A(NEXT KEY)           A41652
         AH    R10,DCBRELSE             R10=A(NEXT RECORD)       A41652
         CLR   R10,R7                  TEST IF EOB                  
         BL    ASYASE3                 B=NOT EOB                    
ASYASE1  OI    DECBEXC1,X'80'           NO FIND
         B     ASYASE5
ASYASE2  CLC   0(0,R6),0(R8)                                        
ASYASC4  ST    R10,DECBLOGR             STORE ADDR LOG REC IN DECB
         CLC   0(2,R10),DCBLRECL        RDW LARGER THAN LRECL?  OZ05945
         BNH   ASYASC4A                 NO-BR                   OZ05945
         OI    DECBEXC1,X'40'           SET 'RECORD LENGTH CHK' OZ05945
         B     ASYASE5                  GOTO FINISH REQUEST     OZ05945
ASYASC4A EQU   *
         L     R8,DCBWKPT2
         USING IHADCW,R8
         TM    DECBTYP2,X'20'           TEST FOR READ KU         A26738
         BZ    ASYASC5                  IF NOT, SEE IF DYN BUFF  A26738
         LA    R13,DCWFUPDI             IF SO, PLACE IOB ON UPDATE Q
         BAL   R15,ASYONQ
         XC    IOBCCWAD(4),IOBCCWAD     CLEAR DYN BUFF PTR
         TM    DECBTYP1,X'01'           IS THERE DYN BUFF
         BZ    ASYASF5                  NO POST AS USUAL
         MVC   IOBCCWAD(4),DECBAREA     YES, SAVE PTR
         B     ASYASF5                   AND BRANCH TO POST COMPLETION
ASYASC5  TM    DECBTYP1,X'01'           DYNAMIC BUFFER           A26738
         BZ    ASYASE50                 NO, REDUCE NACT AND POST A26738
         SR    R7,R7                    ZERO INDEX REG           A26738
         B     ASYASE59                 KEEP IOB ON ERROR QUEUE  A26738
ASYAPC   LA    R7,4
         B     ASYASE55                                          A53214
*                 CODE 4, CODE 6
ASYASE5  EQU   *                                                 A26738
ASYASE5A SR    R7,R7                    ZERO INDEX REG           A26738
ASYASE55 EQU   *                        TEST FOR ERRORS          S20201
         L     R8,DCBWKPT2              PICK UP WA POINTER        P4700
         TM    DECBEXC1,X'FD'           ANY ERRORS                P4700
         L     R15,BASESAV              SET PART 1 BASE          A53214
         BZ    ASYASE6(R7)              NO FREE IOB               P4700
         OI    IOBUNSQR,X'04'           MARK IOB IN ERROR        A26738
ASYASE59 LA    R13,DCWFIOBE             PUT IOB ON ERROR QUEUE   A26738
         IC    R0,DCWFIOBE              GET NO OF SLOTS LEFT     A26738
         BAL   R15,ASYONQ                                        A26738
         XC    IOBCCWAD(4),IOBCCWAD     CLEAR DYN BUFF PTR
         TM    DECBTYP1,X'01'           IS THERE DYN BUFF
         BZ    ASYASE5C                 NO, BRANCH               A26738
         MVC   IOBCCWAD(4),DECBAREA     YES, SAVE PTR
ASYASE5C BCTR  R0,0                     INDICATE ONE LESS SLOT   A26738
         STC   R0,DCWFIOBE                                       A26738
         CLI   DCWFIOBE,X'FF'                                    A26738
         L     R15,BASESAV              SET PART 1 BASE          A53214
         BNE   ASYASE7(R7)              BR IF AMT NOT MINUS      A26738
*                                       TO RETAIN ALL IOBS
         MVI   DCWFIOBE,X'00'           STILL NO SPACE IN QUEUE  A26738
         L     R1,DCWFIOBE              ELSE, REMOVE FIRST IOB   A26738
         LR    R0,R2                    SAVE CURRENT DECB        A26738
         LA    R2,DCWFIOBE              POINT TO ERROR QUEUE     A26738
         LA    R13,4                    SEARCH FOR AN ERROR IOB  A26738
         BAL   R15,ASYOFFQA             REMOVE IOB               A26738
         LR    R2,R0                    RESTORE DECB REGISTER    A26738
         L     R13,IOBCCWAD             DOES THIS DEQUEUED IOB   A26738
         LTR   R13,R13                  HAVE A DYNAMIC BUFFER    A26738
         L     R15,BASESAV              SET PART 1 BASE          A53214
         BZ    ASYASE6(R7)              NO, BR TO FREE OLD IOB   A26738
         L     R15,DCBBUFCB             OTHERWISE, FREE OLD BUFF A26738
         MVC   0(4,R13),AVBOFF(R15)                              A26738
         ST    R13,AVBOFF(R15)                                   A26738
         L     R15,BASESAV              SET PART 1 BASE          A53214
         B     ASYASE6(R7)              NOW FREE OLD IOB         A26738
ASYASE7  B     ASYASF51                 OMIT FREEMAIN            A26738
         USING ASYNCH,15                                         A53214
         B     ASYASE61                                           P4700
         DROP  R15                                               A53214
         B     ASYASE71                                           P4700
ASYASE6  B     ASYASE50                 FREE MAIN                 P4700
         USING ASYNCH,15                                         A53214
         B     ASYASE60                                           P4700
         DROP  R15                                               A53214
         B     ASYASE70                                           P4700
ASYASE50 EQU   *                        FREEIOB
         L     R8,IGGPDEB               PROTECTED DEB ADDR       Y02072
         USING IHADEB,R8                DEB ADDRESSABILITY       Y02072
         LA    R0,SP250IOB              IOB LENGTH AND SUBPOOL
         TM    DEBRPSID,RPSFLAGS        IS RPS PRESENT           S20201
         USING IHADCW,R8                BISAM WA ADDR            Y02072
         BZ    NORPS2                   NO, BRANCH               S20201
         AH    R0,RPSCCW                YES, ALLOW FOR RPS CCWS  S20201
NORPS2   BAL   R11,FREEIOB              FREE IOB CORE            Y02072
ASYASF51 EQU   *                                                  P4700
         L     R8,DCBWKPT2              SUBTRACT 1 FROM NUMBER OF
         IC    R12,DCWNACT               MACRO EVENTS TO BE COMPLETED
         BCTR  R12,0                     BEFORE NEXT WRITE KN CAN BE
         STC   R12,DCWNACT               EXECUTED
ASYASF5  EQU   *                                                 A41652
         ST    R2,DCBPUTX               DECB TO BE POSTED        A41652
         L     R8,DCBWKPT2
         L     R12,IGGPDEB              PROTECTED DEB ADDR       Y02072
         USING IHADEB,R12               DEB ADDRESSABILITY       Y02072
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12
         B     ASYTAB2(R9)               TO RTN TO FREE CP4-5-6 OR CP7
ASYTAB2  B     ASYASH5                  CODE 0 OR 4, TO ASYASH5
         B     ASYASG2                  CODE 2 OR 6, TO ASYASG2
         B     ASYASH5
ASYASG2  CLI   DCWNUCP7,X'00'           FREE CP7. ANY IOB AWAITING ONE{
         BE    ASYASG3                  BRANCH IF NO
         LA    R13,32                   FIND IOB AWAITING CP7 AND
         BAL   R15,ASYOFFQ               REMOVE IT FROM UNSCHED QUEUE
ASYASJ2  IC    R6,DCWNUCP7              SUBTRACT ONE FROM NO. IOBS
         BCTR  R6,0                      AWAITING CP7
         STC   R6,DCWNUCP7
         NI    IOBINDCT,X'7F'           CP7 ALREADY OUT OF Q
         BAL   R11,DISCP7               GO TO ROUTINE TO SET UP CP7
         B     ASYAVB2                  BRANCH TO EXCP
ASYASG3  MVC   12(4,R5),DCWFCP7         NO IOB AWAITING CP7. ADD IT TO
         ST    R5,DCWFCP7                CP7 QUEUE
         B     ASYAWB2                  BRANCH TO START PENDING WKN
ASYASH4  EQU   *                        *                       SA61539
         IC    R6,DCWNACT               DECREASE NUMBER OF      SA61539
         BCTR  R6,0                     NON-WRITE KEY NEW       SA61539
         STC   R6,DCWNACT               MACRO EVENTS            SA61539
ASYASH5  CLI   DCWNUCP4,X'00'           FREE CP4-5-6
         BE    ASYASJ5                  IF NO IOB AWAITING IT, BRANCH
         LA    R13,64                   FIND IOB ASAITING CP4-5-6 AND
         BAL   R15,ASYOFFQ              REMOVE IT FROM UNSCHEDULED Q
ASYASJ4  IC    R6,DCWNUCP4              SUBT 1 FROM NO. OF IOBS
         BCTR  R6,0                      AWAITING CP4-5-6
         STC   R6,DCWNUCP4
         NI    IOBINDCT,X'7F'           INDICATE CP4-5-6 NOT ON Q
         BAL   R11,DISCP45              GO TO SET UP CP4-5-6
         B     ASYASH4                  ERROR RETURN            SA61539
ASYAVB2  BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
ASYASJ5  MVC   12(4,R5),DCWFCP4         NO IOB AWAITING CP4-5-6, ADD IT
         ST    R5,DCWFCP4                TO AVAILABLE QUEUE
         B     ASYAWB2                  BRANCH TO START PENDING WKN
ASYAUB20 EQU   *                        *                       ZA00956
         IC    R6,DCWNACT               DECREASE NUMBER OF      ZA00956
         BCTR  R6,0                     NON-WRITE KEY NEW       ZA00956
         STC   R6,DCWNACT               MACRO EVENTS            ZA00956
         B     ASYAUB21                 *                       ZA00956
*        CHART AU   ASYNCHRONOUS ROUTINES, CODES 3 AND 7
ASYAUB2  EQU   *                                                 A53214
         L     R8,DCBWKPT2              R8  ADDRESS OF WORK AREA
         LR    R9,R1                    SAVE ADDRESS OF IOB
ASYAUB21 CLI   DCWNUCPS,X'00'           TEST CP1/2 QUEUE EMPTY
         BNE   ASYAUB3
         OI    DCWHIAV,X'80'            YES - SET INDICATOR TO AVAILABL
         B     ASYAUF3                   AND BRANCH TO CONTINUE IOB
ASYAUB3  EQU   *
         LA    R13,128                  FIND IOB AWAITING CP1 OR CP2 +
         BAL   R15,ASYOFFQ               REMOVE IT FROM UNSCHED QUEUE
         IC    R6,DCWNUCPS              DECREASE NO. OF IOBS AWAITING
         BCTR  R6,0                      CP1/2
         STC   R6,DCWNUCPS
         L     R12,IGGPDEB              PROTECTED DEB ADDR       Y02072
         USING IHADEB,R12               DEB ADDRESSABILITY       Y02072
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12
         BAL   R11,DISCPS               BRANCH TO SET UP CP1/2
         B     ASYAUB20                 ERROR RETURN            ZA00956
         BAL   R13,SUBROUT1
ASYAUF3  LR    R1,R9                    RESTORE IOB ADDRESS
         L     R2,IOBECBAD              RESTORE DECB ADDRESS
         CLI   IOBASYN,X'03'            TEST ASYNCH CODE INDICATE ERROR
         BE    ASYAUD2                  BRANCH IF NO
         LA    R7,8                                               P4700
         B     ASYASE55                 GO TEST FOR ERRORS       S20201
ASYASE70 EQU   *                        *
         LA    R0,SP250IOB              LENGTH AND SUBPOOL IOB
         L     R9,IGGPDEB               DEB ADDRESS              Y02072
         USING IHADEB,R9                DEB ADDRESSABILITY       Y02072
         TM    DEBRPSID,RPSFLAGS        IS RPS PRESENT           S20201
         DROP  R9                       END USING ON DEB         Y02072
         BZ    NORPS1                   NO, BRANCH               S20201
         AH    R0,RPSCCW                YES, ALLOW FOR RPS CCWS  S20201
NORPS1   BAL   R11,FREEIOB              FREE IOB CORE            Y02072
ASYASE71 EQU   *                                                 A41652
         ST    R2,DCBPUTX               DECB TO BE POSTED        A41652
         IC    R9,DCWNACT               DECREASE NO. OF NON-WRITE KN
         BCTR  R9,0                      MACRO EVENTS
         STC   R9,DCWNACT
*
         B     ASYAWB2                  BRANCH
ASYAUD2  L     R5,DCWFCP4               NO - CONTINUE
         LTR   R5,R5
         BZ    ASYAUD1                  CP4-5-6 AVAILABLE {
         OI    IOBINDCT,X'80'           YES - SET UP CP4-CP5
         L     R9,IGGPDEB               PROTECTED DEB ADDR       Y02072
         USING IHADEB,R9                DEB ADDRESSABILITY       Y02072
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12
         DROP  R9                       END USING ON DEB         Y02072
         BAL   R11,DISCP45
         BAL   R6,ASYERROR              BISAM ERROR ROUTINE     SA63253
         BAL   R13,SUBROUT1
         B     ASYFINIS                 RETURN VIA EXIT          A41652
RPSCCW   DC    H'16'                    LENGTH OF RPS CCWS       S20201
ONE      DC    H'1'                                              S20201
ASYAUD1  MVI   IOBUNSQR,X'40'           NO - CP4-5-6 NOT AVAILABLE
         IC    R6,DCWNUCP4              ADD IOB TO UNSCHED Q
         LA    R6,1(R6)
         STC   R6,DCWNUCP4
         LA    R13,DCWFIOBU
         BAL   R15,ASYONQ
         B     ASYFINIS                 RETURN VIA EXIT          A41652
*
ASYONQ   LA    R1,0(R1)                 ADD THE IOB WHICH IS
         L     R6,4(R13)                 POINTED TO BY R1
         ST    R6,IOBBCHAD               TO THE QUEUE WHOSE FIRST IOB
         LTR   R6,R6                     POINTER IS IN 0(R13) AND
         BZ    ASYONQA                   WHOSE LAST IOB POINTER IS IN
         ST    R1,IOBFCHAD-IHAIOB(R6)    4(R13)
         B     ASYONQB
ASYONQA  ST    R1,0(R13)
ASYONQB  XC    IOBFCHAD,IOBFCHAD
         ST    R1,4(R13)
         BR    R15                      RETURN VIA R15.
ASYOFFQ  LA    R2,DCWFIOBU              POINT TO UNSCHED QUEUE   A26738
         L     R1,DCWFIOBU              FIND THE 1ST IOB ON THE  A26738
ASYOFFQA EX    R13,ASYOFFQF              UNSCHEDULED QUEUE FOR REASON
         BO    ASYOFFQB                  IN R13, PUT ITS ADDRESS IN R1,
         L     R1,IOBFCHAD               REMOVE IT FROM THE UNSCHEDULED
         B     ASYOFFQA                  QUEUE.
ASYOFFQB L     R6,IOBBCHAD
         LTR   R6,R6
         BZ    ASYOFFQC
         MVC   IOBFCHAD-IHAIOB(4,R6),IOBFCHAD
         B     ASYOFFQD
ASYOFFQC MVC   1(3,R2),IOBFCHAD+1       UPDATE PTR TO 1ST IOB    A26738
ASYOFFQD L     R6,IOBFCHAD
         LTR   R6,R6
         BZ    ASYOFFQE
         MVC   IOBBCHAD-IHAIOB(4,R6),IOBBCHAD
         B     ASYOFFQG
ASYOFFQE MVC   5(3,R2),IOBBCHAD+1       UPDATE PTR TO LAST IOB   A26738
ASYOFFQG L     R2,IOBECBAD              SET ITS DECB POINTER IN R2
         BR    R15                      RETURN VIA R15
ASYOFFQF TM    IOBUNSQR,X'00'
         EJECT                                                   A53214
***********************************************************************
*********   BEGIN A WRITE KN MACRO AFTER COMPLETION OF              ***
*********     ALL READ AND UPDATE MACROS OR AFTER ANOTHER WRITE KN  ***
***********************************************************************
*        BASE REGISTER IS STILL R3
*              CHART AW   CODES 0, 2, 4 AND 6 CONTINUED
ASYAWB2  CLI   DCWNACT,X'00'            IF ANOTHER CP IN PROCESS
         BNE   ASYFINIS                 RETURN VIA EXIT          A41652
         L     R1,DCWFIOBU               OR IF NO MORE IOBS ON Q
         LTR   R1,R1
         BNE   ASYAWD2
         B     ASYFINIS                 RETURN VIA EXIT          A41652
ASYAWD2  CLI   DCWNUWKN,X'00'           ERROR IN BISAM IF NUWKN ZERO
         LA    R6,ASYAWD2               POINT OF ERROR          SA63253
         BE    ASYERROR                 BISAM ERROR ROUTINE     SA63253
         OI    DCWWKNI,X'80'            SET WKN INDICATOR TO IN PROCESS
ASYAWE2  TM    IOBUNSQR,X'10'           FIND FIRST IOB WITH AWAITING
         BO    ASYAWE21                  WRITE KN UNSCHEDULED REASON
         L     R1,IOBFCHAD
         B     ASYAWE2
ASYAWE21 L     R6,IOBFCHAD               AND REMOVE IT FROM THE UNSCHED
         LTR   R6,R6                     QUEUE
         BZ    ASYAWE22
         MVC   IOBBCHAD-IHAIOB(4,R6),IOBBCHAD
         B     ASYAWE23
ASYAWE22 MVC   DCWLIOBU,IOBBCHAD
ASYAWE23 L     R6,IOBBCHAD
         LTR   R6,R6
         BZ    ASYAWE24
         MVC   IOBFCHAD-IHAIOB(4,R6),IOBFCHAD
         B     ASYAWG2
ASYAWE24 MVC   DCWFIOBU,IOBFCHAD
ASYAWG2  IC    R6,DCWNUWKN              DECREASE THE NUMBER OF IOBS
         BCTR  R6,0                      AWAITING W KN  CP
         STC   R6,DCWNUWKN
         L     R2,IOBECBAD              R2   ADDR OF DECB FOR NEW IOB
         L     R9,IGGPDEB               PROTECTED DEB ADDR       Y02072
         USING IHADEB,R9                DEB ADDRESSABILITY       Y02072
         L     R12,DEBEXPTR              GET ADDR OF DEB EXT PTR S21045
         USING DEBEXT,R12                                        S21045
         L     R12,DEBDISAD              GET ADDR OF RTN TO SET  S21045
         DROP  R12                                               S21045
         USING IHADIS,R12                 UP FIRST WKN CHANNEL PROGRAM
         DROP  R9                       END USING ON DEB         Y02072
         BAL   R11,DISCPWKN              BRANCH TO THE ROUTINE
         BAL   R13,SUBROUT1
         LA    R6,ASYFINIS              RETURN FROM MERGE        A53751
         B     ASYLAE4                                           S21045
         USING IHADCW,R8                                         S21045
ASYAWF2  L     R1,DCWFIOBU              ENTRY FROM CHART LA
         B     ASYAWE2
RPSFLAGS EQU   X'E0'                    RPS FLAGS-0=P,1=I,2=O    S20201
ASYLAE4  EQU   *                        *                        S20201
         L     R15,BASESAV              RESTORE BASE             A53751
         L     R8,IGGPDEB               PROTECTED DEB ADDR       Y02072
         USING IHADEB,R8                DEB ADDRESSABILITY       Y02072
         L     R8,DEBEXPTR              ADDR OF DEB EXTENSION    Y02072
         USING DEBEXT,R8                DEB EXTENSION ADDR       Y02072
         TM    DEBDCBFA,SHR             DISP EQ SHR              Y02072
         BZ    0(R6)                    BR IF NOT SHR            Y02072
         L     R8,DEBDCBFA              DCBFA ADDRESS            Y02072
         USING DCBFA,R8                                          S20201
         SPACE 2
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         STM   R0,R15,IGGREGS           SAVE REGISTERS           Y02072
         LR    R5,R14                   SAVE SAVE AREA ADDR      Y02072
         DROP  R14                      END SAVE AREA USING      Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11 CHANGE TO KEY ZERO     Y02072
         SPACE 2
**********************************************************************
*        OBTAIN CMS LOCK.  FREED AT FCMS1.                           *
**********************************************************************
         SPACE 2
GCMS1    SETLOCK  OBTAIN,TYPE=CMS,MODE=UNCOND, GET CROSS MEMORY  Y02072*
               RELATED=(DCBFA,IGG019IZ(FCMS1))  SERVICES LOCK    Y02072
         SPACE 1
         USING IGGSAVE,R5               SAVEAREA ADDRESSABILITY  Y02072
         MODESET  KEYADDR=IGGUKEY,WORKREG=13 SET USER'S KEY      Y02072
         SPACE 1
         L     R2,DCBRORG3              RORG3 TO DCB FIELD AREA  Y02072
         SPACE 1
         MODESET  EXTKEY=DATAMGT        DATA MGT KEY             Y02072
         SPACE 1
         ST    R2,DFARORG3              DCBRORG3 TO FIELD AREA   Y02072
         SPACE 1
         MODESET  KEYADDR=IGGUKEY,WORKREG=2   CHG TO USER KEY    Y02072
         SPACE 2
         L     R2,DCBPUTX               DECB ADDRESSABILITY
         USING IHADECB,R2               ADDRESSABILITY
         TM    DECBTYP2,DECBWKN         IS IT A WRITE KN         A53751
         BZ    ENDMERGE                 NO-MERGE DONE READS      A53751
         SPACE 2
         L     R1,DCBNREC               DCBNREC                  Y02072
         IC    R2,DCBST                 DCB STATUS IND.          Y02072
         LH    R13,DCBNBOV              VLR UNUSED BYTES ON TRK  Y02072
         LH    R9,DCBNOREC              NO. OVRFLOW RCDS         Y02072
         LM    R6,R7,DCBLIOV            LAST IND OVRFLOW ADDR    Y02072
         LH    R10,DCBRORG1             NO. FULL CYL OVRFLOW     Y02072
         SLL   R10,16                   SHIFT TO HIGH ORDER POS  Y02072
         LH    R11,DCBRORG2             TRKS LEFT IND. OVRFLOW   Y02072
         OR    R10,R11                  RORG1 AND RORG2 TO R10   Y02072
         LM    R11,R12,DCBLPDA          LAST PRIME DATA ADDR     Y02072
         SPACE 2
*
*        STORE DCB FIELDS IN FIELD AREA                          Y02072
*
         MODESET  EXTKEY=DATAMGT        CHANGE TO DATA MGT KEY   Y02072
         SPACE 2
         ST    R1,DFANREC               DCBNREC                  Y02072
         STC   R2,DFAST                 DCB STATUS IND           Y02072
         STH   R13,DFANBOV              DCBNBOV                  Y02072
         STH   R9,DFANOREC              DCBNOREC                 Y02072
         STM   R6,R7,DFALIOV            DCBLIOV                  Y02072
         ST    R10,DFARORG1             DCBRORG1 AND DCBRORG2    Y02072
         STM   R11,R12,DFALPDA          DCBLPDA                  Y02072
ENDMERGE EQU   *                        MERGE COMPLETE           Y02072
         SPACE 2
         MODESET  KEYADDR=KEY0,WORKREG=11  CHANGE TO KEY ZERO    Y02072
         SPACE 2
**********************************************************************
*        RELEASE CMS LOCK.  WAS OBTAINED AT GCMS1.                   *
**********************************************************************
         SPACE 2
FCMS1    SETLOCK  RELEASE,TYPE=CMS,     RELEASE CMS LOCK         Y02072*
               RELATED=(DCBFA,IGG019IZ(GCMS1))                   Y02072
         SPACE 2
         MODESET  KEYADDR=IGGUKEY,WORKREG=11 CHANGE TO USER KEY  Y02072
         SPACE 2
         LM    R0,R15,IGGREGS           RESTORE REGISTERS        Y02072
         L     R15,BASESAV              RESTORE BASE             A53751
         BR    R6                       BR TO EXIT               A53751
         EJECT                                                   A53214
SHR      EQU   X'80'                    TEST FOR SHR             S20201
AVBOFF   EQU   8                        NEXT AVAIL DYN BUFF PTR  A26738
EQONE    EQU   1                        MISC OFFSET              S20201
TWO      EQU   2                        MISC OFFSET              S20201
THREE    EQU   3                        MISC OFFSET              S20201
FOUR     EQU   4                        MISC OFFSET              S20201
SIX      EQU   6                        MISC OFFSET              S20201
SEVEN    EQU   7                        MISC OFFSET              S20201
HW       EQU   3                        HALFWORD MASK
BASESAV  DC    A(ASYNCH)                ADCON FOR BASE            
*
MODID    DC    C'IGG019IZ'              MODULE NAME            @ZA26522
DATE     DC    CL8'&SYSDATE'            FIX DATE               @ZA26522
FIX      DC    C' OZ26522'              LATEST FIX             @ZA26522
PATCH    DC    XL((*-IGG019IZ)/20)'00'  ZEROED PATCH AREA        Y02072
*
IHABUF   DSECT                DYNAMIC BUFFERING VECTOR TABLE
BUFFREED DS    A                       FREEDBUF ENTRANCE
BUFSIO   DS    A                       APPENDAGE ENTRANCE
         DS    A
BUFASYN  DS    A                       ASYNCHRONOUS ENTRANCE
IHADIS   DSECT                DISABLED MODULE VECTOR TABLE
DISQHN   DS    A                       Q-HANDLER
DISCP45  DS    A                       SET UP CP4 + CP5
DISCP7   DS    A                       SET UP CP7
DISCPS   DS    A                       SET UP CP1 OR CP2
DISCPWKN DS    A                        SET UP WRITE KN CP'S
DISPRIV  DS    A                        SCHEDULE READ AND UPDATE REQ
         SPACE 1
IHABCB   DSECT
BCBFIOB  DS    A
BCBLIOB  DS    A
BCBNAVB  DS    A
BCBSIZE  DS    A
*                 WRITE KN CHANNEL PROGRAM REFERENCES(WRITE CHECK)
IHAWKNCP IGGWKNCP  OPTCD=VW                                      S20201
CP12A    DS    0D                                                S20201
         IGGCP12A  OPTCD=V                                       S20201
DEVPTR   EQU   CH8F+FOUR                PTR TO PRIME DEV ENTRY   S20201
       EJECT
*              DATA EVENT CONTROL BLOCK
IHADECB  DSECT
         DS    0F
DECBECB  DS    CL4                      EVENT CONTROL BLOCK (ECB)
DECBTYP1 DS    BL1                      TYPE B6 - 1 IF LENGTH IS S
*                                            B7 - 1 IF AREA IS S
DECBTYP2 DS    BL1                           B0 - 1 IF READ K
*                                            B1 - 1 IF READ KX
*                                            B2 - 1 IF READ KU
*                                            B4 - 1 IF WRITE K
DECBWKN  EQU   X'04'                         B5 - 1 IF WRITE KN
DECBLGTH DS    CL2                      LENGTH OF BLOCK
DECBDCBA DS    A                        POINTER TO DCB
DECBAREA DS    A                        ADDRESS OF AREA
DECBLOGR DS    A                        POINTER TO LOGICAL RECORD
DECBKEY  DS    A                        POINTER TO KEY
DECBEXC1 DS    BL1                      EXCPTN CD B0-RECORD NOT FOUND
*                                                 B1-RECORD LGTH CHK
*                                                 B2-NO SPACE
*                                                 B3-INVALID REQUEST
*                                                 B4-UNCORRECTABLE IO
*                                                 B5-UNREACHABLE BLOCK
*                                                 B6-OVERFLOW RECORD
*                                                 B7-DUPLICATE
DECBEXC2 DS    BL1                                B7-READ KU
         SPACE 2
IGGSAVE  IGGBISAV
         EJECT
         DCBD  DSORG=(IS)
         EJECT
DCBFA    IGGDCBFA
         EJECT
IHAIOB   IGGIOBD
         ORG   IOBCCW2+8                ORG TO END OF BISAM IOB  S20201
EOFSV1   DS    A                        EOF IOB EXTENSION DECB   S20201
EOFSV2   DS    A
EOFDECB  DS    CL32                     EOF DECB                 S20201
EOFEND   EQU   *                        END OF GETMAINED AREA    S20201
         EJECT
IHADCW   IGGBISAM OPTCD=V               DCB WORK AREA            S20201
         EJECT
IHADEB   IGGDEBD
         EJECT
CVTDEF   DSECT
         CVT
         SPACE 5
         IECDRQE                                                 Y02072
         EJECT
         IHAPSA                                                  Y02072
         END
