 TITLE 'IGG01912 - SAM PAPER TAPE/UPDATE'
*
*
IGG01912 CSECT                                                     UT18
*MODULE NAME - IGG01912                                          Y02072
*
*DESCRIPTIVE NAME - LOAD ACCESS METHOD ROUTINES                  Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS2 RELEASE 2 DELETIONS                               Y02072
*000080,000550,010800,057500,057700,057900-057940,081400,082000, Y02072
*089860-090000,090800,091240,091280,091320,091360,091400-091600, Y02072
*091756-091762,101000,120210-120558,123400,053570-053599,        Y02072
*60160,110800-111000,116600,117000-118400,119200                 Y02072
*                                                                YM1141
*                                                                YM1140
*                                                                YM4640
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*00009341020,9342020                                           @ZA05572
*          RELEASE 20 DELETIONS
*0930080800,081800                                               A34004
*0930129000,150800,151400                                        S20201
*          RELEASE 21 DELETIONS
*0090055600,068200-068400,111200,129000-151800,152400-152600     S21042
*
*STATUS CHANGE LEVEL 007
*
*FUNCTION/OPERATION: THIS ROUTINE WILL LOAD MODULES NECESSARY FOR
*      PROCESSING PAPER TAPE INPUT OR UPDATE AFTER DETERMINING
*      WHAT THEY ARE.  IT WILL PLACE THE ADDRESS OF THE LOADED
*      MODULES IN THE APPROPRIATE DCB FIELDS, AND THE ID'S IN THE DEB
*      IT WILL BRING IN THE APPROPRIATE ERROR ROUTINES.
*      IT WILL BRING IN ANY SIO APPENDAGES REQUIRED TO PERFORM SPECIFIC
*      FUNCTIONS.
*      THIS MODULE WAS SPLIT IN RELEASE 18 TO INCLUDE USER         UT18
*      TOTALING SUPPORT.  THE SECOND HALF OF THIS MODULE IS NOW    UT18
*      IGG01918.                                                   UT18
*
*ENTRY POINTS  ENTERED FROM IGG0191G OR IGG0191P BY USE OF THE XCTL
*      MACRO
*
*INPUT: SEE DESCRIPTION OF REGISTERS, DCB(USERS)
*
*OUTPUT: DCB(USERS),IOB(USERS).
*
*EXTERNAL ROUTINES: NONE.
*
*EXITS-NORMAL   XCTL TO IGG01918.                                  UT18
*
*EXITS-ERROR: NONE.
*
*TABLES/WORKAREAS - WHERE TO GO TABLE (WTG)
*
*      BYTE 0-7    NAME
*      BYTE 8-10   RELATIVE DISK ADDRESS (TTR) OF FIRST RECORD
*      BYTE 11     CONCATENATION NUMBER
*      BYTE 12     ZERO
*      BYTE 13     ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                       ALIAS INDICATOR 1 BIT
*                       NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16  TTR OF FIRST TEXT RECORD
*      BYTE 17     ZERO
*      BYTE 18-19  TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20     TRANSLATION TABLE
*      BYTE 21     ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23  ATTRIBUTES
*      BYTE 24-26  TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28  LENGTH OF FIRST TEXT RECORD
*      BYTE 29     LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31  PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-36 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 37-39 WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 40-   TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR N TH DCB   (5 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (3 BYTES)
*                   IDTTR OF LAST ROUTINE LOAD       (5 BYTES)
*                   NOT USED                         (3 BYTES)
***********************************************************************
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY    Y02072
*
*NOTES  THIS ROUTINE HAS A LIST OF ALL BSAM, QSAM MODULES SUPPORTED
*      FOR PAPER TAPE AND UPDATE.
*
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RE       EQU   0         WORK REG5
RWK1     EQU   RE        WORK REGISTER                           Y02072
RF       EQU   1         WORK REG6
R1       EQU   RF        PARM REG                                YM1140
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RTIOT    EQU   9         USED HERE AS WRK REG AND  COMM VECTOR ADDR.
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RDEB     EQU   11        DEB ADDRESS
RB       EQU   12        WORK REG1  **
RC       EQU   13        WORK REG2  **
RWK2     EQU   RC                       WORK REGISTER            Y02072
RD       EQU   14        WORK REG3  **
RJ       EQU   15        WORK REG4
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
***********************************************************************
*
* MASK'S TO TEST PARAMETER LIST WITH
*
*********************************************************************
INP      EQU   X'0F'
OUTP       EQU   X'0F'
UPDATE     EQU   X'04'
INOUT      EQU   X'03'
OUTIN      EQU   X'07'
RDBACK     EQU   X'01'
INPRDBK  EQU   X'0E'               MASK TO CK INPUT AND RDBACK     UT18
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
ONE        EQU   X'01'
FRTYATE    EQU   48
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
BIN      EQU   36
BEXT     EQU   38
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'
*
*
STOWB      EQU   X'80'
WRTCK      EQU   X'80'
OVRFLO     EQU   X'20'
PCI        EQU   X'20'
MINKEY     EQU   X'01'
CONCAT     EQU   X'FF'
UPDATEB  EQU   X'80'
OVFLBIT  EQU   X'20'
UTFMASK  EQU   X'02'                    MASK FOR TOTALING FACILITY UT18
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB      EQU   X'01'
BSAMBIT    EQU   X'00'
PAM        EQU   X'02'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
*
*
*********************************************************************
*
*
*
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN      EQU   X'30'
COMPLETE   EQU   X'80'
FIRSTIOB   EQU   X'01'
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
CYCLICB    EQU   X'20'
EXCHANGB   EQU   X'10'
SIMPLEB    EQU   X'40'
EXCHCYCL   EQU   X'30'
*
*********************************************************************
*
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
SUBSTUTB   EQU   X'04'
*
*
*********************************************************************
*
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
*
*
SRCHE      EQU   X'31'
WRTCKD     EQU   X'1D'
RDC        EQU   X'92'
RDKD       EQU   X'8E'
RDD        EQU   X'86'
TIC        EQU   X'08'
*
*
*********************************************************************
*
*
* MASKS FOR RECORD FORMATS
*
*
STANDRDF   EQU   X'08'
FORMATU    EQU   X'C0'
FORMATF    EQU   X'80'
FORMATV    EQU   X'40'
BLOCKED    EQU   X'10'
FIXEDBLK   EQU   X'90'
TRANS    EQU   X'7E'                    TRANSLATE MODE MASK.
*
*
*********************************************************************
*
*
*   CHANNEL CONTROL WORD FLAGS
*
SKIP       EQU   X'10'
SLI        EQU   X'20'
CC         EQU   X'40'
DATACH     EQU   X'A0'
SLICC      EQU   X'60'
SLICCSK    EQU   X'70'
*
*
*********************************************************************
*
*
KEYS       EQU   X'01'
QSAM       EQU   X'01'
IDLNG    EQU   2                        LENGTH OF XCTL ID        Y02072
*
*
*********************************************************************
*
GETMAIN    EQU   4
XCTL       EQU   7
LOAD       EQU   8
*
*********************************************************************
*
*
**********************************************************************
ASISVLN  EQU   9                        DBLWORDS FOR IRB WKA     YM1141
ASA        EQU   X'04'
BKREAD     EQU   X'01'
URBITS   EQU   X'40'
TAPEB    EQU   X'80'
DABIT    EQU   X'20'
OABD075  EQU   75                                                S21042
*
**********************************************************************
*
*     RECORD READY CONSTANTS
*
SIX      EQU   6                        CONSTANT OF SIX          S20201
NRECREDY EQU X'20'                      NON RECORD READY BIT     S20201
TRKOVFL  EQU   X'20'                    TRACK OVERFLOW BIT       S20201
**********************************************************************
*
*
*
*
*
*
*
*
*
*
*
*
*
*
         BALR  RBASE,0
         USING SLDA,RBASE
         USING IHADCB,RDCB
         USING DEB,RDEB                                          S21042
         USING FORCORE,RCORE
*
*
SLDA     EQU   *
*
         B     BEGIN                    BRANCH AROUND MODULE ID  YM4640
         DC    C'IGG01912'              MODULE NAME              YM4640
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/22/74'              LAST SHIP DATE         @Z30TSCF
BEGIN    DS    0H                       END OF MODULE ID         YM4640
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         L     RCORE,4(RWTGC)           GET WORK AREA
         MVI   22(RWTG),X'CB'           CHANGE ATTRIBUTES TO ONLY LOAD
*
         L     RTIOT,DEBAPPAD           GET APPENDAGE ADDRESS
         USING AVT,RTIOT
         SR    RUCB,RUCB                CLEAR REG
         SR    RF,RF                   CLEAR REG
         IC    RUCB,DEBNMEXT            GET NUMBER OF EXTENTS
         IC    RF,DEBEXSCL              GET SCALING FACTOR
         SLL   RUCB,0(RF)               SHIFT ACCORDING TO EXTENT SIZE
         IC    RF,DEBAMLNG              GET ACCESS METHOD LENGTH
         LA    RUCB,0(RF,RUCB)          ADD TO POINT TO SUBRT ID FLD
         LA    RUCB,32(RUCB,RDEB)       ADD BASIC DEB SZ TO DEB AD
*                                                                  UT18
         TM    DCBOPTCD,UTFMASK         TEST FOR TOTALING          UT18
         BZ    SLDAA                    BR IF NOT SPECIFIED        UT18
         TM    0(RPARC),INPRDBK         IS OPEN FOR INPUT/RDBACK   UT18
         BZ    SLDAA                    IF YES, NO TOTALING REQ'D  UT18
*                                                                  UT18
* SINCE UTF WAS SPECIFIED THE TOTALING SAVE ROUTINE (IGG019AX)     UT18
*        WAS LOADED BY IGG0191Y IN STAGE 1 - SO IT IS NECESSARY    UT18
*        TO UPDATE THE SUBROUTINE ID POINTER (RUCB) TO POINT       UT18
*        TO THE SECOND ID SUBFIELD.                                UT18
*                                                                  UT18
         LA    RUCB,2(RUCB)             POINT TO NEXT ID SUBFIELD  UT18
*                                                                  UT18
SLDAA    EQU   *                        SYMBOLIC ADDR              UT18
*                                                                  UT18
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,NEXTMOD         ID OF NEXT MOD IN WTG  @Z30TSCF
*
* AN OFFSET IS USED TO LOAD THE PROPER MODULES FROM THE LIST OF MODULES
*   IN THE LOAD TABLE.  THIS OFFSET IS SET TO ZERO FOR BSAM, TWO FOR
*   QSAM.  THE ARRANGEMENT OF THE LOAD TABLE MUST BE A BSAM MODULE
*   FOLLOWED BY THE CORRESPONDING QSAM MODULE.
*
SLD02    EQU   *
         TM    DCBCIND2,QSAMB           IS THIS DCB FOR QSAM
         BZ    SLD100                   NO,BRANCH TO SET UP FOR BSAM
*
SLD80    EQU   *
         LA    RD,IDLNG                 SET UP FOR QSAM          Y02072
         STH   RD,OFFSET                SET OFFSET TO LOAD QSAM  Y02072
*                                        MODULES
         B     SLD105
*
SLD100   EQU   *
         SR    RD,RD                    CLEAR THE REGISTER
         STH   RD,OFFSET                SET OFFSET = 0 TO LOAD BSAM
*                                        MODULES
*
SLD105   EQU   *
         TM    DCBCIND2,UPDATEB         IS THIS UPDATE
         BO    SLD106                  YES,GO TO LOAD FOR UPDATE
*
*THIS SECTION LOADS BSAM OR QSAM MODULES FOR PAPER TAPE
*
SLD200   EQU   *
         LA    RB,CHECKPT               GET PAPER TAPE CHECK/GERR ID
         AH    RB,OFFSET                ADD OFFSET TO GET CORRECT ID
*
         TM    DCBOFLGS,X'20'           CONCATENATION UNLIKE ATTRIBUTES
         BZ    SLD210                   NO,GO TO LOAD ROUTINE
*
SLD205   EQU   *
*                                       YES, CANNOT HAVE CONCATENATION
*                                      OF UNLIKE ATTRIBUTES WITH
*                                      PAPER TAPE, MUST ABEND.
         DMABCOND OABD075,PDLOAD,RETURN=NONE,RES=NO 013 ABEND    S21042
         B     TCTLRTN                                           S21042
SLD210   EQU   *
         BAL   RC,SLDROUT               TO LOAD CHECK OR GERR
         MVC   DCBCHECK+1(3),25(RWTG)   STORE ADDRESS IN DCB
*
         LA    RB,RPTU                  GET ADDRESS OF READ/GET TRANS
*
         TM    DCBCODE,TRANS            IS THIS TRANSLATE MODE
         BM    SLD220                   YES,GO TO LOAD MODULE
*
         LA    RB,WRH2                  NO,GET ADDRESS OF READ ID
SLD220   EQU   *
         AH    RB,OFFSET                ADD OFFSET TO GET CORRECT ID
         BAL   RC,SLDROUT               TO LOAD READ OR GET ROUTINE
         MVC   DCBREAD+1(3),25(RWTG)    STORE ADDRESS IN DCBREAD/GET
***********************************************************************
*      GET THE TRANSLATE TABLES NECESSARY FOR PAPER TAPE
*
SLDAPP00 EQU   *
*
         SR    RE,RE                    GET TRANSLATION CODE.
         IC    RE,DCBCODE
         LA    RF,128                   POINT TO FIRST BIT IN TRAN CODE
         LA    RJ,7                     SET NUMBER OF CODES
SLDAPP10 EQU   *
*
         CR    RE,RF                    IS THIS BIT ON?
         BE    SLDAPP11                 YES, BRANCH.
         SRL   RF,1                     NO, SHIFT TEST BIT OVER ONE.
         BCT   RJ,SLDAPP10              BRANCH WHEN NOT AT LAST BIT.
SLDAPP11 EQU   *
*
*                                       ADJUST COUNT TO GET PROPER
*                                         ENTRY IN EXECUTE TABLE.
         SLL   RJ,2                     MULTIPLY BY FOUR (BYTES/INSTR).
         EX    0,SLDTTBX(RJ)            EXECUTE PROPER LOAD FOR THIS
*                                         BIT ON.
         BAL   RC,SLDROUT               LOAD ROUTINE
         MVC   DCBLCTBL+1(3),25(RWTG)   STORE ADDRESS
SLDAPP14 EQU   *
*
         B     SLDAPP15
*
SLDTTBX  EQU   *-4
*
*     ONE OF THESE INSTRUCTIONS WILL BE EXECUTED TO LOAD THE PROPER
* CONVERSION TABLE OR NONE, AS DETERMINED FROM DCBCODE.
*
         LA    RB,TLTY                  TELETYPE
         LA    RB,ASCI                  ASCII
         LA    RB,NCRC                  NCR
         LA    RB,BURR                  BURROUGHS
         LA    RB,FRID                  FRIDEN
         LA    RB,PTTC                  IBM
         B     SLDAPP14                 NONE
*
**********************************************************************
*THIS SECTION DETERMINES IF A LENGTH CHECKING APPENDAGE IS NEEDED
*   FOR PAPER TAPE
*
SLDAPP15 EQU   *
         TM    DCBRECFM,FORMATU         TYPE U RECORDS
         BO    RELOOP                   YES, DON'T LOAD          A34004
*                                       APPENDAGE                A34004
         LA    RB,ACEP                  GET ID OF WLI APPENDAGE
         TM    DCBCIND2,QSAMB           IS DCB FOR QSAM
         BNO   SLDAPP17                 NO,GO TO LOAD APPENDAGE  Y02072
         TM    DCBCODE,TRANS            IS IT FOR TRANSLATE
         BM    RELOOP                   YES, DON'T LOAD          A34004
*                                       APPENDAGE                A34004
SLDAPP17 BAL   RWK2,SLDROUT             GO LOAD APPENDAGE        Y02072
         ST    RWK1,AVTCE               APPEN ADDR TO AVT        Y02072
         B     RELOOP                   BRANCH TO GET OUT        Y02072
*
*THIS SECTION LOADS BSAM OR QSAM MODULES FOR UPDATE
*
SLD106   EQU   *
         LA    RB,CHECKUP               GET CHECK/GERR ID
         AH    RB,OFFSET                ADD OFFSET TO GET CORRECT ID
*
         TM    DCBOFLGS,X'20'           CONCATENATION UNLIKE ATTRIBUTES
         BZ    SLD110                   NO,GO LOAD CHECK/GERR ROUTINE
*
         BAL   RC,SLDROUT1              STORE CHECK OR GERR ID IN DEB
*
         B     SLD120
*
SLD110   EQU   *
         BAL   RC,SLDROUT               TO LOAD CHECK OR GERR
         MVC   DCBCHECK+1(3),25(RWTG)   STORE ADDRESS IN DCBCHECK/GERR
SLD120   EQU   *
         LA    RB,BUEOE                GET END OF EXTENT ID FOR UPDATE
         AH    RB,OFFSET               ADD OFFSET TO GET CORRECT ID
         BAL   RC,SLDROUT
         ST    RE,AVTEOE                APPENDAGE TABLE ENTRY FOR EOE
*
         LA    RB,UPRW                  GET READ/WRITE ADDRESS ID
         AH    RB,OFFSET                ADD OFFSET TO GET CORRECT ID
         BAL   RC,SLDROUT               TO LOAD READ/WRITE OR GET
         MVC   DCBREAD+1(3),25(RWTG)    STORE ADDRESS IN DCBREAD/GET
*
*
*THIS SECTION LOADS START IO AND, IF NECESSARY,
*   LENGTH CHECKING AND TRACK OVERFLOW APPENDAGES FOR UPDATE
*
SLDAPP16 EQU   *
*
         NI    DCBCIND2,X'7F'           TURN OFF UPDATE BIT
*
         LA    RB,USIO                  GET SIO APPENDAGE ID UPDATE
         BAL   RC,SLDROUT               LOAD ROUTINE
         ST    RE,AVTSIO                APPENDAGE TABLE ENTRY FOR SIO
SLDAPPA  EQU   *
*                                        APPENDAGE FOR TRACK OVERFLOW
*                                        INPUT.
*     IGG019C3, OFFSET 0, USED FOR THE TRACK OVERFLOW ABNORMAL   Y02072
*     END, AND OFFSET 4 IS USED FOR THE TRACK OVERFLOW CHANNEL   Y02072
*     END APPENDAGE                                              Y02072
         TM    DCBRECFM,OVFLBIT         ARE TRACK OVERFLOW        23591
*                                       MODULES REQ               23591
         BZ    SLDAPPB                  NO,BRANCH                 23591
         LA    RB,TOABNE                GET ADDRESS OF ABNORMAL END
         BAL   RC,SLDROUT               LOAD THE APPENDAGE
         ST    RE,AVTABNE               APPENDAGE TABLE ENTRY FOR
*                                       ABNORMAL END APPENDAGE
         LA    RB,ASYNCH               GET ID OF ASYNCHRONOUS ROUTINE
         BAL   RC,SLDROUT              LOAD ROUTINE
*  WHEN RETURNING FROM 'SLDROUT', REGISTER 0 CONTAINS THE ADDRESS
*   OF THE ASYNCHRONOUS ERROR ROUTINE
*
*        BUILD IRB FOR IGG019C1 - WORKAREA IS USED IN 19C3
*
         CIRB  EP=(0),KEY=PP,MODE=PP,STAB=(RE),WKAREA=ASISVLN    YM1141
         ST    RF,24(RWTG)             STORE ADDRESSS OF IRB
         MVC   DEBIRBAD+1(3),25(RWTG)  PUT IRB ADDRESS IN DEB
SLDAPPB  EQU   *
         TM    DCBRECFM,FORMATU         FORMAT U RECORDS         S20201
         BM    LAB03                    NO BRANCH AROUND         S20201
         TM    DCBRECFM,TRKOVFL         IS IT TRACK OVERFLOW     S20201
         BO    SLDAPP19                 YES BRANCH TO SLDAPP19   S20201
         LA    RB,ACEU                  NO GET U FORMAT CHAN END S20201
         B     SLDAPP18                 LOAD U FORMAT CHAN END   S20201
LAB03    EQU   *                                                 S20201
         TM    DCBRECFM,FORMATF         FIXED LENGTH RECS        S20201
         BO    LAB02                    BRANCH TO LOAD MOD       S20201
LAB01    EQU   *                                                 S20201
         TM    DCBRECFM,FORMATU        FORMAT U RECORDS
         BC    9,SLDAPP19              BRANCH IF SPECIFIED FORMAT U
*                                        OR NOT SPECIFIED AT ALL.
         LA    RB,ACEV                 GET VARIABLE RD LGN CHECK APPN.
         TM    DCBRECFM,FORMATV        FORMAT V RECORDS
         BO    SLDAPP18                YES,LOAD VARIABLE LGN APPEN
         TM    DCBRECFM,FIXEDBLK       FIXED BLOCK RECORDS
         BC    12,SLDAPP19             NO,DON'T LOAD APPENDAGE
LAB02    EQU   *                                                 S20201
         LA    RB,ACEF                 YES, GET FIXED LGN CHECK APPEN
*
SLDAPP18 EQU   *
         BAL   RC,SLDROUT               LOAD ROUTINE
         ST    RE,AVTCE                 APPENDAGE TABLE ENTRY FOR CE
         TM    DCBRECFM,DCBRECTO        TRACK OVERFLOW           Y02072
         BO    RELOOP                   YES, BYPASS SEC ENT PT   Y02072
         AH    RWK1,SECENTRY            ABNORMAL END ENTRY       Y02072
         ST    RWK1,AVTABNE             ABNOR END ENTRY TO AVT   Y02072
         B     RELOOP                                            A26750
*
*THIS SECTION LOADS MODULES NEEDED BY EITHER PAPER TAPE OR UPDATE
*
SLDAPP19 EQU   *
*
         TM    DCBRECFM,OVFLBIT    TRK OVERFLOW                  A26750
         BZ    RELOOP              NO, BRANCH                    A26750
         L     RE,16(RTIOT)        GET ABN END ADDRESS           A26750
         AH    RWK1,SECENTRY            ADDR OF CHANNEL END APPG Y02072
         ST    RE,AVTCE                 APPENDAGE TABLE ENTRY FOR CE
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),0               IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
**
*
*
*
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'
AMIDCNST DC    C'12'
*
*
*
         DS    0H
SLDROUT  EQU   *
         MVC   6(2,RWTG),0(RB)          MOVE 2 BYTE ID TO DE
*
*
         L     R1,CVTPTR                LOAD CVT ADDRESS         YM1140
         USING CVT,R1                   CVT ADDRESSABILITY       YM1140
         L     R1,CVTLINK               GET LPALIB DCB ADDRESS   YM1140
         DROP  R1                       DROP CVT BASE            YM1140
**
         LOAD  EPLOC=(RWTG),DCB=(1)                              YM1140
**
*
*
*
         ST    RE,24(RWTG)              STORE ADDRESSS OF LOADED ROUTIN
SLDROUT1 MVC   0(2,RUCB),0(RB)          STORE ID IN DEB
         LA    RUCB,2(RUCB)             UPDATE SUBRT PNTR
         SR    RD,RD
         IC    RD,DEBNMSUB              GET NO. OF SUBRT LOADED
         LA    RD,1(RD)                 ADD ONE TO TOTAL
         STC   RD,DEBNMSUB              STORE NEW TOTAL OF SUBRT LOADED
         BR    RC                       RETURN
*
*
***********************************************************************
*
SECENTRY DC    H'4'                     OFFSET TO SECOND ENTRY   Y02072
*
***********************************************************************
*
*
*
*
* THIS MODULE IS DEPENDENT ON THE ARRANGEMENT OF THE FOLLOWING LOAD
*   TABLE.  THE LOAD TABLE IS SET UP WITH A BSAM ENTRY, FOLLOWED
*   BY THE CORRESPONDING QSAM ENTRY.  THIS PATTERN MUST BE MAINTAINED
*   TO ENSURE THAT THE PROPER MODULE IS LOADED
*
*********************************************************************
*
***
         DC    0D'0'                    ALIGN TO DOUBLE WORD BDY Y02072
NEXTMOD  DC    C'18',VL3(IGG01918)      ID OF MODULE IGG01918  @Z30TSCF
CHECKUP  DC    C'BI'                    ID OF MODULE IGG019BI    Y02072
UPER     DC    C'AF'                    ID OF MODULE IGG019AF    Y02072
UPRW     DC    C'BH'                    ID OF MODULE IGG019BH    Y02072
UGFV     DC    C'AE'                    ID OF MODULE IGG019AE    Y02072
CHECKPT  DC    C'BG'                    ID OF MODULE IGG019BG    Y02072
GERR     DC    C'AQ'                    ID OF MODULE IGG019AQ    Y02072
RPTU     DC    C'BF'                    ID OF MODULE IGG019BF    Y02072
GPTF     DC    C'AT'                    ID OF MODULE IGG019AT    Y02072
WRH2     DC    C'BA'                    ID OF MODULE IGG019BA    Y02072
GPTN     DC    C'AC'                    ID OF MODULE IGG019AC    Y02072
BUEOE    DC    C'BM'                    ID OF MODULE IGG019BM    Y02072
QUEOE    DC    C'AW'                    ID OF MODULE IGG019AW    Y02072
USIO     DC    C'CG'                    ID OF MODULE IGG019CG    Y02072
TOABNE   DC    C'C3'                    ID OF MODULE IGG019C3    Y02072
ASYNCH   DC    C'C1'                    ID OF MODULE IGG019C1    Y02072
ACEF     DC    C'CI'                    ID OF MODULE IGG019CI    Y02072
ACEP     DC    C'CS'                    ID OF MODULE IGG019CS    Y02072
ACEV     DC    C'CJ'                    ID OF MODULE IGG019CJ    Y02072
TLTY     DC    C'CM'                    ID OF MODULE IGG019CM    Y02072
ASCI     DC    C'CN'                    ID OF MODULE IGG019CN    Y02072
BURR     DC    C'CO'                    ID OF MODULE IGG019CO    Y02072
FRID     DC    C'CP'                    ID OF MODULE IGG019CP    Y02072
PTTC     DC    C'CQ'                    ID OF MODULE IGG019CQ    Y02072
NCRC     DC    C'CR'                    ID OF MODULE IGG019CR    Y02072
ACEU     DC    C'C0'                    ID OF MODULE IGG019C0    Y02072
PDLOAD   DC    C'6M'                    ID OF MODULE IGG0196M    Y02072
         SPACE
PATCH    DC    25H'0'                   PATCH AREA               YM4640
END      EQU   *                        END OF MODULE            Y02072
         TITLE 'IGG01912 - FORMAT OF GOTTEN CORE'
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
*
*
AVT      DSECT                          APPENDAGE VECTOR TABLE
AVTEOEPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTEOE   DS    A                        ADDR OF END OF EXTENT
*                                       APPENDAGE
AVTSIOPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTSIO   DS    A                        ADDR OF START I/O
*                                       APPENDAGE
AVTPCIPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTPCI   DS    A                        ADDR OF PCI APPENDAGE
AVTCEPG  DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTCE    DS    A                        ADDR OF CHANNEL END
*                                       APPENDAGE
AVTABNPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTABNE  DS    A                        ADDR OF ABNORMAL END
*                                       APPENDAGE
CVT      DSECT
         CVT
*
*
BLDEB    DSECT
DEB      DS    0F
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOGLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
*
           DCBD  DSORG=PS
* DCBREAD IS A TEMPORARY STORAGE AREA USED FOR THE OFFSET USED IN
*  LOADING EITHER QSAM MODULES OR BSAM MODULES
OFFSET   EQU   DCBREAD+2
**********************************************************************
*
           END
