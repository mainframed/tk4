         TITLE 'IGG0199K  DA, SEARCH DIRECT AND TRK OVFLOW EXEC'
         MACRO
&NAME    IF    &A,&IS=,&ISNOT=,&GOTO=
         LCLB  &NOERR
&NOERR   SETB  1
         AIF   ('&A' NE '').SKIP
         MNOTE 'TEST  ADDRESS NOT SPECIFIED.'
&NOERR   SETB  0
.SKIP    AIF   ('&GOTO' NE '').SKIP2
         MNOTE 'BRANCH ADDRESS MISSING.'
&NOERR   SETB  0
.SKIP2   AIF   ('&IS' NE '' OR '&ISNOT' NE '').SKIP3
         MNOTE 'TEST CONDITION NOT SPECIFIED.'
&NOERR   SETB  0
.SKIP3   AIF   (&NOERR).SKIP4
         MEXIT
.SKIP4   AIF   ('&IS' EQ '').NOIS
***
&NAME    TM    &A,&IS
         BO    &GOTO
***
         MEXIT
.NOIS    ANOP
***
&NAME    TM    &A,&ISNOT
         BZ    &GOTO
***
         MEND
IGG0199K CSECT
*
*MODULE NAME - IGG0199K                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS2 RELEASE 1.6 DELETIONS                                  *
*105200-105400,105800-106000                                    SA51532
*                                                                     *
*          VS2 RELEASE 2 DELETIONS                               Y02072
*006360,060090-060120,062800,075700,110340,126040,060020-060060, Y02072
*060150,099450,102700,106200-106600,107000,133500,136100-136200, Y02072
*137700,120200,120350,124400-124800,125400,126600-127200,        Y02072
*128200-128400                                                   Y02072
*                                                                YM1378
*                                                                YM1158
*                                                                YM3176
*                                                                YM2424
*                                                                YM4640
*                                                                YM7595
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*
*          RELEASE 20 DELETIONS                                       *
*                                                                S20201
*          RELEASE 21 DELETIONS                                       *
*0340043000,075680,110330,120000,125000,127600-128000,132900-    S21042
*0340134000,158400-158600                                        S21042
*0000127600                                                      M1821
*
*STATUS CHANGE LEVEL 002
*
*
* THIS EXECUTOR RUNS IN TANDEM WITH IGG0191S, WHICH COMPLETES DCB
* FIELDS THAT ARE KNOWN PRIOR TO GETTING CORE FOR THE IOB/CP'S.
*
* THE MAJOR FUNCTIONS OF THIS EXEC ARE-
*
* 1. STRUCTURE EACH IOB/CP WITH THE ADDRESSES AND FLAGS THAT ARE
*    KNOWN AT OPEN TIME.
* 2. COMPLETE THE RELATED DCB FIELDS.
* 3. REPEAT FOR EACH DCB BEING OPENED.
*
* ENTRY POINTS- FROM IGG0191S BY XCTL.
* EXITS- TO IGG01913 BY XCTL.
*
*MACROS : ACTION - MODESET, XCTL, XCTLTABL, DMABCOND             Y02072
*
*MACROS : MAPPING - IHACCW,DCBD,IGGBCB,IECDSECS(WTG),IHAFCAUD    Y02072
*
*INPUT-REGISTERS WITH THE ADDRESSES OF THE FOLLOWING-
*   THE PARAMETER LIST  (POINTERS TO TOP AND CURRENT ENTRY).
*   THE WHERE-TO-GO TABLE (WTG) (POINTERS TO TOP AND CURRENT).
* EXTERNAL ROUTINES- NONE.
* ATTRIBUTES- REENTRANT, REUSABLE, SUPERVISOR STATE, RUNS IN     Y02072
*             USER KEY UNLESS OTHERWISE SPECIFIED                Y02072
* TABLES/WORKAREAS-
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 35    WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 36-39 TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR  N TH DCB  (3 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (1 BYTE )
*                   IDTTR OF LAST ROUTINE LOAD       (3 BYTES)
*                   NOT USED                         (1 BYTE)
*
*    WORKAREA- SEE 'FORCORE DSECT' (IECDSECT) IN THIS LISTING
*
*TABLES/WORKAREAS- PARAMETER LIST
*
*WORD ZERO
*      BYTE  0    OPEN ATTRIBUTE  (INPUT, OUTPUT, UPDATE, IN/OUT,
*                                  OUT/IN, READ BACKWD, LEAVE , REREAD)
*      BYTES 1-3  DCB ADDRESS FOR FIRST DCB BEING OPENED.
*
*THE PARAMETER LIST HAS A ONE WORD ENTRY FOR EACH DCB BEING OPENED. THE
*FORMAT IS THE SAME AS WORD ZERO.
*END PARAMETER LIST.
*
* REGISTER CONVENTIONS USED IN ALL OF OPEN-
*
RDCB     EQU   2                        DCB REGISTER
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        I/O SUPPORT WORK AREA
RPAR     EQU   5                        TOP OF PARAMETER LIST
RBUFADR  EQU   RPAR                     MAINTAINS ADDR OF NEXT   Y02072
*                                         AVAILABLE BUFFER       Y02072
RWTG     EQU   6                        TOP OF WTG TABLE
RPARC    EQU   7                        CURRENT PARAMETER
RWTGC    EQU   8                        CURRENT LOAD IN TRANSIENT AREA
RTIOT    EQU   9                        USED AS A WORK REG
RIOB     EQU   RTIOT                    USED AS IOB BASE REG WITH THE
*                                       IOB OVERLAY FROM FORECORE.
RUCB     EQU   10                       USED AS A WORK REG
RCPSIZE  EQU   RUCB                     USED TO CALCULATE AND HOLD THE
*                                       CHANNEL PGM SIZE.
RDEB     EQU   11                       DEB BASE REG.
RB       EQU   12                       WORK REG.
RCPBASE  EQU   RB                       CHANNEL PGM BASE REG USED WITH
*                                       'CPSEGMAP' DUMMY SECTION.
RWK1     EQU   RB                       WORK REGISTER            Y02072
RC       EQU   13                       WORK REG.
RSTEPPER EQU   RC                       POINTS TO THE CURRENT SEARCH
*                                       ADDRESS OR COUNT FIELD BEING
*                                       USED FOR CP CONSTRUCTION. WHEN
*                                       POINTING TO A COUNT FLD THE
*                                       'COUNTFLD' DUMMY SECTION IS
*                                       USED BASED ON THIS REG.
*
RE       EQU   0                        WORK REG. VOLATILE ACCROSS SVC.
RF       EQU   1                        WORK REG. VOLATILE ACCROSS SVC.
RWK2     EQU   RF                       WORK REGISTER            YM1378
RD       EQU   14                       WORK REG. VOLATILE ACCROSS SVC.
RWK3     EQU   RD                       WORK REG                 YM7595
RJ       EQU   15                       WORK REG. VOLATILE ACCROSS SVC.
RA       EQU   RJ                       USED AS WORK REG
RVALCHK  EQU   RA                       VALIDITY CHK CP BASEREG,
*                                       USES 'VCMAP' DSECT.
*
*
* MASK CONFIGURATIONS FOR TESTING THE HI ORDER BYTE OF EACH PARAMETER
* LIST ENTRY. SIGNIFICANCE IS THE SAME AS THE DEB OPEN ATTRIBUTE FIELD.
*
INPUT    EQU   X'0F'                    TEST MASKED BITS FOR ZEROS.
OUTPUT   EQU   X'0F'                    TEST MASKED BITS FOR ONES.
INOUT    EQU   X'03'
OUTIN    EQU   X'07'
RDBACK   EQU   X'01'
UPDAT    EQU   X'04'
LEAVE    EQU   X'10'
REREAD   EQU   X'30'
*
* COMMAND CODES FOR THE 2841 CONTROL UNIT.
*
SRCHEQ   EQU   X'31'                    SEARCH EQUAL ID.
SRCHEQMT EQU   X'B1'                    SEARCH EQUAL ID IN MULTI-TRACK.
TIC      EQU   X'08'                    TRANSFER IN CHANNEL.
WCKD     EQU   X'1D'                    WRITE COUNT, KEY, AND DATA.
WSCKD    EQU   X'01'                    WRITE SPECIAL, COUNT,KEY,DATA.
SEEKCYL  EQU   X'0B'                    SEEK CYLINDER.
READDATA EQU   X'06'                    READ DATA SINGLE TRACK.
RDDATAMT EQU   86                       MULTI-TRACK READ DATA.
READKD   EQU   14                       READ KEY AND DATA.
READCT   EQU   X'92'                    READ COUNT M/T MODE.
RDSC     EQU   X'22'                    SET THETA CCW COMMAND
SETSC    EQU   X'23'                    READ THETA CCW COMMAND
SDTIC    EQU   X'40'                    SCH DIR TIC
*
* CHANNEL COMMAND WORD FLAGS.
*
SKIP     EQU   X'10'                    SKIP FLAG.
SILI     EQU   X'20'                    SUPPRESS INCORRECT LENGTH IND.
CC       EQU   X'40'                    COMMAND CHAIN.
DC       EQU   X'80'                    DATA CHAIN.
SILICC   EQU   X'60'                    SILI AND CC TOGETHER
SILICCSK EQU   X'70'                    SILI, CC, AND SKIP.
* END CCW FLAGS.
*
* DISPLACEMENTS  AS EQUATES
*
D0       EQU   0                        DISPLACEMENT OF ZERO
D1       EQU   1                        DISPLACEMENT OF ONE
D2       EQU   2                        DISPLACEMENT OF TWO
D4       EQU   4                        DISPLACEMENT OF FOUR
D6       EQU   6                        DISPLACEMENT OF SIX
D8       EQU   8                        DISPLACEMENT OF EIGHT
D12      EQU   12                       DISPLACEMENT OF TWELVE
D15      EQU   15                       DISPLACEMENT OF FIFTEEN
D16      EQU   16                  DISPLACEMENT OF 16
CNTOFF   EQU   7                        CCW COUNT FIELD OFFSET
SXTN     EQU   16                       ADDITIONAL CHP LENGTH FOR
*                                       RECORD READY FEATURE
*
* MISCELLANEOUS ITEMS.
*
COMPNOER EQU   X'7F'                   USED TO INIT. ECB.
DCANDCC  EQU   X'C0'                    USED TO SET IOBFLAG1.
IDLENGTH EQU   X'05'                    NMBR OF BYTES IN A 'CCHHR'.
POINT    EQU   X'04'                    DCBMACRF IF NOTE/POINT USED.
QSAM     EQU   X'01'                    QSAM BIT IN DCBIND2.
*
NPD2     EQU   5                        NOTE/POINT FOR PCI,UPD,T.O.
EPDT     EQU   9                        EOB FOR T.O.
EGP2     EQU   8                        EOB FOR D.A. INPUT.
*
*
VALCHK   EQU   X'80'                    MASK TO DETERMINE IF WRITE
*                                       VALIDITY CHECK OPTION CALLED.
IOBSIZE  EQU   48                       LENGTH OF A STANDARD IOB WITH
*                                       BSAM/QSAM/BPAM EXTENSION.
IOBDBLWD EQU   6                        NMBR OF DBL WDS IN IOB.
OFFSW    EQU   24                       OFFSET OF CCW THAT WRITES DATA.
OFFSR    EQU   32                       OFFSET OF THE READ CCW THAT
*                                       RECEIVES THE BLOCK LENGTH TO
*                                       BE READ.
CPSEGLEN EQU   32                       LENGTH OF ONE CP SEGMENT.
NOTZERO  EQU   7                        CONDITION MASK USED AFTER
*                                       ARITHMETIC INSTRUCTIONS FOR THE
*                                       NOT-ZERO TEST.
BBCCHH   EQU   6                        MIN. SEEK LENGTH.
*
ZERO     EQU   X'00'                    AN IMMEDIATE BYTE OF ZERO'S.
B1       EQU   1                        BYTE COUNT OF ONE
ONE      EQU   1                        CONSTANT OF ONE
TWO      EQU   2                        CONSTANT OF TWO
B5       EQU   5                        BYTE COUNT OF FIVE
*
NORCDRY  EQU   X'20'                    NO RECORD READY MASK
RCDRYSL  EQU   48                       SEG LENGTH WHEN USING RCD
*                                       READY FEATURE
*
*
*
VRCDS    EQU   X'40'                    V TYPE RCD MSK
*
*
EIGHT    EQU   8                        LENGTH OF A COUNT FIELD.
ANYZERO  EQU   14                       MASK FOR MIXED OR ZEROS.
FIRST    EQU   X'01'                    USED TO SET IOB FLAG IN FIRST
*                                       IOB AND INIT. 'R'.
READCPL  EQU   40                       NMBR OF BYTES IN READ CP.
RCPDBLWD EQU   5                        NMBR OF DBL WDS IN RCP.
REMNANT  EQU   READCPL-OFFSR            OFFSR+REMNANT=READCPL.
OPCODE   EQU   0                        OFFSET OF CCW OPCODE(IN CCW).
ADDRESS  EQU   0                        OFFSET OF ADDRESS IN CCW
*                                       (IMPLIES THAT THE ADDRESS MUST
*                                       BE PUT IN BEFORE THE OP CODE)
FLAGS    EQU   4                        CCW FLAG BYTE.
LENFLD   EQU   6                        START OF LENGTH FLD IN CCW.
U        EQU   X'C0'                    CODE FOR DCBRECFM=U
OABD062  EQU   62                                                S21042
ONEIOB   EQU   1                        USED TO CHECK FOR 1 IOB  YM1158
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY.
         USING SOP6,RBASE
         USING FORCORE,RCORE            OPEN WKAREA              S21042
         USING IHADCB,RDCB              DCB ADDRESSABILITY.
*
*
SOP6     EQU   *
*
         B     BEGIN                    BRANCH AROUND MODULE ID  YM4640
         DC    C'IGG0199K'              MODULE NAME              YM4640
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/18/74'              LAST SHIP DATE         @Z30TSCF
BEGIN    DS    0H                       END OF MODULE ID         YM4640
         L     RDCB,0(RPARC)            GET DCB ADDRESS FROM PARM. LIST
         L     RDEB,DCBDEBAD            DEB ADDRESSABILITY.
         L     RCORE,D4(RWTGC)          GET WORK AREA ADDR
         LA    RDCB,0(RDCB)             HOUSEKEEP HI BYTE.
         ST    RPAR,DXREGSAV            SAVE REG SO IT CAN BE    Y02072
*                                         AS RBUFADR             Y02072
         SR    RUCB,RUCB                CLEAR REG
         IC    RUCB,DCBNCP              GET NO. OF IOBS REQUIRED
         IF    DCBCIND2,ISNOT=QSAM,GOTO=SOP6L12
         IC    RUCB,DCBBUFNO            IF QSAM USE BUFNO
SOP6L12  EQU   *
         L     RIOB,DCBIOBA             GET FIRST IOB ADDRESS.
         MODESET  KEYADDR=DXUKEY,WORKREG=12 GET INTO USER KEY    Y02072
         USING SAMSIOB,RIOB            IOB ADDRESSABILITY READY.
         MVI   FLAG,FIRST               FLAG FIRST IOB             DM0I
*
BUILDIOB EQU   *
*
* RIOB POINTS TO START OF AN IOB. USING THIS AS A BASE, GET THE CP
* START ADDRESS AND THE ADDRESS OF THE COUNT FIELDS AND S.A.'S.
*
*
         MVI   ECB,COMPNOER            INIT. ECB FOR QSAM.
         LA    RF,ECB                   INITIALIZE THE
         ST    RF,IOBECBPT              ECB POINTER.
*
         OI    IOBFLAG1,DCANDCC         INDICATE COMMAND AND DATA CHAIN
         DROP  RIOB                                              Y02072
         L     RWK1,DXUDCBAD            GET USERS DCB ADDRESS    Y02072
         USING SAMSIOB,RIOB                                      Y02072
         ST    RWK1,IOBDCBPT-1          INIT DCB PT IN IOB.      Y02072
         MVC   IOBSEEK(8),DCBFDAD       INIT. ALL IOB FDAD'S. SUPPORTS
*                                       EVERYBODY                Y02072
         LA    RCPBASE,CHANPGM          GET CHP ADDR
         ST    RCPBASE,IOBSTART-D1      PUT IN IOB
*
* TEST FOR INPUT ONLY
*
         USING DEB,RDEB                 DEB ADDRESSABILITY
         IF    DEBOPATB,ISNOT=OUTPUT,GOTO=RCPREQD
         DROP  RDEB
BUILDWCP EQU   *
         SR    RCPBASE,RCPBASE         NEEDED ON 2ND PASS.
         IC    RCPBASE,DCBWCPO          NEED OFFSET TO BUILD
         AR    RCPBASE,RIOB             WRITE CP BASE ADDRESS.
         USING WCPMAP,RCPBASE
         SR    RSTEPPER,RSTEPPER       NEEDED ON 2ND PASS.
         IC    RSTEPPER,DCBWCPL         BUILD ADDRESS OF COUNT FIELDS
         SLL   RSTEPPER,3               APPENDED TO WCP.
         AR    RSTEPPER,RCPBASE         ADDRESS OF FIRST COUNT FIELD.
*
         USING COUNTFLD,RSTEPPER
*
*   RIOB = IOB ADDRESS.
*   RCPBASE = CHANNEL PROGRAM ADDRESS.
*   RSTEPPER = COUNT FIELD AND S.A. ADDRESS.
*
* IOB INITIALIZED EXCEPT FOR LINK FIELD.
*
* BUILD WRITE CHANNEL PROGRAMS.  THE CORRECT NUMBER OF CP SEGMENTS IS
* THAT WHICH CAN BE BUILT UP TO THE FIRST COUNT FIELD APPENDED TO THIS
* IOB.
*
*
* CHECK FOR RCD READY FEATURE AND SET UP SET THETA COMMAND IF
* THE FEATURE IS ON ALL THE DATA SETS DEVICES
*
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    NOFET3                   BRANCH IF YES
         BAL   RD,SOP6STA               GO BUILD SET SECTOR CCW
         AH    RCPBASE,DBLWDLEN         INCR BASE FOR SET SECTOR
NOFET3   EQU   *
CCW1     EQU   *
         LA    RD,IOBSEEK+3             GET ADDRESS OF CCHHR IN IOB.
         ST    RD,SRCHADDR              PUT IN FIRST SEARCH COMMAND.
         MVI   SRCHOPCD,SRCHEQ          SET OP CODE = SEARCH.
*
* BUILD  FIRST  TIC CCW.
*
CCW2     EQU   *
         ST    RCPBASE,TICADDR          STORE ADDRESS OF PREVIOUS SRCH.
         MVC   SRCHFLAG(B5),FLAGLEN     FLAGS, LEN, TIC OP CODE
*
*
         LR    RVALCHK,RSTEPPER         COPY PTR TO BEGINNING OF COUNTS
*                                       AND S.A.'S. WILL BE USED FOR
*                                       VAL CHK CP ADDRESSABILITY (IF
*                                       NEEDED) AND TO FLAG THE LAST
*                                       CCW OF THE WRITE SEGMENTS.
*
         IF    DCBOPTCD,ISNOT=VALCHK,GOTO=FLAGLAST
*
* VALIDITY CHECK IS CALLED. BUILD THE VAL CHK CP SEGMENT WHILE ADDR-
* ESSABILITY IS AVAILABLE. CCW'S TO BE BUILT ARE A SEEK (CCW7), SEARCH
* (CCW8), TIC (CCW9) AND READ DATA (CCW10).
*
         SH    RVALCHK,VALCKLEN         BACK UP TO BEGINNING OF VAL CHK
*                                       CP.
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    FEAT7                    BRANCH IF YES
         SH    RVALCHK,DBLWDLEN         DECREMENT ADDITIONAL CCW
*                                       SINCE FEATURES WRITE CHK
*                                       CHP LARGER
FEAT7    EQU   *
         USING VCMAP,RVALCHK            VAL CHK SEGMENT ADDRESSABILITY.
*
CCW7     EQU   *                        BUILD SEEK COMMAND. SEEK
*                                       ADDRESS SAME AS CCHH IN FIRST
*                                       COUNT FIELD.
         LA    RD,IOBSEEK+1             POINTS TO IOB SEEK ADDR.
         ST    RD,SEEKADDR
         MVI   SEEKOPCD,SEEKCYL
         MVI   SEEKFLAG,CC              COMMAND CHAIN.
         MVI   SEEKLEN,BBCCHH           LENGTH OF A 'BBCCHH'.
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    NOFET9                   BRANCH IF YES
         DROP  RIOB
         USING FORCORE,RCORE            OPEN WKAREA              S21042
         L     RD,DXCCW11               GET SECTOR ADDR          Y02072
         USING SAMSIOB,RIOB
         ST    RD,D8(RVALCHK)           PUT IN CCW
         OI    D12(RVALCHK),CC          TURN ON COMMAND CHAIN
         MVI  D15(RVALCHK),B1           SET BYTE COUNT TO ONE
         MVI   D8(RVALCHK),SETSC        PUT IN CCW CMND
         AH    RVALCHK,DBLWDLEN         INCREMENT RVALCHK BASE REG
*                                       TO ELIMINATE SET SECTOR
*                                       OFFSETS IN DSECT
NOFET9   EQU   *
CCW8     EQU   *                        BUILD SEARCH ID EQUAL WITH SAME
*                                       CCHH AS THE SEEK.
         ST    RSTEPPER,VCSRCHAD        ADDRESS OF FIRST COUNT FIELD.
         MVI   VCSRCHOP,SRCHEQ          OP CODE.
*
CCW9     EQU   *                        BUILD A TIC BACK TO CCW8.
         LA    RD,VCSRCH                ADDRESS OF SEARCH.
         ST    RD,VCTICAD               PUT IN TIC ADDRESS.
         MVC   VCSRCHFL(B5),FLAGLEN     FLAGS, LEN, TIC OP CODE
* TIC COMPLETE. NO FLAGS REQ'D.
*
CCW10    EQU   *                        BUILD READ DATA WITH SKIP.
         MVI   VCRDOP,READKD            TO READ DATA + KEYS (IF ANY).
         MVI   VCRDFLAG,SKIP            SKIP FLAG.
* SKIP ON MAKES ADDRESS IMMATERIAL, LENGTH WILL BE SET AT EOB TIME.
*
* VALIDITY CHECK CP IS BUILT.
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    FEATL17                  BRANCH IF YES
         SH    RVALCHK,DBLWDLEN         IF YES RVALCHK WAS INCR
*                                       TO WRT CHK PGM PLUS  8  TO
*                                       ELIMINATE SET SECTOR OFF-
*                                       SETS AND NOW MUST BE RE-
*                                       STORED
FEATL17  EQU   *
         ST    RVALCHK,PARASITE         PUT VAL CHK CP ADDRESS IN
*                                       R.H. OF CCW2.
         MVI   PARASITE,TIC             PUT IN TIC OP CODE, OK BECAUSE
*                                       BITS 37-39=0.
*
* PARASITE TIC IN CCW2 WILL BE USED TO TRANSFER-IN-CHANNEL AROUND ANY
* UNUSED CP SEGMENTS WHEN WRITE CHECK IS CALLED.
*
         DROP  RVALCHK                  RELINQUISH VC CP ADDRESS.
*
FLAGLAST EQU   *
*
         SH    RVALCHK,DBLWDLEN         THE CCW BEFOR THE VAL CHK CP
*                                       (OR THE S.A.'S AND COUNT FLDS)
*                                       IS THE END OF THE WRITE SEGMENT
*                                       CP'S. POINT TO IT.
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    NOFETFLG                 BRANCH IF YES
         ST    RVALCHK,PARASITE         PUT RD SECT ADDR IN PARASIT
         MVI   PARASITE,TIC             PUT IN TIC CMND
         SH    RVALCHK,DBLWDLEN         BACK UP TO NULL OP CD
NOFETFLG EQU   *
         MVI   0(RVALCHK),WSCKD         FLAG LAST CCW4 OP CODE BYTE
*                                       WITH A NON-ZERO VALUE.
*
         LA    RF,NULLOPCD              ADDRESS OF CCW WHICH RECEIVES
         BAL   RE,GETBUFAD              BUFFER ADDRESS.
*
         MVC   KEYLENTH(1),DCBKEYLE     KEY WILL BE WRITTEN ON FIRST
*                                       RECORD SEGMENT ONLY.
*
CCW3     EQU   *                        ALL FIRST TIME LOGIC IS DONE.
*                                       BEGIN HERE WITH A LOOP TO BUILD
*                                       THE REST OF CP SEG 1 (CCW'S 3
*                                       AND 4) AND ALL REMAINING SEG-
*                                       MENTS (MADE UP OF CCW'S 5,6,3,4
*                                       IN THAT ORDER.)
*
         ST    RSTEPPER,COUNTADR        FILL IN COUNT FIELD ADDRESS.
         MVI   COUNTLEN,EIGHT           LENGTH OF A COUNT FIELD.
         MVI   WRTFLAG,DC               DATA CHAIN TO NEXT CCW.
*
CCW4     EQU   *                        THIS IS THE CCW THAT WRITES THE
*                                       DATA. NOTHING IS KNOWN AT OPEN
*                                       TIME EXCEPT THAT IT IS COMMAND
*                                       CHAINED, AND THE FIRST CCW4
*                                       WILL HAVE THE BUFFER ADDRESS IF
*                                       QSAM IS USED
*                                       IF IT IS THE LAST CCW4, THE OP
*                                       CODE BYTE HAS BEEN SET TO NON-
*                                       ZERO.
*
         MVI   RECORD,FIRST             INIT. 'R' TO 1.
         CLI   NULLOPCD,ZERO            IS THIS THE LAST CP SEGMENT?
         BNE   THRULOOP                 YES. BRANCH TO DO FINAL LOGIC.
*
* PREPARE TO BUILD NEXT CP SEGMENT. ADVANCE THE CP ADDR REG TO NEXT CP,
* AND MOVE THE COUNT FIELD AND S.A. POINTER TO NEXT S.A.
*
         LA    RCPBASE,CPSEGLEN(RCPBASE)   POINT TO NEXT SEGMENT.
         LA    R13,EIGHT(R13)           POINT TO NEXT S.A.         DM0I
R13      EQU   13                       13                         DM0I
*                                       THE COUNT FIELD OVERLAY IS NOT
*                                       VALID UNTIL RSTEPPER IS BUMPED
*                                       8 MORE.
*
CCW5     EQU   *                        SEARCH
*
         ST    RSTEPPER,SRCHADDR        PUT IN POINTER TO SEARCH ADDR.
*
CCW6     EQU   *                        TIC
*
         ST    RCPBASE,TICADDR          STORE ADDRESS OF CCW5.
         MVC   SRCHFLAG(B5),FLAGLEN     FLAGS, LEN, AND TIC OP CODE
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BNO   FEATAX                   BRANCH IF NO
         IF    DCBOPTCD,ISNOT=VALCHK,GOTO=PTRUPBY8
*
* VAL CHK CALLED. NEED A PARASITE SEARCH ADDRESS IN CCW6 (TIC) TO BE
* USED FOR RECONSTRUCTION OF CCW5 AT EOB TIME.
FEATAX   EQU   *
*
         ST    RSTEPPER,PARASITE        PUT IN SEARCH ADDRESS.
*                                       SEARCH OP CODE IS IMPLIED, AND
*                                       FILLED IN AT EOB.
*
PTRUPBY8 EQU   *
         LA    R13,EIGHT(R13)           POINT TO NEXT COUNT FIELD  DM0I
*                                       OVERLAY NOW APPLIES.
*
         B     CCW3                     CLOSE THE LOOP FOR BUILDING
*                                       CCW'S.
*
THRULOOP EQU   *                        CCW'S ARE BUILT. FINAL LOGIC TO
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    NOFET19                  BRANCH IF YES
         BAL   RD,SOP6RTA               GO BUILD READ SECTOR CCW
NOFET19  EQU   *
         USING DEB,RDEB
*
*
*
         IF    DEBOPATB,IS=OUTPUT,GOTO=NEXTIOB
*  MUST DROP RDEB BECAUSE  THE FORECORE DSECT LAYOUT PRODUCES A
* SMALLER OFFSET WITH RDEB FOR 'CHANPGM'. RIOB IS THE DESIRED REG.
         DROP  RDEB
         B     BUILDRCP                 TO BUILD  RECORD READ CHAN.DM0I
RCPREQD  EQU   *
         USING RCPOVLAY,RCPBASE
         LA    RSTEPPER,CNTFLD2         POINT TO SECOND SEARCH   Y02072
*                                       DIRECT COUNT FIELD       Y02072
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    NOFET25                  BRANCH IF YES
         LA    RSTEPPER,D16(RSTEPPER)   INCR OVER RPS COMMANDS
*                                       IF RPS IS SPECIFIED
NOFET25  EQU   *
BUILDRCP EQU   *
         LA    RCPBASE,CHANPGM          READ CP CONTIG. TO IOB.
         USING RCPOVLAY,RCPBASE
         USING DEB,RDEB
         ST    RCPBASE,IOBSTART-1
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICESW/O RCD READY
         BO    NOTRR2A                  BRANCH IF YES
         BAL   RD,SOP6STA               GO BUILD SET SECTOR CCW
         AH    RCPBASE,DBLWDLEN         INCR BASE FOR SET SECTOR
NOTRR2A  EQU   *
CCWA     EQU   *
         LA    RD,IOBSEEK+3             SEARCH ON IOB FDAD.
         ST    RD,SRCHCCW+ADDRESS       FILL IN SEARCH ADDRESS.
         MVI   SRCHCCW+OPCODE,SRCHEQ    SEARCH OP CODE .
CCWB     EQU   *
         LA    RD,SRCHCCW               GET SEARCH CCW ADDR
         ST    RD,TICCCW+ADDRESS        PUT IN TIC CCW
         MVC   SRCHCCW+FLAGS(B5),FLAGLEN FLAGS,LEN TIC OP CODE
         OI    TICCCW,SDTIC             TURN SRCH DIR FLAG
CCWC     EQU   *
         LA    RD,RKDCCW                POINT TO READ DATA CCW   Y02072
         ST    RD,SECNDTIC              SET UP TIC ADDRESS       Y02072
         MVI   SECNDTIC,TIC             MOVE IN TIC COMMAND      Y02072
         MVI   SECNDTIC+FLAGS,CC        COMAND CHAIN TO NEXT CCW Y02072
         MVI   SECNDTIC+CNTOFF,EIGHT    AND MOVE IN COUNT
         LA    RD,CNTFLD2               PT TO SECOND COUNT FIELD Y02072
         TM    JFCBMASK+6,JFCNRPS       ANY NON RPS DEVICES      Y02072
         BO    NOTRPS                   BRANCH IF YES            Y02072
         LA    RD,L'RRRDSEC(,RD)        INCR PAST RD SECTOR CCW  Y02072
*
*  IF THIS IS THE SECOND PHYSICAL IOB (FIRST LOGICAL IOB), THE   YM3176
*  CHANNEL PROGRAM ASSOCIATED WITH IT MUST BE ALTERED SO THAT    YM3176
*  THE SECOND TIC IS A READ COUNT TO KEEP THE CHANNEL PROGRAM    YM3176
*  FROM READING R0. THE FIRST I/O REQUEST FOR SEARCH DIRECT      YM3176
*  WOULD THEN OPERATE AS A SEARCH PREVIOUS REQUEST.              YM3176
*  IF ONLY ONE IOB IS BEING USED, ITS CHANNEL PROGRAM WILL BE    YM3176
*  ALTERED. THE CHAN PROG WILL BE RESET BY THE CHAN END APP.     YM3176
*
NOTRPS   EQU   *                                                 Y02072
         SR    RWK2,RWK2                PREPARE FOR IC INST      YM3176
         IC    RWK2,DCBNCP              NUM OF IOBS, ASSUME BSAM YM3176
         TM    DCBCIND2,DCBCNQSM        IS THIS QSAM             YM3176
         BZ    NUMCPOK                  NO, RWK2 CORRECT         YM3176
         IC    RWK2,DCBBUFNO            GET NUM IOBS, QSAM       YM3176
NUMCPOK  EQU   *                                                 YM3176
         CH    RWK2,ONEBUFER            IS THERE ONLY ONE IOB    YM3176
         BE    BLDRDCNT                 YES, BUILD READ COUNT    YM3176
         L     RWK2,DCBIOBA             GET ADDR OF FIRST IOB    YM1378
         LA    RWK2,0(RWK2)             CLEAR HI-BYTE FOR COMP   YM3176
         LA    RIOB,0(RIOB)             CLEAR HI-BYTE FOR COMP   YM3176
         CR    RIOB,RWK2                IS CURRENT IOB THE FIRST YM1158
         BE    BUILDTIC                 DON'T BLD RD COUNT IF SO YM1158
         L     RWK2,0(,RWK2)            GET ADDR OF SECOND IOB   YM1378
         LA    RWK2,0(,RWK2)            CLEAR HI-ORDER BYTE      YM1378
         CR    RIOB,RWK2                IS THIS IOB FOR RECORD 0 YM1378
         BNE   BUILDTIC                 BRANCH IF NOT            YM1378
*
BLDRDCNT EQU   *                                                 YM1158
         ST    RD,SECNDTIC              SET UP RD CNT DATA ADDR  Y02072
         MVI   SECNDTIC,READCT          MOVE IN RD COUNT COMMAND Y02072
*
BUILDTIC EQU   *                                                 YM1378
         IF    DCBCIND2,IS=QSAM,GOTO=TESTBUF
         MVI   RKDCCW+OPCODE,READKD     CCWE, USING THE QSAM DECISION.
         B     IOBAREQD                 GO AROUND NEXT
TESTBUF  MVI   RDCCW+OPCODE,READDATA    CCWE, USING THE QSAM DECISION.
*
IOBAREQD EQU   *
*
         OI    RDCCW+FLAGS,SILI         SET SILI FLAG           SA51532
         SH    RD,DBLWDLEN              BACK UP TO 1ST COUNT FLD Y02072
         ST    RD,RDCTCCW               PUT ADDR IN CCW
         MVI   RDCTCCW,READCT           READ COUNT
         MVI   RDCTCNT,EIGHT            BYTE COUNT EQS EIGHT
*
*
         CLI   DCBKEYLE,ZERO
         BNE   OPCODEOK                 OP CODE OK                 DM0I
         MVI   RDCCW+OPCODE,READDATA
OPCODEOK EQU   *
*
*
*
         LA    RF,RDCCW                 POINT TO CCW WHICH RECEIVES
         BAL   RE,GETBUFAD              BUFFER ADDRESS.
*
* IF RCD READY FEATURE USED BUILD A READ SECTOR COMMAND
*
         OI    RDCCW+FLAGS,CC           TURN ON COMMAND CHAIN
NOSILIX  EQU   *
*
* MUST DROP RIOB AND RDEB TO USE RCORE
         DROP  RIOB
         DROP  RDEB
*
         TM    JFCBMASK+D6,NORCDRY      DONT BUILD A RD SECT COM
         BO    NOFET29                   IF RPS IS NOT FEATURED
         USING FORCORE,RCORE            OPEN WKAREA              S21042
         L     RD,DXCCW11               GET THETA ADDR           Y02072
         ST    RD,RRRDSEC               PUT IN CCW
         OI    RDCTFLGS,CC              CMND CHAIN
         MVI   RRRDSCNT,ONE             SET BYTE COUNT TO ONE
         MVI   RRRDSEC,RDSC             PUT IN CCW CMND
         DROP  RCORE
NOFET29  EQU   *
         USING SAMSIOB,RIOB
NEXTIOB  EQU   *                        TEST FOR ANOTHER IOB TO BE
*                                       BUILT.
         BCTR  RUCB,RE                  DECR IOB COUNT
         LTR   RUCB,RUCB                HAVE ALL IOBS BEEN BUILT
*                                       FLAGGED.
         BNP   ALLBUILT                 YES BRANCH TO CLOSE IOB
*                                      CHAIN AND THEN DO WTG LOGIC.
* MORE IOB'S TO BE BUILT.
         LA    RD,EIGHT(RSTEPPER)       NEXT IOB STARTS AFTER LAST
*                                       COUNT FLD OF THE PREVIOUS.
         O     RD,LINK                  FORWARD CHAIN TO NEXT IOB.
*                                       OR'ING PRESERVES THE FLAG.
         ST    RD,LINK                  STORE THE PREPARED LINK FIELD.
*
         LR    RIOB,RD                  NOW HAVE ADDRESSABILITY FOR THE
*                                       NEXT IOB.
*
         B     BUILDIOB                 GO BACK AND BUILD IT.
*
ALLBUILT EQU   *
         MVC   LINK+1(3),DCBIOBA+1      LINK LAST IOB TO THE FIRST.
*
*
         DROP  RIOB
*******************  WTG LOGIC GOES HERE. **********************
*
STOPSOP6 EQU   *
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         L     RCORE,4(RWTGC)           GET WORK AREA ADDRESSABILITY.
         USING FORCORE,RCORE            OPEN WKAREA              S21042
         OI    FCAOPEN2,FCAOIOBC        IOBS COMPLETED           YM7595
         L     RPAR,DXREGSAV            RESTORE REG CONTENTS     Y02072
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,LOADEXEC        GET LOAD EXEC ID       @Z30TSCF
         TM    DCBRECFM,X'80'           VARIABLE RECORD FORMAT    22688
         BO    RELOOP                   NO,BRANCH                 22688
         MVC   WTGIDTTR,OPENVREC        YES LAOD IGG01916      @Z30TSCF
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURRENT WTG ENTRY.
         LA    RPARC,PLOFF(0,RPARC)     INCREMENT CURRENT DCB ENTRY PTR
         CLC   0(2,RWTGC),AMIDCNST      IS THIS RTN NEEDED AGAIN?
         BCR   EGP2,RBASE               RETURN TO OPEN             DM0I
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE?
         BC    7,RELOOP                 NO, CHECK NEXT ENTRY.
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINIT. WTG LIST PTR.
ZCHEK    CLI   0(RWTGC),X'00'           IS THIS ENTRY COMPLETE?
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL.
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY.
         LA    RPARC,PLOFF(0,RPARC)
         B     ZCHEK                    ZERO CHECK                 DM0I
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
* END WTG LOGIC
*
* SET SECTOR BUILD RTN
*
SOP6STA  EQU   *
*
         L     RE,DXCCW11               GET THETA ADDR
         ST    RE,D0(RCPBASE)           PUT IN CCW
         OI    FLAGS(RCPBASE),CC        TURN ON CMND CHAIN
         MVI   CNTOFF(RCPBASE),B1       SET BYTE COUNT TO ONE
         MVI   D0(RCPBASE),SETSC        PUT IN SET SECT CMND
         BR    RD                       RETURN
*
* READ SECTOR BUILD ROUTINE
*
         USING WCPMAP,RCPBASE
SOP6RTA  EQU   *
         L     RE,DXCCW11               GET THETA ADDR           Y02072
         ST    RE,WRSADDR               PUT IN CCW
*
         OI    NULLFLAG,CC              TURN ON PREVIOUS CCW CMND
*                                       CHAIN
         MVI   WRSCNT,B1                SET BYTE COUNT TO ONE
         MVI   WRSCMND,RDSC             PUT IN CCW CMND
         BR    RD                       RETURN
         DROP  RCPBASE
*
GETBUFAD EQU   *
         IF    DCBCIND2,ISNOT=QSAM,GOTO=RETURN
         L     RWK3,DCBBUFCB            ADDR OF BUF CNTRL BLK    YM7595
         USING BCBLK,RWK3
         L     RBUFADR,BCBBUFPT         ADDR OF NEXT AVAIL BUF   YM7595
         LTR   RBUFADR,RBUFADR          IS THERE AN ADDRESS      Y02072
         BC    NOTZERO,AVAIL            BRANCH IF BUFF AD NOT 0.
         L     RPAR,DXREGSAV            RELOAD REG FOR PROB DET  YM2424
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         DMABCOND OABD062,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES  S21042X
                                        CALL PROBLEM DETERMINATION     X
                                        TO ISSUE 013 ABEND
         B     TCTLRTN                  GO XCTL                  S21042
         USING CCW,RF                                            Y02072
AVAIL    STCM  RBUFADR,B'0111',CCWADDRB  BUFFER ADDR TO CCW      Y02072
         MVC   CCWBYTE,DCBBLKSI         INIT CCW LENGTH
         USING BUFFER,RBUFADR
         MVC   BCBBUFAD,BUFNXPTB        UPDATE TO NEXT ABAIL BUF YM7595
         DROP  RF,RWK3,RBUFADR                                   Y02072
RETURN   LR    RF,RE
         BR    RF                       EXIT                       DM0I
*
ONEBUFER DC    H'1'                     TO TEST NUM OF BUFFERS   YM3176
DBLWDLEN DC    H'8'                     LENGTH OF A DOUBLE WORD.
VALCKLEN DC    H'32'                    VALIDITY CHK CP LENGTH.
FLAGLEN  DC    X'40'                    COMMAND CHAIN FLAG.
         DC    X'00'                    SPACER
         DC    H'5'                     LENGTH OF A 'CCHHR'.
         DC    X'08'                    TIC COMMAND CODE
*
*
* WTG CONSTANTS AND EQUATES.
*
WAOFF    EQU   32
PLOFF    EQU   4
WGOFF    EQU   8
OPIDCNST DC    C'0S'                    ID                         DM0I
AMIDCNST DC    C'9K'                    THIS ID
LOADEXEC DC    C'13',VL3(IGG01913)    TO LOAD ACCESS METH RTNS @Z30TSCF
OPENVREC DC    C'16',VL3(IGG01916)      FOR VAR RECS           @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROB DETERMINATION     @Z30TSCF
*
* END WTG CONSTANTS.
*
         DS    0H                       ALIGN PATCH AREA TO H.W. Y02072
PATCH    DC    50X'0'                   PATCH AREA               YM4640
END      EQU   *                        END OF MODULE            Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         EJECT
         IGGBCB TYPE=SAM
         EJECT
         IHACCW  DSECT=YES                                       Y02072
         EJECT
*
* READ CHANNEL PROGRAM OVERLAY.  CCW FIELDS ARE ACCESSED BY ABSOLUTE
* OFFSETS FROM THE CCW NAME.
*
RCPOVLAY DSECT
SRCHCCW  DS    D                        SEARCH CCW                 DM0I
*        TIC    (CCWB)
TICCCW   DS    D                        TIC                        DM0I
*        READ DATA WITH SKIP  (CCWC)
SECNDTIC DS    D                        CCWD
*        SECOND TIC CCW
RDCCW    DS    D                        READ CCW
*        READ KEY AND DATA CCW
RKDCCW   EQU   RDCCW                    (ALTERNATE ADDR)
*
RDCTCCW  DS    F                        FIRST WORD OF RD CNT
RDCTFLGS DS    XL1                      FLAG FIELD
         DS    CL2                      FILLER
RDCTCNT  DS    XL1                      BYTE CNT
*
CNTFLD1  DS    0D                       FIRST COUNT FIELD        Y02072
RRRDSEC  DS    0D,F                     READ SECTOR CCW          Y02072
RRRDSFLG DS    XL1                      FLAG FIELD
         DS    CL2                      FILLER
RRRDSCNT DS    XL1                      COUNT FIELD
*
CNTFLD2  DS    D                        SECOND COUNT FIELD       Y02072
* FOLLOWING IS A MAP OF A WRITE CHANNEL PROGRAM (WCP) SEGMENT.
*
WCPMAP   DSECT
*
*        SEARCH  (CCW1 OR 5)
*
SRCHADDR DS    F                        SEARCH                     DM0I
SRCHOPCD EQU   SRCHADDR                 OP CODE IS HI ORDER BYTE.
SRCHFLAG DS    XL1                      SEARCH FLAG                DM0I
         DS    CL2                      FLAG                       DM0I
SRCHLEN  DS    XL1                      LENGTHS NORMALLY FIT IN 1 BYTE.
*
*        TIC   (CCW2 OR 6)
*
TICADDR  DS    F                        TIC                        DM0I
TICOPCD  EQU   TICADDR                  TIC  OP                    DM0I
UNUSED   DS    F                        ONLY REQUIRES BITS 37-39 = 0.
PARASITE EQU   UNUSED                   MAY BE USED TO STORE AN ADDRESS
*                                       BUT THE ABOVE RESTRICTION
*                                       LIMITS THE OP CODES THAT MAY
*                                       BE STORED IN THE HI BYTE.
*
*        WRITE  (CCW3)
*
COUNTADR DS    F                        COUNT FIELD ADDRESS.
WRTOPCD  EQU   COUNTADR
WRTFLAG  DS    XL1                      FLAG FIELD.
         DS    CL2                      SPACER.
COUNTLEN DS    XL1                      COUNT FIELD LENGTH (NORMALLY 8)
*
*        NULL OP CODE  (CCW4)           OP PROPAGATED FROM WRITE CCW.
*
DATAADDR DS    F                        ADDRESS OF BLOCK OF DATA TO BE
*                                       WRITTEN.
NULLOPCD EQU   DATAADDR                 USED AS A FLAG TO SIGNAL LAST
*                                       SEGMENT.
NULLFLAG DS    XL1                      NULL FLAG                  DM0I
         DS    XL1                      SPACER.
DATALEN  DS    H                        2 BYTES HOLDS DATA LENGTH.
*
* READ SECTOR COMMAND IF NEEDED
*
WRSCMND  DS    F                        READ SECTOR COMMAND
WRSADDR  EQU   WRSCMND                  SECTOR ADDR
WRSFLAG  DS    XL1                      FLAG BYTE
FILLER   DS    CL2                      FILLER
WRSCNT   DS    XL1                      COUNT FIELD
*
*
* FOLLOWING IS THE VALIDITY CHECK CHANNEL PROGRAM OVERLAY.
*
VCMAP    DSECT
*        SEEK  (CCW7)
SEEKADDR DS    F                        SEEK ADDRESS               DM0I
SEEKOPCD EQU   SEEKADDR
SEEKFLAG DS    XL1                      FLAG                       DM0I
         DS    CL2                      COUNT                      DM0I
SEEKLEN  DS    XL1                      SEEK LENGTH                DM0I
*
*        SEARCH (CCW8)                  LABELS PREFIXED BY 'VC' (VAL
VCSRCH   EQU   *                        CHECK).
VCSRCHAD DS    F                        SEARCH ADDRESS             DM0I
VCSRCHOP EQU   VCSRCHAD                 SEARCH OP                  DM0I
VCSRCHFL DS    XL1                      FLAGS.
         DS    CL2                      COUNT                      DM0I
VCSRCHLE DS    XL1                      LENGTH.
*
*        TIC   (CCW9)
VCTICAD  DS    F                        TIC                        DM0I
VCTICOP  EQU   VCTICAD                  TIC ADDRESS                DM0I
NOTUSED  DS    F                        NOT USED                   DM0I
*
*        READ DATA (CCW10)
VCRDAD   DS    F                        RECORD ADDRESS             DM0I
VCRDOP   EQU   VCRDAD                   RECORD ADDR.               DM0I
VCRDFLAG DS    XL1                      NORMALLY SKIP.
VCRDLEN  DS    FL3                      RECORD LENGTH              DM0I
*
* FOLLOWING IS AN OVERLAY OF THE COUNT FIELD.
*
COUNTFLD DSECT
*
CYLINDER DS    H                        CYLINDER ADDRESS (CC).
HEAD     DS    H                        HEAD ADDRESS     (HH).
RECORD   DS    XL1                      RECORD NUMBER    (R).
KEYLENTH DS    XL1                      KEY LENGTH       (KL).
DLDL     DS    H                        DATA LENGTH      (DLDL).
*
* END COUNT FIELD. (CCHHRKDD)
*
*
* DIRECT ACCESS DEVICE TABLE OVERLAY
*
DEVTAB   DSECT
DEVSIZE  DS    F                       MAX SIZ FOR DEVICE.
TRKCAP   DS    H                       TRACK CAPACITY.
OVERI    DS    XL1                     OVERHEAD FOR NOT-LAST RECORD.
OVERL    DS    XL1                     OVERHEAD FOR LAST RECORD.
OVERK    DS    XL1                     OVERHEAD REDUCTION FOR NON-KEY
*                                      RECORDS.
DEVFLAG  DS    XL1                      DEVICE FLAG                DM0I
TOLER    DS    H                       TOLERANCE/512 USED FOR VARIABLE
*                                       GAP LENGTH CALCULATIONS.
* END DEVTAB OVERLAY.
*
*
         DCBD  DSORG=PS
*
*
*
*
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
*
* IOB OVERLAY
* THE FORECORE DSECT IOB OVERLAY IS USED WITH THE FOLOWING ADDITIONS-
*
* BSAM/BPAM/QSAM IOB EXTENSION-
SAMSIOB  EQU   DXIOB-8                  START OF SAM'S IOB.
LINK     EQU   SAMSIOB                  FORWARD CHAIN FIELD (TO NEXT
*                                       IOB).
FLAG     EQU   LINK                     HI BYTE OF LINK USED AS FLAG.
ECB      EQU   DXIOB-4                  ECB                        DM0I
* END EXTENSION DEFINITIONS
*
IOBSEEK  EQU   DXDAADDR                 SEEK ADDRESS               DM0I
CHANPGM  EQU   DXDAADDR+8               START OF CHANNEL PROGRAM.
*                                       LENGTH MAY VARY.
* END IOB DEFINITIONS.
*
DEB      EQU   DXDEB
DEBOPATB EQU   DXDEBSYS                 DEB ADDRESS                DM0I
         EJECT
FORCORE  DSECT
         IHAFCAUD ORG=YES
         END
