    TITLE  'IGG0196K - OPEN EXECUTOR - STAGE 2 - UNIT RECORD'
IGG0196K CSECT
*MODULE NAME - IGG0196K                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 2 RELEASE 2 DELETIONS
*000120,000500,011400,117420,117726-117800,119620,119788-120600  Y02072
*121620,121720,129000,129800                                     Y02072
*                                                               YM02508
*                                                                YM7889
*
*          VS 2 RELEASE 3 DELETIONS
*                                                              @Z30TSMI
*
*          VS 2 RELEASE 4 DELETIONS
*                                                              @Z40MSMI
*
*          RELEASE 21 DELETIONS                                       *
*0000                                                           A45221
*0000066300                                                      M0527
*0000                                                            M0053
*D92100-92200,92600,94600                                      SA52300
*0000132400-134200                                               M0091
*D115400,115600                                                 SA53193
*                                                               SA67354
*
*STATUS CHANGE LEVEL  002
*
*FUNCTION/OPERATION - SETS UP CORE FOR IOB'S. (GETMAIN IN MOD IGG0191G
*                     GOT CORE - ADDR PASSED IN DCBIOBA).
*                   - BUILDS CCW'S
*                   - LINK'S IOB'S
*                   - SETS CODES IN DCBCNTRL INDICATING WHAT ROUTINES
*                     ARE TO BE LOADED BY FOLLOWING OPEN EXECUTORS.
*
*     THIS MODULE CREATED IN RELEASE 21 BY SPLIT OF IGG0191G.
*
*ENTRY POINTS: ENTERED FROM IGG0191G
*
*
*INPUT: SEE DESCRIPTION OF REGISTERS, DCB(USERS).
*
*OUTPUT: SEE DESCRIPTION OF REGISTERS, IOB(USERS), DCB(USERS).
*
*EXTERNAL ROUTINES: IFG019RA.
*
*EXITS: NORMAL: IGG01910, IGG01915 TO LOAD
*                 ACCESS METHOD ROUTINES
*     : ABNORMAL: NONE
*
*MACROS : ACTION : MODESET, IECRES
*
*TABLES/WORKAREAS-  SEE DSECTS AT END OF LISTING
*
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY
*            UNLESS OTHERWISE SPECIFIED, SUPERVISOR STATE
*
*NOTES: THIS MODULE DEALS ONLY WITH UNIT RECORD
*       USES CONTENTS OF HIGH ORDER BYTE OF DCBIOBA FIELD (NUMBER
*       OF IOB'S) STORED BY IGG0191G.
*
*
***********************************************************************
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RWK1     EQU   9         WORK REGISTER                           Y02072
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RB       EQU   12        WORK REG1  **
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RE       EQU   0         WORK REG5
*
*
***********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
PRINTER  EQU   X'48'
*
*********************************************************************
*
*          CCW COMMAND CODES
*
PRTSPC1  EQU   X'09'                    PRINT AND SINGLE SPACE
STK2     EQU   X'40'                    STACKER 2 MODIFIER
COLBIN   EQU   X'20'                    COLUMN BINARY MODIFIER
EJCT     EQU   X'80'                    EJECT MODIFIER
NOFD     EQU   X'C0'                    NO FEED MODIFIER
WRITE    EQU   X'01'                    WRITE COMMAND
READ     EQU   X'02'                    READ COMMAND
NOP      EQU   X'03'                    NOP COMMAND
SCAN     EQU   X'73'                    SCAN CMD FOR 3886       XL03127
*
*******************************************************************
*   GENERAL EQUATES
*
OCRDATA  EQU   150                      150 BYTE CNT FOR READ   XL03127
ECBNORM  EQU   X'7F'                    NORMAL POST CODE
CCWCNT02 EQU   2                        FOR 3886 SCAN CMD       XL03127
CHPGMLEN EQU   3                        NO. OF DW'S IN CHAN PGM XL03127
*********************************************************************
         EJECT
*
*
*
*
         BALR  RBASE,0                  SET BASE                   DM0I
         USING SOP5,RBASE
         USING WTG,RWTG
         USING WTGENTRY,RWTGC
         USING PARML,RPARC
SOP5     EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0196K'              MODULE NAME              Y02072
         DC    C'@Z40MSMI'              LAST SHIP CODE         @Z40MSMI
         DC    C'01/31/75'              LAST DATE MODIFIED     @Z40MSMI
BEGIN    DS    0H
*
         SR    RC,RC                    FOR CLEARING BUFFER      M0527
*                                           NUMBER FROM DCBIOBA
         SR    RUCB,RUCB                INITIALIZE REGISTER
         L     RDCB,PARDCBAD            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         USING IHADCB,RDCB
         L     RCORE,WTGCORE-1          GET WRK AREA ADDRESS
         USING FORCORE,RCORE
         IC    RUCB,DCBIOBA             NUMBER OF IOB'S (FROM    M0527
*                                       IGG0191G )               M0527
         STC   RC,DCBIOBA               CLEAR HIGH ORDER BYTE OF M0527
*                                           DCBIOBA
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         L     RB,DCBIOBA               GET IOB ADDRESS
         LR    RC,RB                    SET UP WORK REGS
         LR    RD,RB
IOBLOOP  EQU   *                        START OF IOB LOOP
         USING IOBQSAMN,RD
         ST    RB,IOBNIOBA              LINK THIS IOB TO LAST
         LR    RD,RB                    UPDATE WORK REG
         LA    RB,IOBNECB               POINT TO ECB
         OI    IOBNECB,ECBNORM          SET ECB COMPLETE WITHOUT ERROR
         ST    RB,IOBECBPT              STORE ECB IN POINTER
         LA    RB,IOBEXTEN              POINT TO CHANNEL PROGRAM (CP)
         USING CCW,RB
         ST    RB,IOBSTART              STORE CP ADDRESS IN IOB
         L     RWK1,DXUDCBAD            GET USER DCB ADDRESS     Y02072
         ST    RWK1,IOBDCBPT            DCB ADDR TO IOB          Y02072
         MVI   IOBINCAM+1,1             STORE INCREMENT AMOUNT
*
*
         MODESET  EXTKEY=DATAMGT       BACK TO DATA MANAG KEY    Y02072
         LR    RC,RB                    UPDATE REG
         TM    PAROPT,PAROUTPT          IS DCB FOR OUTPUT
         BNZ   SOP531                   YES BRANCH
         TM    DCBMACF1,DCBMRCRL        IS CNTRL MACRO USED FOR INPUT
         BZ    SOP532                   NO BRANCH
*
* PROVIDE AUTOMATIC UNBLOCKING FUNCTION FOR QSAM, UR, OUTPUT
*
SOP531   EQU   *
         TM    DCBCIND2,DCBCNQSM        QSAM BEING USED          SM5485
         BZ    SOP531B                  NO, BRANCH AROUND        SM5485
         TM    DCBRECFM,DCBRECBR        BLOCKED RECORDS         SA67354
         BZ    SOP531B                  NO, BYPASS UNBLOCKING   SA67354
         TM    DCBCIND2,DCBCNBFP        DID OPEN BUILD BUFFERS   SM5485
         BO    SOP531B                  YES, FUNCTION ALREADY    SM5485
*                                         PROVIDED
         TM    DCBRECFM,DCBRECU         UNDEF FORMAT            SA67354
         BNM   SOP531B                  YES, BYPASS UNBLOCKING  SA67354
         TM    DCBRECFM,DCBRECV         VARIABLE FORMAT          SM5485
         BO    SOP531A                  YES, DON'T CHANGE BLKSZ  SM5485
         MVC   DCBBLKSI,DCBLRECL        ADJ BLKSZ TO LRECL       SM5485
SOP531A  NI    DCBRECFM,X'FF'-DCBRECBR  TURN OFF BLOCKED REC BIT SM5485
         OI    DCBCIND1,DCBCNBRM        INDICATE TO CLOSE EXECS  SM5485
*                                         THAT IT MUST RESTORE   SM5485
*                                         BLK'D REC BIT          SM5485
SOP531B  EQU   *                        NO ADJUSTMENTS NECESSARY SM5485
         TM    DCBRECFM,DCBRECCA        ASA CHARACTERS USED
         BZ    NOTASA                   NO,BRANCH
         MVI   DCBRTN4,RTN4             MOVE ID                    DM0I
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         B     AROUND                   AROUND                     DM0I
NOTASA   MVI   DCBRTN4,RTN3             MOVE ID                    DM0I
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
AROUND   OI    IOBFLAG1,IOBCMDCH        SET CC FLAG IN IOB
*
***********         A CNTRL(NOP) CCW IS NEEDED     ***********
*
         MVI   CCWCOMCD,NOP             STORE NOP CMD BYTE
         OI    CCWFLGS,CCWCC            SET CMD CHAIN ON
         MVI   CCWBYTE+1,1              STORE COUNT OF ONE
         LA    RB,CCW+L'CCW             POINT TO NEXT CCW
*
*
         MODESET  EXTKEY=DATAMGT       BACK TO DATA MANAG KEY    Y02072
SOP532   EQU   *
         MVI   DCBWCPO,IOBEXTEN-IOBQSAMN  OFFSET TO CHANNEL PROGRAM
         MVC   DCBWCPL(3),DCBWCPO
         MVI   DCBWCPL,X'02'            CHAN PROG IN DOUBLE WORDS
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         MVI   IOBINCAM+1,0             CLEAR INCREMENT AMOUNT
         CLI   DCBDEVT,DCBDVCP1         IS THIS A 3525            M0053
         BE    SOP533                   YES, BRANCH               M0053
         TM    DCBDEVT,PRINTER          DCB USING PRINTER
         BO    SOP560                   YES BRANCH
         CLI   DCBDEVT,DCBDVOR9         IS DEVICE A 3886        XL03127
         BE    SOP570                   YES,BUILD 3886 CH PGM   XL03127
*
SOP533   EQU   *                                                 M0053
         TM    DCBMODE,DCBMODEC         COLUMN BINARY USED RDR/PUN
         BZ    SOP534                   NO BRANCH
*
         OI    CCWCOMCD,COLBIN          SET MODE2 MODIFIER IN CMD BYTE
SOP534   EQU   *
         TM    PAROPT,PAROUTPT          DCB FOR OUTPUT
         BZ    SOP535                   NO BRANCH
*
         OI    CCWCOMCD,WRITE           SET WRT CMD BIT IN CCW
         OI    CCWFLGS,CCWSLI           SET SLI FLAG ON
*
         CLI   DCBDEVT,DCBDVCRP         1442 USED
         BNE   SOP537                   NO BRANCH
*
         OI    CCWCOMCD,EJCT            SET EJECT BIT ON
         B     SOP537                   GO ON                      DM0I
*
SOP535   EQU   *
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBRTN4,RTN2             EGP2 ID NUMBER
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         OI    CCWCOMCD,READ            SET RD CMD BIT IN CCW
         TM    DCBMACF1,DCBMRCRL        IS CNTRL MACRO USED
         BZ    SOP537                   NO BRANCH
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,IOBEXTEN-IOBQSAMN+L'CCW SET RD CCW OFFSET
         MVI   DCBRTN1,RTN7             CARD RDR CNTRL ID
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
*
*
         CLI   DCBDEVT,DCBDVCRP         1442 USED
         BE    SOP538                   YES BRANCH
*
         OI    CCWCOMCD,NOFD            SET NO FEED MODIFIERS
         B     SOP538                   GO ON                      DM0I
*
SOP537   EQU   *
         TM    DCBSTACK,DCBSTCK2        STACKER 2 NEEDED
         BZ    SOP538                   NO BRANCH
*
         OI    CCWCOMCD,STK2            SET STACKER 2 MODIFIER ON
*
SOP538   EQU   *
*
         OI    CCWFLGS,CCWSLI           SET SLI FLAG IN RD CCW
*
         TM    DCBCIND2,DCBCNQSM        DCB USING QSAM
         BO    IOBEND                   YES BRANCH
*
         TM    PAROPT,PAROUTIN          DCB FOR OUTPUT-INPUT-OUT/IN
         BNM   IOBEND                   YES BRANCH
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVC   DCBRTN3,DCBRTN4          MOVE WRT EOB RT ID OVER
         MVI   DCBRTN4,RTN2             STORE EGP2 ID IN RD EOB SLOT
         MVI   DCBOFFSR,IOBEXTEN-IOBQSAMN+2*L'CCW SET UP READ OFFSET
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         MVC   CCWCOMCD+L'CCW,CCWCOMCD  STORE MODIFIERS
         OI    CCWCOMCD+L'CCW,READ      SET RD BIT IN CMD BYTE
         NI    CCWCOMCD+L'CCW,X'FF'-WRITE TURN OFF WRT BIT
         OI    CCWFLGS+L'CCW,CCWSLI     SET SLI FLAG IN WRT CCW
         NI    CCWCOMCD,X'FF'-EJCT      TURN OFF EJECT BIT IN WRT CCW
         LA    RB,CCW+L'CCW             UPDATE CP BY 1 CCW
         B     IOBEND                   GO BUILD NEXT IOB
*
*
*
**********************************************************************
*
*        WHEN A 3800 PRINTER HAS OPTCD=J SPECIFIED AN EXTRA NOP MUST
*        BE BUILT.  IT IS USED TO SELECT THE TRANSLATE TABLES BY
*        THE END OF BLOCK MODULES.
*
SOP560   EQU   *
         CLI   DCBDEVT,DCBDVPR5         IS THIS A 3800         @Z40MSMI
         BNE   SOP565                   NO - CONTINUE          @Z40MSMI
         TM    DCBOPTCD,DCBOPTJ         IS OPTCD=J SPECIFIED   @Z40MSMI
         BZ    SOP565                   NO - CONTINUE          @Z40MSMI
*        AN EXTRA NOP MUST BE BUILT
         MVI   CCWCOMCD,NOP             SET COMMAND CODE       @Z40MSMI
         MVI   CCWFLGS,CCWCC            TURN ON CHAIN COMMAND  @Z40MSMI
         MVI   CCWBYTE+1,1              SET COUNT TO ONE       @Z40MSMI
*        SET DCB FIELDS RELEVANT TO OPTCD=J
         MODESET EXTKEY=DATAMGT         GET IN DM KEY          @Z40MSMI
         NI    DCBPRBYT,X'FF'-DCBTRCID  ZERO ID BYTE           @Z40MSMI
         MVI   DCBWCPL,3*L'CCW/L'CCW    LENGTH OF CP           @Z40MSMI
         MVI   DCBOFFSW,IOBEXTEN-IOBQSAMN         OFFSET TO CP @Z40MSMI
         MODESET KEYADDR=DXUKEY,WORKREG=9 BACK TO CALLER KEY   @Z40MSMI
         LA    RB,CCW+L'CCW             UPDATE POINTER         @Z40MSMI
SOP565   EQU   *                                               @Z40MSMI
         MVC   CCWCOMCD,DCBPRTSP        STORE PRINTER MODIFIERS
         TM    DCBRECFM,DCBRECCA        ASA CHARACTERS USED
         BZ    AA                       BRANCH IF NO            SA53193
*
*              FOR A 2245, USE THE '09' CMD, NOT THE '01'       SA53193
*
         CLI   DCBDEVT,DCBDVPR4         DEVICE A 2245?          SA53193
         BE    AA1                      YES, GO USE 09 CMD      SA53193
         MVI   CCWCOMCD,WRITE           ASSUME SUPPRESSION AFTER PRINT
AA       EQU   *                        COME HERE                  DM0I
         CLI   CCWCOMCD,0               HAVE THEY BEEN SPECIFIED
         BNE   AB                       YES,BRANCH                 DM0I
AA1      EQU   *                                                SA53193
         MVI   CCWCOMCD,PRTSPC1         ASSUME 1 SPACE AFTER PRINT
AB       EQU   *                        COME HERE                  DM0I
         OI    CCWFLGS,CCWSLI           SET SLI FLAG IN CCW
         TM    DCBMACF2,DCBMRCTL        PRINTER CNTRL NEEDED
         BZ    AC                       NO,BRANCH                  DM0I
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBRTN1,RTN8             CNTRL ID NUMBER
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
AC       EQU   *                        COME HERE                  DM0I
         B     IOBEND                   BACK                       DM0I
*
SOP570   EQU   *              BUILD CH PGM FOR OCR 3886         XL03127
*                             (NOP,SCAN,READ);IOB/BUFR CONTIG.  XL03127
         L     RC,DXUDCBAD              ADDR OF USER'S DCB      YM02508
         LA    RC,DCBLNNUM-IHADCB(,RC)  ADDR OF LINE NO. IN DCB YM02508
         ST    RC,CCWADDRA              STORE INTO SCAN CMD     XL03127
         MVI   CCWCOMCD,SCAN            SCAN CMD OP             XL03127
         OI    CCWFLGS,CCWCC            CMD CHAIN               XL03127
         MVI   CCWBYTE+1,CCWCNT02       2 BYTE COUNT            XL03127
*                                                               XL03127
         LA    RB,CCW+L'CCW             POINT TO NEXT CCW       XL03127
         LA    RC,CCW+L'CCW             PT TO CONTIG BUFR       XL03127
         ST    RC,CCWADDRA              BUFR ADDR INTO READ CCW XL03127
         MVI   CCWCOMCD,READ            READ CMD OP             XL03127
         OI    CCWFLGS,CCWSLI           FLAGS                   XL03127
         MVI   CCWBYTE+1,OCRDATA        BYTE COUNT 150          XL03127
*
         LA    RB,OCRDATA+2(RB)         ADD BUFR LEN TO PTR     XL03127
IOBEND   EQU   *                        END OF IOB LOOP
         LA    RB,CCW+L'CCW             ADDRESS OF NEXT IOB
         BCT   RUCB,IOBLOOP             GO BUILD MORE IOBS IF NEEDED
         DROP  RB
         L     RB,DCBIOBA               GET FIRST IOB ADDR
         ST    RB,IOBNIOBA              LINK FIRST IOB TO LAST
         DROP  RD
         USING IOBQSAMN,RB
         OI    IOBNFLG1,IOBFIRST        SET INDICATOR
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         TM    JFCBTSDM,JFCSDS          SYSIN OR SYSOUT
         BZ    SOP5190                  NO BRANCH                Y02072
         CLI   DCBRTN1,RTN9             CONTROL SPECIFIED
         BNE   SOP5190                  NO BRANCH                Y02072
*
         MVI   DCBRTN2,RTN10            STORE DUMMY ID
SOP5190  EQU   *                        SET UP NEXT EXEC ID    @Z30TSMI
         CLI   DCBDEVT,DCBDVOR9         IS DEVICE A 3886        XL03127
         BNE   NEXT                     NO, BRANCH AROUND       XL03127
         MVI   DCBRTN1,RTN25            YES,SET CNTRL RTNE INDX XL03127
         MVI   DCBRTN4,RTN2             SET EOB RTNE INDX       XL03127
         MVI   DCBWCPL,CHPGMLEN         CH PGM LEN IN DW'S      XL03127
         MVI   DCBOFFSR,IOBEXTEN-IOBQSAMN+2*L'CCW OFF TO RD CCW XL03127
NEXT     MVC   WTGIDTTR,SOPSLDFT        XCTL TO LAOD 1910      @Z30TSMI
         TM    DCBRECFM,DCBRECF         FIX FORMAT                 DM0I
         BO    RELOOP                   YES, BRANCH                DM0I
         TM    DCBRECFM,DCBRECV+DCBRECD V OR D FORMAT RECORDS    S20038
         BZ    RELOOP                   NO, BRANCH                 DM0I
         MVC   WTGIDTTR,SOPSLDVT        XCTL TO LAOD 1915      @Z30TSMI
RELOOP   LA    RWTGC,WTGEND             INCREMENT CURR WTG ENTRY
         LA    RPARC,L'PARDCBAD(0,RPARC) INCR CURRENT DCB ENTRY PRTR
         CLC   WTGID,AMIDCNST           THIS RT NEEDED AGAIN
         BER   RBASE                    BACK TO OPEN CONTROL ROUTINDM0I
*
         CLC   WTGID,OPIDCNST           END OF TABLE
         BNE   RELOOP                   NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         DROP  RWTGC
         LA    RWTGC,WTGENTRY           REINITIALIZE WTG LIST PTR
         USING WTGENTRY,RWTGC
ZCHEK    CLI   WTGENTRY,0               ENTRY COMPLETE             DM0I
         BNE   TCTLRTN                  IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WTGEND             GET NEXT ENTRY
         LA    RPARC,L'PARDCBAD(0,RPARC) GET NEXT PARM
         B     ZCHEK                    ZERO CHECK                 DM0I
*
TCTLRTN  EQU   *
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSMI*
               MODID=WTGENTRY           GO TO NEXT ROUTINE     @Z30TSMI
**
*
*********************************************************************
*
OPIDCNST DC    C'0S'                    ID                         DM0I
AMIDCNST DC    C'6K'                   THIS MODULE
SOPSLDFT DC    C'10',VL3(IGG01910)      FOR FIXED FORMAT       @Z30TSMI
SOPSLDVT DC    C'15',VL3(IGG01915)      FOR VARIABLE FORMAT    @Z30TSMI
PATCH    DC    25H'0'                   PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
CVT      DSECT
         CVT
         EJECT
         DCBD    DSORG=PS
*
*        THIS TABLE IS USED IN STAGE 3 EXECUTORS TO LOAD FRONT END
*        ROUTINES.  THEY MUST CORRESPOND TO OFFSETS IN THE ACTUAL
*        TABLE ASSEMBLED INTO TO THE STAGE 3 EXECUTORS.
*
         ORG   DCBCNTRL
DCBRTN1  DS    X                        ROUTINE 1 AREA
DCBRTN2  DS    X                        ROUTINE 2 AREA
DCBRTN3  DS    X                        ROUTINE 3 AREA
DCBRTN4  DS    X                        ROUTINE 4 AREA
RTN1     EQU   1                        ROUTINE 1 ID
RTN2     EQU   2                        ROUTINE 2 ID
RTN3     EQU   3                        ROUTINE 3 ID
RTN4     EQU   4                        ROUTINE 4 ID
RTN5     EQU   5                        ROUTINE 5 ID
RTN6     EQU   6                        ROUTINE 6 ID
RTN7     EQU   7                        ROUTINE 7 ID
RTN8     EQU   8                        ROUTINE 8 ID
RTN9     EQU   9                        ROUTINE 9 ID
RTN10    EQU   10                       ROUTINE 10 ID
RTN25    EQU   25                       ROUTINE 25 ID
DCBDVPR4 EQU   X'4B'                    2245 DEVICE TYPE IN DCBDEVT
         EJECT
         IECDSECS  (MAIN,(IOB=NO)),IOB,WTG,PREFX,EXPAND=YES
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      ID OF NEXT MOD           Y02072
         EJECT
         IHACCW
         EJECT
         IGGPARML
         END
