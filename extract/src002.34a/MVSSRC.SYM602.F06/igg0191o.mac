 TITLE 'IGG0191O--STAGE 2 OPEN EXECUTOR FOR INPUT ON DA'
IGG0191O CSECT
*MODULE NAME - IGG0191O                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 1 RELEASE 3 DELETIONS/CHANGES
*                                                                XA2057
*          VS2 RELEASE 2 DELETIONS                               Y02072
*019800,307600-307800,312000,337000,467080,520000-522000,        Y02072
*530000-532000,651000,537000,540000,561000,568000,651000         Y02072
*                                                                YM7595
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*
*          RELEASE 20 DELETIONS                                       *
*3632107000-109000,179000,233000,310100-310400,314000-322000,    S20201
*3632353000-354000,382000-388000,402000-403000,416000,425000-    S20201
*3632438000,440000-449000,452000-453000,457000-459000,466000-    S20201
*3632467000,471000-475000,479100-479200,488000-489000,603000     S20201
*          RELEASE 21 DELETIONS                                       *
*0091042000,566000,589000-591000,613000-619000,651000,689000-    S21042
*0091690000                                                      S21042
*  REFER TO CODE FLAGGED XA2057                                 SA62781
*
*STATUS CHANGE LEVEL 003
*
*FUNCTION/OPERATION--FOR DCB'S BEING OPENED FOR INPUT
*      IT WILL LINK THE IOB'S AND INITIALIZE THEM.
*      IT WILL CONSTRUCT CHANNEL PROGRAMS NEEDED FOR PROPER EXECUTION.
*      IT WILL SET UP THE NUMBER OF EXTENTS NEEDED AND PLACE THE
*      ADDRESSES IN THE DCB AND IOB'S.
*
*      THIS MODULE WAS SPLIT FROM IGG0191D FOR RELEASE 19
*
*ENTRY POINTS--ENTERED FROM IGG0191D BY USE OF THE XCTL MACRO.
*
*INPUT--SEE DESCRIPTION OF REGISTERS, DCB(USERS).
*OUTPUT--IOB(USER), SEE DESCRIPTION OF THE REGISTERS, DCB(USERS)
*
*
*EXTERNAL ROUTINES--NONE.
*
*EXITS-NORMAL--XCTL TO IGG01915 TO LOAD ROUTINES
*
*EXITS-ERROR--XCTL TO PROB DET (IGG0196M) FOR WTP AND 013 ABEND
*            INSUFFICIENT BUFFERS AVAILABLE IN
*            BUFFER POOL TO SATISFY DCB BUFFER REQUIREMENTS       M1552
*
*MACROS-ACTION-MODESET, XCTL, XCTLTABL, DMABCOND                 Y02072
*
*MACROS-MAPPING-IECDSECS(DCB,IOB,WTG),IHACCW,IGGBCB,IHAFCAUD     Y02072
*
*TABLES/WORKAREAS-- WHERE TO GO TABLE  (WTG)
*
*   BYTE 0-7   NAME
*   BYTE 8-10  RELATIVE DISK ADDRESS (TTR) OF FIRST RECORD
*   BYTE 11    CONCATENATION NUMBER
*   BYTE 12    ZERO
*   BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR
*              ALIAS INDICATOR 1 BIT
*              NUMBER OF TTRS IN USERS DATA FIELD  2 BITS
*   BYTE 14-16 TTR OF FIRST TEXT RECORD
*   BYTE 17    ZERO
*   BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*   BYTE 20    TRANSLATION TABLE
*   BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*   BYTE 22-23 ATTRIBUTES
*   BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*   BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*   BYTE 29    LENGTH OF WTG TABLE  (IN DOUBLE WORDS)
*   BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*   BYTE 32-34 IDTTR OF EXECUTOR FOR 1ST DCB
*   BYTE 35    WORKAREA ADDRESS FOR 1ST DCB
*   BYTE 36-39 TABLE OF IDTTR'S
*
*        32+N(8)   IDTTR OF EXECUTOR FOR NTH DCB      (3 BYTES)
*                  WORKAREA ADDRESS FOR NTH DCB       (1 BYTE)
*                  IDTTR OF LAST ROUTINE  LOAD        (3 BYTES)
*                  NOT USED                           (1 BYTE)
*
*
***********************************************************************
*ATTRIBUTES--REENTRANT, REUSABLE, SUPERVISOR STATE,              Y02072
*            RUNS IN USER KEY UNLESS OTHERWISE SPECIFIED         Y02072
*
*
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RDCB     EQU   2                        DCB REGISTER
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        WORK AREA ADDRESS
RPAR     EQU   5                        TOP OF PARAMETER LIST
RWTG     EQU   6                        TOP OF WTG TABLE
RPARC    EQU   7                        CURRENT PARAMETER
RWTGC    EQU   8                        CURRENT TRANS LOAD
RBUFADR  EQU   9                        MAINTAINS ADDR OF NEXT   Y02072
*                                         AVAILABLE BUFFER       Y02072
RUCB     EQU   10                       COUNTER IN IOB GENERATION
RDEB     EQU   11                       DEB ADDRESS
RB       EQU   12                       WORK REG1  **
RC       EQU   13                       WORK REG2  **  IOB GENERATION
RWK1     EQU   RC                       WORK REGISTER            Y02072
RD       EQU   14                       WORK REG3  **
RJ       EQU   15                       WORK REG4
CPR      EQU   RJ                       ADDR OF CHANNEL PROG
RWK2     EQU   RJ                       WORK REGISTER            Y02072
RE       EQU   0                        WORK REG5
RF       EQU   1                        WORK REG6
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
* DISPLACEMENTS AS EQUATES
*
D0       EQU   0                        DISPLACEMENT OF ZERO     S20201
D1       EQU   1                        DISPLACEMENT OF ONE      S20201
D4       EQU   4                        DISPLACEMENT OF FOUR     S20201
D6       EQU   6                        DISPLACEMENT OF SIX      S20201
D7       EQU   7                        DISPLACEMENT OF SEVEN    S20201
D8       EQU   8                        DISPLACEMENT OF EIGHT    S20201
D16      EQU   16                       DISPLACEMENT OF SIXTEEN  S20201
*                                         DMO                    S20201
D24      EQU   24                       DISPLACEMENT OF 24       S20201
D28      EQU   28                       DISPLACEMENT OF          S20201
*                                       TWENTYEIGHT              S20201
D31      EQU   31                       DISPLACEMENT OF          S20201
*                                       THIRTYONE                S20201
D36      EQU   36                       DISPLACEMENT OF          S20201
*                                       THIRTYSIX                S20201
D40      EQU   40                       DISPLACEMENT OF FORTY    S20201
D44      EQU   44                       DISPLACEMENT OF          S20201
*                                       FORTYFOUR                S20201
D47      EQU   47                       DISPLACEMENT OF          S20201
*                                       FORTYSEVEN               S20201
D48      EQU   48                       DISPLACEMENT OF 48       S20201
D64      EQU   64                       DISPLACEMENT OF 64       S20201
*
* BYTE COUNTS AS EQUATES
*
B0       EQU   0                        BYTE COUNT OF ZERO       S20201
B1       EQU   1                        BYTE COUNT OF ONE        S20201
B8       EQU   8                        BYTE COUNT OF EIGHT      S20201
*
*********************************************************************
* MASK'S TO TEST PARAMETER LIST WITH
INP      EQU   X'0F'
OUTP       EQU   X'0F'
UPDATE     EQU   X'04'
INOUT      EQU   X'03'
OUTIN      EQU   X'07'
RDBACK     EQU   X'01'
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
ONE        EQU   X'01'
FRTYATE    EQU   48
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
BIN        EQU   36                     BIN NOS.                   DM0I
BEXT       EQU   38                     BIN EXTENT                 DM0I
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'
*
*
STOWB      EQU   X'80'
WRTCK      EQU   X'80'                  WRITE CHECK                DM0I
OVRFLO     EQU   X'20'
PCI        EQU   X'20'
MINKEY     EQU   X'01'
CONCAT     EQU   X'FF'
*
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB      EQU   X'01'
BSAMBIT    EQU   X'00'
PAM        EQU   X'02'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
SRCHDRK  EQU   X'40'                    SRCH DIRECT MASK         S20201
NOTSILI  EQU   X'DF'                    NOT SIL BIT MASK         S20201
NORCDRY  EQU   X'20'                    NO RCD READY FOR ENTIRE  S20201
*                                       DATA SET MASK
*
*********************************************************************
*
*
COFFSR   EQU   88                       OFFSET OF RDCCW IF RCD   S20201
*                                       READY USED
CSTOFFSR EQU   72                       OFFSET OF RDCCW IF RCD   S20201
*                                       READY AND F-STD RCDS
SRCHD    EQU   X'40'                    SEARCH DIRECT MASK       S20201
*                                         DMO                    S20201
*                                                                  DMOR
*
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN      EQU   X'30'
COMPLETE   EQU   X'60'                  COMPLETE MASK              DM0I
FIRSTIOB   EQU   X'01'
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
BFTEKR     EQU   X'20'                  BDAM VS
VSBITS     EQU   X'48'                  VS BITS IN DCBRECFM
CYCLICB    EQU   X'20'
EXCHANGB   EQU   X'10'
SIMPLEB    EQU   X'40'
EXCHCYCL   EQU   X'30'
*
*********************************************************************
*
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
SUBSTUTB   EQU   X'04'
*
*
*********************************************************************
*
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
*
*
SRCHE      EQU   X'31'
WRTCKD     EQU   X'1D'
RDC        EQU   X'92'
RDKD       EQU   X'8E'
RDD        EQU   X'86'
TIC        EQU   X'08'
MTRCT    EQU   X'92'                    M/T RD CNT CCW CMND      S20201
SETSC    EQU   X'23'                    SET SECTOR CCW CMND      S20201
RDSC     EQU   X'22'                    READ SECTOR CCW CMND     S20201
*
*
*********************************************************************
*
*
* MASKS FOR RECORD FORMATS
*
*
STANDRDF   EQU   X'88'                  STANDARD FORMORT           DM0I
FORMATU    EQU   X'C0'
FORMATF    EQU   X'80'
FORMATV    EQU   X'40'
BLOCKED    EQU   X'10'
*
*
*********************************************************************
*
*
*   CHANNEL CONTROL WORD FLAGS
*
SKIP       EQU   X'10'
SLI        EQU   X'20'
SLIBIT     EQU   X'DF'                  TO TURN OFF SLI BIT
CCWNOP     EQU   X'03'                  NOP
CC         EQU   X'40'
DATACH     EQU   X'A0'
SLICC      EQU   X'60'
SLICCSK    EQU   X'70'
*
*
*********************************************************************
*
*
KEYS       EQU   X'01'
QSAM       EQU   X'01'
*
*
*********************************************************************
*
GETMAIN    EQU   4
QSAMZ      EQU   X'05'                  MASK                       DM0I
NRMLEND    EQU   X'7F'                  NORMAL END CODE FOR ECB
SRCHDRCT   EQU   X'40'                  SEARCH DIRECT--DCBCIND1
POBIT      EQU   X'02'                  PARTITIONED ORGANIZATION
ABCODE     EQU   X'013'                  ABEND CODE
COMMTABL   EQU   16                     MASK                       DM0I
NULL       EQU   0                      CONSTANT 0
IOBNUM     EQU   1                      DEFAULT NO OF IOB'S
K2         EQU   2                      CONSTANT 2
K3         EQU   3                      CONSTANT 3
WORD       EQU   4                      LENGTH OF A FULL WORD
K5         EQU   5                      CONSTANT 5
K6         EQU   6                      CONSTANT 6
K7         EQU   7                      CONSTANT 7
K8         EQU   8                      CONSTANT 8
L1CCW      EQU   8                      LENGTH OF 1 CCW
K12        EQU   12                     CONSTANT 12
K14        EQU   14                     CONSTANT 14
K16        EQU   16                     CONSTANT 16
L2CCW      EQU   16                     LENGTH OF 2 CCW'S
K19        EQU   19                     CONSTANT 19
K20        EQU   20                     CONSTANT 20
K23        EQU   23                     CONSTANT 23
L3CCW      EQU   24                     LENGTH OF 3 CCW'S
K24        EQU   24                     CONSTANT 24
K28        EQU   28                     CONSTANT 28
K31        EQU   31                     CONSTANT 31
K32        EQU   32                     CONSTANT 32
K36        EQU   36                     CONSTANT 36
L5CCW      EQU   40                     LENGTH OF 5 CCW'S
K40        EQU   40                     CONSTANT 40
K43        EQU   43                     CONSTANT 43
IOBLNGTH   EQU   48                     LENGTH OF IOB
K48        EQU   48                     CONSTANT 48
CPLNGTH    EQU   64                     LENGTH OF CHANNEL PRGM
K64        EQU   64                     CONSTANT 64
K80        EQU   80                     CONSTANT 80
K83        EQU   83                     CONSTANT 83
K104       EQU   104                    CONSTANT 104
OABD064  EQU   64                                                S21042
*********************************************************************
*
*
*
*
*
*
*
*
         BALR  RBASE,NULL               REG 3 IS BASE
         USING SOP2,RBASE
         USING IHADCB,RDCB              REG 2 IS DCB
         USING FORCORE,RCORE            REG 4 IS WORK AREA ADDR
SOP2     EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191O'              MODULE NAME              Y02072
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/18/74'              LAST DATE MODIFIED     @Z30TSCF
BEGIN    DS    0H                                                Y02072
*
         L     RDCB,NULL(RPARC)         GET DCB ADDRESS
         LA    RDCB,NULL(RDCB)          CLEAR HI BYTE
         L     RCORE,WORD(RWTGC)        GET WORK AREA ADDRESS
*
         L     RB,DCBIOBA               GET FIRST IOB ADDR
         MODESET  KEYADDR=DXUKEY,WORKREG=9  GET INTO USER KEY    Y02072
         LR    RC,RB                    SET UP WORK REG
         LR    RD,RB                    SET UP WORK REG
         SR    RF,RF                    CLEAR FOR IC
         IC    RF,DCBNCP                GET NO OF IOB'S
         TM    DCBCIND2,QSAMB           QSAM USED                S20201
         BNO   SOP230                   BRANCH IF NO             S20201
         IC    RF,DCBBUFNO              USE BUFFER NO FOR IOB    S20201
*                                       CNT                      S20201
SOP230   EQU   *                                                 S20201
         LR    RUCB,RF                  LOAD REGISTER            S20201
         LR    RDEB,RUCB                PUT COUNT IN DECR REG    S20201
*                                         DMO                    S20201
SOPSTART EQU   *                                                 S20201
*
* START OF IOB BUILD ROUTINE
*
         SPACE 2
*
SOP242   EQU   *
*
         ST    RB,NULL(RD)              LINK NEW IOB TO LAST ONE BUILT
         LR    RD,RB                    UPDATE CURRENT IOB POINTER
         LA    RB,WORD(RB)              POINT TO ECB SLOT
         OI    NULL(RB),NRMLEND         SET ECB COMPLETE WITHOUT ERROR
         ST    RB,K12(RD)               STORE ECB ADDR IN IOB
         LA    RB,K20(RB)               POINT TO CP POINTER SLOT
         LR    RC,RB                    SAVE ADDR
         LA    RB,K24(RB)               POINT TO CP START ADDR
SOP243   EQU   *
         ST    RB,NULL(RC)              STORE CP STARTAD IN IOB
         L     RWK2,DXUDCBAD            GET USERS DCB ADDR       Y02072
         USING IOBSIOCC,RC                                       Y02072
         ST    RWK2,IOBDCBPT            DCB ADDR TO IOB          Y02072
         DROP  RC                                                Y02072
         MVC   K40(L'DCBFDAD,RD),DCBFDAD  INITIALIZE IOBFDAD.
*
***********************************************************************
*
*    CONSTRUCTION OF READ CHANNEL PROGRAM FOLLOWS
*
***********************************************************************
*
SOP255   EQU   *
*
         LA    RC,K19(RC)               POINT TO CCHHR FIELD IN IOB
         TM    JFCBMASK+D6,NORCDRY      ANY NON RPS DEVICES      S20201
         BO    SOP2NC1                  BRANCH IF YES            S20201
         BAL   RJ,SOP2STA               IF NOT GO BUILD SET      S20201
*                                       SECTOR                   S20201
SOP2NC1  EQU   *                                                 S20201
         ST    RC,NULL(RB)              STORE ADDR IN SRCH CCW
         MVI   NULL(RB),SRCHE           STORE CMD BYTE
         MVI   K7(RB),K5                STORE COUNT OF 5 IN CCW
         OI    WORD(RB),CC              SET CMD CHAIN FLAG ON
         ST    RB,D8(RB)                PUT SEARCH ADDR IN TIC   S20201
*                                       CCW DMO                  S20201
         LR    RC,RB                    UPDATE PTR               S20201
         MVI   K8(RB),TIC               STORE TIC CMD BYTE
         SR    RE,RE                                              17363
         IC    RE,DCBKEYLE              OBTAIN KL                 17363
         AH    RE,DCBBLKSI              ADD DL                    17363
*     KL+DL TO RH OF TIC FOR USE BY EOB ROUT                      17363
         STH   RE,K14(RB)                                         17363
SOP255B  EQU   *                                                  17363
*
*
*     SRCH AND TIC CCWS HAVE BEEN GENERATED AT THIS POINT
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,K80             OFFSET TO RD CCW
         TM    DCBMACRF,POINTB          POINT MACRO USED ON INPUT
         BZ    SOP255A0                 NO BRANCH
         MVI   DCBCNTRZ,QSAMZ           MOVE ID                    DM0I
         B     SOP2550                  GO ON                      DM0I
*
SOP255A0 EQU   *
         TM    DCBRECFM,STANDRDF        STANDARD F RECORDS USED
         BO    SOP258                   YES BRANCH
*
SOP2550  EQU   *
         MODESET  KEYADDR=DXUKEY,WORKREG=15 GET INTO USER KEY    YM1393
         LA    RE,K24(RB)
         ST    RE,K16(RB)
         MVI   K16(RB),TIC              STORE TIC CMD BYTE
         OI    K20(RB),SLICCSK          SET SLI,CC,AND SKIP FLAGS
         MVI   K23(RB),ONE              STORE A COUNT OF ONE
*
         CH    RUCB,CONONE              ONE IOB TO BE BUILT      S20201
*                                         DMO                    S20201
SOP256   BE    SOP256C                  YES BRANCH
*
*
SOP256A  LA    RC,K83(RC)               POINT TO NEXT DA ADDR FIELD
SOP256B  ST    RC,K24(RB)               STORE IN RD COUNT CCW
         MVI   K24(RB),RDC              STORE RD CNT CMD BYTE
         B     SOP257                   GO ON                      DM0I
*
SOP256C  L     RDCB,DXUDCBAD            GET ADDR OF USERS COPY   Y02072
         LA    RC,DCBFDAD+K3            POINT TO CCHHR IN DCB
         L     RDCB,0(RPARC)            GET ADDR OF PROTECTED    Y02072
         B     SOP256B                  BACK                       DM0I
*
SOP257   MVI   K31(RB),K5               STORE COUNT OF 5 IN RDC CCW
         OI    K28(RB),SLICC            SET SLI AND CC FLAGS
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOP258A                  BRANCH IF YES            S20201
         MVI   D31(RB),B8               SET BYTE COUNT TO EIGHT  S20201
         LA    RE,D48(RB)               GET DW END CHP           S20201
         ST    RE,D24(RB)               PUT AS ADDRESS IN CCW    S20201
         MVI   D24(RB),RDC              PUT IN RD CNT CCW        S20201
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,COFFSR          PUT IN CARN OFFSET       S20201
         MODESET  KEYADDR=DXUKEY,WORKREG=15 GET INTO USER KEY    YM1393
         OI    D36(RB),SLI              SILI ON FOR ALL BUT      S20201
*                                       STNDRD                   S20201
         NI    D28(RB),NOTSILI          CLEAR SILI BIT           S20201
         B     SOP258A                  EVER ONWARD              S20201
SOP258   SH    RB,SXTEN                 SUBT 16 FROM START OF CP ADDR
         MVI   DCBCNTRL+K3,ONE          EPD2 ID NUMBER
         OI    DCBCIND1,SRCHDRCT        SET SRCH DIRECT FLAG
         MODESET  KEYADDR=DXUKEY,WORKREG=15 GET INTO USER KEY    YM1393
*
SOP258A  EQU   *
         TM    DCBCIND2,QSAMB           QSAM USED
         BO    SOP259                   YES BRANCH
*
         CLI   DCBKEYLE,ONE             IS KEY LENGTH SPECIFIED
         BL    SOP259A                  NO BRANCH
*
         MVI   K32(RB),RDKD             STORE RD KEY&DATA CMD BYTE
         B     SOP259C                  GO AROUND NEXT           S20201
*
SOP259   EQU   *
         LA    RF,K32(RB)               POINT TO ACTUAL RD DATA CCW
*
* FILL IN CCW WITH BUFFER ADDRESS AND BYTE COUNT
*
         L     RWK2,DCBBUFCB            ADDR OF BUF CNTRL BLK    YM7595
         USING BCBLK,RWK2
         L     RBUFADR,BCBBUFPT         ADDR OF NEXT AVAIL BUF   YM7595
         LTR   RBUFADR,RBUFADR          IS BUFFER ADDR VALID     YM7595
         BZ    BUFERR                   NO, GO ISSUE DMABCOND    YM7595
         USING BUFFER,RBUFADR
         MVC   BCBBUFAD,BUFNXPTB        UPDATE WITH NEW BUF ADD  YM7595
         USING CCW,RF
         STCM  RBUFADR,B'0111',CCWADDRB  BUF ADDR TO CCW         YM7595
         MVC   CCWBYTE,DCBBLKSI         BYTE COUNT TO CCW        YM7595
         DROP  RF,RWK2,RBUFADR
SOP259A  EQU   *
         MVI   K32(RB),RDD              STORE RD DATA CMD BYTE
*
*
SOP259C  EQU   *                                                 S20201
*
         TM    DCBRECFM,FORMATU         FORMAT U RECORDS         S20201
*                                         DMO                    S20201
         BM    SOP259XB                 BRANCH IF NO             S20201
*                                         DMO                    S20201
         OI    D36(RB),SLI              TURN ON SILI FLAG        S20201
*                                         DMO                    S20201
SOP259XB EQU   *                                                 S20201
         TM    DCBCIND1,SRCHDRK         SERARCH DIRECT USED      S20201
         BNO   SOP2NST                  IF NO BRANCH             S20201
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,D64             SET OFFSET FOR NORM F    S20201
*                                       RCDS                     S20201
         MODESET  KEYADDR=DXUKEY,WORKREG=15 GET INTO USER KEY    YM1393
         TM    JFCBMASK+D6,NORCDRY      STAND F AND RCD READY    S20201
         BO    SOP259G                  BRANCH IF NO             S20201
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,CSTOFFSR        IF NO PUT CARNIVAL       S20201
*                                       OFFSET                   S20201
         MODESET  KEYADDR=DXUKEY,WORKREG=15 GET INTO USER KEY    YM1393
         MVI   D40(RB),MTRCT            IF YES PUT IN MT RD CNT  S20201
         OI    D36(RB),CC               TURN ON CMND CHAIN IN    S20201
*                                       PRE-                     S20201
*                                       VIOUS CCW
         OI    D44(RB),CC+SLI+SKIP      CMND CHAIN + SLI + SKIP  S20201
*                                       IN THIS CCW
         MVI   D47(RB),B1               SET BYTE CNT TO ONE      S20201
         LA    RB,B8(RB)                INCR PTR                 S20201
SOP2NST  EQU   *                                                 S20201
*
         TM    JFCBMASK+D6,NORCDRY      NOT STND F, BUT WITH RCD S20201
*                                       READY
         BO    SOP2NRR                  BRANCH IF NO             S20201
         BAL   RJ,SOP2RTA               GO BUILD RD SECTOR CCW   S20201
SOP2NRR  EQU   *                                                 S20201
*
*******************************************************************DMOR
SOP259D  EQU   *
         CH    RUCB,CONONE              ONE IOB TO BE BUILT      S20201
*                                         DMO                    S20201
SOP259E1 BE    SOP259G                  YES BRANCH
*
         CH    RDEB,CONONE              THIS LAST IOB            S20201
         BNE   SOP259G                  BRANCH IF NO             S20201
*
         L     RC,DCBIOBA               GET FIRST IOB GENERATED
         LA    RC,K43(RC)               POINT TO CCHHR FIELD
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY  DMO               S20201
         BNO   SOP259G                  BRANCH IF NO             S20201
*                                         DMO                    S20201
         ST    RC,D24(RB)               RD CNT OF LAST IOB TO    S20201
*                                       FRST DMO                 S20201
         MVI   D24(RB),RDC              RESTORE CCW CMND         S20201
*                                         DMO                    S20201
SOP259G  EQU   *                                                  20185
         TM    DCBCIND1,SRCHDRCT        IS THIS SRCH DIRECT       20185
         BO    SOP259H                  YES, BRANCH               20185
         TM    DCBCIND2,QSAMB           QSAM USED
         BO    SOP259I                  YES--BRANCH
         TM    DCBBFTEK,BFTEKR          OFFSET READ
         BZ    SOP259I                  NO--BRANCH
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY  DMO               S20201
         BNO   SOP259I                  IF NO RCD READY          S20201
*                                       ACCOMPLISH DMO           S20201
*                                       ES OFFSET RD FUNCTION      DMOR
         LA    RB,CPLNGTH(RB)           TO NEXT IOB LOC
         B     SOP240                   RETURN FOR NEXT IOB
SOP259I  EQU   *
         LA    RB,K40(RB)               TO NEXT POSSIBLE IOB LOC  20185
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY  DMO               S20201
         BO    SOP259GX                 BRANCH IF YES            S20201
*                                         DMO                    S20201
         LA    RB,B8(RB)                INCR PTR                 S20201
*                                         DMO                    S20201
SOP259GX EQU   *                                                 S20201
*                                         DMO                    S20201
         B     SOP240                   RETURN FOR NEXT IOB       20185
SOP259H  EQU   *                                                  20185
         LA    RB,D40(RB)               PT TO NEXT POSS IOB      S20201
SOP240   EQU   *                                                 S20201
         SH    RDEB,CONONE              DECR IOB COUNT           S20201
*                                         DMO                    S20201
         BP    SOPSTART                 IF MOR IOBS BRANCH       S20201
         L     RB,DCBIOBA               IF NOT LINK LAST TO      S20201
*                                       FIRST  DMO               S20201
         ST    RB,D0(RD)                PUT FIRST ADDR IN LAST   S20201
*                                         DMO                    S20201
         B     OFFSETRD                 GO AROUND INTERNAL       S20201
*                                       SUBROUT DMO              S20201
*
* SET SECTOR CCW BUILD RTN
*
SOP2STA  EQU   *                                                 S20201
         L     RE,DXCCW11               GET SET SECTOR ADDR      S20201
         ST    RE,D0(RB)                PUT IN CCW               S20201
         MVI   D0(RB),SETSC             PUT IN CCW CMND          S20201
         MVI   D7(RB),B1                SET BYTE CNT TO ONE      S20201
         OI    D4(RB),CC                TURN ON CMND CHAIN       S20201
         B     CMNDFIN                  GO TO FINISH DETAILS     S20201
*
* READ SECTOR CCW BUILD RTN
*
SOP2RTA  EQU   *                                                 S20201
         L     RE,DXCCW11               GET READ SECTOR ADDR     Y02072
         ST    RE,D40(RB)               PUT IN CCW               S20201
         MVI   D40(RB),RDSC             PUT IN RD SECT CMND      S20201
         OI    D36(RB),CC               CMND CHAIN PREVIOUS CCW  S20201
         MVI   D47(RB),B1               SET BYTE CNT TO ONE      S20201
CMNDFIN  EQU   *                                                 S20201
         LA    RB,B8(RB)                INCR PTR                 S20201
         BR    RJ                       RETURN                   S20201
*
*
*
*
*
*
*
OFFSETRD EQU   *                                                 S20201
*
* IF RCD READY CHANNEL PROGRAM USED OFFSET RD FUNCTION ALREADY
* INSTITUTED
*
         TM    DCBCIND2,QSAMB           IS IT QSAM               S20201
         BO    SOP2END                  YES LEAVE THIS RTN       S20201
         SR    RE,RE                    ELSE ZERO OUT A REG      S20201
         IC    RE,DCBNCP                GET NUMBER OF IOBS       S20201
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BNO   SOP260                   BRANCH IF NO, SINCE CHP  S20201
*                                       AL-                      S20201
*                                       READY HAS FUNCTION
*                                       INCORPORATED IN CHANNEL PROG
* THE READ CHANNEL PROGRAMS WHICH HAVE JUST BEEN GENERATED MUST BE
* MODIFIED IF THE DCB IS BEING OPENED FOR OFFSET READ.
*
         USING CPDEF,CPR
         TM    DCBBFTEK,BFTEKR          OFFSET READ
         BZ    SOP2END                  NO--BRANCH
         SR    RF,RF                    CLEAR FOR IC
         IC    RF,DCBOFFSR              OFFSET TO READ CCW
         LA    RF,L1CCW(RF)             INCREMENT
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         STC   RF,DCBOFFSR              UPDATE OFFSET
         MODESET  KEYADDR=DXUKEY,WORKREG=15 GET INTO USER KEY    YM1393
SOP260   EQU   *
         LA    CPR,IOBLNGTH(RB)         ADDR OF CHANNEL PROG
         TM    JFCBMASK+D6,NORCDRY      IS IT RPS                S20201
         BNO   SOP2ENDX                 YES INITIALIZE COUNT     S20201
*                                       FIELD                    S20201
*
*    THE TOTAL EFFECT OF THE NEXT THREE INSTRUCTIONS IS TO PUSH
*    THE EXISTING CCW'S DOWN TO MAKE ROOM FOR AN EXTRA CCW AT THE
*    BEGINNING OF THE CHANNEL PROGRAM.
         MVC   CPRDKD(L3CCW),CPTIC1
         MVC   CPTIC2(L2CCW),CPNOP1
         MVC   CPSCH(L5CCW),CPTIC2
*
         MVI   NOP1CC,CCWNOP            NOP COMMAND
         OI    NOP1FLAG,CC              CHAIN CCW
         L     RF,CPTIC1                FIRST TIC
         LA    RF,L1CCW(RF)             UPDATE DATA ADDR
         ST    RF,CPTIC1
         MVI   CPTIC1,TIC               TIC COMMAND
         L     RF,CPTIC2                SECOND TIC
         LA    RF,L1CCW(RF)             UPDATE DATA ADDR
         ST    RF,CPTIC2
         MVI   CPTIC2,TIC               TIC COMMAND
         MVI   NOP2CC,CCWNOP            NOP COMMAND
         L     RF,NULL(RB)              NEXT IOB ADDR
         LA    RF,K104(RF)              AREA TO READ COUNT INTO
         ST    RF,RCTDATAD              STORE IN READ COUNT CCW
         NI    RCTFLAGS,SLIBIT          TURN OFF SLI BIT
         MVI   RCTBYTCT+ONE,L'CPCOUNT   READ ENTIRE COUNT FIELD
         MVI   RCTCC,RDC                RESTORE COMMAND CODE
SOP2ENDX EQU   *                                                 S20201
         TM    DCBRECFM,DCBRECF+DCBRECSB  FIXED STANDARD         XA2057
         BO    SOP2ENDY                 YES, BYPASS MOVING ID    XA2057
*                                         AS CCHHR FIELD DOES    XA2057
*                                         NOT EXIST              XA2057
         MVC   CPCOUNT(K5),K43(RB)      FIRST BLOCK ID
SOP2ENDY EQU   *                                                 XA2057
         L     RB,NULL(RB)              NEXT IOB
         BCT   RE,SOP260                NEXT CHANNEL PROG
SOP2END  EQU   *
         L     RB,DCBIOBA               GET FIRST IOB            Y02072
         OI    NULL(RB),FIRSTIOB        SET INDIC ON FOR CLOSE   Y02072
         LR    RC,RB                    SAVE ADDR FOR QSAM USE   Y02072
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         OI    FCAOPEN2,FCAOIOBC        IOBS COMPLETED           YM7595
         TM    DCBDSORG,POBIT          DCB FOR PO
         BZ    SOP2ENDA                NO, BRANCH
*
         MVI   DCBCNTRZ,QSAMZ                                      DM0I
*
SOP2ENDA EQU   *
*
         TM    DCBRECFM,FORMATV         VARIABLE FORMAT            DM0I
         BZ    SOP2STOP                 BRANCH NOT V FORMAT        DM0I
         TM    DCBRECFM,FORMATF         FIXED FORMAT               DM0I
         BO    SOP2STOP                 YES, BRANCH                DM0I
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOPSLDVT        VARIABLE, GET 1915     @Z30TSCF
         B     RELOOP                   BACK TO MAIN LINE          DM0I
SOP2STOP EQU   *
         MVC   WTGIDTTR,SOPSLDFT        FIXED, GET 1910        @Z30TSCF
RELOOP   LA    RWTGC,WGOFF(RE,RWTGC)    INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(NULL,RPARC)  INCR CURRENT DCB ENTRY PRTR
         CLC   NULL(L'AMIDCNST,RWTGC),AMIDCNST  THIS RT NEEDED AGAIN
         BCR   RWTGC,RBASE              BACK TO OPEN CONTROL ROUTINDM0I
*
         CLC   NULL(L'OPIDCNST,RWTGC),OPIDCNST  END OF TABLE
         BNE   RELOOP                   NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(NULL,RWTG)   REINITIALIZE WTG LIST PTR
ZCHEK    CLI   NULL(RWTGC),NULL         IS THIS ENTRY COMPLETE
         BNE   TCTLRTN                  IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(NULL,RWTGC)  GET NEXT ENTRY
         LA    RPARC,PLOFF(NULL,RPARC)
         B     ZCHEK                    TO ZERO CHECK              DM0I
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
         EJECT
*
**********************************************************************
*                                                                    *
BUFERR   EQU   *                                                  M1552
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         DMABCOND OABD064,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES  S21042X
                                        CALL PROBLEM DETERMINATION
         B     TCTLRTN                                           S21042
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'                    ID                         DM0I
AMIDCNST DC    C'1O'                    ID                         DM0I
*
***********************************************************************
*      CONSTANTS AND RESERVED STORAGE.
*
*
SXTEN    DC    H'16'                    SIXTEEN                    DM0I
CONONE   DC    H'1'                     CONSTANT OF ONE          S20201
SOPSLDFT DC    C'10',VL3(IGG01910)      FIXED LEN RECORDS      @Z30TSCF
SOPSLDVT DC    C'15',VL3(IGG01915)      VARIABLE LEN RECORDS   @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROB DETERMINATION     @Z30TSCF
         SPACE 3
PATCH    DC    25H'0'                   PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         EJECT
CPDEF    DSECT                          OFFSET READ CHANNEL PROG
CPNOP1   DS    0D                       NOP OR SET SECTOR
NOP1CC   DS    0X                       COMMAND CODE
NOP1DATA DS    A                        DATA ADDR
NOP1FLAG DS    BL1                      FLAGS
         DS    1X                       NOT USED
NOP1BYTC DS    2X                       BYTE COUNT
CPSCH    DS    D                        SEARCH ID EQUAL
CPTIC1   DS    D                        TIC TO SEARCH
CPTIC2   DS    D                        TIC TO READ COUNT
CPRDCNT  DS    0D                       READ COUNT
RCTCC    DS    0X                       COMMAND CODE
RCTDATAD DS    A                        DATA ADDR
RCTFLAGS DS    BL1                      FLAGS
         DS    1X                       NOT USED
RCTBYTCT DS    2X                       BYTE COUNT
CPRDKD   DS    0D                       READ (KEY) DATA
RKDCC    DS    0X                       COMMAND CODE
RKDDATAD DS    A                        DATA ADDR
RKDFLAGS DS    BL1                      FLAGS
         DS    1X                       NOT USED
RKDBYTCT DS    2X                       BYTE COUNT
CPNOP2   DS    0D                       NOP OR READ SECTOR
NOP2CC   DS    0X                       COMMAND CODE
NOP2DATA DS    A                        DATA ADDR
NOP2FLAG DS    BL1                      FLAGS
         DS    1X                       NOT USED
NOP2BYTC DS    2X                       BYTE COUNT
CPCOUNT  DS    D                        FIELD TO READ COUNT INTO
         IECDSECS DCB,(MAIN,(IOB,NO)),IOB,WTG,PREFX,EXPAND=YES @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      2 BYTE ID OF MODULE      Y02072
DCBCNTRZ EQU   DCBCNTRL+1                                          DM0I
DCBCNTRX EQU   DCBCNTRL+3                                          DM0I
         EJECT
FORCORE  DSECT
         IHAFCAUD ORG=YES
         EJECT
         IHACCW  DSECT=YES                                       Y02072
         EJECT
         IGGBCB  TYPE=SAM
           END
