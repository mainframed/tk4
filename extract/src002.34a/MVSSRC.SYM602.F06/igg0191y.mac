         TITLE  'IGG0191Y - SAM USER TOTALING FACILITY '
IGG0191Y CSECT
*
*MODULE NAME - IGG0191Y                                          Y02072
*
*DESCRIPTIVE NAME - USER TOTALING OPEN EXECUTOR                  Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 1 RELEASE 3 DELETIONS/CHANGES
*                                                                XA3085
*          VS2 RELEASE 2 DELETIONS
*001500,065000-066000,100000-102000,153500,154500,155500-155700, Y02072
*197000-198000,202500-252000,307000,441000,475000-482000,        Y02072
*508000-515000,567000-568000,352000-365000,373000,417000,        Y02072
*442000,443000,446000                                            Y02072
*                                                                YM1140
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*A146500-146800                                                 ZA00743
*D152000-155000                                                 ZA00743
*C145800                                                        ZA00743
*    OZ07019 IS FLAGGED AS AZ07019                              AZ07019
*
*          RELEASE 20 DELETIONS                                       *
*1753226000                                                      A30539
*1753345000,374000                                               M0653
*          RELEASE 21 DELETIONS                                       *
*3021164000-166000,335000,372000                                 A44122
*   REFER TO CODE FLAGGED XA3085                                SA66735
*
* STATUS CHANGE LEVEL 005
*
* FUNCTION
*
* THE MODULE PERFORMS TWO FUNCTIONS FOR DATA SETS REQUIRING SUPPORT
* FROM THE SAM USER TOTALING FACILITY: FIRST IT CALCULATES THE SIZE OF
* THE WORK AREA REQUIRED TO SAVE THE USER'S HASH TOTALING AREA AND PRO-
* VIDES A GETMAIN FOR THIS SPACE AND SECONDLY IS ISSUED A LOAD FOR THE
* RESIDENT SAVE ROUTINE, IGG019AX.
*
*
* INPUT
*
* THE INPUT TO THIS MODULE IS THE SAME AS TO ALL OTHER SAM OPEN EXEC-
* CUTORS:
*
*      REG 5 - THE ADDRESS OF THE WHERE-TO-GO TABLE
*
*      REG 6 - THE ADDRESS OF THE (DCB) PARAMETER LIST
*
*      REG 7 - THE CURRENT ENTRY IN THE WTG TABLE
*
*      REG 8 - THE CURRENT DCB ADDRESS
*
*
* OUTPUT
*
* SAME AS INPUT PLUS A POINTER IN THE USER'S DEB TO THE FORMATTED USER
* TOTALING SAVE AREA, WHICH IN TURN POINTS TO THE LOADED RESIDENT SAVE
* ROUTINE.
*
*
* GENERAL FLOW
*
* THIS MODULE IS ENTERED VIA AN XCTL FROM 196A OR 191N WHENEVER A DCB
* IS ENCOUNTERED WHICH HAS SPECIFIED USER TOTALING.  AFTER DETERMINING
* THAT THERE IS AN ENTRY FOR USER TOTALING IN THE DCB EXIT LIST (IF NOT
* FOUND, THE DCB IS SET AS NOT OPERABLE AND AN XCTL TO NEXT MODULE IS
* ACCOMPLISHED) THE SIZE OF THE AREA REQUIRED TO SAVE THE USER'S TOTAL-
* ING AREAS (PLUS CONTROL BLOCKS) IS CALCULATED AND A GETMAIN FOR THIS
* SPACE IS ISSUED.  AFTER THE GETMAIN THE CONTROL BLOCKS FOR THE WORK
* AREA ARE CONSTRUCTED AND THE ADDRESS OF THE SAVE AREA IS PLACED IN
* THE ACCESS METHOD PORTION OF THE DEB.  NEXT A LOAD IS ISSUED FOR THE
* RESIDENT SAVE ROUTINE (IGG019AX) AND THE ADDRESS OF THE SAVE ROUTINE
* IS PLACED IN THE SAVE AREA.  AN XCTL TO THE NEXT MODULE OF OPEN IS
* THEN ACCOMPLISHED.
*
*
* SPECIAL CONDITIONS
* 1.  IF THERE IS INSUFFICIENT FREE CORE TO SATISFY THE GETMAIN AN
*     ABEND OCCURS.
*
* 2.  IF ANY OF THE FOLLOWING OCCUR THE DCB WILL BE SET TO       Y02072
*     'NOT OPENABLE' AND A DMABCOND MACRO WILL BE ISSUED.        Y02072
*      THE DMABCOND WILL CAUSE A WRITE TO PROGRAMMER WITHOUT     Y02072
*      AN ABEND FOR COMPATIBILITY WITH PREVIOUS RELEASES.        Y02072
*        A. NO DCB EXIT LIST                                     Y02072
*        B. NO TOTALING ENTRY IN DCB EXIT LIST                   Y02072
*        C. IMAGE AREA ADDRESS IS ZERO                           Y02072
*
* EXITS
*
* THIS MODULE XCTL'S TO THE NEXT OPEN EXECUTOR AS SPECIFIED IN THE WTG
* TABLE.  FOR NORMAL EXIT THE NEXT MODULE SELECTED FOR DATA SETS SUCC-
* ESSFULLY PROCESSED IS IGG0191B.
*                                                                     *
*FUNCTION      THIS EXECUTOR IS ENTERED IF THE OPTION                 *
*              CODE SPECIFIES THAT THE USER REQUIRES SUPPORT OF HIS   *
*              TATALING FEATURE AT END OF VOLUME (OPTCD=T).  IT       *
*              ISSUES A GETMAIN FOR THE WORKAREA REQUIRED TO SAVE     *
*              THE USER'S TOTALING FIELDS AND THE NECESSARY CONTROL   *
*              BLOCKS TO ENABLE THE EOV ROUTINE TO PRESENT THE        *
*              CORRECT FIELD TO HIM AT EOV TIME                       *
*                                                                     *
*ENTRY POINT - IGG0191Y                                               *
*                                                                     *
*              ENTERED FROM IGG0196A OR IGG0191N VIA AN XCTL          *
*                                                                     *
*INPUT                                                                *
*                                                                     *
*              WHERE-TO-GO (WTG) TABLE            REG 5 = RPAR        *
*              PARAMETER LIST                     REG 6 = RWTG        *
*              CURRENT ENTRY IN WTG TABLE         REG 7 = RPARC       *
*              CURRENT PARAMETER (DCB)            REG 8 = RWTGC       *
*                                                                     *
*OUTPUT        THE OUTPUT IS A FORMATTED SAVE AREA FOR THE USER       *
*              TOTALING FIELDS ASSOCIATED WITH PHYSICAL BLOCKS OF     *
*              DATA.  THE ADDR OF THIS AREA IS PLACED IN THE DEB      *
*                                                                     *
*EXITS         NORMAL - BALR TO SAM TOTALING ROUTINE - IGG019YY       *
*                       XCTL TO SAM EXECUTOR - IGG0191B               *
*              ABNORMAL - DCB IS SET AS NOT OPENABLE AND AN XCTL Y02072
*                         TO PROBLEM DETERMINATION IS MADE.      Y02072
*                                                                     *
*TABLES/WORKAREAS                                                     *
*                                                                     *
*              THE DSECTS USED ARE AT THE END OF THIS MODULE          *
*              THE WORKAREA IS SECURED VIA A GETMAIN, IS FORMATTED    *
*              AND IT IS DESCRIBED IN TOTSAVWA DSECT
*                                                                     *
*MACROS - ACTION : GETMAIN, LOAD, XCTL, XCTLTABL, MODESET,       Y02072
*                  DMABCOND                                      Y02072
*
*ATTRIBUTES : REENTRANT, REUSABLE, RUNS IS SUPERVISOR STATE AND  Y02072
*             USER KEY UNLESS OTHERWISE SPECIFIED                Y02072
*                                                                     *
***********************************************************************
*  REGISTER CONVENTIONS USED THRUOUT OPEN                             *
*                                                                     *
***********************************************************************
RE       EQU   0                        WORK REG/PARM REG
RF       EQU   1                        WORK REG/PARM REG
RWK1     EQU   RF                       WORK REGISTER            Y02072
RDCB     EQU   2                        DCB BASE REG
RBASE    EQU   3                        BASE REG FOR CSECT
RCORE    EQU   4                        WORK AREA BASE REG
RPAR     EQU   5                        START OF PARM LIST
RWTG     EQU   6                        START OF WTG TABLE
RPARC    EQU   7                        CURRENT ENTRY IN PARM LIST
RWTGC    EQU   8                        CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                        BASE REG FOR TIOT
RUCB     EQU   10                       BASE REG FOR UCB
RDEB     EQU   11                       BASE REG FOR DEB
RB       EQU   12                       WORK REG
RC       EQU   13                       WORK REG
RD       EQU   14                       WORK REG
RJ       EQU   15                       WORK REG
R15      EQU   RJ                       INPUT TO XCTL MACRO      Y02072
*                                                                     *
***********************************************************************
*                                                                     *
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING SUTF000,RBASE            ESTAB BASE REG
         USING IHADCB,RDCB              ESTAB BASE REG
         USING FORCORE,RCORE            ESTAB BASE REG FOR WRK AREA
         USING DEBB,RDEB                ESTAB DEB BASE REG
         USING TCB,RD                   ESTAB TCB BASE REG
         USING TIOT,RTIOT               ESTAB TIOT BASE REG
         USING UCBOB,RUCB               ESTAB UCB BASE REG
         USING TOTSAVWA,RF              ESTAB BASE FOR THIS DSECT     *
***********************************************************************
*                                                                     *
SUTF000  EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191Y'              MODULE NAME              Y02072
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/09/74'              LAST DATE MODIFIED     @Z30TSCF
BEGIN    DS    0H                                                Y02072
*                                                                     *
         L     RDCB,0(RPARC)            GET DCB ADDR            ZA00743
         LA    RDCB,0(RDCB)             CLEAR HI ORDER BYTE     ZA00743
         L     RDEB,DCBDEBAD            GET DEB ADDR            ZA00743
         L     RCORE,FOUR(RWTGC)        GET WORK AREA ADDR      ZA00743
         TM    0(RPARC),X'04'           TEST FOR UPDATE            UT18
         BZ    SUTF003                  NOT UPDAT,BRANCH           UT18
         TM    0(RPARC),X'0B'           MAY BE UPDAT,TEST FURTHER  UT18
         BZ    TURNOFF                  IF UPDAT,SKIP TOLTALING    UT18
SUTF003  EQU   *                                                   UT18
         MVI   TWENTY2(RWTG),LOADMASK   SET CODE IN WTG TO LOAD ONLY
LOADMASK EQU   X'CB'                    MASK FOR ONLY LOADABLE
*                                                                     *
         SR    RUCB,RUCB                CLEAR REG
         SR    RF,RF                    CLEAR REG
         IC    RUCB,DEBNMEXT            GET NUMBER OF EXTENTS FROM DEB
         IC    RF,DEBEXSCL              GET SCALING FACTOR FROM DEB
         SLL   RUCB,0(RF)               SHIFT (MULT) PER EXTENT SIZE
         LA    RUCB,DEBBASI(RUCB,RDEB)  ADD BASIC DEB SIZE AND   A44122
*                                       DEB ADDR
*
*        RUCB NOW POINTS TO ACCESS METHOD DEPENDENT SECTION
*        OF THE DEB
*
***********************************************************************
*  THE FOLLOWING SBRTN CHECKS THE USERS DCB EXIT LIST FOR A POINTER   *
*        TO HIS HASH TOTALING SAVE AREA                               *
***********************************************************************
*                                                                     *
SUTF010  EQU   *                        SYMBOLIC ADDR
*
         MODESET KEYADDR=DXUKEY,WORKREG=12  GET INTO USER KEY    Y02072
         L     RB,DCBEXLST              GET ADDR OF EXIT LIST
         LA    RB,ZERO(RB)              CLEAR HI BYTE
         LTR   RB,RB                    TEST FOR EXITLIST
         BZ    SUTF036                  BR IF ZERO - NO EXIT LIST
*
SUTF011  EQU   *                        SYMBOLIC ADDR
*
         CLI   ZERO(RB),UTENTRY         TEST FOR TOTALING ENTRY
         BE    SUTF049                  YES, BRANCH
         CLI   ZERO(RB),UTENTRY+ENDOLIST TEST FOR TOTALING ENTRY
         BE    SUTF049                  YES, BRANCH
*
         TM    ZERO(RB),ENDOLIST        TEST FOR LAST ENTRY
         BO    SUTF036                  BRANCH IF LAST ENTRY
*
         LA    RB,FOUR(RB)              POINT TO NEXT ENTRY
         B     SUTF011                  UNCONDIT9ONAL BRANCH
*
*
SUTF036  EQU   *                        SYMBOLIC ADDR
*
*  THE DCB IS UNOPENABLE DUE TO TOTALING BEING SPECIFIED AND NO
*              TOTALING ENTRY IN THE DCB EXIT LIST, A ZERO TOTALING
*              AREA ADDRESS, OR A ZERO TOTALING AREA LENGTH.  IT IS
*              NECESSARY TO ISSUE A DMABCOND MACRO AND TO SET    Y02072
*              THE DCBOFLGS FIELD AS UNOPENABLE                  Y02072
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         NI    DCBOFLGS,SETOFF          MARK DCB AS UNOPENABLE
*
         DMABCOND TOTUNSUP,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES Y02072
         B     TCTLRTN                  GO XCTL                  Y02072
*
SUTF049  EQU   *                        SYMBOLIC ADDR
*                                                                     *
***********************************************************************
*  AT THIS POINT REGISTER 12 (RB) POINTS TO THE FULL WORD WHICH CON-  *
*        TAINS THE ADDRESS OF THE USERS TOTALING SAVE AREA.  THE FIRST*
*        TWO BYTES OF THIS AREA CONTAIN ITS LENGTH IN BYTES           *
*        IF THIS LENGTH IS AN ODD NUMBER OF BYTES, IT IS ROUNDED UP   *
*        TO AN EVEN NUMBER FOR THE IMAGE SEGMENT LENGTH SO THAT EACH  *
*        SEGMENT WILL START ON A HALF-WORD BOUNDARY.  HOWEVER, ONLY   *
*        THE NUMBER OF BYTES INDICATED IN THE USER'S AREA WILL BE     *
*        MOVED TO THE IMAGE SEGMENT.                                  *
***********************************************************************
*                                                                     *
         L     RB,ZERO(RB)              GET IMAGE AREA ADDR
         LA    RB,ZERO(RB)              CLEAR HI BYTE
         LTR   RB,RB                    CHECK FOR ZERO ADDR
         BZ    SUTF036                  BR,NO ADDRESS SPECIFIED
         LH    RC,ZERO(RB)              GET LENGTH ATTRIBUTE
         LTR   RC,RC                    CHECK FOR ZERO LENGTH
         BZ    SUTF036                  BR IF LENGTH IS ZERO
         TM    1(RB),X'01'              TEST FOR EVEN LENGTH
         BZ    SUTF050A                 BRANCH IF ALREADY EVEN
         LA    RC,ONE(RC)               ROUND UP TO EVEN LENGTH
*                                                                     *
***********************************************************************
*  NOTE -- COMPUTE THE NUMBER OF BYTES REQUIRED FOR SAM SAVE AREA     *
***********************************************************************
*                                                                     *
SUTF050A EQU   *
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SR    RD,RD                    CLEAR THIS REG
         SR    RJ,RJ                    CLEAR THIS REGISTER
         TM    DCBCIND2,QSAMTEST        TEST FOR QSAM
         BO    SUTF050                  IT IS QSAM
*                                                                     *
         IC    RJ,DCBNCP                GET NO. OF CHAN PROG'S
         LTR   RJ,RJ                    WAS NCP SPECIFIED        XA3085
         BNZ   SUTF060                  YES, USE IT              XA3085
         LA    RJ,DEFNCP                DEFAULT TO 1             XA3085
         B     SUTF060                  UNCONDITIONAL BRANCH
*                                                                     *
SUTF050  EQU   *                        SYMBOLIC ADDR
*                                                                     *
         IC    RJ,DCBBUFNO              GET NO. OF BUFFERS
         LTR   RJ,RJ                    WAS BUFNO SPECIFIED      XA3085
         BNZ   SUTF060                  YES, USE IT              XA3085
         LA    RJ,DEFBUFNO              DEFAULT TO 5            AZ07019
*
SUTF060  EQU   *                        SYMBOLIC ADDR
*
         LA    RJ,ONE(RJ)               ADD ONE IMAGE AREA TO TOT
         MR    RD,RC                    MULT TO GET SAVE ELNGTH
         MODESET  KEYADDR=DXUKEY,WORKREG=9  GET INTO USER KEY    Y02072
*
***********************************************************************
*   THE RESULT IS IN RJ - SO ADD ENOUGH BYTES FOR CONTROL BLOCKS - THEN
*        ISSUE A GETMAIN FOR THE SAM SAVE AREA                        *
***********************************************************************
*
         AH    RJ,FORTY8                ADD 48 BYTES FOR CB'S
*                                                                     *
         LR    RTIOT,RJ                 SAVE GETMAIN LENGTH
*
         GETMAIN   R,LV=(RJ),SP=0                                Y02072
*                                                                     *
***********************************************************************
*  PICK UP THE POINTER TO THE WORKAREA FROM RF (REGISTER 1) AND CLEAR *
*        THE WORKAREAS FIRST 48 BYTES                                 *
***********************************************************************
*
*
         XC    ZERO(48,RF),ZERO(RF)     CLEAR FIRST 48 BYTES
*
***********************************************************************
*  FORMAT THE CONTROL BLOCKS IN SAVE AREA - CURRENT REG VALUES ARE
***********************************************************************
*        RJ =  LENGTH OF GETMAIN
*        RB =  POINTER TO USER'S IMAGE AREA
*        RC =  LENGTH OF IMAGE AREA AND ALSO SEG SAVE LENGTH
*        RD =  VOLATILE - MAY BE USED FOR ANY PURPUSE
*        RJ =  NO. OF CHAN PROG'S OR NO. OF BUFFERS (+1)
*        RF =  ADDRESS OF GETMAIN AREA
*        RUCB= POINTER TO DEB ACCESS METHOD SEC + 4
*        RDCB= POINTER TO DCB
*        RBASE=BASE REG
*        RCORE THRU RWTGC CONTAIN XCTL CONTROL POINTERS
*        RTIOT = NUMBER OF BYTES IN GETMAIN
*        RE =   VOLATILE
***********************************************************************
         ST    RB,TOTUSRWA              STORE POINTER TO USER IMAGE
         ST    RTIOT,TOTTOTLN           SAVE LENGTH OF GETMAIN
         MODESET  EXTKEY=SUPR           BACK TO DATA MANAG KEY   Y02072
         ST    RF,FOUR(RUCB)            SAVE WA IN DEB AM        A44122
*                                       SECTION                  A44122
         MODESET  KEYADDR=DXUKEY,WORKREG=14  GET INTO USER KEY   Y02072
         ST    RC,TOTSVLNG              STORE IMAGE AND SV LENGTH
         LA    RD,FOUR8(RF)             GET ADDR OF FIRST SEG
         ST    RD,TOTSTART              STORE IT IN TABLE
         LA    RD,ZERO(RTIOT,RF)        GET END ADDR OF TABLE
         SR    RD,RC                    SUBTRACT 1 SEG LENGTH
*
*  RD NOW CONTAINS ADDR OF LAST SEGMENT OF THE SAVE AREA
*
         ST    RD,TOTENDAD              STORE IT IN CONTROL BLOCK
         LR    RC,RF                    SAVE WA POINTER          M0653
*                                                                     *
***********************************************************************
*  IT IS NOW NECESSARY TO SETUP FOR THE LOADING OF THE RESIDENT SAVE  *
*        ROUTINE WHICH WILL BE BALR'D TO BY THE END OF BLOCK ROUTINES *
***********************************************************************
*                                                                     *
         MODESET  EXTKEY=DATAMGT        GET INTO DATA MANAG KEY  Y02072
         USING WTG,RWTG                                          Y02072
         MVC   WTGMODID,SAVMOD          ID TO MOD NAME           Y02072
         DROP  RWTG                                              Y02072
         L     RWK1,CVTPTR              LOAD CVT ADDRESS         YM1140
         USING CVT,RWK1                 CVT ADDRESSABILITY       YM1140
         L     RWK1,CVTLINK             GET LPALIB DCB ADDRESS   YM1140
         DROP  RWK1                     DROP CVT BASE            YM1140
*
         LOAD  EPLOC=(RWTG),DCB=(1)                              YM1140
***********************************************************************
*                                                                     *
***********************************************************************
*  THE ADDR OF THE LOADED ROUTINE IS RETURNED IN RE (REG 0)           *
*
*  RUCB POINTS TO DEB AT ACCESS METHOD DEPENDENT SECTION.  ADD
*  SIZE OF ACCESS METHOD DEPENDENT SECTION TO POINT TO DEB
*  SUBROUTINE ID SECTION.
*
***********************************************************************
*
         SR    RF,RF                                             A44122
         IC    RF,DEBAMLNG              GET LENGTH               A44122
         AR    RUCB,RF                  POINT TO SUBROUTINE ID   A44122
*                                       SECTION OF DEB
         MVC   0(L'WTGMODID,RUCB),SAVMOD  MOVE ID TO DEB         Y02072
         LR    RF,RC                    RESTORE WA POINTER       M0653
         USING TOTSAVWA,RF              ESTABLISH BASE THIS DSECT
         SR    RD,RD                    CLEAR REGISTER
         IC    RD,DEBNMSUB              PICK UP DEB SUBRTN COUNT
         LA    RD,ONE(RD)               BUMP COUNT BY ONE
         STC   RD,DEBNMSUB              STORE IT BACK IN DEB
         MODESET  KEYADDR=DXUKEY,WORKREG=12  GET INTO USER KEY   Y02072
         ST    RE,TOTSVPTR              STORE SAVE RTN ADDR
*                                                                     *
* IT IS NOW NECESSARY TO SAVE THE USERS IMAGE AREA INITIALLY          *
*                                                                     *
         L     RB,TOTUSRWA              GET PTR TO USERS IMAGE AREA
         L     RC,TOTSTART              GET FIRST IMAGE SAVE SEG
         ST    RC,TOTCURNT              INITIALIZE TOTCURNT POINTER
         ST    RC,TOTEOVPT              INITIALIZE EOV POINTER
         LA    RJ,KON256                LOAD VALUE OF 256
         LH    RD,0(RB)                 GET USER'S LENGTH
SUTF070  EQU   *
         CR    RD,RJ                    COMPARE SEG LENGTH TO 256
         BNH   SUTF080                  BR IF LEN NOT HIGH
*                                                                     *
*                                                                     *
         BCTR  RJ,0                     DECR LNGTH TO 255 FOR MOVE
         EX    RJ,MOVIMAGE              MOVE 256 BYTES
         LA    RJ,1(RJ)                 RESTORE TO 256
         AR    RC,RJ                    BUMP ADDR BY 256
         AR    RB,RJ                    BUMP ADDR BY 256
         SR    RD,RJ                    SUB 256 FROM IMAGE LEN
         B     SUTF070                  BR TO MOVE MORE BYTES
SUTF080  EQU   *                        SYMBOLIC ADDR
*                                                                     *
         BCTR  RD,0                     DECR LNGTH FOR MOVE INSTR
         EX    RD,MOVIMAGE              MOVE REMAINING BYTES
*                                                                     *
*  THE USER'S IMAGE AREA HAS NOW BEEN STORED IN THE FIRST SAVE SEG    *
*                                                                     *
*                                                                     *
***********************************************************************
*  AT THIS POINT THE SAVE ROUTINE HAS BEEN LOADED, THE ID HAS BEEN    *
*        PLACED IN THE DEB, AND THE SUBROUTINE COUNT HAS BEEN UP-     *
*        DATED.  ALSO THE GETMAIN FOR THE SAVE AREAS HAS BEEN MADE    *
***********************************************************************
*                                                                     *
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
RELOOPA  EQU   *                                                   UT18
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP1B           ID TO WTG TABLE        @Z30TSCF
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BC    8,SUTF000                YES, THIS MODULE REQD AGAIN
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
TURNOFF  EQU   *                                                   UT18
         NI    DCBOPTCD,X'FD'           TURN OFF TOTALING BIT      UT18
         B     RELOOPA                  BRANCH TO SET UP XCTL      UT18
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
*
*
WAOFF    EQU   32                       PARAMETRIC 32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
DEBBASI  EQU   32                       SIZE OF DEB BASIC        A44122
*                                       SECTION                  A44122
ZERO     EQU   0                        PARAMETRIC 0
ONE      EQU   1                        PARAMETRIC 1
TWO      EQU   2                        PARA2
THREE    EQU   3                        PARA 3
FOUR     EQU   4                        PARA 4
FIVE     EQU   5                        PARA 5
SIX      EQU   6                        PARA 6
EIGHT    EQU   8                        PARA 8
FOURTEEN EQU   14                       PARA 14
TWENTY2  EQU   22                       PARA 22
TWENTY4  EQU   24                       PARA  24
TWENTY5  EQU   25                       PARA 25
TWENTY7  EQU   27                       PARA 27
THREE2   EQU   32                       OFFSET TO DEB LENGTH
THREE6   EQU   36                       PARAMETRIC 36
FOUR8    EQU   48                       PARAMETRIC 48
KON256   EQU   256                      LENGTH FOR MOVE INSTRUCTION
QSAMTEST EQU   X'01'                    MASK FOR QSAM TEST
SETOFF   EQU   X'FE'                    MASK FOR DCBOFLGS
NINE     EQU   9                        PARAMETRIC 9
DEFNCP   EQU   1                        DEFAULT NCP              XA3085
DEFBUFNO EQU   5                        DEFAULT BUFNO           AZ07019
OPIDCNST DC    C'0S'                    CONSTANT FOR OS TEST
AMIDCNST DC    C'1Y'                    ID FOR THIS MODUEL
SOP1B    DC    C'1B',VL3(IGG0191B)      NEXT MOD               @Z30TSCF
SAVMOD   DC    C'AX'                    USER TOTALING MOD        Y02072
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROB DETER             @Z30TSCF
*
MOVIMAGE MVC   ZERO(0,RC),ZERO(RB)      VARIABLE MOVE INSTRUCTION
*
*
         DS    0H
***********************************************************************
*  THE FOLLOWING ARE ALL OF THE EQUATE STATEMENTS FOR THIS MODULE     *
***********************************************************************
*                                                                     *
UTENTRY  EQU   X'0A'                    MASK FOR TOTALING ENTRY
ENDOLIST EQU   X'80'                    MASK FOR END OF LIST
CNTLBLKS EQU   16                       ABSOLUTE OFFSET OF CVT
TOTUNSUP EQU   104                      USER TOTALING UNSUPPORT  Y02072
*                                                                     *
***********************************************************************
*  THE FOLLOWING ARE THE CONSTANTS REQUIRED IN THIS MODULE            *
***********************************************************************
*                                                                     *
FORTY8   DC    H'48'                    CONSTANT OF 48
ZEROHW   DC    H'0'
         SPACE 2
PATCH    DC    25H'0'                   PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
*                                                                     *
SRT      DSECT
         IEFUCBOB
*
         EJECT
           DCBD  DSORG=PS
CVT      DSECT
         CVT
*   TASK CONTROL BLOCK
         CNOP  0,4
TCB      DSECT
TCBRBP   DS    F                       PO9NTER TO EXECUTING RB
TCBPIE   DS    F                       POINTER TO PROG. INTERRUPT EL.
TCBDEB   DS    F                       POINTER TO DEB QUEUE
TCBTIO   DS    F                       POINTER TO TIOT
TCBCMP   DS    F                       TASK COMPLETION CODE
TCBTRN   DS    F                       TESTRAN FIELD
TCBMSS   DS    F                       DATA BLOCK QUEUE ELEMENT POINTER
TCBPKF   DS    CL1                     RESERVED FOR FUTURE USE
TCBFLGS  DS    FL5                     FLAG BYTES
TCBLMP   DS    CL1                     RESERVED FOR FUTURE USE
TCBDSP   DS    CL1                     RESERVED FOR FUTURE USE
TCBLLS   DS    F                       POINTER TO LOAD LIST
TCBJLB   DS    F                       POINTER TO JOBLIB DCB
TCBJSE   DS    F                       LIST OF INACTIVE PROGRAMS ADDR.
TCBGRS   DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDF   DS    CL1                     TCB IDENTIFIER FIELD
TCBFSA   DS    CL3                     POINTER TO 1ST PROB.PROG.SAVEAR
TCBTCB   DS    F                       RESERVED FOR FUTURE USE
TCBTME   DS    F                       POINTER TO TIMER ELEMENT
         DS    CL24
TIOT     DSECT
TIOELNGH DS    CL1                           LENGTH OF THIS ENTRY
TIOESTTA DS    CL1                           STATUS -A-
TIOERLOC DS    CL2                           REL. LOC OF POOL
TIOEDDNM DS    2F                            DDNAME
TIOEJFCB DS    1F                            JFCB DISK ADDR
TIOESTTB DS    0CL1
TIOEFSRT DS    CL4
         DS    CL1
*        TIOT POOL ENTRY
TIOPNSLT DS    XL1                           NR.OF SLOTS FOR POOL
         DS    CL1
TIOPNSRT DS    XL1                           NR.OF DEVICES (FILLED
*                                             SLOTS)
TIOPPOOL DS    CL8                           POOL NAME
TIOPSTTB DS    XL1                           STATUS OF SLOT
TIOPSLOT DS    XL3                           SRT ADDRESS OR EMPTY SLOT
TIOTFEND DS    1F                            FINAL END OF AN ENTRY
         SPACE 1
*   DATA EXTENT BLOCK  (UNTIL PROTIOS CHANGES)
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
CCWOFSET EQU   DXCCW12-FORCORE     CCW RELOCATABLE OFF SET FOR DXCCW12
DCBOFSET EQU   DCBDEBAD-IHADCB     DEB RLCATBL OFFSET IN DCB
DEBB     DSECT                         THIS DSECT DESCRIBES THE DEB
DEBNMSUB DS    0CL1                    NO. OF SUB RTNS
DEBTCBAD DS    CL4                     TASK CONTROL BLOCK ADDR
DEBAMLNG DS    0CL1                    LENGTH OF ACCESS METHOD SEC
DEBDEBAD DS    CL4                     ADDR OF NEXT DEB IN DEB CHAIN
DEBOFLGS DS    0CL1                    DEB OPEN FLAGS
DEBIRBAD DS    CL4                     ADDR OF THE IRB CONTROL BLOCK
DEBOPATB DS    0CL1                    OPEN ATRIBUTES
DEBSYSPG DS    CL4                     SYSTEM PURGE FIELD
DEBNMEXT DS    0CL1                    NUMBER OF EXTENTS IN DEB
DEBUSRPG DS    CL4                     USER PURGE FIELD
DEBPRIOR DS    0CL1                    INFO BYTE
DEBECBAD DS    CL4                     EVENT CONTROL BLOCK ADDR
DEBPROTG DS    0CL1                    INFO BYTE
DEBDEBID DS    0CL1                    INFO BYTE
DEBDCBAD DS    CL4                     ADDR OF DCB
DEBEXSCL DS    0CL1                    SCALING FACTOR OF DEB EXTENT
DEBAPPAD DS    CL4                     APPENDAGE TABLE ADDR
DEBDVMOD DS    0CL1                    DEVICE MODIFIER BYTE
DEBUCBAD DS    CL4                     UNIT CTL BLOCK ADDR
DEBTVLSQ DS    0CL2                     VOL SEQ FOR TAPE
DEBBINUM DS    CL2                     BIN NUMBER
DEBTVLNM DS    0CL2                     NO OF VOL FOR TAPE
DEBSTRCC DS    CL2                     START CYLINDER NUMBER
DEBSTRHH DS    CL2                     START HEAD NUMBER
DEBENDCC DS    CL2                     END CYLINDER NUMBER
DEBENDHH DS    CL2                     END HEAD NUMBER
DEBNMTRK DS    CL2                     NUMBER OF TRACKS
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES
DEBVOLSQ DS    H                       VOL SEQUENCE NUMBER
DEBVOLNM DS    H                       VOLUME NUMBER
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2
DEBSUBID DS    H                       SUBROUTINE ID ( 2 BYTES )
TOTSAVWA DSECT
*                                                                     *
***********************************************************************
*  THIS DSECT ESTABLISHES THE SYMBOLIC REFERENCES FOR THE USER TOTAL- *
*        ING FACILITY SAVE WORKAREA.                                  *
***********************************************************************
TOTFLGBT DS    0CL1                     X'80' = NO SAVE FOR UTF    UT18
TOTSVPTR DS    F                        ADDR OF THE SAVE RTN
TOTCURNT DS    F                        ADDR OF CURRENT SAVE SEGMENT
TOTSTART DS    F                        BEGINNING ADDR OF SAVE SEGMENTS
TOTENDAD DS    F                        ADDR OF LAST SAVE SEGMENT
TOTSVLNG DS    F                        LENGTH OF THE USER'S SAVE AREA
TOTUSRWA DS    F                        ADDR OF THE USERS TOT AREA
TOTTOTLN DS    F                       TOTAL LEN OF GETMAIN
TOTEOVPT DS    F                        POINTER TO EOV SEG
TOTREGSV DS    D                        SAVE AREA FOR R11 & R12
         DS    D                       SAV AREA  FOR REG'S
***********************************************************************
           END
