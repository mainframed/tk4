8103     TITLE 'IGG08103 - GET FCB IMAGE- ANAL. REPLIES'         M0191
IGG08103 CSECT                                                   M0191
* /*  START OF SPECIFICATIONS****                             @Z40MSAP
*01*  PROCESSOR = ASSEMXF:
**** END OF SPECIFICATIONS **                                @Z40MSAP*/
*
* MODULE-NAME = IGG08103
*
* DESCRIPTIVE-NAME = LOAD FCB
*
* COPYRIGHT = NONE
*
* STATUS = VS2-2, LEVEL 0
*
* FUNCTION = USE BLDL MACRO TO LOCATE FCB IMAGE IN SYS1.IMAGELIB
*            USE LOAD MACRO TO LOAD THE FCB IMAGE INTO CPU STORAGE
*            FROM SYS1.IMAGELIB
*            WHEN THE FCB IMAGE IS NOT FOUND, ISSUE A WTOR MESSAGE
*            IEC127D REQUESTING THE OPERATOR TO SPECIFY AN ALTERNATE
*            FCB IMAGE
*            ANALYZE OPERATOR REPLYS AND ISSUE WTOR MESSAGE IEC125I
*            IF IT IS INVALID
*
* NOTES =
*    DEPENDENCIES = BLANK AND COMMA ARE USED--CORRECTABLE BY
*        REASSEMBLY.  THE FOLLOWING CHARACTER STRINGS ARE USED IN
*        TESTING OPERATOR REPLIES:
*        'A', 'V', 'U', 'C', 'ALIGN', 'VERIFY', 'CANCEL'
*        THESE STRINGS ARE CONSIDERED TO BE OPERATING SYSTEM KEYWORDS
*        RATHER THAN LANGUAGE DEPENDENT PHRASES.
*
*        BLANKS ARE OR'ED TO ALL REPLIES TO CONVERT THEM TO UPPER CASE
*
*    RESTRICTIONS = NONE
*
*    REGISTER-CONVENTIONS = ALL REGISTER NAMES BEGIN WITH R
*        SEE EQUATES IMMEDIATELY FOLLOWING PROLOG
*
*    PATCH-LABEL = PATCH, AN AREA ASSEMBLED AS BINARY 0
*
* MODULE-TYPE =
*    PROCESSOR = OS/VS ASSEMBLER
*
*    MODULE-SIZE = 690 DECIMAL BYTES
*
*    ATTRIBUTES = REENTRANT, ENABLED, PRIVELEGED,
*        EXECUTES IN SETPRT INVOKER KEY
*        CODE AT ENTRY POINT WTOR IS NON-PRIVELEGED
*
* ENTRY POINT = IGG08103
*    PURPOSE = SEE FUNCTION
*
*    LINKAGE = BRANCH FROM IGC0008A,IGG08101, OR IGG08102
*
*    INPUT =
*        REGISTER 4(RSPW) = WORK AREA ADDRESS
*        REGISTER 5(RPAR) = PARAMETER LIST ADDR
*        REGISTER 6(RSVR) = SVRB EXTENDED SAVE AREA ADDRESS
*        REGISTER 12(RWK5) = RETURN CODE FOR USER FROM UCS LOADS
*
*    OUTPUT =
*      REGISTERS = TO INVOKER
*        R0 = UNDEFINED
*        R1 = UNDEFINED
*        R2-R14 = UNCHANGED
*        R15 = RETURN CODE (SEE EXIT-ERROR)
*
*      REGISTERS = TO IGG08104
*        R0-R3 = UNDEFINED
*        R4(RSPW) = AS FOR INPUT
*        R5/BYTE 0(RPAR) = UCS RETURN CODE
*        R5/BYTES 1-3(RPAR) = PARAMETER LIST ADDRESS
*        R6(RSVR) = AS FOR INPUT
*        R7 = UNDEFINED
*        R8(RWK4) = ADDR OF IMAGE TO BE LOADED
*        R9(RIOB) = AS FOR INPUT
*        R10-R14 = UNDEFINED
*        R15 = RESERVED FOR BRANCH INTERFACE
*
*      MESSAGES = RETRIEVED FROM IGGMSG01
*          'IEC127D XXX,YYYY FCB IMAGE NOT FOUND'
*          'IEC125I ERROR - REPEAT REPLY'
*
* EXITS-NORMAL = BRANCH TO IGG08104 TO LOAD THE FCB
*
* EXITS-ERROR = WHEN OPERATOR CANCELS, RETURN CONTROL TO CALLER
*                WITH RETURN CODE = 04
*               WHEN PERMANENT I/O ERRORS OCCUR DURING BLDL,
*                RETURN CONTROL TO CALLER WITH RETURN CODE = 08.
*
* ENTRY-POINT = WTOR (INTERNAL ENTRY)
*    PURPOSE = ISSUE WTOR SVC IN PROBLEM STATE TO AVOID INTEGRITY
*        EXPOSURE FROM NON-PROTECTED MESSAGE
*
*    LINKAGE = SYNCH FROM WITHIN THIS MODULE
*
*    INPUT =
*        REGISTER 4(RSPW) = WORK AREA ADDRESS
*        REGISTER 14(R14) = RETURN ADDRESS
*
*    OUTPUT =
*      REGISTERS = TO INVOKER
*        R0 = UNDEFINED
*        R1 = UNDEFINED
*        R2-R14 = UNCHANGED
*        R15 = UNDEFINED
*
* EXTERNAL REFERENCES =
*   ROUTINES = BLDL    (SVC 18)
*              DELETE  (SVC  9)
*              FREEMAIN(SVC 10)
*              IGG08104(SETPRT LOAD 5)
*              IMGLIB  (SVC105)
*              LOAD    (SVC  8)
*              SYNCH   (SVC 12)
*              WAIT    (SVC  1)
*              WTOR    (SVC 35)
*
*   DATA-AREAS = SPP -- SETPRT PARAMETER LIST
*              SPW5 -- BLDL PARAMETER LIST                     @Z40MSAP
*              SPW -- SETPRT WORK AREA
*              SPRBXSV -- RB EXTENDED SAVE AREA
*              FCBIM -- FCB IMAGE
*              MSG -- MESSAGE CSECT
*   CONTROL-BLOCKS =
*              DCB -- DATA CONTROL BLOCK
*              DEB -- DATA EXTENT BLOCK
*              ECB -- EVENT CONTROL BLOCK
*              EXLST -- DCB EXIT LIST
*              IOB -- INPUT/OUTPUT BLOCK
*              UCB -- UNIT CONTROL BLOCK
*
* MACROS = BLDL,DELETE,FREEMAIN,IMGLIB,LOAD,SYNCH,WAIT,WTOR,
*          IEFUCBOB, IEZDEB, IEZIOB, IGGMSG IGGSPW,
*          IHADCB, IHAEXLST, IHAFCBIM, IHASPP,
*
* CHANGE ACTIVITY = AS FOLLOWS
*
* NOTE = THIS MODULE WAS BROUGHT UP TO STANDARDS FOR VS2-2
*        WHICH CAUSED ALL PREVIOUS RELEASE SEQUENCE NUMBER DELETIONS TO
*        BECOME INVALID.
*
*        RELEASE 21 DELETIONS
*THE FOLLOWING PTMS WERE FIXED IN THIS RELEASE = 0151, 0084, 0191, 1759
*THE FOLLOWING APARS WERE FIXED IN THIS RELEASE - 52346, 50699
*THE FOLLOWING DEVELOPMENT CODE WAS FOR 2245 SUPPORT - S21092
*
*        VS2 RELEASE 2 DELETIONS
*THE FOLLOWING DEVELOPMENT CODE WAS FOR VS2-2 - Y02072
*                                                                YM3920
*                                                                YM5703
*
*        VS2 RELEASE 4 DELETIONS
*                                                              @Z40MSMI
*        VS2 037 CHANGES
*C147300,147400                                                @ZA20901
*A132910-132950,158500-164500                                  @ZA20901
*C147330-147340                                                @ZA25004
*A322500,465630-465660                                         @ZA25004
*C147300,147340,161500,162500,163000                           @ZA28905
*
*       VS2 RELEASE 4.0 CHANGES/DELETIONS
*ASSEMBLED WITH NEW VERSION OF BLDL MACRO                       ZA02250
*
         EJECT
***********************************************************************
*
*   REGISTER CONVENTIONS USED THROUGH OUT ALL SETPRT MODULES
*
***********************************************************************
R0       EQU   0                        PARAMETER REGISTER
RWK1     EQU   R0                       WORK REGISTER
R1       EQU   1                        PARAMETER REGISTER
RWK2     EQU   R1                       WORK REGISTER
RDCB     EQU   2                        DCB REGOSTER
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        ADDRESS OF MESSAGE/WORK AREA
RPAR     EQU   5                        PARAMETER LIST ADDRESS
RSVR     EQU   6                        SVRB EXTENDED SAVE AREA
RRET     EQU   7                        SUBROUTINE RETURN
RWK4     EQU   8                        WORK REGISTER
RIOB     EQU   9                        IOB REGISTER
RUCB     EQU   10                       UCB REGISTER
RDEB     EQU   11                       DEB REGISTER
RBLDL    EQU   RDEB                     BLDL PARAMETER LIST      YM5703
RWK5     EQU   12                       WORK REGISTER
RWK6     EQU   13                       WORK REGISTER
R14      EQU   14                       PARAMETER REGISTER
RWK7     EQU   R14                      WORK REGISTER
R15      EQU   15                       PARAMETER REGISTER
RWK8     EQU   R15                      WORK REGISTER
         EJECT
***********************************************************************
*              RETURN CODES
*
NOERR    EQU   X'00'                    RETURN CODE FOR SUCCESSFUL
*                                         COMPLETION
NOTINCOR EQU   X'04'                    RETURN CODE FOR FCB IMAGE NOT
*                                         FOUND
PERMIOER EQU   X'08'                    RETURN CODE FOR PERM I/O ERROR
*
***********************************************************************
*              MESSAGE NUMBERS IN IGGMSG01
*        ALL MESSAGE NUMBERS HAVE BEEN DOUBLED IN THESE EQUATES
*        TO PROVIDE OFFSETS INTO THE MESSAGE CSECT.
*        THIS IS DEPENDENT ON L'MSGINDOF BEING 2.
*
MSG127   EQU   11*2                     IEC127D                  Y02072
MSG125   EQU   8*2                      IEC125A                  Y02072
*
***********************************************************************
*              OTHER EQUATES
*
BLANK    EQU   X'40'                    CONSTANT=' '
COMMA    EQU   C','                     CONSTANT=','
PRT2245  EQU   X'0B'                    MASK FOR 2245 PRINTER    S21092
F2245ID  EQU   C'K'                     CNST FOR 2245 ID'S        M0191
ERRCODE  EQU   4                        FOR TESTING RETURN CODE FROM
*                                       BLDL
NOFCBLD  EQU   X'40'                    FCB NOT TO BE LOADED   @ZA20901
ALIGNMSK EQU   X'01'                    ALIGN FCB              @ZA20901
VERFYMSK EQU   X'80'                    VERIFY FCB             @ZA20901
FCBOFSET EQU   X'08'                    OFFSET TO FCBID IN UCB @ZA20901
RTNCD00  EQU   X'00'                    RETUN CODE OF X'00'    @ZA20901
         EJECT
*
* INITIALIZE REGISTERS
*
         USING SPRBXSV,RSVR             LOADED ON ENTRY          Y02072
         BALR  RBASE,0                  INIT BASE REG
         USING FCBFN000,RBASE
FCBFN000 EQU   *
         SPACE
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG08103'              MODULE NAME              Y02072
         DC    C'@ZA28905'              LAST SHIP CODE         @ZA28905
         DC    C'12/21/77'              LAST DATE MODIFIED     @ZA28905
BEGIN    DS    0H                                                Y02072
         SPACE
         USING SPPARM,RPAR
         L     RDCB,SPPDCBA             LOAD USER DCB ADDRESS
         USING IHADCB,RDCB
         L     RDEB,DCBDEBAD            LOAD DEB ADDRESS
         USING DEBBASIC,RDEB
         L     RUCB,DEBSUCBA            LOAD UCB ADDRESS
         DROP  RDEB
         L     RBLDL,SPRBLDLA           GET ADDR OF BLDL LIST    YM5703
         USING SPW5,RBLDL                                      @Z40MSAP
         USING UCBOB,RUCB
         USING SPW,RCORE
         L     RWK8,UCBXTADR            GET UCB EXTEN ADDR       Y02072
         USING UCBUCS,RWK8                                       Y02072
         MVC   SPWFCB2H,UCBFCBID        ASSUME USER DID NOT SPEC Y02072
*                                         AN FCB IMAGE           Y02072
         MVI   SPWFLG1,0                NO OPTIONS IF USER DID   Y02072
*                                         NOT SPEC IMAGE         Y02072
         CLI   SPPFCB,0                 DID USER SPEC AN IMAGE   Y02072
         BE    FCBFN001                 NO, USE CURRENT IMAGE    Y02072
         MVC   SPWFCB2H,SPPFCB          MOVE FCB IMAGE TO WORKA  Y02072
         MVC   SPWFLG1,SPPVERAL         MOVE FCB OPT BITS TO WORKA
FCBFN001 EQU   *                                                 Y02072
*
* SAVE RETURN CODE FOR EXIT ROUTINE
*
         LA    RPAR,0(RPAR)             CLEAR 0 BYTE
         SLL   RWK5,24                  SHIFT RETURN CODE TO 0 BYTE
         OR    RPAR,RWK5                SAVE UCS RTN CODE IN PARM REG
         TM    UCBFCBOP,X'01'           PARITY ERROR ON FCB ?  @ZA20901
         BO    FCBFN005                 YES-RELOAD FCB IMAGE   @ZA20901
         CLC   SPWFCB2H,FCBOFSET(RWK8)  SPECIFIED FCB = TO FCB @ZA20901
*                                       ID IN UCB?             @ZA20901
         BNE   FCBFN005                 NO- GO LOAD FCB IMAGE  @ZA20901
         OI    SPWFLG1,NOFCBLD          SET NO LOAD FCB IMAGE  @ZA28905
         TM    SPWFLG1,VERFYMSK         VERIFY FCB ?           @ZA28905
         BO    FCBFN005                 YES-LOAD FCB TO VERIFY @ZA20901
         TM    SPWFLG1,ALIGNMSK         ALIGN FCB ?            @ZA28905
         BO    FCBFN050                 YES-EXIT TO NEXT MODUL @ZA20901
         LA    RWK5,RTNCD00             NO-SET RET CODE X'00'  @ZA20901
         B     FCBFN150                 RETURN TO PROB PROGRAM @ZA20901
*
* CORE TRANSFER ROUTINE
* CHECK IF THE FCB IMAGE TO BE LOADED IS SPECIFIED IN THE DCBEXLST
* IF YES, LOAD THE FCB WITH THE IMAGE SPECIFIED BY THE USER'S DCB
* IF NO, GO TO BLDL ROUTINE TO LOCATE FCB IMAGE IN SYS1.IMAGELIB
*
FCBFN005 EQU   *
         TM    DCBMACF1,DCBMRECP        IS THIS AN EXCP DCB      YM3920
         BZ    FCBFN007                 NO, DCB HAS FOUND EXTN   YM3920
         TM    DCBMACF1,DCBMRFE         IS FOUNDATION EXTN PRES  YM3920
         BZ    FCBFN030                 NO, BYPASS LOOKING FOR   YM3920
*                                         EXIT LIST              YM3920
FCBFN007 EQU   *                                                 YM3920
         L     RWK4,DCBEXLST            GET ADDRESS OF DCB EXIT LIST
         LA    RWK4,0(RWK4)             CLEAR RECFM FROM BYTE 0
         LTR   RWK4,RWK4                TEST IF DCBEXLST SPECIFIED
         BZ    FCBFN030                 NO GO TO BLDL ROUTINE
*
* FIND FCB IMAGE ADDRESS IN DCB EXIT LIST
*
FCBFN010 EQU   *
         USING EXLST,RWK4
         CLI   EXLCODES,EXLFCBIM        CK FOR ENTRY WITH FCB IM ADDR
         BE    FCBFN020                 YES GO CK IF FCB ID'S EQUAL
         CLI   EXLCODES,EXLLASTE+EXLFCBIM   TST IF LAST ENTRY IN EXLST
*                                              IS AND FCB IMAGE
         BE    FCBFN020                 YES GO CK FCB ID'S
FCBFN015 EQU   *
         TM    EXLCODES,EXLLASTE        TEST FOR END OF EXLST
         BO    FCBFN030                 YES GO TO BLDL RTN
         LA    RWK4,EXLLENTH(RWK4)      INCREMENT POINTER TO NEXT ENTRY
         B     FCBFN010                 GO CK IF THIS ENTRY FCB IM ADDR
*
* FCB IMAGE SPECIFIED IN DCBEXLST -CK IF IT IS IMAGE TO BE LOADED
*
FCBFN020 EQU   *
         L     RWK2,EXLENTRA            GET ADDR OF FCB FROM EXLST
         USING FCBIMAGE,RWK2
         LA    RWK2,0(RWK2)             CLEAR 0 BYTE
         CLC   SPWFCB2H,FCBIMGID        TST IF FCB ID'S EQUAL
         BNE   FCBFN015                 NO CONTINUE SEARCHING EXITLST
         LA    RWK4,FCBIMBEG            GET BEGINNING ADDR OF FCB
         B     FCBFN050                 GO TO BRANCH TO NEXT EXECUTOR
         DROP  RWK2
*
* BLDL ROUTINE TO LOCATE FCB IMAGE IN SYS1.IMAGELIB
*
FCBFN030 EQU   *
         L     RWK2,SPWFCB2H            GET FCB ID IN USER KEY   Y02072
         SPACE
         MODESET  EXTKEY=DATAMGT                                 YM5703
         SPACE
         MVC   SPWBLDLC,BLDLCNST        BLDLIST TO WORK AREA
         MVC   SPWFCBMB,FCBCONST        MOVE PREFIC FOR FCBID
         ST    RWK2,SPWBLFCB            FCB ID TO BLDL LIST      Y02072
         CLI   UCBTBYT4,PRT2245         CHECK FOR 2245 PRINTER   S21092
         BNE   FCBFN035                 IF NOT 2245 SKIP NEXT    S21092
*                                         INSTR                  S21092
         MVI   SPWFCB2,F2245ID          MOVE 'K' INTO 4TH BYTE   M0191
*                                          OF IMAGE ID (FCBK)    M0191
FCBFN035 EQU   *                                                 S21092
         L     R1,SPRIDCBA              GET SYS1.IMAGELIB DCB ADDRESS
         BLDL  (1),SPWBLDLC             BLDL TO FIND FCB IMAGE
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=14                      YM5703
         SPACE
*
* TEST RETURN CODE FROM BLDL
*  -X'00' - FOUND
*  -X'04' - NOT FOUND
*  -X'08' - PERM I/O ERROR
*
         LA    RWK7,ERRCODE             SET REG TO TEST RETURN CODE
         CLR   R15,RWK7                 TEST RETURN CODE FROM BLDL
         BL    FCBFN040                 FCB IMAGE FOUND-GO LOAD FCB IM
         BE    FCBFN055                 FCB IMG NOT FOUND GO ISSUE WTOR
*
* PERMANENT I/O ERROR DURING BLDL - RETURN TO PROBLEM PROG WITH
* RETURN CODE X'08' IN BITS 16-23 OF REG 15.
* IF I/O ERROR PERSIST, RUN C.E. DIAGNOSTICS FOR SYSTEM RESIDENT DASD
*
         LA    RWK5,PERMIOER            SET RETURN CODE =X'08'
         B     FCBFN150                 GO TO FREE MESSAGE/WORK AREA
*
* WHEN FCB IMAGE IS FOUND IN SYS1.IMAGELIB LOAD FCB IMAGE
*
FCBFN040 EQU   *
         L     RWK6,SPWBLFCB            SAVE FCB IMGID
         MVC   SPWFCBIM,SPWFCBMB        MOVE FCB IMGID
         L     R1,SPRIDCBA              GET ADDR OF SYS1.IMAGELIB DCB
         SPACE
         MODESET  EXTKEY=DATAMGT                                 YM5703
*
         LOAD  DE=SPWFCBMB,DCB=(1)      LOAD FCB FROM SYS1.IMAGELIB
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=8                       YM5703
*
         OI    SPWFLG5,SPWFCBDE         INDIC TO 8104 THAT IMAGE Y02072
*                                         MUST BE DELETED        Y02072
         LR    RWK4,R0                  GET ADDR OF FCB LOADED
*
* BRANCH ROUTINE
*
FCBFN050 EQU   *
         L     R15,ID4                  ADDRESS OF 0GG08104    @Z40MSMI
         BR    R15                      BRANCH TO NEXT MODULE  @Z40MSMI
*
* WTOR 'IEC127D XXX,YYYY FCB IMAGE NOT FOUND' REQUEST OPERATOR
* TO SPECIFY AN ALTERNATE FCB IMAGE OR CANCEL ATTEMPT TO LOAD FCB
*
FCBFN055 EQU   *
         MVC   SPWREPID,SPWBLFCB        SAVE FCB ID FOR MESSAGE
         LA    RWK2,MSG127              INDICATE MSG WANTED      Y02072
         BAL   RRET,GETMSG              GO GET MESSAGE           Y02072
         BAL   RRET,FILLFLDS            FILL IN ID AND UNIT      Y02072
*
* CLEAR REPLY AREA AND FCB ID SAVE AREA / ISSUE WTOR AND WAIT
*
FCBFN060 EQU   *
         MVC   SPWREPLY,CLEARFLD        CLEAR REPLY AREA
         MVC   SPWREPID,CLEARFLD        CLEAR REPLY NAME
         MVI   SPWRPECB,0               RESET REPLY ECB
         TM    SPRKEY,SPRUSKEY          IF CALLED AS SYS FUNCT   Y02072
         BZ    FCBFN065                 DO NOT SYNCH TO WTOR     Y02072
         SYNCH WTOR                     ISSUE WTOR IN PROB STATE Y02072
         B     WAIT                     THEN WAIT FOR COMPLETION Y02072
FCBFN065 EQU   *                        SYS WTOR                 Y02072
         BAL   R14,WTOR                 ISSUE WTOR IN SUP STATE  Y02072
WAIT     EQU   *                                                 Y02072
         WAIT  ECB=SPWRPECB,LONG=YES    ISSUE WAIT FOR REPLY     Y02072
         XC    SPWMSGID(4),SPWMSGID     CLEAR MSG ID           @ZA25004
*
* TEST OPERATOR REPLY FOR ONE OF THE FOLLOWING
* (1) 'U'- USE CURRENT FCB IMAGE - RETURN PROB PROG- RETURN CODE=00
* (2) 'C'- CANCEL RETURN TO PROBLEM PROGRAM RETURN CODE =X'04'
* (3) FCB IMAGE REPLIED - ANALIZE FCB IMAGE
*
         OC    SPWREPLY,LOWERCSE        SET FOR LOWER CASE REPLY
         LA    RWK5,NOERR               LOAD RETURN CODE=X'00'
         CLC   SPWREPLY(L'USECON),USECON  CK IF REPLY='U' USE
         BE    FCBFN075                 YES, USE CURRENT IMAGE   Y02072
         CLC   SPWREPLY(L'CANCEL01),CANCEL01  CK IF REPLY='CANCEL'
         BE    FCBFN070                 YES GO SET RET CODE =X'04'
         CLC   SPWREPLY(L'CANCEL02),CANCEL02  CK IF REPLY='C ' CANCEL
         BNE   FCBFN080                 NO GO TO ANALIZE REPLY
*
* OPERATOR CANCELED FCB LOAD BECAUSE SPECIFIED FCB IMAGE WAS NOT
* IN CORE OR IN SYS1.IMAGELIB, RETURN CODE =X'04' AND RETURN TO
* PROBLEM PROGRAM
*
FCBFN070 EQU   *
         LA    RWK5,NOTINCOR            SET RETURN CODE =X'04'
         B     FCBFN150                 GO EXIT TO PROBLEM PROGRAM
*
* OPERATOR REPLIED 'U'. DO FCB LOAD USING CURRENT IMAGE.         Y02072
*
FCBFN075 EQU   *                                                 Y02072
         MVC   SPWFCB2H,UCBFCBID        FCB IMAGE ID TO WORKA    Y02072
         MVI   SPWFLG1,0                NO OPTIONS               Y02072
         B     FCBFN030                 GO DO BLDL FOR IMAGE, DO Y02072
*                                         NOT LOOK FOR IMAGE IN  Y02072
*                                         AN EXIT LIST           Y02072
*
* ANALYSIS OF FCB IMAGE ID SPECIFIED BY OPERATOR
*
FCBFN080 EQU   *
         LA    RWK7,SPWREPLY            GET ADDRESS OF REPLY
         LA    RWK8,L'SPWFCB2H          SET LOOP COUNTER TO TEST
*                                       FOR INVALID FCB LENGTH
         DROP  RCORE
         USING SPWREPLY,RWK7
         CLI   SPWREPLY,COMMA           CK FOR , IN FIRST POSITION
         BE    FCBFN170                 YES GO TO REPEAT REPLY MSG
         CLI   SPWREPLY,BLANK           CK FOR BLANK IN 1ST POSITION
         BE    FCBFN170                 YES GO TO REPEAT REPLY MSG
*
* SEPERATE FCB IMAGE ID FROM REPLY
*
FCBFN090 EQU   *
         MVC   SPWFCB2H(1),SPWREPLY     MOVE ONE CHAR OF FCB ID TO
*                                         FCB IMAGE ID AREA
         LA    RWK7,1(RWK7)             IMCREMENT REPLY POINTER BY ONE
         CLI   SPWREPLY,BLANK           CK FOR BLANK (END OF FCB ID)
         BE    FCBFN130                 YES GO CK IF BLDL REQUIRED
         CLI   SPWREPLY,COMMA           CK IF THIS CHAR IS A COMMA
         BE    FCBFN100                 YES GO CK FOR VERIFY OR ALIGN
         BCT   RWK8,FCBFN090            GO MOVE NXT CHAR TO FCB SAVE
         B     FCBFN170                 IF REPLY ID GT 4 GO ISSUE
*                                         REPEAT REPLY MESSAGE
*
* TEST IF THE FCB IMAGE IS TO BE VERIFIED OR FORMS ALIGNED
*
FCBFN100 EQU   *
         CLC   SPWFCBOR(L'VERIFY01),VERIFY01  CK IF VERIFY SPECIFIED
         BE    FCBFN120                 YES GO SET VERIFY BIT ON
         CLC   SPWFCBOR(L'VERIFY02),VERIFY02  CK IF 'V' VERIFY
*                                               SPECIFIED
         BE    FCBFN120                 YES GO SET VERIFY BIT ON
         CLC   SPWFCBOR(L'ALIGN01),ALIGN01  CK IF ALIGN SPECIFIED
         BE    FCBFN110                 YES GO SET ALIGN FORMS BIT
         CLC   SPWFCBOR(L'ALIGN02),ALIGN02   CK IF 'A' ALIGN SPECIFIED
         BNE   FCBFN170                 NO GO TO ISSUE REPEAT REPLY MSG
         DROP  RWK7
         USING SPW,RCORE
FCBFN110 EQU   *
         MVI   SPWFLG1,SPWALIGN         SET ALIGN FORMS BIT FOR FCB
         B     FCBFN005                 GO TO CK IF BLDL REQUIRED
FCBFN120 EQU   *
         MVI   SPWFLG1,SPWVRFCB         SET VERIFY FCB BIT ON
         B     FCBFN005                 GO TO CK IF BLDL REQUIRED
FCBFN130 EQU   *
         MVI   SPWFLG1,0                RESET FCB OPTION BITS
         B     FCBFN005                 GO CK IF BLDL REQUIRED
         EJECT
*
*  CLEAN UP AND RETURN TO USER WITH RETURN CODE IN BITS 16-23    YM5703
*  OF REGISTER 15.                                               YM5703
*
FCBFN150 EQU   *
*
* RESTORE IOB TO ORIGIONAL STATUS                                Y02072
*
         USING IOBQSAMN,RIOB
         MVC   IOBFLAG1(4),SPWFLGSV     RESTORE IOB FLAGS        Y02072
         MVC   IOBSTART,SPWSTRSV        RESTORE IOB START ADDR   Y02072
         DROP  RIOB
         SPACE
         MODESET  EXTKEY=SUPR           KEY OF SVRB              Y02072
         SPACE
         SR    RWK6,RWK6                PREPARE TO ZERO FIELDS   Y02072
         ST    RWK6,SPRIOBSV            INDIC IOB'S RESTORED     Y02072
         SPACE
         IMGLIB CLOSE,SPRIDCBA          ISSUE SVC TO CLOSE IMAGELIB
         SPACE
         ST    RWK6,SPRIDCBA            INDICATE IMGLIB CLOSED   Y02072
         ST    RWK6,SPRMSG              INDICATE MSG CSECT DELTD Y02072
         DELETE  EP=IGGMSG01            DELETE MESSAGE CSECT     Y02072
*
*  FREEMAIN SETPRT WORKAREA AND BLDL PARAMETER LIST.             YM5703
*
         MODESET  KEYADDR=SPRKEY,WORKREG=1  KEY OF CORE TO FREE  Y02072
         SPACE
         FREEMAIN R,LV=SPWLNGTH,A=(RCORE),SP=SPWPOOL             Y02072
         SPACE
         MODESET  EXTKEY=DATAMGT        KEY OF BLDL LIST         YM5703
         SPACE
         ST    RWK6,SPWWKADR            INDIC WORKAREA FREED     YM5703
         SPACE
         FREEMAIN  R,LV=SPW5LNTH,A=(RBLDL),SP=SPW5POOL         @Z40MSAP
         SPACE
*
* SET RETURN CODE IN REGISTER 15 AND RETURN
*
FCBFN160 EQU   *
         MODESET  EXTKEY=SUPR           KEY TO RETURN IN         Y02072
         SPACE
         ST    RWK6,SPRBLDLA            INDIC BLDL LIST FREED    YM5703
         SLL   RWK5,8                   SHIFT RETURN CODE TO BITS 16-23
         LR    R15,RWK5                 PUT RETURN CODE IN REG 15
         SRL   RPAR,24                  MOVE RETURN CODE TO BYTE 3
         OR    R15,RPAR                 INSERT THE RTN CODE      M0084
         L     R14,SPREXIT              GET SAVED EXIT ADDR      Y02072
         BR    R14                      RETURN TO EXIT PROLOG    Y02072
         EJECT
*
* FORM REPEAT REPLY MESSAGE 'IEC125I ERROR - REPEAT REPLY'
*
FCBFN170 EQU   *
         LA    RWK2,MSG125              INDICATE MSG WANTED      Y02072
         BAL   RRET,GETMSG              GO GET MESSAGE           Y02072
         B     FCBFN060                 GO TO CLEAR REPLY AREA
         SPACE 4
WTOR     WTOR  MF=(E,SPWRPLYA)          WRITE MESSAGE            Y02072
         ST    R1,SPWMSGID              SAVE MSG ID FOR DOM    @ZA25004
         OI    SPWMSGID,X'80'           SET HIGH ORDER BIT     @ZA25004
         BR    R14                      RETURN TO SYNCH          Y02072
         SPACE 3
GETMSG   EQU   *                                                 Y02072
***********************************************************************
*        THIS SUBROUTINE FINDS A MESSAGE IN THE MESSAGE CSECT
*        AND MOVES IT INTO THE SETPRT WORK AREA
*        INPUT: RWK2 CONTAINS AN INDEX OFFSET (MSG NUMBER * 2)
*               SPRMSG CONTAINS THE ADDRESS OF THE MESSAGE CSECT
*        ADDRESSIBILITY REQUIRED:
*               SVRB EXTENDED SAVE AREA
*               SETPRT WORK AREA
*        OUTPUT:RWK2 POINTS TO MESSAGE TEXT IN MSG CSECT
*               RWK8 POINTS TO THE MSG ENTRY IN MSG CSECT
*               SPWMSGTX CONTAINS A COPY OF THE MESSAGE TEXT
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS EXCEPT RWK2 AND RWK8 ARE TRANSPARENT
***********************************************************************
         L     RWK8,SPRMSG              PICK UP MSG CSECT ADDR   Y02072
         USING MSGINDEX,RWK8                                     Y02072
         AH    RWK8,MSGINDOF(RWK2)      ADD ENTRY OFFSET         Y02072
         USING MSGENTRY,RWK8                                     Y02072
         SR    RWK2,RWK2                                         Y02072
         IC    RWK2,MSGOFF              PICK UP TEXT OFFSET      Y02072
         AR    RWK2,RWK8                GET PTR TO TEXT          Y02072
         USING MSGTXT,RWK2                                       Y02072
         MVC   SPWMSGTX,MSGTXT          MOVE IT INTO WORK AREA   Y02072
         BR    RRET                     RETURN TO CALLER         Y02072
         DROP  RWK2,RWK8                                         Y02072
         SPACE 3
FILLFLDS EQU   *                                                 Y02072
***********************************************************************
*        THIS ROUTINE FILLS IN THE UNIT NAME AND IMAGE ID
*        IN MESSAGES WHICH HAVE ALREADY BEEN MOVED TO THE WORK AREA
*        INPUT: RWK8 POINTS TO THE MESSAGE ENTRY IN MSG CSECT
*               SPWREPID CONTAINS THE IMAGE ID TO FILL IN
*        ADDRESSIBILITY REQUIRED:
*               UCB
*               SETPRT WORK AREA
*        OUTPUT:SPWREPID AND UCBNAME HAVE MEEN MOVED TO THE
*               APPROPRIATE OFFSETS FROM SPWMSGTX
*               RWK8 IS UNCHANGED FROM INPUT
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS EXCEPT RWK2 ARE TRANSPARENT
***********************************************************************
         USING MSGENTRY,RWK8                                     Y02072
         SR    RWK2,RWK2                                         Y02072
         IC    RWK2,MSGOFF1             PICK UP FIRST OFFSET     Y02072
         LA    RWK2,SPWMSGTX(RWK2)      POINT TO VAR IN WORKAREA Y02072
         MVC   0(L'UCBNAME,RWK2),UCBNAME   MOVE IN UCBNAME       Y02072
         SR    RWK2,RWK2                                         Y02072
         IC    RWK2,MSGOFF2             PICK UP SECOND OFFSET    Y02072
         LA    RWK2,SPWMSGTX(RWK2)      POINT TO VAR IN WORKAREA Y02072
         MVC   0(L'SPWREPID,RWK2),SPWREPID   MOVE IN IMAGE ID    Y02072
         BR    RRET                                              Y02072
         DROP  RWK8                                              Y02072
         EJECT
*
* CONSTANTS
*
         DS    0F                       ALIGN ON WORD BD
BLDLCNST DC    AL2(1,SPWBLDLN)          BLDL LIST
FCBCONST DC    C'FCB2'                  PREFIX FOR FCB IMG ID
USECON   DC    C'U '                    OPERATOR REPLY=USE
CANCEL01 DC    C'CANCEL'                OPERATOR REPLY=CANCEL
CANCEL02 DC    C'C '                    OPERATOR REPLY=C
ALIGN01  DC    C'ALIGN'                 OPERATOR REPLY=ALIGN
ALIGN02  DC    C'A '                    OPERATOR REPLY=A
VERIFY01 DC    C'VERIFY'                OPERATOR REPLY=VERIFY
VERIFY02 DC    C'V '                    OPERATOR REPLY=V
LOWERCSE DC    CL16' '                  LOWER CASE MASK
CLEARFLD EQU   LOWERCSE                 USED TO CLEAR FIELDS IN
*                                         WORK AREA
*
* BRANCH TABLE
*
ID4      DC    V(IGG08104)              NEXT MODULE EXECUTED   @Z40MSMI
*
PATCH    DC    25H'0'                   PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         TITLE 'IGG08103--DCB DSECT'
         IHADCB  DSORG=PS,DEVD=PR
         TITLE 'IGG08103--DEB DSECT'
         IEZDEB
         TITLE 'IGG08103--DCB EXLST DSECT'
         IHAEXLST
         TITLE 'IGG08103--FCB IMAGE DSECT'
         IHAFCBIM
         TITLE 'IGG08103--IOB DSECT'
         IEZIOB
         TITLE 'IGG08103--DSECT FOR MESSAGE CSECT'
         IGGMSG                                                  Y02072
         TITLE 'IGG08103--SETPRT PARAMETER LIST DSECT'
         IHASPP
         TITLE 'IGG08103--SETPRT WORKAREA DSECT'
         IGGSPW
         TITLE 'IGG08103--UCB DSECT'
SRT      DSECT
         IEFUCBOB
         END
