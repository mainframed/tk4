   TITLE  'IGG01923 -- SECOND HALF OF IGG0191Z -- D/A UPDATE -- RECORD *
               READY CHANNEL PROGRAMS'
IGG01923 CSECT
*MODULE NAME - IGG01923                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS2 RELEASE 2 DELETIONS                               Y02072
*006000,039000,082500,158500-159000188000-204000204500-212500    Y02072
*160500,166000,177500,180500                                     Y02072
*                                                                YM4640
*                                                                YM7595
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*C140000,140500 OZ10223 IS SYSROUTE FROM OY13449                ZA10223
*A140000-140700      ORIGINAL APAR IS OS78123                  @ZA14710
*
*          RELEASE 21 DELETIONS
*A                                                              SA53279
*
*   THIS MODULE CREATED IN RELEASE 21 FROM SPLIT OF IGG0191Z
*
*STATUS CHANGE LEVEL 002
*
*FUNCTION/OPERATION - FINISH INITIALIZATION OF IOB'S AND CONSTRUCTION
*        OF CHANNEL PROGRAMS STARTED IN IGG0191Z
*
*ENTRY POINT - IGG01923 FROM IGG0191Z
*
*INPUT- SEE DESCRIPTION OF REGISTERS, DCB(USERS).
*
*OUTPUT - IOB(USER)- SEE DESCRIPTION OF REGISTERS, DCB(USERS).
*
*EXTERNAL ROUTINES- NONE.
*
*EXITS-NORMAL-IGG01915-PRESENCE OF RECORD AREA INDICATOR
*            -IGG01912-ALL OTHER CONDITIONS
*
*EXITS-ERROR- NONE.
*
*MACROS : ACTION - MODESET, XCTL, XCTLTABL                       Y02072
*
*MACROS : MAPPING - DCBD,IECDSECS(IOB,WTG),IGGBCB,IHACCW,IHAFCAUD
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-36 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 37-39 WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 40-   TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR N TH DCB   (5 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (3 BYTES)
*                   IDTTR OF LAST ROUTINE LOAD       (5 BYTES)
*                   NOT USED                         (3 BYTES)
*
*      SEE DEVICETB DSECT
*
*ATTRIBUTES- REENTRANT, REUSABLE, SUPERVISOR STATE,              Y02072
*            RUNS IN USER KEY UNLESS OTHERWISE SPECIFIED.        Y02072
*
*NOTE-OFFSETS TO CCW'S TO BEGIN BUILDING ARE PASSED IN DCB BY IGG0191Z
*    -BUFFER ADDRESS ARE PASSED IN THE IOB BY IGG0191Z           YM7595
*
***********************************************************************
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RBUFADR  EQU   9         ADDR OF CURRENT BUFFER                  YM7595
RUCB     EQU   10        COUNTER IN IOB GENERATION
RB       EQU   12        WORK REG1  **
RWK1     EQU   RB                       WORK REGISTER            Y02072
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RJ       EQU   15        WORK REG4
RE       EQU   0         WORK REG5
RF       EQU   1         WORK REG6
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB    EQU   X'01'
*
* DCB OFFSET CONSTANTS
*
WCPL     EQU   4                        NORMAL WRITE CP LENGTH
*        THE READ CCW OFFSET IN THE DCBOFFSR FIELD IS THE OFFSET
*        OF THE READ DATA CCW FROM THE BEGINNING OF THE SAM IOB
*        PREFIX
OFFSRB   EQU   120                      BSAM READ CCW OFFSET
WCOSRB   EQU  X'98'                     READ CCW OFFSET FOR WRT  A31983
*                                          CHK WITH BSAM         A31983
TOWCOSRB EQU  X'A0'                     READ CCW OFFSET FOR WRT  A31983
*                                          CHK + TRK OV FOR BSAM A31983
EIGHT    EQU   8                        EIGHT
FORTY4   EQU   44                      CONSTANT OF 44
FIFTY5   EQU   55                       FIFTY5
FIFTY6   EQU   56                       FIFTY6
FOURTY8  EQU   48                       FOURTY8
FOURTY9  EQU   49                       FOURTY9
RDSECTOR EQU   X'22'                    COMMAND CODE
ZERO     EQU   0                        ZERO
TWO      EQU   2
THREE    EQU   3                        THREE
SIX      EQU   6                        SIX
NINETEEN EQU   19                       CONSTANT OF NINETEEN
THIRTY2  EQU   32                       THIRTY2
THIRTY6  EQU   36                       THIRTY SIX
THIRTY9  EQU   39                       THIRTY9
SIXTY4   EQU   64                       SIXTY4
*
* MASKS USED TO TEST OPTION FIELDS IN DCB
*
WRTCK    EQU   X'80'
UPDATEB  EQU   X'80'
TRKOVFLB EQU   X'20'                    TRACK OVERFLOW OPTION
*
* COMMAND BYTES FOR THE 2841 CONTROL UNIT
*
RDC        EQU   X'92'
RDD        EQU   X'86'
RDKD     EQU   X'8E'
*
*   CHANNEL CONTROL WORD FLAGS
*
SLI        EQU   X'20'
CC         EQU   X'40'
SLICC    EQU   X'60'
*
* MASKS FOR RECORD FORMATS
*
FORMATF  EQU   X'40'                    NON FORMAT F MASK
FSTDX    EQU   X'88'                    FIXED STANDARD FORMAT    M1760
*
* OFFSET FOR PARAMETER TESTS
*
ONE      EQU   1
*
* MASKS FOR STATUS BITS TO BE TESTED
*
FIRSTIOB   EQU   X'01'
*
* MASKS USED TO LOAD IGG01915 IN SUPPORT OF QSAM LOCATE MODE OF
* OPERATION WITH LOGICAL RECORD INTERFACE FOR VARIABLE LENGTH
* SPANNED RECORD
*
FLGOFFST EQU   4                        OFFSET TO FLAG IN BCB    S19015
RAFLAG   EQU   X'80'                    RECORD AREA PRESENT      S19015
NULL     EQU   0                        ZERO DISPLACEMENT        S19015
IDLEN    EQU   5                        LENGTH OF IDTTR          S19015
*
*
*
         BALR  RBASE,0                  REG 3 IS BASE
         USING SOPB,RBASE
         USING IHADCB,RDCB              REG 2 IS DCB
         USING FORCORE,RCORE            REG 4 IS WORK AREA ADDRESS
*
SOPB     EQU   *
         B     BEGIN                    BRANCH AROUND MODULE ID  YM4640
MODULE   DC    C'IGG01923'              MODULE NAME            @ZA14710
APAR     DC    C'@ZA14710'              LAST SHIP CODE         @ZA14710
DATE     DC    C'&SYSDATE'              LAST SHIP DATE         @ZA14710
BEGIN    DS    0H                       END OF MODULE NAME       YM4640
         MODESET  KEYADDR=DXUKEY,WORKREG=11 GET INTO USER KEY    Y02072
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RCORE,4(RWTGC)           GET WORK AREA ADDRESS
         L     RD,DCBIOBA               ADDR OF FIRST IOB
         SR    RUCB,RUCB                ZERO REG TO GET NO OF IOB'S
         IC    RUCB,DCBREAD+ONE            SAVED BY IGG0191Z
SOPB30   EQU   *
         LTR   RUCB,RUCB                HAS IOB COUNT BEEN EXHAUSTED
         BC    7,SOPB31                 NO, BRANCH
*
         B     SOPBEND
*
***********************************************************************
*
*    REGISTER USEAGE FOR CHANNEL PROGRAM CONSTRUCTION
*       RB - RD/WRT SEQUENCE POINTER
*       RC - FDA POINTER
*       RD - CURRENT IOB POINTER
*       RJ - LINK REG TO INTERNAL SUBROUTINE
*       RF - PARAREG FOR INTERNAL SUBROUTINE
*       RE - INTERNAL POINTER IN READ SEQUENCE
*
***********************************************************************
*
SOPB31   EQU   *
         SR    RB,RB                    ZERO REG
         SR    RC,RC                    ZERO REG
         IC    RB,DCBREAD+TWO           GET OFFSETS IN IOB PASSED
         IC    RC,DCBREAD+THREE            BY IGG0191Z
         AR    RB,RD                    GET ADDR IN IOB TO CONTINUE
         AR    RC,RD                       BUILDING CHAN PROGRAM
         TM    DCBCIND2,QSAMB           QSAM USED
         BC    1,SOPB61                 YES, BRANCH
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,OFFSRB          STORE BSAM RD CCW OFFSET
         TM    DCBOPTCD,WRTCK           IS WRITE VALIDITY CHECK SPEC
         BC    14,SOPB607               NO, BRANCH
         MVI  DCBOFFSR,WCOSRB           READ CCW OFFSET FOR BSAM A31983
*                                          WITH WRT CHK          A31983
         TM   DCBRECFM,TRKOVFLB         TRK OVFLOW SPECIFIED?    A31983
         BNO  SOPB607                   NO, DON'T UPDATE OFFSET  A31983
         MVI  DCBOFFSR,TOWCOSRB         YES, READ CCW OFFSET FOR A31983
*                                          BSAM WITH WRTCK + TKOVA31983
SOPB607  EQU   *
         MODESET  KEYADDR=DXUKEY,WORKREG=11 GET INTO USER KEY    Y02072
         TM    DCBRECFM,TRKOVFLB        USING TRACK OVERFLOW?     M1760
         BO    SOPB608                  YES, BRANCH              M1760
         TM    DCBRECFM,FSTDX           FIXED STANARD FORMAT?    M1760
         BNO   SOPB635                  NO, BRANCH               M1779
SOPB608  EQU   *
         CLI   DCBNCP,ONE               MORE THAN 1 IOB USED
         B     SOPB62                   BRANCH TO TEST
*
SOPB61   EQU   *
         TM    DCBRECFM,TRKOVFLB        USING TRACK OVERFLOW?    M1760
         BO    SOPB615                  YES, BRANCH              M1760
         TM    DCBRECFM,FSTDX           FIXED STANDARD FORMAT?   M1760
         BNO   SOPB635                  NO, BRANCH               M1779
SOPB615  EQU   *
         CLI   DCBBUFNO,ONE             MORE THAN 1 IOB USED
*
SOPB62   EQU   *
         BNH   SOPB64                   NO, BRANCH
*
*    RC POINTS TO CCHHR OF THIS IOB
*
         SR    RF,RF                    CLEAR REG
         IC    RF,DCBIOBL               GET IOB LENGTH
         SLL   RF,3                     CHANGE TO BYTES
         LA    RC,0(RF,RC)              POINT TO NEXT DA ADDR FIELD
SOPB63   EQU   *
         ST    RC,32(RB)                STORE IN RD COUNT CCW
         OI    36(RB),SLICC             SET SILI AND CC FLAGS ON
         MVI   39(RB),X'05'             STORE COUNT OF 5 IN CCW
         B     SOPB637                  BRANCH TO CONTINUE
SOPB635  EQU   *
         LA    RC,SIXTY4(RB)            ADDR TO READ IN COUNT   SA53279
         ST    RC,THIRTY2(RB)           COUNT ADDR
         OI    THIRTY6(RB),CC           TURN ON COMMAND CHAIN
         MVI   THIRTY9(RB),EIGHT        EIGHT BYTE LENGTH FOR COUNT
SOPB637  EQU *
         MVI   THIRTY2(RB),RDC          MOVE IN COMMAND CODE
         MVI   40(RB),RDD               STORE READ DATA CMD BYTE
         OI    FORTY4(RB),CC            TURN ON COMMAND CHAIN
         TM    DCBCIND2,QSAMB           QSAM SPECIFIED
         BO    SOPB65                   YES, BRANCH
*
         CLI   DCBKEYLE,ONE             IS KEY LENGTH SPECIFIED
         BC    4,SOPB65A                NO, BRANCH
         MVI   40(RB),RDKD              STORE RD DATA & KEY IN CMD BYTE
         B     SOPB65A
*
SOPB64   EQU   *
         L     RDCB,DXUDCBAD            GET ADDR OF USERS DCB    Y02072
         LA    RC,DCBFDAD+3             POINT TO CCHHR IN DCB
         L     RDCB,0(RPARC)            GET PROTECTED DCB AGAIN  Y02072
         B     SOPB63
*
SOPB65   EQU   *
         LA    RF,40(RB)                POINT TO ACTUAL RD DATA CCW
*
*        THE FOLLOWING CODE SETS UP THE CCW'S WITH LENGTH AND BUF ADDR
*
         USING IOBQSAMN,RD
         L     RBUFADR,IOBFLAG3         GET BUFFER ADDR SAVED BY YM7595
*                                         IGG0191Z
         USING CCW,RF
         STCM  RBUFADR,B'0111',CCWADDRB  BUFFER ADDR TO CCW      YM7595
         MVC   CCWBYTE,DCBBLKSI         BYTE COUNT TO CCW        YM7595
         SR    RBUFADR,RBUFADR          PREPARE TO CLR IOBLFAG3  YM7595
         ST    RBUFADR,IOBFLAG3         CLEAR IOBFLAG3           YM7595
         DROP  RD,RF
SOPB65A  EQU   *
         MVC   FOURTY9(THREE,RB),DCBCHECK+ONE SECTOR ADDRESS
         MVI   FOURTY8(RB),RDSECTOR     MOVE IN COMMAND CODE
         MVI   FIFTY5(RB),ONE           LENGTH
         BCTR  RUCB,0                   DECREMENT COUNTER
         MVC   FIFTY6(EIGHT,RB),DCBFDAD MOVE DCBFDAD INTO SEEK ADDR
         MVC   40(8,RD),DCBFDAD         MOVE FDAD TO IOS'S FDA
*
         TM    DCBRECFM,FORMATF         IS FORMAT U OR V USED  @ZA14710
         BO    SOPB65B                  YES, BRANCH            @ZA14710
         TM    DCBRECFM,FSTDX           FIXED STANDARD FORMAT?  ZA10223
         BO    SOPB66                   BRANCH YES              ZA10223
         TM    DCBRECFM,TRKOVFLB        TRACK OVERFLOW USED    @ZA14710
         BO    SOPB66                   YES, BRANCH. IF NOT    @ZA14710
*                                    SET SLI FLAG FOR FIXED    @ZA14710
SOPB65B  EQU   *                                               @ZA14710
         OI    44(RB),SLI               SET SLI FLAG IN CCW
SOPB66   EQU   *
         TM    DCBRECFM,TRKOVFLB        USING TRACK OVERFLOW?    M1760
         BO    SOPB665                  YES, BRANCH              M1760
         TM    DCBRECFM,FSTDX           FIXED STANDARD FORMAT?   M1760
         BNO   SOPB69                   BRANCH NO                M1779
SOPB665  EQU   *                                                 M1760
         CLI   DCBREAD+ONE,ONE          ONE IOB?
         BNH   SOPB69                   NO, BRANCH
         LTR   RUCB,RUCB                HAVE ALL IOBS BEEN GENERATED
         BNZ   SOPB69A                  BRANCH NO
         L     RC,DCBIOBA               GET FIRST IOB GENERATED
         SR    RF,RF                    CLEAR REG
         IC    RF,DCBOFFSR              OBTAIN READ CCW OFFSET
         LA    RC,NINETEEN(RC,RF)       GET NEXT SEARCH AADR
         ST    RC,32(RB)                STORE IN LAST IOBS RD CNT CCW
         MVI   32(RB),RDC               STORE CMD BYTE
         B     SOPBEND                  GET OUT - IOB'S COMPLETED
SOPB69   EQU   *
         SR    RJ,RJ                    CLEAR REG               SA53279
         IC    RJ,DCBIOBL               IOB LENGTH              SA53279
         SLL   RJ,THREE                 TIMES EIGHT             SA53279
         LA    RD,0(RJ,RD)              NEXT POSSIBLE IOB       SA53279
         B     SOPB30                   RETURN FOR NEXT IOB     SA53279
SOPB69A  EQU   *
         LA    RD,SIXTY4(RB)            POINT PAST FDAD AND COUNT
*                                          TO NEXT POSSIBLE IOB LOC.
         B     SOPB30                   RETURN FOR NEXT IOB
SOPBEND  EQU   *
         L     RWK1,DCBIOBA             GET IOB ADDR             Y02072
         USING IOBQSAMN,RWK1                                     Y02072
         OI    IOBNFLG1,IOBFIRST        SET FIRST IOB FLAG FOR   Y02072
*                                         CLOSE EXECUTORS        Y02072
         DROP  RWK1                                              Y02072
*        CLEAR AND RESTORE FIELDS IN DCB USED TO PASS INFORMATION
*        FROM IGG0191Z
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         OI    FCAOPEN2,FCAOIOBC        IOBS COMPLETED           YM7595
         XC    DCBREAD+ONE(THREE),DCBREAD+ONE
         MVI   DCBREAD+THREE,ONE
         XC    DCBCHECK+ONE(THREE),DCBCHECK+ONE
         MVI   DCBCHECK+THREE,ONE
         TM    DCBDSORG,X'02'          DCB FOR PO
         BC    8,SOPBENDA              NO, BRANCH
         MVI   DCBCNTRL+1,5            PROVIDE N/P FOT PO
SOPBENDA EQU   *
         OI    DCBCIND2,UPDATEB         FLAG DCB AS UPDATE MODE FOR
*                                        LOAD EXECUTOR TESTING IGG01912
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,IGG01912      NEXT EXECUTOR FOR UPDATE @Z30TSCF
* PRESENCE OF RECORD AREA TEST TO DETERMINE NEXT LOAD EXECUTOR. IF
* YES, GET LOAD EXECUTOR IGG01915.
         TM    DCBBUFCB+3,X'01'         WERE BUFFERS SUPPLIED    A40538
         BO    RELOOP                   NO BUFFERS, BSAM         A40538
*                                       BRANCH TO LOAD IGG01912
         L     RB,DCBBUFCB              BUFFER CONTROL BLOCK     A40538
         MODESET  KEYADDR=DXUKEY,WORKREG=11 GET INTO USER KEY    Y02072
         TM    FLGOFFST(RB),RAFLAG      RECORD AREA INDICATOR ON A40538
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         BZ    RELOOP                   BRANCH IF NOT TO LOAD    A40538
*                                       IGG01912
         MVC   WTGIDTTR,IGG01915        1915 IF REC AREA INDIC @Z30TSCF
*                                         NOT ON                 Y02072
RELOOP   EQU   *
         LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
*
ZCHEK    EQU   *
         CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
**
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
*
*  MODULE ID'S
*
OPIDCNST DC    C'0S'
AMIDCNST DC    C'23'                    THIS MODULES ID
IGG01912 DC    C'12',VL3(IGG01912)    FOR UPDATE, NOT REC AREA @Z30TSCF
IGG01915 DC    C'15',VL3(IGG01915)    FOR UPDATE WITH REC AREA @Z30TSCF
         SPACE 6
PATCH    DC    25H'0'                   PATCH AREA               YM4640
END      EQU   *                        END OF MODULE            Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         EJECT
         DCBD  DSORG=PS
         EJECT
         IHACCW  DSECT=YES
         EJECT
         IGGBCB  TYPE=SAM
         TITLE 'IGG01923 - FORMAT OF GOTTEN CORE'
         IECDSECS  (MAIN,(IOB,NO)),IOB,WTG,PREFX,EXPAND=YES    @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
         EJECT
FORCORE  DSECT
         IHAFCAUD ORG=YES
           END
