197U   TITLE 'IGG0197U - CONTINUATION OF IGG0191V, VERIFY UCS IMAGE'
IGG0197U CSECT
*
*MODULE NAME - IGG0197U                                          Y02072
*
*DESCRIPTIVE NAME - VERIFY UCSB IMAGE                            Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*0000365000-366000,370000,375000-377000,379000,383000,386000,    M5143
*0000389000,392000,593000-595000                                 M5143
*          RELEASE 21 DELETIONS
*0791115000,607000,621000                                        M1803
*0791106000-107000,451000,466000,521000-525000,747000,795000-    M0099
*0791804000,820000-821000                                        M0099
*
*        VS 2 RELEASE 02 DELETIONS
*001000-001800,008000,037000,042000,058000,108200-108600,        Y02072
*172000-177000,201500,202500-202800,218000-219000,221000,        Y02072
*226000-227000,253000-254000,262000,318000,348000-362000,        Y02072
*406000-409000,422000-424000,426000,591000,592000,592800-593600, Y02072
*648000,675050-777000,794500-802000,245000-246000,251000-252000, Y02072
*003984-007000,242000,710000,745000,749000,649000,761500-761940, Y02072
*762000                                                          Y02072
*                                                                YM2424
*                                                                YM4697
*
*        VS2 RELEASE 3 ADDITIONS
*                                                              @Z30TSCF
*        VS2 RELEASE 4.0 CHANGES
*A217500,319500                 ABEND 0C4 IF UCS NOT REENTRANT @ZA02191
*A520500-522000                        ABEND 0C4 IN IMGLIB SVC @ZA05553
*
*STATUS - SEE BEGINNING OF OBJECT CODE
*
*FUNCTION/OPERATION - WHEN VERIFICATION IS REQUIRED DISPLAY THE IMAGE
*                     RETRIEVED FOR VISUAL VERIFICATION
*                   - DISPLAY MESSAGE IEC121 TO REQUEST OPERATOR VERIFY
*                     THE IMAGE PRINTED
*                   - ANALIZE REPLY MADE BY AN OPERATOR
*                   - UPDATE UCB TO REFLECT THE STATUS OF UCS IMAGE IN
*                     THE BUFFER.
*                   - CLOSE SYS1.IMAGELIB DCB IF PRINTER IS 1403
*                   - RESET AUDIT TRAIL BITS INDICATING TO FORCE YM4697
*                     CLOSE THAT UCS IMAGE HAS BEEN DELETED AND  YM4697
*                     THAT SYS1.IMAGELIB HAS BEEN CLOSED         YM4697
*                   - DETERMINE NEXT OPEN EXECUTOR TO XCTL TO AND
*                     IF NECESSARY ISSUE IEC129 MESSAGE TO OPERATOR
*
*ENTRY POINT -ENTERED FROM IGG0191V BY USE OF XCTL MACRO
*
*INPUT - DCB ADDRESS
*      - OPEN WORK AREA ADDRESS
*      - WHERE-TO-GO TABLE
*      - PARAMETER LIST
*      - CURRENT ENTRY IN W-T-G TABLE
*      - CURRENT PARAMETER(DCB)
*      - THE ADDRESS OF UCS IMAGE RETRIEVED
*
*OUTPUT - PRINT OUT UCS IMAGE WHEN VERIFY IS SPECIFIED
*       - TO REQUEST AN OPERATOR VERIFY THE IMAGE ,
*         'IEC121D V XXX,YYYY' MESSAGE IS DISPLAYED
*       - UPDATED UCB TO REFRECT THE STATUS OF UCS BUFFER
*       - ISSUE REQUEST FOR OPERATOR TO SPECIFY FCB IMAGE
*         'IEC129D XXX,SPECIFY FCB PARAMETERS' MESSAGE
*       - ISSUE MESSAGE 'IEC125I - ERROR - REPEAT REPLY' WHEN    Y02072
*         OPERATOR REPLY IS INVALID                              Y02072
*
*EXTERNAL REFERENCS - MESSAGE CSECT                              Y02072
*
*EXIT - NORMAL - XCTL TO ONE OF THE FOLLOWING:
*               *IGG0197E TO LOAD AN FCB IMAGE                   Y02072
*               *IGG01911 IF THE DCB IS EXCP.                    Y02072
*               *IGG0191I IF BUFFER CNTRL BLOCK IS SPECIFIED.
*               *IGG0191G IF NORMAL SCHEDULING IS SPECIFIED.
*               *IGG0191Q IF CHAINED SCHEDULING IS SPECIFIED.
*
*EXIT - ERROR - XCTL TO PROBLEM DETERMINATION FOR THE FOLLOWING  Y02072
*              *PERMANENT I/O ERROR OCCURED DURING VERIFICATION
*              *OPERATOR ISSUED CANCEL FOR MESSAGE IEC121.
*
*TABLES/WORK AREAS - WHERE-TO-GO TABLE (SEE LISTING OF EXECUTOR
*                                       IGG0191B)
*                  - OPEN WORK AREA (SEE IECDSECT IN THIS LISTING)
*
*MACROS-ACTION:MODESET, EXCP, WAIT, DELETE, DMABCOND, XCTL,      Y02072
*              XCTLTABL                                          Y02072
*
*MACROS-MAPPING:IGGMSG,IECDSECS(MAIN,WTG),IKJTCB,IEFUCBOB,DCBD,  Y02072
*               IGGSCW, IHAFCAUD                                 Y02072
*
*ATTRIBUTES - REENTRANT, REFRESHABLE, RUNS IN DATA MANAGEMENT KEYY02072
*             UNLESS OTHERWISE SPECIFIED, SUPER STATE            Y02072
*
*NOTES - EXCP/WAIT SVCS ARE USED TO WRITE IMAGES ON PRINTER FOR VERFY
*      - DELETE SVC IS USED TO DELETE THE RETRIEVED IMAGE.
*      - WTOR SVC IS USED TO REQUEST OPERATOR REPLY
*      - IOB/ECB IN OPEN WORK AREA IS USED FOR EXCP
*      - THE REPLY IS ORED TO ALLOW LOWER CASE ALPHA
*      - BEFORE ISSUING A WTO/WTOR, THE MESSAGE TEXT MUST FIRST  Y02072
*        BE EXTRACTED FROM A MESSAGE CSECT.                      Y02072
*
***********************************************************************
*
         EJECT
*
***********************************************************************
*
*   REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
*
RE       EQU   0                        WORK/PARAMETER REGISTER
RF       EQU   1                        WORK/PARAMETER REGISTER
RWK2     EQU   RF                       WORK REGISTER            Y02072
RDCB     EQU   2                        ADDR OF USER'S DCB
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        ADDR OF OPEN WORK AREA
RPAR     EQU   5                        PARAMETER LIST
RWTG     EQU   6                        START OF WTG
RPARC    EQU   7                        CURRENT ENTRY IN PARAMETER LIST
RWK1     EQU   RPARC                    WORK REGISTER            Y02072
RWTGC    EQU   8                        CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                        TIOT ADDR/WORK REGISTER
RWK3     EQU   RTIOT                    WORK REGISTER            Y02072
RUCB     EQU   10                       UCB ADDR/WORK REGISTER
RDEB     EQU   11                       DEB ADDR
RB       EQU   12                       WORK REGISTER/BREG FOR DSECT
RWK6     EQU   RB                       WORK REGISTER            Y02072
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK/PARAMETER REGISTER
RJ       EQU   15                       WORK/PARAMETER REGISTER
RWK7     EQU   RJ                       WORK REGISTER            Y02072
*
***********************************************************************
*
*
*   EQUATE WTG OFFSET
*
WGOFF    EQU   8                        OFFSET OF CURRENT WTG ENTRIES
PLOFF    EQU   4                        OFFSET OF CURRENT DCB ENTRIES
WAOFF    EQU   32                       OFFSET OF 1ST ENTRY IN WTG TBL
*
*   EQUATE ABEND CODE AND RETURN CODE
*
OABD067  EQU   67                       OPEN INTERNAL CODE 67    M0099
OABD068  EQU   68                       OPEN INTERNAL CODE 68    M0099
BFCNTRL  EQU   X'01'                    BUFFER CNTRL BLOCK SPECIFIED
EXCPMASK EQU   X'80'                   OPEN FOR EXCP MASK
NULL     EQU   X'00'                    X'00'
SILIMASK EQU   X'60'                    C.C. AND SILI ON
ONEMASK  EQU   X'01'                    X'01'
PRTM3211 EQU   X'09'                    MASK FOR 3211 PRINTER
IEC129RQ EQU   X'80'                    IF ON, MUST WAIT FOR     Y02072
*                                         OPER REPLY TO IEC129   Y02072
UCSOPOFS EQU   X'04'                    UCS OPTIONS OFFSET
RETRYMSK EQU   X'80'                   MASK FOR COMMAND RETRY ON
BUFPARMK EQU   X'04'                    BUFFER PARITY ERROR MASK
BUFPARER EQU   X'01'                    UCS OPTION BIT FOR PARITY ERR
CMDSKP0  EQU   X'83'                    SKIP TO CH 0 COMMAND CODE
TWOMASK  EQU   X'02'                    X'02'
FOLDMASK EQU   X'40'                    LOAD MODE = FOLD
RESETMSK EQU   X'CF'                    RESET VERIFY
SKIPCCW  EQU   X'8B'                    CCW = SKIP TO CH 1
SILLCCW  EQU   X'20'                    SILI BIT ON
WRITECCW EQU   X'11'                    CCW = WRITE 2 SPACE
UNRLBMSK EQU   X'02'                    IOB IS UNRELATED
ABENDBIT EQU   X'80'                    ABEND ROUTINE IN PROCESS
IMCLOSED EQU   X'FF'                    FLAG SET FOR IMAGELIB NOT OPEN
*                                                                  DM0Q
*    EQUATES FOR CONSTANTS                                         DM0Q
*                                                                  DM0Q
X7F      EQU   X'7F'                    COMPLETION CODE FLAG
K0       EQU   0                        CONSTANT EQUATED TO 0
K2       EQU   2                        CONSTANT EQUATED TO 2
K4       EQU   4                        CONSTANT EQUATED TO 4
K7       EQU   7                        CONSTANT EQUATED TO 7
K8       EQU   8                        CONSTANT EQUATED TO 8
IOBUNCHK EQU   X'02'                    UNIT CHECK CONDITION     Y02072
*  THE FOLLOWING MESSAGE NUMBERS ARE EQUAL TO THEIR POSITION     Y02072
*  IN THE MESSAGE CSECT (RELATIVE TO ZERO), MULT BY 2 (LENGTH    Y02072
*  OF AN INDEX).                                                 Y02072
HEADING1 EQU   14*2                     MESSAGE NO IN MSG CSECT  Y02072
HEADING2 EQU   19*2                     MESSAGE NO IN MSG CSECT  Y02072
MSG125   EQU   9*2                      MESSAGE NO IM MSG CSECT  Y02072
MSG121D1 EQU   13*2                     MESSAGE NO IN MSG CSECT  Y02072
MSG121D2 EQU   17*2                     MESSAGE NO IN MSG CSECT  Y02072
MSG129   EQU   3*2                      MESSAGE NO IN MSG CSECT  Y02072
UCSIMLNG EQU   4                        LENGTH OF UCS IMAGE NAME Y02072
*
*   HOUSE KEEPING
*
***********************************************************************
*
         BALR  RBASE,0                  SET UP BASE REGISTER
         USING *,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING DEB,RDEB
         USING UCBOB,RUCB
*
*
***********************************************************************
*
*   INITIALIZE REGISTERS
*
***********************************************************************
*
         B     AROUND                   BR AROUND CONSTANTS      Y02072
         DC    C'IGG0197U'              MODULE NAME              Y02072
         DC    C' ZA02191'              LAST SHIP CODE
         DC    C' 7/29/75'              LAST DATE MODIFIED
AROUND   DS    0H                                                Y02072
*
         L     RDCB,0(RPARC)            LOAD CURRENT DCB ADDR
         L     RCORE,4(RWTGC)           LOAD CURRENT WORK AREA ADDR
         L     RDEB,DCBDEBAD            LOAD DEB ADDR
         L     RUCB,DEBUCBAD            LOAD UCB ADDR
         ST    RWK1,DXREGSV+4           SAVE REGISTER            Y02072
*
*
*
*
***********************************************************************
*
VRFYUCS  EQU   *
*
***********************************************************************
*
*      INITIALIZE REGISTERS FOR VERIFICATION.  WE MUST GET INTO
* PROTECTION KEY ZERO WHENEVER THE UCS IMAGE IS REFERENCED, BECAUSE
* IT MAY HAVE BEEN LINK EDITED WITHOUT THE RENT ATTRIBUTE, CAUSING
* IT TO BE LOADED INTO FETCH-PROTECTED USER-KEY STORAGE.  THE IBM-
* DISTRIBUTED UCS IMAGES ARE LINK EDITED REENTRANT.
*
***********************************************************************
*
         MODESET EXTKEY=SUPR            GET INTO KEY ZERO      @ZA02191
         SR    RWK1,RWK1                RESET REGISTER           Y02072
         IC    RWK1,1(RB)               INSERT NO. OF LINES      Y02072
*
         LTR   RWK1,RWK1                TEST IF NO VERIFICATION  Y02072
         BC    K8,UPDTUCB               IF NOT,GOTO UPDATE UCB ROUTINE
*
         LA    RC,TWOMASK(RB)           OBTAIN 1ST NO. OF CHAR/LINE
         ST    RB,DXREGSV               SAVE IMAGE ADDR          Y02072
         LR    RD,RC                    OBTAIN UCS IMAGE ADDR
         AR    RD,RWK1                  ADD NO. OF LINES TO GET  Y02072
*                                          IMAGE                 Y02072
***********************************************************************
*
*   EXCP TO DISPLAY HEADING 'UCS IMAGE VERIFICATION - YYYY'
*
***********************************************************************
*
*   CONSTRUCT CCW  TO SKIP TO NEW LINE
*
         MVI   DXCCW1+K7,ONEMASK        MOVE LENGTH=1
         MVI   DXCCW1+K4,SILIMASK       SET SILI AND CC ON
         MVI   DXCCW1,SKIPCCW           SET COMMAND CODE=SKIP TO CH 1
*
*   CONSTRUCT CCW TO PRINT HEADING
*
         MVI   DXCCW2+K4,SILLCCW        SET SILI FLAG ON
*
         LA    RWK6,MSGAREA             LOAD PRINT AREA ADDR     Y02072
         ST    RWK6,DXCCW2              STORE DATA ADDR=MESSAGE  Y02072
         MVI   DXCCW2,WRITECCW          PRINT A LINE - 2 SPACES AFTER
*
*   MOVE UCS NAME TO BE PRINTED
*
         LA    RWK6,FILLINHD            RETURN ADDRESS           Y02072
         LA    RWK3,HEADING2            MESSAGE NO FOR MSG RTN   Y02072
         TM    DXUCSOPT,FOLDMASK        FOLD SPECIFIED           Y02072
         BO    GETMSG                   YES, GO GET HEADING      Y02072
         LA    RWK3,HEADING1            NO, GET OTHER HEADING    Y02072
         B     GETMSG                   GO GET HEADING           Y02072
         USING MSGENTRY,RWK2                                     Y02072
FILLINHD EQU   *                        FILL IN HEADING          Y02072
         IC    RWK7,MSGOFF1             OFFSET TO FIRST VAR FLD  Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF FIRST VAR FLD Y02072
         MVC   0(UCSIMLNG,RWK3),DXUCSID  UCS IMAGE ID TO MSG     Y02072
         IC    RWK7,MSGLNG              LENGTH OF MESSAGE - 1    Y02072
         LA    RWK7,1(RWK7)             GET TRUE LENGTH OF MSG   Y02072
         STC   RWK7,DXCCW2+7            LENGTH TO CCW BYTE CNT   Y02072
         DROP  RWK2                                              Y02072
         LA    RDEB,PRTEXCP1            GET ADDRESS OF PRTEXCP1
         DROP  RDEB
*
*
WRITEGO  EQU   *
*
*
*   EXCP/WAIT
*
         LA    RF,DXIOB                 LOAD IOB ADDR
         EXCP  (1)                      EXCP ON PRINT HEADING
*
         WAIT  ECB=DXECB                WAIT ON ABOVE EXCP
*
*   TEST COMP.CODE.IF THERE IS I/O ERROR GOTO ABEND.
*
         TM    DXECB,X7F                TEST IF COMP.CODE=X7F
         BNO   CKRTYERR                 IF NOT GO CK FOR RETRYABLE ERR
*
*
         BR    RDEB                     BRANCH TO ADDRESS IN REG 11
*
***********************************************************************
*
PRTEXCP1 EQU   *
*
***********************************************************************
*
*   EXCP ON PRINTER TO PRINT UCS SET
*
***********************************************************************
*
*   CONSTRUCT CCW TO EXCP
*
         MVI   IOBFLAG1,UNRLBMSK        SET UNRELATED BIT ON
         SR    RDEB,RDEB                ZERO OUT REG 11
         IC    RDEB,NULL(RC)            INSERT # CHARACTER PER LINE
*
WRITEUCS EQU   *
*
         ST    RD,DXCCW1                STORE UCS WORK AREA ADDR IN CCW
         ST    RDEB,DXCCW1+K4           STORE RECORD LENGTH IN CCW
         MVI   DXCCW1+K4,SILLCCW        SET SILI ON
         MVI   DXCCW1,WRITECCW          SET COMMAND CODE=PRINT/2 SPACE
*
*   GO ISSUE EXCP TO WRITE A LINE
*
         BAL   RDEB,WRITEGO             GO ISSUE EXCP
*
         SR    RDEB,RDEB               ZERO OUT REG FOR CHARS THIS LINE
         IC    RDEB,NULL(RC)            INSERT = CHARACTERS/LINE
*
         AR    RD,RDEB                  MODIFY UCSWORK AREA
         LA    RC,ONEMASK(RC)           INCREMENT REG. BY 1
         IC    RDEB,NULL(RC)            INSERT NO. OF CHAR/LINE
*
         BCT   RWK1,WRITEUCS            REPEAT N=RWK1  TIMES.    Y02072
*
         MODESET EXTKEY=DATAMGT         GET BACK IN OUR KEY    @ZA02191
*
***********************************************************************
*
*   SKIP TO NEW PAGE
*
***********************************************************************
*
         MVI   DXCCW1+K7,ONEMASK        MOVE LENGTH = 1
         MVI   DXCCW1,SKIPCCW           SET COMMAND CODE  = SKIP
*
*   GO ISSUE EXCP TO SKIP TO CHANNEL 1
*
         BAL   RDEB,WRITEGO             GO ISSUE SKIP TO CH 1 CCW
*
***********************************************************************
*
*   WTOR 'IEC121D V XXX,YYYY' TO REQUEST OPERATOR REPLY
*
***********************************************************************
*
*
*
         LA    RWK6,MSG121              RETURN ADDRESS           Y02072
         TM    DXUCSOPT,FOLDMASK        TEST IF LOAD MODE FOLD   Y02072
         LA    RWK3,MSG121D2            MESSAGE NO FOR MSG RTN   Y02072
         BNO   GETMSG                   YES, GO GET MESSAGE      Y02072
         LA    RWK3,MSG121D1            MESSAGE NO FOR MSG RTN   Y02072
         B     GETMSG                   NO, GO GET MESSAGE       Y02072
MSG121   EQU   *                        FILL IN VARIABLE FIELDS  Y02072
         USING MSGENTRY,RWK2                                     Y02072
         IC    RWK7,MSGOFF1             OFFSET TO VAR FLD ONE    Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD ONE   Y02072
         MVC   0(L'UCBNAME,RWK3),UCBNAME DEV NAME TO MESSAGE     Y02072
         IC    RWK7,MSGOFF2             OFFSET TO VAR FLD TWO    Y02072
         DROP  RWK2                                              Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD TWO   Y02072
         MVC   0(UCSIMLNG,RWK3),DXUCSID  UCS IMAGE TO MSG        Y02072
MESSAGO  EQU   *                                                   DM0Q
         XC    RPLY(24),RPLY            CLEAR REPLY AREA AND ECB M5143
*
         WTOR  MF=(E,REPLYLTH)          ISSUE WTOR SVC
*
         WAIT  ECB=RPLYECB,LONG=YES         WAIT FOR WTOR        Y02072
*
*   REPLY ANALYSIS
*
         OC    RPLY(K8),LOMASK          OR TO ALLOW LOWER CASE   M5143
*                                       ALPHA                    M5143
         L     RB,DXREGSV               REINIT POINTER TO IMAGE  Y02072
*                                         IN CASE WE MUST RETRY  Y02072
         CLC   RPLY(L'RETRYCN),RETRYCN  TEST IF REPLY='RETRY'    M5143
         BC    K8,VRFYUCS               IF YES GO BACK TO RE-VERIFY
         CLC   RPLY(L'CANCELCN),CANCELCN  TEST IF REPLY='CANCEL' M5143
         BC    K8,ABEND04               IF YES,GO ABEND
*
*
         CLC   RPLY(L'OKCN),OKCN        TEST IF REPLY='VERIFIED' M5143
         BC    K8,UPDTUCB               IF YES GO UPDATE UCB
*
         CLC   RPLY(K2),RBLANK          TEST IF REPLY='R '       M5143
         BC    K8,VRFYUCS               IF YES GO VERIFY UCS IMAGE
*
         CLC   RPLY(K2),CBLANK          TEST IF REPLY='C '       M5143
         BC    K8,ABEND04               IF YES GOTO ABEND ROUTINE
*
         CLC   RPLY(K2),VBLANK          TEST IF REPLY='V '       M5143
         BC    K8,UPDTUCB               IF YES GO UPDATE UCB
*
***********************************************************************
*
*   WTO 'IEC125I ERROR - REPEAT REPLY'
*
***********************************************************************
*
         LA    RWK6,MESSAGO             RETURN ADDRESS           Y02072
         LA    RWK3,MSG125              MESSAGE NO FOR MSG CSECT Y02072
         B     GETMSG                   GO GET MESSAGE           Y02072
*
*********************************************************************
*
*   ROUTINE TO CHECK FOR RETRYABLE ERROR AND SKIP TO 0 TO RESET
*   THE CONTROL UNIT 2811
*
*********************************************************************
*
CKRTYERR EQU   *
*
         CLI   UCBTBYT4,PRTM3211        CK IF DCB BEING OPENED FOR 3211
         BNE   ABEND10                  NO GO SET RC=10 AND ABEND
         TM    IOBCSW+4,IOBUNCHK        UNIT CHECK CONDITION     Y02072
         BZ    ABEND10                  NO, DON'T TEST SENSE     Y02072
         TM    IOBSENS1,RETRYMSK        CK FOR RETRYABLE ERROR   Y02072
         BNO   ABEND10                  NO GO SET RC=10 AND ABEND
         TM    IOBSENS0,BUFPARMK        CK FOR BUFFER PARITY ERR Y02072
         BNO   SKIPCH0                  NO GO SKIP CH 0
         L     RJ,UCBXTADR              YES GET ADDR OF UCB EXTENTION
         MODESET  EXTKEY=SUPR           GET INTO SUPER KEY       Y02072
         OI    UCSOPOFS(RJ),BUFPARER    SET UCS BUF PARITY ERR BIT
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
*
SKIPCH0 EQU    *
*
         MVI   DXCCW1+K7,ONEMASK        SET LENGTH FIELD TO 1
         MVI   DXCCW1+K4,SILLCCW        SET SILI
         MVI   DXCCW1,CMDSKP0           MOVE IN SKIP TO 0 COMMAND CODE
         LA    RF,DXIOB                 GET ADDR FOR EXCP
         EXCP  (1)                      ISSUE EXCP TO SKIP TO CH 0
*
***********************************************************************
*
ABEND10  EQU   *
*
***********************************************************************
*
*   PERMANENT I/O ERROR DURING PRINTING VERIFICATION LINES.
*   RETURN CODE = X'10' IN REG. 15
*   IF THE I/O ERROR PERSISTS,RUN C.E. DIAGNOSTICS ON THE PRINTER
*
***********************************************************************
*
         LA    RB,OABD067               LOAD INTERNAL CODE 67    M0099
         B     UPUCBEND                 GO TO UPDATE UCB AND EXIT
*
***********************************************************************
*
ABEND04  EQU   *
*
***********************************************************************
*
*   REQUESTED CHAIN SET WAS NOT AVAILABLE. JOB STEP WAS CANCELLED BY
*   AN OPERATOR. RETURN CODE = X'14' IN REG.15
*   RERUN THE JOB WITH THE CORRECT CHAIN/TRAIN
*
***********************************************************************
*
         LA    RB,OABD068               LOAD INTERNAL CODE 68    M0099
*
***********************************************************************
*
UPUCBEND EQU   *
*
***********************************************************************
*
*   UPDATE THE UCB WITH X'00' TO INDICATE THAT THE IMAGE IN THE BUFFER
*   IS NOT USABLE
*
***********************************************************************
*
         L     RJ,UCBXTADR              GET ADDRESS OF UCB EXTENTION
         MODESET  EXTKEY=SUPR           GET INTO SUPER KEY       Y02072
         SPACE
         XC    0(L'UCBUCSID+L'UCBUCSOP,RJ),0(RJ)  RESET UCS ID/OPT
         SPACE
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
*
***********************************************************************
*
*   DELETE THE UCS IMAGE LOADED
*
***********************************************************************
*
         LA    RE,DXSAVUCS              LOAD ADDR OF IMAGE ID    Y02072
*                                         LOADED                 Y02072
         DELETE EPLOC=(0)
         NI    FCAOPEN2,X'FF'-FCAOUCSL  INDIC UCS IMAGE DELETED  YM4697
*
***********************************************************************
*
*   ABEND ROUTINE.COMPLETION CODE=B13.RETURN CODE IS IN REG15.
*
***********************************************************************
*
         TM    DXCCW11+K2,ABENDBIT      TEST IF ABEND IS IN PROCESS
         BO    UCSEXIT                  IF YES,GOTO EXIT ROUTINE
         L     RPARC,DXREGSV+4          RELOAD REG FOR PROB DET  YM2424
*
*   WE DO NOT WANT TO SAVE REGISTER 9 AT DXREG9, WHERE PROBLEM
*   DETERMINATION ROUTINES ARE EXPECTING IT, BECAUSE THE ADDRESS
*   OF THE SYS1.IMAGELIB DCB IS ALREADY THERE.
         STM   RUCB,RD,DXREGA           SAVE REGS 10 TO 14     @ZA05553
*
         DMABCOND (RB),PDLOAD,RETURN=NONE,RES=NO,REGSAVE=NO    @ZA05553
         B     TCTLRTN                                           M0099
*
***********************************************************************
*
***********************************************************************
*
UPDTUCB  EQU   *
*
***********************************************************************
*
*   UPDATE UCB - UCS FIELDS
*
***********************************************************************
*
         L     RWK7,UCBXTADR            GET ADDRESS OF UCB EXT   Y02072
         MODESET  EXTKEY=SUPR           GET INTO SUPER KEY       Y02072
         SPACE
         USING UCBUCS,RWK7                                       Y02072
         MVC   UCBUCSID,DXUCSID         MOVE UCS IM ID TO UCB    Y02072
         MVC   UCBUCSOP,DXUCSOPT        MOVE UCS OPT BITS TO UCB Y02072
         OC    UCBUCSOP,0(RB)           SET DEBAULT BIT IF ANY   Y02072
         NI    UCBUCSOP,RESETMSK        RESET VERIFY IF ANY      Y02072
         DROP  RWK7                                              Y02072
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
*
***********************************************************************
*
*   DELETE UCS IMAGE
*
***********************************************************************
*
         LA    RE,DXSAVUCS              LOAD ADDR OF ENTRY PT    Y02072
*
         DELETE EPLOC=(0)               DELETE UCS IMAGE
         NI    FCAOPEN2,X'FF'-FCAOUCSL  INDIC UCS IMAGE DELETED  YM4697
*
***********************************************************************
*
***********************************************************************
*
UCSEXIT  EQU   *
*
         CLI   UCBTBYT4,PRTM3211        IF 1403, NO FCB          Y02072
         BNE   RESTERPT                 EXIT FOR 1403            Y02072
         TM    DXFCBSW1,IEC129RQ        CK IF IEC129 MSG REQ     Y02072
         BZ    XCTL197E                 NO GO LOAD FCB IN 197E   Y02072
*
**********************************************************************
*
*        ISSUE MESSAGE IEC129 AND XCTL TO IGG0197E
*
**********************************************************************
*
         LA    RWK3,MSG129              MESSAGE NO FOR MSG RTN   Y02072
         BAL   RWK6,GETMSG              GO GET MESSAGE           Y02072
         USING MSGENTRY,RWK2                                     Y02072
         IC    RWK7,MSGOFF1             OFFSET TO VAR FLD ONE    Y02072
         DROP  RWK2                                              Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD ONE   Y02072
         MVC   0(L'UCBNAME,RWK3),UCBNAME DEV NAME TO MSG         Y02072
         XC    RPLY(24),RPLY            ZERO OUT REPLY AREA AND  M5143
*                                       ECB                      M5143
         WTOR  MF=(E,REPLYLTH)          GET ADDR FOR WTOR
*
XCTL197E EQU   *
*
         LA    RF,MODNM7E               GET IDTTR ADDR OF IGG3197E
         B     MVEIDTTR                 GO TO WTG SEQ
***********************************************************************
*
*   RESTORE DCB EROPT
*
***********************************************************************
*
RESTERPT EQU   *
*
         MVC   DXCCW6(1),DXEROPT        RESTORE EROPT            Y02072
*
*   SEE IF SYS1.IMAGELIB HAS BEEN OPENED IF YES CLOSE IT
*
         CLI   DXIMGDCB,IMCLOSED        CK IF IMGLIB CLOSED      Y02072
         BE    TSTEXCP                  IF NOT GO TEST IF EXCP SPECIFED
         L     RF,DXIMGDCB              GET ADDR OF IMGLIB DCB   Y02072
         SVC   105                      ISSUE SVC TO CLOSE SYS1.IMAGELI
*
         NI    FCAOPEN2,X'FF'-FCAOIMGL  INDIC IMAGELIB CLOSED    YM4697
*
***********************************************************************
*
*   DETERMINE THE NEXT STAGE 2 EXECUTOR TO BE XCTLED
*
***********************************************************************
*
TSTEXCP  EQU   *
*
***********************************************************************
*
*   TEST IF EXCP IS SPECIFIED.IF YES,XCTL TO THE LAST OPEN EXECUTOR
*
***********************************************************************
*
         LA    RF,MODNM11               GO DO DCB COPY BACK      Y02072
         TM    DCBMACRF,EXCPMASK        TEST IF EXCP IS SPECIFIED
         BO    MVEIDTTR                 GOTO WTG TABLE UPDATE   Y02072
*
***********************************************************************
*
*   TEST IS BUFFER CONTROL BLOCK IS SPECIFIED.IF YES,XCTL TO IGG0911I
*
***********************************************************************
*
         TM    DCBBUFNO+3,BFCNTRL       BUFFER CONTROL BLOCK SPECIFIED
         BZ    TSTCHAIN                 IF YES,GOTO TEST PCI ROUTINE
*
         CLI   DCBBUFNO,0               SEE IF BUFFERS REQUESTED
         BE    TSTCHAIN                 IF YES, GO TEST CHAINED SCHED.
*
         LA    RF,MODNM1I               LOAD ADDR OF IDTTR OF IGG0191I
         B     MVEIDTTR                 GO TO MOVE IDTTR ROUTINE
*
***********************************************************************
*
TSTCHAIN EQU   *
*
***********************************************************************
*
*   TEST IF CHAINED SCHEDULING IS REQUESTED.  IF YES, XCTL TO IGG0191Q.
*
***********************************************************************
*
         LA    RF,MODNM1Q               LOAD ADDR OF IDTTR OF IGG0191Q
         TM    DCBOPTCD,DCBOPTC         TEST IF CHAINED SCHED REQUESTED
         BO    MVEIDTTR                 GO TO MOVE IDTTR ROUTINE
*
***********************************************************************
*
*   BSAM/QSAM EXIT.XCTL TO IGG0191G
*
***********************************************************************
*
         LA    RF,MODNM1G               LOAD ADDR OF IDTTR IF IGG0191G
*
***********************************************************************
*
MVEIDTTR EQU   *
*
***********************************************************************
*
*   MOVE IDTTR TO XCTL WTG TABLE
*
***********************************************************************
*
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,0(RF)           ST NEXT MOD ID IN WTG  @Z30TSCF
         L     RWK1,DXREGSV+4           RESTORE REGISTER         Y02072
*
***********************************************************************
*
RELOOP   EQU   *
*
***********************************************************************
*
*   UPDATE WTG TABLE AND XCTL TO NEXT MODULE
*
***********************************************************************
*
         LA    RWTGC,WGOFF(K0,RWTGC)    INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(K0,RPARC)    INCREMENT CURRENT DCB ENTRY
         CLC   K0(K2,RWTGC),AMIDCNST    IS THE RTN NEEDED AGAIN
         BCR   K8,RBASE                 IF YES,RETURN TO PROCESS
*
         CLC   K0(K2,RWTGC),OPIDCNST    TEST END OF WTG TABLE
         BC    K7,RELOOP                IF NOT,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR               RESET REG TO '0'
         LA    RWTGC,WAOFF(K0,RWTG)     RESET WTG REG TO POINT +32(WTG)
*
ZCHECK   EQU   *
*
         CLI   K0(RWTGC),K0             TEST IF THIS ENTRY COMPLETE
         BC    K7,TCTLRTN               IF NOT,XCTL
*
         LA    RWTGC,WGOFF(K0,RWTGC)    GET NEXT ENTRY OF WTG TABLE
         LA    RPARC,PLOFF(K0,RPARC)    GET NEXT ENTRY OF DCB
         B     ZCHECK                   GO TO TEST COMPLETION
*
TCTLRTN  EQU   *
*
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
         EJECT
***********************************************************************
*  'GETMSG' SUBROUTINE                                           Y02072
*  THIS SUBROUTINE EXTRACTS THE REQUIRED MESSAGE FROM THE MSG    Y02072
*  CSECT AND MOVES IT TO THE WTO/WTOR AREA.                      Y02072
*
*    INPUT TO THIS ROUTINE:                                      Y02072
*      REG 9 - MESSAGE NUMBER IN CSECT                           Y02072
*      REG 12 - RETURN ADDRESS                                   Y02072
*
*    OUTPUT FROM THIS ROUTINE:                                   Y02072
*      REG 1 - POINTER TO MESSAGE ENTRY IN THE MESSAGE CSECT     Y02072
*      MESSAGE TEXT IN WTO/WTOR AREA                             Y02072
***********************************************************************
GETMSG   EQU   *                        ENTRY POINT, MSG RTN     Y02072
         L     RWK7,DXMSGADR            GET ADDR OF MSG CSECT    Y02072
         LH    RWK2,0(RWK7,RWK3)        GET INDEX TO MESSAGE     Y02072
         LA    RWK2,0(RWK7,RWK2)        ADDR OF MESSAGE ENTRY    Y02072
         USING MSGENTRY,RWK2                                     Y02072
         SR    RWK3,RWK3                PREPARE REGISTER         Y02072
         IC    RWK3,MSGOFF              GET OFFSET TO TEXT IN    Y02072
*                                         ENTRY                  Y02072
         LA    RWK3,0(RWK2,RWK3)        ADDR OF MESSAGE TEXT     Y02072
         USING MSGTXTD,RWK3                                      Y02072
         SR    RWK7,RWK7                PREPARE REG FOR RETURN   Y02072
         IC    RWK7,MSGLNG              LEN OF MSG - 1           Y02072
         EX    RWK7,MVCINST             MOVE MESSAGE TO AREA     Y02072
         BR    RWK6                     RETURN                   Y02072
MVCINST  MVC   MSGAREA(0),MSGTXT        EXECUTED BY A EX INST    Y02072
         EJECT
*
***********************************************************************
*
***********************************************************************
*
*   CONSTANTS
*
***********************************************************************
*
*   FOR WTG TABLE
*
OPIDCNST DC    C'0S'                    END OF WTG TABLE ID
AMIDCNST DC    C'7U'                    MODUE ID
*
*   REPLY CONSTANT
*
RETRYCN  DC    C'RETRY'                REPLY = 'RETRY'
CANCELCN DC    C'CANCEL'               REPLY = 'CANCEL'
OKCN     DC    C'VERIFIED'             REPLY = 'VERIFIED'
CBLANK   DC    C'C '                    REPLY = 'C'
RBLANK   DC    C'R '                    REPLY = 'R'
VBLANK   DC    C'V '                    REPLY = 'V'
*
***********************************************************************
*
*   XCTL TABLE
*
***********************************************************************
*
MODNM11  DC    C'11',VL3(IGG01911)      MODULE IGG01911        @Z30TSCF
MODNM1G  DC    C'1G',VL3(IGG0191G)      MODULE IGG0191G        @Z30TSCF
MODNM1I  DC    C'1I',VL3(IGG0191I)      MODULE IGG0191I        @Z30TSCF
MODNM1Q  DC    C'1Q',VL3(IGG0191Q)      MODULE IGG0191Q        @Z30TSCF
MODNM7E  DC    C'7E',VL3(IGG0197E)      MODULE IGG0197E        @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)      MODULE IGG0196M        @Z30TSCF
         SPACE
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF THIS MODULE       Y02072
*
*   DSECTS
*
***********************************************************************
*
*
         DCBD  DSORG=PS,DEVD=PR
*
***********************************************************************
*
         EJECT
         IGGMSG                                                  Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         EJECT
         IECDSECS  WTG,PREFX,EXPAND=YES                        @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
         EJECT
         IECDSECS MAIN,EXPAND=YES                                M0099
         ORG   REPLYLTH+52                                       M5143
RPLY     DS    20C                                               M5143
RPLYECB  DS    F                                                 M5143
MCSMASK  DS    H                                                 M5143
LOMASK   DS    8C                                                M5143
UCSID    DS    4C                                                M5143
         ORG   MSGLSTSZ                                          Y02072
MSGAREA  DS    0CL64                    AREA TO MOVE 64 BYTES    Y02072
*                                         TO FOR WTO/WTOR'S      Y02072
DXREGSV  EQU   DXXCTL                   WORD TO SAVE REGISTER    Y02072
         EJECT
         IGGSCW                                                  Y02072
         EJECT
         IHAFCAUD  ORG=YES                                       YM4697
         EJECT
*
***********************************************************************
*
SRT      DSECT
         IEFUCBOB
*
***********************************************************************
*
*   DATA EXTENT BLOCK  (UNTIL PROTIOS CHANGES)
DEB      DSECT
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOFLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBTVLSQ DS    0CL2                VOL SEQ FOR TAPE
DEBBINUM DS    CL2
DEBTVLNM DS    0CL2                NO OF VOL FOR TAPE
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES
DEBVOLSQ DS    H
DEBVOLNM DS    H
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2
DEBSUBID DS    H
*
***********************************************************************
*
         END
