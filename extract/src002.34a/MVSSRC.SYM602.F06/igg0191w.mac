         TITLE ' IGG0191W OUTPUT DA EXECUTOR FOR PCI SCHEDULING'
IGG0191W CSECT
*MODULE NAME - IGG0191W                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS2 RELEASE 2 DELETIONS
*000550,011000,052200,068940-069000,077200,119600,122800-124000, Y02072
*139780,149814,154200-154400,161200,000260-000377,000440-000500  Y02072
*56500,129071,129306,133200,134800                               Y02072
*                                                                YM2396
*                                                                YM2424
*                                                                YM4697
*                                                                YM5373
*                                                                YM6583
*                                                                YM7595
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*          RELEASE 20 DELETIONS
*0000064200                                                      M6190
*0000002800,052600,058600,058720,059380,064400,064800,066400-    M5725
*0000066600,068760,070200,070600-071000,071600-072000,073200,    M5725
*0000075800,075920,076000,077600,084200,103900,105400,111500,    M5725
*0000128880-129080,136600-138350,142000-143800,146400,146600-    M5725
*0000147600,155000-160400                                        M5725
*          RELEASE 21 DELETIONS
*
*STATUS CHANGE LEVEL 002
*FUNCTION/OPERATION -- THIS EXECUTOR BUILDS THE MAIN IOB & ICBS THAT
*                      WILL CONTROL THEIR ASSOCIATED CHANNEL PROGRAMS.
*                      IT ALSO CONSTRUCTS INPUT OR OUTPUT CHANNEL PROG.
*                      AND FILLS IN DEVICE DEPENDANT FIELDS IN THE DCB.
*                      FOR QSAM THE CHANNEL PROGRAMS INCLUDE THE BUFFER
*                      ADDRESS,THE PHYSICAL BLOCK SIZE AND ASSC FLAGS.
*                      ALL ICBS ARE LINKED TOGETHER
*                      THE GETMAIN MACRO IS USED TO OBTAIN SPACE FOR
*                      THE IOB & ICBS.
*                      IT SETS AN AUDIT TRAIL BIT IN THE OPEN    Y02072
*                      WORKAREA INDICATING TO FORCE CLOSE THAT   Y02072
*                      THE CORE GETMAINED FOR THE IOB'S CAN BE   Y02072
*                      FREEMAINED.                               Y02072
*
*ENTRY POINTS  -   ENTERED AT IGG0191W FROM LEVEL ONE
*                      EXECUTOR IGG0191B VIA THE XCTL MACRO
*
*INPUT SUPPLIED-   USER DCB AND OPEN PARAMETERS -- SEE REGISTER USAGE
*
*OUTPUT GIVEN  -   MAIN IOB , ICBS AND CHANNEL PROGRAMS , DCB INITIAL
*
*
*EXTERNAL RTS. -   NONE
*
*EXITS-NORMAL: XCTL TO IGG01910(IECOSLDA)    TO LOAD ROUTINES
*
*EXITS-ERROR: NONE.
*
*MACROS - MAPPING : IECDSECS, IEZIOB, IEZDEB, IKJTCB, IHAICB,    Y02072
*                   IHACCW, DCBD, IHAFCAUD, IGGBCB               Y02072
*
*MACROS - ACTION : MODESET, GETMAIN, XCTL, XCTLTABL, DMABCOND    Y02072
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 35    WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 36-39 TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR  N TH DCB  (3 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (1 BYTE )
*                   IDTTR OF LAST ROUTINE LOAD       (3 BYTES)
*                   NOT USED                         (1 BYTE)
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY    Y02072
*            UNLESS OTHERWISE SPECIFIED, SUPER STATE             Y02072
*
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RTIOT    EQU   9         USED HERE AS WRK REG AND  COMM VECTOR ADDR.
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RDEB     EQU   11        DEB ADDRESS
RWK2     EQU   RDEB                     WORK REGISTER            Y02072
RB       EQU   12        WORK REG1  **
RWK3     EQU   RB                       WORK REGISTER            Y02072
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RJ       EQU   15        WORK REG4
RBUFADR  EQU   RJ        BUFFER ADDRESS REGISTER                 YM7595
RE       EQU   0         WORK REG5
RF       EQU   1         WORK REG6
RWK6     EQU   RF                       WORK REGISTER            Y02072
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
*
*
*********************************************************************
* MASK'S TO TEST PARAMETER LIST WITH
INP      EQU   X'0F'
OUTP       EQU   X'0F'
UPDATE     EQU   X'04'
INOUT      EQU   X'03'
OUTIN      EQU   X'07'
RDBACK     EQU   X'01'
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
ONE        EQU   X'01'
FRTYATE    EQU   48
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'
*
*
STOWB      EQU   X'80'
WRTCK    EQU   X'80'
OVRFLO     EQU   X'20'
PCIB     EQU   X'20'
MINKEY     EQU   X'01'
CONCAT     EQU   X'FF'
SRCHDIRB EQU   X'40'
ONONYES  EQU   X'0C'
*
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB      EQU   X'01'
BSAMBIT    EQU   X'00'
PAM        EQU   X'02'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
NORCDRY  EQU   X'20'                    NO RCD READY MASK
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN      EQU   X'30'
COMPLETE EQU   X'60'
FIRSTIOB   EQU   X'01'
IOBCEXCP EQU   X'80'                    IOBCNOPA FLAG            YM6583
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
EXCHANGB   EQU   X'10'
SIMPLEB    EQU   X'40'
*
*********************************************************************
*
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
SUBSTUTB   EQU   X'04'
*
*
*********************************************************************
*
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
*
*
SRCHE      EQU   X'31'
WRTCKD     EQU   X'1D'
RDC        EQU   X'92'
RDKD       EQU   X'8E'
RDD        EQU   X'86'
NOP      EQU   X'03'
TIC        EQU   X'08'
SETSC    EQU   X'23'                    SET SECTOR CCW CMND
RDSC     EQU   X'22'                    READ SECTOR CCW CMND
RDHA     EQU   X'1A'                    READ HOME ADDR
MTSID    EQU   X'B1'                    MULTI-TRK SRCH ID
TICNOP   EQU   X'88'                    RCD READY TIC NOP
*
*
*********************************************************************
*
*
* MASKS FOR RECORD FORMATS
*
*
STANDRDF   EQU   X'08'
FORMATU    EQU   X'C0'
FORMATF    EQU   X'80'
FORMATV    EQU   X'40'
BLOCKED    EQU   X'10'
FSTANDRD EQU   X'88'
FIXBKD   EQU   X'90'
NOTPNTID EQU   X'05'
FORMATVS EQU X'48'    VARIABLE SPANNED                           M3641
*
*
*********************************************************************
*
*
*   CHANNEL CONTROL WORD FLAGS
*
SKIP       EQU   X'10'
SLI        EQU   X'20'
PCI      EQU   X'08'
CC         EQU   X'40'
DATACH     EQU   X'A0'
SLICC      EQU   X'60'
SLICCSK    EQU   X'70'
*
*
*********************************************************************
*
*
KEYS       EQU   X'01'
QSAM       EQU   X'01'
*
*
*********************************************************************
*
COMMTABL EQU   16
*
*********************************************************************
*
*
* DISPLACEMENTS, BYTE COUNTS AS EQUATES
*
D0       EQU   0                        DISPLACEMENT OF 0
D1       EQU   1                        DISPLACEMENT OF 1
D2       EQU   2                        DISPLACEMENT OF 2
D3       EQU   3                        DISPLACEMENT OF 3
D4       EQU   4                        DISPLACEMENT OF 4
D5       EQU   5                        DISPLACEMENT OF 5
D6       EQU   6                        DISPLACEMENT OF 6
D7       EQU   7                        DISPLACEMENT OF 7
D8       EQU   8                        DISPLACEMENT OF 8
D12      EQU   12                       DISPLACEMENT OF 12
D16      EQU   16                       DISPLACEMENT OF 16
D25      EQU   25                       DISPLACEMENT OF 25
D32      EQU   32                       DISPLACEMENT OF 32
D35      EQU   35                       DISPLACEMENT OF 35
D40      EQU   40                       DISPLACEMENT OF 40
D51      EQU   51                       DISPLACEMENT OF 51
D52      EQU   52                       DISPLACEMENT OF 52
D56      EQU   56                       DISPLACEMENT OF 56
D80      EQU   80                       DISPLACEMENT OF 80       M5725
D255     EQU   255                      DISPLACEMENT OF 255      M5725
*
* BYTE COUNTS AS EQUATES
*
B1       EQU   1                        BYTE CNT OF 1
B2       EQU   2                        BYTE CNT OF 2
B3       EQU   3                        BYTE CNT OF 3
B4       EQU   4                        BYTE CNT OF 4
B5       EQU   5                        BYTE CNT OF 5
B8       EQU   8                        BYTE CNT OF 8
B16      EQU   16                       BYTE COUNT OF 16
B24      EQU   24                       BYTE COUNT OF 24
*
* MISCELLANEOUS EQUATES
*
RRWCHPL  EQU   10                       RCD READY WRT CHP LEN
RRNWCHPL EQU   6                        RCD READY NORM WRT CHP LEN
*                                       IN DOUBLE WORDS
NWNOPOFF EQU   72                       NORM NOP OFFSET
FLAGOFF  EQU   4                        FLAG OFFSET IN CCW
CNTOFF   EQU   7                        CNT FLD OFFSET
OABD065  EQU   65                       INTERNAL ABEND CODE 65   I21042
*
*
*
*
         BALR  RBASE,0                  REG 3 IS BASE
         USING SOPA,RBASE               ESTABLISH BASE REGISTER
         USING IHADCB,RDCB              REG 2 IS DCB
         USING FORCORE,RCORE            REG 4 IS WORK AREA ADDR
*
*
SOPA     EQU   *                        FOR ADDRESSABILITY
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191W'              MODULE NAME              Y02072
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/17/74'              LAST DATE MODIFIED     @Z30TSCF
BEGIN    DS    0H                                                Y02072
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         L     RCORE,4(RWTGC)           GET WORK AREA ADDRESS
*
         SR    RTIOT,RTIOT
         ST    RTIOT,DCBCNTRL
         IC    RTIOT,DCBNCP             GET NUMBER OF ICBS TO BUILD
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP2            NON-PCI EXECUTOR       @Z30TSCF
         TM    DCBMACRF+1,POINTB        NOTE/POINT MACRO USED
         BC    8,SOPA001                NO BRANCH
*
         MVI   DCBCNTRL+1,NOTPNTID      STORE INDEX FOR NOTE/POINT ID.
*
SOPA001  EQU   *
         LA    RF,88                    SIZE OF OUTPUT ICB +CP.
         LA    RUCB,B8                  DOUBLE WORD CONSTANT     M5725
*
* CHECK FOR RCD READY AND IF USED INCR ICB SIZE
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    SOPA01A                  BRANCH IF YES
         AR    RF,RUCB                  INCR ICB SIZE            M5725
SOPA01A  EQU   *
         MVI   DCBCNTRL+3,1             STORE INDEX FACTOR FOR PCI EOB
         TM    DCBOPTCD,WRTCK           WRITE VALIDITY SPECIFIED
         BC    8,SOPA007                NO BRANCH
         TM    JFCBMASK+D6,NORCDRY      RCD READY WITH WRT CHK
         BO    SOPA01D                  BRANCH IF YES
         AR    RF,RUCB                  INCR ICB SIZE            M5725
SOPA01D  EQU   *
*
         LA    RF,24(RF)                ADD CNST TO ICB & CP LENGTH
SOPA007  EQU   *
*
         LR    RC,RF                    SAVE ICB SIZE
         TM    DCBCIND2,QSAMB           IS QSAM BEING USED
         BC    8,SOPA009                NO BRANCH
*
         IC    RTIOT,DCBBUFNO           GET NO. OF ICBS TO GENERATE
SOPA009  EQU   *
*
         CH    RTIOT,RCCWCNST+2         BUFFER # =1 ?            M6190
*
         BNH   RELOOP                   BRANCH IF NOT GT ONE     M5725
*
*
SOPA011  EQU   *
*
         LR    RE,RF                    COPY ICB SIZE
         SRL   RE,3                     DIVIDE BY EIGHT
         STC   RE,DCBIOBL               SAVE FOR CLOSE
         MR    RE,RTIOT                 COMPUTE SPACE REQ        M5725
         LA    RF,80(RF)                ADD SPACE FOR MAIN IOB
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    SOPA11A                  BRANCH IF YES
         LA    RF,B16(RF)               INCR FOR THETA VALUES AND
*                                       SET SECTOR IN MIOB
SOPA11A  EQU   *
*
         LR    RB,RF                    SAVE FOR CLEARING RT.
         OI    DCBCIND2,DCBCNCHS        SET TRUE PCI INDICATOR   YM4697
*
*  THE FOLLOWING SAVES THE AMOUNT OF CORE GETMAINED FOR THE      YM4697
*  IOB AND ICBS IN THE FORCE CLOSE AUDIT TRAIL FOR THE FORCE     YM4697
*  CLOSE EXECUTOR.                                               YM4697
*
         ST    RF,DXATEXC2              SAVE LENGTH              YM4697
*
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
         GETMAIN R,LV=(RF),SP=0                                  Y02072
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
*
*
**********************************************************************
*
* OBTAIN THETA ADDRS MAY BE USED LATER
*
         LR    RJ,RB                    GET AREA SIZE
         AR    RJ,RF                    GET LAST AREA + 1 ADDR
         SR    RJ,RUCB                  BACK UP AREA ADDR ONE DW
         ST    RJ,DXCCW11               TEMP STORE SET SECT ADDR
*
**********************************************************************
**
*    THIS SECTION CLEARS THE SPACE RECIEVED FROM GETMAIN
**
*
         ST    RF,DCBIOBAD              STORE MAIN IOB ADDRESS
         OI    FCAOPEN,FCAOIOB          INDIC IOB'S CAN BE FREED Y02072
         BCTR  RB,0                     REDUCE AMT BY ONE        M5725
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
         LA    RJ,D255                  GET MAX AMT CAN CLEAR    M5725
COMPARE  CR    RB,RJ                    IS AMT TO CLEAR GT 255   M5725
         BC    12,ONECLEAR              NO BRANCH
*
         EX    RJ,CLEAR                 CLEAR 256 BYTES          M5725
         SR    RB,RJ                    SUBT 255 FROM AMT TO     M5725
*                                       CLEAR                    M5725
         BCTR  RB,0                     SUBT ONE MORE BYTE       M5725
         LA    RF,256(RF)               UPDATE AREA ADDR BY 256
         B     COMPARE
*
CLEAR    XC    0(1,RF),0(RF)            ACTUAL CLEAR INSTRUCTION
*
ONECLEAR EX    RB,CLEAR                 CLEARS LESS THAN 256     M5725
*
*
*
         L     RB,DCBIOBAD              GET MAIN IOB ADDRESS
*
*    THIS SECTION OF CODE WILL BUILD THE MAIN IOB & CHANNEL PROGRAM
*
SOPA013  EQU   *
*
         LA    RJ,D80(RB)               POINT TO FIRST ICB       M5725
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    SOPA13A                  BRANCH IF YES
         AR    RJ,RUCB                  INCR ICB PTR             M5725
SOPA13A  EQU   *
         ST    RJ,D8(RB)                STORE IN MAIN IOB        M5725
         LA    RD,4(RB)                 POINT TO ECB IN MAIN IOB
*
         MVI   0(RD),X'7F'              POST MAINIOB COMPLETE
*
         LA    RF,56(RB)                POINT TO CP START ADDRESS
         USING IOBQSAMC,RWK3                                     Y02072
         ST    RD,IOBECBPT              ECB ADDR TO IOB          Y02072
         ST    RF,IOBSTART              CHAN PGM ADDR TO IOB     Y02072
         L     RWK2,DXUDCBAD            GET USERS DCB ADDRESS    Y02072
         ST    RWK2,IOBDCBPT            DCB ADDR TO IOB          Y02072
         DROP  RWK3                                              Y02072
         MVC   48(8,RB),DCBFDAD         MOVE D.A. ADDRESS TO MAIN IOB
         LR    RD,RC                    PUT ICB SIZE IN INDEX REG
*
* CHECK FOR RCD READY AND IF USED GO BUILD SET SECTOR
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICE W/O RCD READY
         BO    SOPA13D                  BRANCH IF YES
         L     RE,DXCCW11               GET THETA ADDR
         BAL   RJ,SOPASTA               GO BUILD SET SECTOR
SOPA13D  EQU   *
*
* CONSTRUCTION OF SEARCH AND TIC FOLLOWS
*
         LA    RE,D51(RB)               PT TO CCHHR IN MAIN IOB
         BAL   RJ,SOPSRCH               GO BUILD SRCH AND TIC
*
         AR    RF,RUCB                  CHP PTR TO TIC
         SR    RC,RC                    CLEAR REG
         IC    RC,DCBKEYLE              GET KEY LENGTH
         AH    RC,DCBBLKSI              ADD BLOCK SIZE
         ST    RC,D4(RF)                PUT IN RH OF TIC
*
         AR    RF,RUCB                  INCR PTR
         MVI   D0(RF),TIC               PUT TIC CMND IN CCW
*
         AR    RF,RUCB
*
* MAIN IOB COMPLETE, FROM HERE ON RB=ICB, RF=CHP PTR, RUCB=8,
* RD=ICB SIZE,RDEB=16 HERE FOR INDEX TO NORM CHP ADDR
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         ST    RF,DCBIOBA               PUT ICB PTR IN DCB
         LR    RB,RF                    COPY ADDRESS
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   YM2396
         SPACE
ICBLOOP  EQU   *
*
************** CONSTRUCTION OF ICB & CP COMMENCE **********************
*
         ST    RF,D0(RB)                LINK ICBS, REDUNDANT FOR
*                                       FIRST SINCE RF=RB
         LR    RB,RF                    UPDATE ICB PTR
         LA    RC,4(RB)                 POINT TO ECB IN ICB
         ST    RC,12(RB)                STORE ECB ADDRESS IN ICB
         MVI   4(RB),X'7F'              POST ECB COMPLETE FOR NOW
         LA    RC,56(RB)                POINT TO ICBS NORMAL CP  M5725
         ST    RC,24(RB)                STORE CP ADDRESS IN ICB
         MVC   32(8,RB),DCBFDAD         STORE D.A. ADDRESS IN ICB
*
*
*        NOTE THAT THE DCB ADDRESS IS NOT STORED IN THE ICB
*
*
***********************************************************************
*
SOPA025  EQU   *
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVC   DCBWCPO(4),PCIOFST       STORE CP OFFSETS IN DCB
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
         LA    RF,D40(RB)               PT RF TO CHP START
         L     RC,DCBIOBAD              GET MAIN IOB PTR
         LA    RE,D35(RB)               PT TO ICB CCHHR FLD
         BAL   RJ,SOPSRCH               GO BUILD SRCH AND TIC
         MVI   D0(RF),MTSID             CHANGE CMND TO MULTI-TRK
         AR    RF,RUCB                  INCR CHP PTR FOR SRCH
         AR    RF,RUCB                  INCR CHP PTR FOR TIC
*
* WRT CCW BUILD  RTN
*
         LA    RE,D0(RB,RD)             PT TO NEXT ICB
         SR    RE,RUCB                  BACK UP ONE DW
         ST    RE,D0(RF)                PUT IN CHP AS CCHHRKDD FLD
         MVI   D0(RF),WRTCKD            PUT IN CCW CMND
         MVC   FLAGOFF(B4,RF),WCCWCNST  FLAGS AND LENT TO CCW
*
* MUST TEST TO SEE IF THIS JOB IS RUNNING IN A VIRTUAL ENVIRON-  Y02072
* MENT.  IF YES, PCI BIT SHOULD NOT BE LEFT ON.  IF NO, PCI BIT  Y02072
* SHOULD BE LEFT ON.                                             Y02072
*
         L     RDEB,DCBDEBAD            GET DEB ADDR             Y02072
         USING DEBBASIC,RDEB                                     Y02072
         L     RWK2,DEBTCBAD            TCB ADDR FOR V=R TEST    Y02072
         DROP  RDEB                                              Y02072
         USING TCB,RWK2                                          Y02072
         TM    TCBFLGS6,TCBRV           JOB RUNNING VIRT         Y02072
         BO    SOPA027                  NO, LEAVE PCI ON         Y02072
         DROP  RWK2                                              Y02072
         USING CCW,RWK6                                          Y02072
         NI    CCWFLGS,X'FF'-CCWPCI     YES, TURN PCI FLAG OFF   Y02072
         DROP  RWK6                                              Y02072
SOPA027  EQU   *                        LEAVE PCI FLAG ON        Y02072
         AR    RF,RUCB                  INCR PTR
*
*
         TM    DCBCIND2,QSAMB           QSAM USED
         BZ    SOPA029                  BRANCH IF NO
         L     RWK2,DCBBUFCB            ADDR OF BUF CNTRL BLK    YM7595
         USING BCBLK,RWK2
         L     RBUFADR,BCBBUFPT         ADDR NEXT AVAIL BUFFER   YM7595
         LTR   RBUFADR,RBUFADR          IS THERE A BUFFER        Y02072
         BZ    ABEND                    NO, ISSUE DMABCOND       Y02072
         USING BUFFER,RBUFADR
         MVC   BCBBUFAD,BUFNXPTB        NEXT AVAIL BUFFER        YM7595
         USING CCW,RF                                            Y02072
         STCM  RBUFADR,B'0111',CCWADDRB  YES, STORE ADDR IN CCW  Y02072
         MVC   CCWBYTE,DCBBLKSI         BLKSIZE TO CCW           M5725
         DROP  RF,RWK2,RBUFADR
SOPA029  EQU   *
         OI    FLAGOFF(RF),SLI          SET SILI BIT
         AR    RF,RUCB                  INCR PTR FOR 2ND WRT CCW
*
* CHECK FOR WRT CHK
*
         TM    DCBOPTCD,WRTCK           WRT CHK SPECIFIED
         BZ    SOPA444                  BRANCH IF NO
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBWCPL,B8               SET WRT CHP LEN
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
         SR    RF,RUCB                  BACK UP CHP PTR
         OI    FLAGOFF(RF),CC           CMND CHAIN PREVIOUS CCW
         AR    RF,RUCB                  RESTORE PTR
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICE W/O RCD READY
         BO    SOPA29A                  BRANCH IF YES
         BAL   RJ,SOPARTA               GO BUILD RD SECT CMND
         USING CCW,RF                                           SA57269
         SR    RF,RUCB                  POSITION AT RD SECT CCW YM5373
         OI    CCWFLGS,CCWCC            SET COM CHAIN TO SET    SA57269
*                                         SECTOR CCW            SA57269
         AR    RF,RUCB                  POSITION AT SET SEC CCW YM5373
         DROP  RF                                               SA57269
         L     RE,DXCCW11               GET THETA ADDR           Y02072
         BAL   RJ,SOPASTA               GO BUILD SET SECTOR CMND
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBWCPL,RRWCHPL          SET WRT CHP LEN FOR RCD RDY
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
SOPA031  EQU   *
SOPA29A  EQU   *
         LA    RE,D0(RB,RD)             PT OT NEXT ICB
         SR    RE,RUCB                  BACK UP TO CCHHRKDD ADDR
         BAL   RJ,SOPSRCH               GO BUILD SRCH AND TIC
         AR    RF,RUCB                  INCR PTR FOR SRCH
         AR    RF,RUCB                  INCR PTR FOR TIC
*
*
         MVI   D0(RF),RDD               PUT IN RD DATA CMND
         MVC   FLAGOFF(B4,RF),RCCWCNST  PUT IN FLAGS AND LEN
*
         TM    DCBCIND2,QSAMB           QSAM USED
         BO    SOPA035                  BRANCH IF YES
         CLI   DCBKEYLE,B1              KEY LENGTH SPECIFIED
         BNH   SOPA035                  BRANCH IF NO
         MVI   D0(RF),RDKD              PUT IN RD KEY DATA CMND
*
SOPA035  EQU   *
         SR    RF,RB                    OBTAIN RD OFFSET
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         STC   RF,DCBOFFSR              PUT IN DCB
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
         LA    RF,B8(RF,RB)             RESTORE AND INCR PTR
SOPA444  EQU   *
         TM    DCBCIND2,QSAMB           QSAM USED
         BO    SOPA449                  BRANCH IF YES
         LA    RC,D0(RB,RD)             PT TO NEXT ICB
         SR    RC,RUCB                  BACK UP TO CCHHRKDD FLD
         MVC   B5(B1,RC),DCBKEYLE       MOVE IN KEY LENGTH
SOPA449  EQU   *
*
*
         SR    RF,RB                    OBTAIN NOP OFFSET
         L     RC,DCBIOBAD              GET MIOB
         STC   RF,D3(RC)                PUT IN MAIN IOB
         AR    RF,RB                    RESTORE PTR
*
*
         LA    RC,D56(RD,RB)            PT TO NEXT ICB CHP
         ST    RC,D0(RF)                PUT IN CCW
         MVI   D0(RF),NOP               MOVE IN NOP CMND
         OI    FLAGOFF(RF),SLI          SILI FLAG ON
         MVI   D7(RF),B1                BYTE COUNT TO ONE
         AR    RF,RUCB                  INCR POINTER
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    SOPA477                  BRANCH IF YES
         TM    DCBOPTCD,WRTCK           WRITE CHECK USED
         BO    SOPA477                  BRANCH IF YES
         SR    RF,RUCB                  BACK UP POINTER
         MVC   D5(B3,RF),D1(RF)         MOVE NEXT ICBADDR TO RH
*                                       OF CCW
         LA    RDEB,D8(RF)              PT TO NEXT CCW
         ST    RDEB,D0(RF)              PUT IN CCW
         MVI   D0(RF),TICNOP            PUT IN TIC CMND
         AR    RF,RUCB                  INCR PTR FOR NOP-TIC
         BAL   RJ,SOPARTA               GO BUILD RD THETA
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBWCPL,RRNWCHPL         SET CHP LENGTH
         MODESET  KEYADDR=DXUKEY,WORKREG=11  GET INTO USER KEY   Y02072
SOPA477  EQU   *
         AR    RF,RUCB                  INCR PTR FOR CNT
         BCT   RTIOT,ICBLOOP            IF MORE TO BUILD DECR AND
*                                       GO DO IT AGAIN
*
*
*
*
SOPAEND  EQU   *
         SPACE
         MODESET  EXTKEY=DATAMGT
         SPACE
         OI    FCAOPEN2,FCAOIOBC        INDIC ICBS COMPLETED     YM7595
         SPACE
         MODESET  KEYADDR=DXUKEY,WORKREG=10
         SPACE
         L     RUCB,DCBIOBA             GET FIRST ICB GENERATED
         ST    RUCB,0(RB)               TIE LAST ICB TO FIRST
         LA    RDEB,D56(RUCB)           PT TO FIRST ICB CHP
         L     RD,DCBIOBAD              GET MAIN IOB ADDR
*
         SR    RC,RC                    CLEAR REG
         IC    RC,D3(RD)                GET NOP OFFSET
         AR    RC,RB                    OBTAIN NOP ADDR
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    SOPAXX                   BRANCH IF YES
         TM    DCBOPTCD,WRTCK
         BO    SOPAXX                   BR IF WRT CHK SPECIFIED
         ST    RDEB,D4(RC)              PUT RDEB IN RH OF TIC
         B     SOPAXZ                   GO AROUND NEXT
SOPAXX   EQU   *
         ST    RDEB,D0(RC)              PUT IN PTR TO FIRST ICB
         MVI   D0(RC),NOP               RESTORE NOP
SOPAXZ   EQU   *
         SR    RC,RB                    RECOVER OFFSET OF NOP
         AR    RC,RUCB                  GET FIRST ICB NOP ADDR
         ST    RC,D12(RD)               PUT IN MAIN IOB
         MVI   D12(RD),IOBCEXCP         SET EXCP NEEDED FLAG     YM6583
         MVC   D32(B8,RUCB),DCBFDAD     INITIALIZE ICB SEEK
         L     RUCB,D0(RUCB)            SPECIAL CONSIDERATIONS
         MVC   D32(B8,RUCB),DCBFDAD     INITIALIZE ICB SEEK
*
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
*
         TM    DCBDSORG,DCBDSGPO        DCB USING PAM            Y02072
         BZ    SOPAEND2                 NO BRANCH                Y02072
         MVI   NTPTINDX+1,5             STORE INDEX FOR          Y02072
*                                         NOTE-POINT ID          Y02072
***********************************************************************
*
*
*        SELECT 3RD STAGE EXECUTOR
*
SOPAEND2 EQU   *
*
         USING FORCORE,RCORE                                     Y02072
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOPSLDFT        GET NON-SPAN EXEC      @Z30TSCF
         TM    DCBRECFM,FORMATVS        VAR SPAN TEST            M5725
         BNO   RELOOP                   NO CHANCE FOR VS         M5725
         TM    DCBRECFM,FORMATU         UNDEFINED                M5725
         BO    RELOOP                   YES,NOT VS               M5725
         MVC   WTGIDTTR,SOP3            GET SPAN LOAD EXEC     @Z30TSCF
*
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
**
*
*********************************************************************
*
*
*   THIS SECTION OF CODE FILLS IN RD/WRT CCW WITH BUFFER AND LENGTH
*
***********************************************************************
*
* SEARCH AND TIC BUILD RTN
*
SOPSRCH  EQU   *
         ST    RE,D0(RF)                SRCH ADDR TO CCW
         MVI   D0(RF),SRCHE             SEARCH CMND
         ST    RF,D8(RF)                SRCH ADDR TO TIC CCW
         MVC   FLAGOFF(B5,RF),SCCWCNST  FLAGS, LEN AND TIC CMND
         BR    RJ                       RETURN
*
* SET SECTOR BUILD RTN
SOPASTA  EQU   *
         ST    RE,D0(RF)                THETA ADDR TO CCW
         MVI   D0(RF),SETSC             SET SECT CMND
         OI    FLAGOFF(RF),CC           CMND CHAIN
         B     CMNDFIN                  GO FINISH CMND
*
* READ SECTOR BUILD RTN
*
SOPARTA  EQU   *
         L     RE,DXCCW11               GET THETA ADDRESS        Y02072
         ST    RE,D0(RF)                THETA ADDR TO CCW
         MVI   D0(RF),RDSC              RD SECT CMND
         SR    RF,RUCB                  BACK UP PTR
         OI    FLAGOFF(RF),CC           CMND CHAIN PREV CCW
         AR    RF,RUCB                  RESTORE PTR
CMNDFIN  EQU   *
         MVI   CNTOFF(RF),B1            BYTE CNT TO ONE
         AR    RF,RUCB                  INCR PTR
         BR    RJ                       RETURN
*
ABEND    EQU   *
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         DMABCOND OABD065,PDLOAD,RES=NO,REGSAVE=YES              I21042X
                                        CALL PD FOR 013 ABEND
         B     TCTLRTN                                           I21042
*
*
**********************************************************************
*                                                                    *
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
AMIDCNST DC    C'1W'                    ID OF THIS MODULE
OPIDCNST DC    C'0S'
SOPSLDFT DC    C'13',VL3(IGG01913)      NON-SPANNED EXEC       @Z30TSCF
SOP3     DC    C'16',VL3(IGG01916)      SPANNED RECORDS        @Z30TSCF
SOP2     DC    C'1D',VL3(IGG0191D)   ABNORMAL, PCI UNSUPPORT   @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROBLEM DETERMINATION  @Z30TSCF
*
***********************************************************************
*      CONSTANTS AND RESERVED STORAGE.
*
*
WCCWCNST DC    X'A8000008'
RCCWCNST DC    X'50000001'
SCCWCNST DC    X'4000000508'
PCIOFST  DC    X'28'
         DC    X'05'                    NUMBER OF DBL WRDS IN CP
         DC    X'00'                    READ CCW OFFSET
         DC    X'40'                    WRITE CCW OFFSET
         SPACE
PATCH    DC    0H'0',54X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
         IGGBCB  TYPE=SAM
         EJECT
         DCBD  DSORG=PS
NTPTINDX EQU   DCBCNTRL                 NOTE/POINT INDEX         Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         IECDSECS (MAIN,(IOB,NO)),IOB,WTG,PREFX,EXPAND=YES     @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
         EJECT
FORCORE  DSECT                                                   Y02072
         IHAFCAUD  ORG=YES                                       Y02072
         EJECT
         IEZDEB                                                  Y02072
         EJECT
         IHAICB                                                  Y02072
         ORG   ICBR+1                                            Y02072
         EJECT
         IHACCW  DSECT=YES                                       Y02072
         EJECT
         IKJTCB                                                  Y02072
           END
