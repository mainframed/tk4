         TITLE 'IGG019T2-EOB RTN, DA OUTPUT WITH TRK OVFLO,TOTALING'
         MACRO
&NAME    IF    &A,&IS=,&ISNOT=,&GOTO=
         LCLB  &NOERR
&NOERR   SETB  1
         AIF   ('&A' NE '').SKIP
         MNOTE 'TEST  ADDRESS NOT SPECIFIED.'
&NOERR   SETB  0
.SKIP    AIF   ('&GOTO' NE '').SKIP2
         MNOTE 'BRANCH ADDRESS MISSING.'
&NOERR   SETB  0
.SKIP2   AIF   ('&IS' NE '' OR '&ISNOT' NE '').SKIP3
         MNOTE 'TEST CONDITION NOT SPECIFIED.'
&NOERR   SETB  0
.SKIP3   AIF   (&NOERR).SKIP4
         MEXIT
.SKIP4   AIF   ('&IS' EQ '').NOIS
***
&NAME    TM    &A,&IS
         BO    &GOTO
***
         MEXIT
.NOIS    ANOP
***
&NAME    TM    &A,&ISNOT
         BZ    &GOTO
***
         MEND
         EJECT
IGG019T2 CSECT                                                     UT18
         SPACE
***********************************************************************
*                                                                     *
*MODULE NAME = IGG019T2                                               *
*                                                                     *
*DESCRIPTIVE NAME = EOB RTN, DA OUTPUT WITH TRK OVFLO, USER TOTALING  *
*                                                                     *
*COPYRIGHT = NONE                                                     *
*                                                                     *
*
*FUNCTION/OPERATION - DETERMINES WHETHER CURRENT RECORD TO BE WRITTEN *
*   OR READ(F STANDARD) WILL FIT ON CURRENT TRACK. THIS CALCULATION   *
*   ASSUMES THIS RECORD WILL BE LAST ON TRACK. IF RECORD WILL FIT,    *
*   SPACE REQUIRED IS RECALCULATED ASSUMING RECORD IS NOT THE LAST.   *
*   DCBTRACKBALANCE IS REDUCED BY THIS AMOUNT. IF RECORD WILL NOT FIT *
*   THE NEXT SEQUENTIAL TRACK IS FOUND. IF NONE EXISTS,AN EOV         *
*   CONDITION IS SIMULATED. FOR STANDARD F THE SEEK ADDRESS IN THE IOB*
*   IS INCEMENTED BY ONE SINCE SEARCH DIRECT IS USED.                 *
*                                                                     *
*CHANGE ACTIVITY = AS FOLLOWS                                         *
*                                                                     *
*          RELEASE 19 DELETIONS                                       *
*          RELEASE 20 DELETIONS                                       *
*2341094600                                                      A32558
*2341035400,055600,056600,090000,096200,135200,136600            S20201
*          RELEASE 21 DELETIONS                                       *
*          VS2 RELEASE 02 DELETIONS                                   *
*D143400-143600                                                  Y02072
*                                                                YM1433
*                                                                YM4640
*                                                                XM4343
* 030700-030900                                                  YM7588
*
*        VS2 RELEASE 04 DELETIONS
*A125920-126192,144520-144640                                  @ZA02255
*STATUS CHANGE LEVEL 005
*                                                                     *
* ENTRY POINTS - IGG019T2 FROM ALL GET/PUT/READ/WRITE/MODULES      UT18
*               LA   2,DCB                                            *
*               LA   3,IOB                                            *
*               L    4,DCBOFFSR  OR DCBOFFSW                          *
*               L    15,76(2)    FOR WRITE(BSAM)                      *
*               L    15,92(2)    FOR QSAM                             *
*               BALR 14,15                                            *
*                                                                     *
*INPUT - IOB                                                          *
*         IOB+OFFSET - RECORD LENGTH IN CCW                           *
*        DCB                                                          *
*         DCBDVTBL - POINTS TO DEVICE ENTRY IN IECZDTAB               *
*         DCBDEB AD - DEBADDRESS                                      *
*         DCBTRBAL - BYTES REMAINING ON TRACK                         *
*         DCBFDAD  - POINTS TO LAST RECORD READ OR WRITTEN            *
*         DCBKEYLE - KEYLENGTH - ADDED TO BLKSIZE FOR TOTAL LENGTH    *
*         DCBCIND1 - VOL.FULL BIT ON - INDICATES PREVIOUS WRITE EOV   *
*        DEB                                                          *
*         DEBNMEXT - NUMBER OF EXTENTS IN DEB                         *
*         DEBOFLGS - X'04' MEANS SPLIT CYL EXTENTS                    *
*         DEBSTRCC AND DEBSTRHH - STARTING CCHH OF EXTENT             *
*         BEBENDCC AND DEBENDHH - ENDING CCHH OF EXTENT               *
*        IECZDTAB - I/O DEVICE TABLE                                  *
*                   LAST RECORD OV'HD                                 *
*                   NOT LAST RECORD OV'HD                             *
*                   KEY OV'HD                                         *
*                   MAX,TRACK LENGTH                                  *
*                   TOLERANCE                                         *
*                                                                     *
* OUTPUT - ECB - POSTED IN ERROR IF EOV .
*        DCBTRBAL - UPDATED REMAING TRACK LENGTH                      *
*        DCBFDAD - UPDATED RECORD ADDRESS = LAST SEGMENT
*        IOBSEEK - RECORD ADDRESS = FIRST SEGMENT
*        IOB+20   - UNIT EXCEP. IN CSW SET FOR EOV                    *
*                                                                     *
* EXTERNAL ROUTINES - SVC 25  ENTERED WITH THE TRACK OVERFLOW BIT IN
*                     DCBCIND2 SET- PURPOSE IS TO ERASE TO EOE.
*                                                                     *
*                    IF THE USER SPECIFIES THE USER TOTALING FACILIUT18
*                    (OPTCD=T) THEN IGG019AX WILL BE ACCESSED VIA AUT18
*                    'BALR R9,R10'                                 UT18
*EXITS/NORMAL - RETURN TO GET/PUT/WRITE/READ ROUTINE ON REG.14 AFTER  *
*               SCHEDULING I/O,OR POSTING ECB COMPLETE,ERROR IF EOV   *
*                                                                     *
*EXITS/ERROR - ABEND - CODE 002 - ISSUED VIA -                        *
*          1. DMABCOND 254 IF THE RECORD SIZE EXCEEDS 32,760 BYTES.   *
*          2. DMABCOND 204 IF THE BLOCKSIZE IN THE BDW OR THE DECB IS *
*             GREATER THAN THE BLOCKSIZE IN THE DCB.                  *
*                                                                     *
*TABLES/WORK AREAS - ASSUMES USER REGS.2-8 SAVED.SAVES REGS.9-10 INTO *
*                    SAVE AREA + 64
*                                                                     *
*ATTRIBUTES - READONLY,REENTRANT,REUSABLE                             *
*                                                                     *
*NOTES = SEE BELOW                                                    *
*                                                                     *
*     PATCH LABEL = PATCH A DC STATEMENT                              *
*                                                                     *
***********************************************************************
         EJECT
* REGISTER NAMES AND USAGE.
*
RALPHA   EQU   0                        WORK REG. ALPHA MAY NOT BE USED
*                                       AS AN ADDRESS REG.
R1       EQU   1                        THE NAME PRESERVES IDENTITY.
RDEB     EQU   1                        DEB ADDRESS LOADED IN THIS RTN.
RDCB     EQU   2                        HOLDS DCB ADDRESS UPON ENTRY.
RIOB     EQU   3                        HOLDS IOB ADDRESS UPON ENTRY.
RGAMMA   EQU   4                        WORK REG.
RSTEPPER EQU   5                        STEPS THRU COUNT FLD AND S.A.'S
RCPBASE  EQU   6                        CP SEGMENT BASE REG.
ROFFSW   EQU   7                        HOLDS WRITE CCW OFFSET ON ENTRY
*              BUT WILL BE CLOBBERED, AND RESTORED FROM DCB PROIR TO
*              EXIT.  REG MUST BE X-PARENT FOR QSAM.
ROVFLO   EQU   ROFFSW                   CCW OFFSET KNOWN. OVFLO =
*                                       LENGTH REMAINING TO BE WRITTEN.
DONTUSE8 EQU   8                        NOT SAVED. HOLDS USER CONTENTS.
RBETA    EQU   9                        SAVED FIRST, USED AS WORK REG.
RDEVTAB  EQU   10                       SAVED FIRST, DEVTABLE ADDRESS
*                                       LOADED.
OR11     EQU   11                       NOT SAVED. HOLDS USER CONTENTS.
OR12     EQU   12                       NOT SAVED. HOLDS USER CONTENTS.
RSAVE    EQU   13                       USERS REGISTER SAVE AREA.
RRETN    EQU   14                       RETURN TO BSAM/QSAM RTN.
RBASE    EQU   15                       ENTRY-POINT/BASE REG.
         EJECT
UNITEXC  EQU   X'01'                    SETS IOBFLAG3.
COMPWERR EQU   X'42'                    END OF EXTENT CONDITION HAS
*                                       BEEN ENCOUNTERED.
CPSEGLEN EQU   32                       LENGTH OF ONE CP SEGMENT.
D0       EQU   0                        DISPLACEMENT OF ZERO     S20201
TBOVHD   EQU   X'08'                    TWO BYTE OVHD INDICATOR  S20201
EIGHT    EQU   8                        LENGTH OF A COUNT FIELD
RLTV     EQU   32                       VECTOR OFFSET IN CVT.
CNVT     EQU   28                       VECTOR OFFSET IN CVT.
ZERO     EQU   0                        G.P. CONSTANT.
TRKOVFLO EQU   X'80'                    T.O. INDICATOR IN DCBCIND1
NOERROR  EQU   X'7F'                    ECB MASK. ALL BITS ON = NOERROR
ANYZERO  EQU   14                       MASK FOR TESTING ANY SELECTED
*                                       BITS = ZERO.
ONES     EQU   X'FF'                    G.P. CONSTANT.
VOLFULL  EQU   X'20'
IOBSIZE  EQU   48                       STANDARD IOB + BSAM/QSAM EXTEN.
VALCHK   EQU   X'80'                    WRITE VALIDITY CHECK BIT IN
*                                       DCBOPTCD.
SPLIT    EQU   X'04'
* COMMAND CODES FOR THE 2841 C.U.
*
SEEKCYL  EQU   X'0B'                    CYLINDER SEEK.
SRCHEQMT EQU   X'B1'                    SEARCH EQ ID IN MULTI-TRACK.
WCKD     EQU   X'1D'                    WRITE COUNT, KEY AND DATA.
WSCKD    EQU   1                        WRITE SPECIAL OP CODE.
SETSC    EQU   X'23'                    SET SECTOR COMMAND       S20201
RDSC     EQU   X'22'                    READ SECTOR COMMAND      S20201
*
* CCW FLAGS
CC       EQU   X'40'                    COMMAND CHAIN.
*
R0       EQU   0                        PARAMETRIC ZERO            UT18
R3       EQU   3                        WORK REG                   UT18
R4       EQU   4                        PARAMETRIC FOUR            UT18
R6       EQU   6                        WORK REG                   UT18
R9       EQU   9                        PARAMETRIC NINE            UT18
R10      EQU   10                       PARAMETRIC TEN             UT18
R13      EQU   13                       PARAMETRIC 13              UT18
R15      EQU   15                       WORK REG                   UT18
THREE6   EQU   36                       PARAMETRIC 36              UT18
UTFBIT   EQU   X'02'                    MASK FOR USER TOTALING TESTUT18
         EJECT
         USING IGG019T2,RBASE           ESTABLISH BASE REGISTER
         USING SAMSIOB,RIOB
         USING IHADCB,RDCB
         B     BEGIN                   BRANCH AROUND MODULE ID   YM4640
         DC    C'IGG019T2'             MODULE NAME               YM4640
         DC    C' YM7588 '             LAST SHIP CODE            YM7588
         DC    C'02/19/74'             LAST SHIP DATE            YM7588
BEGIN    DS    0H                      END OF MODULE ID          YM4640
*******************************************************************UT18
         L     RDEB,DCBDEBAD            GET THE DEB BASE ADDR.     UT18
         USING DEBB,RDEB                ESTABLISH BASEREG FOR DEB  UT18
         STM   RBETA,RDEVTAB,64(R13)    STORE REGS 9,10            UT18
         TM    DCBOPTCD,UTFBIT          TEST FOR USER TOTALING     UT18
         BZ    CONTINUE                 NOT SPECIFIED - SO BRANCH  UT18
*                                                                  UT18
         SR    R9,R9                    CLEAR THIS REGISTER        UT18
         SR    R10,R10                  CLEAR THIS REGISTER        UT18
         IC    R9,DEBNMEXT              GET NO OF EXTENTS          UT18
          IC   R10,DEBEXSCL             GET DEB EXTENT SCALE       UT18
         SLL   R9,ZERO(R10)             MULT TO GET LEN OF DEV DEP UT18
         L     R15,THREE6(RDEB,R9)      GET SAVE AREA ADDR         UT18
*                                                                  UT18
*  DEBR POINTS TO BEG. OF DEB +32 POINTS TO DEV DEP SECTION, R9    UT18
*        CONTAINS LEN OF DEV DEP SECTION, +4 POINTS TO SAVE AREA   UT18
*        POINTER.  SO R10 CONTAINS SAVE AREA ADDR                  UT18
*                                                                  UT18
         USING TOTSAVWA,R15             ESTAB BASE FOR TOT WRKAREA UT18
         STM   R3,R6,TOTREGSV           SAVE REGS FOR SAVE RTN     UT18
         L     R4,TOTSVPTR              GET ADDR OF SAVE ROUTINE   UT18
         BALR  R3,R4                    GO TO SAVE ROUTINE         UT18
         LM    R3,R6,TOTREGSV           RESTORE REGISTERS          UT18
*                                                                  UT18
CONTINUE EQU   *                                                   UT18
         BALR  R15,R0                   SET NEW BASE               UT18
         USING NEWBASE,R15              RE-ESTAB MODULE BASE REG   UT18
NEWBASE  EQU   *                                                   UT18
*******************************************************************UT18
         IF    DCBCIND1,IS=VOLFULL,GOTO=POSTECB
         SR    RCPBASE,RCPBASE
         IC    RCPBASE,DCBWCPO          BUILD WRITE CHANNEL PGM
         AR    RCPBASE,RIOB             ADDRESSABILITY.
         USING WCPMAP,RCPBASE
* WORK REG SIGMA IS IN USE AS 'RCPBASE'.
         SR    RSTEPPER,RSTEPPER
         IC    RSTEPPER,DCBWCPL         NUMBER OF CCW'S BETWEEN IOB AND
*                                       FIRST COUNT FIELD.
         SLL   RSTEPPER,3               DBL WDS TO BYTES.
*
         AR    RSTEPPER,RCPBASE         CP START ADDR + ITS LENGTH
*                                       GIVES ADDRESSABILITY FOR COUNT
*                                       FIELDS AND S.A.'S. (THEY ARE
*                                       INTERLEAVED, WITH A COUNT FIELD
*                                       BEING FIRST, EACH IS A DBL WD).
         USING COUNTFLD,RSTEPPER
* WORK REG DELTA IS IN USE AS 'RSTEPPER'.
         L     RDEVTAB,DCBDVTBL         ADDRESS OF DEV TABLE ENTRY FOR
*                                       THIS UNIT.
         USING DEVTAB,RDEVTAB
*
         L     RDEB,DCBDEBAD            DEB ADDRESSABILITY.
*
* CHECK FOR RCD READY FEATURE BEING USED AND IF NOT ADJUST
* RCPBASE, IF YES, UPDATE SECTOR VALUE
*
         CLI   CHANPGM,SETSC            RCD READY CHP            S20201
         BNE   NOFET3                   BRANCH IF NO             S20201
         AH    RCPBASE,ATE8             ADJUST RCPBASE FOR RCD   S20201
*                                       READY FEAT
NOFET3   EQU   *                                                 S20201
*
         L     ROVFLO,DATALEN-2         GET COMPOSITE KL+DL FROM CCW.
         LA    ROVFLO,0(ROVFLO)         CLEAR OUT THE FLAGS.
         LR    RBETA,ROVFLO             TEMP WORK REG.
         SR    RALPHA,RALPHA
         IC    RALPHA,DCBKEYLE          TO REMOVE KL FROM KL+DL.
         SR    RBETA,RALPHA             BETA=DL.
         CH    RBETA,DCBBLKSI           ABEND IF RECORD LENGTH
         BH    ERREXIT1                 GREATER THAN BLKSIZE.    Y02072
         LA    RBETA,7(RBETA)           MAKES POSSIBLE AN LTR FOR
*                                       DL GT 32760.
         SLL   RBETA,16                 ALIGN FOR SIGN TEST.
         LTR   RBETA,RBETA              DL+7 MUST BE LESS THAN 32768.
         BM    ERREXIT2                 BRANCH IF DL GT 32760    Y02072
*
         LA    RALPHA,2                 LENGTH OF CCW LENGTH FIELD.
         LR    RBETA,RSTEPPER           COPY REG.
         CLI   CHANPGM,SETSC            RCD READY CHP            S20201
         BNE   NOFET4                   BRANCH IF NO             S20201
         TM    DCBOPTCD,VALCHK          VALIDITY CHK USED        S20201
         BO    NOFET4                   BRANCH IF YES            S20201
         AH    RALPHA,ATE8              INCREMENT FOR RD SECTOR  S20201
NOFET4   EQU   *                                                 S20201
         SR    RBETA,RALPHA             BETA POINTS TO THE LAST CCW
*                                       LENGTH FIELD. (MAY OR MAY NOT
*                                       BE THE WRITE VALIDITY CHECK
*                                       SEGMENT).
*
         STH   ROVFLO,0(RBETA)          USING THE LAST CCW LENGTH TO
*                                       SAVE THE OVFLO AMOUNT. USED TO
*                                       RECOVER AFTER GETTING A NEW
*                                       EXTENT,  IS ALSO  THE WRITE
*                                       VALIDITY CHECK LENGTH IF THE
*                                       VAL CHK CP EXISTS.
         MVC   TEMPSAVE(2),DCBTRBAL     PRESERVE THE ORIGINAL TRK BAL.
*                                       WILL BE RESTORED IF A RECORD
*                                       CANNOT BE WRITTEN.
SETFDAD  MVC   IOBFDAD(8),DCBFDAD       COPY FDAD INTO IOB.
RUPBY1   IC    RBETA,DCBFDAD+7          GET 'R'.
         LA    RBETA,1(RBETA)           R=R+1.
         STC   RBETA,DCBFDAD+7          PUT IT BACK.
*
         MVC   CYLINDER(5),DCBFDAD+3    INITIALIZE THE ID PART OF THE
*                                       FIRST COUNT FIELD.
*
* END OF FIRST TIME LOGIC.
*
* BEGIN LOOP LOGIC.
*
* CALCULATE THE SPACE REQUIRED TO WRITE THE DATA AS A LAST RECORD.
*
STRTLOOP SR    RBETA,RBETA
         SR    RALPHA,RALPHA
         IC    RBETA,OVERL              L = OVHD FOR LAST RECORD.
         TM    DEVFLAG,TBOVHD           TWO BYTE OVHD USED       S20201
         BNO   MZ0010                   BRANCH NO                S20201
         LH    RBETA,OVERI              GET TWO BYTE OVHD        S20201
MZ0010   EQU   *                                                 S20201
         IC    RALPHA,DCBKEYCN          KEYCN = EITHER 0 OR K (IF OR
*                                       IF NOT KEYS, RESPECTIVELY).
         LR    RGAMMA,ROVFLO            COPY THE AMOUNT REMAINING TO
*                                       BE WRITTEN (OVERFLOW).
         AR    RGAMMA,RBETA             OVFLO+L
         SR    RGAMMA,RALPHA            OVFLO+L-KEYCN IS THE SPACE FOR
*                                       A LAST RECORD.
*
         CH    RGAMMA,DCBTRBAL          WILL THIS TRACK HOLD THE RECORD
         BNH   FINAL                    YES. BRANCH TO DO FINAL LOGIC
*                                       FOR THE LAST CP SEGMENT.
*
* RECORD WILL NOT FIT AS A LAST RECORD. CALCULATE HOW MUCH WILL FIT AND
* TAILOR THE CURRENT CP SEGMENT TO WRITE THAT AMOUNT. AT LEAST ONE MORE
* RECORD SEGMENT WILL BE WRITTEN AFTER THIS ONE.
* CCWLENGTH=TRBAL+KEYCN-L IS AMOUNT THAT WILL FIT.
         LH    RGAMMA,DCBTRBAL          GET TRACK BAL.
         AR    RGAMMA,RALPHA            TRBAL+KEYCN.
         SR    RGAMMA,RBETA             TRBAL+KEYCN-L IN GAMMA.
MIDLOOP  MVC   DCBTRBAL,TRKCAP          RESET TRBAL TO DEVICE MAX.
         NI    TRACKFUL,ZERO            HOUSEKEEP TRACK FULL SWITCH.
         LTR   RGAMMA,RGAMMA            SEE IF ANY DATA CAN BE WRITTEN.
         BP    WILLFIT                  BRANCH IF ROOM FOR DATA.
         OI    TRACKFUL,ONES            SET TRACK FULL SWITCH. OCCURS
*                                       ONLY IF FIRST TRACK HAS NO ROOM
*                                       FOR DATA. ACTION REQ'D IS TO
*                                       ADVANCE TO NEXT TRACK.
         B     CONVERT                  NO ROOM FOR DATA. OVERHEAD
*                                       EXCEEDS TRK BAL.  GET A NEW
*                                       TRACK.
WILLFIT  SR    ROVFLO,RGAMMA            REDUCE THE OVFLO FIGURE BY THE
*                                       CURRENT TRACK LENGTH.
*
         MVI   WRTOPCD,WSCKD            WRITE SPECIAL BECAUSE THIS IS
*                                       NOT THE LAST SEGMENT.
         MVI   NULLFLAG,CC              COMMAND CHAIN TO NEXT SEGMENT.
         STH   RGAMMA,DATALEN           PUT SEGMENT LENGTH IN WRT CCW.
         SR    RALPHA,RALPHA
         IC    RALPHA,KEYLENTH          KEY LENGTH FROM COUNT FIELD.
         SR    RGAMMA,RALPHA            DATA LEN= SEG LEN - KL.
         STH   RGAMMA,DLDL              PUT IT IN COUNT FLD DATA LENGTH
         AR    RGAMMA,RALPHA            RECONSTRUCT SEGMENT LENGTH.
*
         L     RBETA,DATAADDR           GET THE DATA ADDRESS
         LA    RBETA,0(RBETA)           CLEAR HI BYTE.
         AR    RGAMMA,RBETA             ADDRESS+LENGTH=NEXT ADDRESS.
*
         LA    RCPBASE,CPSEGLEN(RCPBASE) ADVANCE CP BASE TO NEXT SEG.
         LA    RSTEPPER,EIGHT(RSTEPPER)  POINTS TO S.A. THE 'CCHHR' OF
*                                       THE COUNTFLD DSECT IS VALID.
         ST    RGAMMA,DATAADDR          THIS DATA ADDRESS = LAST + LEN.
         MVI   SRCHOPCD,SRCHEQMT        OP CODE SET FOR MULTI-TRACK
*
         CLI   CHANPGM,SETSC            RCD READY CHANNEL PROG   S20201
         BE    FEATX                    BRANCH IF YES            S20201
*
*
         IF    DCBOPTCD,ISNOT=VALCHK,GOTO=CONVERT
* RECONSTRUCT THE FIRST CCW SEARCH ADDRESS. REASON- IT MAY HAVE BEEN
* CHANGED TO A TIC TO WRT CHK CP ON A PREVIOUS USE.
*
FEATX    EQU   *                                                 S20201
*
         MVC   SRCHADDR+1(3),PARASITE+1 THE CORRECT SEARCH ADDRESS HAS
*                                       BEEN A PARASITE IN THE TIC CCW.
*
CONVERT  EQU   *
* THE DCB FULL DISK ADDRESS MUST BE UPDATED TO THE ADDRESS OF THE NEXT
* TRACK, ON WHICH THE NEXT RECORD SEGMENT WILL BE WRITTEN. THE NEXT
* TRACK MAY BE ACCROSS A CYLINDER BOUNDARY, SO THE DISK ADDRESS IS
* UPDATED IN THE TTR FORM. THE CONVERT ROUTINE ALSO PROVIDES VALIDITY
* CHECKING OF THE NEW FDAD.
*
         LA    RGAMMA,FDADTTR           THIS IS A CONCEALED ENTRY TO A
*                                       CLOSED SUBROUTINE.
***********************************************************************
*        THE FOLLOWING ROUTINE WILL DETERMINE THE NEXT TRACK ADDRESS. *
*        BY ADDING 1 TO THE CURRENT TT AND SENDING THIS VALUE TO THE  *
*      RESIDENT CONVERT ROUTINE, THE NEXT TRACK WILL BE DETERMINED. IF*
*      THE NUMBER OF TRACKS IN THE DEB ARE EXCEEDED, THE CONVERT ROU- *
*      TINE WILL PASS A RETURN CODE OF 4 IN REGISTER 15               *
*                                                                     *
*        REGISTER CONTENTS PRIOR TO BRANCHING TO THE CONVERT ROUTINES *
*      ARE:                                                           *
*        R0 ---NEXT TTR RETURNED BY IECPRTLV OR TTRN IF GOING TO THE  *
*              IECPCNVT ROUTINE. (TTR TO MBBCCHHR)                    *
*        R1 ---ADDRESS OF DEB                                         *
*        R2 ---ADDRESS OF USER MBBCCHHR                               *
*        R3 ---BASE REGISTER OF THIS MODULE                           *
*        R4 ---RETURN TO USER                                         *
*        R5 ---USER (11)                                              *
*        R6 ---USER (12)                                              *
*        R7 ---ADDRESS OF SAVE AREA                                   *
*        R8 ---TEMPORARY STORAGE OF TTRN FOR SPLIT CYLINDER USE.
*              R9 ---REGS 9 - 13 ARE
*        R10---USED           VO                                      *
*        R11--- BY              LA                                    *
*        R12---  CONVERT          TI                                  *
*        R13---   ROUTINES               LE                           *
*                                                                     *
*        R14---RETURN FOR CONVERT ROUTINE                             *
*              R15---ENTRY/ERROR CODE REG.
*                                                                     *
*
*
*
*
*              IECPRLTV -ENTRY TO ROUTINE VIA A BALR THAT CONVERTS AN
*                        ABSOLUTE DIRECT ACCESS ADDRESS, MBBCCHHR, INTO
*                        ITS RELATIVE EQUIVALENT, TTR0. REGISTER
*                        CONVENTIONS UPON ENTRY AND UPON EXIT ARE AS
*                        FOLLOWS--
*
*                           REGISTER         ENTRY             EXIT
*                             0          IGNORED            TTR0 RESULT
*                             1          DEB ADDRESS        TRANSPARENT
*                             2          ADDRESS OF         TRANSPARENT
*                                          MBBCCHHR IN CORE
*                             3-8        IGNORED            TRANSPARENT
*                             9-13       IGNORED            DESTROYED
*                             14         RETURN ADDRESS     TRANSPARENT
*                             15         ENTRY ADDRESS      ZERO
*
*              IECPCNVT -ENTRY TO ROUTINE VIA A BALR THAT CONVERTS A
*                        RELATIVE DIRECT ACCESS ADDRESS AND
*                        CONCATENATION NUMBER, TTRN, INTO ITS ABSOLUTE
*                        EQUIVALENT, MBBCCHHR. REGISTER CONVENTIONS
*                        UPON ENTRY AND UPON EXIT ARE AS FOLLOWS--
*
*                           REGISTER         ENTRY             EXIT
*                             0          ACTUAL TTRN        DESTROYED
*                             1          DEB ADDRESS        TRANSPARENT
*                             2          ADDRESS OF 8 BYTE  TRANSPARENT
*                                          AREA FOR MBBCCHHR
*                             3-8        IGNORED            TRANSPARENT
*                             9-13       IGNORED            DESTROYED
*                             14         RETURN ADDRESS     TRANSPARENT
*                             15         ENTRY ADDRESS      ERROR CODE
*
*                        THE ERROR CODE FOR IECPCNVT WILL BE 0 FOR
*                        SUCCESSFUL CONVERSION, OR 4 IF VALUE OF TT
*                        EXCEEDS TOTAL EXTENTS ASSIGNED.
*
*                                                                     *
***********************************************************************
*
REGMANIP EQU   *                        START OF A CLOSED SUBROUTINE
*                                       FOR REGISTER MAINIPULATION.
* THE FOLLOWING REGISTER MANIPULATIONS ARE REQUIRED IN ORDER TO USE
* THE CONVERT ROUTINES.
* THE CURRENT CP SEGMENT S.A. AND COUNT FIELD (2 CONTIG. DBL WDS)
* PROVIDE A CONVENIENT PLACE TO SAVE SOME REGS. RSTEPPER HAS THIS ADDR.
*
         STM   RCPBASE,DONTUSE8,0(RSTEPPER)  SAVE REGS 6,7,8. HI BYTE
*                                            OF REG 7 MUST BE ZERO FOR
*                                            IT OVERLAYS R=0 OF THE SA.
         LR    DONTUSE8,RSTEPPER        REG 8 IS TRANSPARENT ACCROSS
*                                       CONVERT, CAN HOLD S.A. ADDRESS.
*                                       USERS CONTENTS OF 8 ARE SAVED
*                                       THERE.
* MOVE USERS REGS 11, 12, 13, 14, AND EOB BASE 15, TO 5,6,7,4,3 RESPEC-
* TIVELY.
         LR    RSTEPPER,OR11            11 TO 5.
         LR    RCPBASE,OR12             12 TO 6.
         LR    ROVFLO,RSAVE             13 TO 7.
         LR    RSAVE,RGAMMA             SAVE THIS ROUTINE'S RETURN REG.
         LR    RGAMMA,RRETN             14 TO 4.
         LR    RIOB,RBASE               15 TO 3.
         DROP  RBASE
         DROP  RIOB
         USING NEWBASE,RIOB             ESTABLISH TEMP BASE REG    UT18
         LA    RDCB,DCBFDAD             POINT TO M OF FDAD.
         USING DCBFDAD,RDCB
         BR    RSAVE                    RETURN TO CALLER OF 'REGMANIP'.
FDADTTR  EQU   *
         L     RBASE,16                 GET  CVT ADDRESS
         L     RBASE,RLTV(RBASE)        GET IECPRLTV ENTRY POINT.
         BALR  RRETN,RBASE              GO TO CONVERT MBBCCHHR TO TTR.
* ON RETURN, REG 0 HAS THE TTR, LEFT ADJUSTED.
         SRL   RALPHA,16               TRUNCATE 'RZ' OF 'TTRZ'.
         AH    RALPHA,ONE               TT=TT+1.
         L     RBETA,DCBIOBA            TEMPORARY IOB ADDRESSABILITY.
         USING SAMSIOB,RBETA
         STH   RALPHA,TTSAVE            SAVE TT FOR USE IN SPLIT TESTS.
         DROP  RBETA
TTRFDAD  EQU   *
         SLL   RALPHA,16               RE-ALIGN TO 'TT00'.
         L     RBASE,16                 GET CVT ADDR.
         L     RBASE,CNVT(RBASE)        GET IECPCNVT ENTRY POINT.
         BALR  RRETN,RBASE              GO TO CONVERT TTR TO MBBCCHHR.
* ON RETURN, REG 15 HAS THE RETURN CODE.
         LR    RALPHA,RBASE             SAVE THE RETURN CODE FOR LATER
*                                       INSPECTION.
* REGISTER RECONSTRUCTION - PUT THEM BACK AS THEY WERE BEFORE CONVER-
* SION.
* MOVE REGS 5,6,7,4,3 BACK TO 11,12,13,14,15
         LR    OR11,RSTEPPER            5 TO 11.
         LR    OR12,RCPBASE             6 TO 12.
         LR    RSAVE,ROVFLO             7 TO 13.
         LR    RRETN,RGAMMA             4 TO 14.
         LR    RBASE,RIOB               3 TO 15.
*
         USING NEWBASE,RBASE            RE-ESTABLISH BASE REG      UT18
*
         LR    RSTEPPER,DONTUSE8        RESTORE REG # 5 FROM XPARENT 8.
         LM    RCPBASE,DONTUSE8,0(RSTEPPER) RESTORE 6,7,8.
         USING WCPMAP,RCPBASE
*
         LA    RBETA,5                  OFFSET OF DCBFDAD.
         SR    RDCB,RBETA               DCB ADDRESSABILITY REGAINED.
         USING IHADCB,RDCB
*
         L     RIOB,DCBIOBA             IOB ADDRESSABILITY REGAINED.
         USING SAMSIOB,RIOB
*
         L     RDEVTAB,DCBDVTBL         DEV TABLE ADDR. REGAINED.
         USING DEVTAB,RDEVTAB
*
* REGISTERS RECONSTRUCTED. ALPHA, BETA, GAMMA HAVE BEEN USED.
* RETURN CODE WAS SAVED IN ALPHA. TEST IT FOR VALID FDAD.
*
         LTR   RALPHA,RALPHA            COMPARE CODE TO ZERO.
         BZ    TSTSPLIT                 BRANCH IF ZERO. CODE INDICATES
*                                       A VALID FDAD, WITHIN THIS EXT.
* THE RETURN CODE NOT-ZERO INDICATES THE FDAD WAS OUTSIDE THIS EXTENT.
* ACTION REQUIRED IS TO ISSUE SVC 25, WHICH WILL USE THE CP PORTION
* THAT HAS BEEN CONSTRUCTED TO ERASE THE UNUSED REMAINDER OF THIS EX-
* TENT. AFTER RETURN FROM SVC 25, WILL REPAIR THE CP FOR RESTART BY EOV
ERASE    EQU   *                        ERASE THE CURRENT EXTENT.
         IF    TRACKFUL,IS=ONES,GOTO=CHECKEXT                      000D
*
         LA    RBETA,CPSEGLEN           RECOVER ADDRESSABILITY FOR THE
         SR    RCPBASE,RBETA            LAST WCP SEGMENT THAT FITS ON
*                                       THIS EXTENT.
         MVI   NULLFLAG,ZERO            TERMINATE CP.
         L     RBETA,COUNTADR           GET ADDRESS OF THE LAST COUNT
*                                       FIELD MADE UP.
         MVC   DCBFDAD+3(5),0(RBETA)    RECONSTRUCT THE DCBFDAD TO
*                                       POINT TO LAST SEGMENT TO BE
*                                       ERASED. MAKES CORRECT STARTING
*                                       POINT IF ANOTHER EXTENT (SAY A
*                                       DISCONTIGUOUS PRIMARY) IS AVAIL
*                                       ABLE. ALSO NEEDED FOR SVC 25
*                                       INTERFACE.
         MVC   DCBFDAD(1),IOBFDAD       KEEPS 'M' IN STEP WITH 'CCHHR'.
*
         LH    RALPHA,TEMPSAVE          GET ORIG. TRK BAL.         000D
         LR    RCPBASE,RALPHA     SAVE IT ACCROSS SVC 25.          000D
*
         OI    DCBCIND1,TRKOVFLO        SET THE DCB TRK OVFLO IND.
*                                       WHICH TELLS SVC 25 TO ERASE TO
*                                       END OF EXTENT.
*
         LR    RGAMMA,RRETN             SAVE 14.
         LR    RBETA,RBASE              SAVE 15.
         DROP  RBASE
         LA    R1,0(RDCB)               DEB REG HOLDS PARAM TO   A32558
*                                       SVC 25
*
         SVC   25                       ERASE.
*
         LR    RRETN,RGAMMA             RESTORE 14
         LR    RBASE,RBETA              RESTORE 15.
         USING NEWBASE,RBASE            RE-ESTABLISH BASE REG      UT18
         L     RDEB,DCBDEBAD            RECOVER DEB ADDRESSABILITY.
*
         STH   RCPBASE,TEMPSAVE   ORIG. TRK BAL SAVED ACCROSS      000D
*                                       SVC 25.                    000D
* RECOVER INITIAL CP AND COUNT FIELD ADDRESSABILITY.
* REASON- NEED TO RESTORE THE TOTAL BLOCK LENGTH TO BE WRITTEN INTO
* THE WRITE CCW POINTED TO BY OFFSW.  THE TOTAL LENGTH HAS BEEN SAVED
* AT THE CCW JUST IN FRONT OF THE FIRST COUNT FIELD.
         SR    RCPBASE,RCPBASE
         IC    RCPBASE,DCBWCPO
         AR    RCPBASE,RIOB             IOBA+WCPO
         USING WCPMAP,RCPBASE
         SR    RSTEPPER,RSTEPPER
         IC    RSTEPPER,DCBWCPL
         SLL   RSTEPPER,3               DBL WDS TO BYTES.
         AR    RSTEPPER,RCPBASE         IOBA+WCPO+WCPL*8
* CP ADDRESS, S.A. AND COUNT FIELD ADRESS RESTORED TO INITIAL VALUES.
         LA    RALPHA,2                 LENGTH OF A CCW LENGTH FIELD.
         LR    RBETA,RSTEPPER           COPY FOR WORK.
         CLI   CHANPGM,SETSC            RCD READY CHP            S20201
         BNE   NOFET19                  BRANCH IF NO             S20201
         AH    RCPBASE,ATE8             IF YES INCR BASE FOR SET S20201
*                                       SCT                      S20201
         TM    DCBOPTCD,VALCHK          VALIDITY CHK USED        S20201
         BO    NOFET19                  BRANCH IF YES            S20201
         AH    RALPHA,ATE8              INCR FOR RD SECTOR       S20201
*
NOFET19  EQU   *                                                 S20201
*
         USING DEBB,RDEB                                         S20201
         SR    RBETA,RALPHA             BETA POINTS TO WHERE THE
*                                       INITIAL CCW LENGTH WAS SAVED.
         LH    ROVFLO,0(RBETA)          RESET OVFLO TO ORIGINAL VALUE.
         STH   ROVFLO,DATALEN           WILL NEED THE FULL RECORD
*                                       LENGTH ON NEXT ENTRY TO EOB IF
*                                       CAN'T EXCP THIS TIME.
*
* DETERMINE IF ERASE HAD ANY ERRORS.                               000D
         L     RGAMMA,IOBECBPT           GET ECB ADDR.             000D
         TM    0(RGAMMA),NOERROR         IS THE ECB POSTED IN ERR. 000D
         BC    ANYZERO,RESTORE           BRANCH IF YES             000D
*
CHECKEXT EQU   *                                                   000D
*
* CHECK FOR ANOTHER EXTENT, DCBFDAD 'M'+1 MUST BE LESS THAN DEBNMEXT.
         SR    RBETA,RBETA              HOUSEKEEP
         IC    RBETA,IOBFDAD            GET M                     M2057
         LA    RBETA,1(RBETA)           M=M+1.
         STC   RBETA,IOBFDAD            TEMP WORK AREA.
         CLC   IOBFDAD(1),DEBNMEXT      COMPARE M+1 TO NMBR OF EXTENTS.
         BL    EXTAVAIL                 BRANCH IF ANOTHER EXTENT.
         OI    DCBCIND1,VOLFULL         SET VOLUME FULL INDICATOR.
* REPAIR DCB FDAD AND TRK BAL TO THEIR VALUES AT ENTRY TO THIS MODULE.
         BCTR  RBETA,0                  DECREMENT THE M AND       M2057
         STC   RBETA,IOBFDAD            RESTORE THE IOB           M2057
         MVC   DCBFDAD(8),IOBFDAD       IOB INITIALIZED FROM THE FIRST
*                                       DCB VALUE.
         MVC   DCBTRBAL(2),TEMPSAVE     TRK BAL SAVED IN IOB CSW.
         B     POSTECB                  MAKES EOV RE-SCHEDULE THIS IOB.
*
EXTAVAIL EQU   *
*
* GET NEXT EXTENT FDAD FROM DEB TO DCB. DCBFDAD 'M' IN BETA IS CORRECT
* EXTENT NMBR (FROM M=M+1). 'M' TIMES THE EXTENT SCALE GIVES AN INDEX-
* ING FACTOR USED TO LOCATE THE DEVICE DEPENDENT EXTENT ENTRY.
*
         STC   RBETA,DCBFDAD            UPDATE 'M' TO NEXT EXTENT.
         SR    RGAMMA,RGAMMA
         IC    RGAMMA,DEBEXSCL          GET EXTENT SCALE(=4 FOR DA).
         SLL   RBETA,0(RGAMMA)          EXTENT NMBR TIMES SIZE.
         AR    RDEB,RBETA               BECAUSE MVC NOT INDEXABLE.
         MVC   DCBFDAD+3(4),DEBSTRCC    GET NEXT EXTENT FDAD.
         SR    RDEB,RBETA               TAKE OUT THE INDEXING FACTOR.
         MVI   DCBFDAD+7,ZERO           SET R=0.
         B     SETFDAD                  START UP ON NEW EXTENT.
*
TSTSPLIT EQU   *
* FOLLOWING CODE ENTERED WHEN IT HAS BEEN DETERMINED THAT AT LEAST ONE
* MORE RECORD SEGMENT WILL BE NEEDED AND A TRACK TO HOLD IT HAS BEEN
* FOUND.
*
*
         SR    RGAMMA,RGAMMA
         IC    RGAMMA,DEBEXSCL          EXTENT SCALE(=4 FOR D.A.)
         SR    RBETA,RBETA
         IC    RBETA,IOBFDAD            GET CURRENT/LAST 'M'.
*                                       DCB HAS CURRENT/NEXT 'M' IN IT.
         SLL   RBETA,0(RGAMMA)          EXTENT NMBR TIMES SIZE.
*                                       KEEP RBETA FOR INDEXING DEB
*                                       BASE REG.
* TEST FOR SPLIT ALLOCATION, WHICH IS ALLOWED ONLY ON THE PRIMARY.
         CLI   DCBFDAD,0                Q-FIRST EXTENT IF         M2057
*                                       FIRST IS NOT PRIMARY, DEBOFLGS
*                                       REFLECT A NON-SPLIT ALLOC.
         BNE   TESTPRIM                 BRANCH IF NOT ON FIRST EXTENT.
*                                       CANNOT BE SPLIT.
         TM    DEBOFLGS,SPLIT           IS IT SPLIT ALLOCATION.
         BZ    TESTPRIM                 BRANCH IF NO.
*THE FDAD IN THE DCB IS 'VALID' (AS PER THE CONVERT ROUTINE ERROR CODE)
* AND THE ALLOCATION IS 'SPLIT'. NOW DETERMINE IF THE FDAD IS WITHIN
* THE LIMITS DEFINED BY THE STARTING AND ENDING HH'S IN THE DEB. IF
* NOT, THE NEXT PART OF THE SPLIT EXTENT (THERE MUST BE ONE FOR THE
* FDAD TO BE 'VALID') MAY BE FOUND BY-
*  TT(OF DCBFDAD) + MAXHH - (ENDHH - STRHH) -1
* MAXHH IS THE NUMBER OF TRACKS IN A CYLINDER, AND IS THEREFORE DEVICE
* DEPENDENT.
* ALPHA AND GAMMA ARE AVAILABLE WORK REGS.
* REG BETA HOLDS THE INDEXING FACTOR BY WHICH RDEB HAS BEEN ADJUSTED.
         AR    RDEB,RBETA               BECAUSE SS INSTRUCTIONS NOT IN-
*                                       DEXABLE.
         CLC   DCBFDAD+6(1),DEBSTRHH+1  IS IT BELOW STARTING HH.
         BL    OUTSIDE                  BRANCH IF YES.
         CLC   DCBFDAD+6(1),DEBENDHH+1  IS IT ABOVE ENDING HH.
         BNH   FIXRDEB                  BRANCH IF NOT ABOVE. GO TO
*                                       REPAIR DEB REG.
OUTSIDE  EQU   *
* FDAD IS OUTSIDE THE SPLIT. ADVANCE TO THE NEXT PART OF THIS SPLIT
* EXTENT, USING THE ABOVE FORMULA.
         SR    RALPHA,RALPHA
         SR    RGAMMA,RGAMMA
         IC    RGAMMA,DEBENDHH+1        GET UPPER LIMIT, ENDHH.
         IC    RALPHA,DEBSTRHH+1        GET LOWER LIMIT, STRHH.
         SR    RGAMMA,RALPHA            ENDHH - STRHH
         IC    RALPHA,MAXHH             MAXHH
         SR    RALPHA,RGAMMA            MAXHH - (ENDHH - STRHH)
         BCT   RALPHA,*+4               MAXHH - (ENDHH - STRHH) -1
         AH    RALPHA,TTSAVE            TT+MAXHH-(ENDHH-STRHH)-1
         SR    RDEB,RBETA               REPAIR DEB REG.
         BAL   RGAMMA,REGMANIP          GO TO REGISTER MANIPULATION
*                                       INTERFACE. REQ'D FOR USE OF
*                                       CONVERT ROUTINE.
         B     TTRFDAD                  WILL DO A CONVERT.
TESTPRIM EQU   *
         AR    RDEB,RBETA               BECAUSE SS INSTRUCTIONS NOT IN-
*                                       DEXABLE.
         CLC   DCBFDAD(1),IOBFDAD       CROSS AN EXTENT           M2057
         L     RDEB,DCBDEBAD            RESTORE DEB ADDRESS       M2057
         BH    ERASE                    THE VALID TTR LAST GIVEN TO
*                                       'CONVERT' PRODUCED AN FDAD
*                                       OUTSIDE THE CURRENT EXTENT.
*                                       IT MUST BE THE FDAD FOR THE
*                                       NEXT EXTENT OF A DISCONTIGUOUS
*                                       PRIMARY. ACTION- ERASE AND
*                                       CHECK FOR ANOTHER EXTENT.
*                                       RDEB HAS BEEN TAMPERED WITH.
FIXRDEB  EQU   *
*
* IF THE OVERFLOW AMOUNT WILL FIT ON THE CURRENT TRACK, WILL EXIT THE
* LOOP TO DO FINAL LOGIC.  IF NOT, WILL SET UP TO RE-ENTER THE LOOP
* BUILDING C.P.'S.
*
TESTFULL IF    TRACKFUL,ISNOT=ONES,GOTO=NOTFULL
MOVEFDAD EQU   *                        FIRST TRACK HAD NO ROOM FOR
*                                       DATA. A NEW TRACK WAS GOTTEN
*                                       FOR THE FIRST RECORD SEGMENT.
         MVC   IOBFDAD(8),DCBFDAD       COPY NEW FDAD.
         MVC   KEYLENTH,DCBKEYLE        RE-INIT KEYKENGTH. WAS OVERLAID
*                                       WITH A SAVED REG DURING CONVERT
         B     TESTOVFL                 SEE IF RECORD WILL FIT ON THIS
*                                       NEW TRACK.
*
* RSTEPPER POINTS TO THE CURRENT S.A.
*
NOTFULL  MVC   CYLINDER(5),DCBFDAD+3    INIT CCHHR IN S.A.
         LA    RSTEPPER,EIGHT(RSTEPPER) POINT TO THE COUNT FIELD.
TESTOVFL LH    RGAMMA,TRKCAP            SET DL=MAX.
         SR    RBETA,RBETA              CLEAR REG              @ZA02255
         IC    RBETA,OVERK              GET KEY OVERHEAD       @ZA02255
         AR    RGAMMA,RBETA             ADD KEY OVERHEAD NO KEY@ZA02255
         IC    RBETA,OVERL              GET LAST BLK OVERHEAD  @ZA02255
         TM    DEVFLAG,TBOVHD           IS THIS 2 BYTE OVERHEAD@ZA02255
         BNO   MZ0050                   BRANCH IF NO           @ZA02255
         LH    RBETA,OVERI              GET 2 BYTE OVERHEAD    @ZA02255
MZ0050   EQU       *                                           @ZA02255
         SR    RGAMMA,RBETA                                    @ZA02255
         CR    ROVFLO,RGAMMA            COMPARE OVFLO TO DEVICE MAX.
         BNH   RUPBY1                   BRANCH IF OVFLO IS LT OR EQ TO
*                                       DEVICE MAX. (RECORD WILL FIT).
UPRBY1   EQU   *
         IC    RBETA,DCBFDAD+7          GET 'R'.
         LA    RBETA,1(RBETA)           R=R+1
         STC   RBETA,DCBFDAD+7          PUT IT BACK.
         MVC   CYLINDER(5),DCBFDAD+3    INIT CCHHR IN COUNT.
*
         B     MIDLOOP                  CLOSE THE BASIC BUILDING LOOP.
*
* FINAL LOGIC.  THE REMAINING LENGTH IN ROVFLO WILL FIT ON THE CURRENT
* TRACK. MUST CALCULATE THE SPACE REQUIRED AS A NOT-LAST RECORD, SET
* UP CP TO WRITE IT, ISSUE EXCP.
*
FINAL    STH   ROVFLO,DATALEN           PUT LENGTH IN WRITE CCW.
         SR    RBETA,RBETA
         IC    RBETA,KEYLENTH           KEY LENGTH FROM COUNT FIELD.
         SR    ROVFLO,RBETA             SEGMENT LENGTH - KL = DATA LEN.
         STH   ROVFLO,DLDL              GOES IN COUNT FIELD.
         AR    ROVFLO,RBETA             RECONSTRUCT SEGMENT LENGTH.
*
*CALCULATE SPACE FOR A NOT-LAST-RECORD, USING
*   (SEGMENT LENGTH)*TOL/512 - DCBKEYCN + I
*
* DEB NO LONGER NEEDED. WILL USE THE DEB REG UNDER THE ALIAS RALPHA+1
* TO INSURE CONTIGUOUS REGISTERS FOR THE MULTIPLY.
*
         LR    RALPHA,ROVFLO            GET KL+DL
         LH    RALPHA+1,TOLER           GET TOLERANCE
         MR    RALPHA,RALPHA            (KL+DL)*TOL
         SRDA  RALPHA,9                 (KL+DL)*TOL/512 IS IN RALPHA+1
         SR    RALPHA,RALPHA
         IC    RALPHA,OVERI             GET NOT-LAST-RECORD OVERHEAD.
         TM    DEVFLAG,TBOVHD           TWO BYTE OVHD USED       S20201
         BNO   MZ0020                   BRANCH NO                S20201
         LH    RALPHA,OVERI             GET TWO BYTE OVHD        S20201
MZ0020   EQU   *                                                 S20201
         AR    RALPHA+1,RALPHA          AOD IT.
         SR    RALPHA,RALPHA            CLEAR REG                S20201
         IC    RALPHA,DCBKEYCN          GET KEY OVERHEAD CONSTANT.
         SR    RALPHA+1,RALPHA          (KL+DL)*TOL/512+I-DCBKEYCN IS
*                                       THE AMOUNT TO SUBTRACT FROM
*                                       TRACK BALANCE.
         LH    RBETA,DCBTRBAL           GET TRK BALANCE.
         SR    RBETA,RALPHA+1           DETERMINE NEW BALANCE.
         STH   RBETA,DCBTRBAL           UPDATE THE DCB.
*
* END OF TRACK LENGTH CALCULATIONS.
*
         MVI   WRTOPCD,WCKD             SET OP CODE OF THE FINAL WRITE.
*
         DROP  RDEB                                              S20201
         USING SAMSIOB,RIOB                                      S20201
         CLI   CHANPGM,SETSC            IS THIS RCD READY CHP    S20201
         BE    FEAT41                   GO AROUND NEXT INST      S20201
         IF    DCBOPTCD,ISNOT=VALCHK,GOTO=FLAGZERO
*
*
FEAT41   EQU   *                                                 S20201
*
         MVI   NULLFLAG,CC              COMMAND CHAIN CCW4.
*
* ADVANCE CP BASE REG TO NEXT SEGMENT. IF IT IS NOT THE WRITE VALIDITY
* CHECK SEGMENT, OVERLAY THE FIRST CCW WITH A TIC TO THE VALIDITY
* CHECK SEGMENT. SAME FOR RCD READY.
*
         LA    RCPBASE,CPSEGLEN(RCPBASE) ADDRESS OF NEXT SEGMENT.
         USING VCMAP,RCPBASE
         CLI   SEEKOPCD,SEEKCYL         ONLY SEEK IS IN WRITE CHECK SEG
         BE    EXCP                     WRITE VALIDITY CHECK SEGMENT IS
*                                       CONTIGUOUS WITH LAST SEGMENT
*                                       MADE UP. DONT NEED A TIC TO IT.
         CLI   D0(RCPBASE),RDSC         IS THIS A READ SECTOR    S20201
         BE    EXCP                     IF YES BRANCH            S20201
         USING WCPMAP,RCPBASE
         SR    RBETA,RBETA
         IC    RBETA,DCBWCPO            BUILD ADDRESS OF WCP
         AR    RBETA,RIOB               BECAUSE MVC NOT INDEXABLE.
         CLI   CHANPGM,SETSC            IS THIS A RCD READY CHP  S20201
         BNE   NOFET27                  BRANCH IF NO             S20201
         LA    RBETA,EIGHT(RBETA)       INCREMENT FOR SET SECT   S20201
*                                       CMND                     S20201
*
NOFET27  EQU   *                                                 S20201
*
         MVC   SRCHCCW(4),12(RBETA)     OVERLAY THE SEARCH WITH
*                                       PARASITIC TIC FROM CCW2.
         B     EXCP
FLAGZERO MVI   NULLFLAG,ZERO            TERMINATE CP CHAIN.
*
* PREPARE FOR EXCP. CP'S ALL BUILT.
*
EXCP     EQU   *
         LA    R1,8(RIOB)              ADJUST POINTER FROM SAM'S TO
*                                      IOS' IOB.
         EXCP  (1)
*
RESTORE  LM    RBETA,RDEVTAB,64(RSAVE)  RESTORE USERS 9 AND 10.
         SR    ROFFSW,ROFFSW
         IC    ROFFSW,DCBOFFSW         QSAM NEEDS IT TO GET NEXT
*                                      BUFFER ADDRESS.
*
         BR    RRETN
POSTECB  L     RBETA,IOBECBPT           GET ECB ADDRESS.
         MVI   0(RBETA),COMPWERR        POST COMPLETE WITH ERROR.
UEX      OI    IOBSTAT0,UNITEXC         SET CSW STATUS BYTE 0 TO UEX.
         B     RESTORE
ERREXIT1 EQU   *
         DMABCOND 204,SVC=YES,DCB=(RDCB) CALL PROB DETERMINATION Y02072
ERREXIT2 EQU   *
         DMABCOND 254,SVC=YES,DCB=(RDCB) CALL PROB DETERMINATION YM1433
         EJECT
ONE      DC    H'1'
ATE8     DC    H'8'                     CCW LENGTH               S20201
MODID    DC    C'IGGR19T2'              MODULE ID              @ZA02255
DATEFIX  DC    C'04/22/75'              DATE OF LATEST FIX'    @ZA02255
FIXID    DC    C' ZA02255'              LATEST FIX IN MODULE   @ZA02255
PATCH    DC    25H'0'                   PATCH AREA               Y02072
         EJECT
*
* FOLLOWING IS A MAP OF A WRITE CP SEGMENT.
*
WCPMAP   DSECT
*
*        SEARCH  (CCW1 OR 5)
*
SRCHCCW  EQU   *
SRCHADDR DS    F
SRCHOPCD EQU   SRCHADDR                 OP CODE IS HI ORDER BYTE.
SRCHFLAG DS    XL1
         DS    CL2
SRCHLEN  DS    XL1                      LENGTHS NORMALLY FIT IN 1 BYTE.
*
*        TIC   (CCW2 OR 6)
*
TICADDR  DS    F
TICOPCD  EQU   TICADDR
UNUSED   DS    F                        ONLY REQUIRES BITS 37-39 = 0.
PARASITE EQU   UNUSED                   BITS 37-39 =0 RESTRICTION ON
*                                       OP CODES, A PLACE FOR ADDRESSES
*
*        WRITE  (CCW3)
*
COUNTADR DS    F                        COUNT FIELD ADDRESS.
WRTOPCD  EQU   COUNTADR
WRTFLAG  DS    XL1                      FLAG FIELD.
         DS    CL2                      SPACER.
COUNTLEN DS    XL1                      COUNT FIELD LENGTH (NORMALLY 8)
*
*        NULL OP CODE  (CCW4)           OP PROPAGATED FROM WRITE CCW.
*
DATAADDR DS    F                        ADDRESS OF BLOCK OF DATA TO BE
*                                       WRITTEN.
NULLOPCD EQU   DATAADDR                 USED AS A FLAG TO SIGNAL LAST
*                                       SEGMENT.
NULLFLAG DS    XL1
         DS    C
DATALEN  DS    H                        DATA TO BE WRITTEN.
*
         EJECT
*
* FOLLOWING IS THE VALIDITY CHECK CP OVERLAY.
*
VCMAP    DSECT
*        SEEK  (CCW7)
SEEKADDR DS    F
SEEKOPCD EQU   SEEKADDR
SEEKFLAG DS    XL1
         DS    CL2
SEEKLEN  DS    XL1
*
*        SEARCH (CCW8)             LABELS PREFIXED BY 'VC' (VALIDITY
VCSRCH   EQU   *                        CHECK).
VCSRCHAD DS    F
VCSRCHOP EQU   VCSRCHAD
VCSRCHFL DS    XL1                      FLAGS.
         DS    CL2
VCSRCHLE DS    XL1                      LENGTH.
*
*        TIC   (CCW9)
VCTICAD  DS    F
VCTICOP  EQU   VCTICAD
NOTUSED  DS    F
*
*        READ DATA (CCW10)
VCRDAD   DS    F
VCRDOP   EQU   VCRDAD
VCRDFLAG DS    XL1                      NORMALLY SET FOR SKIP.
VCRDLEN  DS    FL3
         EJECT
*
* FOLLOWING IS AN OVERLAY OF THE COUNT FIELD.
*
COUNTFLD DSECT
*
CYLINDER DS    H                        CYLINDER ADDRESS (CC).
HEAD     DS    H                        HEAD ADDRESS     (HH).
RECORD   DS    XL1                      RECORD NUMBER    (R).
KEYLENTH DS    XL1                      KEY LENGTH       (KL).
DLDL     DS    H                        DATA LENGTH      (DLDL).
*
* END COUNT FIELD. (CCHHRKDD)
*
         EJECT
*
* DIRECT ACCESS DEVICE TABLE OVERLAY
*
DEVTAB   DSECT
DEVSIZE  DS    F                       MAX SIZ FOR DEVICE.
MAXHH    EQU   DEVSIZE+3                LO ORDER BYTE OF DEVICE SIZE IS
*                                       MAX HEAD ADDRESS.
TRKCAP   DS    H                       TRACK CAPACITY.
OVERI    DS    XL1                     OVERHEAD FOR NOT-LAST RECORD.
OVERL    DS    XL1                     OVERHEAD FOR LAST RECORD.
OVERK    DS    XL1                     OVERHEAD REDUCTION FOR NON-KEY
*                                      RECORDS.
DEVFLAG  DS    XL1
TOLER    DS    H                       TOLERANCE/512 USED FOR VARIABLE
*                                       GAP LENGTH CALCULATIONS.
* END DEVTAB OVERLAY.
*
*
         EJECT
         DCBD  DSORG=PS
         EJECT
FORECORE DSECT
DEBB     DSECT                         THIS DSECT DESCRIBES THE DEBUT18
DEBNMSUB DS    0CL1                    NO. OF SUB RTNS             UT18
DEBTCBAD DS    CL4                     TASK CONTROL BLOCK ADDR     UT18
DEBAMLNG DS    0CL1                    LENGTH OF ACCESS METHOD SEC UT18
DEBDEBAD DS    CL4                     ADDR OF NEXT DEB IN DEB CHAIUT18
DEBOFLGS DS    0CL1                    DEB OPEN FLAGS              UT18
DEBIRBAD DS    CL4                     ADDR OF THE IRB CONTROL BLOCUT18
DEBOPATB DS    0CL1                    OPEN ATRIBUTES              UT18
DEBSYSPG DS    CL4                     SYSTEM PURGE FIELD          UT18
DEBNMEXT DS    0CL1                    NUMBER OF EXTENTS IN DEB    UT18
DEBUSRPG DS    CL4                     USER PURGE FIELD            UT18
DEBPRIOR DS    0CL1                    INFO BYTE                   UT18
DEBECBAD DS    CL4                     EVENT CONTROL BLOCK ADDR    UT18
DEBPROTG DS    0CL1                    INFO BYTE                   UT18
DEBDEBID DS    0CL1                    INFO BYTE                   UT18
DEBDCBAD DS    CL4                     ADDR OF DCB                 UT18
DEBEXSCL DS    0CL1                    SCALING FACTOR OF DEB EXTENTUT18
DEBAPPAD DS    CL4                     APPENDAGE TABLE ADDR        UT18
DEBDVMOD DS    0CL1                    DEVICE MODIFIER BYTE        UT18
DEBUCBAD DS    CL4                     UNIT CTL BLOCK ADDR         UT18
DEBTVLSQ DS    0CL2                    VOL SEQ FOR TAPE            UT18
DEBBINUM DS    CL2                     BIN NUMBER                  UT18
DEBTVLNM DS    0CL2                    NO OF VOL FOR TAPE          UT18
DEBSTRCC DS    CL2                     START CYLINDER NUMBER       UT18
DEBSTRHH DS    CL2                     START HEAD NUMBER           UT18
DEBENDCC DS    CL2                     END CYLINDER NUMBER         UT18
DEBENDHH DS    CL2                     END HEAD NUMBER             UT18
DEBNMTRK DS    CL2                     NUMBER OF TRACKS            UT18
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS     UT18
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES                         UT18
DEBVOLSQ DS    H                       VOL SEQUENCE NUMBER         UT18
DEBVOLNM DS    H                       VOLUME NUMBER               UT18
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2                UT18
DEBSUBID DS    H                       SUBROUTINE ID ( 2 BYTES )   UT18
         EJECT
TOTSAVWA DSECT                                                     UT18
*                                                                  UT18
*******************************************************************UT18
*  THIS DSECT ESTABLISHES THE SYMBOLIC REFERENCES FOR THE USER TOTAUT18
*        ING FACILITY SAVE WORKAREA.                               UT18
*******************************************************************UT18
TOTFLGBT DS    0CL1                     X'80' = NO SAVE FOR UTF    UT18
TOTSVPTR DS    F                        ADDR OF THE SAVE RTN       UT18
TOTCURNT DS    F                        ADDR OF CURRENT SAVE SEGMENUT18
TOTSTART DS    F                        BEGINNING ADDR OF SAVE SEGMUT18
TOTENDAD DS    F                        ADDR OF LAST SAVE SEGMENT  UT18
TOTSVLNG DS    F                        LENGTH OF THE USER'S SAVE AUT18
TOTUSRWA DS    F                        ADDR OF THE USERS TOT AREA UT18
TOTTOTLN DS    F                       TOTAL LEN OF GETMAIN        UT18
TOTEOVPT DS    F                        POINTER TO EOV SEG         UT18
TOTREGSV DS    D                        SAVE AREA FOR R11 & R12    UT18
         DS    D                       SAV AREA  FOR REG'S         UT18
         EJECT
         IECDSECT
*
* IOB OVERLAY
* THE FORECORE DSECT IOB OVERLAY IS USED WITH THE FOLOWING ADDITIONS-
*
* BSAM/BPAM/QSAM IOB EXTENSION-
LINK     EQU   DXIOB-8                  FORWARD CHAIN FIELD (TO NEXT
*                                       IOB).
SAMSIOB  EQU   LINK
FLAG     EQU   LINK                     HI BYTE OF LINK USED AS FLAG.
ECB      EQU   DXIOB-4
* END EXTENSION DEFINITIONS
*
TRACKFUL EQU   IOBCSW+1                 CSW ADDRESS BYTE USED FOR
*                                       A TEMPORARY SWITCH.
TEMPSAVE EQU   IOBCSW+2                 PLACE TO KEEP THE ORIG. TRK BAL
*
*                                       IS OK BECAUSE IOB BEING PROCESS
*                                       -ED IS NOT IN ERROR, THEREFORE
*                                       CSW NOT NEEDED.
TTSAVE   EQU   IOBCSW+6                 PLACE TO KEEP THE UPDATED TT
IOBFDAD  EQU   DXDAADDR                 FDAD IN FORECORE IOB.
CHANPGM  EQU   DXDAADDR+8               START OF CHANNEL PROGRAM.
*                                       LENGTH MAY VARY.
* END IOB DEFINITIONS.
*
         END
