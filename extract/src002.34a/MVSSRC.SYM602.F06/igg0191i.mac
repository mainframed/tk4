         TITLE ' IGG0191I    BUFFER CONSTRUCTION      '
IGG0191I CSECT
*MODULE NAME - IGG0191I                                          Y02072
*
*DESCRIPTIVE NAME - BUFFER BUILDER                               Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 2 RELEASE 2 DELETIONS                              Y02072
*000221,000805,032900,033100-033200,037179,037201-037348,043692, Y02072
*043788,044400,049360,000480-000517,009600,043620-043632,        Y02072
*043656-043788,049397,079200,52200,75000,75870,75900,77000-77200 Y02072
*          VS2 RELEASE 3 DELETIONS
*C037441,037474,037507                                          ZA01275
*A036908,036912                                                 ZA01373
*                                                              @Z30TSCF
*           VS2 RELEASE 4 DELETIONS
*C036400,032360,032380                                         @XA01495
*A037626-037630,037940-037956                                  @XA01495
*         RELEASE 20 DELETIONS                                       *
*0281001400-001600,003000-003100,051400-067200,071200-072800,    S20201
*0281078600-080720,098600                                        S20201
*0281036400,038800,039500-040140                                 A30808
*0281014600,037000,082800-086800                                 S20016
*0281036845-036854                                               M0017
*0281063600                                                      A30962
*0281034800-035400,036809-037151,081260,081290,081320,081350     M3415
*                                                                 M5005
*                                                                 M4843
*          RELEASE 21 DELETIONS                                       *
*0892                                                            A48163
*A                                                              SA52300
*                                                               SA56446
*0892003400,074600-075000,075850,075880,078300-081200,082000-    S21042
*0892082200                                                      S21042
*D000280-000460,000600,050600-051000,067400-067600               XM6327
*D036804-036860,037355                                           YM3034
*                                                               SA67354
*C442380                                                       @ZA12970
*
*STATUS CHANGE LEVEL 010                                        ZA01373
*
*FUNCTION/OPERATION- THIS ROUTINE SUPPLEMENTS THE INITIAL OPEN ROUTINE.
*      IT PERFORMS GENERAL AND SPECIFIC FUNCTIONS FOR THE SEQUENTIAL
*      ACCESS METHOD
*      IT DETERMINES THE NUMBER OF BUFFERS NEEDED AND ISSUES A'GETMAIN'
*      FOR THE CORRECT AREA AND STORES THE ADDRESS IN THE DCB.
*
*      IF A RECORD AREA IS NEEDED FOR LOGICAL RECORD PROCESSING
*      OF VARIABLE LENGTH SPANNED RECORDS, IT DETERMINES THE SIZE
*      AND ISSUES A GETMAIN FOR THE RECORD AREA.  IT PUTS THE ADDRESS
*      OF THE RECORD AREA IN THE BUFFER CONTROL BLOCK AND SETS FLAGS
*      TO INDICATE THE PRESENCE OF A RECORD AREA.
*
*      IT ALSO SETS AUDIT TRAIL BITS IN THE OPEN WORKAREA AFTER  Y02072
*      ACQUIRING RESOURCES IN CASE OF A FORCE CLOSE SITUATION.   Y02072
*
*ENTRY POINT- IGG0191I ENTERED FROM IGG0191A BY XCTL
*
*INPUT: SEE DESCRIPTION OF REGISTERS.
*OUTPUT: SEE DESCRIPTION OF REGISTERS.
*EXTERNAL ROUTINES: NONE.
*EXIT NORMAL  XCTL TO IGG0193I
*
*EXITS-ERROR CALL PROB DET (IGG0196M) FOR WTP AND 013 ABEND
*
*MACROS - ACTION : MODESET, XCTL, GETMAIN, DMABCOND, XCTLTABL    Y02072
*
*MACROS - MAPPING : IKJTSB, IHAASCB, IEZJSCB, IKJTCB, DCBD,      Y02072
*                   IECDSECS, CVT, IEFUCBOB, IGGBCB, IGGPARML    Y02072
*
*TABLES/WORKAREAS: WHERE TO GO TABLE(WTG)
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE(IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 35    ADDRESS OF STORAGE FOR DCB
*      BYTE 36-39 TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR  N TH DCB (3 BYTES)
*                   ADDRESS OF STORAGE FOR DCB      (1 BYTE )
*                   IDTTR OF LAST ROUTINE LOAD      (3 BYTES)
*                   NOT USED                        (1 BYTE )
*
*      WORKAREA- SEE 'FORCORE DSECT' (IECDSECT) IN THIS LISTING
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN DATAMANAGEMENT KEY     Y02072
*            UNLESS OTHERWISE SPECIFIED, SUPER STATE             Y02072
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
*
RE       EQU   0                       WORK/PARAMETER REGISTER
RWK1     EQU   RE                       WORK REGISTER            Y02072
RF       EQU   1                       WORK/PARAMETER REGISTER
RWK2     EQU   RF                       WORK REGISTER            Y02072
RDCB     EQU   2                       ADDR OF USERS DCB
RBASE    EQU   3                       BASE REGISTER
RCORE    EQU   4                       ADDR OF OPEN WORK AREA
RPAR     EQU   5                       PARAMETER LIST
RWTG     EQU   6                       START OF WTG
RPARC    EQU   7                       CURRENT ENTRY IN PARAMETER LIST
RWTGC    EQU   8                       CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                       TIOT ADDR/WORK REGISTER
RWK3     EQU   RTIOT                    WORK REGISTER            Y02072
RUCB     EQU   10                      UCB ADDR/WORK REGISTER
RDEB     EQU   11                      DEB ADDRESS
RA       EQU   11
RB       EQU   12                      WORK REGISTER
RC       EQU   13                      WORK REGISTER
RD       EQU   14                       TCB ADDR/WORK/PARAMETER  S20016
*                                       REG                      S20016
RJ       EQU   15                      WORK/PARAMETER REGISTER
RWK4     EQU   RJ                       WORK REGISTER            Y02072
* MASK'S TO TEST PARAMETER LIST WITH
*
OUTP       EQU   X'0F'
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'                  ALIGNMENT BIT
*
C2       EQU   2                        GENERAL CONSTANT 2       S20201
C6       EQU   6                        GENERAL CONSTANT 6       S20201
C3       EQU   3                        GENERAL CONSTANT 3       S21042
ZERO     EQU   0                        GENERAL CONSTANT 0       S21042
*
STOWB      EQU   X'80'
OVRFLO     EQU   X'20'
PCI        EQU   X'20'
CONCAT     EQU   X'FF'
*
QSAMODE  EQU   X'01'                    DENOTES QSAM IN DCBCIND2 M0017
BLKFLG   EQU   X'04'                    USED TO TELL CLOSE BLKD SA52300
*                                       BIT TURNED OFF          SA52300
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
PAM        EQU   X'02'
PSAM       EQU   X'42'
QSAMB      EQU   X'01'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
DABIT    EQU   X'20'
URBIT    EQU   X'40'
TAPEB    EQU   X'80'
TERM     EQU   X'4F'                    DCBDEVT FOR TS TASK      S20016
D1285    EQU   X'5A'               TEST DCBDEVT FOR 1285         S19017
*                                  DCBDEVT FOR 1287 IS X'5B'     S19017
D1288    EQU   X'5C'               TEST DCBDEVT FOR 1288         S19017
D1419    EQU   X'5D'                   DCBDEVT CODE FOR 1419     S19033
D1275    EQU   X'5F'                    DCBDEVT CODE FOR 1275    S19033
*
*
* MASKS FOR BUFFER TECHNIQUE'S
*
EXCHANGB   EQU   X'10'
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
*
* MASKS USED FOR NEW BUFFER CONTROL BLOCK WHICH HAS A RECORD AREA
* ADDRESS
* THE RECORD AREA IS PROVIDED IN SUPPORT OF QSAM LOCATE MODE OF
* OPERATION WITH LOGICAL RECORD INTERFACE FOR VARIABLE LENGTH
* SPANNED RECORDS
*
LRECIND  EQU   X'60'                    LOGICAL REC INTERFACE   SA56446
FORMATVS EQU   X'48'                    VARIABLE LENGTH SPANNED  S19015
*                                           RECORD
CTLINFO  EQU   32                       LENGTH OF CONTROL INFO   S19015
*                                            IN RECORD AREA
ADDRLEN  EQU   4                        LENGTH OF RECORD AREA    S19015
*                                       ADDR                     S19015
ADLEN    EQU   3                        LENGTH OF ADDR           S19015
FLGOFFST EQU   4                        OFFSET TO FLAG BYTE IN   S19015
*                                       BCB                      S19015
RAFLAG   EQU   X'80'                    RECORD AREA PRESENT      S19015
EXTND    EQU   X'40'                    BIT ON INCICATES BUFFER  A48163
*                                       CONTROL BLOCK HAS LENGTH
*                                       OF 16 BYTES
ONE      EQU   1                        CONSTANT ONE             S19015
WDLEN    EQU   4                        FULLWORD LENGTH          S19015
DWDLEN   EQU   8                        LENGTH OF DOUBLEWORD     A48163
RAADOFST EQU   8                        RECORD AREA ADDR OFFSET  S19015
NOT      EQU   X'FF'                    MASK TO TURN OFF BITS    S19015
*
OABD061  EQU   61                                                S21042
IDTTR     EQU   5                       ID, TTR OF MOD FOR WTGT  XM6327
         EJECT
         BALR  RBASE,0
         USING START,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING DEB,RDEB
         USING   TCB,RD
         USING CVT,RTIOT
         USING UCBOB,RUCB
         USING WTGT,RWTG                                         Y02072
START    EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191I'              MOD NAME                 Y02072
         DC    C'@ZA01495'              LAST SHIP CODE         @ZA01495
         DC    C'04/30/75'              LAST DATE MODIFIED     @ZA01495
BEGIN    DS    0H                                               Y02072
*
         USING PARML,RPARC
         L     RDCB,PARDCBAD            GET DCB ADDRESS
         L     RCORE,4(RWTGC)           GET WORK AREA
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
*
*        THIS SECTION DETERMINES IF A BUFFER POOL
*        MUST BE ACQUIRED BY OPEN < < < < < < < < < < < < <
*
         TM    DCBBUFCB+ADLEN,ONE       BUFCB SPECIFIED          S19015
         BNO   GETRALEN                 BRANCH TO GET RECORD     A48163
*                                       AREA ONLY
A0015    EQU   *                                                 S19015
*
         SR    RB,RB                   CLEAR REG
*
         IC    RB,DCBBUFNO              GET BUFFER NUMBER
*
A0010    EQU   *
         LH    RC,DCBBUFL               GET BUFFER LENGTH EXPECTED
         LTR   RC,RC                    SPECIFIED
         BNZ   A0011                    YES--USE IT            @ZA01495
*
         AH    RC,DCBBLKSI              USE BLOCK SIZE IF THERE
         BZ   TSOCHK                    BRANCH IF NO BLOCKSIZE   XM5359
         TM   DCBCIND2,QSAMB            IS IT QSAM               XM5359
         BO   A0011                     YES,BRANCH              SA52300
*
         TM   DCBDEVT,DCBDSGDA          DIRECT ACCESS DEVICE    ZA01373
         BNO  A0012                     BRANCH NOT DA DEVICE    ZA01373
         SR   RD,RD
         IC   RD,DCBKEYLE               GET KEY LENGTH           XM5359
         AR   RC,RD                     BUFL EQ KEYLENGTH,BLKSI  XM5359
         B    A0012                     CONTINUE                 XM5359
*
TSOCHK   EQU  *
         CLI   DCBDEVT,TERM             CHECK FOR TSO
         BNE   DCBERROR                 BRANCH IF NOT
*  TSO MODIFICATION - WHEN BLKSI IS NOT SPECIFIED, FOR QSAM, LRECL
*  IS ASSUMED IF THERE, OTHERWISE, USER'S TERMINAL LINE SIZE IS
*  ASSUMED, FOR BSAM USER'S TERMINAL LINE SIZE IS ASSUMED.
*
*
         TM    DCBCIND2,QSAMODE         TEST IF BSAM OR QSAM
         BNO   USELNSZ                  BRANCH IF BSAM
         AH    RC,DCBLRECL              USE LRECL IF THERE
         BNZ   A0012                    BRANCH IF LRECL THERE
USELNSZ  EQU   *
         USING PSA,0                                             Y02072
         L     RWK4,PSAAOLD             GET CURRENT ASCB ADDR    Y02072
         USING ASCB,RWK4                                         Y02072
         L     RWK3,ASCBTSB             GET TSB POINTER          Y02072
         DROP  RWK4                                              Y02072
         MODESET  EXTKEY=TCAM           KEY 6 TO ACCESS TSB      Y02072
         USING TSBASCBA,RWK3                                     Y02072
         SR    RC,RC                    CLEAR REGISTER          ZA01275
         IC    RC,TSBLNSZ               GET TSB LINE SIZE       ZA01275
         MODESET  EXTKEY=DATAMGT                                 Y02072
         STH   RC,DCBLRECL              SET LRECL TO LINE SIZE  ZA01275
*
*   THIS CODE WAS COPIED FROM IGG0196K. IT ADJUSTS BLOCKSIZE    SA52300
*   TO LRECL IF IT IS OUTPUT TO A UR DEVICE AND USES THIS VALUE SA52300
*   WHEN COMPUTING AMOUNT OF CORE NEEDED FOR A BUFFER POOL.     SA52300
*
A0011    EQU   *                                                SA52300
         TM    DCBCIND2,QSAMB           IS IT QSAM             @XA01495
         BNO   A0012                    NO CONTINUE            @XA01495
         TM    DCBRECFM,DCBRECBR        IS IT BLOCKED FORMAT?   SA52300
         BZ    A0012                    NO CONTINUE             SA52300
         TM    DCBDEVT,URBIT            IS IT UNIT RECORD?      SA52300
         BZ    A0012                    NO CONTINUE             SA52300
         TM    PAROPT,PAROUTPT          IS IT OUTPUT?           SA52300
         BZ    A0012                    NO CONTINUE             SA52300
         DROP  RPARC
         TM    DCBRECFM,DCBRECU         IS IT UNDEF FORMAT      SA67354
         BNM   A0012                    YES, LEAVE BLKSIZE      SA67354
         TM    DCBRECFM,DCBRECV         IS IT VAR FORMAT        SA67354
         BO    A0011A                   YES, LEAVE BLKSIZE      SA67354
         LH    RC,DCBLRECL              USE LRECL TO BUILD BFR  SA52300
         STH   RC,DCBBLKSI              CHANGE BLOCKSIZE        SA52300
         LH    RC,DCBBUFL               GET BUFFER LENGTH EXPTD@XA01495
         LTR   RC,RC                    SPECIFIED              @XA01495
         BNZ   A0011A                   YES - USE IT           @XA01495
         LH    RC,DCBBLKSI              IF NOT RESTORE LRECL   @XA01495
A0011A   NI    DCBRECFM,X'FF'-DCBRECBR  TURN OFF BLOCKED BIT    SA52300
         OI    DCBCIND1,BLKFLG          TELL CLOSE              SA52300
*
*
*   RB HAS NO. OF BUFFERS DESIRED
*   RC HAS BUFFER SIZE TO BE SUPPLIED
*
*  *
*      AN INDICATOR IS BEING SET SO CLOSE KNOWS WHETHER OR NOT TO
*      FREE THE QSAM BUFFER POOL FOR THE CASE OF CONCATENATION WITH
*      UNLIKE ATTRIBUTES.  POOL IS NOW FREED AND REOBTAINED EVEN IF
*      USER SPECIFIES BUFFER LENGTH, SINCE USER HAS NO CHOICE ON DD *
*
*
A0012    EQU   *                                                 M4899
         OI    DCBCIND2,X'08'           SET BUFFER POOL INDICATOR
         LA    RC,7(0,RC)              ADJUST TO DBL WORD BY ADDING 7
         SRL   RC,3                    ROUND TO
         SLL   RC,3                       DOUBLE WORD
*
*
*
         LR    RD,RB                   SAVE LNGTH AND NUMBER
         LR    RJ,RC                     OF BUFFERS
         MR    RD,RD                    COMPUTE LENGTH
         LA    RJ,8(0,RJ)              ADD 8 FOR CNTRL BLK
         TM    DCBBFTEK,DOUBLE         DOUBLE WD. ALIGN.
         BC    14,A0030                YES, BRANCH              A48163
*
         LA    RJ,8(RJ)                 ADD 8 FOR FW ALIGNMENT
         OI    FCAOPEN,FCAOXTND         INDIC BCB EXTENDED       Y02072
*
A0030    EQU   *
         TM    DCBBFTEK,LRECIND         LOGICAL REC INTERFACE   SA56446
         BNO   GETCORE                  NO,GOTO GETMAIN         SA56446
*
* LOGICAL RECORD INTERFACE TEST PRIOR TO GETMAIN. DETERMINE IF
* BUFFER CONTROL BLOCK HAS TO BE EXTENDED FOR A RECORD AREA.
* IF SO, ADD 8 BYTES TO THE BUFFER CONTROL BLOCK LENGTH.
*
         TM    DCBCIND2,QSAMB           QSAM DATA SET           SA56446
         BNO   DEFAULT                  NO,BR TO TURN OFF BITS  SA56446
         TM    DCBRECFM,FORMATVS        IS FORMAT VARIABLE       S19015
*                                       SPANNED                  S19015
         BNO   DEFAULT                  BRANCH NO TO TURN OFF    S19015
*                                           LOGICAL RECORD
*                                           INTERFACE INDICATOR
         TM    DCBMACRF,LOCATEB         LOCATE MODE              S19015
         BO    TSTFW                    BRANCH YES TO ADD RA LEN A48163
         TM    DCBMACRF+ONE,LOCATEB     LOCATE MODE              S19015
         BNO   DEFAULT                  BRANCH NO TO TURN OFF    S19015
*                                           LOGICAL RECORD
*                                           INTERFACE INDICATOR
TSTFW    EQU   *                                                 A48163
* LOGICAL RECORD INTERFACE IS SUPPORTED.  DETERMINE IF BUFFER    A48163
* CONTROL BLOCK MUST BE EXTENDED TO CONTAIN THE RECORD AREA      A48163
* ADDRESS.
         TM    DCBBFTEK,DOUBLE          FULL WORD ALIGNMENT
         BO    GETCORE                  BRANCH YES -- BUFFER     A48163
*                                       CONTROL BLOCK HAS SPACE  A48163
*                                       FOR RECORD AREA ADDRESS  A48163
         LA    RJ,8(RJ)                 ADD 8 BYTES
         OI    FCAOPEN,FCAOXTND         INDIC BCB EXTENDED       Y02072
         B     GETCORE                  GO GET BUFFER POOL SPACE A48163
*
*  LOGICAL RECORD INTERFACE PROCESSING IS NOT SUPPORTED.
*
DEFAULT  NI    DCBBFTEK,NOT-LRECIND     TURN OFF LOGICAL RECORD  A48163
*                                       INDICATOR
GETCORE  EQU   *                                                 S19015
*
         SR    RF,RF                    HOUSEKEEP PARM REG 1.     DM0E
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=14 GET INTO USER KEY    Y02072
         SPACE 2
         GETMAIN R,LV=(15),SP=0                                  Y02072
         SPACE 2
         TM    DCBBUFCB+ADLEN,ONE       BUFCB SPECIFIED          S19015
         BO    GETSTBUF                 NO, GO FORMAT POOL       A48163
*
         L     RJ,DCBBUFCB              YES, GET BUFCB ADDR      S19015
         OI    FLGOFFST(RJ),RAFLAG      SET FLAG TO INDICATE     S19015
*                                       RECORD AREA PRESENT
         ST    RF,RAADOFST(RJ)          STORE RECORD AREA ADDR   S19015
*
         LH    RJ,DCBLRECL              LOAD LRECL IN WORK REG   S19015
         LA    RJ,CTLINFO(RJ)           ADD 32 BYTES CONTROL     S19015
*                                       INFO                     S19015
         ST    RJ,DISPSN(RF)            STORE LRECL IN RECORD    S19015
*                                       AREA                     S19015
         XC    WDLEN(CTLINFO-4,RF),WDLEN(RF) CLR CONTROL FLDS  @ZA12970
*                                       IN RA                    S19015
         SPACE 2
         MODESET  EXTKEY=DATAMGT        AUDIT TRAIL IN KEY 5     Y02072
         SPACE 2
         OI    FCAOPEN,FCAORECA         INDIC REC AREA GOTTEN    Y02072
         B     A0093                    EXIT                     Y02072
*
GETSTBUF EQU   *                                                 S19015
*
         ST    RF,DISPSN(RF)            STORE START ADDRESS      S19015
*                                       DM0E                     S19015
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         STCM  RWK2,B'0111',DCBBUFCA    BCB ADDR TO DCB          Y02072
         MODESET  KEYADDR=DXUKEY,WORKREG=14 GET INTO USER KEY    Y02072
*
         STH   RB,4(0,RF)              STORE NO.OF BUF. IN BCB
         STH   RC,6(0,RF)              STORE LNGTH OF BUF. IN BCB
         SPACE 2
         MODESET  EXTKEY=DATAMGT        AUDIT TRAIL IN KEY 5     Y02072
         SPACE 2
         OI    FCAOPEN,FCAOBUF          INDIC BUFFERS GOTTEN     Y02072
         SPACE 2
         MODESET  KEYADDR=DXUKEY,WORKREG=14  BACK TO USER KEY    Y02072
         SPACE 2
         LR    RUCB,RF                  GET ADDRESS IN WRK REG
         LA    RUCB,DWDLEN(0,RUCB)      GET ADDR +8 TO POINT TO
*                                       FIRST AVAILABLE BUFFER
* DETERMINE IF BUFFER CONTROL BLOCK IS EXTENDED.  IF SO, SET FLAGS
* AND UPDATE POINTER TO FIRST BUFFER.
         TM    DCBBFTEK,DOUBLE          FULL WORD ALIGNMENT      A48163
         BZ    TSTLRI                   NO, TEST LRI             A48163
         LA    RUCB,WDLEN(0,RUCB)       YES, OFFSET ADDR TO FW   A48163
         B     EXTEND                   GO SET EXTEND FLAG       A48163
TSTLRI   TM    DCBBFTEK,LRECIND         LRI SUPPORTED            A48163
         BNO   ALIGNED                  NO, BRANCH TO SAVE FIRST A48163
*                                       BUFFER ADDRESS
         LA    RUCB,DWDLEN(0,RUCB)      YES, OFFSET TO NEXT DW   A48163
*
EXTEND   OI    FLGOFFST(RF),EXTND       SET FLAG TO INDICATE     A48163
*                                       BUFFER CONTROL BLOCK EXTENDED
*
*        THE NEXT SEQUENCE OF INSTRUCTIONS BUILDS A BUFFER POOL
*
ALIGNED  EQU   *                                                 S19015
*
         ST    RUCB,0(0,RF)             STORE BUFFER ADDRESS
         LR    RF,RUCB                  SAVE NEXT BUFF. ADDR
*
A0050    EQU   *
         BCT   RB,A0060                 IF MORE, BRANCH          A48163
         B     SETLAST                  EXIT                     A48163
A0060    EQU   *
         ALR   RUCB,RC                  UPDATE TO NEXT BUFFER
         ST    RUCB,0(RF)               STORE POINTER
         ALR   RF,RC                    BUFFER LEN + BUFFER ADDR A48163
         B     A0050                    IF MORE BRANCH
*
SETLAST  EQU   *                                                 S19015
         ST    RB,0(0,RF)               LAST LINK TO ZERO
         TM    DCBBFTEK,LRECIND         RECORD AREA NEEDED
         BNO   A0090                    NO,EXIT
         L     RJ,DCBBUFCB              GET BUFFER CONTROL BLOCK A48163
         TM    FLGOFFST(RJ),EXTND       SPACE FOR RECORD AREA    A48163
*                                       ADDR AVAILABLE
         BNO   A00100                   N0, ABEND                Y02072
*
GETRALEN EQU   *
         LH    RJ,DCBLRECL              LOAD LRECL IN WORK REG   A48163
         LA    RJ,CTLINFO(RJ)           ADD 32 BYTES FOR CONTROL A48163
*                                       INFORMATION
         B     GETCORE                  GO GET SPACE FOR RECORD  YM1262
*                                       AREA
*
A0090    EQU   *
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         USING WTGENTRY,RWTGC                                    Y02072
A0093    MVC   WTGIDTTR,LOAD3I       NEXT MODS ID TO WTG TAB   @Z30TSCF
RELOOP   EQU   *
         LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)    INCR CURRENT DCB ENTRY PTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE                 RETURN TO INITIALIZE ANOTHER DCB
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO, CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)     REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN           IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)    GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
A00100   EQU   *
         SPACE 3
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE 3
DCBERROR EQU   *
*
         OI    DCBOFLGS,X'90'           TURN ON WRITE,OPEN BITS   10929
         DMABCOND OABD061,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES  S21042X
                                        CALL PROBLEM DETERMINATION
TCTLRTN  EQU   *                                                 S20201
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
WAOFF    EQU   32                  OFFSET OF FIRST ENTRY IN WTG TABLE
PLOFF    EQU   4                   OFFSET OF DCB ENTRIES
WGOFF    EQU   8                   OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'
AMIDCNST DC    C'1I'                    THIS ROUTINE ID
LOAD3I   DC    C'3I',VL3(IGG0193I)      NEXT MODS ID           @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROB DETER             @Z30TSCF
         SPACE 2
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
         IGGPARML
         EJECT
         IHAPSA                                                  Y02072
         EJECT
         IGGBCB  TYPE=SAM                                        Y02072
         EJECT
         IKJTCB                                                , S20016
           DCBD  DSORG=PS
*
*
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
         EJECT
FORCORE  DSECT                                                   Y02072
         IHAFCAUD  ORG=YES                                       Y02072
         EJECT
*   TASK CONTROL BLOCK
TIOT     DSECT
TIOELNGH DS    CL1                           LENGTH OF THIS ENTRY
TIOESTTA DS    CL1                           STATUS -A-
TIOERLOC DS    CL2                           REL. LOC OF POOL
TIOEDDNM DS    2F                            DDNAME
TIOEJFCB DS    1F                            JFCB DISK ADDR
TIOESTTB DS    0CL1
TIOEFSRT DS    CL4
         DS    CL1
*        TIOT POOL ENTRY
TIOPNSLT DS    XL1                           NR.OF SLOTS FOR POOL
         DS    CL1
TIOPNSRT DS    XL1                           NR.OF DEVICES (FILLED
*                                             SLOTS)
TIOPPOOL DS    CL8                           POOL NAME
TIOPSTTB DS    XL1                           STATUS OF SLOT
TIOPSLOT DS    XL3                           SRT ADDRESS OR EMPTY SLOT
TIOTFEND DS    1F                            FINAL END OF AN ENTRY
         SPACE 1
SRT      DSECT
         IEFUCBOB
*   DATA EXTENT BLOCK  (UNTIL PROTIOS CHANGES)
DEB      DSECT
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOFLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBTVLSQ DS    0CL2                VOL SEQ FOR TAPE
DEBBINUM DS    CL2
DEBTVLNM DS    0CL2                NO OF VOL FOR TAPE
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES
DEBVOLSQ DS    H
DEBVOLNM DS    H
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2
DEBSUBID DS    H
CVT      DSECT
         CVT
         SPACE 3
         IEZJSCB
         SPACE 3
         IKJTSB
         SPACE 3
         IHAASCB                                                 Y02072
         SPACE 3
WTGT     DSECT                                                   Y02072
XCTMODNM DS    CL8                      MODULE NAME              S20201
         DS    CL6                      *                        S20201
XCTTTR   DS    CL3                      TTR                      S20201
         DS    CL5                      *                        S20201
XCTATTRB DS    CL2                      ATTRIBUTES               S20201
XCTMODSZ DS    CL3                      MAIN STORAGE REQUIRED    S20201
XCTTXTLN DS    CL2                      LENGTH OF FIRST TEXT REC S20201
XWTGLENG DS    C                        *                        S20201
XWTGPATH DS    CL2                      *                        S20201
         END
