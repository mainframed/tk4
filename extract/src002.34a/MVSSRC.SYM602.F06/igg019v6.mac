 TITLE 'IGG019V6-REAL ADDRESS SPACE PCI,CH.END,AB.END APPENDAGE'
IGG019V6 CSECT
***********************************************************************
*
* MODULE NAME-IGG019V6
*
* DESCRIPTIVE NAME-REAL ADDRESS SPACE PCI, CHANNEL END, ABNORMAL
*   END APPENDAGE
*
* COPYRIGHT-NONE
*
* CHANGE ACTIVITY-AS FOLLOWS
*
*          RELEASE 21 DELETIONS                                       *
*                                                                M0477
*                                                                A42907
*          VS2 RELEASE 02 DELETIONS
*                                                                Y02072
* 210500,273500,319500,352500,419000,429000,437000               YM4635
*                                                                YM5355
*                                                                YM5998
*                                                                YM6583
*                                                                YM1002
*          VS1 RELEASE 03 DELETIONS
*                                                               XA02374
*          VS2 POST RELEASE 3 CHANGES
*A092600-092900,161100-161200,163100-163400                    @ZA00971
*A19751002-19758002                                            @ZA02259
*A210100-210200,273100,273200,319100-319200,418600-418700      @ZA11106
*428600-428700.437000-437200,437800                            @ZA11106
*A205510,205520,C275200                                        @ZA11126
*C245500                                                       @ZA11654
*A245510-245520                                                @ZA11654
*C292500                                                       @ZA08874
*A343500-343860                                                @ZA08874
*C390000                                                       @ZA17184
*A208600-208800                                                @ZA18996
*D263500-265000,266000                                         @ZA18996
*D44250002                                                     @ZA27785
*C284500,285000                                                @ZA26933
*A284600-284800,287600-287700                                  @ZA26933
*C287700                                                       @ZA33346
* MODULE TYPE- APPENDAGE USED BY BSAM/QSAM FOR PCI REQUIREMENTS.
*
* FUNCTION-TO HANDLE THE MANIPULATION OF ICB'S UNDER THREE TYPES OF
*          INTERRUPTS  1)PCI-TYPE INTERRUPT   2)CHANNEL-END INTERRUPT
*          AND  3)ABNORMAL-END INTERRUPT
*
*          PCI ENTRY-ALL  FINISHED ICBS ARE POSTED COMPLETE. THE
*                    BLOCK COUNT UPDATED IF USING TAPE. THE MAINIOB
*                    POINTERS ARE UPDATED TO SHOW NEW ICB CHAIN'S
*                    STATUS. IF AN ICB IS BEING WAITED ON, A BRANCH
*                    ENTRY TO IOS'S 'POST' ROUTINE IS MADE TO SATISFY
*                    'WAIT'.
*
*          CHANNEL END ENTRY- IN ADDITION TO POSTING AND UPDATING
*                    FUNCTIONS EXACTLY AS IN PCI ENTRY, A CHECK IS
*                    MADE TO SEE IF AN ERROR HAS BEEN PREVIOUSLY
*                    PROCESSED. A CHAIN OF ICB'S MAY THEN BE RESTARTED
*                    IF THE 'START CHAIN' INDICATOR IS ON.
*
*          ABNORMAL END ENTRY- THE POSTING AND UPDATING FUNCTIONS
*                    ARE ALSO PERFORMED AS IN PCI UNTIL THE ICB IN
*                    ERROR IS FOUND. IF THIS IS FIRST ENTRY FOR THE
*                    ERROR, THE ICB IS ISOLATED FROM ANY CHAINED
*                    ICBS AND GIVEN BACK TO IOS TO RECOVER.(IF ANY
*                    ICBS ARE CHAINED ON, THE 'START CHAIN' INDICATOR
*                    IS SET ON SO THAT CHAIN MAY BE RESTARTED IF
*                    ERROR IS CORRECTED OR PROCESSING IS TO CONTINUE.)
*                    IF ERROR  HAS BEEN PROCESSED BEFORE THE ICB,
*                    AND MAINIOB ARE POSTED IN ERROR.
*
*
* ENTRY POINT-IGG019V6 IN APPENDAGE VECTOR TABLE FOR PCI .
*             IGG019V6+4 IN APPENDAGE VECTOR TABLE FOR BOTH THE
*               ABNORMAL END APPENDAGE AND CHANNEL APPENDAGE.
*
* INPUT-REGISTERS SET UP BY IOS
*        1) RQE = 1      RQE ADDRESS
*        2) RIOB = 2     IOB(IOS) POINTER
*        3) DCBR = 4     DCB  POINTER.
*        4) RSAVE = 13   PTR TO 16 FULL WORDS REGISTERS SAVEAREA Y02072
*        5) RETR = 14    RETURN ADDRESS
*        6) BASR = 15    BASE REG FOR THIS MODULE.
*
*
*          FIELDS REFERENCED IN DCB
*        1) DCBBLKCT     TAPE BLOCK COUNT UPDATED
*        2) DCBDEVT      CHECK FOR TAPE OR DIRECT ACCESS
*        3) DCBIFLG      CHANGE TO PERMIT OR PREVENT IOS ERROR RECOVERY
*        4) DCBIOBAD     FIRST BYTE CONTAINS NOP OFFSET FOR ICB
*
*          BITS, FIELDS AND FLAGS
*        1) BLOCK COUNT INCREMENT IS IN 1ST 2 BYTES OF 'DCBAD' IN ICB.
*        2) ECB IN MAINIOB AND ICB
*          A)WAIT BIT(10000000=X'80')
*          B)COMPLETE BIT(01000000=X'40')
*        3) BYTE 1 OF '1ST ICB' IN MAINIOB
*          A)ERRPPROC(ERROR PREVIOUSLY PROCESSED)=X'04'
*          B)STRTCHAN(RESTART CHAIN OF ICBS) =X'02'
*          C) PCIENTRY=X'01'  APPENDAGE WAS ENTERED DUE TO A PCI.
*        4) DCBDEVT
*          A)TAPE = X'80'
*        5) CSW IN MAINIOB
*          A)CHEND(00001000) CHANNEL END.........BYTE 1
*          B)UNITEXC(00000001) UNIT EXCEPTION....BYTE 1
*          C)UNITCHEK(00000010) UNIT CHECK.......BYTE 1
*          D)RONGSIZE(01000000) INCORRECT LENGTH.BYTE 2
*          E)ERRORS(00110001) FOR CHAINING CHECK,
*                                  PROGRAMCHECK,
*                          OR PROTECTION CHECK...BYTE 2
*        6)  BYTE 30, BIT 0 IN THE ICB IS A 'SPECIAL VOLUME FULL' BIT.
*            IT IS SET WHEN THE REFLECTIVE SPOT IS ENCOUNTERED ON
*            ON A WRITE WITH A WRITE ERROR.  WHEN ERROR PROCESSING
*            IS FINISHED, AN END OF TAPE CONDITION IS TO BE HANDLED.
*
* ATTRIBUTES-REENTRANT,RESUABLE,ENABLED,HOLD LOCAL LOCK,         Y02072
*            GENERALLY RUNS IN KEY IN WHICH EXCP WAS ISSUED.
*
* NOTES-SEE BELOW                                                Y02072
*   PATCH LABEL-PATCH A DC STATEMENT
*   THIS MODULE IS THE SAME COPY AS IGGR19CU
*   THE REASONS FOR CREATING A NEW MODULE FOR THE V=R USERS ARE:
*    1.) THE MODULE WILL RESIDE IN SVCLIB (WHEREAS THE MODULE FOR
*        V=V USERS RESIDES IN LPALIB)
*    2.) THE V=R MODULE OPERATES IN A DIFFERENT ENVIRONMENT. WHEN
*        A PCI INTERRUPT IS RECEIVED WITHOUT CHANNEL END, THE PCI
*        APPENDAGE IS ENTERED FROM THE DIE. THIS ENVIRONMENT DIFFERS
*        FROM THE CHANNEL END APPENDAGE ENVIRONMENT IN 2 SIGNIFICANT
*        WAYS:
*         A.) IT IS DISABLED (CE IS ENABLED)
*         B.) IT DOES NOT HOLD THE LOCAL LOCK (CE HAS LOCAL LOCK)
*
*        3)    THE CHANNEL PROGRAMS IN THE ICBS ARE CHAINED TOGETHER BY
*              THE EOB ROUTINES AND UNCHAINED BY IGG019V6.
*
*        4)    FOR DIRECT ACCESS THE MAIN IOB HAS A CHANNEL PROGRAM
*              IN IT TO ALLOW FOR A COMMON SEARCH.  IOBSTART POINTS
*              TO THE FIRST CCW IN THE CHANNEL PROGRAM AND THE LAST
*              CCW IS A TIC TO THE CHANNEL PROGRAM OF THE FIRST ICB
*              ON THE CHAIN.  FOR NON DIRECT ACCESS THERE IS NO
*              CHANNEL PROGRAM IN THE MAIN IOB AND IOBSTART POINTS
*              TO THE CHANNEL PROGRAM IN THE FIRST ICB ON THE CHAIN.
*
*        5)    EACH ICB'S CHANNEL PROGRAM ENDS IN ONE OF THE FOLLOWING
*              WAYS:
*
*              NON-RPS WHEN NOT CHAINED.
*              ×  NOP   × NXT CCW STR × ******************×
*              ×__________________________________________×
*
*              NON-RPS WHEN CHAINED.
*              ×  TIC   × NXT CCW STR × ******************×
*              ×__________________________________________×
*
*              RPS WHEN NOT CHAINED.
*              × NOPTIC × ADR RDSCT   × NXT CCW STR       ×
*              ×__________________________________________×
*              × RDSCT  × SECTOR ADDR × 00   00   00   01 ×
*              ×__________________________________________×
*
*              RPS WHEN CHAINED.
*              ×  TIC   × NXT CCW STR × NXT CCW STR       ×
*              ×__________________________________________×
*              × RDSCT  × SECTOR ADDR × 00   00   00   01 ×
*              ×__________________________________________×
*
*              A NOPTIC COMMAND IS A X'88'.  THE HARDWARE DECODES IT
*              THE SAME AS AN ORDINARY TIC.  BITS 0 - 3 ARE IGNORED
*              BY THE HARDWARE BUT ARE USED BY THE SOFTWARE TO IND-
*              ICATE THAT THIS IS THE LAST CHANNEL PROGRAM IN THE
*              CHAIN (AS A NOP IS FOR NON-RPS). THE NOPTIC IS WHAT
*              IOBCNOPA POINTS TO FOR AN RPS CHANNEL PROGRAM.
*
*              TO ADD OR REMOVE A NON-RPS SEGMENT ALL THAT IS
*              NEEDED IS TO CHANGE THE OPCODE FROM A NOP TO A TIC OR
*              FROM A TIC TO A NOP.
*              TO REMOVE AN RPS SEGMENT THE TIC IS CHANGED TO A
*              NOPTIC AND THE ADDRESS IS CHANGED TO THAT OF THE
*              READ SECTOR COMMAND FOLLOWING.  TO ADD A SEGMENT
*              THE NOPTIC IS CHANGED TO A NORMAL TIC AND THE ADDRESS
*              IN THE SECOND WORD IS MOVED TO THE FIRST WORD.
         EJECT
*
*        6)    IOBCNOPA IS USED FOR SERIALIZATION BETWEEN THE EOB
*              ROUTINES AND IGG019V6. PRIOR TO VS2 RELEASE 2 THE
*              ECB WAS USED FOR THIS SERIALIZATION, HOWEVER SINCE
*              MP SUPPORT WAS ADDED AND THE APPENDAGES RUN ENABLED,
*              IT WAS NO LONGER SUFFICIENT.  THE HIGH ORDER BIT OF
*              IOBCNOPA MEANS THAT IF THE EOB ROUTINES ADD ANOTHER
*              SEGMENT THEY MUST ISSUE AN EXCP SINCE IGG019V6 HAS
*              TERMINATED THE LAST SEGMENT.  IF THE BIT IS A 0 THEN
*              EITHER 19V6 WILL RE-EXCP OR THE SEGMENT IS STILL
*              ACTIVE.  19V6 ONLY TURNS ON THE BIT IT NEVER CHANGES
*              THE ADDRESS.  THE EOB ROUTINES CHANGE THE ADDRESS
*              AND WHEN THEY ISSUE AN EXCP TURN OFF THE BIT.
*              A CS INSTRUCTION IS USED BY BOTH CU AND THE EOB
*              ROUTINES TO PREVENT INTERACTION IN AN MP ENVIRONMENT.
*              THIS SUPPORT WAS ADDED WITH PTM YM6583.
*
*   PATCH LABEL-PATCH A DC STATEMENT
*
***********************************************************************
         EJECT
         USING RQE,RRQE                 RQE REGISTER             Y02072
         USING IHADCB,DCBR
         USING *,BASR
         SPACE 2
R0       EQU   0
RRQE     EQU   1                        RQE REGISTER             Y02072
RIOB     EQU   2                        IOB POINTER
RWRK4    EQU   3                        WORK REG                 Y02072
DCBR     EQU   4                        POINTER TO DCB
R5       EQU   5
RWRK6    EQU   5                        WORK REG                 Y02072
R6       EQU   6
R7       EQU   7
R8       EQU   8
RINSERT  EQU   9                        INSERT CHARACTER REG
RWRK7    EQU   9                        WORK REG                 Y02072
R10      EQU   10
RWRK1    EQU   10
RWRK2    EQU   11
RWRK3    EQU   12
R12      EQU   12                       REG 12,FOR LM INST       Y02072
RSAVE    EQU   13                       PTR TO REG SAVEAREA      Y02072
RETR     EQU   14                       RETURN REGISTER
BASR     EQU   15                       BASE REGISTER FOR THIS CSECT
R15      EQU   15                       REG 15,FOR STM/LM INST   Y02072
         SPACE 2
FIRSTICB EQU   8
CPSTART  EQU   24
ZERO     EQU   X'00'
INCREMNT EQU   28
ECBPTR   EQU   12
DABIT    EQU   X'20'
NOP      EQU   X'03'
EIGHT    EQU   8                        DECREMENT OF 8            M6373
UCSLOAD  EQU   X'FB'                    UCS LOAD COMMAND          M6373
SKIP0    EQU   X'83'                    SKIP TO CHANNEL 0 COMMAND M6373
FOLD     EQU   X'43'                    FOLD COMMAND              M6373
ERR1     EQU   X'02'                    ERR MASK FOR STAT1        M6373
ERR2     EQU   X'7F'                    ERROR MASK FOR STAT 2     M6373
RETRY    EQU   X'80'                    TEST FOR ERROR RETRY      M6373
CMNDRTRY EQU   X'80'                    TEST IF ERROR RETRYABLE   M6373
*  IF IOS WAS UNABLE TO GET SENSE BYTES AFTER TEN TRIES FOLLOWING
*  A UNIT CHECK ON ANY DEVICE, IOS SIMULATES SENSE BYTES BY SETTING
*  X'10FE'.
SENSFAIL EQU   X'FE'                SIMULATED SENSE IN IONSENS1@ZA00971
RTRYOFF  EQU   X'7F'                    TURN OFF RETRY            M6373
SKIPFLAG EQU   X'40'                    INDICATE SKIP TO 0        M6373
SKIPOFF  EQU   X'3F'                    TURNS OFF RETRY AND SKIP  M6373
*                                        FLGS                     M6373
TAPE     EQU   X'80'                    TAPE INDICATOR IN DCBDEVT=X'80'
NULL     EQU   X'00'                                             S20202
SETSC    EQU   X'23'                    SET SECTOR CCW CMND      20201
READSC   EQU   X'22'                    READ SECTOR CCW CMND     YM5355
TICNOP   EQU   X'88'                    RCD READY NOP TIC CMND   20201
SKIP     EQU   4                        SKIP OFFSET        IOS RETURN
EXCP     EQU   8                        EXCP OFFSET        IOS RETURN
MIOBCHP  EQU   56                       MIOB OFFSET TO CHP       20201
*
* DISPLACEMENTS AS EQUATES
*
D0       EQU   0                        DISPLACEMENT OF 0        20201
D5       EQU   5                        DISPLACEMENT OF 5        20201
D4       EQU   4                        DISPLACEMENT OF 4        20201
D8       EQU   8                        DISPLACEMENT OF 8        20201
* BYTE COUNTS AS EQUATES
B3       EQU   3                        BYTE COUNT OF 3          20201
D25      EQU   25                       DISPLACEMENT OF 25       20201
D81      EQU   81                       RR LAST TIC MIOB OFFSET  20201
*
PCIBYTE  EQU   28
RONGSIZE EQU   X'40'                    CHECKS CSW...INCORRECT LENGTH
CHEND    EQU   X'08'                     *    *     CHANNEL END
UNITEXC  EQU   X'01'                     *    *     UNIT EXCEPTION
UNITCHEK EQU   X'02'                     *    *     UNIT CHECK
ERRORS   EQU   X'3F'                     * PROGRAM, PROTECTION, XA02374
* CHANNEL DATA, CHANNEL CONTROL, INTERFACE CONTROL AND CHAINING CHECKS
*
* NOTE:    USE ERRORS  MASK  WITH BYTE 2 OF 2ND
*          HALF OF CSW--- UNITCHEK, CHEND, AND
*          UNITEXC ARE MASKS FOR BYTE 1 OF STATUS FIELD.
*
CC       EQU   X'40'                    CHAIN COMMAND FLAG
OUTNOP   EQU   X'03'
INNOP    EQU   X'02'
SAVE13   EQU   52                       OFFSET TO REG 13 IN SA   Y02072
SAVE14   EQU   56                       OFFSET TO REG 14 IN SA   Y02072
SAVE15   EQU   60                       OFFSET TO REG 15 IN SA   Y02072
VCKECB   EQU   X'00'                    VALIDITY CHECK ECB MASK  Y02072
ENTRAGAN EQU   X'20'                    SECOND TIME ENTERED IND SA61524
         EJECT
         USING IOBSTDRD,RIOB
*
*  PCI ENTRY
*
         OI    PCIBYTE(RIOB),IOBPCI
*
* CHANNEL END OR ABNORMAL END ENTRY POINT.
*
         DROP  BASR
         BALR  BASR,R0                  FORCE BASE REG TO * +2
         USING *,BASR                   BASE REGISTER            Y02072
         SPACE
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG019V6'              MODULE NAME              Y02072
         DC    C' ZA33346'              LAST SHIP CODE         @ZA18996
         DC    C'&SYSDATE'              LAST DATE MODIFIED     @ZA18996
BEGIN    DC    0H'0'                                             Y02072
         SPACE
         TM    IOBFLAG1,IOBSPSVC        SVC MODULE ISSUED EXCP   Y02072
         BOR   RETR                     YES, NORMAL RETURN TO    Y02072
*                                        EXCP                    Y02072
         STM   R0,R15,0(RSAVE)          SAVE ALL REGISTERS       Y02072
         SPACE
*    CHANGE THE KEY TO THAT SPECIFIED IN RQE                     Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=10  ISSUE MODESET        Y02072
         SPACE
         LA    RWRK1,IOBSTDRD-IOBPREFX  LENGTH OF PREFIX
         SR    RIOB,RWRK1               GET ADDRESS OF IOB PREFIX
         USING IOBPREFX,RIOB
         L     RWRK1,IOBCSW-1           GET COMMAND ADDRESS -  @ZA11126
         LA    RWRK1,NULL(RWRK1)        CLEAR THE HI BYTE   -  @ZA11126
         LTR   RWRK1,RWRK1              IS THE CSW ZERO ??     @ZA11126
         BNZ   TEST3211                 NO  BRANCH             @ZA11126
* IF A CSW OF ZERO IS PRESENT-THE FIRST ICB WILL BE POSTED WITH@ZA11126
* A PERMENANT ERROR SINCE IT IS IMPOSSIBLE TO DETERMINE THE    @ZA11126
* SOURCE OF THE INTERRUPT                                      @ZA11126
         SR    R5,R5                    CLEAR REGISTER         @ZA11126
         L     RWRK2,IOBCICB            GET ADDR OF 1ST ICB    @ZA11126
         LA    RWRK2,NULL(RWRK2)        CLEAR HIGH ORDER BYTE  @ZA11126
         B     PCIN5                                           @ZA11126
TEST3211 EQU   *                                               @ZA11126
         CLI   DCBDEVT,DCBDVPR3         TEST FOR 3211          @ZA11126
         BNE   NPATH                    NO DON'T NEED RETRY       M6373
*
*  IF THE DEVICE IS A 3211 THE FOLLOWING CODE SCHEDULES THE
*  ASYNCHRONOUS ROUTINE IGG019FS WHEN ERROR RECOVERY IS POSSIBLE
*
         LA    RWRK2,EIGHT              GET DECREMENT             M6373
         SR    RWRK1,RWRK2              POINT AT COMMAND          M6373
         CLI   NULL(RWRK1),UCSLOAD      UCS LOAD COMMAND          M6373
         BE    NRETIOS                  YES RETURN TO IOS         M6373
         CLI   NULL(RWRK1),SKIP0        SKIP TO CHANNEL 0 COMMAND M6373
         BE    NRET                     YES RETURN TO IOS         M6373
         CLI   NULL(RWRK1),FOLD         FOLD COMMAND              M6373
         BE    NRETIOS                  YES RETURN TO IOS         M6373
         TM    IOBCSW+3,ERR1            TEST FOR UNIT CHECK       M6373
         BNZ   SEEIF2                   YES SEE IF 2ND ENTRY      M6373
         TM    IOBCSW+4,ERR2            TEST FOR ANY OTHER ERRORS M6373
         BNZ   SEEIF2                   YES SEE IF 2ND ENTRY      M6373
         TM    IOBRFLAG,RETRY           DID WE JUST RETRY
         BZ    NPATH                    NO TAKE NORNAL PATH       M6373
*
* A RETRY HAS BEEN SUCCESSFULLY ISSUED. THE NORMAL PATH IS TAKEN.
*
         NI    IOBRFLAG,RTRYOFF         TURN OFF RETRY FLAG
         B     NPATH                    TAKE NORMAL PATH          M6373
*
NRET     NI    IOBRFLAG,SKIPOFF         TURN SKIP FLAG OFF
NRETIOS  EQU   *
         MODESET EXTKEY=ZERO            RESTORE THE IOS KEY      Y02072
         LM    R0,R15,0(RSAVE)          RESTORE THE REGISTERS    Y02072
         BR    RETR                     RETURN TO IOS             M6373
*
SEEIF2   TM    IOBECBCC,ENTRAGAN        SECOND TIME ENTERED     SA61524
         BZ    YES2                     YES BRANCH                M6373
*
         TM    IOBRFLAG,RETRY           DID WE JUST DO RETRY?
         BNZ   NPATH                    YES, TAKE NORMAL PATH     M6373
         CLI   IOBSENS1,SENSFAIL        SEE IF BAD SENSE BYTES @ZA00971
         BNE   NPATH                    BR IF SIMULATED SENSE  @ZA00971
         TM    IOBSENS1,CMNDRTRY        IS COMMAND RETRYABLE      M6373
         BZ    NPATH                    NO,  GET OUT              M6373
         B     NRETIOS                  GO GET OUT                M6373
*
YES2     EQU   *                       ERPS HAVE JUST GIVEN UP @ZA00971
         CLI   IOBSENS1,SENSFAIL       SEE IF SENSE BYTES VALID@ZA00971
         BE    NPATH                   BR IF BAD SENSE BYTES   @ZA00971
         TM    IOBSENS1,CMNDRTRY        IS COMMAND RETRYABLE    SA61524
         BO    CANBE                    YES                       M6373
         NI    IOBRFLAG,RTRYOFF         TURN OFF RETRY FLAG
         B     NPATH                    TAKE NORMAL PATH          M6373
*
CANBE    TM    IOBRFLAG,RETRY           JUST DO RETRY
         BZ    GORETRY                  NO SET UP TO DO IT        M6373
*
         NI    IOBRFLAG,RTRYOFF         TURN OFF RETRY FLAG
         OI    IOBRFLAG,SKIPFLAG        INDICATE SKIP TO 0
         BAL   RWRK6,SCHEDIT            SCHEDULE ASYNCH RTN       M6373
         B     NPATH                                              M6373
*
GORETRY  OI    IOBRFLAG,RETRY           TURN ON RETRY FLAG
         BAL   RWRK6,SCHEDIT            SCHEDULE IGG019FS         M6373
         MODESET EXTKEY=ZERO            RESTORE THE IOS KEY      Y02072
         LM    R0,R15,0(RSAVE)          RESTORE REGS             Y02072
         B     12(RETR)                 RETURN TO IOS; KEEP RQE; DON'T
*                                       POST                      M6373
SCHEDIT  EQU   *
         LR    RWRK7,RSAVE              SAVE THE SAVE AREA PTR   Y02072
         L     BASR,CVTPTR                                        M6373
         L     BASR,4(BASR)             GET ADDR EXIT EFFECTOR    M6373
         SPACE 2
***********************************************************************
*    CHANGE THE KEY BACK TO IOS KEY BEFORE BRANCH TO EXIT EFFECTOR
***********************************************************************
         SPACE
         MODESET EXTKEY=ZERO            RESTORE THE IOS KEY      Y02072
         SPACE
         BALR  RETR,BASR                PUT IQE OF LIST           M6373
         SPACE
         LM    RSAVE,BASR,SAVE13(RWRK7) RESTORE THE REGS         Y02072
***********************************************************************
*    CHANGE THE KEY TO THAT SPECIFIED IN RQE
***********************************************************************
         SPACE
         MODESET KEYADDR=RQEPRT,WORKREG=10   ISSUE MODESET       Y02072
         SPACE
         BR    RWRK6                    RETURN TO CALLER          M6373
         EJECT
***********************************************************************
*        FIRST THE ICB IN WHICH THE INTERUPT OCCURRED MUST BE FOUND.  *
*        THIS IS ACCOMPLISHED BY COMPARING THE ADDRESS IN THE IOBCSW  *
*        TO THE BEGINNING AND ENDING ADDRESSES OF THE ICBS.  THE MAIN *
*        IOB AND THE ICBS ARE ARRANGED IN CORE AS FOLLOWS.            *
*                                                                     *
*        ________________________________________________________     *
*        ×                                                      ×     *
*        ×           MAIN IOB                                   ×     *
*        × - - - - - - - - - - - - - - - - - - - - - - - - - - -×     *
*        ×       MAIN IOB CCWS  (DIRECT ACCESS ONLY)            ×     *
*        ×______________________________________________________×     *
*        ×                                                      ×     *
*        ×           FIRST ICB                                  ×     *
*        × - - - - - - - - - - - - - - - - - - - - - - - - - - -×     *
*        ×       FIRST ICB CCWS                                 ×     *
*        ×______________________________________________________×     *
*        ×                                                      ×     *
*        ×           SECOND ICB                                 ×     *
*        × - - - - - - - - - - - - - - - - - - - - - - - - - - -×     *
*        ×       SECOND ICB CCWS                                ×     *
*        ×______________________________________________________×     *
*        ////////////////////////////////////////////////////////     *
*        ________________________________________________________     *
*        ×                                                      ×     *
*        ×           LAST ICB                                   ×     *
*        × - - - - - - - - - - - - - - - - - - - - - - - - - - -×     *
*        ×       LAST ICB CCWS                                  ×     *
*        ×______________________________________________________×     *
*                                                                     *
*        IF THE CSW ADDRESS IS LESS THAN THE ICB BEGINNING ADDRESS    *
*        THEN THIS CANNOT BE THE ICB THAT THE INTERUPT OCCURED ON.    *
*        IF THE CSW ADDRESS IS GREATER THEN THE ICB BEGINNING         *
*        ADDRESS IT IS THEN COMPARED TO THE ENDING ADDRESS. IF IT     *
*        IS ALSO LESS THEN THE ENDING ADDRESS THEN THIS IS THE ICB    *
*        THAT HAD THE INTERUPT.  EACH ICB BEFORE THE INTERUPT IS      *
*        HANDLED AS SUCCESSFUL.  THE IOBCICB POINTER IS UPDATED AND   *
*        THE ICB CCWS ARE REMOVED FROM THE CHAIN. THE ICBECB IS ALSO  *
*        POSTED AS COMPLETE WITH NO ERRORS.  WHEN THE ICB IN WHICH    *
*        THE INTERUPT OCCURRED IS FOUND IT IS HANDLED AT PCIN5.       *
*                                                                     *
***********************************************************************
NPATH    EQU   *                                                  M6373
         TM    0(RIOB),IOBBKSPC         WAS LAST I/O OPER A      A32514
*                                        POINT?                  A32514
         BO    NRETIOS                  YES, RETURN TO IOS       Y02072
NOTPOINT EQU   *                        POINT NOT LAST IO        A32514
         L     RWRK1,24(RIOB)           PICK UP CCW AD.FROM CSW
         LA    RWRK1,0(RWRK1)
         SR    R5,R5                    CLEAR FOR THE NOP OFFSET. 12356
         L     RWRK2,FIRSTICB(RIOB)     GET ICB ADDR.             12295
         LA    RWRK2,0(RWRK2)           CLEAR HI BYTE.            12295
         LA    RINSERT,X'30'(0,RIOB)    GET END OF BASIC MAIN IOB
         TM    DCBDEVT,DABIT            IS THIS DIRECT ACCESS
         BZ    AROUND                   NO  GO AROUND
         LA    RINSERT,X'30'(RINSERT)   ADD TO COMPENSATE FOR D.A.
AROUND   EQU   *
         CR    RWRK1,RINSERT            COMPARE CSW ADDR TO END ADDR
         BH    OK                       IF GREATER ,OK, GO ON
         TM    PCIBYTE+16(RIOB),IOBPCI  PCI ENTRY                M4587
         MVI   PCIBYTE+16(RIOB),X'00'   RESTORE INC FLD TO ZERO
         BO    EXITNORM                 BRANCH IF PCI ENTRY      M4587
         LA    RINSERT,X'38'(0,RIOB)
         B     PCIN16             CSW IS IN MAIN IOB OR IOS/ERPS  23228
* FOR MVS WE MUST DETERMINE IF THE INTERRUPT IS GREATER        @ZA02259
* THAN THE END OF THE ICB STRING AS THE ERPS CAN INTERRUPT     @ZA02259
* WITH AN ADDRESS FROM THE HIGH RANGE.                         @ZA02259
OK       EQU   *                                               @ZA02259
         SR    R6,R6              ZERO REG 6                   @ZA02259
         SR    R7,R7              ZERO REG 7                   @ZA02259
         SR    R8,R8              ZERO REG 8                   @ZA02259
         IC    R8,DCBBUFNO        PUT BUFFER NUMBER IN REG 8   @ZA02259
         TM    DCBCIND2,DCBCNQSM  ARE WE RUNNING QSAM ???      @ZA02259
         BO    *+8                BRANCH FORWARD IF YES        @ZA02259
         IC    R8,DCBNCP          PUT BSAM NCP IN REG 8        @ZA02259
         IC    R7,DCBIOBL         PUT IOB LENGTH IN REG 7      @ZA02259
         SLA   R7,3(0)            MULTIPLY BY 8                @ZA02259
         MR    R6,R8              GET TOTAL LENGTH             @ZA02259
         AR    R7,RINSERT         ADD IOB END TO TOTAL         @ZA02259
         CR    RWRK1,R7           COMPARE TOTAL TO CSW         @ZA02259
         BH    PCIN16             IT IS HIGH SO THE CSW        @ZA02259
* SHOWS THE INTERRUPT DID NOT COME FROM THE ICB STRING         @ZA02259
         OC    0(1,RIOB),PCIBYTE+16(RIOB) MOVE THE FLAG FROM
*                                       TEMP STORAGE
         MVI   PCIBYTE+16(RIOB),X'00'   CLEAR FLAG
*                                        LEAVE THIS EXIT.
         SR    RINSERT,RINSERT
         TM    0(RWRK2),IOBWRITE        IS THIS OUTPUT
         BO    OUT001                   YES,BRANCH AROUND
         TM    DCBCIND1,DCBCNEVA        IS VOLUME FULL BIT ON
         BNO   OUT001                   NO, BRANCH                23771
         TM    0(RIOB),IOBPCI           TEST FOR PCI             A32541
         BO    EXITNORM                 BRANCH IF PCI            A32541
         OI    28(RIOB),UNITEXC         TURN ON UNIT EXCEPTION    23771
         B     PCIN8AA                                            23771
OUT001   EQU   *
PCIN0    EQU   *
         CR    RWRK1,RWRK2              COMPARE CSW ADDRESS TO ICB PTR.
         BH    PCIN1A                   BRANCH IF CSW HIGH        19395
PCIN1B   EQU   *
         LR    RWRK1,RWRK2
         BAL   R8,OUTIN                 GO GET NOP
         AR    RWRK1,R5                 COMPUTE NOP ADDRESS
         ST    RWRK1,16(RWRK2)          STORE IN ICB CSW       @ZA18996
         XC    22(2,RWRK2),22(RWRK2)    ZERO CSW COUNT         @ZA18996
         MVI   20(RWRK2),CHEND          CHANNEL END TO ICB CSW @ZA18996
         L     RWRK3,0(RWRK2)           GET NEXT ICB PTR
         L     RWRK3,CPSTART(RWRK3)     GET CHANNEL PROGRAM START
*                                        ADDRESS OF NEXT ICB.
         CLI   IOBCCW,SETSC            IS THIS AN RPS DEVICE?  @ZA11106
         BNE   NOTRRA                   BRANCH NO              @ZA11106
         CLI   D8(RWRK1),READSC         NEXT COMND READ SECTOR   YM5355
         BNE   NOTRRA                   BRANCH NO                20201
         ST    RWRK3,D4(RWRK1)          PUT ADDR IN RH NOP/TIC   20201
         LA    RINSERT,D8(RWRK1)        RD SECTOR ADDR           20201
         ST    RINSERT,D0(RWRK1)        PUT IN CCW               20201
         MVI   D0(RWRK1),TICNOP         PUT IN TICNOP CMND       20201
         B     FEATA                    GO AROUND NEXT           20201
NOTRRA   EQU   *                                                 20201
         ST    RWRK3,0(RWRK1)           STORE NEXT ICBS C.P.STARTAD
*                                        IN THIS ICBS  NOP CCW
         MVI   0(RWRK1),NOP             CHANGE TIC TO NOP
FEATA    EQU   *                                                 20201
         LA    RINSERT,8
         SR    RWRK1,RINSERT            GET CCW BEFORE NOP
         OI    4(RWRK1),CC              TURN ON CC FLAG IN IT
         LA    RWRK1,8(RWRK1)
         TM    DCBDEVT,TAPE             IS IT TAPE
         BZ    PCIN2                    NO, BRANCH AROUND
         LH    RWRK3,INCREMNT(RWRK2)    PICK UP BLOCK COUNT INCREMENT
         A     RWRK3,DCBBLKCT           UPDATE BLOCK COUNT
         ST    RWRK3,DCBBLKCT           AND RETURN IT.
PCIN2    EQU   *
         SR    RETR,RETR                CLEAR 14 SO POST ROUTINE
*                                        WILL POST  7F
         EJECT
***********************************************************************
*
*   SET UP TO POST ECB
*
*       REG 10   COMPLETION CODE WITH WHICH TO POST
*       REG 11   ADDRESS OF ECB TO BE POST'ED
*       REG 13   ADDR OF A 16 FW REGISTERS SAVEAREA TO BE USED BY POST
*
*       TO USE THE POST SUBROUTINE AS A CLOSED SUBROUTINE,
*       BAL   6,PCIN3+4        AND SET THE CONDITION TO EITHER
*       X'7F'  OR X'41'  BY USING REG 14 AS AN INDICATOR.
*       IF REG 14 = 0, POST ECB AS 7F
*       IF REG 14 = NOT ZERO, POST ECB AS 41
*
***********************************************************************
         SPACE
         LA    R6,PCIN3B                GET ADDRESS TO LEAVE SUBRT
PCIN3AA  EQU   *
         LR    RWRK7,RWRK2              SAVE ICB POINTER         Y02072
         L     RWRK2,ECBPTR(RWRK2)      GET ECB PTR OF ICB
         LA    RWRK2,0(RWRK2)           CLEAR HI-ORDER BYTE       M0477
         SPACE
         USING ECB,RWRK2                ECB REGISTER             Y02072
         SPACE
*    VALIDITY CHECK ECB BEFORE BRANCH TO POST SO THAT WHEN THE
*    KEYS ARE NOT THE SAME IT WILL CAUSE PROGRAM CHECK
         L     R10,ECBCC                VALIDITY CHECK ECB     @ZA11654
CSWP     CS    R10,R10,ECBCC            LOCK ON ECB            @ZA11654
         BNE   CSWP                     ECB CHANGED BY WAIT    @ZA11654
         SPACE
         DROP  RWRK2
         SPACE
         L     R10,ECBNORMW             ASSUME ECB OK, LOAD POST YM1002
*                                        CODE OK WORD            Y02072
         LTR   RETR,RETR                IS ECB TO BE X'41'
         BZ    SEVENF                   NO,BRANCH
         L     R10,ECBPERRW             LOAD IN ERROR CONDITION  YM1002
*                                        CODE WORD               Y02072
         SPACE
***********************************************************************
*    CHANGE THE KEY BACK TO IOS KEY BEFORE BRANCH TO POST
***********************************************************************
         SPACE
SEVENF   MODESET EXTKEY=ZERO            RESTORE THE IOS KEY      Y02072
         EJECT
         PUSH  USING
         LR    RWRK3,R6                 SAVE SUBROUTINE RET PT   Y02072
         LM    R0,R8,0(RSAVE)           RESTORE INPUT REGS       Y02072
         L     RETR,SAVE14(RSAVE)       RESTORE RETURN TO IOS    Y02072
*                                        ADDRESS                 Y02072
         PCIPOST ECB=(11),SVAREA=(13),RQE=(1),CODE=(10) POST     Y02072
         STM   R0,R15,0(RSAVE)          RESTORE REGS IN SAVEAREA Y02072
*                                        TO INPUT ORDER          Y02072
         LR    RWRK2,RWRK7              RESTORE ICB PTR          Y02072
         LR    R6,RWRK3                 RESTORE SUBRTN RETURN PT Y02072
         LA    RWRK3,IOBSTDRD-IOBPREFX  PREFIX LENGTH            Y02072
         SR    RIOB,RWRK3               IOB PREFIX               Y02072
         SR    R5,R5                    CLEAR REGISTER           Y02072
         POP   USING                                             Y02072
*    CHANGE THE KEY TO THAT SPECIFIED IN RQE                     Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=14  ISSUE MODESET        Y02072
         SPACE
         BR    R6                       GET OUT OF POST SUBROUTINE
PCIN3B   EQU   *
         MVC   9(3,RIOB),1(RWRK2)       MOVE NEXT ICB ADDR.TO M.IOB
         L     RWRK1,24(RIOB)           PICK UP CCW ADDRESS FROM CSW
         LA    RWRK1,0(RWRK1)           CLEAR HIGH BYTE
         L     RWRK2,0(RWRK2)           PICK UP NEXT ICB ADDR.FOR NEXT
*                                        TIME THROUGH LOOP
         LA    RWRK2,0(RWRK2)           CLEAR HIGH BYTE
*                                        RWRK1 HAS CSW'S CCW ADDRESS
         B     PCIN0
         SPACE 2
PCIN1A   EQU   *
*                                       COME HERE IF CSW  ADDRESS
*                                       IS GREATER THAN OR EQUAL
*                                       TO ICB POINTER.
         BAL   R8,OUTIN                 GO GET NOP OFFSET
         LA    RWRK3,8(R5,RWRK2)        GET NOP ADDRESS + 8
         CLI   IOBCCW,SETSC            IS THIS RPS DEVICE?     @ZA11106
         BNE   NOTRRD                   BRANCH NO              @ZA11106
         CLI   0(RWRK3),READSC          NEXT CMND READ SECTOR    YM5355
         BNE   NOTRRD                   BRANCH NO                20201
         LA    RWRK3,D8(RWRK3)          INCR FOR RD SECTOR       20201
NOTRRD   EQU   *                                                 20201
         CR    RWRK1,RWRK3              COMPARE CSW ADDRESS TO ICB+OFFS
         BH    PCIN1B                   CSW GREATER--BRANCH
*                                       CSW ADDRESS IS LESS THAN
*                                       OR EQUAL TO ICB + 8 + NOP OFFS
         TM    0(RIOB),IOBPCI           WAS THIS PCI ENTRY
         BO    EXITNORM                 BRANCH IF PCI
*                                        FALL THROUGH IF NOT PCI
         EJECT
***********************************************************************
*        COME HERE IF CHANNEL END FOUND
***********************************************************************
PCIN5    MVC   16(6,RWRK2),24(RIOB)     MOVE CSW INTO ICB BECAUSE C.E.
*                                       WAS FOUND.  RWRK2 HAS ICB ADDR.
         XC    22(2,RWRK2),22(RWRK2)    ZERO CSW COUNT
         MVC   10(2,RWRK2),18(RIOB)     MOVE IN 2 SENSE BYTES
         TM    30(RWRK2),X'80'          IS SPECIAL VOL FULL BIT ON
         BZ    PCIN5A                   NO, BRANCH             @ZA26933
         OI    20(RWRK2),UNITEXC        SET UNIT EXCEPTION IN  @ZA26933
         OI    28(RIOB),UNITEXC         IOB AND ICB            @ZA26933
         B     PCIN6A                   PROCESS UNIT EXCEPTION @ZA26933
PCIN5A   TM    28(RIOB),UNITEXC         TEST FOR UNIT EXCEPTION@ZA26933
         BNO   PCIN7                    BRANCH IF NOT UNIT EXCEP.
         TM    DCBDEVT,TAPE             IS THIS TAPE
         BNO   NOTAPE3                  NO  GO AROUND
         TM    28(RIOB),UNITCHEK        IS THERE A UNIT CHECK
         BNO   NOTAPE3                  NO  GO AROUND
         TM    0(RWRK2),IOBWRITE        IS THIS OUTPUT?        @ZA26933
         BZ    PCIN7                    NO, BRANCH             @ZA33346
         OI    30(RWRK2),X'80'          TURN ON SPECIAL VOL FULL BIT
         B     PCIN7                    GO TO UNIT CHECK HANDLER
NOTAPE3  EQU   *
         TM    DCBDEVT,X'40'            IS UNIT RECORD  USED
         BZ    PCIN6A                   NO BRANCH
         TM    0(RWRK2),IOBWRITE        IS THIS OUTPUT
         BNO   PCIN6A                   NO, BRANCH                26016
         SH    RWRK1,CON8               POINT TO COMMAND CODE     26016
         TM    0(RWRK1),X'03'           SPACE ONLY COMMAND        26016
         BO    RESTWRT                  YES, BRANCH            @ZA08874
         B     PCIN7                                              26016
PCIN6A   EQU   *
*                                       UNIT EXCEPTION FOUND OR
*                                       ERROR WAS PROCESSED ALREADY
         NI    30(RWRK2),X'7F'          TURN OFF ''SPECIAL VOL FULL''
         NI    0(RIOB),255-IOBABAPP     TURN OFF ERROR INDICATOR
         MVC   FIRSTICB+1(3,RIOB),1(RWRK2) MOVE LINK FLD TO MAINIOB
         MVI   4(RIOB),ECBPERR          SET IOB COMPLETE IN ERROR
         LA    RETR,ECBPERR             SET FLAG TO REFLECT CC=41
         BAL   R6,PCIN3AA               GO TO POSTING SUBROUTINE
         TM    DCBDEVT,DABIT            TEST FOR DIRECT ACCESS
         BO    PCIN6C                   YES IT IS- BRANCH
         L     RWRK3,0(RWRK2)           GET NEXT ICB
         MVC   33(3,RIOB),25(RWRK3)     MOVE CHANNEL PROG START ADDRESS
*                                       FROM ICB TO MAINIOB
         TM    DCBDEVT,TAPE             IS TAPE BEING USED
         BZ    NOTAPE1                  NO BRANCH
         TM    0(RWRK2),IOBWRITE        IS THIS OUTPUT            17438
         BO    UPDATE                   YES, UPDATE BLK CNT       17438
         TM    28(RIOB),UNITEXC         IS THIS UNIT EXCEPTION
         BO    NOTAPE1                  YES,DON'T UPDATE BLOCK COUNT
UPDATE   LH    RWRK3,28(RWRK2)          UPDATE THE BLOCK          17438
         A     RWRK3,DCBBLKCT           COUNT IN THE DCB USING
         ST    RWRK3,DCBBLKCT           INCREMENT IN DCB PTR IN ICB
NOTAPE1  EQU   *
         B     PCIN6D
PCIN6C   EQU   *
         L     RWRK3,0(RWRK2)           GET NEXT ICB
         MVC   48(8,RIOB),32(RWRK3)     MOVE NEXT ICB'S FDAD TO MAINIOB
         CLI   MIOBCHP(RIOB),SETSC      RCD READY CHP            20201
         BNE   PCIN6CX                  BRANCH IF NO             20201
         MVC   D81(B3,RIOB),D25(RWRK3)  MOVE CHP START TO TIC    20201
*                                       MIOB                     20201
         B     PCIN6CY                  BRANCH AROUND            20201
PCIN6CX  EQU   *                                                 20201
         MVC   73(3,RIOB),25(RWRK3)     MOVE CHANNEL PROGRAM START
*                                        ADDRESS FROM ICB TO FINAL TIC
*                                        OF MAINIOB
PCIN6CY  EQU   *                                                 20201
PCIN6D   EQU   *
         BAL   R8,OUTIN                 GO GET NOP OFFSET
         LA    RWRK3,0(R5,RWRK2)        GET NOP ADDRESS OF ERR ICB
         L     RWRK4,0(RWRK2)           GET NEXT ICB PTR
         L     RWRK4,24(RWRK4)          GET CHANNEL PRG.START ADDRESS
*                                        OF NEXT ICB.
         CLI   IOBCCW,SETSC            IS THIS AN RPS DEVICE?  @ZA11106
         BNE   NOTRRH                   BRANCH NO              @ZA11106
         CLI   D8(RWRK3),READSC         READ SECTOR CMND NEXT    YM5355
         BNE   NOTRRH                   BRANCH NO                20201
         ST    RWRK4,D4(RWRK3)          PUT ADDR IN RH OF        20201
*                                        TIC/NOP                 20201
         BAL   R7,NOPTIC                GO BUILD NOP/TIC         20201
         B     FEATH                    GO AROUND NEXT INSTS     20201
NOTRRH   EQU   *                                                 20201
         ST    RWRK4,0(RWRK3)           STORE IN THIS ICBS NOP CCW
         MVI   0(RWRK3),NOP             MOVE IN A NOP
FEATH    EQU   *                                                 20201
         LA    RINSERT,8
         SR    RWRK3,RINSERT            GET CCW BEFORE NOP
         OI    4(RWRK3),CC              TURN ON CC FLAG IN IT
         LA    RWRK3,8(RWRK3)
         TM    0(RIOB),IOBPCI           PCI ENTRY                 19524
         BO    EXITNORM                 YES, BRANCH               19524
         B     EXITSKIP
PCIN7    EQU   *
*                                       TEST FOR ERRORS.
*                                       PCI AND UNIT EXCEP. NOT FOUND
         TM    28(RIOB),UNITCHEK        TEST FOR UNITCHECK
         BO    PCIN8A                   BRANCH ON YES
CHAN9    EQU   *
         TM    29(RIOB),ERRORS          TEST FOR OTHER ERRORS   XA02374
         BNZ   NOTPRINT                                           19768
*                                       ERRORS.
         TM    29(RIOB),RONGSIZE        TEST FOR INCORRECT LENTH
         BNO   PCIN10                   NO BRANCH
         TM    0(RWRK2),IOBWRITE        IS THIS OUTPUT
         BO    PCIN8AA                  YES....IF OUTPUT WRONG LENGTH
*                                        GO TO PERM ERROR HANDLER
         B     PCIN9                    BRANCH TO INPUT LENGTH CHECK
         SPACE 2
PCIN8A   EQU   *
*                                       BEGINNING OF ERROR HANDLING
*                                       SECTION
         TM    DCBDEVT,DCBDVPR1         IS THIS A PRINTER ?
         BNO   NOTPRINT                 NO, GO ARROUND            15065
         TM    18(RIOB),X'01'           TEST FOR CHANNEL 9        16550
         BZ    NOTPRINT                 NO, BRANCH                19768
         TM    18(RIOB),X'F2'           ERRORS WITH CHANNEL 9     19768
         BNZ   NOTPRINT                 YES, BRANCH               22216
         SH    RWRK1,CON8               POINT TO COMMAND CODE     22216
         TM    0(RWRK1),X'03'           SPACE ONLY COMMAND        22216
         BNO   CHAN9                    NO, BRANCH                22216
RESTWRT  EQU   *              WHEN THERE IS A CHAN 12 OR A     @ZA08874
*                             CHAN 9 ON A PRINTER. THE CHAN    @ZA08874
*                             PROGRAM WILL BE RESTARTED FROM   @ZA08874
*                             THE WRITE.                       @ZA08874
         LA    RWRK1,8(RWRK1)           RESET TO THE WRITE CCW @ZA08874
         ST    RWRK1,IOBSTART           SET IOBSTART TO WRITE  @ZA08874
         TM    28(RIOB),X'01'           WAS THIS A CHAN 12     @ZA08874
         BO    RESTWRT6                 YES-GO SET FLAG        @ZA08874
         OI    DCBIFLGS,DCBIFC9         NO-SET CHAN 9          @ZA08874
         B     MOREXIT                  RE-EXCP                @ZA08874
RESTWRT6 OI    DCBIFLGS,DCBIFC12        SET CHANNEL 12         @ZA08874
         B     MOREXIT                  RE-EXCP                @ZA08874
NOTPRINT EQU   *
         TM    0(RIOB),IOBABAPP         TEST  ERROR PREVIOUSLY PROCESST
*                                        BIT TO SEE IF THIS IS 2ND PASS
         BZ    PCIN8B                   NO-FIRST TIME, BRANCH
PCIN8AA  EQU   *
         MVC   22(2,RWRK2),30(RIOB)     MOVE IN COUNT RESIDUE
         NI    0(RIOB),255-IOBABAPP     YES,TURN IT OFF
         B     PCIN6A                   AND GO TO PERM ERROR SECTION
PCIN8B   EQU        *
*                                       ERROR HAS NOT BEEN
*                                       PROCESSED BEFORE
         BAL   R8,OUTIN                 GO GET NOP OFFSET
         LA    RWRK3,0(R5,RWRK2)        GET NOP ADDRESS
         L     RWRK4,0(RWRK2)           GET NEXT ICB POINTER
         L     RWRK4,24(RWRK4)          GET C P STARTAD OF NEXT ICB
         TM    0(RWRK3),NOP             IS IT A NOP NOW
         BO    PCIN8C                   YES BRANCH
         CLI   D8(RWRK3),READSC         READ SECTOR CMND NEXT    YM5355
         BNE   PCIN8B1                  BRANCH NO                20201
         ST    RWRK4,D4(RWRK3)          PUT IN RH OF NOP/TIC     20201
         TM    D0(RWRK3),TICNOP         NOP TIC                  20201
         BO    PCIN8C2                  BRANCH YES               20201
         BAL   R7,NOPTIC                GO BUILD NOP/TIC         20201
         OI    0(RIOB),IOBRSTCH         TURN ON RESTART CHAIN    20201
*                                        BIT                     20201
         B     PCIN8C2                  GO AROUND NEXT           20201
PCIN8B1  EQU   *                                                 20201
         OI    0(RIOB),IOBRSTCH         TURN ON RESTART CHAIN    20201
*                                        BIT                     20201
PCIN8C   EQU   *
         ST    RWRK4,D0(RWRK3)          PUT ADDR IN NOP          20201
         MVI   D0(RWRK3),NOP            RESTORE NOP CMND         20201
PCIN8C2  EQU   *                                                 20201
*                                       TO PREVENT TIC-ING ON TO AN ICB
*                                       DURING ERROR RECOVERY, TURN OFF
*                                       THE CHAIN COMMAND FLAG IN THE
*                                       CCW JUST BEFORE THE NOP/TIC.
         LA    RINSERT,8
         SR    RWRK3,RINSERT            GET CCW BEFORE NOP/TIC
         NI    4(RWRK3),255-CC          TURN OFF CC FLAG IN CCW
         TM    DCBDEVT,DABIT            TEST FOR DIRECT ACCESS
         BO    PCIN8D                   YES, BRANCH
         MVC   33(3,RIOB),25(RWRK2)     MOVE CHANNEL PROGRAM START ADDR
*                                        FROM ICB TO MAINIOB
         B     PCIN8E
PCIN8D   EQU   *
         CLI   MIOBCHP(RIOB),SETSC      RCD READ CHP             20201
         BNE   PCIN8DX                  BRANCH IF NO             20201
         MVC   D81(B3,RIOB),D25(RWRK2)  MOVE CHP ADDR TO TIC     20201
*                                       MIOB                     20201
         B     PCIN8DZ                  BRANCH AROUND NORM MOVE  20201
PCIN8DX  EQU   *                                                 20201
         MVC   73(3,RIOB),25(RWRK2)     MOVE CHANNEL PROG START ADDRESS
*                                        TO FINAL TIC OF MAINIOB
PCIN8DZ  EQU   *                                                 20201
         MVC   48(8,RIOB),32(RWRK2)     MOVE MBB--R TO MAINIOB
PCIN8E   EQU   *
*                                        ALLOW IOS ERROR RECOVERY
         OI    0(RIOB),IOBABAPP         TURN ON THE 'ERROR PREVIOUSLY
*                                        PROCESSED' INDICATOR
         B     EXITNORM
PCIN9    EQU   *
*                                       COME HERE IF WRONG LENGTH
*                                       INDICATOR IS ON
*
*                                       A VALID TRUNCATED RECORD HAS A
*                                       LENGTH WHICH IS A MULTIPLE OF
*                                       LOGICAL RECORD LENGTH.
         SR    R6,R6                    CLEAR EVEN REG
         LH    R7,30(RIOB)              PUT CSW COUNT RESIDUE IN ODD
*                                        REG OF EVEN/ODD PAIR
         LH    RINSERT,DCBLRECL         GET LOGICAL RECORD LENGTH AS
*                                        DIVISOR
         DR    R6,RINSERT               DIVIDE COUNT RESIDUE BY LRECL
*                                       AFTER THE DIVISION, THE 32 BIT
*                                       SIGNED REMAINDER IS IN EVEN
*                                       REG.  (R0) AND THE 32 BIT
*                                       QUOTIENT IS IN ODD REG(1)
*
*                                       IF A TOO LARGE RECORD IS READ,
*                                       THE CSW COUNT RESIDUE WILL BE
*                                       ZERO AND THE INCORRECT LENGTH
*                                       BIT WILL BE ON.
*
*                                       IF THE REMAINDER IS GREATER
*                                       THAN ZERO, IT IS AN INVALID
*                                       RECORD.
*                                       IF THE QUOTIENT IS ZERO,
*                                       THE DIVIDEND WAS ZERO AND
*                                       THE RECORD IS WRONG LENGTH.
*
         LTR   R6,R6                    TEST REMAINDER
         BP    PCIN8AA                  BRANCH IF REMAINDER    @ZA17184
*                                        GREATER THAN ZERO.
         LTR   R7,R7                    TEST QUOTIENT
         BZ    PCIN6A                   BRANCH IF QUOTIENT IS ZERO
         TM    DCBRECFM,DCBRECSB        IS THIS DATASET STANDARD F
         BZ    PCIN15                   NO BRANCH
*                                        STANDARD F INPUT FOUND
         L     RWRK3,0(RWRK2)           GET NEXT ICB
         OI    20(RWRK3),UNITEXC        TURN ON UNIT EXCEPTION
         OI    20(RWRK3),CHEND          TURN ON CE
         OI    DCBCIND1,DCBCNEVA        TURN ON VOL FULL BIT
         B     PCIN15
PCIN10   EQU   *
         L     RWRK3,0(RWRK2)           GET PTR TO NEXT ICB
         TM    DCBDEVT,X'20'            IS IT DIRECT ACCESS ?
         BO    PCIN11                   YES, BRANCH
         MVC   32(4,RIOB),24(RWRK3)     MOVE CH.P.START ADDR FROM
*                                        ICB TO THE MAINIOB
         TM    DCBDEVT,TAPE             IS TAPE BEING USED
         BZ    NOTAPE2                  NO BRANCH
         LH    RWRK3,28(RWRK2)          UPDATE THE BLOCK
         A     RWRK3,DCBBLKCT           COUNT IN THE DCB USING
         ST    RWRK3,DCBBLKCT           INCREMENT IN DCB PTR IN ICB
NOTAPE2  EQU   *
         B     PCIN12
PCIN11   EQU   *
         MVC   48(8,RIOB),32(RWRK3)     MOVE COUNT TO MAINIOB
         CLI   MIOBCHP(RIOB),SETSC      IS THIS RCD READY CHP    20201
         BNE   PCIN11X                  NO BRANCH                20201
         MVC   D81(B3,RIOB),D25(RWRK3)  MOVE CHP ADDR TO MIOB    20201
*                                        TIC                     20201
         B     PCIN11Z                  BRANCH AROUND NORM MOVE  20201
PCIN11X  EQU   *                                                 20201
         MVC   73(3,RIOB),25(RWRK3)     MOVE CHANNEL PROG START ADDRESS
*                                        FROM ICB TO FINAL TIC MAINIOB
PCIN11Z  EQU   *                                                 20201
PCIN12   EQU   *
*                                       THIS SECTION SETS IOB AND
*                                       ICB COMPLETE WITHOUT ERROR
         SR    RETR,RETR                SET FLAG TO REFLECT CC=7F
         BAL   R6,PCIN3AA               GO TO POST SUBROUTINE
         MVC   9(3,RIOB),1(RWRK2)       GET PTR TO NEXT ICB AND
         LR    RWRK1,RWRK2              SAVE ICB POINTER
         L     RWRK2,0(RWRK2)           STORE IN '1ST ICB' OF MAINIOB
         LR    R6,RWRK2                 SAVE CONTENTS
         LR    RWRK2,RWRK1              WORK 2 NEEDED IN SUBRT
         BAL   R8,OUTIN
         LR    RWRK2,R6
         LA    RWRK3,0(R5,RWRK1)        GET NOP ADDRESS
         CLI   IOBCCW,SETSC            IS THIS AN RPS DEVICE?  @ZA11106
         BNE   NOTRRP                   BRANCH NO              @ZA11106
         CLI   D8(RWRK3),READSC         READ SECTOR CMND NEXT    YM5355
         BNE   NOTRRP                   BRANCH NO                20201
         MVC   D5(B3,RWRK3),D25(RWRK2)  IN RH OF NOP             20201
         B     FEATP                    GO AROUND NEXT           20201
NOTRRP   EQU   *                                                 20201
         MVC   1(3,RWRK3),25(RWRK2)     MOVE IN NEXT CP STARTAD  A28707
FEATP    EQU   *                                                 20201
         LA    RINSERT,8
         SR    RWRK3,RINSERT            GET CCW BEFORE NOP
         OI    4(RWRK3),CC              TURN ON CC  FLAG IN IT
         AR    RWRK3,RINSERT            RESTORE PTR              20201
         TM    0(RIOB),IOBABAPP         HAS ERROR BEEN PREVIOUSLY PRO-
*                                       CESSED
         BNO   PCIN13                   NO, BRANCH
         NI    0(RIOB),255-IOBABAPP     TURN ERROR INDICATOR OFF
         TM    0(RIOB),IOBRSTCH         IS IT NECESSARY TO RESTART A
*                                        CHAIN OF ICBS
         BO    PCIN14                   YES, BRANCH
PCIN13   EQU   *
         NI    16(RIOB),X'FB'           TURN OFF EXCEPTIONAL COND.13298
         CLI   IOBCCW,SETSC            IS THIS AN RPS DEVICE?  @ZA11106
         BNE   NOTRRS                   BRANCH NO              @ZA11106
         CLI   D8(RWRK3),READSC         READ SECTOR COMND NEXT   YM5355
         BNE   NOTRRS                   BRANCH NO                20201
         L     RWRK2,MIOBCHP(RIOB)      GET SECTOR ADDRESS       20201
         TM    D0(RWRK3),TICNOP         TIC NOP CMND             20201
         BO    CHCKEXIT                 YES, BRANCH AROUND NEXT  20201
FEATSX   EQU   *                                                 20201
         BAL   R7,NOPTIC                GO BUILD NOP/TIC         20201
         B     FEATW                    BRANCH AROUND NEXT       20201
NOTRRS   EQU   *                                                 20201
         TM    0(RWRK3),NOP             IS THE CCW NOW A NOP
         BO    CHCKEXIT                 YES - BRANCH             M6365
*                                       IF NOT A NOP, FALL THROUGH
*                                       AND USE THE EXCP EXIT BELOW
PCIN14   EQU   *
         CLI   IOBCCW,SETSC            IS THIS AN RPS DEVICE?  @ZA11106
         BNE   PCIN14A                  BRANCH NO              @ZA11106
         CLI   D8(RWRK3),READSC         READ SECTOR CMND NEXT    YM5355
         BE    FEATSX                   BRANCH IF YES            20201
PCIN14A  EQU   *                        NOT RECORD READY       @ZA11106
         MVI   0(RWRK3),NOP             MAKE CCW A NOP
FEATW    EQU   *                                                 20201
         NI    0(RIOB),255-IOBRSTCH     TURN OFF CHAIN INDICATOR
         NI    16(RIOB),X'FB'           TURN OFF EXP COND         19798
         B     EXCPEXIT
PCIN15   EQU   *
         BAL   R8,OUTIN                 GO GET NOP OFFSET
         LA    RWRK4,0(R5,RWRK2)        GET NOP
         ST    RWRK4,16(RWRK2)          STORE IN CSW
         MVC   20(4,RWRK2),28(RIOB)     MOVE 2 STATUS BYTES,COUNT AND
         MVC   10(2,RWRK2),18(RIOB)     TWO SENSE BYTES  TO ICB
         MVI   24(RIOB),ZERO            ZERO   FLAG3,
         XC    46(2,RIOB),46(RIOB)      ERROR COUNT,
         NI    16(RIOB),X'C3'          RESET FLAG1 ERRORS        YM5998
         NI    17(RIOB),X'30'          RESET FLAG2 ERRORS        YM5998
         NI    DCBIFLGS,X'3F'           ERROR FLAGS ,
         MVI   28(RIOB),X'0C'           AND THE STATUS
         MVI   29(RIOB),ZERO            ERROR BITS IN CSW
         B     PCIN10                                             17891
PCIN16   EQU   *
         SR    RINSERT,RINSERT
         TM    0(RIOB),IOBABAPP         IS THIS 2ND ENTRY
         BC    1,PCIN6A                 YES,GO POST PERMANENT ERROR
*                                        AND GET OUT.
*    IF NOT 2ND ENTRY   SET  UP TO DO ERROR RECOVERY
         BAL   R8,OUTIN                 GO GET NOP OFFSET
         L     RWRK2,8(RIOB)            GET 1ST ICB
         LA    RWRK3,0(R5,RWRK2)        GET NOP ADDRESS
         LA    RINSERT,8
         SR    RWRK3,RINSERT            GET CCW BEFORE NOP/TIC
         NI    4(RWRK3),255-CC          AND TURN OFF THE CC FLAG
         B     PCIN8E                   GO SET SOME FLAGS AND RETURN
*                                        TO IOS TO ERROR RETRY.
*                                       *** EXITS  ***
CHCKEXIT EQU   *                       SEE IF EOB HAVE ADDED     YM6583
*                                      ANOTHER ICB               YM6583
         LR    RWRK2,RWRK3             GET NOP ADDRESS           YM6583
         O     RWRK3,IOBCEXCP          TURN ON EXCP NEEDED FLAG  YM6583
         CS    RWRK2,RWRK3,12(RIOB)    TURN ON FLAG              YM6583
         BE    NORMPOST                SUCCESSFUL - EOB WILL     YM6583
*                                      EXCP IF ANOTHER ICB IS ADDED
EXCPEXIT EQU   *
         L     RWRK1,8(RIOB)            GET FIRST ICB            A28707
         TM    DCBDEVT,DABIT            DIRECT ACCESS            M3932
         BO    DAEXIT                   BRANCH IF YES            M3932
         MVC   33(3,RIOB),25(RWRK1)     MOVE CP STARTAD FROM     M3932
*                                        ICB TO MAIN IOB
         B     MOREXIT                                           M3932
DAEXIT   EQU   *                                                 M3932
         MVC   48(8,RIOB),32(RWRK1)     MOVE COUNT TO MAIN IOB   A28707
         CLI   MIOBCHP(RIOB),SETSC      RPS USED                 20201
         BNE   NOTRPS                   BRANCH NO                20201
         MVC   D81(B3,RIOB),D25(RWRK1)  UPDATE ADDR FOR RPS CHP  20201
         B     RPSMOVED                 AROUND NORMAL MOVE       20201
NOTRPS   EQU   *                                                 20201
         MVC   73(3,RIOB),25(RWRK1)     MOVE CP STARTAD FROM ICB A28707
*                                        TO FINAL TIC IN MAINIOB
RPSMOVED EQU   *                                                 20201
MOREXIT  EQU   *                                                 M3932
         MVI   4(RIOB),ZERO             SET MAIN IOB NOT COMPLETE
         L     RETR,SAVE14(RSAVE)       RESTORE RETURN REG       Y02072
         LA    RETR,EXCP(RETR)
         B     EXIT
NORMPOST MVI   4(RIOB),ECBNORM          POST MAIN IOB 7F         A27322
EXITNORM EQU   *
         L     RETR,SAVE14(RSAVE)       RESTORE RETURN REG       Y02072
         B     EXIT
EXITSKIP EQU   *
         L     RETR,SAVE14(RSAVE)       RESTORE RETURN REGISTER  Y02072
         CLI   DCBDEVT,DCBDVPR3         TEST FOR 3211
         BNE   EXTSKIP2                 BRANCH IF NOT
         TM    IOBRFLAG,SKIPFLAG+RETRY  WAS THE ASYN RTN SCHEDULED ?
         BZ    EXTSKIP2                 BRANCH IF NO
         LA    RETR,12(RETR)            KEEP THE REQUEST ELEMENT
         B     EXIT
EXTSKIP2 EQU   *                        DEVICES OTHER THE 3211
         LA    RETR,SKIP(RETR)          PICK UP SKIP OFFSET
EXIT     EQU   *
         NI    0(RIOB),255-IOBPCI       TURN OFF FLAG
         MODESET EXTKEY=ZERO            RESTORE THE IOS KEY      Y02072
         LM    R0,R12,0(RSAVE)          RESTORE THE REG 0-12     Y02072
         L     R15,SAVE15(RSAVE)        RESTORE REG 15           Y02072
         BR    RETR
NOPTIC   EQU   *                                                 20201
         LA    RINSERT,D8(RWRK3)        GET ADDR OF RD SECTOR    20201
         ST    RINSERT,D0(RWRK3)        PUT IN CCW               20201
         MVI   D0(RWRK3),TICNOP         INSERT TIC CMND          20201
         BR    R7                       RETURN                   20201
OUTIN    EQU   *
         IC    R5,OUTNOP(RIOB)          GET OUTPUT NOP
         TM    0(RWRK2),IOBWRITE        IS THIS ICB OUTPUT
         BCR   1,R8                     IF OUTPUT,  RETURN
         IC    R5,INNOP(RIOB)           GET INPUT NOP
         BR    R8                       RETURN
         EJECT
CON8     DC    H'8'
         DS    0F
ECBPERRW DC    X'41000000'              CP HAS TERMINATED WITH   Y02072
*                                        PERMANENT ERROR         Y02072
ECBNORMW DC    X'7F000000'              CP HAS TERMINATED W/O    Y02072
*                                        ERROR                   Y02072
IOBCEXCP DC    X'80000000'             EXCP NEEDED FLAG          YM6583
         SPACE
* MODULE PATCH AREA
         DS    0H
PATCH    DC    XL((*-IGG019V6)/20)'0'   PATCH AREA               Y02072
MODLEN   EQU   *-IGG019V6               LENGTH OF MODULE         Y02072
         EJECT
         DCBD  DSORG=PS
         EJECT
CVT      DSECT
         CVT
         EJECT
         IHAECB                                                  Y02072
         EJECT
         IEZIOB
         ORG   IOBPREFX+1
IOBRFLAG DS    BL1                FLAGS FOR 3211 ERROR RETRY
         EJECT
         IECDRQE                                                 Y02072
         EJECT
         IHASRB                                                  Y02072
         EJECT
         IHAASVT                                                 Y02072
         EJECT
         IECDIOSB                                                Y02072
         END
