         TITLE 'IGG0191F - OUTPUT, EXCHANGE BUFFER OPEN EXECUTOR '
*MODULE NAME - IGG0191F                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS2 RELEASE 2 DELETIONS                               Y02072
*000350,040400,040600,041000,042280-042300,053400,056000,        Y02072
*060000-060200,060760,092000,09320022800,23400,69200,            Y02072
*74000,74600                                                     Y02072
*                                                                YM3914
*                                                                YM4697
*                                                                YM7595
*          RELEASE 20 DELETIONS
*0972                                                            S20038
*0972024600-024800,033800,052400,060600-060800,064200,067200,    S20201
*0972076600,082200,085400,085800                                 S20201
*          RELEASE 21 DELETIONS
*0082004400,074200,090400-090800,091600-093000,093200-093600     S21042
*
*STATUS CHANGE LEVEL 004
*
*FUNCTION                                                             *
*        1.GET CORE FOR IOB'S AND CHANNEL PROGRAMS
*        2 CLEAR CORE
*        3 CONSTRUCT IOBS AND CHANNEL PROGRAMS FOR DISK AND TAPE
*        4 IT SETS AN AUDIT TRAIL BIT IN THE OPEN WORKAREA       Y02072
*          INDICATING TO FORCE CLOSE THAT THE CORE GETMAINED FOR Y02072
*          THE IOB'S CAN BE FREEMAINED.                          Y02072
*                                                                     *
*ENTRY POINT                                                          *
*        IGG0191F  BY  XCTL
*                                                                     *
*INPUT                                                                *
*        SEE REGISTER DESCRIPTION                                     *
*                                                                     *
*OUTPUT                                                               *
*        SEE REGISTER DESCRIPTION                                     *
*        IOBS AND CHANNEL PROGRAMS                                    *
*                                                                     *
*EXTERNAL ROUTINES-NONE                                               *
*                                                                     *
*EXITS                                                                *
*        NORMAL BY XCTL TO IGG01924 LOAD EXECUTOR
*                                                                     *
*        ERROR - XCTL TO PROB DET (IGG0196M) FOR WTP AND 013 ABEND
*                                                                     *
*TABLES/WORKAREAS                                                     *
*                                                                     *
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 35    WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 36-39 TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR  N TH DCB  (3 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (1 BYTE )
*                   IDTTR OF LAST ROUTINE LOAD       (3 BYTES)
*                   NOT USED                         (1 BYTE)
*
*MACROS ACTION - MODESET, GETMAIN, XCTL, DMABCOND, XCTLTABL      Y02072
*
*MACROS MAPPING - IECDSECS, IGGBCB, IHACCW, DCBD, IEZIOB,        Y02072
*                 IECDSECT, IHAFCAUD                             Y02072
*
*ATTRIBUTES                                                           *
*        REENTRANT,REUSABLE,RUNS IN USER KEY UNLESS              Y02072
*        OTHERWISE SPECIFIED,SUPER STATE                         Y02072
*                                                                     *
*NOTES                                                                *
*        ALL REG EQUATES HAVE AN 'R' AT BEGINNING OR END OF SYMBOL    *
*        THIS ROUTINE IS ONLY USED FOR EXCHANGE BUFFERING.IMBEDDED
*        CONSTANTS FROM THE INSTRUCTION STREAM ARE USED
*                                                                     *
RDCB     EQU   2                       DCB
RBASE    EQU   3                       BASE
RCORE    EQU   4                       WORK AREA ADDRESS
RPAR     EQU   5                       TOP OF PARAMETER LIST
RWTG     EQU   6                       TOP OF WTG TABLE
RPARC    EQU   7                       CURRENT PARAMETER
RWTGC    EQU   8                       CURRENT TRANSFER LOAD
RTIOT    EQU   9                       IOB COUNTER
RBUFADR  EQU   10                      MAINTAINS ADDR OF NEXT    Y02072
*                                         AVAILABLE BUFFER       Y02072
RDEB     EQU   11
RB       EQU   12                      CONSTANT 1(TAPE)RD CNT ADDR DISK
RWK2     EQU   RB                      WORK REGISTER             Y02072
RC       EQU   13                      BUFFER ADDRESS
RD       EQU   14
RJ       EQU   15                      CCW ADDRESS
RWK1     EQU   RJ                      WORK REGISTER             YM7595
RE       EQU   0                       BLK FACTOR DURING CHP CONST
RF       EQU   1                       IOB ADDRESS
DISK     EQU   X'20'
PCI      EQU   X'20'
DOUBLE   EQU   X'02'
*****************************************************************  DMOR
*                                                                  DMOR
* OFFSETS, MASKS, INDICATORS, AND CCW COMMAND CODES
*                                                                  DMOR
FLAGOFF  EQU   4                        CCW FLAG OFFSET          S20201
CNTOFF   EQU   7                        CCW BYTE COUNT OFFSET    S20201
CCWOFF   EQU   8                        CCW LENGTH               S20201
CHPOFF   EQU   24                       OFFSET TO CHP START ADDR S20201
D0       EQU   0                        DISP OF ZERO             S20201
D1       EQU   1                        DISP OF ONE              S20201
D2       EQU   2                        DISP OF TWO              S20201
D4       EQU   4                        DISP OF FOUR             S20201
D6       EQU   6                        DISP OF SIX              S20201
D8     EQU     8                        DISP OF EIGHT            S20201
CC       EQU   X'40'                    COMMAND CHAINING FLAG    S20201
SETSC    EQU   X'23'                    SET SECTOR CCW COMMAND   S20201
RDSC     EQU   X'22'                    READ SECTOR CCW COMMAND  S20201
NONCARN  EQU   X'20'                    NOW DISCONNECT INDICATOR S20201
FORMATD  EQU   X'20'                    D FORMAT RECORDS         S20038
L        EQU   X'40'                    BUFOFF=(L)               S20038
BLOCKED  EQU   X'10'                    BLOCKED RECORDS          S20038
USASCII  EQU   X'08'                    USASCII TAPE             S20038
ZERO     EQU   X'0'                     CONSTANT OF ZERO         S20038
OABD063  EQU   63                                                S21042
IGG0191F CSECT
*
*
*
*
*
*
*
*
*
         BALR  RBASE,0
         USING ENTRY1,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
*                                                                     *
***********************************************************************
*        THIS SECTION DETERMINES AMT OF CORE NEEDED FOR IOBS
*        AND CHANNEL PROGRAMS
*                                                                     *
***********************************************************************
*                                                                     *
ENTRY1   EQU   *
         B     BEGIN                    BR AROUND CONSTANTS      YM4697
         DC    C'IGG0191F'              MODULE NAME              Y02072
         DC    C' YM7595 '              LAST SHIP CODE           YM7595
         DC    C'02/08/74'              LAST DATE MODIFIED       YM7595
BEGIN    DS    0H                                                Y02072
         L     RDCB,0(0,RPARC)         DCB ADDRESS
         L     RCORE,D4(RWTGC)          INIT O/C/E WORK AREA     S20201
         LA    RDCB,0(0,RDCB)           CLEAR BYTE ZERO
**********************************************************************
*        TEST FOR MODES AND RECORD FORMATS NOT SUPPORTED FOR EXC BUFF
**********************************************************************
*
         TM    DCBOPTCD,USASCII         USASCII TAPE             S20038
         BZ    NEXTCHEK                 NO, BRANCH               S20038
         TM    DCBRECFM,FORMATD         D-FORMAT RECORDS         S20038
         BO    NOALLOW                  YES, GIVE SIMPLE BUFFER  S20038
         CLI   DCBBUFOF,ZERO            BLOCK PREFIX EQUAL ZERO  S20038
         BNE   NOALLOW                  NO, BRANCH - GIVE        S20038
*                                       SIMPLE BUFFERING.
NEXTCHEK EQU   *                                                 S20038
         TM    DCBMACRF+1,X'04'        TEST FOR SUBSTITUTE MODE
         BZ    MMODE                   BRANCH NOT SUBSTITUTE
*
         TM    DCBRECFM,X'C0'          TEST FOR  U RECORD
         BC    9,CONTINUE              BRANCH ON YES
*
         TM    DCBRECFM,X'40'          TEST FOR  V RECORD
         BO    NOALLOW                 'V' NOT ALLOWED
*
MMODE    EQU   *
         TM    DCBMACRF+1,X'14'        TEST FOR MOVE OR SUBS MODE
         BM    CONTINUE                CONTINUE IF EITHER ONE
*
NOALLOW  EQU   *
         NI    DCBCIND1,X'FE'          TURN OFF EXC BIT GOING TO SIMPL
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGID,SOP2               MOVE DISK ID TO WTG      Y02072
         TM    DCBDEVT,DISK            TEST FOR DISK
         BO    RELOOP
         MVC   WTGID,SOP5               TAPE ID TO WTG           Y02072
         DROP  RWTGC                                             Y02072
         B     RELOOP
CONTINUE EQU   *
         TM    DCBRECFM,X'50'           TEST FOR VB RECORD NOT ALLOWED
*                                       WITH MOVE MODE
         BO    NOALLOW                  YES BRANCH
         LA    RDEB,CCWOFF              LOAD CCW LENGTH CONSTANT S20201
         MVI   DCBCNTRL+3,X'01'        SET EOB IND FOR LOAD
*                                                                     *
*        DETERMINE BLOCKING FACTOR,BLOCKSIZE DIVIDED BY LRECL         *
*                                                                     *
         LH    RJ,DCBBLKSI             BLOCKSIZE IS ODD REG
         SR    RD,RD                   CLEAR REG
         LH    RB,DCBLRECL             LOGICAL RECORD LENGTH
         DR    RD,RB                   GET BLOCK FACTOR IN RJ
         TM    DCBRECFM,X'90'          TEST FOR FB RECORD
         BO    E000                    BRANCH  YES
         LA    RJ,1                    GET CONSTANT 1 FOR BLOCK FACTOR
E000     EQU   *
         STH   RJ,DCBEROPT+4           PLACE BLOCKING FACTOR IN DCB
*                                                                     *
*                                                                     *
*        DETERMINE SEGMENT SIZE,BUFFERSIZE DIVIDED BY BLOCKING FACTOR *
*                                                                     *
*                                                                     *
         SR    RC,RC                   CLEAR REG
         AH    RC,DCBBUFL              GET BUFFER LENGTH
         BC    6,F0000                 BRANCH THERE IS A BUFFER LENGTH
*
         STH   RB,DCBPRECL              USE LRECL AS SEG LENGTH
         B     F000A
F0000    EQU   *
         SR    RB,RB                   CLEAR REG
         DR    RB,RJ                   GET SEGMENTED LENGTH
         STH   RC,DCBPRECL              PLACE SEG LENGTH IN DCB
F000A    EQU   *
         TM    DCBBFALN,X'03'          IS ALIGNMENT SPECIFIED
         BZ    F0001                   NO-BRANCH
         TM    DCBRECFM,X'90'          TEST FOR FB RECORD
         BC    14,F0001                BRANCH NOT FB NO ALIGNMENT
*
         NI    DCBPRECL+1,X'F8'        ROUND SEG LENGTH TO DBL WORDS
         CLC   DCBPRECL(2),DCBLRECL     COMPARE SEG LENGTH TO LRECL
         BL    NOALLOW                 SUPPLY SIMPLE BUFFERING
*                                                                     *
*        DETERMINE NO OF BUFFERS TIMES EIGHT AND HOLD IN REG          *
*                                                                     *
F0001    EQU   *
         SR    RTIOT,RTIOT             CLEAR REG
         IC    RTIOT,DCBBUFNO          GET NO. OF BUFFERS
         LR    RF,RTIOT                COPY BUFNO
         MR    RE,RDEB                  MULTIPLY BY EIGHT        S20201
*
*        AT THIS POINT RJ=BLKF,RF=8N,RC=PRECL,RTIOT=BUFNO
*
         LR    RB,RJ                   COPY BLOCK F
*
         TM    DCBDEVT,DISK            Q-DISK SUPPORTED
         BO    E1B2                    YES-BRANCH
*
         MVI   DCBCNTRL+3,X'02'        TAPE EOB ID FOR LOAD MODULE
*                                                                     *
         LA    RB,5(0,RB)              ADD 5 TO BF FOR TAPE
         B     E1B3                    BRANCH TO CALC AMT OF CORE
*
E1B2     EQU   *
         LA    RB,10(0,RB)             ADD 10 TO BF FOR DISK
         TM    JFCBMASK+D6,NONCARN      ANY DEVICES W/O          S20201
*                                       DISCONNECT               S20201
         BO    E1B2A                    BRANCH IF YES            S20201
         LA    RB,D2(D0,RB)             INCREMENT FOR 2 CCWS     S20201
E1B2A    EQU   *                                                 S20201
         TM    DCBOPTCD,X'80'          Q- WRITE VALIDITY CHECK
         BZ    E1B3                    NO BRANCH
*
         LA    RB,3(0,RB)              ADD 3 TO BF FOR WRITE CHECK
         TM    JFCBMASK+D6,NONCARN      ANY DEVICE W/O           S20201
*                                       DISCONNECT               S20201
         BO    E1B3                     BRANCH IF YES            S20201
         LA    RB,D1(D0,RB)             INCREMENT FOR 1 CCW      S20201
E1B3     EQU   *
         LR    RC,RF                   BF + CONSTANTS TIMES 8N
         MR    RB,RB                   CALCULATE AMT OF CORE NEEDED
*                                      ANSWER IN REG C
         LR    RB,RC                   COPY AMT USE WHEN CLEARING
*
* CHECK FOR DISCONNECT AND GET 1 DW IF FEATURE IS AVAILABLE        DMOR
*
         TM    JFCBMASK+D6,NONCARN      ANY DEVICES W/O          S20201
*                                       DISCONNECT               S20201
         BO    E1B3A                    BRANCH IF YES            S20201
         LA    RC,CCWOFF(D0,RC)         OTHERWISE INCREMENT      S20201
         LR    RB,RC                    COPY AMOUNT FOR CLEARING S20201
E1B3A    EQU   *                                                 S20201
*
*  THE FOLLOWING SAVES THE AMOUNT OF CORE GETMAINED FOR THE IOBS YM4697
*  IN THE FORCE CLOSE AUDIT TRAIL FOR THE FORCE CLOSE EXECUTOR.  YM4697
*
         ST    RC,DXATEXC2              SAVE LENGTH              YM4697
*
         MODESET  KEYADDR=DXUKEY,WORKREG=15  GET INTO USER KEY   Y02072
*
         GETMAIN R,LV=(RC),SP=0                                  Y02072
*                                                                     *
         MODESET  EXTKEY=DATAMGT       BACK TO DATA MANAG KEY    Y02072
*
*        THIS SECTION CLEARS CORE GOT,SETS IOBL SO CLOSE CAN REL CORE
***********************************************************************
         ST    RF,DCBIOBA              ADDRESS OF FIRST IOB
         OI    FCAOPEN,FCAOIOB          INDIC IOB'S CAN BE FREED Y02072
*                                                                     *
         LR    RC,RF                   COPY ADDRESS FOR CLEARING
         LR    RJ,RB                   COPY AMOUNT
*
* SET UP THETA ADDRESS IN CASE DISCONNECT FEATURE AVAILABLE        DMOR
*
         AR    RJ,RF                    GET LAST AREA ADDR       S20201
         SR    RJ,RDEB                  SUB ONE DW               S20201
         ST    RJ,DXCCW11               TEMP STORE SET THETA     S20201
*                                       ADDR                     S20201
         LR    RJ,RB                    RESTORE AMOUNT           S20201
         TM    JFCBMASK+D6,NONCARN      ANY DEVICES W/O          S20201
*                                       DISCONNECT               S20201
         BO    NOTDISCT                 BRANCH YES               S20201
         SR    RJ,RDEB                  DECREMENT ONE DW         S20201
NOTDISCT EQU   *                                                 S20201
         SR    RD,RD                   CLEAR REG
         DR    RD,RTIOT                DIVIDE BY NO.OF BUFFERS
         SRL   RJ,3                    CONVERT TO DBL WORDS
         STC   RJ,DCBIOBL              STORE AMT FOR CLOSE
*                                                                     *
*        RB    HAS AMOUNT TO CLEAR                                    *
*                                                                     *
         BCTR  RB,0                    REDUCE AMOUNT BY ONE
         MODESET  KEYADDR=DXUKEY,WORKREG=15  GET INTO USER KEY   Y02072
         LA    RJ,255                  LOAD 255
COMPARE  EQU   *
         CR    RB,RJ                   Q-AMT TO CLEAR GREATER THAN 255
         BC    12,ONECLEAR             NO-BRANCH
         EX    RJ,CLEAR                CLEAR 256 BYTES
         SR    RB,RJ                   AMT TO CLEAR MINUS 255
         BCTR  RB,0                    SUBTRACT ONE MORE
         LA    RC,256(0,RC)            UPDATE AREA ADDRESS
*
         B     COMPARE                 TRY AGAIN
*                                                                     *
CLEAR    EQU   *
         XC    0(1,RC),0(RC)           CLEAR CORE
*
ONECLEAR EQU   *
         EX    RB,CLEAR                CLEARS LESS THAN 256
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*
*                                                                     *
*        AT THIS POINT RF IS ADDRESS OF CLEARED CORE                  *
*                                                                     *
         LR    RJ,RF                   REDUNDANT FOR 1 IOB BUT NEEDED
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*        CONSTRUCT COMMON IOB,ICB FIELDS HERE
*
*        RF= RJ= FIRST IOB ADDRESS
*        OFFSET0                       LINK ADDRESS TO NEXT ICB,IOB
*        OFFSET4                       E C B
*        OFFSET8                       IOS FLAGS
*        OFFSET12                      ECB ADDRESS
*        OFFSET 16                     CSW
*        OFFSET24                      CHP START ADDRESS
*        OFFSET28                      DCB ADDRESS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
E1H3     EQU   *                                                      *
         LR    RF,RJ                   POSITION FOR NEXT IOB,ICB
         LA    RJ,4(0,RF)              ECB ADDRESS
         ST    RJ,12(0,RF)             STORE IN IOB,ICB
         MVI   0(RJ),X'7F'              INDICATE COMPLETE NO ERROR
         L     RWK2,DXUDCBAD            GET USERS DCB ADDR       Y02072
         USING IOBQSAMN,RF                                       Y02072
         ST    RWK2,IOBDCBPT            DCB ADDRESS TO IOB       Y02072
         DROP  RF                                                Y02072
         TM    DCBRECFM,X'10'           USING BLOCKED RECORDS
         BZ    E1H4                     NO-BRANCH
*
         OI    8(RF),X'80'              TURN ON DC FLAG FOR IOS ERROR
*                                       RECOVERY ROUTINE
E1H4     EQU   *
*
         L     RWK1,DCBBUFCB            ADDR OF BUFFER CNTRL BLK YM7595
         USING BCBLK,RWK1                                        YM7595
         L     RBUFADR,BCBBUFPT         NEXT AVAIL BUFFER        YM7595
         LTR   RBUFADR,RBUFADR          IS THERE A BUFFER ADDR   Y02072
         BZ    ABEND                    NO, ISSUE DMABCOND       Y02072
         USING BUFFER,RBUFADR                                    YM7595
         MVC   BCBBUFAD,BUFNXPTB        UPDATE BUF CNTRL BLK     YM7595
         DROP  RWK1,RBUFADR                                      YM7595
*
* RBUFADR CONTAINS BUFFER ADDRESS                                Y02072
*
         LA    RJ,32(RDEB,RF)          STARTAD FOR TAPE MB--R FOR DISK
         MVI   37(RF),X'01'            INC COUNT FOR LABELS
*                                                                     *
E1K4     EQU   *
         ST    RJ,24(0,RF)             STORE STARTAD
         TM    DCBDEVT,DISK             IS DEV TYPE DIR ACCESS   Y02072
         BO    E2F4                     YES, BR                  Y02072
         B     E2A21                    NO, BR                   Y02072
E2A2     EQU   *
*                                                                     *
         LH    RE,DCBEROPT+D4           GET BLOCKING FACTOR      S20201
E2B4     EQU   *
         USING CCW,RJ                                            Y02072
         ST    RBUFADR,CCWADDRA         ADDR TO CCW              Y02072
         MVI   0(RJ),X'01'             CMND BYTE FOR TAPE
*                                      NOT USED BY DISK CHP
         MVC   CCWBYTE,DCBLRECL         LOG REC LEN TO CHAN PGM  Y02072
         OI    CCWFLGS,CCWSLI           SILI BIT ON IN CHAN PGM  Y02072
         DROP  RJ                                                Y02072
         AH    RBUFADR,DCBPRECL         ADD SEG LEN TO ADDR      Y02072
         AR    RJ,RDEB                  ADD 8 TO POS CCW         S20201
         BCT   RE,E2B4                  MORE CCW'S TO BUILD      S20201
*
* CHECK FOR DISCONNECT FEATURE AND SET UP READ THETA CMND          DMOR
*
         TM    JFCBMASK+D6,NONCARN      ANY DEVICES W/O          S20201
*                                       DISCONNECT               S20201
         BO    E2B5                     BRANCH IF YES            S20201
         SR    RJ,RDEB                  DECREMENT CCW PTR        S20201
         OI    FLAGOFF(RJ),CC           SET COMMAND CHAIN FLAG   S20201
         AR    RJ,RDEB                  RESTORE CCW PTR          S20201
         L     RE,DXCCW11               RETRIEVE RD THETA ADDR   Y02072
         ST    RE,D0(D0,RJ)             PUT IN RD THETA ADDR     S20201
         MVI   CNTOFF(RJ),D1            SET BYTE COUNT TO ONE    S20201
         MVI   D0(RJ),RDSC              MOVE IN RD  SECTOR       S20201
*                                       COMMAND                  S20201
         AR    RJ,RDEB                  INCR POINTER             S20201
E2B5     EQU   *                                                 S20201
*                                                                     *
         TM    DCBDEVT,DISK            Q-DISK
         BZ    E1H2                    BRANCH ON NO
*
         TM    DCBOPTCD,X'80'          WRITE CHECK PRESENT
         BO    E2D3                    BRANCH ON YES
*
*                                                                     *
E2E3     EQU   *
E2F2     EQU   *
*                                                                     *
         TM    DCBDEVT,DISK            Q-DISK
         BZ    E1H2                    BRANCH NOT DISK
*
         ST    RJ,0(0,RB)              WRT CKD ADDRESS TO PROPER CCW
         MVI   0(RB),X'1D'             PLACE CMND BYTE
         AR    RJ,RDEB                  POS PTR TO NEXT ICB,IOB  S20201
*
E1H2     EQU   *                                                      *
         ST    RJ,0(0,RF)              STORE LINKAD IN IOB
         OI    0(RF),X'40'             TURN ON WRITE BIT FOR EOB RT
         BCT   RTIOT,E1H3              BRANCH IF MORE IOB,ICB TO MAKE
*                                                                     *
         L     RC,DCBIOBA              GET FIRST IOB ADDRESS
         MVC   1(3,RF),DCBIOBA+1       PLACE LAST LINKAD
         MVI   0(RC),X'41'              FIRST IOB AND WRITE BITS ON
         L     RB,24(0,RF)             GET STARTAD
         LR    RD,RB                   COPY ADDRESS
         SR    RB,RF                   GET WCPO
         MODESET  EXTKEY=DATAMGT       BACK TO DATA MANAG KEY    Y02072
         STC   RB,DCBWCPO              STORE WRITE CHP OFFSET
         OI    FCAOPEN2,FCAOIOBC        IOBS COMPLETED           YM7595
         SR    RJ,RD                   GET WCPL
         SR    RJ,RDEB                  CORRECT VALUE            S20201
         SRL   RJ,3                    DIVIDE BY EIGHT
         STC   RJ,DCBWCPL              STORE WRITE CHP LENGTH
         XC    DCBPRECL(2),DCBPRECL     CLEAR COUNTER
*                                                                     *
*
*
*
*
XCTL     EQU   *
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGID,NXTEXEC            XCTL TO LOAD EXEC        Y02072
         DROP  RWTGC                                             Y02072
RELOOP   EQU   *
         L     RCORE,4(0,RWTGC)        LOAD RCORE BASE
         LA    RWTGC,8(0,RWTGC)             INCREMENT CURR WTG ENTRY
         LA    RPARC,4(0,RPARC)             INC CURRENT DCB ENTRY PTR
         CLC   0(2,RWTGC),AMIDCNST     Q- THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST     Q- END OF TABLE
         BC    7,RELOOP                    NO-CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,32(0,RWTG)             REINIT WTG LIST PTR
ZCHEK    EQU   *
         CLI   0(RWTGC),X'00'               Q-IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN
*
         LA    RWTGC,8(0,RWTGC)             GET NEXT ENTRY
         LA    RPARC,4(0,RPARC)
         B     ZCHEK
*
TCTLRTN  EQU   *
         MVC   6(2,RWTG),0(RWTGC)      STORE ID IN WTG TABLE
         LA    RJ,DXXCTL                SET UP FOR XCTL          S21042
         XC    DXXCTL,DXXCTL            CLEAR PARM LIST, NO DCB  Y02072
*                                         FOR LPALIB             Y02072
*
         XCTL  EPLOC=(RWTG),SF=(E,(15))                          Y02072
*
*
*
*
*
*
E2F4     EQU   *
         MVC   0(8,RJ),DCBFDAD         MOVE MBBCCHHR FROM DCB TO IOB
         LA    RB,3(0,RJ)              ADDRESS FOR SRCH CCW
         AR    RJ,RDEB                  ADD 8 TO POSITION CCW    S20201
         ST    RJ,24(0,RF)             STORE STARTAD
*
*                                      TO CONSTRUCT WRT(CKD) CCW
*                                                                     *
*        MAKE SRCH TIC      CCWS HERE                                 *
*                                                                     *
*
* IF DISCONNECT FEATURE ON ALL DEVICES, SET SECT USED IN CHP       DMOR
*
         TM    JFCBMASK+D6,NONCARN      ANY DEVICES W/O          S20201
*                                       DISCONNECT               S20201
         BO    E2J3                     BRANCH IF YES            S20201
         L     RE,DXCCW11               RETRIEVE SET THETA ADDR  S20201
         ST    RE,D0(D0,RJ)             PUT ADDR IN CCW          S20201
         OI    FLAGOFF(RJ),CC           SET CMND CHAIN BIT       S20201
         MVI   CNTOFF(RJ),D1            SET BYTE CNT TO ONE      S20201
         MVI   D0(RJ),SETSC             SET SECTOR CMND          S20201
         AR    RJ,RDEB                  INCREMENT CCW PTR        S20201
E2J3     EQU   *                                                 S20201
         ST    RB,0(0,RJ)              STORE SEARCH ADDRESS
         MVI   0(RJ),X'31'             PLACE SEARCH CMND BYTE
         MVI   4(RJ),X'40'             TURN ON CC FLAG
         MVI   7(RJ),X'05'             SET COUNT OF 5
*                                                                     *
*        SEARCH CCW COMPLETED                                         *
*                                                                     *
         ST    RJ,8(0,RJ)              STORE TIC ADDRESS
         MVI   8(RJ),X'08'             PLACE TIC CMND BYTE
*                                                                     *
*        TIC   CCW COMPLETED                                          *
*                                                                     *
         LA    RJ,16(0,RJ)             POSITION POINTER AT WR CKD CCW
E2J4     EQU   *
*                   CONSTRUCT RIGHT HALF OF WRT CKD CCW HERE          *
*                   CMND BYTE & ADDRESS OF CCHHRKDLDL COMES LAST      *
*                                      AT E2G2 ADDRESS                *
         LR    RB,RJ                   COPY WRT(CKD) ADDRESS
         MVI   7(RJ),X'08'             PLACE COUNT OF EIGHT
         MVI   4(RJ),X'A0'             SET DC AND SIL FLAG ON
E1J4     EQU   *
         AR    RJ,RDEB                  POSITION FOR WRITE CCW   S20201
*                                                                     *
*        NO DC FLAGS NEEDED ACCESS METHOD SETS FLAGS                  *
E2A21    EQU   *                                                      *
         SR    RJ,RF                   DERIVE OFFSW
         MODESET  EXTKEY=DATAMGT       BACK TO DATA MANAG KEY    Y02072
         STC   RJ,DCBOFFSW             STORE OFFSET IN DCB
         MODESET  KEYADDR=DXUKEY,WORKREG=14  GET INTO USER KEY   Y02072
         AR    RJ,RF                   RESTORE CCW ADDRESS
         B     E2A2
*                                                                     *
*                                                                     *
*                                                                     *
E2D3     EQU   *
***********************************************************************
*        MAKE  CHP FOR CHECKING WRITE HERE                            *
***********************************************************************
*                                                                     *
         SR    RJ,RDEB                  BACKUP POINTER           S20201
         MVI   4(RJ),X'40'             TURN ON  CC  FLAG IN LAST CCW
         TM    JFCBMASK+D6,NONCARN      ANY DEVICES W/O          S20201
*                                       DISCONNECT               S20201
         BO    E2D3A                    BRANCH IF YES            S20201
*
* IF DISCONNECT FEATURE ON ALL DEVICES USE SET SECT COMMAND        DMOR
*
         MVC   D8(CCWOFF,RJ),D0(RJ)     MOVE READ SECTOR ONE CCW S20201
         AR    RJ,RDEB                  RESTORE CCW PTR          S20201
         MVI   D0(RJ),SETSC             CHANGE CMND TO SET       S20201
*                                       SECTOR                   S20201
E2D3A    EQU   *                                                 S20201
         AR    RJ,RDEB                  POSITION AT SRCH CCW     S20201
         MVI   7(RJ),X'05'             LENGTH FOR SRCH CCW
         MVI   4(RJ),X'40'             TURN ON CC FLAG
*                                                                     *
*        ADDRESS OF  CCHHRKDLDL & CMND BYTE DONE LATER                *
*                                                                     *
         ST    RJ,8(0,RJ)              TIC ADDRESS
         MVI   8(RJ),X'08'             PLACE TIC OP
         MVC   22(2,RJ),DCBBUFL        MOVE BUFFER SIZE TO READ CCW
         MVI   20(RJ),X'10'            MOVE SKIP FLAG TO CCW
         MVI   16(RJ),X'86'            MOVE RD(D) CMND BYTE TO CCW
*                                                                     *
E2E51    EQU   *
*
         LA    RD,24(0,RJ)             ADDR OF CCHHRKDD FOR SRCH
E2E5     EQU   *
         ST    RD,0(0,RJ)              STORE IN SRCH CCW
         MVI   0(RJ),X'31'             PLACE SEARCH CMND BYTE
         LA    RJ,24(0,RJ)             ADDRESS CCHHRKLDLDL
         B     E2E3
*
*
ABEND    EQU   *
         MODESET  EXTKEY=DATAMGT       BACK TO DATA MANAG KEY    Y02072
         DMABCOND OABD063,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES  S21042X
                                        CALL PROBLEM DETERMINATION
         B     TCTLRTN                                           S21042
AMIDCNST DC    C'1F'                    THIS ID
OPIDCNST DC    C'0S'                    END ID
SOP2     DC    C'1D'                    ABNORMAL, DA WHEN EXCH   Y02072
*                                         BUFFERING UNSUPPORT    Y02072
SOP5     DC    C'1G'                    ABNORMAL, NON-DA WHEN EX Y02072
*                                         BUFFERING UNSUPPORT    Y02072
NXTEXEC  DC    C'14'                    3RD STAGE EXEC TO LOAD   Y02072
*                                         ACCESS METHOD RTNS     Y02072
PDLOAD   DC    C'6M'                    PROBLEM DETERMINATION    Y02072
         SPACE
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         IECDSECS (MAIN,(IOB,NO)),IOB,DCB,WTG,EXPAND=YES         Y02072
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
         EJECT
FORCORE  DSECT                                                   Y02072
         IHAFCAUD  ORG=YES                                       Y02072
         EJECT
         IGGBCB  TYPE=SAM                                        Y02072
         EJECT
         IHACCW  DSECT=YES                                       Y02072
         END
