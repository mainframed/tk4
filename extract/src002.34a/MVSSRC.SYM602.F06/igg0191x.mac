         TITLE 'IGG0191X DISK OUTIN, INOUT PCI EXECUTOR'
IGG0191X CSECT
*MODULE NAME - IGG0191X                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*        VS 2 RELEASE 2 DELETIONS                                Y02072
*001500,070000,083000-084000,302000-303000,328000-329000,        Y02072
*339000-340000,563500,564500-564800,650000,699000-702000,        Y02072
*004000-005000,007000-012000,688000-694000,215000,586000,612000, Y02072
*616000                                                          Y02072
*                                                                YM4697
*                                                                YM6583
*
*        VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*        RELEASE 21 DELETIONS
* 407000-411000                                                  A46882
*
*STATUS CHANGE LEVEL 002
*
*   THIS MODULE NEW IN REL 20.1 FROM SPLIT OF MODULE IGG0191R
*
*FUNCTION
*        1  GET CORE FOR IOB'S AND CHAINED CHANNEL PROGRAMS FOR DISK
*        2  CLEAR THIS CORE
*        3  CONSTRUCT IOBS AND ICBS
*        4  CONSTRUCT CHANNEL PROGRAMS FOR DISK
*        5 IT SETS AN AUDIT TRAIL BIT IN THE OPEN WORKAREA       Y02072
*          INDICATING TO FORCE CLOSE TAHT THE CORE GETMAINED     Y02072
*          FOR THE IOB'S CAN BE FREEMAINED.                      Y02072
*
*ENTRY POINT
*        IGG0191W BY XCTL
*
*INPUT
*        SEE REGISTER DESCRIPTION,DCB
*
*OUTPUT
*        SEE REGISTER DESCRIPTION
*        USERS DCB
*
* EXTERNAL ROUTINES-NONE
*
* EXITS
*        NORMAL BY XCTL TO IGG01913
*        NORMAL BY XCTL TO IGG0191J WHEN ONE BUFFER SPECIFIED
*
*        ERROR-NONE
*
*MACROS, ACTION  MODESET, GETMAIN, XCTL                          Y02072
*
*MACROS, MAPPING  DCBD, IECDSECS, IEZDEB, IKJTCB, IEZIOB, IHACCW Y02072
*
*TABLES/WORKAREAS-WHERE TO GO TABLE (WTG)
*
*        BYTE  0-7     NAME
*        BYTE  8-10    RELATIVE DISK ADDRESS(TTR) O
*        BYTE  11      CONCATENATION NUMBER
*        BYTE  12      ZERO
*        BYTE  13      ALIAS INDICATOR AND USER DATA
*                             ALIAS INDICATOR 1 BIT
*                             NUMBER OF TTRS IN USE
*        BYTE  14-16   TTR OF FIRST TEXT RECORD
*        BYTE  17      ZERO
*        BYTE  18-19   TTR OF NOTE LIST OR SCATTER
*        BYTE  20      TRANSLATION TABLE
*        BYTE  21      ZERO OR NUMBER OF ENTRIES IN
*        BYTE  22-23   ATTRIBUTES
*        BYTE  24-26   TOTAL CONTIGUOUS MAIN STORAG
*        BYTE  27-28   LENGTH OF FIRST TEXT RECORD
*        BYTE  29      LENGTH OF WTG TABLE (IN DOUB
*        BYTE  30231   PATH THROUGH LOADS OF ROUTIN
*        BYTE  32-34   IDTTR OF EXECUTOR FOR FIRST
*        BYTE  35      WORKAREA ADDRESS FOR FIRST D
*        BYTE  36-39   TABLE OF IDTTRS
*        BYTE  32+N(8) IDTTR OF EXECUTOR FOR NTH DCB  (3 BYTES)
*                      WORKAREA ADDRESS FOR NTH DCB   (1 BYTE )
*                      IDTTR OF LAST ROUTINE LOAD     (3 BYTES)
*                      NOT USED
*
*
*
*
*
* ATTRIBUTES
*        REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY UNLESS Y02072
*        OTHERWISE SPECIFIED, SUPER STATE                        Y02072
*
*NOTES
*        ALL REG EQUATES HAVE AN 'R' AT BEGINNING
*
*
RDCB     EQU   2                        DCB ADDR
RBASE    EQU   3                        BASE REG
RCORE    EQU   4                        WORK AREA ADDR
RPAR     EQU   5                        TOP OF PARAMETER LIST
RWTG     EQU   6                        TOP OF WTG TABLE
RPARC    EQU   7                        CURRENT PARAMETER
RWTGC    EQU   8                        CURRENT TRANSFER LOAD
RWK1     EQU   9                        WORK REGISTER            Y02072
RUCB     EQU   10                       HERE HOLD CONST 8
RDEB     EQU   11                       HERE HOLDS DCBCHP
RB       EQU   12                       CHP POINTER
RC       EQU   13                       IOB POINTER
RRET     EQU   RC                       RETURN ADDR REGISTER     Y02072
RD       EQU   14                       WORK REG AND CCW POINTER
RWK3     EQU   RD                       WORK REGISTER            Y02072
RJ       EQU   15                       WORK REG AND INDEX REG
RE       EQU   0                        WORK REG
RF       EQU   1                        WORK REG
RWK4     EQU   RF                       WORK REGISTER            Y02072
*
*
*
*
*
*
* DISPLACEMENTS AS EQUATES
*
*
D0       EQU   0                        DISPLACEMENT OF ZERO
D1       EQU   1                        DISPLACEMENT OF ONE
D2       EQU   2                        DISPLACEMENT OF TWO
D3       EQU   3                        DISPLACEMENT OF THREE
D4       EQU   4                        DISPLACEMENT OF FOUR
D5       EQU   5                        DISPLACEMENT OF FIVE
D6       EQU   6                        DISPLACEMENT OF SIX
D12      EQU   12                       DISPLACEMENT OF TWELVE
D14      EQU   14                       DISPLACEMENT OF FOURTEEN
D16      EQU   16                       DISPLACEMENT OF SIXTEEN
D32      EQU   32                       DISPLACEMENT OF THIRTYTWO
*
*
* BYTE COUNTS AS EQUATES
*
ZERO     EQU   0                        BYTE COUNT OF ZERO
TWNTY    EQU   20                       BYTE COUNT OF 20
ONE      EQU   1                        BYTE COUNT OF ONE
TWO      EQU   2                        BYTE COUNT OF TWO
THREE    EQU   3                        BYTE COUNT OF THREE
FIVE     EQU   5                        BYTE COUNT OF FIVE
EIGHT    EQU   8                        BYTE COUNT OF EIGHT
SXTN     EQU   16                       BYTE COUNT OF SIXTEEN
TWFOUR   EQU   24                       BYTE COUNT OF 24
THRYSIX  EQU   36                       BYTE COUNT OF 36
FRTY     EQU   40                       BYTE COUNT OF 40
*
*
* CCW COMMANDS
*
SRCH     EQU   X'31'                    SEARCH COMMAND
TIC      EQU   X'08'                    TIC
RDCNT    EQU   X'92'                    READ COUNT
RDDATA   EQU   X'86'                    READ DATA
NOP      EQU   X'03'                    NO OPERATION
MTSRCH   EQU   X'B1'                    MULTI TRACK SEARCH
WRTCKD   EQU   X'1D'                    WRT COUNT, KEY AND DATA
MTRDD    EQU   X'86'                    READ DATA
SETSC    EQU   X'23'                    SET SECTOR
RDSC     EQU   X'22'                    READ SECTOR
*
*
* CCW FLAGS
*
PCI      EQU   X'08'                    PROGRAM CONTROLED INTERR
SKIP     EQU   X'10'                    SKIP FLAG
SIL      EQU   X'20'                    SILI FLAG
CC       EQU   X'40'                    COMMAND CHAIN
DC       EQU   X'80'                    DATA CHAIN
*
*
* MASKS
*
UFORM    EQU   X'C0'                    FORMAT 'U' RECORDS
FFORM    EQU   X'80'                    FORMAT 'F' RECORDS
UORVFORM EQU   X'40'                    FORMAT 'U' OR 'V' RECS   A46882
VALCHK   EQU   X'80'                    VALIDITY CHECK
POINTB   EQU   X'04'                    POINT
NORCDRY  EQU   X'20'                    NO RECORD READY
PCIIND   EQU   X'04'                    PCI INDICATOR
OUTIN    EQU   X'07'                    DCB FOR OUT/IN
*
*
* MISCELLANEOUS EQUATES
*
CMPNOERR EQU   X'7F'                    ECB INITIALIZATION
*                                       COMPLETE NO ERROR
CHPOFF   EQU   56                       CHANNEL PROG OFFSET IN MIOB
CHPADO   EQU   32                       OFF IN MIOB TO CHP ADDR
CCHHRO   EQU   51                       OFFSET IN MIOB TO SEEK FLD
RRWOF    EQU   96                       RCD READY WRITE CCW OFFSET DMOR
NWCPO    EQU   X'40'                    NORMAL CHP WRT OFFSET
NWCPL    EQU   X'05'                    NORMAL WRT CHP LENGTH IN
*                                       DWS
MIOBSIZE EQU   80                       MAIN IOB SIZE
RNOPOFF  EQU   56                       RD CHP NOP OFFSET
WNOPOFF  EQU   96                       WRT CHP NOP OFFSET
ICBWO    EQU   60                       WRT OFFSET IN ICB
ICBSEEK  EQU   35                       SEEK FIELD OFFSET IN ICB
ICBCHPO  EQU   40                       OFFSET IN ICB TO CHP
NWRTCHP  EQU   88                       NORM WRITE CHP OFFSET
BICBSIZE EQU   112                      BASIC ICB SIZE
MAX      EQU   256                      MAXIMUM SS LENGTH OPERAND
OFFSICBS EQU   147                      BASIC OFFSET FROM ONE ICB
*                                       TO CHP OF NEXT ICB
IOBCEXCP EQU   X'80'                    IOBCNOPA FLAG            YM6583
SEEKOFF  EQU   48                       OFFSET TO MIOB SEEK
CNTOFF   EQU   7                        OFFSET IN CCW TO CNT FLD
FLAGOFF  EQU   4                        OFFSET IN CCW TO FLAG BYTE
RRWCPO   EQU   NWCPO+EIGHT              RECORD READY CHP OFFSET
*
*
*
*
*
*
*
*
*
         BALR  RBASE,RE                 ESTABLISH ADDRESSABILITY
         USING ENTRY,RBASE
         USING IHADCB,RDCB              DCB DSECT
         USING FORCORE,RCORE            COMMON OPEN WORK AREA
*
ENTRY    EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191X'              MODULE NAME              Y02072
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/17/74'              LAST DATE MODIFIED     @Z30TSCF
BEGIN    DS    0H                                                Y02072
*
         L     RCORE,D4(RWTGC)          LOAD RCORE BASE
*
         L     RDCB,D0(RPARC)           GET DCB ADDRESS
*
* TEST FOR ONE BUFFER WHICH IS NOT ALLOWED WITH CHAINED SCHEDULING
*
         CLI   DCBNCP,ONE               IS NUMBER OF CHP EQ ONE
         BH    LAB007                   IF NO BRANCH
*                                       YES SET UP TO XCTL
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP8A           ID FOR DISK EXECUTOR   @Z30TSCF
         B     RELOOP                   GO TO XCTL RTN
*
*
LAB007   EQU   *
         OI    DCBCIND2,PCIIND          TURN ON PCI INDICATOR
         LA    RF,MIOBSIZE              GET BASIC IOB SIZE
         LA    RUCB,EIGHT               CONSTANT OF EIGHT
*
* TEST OF NOTE/POINT BEING USED
*
         TM    DCBMACRF,POINTB          NOTE/POINT BEING USED
         BZ    LAB011                   NO THEN BRANCH
         MVI   DCBCNTRL+D1,FIVE         STORE INDEX FOR N/P ID
LAB011   EQU   *
*
*
         SR    RD,RD                    CLEAR REG FOR ACCUMULATION
*                                       OF ICB LENGTH
*
* SET UP CONTROL FIELDS AND INITIALIZE COUNT REGS
*
         MVI   DCBCNTRL+D2,ONE          DISK EOBW IND FOR LOAD MOD
         MVI   DCBCNTRL+D3,TWO          DA IN EOB IDS
         MVI   DCBWCPO,NWCPO            PUT NORMAL WRT CHP OFFSET
*                                       IN DCB
         LA    RC,NWCPL                 GET NORMAL WRT CHP LENGTH
         MVC   DCBOFFSR(TWO),OFFSETD    PUT OFFSETS IN DCB
         LA    RDEB,WNOPOFF             GET NORMAL WRITE NOP OFFSET
*
* CHECK FOR RECORD READY FEATURE IF BEING USED INCREMENT COUNTS
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    LAB017                   BRANCH IF YES
         MVI   DCBOFFSW,RRWOF           CHANGE WRITE OFFSET
         MVI   DCBWCPO,RRWCPO           RCD READY OFFSET IN DCB
         LA    RC,ONE(RC)               INCREMENT CCW COUNT
         AR    RDEB,RUCB                NOP OFFSET PLUS EIGHT (WRT)
         LA    RF,SXTN(RF)              INCR MAIN IOB SIZE
         LA    RD,SXTN(RD)              INCR ICB SIZE
LAB017   EQU   *
*
* STORE COUNTS
*
*
*
* CHECK FOR VALIDITY CHK AND INCREMENT COUNTS
*
         TM    DCBOPTCD,VALCHK          VAL CHK USED
         BNO   LAB029                   BRANCH IF NO
         LA    RD,TWFOUR(RD)            INCR ICB SIZE
         LA    RDEB,TWFOUR(RDEB)        INCR WRT NOP OFFSET
         LA    RC,THREE(RC)             INCR CCW COUNT
*
* NOW CHK AGAIN FOR RCD READY FEATURE AND INCREMENT COUNTS
LAB021   EQU   *
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    LAB029                   BRANCH IF YES
         AR    RD,RUCB                  INCR ICB COUNT FOR SET
*                                       SECTOR CMND IN WRT CHK
         AR    RDEB,RUCB                INCR NOP OFFSET FOR SAME
*                                       CMND
         AR    RDEB,RUCB                INCREMENT
         LA    RC,ONE(RC)               INCR WRT CHP LENGTH
*
* STORE OF REMAINING COUNTS
LAB029   EQU   *
         STC   RC,DCBWCPL               PUT CHP LENGTH IN DCB
*
* NOW CALCULATE TOTAL CORE NEEDED FOR ICBS
*
         LA    RD,BICBSIZE(RD)          INCREMENT ICB COUNT FOR
*                                       BASIC ICB
         LR    RB,RD                    COPY AMOUNT
         SRL   RB,THREE                 DIVIDE BY DW
         STC   RB,DCBIOBL               PUT IN DCB
         SR    RJ,RJ                    CLEAR REGISTER
         IC    RJ,DCBNCP                GET NO. OF CHPS TO BE BUILT
         MR    RD,RD                    AMOUNT OF SPACE NEEDED
*                                       MINUS MAIN IOB
*
* GET TOTAL AMOUNT OF CORE NEEDED AND ISSUSE GET MAIN
*
         AR    RJ,RF                    MAIN IOB PLUS TOTAL ICBS
         LR    RC,RJ                    SAVE AMOUNT FOR CLEARING
*
*  THE FOLLOWING SAVES THE AMOUNT OF CORE GETMAINED FOR THE      YM4697
*  IOB AND ICBS IN THE FORCE CLOSE AUDIT TRAIL FOR THE FORCE     YM4697
*  CLOSE EXECUTOR.                                               YM4697
*
         ST    RJ,DXATEXC2              SAVE LENGTH              YM4697
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         GETMAIN R,LV=(RJ),SP=0                                  Y02072
         LR    RB,RF                    COPY ADDRESS USED TO CLR
*
* CLEAR OF RECEIVED CORE  RB=ADDRESS   RC=AMOUNT
*
         LR    RJ,RC                    SAVE AMOUNT FOR THETA ADDRS
         LA    RD,MAX                   CONST OF 256
         B     LABCLR                   BRANCH TO CLEAR
LABSLO   EQU   *
         XC    D0(D1,RB),D0(RB)         CLEARS REMAING BYTES
LABSHI   EQU   *
         XC    D0(MAX,RB),D0(RB)        CLEAR 256 BYTES
         AR    RB,RD                    ADD 256 TO ADDR
LABCLR   EQU   *
         SR    RC,RD                    SUB 256 FROM AMOUNT
         BH    LABSHI                   BRANCH AMT GT 256
         AR    RC,RD                    CORRECT AMT
         BCTR  RC,RE                    REDUCE AMT BY ONE RE=0
         EX    RC,LABSLO
*
* SET UP THETA ADDRESSES MAY BE USED LATER
*
         AR    RJ,RF                    GET LAST AREA ADDR + 1
         SR    RJ,RUCB                  REDUCE BY EIGHT
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         ST    RWK4,DCBIOBAD            PUT MAIN IOB IN DCB      Y02072
         OI    FCAOPEN,FCAOIOB          INDIC IOB'S CAN BE FREED Y02072
         ST    RJ,DXCCW11               TEMP STORE SET THETA ADDR
*
* START CONST OF MAIN IOB HERE
*
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         STC   RDEB,D3(RF)              PUT WRT NOP OFFSET IN MIOB
         IC    RDEB,DCBNCP              LOAD NO. OF CHANL PROGRAMS
         MVI   D2(RF),RNOPOFF
         LA    RE,D4(RF)                ECB ADDR
         ST    RE,TWNTY(RF)             PUT ADDR IN ECB POINTER
         MVI   D4(RF),CMPNOERR          INITIALIZE ECB
         L     RWK1,DXUDCBAD            GET USERS DCB ADDRESS    Y02072
         USING IOBQSAMC,RWK4                                     Y02072
         ST    RWK1,IOBDCBPT            DCB ADDR TO IOB          Y02072
         DROP  RWK4                                              Y02072
*
*
         LA    RD,CHPOFF(RF)            GET CHP OFFSET IN IOB
         ST    RD,CHPADO(RF)            PUT IN MAIN IOB
         MVC   SEEKOFF(EIGHT,RF),DCBFDAD DISK ADDR TO MIOB
*
* START CONSTRUCTION OF MAIN IOB CHP
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    LAB033                   BRANCH IF YES
         BAL   RC,LABSTA                IF NO GO BUILD SET SECT
LAB033   EQU   *
*
* CONSTRUCTION OF SEARCH AND TIC CCWS
*
         LA    RE,CCHHRO(RF)            GET CCHHR ADDR
         BAL   RC,LABSRCH               GO BUILD IN SUB ROUTINE
*
* POINT TO FIRST ICB AND COMPLETE SECOND TIC CCW
*
         LA    RB,EIGHT(RD)             PT RB TO FIRST ICB
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         ST    RB,DCBIOBA               PUT IN DCB
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         LA    RC,FRTY(RB)              GET ICB CHP ADDR
         ST    RC,D0(RD)                PUT IN CCW
         MVI   D0(RD),TIC               PUT IN TIC CMND
         ST    RB,EIGHT(RF)             FIRST ICBAD TO MIOB
         AR    RD,RUCB                  INCR CCW PTR
*
*
*
* START OF LOOP TO BUILD ICBS
*
LAB051   EQU   *
         ST    RD,D0(RB)                     LINKAD TO ICB
*                                            REDUNDANT FOR FIRST
*                                            TIME
         LR    RB,RD                         NEW ICB ADDR
         LA    RC,D4(RB)                     ECB ADDR
         ST    RC,D12(RB)                    PUT IN ICB
         MVI   D4(RB),CMPNOERR               INIT ECB COMPLETE NO
*                                            ERROR
         LA    RD,D32(RB)                    PT TO MBBCCHHR FIELD OF
*                                            ICB
         MVC   D0(EIGHT,RD),DCBFDAD          FULL DISK ADDR TO ICB
*
* ICB INITIALIZATION COMPLETE
*
         AR    RD,RUCB                       INCR RD TO BECOME CCW
*                                            PTR
* CLEAR INDEX REG AND GET ICB SIZE
*
         SR    RJ,RJ                         CLEAR REG
         IC    RJ,DCBIOBL               GET ICB SIZE IN DW
         SLL   RJ,THREE                 TIMES EIGHT
         LA    RE,ICBSEEK(RB,RJ)        NEXT ICB SEEK FIELD
         ST    RE,D0(RD)                PUT IN CCW
         MVI   FLAGOFF(RD),CC+PCI+SIL   SET FLAGS
         BAL   RRET,LAB666              GO RESET PCI BIT IF      Y02072
*                                         NECESSARY              Y02072
         MVI   CNTOFF(RD),FIVE          SET BYTE COUNT
         MVI   D0(RD),RDCNT             PUT IN CMND BYTE
         AR    RD,RUCB                  INCR CCW PTR
*
* READ COUNT CCW COMPLETED
*
*
         MVI   FLAGOFF(RD),CC           TURN ON CMND CHAIN
         TM    DCBRECFM,UORVFORM        TEST FOR UNDEF OR        A46882
*                                          VARIABLE LENGTH RECS  A46882
*                                          IF YES, TURN ON SILI  A46882
         BNO   LAB069                   NO, DON'T TURN ON SILI   A46882
         OI    FLAGOFF(RD),SIL          TURN ON SILI BIT
LAB069   EQU   *
*
         MVI   D0(RD),RDDATA            SET CCW CMND BYTE
         AR    RD,RUCB                  INCR CCW PTR
*
* READ DATA CCW COMPLETETED
*
*
         LA    RE,ICBCHPO(RB,RJ)        GET ADDR OF NEXT ICB CHP
         BAL   RC,LABNOP                GO BUILD NOP
*
* NOP COMMAND COMPLETED READ PORTION OF CHANNEL PROG COMPLETED
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    LAB075                   BRANCH IF YES
         BAL   RC,LABNOPS               GO BUILD NOP/TIC AND RD SEC
LAB075   EQU   *
*
* IF NEEDED READ SECTOR COMMAND COMPLETED
*
* START OF WRITE CHANNEL PROGRAM
*
         LA    RE,ICBSEEK(RB)           GET ICB SEEK ADDR
         BAL   RC,LABSRCH               GO BUILD SEARCH AND TIC
         SH    RD,CON16                 BACK UP POINTER
         MVI   D0(RD),MTSRCH            PUT I M-T SRCH CMND
         AH    RD,CON16                 INCR CCW PTR
*
* SEARCH AND TIC CMND COMPLETE
*
*
*
         LA    RE,ZERO(RB,RJ)           POINT TO NEXT ICB
         SR    RE,RUCB                  BACK UP TO CCHHRR FIELD
         ST    RE,D0(RD)                PUT IN CCW
         MVI   FLAGOFF(RD),DC+SIL+PCI   TURN ON DC, SILI, AND PCI
*                                       FLAGS
         BAL   RRET,LAB666              GO RESET PCI BIT IF      Y02072
*                                         NECESSARY              Y02072
         MVI   CNTOFF(RD),EIGHT         SET BYTE CNT TO EIGHT
         MVI   D0(RD),WRTCKD            PUT IN WRT COUNT KEY DATA
*                                       CCW CMND
         AR    RD,RUCB                  INCR CCW PTR
*
* WRT COUNT KEY DATA CCW COMPLETED
*
         MVI   FLAGOFF(RD),SIL+CC       TURN ON SILI FLAG IN CCW
*                                       NEXT CCW ALL THAT IS NEEDED
*                                       SINCE REST COMPLETED BY EOB
         AR    RD,RUCB                  INCR CCW PTR
*
*
* CHECK FOR WRITE CHECK REQUESTED
*
         TM    DCBOPTCD,VALCHK          VAL CHK REQUESTED
         BNO   LAB101                   BRANCH IF NO
         SR    RD,RUCB                  BACK UP CCW POINTER
         OI    FLAGOFF(RD),CC           COMMAND CHAIN PREV CCW
         AR    RD,RUCB                  RESTORE POINTER
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    LAB095                   BRANCH IF YES
         OI    FLAGOFF(RD),CC           COMMAND CHAIN CCW
         BAL   RC,LABRTA                GO BUILD RD SECTOR
         BAL   RC,LABSTA                GO BUILD SET SECT CMND
         SR    RD,RUCB                  BACK UP POINTER
         OI    D3(RD),D1                INCREMENT ADDR BY ONE
*                                       THIS WORKS SINCE ADDR IS
*                                       ALWAYS ON A DW BOUNDARY
         AR    RD,RUCB                  RESTORE POINTER
LAB095   EQU   *
*
* BUILD SRCH AND TIC CMND
*
         LA    RE,D0(RJ,RB)             POINT TO NEXT ICB
         SR    RE,RUCB                  BACK UP TO CCHHR ADDR
         BAL   RC,LABSRCH               GO BUILD SEARCH AND TIC
*
* SRCH AND TIC FOR VAL CHK COMPLETED
*
         MVI   FLAGOFF(RD),CC+SIL+SKIP  TURN ON SILI, SKIP AND SKIP
*                                       FLAGS
         MVI   D0(RD),MTRDD             PUT IN CCW CMND
         AR    RD,RUCB                  INCR CCW PTR
*
*
* LAST CCW IN CHP IS NOP
*
LAB101   EQU   *
         LA    RE,NWRTCHP(RB,RJ)        GET NORM WRT CHP ADDR OF
*                                       NEXT ICB
         BAL   RC,LABNOP                GO BUILD NOP
*
* CHECK FOR RCD READY FEATURE AND IF BEING USED MUST BUILD READ
* SECTOR COMMAND
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY
         BO    LAB091                   BRANCH IF YES
         TM    DCBOPTCD,VALCHK          WRT CHECK USED
         BO    LAB091                   BRANCH IF YES
         BAL   RC,LABNOPS               GO BUILD NOP/TIC AND RD SEC
LAB091   EQU   *
*
* CHANNEL PROGRAM FINISHED HERE, CHECK FOR MORE TO BE BUILT
*
         AR    RD,RUCB                  INCR PTR TO NEXT ICB
         BCT   RDEB,LAB051              IF MORE CCWS TO BE BUILT
*                                       GO BUILD THEM
*
* IF ALL ICBS BUILT DO FINISH UP LOGIC
*
         L     RC,DCBIOBA               GET FIRST ICB POINTER      DMOR
         ST    RC,ZERO(RB)              PUT IN LAST ICB            DMOR
         LA    RE,ICBSEEK(RC)           GET FIRST ICB SSEK ADDR    DMOR
         ST    RE,ICBCHPO(RB)           PUT IN LAST ICB RD CNT     DMOR
         MVI   ICBCHPO(RB),RDCNT        RESTORE CCW CMND           DMOR
         LA    RE,ICBCHPO(RC)           PT TO FIRST ICB CHP        DMOR
*                                                                  DMOR
* ICBS AND RD CNTS LINKED                                          DMOR
*                                                                  DMOR
         LA    RDEB,RNOPOFF(RB)         PT TO LAST ICBS RD NOP
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY  DMOR
         BO    LAB111                   BRANCH IF YES              DMOR
         ST    RE,D4(RDEB)              PUT ADDR IN RH OF NOP/TIC  DMOR
         B     LAB115                   BRANCH AROUND NEXT         DMOR
*                                                                  DMOR
LAB111   EQU   *                                                   DMOR
*                                                                  DMOR
         ST    RE,D0(RDEB)              PUT IN NOP CCW             DMOR
         MVI   D0(RDEB),NOP             RESTORE NOP CMND           DMOR
*                                                                  DMOR
*                                                                  DMOR
LAB115   EQU   *
*                                                                  DMOR
         LA    RC,RNOPOFF(RC)           PT TO WRT CHP ADDR         DMOR
         SH    RD,CON16                 BACK UP CCW PTR PAST CCHHR DMOR
         TM    DCBOPTCD,VALCHK          WRT CHK USED               DMOR
         BO    LAB121                   BRANCH IF YES              DMOR
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY  DMOR
         BO    LAB121                   BRANCH IF YES              DMOR
         SR    RD,RUCB                  BACK PAST RD SECTOR        DMOR
         AR    RC,RUCB                  INCR POINTER
         ST    RC,D4(RD)                PUT ADDR IN RH OF NOP/TIC  DMOR
         B     LAB141                   GO AROUND NEXT INSTS       DMOR
*                                                                  DMOR
LAB121   EQU   *                                                   DMOR
*                                                                  DMOR
         ST    RC,D0(RD)                PUT ADDR IN LAST ICB NOP   DMOR
         MVI   D0(RD),NOP               RESTORE NOP CMND           DMOR
*                                                                  DMOR
LAB141   EQU   *                                                   DMOR
*                                                                  DMOR
         L     RC,DCBIOBA               GET FIRST ICB ADDR         DMOR
         L     RDEB,DCBDEBAD            GET DEB ADDR               DMOR
*                                                                  DMOR
* NOPS NOW LINKED TO CHANNEL PROGRAMS                              DMOR
*                                                                  DMOR
         TM    SXTN(RDEB),OUTIN         DCB FOR OUT/IN             DMOR
         BO    LAB151                   BRANCH IF YES              DMOR
         LA    RE,RNOPOFF(RC)           GET RD NOP ADDR            DMOR
         B     LAB161                   GO AROUND NEXT             DMOR
*                                                                  DMOR
LAB151   EQU   *                                                   DMOR
*                                                                  DMOR
         LA    RE,WNOPOFF(RC)           GET NORM WRITE NOP OFFSET  DMOR
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD READY  DMOR
         BO    LAB161                   BRANCH IF YES              DMOR
         AR    RE,RUCB                  INCR OFFSET REG            DMOR
*                                                                  DMOR
LAB161   EQU   *                                                   DMOR
*                                                                  DMOR
         ST    RE,D12(RF)               PUT NOP OFFSET IN MIOB
         MVI   12(RF),IOBCEXCP          SET EXCP NEEDED FLAG     YM6583
*
* SET UP FOR XCTL OUT TO NEXT EXECUTOR
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,NXTEXEC         NEXT EXECUTOR          @Z30TSCF
RELOOP   EQU   *
         LA    RWTGC,EIGHT(RWTGC)       INCR  CURRENT WTG ENTRY
         LA    RPARC,D4(RPARC)          INCR DCB ENTRY PTR
         CLC   D0(TWO,RWTGC),AMIDCNST   IS THIS RTN NEEDED AGAIN
         BCR   EIGHT,RBASE              IF YES GO BACK
*
         CLC   D0(TWO,RWTGC),OPIDCNST   IS THIS END OF TABLE
         BNE   RELOOP                   BRANCH IF NO
*
         LR    RPARC,RPAR
         LA    RWTGC,D32(RWTG)          REINIT WTG LIST PTR
ZCHEK    EQU   *
         CLI   D0(RWTGC),ZERO           THIS ENTRY COMPLETE
         BNE   TCTLRTN                  BRANCH IF NO
*
*
         LA    RWTGC,EIGHT(RWTGC)       GET NEXT ENTRY
         LA    RPARC,D4(RPARC)
         B     ZCHEK                    GO TO NEXT ENTRY
*
*
TCTLRTN  EQU   *
*
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
*
* SET SECTOR BUILD RTN
*
LABSTA   EQU   *
         L     RE,DXCCW11               GET SET THETA ADDR
         ST    RE,D0(RD)                PUT IN CCW
         MVI   D0(RD),SETSC             PUT IN CCW CMND
         OI    FLAGOFF(RD),CC           COMMAND CHAIN CCW
         B     LAB555                   GO FINISH CCW
*
*
*
*
* NOP AND READ SECTOR ENTRY
*
*
LABNOPS  EQU   *
*
         SR    RD,RUCB                  BACK UP POINTER
         MVC   D5(THREE,RD),D1(RD)      MOVE ADDR TO RH OF TIC NOP
         LA    RE,EIGHT(RD)             GET NEXT CCW POINTER
         ST    RE,D0(RD)                PUT IN CCW
         MVI   D0(RD),TIC               CHANGE NO TO TIC
         AR    RD,RUCB                  INCR POINTER
*
*
* READ SECTOR BUILD RTN
LABRTA   EQU   *
         L     RE,DXCCW11               GET READ THETA ADDR      Y02072
         ST    RE,D0(RD)                PUT IN CCW
         MVI   D0(RD),RDSC              PUT IN CCW CMND
LAB555   EQU   *
         MVI   CNTOFF(RD),ONE           SET BYTE CNT TO ONE
         AR    RD,RUCB                  INCR PTR
         BR    RC                       RETURN
*
* SEARCH AND TIC BUILD ROUTINE
*
LABSRCH  EQU   *
         ST    RE,D0(RD)                PUT ADDR IN CCW
         MVI   FLAGOFF(RD),CC           TURN ON CC
         MVI   CNTOFF(RD),FIVE          SET BYTE CNT TO FIVE
         ST    RD,EIGHT(RD)             PUT SRCH CCW ADDR IN NEXT
*                                       CCW
         MVI   D0(RD),SRCH              PUT IN SRCH CMND
         AR    RD,RUCB                  INCREMENT CCW PTR
         MVI   D0(RD),TIC               PUT IN TIC CMND
         AR    RD,RUCB                  INCR CCW PTR
         BR    RC                       RETURN
*
* NOP BUILD ROUTINE
*
LABNOP   EQU   *
         ST    RE,D0(RD)                PUT IN CCW
         MVI   FLAGOFF(RD),SIL          TURN ON SILI FLAG
         MVI   D0(RD),NOP               ENTER NOP CCW CMND
         MVI   CNTOFF(RD),ONE           SET BYTE COUNT TO ONE
         AR    RD,RUCB                  INCR POINTER
         BR    RC                       RETURN
*
* THE FOLLOWING ROUTINE TESTS TO SEE IF THIS JOB IS RUNNING IN   Y02072
* A VIRTUAL ENVIRONMENT.  IF YES, PCI BIT SHOULD NOT BE LEFT ON. Y02072
* IF NO, PCI BIT SHOULD BE LEFT ON.                              Y02072
*
LAB666   EQU   *                                                 Y02072
         L     RWK1,DCBDEBAD            GET DEB ADDRESS          Y02072
         USING DEBBASIC,RWK1                                     Y02072
         L     RWK1,DEBTCBAD            TCB ADDR FOR V=R TEST    Y02072
         DROP  RWK1                                              Y02072
         USING TCB,RWK1                                          Y02072
         TM    TCBFLGS6,TCBRV           JOB RUNNING VIRT         Y02072
         BOR   RRET                     NO, LEAVE PCI BIT ON     Y02072
         USING CCW,RWK3                                          Y02072
         NI    CCWFLGS,X'FF'-CCWPCI     YES, TURN PCI BIT OFF    Y02072
         DROP  RWK3                                              Y02072
         BR    RRET                     RETURN MAINLINE          Y02072
*
* CONSTANTS
*
CON16    DC    H'16'                    CONSTANT OF SIXTEEN
AMIDCNST DC    C'1X'                    THS ID                    DMOR
OPIDCNST DC    C'0S'                    END ID
SOP8A    DC    C'1J',VL3(IGG0191J)      DISK EXECUTOR          @Z30TSCF
NXTEXEC  DC    C'13',VL3(IGG01913)   TO LOAD ACCESS METH RTNS  @Z30TSCF
OFFSETD  DC    X'3058'                  OFFSET
         SPACE 6
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
*
*
* DSECTS USED IN MODULE
*
         DCBD  DSORG=PS
*
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT
         IECDSECS (MAIN,(IOB,NO)),IOB,WTG,PREFX,EXPAND=YES     @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
         EJECT
FORCORE  DSECT                                                   Y02072
         IHAFCAUD  ORG=YES                                       Y02072
         EJECT
         IHACCW  DSECT=YES                                       Y02072
         EJECT
         IKJTCB                                                  Y02072
         EJECT
         IEZDEB                                                  Y02072
         END
