197E TITLE  'IGG0197E - LOADS FCB, ANALYZES MESSAGES '
IGG0197E CSECT
*MODULE NAME - IGG0197E                                          Y02072
*
*DESCRIPTIVE NAME - FCB LOAD AND MESSAGE ANALYSIS                Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*                                                                M0099
*0981409000-410000                                               M0084
*0981                                                            S21092
*0981001000,645000-655000                                        M0092
*136800,235240,669200-669600                                     M0191
*        VS1 RELEASE 01 DELETIONS
*120000,128000,323000,324000,325000                              YM3213
*
*        VS2 RELEASE 02 DELETIONS                                Y02072
*000620,001820,001860,002500,053000,075000,146000,162000,202500, Y02072
*204600,308000,329000-331000,357000-362000,445000-447000,        Y02072
*618000-627600,650000,032000-039000,571000,601000-602000,        Y02072
*606000,617000,650000                                            Y02072
*                                                                YM4697
*
*        VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*C495100                                                       @ZA12979
*D498000-506100                                                @ZA12979
*C157700-157760                                                @ZA20901
*A279500-282500                                                @ZA20901
*C157700,157760                                                @ZA25670
*A297700,297800                                                @ZA25670
*C157700-157760                                                @ZA28402
*A282500,283100                                                @ZA28402
*A293500                                                       @ZA32079
*C635500-636000                                                @ZA01357
*
*FUNCTION/OPERATION - ISSUE WAIT FOR OPERATOR REPLY TO MESSAGE   Y02072
*                     IEC129 IF REQUIRED                         Y02072
*                   - DETERMINE IF FCB IMAGE IS SPECIFIED IN     Y02072
*                     DCB EXIT LIST:                             Y02072
*                     A) IF YES, USE IT                          Y02072
*                     B) IF NO, ISSUE BLDL TO LOCATE IMAGE IN    Y02072
*                        SYS1.IMAGELIB                           Y02072
*                        ISSUE LOAD TO READ IMAGE INTO MAIN STG  Y02072
*                        SET AN AUDIT TRAIL BIT INDICATING TO    YM4697
*                        FORCE CLOSE THAT AN FCB IMAGE HAS BEEN  YM4697
*                        LOADED                                  YM4697
*                   - WHEN FCB IMAGE IS NOT FOUND IN SYS1.IMAGELIB
*                     ISSUE MESSAGE TO REQUEST AN OPERATOR TO SPECIFY
*                     AN ALTERNATE FCB IMAGE
*                   - ANALYZE REPLY FROM OPERATOR                Y02072
*                   - LOAD FCB IMAGE INTO FCB
*                   - DETERMINE NEXT EXECUTOR TO XCTL TO.
*
*ENTRY POINT - ENTRY IS FROM IGG0191T,IGG0191V, OR IGG0197U BY   Y02072
*              USE OF XCTL MACRO
*
*INPUT - DCB ADDRESS
*      - OPEN WORK AREA ADDRESS
*      - WHERE-TO-GO TABLE
*      - PARAMETER LIST
*      - CURRENT ENTRY IN WTG TABLE
*      - CURRENT PARAMETER (DCB)
*      - REPLY IN OPEN WORK AREA
*
*OUTPUT - THE ADDRESS OF FCB RETRIEVED FROM SYS1.IMAGELIB
*       - A REQUEST TO AN OPERATOR TO SPECIFY ALTERNATE FCB IMAGE
*         'IEC127D XXX,IMAGE ID,FCB IMAGE NOT FOUND'
*
*EXTERNAL REFERENCES - MESSAGE CSECT                             Y02072
*
*EXIT - NORMAL - IGG0197F FOR ALL CONDITIONS                     Y02072
*
*EXIT - ERROR - XCTL TO IGG0197F FOR THE FOLLOWING CONDITIONS    Y02072
*               TO GET A DMABCOND ISSUED:                        Y02072
*               1- PERMANENT I/O ERROR FROM BLDL                 Y02072
*               2- OPERATOR REPLIED CANCEL TO MESSAGES IEC129    Y02072
*                  OR IEC127                                     Y02072
*
*TABLES/WORK AREAS- OPEN WORK AREA     (SEE IECDSECTS)
*                 - WHERE-TO-GO TABLE  (SEE LISTING OF IGG0191B)
*
*MACROS-ACTION:MODESET, BLDL, LOAD, EXCP, WAIT, DELETE, XCTL,    Y02072
*              XCTLTABL                                          Y02072
*
*MACROS-MAPPING:IGGMSG, DCBD, IECDSECT, IEFUCBOB, CVT, IGGSCW,   Y02072
*               IHAFCAUD                                         YM4697
*
*ATTRIBUTES - REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY   Y02072
*             UNLESS OTHERWISE SPECIFIED, SUPER STATE            Y02072
*
*NOTES - USES BLDL MACRO TO LOCATE FCB IMAGE IN SYS1.IMAGELIB
*      - USES LOAD MACRO TO LOAD FCB IMAGE FROM SYS1.IMAGELIB
*     -  USES EXCP/WAIT MACRO TO LOAD IMAGE IN TO BUFFER
*      - USES WTO/WTOR SVC TO REQUEST OPERATOR REPLYS
*      - USES DELETE MACRO TO DELETE FCB IMAGE IF NOT USEABLE
*      - BEFORE ISSUING A WTO/WTOR, THE MESSAGE TEXT MUST FIRST  Y02072
*        BE EXTRACTED FROM A MESSAGE CSECT.                      Y02072
*
         EJECT
***********************************************************************
*
*   REGESTER CONVENTIONS USED THRUOUT ALL OPEN PASSES
*
***********************************************************************
*
RE       EQU   0                        WORK/PARAMETER REGISTER
RWK1     EQU   RE                       WORK REGISTER            Y02072
RF       EQU   1                        WORK/PARAMETER REGISTER
RWK2     EQU   RF                       WORK REGISTER            Y02072
RDCB     EQU   2                        ADDRESS OF USER'S DCB
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        ADDRESS OF OPEN WORK AREA
RPAR     EQU   5                        PARAMETER LIST
RWTG     EQU   6                        START OF WTG TABLE
RPARC    EQU   7                        CURRENT ENTRY IN PARAMETER LIST
RWTGC    EQU   8                        CURRENT ENTRY IN WTG TABLE
RWK3     EQU   9                        WORK REGISTER            Y02072
RUCB     EQU   10                       UCB ADDRESS/WORK REGISTER
RDEB     EQU   11                       DEB ADDRESS
RWK5     EQU   RDEB                     WORK REGISTER            Y02072
RB       EQU   12                       WORK REGISTER/BREG FOR DSECT
RC       EQU   13                       WORK REGISTER
RWK6     EQU   RC                       WORK REGISTER            Y02072
RD       EQU   14                       WORK/PARAMETER REGISTER
RJ       EQU   15                       WORK/PARAMETER REGISTER
RWK7     EQU   RJ                       WORK REGISTER            Y02072
*
***********************************************************************
*
*   EQUATE WTG OFSET
*
WGOFF    EQU   8                        OFFSET OF CURRENT WTG ENTRIES
PLOFF    EQU   4                        OFFSET OF CURRENT DCB ENTRIES
WAOFF    EQU   32                       OFFSET OF 1ST ENTRY IN WTG TAB
FCBOPTNS EQU   X'05'                    FCB OPTION DISPLACEMENT
*
**********************************************************************
*
*   GENERAL EQUATES
*
***********************************************************************
*
FOUR     EQU   X'04'
TWO      EQU   2                        CONSTANT
BLANK    EQU   X'40'
NULL     EQU   X'00'
NOREPETS EQU   X'05'
COMMA    EQU   C','
VERFYCN2 EQU   C'V'
ALIGNCN2 EQU   C'A'
ALIGNMSK EQU   X'80'
VERFYMSK EQU   X'40'
EXCPMASK EQU   X'80'
BUFCNTRL EQU   X'01'
PCIMASK  EQU   X'20'
CORTRANS EQU   X'40'                    MASK FOR CORE TRANSFER   Y02072
EXLSTEND EQU   X'80'                    END OF EXIT LIST FLAG
FCBMASK  EQU   X'10'                    MASK FOR FCB ENTRY DCBXLST
FCBENDMK EQU   X'90'                    FCB AT END OF DCB EXLIST
UCBFCBOF EQU   X'08'                    FCB OFFSET IN UCB WORK AREA
ABEND    EQU   X'FF'                   ABEND SWITCH
LNIEC124 EQU   X'34'                    LENGTH OF IEC124 MESS1G5
SUCCFLCC EQU   X'7F'                    SUCCESSFUL COMPLETION CODE
SILION   EQU   X'20'                    SET SILI BIT           @ZAXXXXX
FCBLDCC  EQU   X'63'                    COMMAND CODE=LOAD FCB
FCBLTHOS EQU   X'01'                    FCB IMAGE LENGTH OFFSET
BSTFCBIM EQU   X'02'                    BYTES TO START OF FCB IMAGE
UNRLBMSK EQU   X'42'                    UNRELATED BIT MASK
NRETRYS  EQU   X'02'                    NUMBER OF TIMES TRY TO LOAD FCB
STGETWO  EQU   X'C7'                    ENTRY FLAG FOR 197F      Y02072
TWENTY6  EQU   26                       CONSTANT
PRT2245  EQU   X'0B'                    MASK FOR 2245 PRINTER    S21092
F2245ID  EQU   C'K'                    CONSTANT FOR 2245 ID'S     M0191
IEC129RQ EQU   X'80'                    191T, 191V, OR 197U      Y02072
*                                         ISSUED MSG IEC129;     Y02072
*                                         MUST WAIT ON OPER REP  Y02072
*
*  THE FOLLOWING MESSAGE NUMBERS ARE EQUAL TO THEIR POSITION     Y02072
*  IN THE MESSAGE CSECT (RELATIVE TO ZERO), MULT BY 2 (LENGTH    Y02072
*  OF AN INDEX).                                                 Y02072
*
MSG124   EQU   11*2                     MESSAGE NO IN MSG CSECT  Y02072
MSG125   EQU   9*2                      MESSAGE NO IN MSG CSECT  Y02072
MSG127   EQU   12*2                     MESSAGE NO IN MSG CSECT  Y02072
FCBIMLNG EQU   4                        LENGTH OF FCB IMAGE NAME Y02072
OABD101  EQU   101                      PROB DETERMINE CODE      YM3213
OABD102  EQU   102                      PROB DETERMINE CODE      YM3213
OABD103  EQU   103                      PROB DETERMINE CODE      YM3213
*
         EJECT
         BALR  RBASE,0                  INITIALIZE BASE REGISTER
         USING *,RBASE
         USING FORCORE,RCORE
         USING UCBOB,RUCB
         USING IHADCB,RDCB
         USING DEB,RDEB
*
*
***********************************************************************
*
*   INITIALIZE REGISTERS
*
***********************************************************************
*
         B     AROUND                   BR AROUND CONSTANTS      Y02072
         DC    C'IGG0197E'              MODULE NAME              Y02072
         DC    C'@ZA32079'              LAST SHIP CODE         @ZA32079
         DC    C'04/26/78'              LAST DATE MODIFIED     @ZA32079
AROUND   DC    0H'0'                                             Y02072
*
         L     RDCB,0(RPARC)            LOAD  CURRENT DCB ADDRESS
         L     RCORE,4(RWTGC)           LOAD  CURRENT WORK AREA ADDRESS
         L     RDEB,DCBDEBAD            LOAD  DEB ADDRESS FROM DCB
         L     RUCB,DEBUCBAD            LOAD UCB ADDRESS FROM DEB
         DROP  RDEB                                              Y02072
*
*
***********************************************************************
*
*   TEST THE ENTRY SWITCH TO DETERMINE REQUIRED OPERATION
*    (DXFCBSW1)       X'02' ENTRY FROM WTOR
*
***********************************************************************
*
         TM    DXFCBSW1,IEC129RQ        WAS MSG IEC129 ISSUED BY Y02072
*                                         AN EARLIER LOAD        Y02072
         BO    FCB1100                  YES, GO WAIT ON REPLY    Y02072
*
**********************************************************************
*
*   CORE TRANSFER ROUTINE FOR FCB IMAGES
*   * CK IF THE FCB IMAGE TO BE LOADED IS SPECIFIED IN THE DCBEXLST
*     YES-GO LOAD THE FCB IMAGE FROM THE DCBEXLST ADDRESS
*     NO -GO TO BLDL ROUTINE TO LOCATE IMAGE IN SYS1.IMAGELIB
*
**********************************************************************
*
FCB1030  EQU   *
*
         L     RB,DCBRECFM              GET ADDR OF DCBEXLST
         LA    RB,NULL(RB)              CLEAR ZERO BYTE
         LTR   RB,RB                    TEST IF DCBEXLST PRESENT
         BZ    FCB1060                  NO GO TO BLDL ROUTINE
         MODESET  KEYADDR=DXUKEY,WORKREG=15  GET INTO USER KEY   Y02072
*
*   YES CHECK IF FCB ENTRY IN DCB EXIT LIST
*
FCB1040  EQU   *
*
         CLI   NULL(RB),FCBMASK         CK IF ENTRY SPECIFIES FCB ADDR
         BE    FCB1050                  YES CK IF FCB IMAGE ID=FCB IM
*                                       SPECIFIED IN DD STATEMENT
         CLI   NULL(RB),FCBENDMK        FCB MASK AT END OF DCB EXLST
         BE    FCB1050                  IF SO GO CK IF IM=IMIN DD STS
*
         TM    NULL(RB),EXLSTEND        CK FOR END OF DCB EXLIST
         BO    FCB1055                  IF SO GO TO BLDL ROUTINE Y02072
*
FCB1045  EQU   *
*
         TM    NULL(RB),EXLSTEND        CK FOR END OF DCB EXIT LIST
         BO    FCB1055                 IF SO GO TO BLDL ROUTINE  Y02072
*
         LA    RB,FOUR(RB)              INCREMENT TO NEXT EXLST ENTRY
         B     FCB1040                  GO CK NXT EXLST ENTRY
*
*   CK IF FCB SPECIFIED IN DD STATEMENT CORRESPONDS TO IMAGE IN CORE
*
FCB1050  EQU   *
*
         L     RD,NULL(RB)              GET FCB IMAGE ADDR FROM EXLST
         LA    RD,NULL(RD)              CLEAR HIGH ORDER BYTE
         CLC   DXFCBID,0(RD)            CK IF FCB ID'S ARE EQ    Y02072
         BNE   FCB1045                  NO GO BACK TO EXLST
         LA    RB,FOUR(RD)              YES PUT ADDR OF FCB IMAGE IN
*                                         REGISTER
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         OI    DXFCBSW1,CORTRANS        INDIC USER SUPPLIED IM   Y02072
         B     FCB1070                  GO LOAD IMAGE INTO FCB BUFFER
***********************************************************************
*
*   BLDL ROUTINE TO LOCATE FCB IMAGE IN SYS1.IMAGELIB
*
***********************************************************************
*
FCB1055  EQU   *                       GET INTO DATA MANAG KEY   Y02072
         MODESET  EXTKEY=DATAMGT                                 Y02072
FCB1060  EQU   *
*
         MVC   DXBLDL,BLDLCNST          MOVE BLDL LEN TO LIST    Y02072
         MVC   DXBLDLIM,FCBCONST        MOVE 'FCB2' INTO NAME    Y02072
         CLI   UCBTBYT4,PRT2245        CHECK FOR 2245 PRINTER    S21092
         BNE   FCB1067                 NO, SKIP NEXT INSTRUCTION S21092
         MVI   DXBLDLIM+3,F2245ID       MOVE 'K' IN 4TH BYTE OF  Y02072
*                                      IMAGE ID (FCBK)           M0191
*
***********************************************************************
*
FCB1067  EQU   *                                                 S21092
*
***********************************************************************
*
         MVC   DXIMGNAM,DXFCBID         MOVE FCB NAME FROM JFCB  Y02072
*                                         TO BLDL LIST           Y02072
*
*   GET ADDRESS OF SYS1.IMAGELIB AND LOAD IT INTO REGISTER 1
*
         L     RF,DXIMGDCB              GET ADDR OF IMGLIB DCB   Y02072
         LA    RE,DXBLDL                GET ADDR OF BLDL LIST    Y02072
*
         BLDL  (1),(0)                  BLDL THE FCB DATA INTO CORE
*
*    TEST RETURN CODES FROM THE BLDL WHICH ARE FOUND IN REG.15 (RJ)
*        X'00' - IMAGE FOUND
*        X'04' - IMAGE NOT FOUND
*        X'08' - PERMANENT I/O ERROR
*
         LA    RD,FOUR                  SET  X'04' TO TEST RETURN CODE
         CLR   RD,RJ                    TEST RETURN CODE
         BE    FCB1080                  IMAGE NOT FOUND GO ISSUE IEC127
         BL    FCB1230                  PERMANENT I/O ERROR GO TO ABEND
*                                       IMAGE FOUND LOAD FCB IMAGE
*
***********************************************************************
*
*   LOAD FCB IMAGE FROM SYS1.IMAGELIB
*
***********************************************************************
*
         LA    RE,DXBLDLIM              LOAD ADDR OF BLDL LIST   Y02072
         L     RF,DXIMGDCB              GET ADDR OF IMAGELIB DCB Y02072
*
         LOAD  DE=(0),DCB=(1)           LOAD FCB FROM SYS1.IMAGELIB
*
         LR    RB,RE                    SAVE ADDRESS OF FCB IMAGE
         MVC   DXSAVFCB,DXBLDLIM        SAVE FCB ID FOR DELETE   Y02072
         OI    FCAOPEN2,FCAOFCBL        INDIC FCB IMAGE LOADED   YM4697
*
***********************************************************************
*
*   ISSUE EXCP TO LOAD BUFFER
*
***********************************************************************
*
FCB1070  EQU   *
*
         L     RC,UCBXTADR             LOAD UCB EXTEN ADDRESS  @ZAXXXXX
         TM    5(RC),X'01'             FCB PARITY ERROR        @ZA20901
         BO    FCB1071                 YES- RELOAD FCB IMAGE   @ZA20901
         USING UCBUCS,RWK6                                     @ZA20901
         CLC   DXFCBID,UCBFCBID        FCBIMAGE ALREADY LOADED @ZA20901
         DROP  RWK6                                            @ZA20901
         BE    FCB1191                 YES-GO TEST FOR VERIFY  @ZA20901
FCB1071  EQU   *                                               @ZA20901
         MODESET EXTKEY=SUPR           GET INTO SUPERVISOR KEY @ZA28402
         NI    5(RC),X'FE'             TURN OFF FCB PARITY ERR @ZA20901
         MODESET EXTKEY=DATAMGT        BACK TO DATA MGT KEY 5  @ZA28402
         LA    RC,NRETRYS               SET TO RETRY FCB LOAD ONCE
         XC    DXCCW1(8),DXCCW1         RESET CCW TO ZEROS
         MVI   IOBFLAG1,UNRLBMSK        SET IOB FLAG UNRELATED BIT ON
         LA    RE,BSTFCBIM(RB)          GET ADDRESS OF FCB IMAGE TO LD
         ST    RE,DXCCW1                STORE ADDR OF FCB IMAGE IN CCW
*
*  GET INTO KEY 0 AS WE COULD BE MOVING FROM USER KEY TO DATA    Y02072
*  MANAGEMENT KEY                                                Y02072
*
         MODESET  EXTKEY=SUPR                                    Y02072
         MVC   DXCCW1+7(1),FCBLTHOS(RB) STORE LNGTH OF FCB IMAGE IN CCW
         MVI   DXCCW1,FCBLDCC           MOVE COMMAND CODE=LOAD FCB INTO
*                                       CCW
         MVI   DXCCW1+4,SILION          SET SILI ON            @ZA32079
*
*   ISSUE EXCP AND WAIT FOR COMPLETION OF FCB LOAD
*
FCB1073  EQU   *
         L     RF,UCBXTADR              LOAD UCB EXTENSION ADDR  M0092
         MVC   8(4,RF),DXFCBID          PUT FCB IMAGE ID INTO    Y02072
*                                       UCB EXTENSION AREA            *
         MVC   5(1,RF),0(RB)            PUT FCB OPT INTO UCB   @ZA25670
*                                       EXTENSION              @ZA25670
         MVI   DXECB,NULL               CLEAR REPLY ECB
         LA    RF,DXIOB                 LOAD IOB ADDRESS IN REGISTER 1
*
         EXCP  (1)                      ISSUE EXCP
*
         LA    RF,DXECB                 LOAD ECB ADDRESS IN REG 1
*
         WAIT  ECB=(1)                  ISSUE WAIT
*
         CLI   DXECB,SUCCFLCC           CK IF FCB LOAD SUCCESSFUL
         BE    FCB1191                  YES GO CK OPTION BITS    Y02072
*                                       NO ERROR CONDITION EXIST
*
***********************************************************************
*
*   IF ERROR CONDITIONS EXIST, RETRY FCB LOAD ONE TIME
*
***********************************************************************
*
         BCT   RC,FCB1073               GO RETRY EXCP ONCE
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
*
***********************************************************************
*
*   IF A PERMANENT I/O ERROR OCCURED DURING AN FCB LOAD THE UCB IS
*   UP DATED WITH X'00' TO SHOW FCB NOT USABLE.
*
*
***********************************************************************
         LA    RWK5,MSG124              MESSAGE NO FOR MSG RTN   Y02072
         BAL   RWK6,GETMSG              GET MESSAGE              Y02072
         USING MSGENTRY,RWK2                                     Y02072
         IC    RWK7,MSGOFF1             OFFSET TO FIRST VAR FLD  Y02072
         LA    RWK3,8(RWK7,RCORE)       ADDRESS OF VAR FLD       Y02072
         MVC   0(L'UCBNAME,RWK3),UCBNAME  DEV NAME TO MSG        Y02072
         DROP  RWK2                                              Y02072
         LA    RF,MSGLSTSZ              LOAD ADDRESS FOR WTO
*
         SVC   35                       ISSUE WTO SVC
*
         MVI   DXFCBOPT,OABD102         INTERNAL CODE 102        Y02072
*
FCB1075  EQU   *
*
         MVI   DXSTAGE2,ABEND           SET ABEND SW             Y02072
         B     FCB1198                  GO LOAD ADDR IGG0197F
*
FCB1080  EQU   *
***********************************************************************
*
*   WTOR SEQUENCE FOR FCB IMAGE NOT FOUND REQUESTING OPERATOR REPLY
*   'IEC127D XXX,IMAGE ID FCB IMAGE NOT FOUND'
*   OPERATOR REPLYS:
*   'REPLY XX,'TEXT'' WHERE THIS IS AN ALTERNATIVE FCB IMAGE ID
*   'REPLY XX,'U'     USE CURRENT FCB IMAGE
*   'REPLY XX,'C'     CANCEL.
*
***********************************************************************
         LA    RWK5,MSG127              MESSAGE NO FOR MSG RTN   Y02072
         BAL   RWK6,GETMSG              GO GET MSG               Y02072
         USING MSGENTRY,RWK2                                     Y02072
WTO127   EQU   *                                                 Y02072
         IC    RWK7,MSGOFF1             OFFSET TO FIRST VAR FLD  Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF FIRST VAR FLD Y02072
         MVC   0(L'UCBNAME,RWK3),UCBNAME  MOVE DEV NAME TO MSG   Y02072
         IC    RWK7,MSGOFF2             OFFSET TO SECOND VAR FLD Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF SEC VAR FLD   Y02072
         MVC   0(FCBIMLNG,RWK3),DXCCW10+4  FCB IMAGE TO MSG      Y02072
         DROP  RWK2                                              Y02072
***********************************************************************
*
*   WTOR ROUTINE
*
***                                                                   *
*
FCB1090  EQU   *
*
         XC    RPLY(24),RPLY            ZERO OUT REPLY AREA AND ECB
*
         LA    RF,REPLYLTH              LOAD WTOR ADDRESS FOR SVC.
         SVC   35                       ISSUE WTOR SVC
FCB1100  EQU   *
         LA    RF,RPLYECB               GET ADDRESS OF REPLY ECB
*
         WAIT  ECB=(1),LONG=YES         WAIT ON REPLY            Y02072
*
***********************************************************************
*
*   REPLY ANALYSIS
*   (1) 'U' - USE CURRENT FCB IMAGE
*   (2) 'CANCEL'/'C' - FCB IMAGE NOT AVAILABLE
*   (3) 'FCB ID' - FCB ID WITH OPTIONS
*
***********************************************************************
         OC    RPLY(8),LOMASK           OR TO ALLOW LOWER CASE REPLY
         CLC   RPLY(2),RPLYEQU          CK IF REPLY = 'U '
         BE    FCB1125                  GO SET UP FOR LOAD       Y02072
         CLC   RPLY(4),REPLYUSE         OPERATOR REPLIED 'USE '
         BE    FCB1125                  GO SET UP FOR LOAD       Y02072
         CLC   RPLY(6),RPYEQCAN         CHECK IF REPLY V'CANCEL '
         BE    FCB1120                  GO SET CANCEL RET CODE & ABEND
         CLC   RPLY(2),RPLYEQC          CK IF REPLY = 'C '
         BNE   FCB1130                  GO TEST FCB PARAMETERS
*
FCB1120  EQU   *
*
***********************************************************************
*
*   SPECIFIED FCB IMAGE NOT FOUND IN SYS1.IMAGELIB,JOB STEP CANCELED
*   BY OPERATOR.
*
***********************************************************************
*
         MVI   DXFCBOPT,OABD103         INTERNAL CODE 103        Y02072
         B     FCB1075                  GO TO SETUP ABEND        M0084
*
***********************************************************************
*
*   OPERATOR REPLIED 'U' TO MESSAGE IEC127 - GET IMAGE ID        Y02072
*   FROM THE UCB AND SET UP TO RELOAD FCB                        Y02072
*
***********************************************************************
*
FCB1125  EQU   *                                                 Y02072
         L     RWK7,UCBXTADR            ADDR OF UCB UCS/FCB SECT Y02072
         USING UCBUCS,RWK7                                       Y02072
         MVC   DXFCBID,UCBFCBID         FCB ID TO WORKAREA       Y02072
         MVI   DXFCBOPT,0               CLEAR USER OPTIONS       Y02072
         DROP  RWK7                                              Y02072
         B     FCB1030                  GO FIND FCB IMAGE        Y02072
*
***********************************************************************
*
*   ANALYZE FCB PARAMETERS IN OPERATOR'S REPLY
*
***********************************************************************
*
FCB1130  EQU   *
*
         LA    RD,RPLY                  GET ADDRESS OF REPLY AREA
         LA    RJ,NOREPETS              LOAD NUMBER OF REPITIONS
         CLI   0(RD),COMMA              CK IF 1ST CHARACTER IS A COMMA
         BE    FCB1150                  YES GO TO ERROR ROUTINE
         CLI   0(RD),BLANK              CK IF 1ST CHARACTER IS A BLANK
         BE    FCB1150                  YES GO TO ERROR ROUTINE
*
         MVC   UCSID(4),LOMASK         BLANK OUT UCS ID BYTE
         MVI   MCSMASK,NULL             ZERO OUT LOAD MODE BYTE
FCB1140  EQU   *
*
         CLI   0(RD),BLANK              CK IF THIS CHARACTER IS A BLANK
         BE    FCB1190                  GO SET UP TO FIND IMAGE  Y02072
         CLI   0(RD),COMMA              CK IF CHARACTER IS A COMMA
         BE    FCB1160                  GO CK FOR FCB OPTIONS
         MVC   UCSID-RPLY(1,RD),NULL(RD) MOVE IN ONE BYTE OF FCB ID IMG
         LA    RD,1(RD)                 INCREMENT PTR TO NXT CHAR IN
*                                       REPLY
         BCT   RJ,FCB1140               GO EXAMINE NEXT CHAR OF REPLY
*
***********************************************************************
*
*   ERROR ROUTINE FOR INCORRECT OPERATOR REPLY
*
***********************************************************************
*
FCB1150  EQU   *
         LA    RWK5,MSG125              MESSAGE NO FOR MSG CSECT Y02072
         LA    RWK6,FCB1090             RETURN ADDRESS           Y02072
         B     GETMSG                   GO GET MSG               Y02072
***********************************************************************
*
*   CHECK FCB OPTIONS MUST BE EITHER 'VERIFY'/'V' OR 'ALIGN'/'A'
*
***********************************************************************
*
FCB1160  EQU   *
*
         XC    DXFCBP,DXFCBP            CLEAR FCB PARM WORK AREA Y02072
         CLC   1(6,RD),VERFYCN1         CK IF FCB VERIFY SPECIFIED
         BE    FCB1180                  GO SET OPTION BITS FOR VERIFY
         CLI   1(RD),VERFYCN2           CK IF FCB VERIFY SPECIFIED
         BE    FCB1180                  GO SET OPTION BITS FOR VERIFY
         CLC   1(4,RD),ALIGNCN1         CK IF ALIGN FORMS SPECIFIED
         BE    FCB1170                  GO SET OPTION BITS FOR ALIGN
         CLI   1(RD),ALIGNCN2           CK IF ALIGN FORMS SPECIFIED
         BNE   FCB1150                  NO GO TO REPEAT REPLY ROUTINE
*                                       YES FALL THROUGH TO SET ALIGN
*
FCB1170  EQU   *
         MVI   MCSMASK,ALIGNMSK         SET OPTION BIT TO ALIGN FORMS
         B     FCB1190                  GO CK FCB NAME
*
FCB1180  EQU   *
         MVI   MCSMASK,VERFYMSK         SET OPTION BIT FOR VERIFY
*                                       GO CK FCB NAME
FCB1190  EQU   *
*
         MVC   DXFCBOPT,MCSMASK         MOVE REPLY FCB OPTION    Y02072
         MVC   DXFCBID,UCSID            MOVE REPLY FCB ID TO     Y02072
*                                         WORKAREA               Y02072
         B     FCB1030                  GO FIND FCB IMAGE        Y02072
FCB1191  EQU   *                        BACK TO DATA MANAG KEY   Y02072
         MODESET  EXTKEY=DATAMGT                                 Y02072
FCB1192  EQU   *
         CLI   DXFCBOPT,VERFYMSK        CK IF VERIFY SPEC        Y02072
         BNE   FCB1194                  NO, CHECK ALIGN OPTION @ZA12979
*
*
*   SET UP TRANSLATION TABLE FOR USE BY IGG0197F TO VERIFY FCB IMAGE
*
*
         MVC   DXCCW3(TWENTY6),TRANSTAB MOVE IN TRANSLATION TABLE
*
*  GET INTO KEY 0 AS WE ARE MOVING FROM USER KEY TO DATA MANAG   Y02072
*  KEY.                                                          Y02072
*
         MODESET  EXTKEY=SUPR                                    Y02072
         MVC   DXCCW7+4(1),TWO(RB)      MOVE IN LINE/INCH INDICATOR
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
*
*
         B     FCB1198                  GO LOAD ADDRESS OF MODULE 7F
*
*
***********************************************************************
*
FCB1194  EQU  *
         CLI   DXFCBOPT,ALIGNMSK        ALIGN SPEC FOR THIS FCB  Y02072
         BNE   FCB1250                IF NOT GOTONEXT EXECUTOR
FCB1198  EQU   *
         LA    RF,MODNM7F             LOAD ADDRESS OF MODULE IGG0197F
         B     FCB1290                GO XCTL TO IGG0197F
FCB1230  EQU   *
         MVI   DXFCBOPT,OABD101         INTERNAL CODE 101        Y02072
         B     FCB1075                 GO SET ABEND SWITCH
FCB1250  EQU   *
         MVI   DXSTAGE2,STGETWO         SET SW FOR 197F          Y02072
         LA    RF,MODNM7F               GET ADDRESS OF IGG0197F
*
***********************************************************************
*
*   MOVE IDTTR TO XCTL WTG TABLE
*
***********************************************************************
*
FCB1290  EQU   *
*
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,0(RF)           ID TO WTG TABLE        @Z30TSCF
*
***********************************************************************
*
*   UPDATE WTG TABLE AND XCTL TO NEXT MODULE
*
***********************************************************************
*
FCB1300  EQU   *
*
         LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCREMENT CURRENT DCB ADDRESS
         CLC   0(2,RWTGC),AMIDCNST      IS ROUTINE NEEDED AGAIN
         BCR   8,RBASE                  IF YES,RETURN TO PROCESS
*
         CLC   0(2,RWTGC),OPIDCNST      TEST END OF WTG TABLE
         BNE   FCB1300                  NO GO CK NEXT ENTRY
*
         LR    RPARC,RPAR               RESET REG TO '0'
         LA    RWTGC,WAOFF(0,RWTG)      RESET WTG REG TO PT WTG +32
FCB1310  CLI   0(RWTGC),NULL            CK IF THIS ENTRY COMPLETE
         BNE   FCB1320                  IF NOT GO XCTL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY OF WTG TABLE
         LA    RPARC,PLOFF(0,RPARC)     GET NEXT ENTRY OF DCB
         B     FCB1310                  GO TO TEST COMPLETION
*
FCB1320  EQU   *
*
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
***********************************************************************
*
*   CONSTANTS
*
***********************************************************************
*
*   FOR WTG TABLE
OPIDCNST DC    C'0S'
AMIDCNST DC    C'7E'
MODNM7F  DC    C'7F',VL3(IGG0197F)      NEXT MOD'S ID          @Z30TSCF
*
*   MISC CONSTANTS
*
TRANSTAB DC    C'00010203040506070809101112' CHANNEL CODE TABLE
*   USED BY IGG0197F TO VERIFY AN FCB IMAGE
*
REPLYUSE DC    C'USE '                  REPLY = USE CURRENT FCB IMAGE
RPLYEQU  DC    C'U '                    REPLY='U',USE CURRENT IMAGE
RPYEQCAN DC    C'CANCEL'                REPLY='CANCEL' FOR FCB LOAD
RPLYEQC  DC    C'C '                    REPLY='C',CANCEL FCB LOAD
VERFYCN1 DC    C'VERIFY'
ALIGNCN1 DC    C'ALIGN'
*   THE FIRST TWO BYTES OF A BLDL PARAMETER LIST IS THE NUMBER OF
*   ENTRIES THAT FOLLOW AND THE NEXT TWO BYTES SHOW THE LENGTH OF
*   EACH ENTRY.   IT MUST BE LONG ENOUGH FOR A 'LOAD' MACRO,  BUT
*   NOT LONG ENOUGH TO OVERLAY OUR IMAGELIB DCB ADDRESS.
BLDLCNST DC    0CL4' ',YL2(1),YL2(DXIMGDCB-(DXBLDL+4))         @ZA01357
FCBCONST DC    C'FCB2'                  PREFIX FOR FCB IMAGE NAMES
         EJECT
***********************************************************************
*  'GETMSG' SUBROUTINE                                           Y02072
*  THIS SUBROUTINE EXTRACTS THE REQUIRED MESSAGE FROM THE MSG    Y02072
*  CSECT AND MOVES IT TO THE WTO/WTOR AREA.                      Y02072
*
*    INPUT TO THIS ROUTINE:                                      Y02072
*      REG 11 - MESSAGE NUMBER IN MSG CSECT                      Y02072
*      REG 13 - RETURN ADDRESS                                   Y02072
*
*    OUTPUT FROM THIS ROUTINE:                                   Y02072
*      MESSAGE TEXT IN WTO/WTOR AREA                             Y02072
*      REG 1 - POINTER TO MESSAGE ENTRY IN THE MESSAGE CSECT     Y02072
***********************************************************************
GETMSG   DS    0H                       ENTRY POINT, MSG ROUTINE Y02072
         L     RWK7,DXMSGADR            GET ADDR OF MSG CSECT    Y02072
         LH    RWK2,0(RWK7,RWK5)        GET INDEX TO MESSAGE     Y02072
         LA    RWK2,0(RWK7,RWK2)        ADDR OF MESSAGE ENTRY    Y02072
         USING MSGENTRY,RWK2                                     Y02072
         SR    RWK3,RWK3                PREPARE REGISTER         Y02072
         IC    RWK3,MSGOFF              GET OFFSET TO TEXT IN    Y02072
*                                         ENTRY                  Y02072
         LA    RWK3,0(RWK2,RWK3)        ADDR OF MESSAGE TEXT     Y02072
         SR    RWK7,RWK7                PREPARE REGISTER FOR RET Y02072
         USING MSGTXTD,RWK3                                      Y02072
         IC    RWK7,MSGLNG              GET LEN OF MSG - 1       Y02072
         EX    RWK7,MVCINST             MOVE MESSAGE             Y02072
         BR    RWK6                     RETURN                   Y02072
MVCINST  MVC   MSGAREA(0),MSGTXT        EXECUTED BY EX INST      Y02072
         SPACE
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF THIS MODULE       Y02072
***********************************************************************
*
*   DSECT
*
***********************************************************************
*
         EJECT
         IGGMSG                                                  Y02072
         EJECT
         DCBD  DSORG=PS
*
***********************************************************************
*
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
FORCORE  DSECT                                                   Y02072
         ORG   REPLYLTH+52                                       S21092
RPLY     DS    20C                      MSG REPLY AREA           M0191
RPLYECB  DS    F                        ECB FOR WTOR EXCP        M0191
MCSMASK  DS    H                        MASK FOR MCS             M0191
LOMASK   DS    8C                       MASK FOR LOWER CASE RPLY M0191
UCSID    DS    4C                       ID OF UCS IMAGE          M0191
         ORG   MSGLSTSZ                                          Y02072
MSGAREA  DS    0CL64                    AREA TO MOVE 64 BYTES    Y02072
*                                         TO FOR WTO/WTOR'S      Y02072
         IGGSCW                                                  Y02072
         EJECT
         IHAFCAUD  ORG=YES                                       YM4697
         EJECT
*
***********************************************************************
*
SRT      DSECT
         IEFUCBOB
*
***********************************************************************
*
CVT      DSECT
         CVT
*
***
*
*   DSECT FOR DEB
*
***********************************************************************
*
*   DATA EXTENT BLOCK  (UNTIL PROTIOS CHANGES)
DEB      DSECT
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOFLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBTVLSQ DS    0CL2                VOL SEQ FOR TAPE
DEBBINUM DS    CL2
DEBTVLNM DS    0CL2                NO OF VOL FOR TAPE
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES
DEBVOLSQ DS    H
DEBVOLNM DS    H
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2
DEBSUBID DS    H
*
         END
*
DEB      DSECT
DEBUCBAD DS    CL4                      ONLY PARAMETER NED FROM DEB
         END
