         TITLE ' IGG0191K INPUT DA EXECUTOR FOR PCI SCHEDULING'  S20201
IGG0191K CSECT
*MODULE NAME - IGG0191K                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 2 RELEASE 2 DELETIONS                              Y02072
*000550,011000,052600,067800,068900-068950,077200,119600,129118, Y02072
*129306,133200,134800,143000,146400,161300                       Y02072
*                                                                YM2424
*                                                                YM4697
*                                                                YM6583
*                                                                YM7595
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*          RELEASE 20 DELETIONS
*1242000200,031400,040800-041000,050000-051000,055400-055600,    S20201
*1242056800-059800,068600-069000,084200,085800-086000,097200-    S20201
*1242097600,097800,099200-099400,101200-117600,120200,121000-    S20201
*1242121200,125400-125800                                        S20201
*          RELEASE 21 DELETIONS
*0216005200,134400,140800-141400,149810-149930,161200-161400     S21042
*
*STATUS CHANGE LEVEL 005
*
*FUNCTION/OPERATION -- THIS EXECUTOR BUILDS THE MAIN IOB & ICBS THAT
*                      WILL CONTROL THEIR ASSOCIATED CHANNEL PROGRAMS.
*                      IT ALSO CONSTRUCTS INPUT OR OUTPUT CHANNEL PROG.
*                      AND FILLS IN DEVICE DEPENDANT FIELDS IN THE DCB.
*                      FOR QSAM THE CHANNEL PROGRAMS INCLUDE THE BUFFER
*                      ADDRESS,THE PHYSICAL BLOCK SIZE AND ASSC FLAGS.
*                      ALL ICBS ARE LINKED TOGETHER
*                      THE GETMAIN MACRO IS USED TO OBTAIN SPACE FOR
*                      THE IOB & ICBS.
*                      IT SETS AN AUDIT TRAIL BIT IN THE OPEN    Y02072
*                      WORKAREA INDICATING TO FORCE CLOSE THAT   Y02072
*                      THE CORE GETMAINED FOR THE IOB'S CAN BE   Y02072
*                      FREEMAINED.                               Y02072
*
*ENTRY POINTS  -   ENTERED AT IGG0191K FROM THE LEVEL ONE
*                      EXECUTOR IGG0191B VIA THE XCTL MACRO
*
*INPUT SUPPLIED-   USER DCB AND OPEN PARAMETERS -- SEE REGISTER USAGE
*
*OUTPUT GIVEN  -   MAIN IOB , ICBS AND CHANNEL PROGRAMS , DCB INITIAL
*
*
*EXTERNAL RTS. -   NONE
*
*EXITS-NORMAL: XCTL TO IGG01910(IECOSLDA)    TO LOAD ROUTINES
*
*EXITS-ERROR: XCTL TO PROBLEM DETERMINATION FOR WTP AND 013 ABEND
*
*MACROS : ACTION - MODESET, GETMAIN, XCTL, XCTLTABL, DMABCOND    Y02072
*
*MACROS : MAPPING - IECDSECS, IEZIOB, IHAICB, IHACCW, IKJTCB,    Y02072
*                   IEZDEB, DCBD, IHAFCAUD, IGGBCB               Y02072
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 35    WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 36-39 TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR  N TH DCB  (3 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (1 BYTE )
*                   IDTTR OF LAST ROUTINE LOAD       (3 BYTES)
*                   NOT USED                         (1 BYTE)
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN USER KEY               Y02072
*            UNLESS OTHERWISE SPECIFIED, SUPER STATE             Y02072
*
*
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RTIOT    EQU   9         USED HERE AS WRK REG AND  COMM VECTOR ADDR.
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RWK1     EQU   RUCB                     WORK REGISTER            Y02072
RDEB     EQU   11        DEB ADDRESS
RWK2     EQU   RDEB                     WORK REGISTER            Y02072
RB       EQU   12        WORK REG1  **
RWK3     EQU   RB                       WORK REGISTER            Y02072
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RBUFADR  EQU   RC        ADDR OF NEXT AVAILABLE BUFFER           YM7595
RD       EQU   14        WORK REG3  **
RWK5     EQU   RD                       WORK REGISTER            Y02072
RJ       EQU   15        WORK REG4
RE       EQU   0         WORK REG5
RF       EQU   1         WORK REG6
RWK6     EQU   RF                       WORK REGISTER            Y02072
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
*
*
*********************************************************************
* MASK'S TO TEST PARAMETER LIST WITH
INP      EQU   X'0F'
OUTP       EQU   X'0F'
UPDATE     EQU   X'04'
INOUT      EQU   X'03'
OUTIN      EQU   X'07'
RDBACK     EQU   X'01'
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
ONE        EQU   X'01'
FRTYATE    EQU   48
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'
*
*
STOWB      EQU   X'80'
WRTCK    EQU   X'80'
OVRFLO     EQU   X'20'
PCIB     EQU   X'20'
MINKEY     EQU   X'01'
CONCAT     EQU   X'FF'
SRCHDIRB EQU   X'40'
ONONYES  EQU   X'0C'
*
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB      EQU   X'01'
BSAMBIT    EQU   X'00'
PAM        EQU   X'02'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
NORCDRY  EQU   X'20'                    NO RECORD READY MASK     S20201
*
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN      EQU   X'30'
COMPLETE EQU   X'60'
FIRSTIOB   EQU   X'01'
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
EXCHANGB   EQU   X'10'
SIMPLEB    EQU   X'40'
*
*********************************************************************
*
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
SUBSTUTB   EQU   X'04'
*
*
*********************************************************************
*
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
*
*
SRCHE      EQU   X'31'
WRTCKD     EQU   X'1D'
RDC        EQU   X'92'
RDKD       EQU   X'8E'
RDD        EQU   X'86'
NOP      EQU   X'03'
TIC        EQU   X'08'
SETSC    EQU   X'23'                    SET SECTOR CCW CMND      S20201
RDSC     EQU   X'22'                    RD SECTOR CCW CMND       S20201
TICNOP   EQU   X'88'                    RCD READY TIC NOP        S20201
*
*
*********************************************************************
*
*
* MASKS FOR RECORD FORMATS
*
*
STANDRDF   EQU   X'08'
FORMATU    EQU   X'C0'
FORMATF    EQU   X'80'
FORMATV    EQU   X'40'
BLOCKED    EQU   X'10'
FSTANDRD EQU   X'88'
FIXBKD   EQU   X'90'
NOTPNTID EQU   X'05'
FORMATVS EQU X'48'    VARIABLE SPANNED                           M3641
*
*
*********************************************************************
*
*
*   CHANNEL CONTROL WORD FLAGS
*
SKIP       EQU   X'10'
SLI        EQU   X'20'
PCI      EQU   X'08'
CC         EQU   X'40'
DATACH     EQU   X'A0'
SLICC      EQU   X'60'
SLICCSK    EQU   X'70'
*
*
*********************************************************************
*
*
KEYS       EQU   X'01'
QSAM       EQU   X'01'
*
*
*********************************************************************
*
COMMTABL EQU   16
OABD065  EQU   65                                                S21042
*
*********************************************************************
*
*
*
* MISCELLANEOUS EQUATES AND DISPLACEMENTS
*
D0       EQU   0                        DISPLACEMENT OF 0        S20201
D1       EQU   1                        DISPLACEMENT OF 1        S20201
D2       EQU   2                        DISPLACEMENT OF 2        S20201
D3       EQU   3                        DISPLACEMENT OF 3        S20201
D4       EQU   4                        DISPLACEMENT OF 4        S20201
D5       EQU   5                        DISPLACEMENT OF 5        S20201
D6       EQU   6                        DISPLACEMENT OF 6        S20201
D7       EQU   7                        DISPLACEMENT OF 7        S20201
D8       EQU   8                        DISPLACEMENT OF 8        S20201
D15      EQU   15                       DISPLACEMENT OF 15       S20201
*
D40      EQU   40                       DISPLACEMENT OF 40       S20201
D51      EQU   51                       DISPLACEMENT OF 51       S20201
D52      EQU   52                       DISPLACEMENT OF 52       S20201
*
B0       EQU   0                        BYTE COUNT OF 0          S20201
B1       EQU   1                        BYTE COUNT OF 1          S20201
B3       EQU   3                        BYTE COUNT OF 3          S20201
B8       EQU   8                        BYTE COUNT OF 8          S20201
B16      EQU   16                       BYTE COUNT OF 16         S20201
*
IOBCEXCP EQU   X'80'                    IOBCNOPA FLAG            YM6583
RRRDNOP  EQU   64                       RCD READYS READ NOP      S20201
*                                       OFFSET                   S20201
*
*
*
         BALR  RBASE,0                  REG 3 IS BASE
         USING SOPA,RBASE               ESTABLISH BASE REGISTER
         USING IHADCB,RDCB              REG 2 IS DCB
         USING FORCORE,RCORE            REG 4 IS WORK AREA ADDR
*
*
SOPA     EQU   *                        FOR ADDRESSABILITY
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191K'              MODULE NAME              Y02072
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/17/74'              LAST DATE MODIFIED     @Z30TSCF
BEGIN    DS    0H                                                Y02072
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RCORE,4(RWTGC)           GET WORK AREA ADDRESS
*
         SR    RC,RC                    READY A WORK REG
         SR    RDEB,RDEB
*
*
*
         ST    RC,DCBCNTRL
         SR    RTIOT,RTIOT
         IC    RTIOT,DCBNCP             GET NUMBER OF ICBS TO BUILD
*
*
SOPA003  EQU   *
*
         LA    RF,64                    CONSTANT SIZE FOR ICB & CP.
*
* CHECK FOR RCD READY AND IF TO BE USED INCR ICB SIZE
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA03A                  BRANCH IF YES            S20201
         LA    RF,B8(RF)                INCR ICB SIZE            S20201
SOPA03A  EQU   *                                                 S20201
         MVI   DCBCNTRL+3,2             STORE INDEX FACTOR FOR PCI EOB
         TM    DCBMACRF,POINTB          NOTE/POINT TO BE USED
         BC    8,SOPA007                NO BRANCH
*
SOPA005  EQU   *
*
         MVI   DCBCNTRL+1,5             STORE INDEX FOR NOTE-POINT ID
*
SOPA007  EQU   *
*
         TM    DCBCIND2,QSAMB           IS QSAM BEING USED
         BC    8,SOPA009                NO BRANCH
*
         IC    RTIOT,DCBBUFNO           GET NO. OF ICBS TO GENERATE
SOPA009  EQU   *
*
         LTR   RTIOT,RTIOT              HAS NO OF CPS BEEN SPECIFIED
         BC    8,NOPCI                  N O BRANCH
         CH    RTIOT,CONONE             DOES BUFFER NO  = 1
*
         BC    8,NOPCI                  YES BRAN CH
*
*
SOPA011  EQU   *
*
         LR    RE,RF                    COPY ICB SIZE
         SRL   RE,3                     DIVIDE BY EIGHT
         STC   RE,DCBIOBL               SAVE FOR CLOSE
         LR    RE,RTIOT                 PREPARE TO COMPUTE SPACE REQ.
         MR    RE,RE                    NO. ICBS BY THEIR SIZE
         LA    RF,80(RF)                ADD SPACE FOR MAIN IOB
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA11A                  BRANCH IF YES            S20201
         LA    RF,B16(RF)               INCR MAIN IOB FOR SET    S20201
*                                       SECTS                    S20201
*                                       AND THETA VALUES
SOPA11A  EQU   *                                                 S20201
*
         LR    RB,RF                    SAVE FOR CLEARING RT.
         OI    DCBCIND2,DCBCNCHS        SET TRUE PCI INDICATOR   YM4697
*
*  THE FOLLOWING SAVES THE AMOUNT OF CORE GETMAINED FOR THE      YM4697
*  IOB AND ICBS IN THE FORCE CLOSE AUDIT TRAIL FOR THE FORCE     YM4697
*  EXECUTOR.                                                     YM4697
*
         ST    RF,DXATEXC2              SAVE LENGTH              YM4697
**********************************************************************
*
         MODESET  KEYADDR=DXUKEY,WORKREG=11 GET INTO USER KEY    Y02072
         GETMAIN R,LV=(RF),SP=0                                  Y02072
*
**********************************************************************
*
* OBTAIN AND TEMP SAVE THETA ADDRS MAY BE USED LATER
*
         LR    RJ,RB                    GET AREA LENGTH          S20201
         AR    RJ,RF                    OBTAIN LAST AREA+1 ADDR  S20201
         LA    RE,B8                    CONSTANT                 S20201
         SR    RJ,RE                    BACK UP ONE DW           S20201
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         ST    RJ,DXCCW11               TEMP STORE SET SECTORS   S20201
*                                       THETA ADDR
**
*    THIS SECTION CLEARS THE SPACE RECIEVED FROM GETMAIN
**
*
         LR    RJ,RB                    RESTORE LENGTH TO CLEAR
         ST    RF,DCBIOBAD              STORE MAIN IOB ADDRESS
         OI    FCAOPEN,FCAOIOB          INDIC IOB'S CAN BE FREED Y02072
         MODESET  KEYADDR=DXUKEY,WORKREG=11 GET INTO USER KEY    Y02072
         BCTR  RJ,0                     REDUCE AMT BT ONE
         LA    RB,255                   GET MAX AMT CAN CLEAR
COMPARE  CR    RJ,RB                    IS AMT TO CLEAR GREATER 255
         BC    12,ONECLEAR              NO BRANCH
*
         EX    RB,CLEAR                 CLEAR 256 BYTES
         SR    RJ,RB                    SUBT 255 FROM AMT TO BE CLEARED
         BCTR  RJ,0                     SUBT ONE MORE BYTE
         LA    RF,256(RF)               UPDATE AREA ADDR BY 256
         B     COMPARE
*
CLEAR    XC    0(1,RF),0(RF)            ACTUAL CLEAR INSTRUCTION
*
ONECLEAR EX    RJ,CLEAR                 CLEARS LESS THAN 256
*
*
*
         L     RB,DCBIOBAD              GET MAIN IOB ADDRESS
         LR    RC,RB                    SET UP WORK REG
         LR    RD,RB                    SET UP WORK REG
*
*
*    THIS SECTION OF CODE WILL BUILD THE MAIN IOB & CHANNEL PROGRAM
*
SOPA013  EQU   *
*
         LA    RUCB,80(RB)              POINT TO FIRST ICB
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA13AX                 BRANCH IF YES            S20201
         LA    RUCB,B8(RUCB)            INCR FOR RD SECTOR       S20201
SOPA13AX EQU   *                                                 S20201
         ST    RUCB,8(RB)               STORE IN MAIN IOB
         LA    RD,4(RB)                 POINT TO ECB IN MAIN IOB
*
         MVI   0(RD),X'7F'              POST MAINIOB COMPLETE
*
         LA    RF,56(RB)                POINT TO CP START ADDRESS
         USING IOBQSAMC,RWK3                                     Y02072
         ST    RD,IOBECBPT              ECB ADDR TO IOB          Y02072
         ST    RF,IOBSTART              CHAN PGM ADDRESS TO IOB  Y02072
         L     RWK2,DXUDCBAD            GET USERS DCB ADDRESS    Y02072
         ST    RWK2,IOBDCBPT            DCB ADDRESS TO IOB       Y02072
         DROP  RWK3                                              Y02072
         MVC   48(8,RB),DCBFDAD         MOVE D.A. ADDRESS TO MAIN IOB
         LA    RUCB,51(RB)              POINT TO CCHHR IN MAIN IOB
*
* CHECK FOR RCD READY AND IF USED BUILD SET SECTOR
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA13A                  BRANCH IF YES            S20201
         L     RDEB,DXCCW11             GET SET SECTOR ADDR      S20201
         ST    RDEB,D0(RF)              PUT IN CCW               S20201
         MVI   D0(RF),SETSC             PUT SET SECT CCW CMND    S20201
         OI    D4(RF),CC                TURN ON CMND CHAIN       S20201
         MVI   D7(RF),B1                BYTE CNT EQS ONE         S20201
         LA    RB,B8(RB)                INCREMENT BY EIGHT       S20201
SOPA13A  EQU   *                                                 S20201
*
         ST    RUCB,56(RB)              STORE IN SRCH CCW
         MVI   56(RB),SRCHE             STORE SRCH EQUAL CMD BYTE
         LA    RUCB,56(RB)              POINT TO SRCH CCW
         ST    RUCB,64(RB)              STORE IN TIC CCW
         MVC   60(5,RB),SCCWCNST        STORE CC FLG,LEN = 5 ,TIC OP
*                                       IN TIC
*
*
SOPA015  EQU   *
*
         MVI   72(RB),TIC               STORE TIC CMD BYTE
*
*
         LA    RB,80(RB)                POINT TO FIRST ICB
         MODESET  EXTKEY=DATAMGT        DATA MANAG KEY FOR ST    Y02072
         ST    RB,DCBIOBA               STORE ICB ADDRESS
         MODESET  KEYADDR=DXUKEY,WORKREG=11  BACK TO USER KEY    Y02072
         LR    RC,RB                    COPY ICB ADDRESS
*
*
ICBLOOP  EQU   *
*
*
         LTR   RTIOT,RTIOT              HAVE ALL ICBS BEEN GENERAED
         BC    8,SOPAEND                YES BRANCH
*
*
************** CONSTRUCTION OF ICB & CP COMMENCE **********************
*
*
         ST    RC,0(RB)                 STORE NEXT ICBAD IN LINK FLD.
         LR    RB,RC                    UPDATE TO NEXT ICB
         LA    RC,4(RB)                 POINT TO ECB IN ICB
         ST    RC,12(RB)                STORE ECB ADDRESS IN ICB
         MVI   4(RB),X'7F'              POST ECB COMPLETE FOR NOW
         LA    RC,D40(RB)               GET ICB CHP ADDR         S20201
         ST    RC,24(RB)                STORE CP ADDRESS IN ICB
         MVC   32(8,RB),DCBFDAD         STORE D.A. ADDRESS IN ICB
*
*
*        NOTE THAT THE DCB ADDRESS IS NOT STORED IN THE ICB
*
*
*
*
SOPA017  EQU   *
*
*
SOPA019  EQU   *
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,48              STORE READ DATA CCW OFFSET
         MODESET  KEYADDR=DXUKEY,WORKREG=11 GET INTO USER KEY    Y02072
         L     RUCB,DCBIOBAD
         MVI   2(RUCB),56               STORE READ NOP OFFSET
         LA    RE,99(RB)                POINT TO NEXT ICBS CCHHR FLD
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA19A                  BRANCH IF YES            S20201
         LA    RDEB,B8                  CONSTANT                 S20201
         AR    RE,RDEB                  INCR CCHHR PTR FOR RD    S20201
*                                       SECT                     S20201
SOPA19A  EQU   *                                                 S20201
*
         ST    RE,40(RB)                STORE IN THE CURR RD CNT CCW
         MVI   40(RB),RDC               STORE READ CMD BYTE (COUNT)
         MVC   44(4,RB),CCWCNSTS        STORE PCI,CC,SILI FLGSAND LEN
*
* MUST TEST FOR VIRTUAL ENVIRONMENT.  IF YES, TURN PCI FLAG OFF  Y02072
* IN CHAN PGM.  IF NO, LEAVE PCI FLAG ON.                        Y02072
*
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          Y02072
         USING DEBBASIC,RDEB                                     Y02072
         L     RWK2,DEBTCBAD            GET THE TCB ADDRESS      Y02072
         DROP  RDEB                                              Y02072
         USING TCB,RWK2                                          Y02072
         TM    TCBFLGS6,TCBRV           JOB RUNNING VIRTUAL      Y02072
         BO    SOPA19C                  NO, LEAVE PCI ON         Y02072
         USING ICB,RWK3                                          Y02072
         NI    CCWFLGS,X'FF'-CCWPCI     YES, TURN PCI OFF        Y02072
         DROP  RWK3                                              Y02072
         DROP  RWK2                                              Y02072
SOPA19C  MVI   48(RB),RDD               STORE READ DATA CMD BYTE Y02072
         OI    52(RB),SLICC             TURN ON SILI AND CC FLAGS
         TM    DCBRECFM,X'C0'           U  TYPE RECORDS
         BC    9,SOPA020A               YES  BRANCH
*
         TM    DCBRECFM,X'40'           V  RECORDS
         BC    1,SOPA020A               YES  BRANCH
*
*
SOPA020  EQU   *
*
         NI    52(RB),X'DF'             TURN SILI FLAG OFF
*
SOPA020A EQU   *
*
*
         TM    DCBCIND2,QSAMB           DCB USING QSAM
         BC    8,SOPA021                NO BRANCH
*
         LA    RUCB,48(RB)              POINT TO READ DATA CCW
*
* THE FOLLOWING PUTS BUFFER ADDRESS AND BYTE COUNT IN CCW
*
         L     RWK6,DCBBUFCB            ADDR BUF CNTRL BLOCK     YM7595
         USING BCBLK,RWK6
         L     RBUFADR,BCBBUFPT         ADDR NEXT AVAIL BUFFER   YM7595
         LTR   RBUFADR,RBUFADR          BUFFER ADDR VALID        YM7595
         BZ    ABEND                    NO, GO ISSUE DMABCOND    YM7595
         USING BUFFER,RBUFADR
         MVC   BCBBUFAD,BUFNXPTB        UPDATE WITH NEXT AVAIL   YM7595
         USING CCW,RUCB
         STCM  RBUFADR,B'0111',CCWADDRB  BUFFER ADDR TO CCW      YM7595
         MVC   CCWBYTE,DCBBLKSI         BYTE COUNT TO CCW        YM7595
         DROP  RUCB,RWK6,RBUFADR
         B     ICBCOMPT
*
SOPA021  EQU   *
*
         SR    RE,RE
         IC    RE,DCBKEYLE              GET KEY LEN IF SPECIFIED
         LTR   RE,RE                    ARE KEYS SPECIFIED ?
         BC    8,ICBCOMPT               NO  BRANCH
         MVI   48(RB),RDKD              STORE READ KEY&DATA CMD BYTE
*
ICBCOMPT EQU   *
*
         LA    RD,56(RB)                POINT TO NOP CCW
         LA    RC,64(RB)                POINT TO NEXT POSSIBLE ICB
*
SOPA023  EQU   *
*
ICBCOMON EQU   *
*
* CHECK FOR RCD READY AND IF USED BUILD RD SECTOR
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA023A                 BRANCH IF YES            S20201
         LA    RC,B8(RC)                INCR ICB PTR             S20201
SOPA023A EQU   *                                                 S20201
         LA    RUCB,D40(RC)             PT TO NEXT ICBS CP       S20201
*
*
         ST    RUCB,0(RD)               STORE NEXT CP ADDR IN NOP CCW
         MVI   0(RD),NOP                STORE NOP CMD BYTE
         OI    4(RD),X'20'              SET SILI ON IN CCW
         MVI   7(RD),ONE                STORE LENGTH IN CCW
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPA023D                 BRANCH IF YES            S20201
         L     RUCB,DXCCW11             GET RD SECTOR ADDR       Y02072
         ST    RUCB,D8(RD)              PUT IN CCW               S20201
         MVI   D8(RD),RDSC              PUT IN RD SECT CMND      S20201
         MVI   D15(RD),B1               SET BYTE CNT TO ONE      S20201
         MVC   D5(B3,RD),D1(RD)         MOVE ICB ADDR TO RH OF   S20201
*                                       CCW                      S20201
         LA    RUCB,D8(RD)              GET PTR TO RD SECT       S20201
         ST    RUCB,D0(RD)              PUT IN PREV CCW          S20201
         MVI   D0(RD),TICNOP            CHANGE CMND TO TIC       S20201
SOPA023D EQU   *                                                 S20201
*
*   AT THIS POINT A COMPLETE ICB AND CHANNEL PROGRAM IS GENERATED
*
*
*
         BCTR  RTIOT,0                  DECREMENT ICB COUNTER
         B     ICBLOOP                  REPEAT ICB LOOP
*
***********************************************************************
*
*
*
SOPAEND  EQU   *
         SPACE
         MODESET  EXTKEY=DATAMGT
         SPACE
         OI    FCAOPEN2,FCAOIOBC        INDIC ICBS COMPLETED     YM7595
         SPACE
         MODESET  KEYADDR=DXUKEY,WORKREG=10
         SPACE
         L     RUCB,DCBIOBA             GET FIRST ICB GENERATED
         ST    RUCB,0(RB)               TIE LAST ICB TO FIRST
         LA    RDEB,D40(RUCB)           GET FRST ICB CHP ADDR    S20201
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    SOPAXX                   BRANCH IF YES            S20201
         ST    RDEB,D4(RD)              PUT FIRST ICB CHP ADDR   S20201
*                                       IN                       S20201
*                                       RH OF TIC
         B     SOPAXZ                   GO AROUND NEXT           S20201
SOPAXX   EQU   *                                                 S20201
*
         ST    RDEB,0(RD)               STORE IN NOP CCW OF LAST ICB
         MVI   0(RD),NOP                STORE NOP CMD BYTE
SOPAXZ   EQU   *                                                 S20201
*
         LA    RDEB,35(RUCB)            POINT TO FIRST ICBS CCHHR FLD
         ST    RDEB,40(RB)              STORE IN RD COUNT CCW
         MVI   40(RB),RDC               STORE READ CNT CMD BYTE
         L     RB,DCBIOBA               GET FIRST ICB
         SR    RC,RC
         L     RUCB,DCBIOBAD
         IC    RC,2(RUCB)               GET INPUT NOP OFFSET
*
NO       EQU   *
*
         AR    RC,RB                    POIMT TO NOP CCW
*
         ST    RC,12(RUCB)              NOP ADDRESS IN MAIN IOB
         MVI   12(RUCB),IOBCEXCP        CAUSE EOB TO DO EXCP     YM6583
         MVC   32(8,RB),DCBFDAD         STORE MBBCCHHR IN ICB
         L     RB,0(RB)                 SPECIAL CONSIDERATIONS
         MVC   32(8,RB),DCBFDAD         STORE MBBCCHHR IN ICB
*
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         TM    DCBDSORG,DCBDSGPO        DCB USING PAM            Y02072
         BZ    SOPAEND2                 NO BRANCH                Y02072
         MVI   NTPTINDX+1,5             STORE INDEX FOR          Y02072
*                                         NOTE-POINT ID          Y02072
***********************************************************************
*
*        SELECT 3RD STAGE EXECUTOR
*
SOPAEND2 EQU   *
         USING FORCORE,RCORE
         TM    DCBRECFM,FORMATVS           VARIABLE/SPANNED TEST A28683
         BO    UTEST                    POSSIBLE VS              A28683
         USING WTGENTRY,RWTGC                                    Y02072
LOAD13   MVC   WTGIDTTR,SOPSLDFT        GET NON-SPAN LOAD EXEC @Z30TSCF
         B     RELOOP                                            A28683
UTEST    TM    DCBRECFM,FORMATU         UNDEFINED TEST           A28683
         BO    LOAD13                   NOT VS                   A28683
         MVC   WTGIDTTR,SOP3            GET SPAN LOAD EXEC     @Z30TSCF
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
*********************************************************************
*
ABEND    EQU   *
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         DMABCOND OABD065,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES  S21042X
                                        CALL PROBLEM DETERMINATION
         B     TCTLRTN                                           S21042
*
*
***********************************************************************
*
*
NOPCI    EQU    *
*
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP2           MUST GO TO NON PCI EXEC @Z30TSCF
         B      RELOOP
         EJECT
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
AMIDCNST DC    C'1K'
OPIDCNST DC    C'0S'
SOPSLDFT DC    C'13',VL3(IGG01913)      NON-SPANNED EXEC       @Z30TSCF
SOP3     DC    C'16',VL3(IGG01916)      SPANNED RECORDS        @Z30TSCF
SOP2     DC    C'1D',VL3(IGG0191D)     ABNORMAL, PCI UNSUPPORT @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROBLEM DETERMINATION  @Z30TSCF
*
***********************************************************************
*      CONSTANTS AND RESERVED STORAGE.
*
CONONE   DC    H'1'
CCWCNSTS DC    X'68000005'
SCCWCNST DC    X'4000000508'
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
         IGGBCB  TYPE=SAM
         EJECT
         DCBD  DSORG=PS
NTPTINDX EQU   DCBCNTRL                 NOTE/POINT INDEX         Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         IECDSECS (MAIN,(IOB,NO)),IOB,WTG,PREFX,EXPAND=YES     @Z30TSCF
         ORG   WTGIDTTR                                          Y02027
WTGID    DS    CL2                      NEXT MOD ID              Y02072
         EJECT
FORCORE  DSECT                                                   Y02072
         IHAFCAUD  ORG=YES                                       Y02072
         EJECT
         IEZDEB                                                  Y02072
         EJECT
         IKJTCB                                                  Y02072
         EJECT
         IHAICB                                                  Y02072
         ORG   ICBR+1                                            Y02072
         IHACCW  DSECT=NO                                        Y02072
           END
