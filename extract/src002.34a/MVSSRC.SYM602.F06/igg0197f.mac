         TITLE   'IGG0197F - FCB EXECUTOR, VERIFIES FCB '        M0099
IGG0197F CSECT
*MODULE NAME - IGG0197F                                          Y02072
*
*DESCRIPTIVE NAME - VERIFY FCB                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*                 RELEASE 21 DELETIONS
*1060157200,110500,186300,460350,46084-481000,632800             M1803
*                                                                M0099
*1060463000                                                      S21092
*1060662200-662600                                               M0191
*
*                 VS1 RELEASE 2 DELETIONS
*                                                                XM2963
*
*                 VS2 RELEASE 2 DELETIONS
*000500,001800,029000,047000,093200-093600,176500,242600,        Y02072
*243500-244400,265400,278600,279800,280400,281000,282800,285200, Y02072
*291200,295400,296000,300200,303200,304400,309800,312800,319400, Y02072
*380000,381000,386000-388000,419000-421000,499000,526050-526800, Y02072
*542070-542840,579000,613000-626000,642000,644000,593000,597000  Y02072
*500000,612000                                                   Y02072
*                                                                YM2424
*                                                                YM4697
*                                                                YM5708
*                                                                YM5923
*
*                 VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*A245000,405610,405620,407410,407420                           @AZ07594
*C304560,405000,406200,406800,408000                           @AZ07594
*D315200-320600                                                @AZ07594
*C229000                                                       @ZA09661
*A277410                                                       @ZA10220
*C186400,441600,441960                                         @ZA12979
*A190010,190020,440601,440602                                  @ZA12979
*D441300,441400                                                @ZA12979
*C174500,174560,205000                                         @ZA25668
*A205100                                                       @ZA25668
*A281570,281590                                                @ZA25088
*C174500,174560,281580                                         @ZA25088
*C174500,174560                                                @ZA29359
*A190040-190160                                                @ZA29359
*STATUS CHANGE LEVEL 002
*
*FUNCTION/OPERATION - TO CONSTRUCT AND EXECUTE A CHANNEL PROGRAM WHICH
*                     LOADS THE FCB.
*                   - PRINT OUT FCB IMAGE FOR VISUAL VERIFICATION AND
*                     ISSUE MESSAGE IEC128D VERIFY FORMS ALIGNMENT:AND
*                     ANALIZE OPERATOR REPLY WHEN REQUIRED
*                   - ISSUE IEC128 MESSAGE WITH OUT VERIFYING FCB IMAGE
*                     WHEN REQUIRED
*                   - DELETE ANY FCB IMAGE LOADED
*                   - CLOSE SYS1.IMAGELIB
*                   - RESET AUDIT TRAIL BITS INDICATING FCB      YM4697
*                     IMAGE LOADED AND SYS1.IMAGELIB OPENED      YM4697
*                   - UPDATE UCB WITH CURRENT FCB ID AND OPTIONS
*                   - XCTL TO NEXT OPEN EXECUTOR
*
*ENTRY POINTS - ENTERED FROM IGG0197E
*
*INPUTS - DCB ADDRESS
*       - OPEN WORK AREA ADDRESS
*       - WHERE TO GO TABLE
*       - PARAMETER LIST
*       - CURRENT ENTRY IN WTG TABLE
*       - CURRENT PARAMETER (DCB)
*       - ADDRESS OF FCB IMAGE RETRIVED IN IGG0197E
*       - ADDRESS OF SYS1.IMGLIB DCB IN OPEN WORKAREA(DXCCW8)
*
*OUTPUTS - FCB BUFFER LOAD
*        - PRINT OUT OF FCB IMAGE FOR VISUAL VERIFICATION
*        - MESSAGE TO OPERATOR TO VERIFY FORMS ALIGNMENT
*           'IEC128D V XXX,VERIFY FORMS ALIGNMENT'
*        - UPDATED UCB WITH NEW FCB ID
*
*EXTERNAL REFERENCES - MESSAGE CSECT                             Y02072
*
*EXITS - NORMAL - XCTL TO ONE OF THE FOLLOWING OPEN EXECUTORS
*                 - IGG01911 IF DCB IS FOR EXCP                  Y02072
*                 - IGG0191I IF BUFFER CNTRL BLOCK IS SPECIFIED
*                 - IGG0191G IF NORMAL SCHEDULING IS SPECIFIED
*                 - IGG0191Q IF CHAINED SCHEDULING IS SPECIFIED
*
*EXITS - ERROR - ISSUE DMABCOND MACRO FOR ONE OF THE FOLLOWING   Y02072
*              - PERMANENT I/O ERROR OCCURED DURING FCB LOAD.
*              - OPERATOR CANCELED BECAUSE OF AN INCORRECT FCB IMAGE
*                OR UNABLE TO ALIGN FORMS.
*              - IGG0197E SET ABEND FLAG FOR THIS EXECUTOR
*
*TABLES/WORK ARES - WHERE-TO-GO TABLE (SEE LISTING EXECUTOR IGG0191B)
*                 - OPEN WORK AREAS (IECDSECT)
*
*ATTRIBUTES - REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY   Y02072
*             UNLESS OTHERWISE SPECIFIED, SUPER STATE            Y02072
*
*MACROS-ACTION:MODESET, DMABCOND, EXCP, WAIT, DELETE, XCTL       Y02072
*
*MACROS-MAPPING:IGGMSG,IECDSECS(MAIN,WTG), DCBD, IEFUCBOB,IKJTCB Y02072
*               IHAFCAUD
*
*NOTES - EXCP/WAIT MACROS USED TO LOAD FCB
*      - DELETE MACRO USED TO DELETE FCB IMAGE FROM CORE
*      - SVC 35 USED FOR WTOR (WRITE TO OPERATOR TO REQUEST REPLY)
*      - OPEN WORK AREA USED FOR IOB/ECB
*      - LOWER CASE OPERATOR REPLYS ALLOWED
*      - BEFORE ISSUING A WTO/WTOR, THE MESSAGE TEXT MUST FIRST  Y02072
*        BE EXTRACTED FROM A MESSAGE CSECT.                      Y02072
*
***********************************************************************
*
*   REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN MODULES
*
***********************************************************************
*
RE       EQU   0                        WORK/PARAMETER REGISTER
RWK1     EQU   RE                       WORK REGISTER            Y02072
RF       EQU   1                        WORK/PARAMETER REGISTER
RWK2     EQU   RF                       WORK REGISTER            Y02072
RDCB     EQU   2                        ADDRESS OF USER'S DCB
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        ADDRESS OF OPEN WORK AREA
RPAR     EQU   5                        PARAMETER LIST
RBRNCH   EQU   RPAR                     BRANCHING REGISTER       Y02072
RWTG     EQU   6                        START OF WTG TABLE
RWK8     EQU   RWTG                     WORK REGISTER            Y02072
RPARC    EQU   7                        CURRENT ENTRY IN PARAMETER LIST
RWTGC    EQU   8                        CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                        TIOT ADDRESS/WORK REGISTER
RUCB     EQU   10                       UCB ADDRESS/WORK REGISTER
RDEB     EQU   11                       DEB ADDRESS
RWK3     EQU   RDEB                     WORK REGISTER            Y02072
RB       EQU   12                       WORK REGISTER/BASE R FOR DSECT
RWK7     EQU   RB                       WORK REGISTER            Y02072
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK/PARAMETER REGISTER
RJ       EQU   15                       WORK/PARAMETER REGISTER
RWK6     EQU   RJ                       WORK REGISTER            Y02072
*
***********************************************************************
*
*   WTG OFFSET EQUATES
*
***********************************************************************
*
WGOFF    EQU   8                        OFFSET OF CURRENT WTG ENTRIES
PLOFF    EQU   4                        OFFSET OF CURRENT DCB ENTRIES
WAOFF    EQU   32                       OFFSET OF 1ST ENTRY IN WTG TAB
*
***********************************************************************
*
*   GENERAL EQUATES
*
***********************************************************************
*
VERFYSWT EQU   X'01'                    ENTRY IS FOR VERIFY ONLY SWITCH
ABEND    EQU   X'FF'                   ABEND RETURN CODE SWITCH
ALIGNSWT EQU   X'04'                    ENTRY IS FOR ALIGN FORMS SWITCH
NRETRYS  EQU   X'01'                    NUMBER OF TIMES TRY TO LOAD FCB
FCBLDCC  EQU   X'63'                    COMMAND CODE=LOAD FCB
UNRLMASK EQU   X'02'                    IOB IS UNRELATED
BSTFCBIM EQU   X'02'                    BYTES TO START OF FCB IMAGE
FCBLTHOS EQU   X'01'                    FCB IMAGE LENGTH OFFSET
SUCCFLCC EQU   X'7F'                    SUCCESSFUL COMPLETION CODE
LNIEC124 EQU   X'30'                    LENGTH OF IEC124 MESSAGE
PERMIOER EQU   X'0C'                    RETURN CODE=PERMANENT I/O ERROR
ABENDBIT EQU   X'80'                    ABEND IN PROCESS MASK
ABCDB13  EQU   X'B13'                   COMPLETION CODE=B13 (OPEN-1403)
VERFYMSK EQU   X'40'                    FCB OPTION BITS = VERIFY
ALIGNMSK EQU   X'80'                    FCB OPTION BITS = ALIGN FORMS
SILICCMK EQU   X'60'                    MASK TO SET SILI + C.C.FLAGS
SKIPCH1  EQU   X'8B'                    COMMAND CODE=SKIP TO CHANNEL 1
STGETWO  EQU   X'C7'                    ENTRY FLAG                M1803
WTSKP2   EQU   X'11'                    COMMAND CODE=WRITE + SPACE 2
WTSKP1   EQU   X'09'                    COMMAND CODE=WRITE + SPACE 1
HDLENGTH EQU   X'34'                    HEADING LENGTH
SILIMASK EQU   X'20'                    MASK TO SET SILI FLAG
LPIEQ8   EQU   X'10'                    8 LINES/INCH SPACEING
UBLKDCMK EQU   X'40'                    UNBLOCK DATA CHECK MASK
UNRLBMSK EQU   X'42'                    UNRELATED BIT MASK
PRTLNLTH EQU   X'84'                    LENGTH OF VERIFICATION LINE
NUMBMASK EQU   X'F0'                    MASK TO CONVERT TO NUMERIC
ENDMARK  EQU   X'10'                    END OF FCB IMAGE INDICATOR
BLDLLOAD EQU   X'D3'                    FLAG FOR FCB LOADED INTO CORE
DELENDMK EQU   X'0F'                    DELETE END MARKER MASK
UCBUCSOF EQU   X'00'                    UCS OFFSET IN UCB WORK AREA
UCSOPOFS EQU   X'04'                    UCS OPTIONS OFFSET
UCBFCBOF EQU   X'08'                    FCB OFFSET IN UCB WORK AREA
FCBOPTNS EQU   X'05'                    FCB OPTIONS OFFSET
CMDRTYMK EQU   X'80'                    COMMAND RETRY MASK
BUFPARMK EQU   X'04'                    BUFFER PARITY MASK
BUFPARER EQU   X'01'                    UCS OPTIONS BUFFER PARITY ER
SKPCH0CD EQU   X'83'                    SKIP TO CH 0 COMMAND CODE
EXCPMASK EQU   X'80'                    OPTCD = EXCP
PCIMASK EQU    X'20'                    OPTCD=PCI
BFCNTRL  EQU   X'01'                    BUFFER CONTRL BLOCK FLAG
LNTH1STL EQU   X'2D'                    LENGTH OF VERIFICATION HEADING
IOERROR  EQU   X'10'                    I/O ERROR DURING FCB VERFIFCATN
IMCLOSED EQU   X'FF'                    FLAG SET FOR IMAGELIB NOT OPEN
SIX      EQU   C'6'
NULL     EQU   X'00'
BLANK    EQU   X'40'
ONEMASK  EQU   X'01'
THREE    EQU   X'03'
FOURMASK EQU   X'04'
TWO      EQU   X'02'
FIVE     EQU   X'05'
K27      EQU   X'1B'
K20      EQU   X'14'                    LENGTH PRT LINE
K23      EQU   X'17'                    LENGTH LAST VERIF LINE
K1       EQU   1
K41      EQU   X'28'
SIXC     EQU   X'06'
EIGHT    EQU   C'8'
SEVENMSK EQU   X'07'
EIGHTMSK EQU   X'08'
NINEMASK EQU   X'09'
TENMASK  EQU   X'0A'                    VERIFICATION FLAG
FOURTNMK EQU   X'14'                    CONSTANT OF X'14'
DISP159  EQU   X'9F'                    CONSTANT OF 159
ENDI     EQU   X'C5'
VFYLNTH2 EQU   X'13'
K17      EQU   X'11'                    CHANNEL CODE DISPLACEMENT
*                                       IN FCB VERIFY LINE
PRT2245  EQU   X'0B'                    MASK FOR 2245 PRINTER    S21092
OABD089  EQU   89                                                M0099
OABD090  EQU   90                                                M0099
IOBUNCHK EQU   X'02'                    TO TEST UNIT CHK IN CSW  Y02072
CLEARBYT EQU   X'00'                    TO CLEAR A BYTE          Y02072
LNCHCODE EQU   2                        LENGTH OF A CHAN CODE    Y02072
LNGNUM   EQU   3                        LENGTH OF 3 DIGIT NUMBER Y02072
LPI8     EQU   C'8'                     EIGHT LINES/INCH         Y02072
LPI6     EQU   C'6'                     SIX LINES/INCH           Y02072
FCBIMLNG EQU   4                        LENGTH OF FCB IMAGE NAME Y02072
*
*  THE FOLLOWING MESSAGES NUMBERS ARE EQUAL TO THEIR POSITION    Y02072
*  IN THE MESSAGE CSECT (RELATIVE TO ZERO), MULT BY 2 (LENGTH    Y02072
*  OF AN INDEX).                                                 Y02072
*
HEADING  EQU   16*2                     MESSAGE NO IN MSG CSECT  Y02072
MSG128   EQU   15*2                     MESSAGE NO IN MSG CSECT  Y02072
MSG125   EQU   9*2                      MESSAGE NO IN MSG CSECT  Y02072
INSERT1  EQU   18*2                     MESSAGE NO IN MSG CSECT  Y02072
INSERT2  EQU   20*2                     MESSAGE NO IN MSG CSECT  Y02072
         EJECT
*
***********************************************************************
*
*   INITIALIZE REGISTERS
*
***********************************************************************
*
         BALR  RBASE,0                  SET UP BASE REGISTER
         USING FCB2010,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING DEB,RDEB
         USING UCBOB,RUCB
*
FCB2010  EQU   *
*
         B     AROUND                   BR AROUND CONSTANTS      Y02072
         DC    C'IGG0197F'              MODULE NAME              Y02072
         DC    C'@ZA29359'              LAST SHIP CODE         @ZA29359
         DC    C'01/20/78'              LAST DATE MODIFIED     @ZA29359
AROUND   DS    0H                                                Y02072
*
         L     RDCB,0(RPARC)            LOAD CURRENT DCB ADDRESS
         L     RCORE,4(RWTGC)           LOAD CURRENT WORK AREA ADDRESS
         L     RDEB,DCBDEBAD            LOAD DEB ADDRESS
         L     RUCB,DEBUCBAD            LOAD UCB ADDRESS
         DROP  RDEB                                              Y02072
         STM   RBRNCH,RWK8,DXREGSV2     SAVE REGS                Y02072
*
***********************************************************************
*
*   CK FCB OPTION BITS FOR VERIFY OR ALIGN FORMS
*
***********************************************************************
*
FCB2060  EQU   *
*
         MVI   ENDINDIC,CLEARBYT        INITIALIZE SWITCH        Y02072
         CLI   DXSTAGE2,STGETWO         ENTRY TO FIND SECOND     Y02072
*                                          STAGE EXECUTOR?       M1803
         BE    FCB2215                  YES, DELETE FCB IMAGE  @ZA12979
         CLI   DXFCBOPT,VERFYMSK        CK IF FCB IMAGE IS TO    Y02072
*                                         BE VERIFIED            Y02072
         BE    FCB2070                  YES GO PRINT OUT VERIFICATION
*                                       AND ISSUE ALIGN FORMS MESSAGE
         CLI   DXFCBOPT,ALIGNMSK        CK IF FCB OPT = ALIGN    Y02072
         BE    FCB2180                  YES GO ALIGN FORMS
*
         LA    RDEB,FCB2061             LOAD RETURN ADDRESS    @ZA29359
         SR    RC,RC                    CLEAR REG              @ZA29359
         L     RC,UCBXTADR              LOAD UCB EXTENSION     @ZA29359
         CLC   8(4,RC),DXCCW10+4        LOADED FCB = REQST FCB @ZA29359
         BE    FCB2072                  YES-GO SKIP TO CHAN 1  @ZA29359
*
FCB2061  EQU   *                                               @ZA29359
         CLI   DXSTAGE2,ABEND           B13 ABEND REQUESTED?   @ZA12979
         BNE   FCB2210                  NO - BRANCH            @ZA12979
*
FCB2065  EQU   *
*
***********************************************************************
*
*   UP DATE UCB FIELDS FOR FCB ID AND FCB OPTIONS TO SHOW FCB NOT
*   USABLE  AND DELETE FCB IMAGE LOADED BY IGG0197E
*
***********************************************************************
*
*
         L     RJ,UCBXTADR              LOAD ADDRESS OF UCB EXTENTION
         MODESET  EXTKEY=SUPR           KEY 0 TO STORE IN UCB    Y02072
         XC    UCBFCBOF(4,RJ),UCBFCBOF(RJ) ZERO OUT FCB ID     @ZA25668
         XC    FCBOPTNS(1,RJ),FCBOPTNS(RJ) ZERO FCB OPTIONS    @ZA25668
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         TM    FCAOPEN2,FCAOFCBL        CK IF 197E LOADED FCB    YM4697
*                                       IMAGE
         BZ    FCB2066                  NO FCB LOADED GO ABEND   YM4697
*                                       YES FALL THROUGH TO DELETE
*                                       FCB IMAGE LOADED
         LA    RE,DXSAVFCB              GET ADDR OF FCB IMAGE ID Y02072
*
         DELETE EPLOC=(0)               ISSUE DELETE MACRO
         NI    FCAOPEN2,X'FF'-FCAOFCBL  INDIC FCB IMAGE DELETED  YM4697
*
***********************************************************************
*
*   ABEND ROUTINE. SET COMPLETION CODE=B13. PUT RETURN CODE IN REG.15
*
***********************************************************************
*
FCB2066  EQU   *
*
         TM    DXNABEND,ABENDBIT        CK IF ABEND IN PROCESS   Y02072
         BO    FCB2220                  YES GO TO NEXT EXECUTOR
         LM    RPAR,RWTG,DXREGSV2       RELOAD REGS FOR PROB DET YM2424
         SR    RE,RE                    ZERO REG 0               M0099
         IC    RE,DXFCBOPT              PUT INTERNAL CODE INTO   Y02072
*                                       REG 0                    M0099
         DMABCOND (0),PDLOAD,RETURN=NONE,RES=NO,                 M0099 X
               REGSAVE=NO               CALL PROBLEM           @ZA09661
*                                       DETERMINATION            M0099
         B     FCB2300                                           M0099
*
*
***********************************************************************
*
*   PRINT OUT HEADING AND VERIFICATION LINES FOR FCB IMAGE
*
***********************************************************************
FCB2070  EQU   *
*
***********************************************************************
*
         CLI   UCBTBYT4,PRT2245        CHECK FOR 2245 PRINTER    S21092
         BE    FCB2180                 YES, GO TO ALIGN FORMS    S21092
         USING FCBIMBEG,RWK7                                     XM2963
*
*  MUST BE IN KEY 0 BECAUSE FCB IMAGE COULD BE IN EITHER USER    YM5708
*  KEY OR KEY 0.                                                 YM5708
*
         SPACE
         MODESET  EXTKEY=SUPR           GET INTO KEY 0           YM5708
         SPACE
         LA    RD,FCBLNPIN              SET FCB IM PTR TO START  XM2963
*                                         OF IMAGE               XM2963
         TM    FCBINDEX,FCBRGTIN+FCBLFTIN  IS INDEXING BEING     XM2963
*                                            USED                XM2963
         BZ    FCB2071                  NO, RD HAS CORRECT ADDR  XM2963
         LA    RD,FCBLNPN1              YES, REINIT RD           XM2963
FCB2071  EQU   *                                                 XM2963
         SPACE
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MAN KEY     YM5708
         SPACE
         DROP  RWK7                                              XM2963
         ST    RWK7,DXREGSV1            SAVE IMAGE ADDRESS       Y02072
         LA    RBRNCH,FCB2078           GET ADDRESS OF INIT      Y02072
*                                       ROUTINE FOR FCB VERIFICATION
         B     FCB2078                                         @AZ07594
FCB2072  EQU   *
*
         MVC   DXCCW1(EIGHTMSK),SKIP0CCW SET UP SKIP TO CHANNEL 1 CCW
         MVI   DXCCW1,SKIPCH1           SET COMMAND CODE=SKIP CH 1
*
*
FCB2073  EQU   *
*
*
         LA    RF,DXIOB                 GET ADDR IOB IN REG 1
*
         EXCP  (1)                      ISSUE SKIP TO CH 1
*
         WAIT  ECB=DXECB                WAIT ON I/O              M0099
*
*
FCB2074  EQU   *
*
         LTR   RD,RD                   CK IF REG 14 = 0
         BZR   RBRNCH                  IF SO GO TO ADD IN REG 11 Y02072
         CLI   DXECB,SUCCFLCC           CK FOR SUCCESSFUL COMPLETION
         BNE   FCB2114                  NO GO SET CODE FOR PERM ERROR
*                                       DURING VERIFICATION
*
         BR    RBRNCH                   GO TO ADDRESS IN REG 11  Y02072
*
*
*
FCB2078  EQU   *
*
*
*
*   INITIALIZE REGISTERS FOR VERIFICATION
*   -RB  CONTAINS ADDRESS FCB IMAGE
*   -RTIOT CONTAINS LINE NUMBER
*   -RD    CONTAINS POINTER TO ENTRY IN FCB IMAGE
*
         LA    RTIOT,ONEMASK            SET LINE COUNTER
*
*   FORM CCW TO PRINT LINES OF VERIFICATION
*
         LA    RJ,MSGLSTSZ              GET ADDRESS OF PRINT LINE
         ST    RJ,DXCCW1                STORE ADD OF PRT LINE IN CCW
         MVI   DXCCW1,WTSKP1            SET COMMAND CODE TO PRT+SPACE 1
         MVI   DXCCW1+FOURMASK,SILIMASK SET THE SILI BIT       @ZA10220
*
* EXTRACT FCB VERIFICATION HEADING FROM THE MESSAGE CSECT        Y02072
*
         LA    RWK3,HEADING             MESSAGE NO FOR MSG RTN   Y02072
         BAL   RWK6,GETMSG              GO GET MSG TEXT          Y02072
FCB2079  EQU   *                                                 Y02072
         USING MSGTXTD,RWK3                                      Y02072
         USING MSGENTRY,RWK2                                     Y02072
         IC    RWK7,MSGLNG              LEN OF LINE - 1          Y02072
         EX    RWK7,MOVELINE            MOVE LINE TO BUFFER      Y02072
         LA    RWK7,1(RWK7)             TOTAL NUM OF BYT TO PRNT Y02072
         STC   RWK7,DXCCW1+7            LEN TO CCW               Y02072
         LR    RWK8,RWK2                SAVE ADDR OF HEADING TXT Y02072
*                                         IN MSG CSECT           Y02072
*
* FILL IN VARIABLE FIELDS OF THE HEADING                         Y02072
*
         IC    RWK7,MSGOFF5             OFFSET TO VAR FLD FIVE   Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD FIVE  Y02072
         MVC   0(FCBIMLNG,RWK3),DXFCBID  FCB IMAGE TO MSG        Y02072
         IC    RWK7,MSGOFF6             OFFSET TO VAR MSG SIX    Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD SIX   Y02072
         MVI   0(RWK3),LPI6             ASSUME 6 LINES/INCH      Y02072
         MODESET  EXTKEY=SUPR           GET INTO KEY ZERO      @ZA25088
         TM    0(RD),X'10'              TEST IF SPACING= 8 LPI @ZA25088
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MGT KEY   @ZA25088
         BNO   FCB2090                  IF NOT GO TRASLATE       Y02072
*                                         CHANNEL CODE           Y02072
         MVI   0(RWK3),LPI8             IMAGE 8 LINES/INCH       Y02072
         DROP  RWK3                                              Y02072
*
*    CONVERT LINE NUMBER AND INSERT INTO PRINT LINE
*
FCB2090  EQU   *
*
         CVD   RTIOT,DXCCW2             CONVERT LINE # TO DECIMAL
         UNPK  DXCCW2(FOURMASK),DXCCW2+SIXC(TWO) UNPACK LINE NUMBER
         OI    DXCCW2+THREE,NUMBMASK    MASK OUT SIGN
         IC    RWK7,MSGOFF1             OFFSET TO VAR FLD ONE    Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD ONE   Y02072
         MVC   0(LNGNUM,RWK3),NUMNXTLN  NUMBER OF THE NEXT PRINT Y02072
*                                         LINE                   Y02072
*
*    TRANSLATE CHANNEL CODE TO CHARACTER FORM AND ADD TO PRINT LINE
*    GET INTO KEY 0 AS IMAGE COULD BE IN USER KEY OR KEY 0.      Y02072
*
         MODESET  EXTKEY=SUPR                                    Y02072
*
*
         IC    RC,NULL(RD)              GET CHANNEL CODE
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
         N     RC,LFTHFOFF              TURN LEFT HALF OF BYTE   Y02072
*                                         OFF                    Y02072
         BNZ   FCB2095                  GO TRANSLATE CHAN CODE   Y02072
*                                         IF NOT ZERO            Y02072
*
* MUST BLANK OUT THE CHANNEL FIELD                               Y02072
*
         IC    RWK7,MSGOFF2             OFFSET TO VAR FLD TWO    Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDR OF VAR FLD TWO      Y02072
*
* GET THE LENGTH OF THE CHANNEL FIELD BY GETTING THE LENGTH      Y02072
* OF INSERT 2 AND ADDING THE LENGTH OF THE CHANNEL CODE TO IT.   Y02072
* (THIS INSERT IS USED IN THE CHANNEL FIELD WHEN A CHANNEL CODE  Y02072
* IS PRESENT).                                                   Y02072
*
         LR    RWK1,RWK3                SAVE ADD OF FLD TO BLANK Y02072
         LA    RWK3,INSERT2             MSG NUM OF FLD TO BLANK  Y02072
         BAL   RWK6,GETMSG              GET MSG TO GET LENGTH    Y02072
         IC    RWK7,MSGLNG              LENTH OF INSERT - 1      Y02072
         LA    RWK7,LNCHCODE(RWK7)      LNG OF FIELD TO CLEAR    Y02072
         LR    RWK2,RWK1                RESTORE ADDR OF VAR FLD  Y02072
         MVI   0(RWK2),BLANK            BEGIN TO CLEAR FIELD     Y02072
         EX    RWK7,MVBLANK             CLEAR FIELD              Y02072
         B     FCB2100                  GO PRT A LINE OF VERIFICATION
MVBLANK  MVC   1(0,RWK2),0(RWK2)        INST TO PROP A BYTE      Y02072
         USING MSGTXTD,RWK3                                      Y02072
MOVELINE MVC   MSGAREA(0),MSGTXT        MOVE LINE TO BUFFER      Y02072
         DROP  RWK3
*
FCB2095  EQU   *
*
* PUT THE CHANNEL CODE IN THE PRINT LINE                         Y02072
*
         SLL   RC,ONEMASK               MUTIPLY CHANNEL CODE BY 2
         LA    RJ,DXCCW3(RC)            GET ADDRESS OF CHANNEL CODE
         IC    RWK7,MSGOFF3             OFFSET TO VAR FLD THREE  Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD THREE Y02072
         MVC   0(LNCHCODE,RWK3),0(RJ)   CHAN CODE TO MESSAGE     Y02072
*
FCB2100  EQU   *
*
*
         BAL   RBRNCH,FCB2073           GO ISSUE EXCP AND WAIT   Y02072
*
*
* TEST FOR THE LAST PRINT LINE                                   Y02072
*
         TM    ENDINDIC,ENDMARK         TEST FOR LAST LINE       Y02072
         BO    FCB2180                  GO TO MSG 'IEC128D'    @AZ07594
         USING MSGENTRY,RWK8                                     Y02072
*
* USE OFFSET TO VAR FLD 4 AS LENGTH OF LINE TO PRINT. LENGTH     Y02072
* WILL BE 1 BYTE TOO MANY.                                       Y02072
*
         IC    RWK7,MSGOFF4             OFFSET TO VAR FLD FOUR   Y02072
         BCTR  RWK7,0                   DECREMENT COUNT          Y02072
         STC   RWK7,DXCCW1+7            BYTE COUNT TO CCW        Y02072
*
*   SET REGISTERS TO PRINT NEXT LINE OF VERIFICATION
*
         LA    RTIOT,ONEMASK(RTIOT)     INCREMENT LINE COUNTER
         LA    RD,ONEMASK(RD)           INCREMENT LINE POINTER TO
*                                       NEXT POSITION OF FCB IMAGE
*
* FILL IN THE CHANNEL FIELD                                      Y02072
*
         IC    RWK7,MSGOFF2             OFFSET TO VAR FLD TWO    Y02072
         LA    RWK1,MSGAREA(RWK7)       ADDR OF VAR FLD TWO      Y02072
         DROP  RWK8                                              Y02072
         LA    RWK3,INSERT2             MSG NUM IN MSG CSECT     Y02072
         BAL   RWK6,GETMSG              GET INSERT FOR HEADING   Y02072
         USING MSGENTRY,RWK2                                     Y02072
         IC    RWK7,MSGLNG              LNG OF INSERT - 1        Y02072
         LR    RWK6,RWK1                ADDR OF VAR FIELD        Y02072
         EX    RWK7,MVCINST             MOVE IN INSERT           Y02072
         LR    RWK2,RWK8                ADDR OF MSG IN CSECT     Y02072
         SPACE
         MODESET  EXTKEY=SUPR                                    YM5923
         SPACE
         TM    0(RD),ENDMARK            CK FOR END OF FCB IMAGE FLAG
         BNO   FCB2090                  NO GO TO FORM NEXT PRINT LINE
*                                       YES SET FOR LAST LINE OF VFY
         SPACE
         MODESET  EXTKEY=DATAMGT                                 YM5923
         SPACE
*  SET LENGTH FOR LAST LINE                                      Y02072
*  THE LENGTH OF THE LAST LINE IS CALCULATED BY ADDING LENGTH    Y02072
*  OF THE END INDICATOR TO VAR OFFSET 4.                         Y02072
*
         LA    RWK3,INSERT1             INDEX TO END INDICATOR   Y02072
         BAL   RWK6,GETMSG              GO GET THE END INDICATOR Y02072
         IC    RWK7,MSGLNG              LEN - 1 OF END INDIC     Y02072
         LA    RWK1,1(RWK7)             SAVE TOT LEN, END INDIC  Y02072
         USING MSGENTRY,RWK8                                     Y02072
         IC    RWK7,MSGOFF4             OFFSET TO VAR FLD        Y02072
         AR    RWK1,RWK7                TOTAL LEN OF LAST LINE   Y02072
         STH   RWK1,DXCCW1+6            BYTE COUNT TO CCW        Y02072
         LA    RWK6,MSGAREA(RWK7)       ADDR OF VAR FIELD        Y02072
         DROP  RWK8                                              Y02072
*
*  MOVE END INDICATOR TO THE LAST PRINT LINE                     Y02072
*
         USING MSGENTRY,RWK2                                     Y02072
         IC    RWK7,MSGLNG              LENGTH OF INSERT - 1     Y02072
         EX    RWK7,MVCINST             INSERT TO PRINT LINE     Y02072
         OI    ENDINDIC,ENDMARK         SET LAST LINE TO PRINT   Y02072
         LR    RWK2,RWK8                FOR ADDRESSABILITY TO    Y02072
*                                         VAR FIELDS IN HEADING  Y02072
         B     FCB2090                  GO CONVERT LINE NO       Y02072
MVCINST  MVC   0(0,RWK6),0(RWK3)        TO MOVE INSERT INTO MSG  Y02072
*
*
*
*   ERROR ROUTINE FOR PRINTER FAILURES DURING VERIFICATION
*
FCB2114  EQU   *
*
*
         TM    IOBSTAT0,IOBUNCHK        UNIT CHECK CONDITION     Y02072
         BZ    FCB2130                  NO, BR AROUND SENSE TEST Y02072
         TM    IOBSENS1,CMDRTYMK        TEST IF ERROR RETRYABLE
         BNO   FCB2130                  NO GO SET RETURN CODE=X'10'
         TM    IOBSENS0,BUFPARMK        TEST FOR UCS BUFFER PARITY ERR
         BO    FCB2120                  YES GO ISSUE SKIP TO CH 0
FCB2115  EQU   *
*
         LA    RF,ONEMASK               SET MASK TO CLEAR BITS 0-30
         NR    RC,RF                    CLEAR BITS 0-30
         LTR   RC,RC                    IF RC=0 GO RETRY PRINT LINE
         BNZ   FCB2130                  NO GO SET PERM ERR +SKP CH 0
         LA    RC,ONEMASK(RC)           SET FLAG FOR FIRST RETRY
         B     FCB2100                  GO RETRY PRINT LINE
*
FCB2120  EQU   *
*
         MVC   DXCCW1(EIGHTMSK),SKIP0CCW SET UP SKIP TO CH 0 CCW
         LA    RF,DXIOB                 GET IOB ADDR
*
         EXCP  (1)                      ISSUE EXCP TO RESET PRINTER
*
*   SET RETURN CODE OF X'10' FOR PERM I/O ERROR DURING VERIFICATION
*
FCB2130  EQU   *
*
         MVI   DXFCBOPT,OABD089         MOVE INTERNAL CODE TO    Y02072
*                                       WKAREA                   M0099
         B     FCB2066                  GO TO DELETE FCB IMAGE AND
*                                       FLAG INVALID
*
***********************************************************************
*
*   ALIGNMENT OF FORMS ROUTINE
*   (1) ISSUE MESSAGE'IEC128D XXX,VERIFY FORMS ALIGNMENT'
*   (2) ANALIZE REPLY
*
***********************************************************************
*
FCB2180  EQU   *
*
         LA    RWK3,MSG128              MESSAGE NO FOR MSG RTN   Y02072
         BAL   RWK6,GETMSG              GO GET MSEEAGE           Y02072
         USING MSGTXTD,RWK3                                      Y02072
         IC    RWK7,MSGLNG              LEN - 1 TO MOVE          Y02072
         EX    RWK7,MOVELINE            MOVE LINE TO BUFFER      Y02072
         IC    RWK7,MSGOFF1             OFFSET TO VAR FLD ONE    Y02072
         LA    RWK3,MSGAREA(RWK7)       ADDRESS OF VAR FLD ONE   Y02072
         MVC   0(L'UCBNAME,RWK3),UCBNAME  DEV NAME TO MSG        Y02072
         B     FCB2195                  BR AROUND MOVE INST      Y02072
FCB2190  EQU   *
*
         MVC   MSGAREA,MSGTXT           MV 64 BYTES TO WTOR AREA Y02072
         DROP  RWK3                                              Y02072
FCB2195  EQU   *                                                 Y02072
*
*   CLEAR REPLY AREA
*
         LA    RF,REPLYLTH              GET ADDRESS OF PARM LIST
         XC    RPLY(24),RPLY            ZERO OUT REPLY AREA AND ECB
*
*
         SVC   35
*
         LA    RF,RPLYECB               GET ECB ADDRESS
*
         WAIT  ECB=(1),LONG=YES                                  Y02072
*
*   REPLY ANALYSIS
*
         L     RWK7,DXREGSV1            REINIT REG IN CASE       Y02072
*                                         RE-VERIFICATION IS     Y02072
*                                         NECESSARY              Y02072
         OC    RPLY(8),LOMASK           ALLOW LOWER CASE ALPHA
         CLC   RPLY(2),RETRY0           RE-VERIFICATION OF FCB NEEDED
         BE    FCB2060                  GO RE_VERIFY IF NEEDED
*
         CLC   RPLY(6),RETRY1           RE-VERIFICATION OF FCB NEEDED
         BE    FCB2060                  GO RE_VERIFY IF NEEDED
*
         CLC   RPLY(2),VERFYC2          OPERATOR VERIFIED FCB IMAGE
         BNE   FCB2191                  GO TRY NEXT REPLY      @AZ07594
         LA    RBRNCH,FCB2210           ADDR TO CLEAN UP FCB I @AZ07594
         B     FCB2072                  GO ISSUE SKIP CHANN 1  @AZ07594
FCB2191  CLC   RPLY(8),VERFYC1          OPER VERIFIED FCB IMAG @AZ07594
         BNE   FCB2192                  GO TRY NEXT REPLY      @AZ07594
         LA    RBRNCH,FCB2210           ADDR TO CLEAN UP FCB I @AZ07594
         B     FCB2072                  GO ISSUE SKIP CHANN 1  @AZ07594
FCB2192  CLC   RPLY(7),CANCELC1         CK IF OPERATOR CANCEL  @AZ07594
         BE    FCB2200                  YES GO SET RETURN CODE = X'14'
         CLC   RPLY(2),CANCEL2          CK IF OPERATOR CANCELED FCB VER
*                                       FCB VERIFICATION
         BE    FCB2200                  YES GO SET RETURN CODE=X'14'
*
*   INVALID OPERATOR RESPONSE ISSUE MESSAGE TO REPEAT REPLY
*   'IEC125 ERROR - REPEAT REPLY'
*
         LA    RWK3,MSG125              MESSAGE NO FOR MSG RTN   Y02072
         LA    RWK6,FCB2190             RETURN ADDRESS           Y02072
         B     GETMSG                   GO GET MSESAGE           Y02072
*
FCB2200  EQU   *
*
         MVI   DXFCBOPT,OABD090         MOVE INTERNAL CODE TO    Y02072
*                                       WKAREA                   M0099
         B     FCB2065                  GO DELETE FCB AND ABEND
*
*   HAVE FINISHED WITH FCB LOADING SO CLEAN UP
*
FCB2210  EQU   *
*
*
*   UP DATE UCB FIELDS WITH FCB ID AND FCB OPTIONS.  IF THE FCB ID
*   IN THE UCB EXTENSION IS THE SAME AS THE ONE REQUESTED BY THIS
*   USER, THEN EITHER THE FCB IMAGE WAS NOT LOCATED BY THE PREVIOUS
*   MODULE AND WE DO NOT WANT TO UPDATE THE UCB EXTENSION OR IT WAS
*   ONLY LOADED TO VERIFY IT.
*
         L     RC,UCBXTADR              GET POINTER TO UCB EXTENTION
         MODESET  EXTKEY=SUPR           KEY 0 TO STORE IN UCB    Y02072
         SPACE
         CLC   UCBFCBOF(4,RC),DXFCBID   UCB ALREADY UPDATED?   @ZA12979
         BE    FCB2215                  YES, FCB IMAGE OK      @ZA12979
         MVC   UCBFCBOF(4,RC),DXFCBID   MOVE FCB ID INTO UCB     Y02072
         MVC   FCBOPTNS(1,RC),NULL(RB)  MOVE FCB OPTIONS TO UCB@ZA12979
*                                       IF ANY
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         SPACE
FCB2215  TM    FCAOPEN2,FCAOFCBL        CK IF FCB LOADED INTO  @ZA12979
*                                         MAIN STG               Y02072
         BZ    FCB2220                  NO GO MOVE EROPT FOR DCB YM4697
         LA    RE,DXSAVFCB              GET ADDR OF FCB IMAGE ID Y02072
         DELETE EPLOC=(0)
         NI    FCAOPEN2,X'FF'-FCAOFCBL  INDIC FCB IMAGE DELETED  YM4697
*
***********************************************************************
*
*   DETERMINE NEXT STAGE 2 EXECUTOR
*
***********************************************************************
*
FCB2220  EQU   *
*
***********************************************************************
*
*   RESTORE DCB EROPT
*
***********************************************************************
*
         MVC   DXCCW6(1),DXEROPT        MVOE IN DCB EROPT        Y02072
*
***********************************************************************
*   SEE IF SYS1.IMAGELIB HAS BEEN OPENED IF YES CLOSE IT
*
*
         CLI   DXIMGDCB,IMCLOSED        CK IF IMGLIB CLOSED      Y02072
         BE    FCB2230                  YES, GO TEST NEXT EXECUTORM1803
         L     RF,DXIMGDCB              GET ADDR OF IMGLIB DCB   Y02072
*
*   ISSUE SVC TO CLOSE IMAGELIB
*
         SVC   105                      ISSUE SVC TO CLOSE SYS1.IMAGELI
         NI    FCAOPEN2,X'FF'-FCAOIMGL  INDIC IMAGELIB CLOSED    YM4697
*
**********************************************************************
*
*   DETERMINE THE NEXT STAGE 2 EXECUTOR TO BE XCTLED
*
***********************************************************************
*
FCB2230  EQU   *
*
***********************************************************************
*
*   TEST IF EXCP IS SPECIFIED.IF YES,XCTL TO THE LAST OPEN EXECUTOR
*
***********************************************************************
*
         TM    DCBMACRF,EXCPMASK        TEST IF EXCP IS SPECIFIED
         BC    14,FCB2240               IF NOT,GOTO BUFFER CNTRL BLK
*
         LA    RF,MODNM11               GO DO DCB COPY BACK      Y02072
         BC    15,FCB2270               GOTO WTG TABLE UPDATE    Y02072
*
***********************************************************************
*
FCB2240  EQU   *
*
***********************************************************************
*
*   TEST IS BUFFER CONTROL BLOCK IS SPECIFIED.IF YES,XCTL TO IGG0911I
*
***********************************************************************
*
         TM    DCBBUFNO+3,BFCNTRL       BUFFER CONTROL BLOCK SPECIFIED
         BC    14,FCB2250               IF YES,GOTO TEST PCI ROUTINE
*
         SR    RE,RE                    RESET REGISTER
         IC    RE,DCBBUFNO              GET THE NO OF BUFFER SPECIFIED
         LTR   RE,RE                    TEST IF DCBBUFNO='0'
         BC    8,FCB2250                IF YES,GOTO TEST PCI
*
         LA    RF,MODNM1I               LOAD ADDR OF IDTTR OF IGG0191I
         BC    15,FCB2270               GOTO MOVE IDTTR ROUTINE
*
***********************************************************************
*
FCB2250  EQU   *
*
***********************************************************************
*
*   TEST IF PCI IS SPECIFIED.IF YES,XCTL TO IGG0191Q
*
***********************************************************************
*
         TM    DCBOPTCD,PCIMASK         TEST IF PCI SPECIFIED
         BC    14,FCB2260               IF NOT,GOTO BSAM/QSAM ROUTINEED
*
         LA    RF,MODNM1Q               LOAD ADDR OF IDTTR OF IGG0191Q
         BC    15,FCB2270               GOTO MOVE IDTTR ROUTINE
*
***********************************************************************
*
FCB2260  EQU   *
*
***********************************************************************
*
*   BSAM/QSAM EXIT.XCTL TO IGG0191G
*
***********************************************************************
*
         LA    RF,MODNM1G               LOAD ADDR OF IDTTR IF IGG0191G
*
***********************************************************************
*
FCB2270  EQU   *
*
***********************************************************************
*
*   MOVE IDTTR TO XCTL WTG TABLE
*
***********************************************************************
*
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,0(RF)           ST NEXT MOD ID IN WTG  @Z30TSCF
*
***********************************************************************
*
FCB2280  EQU   *
         LM    RPAR,RWTG,DXREGSV2       RESTORE REGISTERS        Y02072
FCB2285  EQU   *                        UPDATE WTG TABLE         Y02072
*
***********************************************************************
*
*   UPDATE WTG TABLE AND XCTL TO NEXT MODULE
*
***********************************************************************
*
         LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCREMENT CURRENT DCB ENTRY
         CLC   0(2,RWTGC),AMIDCNST      IS THE RTN NEEDED AGAIN
         BCR   8,RBASE                  IF YES,RETURN TO PROCESS
*
         CLC   0(2,RWTGC),OPIDCNST      TEST END OF WTG TABLE
         BC    7,FCB2285                IF NOT,CHECK NEXT ENTRY  Y02072
*
         LR    RPARC,RPAR               RESET REG TO '0'
         LA    RWTGC,WAOFF(0,RWTG)      RESET WTG REG TO POINT +32(WTG)
FCB2290  CLI   0(RWTGC),X'00'           TEST IF THIS ENTRY COMPLETE
         BNE   FCB2300                  IF NOT XCTL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY OF WTG TABLE
         LA    RPARC,PLOFF(0,RPARC)     GET NEXT ENTRY OF DCB
         BC    15,FCB2290               GOTO TEST COMPLETION
*
FCB2300  EQU   *
*
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
***********************************************************************
*
*
**********************************************************************
*
*   CONSTANTS
*
*********************************************************************
*
*  MODULE ID'S
*
MODNM1G  DC    C'1G',VL3(IGG0191G)                             @Z30TSCF
MODNM1I  DC    C'1I',VL3(IGG0191I)                             @Z30TSCF
MODNM1Q  DC    C'1Q',VL3(IGG0191Q)                             @Z30TSCF
PDLOAD   DC    C'6M',VL3(IGG0196M)                             @Z30TSCF
MODNM11  DC    C'11',VL3(IGG01911)                             @Z30TSCF
OPIDCNST DC    C'0S'                    END OF WTG TABLE
AMIDCNST DC    C'7F'                    RTN CODE
*
*  OTHER CONSTANTS
*
LFTHFOFF DC    0F'0',X'0000000F'        TO CLEAR THE LEFT HALF   Y02072
*                                         OF A BYTE              Y02072
VERFYC1  DC    C'VERIFIED'
RETRY0   DC    C'R '                    RETRY FCB VERIFICATION
RETRY1   DC    C'RETRY '                RETRY FCB VERIFICATION
VERFYC2  DC    C'V '                    FCB IMAGE VERIFIED CODE
CANCELC1 DC    C'CANCEL '               CANCEL FCV VERIFICATION CODE
CANCEL2  DC    C'C '                    CANCEL FCV VERIFICATION CODE
SKIP0CCW DC    X'8300000020000001' SKIP TO CHANNEL 0 CCW
         EJECT
***********************************************************************
*  'GETMSG' SUBROUTINE                                           Y02072
*  THIS SUBROUTINE EXTRACTS THE REQUIRED MESSAGE FROM THE MSG    Y02072
*  CSECT AND MOVES IT TO THE WTO/WTOR AREA.                      Y02072
*
*    INPUT TO THIS ROUTINE:                                      Y02072
*      REG 11 - MESSAGE NUMBER IN CSECT                          Y02072
*      REG 15 - RETURN ADDRESS                                   Y02072
*
*    OUTPUT FROM THIS ROUTINE:                                   Y02072
*      REG 1 - POINTER TO MESSAGE ENTRY IN THE MESSAGE CSECT     Y02072
*      MESSAGE TEXT IN WTO/WTOR AREA                             Y02072
***********************************************************************
GETMSG   DS    0H                       ENTRY POINT, MSG RTN     Y02072
         L     RWK7,DXMSGADR            GET ADDR OF MSG CSECT    Y02072
         LH    RWK2,0(RWK7,RWK3)        GET INDEX TO MESSAGE     Y02072
         LA    RWK2,0(RWK7,RWK2)        ADDR OF MESSAGE ENTRY    Y02072
         USING MSGENTRY,RWK2                                     Y02072
         SR    RWK3,RWK3                PREPARE REGISTER         Y02072
         IC    RWK3,MSGOFF              GET OFFSET TO TEXT IN    Y02072
*                                         ENTRY                  Y02072
         LA    RWK3,0(RWK2,RWK3)        ADDR OF MESSAGE TEXT     Y02072
         SR    RWK7,RWK7                PREPARE REG FOR RETURN   Y02072
         BR    RWK6                     RETURN                   Y02072
         SPACE
PATCH    DC    0H'0',54X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF THIS MODULE       Y02072
         EJECT
         IHAFCBIM                                                XM2963
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         EJECT
         DCBD  DSORG=PS
         EJECT
         IGGMSG                                                  Y02072
         EJECT
         IECDSECS  WTG,PREFX,EXPAND=YES                        @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      ID NEXT MOD              Y02072
         EJECT
         IECDSECS MAIN,EXPAND=YES                                M0099
         ORG   REPLYLTH+52                                       S21092
RPLY     DS    20C                      MSG REPLY AREA           M0191
RPLYECB  DS    F                        ECB FOR WTOR EXCP        M0191
MCSMASK  DS    H                        MASK FOR MCS             M0191
LOMASK   DS    8C                       MASK FOR LOWER CASE RPLY M0191
UCSID    DS    4C                       ID OF UCS IMAGE          M0191
         ORG   MSGLSTSZ                                          Y02072
MSGAREA  DS    0CL64                    AREA TO MOVE 64 BYTES    Y02072
*                                         TO FOR WTO/WTOR'S      Y02072
DXREGSV1 EQU   DXXCTL                   WORD TO SAVE REG         Y02072
DXREGSV2 EQU   DXCCW12                  WORDS TO SAVE REGS       Y02072
NUMNXTLN EQU   DXCCW2+1                 NUMBER OF PRINT LINES    Y02072
ENDINDIC EQU   DXXCTL+4                 IF X'00', NOT THE LAST   Y02072
*                                         LINE TO BE VERIFIED    Y02072
         EJECT
         IGGSCW                                                  Y02072
         EJECT
         IHAFCAUD  ORG=YES                                       YM4697
         EJECT
*
***********************************************************************
*
SRT      DSECT
         IEFUCBOB
*
***********************************************************************
*
*   DATA EXTENT BLOCK  (UNTIL PROTIOS CHANGES)
DEB      DSECT
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOFLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBTVLSQ DS    0CL2                VOL SEQ FOR TAPE
DEBBINUM DS    CL2
DEBTVLNM DS    0CL2                NO OF VOL FOR TAPE
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
*  FOR ADDITIONAL EXTENT ON DIRECT ACCESS THE FOLLOWING FIELDS
*  WILL HAVE TO BE OFFSET ANOTHER 16 BYTES
DEBVOLSQ DS    H
DEBVOLNM DS    H
*  FOR EACH SUBROUTINE LOADED BUMP THIS OFFSET BY 2
DEBSUBID DS    H
         END
