         TITLE 'IGG0191N-DEB CONSTRUCTION FOR D.A.DEVICE EXTENTS'
IGG0191N CSECT
*
*MODULE NAME - IGG0191N                                          Y02072
*
*DESCRIPTIVE NAME - BUILD DA SECTION OF DEB                      Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*        VS1 RELEASE 2 DELETIONS
*D329000                                                        XA02093
*
*        VS2 RELEASE 2 DELETIONS                                 Y02072
*001100,003600,093000,174500,175500-175800,194000-207000,209000, Y02072
*250500,252500-252800,272500,273500-274000,478000-512000,        Y02072
*514000-515000,425100,377000,382630,383000,405000,409000,425100, Y02072
*342070-342840                                                   Y02072
*                                                                YM1168
*          VS2 RELEASE 3 DELETIONS
*0000101000-110000,113000-114000,116000-118000,118820,         @Y30LSBS
*142000-143000,425400                                          @Y30LSBS
*                                                              @ZA04216
*                                                              @Z30TSCF
*          RELEASE VS2-3 ADDITTIONS AND CHANGES
*A350500                                                       @ZA02655
*A242010,242020,266000 OZ10225 IS SYSROUTE FROM OY11230        @ZA02655
*A119161,119461                                                @ZA10592
*C368320-368350                                                @ZA10592
*A119101,368311,368312                                         @ZA12185
*C100000-100540,119160-119170,368161-369879,409610-409980,     @ZA17532
*C487500                                                       @ZA17532
*A369363,369414,369416,369456,369458                           @ZA26462
*C369482                                                       @ZA30847
*A369483,369484                                                @ZA30847
*
*          RELEASE 20 DELETIONS
*0973329000                                                      A33681
*0973328400,328800,329200,329600                                 M1055
*          RELEASE 21 DELETIONS
* 297000-299600                                                  A50696
*2880                                                            A43880
*2880                                                            A43880
*2880                                                            A39782
*D001400-001980,002600-002800,003200,011000-012000,152000,      SA54462
*D417000-424200,425800-428000,513000                            SA54462
*STATUS CHANGE LEVEL 007
*
*OZ28203  - MSS ACQUIRE ENHANCEMENTS                            OZ28203
*C100020,368206,369456                                          OZ28203
*A368207,368281-368300                                          OZ28203
*
* FUNCTION - THIS EXECUTOR IS ENTERED FOR USERS OF SAM AND EXCP DURING
*            OPEN FOR THE CONSTRUCTION OF DEBS. THIS EXEC SUPPLEMENTS
*            IGG0191A BY BUILDING THE EXTENT PORTION (DEVICE DEPENDENT
*            SECTION) FOR DIRECT ACCESS DEVICES.
*            THE MODULE ALSO CHECKS THE AUTHORIZED LIBRARY       Y02072
*            TABLE (ALT) TO DETERMINE IF THE DATASET BEING       Y02072
*            OPENED BELONGS TO AN AUTHORIZED LIBRARY.  IF THE    Y02072
*            DATASET DOES BELONG TO AN AUTHORIZED LIBRARY, A BIT Y02072
*            IS SET IN THE DEB.                                  Y02072
*            UPON COMPLETION OF THE DEB, A LOOP THROUGH ITS
*            EXTENTS IS MADE TO BUILD PARAMETER LISTS FOR  AC-
*            QUIRING VIRTUAL DASD SPACE FOR ANY MSS  SUBSYSTEM
*            VIRTUAL DASD PACKS.
*
* ENTRY POINT - IGG0191N (ENTERED FROM IGG0191A VIA XCTL)
*
* INPUT -  DCB ADDRESS
*          WORK AREA ADDRESS
*          WHERE TO GO TABLE
*          PARAMETER LIST
*          CURRENT ENTRY IN WHERE TO GO TABLE
*          CURRENT PARAMETER (DCB)
*
* OUTPUT- DA EXTENT SECTION AS OUTLINED BELOW.
*
*MACROS-MAPPING - IEFUCBOB, DCBD, TCB, IEZDEB, IECDSECS, ALTABLE,
*                 ICBACREL                                     @Y30LSBS
*
*        BASIC DEB LAYOUT FOR ALL I/O DEVICES SUPPORTED
*
*        **********************************
*   -16  *I/OS* I/O SUPPORT DCB ADDRESS   *
*   -12  *    * RESERVED                  *
*   -08  *    * DCB MODIF MASK            *
*   -04  *DEBL*                           *
*   +00  *SUBL* TCB ADDRESS               *
*   +04  *AML * DEB LINK FIELD            *
*   +08  *DPAT* IRB ADDRESS               *
*   +12  *FLTP* SYSTEM PUTGE CHAIN        *
*   +16  *NEXT* USER PURGE CHAIN          *
*   +20  *PRTY* ECB ADDRESS               *
*   +24  *KEYD* DCB ADDRESS               *
*   +28  *SCAL* APPENDAGE ADDRESS         *
*        **********************************
*
*
*        DEVICE DEPENDENT SECTION OF DEB
*
* TAPE/URE
*
*
*        **********************************
*   +32  *DMOD*  UCB ADDRESS              *
*   +36  *VOL SEQ NO     *NO. OF VOLS.    *
*        **********************************
*
*
* FOLLOWING ARE DA EXTENTS BUILT BY THIS EXEC.
*
* D.A.SAM DEB.
*        **********************************
*   +32  *FMSK*  UCB ADDRESS              *
*   +36  *EXTENT FIELD BBCCHHCCHH         *
*   +40  *                                *
*   +44  *               *NO.TRACKS ALL.  *
*   +48  *VOL SEQ NO     *NO. OF VOLS     *
*        **********************************
*
*
* NOTE.+32 - +44 IS REPEATED PER EXTENT
*
*
* D.A.TO MEMBER FOR OUTPUT
*        **********************************
*   +E2  *MEMBER NAME THAT IS OPENING     *
*   +56  *MEMBER NAME THAT IS OPENING     *
*        **********************************
*
*
* DA BPAM CONCATENATION (INPUT)
*        **********************************
*   +48  *DSNO DSNO  DSNO DSNO            *
*        *EXTU EXT2  EXT3 EXT4            *
*        **********************************
*
*
* NOTES- BPAM DEB SAME AS SAM DEB WITH EXCLUSSION OF FIELD AT +48
*
*        USER LABEL EXTENT IS NOT INCLUDED IN F1 EXTENT COUNT
*        AND IS NOT INCLUDED IN DEB EXTENTS.
*
*        ROUTINE ALSO MERGES CLASS BYTE AND DEVICE BYTE OF UCB/SRT
*        INTO DCB FIELD (DEVT)
*
* EXITS NORMAL - XCTL TO IGG0191B  SAM MAIN EXECUTOR
*
* EXITS ERROR - XCTL TO PROB DET FOR 413-2C ABEND IF ERROR
*               IS DISCOVERED UPON RETURN FROM ICBACREL MACRO
*
* TABLES/WORKAREA - SEE DSECTS AT END OF LISTING.
*                   DXRGSAVE-USED TO SAVE REGISTER CONTENTS      Y02072
*
* ATTRIBUTES - REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY, Y02072
*              SUPERVISOR STATE                                  Y02072
*
*
*
*******************************************************************
*********************************************************************
         EJECT                                                 @ZA17532
*        THE FOLLOWING TABLE SHOWS WHAT STAGING IS PERFORMED   @ZA17532
*        FOR DATA SETS RESIDING ON AN MSS VIRTUAL VOLUME       @ZA17532
*        NOTE:                                                  OZ28203
*        (1)  THAT A  ( ? ) - INDICATES A NOT TESTED CONDITION  OZ28203
*        (2)  PROCESS (OUT) = OPENED FOR(OUTPUT OR OUTIN)       OZ28203
*                     (IN)  = OPEN FOR(INPUT,INOUT OR UPDATE)   OZ28203
*-------------------------------------------------------------  OZ28203
*PROCESS× DISP× ALLOC× TTRLL  ×DSORG ×ACCESS×  TYPE OF STAGING  OZ28203
*       ×     ×      ×        ×      ×METHOD×      REQUEST      OZ28203
*-------------------------------------------------------------  OZ28203
* IN    ×  ?  × TEMP ×   ?    ×   ?  ×  ?    ×NO STAGING        OZ28203
*       ×     ×      ×        ×      ×       ×                  OZ28203
*   ?   × NEW ×  ?   × NOT=0  ×  PS  ×  ?    ×NO STAGING        OZ28203
* IN    × NEW ×  ?   ×  =0    ×  PS  ×NOT PDS×STAGE ALL EXTENTS OZ28203
* OUT   × NEW × CYL  ×  =0    ×  PS  ×NOT PDS×INHIBIT STAGE ALL OZ28203
* OUT   × NEW × TRK  ×  =0    ×  PS  ×NOT PDS×STAGE ALL EXTENTS OZ28203
*       ×     ×      ×        ×      ×       ×                  OZ28203
* IN    × OLD ×  ?   × NOT=0  ×  PS  ×NOT PDS×STAGE TO EOF      OZ28203
* IN    × OLD ×  ?   ×  =0    ×  PS  ×NOT PDS×STAGE ALL EXTENTS OZ28203
* OUT   × OLD × TEMP × NOT=0  ×  PS  ×  ?    ×NO STAGING        OZ28203
* OUT   × OLD × TRK  ×   ?    ×  PS  ×NOT PDS×STAGE ALL EXTENTS OZ28203
* OUT   × OLD × CYL  ×   ?    ×  PS  ×EXCP   ×STAGE ALL EXTENTS OZ28203
* OUT   × OLD × CYL  ×   ?    ×  PS  ×SAM    ×IF(MACRF POINT)   OZ28203
*       ×     ×      ×        ×      ×       ×STAGE ALL. ELSE   OZ28203
*       ×     ×      ×        ×      ×       ×INHIBIT STAGE ALL OZ28203
*       ×     ×      ×        ×      ×       ×                  OZ28203
* IN    × MOD ×  ?   × NOT=0  ×  PS  ×NOT PDS×STAGE TO EOF      OZ28203
* IN    × MOD ×  ?   ×  =0    ×  PS  ×NOT PDS×STAGE ALL EXTENTS OZ28203
* OUT   × MOD × CYL  ×   ?    ×  PS  ×SAM    ×STAGE CYL OF LAST OZ28203
*       ×     ×      ×        ×      ×       ×RECORD INHBIT TO  OZ28203
*       ×     ×      ×        ×      ×       ×EOF.              OZ28203
* OUT   × MOD × TRK  ×   ?    ×  PS  ×SAM    ×STAGE CYL OF LAST OZ28203
*       ×     ×      ×        ×      ×       ×RECORD TO EOF.    OZ28203
* IN    × ?   ×  ?   ×   ?    ×  PS  ×PDS    ×STAGE DIRECTORY   OZ28203
* IN    × ?   ×  ?   ×   ?    ×  PO  ×PDS    ×STAGE ALL EXTENTS OZ28203
*       ×     ×      ×        ×      ×       ×                  OZ28203
* OUT   × ?   × CYL  ×   ?    ×  PS  ×PDS    ×STAGE DIRECTORY   OZ28203
*       ×     ×      ×        ×      ×       ×CYL OF EOF        OZ28203
*       ×     ×      ×        ×      ×       ×INHIBIT TO EOD    OZ28203
* OUT   × ?   × TRK  ×   ?    ×  PS  ×PDS    ×STAGE DIRECTORY   OZ28203
*       ×     ×      ×        ×      ×       ×CYL OF EOF TO EOD OZ28203
*-------------------------------------------------------------  OZ28203
         EJECT                                                 @ZA17532
* MASK'S TO TEST PARAMETER LIST WITH
DEBBSLNG EQU   80
COMMUTAB EQU   16
NEXTCORE EQU   140
UCBADDR  EQU   NEXTCORE+4               ADDR OF UCB (OTHER THAN  Y02072
*                                         FIRST) FOR BPAM DS     Y02072
ULEXTYP  EQU   X'40'  EXTENT TYPE INDICATOR FOR USER LABEL TRACK   UL17
INMASK   EQU   X'0E'                    MASK FOR INPUT TEST        UT18
POTEST   EQU   X'02'                    MASK FOR PO DATA SET       UT18
TOTMASK  EQU   X'02'                    MASK FOR TOTALING TEST     UT18
ZERO     EQU   0                        PARAMETRIC VALUE OF 0      UT18
ONE      EQU   1                        CONSTANT OF 1            A50696
XNTOFSET EQU   6                       OFFSET TO EXTENT IN DSCB  A43880
EIGHT    EQU   8                       8 BYTES                   A43880
ADDRLEN  EQU   B'0111'                 TO GET AN ADDR THAT IS    Y02072
*                                        LEFT ALIGNED            Y02072
JFQMPREF EQU   X'10'                    LEN OF QUE MANAG PREFIX  YM1168
*                                         TO THE JFCB            YM1168
*
*    SOME MSS  EQUATES AND MASKS                               @Y30LSBS
*                                                              @Y30LSBS
INHIBST  EQU   X'20'                    INHIBIT STAGING        @Y30LSBS
OUTIN    EQU   X'07'                    MASK FOR OUTPUT/OUTIN  @ZA17532
DEBCYL   EQU   X'18'                    CYL ALLOC IN DEB EXTENT@ZA17532
X7F      EQU   X'7F'                    VERY HI EXTENT NUMBER  @Y30LSBS
D1       EQU   1                        DISPLACEMENT OF ONE    @Y30LSBS
D3       EQU   3                        DISPLACEMENT OF THREE  @Y30LSBS
D4       EQU   4                        DISPLACEMENT OF FOUR   @Y30LSBS
******************************           ******************************
*
*
*
*
*
*REGISTERS ARE REFERENCED SYMBOLICALLY WHERE APPROPRIATE
RE       EQU   0         WORK REG5
RWK3     EQU   RE        WORK REGISTER                           Y02072
RF       EQU   1         WORK REG6
R1       EQU   1         PARAMETER LIST REGISTER               @Y30LSBS
RDCB     EQU   2         DCB REGISTER
RWK1     EQU   RDCB      WORK REGISTER                           Y02072
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWK4     EQU   RPAR      WORK REGISTER                           Y02072
RWTG     EQU   6         TOP OF WTG TABLE
RWK5     EQU   RWTG      WORK REGISTER                           Y02072
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RTIOT    EQU   9         USED HERE AS WRK REG AND  COMM VECTOR ADDR.
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RWK6     EQU   RUCB      WORK REGISTER                          XA02093
RDEB     EQU   11        DEB ADDRESS
RB       EQU   12        WORK REG1  **
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RWK2     EQU   RD        WORK REGISTER                           Y02072
RJ       EQU   15        WORK REG4
*
*
*
***********************************************************************
*
*
*
*
*
         BALR  RBASE,0
         USING PO,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING   TCB,RD
         USING TIOT,RTIOT
         USING UCBOB,RUCB
*
*
*
*
PO       EQU   *
         B     BEGIN                                           @Z30TSCF
         DC    C'IGG0191N'              MODULE NAME            @Z30TSCF
         DC    C'&SYSDATE'              LAST SHIP DATE         @ZA17532
         DC    C'@ZA30847'              LAST SHIP CODE         @ZA17532
BEGIN    DS    0H                                              @Z30TSCF
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         L     RCORE,4(RWTGC)           GET WORK AREA
         L     RD,COMMUTAB         CALCULATE TCB ADDRESS
         L     RD,0(0,RD)
         L     RD,4(0,RD)               TCB  ADDR
         L     RTIOT,TCBTIO
         AH    RTIOT,DCBTIOT       RESET TIOT POINTER
         L     RDEB,DCBDEBAD
         USING DEBBASIC,RDEB                                     Y02072
         TM    DSCFILTY,POTEST          IS DATA SET PARTIONED    Y02072
         BNO   OBPAM170                 NO, BR AROUND            Y02072
         OI    DEBFLGS1,DEBAPFIN        ASSUME DATASET IS IN ALT Y02072
OBPAM170 EQU   *                        COME HERE IF NOT PO      Y02072
         SR    RC,RC
         IC    RC,DEBNMEXT
*
*        EXTENTS
*
         LR    RB,RC                    NO OF EXTENTS
         SLL   RB,4
         LA    RB,32(RDEB,RB)           POINT TO ACCESS METHOD SECTION
*
         DROP  RDEB                                              Y02072
         USING DEBDASD-(DEBBASND-DEBBASIC),RDEB                  Y02072
         LA    RJ,DEBUCBAD              FIRST DEB EXTENT
         DROP  RDEB                                              Y02072
         LR    RDCB,RCORE
         SH    RDCB,OBPAMK44            FIRST DSCB
         LR    RDEB,RDCB                SAVE CURRENT DSCB ADDR
         SR    RF,RF                    START M COUNTER WITH ZERO
         SR    RD,RD
         ST    RD,DXCCW4                SET TOTAL TT CTR TO ZERO
         L     RUCB,DXUCBADR            ADDR OF ONLY UCB FOR SAM Y02072
*                                         OF FIRST UCB FOR BPAM  Y02072
*
OBPAM180 EQU   *
         STH   RD,4(0,RJ)               ZERO BB FIELD
         USING UCBOB,RUCB
*
* MUST NEXT TEST TO SEE IF THE DATASET BEING OPENED IS A MEMBER  Y02072
* OF THE AUTHORIZED LIBRARY TABLE.  IF IT DOES BELONG TO THE ALT Y02072
* A BIT MUST BE SET IN THE DEB.                                  Y02072
*
         TM    DSCFILTY,POTEST          DATA SET PARTITIONED     Y02072
         BZ    OBPAM186                 NO, BYPASS ALT TESTING   Y02072
         STM   RWK4,RWK5,DXRGSAVE       SAVE REGS                Y02072
         L     RWK2,CVTPTR              GET CVT ADDRESS          Y02072
         USING CVTMAP,RWK2                                       Y02072
         L     RWK2,CVTAUTHL            GET ADDRESS OF ALT       Y02072
         DROP  RWK2                                              Y02072
         LTR   RWK2,RWK2                WAS AN ALT BUILT         Y02072
         BZ    OBPAM184                 NO, BYPASS ALT TESTING   Y02072
         USING ALTABLE,RWK2                                      Y02072
         SR    RWK3,RWK3                PREPARE TO GET NUMBER OF Y02072
*                                         ENTRIES IN THE ALT FOR Y02072
*                                         LOOP CONTROL           Y02072
         IC    RWK3,ALTNOENT            GET NUMBER OF ENTRIES    Y02072
         LA    RWK2,ALTENT              INCR TO THE FIRST ENTRY  Y02072
         DROP  RWK2                                              Y02072
         USING ALTENTRY,RWK2                                     Y02072
         SR    RWK4,RWK4                PREPARE REG FOR COUNT    Y02072
*                                         FOR CLC INST           Y02072
OBPAM182 EQU   *                                                 Y02072
         IC    RWK4,ALTLNENT            INIT REG FOR INST TO GET Y02072
*                                         TO THE NEXT ENTRY      Y02072
         CLC   ALTVOLID,UCBVOLI         UCB VOLID EQUAL TO ALT   Y02072
*                                         ENTRY VOLID            Y02072
         BNE   OBPAM183                 NO, GO INCR TO NXT ENTRY Y02072
         SH    RWK4,VLIDLNP1            SUBT LEN OF ENTRY FOR    Y02072
*                                         VOLID PLUS ONE FOR     Y02072
*                                         EXECUTE INST           Y02072
         ICM   RWK5,ADDRLEN,TIOEJFCB    GET ADDR OF JFCB         Y02072
         LA    RWK5,JFQMPREF(RWK5)      ADD LEN OF PREFIX        YM1168
         EX    RWK4,CLCINST             EXECUTE CLC INST FOR DSN Y02072
         BNE   NEXTALT                  GO PREPARE FOR NEXT ALT OZ03183
         CL    RWK4,OBPAMK43            IS DSN 44 BYTES LONG?   OZ03183
         BE    OBPAM185                 YES, VALID JFCB DSN     OZ03183
         AR    RWK5,RWK4                POINT END OF JFCB DSN   OZ03183
         USING INFMJFCB,RWK5                                    OZ03183
         CLI   JFCBDSNM+1,C' '          BLANK AT END OF DSN?    OZ03183
         BNE   NEXTALT                  NO, PREPARE FOR NEXT ALTOZ03183
         LA    RWK4,3(,RWK4)            DETERMINE NUMBER        OZ03183
         LCR   RWK4,RWK4                    OF BLANKS TO BE     OZ03183
         AH    RWK4,OBPAMK44               CHECKED IN EX INST   OZ03183
         BM    OBPAM185                 MINUS, VALID 43 BYTE DSNOZ03183
         EX    RWK4,DSNCLC              CHECK FOR ALL BLANKS    OZ03183
         BE    OBPAM185                 YES, DS BELONGS TO ALT  OZ03183
         IC    RWK4,ALTLNENT            INIT REG FOR NEXT ALT   OZ03183
         B     OBPAM183                 GO INCR TO NEXT ENTRY   OZ03183
NEXTALT  AH    RWK4,VLIDLNP1            NOT EQUAL, PREPARE FOR  OZ03183
*                                         NEXT ENTRY IN THE ALT OZ03183
OBPAM183 EQU   *                                                 Y02072
         LA    RWK2,L'ALTLNENT(RWK4,RWK2) INCR TO THE NEXT ENTRY Y02072
*                                         (CONTENTS OF ALTLNENT  Y02072
*                                         PLUS 1 FOR LENGTH OF   Y02072
*                                         ALTLNENT)              Y02072
         BCT   RWK3,OBPAM182            RETURN IF MORE ENTRIES   Y02072
OBPAM184 L     RWK5,0(RPARC)            GET DCB ADDR             Y02072
         DROP  RDCB                                              Y02072
         USING IHADCB,RWK5                                       Y02072
         L     RWK5,DCBDEBAD            GET DEB ADDR             Y02072
         DROP  RWK5                                              Y02072
         USING DEBBASIC,RWK5                                     Y02072
         NI    DEBFLGS1,X'FF'-DEBAPFIN  TURN BIT OFF IF NO MORE  Y02072
*                                         ENTRIES OR NO ALT      Y02072
OBPAM185 EQU   *                                                 Y02072
         LM    RWK4,RWK5,DXRGSAVE       RESTORE REG VALUE        Y02072
         DROP  RWK5                                              Y02072
OBPAM186 EQU   *                                                 Y02072
         ST    RUCB,0(0,RJ)             MAIN UCB PTR IN CURRENT EXTENT.
         SR    RD,RD
         IC    RD,59(0,RDCB)            GET NO OF EXTENT ON THIS DS
         LA    RDCB,105(0,RDCB)         POINT TO 1ST EXTENT ENTRY  UL17
         LA    RUCB,3                   MAX OF 3 EXTENTS           UL17
         CLI   0(RDCB),ULEXTYP          CHECK,BR IF 1ST EXTENT NOT UL17
         BC    7,OBPAM187               A USER LABEL TRACK         UL17
         LA    RDCB,10(0,RDCB)          POINT TO 2ND EXTENT ENTRY  UL17
         BCTR  RUCB,0                   DEC MAX NO EXTENTS LEFT    UL17
OBPAM187 EQU   *                                                   UL17
         LTR   RD,RD                    CHECK FOR ZERO
         BC    7,OBPAM190               NO BRANCH
*
         LA    RD,1                     TO FORM DUMMY EXTENT
OBPAM190 EQU   *
*
         TM    0(RPARC),X'0F'           CK FOR INPUT
         BC    8,OBPAM200              BR IF YES
         MVI   0(RJ),X'10'              INH WR HA, R0 PERM HEAD SEEKS
         BC    15,OBPAM210
*
OBPAMK43 DC    H'43'                                            OZ03183
OBPAMK44 DC    H'44'
*
OBPAM200 EQU   *
         MVI   0(RJ),X'50'              INH ALL WR PERM HEAD SEEKS
*
OBPAM210 EQU   *
         SR    RE,RE                    SET FORMAT 3 SW OFF
*
OBPAM220 EQU   *
         MVC   6(8,RJ),2(RDCB)          SET UP ONE EXTENT CCHH TO CCHH
*    APAR 43880 RESULTED FROM THE USER BEING ABLE TO SPECIFY     A43880
*    ZERO FOR PRIMARY SPACE ALLOCATION AND THUS GETTING EXTENT   A43880
*    SECTION OF DEB ALL ZEROS.                                   A43880
         CLC   XNTOFSET(EIGHT,RJ),NOALLOC  IS THE EXTENT ALL 0   A43880
         BNE   ALLOC                   IF NOT   NO PROBLEM       A43880
         MVC   XNTOFSET(L'FOXES,RJ),FOXES INVALIDATE DEB        SA54462
ALLOC    EQU   *                                                 A43880
         CLI   0(RDCB),X'81'            CHECK FOR CYLINDER BOUNDRY
         BE    OBPAM224                 YES BRANCH. PERMIT HEAD SEEKS.
         OI    0(RJ),X'18'              INHIBIT ALL SEEKS
OBPAM224 EQU   *
*
*
*        SET NO OF TRACKS
*
         CLC   XNTOFSET(L'FOXES,RJ),FOXES  DEB INVALID?        @ZA10225
         BE    BYPASS                      YES,BYPASS CONVERT  @ZA10225
         STM   RE,RJ,DXCCW5             SAVE ALL REGS
         LR    RPAR,RJ                  SAVE CURR EXTNT PNTR
         STC   RF,DXDAADDR              SET CONST M FOR CONVERT
         MVC   DXDAADDR+1(2),4(RJ)      BB
         MVC   DXDAADDR+3(4),10(RJ)     END CCHH IN EXTENT
*
*        USE CONVERT ROUTINE
*
         L     RF,0(0,RPARC)            DCB PTR
         L     RF,DCBOFSET(0,RF)   PT TO DEB
         LA    RDCB,DXDAADDR            PT TO CONST FOR CONVERT RTNE
         L     RJ,CVTPTR                GET COMM VECTOR ADDRESS
         L     RJ,CVTPRLTV-CVT(0,RJ)    CONVERT RTNE
         BALR  RD,RJ
*
         LR    RF,RE                    MOVE TTR TO RF
         SRL   RF,16                    USE TT ONLY
         LA    RF,1(0,RF)               ADD ONE TO TT
         SH    RF,DXCCW4                SUBTRACT TT OF LAST EXTENT
         STH   RF,14(0,RPAR)            STORE NO OF TRKS IN EXTNT
         AH    RF,DXCCW4                RESET TOTAL TT CTR
         STH   RF,DXCCW4
         LM    RE,RJ,DXCCW5             RESTORE ALL REGS
BYPASS   EQU   *                                               @ZA10225
         LA    RF,1(0,RF)              ADD 1 TO M CTR, PT TO NEXT EXTNT
*
         BCT   RC,OBPAM260              NEXT
*
         USING DEBBASIC,RDEB                                     Y02072
         USING IHADCB,RDCB                                       Y02072
*
         L     RDCB,0(0,RPARC)          RE-SET DCB PTR
         L     RDEB,DCBDEBAD            RE-SET DEB PTR
         TM    DCBDSORG,POTEST          TEST FOR PO DATA SET       UT18
         BZ    OBPAM227                 BR IF NOT SPECIFIED        UT18
*                                                                  UT18
         SR    RC,RC                   ZERO REG. FOR IC INSTR.     5798
         IC    RC,DEBAMLNG             PICK UP NO. OF DATA SET     5798
         LTR   RC,RC                                               5798
         BZ    OBPAM227                BRANCH IF ZERO              5798
         OI    DEBOFLGS,1              SET CONCATENATION IND.      5798
OBPAM227 EQU   *                                                   5798
*                                                                  5798
         TM    DCBMACRF,X'80'           DCB USING EXCP MACRO
         BC    8,OBPAM230               NO BRANCH
         TM    DCBMACRF,X'40'          CK FOR FOUND EXT
         BC    1,OBPAM230               YES BRANCH
*
         TM    DSCFILTY,X'02'           PO IN DSCB
         BC    8,OBPAM232               NO BRANCH
         B     OBPAM250
*
OBPAM230 EQU   *
*
         TM    DCBDSORG,X'02'           CK FOR PO
         BC    1,OBPAM240               BR IF YES
OBPAM232 EQU   *
         SR    RD,RD                                              MC0W
         SR    RC,RC                                              MC0W
         IC    RD,JFCBNVOL              PICK UP NO. OF VOLUMES    MC0W
         IC    RC,JFCBVLCT              GET VOLUME COUNT          MC0W
         CR    RC,RD                                              MC0W
         STH   RC,18(RJ)                IS VOLUME COUNT GREATER   MC0W
         BH    OBPAM172                 YES USE VOLUME COUNT      MC0W
         STH   RD,18(RJ)                NO USE NUMBER OF VOLUMES  MC0W
OBPAM172 EQU   *                                                  MC0W
         LH    RD,JFCBVLSQ              LOAD VOL SEQ NO          A50696
         TM    JFCBIND2,X'40'         TEST FOR OLD OR NEW          6831
         BNE   OBPAM234               BIF EITHER.
         TM    0(RPARC),X'07'   TEST FOR OUT-OUT/IN. MVT SYSOUT PROB.
         BC    12,OBPAM234            BIF NEITHER.   MVT SYSOUT PROB.
         LTR   RD,RD                    TEST FOR ZERO             18987
         BE    OBPAM233                 YES                       18987
         STH   RD,16(RJ)                STORE VOL SEQ NO. IN DEB  18987
         B     OBPAM23A                                           18987
OBPAM233 EQU   *                                                  18987
         CLI   DXVOLSEQ+1,X'00'         TEST FOR ZERO          @ZA05445
         BC    8,OBPAM23B               YES                    @ZA05445
         IC    RD,DXVOLSEQ+1            PICK UP DEBVOLSEQ      @ZA05445
         B     OBPAM234                                        @ZA05445
OBPAM23B EQU   *                                               @ZA05445
         IC    RD,JFCBNVOL              PICK UP NO. OF VOLUMES    18987
OBPAM234 EQU   *
         LTR   RD,RD                    VOL SEQ ZERO             A50696
         BNZ   OBPAM235                 NO, BR                   A50696
         LA    RD,ONE                   YES, USE VOL 1           A50696
OBPAM235 EQU   *                                                 A50696
         STH   RD,16(RJ)                USE VOL SEQ FROM JFCB    A50696
OBPAM23A EQU   *                                                  18987
         LA    RJ,4(RJ)                 SKIP PS SECTION
         LNR   RJ,RJ                    MAKE NEGATIVE FOR BPAM   A25961
*                                       TEST BELOW
         MVI   DEBAMLNG,X'10'           16 BYTE ACCESS METHOD    A25961
*                                       SECTION
OBPAM240 EQU   *
         TM    DSCFILTY,X'02'           CK PO IN DSCB
         BC    8,DEBFINI                BRANCH IF NO
OBPAM250 EQU   *
*
         TM    0(RPARC),X'0F'           CK FOR INPUT
         BC    8,DEBFINI                BRANCH IF YES
*
         CLI   JFCBELNM,X'40'           CK FOR MEMBER NAME
         BC    8,DEBFINI                BRANCH IF NO
*
*     CHECK FOR GDG RELATIVE GENERATION SPECIFICATION             18185
         CLI   JFCBELNM,C'+'                                      18185
         BC    8,DEBFINI               BRANCH IF PLUS             18185
         CLI   JFCBELNM,C'-'                                      18185
         BC    8,DEBFINI               BRANCH IF MINUS            18185
         TM    JFCBELNM,X'F0'                                     18185
         BC    1,DEBFINI               BRANCH IF NUMERIC          18185
         LTR   RJ,RJ                    TEST FOR BPAM ACCESS     A25961
*                                       METHOD SECTION
         BP    OBPAM253                 BR IF YES                A25961
         LPR   RJ,RJ                    MAKE RJ POSITIVE         A25961
         B     OBPAM256                 ACCESS METHOD LENGTH     A25961
*                                       ALLREADY SET TO 16
OBPAM253 OI    DEBAMLNG,X'08'           8 BYTE BPAM SECTION      A25961
*                                       FOR MEMBER NAME
OBPAM256 MVC   16(8,RJ),JFCBELNM        STORE MEMBER NAME IN     A25961
*                                       DEB
         BC    15,DEBFINI
*
*
*
OBPAM260 EQU   *
         BCT   RD,OBPAM280              BR IF MORE EXTENT ON CURRENT DS
         STC   RF,0(0,RB)               PUT M PTR IN AM SECTION
         LA    RB,1(0,RB)               NEXT ENTRY IN AM SECTION
         L     RDEB,NEXTCORE(0,RDEB)    NEXT DSCB ADDR
         SR    RWK6,RWK6                PREPARE REG FOR IC INST XA02093
         IC    RWK6,TIOELNGH            GET LEN OF THIS DD ENT  XA02093
         LA    RTIOT,0(RWK6,RTIOT)      INCRE TO NEXT DD ENTRY  XA02093
         L     RUCB,UCBADDR(RDEB)       RE-INIT UCB REG FOR BPAM Y02072
*                                         MULTI VOL DATA SETS    Y02072
         LR    RDCB,RDEB                NEW CORE
         LA    RJ,16(0,RJ)              NEXT DEB EXTENT
         BC    15,OBPAM180
*
*        MORE EXTENTS FOR CURRENT DATA SET
*
OBPAM280 EQU   *
         LA    RDCB,10(0,RDCB)          UPDATE DSCB PTR
         BCT   RUCB,OBPAM300            BR IF MORE EXT FOR CURR FORMAT
         LA    RDCB,1(0,RDCB)           UPDATE DSCB EXTNT PNTR
         LTR   RE,RE                    IS IT WORKING ON FORMAT 3
         BC    7,OBPAM320               BR IF YES
*
         L     RDCB,4(RDCB)             GET NEXT FORMAT 3 DSCB
         LR    RDEB,RDCB                SAVE CURRENT DSCB ADDR
         LA    RDCB,4(0,RDCB)           UPDATE DSCB PNTR
         LA    RUCB,4                   START WITH 4 EXTENTS IN KEY
         LA    RE,1                     SET FORMAT 3 SW ON
*
OBPAM300 EQU   *
         MVC   16(6,RJ),0(RJ)           MOD,UCB AND BB FOR NEXT EXTENT
         LA    RJ,16(0,RJ)              NEXT DEB EXTENT
         NI    0(RJ),X'F7'              RESET FILE MASK        @ZA02655
         BC    15,OBPAM220
*
*
OBPAM320 EQU   *
         LA    RUCB,9                   MAX 9 MORE EXTENTS
         SR    RE,RE                    FORMAT 3 SW OFF
         BC    15,OBPAM300
*
DEBFINI  EQU   *
         L     RF,DEBAPPAD              ADDRESS OF FIRST BYTE OF GOTTEN
*                                       CORE FOR DEB. USED TO ADDRESS
*                                       THE DEBDSCBA FIELD IN THE PRE-
*                                       FIX.
         DROP  RDEB                                              Y02072
         USING DEBDASD-(DEBBASND-DEBBASIC),RDEB                  Y02072
         MVC   21(2,RF),DEBBINUM        BB- COMPLETES FDAD FOR F1 DSCB.
*                                       CCHHR WAS PUT IN BY 191A.
         DROP  RDEB                                              Y02072
         USING DEBBASIC,RDEB                                     Y02072
*
*
         L     RDCB,0(RPARC)            RESTORE DCB ADDRESS
*
*        THIS ROUTINE SCANS THROUGH THE DEB EXTENTS TO PICK UP @Y30LSBS
*        THOSE EXTENTS WHICH RESIDE ON VIRTUAL MSS  DASD.  THE @Y30LSBS
*        UCBTBYT2, X'08' OF EACH EXTENT IDENTIFIES  A          @Y30LSBS
*        VIRTUAL DASD VOLUME.   IF AN                          @Y30LSBS
*        EXTENT RESIDES ON VIRTUAL DASD, THE HIGH AND LOW      @Y30LSBS
*        EXTENT VALUES ARE PUT INTO A PARM LIST APPROPRIATLY   @Y30LSBS
*        FORMATTED FOR THAT PARTICULAR VOLUME.  THE            @Y30LSBS
*        LIST IS USED TO ACQUIRE THE DASD SPACE FOR THE        @Y30LSBS
*        EXTENTS AND PROPERLY STAGE OR INHIBIT STAGE THE DATA. @Y30LSBS
*                                                              @Y30LSBS
*                                                              @Y30LSBS
VIRTPROC EQU   *                                               @Y30LSBS
         STM   RPAR,RTIOT,DXCCW6        SAVE REGISTERS         @ZA17532
         XC    DXCCW12+4(4),DXCCW12+4   NO ACQUIRE LIST YET    @ZA17532
*                                       THIS IS USED AS ANCHOR @ZA17532
*                                       POINT FOR ACQUIRE LISTS@ZA17532
         SR    RD,RD                    CLEAR WORK REGISTER    @ZA17532
         IC    RD,DEBNMEXT              NUMBER OF DEB EXTENTS  @ZA17532
         LR    RC,RCORE                 USE THIS 'TRICK' SO CAN@ZA17532
         SH    RC,OBPAMK44              ADDR ALL DSCB'S ALIKE  @ZA17532
         DROP  RCORE                                           @ZA17532
         USING FORCORE-L'JFCBDSNM,RC                           @ZA17532
         LA    RPAR,DEBBASND            POINT TO DEB EXTENT    @ZA17532
         USING DEBDASD,RPAR                                    @ZA17532
OBPAM322 EQU   *                                               @ZA17532
         L     RUCB,DEBUCBAD            GET UCB ADDRESS        @ZA17532
         TM    UCBTBYT2,UCBRVDEV        IS IT VIRTUAL DASD     @Y30LSBS
         BO    VIRTRTN                  YES, PROCESS           @OZ28203
NOACQ    EQU   *                        CHECK FOR CANCAT PDS   @OZ28203
         TM    DEBOFLGS,DEBRERR         IS IT CONCATENATED PDS @ZA17532
         BNO   OBPAM600                 NO, GO AROUND VIRT RTN.@Y30LSBS
OBPAM324 EQU   *                        BYPASS DATA SET        @ZA17532
         SR    RB,RB                    PICK UP NUMBER OF      @ZA17532
         IC    RB,DSCNOEXT              EXTENTS IN THE DEB FOR @ZA17532
*                                       THIS DATA SET. NOTE NO @ZA17532
*                                       USER LABELS FOR PDS    @ZA17532
         SR    RD,RB                    REDUCE NUM OF EXTENTS  @ZA17532
         SLL   RB,4                     ADJUST DEB PTR TO      @ZA17532
         AR    RPAR,RB                  BYPASS THIS DATA SET   @ZA17532
OBPAM328 EQU   *                                               @ZA17532
         L     RC,DSCCORE               GET NEXT DSCB IN CHAIN @ZA17532
         LTR   RC,RC                    IS THERE ONE?          @ZA17532
         BZ    OBPAM330                 NO,ANY OF THEM VV?     @ZA17532
         CLI   DSCFMTID,C'1'            YES,IS IT A FORMAT 1?  @ZA17532
         BNE   OBPAM328                 NO,ANY MORE?           @ZA17532
         B     OBPAM322                 YES,IS IT A VV?        @ZA17532
OBPAM330 EQU   *                                               @ZA17532
         DROP  RC                                              @ZA17532
         USING FORCORE,RCORE                                   @ZA17532
         NC    DXCCW12+4(4),DXCCW12+4   ANY DATA SET ON VV?    @ZA17532
         BZ    OBPAM600                 NO,WE ARE DONE         @ZA17532
         B     OBPAM540                 YES,GO ISSUE ACQUIRE   @ZA17532
VIRTRTN  EQU   *                        START OF STAGING LOGIC @ZA17532
*      CHECK FOR PREVIOUSLY ACQUIRED DATA SETS                 @OZ28203
*      (1) NEW DATA WITH TTR OF ZERO                           @OZ28203
*      (2) TEMP DATA SET PASSED FROM STEP TO STEP              @OZ28203
         TM    JFCBIND2,JFCNEW          NEW  DATA SET?         @OZ28203
         BO    CKPOTTR                  YES CHECK TTR          @OZ28203
         TM    JFCBIND2,JFCTEMP         TEMP DATA SET?         @OZ28203
         BNO   DOACQ                    NO PROCESS             @OZ28203
         TM    UCBSTAT,UCBRESV+UCBPRES  PERM MOUNTED VOLUME ?  @OZ28203
         BM    CKOUTPUT                 YES, GO CHECK OUTPUT   @OZ28203
         BO    CKOUTPUT                                        @OZ28203
         B     DOACQ                    NO, DO ACQUIRE         @OZ28203
CKOUTPUT EQU   *                                               @OZ28203
         TM    DEBOPATB,OUTIN           OUTPUT PROCESSING ?    @OZ28203
         BNO   NOACQ                    NO , BY PASS ACQUIRE   @OZ28203
CKPOTTR  EQU   *                        CHECK FOR TTR OF ZERO  @OZ28203
         TM    DSCFILTY,POTEST          P.O. DATASET ?         @OZ28203
         BO    DOACQ                    YES.TTR IS NEVER ZERO  @OZ28203
         CLC   DSCLSTAR(3),NOALLOC      TTR = ZERO ?           @OZ28203
         BNE   NOACQ                    NO  , BY PASS ACQUIRE  @OZ28203
DOACQ    EQU   *                                               @OZ28203
         CLC   DEBSTRCC,FOXES           VALID EXTENT?          @ZA17532
         BE    OBPAM600                 NO,EXIT                @ZA17532
*                                                              @ZA17532
*        INITIALIZE FOR VIRTUAL DASD PROCESSING                @ZA17532
*                                                              @ZA17532
         BAL   RPARC,GETMAIN            YES,GETMAIN FOR ACQUIRE@ZA17532
         USING ACQLST,RTIOT                                    @ZA17532
         SR    RJ,RJ                    NO EXTENTS IN LIST YET @ZA17532
*                                       THIS REGISTER USED TO  @ZA17532
*                                       COUNT NUM OF EXTENTS   @ZA17532
*                                       IN ACQUIRE LIST        @ZA17532
         NC    DXCCW12+4(4),DXCCW12+4   FIRST ACQUIRE LIST?    @ZA17532
         BNZ   OBPAM332                 NO,CHAIN TO LAST       @ZA17532
         ST    R1,DXCCW12+D4            SAVE THE POINTER       @Y30LSBS
         B     OBPAM334                 CONTINUE               @ZA17532
OBPAM332 EQU   *                                               @ZA17532
         ST    R1,ARNEDB                CHAIN ACQUIRE LIST     @ZA17532
*                                                              @ZA17532
*        THIS LOGIC KEEPS TRACK OF ACQUIRE LISTS AS FOLLOWS    @ZA17532
*              RTIOT  ADDRESS OF BEGINNING OF ACQUIRE LIST     @ZA17532
*              RWTGC  ADDRESSABILITY FOR FILLING IN EXTENTS    @ZA17532
*                                                              @ZA17532
OBPAM334 EQU   *                                               @ZA17532
         LR    RTIOT,R1                 SAVE ACQUIRE LIST      @ZA17532
         LR    RWTGC,RTIOT              NEW NOW CURRENT        @ZA17532
         TM    DSCFILTY,POTEST          IS THIS A PDS?         @ZA17532
         BZ    OBPAM338                 NO,BRANCH              @ZA17532
*                                                              @ZA17532
*        PDS PROCESSING                                        @ZA17532
*                                                              @ZA17532
         DROP  RTIOT                                           @ZA17532
         USING ACQLST,RWTGC                                    @ZA17532
         BAL   RPARC,CONVERT            FIND EOF               @ZA17532
         MVC   AREXT(2),DEBSTRCC        STAGE FIRST CYLINDER   @ZA17532
         MVC   AREXT+2(2),AREXT         (CONTAINS DIRECTORY)   @ZA17532
         LA    RJ,1(RJ)                 ONE EXTENT IN ACQUIRE  @ZA17532
         TM    DEBOPATB,OUTIN           OUTPUT?                @ZA17532
         DROP  RWTGC                                           @ZA17532
         USING ACQLST,RTIOT                                    @ZA17532
         STC   RJ,ARNMEXTS              ONE EXTENT             @ZA17532
         LA    RWTGC,L'AREXT(RWTGC)     DIRECTORY IN LIST      @ZA17532
         BNO   OBPAM324                 NO,GO BYPASS THIS D.S. @ZA17532
         DROP  RTIOT                                           @ZA17532
         USING ACQLST,RWTGC                                    @ZA17532
         CLC   AREXT-4(2),DXCCW5+4      IS EOF ON CYL CONTAIN- @ZA17532
*                                       ING THE DIRECTORY      @ZA17532
         BNE   OBPAM403                 NO,GO STAGE EOF        @ZA17532
         B     OBPAM404                 YES,DON'T STAGE IT ANEW@ZA17532
OBPAM338 EQU   *                                               @ZA17532
         TM    DEBOPATB,OUTIN           OUTPUT OR OUTIN?       @ZA17532
         BO    OBPAM400                 YES,OUTPUT PROCESSING  @ZA17532
*                                                              @ZA17532
*        INPUT PROCESSING   - INPUT,INOUT,UPDAT                @ZA17532
*        ACQUIRE (WITH STAGE) UP TO AND INCLUDING EOF          @ZA17532
         CLC   DSCLSTAR(5),NOALLOC      EMBEDDED EOF?          @ZA17532
         MVI   DXCCW5,X7F               IF NO,STAGE ALL        @ZA17532
         BE    OBPAM350                 NO,NO CVT TTR CONVERT  @ZA17532
         BAL   RPARC,CONVERT            CONVERT TTR TO MBBCCHHR@ZA17532
*                                       AND PLACE IT IN DXCCW5 @ZA17532
*                                                              @ZA17532
*        AT THIS POINT DXCCW5 CONTAINS 7F OR 0MBBCCHH          @ZA17532
OBPAM350 EQU   *                        LOOP FOR FILLING IN    @ZA17532
*                                       ACQUIRE LIST EXTENTS   @ZA17532
         MVC   AREXT(2),DEBSTRCC        STARTING CC OF EXTENTCS@ZA17532
         CH    RJ,DXCCW5                THIS EXT HAVE LAST REC @Y30LSBS
*                                       COMPARING EXTENT NUM   @ZA17532
*                                       TO M OF MBBCCHHR       @ZA17532
         BE    OBPAM370                 YES,GO HANDLE IT       @ZA17532
         MVC   AREXT+2(2),DEBENDCC      NO,END CC TO PARM LIST @ZA17532
         B     OBPAM390                 GO SEE IF MORE EXTENTS @ZA17532
OBPAM370 EQU   *                                               @ZA17532
         LH    R1,DXCCW5+4              CYL WHERE LAST REC IS  @ZA17532
         CLC   DXCCW5+6(2),DEBENDHH     IS LAST TRACK OF D.S.  @ZA17532
*                                       ON THIS CYLINDER?      @ZA17532
         BNE   OBPAM380                 NO,STAGE UP TO AND     @ZA17532
*                                       INCLUDING THIS CYLINDER@ZA17532
         CH    R1,DEBENDCC              ON LAST CYLINDER OF    @ZA17532
*                                       THIS EXTENT?           @ZA17532
         BE    OBPAM382                 YES, IGNORE EOF MARKER @ZA17532
         LA    R1,1(R1)                 NO,EOF MAY BE ON NEXT  @ZA17532
OBPAM380 EQU   *                                               @Y30LSBS
         STH   R1,AREXT+2               LAST CYL TO BE STAGED  @ZA17532
         B     OBPAM384                 GO ACCOUNT FOR THIS EXT@ZA17532
*                                                              @ZA17532
*        THIS CODE IS REQUIRED IN THE UNUSUAL CONDITION WHERE  @ZA17532
*        THE EOF WAS WRITTEN ON THE NEXT EXTENT.               @ZA17532
*                                                              @ZA17532
OBPAM382 EQU   *                                               @ZA17532
         STH   R1,AREXT+2               LAST CYL OF THIS EXTENT@ZA17532
         LA    RJ,1(RJ)                 ACCOUNT FOR THIS EXTENT@ZA17532
         CR    RJ,RD                    EXHAUSTED ALL EXTENTS? @ZA17532
         BE    OBPAM500                 YES,NO EOF WRITTEN     @ZA17532
         LA    RPAR,DEBEXTLN            NO,POINT TO NEXT       @ZA17532
         LA    RWTGC,L'AREXT(RWTGC)     EXTENT LISTS           @ZA17532
         MVC   AREXT(2),DEBSTRCC        EOF MAY BE ON THE FIRST@ZA17532
         MVC   AREXT+2(2),DEBSTRCC      TRACK OF THIS EXTENT   @ZA17532
OBPAM384 EQU   *                                               @ZA17532
         LA    RJ,D1(RJ)                PUT EXT NUMBER IN LIST @Y30LSBS
         B     OBPAM500                 GO TO ISSUE ACQUIRE    @ZA17532
*                                                              @ZA17532
*        SEE IF EXHAUSTED ALL EXTENTS                          @ZA17532
*                                                              @ZA17532
OBPAM390 EQU   *                                               @ZA17532
         LA    RJ,1(RJ)                 INCREMENT NUM OF EXTENT@ZA17532
         LA    RWTGC,L'AREXT(RWTGC)     NEXT EXTENT IN ACQUIRE @ZA17532
         CR    RJ,RD                    PROCESSED ALL EXTENTS? @ZA17532
         LA    RPAR,DEBEXTLN            NEXT DEB EXTENT        @ZA17532
         BNE   OBPAM350                 NO,GO PROCESS THIS ONE @ZA17532
         B     OBPAM500                 YES,GO ISSUE ACQUIRE   @ZA17532
*                                                              @ZA17532
*        OUTPUT PROCESSING - OUTPUT OR OUTIN                   @ZA17532
*                                                              @ZA17532
OBPAM400 EQU   *                                               @ZA17532
         TM    JFCBIND2,JFCOLD          IS DATA SET OLD OR NEW?@ZA17532
         BO    OBPAM408                 YES,THEN NOT MOD       @ZA17532
*                                                              @ZA17532
*        DISP=MOD PROCESSING                                   @ZA17532
*                                                              @ZA17532
*        FOR DISP=MOD,THE CYLINDER CONTAINING THE EOF IS STAGED@ZA17532
*        NO ACQUIRE IS ISSUED FOR THE CYLINDERS PRECEEDING THE @ZA17532
*        EOF. ALL EXTENTS BEYOND EOF ARE TREATED AS NORMAL     @ZA17532
*        OUTPUT IE. WE WILL ACQUIRE ALL EXTENTS - WITH INHIBIT @ZA17532
*        STAGE IF POSSIBLE.                                    @ZA17532
*                                                              @ZA17532
         BAL   RPARC,CONVERT            CONVERT TTRN OF EOF    @ZA17532
OBPAM403 EQU   *                                               @ZA17532
         MVC   AREXT(2),DXCCW5+4        STAGE CYLINDER CONTAIN-@ZA17532
         MVC   AREXT+2(2),DXCCW5+4      ING LAST RECORD        @ZA17532
         LA    RJ,1(RJ)                 ACCOUNT FOR THIS CYL   @ZA17532
         DROP  RWTGC                                           @ZA17532
         USING ACQLST,RTIOT                                    @ZA17532
         STC   RJ,ARNMEXTS              NUM OF EXTENTS IN ACQ  @ZA17532
         SR    RB,RB                    CLEAR WORK REGISTER    @ZA17532
OBPAM402 EQU   *                                               @ZA17532
         CH    RB,DXCCW5                LAST REC IN THIS EXTENT@ZA17532
         BE    OBPAM404                 YES,NOW GO SET UP NEW  @ZA17532
         LA    RPAR,DEBEXTLN            NO,SET UP TO CHECK NEXT@ZA17532
         LA    RB,1(RB)                 INCREASE M             @ZA17532
         BCT   RD,OBPAM402              GO CHECK THIS EXTENT   @ZA17532
OBPAM404 EQU   *                                               @ZA17532
         LH    RB,DXCCW5+4              LAST REC IN THIS CYL   @ZA17532
         CH    RB,DEBENDCC              LAST CYLINDER OF EXTENT@ZA17532
         BNE   OBPAM406                 NO,ACQUIRE REST OF EXT @ZA17532
         BCTR  RD,0                     YES,ANY MORE EXTENTS?  @ZA17532
         BZ    OBPAM540                 NO,GO ISSUE ACQUIRE    @ZA17532
         LA    RPAR,DEBEXTLN            YES,POINT TO NEXT ONE  @ZA17532
         LH    RB,DEBSTRCC              FIRST CYL OF NEW EXT   @ZA17532
         B     OBPAM407                 TO ACQUIRE LIST        @ZA17532
OBPAM406 EQU   *                                               @ZA17532
         LA    RB,1(RB)                 CYLINDER AFTER LAST REC@ZA17532
OBPAM407 EQU   *                                               @ZA17532
         BAL   RPARC,GETMAIN            ACQUIRE LIST FOR REST  @ZA17532
         ST    R1,ARNEDB                CHAIN IT TO PREVIOUS   @ZA17532
         LR    RWTGC,R1                 ADDRESSABILITY FOR     @ZA17532
         LR    RTIOT,R1                 NEW ACQUIRE LIST       @ZA17532
         OI    ARFLAG,INHIBST           INHIBIT STAGE THIS TIME@ZA17532
         DROP  RTIOT                                           @ZA17532
         USING ACQLST,RWTGC                                    @ZA17532
         STH   RB,AREXT                 FIRST CYL TO ACQUIRE   @ZA17532
         SR    RJ,RJ                    NO EXTENTS IN LIST     @ZA17532
         B     OBPAM412                 CONTINUE AS NORMAL OUT @ZA17532
*                                                              @ZA17532
*        OUPUT PROCESSING - DISP=OLD OR NEW                    @ZA17532
*                                                              @ZA17532
*        IF ANY EXTENT OF THE DATA SET IS NOT ON A CYLINDER    @ZA17532
*        BOUNDARY,THEN ALL EXTENTS WILL BE STAGED              @ZA17532
*                                                              @ZA17532
OBPAM408 EQU   *                                               @ZA17532
         DROP  RWTGC                                           @ZA26462
         USING ACQLST,RTIOT                                    @ZA17532
         OI    ARFLAG,INHIBST           SET INHIBIT STAGE BIT  @ZA17532
OBPAM410 EQU   *                        LOOP FOR FILLING IN    @ZA17532
*                                       EXTENTS IN ACQUIRE LIST@ZA17532
         DROP  RTIOT                                           @ZA17532
         USING ACQLST,RWTGC                                    @ZA17532
         MVC   AREXT(2),DEBSTRCC        STARTING CYL TO LIST   @ZA17532
OBPAM412 EQU   *                                               @ZA17532
         MVC   AREXT+2(2),DEBENDCC      ENDING CC TO LIST      @ZA17532
         TM    DEBDVMOD,DEBCYL          CYLINDER BOUNDARY?     @ZA17532
         BNO   OBPAM416                 YES,DON'T RESET        @ZA17532
         DROP  RWTGC                                           @ZA26462
         USING ACQLST,RTIOT                                    @ZA26462
         NI    ARFLAG,X'FF'-INHIBST     NO,RESET INHIBIT BIT   @ZA17532
OBPAM416 EQU   *                                               @ZA17532
         LA    RWTGC,L'AREXT(RWTGC)     NEXT ACQUIRE EXTENT    @ZA17532
         LA    RPAR,DEBEXTLN            NEXT DEB EXTENT        @ZA17532
         LA    RJ,1(RJ)                 COUNT THIS EXTENT      @ZA17532
         BCT   RD,OBPAM410              ACQUIRE ALL EXTENTS    @ZA17532
         TM    JFCBIND2,JFCNEW          NEW DATA SET?          @OZ28203
         BO    OBPAM500                 YES,CAN INHIBIT        @ZA26462
         TM    DCBMACRF,DCBMRECP        DCB USING EXCP MACRO?  @ZA17532
         BO    OBPAM418                 YES,STAGE ALL          @ZA17532
         TM    DCBMACRF,DCBMRPT1        USING READ NOTE/POINT? @ZA17532
         BO    OBPAM418                 BIF YES TO STAGE DATA  @ZA30847
         TM    DCBMACF2,DCBMRPT2        USING WRITE NOTE/POINT @ZA30847
         BZ    OBPAM500                 BIF NO, CAN INHIBIT    @ZA30847
OBPAM418 EQU   *                                               @ZA17532
         NI    ARFLAG,X'FF'-INHIBST     YES,STAGE ALL          @ZA17532
*                                                              @ZA17532
*        THIS IS THE ACQUIRE ROUTINE.  IT ISSUES THE ICBACREL  @Y30LSBS
*        MACRO TO GET DASD SPACE IF THE DATA SET IS ON MSS     @Y30LSBS
*        VIRTUAL DASD.                                         @ZA17532
*                                                              @Y30LSBS
OBPAM500 EQU   *                                               @Y30LSBS
         STC   RJ,ARNMEXTS              YES, STORE NUMB EXTENTS@Y30LSBS
*                                                              @Y30LSBS
*              ISSUE THE ACQUIRE.  IF IT FAILS, XCTL TO        @Y30LSBS
*              PROBLEM DETERMINATION FOR A 413-2C ABEND.       @Y30LSBS
*                                                              @Y30LSBS
OBPAM540 EQU   *                                               @Y30LSBS
         L     RTIOT,DXCCW12+4          GET FIRST ACQUIRE LIST @ZA17532
         LR    R1,RTIOT                 SET UP FOR ACQUIRE     @ZA17532
         ICBACREL TYPE=ACQ,MF=(E,ACQLST)   GET THE DASD SPACE  @Y30LSBS
         LTR   RJ,RJ                    ANY ERRORS             @Y30LSBS
         BZ    OBPAM550                 NO                     @Y30LSBS
*        ACQUIRE FAILED - ABEND                                @Y30LSFY
*        NOTE IFG0199B DESTROYS SECOND WORD OF PARM LIST       @ZA17532
*                                                              @ZA17532
OBPE111  EQU   111                      IDMS FAILURE CODE      @Y30LSFY
         LM    RPAR,RTIOT,DXCCW6        RESTORE REGS           @ZA17532
         LR    RDEB,R1                  PASS PARM LIST PTR     @Y30LSFY
         DMABCOND OBPE111,SOP6M,RES=NO,REGSAVE=YES,RETURN=NONE @Y30LSFY
         B     TCTLRTN                  XCTL TO PROB DET       @Y30LSFY
OBPAM550 EQU   *                                               @Y30LSBS
*                                                              @Y30LSBS
*        FREE UP ALL THE CORE                                  @Y30LSBS
*                                                              @Y30LSBS
         LR    R1,RTIOT                 AREA TO BE FREED       @ZA17532
         L     RTIOT,ARNEDB             ADDR OF CHAIN IF ANY   @ZA17532
         USING WTG,RWTG                                        @ZA17532
OBPAMFRE IECRES FREE,A=(R1),PREFIX=YES,STM=(RDCB,RJ,WTGPREFX)  @Y30LSBS
         LTR   RTIOT,RTIOT              ANOTHER ACQUIRE LIST?  @ZA17532
         BNZ   OBPAM550                 YES,GO FREE IT         @ZA17532
OBPAM600 EQU   *                        END OF MSS ROUTINE     @ZA17532
         LM    RPAR,RTIOT,DXCCW6        RESTORE REGS           @ZA17532
         DROP  RWTG                                            @ZA17532
         DROP  RTIOT                                           @ZA17532
         DROP  RPAR                                            @ZA17532
         EJECT
***********************************************************************
*
*      TEST FOR USER OF EXCP NOT BSAM OR QSAM
*
***********************************************************************
*
         TM    DCBMACRF,X'80'           EXCP BIT ON
         BC    8,SAMOUT                 NO BRANCH
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP11           COPY DCB BACK TO USER  @Z30TSCF
         B     RELOOP
*
SAMOUT   EQU   *
*
         TM    ZERO(RPARC),INMASK       TEST FOR INPUT DATA SET    UT18
         BZ    SAMOUT1                  BR IF INPUT                UT18
         TM    DCBDSORG,POTEST          TEST FOR PO DATA SET       UT18
         BO    SAMOUT1                  BR IF  PO DATA SET         UT18
         TM    DCBOPTCD,TOTMASK         TEST FOR TOTALING          UT18
         BZ    SAMOUT1                  BR IF NOT SPECIFIED        UT18
         MVC   WTGIDTTR,SOP1Y           ST ID IN WTG TABLE     @Z30TSCF
         B     RELOOP                   UNCONDITIONAL BRANCH       UT18
*                                                                  UT18
SAMOUT1  EQU   *                        SYMBOLIC ADDR              UT18
         MVC   WTGIDTTR,SOP1B           ST ID IN WTG TABLE     @Z30TSCF
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     UPDATE WHERE TO GO ENTRY
         LA    RPARC,PLOFF(0,RPARC)     UPDATE PARA LIST ENTRY
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE                  YES BR BACK TO BEGINNING
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO BRANCH
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      RE INIT  WTG LIST
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                NO XCTL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*                                                              @ZA17532
*        THIS ROUTINE BALRS TO THE RESIDENT CONVERT ROUTINE TO @ZA17532
*        DETERMINE IN WHAT EXTENT AND WHERE THE LAST PHYSICAL  @ZA17532
*        RECORD OF THE DATA SET IS.                            @ZA17532
*                                                              @ZA17532
CONVERT  EQU   *                                               @ZA17532
         USING ACQLST,RTIOT                                    @ZA17532
         ST    RDCB,DXCCW12             SAVE DCB ADDRESS       @ZA17532
         STM   RTIOT,RJ,DXCCW8          SAVE WORK REGS         @ZA17532
         SR    RE,RE                    ZERO WORK REGISTER     @ZA17532
         ICM   RWK3,B'1110',DSCLSTAR    GET TTR                @ZA17532
         LA    RDCB,AREXT               GET RETURN ADDRESS     @ZA17532
         LR    R1,RDEB                  REG 1 NEEDS DEB        @ZA17532
         L     RJ,CVTPTR                GET      CVT           @ZA17532
         USING CVT,RJ                   ADDRESSABILITY         @ZA17532
         L     RJ,CVTPCNVT              GET CONVERT ROUTINE    @ZA17532
         DROP  RJ                                              @ZA17532
         BALR  RD,RJ                    GO TO CONVERT ROUTINE  @ZA17532
         L     RDCB,DXCCW12             RESTORE DCB ADDRESS    @ZA17532
         LM    RTIOT,RJ,DXCCW8          RESTORE THE REGS       @ZA17532
         MVC   DXCCW5,AREXT-1           SAVE 0MBBCCHH          @ZA17532
         XC    AREXT(8),AREXT           CLEAN UP               @ZA17532
         BR    RPARC                    RETURN                 @ZA17532
         DROP  RTIOT                                           @ZA17532
*                                                              @ZA17532
*        THIS ROUTINE OBTAINS CORE FOR AN ACQUIRE LIST         @ZA17532
*        THE CORE IS CLEARED AND KNOWN VALUES ARE INSERTED     @ZA17532
*                                                              @ZA17532
         USING WTG,RWTG                                        @ZA17532
GETMAIN  IECRES GET,PREFIX=YES,SP=230,LV=ACQPLN,ID=MSS1,       @ZA17532.
               STM=(RDCB,RJ,WTGPREFX)   OBTAIN CORE FOR LIST   @ZA17532
         USING ACQLST,R1                ACQUIRE ADDRESSABILITY @ZA17532
         XC    ACQLST(ACQPLN),ACQLST    CLEAR CORE             @ZA17532
         MVC   ARVOL,UCBVOLI            MOVE IN VOLID          @ZA17532
         MVI   ACQLST+D3,ACQPLN         SET LIST LENGTH        @ZA17532
         MVI   AROP,ACQOP               SET ACQUIRE OPTION     @ZA17532
         BR    RPARC                    RETURN                 @ZA17532
         DROP  RWTG                                            @ZA17532
         DROP  R1                                              @ZA17532
*
WAOFF    EQU   32                  OFFSET OF FIRST ENTRY IN WTG TABLE
PLOFF    EQU   4                   OFFSET OF DCB ENTRIES
WGOFF    EQU   8                   OFFSET OF WTG ENTRIES
*
*  MODULE ID'S
*
SOP11    DC    C'11',VL3(IGG01911)      LAST EXECUTOR          @Z30TSCF
SOP1Y    DC    C'1Y',VL3(IGG0191Y)      USER TOTALING EXECUTO  @Z30TSCF
SOP1B    DC    C'1B',VL3(IGG0191B)      ANY OTHER CONDITION    @Z30TSCF
SOP6M    DC    C'6M',VL3(IGG0196M)      PROBLEM DET.           @ZA04216
OPIDCNST DC    C'0S'
AMIDCNST DC    C'1N'                    THIS EXEC'S ID.
*
*  OTHER CONSTANTS
*
NOALLOC  DC    2F'0'                   COMPARE FOR 0 IN EXTENT   A43880
FOXES    DC    F'-1'                    INVALID EXTENT FOR DEB  SA54462
         USING INFMJFCB,RWK5                                     Y02072
DSNCLC   CLC   JFCBDSNM+1(0),JFCBDSNM+2 IS REST OF DSN BLANK?   OZ03183
CLCINST  CLC   JFCBDSNM(0),ALTDSNAM     USED TO COMPARE DSN IN   Y02072
*                                         ALT AGAINST DSN IN     Y02072
*                                         THE JFCB               Y02072
VLIDLNP1 DC    0H'0',AL2(L'ALTVOLID+1)  LENGTH OF THE ALT VOLID  Y02072
*                                         FIELD PLUS '1' FOR AN  Y02072
*                                         EXECUTE INSTRUCTION    Y02072
*
*
PATCH    DC    0H'0',50X'00'            PATCH AREA             @Z30TSCF
END      EQU   *                        END OF MODULE            Y02072
         EJECT
SRT      DSECT
         IEFUCBOB
*
         EJECT
         DCBD  DSORG=PS
CVT      DSECT
         CVT
*   TASK CONTROL BLOCK
         CNOP  0,4
TCB      DSECT
TCBRBP   DS    F                       PO9NTER TO EXECUTING RB
TCBPIE   DS    F                       POINTER TO PROG. INTERRUPT EL.
TCBDEB   DS    F                       POINTER TO DEB QUEUE
TCBTIO   DS    F                       POINTER TO TIOT
TCBCMP   DS    F                       TASK COMPLETION CODE
TCBTRN   DS    F                       TESTRAN FIELD
TCBMSS   DS    F                       DATA BLOCK QUEUE ELEMENT POINTER
TCBPKF   DS    CL1                     RESERVED FOR FUTURE USE
TCBFLGS  DS    FL5                     FLAG BYTES
TCBLMP   DS    CL1                     RESERVED FOR FUTURE USE
TCBDSP   DS    CL1                     RESERVED FOR FUTURE USE
TCBLLS   DS    F                       POINTER TO LOAD LIST
TCBJLB   DS    F                       POINTER TO JOBLIB DCB
TCBJSE   DS    F                       LIST OF INACTIVE PROGRAMS ADDR.
TCBGRS   DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDF   DS    CL1                     TCB IDENTIFIER FIELD
TCBFSA   DS    CL3                     POINTER TO 1ST PROB.PROG.SAVEAR
TCBTCB   DS    F                       RESERVED FOR FUTURE USE
TCBTME   DS    F                       POINTER TO TIMER ELEMENT
         DS    CL24
TIOT     DSECT
TIOELNGH DS    CL1                           LENGTH OF THIS ENTRY
TIOESTTA DS    CL1                           STATUS -A-
TIOERLOC DS    CL2                           REL. LOC OF POOL
TIOEDDNM DS    2F                            DDNAME
TIOEJFCB DS    1F                            JFCB DISK ADDR
TIOESTTB DS    0CL1
TIOEFSRT DS    CL4
         DS    CL1
*        TIOT POOL ENTRY
TIOPNSLT DS    XL1                           NR.OF SLOTS FOR POOL
         DS    CL1
TIOPNSRT DS    XL1                           NR.OF DEVICES (FILLED
*                                             SLOTS)
TIOPPOOL DS    CL8                           POOL NAME
TIOPSTTB DS    XL1                           STATUS OF SLOT
TIOPSLOT DS    XL3                           SRT ADDRESS OR EMPTY SLOT
TIOTFEND DS    1F                            FINAL END OF AN ENTRY
         SPACE 1
         IEZDEB
DEBEXTLN EQU   DEBNMTRK+L'DEBNMTRK                             @ZA17532
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
DXRGSAVE EQU   DXCCW5                   SAVE AREA FOR REGISTER   Y02072
CCWOFSET EQU   DXXCTL-FORCORE           XCTL PARM LIST OFFSET  @Y30LSFY
DCBOFSET EQU   DCBDEBAD-IHADCB     DEB RLCATBL OFFSET IN DCB
DXUCBA   EQU   DSCBEND                  UCB ADDR FOR CURRENT VOL Y02072
*
* DSECT FOR THE AUTHORIZED LIBRARY TABLE                         Y02072
*
ALTABLE  DSECT                                                   Y02072
ALTLENTH DS    X                        LENGTH OF TABLE DBL WDS  Y02072
ALTNOENT DS    X                        NUMBER OF ENTRIES IN ALT Y02072
ALTENT   EQU   *                        FOR ADDRESSABILITY FROM  Y02072
*                                         ALTABLE DSECT          Y02072
ALTENTRY DSECT                          DATA SET ENTRY           Y02072
ALTLNENT DS    X                        LEN OF ALTVOLID+ALTDSNAM Y02072
ALTVOLID DS    CL6                      VOLUME ID FOR DATASET    Y02072
ALTDSNAM DS    C                        DATASET NAME - LEN VAR   Y02072
ACQLST   DSECT                                                 @Y30LSBS
ACQOP    EQU   X'02'                    ACQUIRE OP CODE        @Y30LSBS
ACQPLN   EQU   96                       PARM LIST LENGTH       @Y30LSBS
         ICBACREL TYPE=ACQ,MF=L         LIST FORM              @Y30LSBS
           END
