         TITLE 'IGG0191S, LEVEL 2 EXEC FOR D.A. WITH TRACK OVERFLOW.'
         MACRO
&NAME    IF    &A,&IS=,&ISNOT=,&GOTO=
         LCLB  &NOERR
&NOERR   SETB  1
         AIF   ('&A' NE '').SKIP
         MNOTE 'TEST  ADDRESS NOT SPECIFIED.'
&NOERR   SETB  0
.SKIP    AIF   ('&GOTO' NE '').SKIP2
         MNOTE 'BRANCH ADDRESS MISSING.'
&NOERR   SETB  0
.SKIP2   AIF   ('&IS' NE '' OR '&ISNOT' NE '').SKIP3
         MNOTE 'TEST CONDITION NOT SPECIFIED.'
&NOERR   SETB  0
.SKIP3   AIF   (&NOERR).SKIP4
         MEXIT
.SKIP4   AIF   ('&IS' EQ '').NOIS
***
&NAME    TM    &A,&IS
         BO    &GOTO
***
         MEXIT
.NOIS    ANOP
***
&NAME    TM    &A,&ISNOT
         BZ    &GOTO
***
         MEND
IGG0191S CSECT
*MODULE NAME - IGG0191S                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*        VS 1 RELEASE 3 DELETIONS/CHANGES
*                                                                XA2992
*        VS2 RELEASE 2 DELETIONS                                 Y02072
*005520,006000,043120,043300-043360,069780-069800,079580,70400,  Y02072
*70700,74600,75600,104400,104600                                 Y02072
*                                                                YM4697
*
*        VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*        OS RELEASE 21 DELETIONS                                 Y02072
*0083079040-080000                                               A37507
*   REFER TO CODE FLAGGED XA2992                                SA62479
*        OS RELEASE 20 DELETIONS
*3004058400,061800,067800-068200,068600,068800-069800,070600,    S20201
*3004079000,080000                                               S20201
*A3540100,A5000100-5000900 OX20778 FLAGGED AS------------------@ZA29383
*
*
*STATUS CHANGE LEVEL 003
* THIS EXECUTOR RUNS IN TANDEM WITH IGG0191H, WHICH GETS CORE FOR AND
* COMPLETES BUILDING THE IOB/CP'S.
*
* THE MAJOR FUNCTIONS OF THIS EXEC ARE-
*
* 1. STORE THE ID'S FOR THE EOB, NOTE/POINT ROUTINES REQ'D.
* 2. COMPLETE THE DCB FIELDS KNOWN PRIOR TO GETTING CORE FOR IOB/CP'S.
* 3. REPEAT FOR EACH DCB BEING OPENED.
* 4. CALCULATE AMOUNT OF CORE NEEDED FOR IOB'S AND GETMAIN IT    Y02072
* 5. SET AN AUDIT TRAIL BIT IN THE OPEN WORKAREA INDICATING      Y02072
*    TO FORCE CLOSE THAT THE CORE GETMAINED FOR THE IOB'S CAN    Y02072
*    BE FREEMAINED.                                              Y02072
*
* ENTRY POINTS- FROM IGG0191B BY XCTL.
*
* EXITS- TO IGG0191H BY XCTL
*        TO IGG0199K IF SEARCH DIRECT
*
*INPUT-REGISTERS WITH THE ADDRESSES OF THE FOLLOWING-
*   THE PARAMETER LIST  (POINTERS TO TOP AND CURRENT ENTRY).
*   THE WHERE-TO-GO TABLE (WTG) (POINTERS TO TOP AND CURRENT).
* EXTERNAL ROUTINES- NONE.
* ATTRIBUTES- REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY   Y02072
*             UNLESS OTHERWISE SPECIFIED, RUNS IN SUPER STATE    Y02072
* TABLES/WORKAREAS-
*
*MACROS : ACTION - MODESET, XCTL, XCTLTABL, GETMAIN              Y02072
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 35    WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 36-39 TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR  N TH DCB  (3 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (1 BYTE )
*                   IDTTR OF LAST ROUTINE LOAD       (3 BYTES)
*                   NOT USED                         (1 BYTE)
*
*    WORKAREA- SEE 'FORCORE DSECT' (IECDSECT) IN THIS LISTING
*
*TABLES/WORKAREAS- PARAMETER LIST
*
*WORD ZERO
*      BYTE  0    OPEN ATTRIBUTE  (INPUT, OUTPUT, UPDATE, IN/OUT,
*                                  OUT/IN, READ BACKWD, LEAVE , REREAD)
*      BYTES 1-3  DCB ADDRESS FOR FIRST DCB BEING OPENED.
*
*THE PARAMETER LIST HAS A ONE WORD ENTRY FOR EACH DCB BEING OPENED. THE
*FORMAT IS THE SAME AS WORD ZERO.
*END PARAMETER LIST.
*
* REGISTER CONVENTIONS USED IN ALL OF OPEN-
*
RDCB     EQU   2                        DCB REGISTER
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        I/O SUPPORT WORK AREA
RA       EQU   RCORE                    USED FOR WORK REG UNTIL RCORE
*                                       IS NEEDED IN WTG LOGIC.
RVALCHK  EQU   RA                       VALIDITY CHECK CP BASEREG,
*                                       USES 'VCMAP' DSECT.
RPAR     EQU   5                        TOP OF PARAMETER LIST
RWTG     EQU   6                        TOP OF WTG TABLE
RPARC    EQU   7                        CURRENT PARAMETER
RWTGC    EQU   8                        CURRENT LOAD IN TRANSIENT AREA
RTIOT    EQU   9                        USED AS A WORK REG
RIOB     EQU   RTIOT                    USED AS IOB BASE REG WITH THE
*                                       IOB OVERLAY FROM FORECORE.
RUCB     EQU   10                       USED AS A WORK REG
RCPSIZE  EQU   RUCB                     USED TO CALCULATE AND HOLD THE
*                                       CHANNEL PGM SIZE.
RDEB     EQU   11                       DEB BASE REG.
RB       EQU   12                       WORK REG.
RCPBASE  EQU   RB                       CHANNEL PGM BASE REG USED WITH
*                                       'CPSEGMAP' DUMMY SECTION.
RC       EQU   13                       WORK REG.
RSTEPPER EQU   RC                       POINTS TO THE CURRENT SEARCH
*                                       ADDRESS OR COUNT FIELD BEING
*                                       USED FOR CP CONSTRUCTION. WHEN
*                                       POINTING TO A COUNT FLD THE
*                                       'COUNTFLD' DUMMY SECTION IS
*                                       USED BASED ON THIS REG.
*
RE       EQU   0                        WORK REG. VOLATILE ACCROSS SVC.
RF       EQU   1                        WORK REG. VOLATILE ACCROSS SVC.
RD       EQU   14                       WORK REG. VOLATILE ACCROSS SVC.
RJ       EQU   15                       WORK REG. VOLATILE ACCROSS SVC.
*
*
* MASK CONFIGURATIONS FOR TESTING THE HI ORDER BYTE OF EACH PARAMETER
* LIST ENTRY. SIGNIFICANCE IS THE SAME AS THE DEB OPEN ATTRIBUTE FIELD.
*
INPUT    EQU   X'0F'                    TEST MASKED BITS FOR ZEROS.
OUTPUT   EQU   X'0F'                    TEST MASKED BITS FOR ONES.
INOUT    EQU   X'03'
OUTIN    EQU   X'07'
RDBACK   EQU   X'01'
UPDAT    EQU   X'04'
LEAVE    EQU   X'10'
REREAD   EQU   X'30'
*
* COMMAND CODES FOR THE 2841 CONTROL UNIT.
*
SRCHEQ   EQU   X'31'                    SEARCH EQUAL ID.
SRCHEQMT EQU   X'B1'                    SEARCH EQUAL ID IN MULTI-TRACK.
TIC      EQU   X'08'                    TRANSFER IN CHANNEL.
WCKD     EQU   X'1D'                    WRITE COUNT, KEY, AND DATA.
WSCKD    EQU   X'01'                    WRITE SPECIAL, COUNT,KEY,DATA.
SEEKCYL  EQU   X'0B'                    SEEK CYLINDER.
READDATA EQU   X'06'                    READ DATA SINGLE TRACK.
RDDATAMT EQU   86                       MULTI-TRACK READ DATA.
READKD   EQU   14                       READ KEY AND DATA.
READCT   EQU   X'92'                    READ COUNT M/T MODE.
*
* CHANNEL COMMAND WORD FLAGS.
*
SKIP     EQU   X'10'                    SKIP FLAG.
SILI     EQU   X'20'                    SUPPRESS INCORRECT LENGTH IND.
CC       EQU   X'40'                    COMMAND CHAIN.
DC       EQU   X'80'                    DATA CHAIN.
SILICC   EQU   X'60'                    SILI AND CC TOGETHER
SILICCSK EQU   X'70'                    SILI, CC, AND SKIP.
* END CCW FLAGS.
*
*
* MISCELLANEOUS ITEMS.
*
COMPNOER EQU   X'7F'                   USED TO INIT. ECB.
DCANDCC  EQU   X'C0'                    USED TO SET IOBFLAG1.
IDLENGTH EQU   X'05'                    NMBR OF BYTES IN A 'CCHHR'.
POINT    EQU   X'04'                    DCBMACRF IF NOTE/POINT USED.
QSAM     EQU   X'01'                    QSAM BIT IN DCBIND2.
*
NPD2     EQU   5                        NOTE/POINT FOR PCI,UPD,T.O.
EPDT     EQU   9                        EOB FOR T.O.
EGP2     EQU   8                        EOB FOR D.A. INPUT.
*
*
VALCHK   EQU   X'80'                    MASK TO DETERMINE IF WRITE
*                                       VALIDITY CHECK OPTION CALLED.
TBOVHD   EQU   X'08'                    FLAG FOR 2 BYTE OVERHD @ZA29383
IOBSIZE  EQU   48                       LENGTH OF A STANDARD IOB WITH
*                                       BSAM/QSAM/BPAM EXTENSION.
IOBDBLWD EQU   6                        NMBR OF DBL WDS IN IOB.
OFFSW    EQU   24                       OFFSET OF CCW THAT WRITES DATA.
OFFSR    EQU   32                       OFFSET OF THE READ CCW THAT
*                                       RECEIVES THE BLOCK LENGTH TO
*                                       BE READ.
CPSEGLEN EQU   32                       LENGTH OF ONE CP SEGMENT.
NOTZERO  EQU   7                        CONDITION MASK USED AFTER
*                                       ARITHMETIC INSTRUCTIONS FOR THE
*                                       NOT-ZERO TEST.
BBCCHH   EQU   6                        MIN. SEEK LENGTH.
*
ZERO     EQU   X'00'                    AN IMMEDIATE BYTE OF ZERO'S.
TWO      EQU   2                        NO. OF CCWS FOR RCD      S20201
*                                       READY                    S20201
*                                       READY FEATURE PER SEGMENT
THREE    EQU   3                        NO. OF DW REQUIRED FOR   S20201
*                                       RCD                      S20201
D0       EQU   0                        NO DISPLACEMENT          S20201
D1       EQU   1                        DISPLACEMENT OF ONE      S20201
D2       EQU   2                        DISP AND COUNT OF TWO    S20201
WDLEN    EQU   4                        DISPLACEMENT OF ONE WD   S20201
B5       EQU   5                        BYTE COUNT OF FIVE       S20201
D6       EQU   6                        DISPLACEMENT OF SIX      S20201
SXTN     EQU   16                       ADDED LENGTH OF A CHP    S20201
*                                       SEG-                     S20201
*                                       MENT IF RCD READY USED
B24      EQU   24                       ADDITIONAL BYTES IN RD   S20201
*                                       PROG                     S20201
*                                       FOR RECORD READY FEATURE
*
NORCDRY  EQU   X'20'                    NO RCD READY MASK        S20201
SDOPT    EQU   X'01'                    SEARCH DIRCT OPTION MASK S20201
SDFLG    EQU   X'08'                    SEARCH DIRECT INDICATOR  S20201
*
MAX      EQU   256                      MAX COUNT FOR SS INST    S20201
EIGHT    EQU   8                        LENGTH OF A COUNT FIELD.
ANYZERO  EQU   14                       MASK FOR MIXED OR ZEROS.
FIRST    EQU   X'01'                    USED TO SET IOB FLAG IN FIRST
*                                       IOB AND INIT. 'R'.
READCPL  EQU   40                       NMBR OF BYTES IN READ CP.
RCPDBLWD EQU   5                        NMBR OF DBL WDS IN RCP.
REMNANT  EQU   READCPL-OFFSR            OFFSR+REMNANT=READCPL.
OPCODE   EQU   0                        OFFSET OF CCW OPCODE(IN CCW).
ADDRESS  EQU   0                        OFFSET OF ADDRESS IN CCW
*                                       (IMPLIES THAT THE ADDRESS MUST
*                                       BE PUT IN BEFORE THE OP CODE)
FLAGS    EQU   4                        CCW FLAG BYTE.
LENFLD   EQU   6                        START OF LENGTH FLD IN CCW.
U        EQU   X'C0'                    CODE FOR DCBRECFM=U
UNRELFLG EQU   X'02'                   IOB UNRELATED FLAG        A37507
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY.
         USING SOP1S,RBASE
         USING FORCORE,RCORE                                     Y02072
*
         USING IHADCB,RDCB              DCB ADDRESSABILITY.
*
*
SOP1S    EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG0191S'              MODULE NAME              Y02072
         DC    C'@ZA29393'              LAST SHIP CODE         @Z30TSCF
         DC    C'01/18/78'              LAST DATE MODIFIED     @Z30TSCF
BEGIN    DS    0H                                                Y02072
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS FROM PARM. LIST
         L     RCORE,WDLEN(RWTGC)       COMMON WORK AREA         S20201
         L     RDEB,DCBDEBAD            DEB ADDRESSABILITY.
         USING DEB,RDEB
         TM    DCBRECFM,U               U FORMAT                 S20201
         BM    OKRR                     BRANCH IF NO             S20201
         OI    JFCBMASK+D6,NORCDRY      ASSURE RCD READY NOT     S20201
*                                       USED                     S20201
OKRR     EQU   *                                                 S20201
         XC    DCBCNTRL,DCBCNTRL        CLEAR FOR LATER USE      XA2992
*
*  ISURE NOTE/POINT ROUTINE GETS LOADED FOR BPAM                 XA2992
*
         IF    DCBDSORG,ISNOT=DCBDSGPO,GOTO=CHKQSAM              XA2992
         MVI   DCBCNTRL+1,NPD2          NOTE/POINT INDEX ID      XA2992
         B     OUTTEST                  BYPASS QSAM TEST FOR PO  XA2992
CHKQSAM  EQU   *                                                 XA2992
         IF    DCBCIND2,ISNOT=QSAM,GOTO=OUTTEST                  XA2992
ISQSAM   IF    DEBOPATB,ISNOT=OUTPUT,GOTO=RCPONLY
         B     SOMEOUT                  NOTE/POINT NOT REQ'D.
OUTTEST  IF    DEBOPATB,IS=OUTPUT,GOTO=PEROUT
PERIN    IF    DCBMACRF,ISNOT=POINT,GOTO=INTEST
         MVI   DCBCNTRL+1,NPD2          SET NOTE/POINT FOR DISK ID.
INTEST   IF    DEBOPATB,ISNOT=OUTPUT,GOTO=RCPONLY
PEROUT   IF    DCBMACRF+1,ISNOT=POINT,GOTO=SOMEOUT
         MVI   DCBCNTRL+1,NPD2          NOTE/POINT LOAD ID.
SOMEOUT  EQU   *                        NPD2 ID SET AS REQ'D.
*
* OPEN ATTRIBUTES SPECIFY SOME FORM OF OUTPUT (OUTPUT, IN/OUT, OUT/IN).
* GET A POINTER TO THE DEVICE CHARACTERISTICS TABLE ENTRY FOR THE
* DEVICE BEING USED.
*
         L     RD,DCBDVTBL              RD POINTS TO THE TABLE ENTRY
*                                       FOR DEVICE USED.
*
         USING DEVTAB,RD                DEVICE TABLE ADDRESSABILITY.
*
* THE DIRECT ACCESS DEVICE TABLE OVERLAY APPLIES TO THE ENTRY BASED ON
* REGISTER RD.
*
*CALCULATE THE MAXIMUM NUMBER OF RECORD SEGMENTS REQUIRED TO WRITE THE
* SPECIFIED BLOCKSIZE. APPLIES TO BSAM AND QSAM.
*
*
         SR    RE,RE
         LH    RF,DCBBLKSI              GET BLOCKSIZE FROM DCB.
*
* CALCULATE MAXIMUM TRACK CAPACITY BY SUBTRACTING OUT OVERHEAD @ZA29383
*
         LH    RJ,TRKCAP          GET TRACK CAP. FROM DEV TABLE.
         SR    RB,RB              CLEAR REGISTER               @ZA29383
         IC    RB,OVERK           GET KEY OVERHEAD             @ZA29383
         AR    RJ,RB              ADD KEY OVERHD TO TRKCAP     @ZA29383
         IC    RB,OVERL           GET LAST BLOCK OVERHEAD      @ZA29383
         TM    DEVFLAG,TBOVHD     IS THIS 2 BYTE OVERHEAD?     @ZA29383
         BNO   MZ0050             BRANCH IF NO                 @ZA29383
         LH    RB,OVERI           GET 2 BYTE OVERHEAD          @ZA29383
MZ0050   EQU   *
         SR    RJ,RB              SUBTRACT LAST BLOCK OVERHD   @ZA29383
*
* DEVICE TABLE ADDRESSABILITY MAY BE RELINQUISHED
*
         DROP  RD
*
* DIVIDE BLOCKSIZE BY TRACK CAPACITY.
* REGS RE/RF MUST BE EVEN/ODD PAIR.
*
         DR    RE,RJ                    BLOCKSIZE/TRACK-CAPACITY.
*                                       RF = QUOTIENT.
*                                       RE = REMAINDER
*
* IF REMAINDER IS GREATER THAN 1, ROUND UP THE QUOTIENT.  QUOTIENT
* VALUE WILL BE ONE LESS THAN MAXIMUM NUMBER OF RECORD SEGMENTS REQ'D.
*
         CH    RE,ONE                   REMAINDER GREATER THAN ONE.
         BNH   GETCORE                  NO. BRANCH AROUND THE ROUND-UP.
*
         LA    RF,1(RF)                 ROUND UP THE QUOTIENT.
*
GETCORE  EQU   *
*
         LA    RCPSIZE,1(RF)            RF+1 = MAX NMBR OF SEGMENTS.
*
         IF    DCBOPTCD,ISNOT=VALCHK,GOTO=GETCPSIZ
*
         LA    RCPSIZE,1(RCPSIZE)       ADJUST FOR WRT CHECK SEGMENT.
*
GETCPSIZ EQU   *
*
* RCPSIZE CONTAINS THE MAX NUMBER OF RECORD SEGMENTS, ADJUSTED FOR WRT
* CHECK OPTION. THIS NUMBER OF CHANNEL PROGRAM SEGMENTS WILL BE BUILT.
* THE  METHOD WORKS SO LONG AS ALL CHANNEL PROGRAM SEGMENTS ARE EQUAL
* LENGTHS.
* RF, THE UNADJUSTED VALUE, IS KEPT FOR USE IN CALCULATING S.A. AND
* COUNT FIELD CORE SIZE.
*
* COMPUTE THE AMOUNT OF CORE (EXPRESSED IN DOUBLE WORDS) NEEDED FOR
* THE CHANNEL PROGRAM SEGMENTS (FOR ONE IOB).  DONE BY-
* (SEGMENT SIZE) TIMES (NMBR OF SEGMENTS) DIVIDED BY 8. SINCE SEGMENT
* SIZE IS A MULTIPLE OF 8 (4 CCW'S = 32 BYTES) IT SIMPLIFIES TO
* 32/8 TIMES (NMBR OF SEGMENTS)= SHIFT NMBR OF SEGMENTS LEFT 2 PLACES.
         SLA   RCPSIZE,2                WRITE CP LENGTH (DBL WDS).
         LA    RJ,IOBSIZE               STARTING POINT FOR BUILDING
*                                       VARIOUS OFFSETS
         STC   RJ,DCBWCPO               PUT OFFSET IN DCB        S20201
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    NOTRR2A                  BRANCH IF NO             S20201
         LA    RJ,EIGHT(RJ)             INCREMENT OFFSET PTR     S20201
         LA    RCPSIZE,D2(RCPSIZE)      INCR IOB SIZE            S20201
         TM    DCBOPTCD,VALCHK          RCD READY AND VALIDITY   S20201
*                                       CHK                      S20201
         BZ    NOTRR2A                  BRANCH IF NO             S20201
         LA    RCPSIZE,D1(RCPSIZE)      INCR FOR FEAT IN VAL CHK S20201
NOTRR2A  EQU   *                                                 S20201
         STC   RCPSIZE,DCBWCPL          PUT LENGTH IN DCB        S20201
         IF    DEBOPATB,IS=OUTPUT,GOTO=OUTONLY
* OPENED FOR IN/OUT OR OUT/IN.
*
         MVI   DCBCNTRL+3,EGP2          EOB ID FOR NON-F INPUT.
         MVI   DCBCNTRL+2,EPDT          EOB ID FOR T.O. OUTPUT.
         LA    RJ,OFFSR(RJ)             CCW THAT RECEIVES BLOCK LENGTH.
         STC   RJ,DCBOFFSR              SAVE IT.
         LA    RJ,REMNANT(RJ)           MOVE POINTER (RJ) TO WCP.
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    NOTRR2C                  BRANCH IF NO             S20201
         LA    RJ,EIGHT(RJ)             INCR OFFSET PTR          S20201
NOTRR2C  EQU   *                                                 S20201
         STC   RJ,DCBWCPO               SAVE IT.
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    NOTRR2G                  BRANCH IF NO             S20201
         LA    RJ,EIGHT(RJ)             INCR OFFSET PTR          S20201
         LA    RCPSIZE,D2(RCPSIZE)      INCR IOB SIZE            S20201
NOTRR2G  EQU   *                                                 S20201
         LA    RJ,OFFSW(RJ)             CCW THAT RECEIVES BLOCK LENGTH.
         LA    RCPSIZE,RCPDBLWD(RCPSIZE) ADD NMBR OF CCW'S IN RCP.
         B     STOREWRT
OUTONLY  EQU   *
         MVI   DCBCNTRL+3,EPDT          TRK OVFLO OUTPUT EOB ID.
         LA    RJ,OFFSW(RJ)             CCW THAT RECEIVES BLOCK LENGTH.
         STC   RJ,DCBOFFSR              BYPASSED IF RCP PRESENT.
STOREWRT STC   RJ,DCBOFFSW
         LA    RCPSIZE,IOBDBLWD(RCPSIZE) ADD NMBR OF DBL WDS IN IOB.
* RCPSIZE HAS IOBL/8+WCPL/8+(READCPL/8 IF REQ'D).
* SEARCH ADDRESSES (S.A.) AND COUNT FIELDS ARE 8 BYTES EACH. THERE IS
* ONE S.A. AND COUNT FIELD FOR EACH C.P. SEGMENT EXCEPT THE FIRST,
* WHOSE S.A. IS THE IOB FDAD.
* CALCULATE CORESIZE FOR S.A.'S AND COUNT FIELDS AS FOLLOWS-
*   CALL THE VALUE IN REG RF 'N'. (MAX NMBR OF SEGMENTS MINUS 1)
*   THERE ARE 2N+1 S.A.'S & COUNT FIELDS (NONE REQ'D FOR VAL CHK).
*   BUILD THE CORESIZE VALUE IN REG 1 (=RF)
*
         SLA   RF,1                     MULTIPLY BY 2 = 2N.
         LA    RF,1(RF)                 ADD 1 GIVES 2N+1
* ADD THE IOB LENGTH AND CP SIZE (IN DBL WDS) TO THE NUMBER OF S.A.'S
* AND COUNT FIELDS.
*
         AR    RF,RCPSIZE               (IOB+CP)/8+(2N+1)
*                                       RE IS FREED.
* MULITPLICATION BY 8 EXPRESSES THE IOB/CP SIZE IN BYTES, AND
* MULTIPLIES THE THE NMBR OF S.A.'S AND COUNT FIELDS BY THEIR SIZE.
*
         B     TIMES8
RCPONLY  EQU   *
         MVI   DCBCNTRL+3,EGP2          EOB ID FOR NON-F INPUT.
* FILL IN DCB FIELDS REQ'D FOR READING ONLY.
* DCBOFFSR  (SET DCBOFFSW THE SAME).
* DCBIOBL
         MVI   DCBOFFSR,IOBSIZE+OFFSR   PUT OFFSET IN DCB        S20201
         LA    RF,IOBDBLWD+RCPDBLWD     GET NMBR OF DBL WD FOR IOB+CP.
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    NOTRR2K                  BRANCH IF NO             S20201
         LA    RF,D2(RF)                INCR IOB DW SIZE         S20201
         MVI   DCBOFFSR,IOBSIZE+OFFSR+EIGHT  PUT NEW OFFSET IN   S20201
*                                       IOB                      S20201
NOTRR2K  EQU   *                                                 S20201
TIMES8   EQU   *                                                 S20201
         TM    DEBOPATB,OUTPUT          IF OUT ONLY THEN         S20201
         BO    NOSDIR                   DONT INCR OFFSETS        S20201
         TM    JFCBMASK+D6,SDFLG        IS SCH DIR SPECIFIED     S20201
         BZ    NODIRECT                 IF NOT, DONT INCR FOR 2  S20201
*                                       DOUBLE WORDS
         LA    RF,D2(RF)                NEED TWO MORE CCWS       S20201
         SR    RE,RE                    CLEAR REGISTER           S20201
         IC    RE,DCBOFFSR              GET READ OFFSET          S20201
         SH    RE,CON8                  BACK UP A DW             S20201
         STC   RE,DCBOFFSR              RETURN TO DCB            S20201
         IC    RE,DCBWCPO               FOR INOUT OT OUTIN (INPU S20201
         AH    RE,SDINCR16              T ONLY DOESNT MATTER) PT S20201
         STC   RE,DCBWCPO               TO WRT CP MUST BE INCR   S20201
*                                       OVER THE 2 DWS SET ASIDE
*                                       FOR THE S.D. FEATURE.
*                                       THEY FOLLOW THE RD C.P.
         IC    RE,DCBOFFSW                  INCREMENT THE OFFSET S20201
         AH    RE,SDINCR16              TO THE WRITE CHANNEL PGM S20201
         STC   RE,DCBOFFSW              IF SEARCH DIRECT IS USED S20201
NOSDIR   EQU   *                                                 S20201
NODIRECT EQU   *                                                 S20201
         SR    RE,RE                    REMOVE GARBAGE           S20201
         STC   RF,DCBIOBL               PUT IOB LENGTH IN DCB    S20201
         SLL   RF,THREE                 MULTIPLY BY EIGHT        S20201
         IC    RE,DCBNCP                GET IOB COUNT            S20201
         TM    DCBCIND2,QSAM            QSAM USED                S20201
*
         BZ    MULT                     BRANCH IF YES            S20201
         IC    RE,DCBBUFNO              GET CONT FROM BUFR NO    S20201
MULT     EQU   *                                                 S20201
         LTR   RE,RE                    IOB CNT SPECIFIED        S20201
         BP    SPECIF                   BRANCH IF YES            S20201
         LA    RE,D1                    OTHERWISE FURNISH ONE    S20201
SPECIF   EQU   *                                                 S20201
         LR    RIOB,RE                 SAVE NO IOB'S             A37507
         MR    RE,RE                    MULTIPLY IOB CNT TIMES   S20201
*                                       NO                       S20201
*
* CHECK FOR RCD READY AND IF USED GET DW FOR THETA VALUES
*
         TM    JFCBMASK+D6,NORCDRY      ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    NORRM                    BRANCH IF YES            S20201
         LA    RF,EIGHT(RF)             INCR SIZE FOR RCD READY  S20201
NORRM    EQU   *                                                 S20201
         LR    RC,RF                    SAVE AMT FOR CLEARING    S20201
         DROP  RDEB                                              Y02072
*
*  THE FOLLOWING SAVES THE AMOUNT OF CORE GETMAINED FOR THE IOBS YM4697
*  IN THE FORCE CLOSE AUDIT TRAIL FOR THE FORCE CLOSE EXECUTOR.  YM4697
*
         ST    RF,DXATEXC2              SAVE LENGTH              YM4697
*
* GET MAIN FOR IOBS,  RF=RC=AMOUNT
*
         MODESET  KEYADDR=DXUKEY,WORKREG=12 GET INTO USER KEY    Y02072
         GETMAIN R,LV=(RF),SP=0                                  Y02072
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         ST    RF,DCBIOBA               PUT FIRST IOB ADDR IN    S20201
*                                       DCB                      S20201
         OI    FCAOPEN,FCAOIOB          INDIC IOB'S CAN BE FREED Y02072
         MODESET  KEYADDR=DXUKEY,WORKREG=12 GET INTO USER KEY    Y02072
         USING DEB,RDEB                                          Y02072
         LR    RB,RF                    COPY ADDR USE TO CLR     S20201
*
* CLEAR OF RECEIVED CORE    RB=ADDRESS,  RC=AMOUNT
*
         LR    RJ,RC                    COPY AMOUNT              S20201
         LA    RD,MAX                   CONSTANT OF 256          S20201
         B     CLEAR                    BRANCH                   S20201
SOP1SLO  XC    D0(D1,RB),D0(RB)         CLEARS REMAINING BYTES   S20201
SOP1SHI  XC    D0(MAX,RB),D0(RB)        CLEARS 256 BYTES         S20201
         AR    RB,RD                    ADD 256 TO ADDR          S20201
CLEAR    SR    RC,RD                    SUB 256 FROM AMT         S20201
         BH    SOP1SHI                  IF AMT GT 256 BRANCH     S20201
         AR    RC,RD                    CORRECT AMT              S20201
         BCTR  RC,RE                    REDUCE BY ONE BYTE, RE=0 S20201
         EX    RC,SOP1SLO               CLEAR REMAING BYTES      S20201
*
* SET UP THETA ADDRS, MAY BE USED LATER
*
         AR    RJ,RF                    GET AREA + 1 ADDR        S20201
         LA    RD,EIGHT                 CONSTANT OF EIGHT        S20201
         SR    RJ,RD                    BACKUP ONE DW            S20201
         CH    RIOB,ONE                ONE IOB?                  A37507
         BNE   NTONEIOB                NO - BRANCH               A37507
         USING SAMSIOB,RF              ADDRESSABILITY FOR DSECT  A37507
         OI    IOBFLAG1,UNRELFLG       YES - TURN ON IOB         A37507
*                                       UNRELATED FLG            A37507
         DROP  RF                                                A37507
NTONEIOB EQU   *                                                 A37507
*
* WTG LOGIC GOES HERE
*
STOPSOP6 EQU   *                                                 S20201
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         DROP  RDEB                                              S20201
         ST    RJ,DXCCW11               SAVE SECTOR ADDRESS      Y02072
         L     RCORE,4(RWTGC)           GET WORK AREA ADDRESSABILITY.
         USING FORCORE,RCORE                                     Y02072
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,NEXTEXEC        GET NEXT EXEC ID.      @Z30TSCF
         TM    JFCBMASK+D6,SDFLG        IF SCH DIRECT IS NOT     S20201
         BZ    NODERECT                  SPECIFIED OR IF DCB IS  S20201
         TM    DEBOPATB,OUTPUT           OPENED FOR OUTPUT ONLY, S20201
         BO    NODERECT                  THEN GO XCTL TO MODULE  S20201
*                                       IGG0191H, ELSE TO MOD
*                                        IGG0199K
         MVC   WTGIDTTR,SDEXEC          SEARCH DIRECT EXEC     @Z30TSCF
NODERECT EQU   *                                                 S20201
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURRENT WTG ENTRY.
         LA    RPARC,PLOFF(0,RPARC)     INCREMENT CURRENT DCB ENTRY PTR
         CLC   0(2,RWTGC),AMIDCNST      IS THIS RTN NEEDED AGAIN?
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE?
         BC    7,RELOOP                 NO, CHECK NEXT ENTRY.
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINIT. WTG LIST PTR.
ZCHEK    CLI   0(RWTGC),X'00'           IS THIS ENTRY COMPLETE?
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL.
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY.
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
* END WTG LOGIC. *****
*
ONE      DC    H'1'                     G.P. CONSTANT.
*
*
* WTG CONSTANTS AND EQUATES.
*
WAOFF    EQU   32
PLOFF    EQU   4
WGOFF    EQU   8
OPIDCNST  DC   C'0S'
AMIDCNST DC    C'1S'                    IDTTRL
*
* END WTG CONSTANTS.
*
CON8     DC    H'8'                     CONSTANT OF EIGHT        S20201
SDINCR16 DC    H'16'                    TWO DWS FOR S.D. COUNT   S20201
*                                         FIELD INCREMENT
SDEXEC   DC    C'9K',VL3(IGG0199K)     SEARCH DIRECT EXECUTOR  @Z30TSCF
NEXTEXEC DC    C'1H',VL3(IGG0191H)      NON-SEARCH DIRECT      @Z30TSCF
         SPACE 2
PATCH    DC    0H'0',50X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02707
         EJECT
*
* READ CHANNEL PROGRAM OVERLAY.  CCW FIELDS ARE ACCESSED BY ABSOLUTE
* OFFSETS FROM THE CCW NAME.
*
RCPOVLAY DSECT
*        SEARCH (CCWA)
SRCHCCW  DS    D
*        TIC    (CCWB)
TICCCW   DS    D
*        READ DATA WITH SKIP  (CCWC)
SKIPCCW  DS    D
*        READ COUNT (CCWD)
RDCTCCW  DS    D
*        READ DATA (CCWE)
RDCCW    DS    D
*        READ KEY AND DATA (ALTERNATE CCWE)
RKDCCW   EQU   RDCCW
* END READ CP CCW DEFINITION
* FOLLOWING IS A MAP OF A WRITE CHANNEL PROGRAM (WCP) SEGMENT.
*
WCPMAP   DSECT
*
*        SEARCH  (CCW1 OR 5)
*
SRCHADDR DS    F
SRCHOPCD EQU   SRCHADDR                 OP CODE IS HI ORDER BYTE.
SRCHFLAG DS    XL1
         DS    CL2
SRCHLEN  DS    XL1                      LENGTHS NORMALLY FIT IN 1 BYTE.
*
*        TIC   (CCW2 OR 6)
*
TICADDR  DS    F
TICOPCD  EQU   TICADDR
UNUSED   DS    F                        ONLY REQUIRES BITS 37-39 = 0.
PARASITE EQU   UNUSED                   MAY BE USED TO STORE AN ADDRESS
*                                       BUT THE ABOVE RESTRICTION
*                                       LIMITS THE OP CODES THAT MAY
*                                       BE STORED IN THE HI BYTE.
*
*        WRITE  (CCW3)
*
COUNTADR DS    F                        COUNT FIELD ADDRESS.
WRTOPCD  EQU   COUNTADR
WRTFLAG  DS    XL1                      FLAG FIELD.
         DS    CL2                      SPACER.
COUNTLEN DS    XL1                      COUNT FIELD LENGTH (NORMALLY 8)
*
*        NULL OP CODE  (CCW4)           OP PROPAGATED FROM WRITE CCW.
*
DATAADDR DS    F                        ADDRESS OF BLOCK OF DATA TO BE
*                                       WRITTEN.
NULLOPCD EQU   DATAADDR                 USED AS A FLAG TO SIGNAL LAST
*                                       SEGMENT.
NULLFLAG DS    XL1
         DS    XL1                      SPACER.
DATALEN  DS    H                        2 BYTES HOLDS DATA LENGTH.
*
*
* FOLLOWING IS THE VALIDITY CHECK CHANNEL PROGRAM OVERLAY.
*
VCMAP    DSECT
*        SEEK  (CCW7)
SEEKADDR DS    F
SEEKOPCD EQU   SEEKADDR
SEEKFLAG DS    XL1
         DS    CL2
SEEKLEN  DS    XL1
*
*        SEARCH (CCW8)                  LABELS PREFIXED BY 'VC' (VAL
VCSRCH   EQU   *                        CHECK).
VCSRCHAD DS    F
VCSRCHOP EQU   VCSRCHAD
VCSRCHFL DS    XL1                      FLAGS.
         DS    CL2
VCSRCHLE DS    XL1                      LENGTH.
*
*        TIC   (CCW9)
VCTICAD  DS    F
VCTICOP  EQU   VCTICAD
NOTUSED  DS    F
*
*        READ DATA (CCW10)
VCRDAD   DS    F
VCRDOP   EQU   VCRDAD
VCRDFLAG DS    XL1                      NORMALLY SKIP.
VCRDLEN  DS    FL3
*
* FOLLOWING IS AN OVERLAY OF THE COUNT FIELD.
*
COUNTFLD DSECT
*
CYLINDER DS    H                        CYLINDER ADDRESS (CC).
HEAD     DS    H                        HEAD ADDRESS     (HH).
RECORD   DS    XL1                      RECORD NUMBER    (R).
KEYLENTH DS    XL1                      KEY LENGTH       (KL).
DLDL     DS    H                        DATA LENGTH      (DLDL).
*
* END COUNT FIELD. (CCHHRKDD)
*
*
* DIRECT ACCESS DEVICE TABLE OVERLAY
*
DEVTAB   DSECT
DEVSIZE  DS    F                       MAX SIZ FOR DEVICE.
TRKCAP   DS    H                       TRACK CAPACITY.
OVERI    DS    XL1                     OVERHEAD FOR NOT-LAST RECORD.
OVERL    DS    XL1                     OVERHEAD FOR LAST RECORD.
OVERK    DS    XL1                     OVERHEAD REDUCTION FOR NON-KEY
*                                      RECORDS.
DEVFLAG  DS    XL1
TOLER    DS    H                       TOLERANCE/512 USED FOR VARIABLE
*                                       GAP LENGTH CALCULATIONS.
* END DEVTAB OVERLAY.
*
*
         DCBD  DSORG=PS
*
*
*
*
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
         EJECT
FORCORE  DSECT                                                   Y02072
         IHAFCAUD  ORG=YES                                       Y02072
         EJECT
*
* IOB OVERLAY
* THE FORECORE DSECT IOB OVERLAY IS USED WITH THE FOLOWING ADDITIONS-
*
* BSAM/BPAM/QSAM IOB EXTENSION-
SAMSIOB  EQU   DXIOB-8                  START OF SAM'S IOB.
LINK     EQU   SAMSIOB                  FORWARD CHAIN FIELD (TO NEXT
*                                       IOB).
FLAG     EQU   LINK                     HI BYTE OF LINK USED AS FLAG.
ECB      EQU   DXIOB-4
* END EXTENSION DEFINITIONS
*
IOBSEEK EQU DXDAADDR
CHANPGM  EQU   DXDAADDR+8               START OF CHANNEL PROGRAM.
*                                       LENGTH MAY VARY.
* END IOB DEFINITIONS.
*
DEB      EQU   DXDEB
DEBOPATB EQU   DXDEBSYS
         END
