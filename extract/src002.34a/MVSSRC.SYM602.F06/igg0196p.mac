         TITLE 'IGG0196P (D/A UPDATE)'
IGG0196P CSECT
*MODULE NAME - IGG0196P                                          Y02072
*
*DESCRIPTIVE NAME - BUILD IOBS                                   Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS2 RELEASE 2 DELETIONS                               Y02072
*000090,034000,035300,035500,035700-035740,053060,053080,053100, Y02072
*058600,108400-110400,111000-112000,112110,112400,128800-129090, Y02072
*129100,129110-129170,112100,112200,116800-1174000,118000        Y02072
*14400,34400,35400                                               YM1393
*                                                                YM4640
*C24200,70880,81800                                              YM5362
*D122600-128000                                                  YM5362
*                                                                YM7595
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*
*          RELEASE 21 DELETIONS
*0340120500-121600                                               A37507
*0340                                                            A40538
*0340019460,019520,019900,020000,020100,020700-020900,           A31983
*0340070100-070400,070500,070800,080400-080600,087600-087800     A31983
*0340105400                                                       M0950
*
*STATUS CHANGE LEVEL 003
*
*FUNCTION/OPERATION- THIS ROUTINE WILL SET UP A CODE IN THE DCBCNTRL
*      FIELD FOR IGG01912.  IGG01912 (LOAD EXECUTOR) WILL DETERMINE
*      FROM THIS CODE WHICH ROUTINES WILL BE BROUGHT INTO CORE AT
*      OPEN TIME.
*      IT WILL LINK THE IOB'S AND INITIALIZE THEM.
*      IT WILL CONSTRUCT THE CHANNEL PROGRAMS NEEDED FOR PROPER EXECUT.
*      IT WILL SET UP THE NUMBER OF EXTENTS NEEDED AND PLACE THE
*      ADDRESSES IN THE DCB AND IOB'S.
*
*ENTRY POINTS- ENTERED FROM IGG0191P BY USE OF THE XCTL MACRO.
*
*INPUT- SEE DESCRIPTION OF REGISTERS, DCB(USERS).
*
*OUTPUT & IOB(USER)- SEE DESCRIPTION OF REGISTERS, DCB(USERS).
*
*EXTERNAL ROUTINES- NONE.
*
*EXITS-NORMAL-XCTL TO IGG01912, IGG01915 TO LOAD ROUTINES
*
*EXITS-ERROR- NONE.
*
*MACROS : ACTION - MODESET, XCTL, XCTLTABL                       Y02072
*
*MACROS : MAPPING - IHACCW, DCBD, IECDSECS, IGGBCB, IEZDEB, IHAFCAUD
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-36 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 37-39 WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 40-   TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR N TH DCB   (5 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (3 BYTES)
*                   IDTTR OF LAST ROUTINE LOAD       (5 BYTES)
*                   NOT USED                         (3 BYTES)
*
*      SEE DEVICETB DSECT
*
*ATTRIBUTES- REENTRANT,REUSABLE,RUNS IN USER KEY UNLESS          Y02072
*            OTHERWISE SPECIFIED,SUPER STATE                     Y02072
*
*
***********************************************************************
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RDEB     EQU   9         DEB REGISTER                            YM5362
RUCB     EQU   10        COUNTER IN IOB GENERATION
RBUFADR  EQU   11        ADDR OF NEXT AVAIL BUFFER               YM7595
RB       EQU   12        WORK REG1  **
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RWK3     EQU   15        WORK REGISTER                           YM5362
RBRNCH   EQU   RWK3      USED TO BRANCH TO SUBROUTINES           YM5362
RE       EQU   0         WORK REG5
RWK1     EQU   RE        WORK REGISTER                           YM7595
RF       EQU   1         WORK REG6
RWK2     EQU   RF        WORK REGISTER                           YM5362
*
***********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB    EQU   X'01'
*
*
***********************************************************************
*
* MASKS FOR MACRO'S TO BE USED
*
POINTB   EQU   X'04'
*
***********************************************************************
*
* DCB OFFSET CONSTANTS
*
WCPO     EQU   48
WCWCPL   EQU   6                        WRITE CHAN PGM LEN WITH  A31983
*                                          WRT CHK               A31983
WCTOWCPL EQU   7                        WRITE CHAN PGM LEN WITH  A31983
*                                          WRT CHK + TRK OVFLOW  A31983
THREECCW EQU   24                       LEN OF 3 CCW'S           A31983
WCPL     EQU   3
OFFSR    EQU   112
WCOSRQ   EQU   X'88'                    READ CP OFFSET WITH WRT  A31983
*                                          CHK FOR QSAM          A31983
TOWCOSRQ EQU   X'90'                    READ CP OFFSET WITH WRT  A31983
*                                          CHK + TRK OVFLOW FOR  A31983
*                                          QSAM                  A31983
WCOSRB   EQU   X'80'                    WRITE CP OFFSET WITH WRT A31983
*                                          CHK FOR BSAM          A31983
TOWCOSRB EQU   X'88'                    WRITE CP OFFSET WITH WRT A31983
*                                          CHK + TRK OVFLOW FOR  A31983
*                                          BSAM                  A31983
OFFSW    EQU   64
OFFSRB   EQU   104
WRTCKL   EQU   32             LENGTH OF WRITE CHECK SECTION OF    18445
*                             WRITE CHANNEL PROGRAM               18445
WRTCKCCW EQU   X'1E'          OFFSET TO WRT CHK CCW               M0950
*
***********************************************************************
*
* MASKS USED TO TEST OPTION FIELDS IN DCB
*
DOUBLE   EQU   X'01'
WRTCK    EQU   X'80'
UPDATEB  EQU   X'80'
TRKOVFLB EQU   X'20'                    TRACK OVERFLOW OPTION
*
***********************************************************************
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
SEEK     EQU   X'1B'                    SEEK HEAD OP CODE        YM5362
NOP      EQU   X'03'                    NOP OP CODE              YM5362
SRCHE      EQU   X'31'
RDC        EQU   X'92'
RDD        EQU   X'86'
RDDX     EQU   X'06'
TIC        EQU   X'08'
WRTD       EQU   X'05'
WRTKD    EQU   X'0D'
RDKD     EQU   X'8E'
*
***********************************************************************
*
*   CHANNEL CONTROL WORD FLAGS
*
SLI        EQU   X'20'
CC         EQU   X'40'
SLICC    EQU   X'60'
CCSK     EQU   X'50'
SLICCSK  EQU   X'70'
*
***********************************************************************
*
* MASKS FOR RECORD FORMATS
*
FORMATU    EQU   X'C0'
*
***********************************************************************
*
* OFFSET FOR PARAMETER TESTS
*
ONE      EQU   1
TWO      EQU   2                        CONSTANT OF 2            M0950
NOT      EQU   X'FF'
*
***********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
FIRSTIOB   EQU   X'01'
READONLY EQU   X'20'                    IOB READ ONLY INDICATOR
UNRELFLG EQU   X'02'                   IOB UNRELATED FLAG        A37507
SEEKCYHD EQU   X'18'                    IF BOTH ON IN FILE MASK, YM5362
*                                         INHIBIT ALL SEEKS      YM5362
*
***********************************************************************
*
ZERO     EQU   0                        CONSTANT OF 0
FOUR     EQU   4                        CONSTANT OF 4
* MASKS USED TO LOAD IGG01915 IN SUPPORT OF QSAM LOCATE MODE OF
* OPERATION WITH LOGICAL RECORD INTERFACE FOR VARIABLE LENGTH
* SPANNED RECORD
*
FLGOFFST EQU   4                        OFFSET TO FLAG IN BCB    S19015
RAFLAG   EQU   X'80'                    RECORD AREA PRESENT      S19015
NULL     EQU   0                        ZERO DISPLACEMENT        S19015
IDLEN    EQU   5                        LENGTH OF IDTTR          S19015
*
*
*
*
*
*
*
*
*
*
*
*
         BALR  RBASE,0                  REG 3 IS BASE
         USING SOPB,RBASE
         USING IHADCB,RDCB              REG 2 IS DCB
         USING FORCORE,RCORE            REG 4 IS WORK AREA ADDRESS
         USING DEBBASIC,RDEB                                     YM5362
*
SOPB     EQU   *
         B     BEGIN                    BRANCH AROUND MODULE ID  YM4640
         DC    C'IGG0196P'              MODULE NAME              YM4640
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/22/74'              LAST SHIP DATE         @Z30TSCF
BEGIN    DS    0H                       END OF MODULE ID         YM4640
         MODESET  KEYADDR=DXUKEY,WORKREG=9 GET INTO USER KEY     Y02072
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          YM5362
         L     RCORE,4(RWTGC)           GET WORK AREA ADDRESS
*
         L     RB,DCBIOBA               GET ADDR OF GETMAIN
         LR    RD,RB                    GET ADDR OF GETMAIN AREA
         L     RUCB,ZERO(RB)            GET THE IOB COUNT
         XC    ZERO(FOUR,RB),ZERO(RB)    ZERO OUT FIRST 4 BYTES OF
*                                       GETMAIN AREA (USED TO
*                                       PASS INFO FROM IGG0191P)
         CH    RUCB,ONEIOB             ONE IOB?                  A37507
         BNE   NTONEIOB                NO - BRANCH               A37507
         USING IOBQSAMN,RB             ADDRESSABILITY FOR DSECT  Y02072
         OI    IOBFLAG1,IOBUNREL       YES - SET UNRELATED FLAG  Y02072
         DROP  RB                                                Y02072
NTONEIOB EQU   *                                                 A37507
SOPB30   EQU   *
         LTR   RUCB,RUCB                HAS IOB COUNT BEEN EXHAUSTED
         BC    7,SOPB31                 NO, BRANCH
*
         L     RB,DCBIOBA               GET FIRST IOB GENERATED
         ST    RB,0(RD)                 LINK FIRST IOB TO LAST
         OI    0(RD),READONLY           IOB FOR READ ONLY         22484
         B     SOPBEND
*
***********************************************************************
*
*    REGISTER USEAGE FOR CHANNEL PROGRAM CONSTRUCTION
*       RB - RD/WRT SEQUENCE POINTER
*       RC - FDA POINTER
*       RD - CURRENT IOB POINTER
*       RJ - LINK REG TO INTERNAL SUBROUTINE
*       RF - PARAREG FOR INTERNAL SUBROUTINE
*       RE - INTERNAL POINTER IN READ SEQUENCE
*
***********************************************************************
*
SOPB31   EQU   *
         ST    RB,0(RD)                 LINK NEW IOB TO LAST ONE BUILT
         OI    0(RD),READONLY           IOB FOR READ ONLY         22484
         LR    RD,RB                    UPDATE CURRENT IOB POINTER
         OI    8(RD),CC                 INDICATE COMMAND CHAINING 21282
         LA    RB,4(RB)                 POINT TO ECB SLOT
         OI    0(RB),X'7F'              SET ECB COMPLETE WITHOUT ERROR
         ST    RB,12(RD)                STORE ECB ADDR IN IOB
         L     RWK3,DXUDCBAD            GET USERS DCB ADDR       Y02072
         USING IOBQSAMN,RD                                       Y02072
         ST    RWK3,IOBDCBPT            DCB ADDR TO IOB          Y02072
         DROP  RD                                                Y02072
*
***********************************************************************
*
*     CONSTRUCTION OF CHANNEL PROGRAM FOLLOWS
*
***********************************************************************
*
SOPB40   EQU   *
         LA    RB,48(RD)                UPDATE TO WRITE SEQUENCE
         LA    RC,43(RD)                POINT TO CCHHR FIELD IN IOB
         ST    RC,0(RB)                 STORE ADDR IN SRCH CCW
         MVI   0(RB),SRCHE              STORE CMD BYTE
         MVI   7(RB),X'05'              STORE COUNT OF 5 IN CCW
         OI    4(RB),CC                 SET CMD CHAIN FLAG ON
         ST    RB,8(RB)                 STORE IN TIC CCW
         MVI   8(RB),TIC                STORE TIC CMD BYTE
*
***********************************************************************
*
*     SRCH AND TIC CCWS HAVE BEEN GENERATED AT THIS POINT
*
***********************************************************************
*
*     CONSTRUCTION OF WRITE CHANNEL PROGRAMS FOLLOW
*
***********************************************************************
*
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBWCPO,WCPO             WRITE CHANNEL PROGRAM OFFSET
         MVI   DCBWCPL,WCPL             STORE NORMAL WRT CP LEN.
         MVI   DCBOFFSW,OFFSW           WRITE CCW OFFSET
         MODESET  KEYADDR=DXUKEY,WORKREG=1 GET INTO USER KEY     Y02072
*
         TM    DCBRECFM,FORMATU         U RECORDS USED
         BM    SOPB50                   NO, BRANCH
         OI    20(RB),SLI               SET SILI FLAG ON
*
SOPB50   EQU   *
         OI    20(RB),CC                SET COMMAND CHAIN FLAG ON
*
         MVI   16(RB),WRTD              STORE WRITE DATA CMD OP
*
         TM    DCBCIND2,QSAMB           IS QSAM USED
         BO    SOPB51                   YES, BRANCH
*
         CLI   DCBKEYLE,ONE             IS KEY LENGTH SPECIFIED
         BC    4,SOPB52                 NO, BRANCH
*
         MVI   16(RB),WRTKD             STORE WRT KEY & DATA CMD BYTE
         B     SOPB52
*
SOPB51   EQU   *
         LA    RF,16(RB)                POINT TO ACTUAL WRT CCW
         BAL   RBRNCH,SOPB70            GO FILL IN CCW ATTRIBUTES
*
SOPB52   EQU   *
         TM    DCBOPTCD,WRTCK           IS WRITE VALIDITY CHECK SPEC
         BC    14,SOPB53               NO. BRANCH
         LA    RB,THREECCW(RB)          POSITION AT WRT CHK CP   A31983
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBWCPL,WCWCPL           CHAN PGM LEN, WRT CHK    A31983
         TM    DCBRECFM,TRKOVFLB        TRK OVFLOW SPECIFIED?    A31983
         BNO   NOTRKOV1                 NO, DON'T UPDATE WRT     A31983
*                                          CHAN PGM LEN          A31983
         MVI   DCBWCPL,WCTOWCPL         CHAN PGM LEN, WRT CHK    A31983
*                                          WITH TRK OVFLOW       A31983
         MODESET  KEYADDR=DXUKEY,WORKREG=1 GET INTO USER KEY     Y02072
         LA    RF,41(RD)                POINT TO BBCCHHR IN       18445
*                                       IOBSEEK FIELD             18445
         ST    RF,0(RB)                 STORE SEEK ADDRESS        18445
         BAL   RBRNCH,SOPB80            GO GET PROPER OP CODE    YM5362
         MVI   4(RB),CC                 SET COMMAND CHAIN FLAG ON 18445
         MVI   7(RB),X'06'              STORE COUNT OF 6 IN CCW   18445
         LA    RB,8(RB)                 UPDATE RB TO NEXT CCW     18445
         B     SOPB520                  BR AROUND MODESET        Y02072
NOTRKOV1 EQU   *                                                 A31983
         MODESET  KEYADDR=DXUKEY,WORKREG=1 GET INTO USER KEY     Y02072
SOPB520  TM    DCBRECFM,FORMATU         U RECORDS USED           Y02072
         BC    14,SOPB52A               NO, BRANCH
         OI    20(RB),SLICCSK           SET SILI AND CC FLAGS ON
         B     SOPB52B
*
SOPB52A  EQU   *
         OI    20(RB),CCSK              SET CC FLG ON IN READ AND WRT
SOPB52B  EQU   *
         ST    RC,0(RB)                 SAVE ADDRESS IN SRCH CCW
         MVI   0(RB),SRCHE              STORE SRCHE CMD BYTE
         OI    4(RB),CC                 SET CMD CHAIN FLAG ON
         MVI   7(RB),X'05'              STORE COUNT OF 5 IN CCW
         ST    RB,8(RB)                 SRCH ADDR IN TIC CCW
         MVI   8(RB),TIC                STORE TIC CMD BYTE
         MVI   16(RB),RDD               STORE READ DATA CMD OP
         TM    DCBCIND2,QSAMB           QSAM SPECIFIED
         BO    SOPB55                   YES, BRANCH
*
         CLI   DCBKEYLE,ONE             IS KEY LENGTH SPECIFIED
         BC    4,SOPB53                 NO, BRANCH
*
         MVI   16(RB),RDKD              STORE RD KEY & DATA CMD BYTE
*
SOPB53   EQU   *
         TM    DCBCIND2,QSAMB           QSAM USED
         BC    1,SOPB55                 YES, BRANCH
         NI    20(RB),NOT-CC            CLEAR COMMAND CHAIN FOR BSAM
*
         LA    RB,16(RB)                POINT TO BSAM OFFSET
         B     SOPB56
*
SOPB55   EQU   *
         LA    RB,24(RB)                POINT TO READ SEQ.
*
***********************************************************************
*
*    THIS SECTION GENERATES READ CHANNEL PROGRAMS
*
***********************************************************************
*
SOPB56   EQU   *
*
         LA    RC,8(RB)                 POINT TO SRCH CCW OF RD SEQ
         ST    RC,24(RD)                STORE CP STARTAD IN IOB
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,OFFSR           STORE NORMAL RD CCW OFFSET
         TM    DCBOPTCD,WRTCK           IS WRITE VALIDITY CHECK SPEC
         BC    14,SOPB60                NO, BRANCH
         MVI   DCBOFFSR,WCOSRQ          QSAM READ CCW OFFSET     A31983
*                                          WITH WRT CHK          A31983
         TM    DCBRECFM,TRKOVFLB        TRK OVFLOW SPECIFIED?    A31983
         BNO   SOPB60                   NO, DON'T UPDATE READ    A31983
*                                          OFFSET                A31983
         MVI   DCBOFFSR,TOWCOSRQ        QSAM READ CCW OFFSET     A31983
*                                          WITH WRT CK + TRK OV  A31983
SOPB60   EQU   *
         MODESET  KEYADDR=DXUKEY,WORKREG=1 GET INTO USER KEY     Y02072
         LA    RC,49(RB)                POINT TO BBCCHH FIELD
         TM    DCBCIND2,QSAMB           QSAM SPECIFIED
         BZ    SOPB601                  NO. BRANCH
         ST    RC,0(RB)                 STORE ADDR IN SEEK CCW
         BAL   RBRNCH,SOPB80            GO GET PROPER OP CODE    YM5362
         MVI   7(RB),X'06'              STORE COUNT OF 6 IN CCW
         OI    4(RB),CC                 SET COMMAND CHAIN FLAG ON
SOPB601  EQU   *
         LA    RC,2(RC)                 POINT TO CCHH FIELD
         ST    RC,8(RB)                 STORE ADDR IN SRCH CCW
         MVI   8(RB),SRCHE              STORE SEARCH COMMAND BYTE
         MVI   15(RB),X'05'             STORE COUNT OF 5 IN CCW
         OI    12(RB),CC                SET COMMAND CHAIN FLAG ON
         LA    RE,8(RB)                 GET ADDRESS OF SEARCH CCW
         ST    RE,16(RB)                STORE IN TIC CCW
         MVI   16(RB),TIC               STORE TIC COMMAND BYTE
         LA    RE,32(RB)                GET ADDR OF RD COUNT CCW
         ST    RE,24(RB)                STORE IN TIC CCW
         MVI   24(RB),TIC               STORE TIC COMMAND BYTE
         TM    DCBRECFM,TRKOVFLB        TRACK OVERFLOW SPECIFIED
         BZ    SOPB605                  NO, BRANCH
*                                       YES, CHANGE TIC CCW TO RD DATA
         MVI   24(RB),RDDX              READ DATA CMD OP FOR T/O
         MVI   28(RB),SLICCSK           SKIP, SILI, CC FLAGS
         MVI   31(RB),50                NON-ZERO LENGTH
*
SOPB605  EQU   *
*
         TM    DCBCIND2,QSAMB           QSAM USED
         BC    1,SOPB61                 YES, BRANCH
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVI   DCBOFFSR,OFFSRB          STORE BSAM RD CCW OFFSET
         TM    DCBOPTCD,WRTCK           IS WRITE VALIDITY CHECK SPEC
         BC    14,SOPB607               NO, BRANCH
         MVI   DCBOFFSR,WCOSRB          BSAM READ CCW OFFSET     A31983
*                                          WITH WRT CHK          A31983
         TM    DCBRECFM,TRKOVFLB        TRK OVFLOW SPECIFIED     A31983
         BNO   SOPB607                  NO, DON'T UPDATE READ    A31983
*                                          CCW OFFSET            A31983
         MVI   DCBOFFSR,TOWCOSRB        BSAM READ CCW OFFSET     A31983
*                                          WITH WRT CHK + TRK OV A31983
SOPB607  EQU   *
         MODESET  KEYADDR=DXUKEY,WORKREG=1                       Y02072
         CLI   DCBNCP,ONE               MORE THAN 1 IOB USED
         B     SOPB62                   BRANCH TO TEST
*
SOPB61   EQU   *
         CLI   DCBBUFNO,ONE             MORE THAN 1 IOB USED
*
SOPB62   EQU   *
         BNH   SOPB64                   NO, BRANCH
*
*    RC POINTS TO CCHHR OF THIS IOB
*
         SR    RF,RF                    CLEAR REG
         IC    RF,DCBIOBL               GET IOB LENGTH
         SLL   RF,3                     CHANGE TO BYTES
         LA    RC,0(RF,RC)              POINT TO NEXT DA ADDR FIELD
SOPB63   EQU   *
         ST    RC,32(RB)                STORE IN RD COUNT CCW
         MVI   32(RB),RDC               STORE RD CNT CMD BYTE
         OI    36(RB),SLICC             SET SILI AND CC FLAGS ON
         MVI   39(RB),X'05'             STORE COUNT OF 5 IN CCW
         MVI   40(RB),RDD               STORE READ DATA CMD BYTE
         TM    DCBCIND2,QSAMB           QSAM SPECIFIED
         BO    SOPB65                   YES, BRANCH
*
         CLI   DCBKEYLE,ONE             IS KEY LENGTH SPECIFIED
         BC    4,SOPB65A                NO, BRANCH
         MVI   40(RB),RDKD              STORE RD DATA & KEY IN CMD BYTE
         B     SOPB65A
*
SOPB64   EQU   *
         L     RDCB,DXUDCBAD            GET USERS DCB ADDR       Y02072
         LA    RC,DCBFDAD+3             POINT TO CCHHR IN DCB
         L     RDCB,0(RPARC)            GET PROTECTED COPY BACK  Y02072
         B     SOPB63
*
SOPB65   EQU   *
         LA    RF,40(RB)                POINT TO ACTUAL RD DATA CCW
         BAL   RWK1,SOPB72              GO FILL IN QSAM ATTR     YM7595
SOPB65A  EQU   *
         BCTR  RUCB,0                   DECREMENT COUNTER
         MVC   48(8,RB),DCBFDAD         MOVE FDAD TO SPECIAL FDA
         MVC   40(8,RD),DCBFDAD         MOVE FDAD TO IOS'S FDA
*
         TM    DCBRECFM,FORMATU         U RECORDS USED
         BM    SOPB66                   NO, BRANCH
*
         OI    44(RB),SLI               SET SLI FLAG IN CCW
*
SOPB66   EQU   *
         TM    DCBCIND2,QSAMB           QSAM USED
         BC    1,SOPB67                 YES BRANCH
*
         CLI   DCBNCP,ONE               MORE THAN 1 IOB USED
         B     SOPB68                   BRANCH TO TEST
*
SOPB67   EQU   *
         CLI   DCBBUFNO,ONE             MORE THAN 1 IOB USED
*
SOPB68   EQU   *
         BNH   SOPB69                   NO, BRANCH
*
         LTR   RUCB,RUCB                HAVE ALL IOBS BEEN GENERATED
         BC    7,SOPB69                 NO, BRANCH
*
         L     RC,DCBIOBA               GET FIRST IOB GENERATED
         SR    RF,RF                    CLEAR REG
         IC    RF,DCBOFFSR              OBTAIN READ CCW OFFSET
         LA    RC,11(RF,RC)             POINT TO NEXT DA ADDR FIELD
         ST    RC,32(RB)                STORE IN LAST IOBS RD CNT CCW
         MVI   32(RB),RDC               STORE CMD BYTE
*
SOPB69   EQU   *
         LA    RB,56(RB)                POINT TO NEXT POSSIBLE IOB LOC.
         B     SOPB30                   RETURN FOR NEXT IOB
*
***********************************************************************
*
*  THE FOLLOWING CODE SETS UP THE CCW WITH LENGTH AND BUF ADDR.
*
***********************************************************************
*
*
SOPB70   EQU   *
         TM    DCBOPTCD,WRTCK           WRITE CHECK USED
         BC    14,SOPB71                NO, BRANCH
         MVC   WRTCKCCW(TWO,RF),DCBBLKSI                         M0950
*
SOPB71   EQU   *
         LR    RWK1,RBRNCH              SAVE RETURN ADDR         YM7595
         L     RWK3,DCBBUFCB            BUFCB ADDR               YM7595
         USING BCBLK,RWK3
         L     RBUFADR,BCBBUFPT         ADDR NEXT AVAIL BUFFER   YM7595
         USING BUFFER,RBUFADR
         MVC   BCBBUFAD,BUFNXPTB        UPDATE TO NEXT AVAIL BUF YM7595
SOPB72   EQU   *                                                 YM1393
         USING CCW,RF                                            Y02072
         STCM  RBUFADR,B'0111',CCWADDRB  ADDR OF BUFFER TO CCW   Y02072
         MVC   CCWBYTE,DCBBLKSI         BYTE COUNT TO CCW        YM1393
         DROP  RF,RWK3,RBUFADR                                   Y02072
         LR    RBRNCH,RWK1              RESTORE RETURN ADDR      YM7595
         BR    RBRNCH                   RETURN
         SPACE 3
*
* THE FOLLOWING WILL SET UP THE NEXT CCW AS A SEEK HEAD OR A NOP YM5362
* DEPENDING ON THE DEB FILE MASK FOR PERFORMANCE REASONS. IF THE YM5362
* FILE MASK INDICATES ALLOCATION IN CYLINDERS, SET CCW OP CODE   YM5362
* TO A SEEK HEAD. IF ALLOCATION IS BY TRACKS, SET AS A NOP. THIS YM5362
* WILL PREVENT FILE MASK VIOLATIONS DURING I/O OPERATIONS AND    YM5362
* THUS LESS ERROR PROCESSING BY APPENDAGES, EXCP, AND THE ERP.   YM5362
*
SOPB80   EQU   *                                                 YM5362
         USING DEBDASD,RWK2                                      YM5362
         LA    RWK2,DEBBASND            ADDR OF DA SECT OF DEB   YM5362
         USING CCW,RB                                            YM5362
         MVI   CCWCOMCD,SEEK            ASUME CYL BOUNDRY        YM5462
         TM    DEBDVMOD,SEEKCYHD        ALLOC IN CYLINDERS       YM5362
         BNOR  RBRNCH                   YES, OP CODE OK          YM5362
         MVI   CCWCOMCD,NOP             NO, CHANGE OP CD TO NOP  YM5362
         BR    RBRNCH                   RETURN MAINLINE          YM5362
         DROP  RWK2,RB                                           YM5362
         SPACE 3
SOPBEND  EQU   *
         L     RB,DCBIOBA               GET FIRST IOB
         OI    0(RB),FIRSTIOB           SET INDICATOR ON FOR CLOSE
*
* PRESENCE OF RECORD AREA TEST TO DETERMINE NEXT LOAD EXECUTOR. IF
* YES, GET LOAD EXECUTOR IGG01915.
*
         TM    DCBBUFCB+3,X'01'         HAVE BUFFERS BEEN        A40538
*                                       SUPPLIED                 A40538
         BO    SOPBENDB                 BRANCH IF NO BUFFERS TO  A40538
*                                       LOAD IGG01912
         L     RB,DCBBUFCB              GET BUFCB ADDR           S19015
         LA    RB,NULL(RB)              CLEAR HIGH ORDER BYTE    S19015
         TM    FLGOFFST(RB),RAFLAG      RECORD AREA INDICATOR ON S19015
         BZ    SOPBENDB                 BRANCH IF NOT TO LOAD    S19015
*                                            IGG01912
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,IGG01915        NEXT MOD               @Z30TSCF
         B     SOPBENDC                 BRANCH TO PROCESS NEXT   Y02072
*                                            ENTRY
SOPBENDB EQU   *                                                 S19015
*
         MODESET  EXTKEY=DATAMGT        BACK TO DATA MANAG KEY   Y02072
         MVC   WTGIDTTR,IGG01912        NEXT MOD               @Z30TSCF
SOPBENDC EQU   *
         OI    FCAOPEN2,FCAOIOBC        IOBS COMPLETED           YM7595
         OI    DCBCIND2,UPDATEB         FLAG DCB AS UPDATE       Y02072
         TM    DCBDSORG,DCBDSGPO       DCB FOR PO                Y02072
         BZ    RELOOP                  NO, BRANCH                Y02072
*                                                                Y02072
         MVI   NTPTINDX+1,5            PROVIDE N/P FOT PO        Y02072
RELOOP   EQU   *
         LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
*
ZCHEK    EQU   *
         CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
**
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
*
*  MODULE ID'S
*
OPIDCNST DC    C'0S'
AMIDCNST DC    C'6P'                    ID OF THIS MODULE
IGG01912 DC    C'12',VL3(IGG01912)      NOT REC AREA           @Z30TSCF
IGG01915 DC    C'15',VL3(IGG01915)      YES, REC AREA INDIC    @Z30TSCF
*
*  OTHER CONSTANTS
*
ONEIOB   DC    H'1'                    FOR IOB UNRELATED TEST    A37507
PATCH    DC    25H'0'                   PATCH AREA               YM4640
END      EQU   *                        END OF MODULE            Y02072
         EJECT
         IGGBCB  TYPE=SAM
         EJECT
           DCBD  DSORG=PS
NTPTINDX EQU   DCBCNTRL                 NOTE/POINT INDEX         Y02072
         EJECT
         IEZDEB
         TITLE 'IGG0196P - FORMAT OF GOTTEN CORE'
*
*
         IECDSECS  (MAIN,(IOB,NO)),IOB,WTG,PREFX,EXPAND=YES    @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
         EJECT
CVT      DSECT                                                 @Z30TSCF
         CVT                                                   @Z30TSCF
         EJECT
FORCORE  DSECT
         IHAFCAUD ORG=YES
         EJECT
         IHACCW  DSECT=YES
           END
