8102     TITLE 'IGG08102 - SETPRT LOAD 3 - UCS BUFFER LOAD AND VERIFY'
IGG08102 CSECT
* /*  START OF SPECIFICATIONS****                             @Z40MSAP
*01*  PROCESSOR = ASSEMXF:
**** END OF SPECIFICATIONS **                                @Z40MSAP*/
***********************************************************************
*
* MODULE-NAME = IGG08102
*
* DESCRIPTIVE-NAME = SETPRT UCS BUFFER LOAD AND VERIFY
*
* COPYRIGHT = NONE
*
* STATUS = LEVEL 001
*
* FUNCTION = LOAD UCS BUFFER
*        WHEN VERIFICATION OF IMAGE IS SPECIFIED, PRINT THE IMAGE
*          FOR VISUAL VERIFICATION
*        UPDATE UCB TO INDICATE THE STATUS OF UCS BUFFER
*        DELETE UCS IMAGE
*        REQUEST OPERATOR VERIFICATION AND ANALYZE REPLY
*
*
* NOTES =
*    DEPENDENCIES = BLANK IS USED--CORRECTABLE BY REASSEMBLY.
*        THE FOLLOWING CHARACTER STRINGS ARE USED IN
*        TESTING OPERATOR REPLIES:
*        'V', 'R', 'C', 'RETRY', 'VERIFY', 'CANCEL'
*        THESE STRINGS ARE CONSIDERED TO BE OPERATING SYSTEM KEYWORDS
*        RATHER THAN LANGUAGE DEPENDENT PHRASES.
*
*        BLANKS ARE OR'ED TO ALL REPLIES TO CONVERT THEM TO UPPER CASE
*
*    RESTRICTIONS = NONE
*
*    REGISTER-CONVENTIONS = ALL REGISTER NAMES BEGIN WITH R
*        SEE EQUATES IMMEDIATELY FOLLOWING PROLOG
*
*    PATCH-LABEL = PATCH, AN AREA ASSEMBLED AS BINARY 0
*
* MODULE-TYPE =
*    PROCESSOR = OS/VS ASSEMBLER
*
*    MODULE-SIZE = 1066 DECIMAL BYTES
*
*    ATTRIBUTES = REENTRANT, ENABLED, PRIVELEGED,
*        EXECUTES IN SETPRT INVOKER KEY
*        CODE AT ENTRY POINT WTOR IS NON-PRIVELEGED
*
* ENTRY POINT = IGG08102
*    PURPOSE = SEE FUNCTION
*
*    LINKAGE = BRANCH FROM IGG08101
*
* INPUT = REGISTER 4(RSPW) = WORK AREA ADDRESS
*         REGISTER 5(RPAR) = PARAMETER LIST ADDR
*         REGISTER 6(RSVR) = SVRB EXTENDED SAVE AREA ADDRESS
*         REGISTER 8(RIMAG) = ADDR OF IMAGE TO BE LOADED
*         REGISTER 9(RIOB) = ADDRESS OF IOB
*
* OUTPUT =
*    REGISTERS = TO INVOKER
*        R0 = UNDEFINED
*        R1 = UNDEFINED
*        R2-R14 = UNCHANGED
*        R15 = RETURN CODE (SEE EXIT-ERROR)
*
*    REGISTERS = TO IGG08103
*        R0-R3 = UNDEFINED
*        R4-R6 = AS FOR INPUT
*        R7-R8 = UNDEFINED
*        R9 = AS FOR INPUT
*        R10-R14 = UNDEFINED
*        R15 = RESERVED FOR BRANCH INTERFACE
*
*    MESSAGES = RETRIEVED FROM IGGMSG01
*        'IEC121D V XXX,YYYY(,FOLD)'
*        'IEC125A ERROR - REPEAT REPLY'
*
*    UCB = IMAGE ID AND OPTIONS
*    PRINTER = UCS BUFFER IS LOADED
*         LISTING OF THE IMAGE WHEN VERIFICATION SPECIFIED
*
* EXIT-NORMAL = WHEN AN FCB IMAGE IS TO BE LOADED, BRANCH TO SETPRT
*               MODULE IGG08103
*             - WHEN NO FCB IMAGE IS TO BE LOADED,
*               EXIT TO THE PROBLEM PROGRAM. RETURN CODE=00
*
* EXIT-ERROR =  WHEN PERMANENT I/O ERROR OCCURED DURING UCS LOAD,
*               SET RETURN CODE=0C
*             - WHEN PERMANENT I/O ERROR OCCURED DURING VERIFICATION,
*               SET RETURN CODE=10
*             - WHEN AN OPERATOR ISSUED CANCEL FOR IEC121,
*               SET RETURN CODE=14
*             - IF AN FCB IMAGE IS TO BE LOADED THE RETURN CODE IS
*               SAVED AND BRANCH IS MADE TO SETPRT MODULE IGG08103,
*               OTHERWISE RETURN TO THE SETPRT INVOKER.
*             - IF DEB IS NOT VALIDLY ASSOCIATED WITH USER'S DCB,
*               EXIT TO SETPRT INVOKER WITH RETURN CODE=18
*
* ENTRY-POINT = WTOR (INTERNAL ENTRY)
*    PURPOSE = ISSUE WTOR SVC IN PROBLEM STATE TO AVOID INTEGRITY
*        EXPOSURE FROM NON-PROTECTED MESSAGE
*
*    LINKAGE = SYNCH FROM WITHIN THIS MODULE
*
*    INPUT =
*        REGISTER 4(RSPW) = WORK AREA ADDRESS
*        REGISTER 14(R14) = RETURN ADDRESS
*
*    OUTPUT =
*      REGISTERS = TO INVOKER
*        R0 = UNDEFINED
*        R1 = UNDEFINED
*        R2-R14 = UNCHANGED
*        R15 = UNDEFINED
*
* EXTERNAL REFERENCES =
*   ROUTINES = DEBCHK  (BRANCH ENTRY)
*              DELETE  (SVC  9)
*              EXCP    (SVC  0)
*              FREEMAIN(SVC 10)
*              IGG08103(SETPRT LOAD 4)
*              IMGLIB  (SVC105)
*              SETLOCK (BRANCH ENTRY)
*              SYNCH   (SVC 12)
*              WAIT    (SVC  1)
*              WTOR    (SVC 35)
*
*   DATA-AREAS = SPP -- SETPRT PARAMETER LIST
*              SPW -- SETPRT WORK AREA
*              SPRBXSV -- RB EXTENDED SAVE AREA
*              MSG -- MESSAGE CSECT
*   CONTROL-BLOCKS =
*              CVT -- COMMUNICATIONS VECTOR TABLE
*              DCB -- DATA CONTROL BLOCK
*              DEB -- DATA EXTENT BLOCK
*              ECB -- EVENT CONTROL BLOCK
*              IOB -- INPUT/OUTPUT BLOCK
*              PSA -- PREFIXED SAVE AREA
*              UCB -- UNIT CONTROL BLOCK
*
*   MACROS = DELETE, EXCP, FREEMAIN, IMGLIB, MODESET, SETLOCK,
*              SYNCH, WAIT, WTOR,
*              CVT, DCBD, IEFUCBOB, IEZDEB, IEZIOB, IGGMSG, IGGSPW,
*              IHAECB, IHAPSA, IHASPP
*
* CHANGE-ACTIVITY = AS FOLLOWS
*
* NOTE = THIS MODULE WAS BROUGHT UP TO STANDARDS FOR VS2-2
*        WHICH CAUSED ALL PREVIOUS RELEASE SEQUENCE NUMBER DELETIONS TO
*        BECOME INVALID.
*
*          RELEASE 20 DELETIONS
*THE FOLLOWING PTMS WERE FIXED IN THIS RELEASE - 5149, 5143
*THE FOLLOWING APAR WAS FIXED IN THIS RELEASE - 34950
*THE FOLLOWING DEVELOPMENT CODE WAS FOR 3211 SUPPORT - S20202
*
*          RELEASE 21 DELETIONS
*THE FOLLOWING PTMS WERE FIXED IN THIS RELEASE - 0092, 1759
*THE FOLLOWING APAR WAS FIXED IN THIS RELEASE - 50699
*
*          VS2 RELEASE 2 DELETIONS
*THE FOLLOWING DEVELOPMENT CODE WAS FOR VS2-2 - Y02072
*                                                                YM3920
*                                                                YM5703
*                                                                YM5919
*
*          VS2 RELEASE 3 CHANGES
*A199700-199800,203500,619078-619098,619283                     ZA02199
*
*          VS2 RELEASE 3.7 CHANGES
*
*C146000-146300                                                @ZA25004
*A459500,618758-618761                                         @ZA25004
*
*          VS2 RELEASE 4 CHANGES
*                                                              @Z40MSMI
*
*
***********************************************************************
         EJECT
***********************************************************************
*
*   REGISTER CONVENTIONS USED THROUGH OUT ALL SETPRT MODULES
*
***********************************************************************
*
R0       EQU   0                        PARAMETER REG
RWRK1    EQU   0                        WORK REGISTER
R1       EQU   1                        PARAMETER REG
RWRK2    EQU   1                        WORK REGISTER
RDCB     EQU   2                        ADDR OF USER'S DCB
RWRK9    EQU   2                        WORK REGISTER
RBASE    EQU   3                        BASE REG.
RSPW     EQU   4                        ADDR OF MESSAGE/WORKAREA
RPAR     EQU   5                        PARM LIST ADDR
RSVR     EQU   6                        SVRB EXTENDED SAVE AREA
RRET     EQU   7                        SUBROUTINE RETURN
RIMAG    EQU   8                        ADDRESS OF IMAGE LOADED
RIOB     EQU   9                        ADDR OF LAST IOB USED
R10      EQU   10                       LIMIT FOR STM            Y02072
RUCB     EQU   10                       UCB ADDR
RDEB     EQU   11                       DEB ADDR
RWRK10   EQU   11                       WORK REGISTER
RWRK5    EQU   12                       WORK REG.
RWRK6    EQU   13                       WORK REG.
R14      EQU   14                       LINK REG.
RWRK7    EQU   14                       WORK REGISTER
R15      EQU   15                       LINK RETURN CODE REG.
RWRK8    EQU   15                       WORK REGISTER
*
***********************************************************************
*
*   RETURN CODES
*
RCNORM   EQU   X'00'                    NORMAL RETURN
RCLOADIO EQU   X'0C'                    I/O ERROR DURING LOAD
RCVERIO  EQU   X'10'                    I/0 ERROR DURING VERIF
RCOPVER  EQU   X'14'                    OPER CANCEL IN VERIF
RCNOPEN  EQU   X'18'                    DCB NOT OPEN             Y02072
*
***********************************************************************
*              MESSAGE NUMBERS IN IGGMSG01
*        ALL MESSAGE NUMBERS HAVE BEEN DOUBLED IN THESE EQUATES
*        TO PROVIDE OFFSETS INTO THE MESSAGE CSECT.
*        THIS IS DEPENDENT ON L'MSGINDOF BEING 2.
*
MSG121   EQU   16*2                     IEC121D, NO FOLD         Y02072
MSG121F  EQU   12*2                     IEC121D, FOLD            Y02072
MSG125   EQU   8*2                      IEC125I                  Y02072
HEADING  EQU   13*2                     UCS HEADING, NO FOLD     Y02072
HEADINGF EQU   18*2                     UCS HEADING, FOLD        Y02072
*
***********************************************************************
*              OTHER EQUATES
*
UCB43211 EQU   X'09'                    MASK FOR 3211 PRINTER     M5149
BLANK    EQU   C' '                     A BLANK FOR AN MVI OPERAND
UCSLNGTH EQU   X'F0'                    UCS IMAGE LENGTH
         EJECT
         USING SPW,RSPW
         USING SPPARM,RPAR
         USING IOBQSAMN,RIOB
         USING IMAGE,RIMAG
         USING SPRBXSV,RSVR
*
***********************************************************************
*
*   INITIALIZE REGISTERS
*
***********************************************************************
*
         BALR  RBASE,0                  ESTABLISH BASE
START    EQU   *
         USING START,RBASE
         SPACE
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG08102'              MODULE NAME              Y02072
         DC    C'@ZA25004'              LAST SHIP CODE         @ZA25004
         DC    C'&SYSDATE'              LAST DATE MODIFIED     @ZA25004
BEGIN    DS    0H                                                Y02072
         SPACE
         L     RDCB,SPPDCBA             LOAD DCB ADDR
         USING IHADCB,RDCB
         L     RDEB,DCBDEBAD            LOAD DEB ADDR
         USING DEBDASD-(DEBBASND-DEBBASIC),RDEB
         L     RUCB,DEBUCBAD            LOAD UCB ADDR
         USING UCBOB,RUCB
         USING DEBBASIC,RDEB
*
***********************************************************************
*
*   SET CCW FOR EXCP
*
***********************************************************************
*
         MVI   IOBFLAG1,IOBCMDCH+IOBUNREL  SET IOBFLAG=C.C/UNRL
*
***********************************************************************
*
*   EXCP TO LOAD IMAGE INTO UCS BUFFER
*
***********************************************************************
*
*   CONSTRUCT CCW'S TO LOAD UCS IMAGE
*
         XC    SPWCCW1(L'SPWCCW1+L'SPWCCW2),SPWCCW1   RESET CCWS
         SR    RWRK8,RWRK8              RESET REGISTER           S20202
         IC    RWRK8,IMANOLN            INSERT NO. OF            S20202
*                                       VERIFICATION LIN         S20202
         LA    RWRK5,IMALEN1            LOAD IMAGE LOAD ADDR + 2 S20202
*                                       = X                      S20202
         AR    RWRK5,RWRK8              DISPLACE BY NO. OF LINES S20202
         CLI   UCBTBYT4,UCB43211        CK FOR 3211 DCB           M5149
         BNE   BLDCCW2                  NO BUILD 1403 UCS LOAD   S20202
*                                       CCW'S                    S20202
*
*   YES BUILDS CCW TO LOAD UCS 3211 - LOAD CCW FOLLOWED BY FOLD CCW
*
         ST    RWRK5,SPWCCW1            STORE ADDR OF UCS IN CCW S20202
         MVI   SPWOPCD1,SPWLDUCS        SET COMMAND CODE=LOAD    S20202
*                                       UCS.                     S20202
         LA    RWRK8,IMA3211L           GET LENGTH OF UCS IMAGE  S20202
         ST    RWRK8,SPWCCWF1           STORE LENGTH OF UCS IN   S20202
*                                       CCW                      S20202
         TM    SPWPARM1,SPWFOLD         TEST IF FOLD MODE        Y02072
*                                       SPECIFIED                S20202
         BNO   EXCPLOAD                 NO GO TO ISSUE EXCP      S20202
*                                       YES CHAIN AND BUILD FOLD CCW
         MVI   SPWCCWF1,SPWCC           SET CC ON IN LOAD CCW    S20202
         MVI   SPWOPCD2,SPWFLDCD        SET COMMAND CODE=FOLD    S20202
         MVI   SPWCCWF2,SPWSILI         SET SILI BIT ON          S20202
         MVI   SPWBYTE2+1,1             SET COUNT EQ 1           S20202
         B     EXCPLOAD                 GO ISSUE EXCP TO         S20202
*                                       LOAD&FOLD UCS            S20202
*
*   BUILD CCW TO LOAD UCS 1403 - GATE LOAD CCW FOLLOWED BY A
*   LOAD UCS OR LOAD AND FOLD CCW.
*
BLDCCW2  EQU   *                                                 S20202
*
         MVI   SPWOPCD1,SPWCNTRL        SET CONTROL CCW
         MVI   SPWCCWF1,SPWSILI+SPWCC   SET FLAGS
         MVI   SPWBYTE1+1,1             SET COUNT = 1
*
         MVI   SPWBYTE2+1,IMA1403L      SET COUNT TO IMAGE LENGTH
*
         ST    RWRK5,SPWCCW2            STORE DATA ADDR IN CCW
*
         MVI   SPWOPCD2,SPWLDUCS        COMMAND CODE = LOAD NO FOLD
         TM    SPWPARM1,SPWFOLD         IF FOLD IS NOT SPECIFIED Y02072
         BNO   EXCPLOAD                 THEN GO TO EXCP
*
         MVI   SPWOPCD2,SPWLDFLD        IF YES,COMMAND CODE = LOAD FOLD
*
EXCPLOAD EQU   *
*
         L     RWRK2,UCBXTADR           LOAD UCB EXTENSION ADDR  M0092
         USING UCBUCS,RWRK2
         IC    RWRK1,UCBUCSOP           PASS OP UNCHANGED        Y02072
         DROP  RWRK2
         BAL   RRET,SETUCB              STORE UCSID AND UCSOP    Y02072
         OI    IOBFLAG1,IOBSPSVC        IND NO SAM APPENDAGE    ZA02199
*                                       PROCESSING REQUIRED     ZA02199
         EXCP  IOBSTDRD                 EXCP
*
         L     R1,IOBECBPT              LOAD ECB ADDR
         WAIT  ECB=(1)                  WAIT ON EXCP
         NI    IOBFLAG1,X'FF'-IOBSPSVC  RESET IOB FLAG          ZA02199
*
         L     RWRK2,IOBECBPT           LOAD ECB ADDR
         USING ECB,RWRK2
         CLI   ECBCC,ECBNORM            TEST IF I/O COMPLETE
         DROP  RWRK2
         BE    UCSVRFY                  IF YES,GOTO TEST IF VERIFY SPEC
*
***********************************************************************
*
*   WHEN I/O ERROR WAS DETECTED DURING LOAD UCS
*   UPDATE UCB WITH X'00',DELETE IMAGE LOADED AND GIVE CONTROL BACK
*   TO USER'S PROGRAM WITH RETURN CODE = X'0C' IN REG.15
*   RUN THE C.E. DIAGNOSTICS FOR THE UCS FEATURE
*
***********************************************************************
*
         LA    RWRK5,RCLOADIO           LOAD RETURN CODE
*
NULLUCB  EQU   *
*
*   SET UCB TO INDICATE THE IMAGE IN THE BUFFER IS NOT USABLE
*
         SR    RWRK1,RWRK1              UCSOP = 0                Y02072
         SR    RWRK6,RWRK6              UCSID = 0                Y02072
         BAL   RRET,SETUCB              PUT VALUES IN UCB        Y02072
         B     IMAGDEL                  GO DELETE IMAGE
         EJECT
UCSVRFY  EQU   *
*
***********************************************************************
*
*    TEST IF VERIFICATION IS REQUIRED BY EITHER THE USER OR THE  A34950
*    OPERATOR.                                                   A34950
*            - YES: VERIFY IMAGE                                 A34950
*            - NO : UPDATE UCB & EXIT                            A34950
*
***********************************************************************
*
         TM    SPWPARM1,SPWVERIF       IF VERIFICATION REQUIRD   Y02072
         BO    VRFY2                   YES, VERIFY (USER OPTION) A34950
         TM    SPWFLG1,SPWRPVER        IF OPERATOR SPEC VERIFY   Y02072
         BNO   SETNORM                 IF NOT,GOTO EXIT ROUTINE
         SPACE 3
VRFY2    EQU   *
*
***********************************************************************
*
*   INITIALIZE REGISTERS FOR VERIFICATION
*        RWRK5 - NUMBER OF LINES REMAINING TO PRINT
*        RWRK7 - POINTER TO CURRENT LINE
*        RWRK9 - CURRENT ENTRY IN TABLE OF LINE LENGTHS
*        RWRK10- NUMBER OF CHARACTERS IN CURRENT LINE
*
***********************************************************************
         DROP  RDEB,RDCB
*
         SR    RWRK5,RWRK5              RESET REGISTER
         IC    RWRK5,IMANOLN            INSERT NO. OF LINES
*
         LTR   RWRK5,RWRK5              TEST IF NO VERIFICATION
         BZ    SETNORM                  IF NOT,GOTO EXIT ROUTINE
*
         SR    RWRK10,RWRK10            RESET RDEB REG.
         LA    RWRK9,IMALEN1            OBTAIN 1ST NO. OF CHAR/LINE
         IC    RWRK10,0(RWRK9)          INSERT NO. OF CHAR/LINE
         LR    RWRK7,RWRK9              OBTAIN UCS IMAGE POSITION
         AR    RWRK7,RWRK5              ADD NO. OF LINES TO POSITION
*
*
***********************************************************************
*
*   EXCP ON PRINTER TO PRINT VERIFICATION LINES
*
***********************************************************************
*
*
*   CONSTRUCT CCW TO SKIP TO NEW PAGE AND PRINT HEADING
*
         XC    SPWCCW1(L'SPWCCW1+L'SPWCCW2),SPWCCW1 RESET CCWS
         MVI   SPWBYTE1+1,1             DATA LENGTH=X'01'
         MVI   SPWCCWF1,SPWSILI+SPWCC   SET C.C.AND SILI
         MVI   SPWOPCD1,SPWSKIP         SET COMMAND CODE = SKIP TO CH1
*
         MVI   SPWCCWF2,SPWSILI         SET SILI FLAG
*
         LA    RWRK1,SPWMSGTX           PRINT AREA ADDR          Y02072
         ST    RWRK1,SPWCCW2            STORE DATA ADDR
         MVI   SPWOPCD2,SPWWRITE        SET COMMAND CODE = WRITE
*
*   MOVE UCS HEADING,UCS IMAGE ID AND LOAD MODE
*
         LA    RWRK2,HEADING            ASSUME NO FOLD           Y02072
         TM    SPWPARM1,SPWFOLD         TEST IF LOAD MODE = FOLD Y02072
         BNO   GETHEAD                  IF NOT,GOTO GET HEADING  Y02072
         LA    RWRK2,HEADINGF           IF SO, INDICATE FOLD     Y02072
GETHEAD  BAL   RRET,GETMSG              GET THE MESSAGE          Y02072
         USING MSGENTRY,RWRK8                                    Y02072
*
*     FILL IN CCW LENGTH
*
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGLNG             GET MESSAGE LENGTH       Y02072
         LA    RWRK2,1(RWRK2)           CHANGE LEN-1 TO LEN      Y02072
         STH   RWRK2,SPWBYTE2           SET LENGTH IN CCW        Y02072
*
*    FILL IN IMAGE ID
*
         IC    RWRK2,MSGOFF1            PICK UP OFFSET TO ID     Y02072
         LA    RWRK2,SPWMSGTX(RWRK2)    INDEX INTO MESSAGE       Y02072
         ST    RWRK6,0(RWRK2)           STORE IMAGE ID           Y02072
         DROP  RWRK8                                             Y02072
         BAL   RRET,WRITEGO             GO ISSUE EXCP            Y02072
*
VRFYEXCP EQU   *
*
***********************************************************************
*
*   EXCP FOR VERIFICATION LINES
*
***********************************************************************
*
         ST    RWRK7,SPWCCW1            STORE DATA ADDR IN CCW
         ST    RWRK10,SPWCCWF1          STORE DATA LENGTH IN CCW
         MVI   SPWCCWF1,SPWSILI         SET SILI FLAG
         MVI   SPWOPCD1,SPWWRITE        SET COMMAND CODE = WRITE
         BAL   RRET,WRITEGO             GO EXCP,WAIT AND TST     S20202
*                                       COMP CODE                S20202
*
*   REPEAT EXCP WHEN NO I/O ERROR
*
         AR    RWRK7,RWRK10             MODIFY IMAGE POSITION
         LA    RWRK9,1(RWRK9)           INCREMENT REG. BY '1'
         IC    RWRK10,0(RWRK9)          INSERT NO. OF CHAR/LINE
*
         BCT   RWRK5,VRFYEXCP           REPEAT EXCP
*
***********************************************************************
*
*   SKIP TO NEW PAGE
*
***********************************************************************
*
         MVI   SPWBYTE1+1,1             MOVE DATA LENGTH=1
         MVI   SPWOPCD1,SPWSKIP       SET COMMAND CODE=SKIP
         BAL   RRET,WRITEGO             GO EXCP,WAIT AND TST     S20202
*                                       COMP CODE                S20202
*
***********************************************************************
*
*   WTOR 'IEC121D V XXX,YYYY,FOLD' TO REQUEST OPERATOR'S REPLY
*
***********************************************************************
*
         LA    RWRK2,MSG121             ASSUME NO FOLD           Y02072
         TM    SPWPARM1,SPWFOLD         IF LOAD MODE NOT = FOLD  Y02072
         BNO   GET121                   THEN GO GET NOFOLD MSG   Y02072
         LA    RWRK2,MSG121F            ELSE SET FOR FOLD MSG    Y02072
*
GET121   BAL   RRET,GETMSG              GET THE MESSAGE          Y02072
         ST    RWRK6,SPWREPID           STORE UCS IMAGE ID
         BAL   RRET,FILLFLDS            FILL IN UNIT & IMAGE ID  Y02072
MESSAGO  EQU   *                                                   DM0Q
         MVC   SPWREPLY,BLANKS          CLEAR REPLY AREA TO BLANKS
         MVI   SPWRPECB,0               RESET REPLY ECB
*
         TM    SPRKEY,SPRUSKEY          IF CALLED AS SYS FUNCT   Y02072
         BZ    MESSAGO2                 DO NOT SYNCH TO WTOR     Y02072
         SYNCH WTOR                     ISSUE WTOR IN PROB STATE Y02072
         B     WAIT                     THEN WAIT FOR COMPLETION Y02072
MESSAGO2 EQU   *                        SYS WTOR                 Y02072
         BAL   R14,WTOR                 ISSUE WTOR IN SUP STATE  Y02072
*
WAIT     EQU   *                        WAIT FOR OPERATOR REPLY  Y02072
         WAIT  ECB=SPWRPECB,LONG=YES                             Y02072
         XC    SPWMSGID(4),SPWMSGID     CLEAR MSG ID FOR DOM   @ZA25004
*
***********************************************************************
*
*   REPLY ANALYSIS
*
***********************************************************************
*
         OC    SPWREPLY,LOWER           OR TO ALLOW LOWER CASE REPLY
         CLC   SPWREPLY(L'RETRYCN),RETRYCN  TEST IF REPLY='RETRY'
         BE    VRFY2                    IF YES GO RE-VERIFY      S20202
*
         CLC   SPWREPLY(L'CANCELCN),CANCELCN  TEST IF REPLY='CANCEL'
         BNE   TESTOK                   IF NOT,GOTO CONTINUE TEST
*
CANCELGO EQU   *
*
***********************************************************************
*
*   AN OPERATOR CANCELLED THE JOB STEP BECAUSE SPECIFIED CHAIN IS NOT
*   AVAILABLE. RETURN CODE = X'14' IN REG.15
*   RERUN THE JOB WITH CORRECT CHAIN/TRAIN
*
***********************************************************************
*
         LA    RWRK5,RCOPVER            LOAD RETURN CODE
         B     NULLUCB                  GOTO UPDATE UCB AND EXIT RTN
*
TESTOK   EQU   *
*
         CLC   SPWREPLY(L'OKCN),OKCN    TEST IF REPLY = 'VERIFIED'
         BE    SETNORM                  IF YES,GOTO EXIT ROUTINE
         CLC   SPWREPLY(L'VBLANK),VBLANK TEST IF REPLY = 'V'
         BE    SETNORM                  IF YES,GOTO EXIT ROUTINE
*
         CLC   SPWREPLY(L'RBLANK),RBLANK  TEST IF REPLY = 'R'
         BE    VRFY2                    IF YES GO RE-VERIFY      S20202
*
         CLC   SPWREPLY(L'CBLANK),CBLANK TEST IF REPLY = 'C'
         BE    CANCELGO                 IF YES,GOTO CANCEL ROUTINE
*
*
***********************************************************************
*
*   REPLY ERROR 'IEC125I ERROR - REPEAT REPLY'
*
***********************************************************************
*
         LA    RWRK2,MSG125             REQUEST ERROR MSG        Y02072
         BAL   RRET,GETMSG              GO GET THE MESSAGE       Y02072
         B     MESSAGO                  GO BACK TO WTORX21 ROUTINE DM0Q
         EJECT
SETNORM  EQU   *
*
***********************************************************************
*
*   SET RETURN CODE = X'00' (SUCCESSFUL)
*   AND UPDATE UCB WITH NEW IMAGE IN THE UCS BUFFER
*
***********************************************************************
*
         LA    RWRK5,RCNORM             LOAD RETURN CODE
         IC    RWRK1,SPWPARM1           GET UCS OPTION BITS      Y02072
         LA    RWRK2,X'FF'-(SPWOVLAP+SPWVERIF)                   Y02072
         NR    RWRK1,RWRK2              RESET TWO FLAGS          Y02072
         IC    RWRK2,IMAFLAG            GET DEFAULTS             Y02072
         OR    RWRK1,RWRK2              OR THEM IN               Y02072
         BAL   RRET,SETUCB              PUT IN UCSOP AND UCSID   Y02072
*
*
IMAGDEL  EQU   *
*
***********************************************************************
*
*   DELETE IMAGE LOADED, RESTORE REGISTERS, AND TEST FOR FCB.
*
***********************************************************************
*
         DELETE EPLOC=SPWUCSIM          DELETE THE IMAGE LOADED
*
         SR    RWRK6,RWRK6              CLEAR IMAGE ID           Y02072
         ST    RWRK6,SPWUCS2H                                    Y02072
*
*   RESET REG'S WITH DCB AND DEB ADDRESSES
*
         CH    RWRK5,ERRCODE            IF RET CODE = X'18'      YM3920
*                                         CANNOT GO TO NEXT LOAD YM3920
         BE    FREEMAIN                 YES, DEBCHK MUST HAVE    YM3920
*                                         FAILED                 YM3920
         L     RDCB,SPPDCBA             GET DCB ADDR             S20202
         USING IHADCB,RDCB
         L     RDEB,DCBDEBAD            GET DEB ADDR             S20202
         USING DEBBASIC,RDEB
         CLI   UCBTBYT4,UCB43211        CK FOR 3211 DCB           M5149
         BNE   FREEMAIN                 NO GO FREE               S20202
*                                       MESSAGE/WORKAREA         S20202
*
**********************************************************************
*
*   FCB LOAD REQUIRED-BRANCH TO SETPRT MODULE IGG08103
*
**********************************************************************
*
         L     R15,ID3                 ADDR. OF MOD. IGG08103  @Z40MSMI
         BR    R15                     GO TO NEXT MODULE       @Z40MSMI
*
FREEMAIN EQU   *
*
***********************************************************************
*
*   EXIT TO ENTRY POINT. (1) CLOSE IMAGELIB
*                        (2) DELETE MESSAGE CSECT
*                        (3) FREEMAIN WORK AREA
*                        (4) FREEMAIN BLDL PARAMETER LIST        YM5703
*                        (5) RESTORE IOB
*                        (6) EXIT WITH RETURN CODE IN REG.15
*
***********************************************************************
*
         MODESET EXTKEY=ZERO            SWITCH TO SVRB KEY       Y02072
*
         L     RWRK1,SPRIDCBA           PICK UP IMAGELIB DCB     Y02072
         ST    RWRK6,SPRIDCBA           INDIC IMAGELIB CLOSED    YM5703
*
         IMGLIB CLOSE,(RWRK1)           GO DELETE IMAGELIB DCB   Y02072
*
         ST    RWRK6,SPRMSG                                      Y02072
*
         DELETE EP=IGGMSG01             DELETE MSG CSECT         Y02072
*
         ST    RWRK6,SPRIOBSV           INDICATE IOB RESTORED    Y02072
*
         MODESET KEYADDR=SPRKEY,WORKREG=1  RESUME NORMAL KEY     Y02072
         SPACE
         MVC   IOBFLAG1(4),SPWFLGSV     RESTORE FLAGS            Y02072
         MVC   IOBSTART,SPWSTRSV        RESTORE IOB START        Y02072
*
*  ISSUE FREEMAINS FOR SETPRT WORKAREA AND BLDL PARAMETER LIST.  YM5703
*
         FREEMAIN R,LV=SPWLNGTH,A=(RSPW),SP=SPWPOOL              Y02072
*
         SPACE
         MODESET  EXTKEY=DATAMGT        KEY OF BLDL PARA LIST    YM5703
         SPACE
         L     RWRK2,SPRBLDLA           ADDR OF BLDL LIST        YM5703
         USING SPW5,RWRK2                                      @Z40MSAP
         ST    RWRK6,SPWWKADR           INDIC WORKAREA FREED     YM5703
*
         FREEMAIN  R,LV=SPW5LNTH,A=(RWRK2),SP=SPW5POOL         @Z40MSAP
         SPACE
         MODESET  EXTKEY=SUPR           KEY OF SVRB              YM5703
         SPACE
         DROP  RWRK2                                             YM5703
         ST    RWRK6,SPRBLDLA           INDIC BLDL LIST FREED    YM5703
         LR    R15,RWRK5                LOAD RETURN CODE
         L     R14,SPREXIT              GET EXIT PROLOG ADDR     Y02072
         BR    R14                      AND RETURN TO IT         Y02072
         EJECT
         DROP  RDEB,RUCB                                         Y02072
SETUCB   EQU   *                                                 Y02072
***********************************************************************
*        THIS ROUTINE UPDATES THE UCB
*        TO PERFORM THIS FUNCTION IT MUST VALIDATE THAT:
*        1. A PROTECTED CHAIN LEADS TO THE UCB
*        2. THE UCB IS ALLOCATED TO THE JOB REQUESTING SETPRT
*        BOTH OF THESE ARE SATISFIED BY DEBCHK, SO LONG AS THERE
*        IS NO TIME OF CHECK TO TIME OF USE EXPOSURE.
*        THAT EXPOSURE IS COVERED BY RUNNING WITH THE LOCAL LOCK.
*        INPUT: RWRK6 CONTAINS THE UCS ID TO PLACE IN THE UCB
*               RWRK1 CONTAINS (LOW BYTE) THE UCS OPTIONS TO SET
*        ADDRESSIBILITY REQUIRED:
*               SVRB EXTENDED SAVE AREA
*        OUTPUT:UCBUCSOP AND UCBUCSID ARE UPDATED (NORMAL)
*               THE SAVE AREA SPRSAVE IN SVRB IS USED
*               IF DEB NOT VALID, DOES NOT RETURN TO SUBROUTINE CALLER,
*               INSTEAD SETS RETURN CODE AND EXITS
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS EXCEPT R15 AND R1 (= RWRK2) ARE TRANSPARENT
***********************************************************************
         MODESET EXTKEY=ZERO            CHANGE TO KEY FOR BR ENT Y02072
         STM   R10,R14,SPRSAVE          SAVE VOLATILE REGS       Y02072
LOCK     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02072*
               RELATED=(DEB/UCB,UNLOCK) GET THE LOCAL LOCK       Y02072
         L     R10,CVTPTR               FIND CVT                 Y02072
         USING CVT,R10                                           Y02072
         L     R15,CVTEXT2              FIND CVT EXTENSION       Y02072
         USING CVTXTNT2,R15                                      Y02072
         L     R15,CVTDEBVR             GET PTR TO DEBCHK        Y02072
         DROP  R15                                               Y02072
         USING PSA,0                                             Y02072
         L     R10,PSATOLD              GET CURRENT TCB ADDR     Y02072
         L     R14,SPPDCBA              GET DCB ADDRESS          YM5919
         USING IHADCB,R14               TEMP USING               YM5919
         L     R1,DCBDEBAD              GET DEB ADDRESS          YM5703
         DROP  R14                                               YM5919
         LA    R1,0(R1)                 CLEAR HI-BYTE            YM5703
         BALR  R14,R15                  CALL DEBCHK              Y02072
*
*  DEBCHK RETURNS ON REGISTER 14 PLUS THE CONTENTS OF REG 15     YM5703
*    REG 15 : 0 - DEB OK                                         YM5703
*             4 - DEB INVALID                                    YM5703
*  REGARDLESS OF DEBCHK RETURN, THE LOCAL LOCK MUST BE RELEASED  YM5703
*  AS SVC'S CANNOT BE ISSUED WHILE HOLDING THE LOCK.             YM5703
*
         B     DEBOK                    DEB VALID--PTR IN R1     YM5703
         B     UNLOCK                   INVALID--REL LOCK        YM5703
DEBOK    EQU   *                                                 Y02072
         USING DEBDASD-(DEBBASND-DEBBASIC),R1                    Y02072
         L     RWRK2,DEBUCBAD           FIND UCB                 Y02072
         DROP  R1                                                Y02072
         USING SRT,RWRK2                                         Y02072
         L     RWRK2,UCBXTADR           FIND UCS EXTENSION       Y02072
         USING UCBUCS,RWRK2                                      Y02072
         LM    R10,R14,SPRSAVE          RESTORE VOLATILE REGS    Y02072
         ST    RWRK6,UCBUCSID           UPDATE ID IN UCB         Y02072
         STC   RWRK1,UCBUCSOP           UPDATE OPTIONS IN UCB    Y02072
UNLOCK   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(DEB/UCB,LOCK)       Y02072
         LM    R10,R14,SPRSAVE          RESTORE VOLATILE REGS    Y02072
         SPACE
         MODESET KEYADDR=SPRKEY,WORKREG=1  RESUME NORMAL KEY     Y02072
         SPACE
         LTR   R15,R15                  WAS DEB VALID            YM5703
         BZR   RRET                     YES, CONTINUE            YM5703
*
NOTOPEN  DS    0H                                                YM5703
         LA    RWRK5,RCNOPEN            DCB NOT VALIDLY OPEN     YM5703
         B     IMAGDEL                  GO DELETE IMAGE          Y02072
         SPACE 3
GETMSG   EQU   *                                                 Y02072
***********************************************************************
*        THIS SUBROUTINE FINDS A MESSAGE IN THE MESSAGE CSECT
*        AND MOVES IT INTO THE SETPRT WORK AREA
*        INPUT: RWRK2 CONTAINS AN INDEX OFFSET (MSG NUMBER * 2)
*               SPRMSG CONTAINS THE ADDRESS OF THE MESSAGE CSECT
*        ADDRESSIBILITY REQUIRED:
*               SVRB EXTENDED SAVE AREA
*               SETPRT WORK AREA
*        OUTPUT:RWRK2 POINTS TO MESSAGE TEXT IN MSG CSECT
*               RWRK8 POINTS TO THE MSG ENTRY IN MSG CSECT
*               SPWMSGTX CONTAINS A COPY OF THE MESSAGE TEXT
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS EXCEPT RWRK2 AND RWRK8 ARE TRANSPARENT
***********************************************************************
         L     RWRK8,SPRMSG             PICK UP MSG CSECT ADDR   Y02072
         USING MSGINDEX,RWRK8                                    Y02072
         AH    RWRK8,MSGINDOF(RWRK2)    ADD ENTRY OFFSET         Y02072
         USING MSGENTRY,RWRK8                                    Y02072
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGOFF             PICK UP TEXT OFFSET      Y02072
         AR    RWRK2,RWRK8              GET PTR TO TEXT          Y02072
         USING MSGTXT,RWRK2                                      Y02072
         MVC   SPWMSGTX,MSGTXT          MOVE IT INTO WORK AREA   Y02072
         BR    RRET                     RETURN TO CALLER         Y02072
         DROP  RWRK2,RWRK8                                       Y02072
         SPACE 3
FILLFLDS EQU   *                                                 Y02072
         USING UCBOB,RUCB                                        Y02072
***********************************************************************
*        THIS ROUTINE FILLS IN THE UNIT NAME AND IMAGE ID
*        IN MESSAGES WHICH HAVE ALREADY BEEN MOVED TO THE WORK AREA
*        INPUT: RWRK8 POINTS TO THE MESSAGE ENTRY IN MSG CSECT
*               SPWREPID CONTAINS THE IMAGE ID TO FILL IN
*        ADDRESSIBILITY REQUIRED:
*               UCB
*               SETPRT WORK AREA
*        OUTPUT:SPWREPID AND UCBNAME HAVE MEEN MOVED TO THE
*               APPROPRIATE OFFSETS FROM SPWMSGTX
*               RWRK8 IS UNCHANGED FROM INPUT
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS ARE TRANSPARENT EXCEPT RWRK2
***********************************************************************
         USING MSGENTRY,RWRK8                                    Y02072
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGOFF1            PICK UP FIRST OFFSET     Y02072
         LA    RWRK2,SPWMSGTX(RWRK2)    POINT TO VAR IN WORKAREA Y02072
         MVC   0(L'UCBNAME,RWRK2),UCBNAME  MOVE IN UCBNAME       Y02072
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGOFF2            PICK UP SECOND OFFSET    Y02072
         LA    RWRK2,SPWMSGTX(RWRK2)    POINT TO VAR IN WORKAREA Y02072
         MVC   0(L'SPWREPID,RWRK2),SPWREPID  MOVE IN IMAGE ID    Y02072
         BR    RRET                                              Y02072
         DROP  RWRK8                                             Y02072
         SPACE 3
WTOR     EQU   *                                                 Y02072
***********************************************************************
         WTOR  MF=(E,SPWRPLYA)          ISSUE WTOR IN PROB STATE Y02072
         ST    R1,SPWMSGID              SAVE MSG ID FOR DOM    @ZA25004
         OI    SPWMSGID,X'80'           SET HIGH ORDER BIT     @ZA25004
         BR    R14                      RETURN TO SYNCH          Y02072
***********************************************************************
         EJECT
WRITEGO  EQU   *
*
**********************************************************************<
*
*   EXCP/WAIT.  NO I/O ERROR - CONTINUE THE PROCESS
*               ANY I/O ERROR - EXIT WITH RETURN CODE = X'10'
*
***********************************************************************
*
         OI    IOBFLAG1,IOBSPSVC        IND NO SAM APPENDAGE    ZA02199
*                                       PROCESSING REQUIRED     ZA02199
         EXCP  IOBSTDRD                 EXCP
*
         L     R1,IOBECBPT              LOAD ECB ADDR
         WAIT  ECB=(1)                  WAIT
         NI    IOBFLAG1,X'FF'-IOBSPSVC  RESET IOB FLAG          ZA02199
*
*   TEST COMPLETION CODE
*
         L     RWRK2,IOBECBPT           LOAD ECB ADDR
         USING ECB,RWRK2
         TM    ECBCC,ECBNORM            TEST IF I/O COMPLETE
         DROP  RWRK2
         BOR   RRET                     RETURN FROM              S20202
*                                       EXCP,WAIT,COMP TES       S20202
*
*********************************************************************
*
*   CHECK IF THE DEVICE IS A 3211 PRINTER AND THE ERROR IS RETRYABLE
*   -NO GO SET RETURN CODE FOR PERM I/O ERROR DURING UCS VERIFICATION
*   -YES GO REISSUE PRINT LINE ONCE. IF ERROR PERSIST ISSUE SKIP TO
*   CHANNEL 0 AND SET RETURN CODE FOR PERM I/O ERROR UCS VERIFICATION
*
***********************************************************************
*
         CLI   UCBTBYT4,UCB43211        CK FOR 3211 DCB           M5149
         BNE   GOSTRTCD                 NO GO SET RETURN CODE    S20202
         TM    IOBSENS1,IOBS1B0         TEST FOR COMMAND RETRY   S20202
         BNO   GOSTRTCD                 NO GO SET RETURN CODE    S20202
         LTR   RWRK9,RWRK9              TEST IF ERROR HAS BEEN   S20202
*                                       RETRIED ONCE
         BL    ISSUSKP0                 YES GO RESET 3811        S20202
         LA    RWRK1,1                  GET RETRY FLG            S20202
         SLL   RWRK1,31                 SHIFT FLG TO BIT 0       S20202
         OR    RWRK9,RWRK1              SET FLAG ON              S20202
         B     WRITEGO                  GO EXCP TO CCW THAT      S20202
*                                       FAILED                   S20202
*
*   FORM SKIP TO CHANNEL 0 CCW TO RESET CONTROL UNIT
*
ISSUSKP0 EQU   *                                                 S20202
*
         L     RWRK2,IOBSTART           GET ADDR OF CHANNEL PGM  Y02072
         MVC   0(L'SKP0CCW,RWRK2),SKP0CCW  REPLACE CCW           Y02072
         BAL   RRET,WRITEGO             GO EXCP,WAIT AND TST     S20202
*                                       COMP                     S20202
*
GOSTRTCD EQU   *                                                 S20202
*
***********************************************************************
*
*   WHEN THERE IS AN PERMANENT I/O ERROR DURING VERIFICATION,
*   SET UCB TO INDICATE THE IMAGE IN THE BUFFER IS NOT USABLE
*   GIVE CONTROL BACK TO ENTRY POINT. RETURN CODE = X'10' IN REG.15
*   IF THE I/O ERROR PERSITS,RUN C.E. DIAGNOSTICS FOR THE PRINTER
*
***********************************************************************
*
         LA    RWRK5,RCVERIO            LOAD RETURN CODE
         B     NULLUCB                  GOTO UPDATE UCB AND EXIT RTN
         EJECT
*
***********************************************************************
*
*   CONSTANTS
*
***********************************************************************
*
*   REPLY CONSTANT
*
ERRCODE  DC    H'24'                    ERROR RETURN CODE        YM3920
RETRYCN  DC    C'RETRY'                 REPLY='RETRY'
CANCELCN DC    C'CANCEL'                REPLY='CANCEL'
OKCN     DC    C'VERIFIED'              REPLY='VERIFIED'
CBLANK   DC    C'C '                    REPLY = 'C'
RBLANK   DC    C'R '                    REPLY = 'R'
VBLANK   DC    C'V '                    REPLY = 'V'
BLANKS   DC    CL16' '                 BLANKS
LOWER    EQU   BLANKS                  MASK TO ALLOW LOWER CASE REPLY
*
UCSCONST DC    C'UCS1'                  UCS IMAGE ID FOR 1403
*
*   CCW'S
*
SKP0CCW  CCW   SPWSKIP0,0,SPWSILI,1     SKIP TO 0 CCW            S20202
*
*   BRANCH TABLE
*
ID3      DC    V(IGG08103)              FIRST FCB LOAD         @Z40MSMI
*
PATCH    DC    0H'0',52X'00'            PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
         EJECT
*
*        THIS DSECT IS USED TO MOVE THROUGH THE IMAGE PASSED FROM
*        IGGO8101
*
IMAGE    DSECT
IMAFLAG  DS    B                        FLAG BYTE
IMAFLDEF EQU   X'80'                    THIS IS A DEFAULT IMAGE
IMANOLN  DS    AL1                      NUMBER OF LINES IN THIS IMAGE
IMALEN1  DS    AL1                      LENGTH OF FIRST LINE
IMA3211L EQU   512                      LENGTH OF 3211 UCS BUFFER
IMA1403L EQU   240                      LEN OF 1403 UCS BUFFER   Y02072
         TITLE 'IGG08102 - SETPRT - SYSTEM DSECTS'
         CVT   DSECT=YES                                         Y02072
         EJECT
         DCBD  DSORG=PS
         EJECT
         IEZDEB
         EJECT
         IHAECB
         EJECT
         IEZIOB
         EJECT
         IGGMSG                                                  Y02072
         EJECT
         IHAPSA                                                  Y02072
         EJECT
         IHASPP
         EJECT
         IGGSPW
         EJECT
SRT      DSECT
*
         IEFUCBOB
         END
