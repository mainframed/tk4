 TITLE 'IGG01910-IECOSLDA OPEN EXECUTOR (SAM)'
IGG01910 CSECT
*
*MODULE NAME - IGG01910                                          Y02072
*
*DESCRIPTIVE NAME - LOAD ACCESS METHOD ROUTINES                  Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 2 RELEASE 2 DELETIONS                              Y02072
*000206,000550,006200,052500,052620,052900-052940,055729-055733, Y02072
*100000,106500-106597,116610-117200,55760,106400-106600,107400,  Y02072
*111800-113600,114200,145600-145800                              Y02072
*                                                                YM1140
*                                                                YM4640
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*          RELEASE 20 DELETIONS
*2161055746,055754,144120-144140                                 M5150
*2161                                                            S20038
*2161055720-055750,122000,144400,144700                          S20202
*2161144120-144140                                               M5701
*          RELEASE 21 DELETIONS
*1091122000,144660-144720                                        S21040
*D73400-74200                                                   SA66897
*
*STATUS CHANGE LEVEL 007
*
*FUNCTION/OPERATION - THIS ROUTINE WILL LOAD SOME OF THE I/O       UT18
*      PROCESSING MODULES.  THE MODULES TO BE LOADED ARE DETERMINEDUT18
*      FOR THE ACCESS METHODS AND DEVICE TYPE TO BE USED.          UT18
*      IT WILL PLACE THE ADDRESS OF THE LOADED MODULES IN THE
*      APPROPRIATE DCB FIELDS, AND THE ID'S IN THE DEB.
*      IT WILL BRING IN THE APPROPRIATE ERROR ROUTINES.
*      THIS MODULE WAS SPLIT IN RELEASE 18 TO INCLUDE USER         UT18
*      TOTALING SUPPORT.  THE SECOND HALF OF THIS MODULE IS NOW    UT18
*      IGG01917.                                                   UT18
*
*ENTRY POINTS: ENTERED FROM IGG0191J, IGG0191D, IGG0191G BY USE OF THE
*      XCTL MACRO.
*
*INPUT: SEE DESCRIPTION OF REGISTERS, DCB(USERS)
*
*OUTPUT: DCB(USERS),IOB(USERS).
*
*EXTERNAL ROUTINES: NONE.
*
*EXITS-NORMAL   XCTL TO IGG01917.                                  UT18
*
*EXITS-ERROR: NONE.
*
*TABLES/WORAREA: DUPE EVERYTHING***************************************
***********************************************************************
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY,   Y02072
*            SUPERVISOR STATE                                    Y02072
*
*NOTES: THIS ROUTINE HAS A LIST OF ALL BSAM, QSAM MODULES SUPPORTED.
*
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RE       EQU   0         WORK REG5
RF       EQU   1         WORK REG6
R1       EQU   RF        PARM REG                                YM1140
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RTIOT    EQU   9         USED HERE AS WRK REG AND  COMM VECTOR ADDR.
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RDEB     EQU   11        DEB ADDRESS
RB       EQU   12        WORK REG1  **
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RJ       EQU   15        WORK REG4
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
***********************************************************************
*
* MASK'S TO TEST PARAMETER LIST WITH
*
*********************************************************************
INP      EQU   X'0F'
OUTP       EQU   X'0F'
UPDATE     EQU   X'04'
INOUT      EQU   X'03'
OUTIN      EQU   X'07'
RDBACK     EQU   X'01'
INPRDBK  EQU   X'0E'               MASK TO CK INPUT AND RDBACK     UT18
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
ONE        EQU   X'01'
THREE    EQU   X'03'                    CONSTANT=O               S20202
K24      EQU   X'18'                    CONSTANT=24              S20202
K25      EQU   X'19'                    CONSTANT=25              S20202
FRTYATE    EQU   48
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
ABEAPPOF EQU   17                       OFFSET TO AB END APP     S20202
*                                       ADDR                     S20202
FOUR     EQU   X'04'                                             M5150
BIN      EQU   36
BEXT     EQU   38
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'
*
*
STOWB      EQU   X'80'
WRTCK      EQU   X'80'
OVRFLO     EQU   X'20'
PCI        EQU   X'20'
MINKEY     EQU   X'01'
CONCAT     EQU   X'FF'
UTFMASK  EQU   X'02'                    MASK FOR TOTALING FACILITY UT18
*
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB      EQU   X'01'
BSAMBIT    EQU   X'00'
PAM        EQU   X'02'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
OCR3886  EQU   X'57'                    DCBDEVT FOR 3886 OCR    XL03127
*
*
*********************************************************************
*
*
*
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN      EQU   X'30'
COMPLETE   EQU   X'80'
FIRSTIOB   EQU   X'01'
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
CYCLICB    EQU   X'20'
EXCHANGB   EQU   X'10'
SIMPLEB    EQU   X'40'
EXCHCYCL   EQU   X'30'
*
*********************************************************************
*
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
MOVEXCHB EQU   X'14'
SUBSTUTB   EQU   X'04'
*
*
*********************************************************************
*
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
*
*
SRCHE      EQU   X'31'
WRTCKD     EQU   X'1D'
RDC        EQU   X'92'
RDKD       EQU   X'8E'
RDD        EQU   X'86'
TIC        EQU   X'08'
*
*
*********************************************************************
*
*
* MASKS FOR RECORD FORMATS
*
*
STANDRDF   EQU   X'08'
FORMATU    EQU   X'C0'
FORMATF    EQU   X'80'
FORMATV    EQU   X'40'
FORMATD  EQU   X'20'                    D FORMAT RECORDS         S20038
BLOCKED    EQU   X'10'
FIXEDBLK   EQU   X'90'
*
*
*********************************************************************
*
*
*   CHANNEL CONTROL WORD FLAGS
*
SKIP       EQU   X'10'
SLI        EQU   X'20'
CC         EQU   X'40'
DATACH     EQU   X'A0'
SLICC      EQU   X'60'
SLICCSK    EQU   X'70'
*
*
*********************************************************************
*
*
KEYS       EQU   X'01'
QSAM       EQU   X'01'
*
*
*********************************************************************
*
GETMAIN    EQU   4
XCTL       EQU   7
LOAD       EQU   8
*
*********************************************************************
*
D2       EQU   2                        DISPLACEMENT OF 2        S21040
D3       EQU   3                        DISPLACEMENT OF 3        S21040
D6       EQU   6                        DISPLACEMENT OF 6        S21040
L1       EQU   1                        LENGTH OF 1              S21040
L3       EQU   3                        LENGTH OF 3              S21040
L4       EQU   4                        LENGTH OF 4              S21040
*
**********************************************************************
ASA        EQU   X'04'
BKREAD     EQU   X'01'
URBITS   EQU   X'40'
TAPEB    EQU   X'80'
DABIT    EQU   X'20'
OVRDMSK  EQU   X'C0'                    INDICATES OPEN OVERRITE  S21040
OVRDIN   EQU   X'0F'                    TEST FOR LABEL=(,,,IN)   S21040
ERREOB   EQU   X'0B'                    UTF EOB DISP. IN TABLE   S21040
PTR3211  EQU   X'49'                    MASK FOR 3211 PRINTER    S20202
*
**********************************************************************
*
**********************************************************************
*
*
*
*
*
*
*
*
*
*
*
*
*
*
         BALR  RBASE,0
         USING SLDA,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
*
*
SLDA     EQU   *
*
         B     BEGIN                    BRANCH AROUND MODULE ID  YM4640
         DC    C'IGG01910'              MODULE NAME              YM4640
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/22/74'              LAST SHIP DATE         @Z30TSCF
BEGIN    DS    0H                       END OF MODULE ID         YM4640
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         USING DEBBASIC,RDEB
         L     RCORE,4(RWTGC)           GET WORK AREA
         MVI   22(RWTG),X'CB'          CHANGE DE ATTR.TO ONLY LOADABLE
*
         L     RTIOT,DEBAPPAD           GET APPENDAGE ADDRESS
         USING DEBAVT,RTIOT
         SR    RUCB,RUCB                CLEAR REG
         SR    RF,RF                    CLEAR RER
         IC    RUCB,DEBNMEXT            GET NUMBER OF EXTENTS
         IC    RF,DEBEXSCL              GET SCALING FACTOR
         SLL   RUCB,0(RF)               SHIFT ACCORDING TO EXTENT SIZE
         IC    RF,DEBAMLNG              GET ACCESS METHOD LENGTH
         LA    RUCB,0(RF,RUCB)          ADD TO POINT TO SUBRT ID FLD
         LA    RUCB,32(RUCB,RDEB)       ADD BASIC DEB SZ TO DEB AD
*
*  RUCB NOW POINTS TO THE SUBROUTINE ID FIELD IN THE DEB
*
         TM    DCBOPTCD,UTFMASK         TEST FOR TOTALING          UT18
         BZ    SLDAA                    BR IF NOT SPECIFIED        UT18
         TM    0(RPARC),INPRDBK         IS OPEN FOR INPUT/RDBACK   UT18
         BZ    SLDAA                    IF YES, NO TOTALING REQ'D  UT18
*                                                                  UT18
* SINCE UTF WAS SPECIFIED THE TOTALING SAVE ROUTINE (IGG019AX)     UT18
*        WAS LOADED BY IGG0191Y IN STAGE 1 - SO IT IS NECESSARY    UT18
*        TO UPDATE THE SUBROUTINE ID POINTER (RUCB) TO POINT       UT18
*        TO THE SECOND ID SUBFIELD.                                UT18
*                                                                  UT18
         LA    RUCB,2(RUCB)             POINT TO NEXT ID SUBFIELD  UT18
SLDAA    EQU   *                                                 S20202
         CLI   DCBDEVT,PTR3211          TEST FOR 3211 PRINTER    S20202
         BNE   SLDAB                    NO BRANCH AROUND         S20202
*
*   FOR A 3211 PRINTER LOAD AN ABNORMAL END APPENDAGE AND AN ERROR
*   RETRY MODULE.
*
         LA    RB,ABEAPP11        ABNORMAL END APD ID            S20202
         BAL   RC,SLDROUT              GO LOAD APP AND RETURN    S20202
         MVC   DEBXCEAD,25(RWTG)       MOVE APP ADDR INTO AVT    S20202
         LA    RB,ERRMOD                GET ADDR OF ERROR RETRY  S20202
         BAL   RC,SLDROUT               GO LOAD ERROR RETRY MOD  S20202
*
*   WHEN RETURN FROM 'SLDROUT'- R0 CONTAINS THE ADDR OF THE
*   ASYNCHRONOUS ERROR ROUTINE. NOW BUILD AN IRB TO BE USED  IN
*   SCHEDULING THIS ROUTINE
         CIRB  EP=(0),KEY=PP,MODE=PP,STAB=(RE)
         ST    RF,K24(RWTG)             TEMP SAVE FOR IRB ADDR   S20202
         MVC   DEBIRBB,25(RWTG)   MOVE IRB ADDR INTO DEB         S20202
SLDAB    EQU   *                                                 M5150
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,NEXTMOD         ID OF NEXT MOD IN WTG  @Z30TSCF
         TM    DCBCIND2,QSAMB           DCB FOR QSAM
         BC    1,SLD100                 YES BRANCH
*
         CLI   DCBDEVT,OCR3886          IS DEVICE A 3886        XL03127
         BNE   SLDAC                    NO,BR FOR STD BSAM CHECKXL03127
         LA    RB,OCRCHK                YES,GET ADDR OCR CHK ID XL03127
         B     SLDAE                    BRANCH AROUND           XL03127
SLDAC    LA    RB,CHECK                 GET ADDRESS OF CHECK ID
SLDAE    EQU   *                        BRANCH POINT            XL03127
         TM    DCBOFLGS,X'20'           CONCATENATION UNLIKE ATTRIBUTES
         BC    8,SLDA0                  NO BRANCH
         BAL   RC,SLDROUT1              STORE THE ID OF CHECK IN DEB
         B     SLDA1
*
SLDA0    BAL   RC,SLDROUT               LOAD CHECK ROUTINE
         MVC   DCBCHECK+1(3),25(RWTG)  LOAD CHECK ADDR. INTO DCB
*
SLDA1    EQU   *
*
         CLI   DCBDEVT,OCR3886          IS DEVICE A 3886        XL03127
         BNE   SLDA3                    NO,BR FOR STD BSAM READ XL03127
         LA    RB,OCRREAD               YES,GET ADDR OCR RD ID  XL03127
         B     SLDA5                    BRANCH AROUND           XL03127
*
SLDA3    LA    RB,WRH2                  GET RD/WRT ID ADDRESS
SLDA5    BAL   RC,SLDROUT               TO LOAD FUNCTION
         MVC   DCBREAD+1(3),25(RWTG)   LOAD READ/WR ADDR. IN DCB
*
         B     SLDEOB                   GET SPECIAL ROUTINES
*
***********************************************************************
*
SLD100   EQU   *
*
         TM    DISPSN(PARAR),OUTP       DCB  EOR  OUTPUT
         BC    1,SLD200                 YES BRANCH
*
         LA    RB,GERR                  GET ADDRESS OF GERR ID
*
         TM    DCBOFLGS,X'20'           CONCATENATION UNLIKE ATTRIBUTES
         BC    8,SLD100A                NO BRANCH
*
         BAL   RC,SLDROUT1              JUST STORE GERRS ID IN DEB
         B     SLD101
*
*
SLD100A  BAL   RC,SLDROUT               LOAD GERR
         MVC   DCBGERR+1(3),25(RWTG)   LOAD GERR ADDR. IN DCB
*
*
SLD101   EQU   *
*
         TM    DCBDEVT,URBITS           DCB USING URE
         BC    1,SLD170                 YES BRANCH
*
         TM    DCBDEVT,TAPEB            DCB USING TAPE
         BC    8,SLD160                 NO BRANCH
*
         TM    DEBOPATB,X'03'          OPEN FOR BACKWARD READ
         BC    9,SLD160                NO BRANCH
*
         LA    RB,SBLF                  SET UP BASE FOR BACKWARD GETS
         TM    DCBMACRF,MOVEXCHB       DCB USING MOVE OR SUBST. MODE
         BC    8,SLD150                 NO BRANCH MUST BE LOCATE MODE
         LA    RB,L'NXTENTRY(RB)        POINT TO MVOE MODE       Y02072
*
*
SLD150   EQU   *
         BAL   RC,SLDROUT               TO LOAD FUNCTION
         MVC   DCBGET+1(3),25(RWTG)    LOAD GET ADDR. IN DCB
*
*******************************************************************
*******************************************************************
*
         B     SLDEOB                   TO SPECIAL ROUTINES
*
SLD160   EQU   *
*
         LA    RB,SGLF                  SET UP FOR NORMAL GET IDS
         B     SLD172
*
SLD170   TM    DCBMACRF,CNTRLB          IS CNTRL MACRO USED READER
         BC    8,SLD160                 NO USE NORMAL GETS
*
         LA    RB,GMFC                  POINT TO SPECIAL GET MOVE
*
         B     SLD175
*
SLD172   EQU   *
         TM    DCBMACRF,MOVEXCHB        DCB USING MOVE OR SUBST. MODE
         BC    8,SLD175                 NO BRANCH MUST BE LOCATE MODE
*
SLD173   EQU   *
         LA    RB,2*L'NXTENTRY(RB)      UPDATE TO MOVE MODE      Y02072
SLD175   EQU   *
         TM    DCBRECFM,DCBRECF         FORMAT F OR U           SA66897
         BO    SLD150                   YES, GO LOAD ROUTINE    SA66897
         TM    DCBRECFM,DCBRECV         FORMAT V                SA66897
         BO    SLD1760                  YES, GO INCR TO NEXT ID SA66897
*
* BECAUSE DCBRECFM FIELD BITS 0, 1, & 2 HAVE DUPLICATE MEANINGS
* IT IS NECESSARY TO MAKE THE FOLLOWING TWO TESTS TO DETERMINE
* IF FORMAT D RECORDS ARE BEING USED.
*   RECFM = 001XXXXX - UNDEFINED REC FORMAT WITH TRK OVERFLO
*   RECFM = 001XXXXX - ASCII TAPE (OPTCD = Q)
* AT THIS POINT BITS 0 & 1 ARE ZERO.
*
         TM    DCBRECFM,DCBRECD         ASCII TAPE OR TRK OVFLO SA66897
         BZ    SLD150                   NO, GO LOAD FOR FORMAT  SA66897
*                                         U RECORDS             SA66897
         TM    DCBOPTCD,DCBOPTQ         ASCII TAPE              SA66897
         BZ    SLD150                   NO, GO LOAD U FORMAT    SA66897
SLD1760  EQU   *                                                 S20038
         LA    RB,L'NXTENTRY(RB)        UPDATE TO V REC IDS      Y02072
         B     SLD150                   TO LOAD FUNCTION
*
SLD200   LA    RB,PERR                  GET ADDRESS OF PERR ID
         BAL   RC,SLDROUT               TO LOAD SUBROUTINE
         MVC   DCBPERR+1(3),25(RWTG)   LOAD PERR ADDR.IN DCB
*
*
SLD250   LA    RB,SPLF                  ESTABLISH BASE FOR PUTS
*
         TM    DCBMACRF+1,MOVEXCHB     DCB USING MOVE OR SUBST. MODE
         BC    8,SLD175                 NO BRANCH MUST BE LOCATE MOGE
         B     SLD173                   SET UP FOR MOVE ROUTINES
*
***********************************************************************
*
SLDEOB   EQU   *
*
*    THIS SECTION OF CODE UP TO THE LABEL ENDOVR WILL ENSURE THAT
*    THE EOB ROUTINE IGG019CT GETS LOADED BY IGG01917 FOR ANY
*    OPEN OVERRIDE.
*
         TM    JFCBMASK+D6,OVRDMSK      WAS AN OVERRIDE USED     S21040
         BNO   ENDOVR                   BR IF NO                 S21040
         TM    0(RPARC),OVRDIN          WAS IT LABEL=(,,,IN)     S21040
         BZ    INCHNG                   BR IF YES                S21040
         MVC   DCBCNTRL+D2(L1),DCBCNTRL+D3 SAVE WRITE EOB DISP   S21040
         MVI   DCBCNTRL+D3,ERREOB       SET READ EOB ROUTINE FOR S21040
*                                       THE ERROR EOB ROUTINE
         B     ENDOVR                   CONTINUE                 S21040
INCHNG   EQU   *                                                 S21040
         MVI   DCBCNTRL+D2,ERREOB       SET WRITE EOB ROUTINE    S21040
*                                       FOR ERROR EOB ROUTINE
ENDOVR   EQU   *                                                 S21040
*
*    IF USER TOTALING IS TO BE USED, EOB ROUTINES WHICH CONTAIN
*    THE TOTALING LINKAGE MUST BE LOADED INSTEAD OF THE NORMAL EOB
*    ROUTINES. THIS IS ACCOMPLISHED BY DOING A TRANSLATE OF THE
*    DCBCNTRL FIELD TO CONVERT NORMAL EOB DISPLACEMENTS INTO
*    DISPLACEMENTS FOR THE UTF EOB ROUTINE. THE ROUTINES ARE
*    LOADED BY IGG01917.
*
         TM    DCBOPTCD,UTFMASK         TEST FOR TOTALING OPTION S21040
         BZ    RELOOP                   BR IF NOT SPECIFIED      Y02072
         TM    0(RPARC),INPRDBK         IS OPEN FOR INPUT/RDBACK S21040
         BZ    RELOOP                   IF YES, NO TOTALING REQD Y02072
         TR    DCBCNTRL(L4),UTFTBL      CHANGE TO UTF DISP.      S21040
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
*
*
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'
AMIDCNST DC    C'10'
*
*
*
         DS    0H
SLDROUT  EQU   *
         USING WTGMODNM,RWTG                                     Y02072
         MVC   WTGMODID,0(RB)           ID TO MOD NAME           Y02072
         DROP  RWTG                                              Y02072
*
         L     R1,CVTPTR                LOAD CVT ADDRESS         YM1140
         USING CVT,R1                   CVT ADDRESSABILITY       YM1140
         L     R1,CVTLINK               GET LPALIB DCB ADDRESS   YM1140
         DROP  R1                       DROP CVT BASE            YM1140
*
         LOAD  EPLOC=(RWTG),DCB=(1)                              YM1140
*
*
*
         ST    RE,24(RWTG)             TEMP STORE OF ROUTINE ADDR,
SLDROUT1 MVC   0(2,RUCB),0(RB)          STORE ROUTINES ID IN DEB
         LA    RUCB,2(RUCB)             UPDATE SUBRT PNTR
         SR    RD,RD                    CLEAR REG
         IC    RD,DEBNMSUB              GET NO.OF SUBRTS LOADED SO FAR
         LA    RD,1(RD)                 ONE MORE SUB RT LOADED
         STC   RD,DEBNMSUB              STORE NEW TOTAL SUBRTS LOADED
         BR    RC                      RETURN
*
*
*    THE FOLLOWING TABLE IS USED WITH A TRANSLATE INSTRUCTION
*    TO CONVERT DISPLACEMENTS FOR THE EOB TABLE INTO THE
*    ENTRIES FOR THE CORRESPONDING UTF EOB ROUTINES.
*
UTFTBL   EQU   *                                                 S21040
         DC    X'00'                    NO CHANGE                S21040
         DC    X'0C'                    IGG019CD TO IGG019TD     S21040
         DC    X'0D'                    IGG019CC TO IGG019TC     S21040
         DC    X'03'                    NO CHANGE                S21040
         DC    X'04'                    NO CHANGE                S21040
         DC    X'05'                    NO CHANGE                S21040
         DC    X'06'                    NO CHANGE                S21040
         DC    X'07'                    NO CHANGE                S21040
         DC    X'08'                    NO CHANGE                S21040
         DC    X'09'                    NO CHANGE                S21040
         DC    X'0A'                    NO CHANGE                S21040
         DC    X'0B'                    NO CHANGE                S21040
*
***********************************************************************
*
*   BELOW ARE THE QSAM ROUTINES BEING SUPPORTED
*
*********************************************************************
*
NEXTMOD  DC    C'17',VL3(IGG01917)      IGG01917 - THIS IS THE @Z30TSCF
*                                       SECOND HALF OF THIS MODULE UT18
SGLF     DC    C'AA'                    SIMPLE GET LOC MODE FIXED REC.
SGLV     DC    C'AB'                    SIMPLE GET LOC MODE VARIABLE R.
SGMF     DC    C'AC'                    SIMPLE GET MOVE MD FIXED RECS.
SGMV     DC    C'AD'                    SIMPLE GET MOVE MD VARIABLE REC
GMFC     DC    C'AG'                    SIMPLE GET CARD RDR-CNTRL MOVEF
GMVC     DC    C'AG'                    SIMPLE GET CARD RDR-CNTRL 25005
*                                       MOVEF                     25005
SPLF     DC    C'AI'                    SIMPLE PUT LOC MD. FIXED RECS
SPLV     DC    C'AJ'                    SIMPLE PUT LOC MD. VARIABLE REC
SPMF     DC    C'AK'                    SIMPLE PUT MOVE MD. FIXED REGS
SPMV     DC    C'AL'                    SIMPLE PUT MOVE MD. VARIABLE RC
SBLF     DC    C'AM'                    SIMPLE GETBACKWARDS LOC MD  FIX
SBMF     DC    C'AN'                    SIMPLE GETBACKWARDS MOVE MD VAR
GERR     DC    C'AQ'                    GET ERROR ROUTINE
PERR     DC    C'AR'                    PUT ERROR ROUTINE
*
*  THIS CONCLUDES THOSE QSAM MODULES THAT ARE BEING SUPPORTED NOW
*
*   BELOW ARE THE BSAM MODULES BEING SUPPORTED AT THIS TIME
*
*
WRH2     DC    C'BA'                    READ-WRITE ROUTINE
CHECK    DC    C'BB'                    CHECK ROUTINE
OCRREAD  DC    C'LU'                    READ ROUTINE FOR 3886   XL03127
OCRCHK   DC    C'LS'                    CHECK ROUTINE FOR 3886  XL03127
*    THIS CONCLUDES THE BSAM MODES BEING SUPPORTED NOW
*
*   3211 ERROR RETRY MODULES
*
ABEAPP11 DC    C'FR'       TTR FOR 3211 ABN APP                  M5150
ERRMOD   DC    C'FS'       TTR FOR ERR RETRY MODS                M5150
NXTENTRY DS    0CL2                     TO GET 2 BYTE LEN ATTR   Y02072
         SPACE 3
PATCH    DC    25H'0'                   PATCH AREA               YM4640
END      EQU   *                        END OF MODULE            Y02072
         TITLE 'IGG01910 - FORMAT OF GOTTEN CORE'
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
*
CVT      DSECT
         CVT
*
*
         IEZDEB
*
           DCBD  DSORG=PS
*
**********************************************************************
*
           END
