         TITLE 'IGG08101 - SETPRT LOAD 2 - UCS IMAGE RETRIEVAL'
IGG08101 CSECT
* /*  START OF SPECIFICATIONS****                             @Z40MSAP
*01*  PROCESSOR = ASSEMXF:
**** END OF SPECIFICATIONS **                                @Z40MSAP*/
***********************************************************************
*
* MODULE-NAME = IGG08101
*
* DESCRIPTIVE-NAME = SETPRT UCS IMAGE RETRIEVAL
*
* COPYRIGHT = NONE
*
* STATUS = VS2-4, LEVEL 1
*
* FUNCTION = USE BLDL MACRO TO LOCATE THE UCS IMAGE IN SYS1.IMAGELIB
*            USE LOAD MACRO TO RETRIEVE THE UCS IMAGE FROM IMAGELIB
*            WHEN IMAGE IS FOUND,ISSUE WTOR IEC120 TO REQUEST
*                     AN OPERATOR MOUNT CHAIN/TRAIN.
*            WHEN IMAGE IS NOT FOUND,ISSUE WTOR AND IEC122 TO
*                    REQUEST AN OPERATOR SPECIFY AN ALTERNATE CHAIN.
*            ANALYZE OPERATOR REPLY
*
* NOTES =
*    DEPENDENCIES = BLANK AND COMMA ARE USED--CORRECTABLE BY
*        REASSEMBLY.  THE FOLLOWING CHARACTER STRINGS ARE USED IN
*        TESTING OPERATOR REPLIES:
*        'F', 'V', 'U', 'C', 'FOLD', 'VERIFY', 'CANCEL'
*        THESE STRINGS ARE CONSIDERED TO BE OPERATING SYSTEM KEYWORDS
*        RATHER THAN LANGUAGE DEPENDENT PHRASES.
*
*        BLANKS ARE OR'ED TO ALL REPLIES TO CONVERT THEM TO UPPER CASE
*
*    RESTRICTIONS = NONE
*
*    REGISTER-CONVENTIONS = ALL REGISTER NAMES BEGIN WITH R
*        SEE EQUATES IMMEDIATELY FOLLOWING PROLOG
*
*    PATCH-LABEL = PATCH, AN AREA ASSEMBLED AS BINARY 0
*
* MODULE-TYPE =
*    PROCESSOR = OS/VS ASSEMBLER
*
*    MODULE-SIZE = 900 DECIMAL BYTES
*
*    ATTRIBUTES = REENTRANT, ENABLED, PRIVELEGED,
*        EXECUTES IN SETPRT INVOKER KEY
*        CODE AT ENTRY POINT WTOR IS NON-PRIVELEGED
*
* ENTRY POINT = IGG08101
*    PURPOSE = SEE FUNCTION
*
*    LINKAGE = BRANCH FROM IGC0008A
*
*    INPUT =
*        REGISTER 4(RSPW) = WORK AREA ADDRESS
*        REGISTER 5(RPAR) = PARAMETER LIST ADDR
*        REGISTER 6(RSVR) = SVRB EXTENDED SAVE AREA ADDRESS
*        REGISTER 9(RIOB) = ADDRESS OF IOB
*
*    OUTPUT =
*      REGISTERS = TO INVOKER
*        R0 = UNDEFINED
*        R1 = UNDEFINED
*        R2-R14 = UNCHANGED
*        R15 = RETURN CODE (SEE EXIT-ERROR)
*
*      REGISTERS = TO IGG08102
*        R0-R3 = UNDEFINED
*        R4-R6 = AS FOR INPUT
*        R7 = UNDEFINED
*        R8 (RIMAG) = ADDR OF IMAGE TO BE LOADED
*        R9 = AS FOR INPUT
*        R10-R14 = UNDEFINED
*        R15 = RESERVED FOR BRANCH INTERFACE
*
*      REGISTERS = TO IGG08103
*        R0-R3 = UNDEFINED
*        R4-R6 = AS FOR INPUT
*        R7-R8 = UNDEFINED
*        R9 = AS FOR INPUT
*        R10-R11 = UNDEFINED
*        R12 = UCS RETURN CODE
*        R13-R14 = UNDEFINED
*        R15 = RESERVED FOR BRANCH INTERFACE
*
*      MESSAGES = RETRIEVED FROM IGGMSG01
*        'IEC120A M XXX,YYYY(,FOLD)(,VERIFY)'
*        'IEC122D XXX,YYYY UCS IMAGE NOT FOUND'
*        'IEC125A ERROR - REPEAT REPLY'
*
*    EXIT-NORMAL = WHEN THE IMAGE IS TO BE LOADED, BRANCH TO IGG08102
*        IF AN FCB IMAGE IS TO BE LOADED, BRANCH TO IGG08103,
*        OTHERWISE RETURN TO SETPRT INVOKER
*
*    EXIT-ERROR = WHEN AN OPERATOR ISSUED CANCEL FOR IEC120/IEC122,
*        SET RETURN CODE=04.
*              WHEN PERMANENT I/O ERROR OCCURED DURING BLDL,
*        SET RETURN CODE=08.
*              IF AN FCB IMAGE IS TO BE LOADED, SAVE THE RETURN CODE
*        AND BRANCH TO SETPRT LOAD IGG08103, OTHERWISE RETURN TO USER
*
* ENTRY-POINT = WTOR (INTERNAL ENTRY)
*    PURPOSE = ISSUE WTOR SVC IN PROBLEM STATE TO AVOID INTEGRITY
*        EXPOSURE FROM NON-PROTECTED MESSAGE
*
*    LINKAGE = SYNCH FROM WITHIN THIS MODULE
*
*    INPUT =
*        REGISTER 4(RSPW) = WORK AREA ADDRESS
*        REGISTER 14(R14) = RETURN ADDRESS
*
*    OUTPUT =
*      REGISTERS = TO INVOKER
*        R0 = UNDEFINED
*        R1 = UNDEFINED
*        R2-R14 = UNCHANGED
*        R15 = UNDEFINED
*
* EXTERNAL REFERENCES =
*   ROUTINES = BLDL    (SVC 18)
*              DELETE  (SVC  9)
*              FREEMAIN(SVC 10)
*              IGG08102(SETPRT LOAD 3)
*              IGG08103(SETPRT LOAD 4)
*              IMGLIB  (SVC105)
*              LOAD    (SVC  8)
*              SYNCH   (SVC 12)
*              WAIT    (SVC  1)
*              WTOR    (SVC 35)
*
*   DATA-AREAS = SPP -- SETPRT PARAMETER LIST
*              SPW5 -- BLDL PARAMETER LIST                     @Z40MSAP
*              SPW -- SETPRT WORK AREA
*              SPRBXSV -- RB EXTENDED SAVE AREA
*              MSG -- MESSAGE CSECT
*   CONTROL-BLOCKS =
*              DCB -- DATA CONTROL BLOCK
*              DEB -- DATA EXTENT BLOCK
*              ECB -- EVENT CONTROL BLOCK
*              IOB -- INPUT/OUTPUT BLOCK
*              UCB -- UNIT CONTROL BLOCK
*
* MACROS = BLDL,DELETE,FREEMAIN,IMGLIB,LOAD,SYNCH,WAIT,WTOR,
*              DCBD, IEFUCBOB, IEZDEB, IEZIOB, IGGMSG, IGGSPW,
*              IHAECB, IHASPP
*
* CHANGE ACTIVITY = AS FOLLOWS
*
* NOTE = THIS MODULE WAS BROUGHT UP TO STANDARDS FOR VS2-2
*        WHICH CAUSED ALL PREVIOUS RELEASE SEQUENCE NUMBER DELETIONS TO
*        BECOME INVALID.
*
*          RELEASE 19 DELETIONS
*THE FOLLOWING PTM WAS FIXED IN THIS RELEASE - M2923
*
*          RELEASE 20 DELETIONS
*THE FOLLOWING PTMS WERE FIXED IN THIS RELEASE - 5881, 5149, 5143
*THE FOLLOWING APARS WERE FIXED IN THIS RELEASE - 34011, 33699
*THE FOLLOWING DEVELOPMENT CODE WAS FOR 3211 SUPPORT - S20202
*
*          RELEASE 21 DELETIONS
*THE FOLLOWING PTM WAS FIXED IN THIS RELEASE - 1759
*THE FOLLOWING APAR WAS FIXED IN THIS RELEASE - 50699
*
*          VS2 RELEASE 2 DELETIONS
*THE FOLLOWING DEVELOPMENT CODE WAS FOR VS2 RELEASE 2 - Y02072
*                                                                YM5703
*          VS2 RELEASE 3.7 CHANGES
*
*C165500-165800                                                @ZA25004
*A348000,655673-655679                                         @ZA25004
*A169507-169584                                                @ZA32077
*
*          VS2 RELEASE 4 DELETIONS
*                                                              @Z40MSMI
***********************************************************************
         EJECT
***********************************************************************
*
*   REGISTER CONVENTIONS USED THROUGH OUT ALL SETPRT MODULES
*
***********************************************************************
*
RWRK1    EQU   0                        WORK/PARAMETER REG.
R0       EQU   0                        INPUT REGISTER
RWRK2    EQU   1                        WORK/PARAMETER REG.
R1       EQU   1                        INPUT REGISTER
RDCB     EQU   2                        ADDR OF USER'S DCB
RBASE    EQU   3                        BASE REG.
RSPW     EQU   4                        ADDR OF MESSAGE/WORK AREA
RPAR     EQU   5                        PARAMETER LIST ADDR
RSVR     EQU   6                        SVRB EXTENDED SAVE AREA
RRET     EQU   7                        SUBROUTINE RETURN REG    Y02072
RIMAG    EQU   8                        ADDR OF UCS IMAGE LOADED
RIOB     EQU   9                        ADDR OF LAST IOB USED
RUCB     EQU   10                       UCB ADDR
RDEB     EQU   11                       DEB ADDR
RBLDL    EQU   RDEB                     BLDL PARM LIST REG       YM5703
RWRK5    EQU   12                       WORK REG.
RWRK6    EQU   13                       WORK REG.
R14      EQU   14                       LINK REGISTER
RWRK7    EQU   14                       WORK/PARAMETER REG.
R15      EQU   15                       LINK/RETURN CODE REGISTER
RWRK8    EQU   15                       WORK/PARAMETER REG.
*
*
***********************************************************************
*
*   RETURN CODES
*
RCNORM   EQU   X'00'                    NORMAL RETURN
RCOPIMG  EQU   X'04'                    OPERATOR CANCEL--INVAL IMAGE
RCBLDIO  EQU   X'08'                    I/O ERROR IN BLDL
*
***********************************************************************
*              MESSAGE NUMBERS IN IGGMSG01
*        ALL MESSAGE NUMBERS HAVE BEEN DOUBLED IN THESE EQUATES
*        TO PROVIDE OFFSETS INTO THE MESSAGE CSECT.
*        THIS IS DEPENDENT ON L'MSGINDOF BEING 2.
*
MSG120   EQU   3*2                      IEC120A, NO FOLD,VERIFY  Y02072
MSG120F  EQU   6*2                      IEC120A, FOLD ONLY       Y02072
MSG120FV EQU   5*2                      IEC120A, FOLD&VERIFY     Y02072
MSG120V  EQU   4*2                      IEC120A, VERIFY ONLY     Y02072
MSG122   EQU   7*2                      IEC122D                  Y02072
MSG125   EQU   8*2                      IEC125A                  Y02072
*
***********************************************************************
*              OTHER EQUATES
*
MAXRPLN  EQU   5                        USED FOR LOOP CONTROL IN
*                                       ANALYZING THE REPLY
UCB43211 EQU   X'09'                    MASK FOR 3211 PRINTER     M5149
UCB41403 EQU   X'08'                    MASK FOR 1403 PRINTER    Y02072
         EJECT
         USING SPW,RSPW
         USING SPPARM,RPAR
         USING SPRBXSV,RSVR
         USING IOBQSAMN,RIOB
*
***********************************************************************
*
*   INITIALIZE REGISTERS
*
***********************************************************************
*
         BALR  RBASE,0                  ESTABLISH BASE FOR CODE
START    EQU   *
         USING START,RBASE
         SPACE
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG08101'              MODULE NAME              Y02072
         DC    C'@ZA32077'              LAST SHIP CODE         @ZA32077
         DC    C'07/28/78'              LAST DATE MODIFIED     @ZA32077
BEGIN    DS    0H                                                Y02072
         SPACE
         L     RDCB,SPPDCBA             LOAD DCB ADDR
         USING IHADCB,RDCB
         L     RDEB,DCBDEBAD            LOAD DEB ADDR
         USING DEBDASD-(DEBBASND-DEBBASIC),RDEB
         L     RUCB,DEBUCBAD            LOAD UCB ADDR
         DROP  RDEB
         USING UCBOB,RUCB
         L     RDEB,UCBXTADR            LOAD UCB EXTENSION    @ZA32077
         TM    4(RDEB),X'01'            PARITY ERROR          @ZA32077
         BO    MOVEID                   YES-LOAD UCS          @ZA32077
         CLC   SPPUCS,0(RDEB)           SPECIF UCS=LOADED UCS @ZA32077
         BNE   MOVEID                   NO-LOAD UCS           @ZA32077
         TM    SPWPARM1,SPWVERIF        VERIFY                @ZA32077
         BO    MOVEID                   YES-LOAD UCS          @ZA32077
         TM    SPWFLG1,SPWRPVER         OPER REQUEST VERIFY   @ZA32077
         BO    MOVEID                   YES-LOAD UCS          @ZA32077
         LA    RDEB,RCNORM              LOAD RETURN CODE      @ZA32077
         B     CKFORFCB                 RETURN TO PROB PROG   @ZA32077
MOVEID   EQU   *                                              @ZA32077
         L     RBLDL,SPRBLDLA           GET BLDL PARM LIST ADDR  YM5703
         USING SPW5,RBLDL                                      @Z40MSAP
*
***********************************************************************
*
*   SET UP REQUESTED UCS IMAGE ID
*
***********************************************************************
*
         L     RWRK6,SPWBLUCS           GET UCS IMAGE ID         Y02072
         ST    RWRK6,SPWREPID           MAKE IT CURRENT ID       Y02072
*
BLDLRTN  EQU   *
*
***********************************************************************
*
*   BLDL TO LOCATE UCS IMAGE IN SYS1.IMAGELIB
*
***********************************************************************
*
         MODESET  EXTKEY=DATAMGT        KEY 5 FOR BLDL LIST      YM5703
         SPACE
         MVC   SPWBLDLC,BLDLCNST        MOVE BLDL LIST TO BLDL AREA
         MVC   SPWUCSMB,UCSCONST        MOVE UCS IMAGE MEMBER NAME
         CLI   UCBTBYT4,UCB43211        CK FOR 3211 DCB           M5149
*                                       PRINTER                  S20202
         BNE   CONTBLDL                 NO, CONTINUE W/ BLDL      M5881
         MVI   SPWUCS2,SPWUCS2C         UCS PREFIX=UCS2          S20202
*
CONTBLDL EQU   *                                                 S20202
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=1  RESUME USER KEY      YM5703
         SPACE
         MVC   SPWUCSIM(L'SPWUCSMB),SPWUCSMB  SAVE FOR LATER     Y02072
*                                             LOAD AND WTOR
         MODESET  EXTKEY=DATAMGT        KEY OF BLDL LIST         YM5703
         SPACE
*
*   GET ADDRESS OF SYS1.IMAGELIB DCB
*
         L     R1,SPRIDCBA              GET SYS1.IMAGELIB DCB    Y02072
*                                       ADDRESS                  S20202
         BLDL  (1),SPWBLDLC             BLDL TO LOCATE THE IMAGE
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=1                       YM5703
         SPACE
*
*   TEST RETURN CODE FROM BLDL
*       X'00' - FOUND
*       X'04' - NOT FOUND
*       X'08' - PERMANENT I/O ERROR
*
         B     BLDLRET(R15)             TEST RETURN CODE         Y02072
BLDLRET  EQU   *                                                 Y02072
         B     LOADUCS                  0 - GOTO LOAD IMAGE RTN  Y02072
         B     WTOR122                  4 - NOT FOUND MSG RTN    Y02072
*                                       8 - I/O ERROR            Y02072
*
***********************************************************************
*
*   PERMANENT I/O ERROR DURING BLDL - GIVE CONTROL BACK TO ENTRY POINT
*   RETURN CODE = X'08' IN REG.15
*   IF I/O ERROR PERSISTS,RUN C.E. DIAGNOSTICS FOR SYSTEM RESIDENT
*   DASD.
*
***********************************************************************
*
         LA    RWRK5,RCBLDIO            LOAD RETURN CODE
         B     CKFORFCB                 GO TO CK IF FCB          S20202
*                                       SPECIFIED IN             S20202
*                                       SETPRT PARAMETER LIST
         EJECT
LOADUCS  EQU   *
*
***********************************************************************
*
*   WHEN UCS IMAGE IS FOUND IN SYS1.IMAGELIB LOAD THE UCS IMAGE
*
***********************************************************************
*
         TM    SPWFLG3,SPW120RQ         TEST IF IEC120 IS REQUIRED
         BO    WTOR120                  IF YES, GOTO DISPLAY MSG Y02072
*                                       BEFORE LOADING IMAGE
         BAL   RRET,LOAD                IF NO, GO AHEAD & LOAD   Y02072
         B     XCTLRTN                  THEN BRANCH TO NEXT MODULE
         SPACE 3
LOAD    EQU   *
***********************************************************************
*        THIS SUBROUTINE LOADS THE IMAGE (ID IN SPWREPID) FROM IMAGELIB
*        IT RETURNS ON REGISTER RRET, WITH THE IMAGE ADDRESS IN RIMAG
***********************************************************************
*
         MVC   SPWUCS2H,SPWREPID        SET UP PARM FOR LOAD     Y02072
         L     R1,SPRIDCBA              GET SYS1.IMAGELIB DCB    Y02072
*                                       ADDRESS                  S20202
*
         MODESET  EXTKEY=DATAMGT                                 YM5703
         SPACE
         LOAD  DE=SPWUCSMB,DCB=(1)      LOAD THE IMAGE           YM5703
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=8                       YM5703
         SPACE
         LR    RIMAG,R0                 RETAIN ADDR OF IMAGE LOADED
         BR    RRET                     RETURN TO SUBR CALLER    Y02072
         SPACE 3
WTOR122  EQU   *
*
***********************************************************************
*
*   WTOR 'IEC122D XXX,YYYY UCS IMAGE NOT FOUND' TO REQUEST AN
*   ALTERNATE USC IMAGE TO BE USED.
*
***********************************************************************
*
         LA    RWRK2,MSG122             SPECIFY INDEX TO MESSAGE Y02072
         BAL   RRET,GETMSG              GO GET THE MESSAGE       Y02072
         BAL   RRET,FILLFLDS            THEN FILL IN UNIT, ID    Y02072
         SR    RWRK6,RWRK6              CLEAR REG                S20202
         SR    RIMAG,RIMAG              INDICATE NO IMAGE LOADED
MESSAGO  EQU   *
         TM    SPRKEY,SPRUSKEY          IF CALLED AS SYS FUNCT   Y02072
         BZ    MESSAGO2                 DO NOT SYNCH TO WTOR     Y02072
         SYNCH WTOR                     ISSUE WTOR IN PROB STATE Y02072
         B     WAIT                     THEN WAIT FOR COMPLETION Y02072
MESSAGO2 EQU   *                        SYS WTOR                 Y02072
         BAL   R14,WTOR                 ISSUE WTOR IN SUP STATE  Y02072
         B     WAIT                     THEN WAIT FOR COMPLETION Y02072
         SPACE 3
WTOR120  EQU   *
*
***********************************************************************
*
*   BEFORE UCS IMAGE IS RETRIEVED,WTOR THE FOLLOWING MESSAGE
*       'IEC120I M XXX,YYYY,FOLD,VERIFY'
*        THEN RETRIEVE THE IMAGE BEFORE WAITING FOR REPLY.
*
***********************************************************************
*
         LA    RWRK2,MSG120FV           ASSUME FOLD&VERIFY MSG   Y02072
         TM    SPWPARM1,SPWFOLD+SPWRPVER  IF FOLD AND VERIFY     Y02072
         BO    GET120                   GO SELECT MSG120FV       Y02072
         LA    RWRK2,MSG120             ASSUME NEITHER           Y02072
         BZ    GET120                   IF NEITHER GET MESSAGE   Y02072
         LA    RWRK2,MSG120V            ASSUME VERIFY MSG        Y02072
         TM    SPWPARM1,SPWVERIF        TEST IF VERIFY IS SPECIFIED
         BO    GET120                   IF SO, GO GET MESSAGE    Y02072
         LA    RWRK2,MSG120F            SELECT FOLD MESSAGE      Y02072
*
GET120   EQU   *                                                 Y02072
         BAL   RRET,GETMSG              GET WHICHEVER MSG RQSTD  Y02072
         BAL   RRET,FILLFLDS            FILL IN UNIT AND ID      Y02072
         TM    SPRKEY,SPRUSKEY          IF CALLED AS SYS FUNCT   Y02072
         BZ    GET120A                  DO NOT SYNCH TO WTOR     Y02072
*
         SYNCH WTOR                     ISSUE WTOR IN PROB STATE Y02072
         BAL   RRET,LOAD                LOAD IMAGE WHILE WAITING Y02072
         B     WAIT                     THEN WAIT FOR COMPLETION Y02072
GET120A  EQU   *                        SYS WTOR                 Y02072
         BAL   R14,WTOR                 ISSUE WTOR IN SUP STATE  Y02072
         BAL   RRET,LOAD                LOAD IMAGE WHILE WAITING Y02072
*
WAIT     EQU   *
*
         WAIT  ECB=SPWRPECB,LONG=YES    WAIT ON REPLY            Y02072
         NI    SPWFLG3,X'FF'-SPW120RQ   SET NO IEC120 REQ'D      Y02072
         XC    SPWMSGID(4),SPWMSGID     CLEAR MSG ID           @ZA25004
*
***********************************************************************
*
*   AFTER DISPLAYING MESSAGES,TEST REPLY.
*       'U' - GO CHECK FOR FCB PARAMETERS
*       'CANCEL' - GOTO CANCEL ROUTINE AND EXIT TO ENTRY POINT
*       'YYYY' - GOTO LOAD UCS BUFFER ROUTINE (IGG08102)
*       'ZZZZ' - GOTO BLDL AND LOAD ROUTINE
*
***********************************************************************
*
         OC    SPWREPLY,LOWER           OR TO ALLOW LOWER CASE REPLY
*
         LA    RWRK5,RCNORM             LOAD NORMAL RETURN CODE
         CLC   SPWREPLY(L'UBLANK),UBLANK       TEST IF REPLY = 'U'
         BE    RPLYUSE                  IF YES,GOTO EXIT ROUTINE Y02072
*
         CLC   SPWREPLY(L'CANCELCN),CANCELCN   TEST IF REPLY='CANCEL'
         BE    CANCELGO                 IF YES,GOTO CANCEL RTN
*
         CLC   SPWREPLY(L'CBLANK),CBLANK   TEST IF REPLY = 'C'
         BNE   TSTUCSID                 IF NOT,GOTO UCS ID TEST
*
CANCELGO EQU   *
*
***********************************************************************
*
*   AN OPERATOR CANCELLED THE JOB STEP BECAUSE THE SPECIFIED CHAIN IS
*   NOT AVAILABLE. RETURN CODE = X'04' IN REG.15
*   CHECK IF THE IMAGE-ID WAS SPECIFIED CORRECTLY,OR ADD THE IMAGE
*   TO SYS1.IMAGELIB
*
***********************************************************************
*
         LA    RWRK5,RCOPIMG            LOAD RETURN CODE
         B     EXITRTN                  GOTO EXIT ROUTINE
*
***********************************************************************
*
*   OPERATOR REPLIED 'U'. SET UP PARM LIST WITH UCB UCS ID       Y02072
*   AND THEN BO BLDL.                                            Y02072
*
***********************************************************************
*
RPLYUSE  EQU   *                                                 Y02072
         L     RWRK6,UCBXTADR           GET UCB UCS EXTENSION    Y02072
         USING UCBUCS,RWRK6                                      Y02072
         L     RWRK6,UCBUCSID           UCS ID TO LOAD           Y02072
         DROP  RWRK6                                             Y02072
         SPACE
         MODESET  EXTKEY=DATAMGT                                 YM5703
         SPACE
         ST    RWRK6,SPWBLUCS           UCS ID TO BLDL PARM LST  Y02072
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=8                       YM5703
         SPACE
         ST    RWRK6,SPWREPID           SAVE UCS ID FOR COMPARE  Y02072
         B     ISSUEDEL                 GO DELETE IMAGE LOADED   Y02072
         SPACE 2
*
***********************************************************************
*
*   REPLY ANALYSIS ROUTINE
*
***********************************************************************
*
TSTUCSID EQU   *
         L     RWRK6,SPWREPID           SAVE PREVIOUS ID         Y02072
         MVC   SPWREPID,BLANKS          BLANK FIELD FOR NEW ID   Y02072
         LA    RWRK7,SPWREPLY           LOAD REPLY ADDR
         USING CHAR,RWRK7
         MVI   SPWRPECB,BLANK           ENSURE BLANK AFTER REPLY Y02072
*
         LA    RWRK8,L'SPWREPID+1       SET LIMIT ON ID SCAN     Y02072
         BAL   RRET,SCAN                GET LENGTH OF ID FIELD   Y02072
         BZ    REPNULL                  NULL REPLY IF ZERO       Y02072
         EX    RWRK8,MVCREP             MOVE ID TO SPWREPID      Y02072
*
*   PROCESS FOLD OPTION
*
         BAL   RRET,DELIM               CHECK FOR COMMA AFTER ID Y02072
*                                       IF COMMA PRESENT,
*                                       OPERATOR HAS SET OPTIONS
         MVI   SPWFLG1,0                RESET USER OPTIONS       Y02072
         LA    RWRK8,L'FOLDCN+1         SET LIMIT ON 'FOLD' SCAN Y02072
         BAL   RRET,SCAN                GET LENGTH OF FOLD OPT   Y02072
         BZ    VTEST                    OMITTED--TEST FOR VERIFY Y02072
         EX    RWRK8,CLCFOLD            CHECK CONTENTS OF OPTION Y02072
         BNE   ERRORTN                  ERROR IF NO MATCH        Y02072
         OI    SPWFLG1,SPWFOLD          TURN ON FOLD OPTION      Y02072
*
*   PROCESS VERIFY OPTION
*
VTEST    EQU   *                                                 Y02072
         BAL   RRET,DELIM               COMMA AFTER FOLD?        Y02072
         LA    RWRK8,L'VERIFYCN+1       SET 'VERIFY' SCAN LIMIT  Y02072
         BAL   RRET,SCAN                GET LENGTH OF OPTION     Y02072
         BZ    ERRORTN                  ERROR IF FIELD OMITTED   Y02072
         EX    RWRK8,CLCVER             VERIFY CONTENTS OF OPT   Y02072
         BNE   ERRORTN                  ERROR IF NO MATCH        Y02072
         OI    SPWFLG1,SPWVERIF         TURN ON VERIFY OPTION    Y02072
*
*   BE SURE NO MORE FIELDS ARE PRESENT
*
         BAL   RRET,DELIM               NORM WILL NOT RETURN     Y02072
         B     ERRORTN                  IS AN ERROR IF DOES      Y02072
*
*   EXECUTED INSTRUCTIONS DURING SCAN
*
MVCREP   MVC   SPWREPID(0),CHAR         MOVE ID                  Y02072
CLCFOLD  CLC   FOLDCN(0),CHAR           VERIFY FOLD OPTION       Y02072
CLCVER   CLC   VERIFYCN(0),CHAR         CHECK VERIFY OPTION      Y02072
CLCBLNK  CLC   CHAR1(0),CHAR2           CHECK FOR ALL BLANK      Y02072
*
*   SUBROUTINES USED DURING SCAN
*
SCAN     EQU   *                                                 Y02072
***********************************************************************
*        INPUT IS MAX DATA LENGTH+1 IN RWRK8 AND POSITION IN RWRK7
*        NORMAL OUTPUT IS DATALENGTH-1 IN RWRK8
*        IF DATALENGTH IS ZERO, RETURNS WITH CONDITION CODE ZERO
*        IF LIMIT EXCEEDED, GOES TO ERRORTN
*        THIS SUBROUTINE USES RWRK1 AND RWRK2, AND RETURNS ON RRET
***********************************************************************
         LR    RWRK2,RWRK8              SAVE LIMIT LENGTH        Y02072
SCAN2    CLI   CHAR1,COMMA              IF A COMMA IS FOUND      Y02072
         BE    SCAN4                    STOP THE SCAN            Y02072
         CLI   CHAR1,BLANK              OR A BLANK IS FOUND      Y02072
         BE    SCAN4                    STOP THE SCAN            Y02072
         LA    RWRK7,1(RWRK7)           ELSE SCAN TO NEXT BYTE   Y02072
         BCT   RWRK8,SCAN2              LOOP IF LIMIT OK         Y02072
         B     ERRORTN                  OTHERWISE IS AN ERROR    Y02072
SCAN4    SR    RWRK2,RWRK8              DATA LENGTH              Y02072
         SR    RWRK7,RWRK2              RESET TO FIELD START     Y02072
         LTR   RWRK8,RWRK2              PUT LENGTH IN PASSBACK   Y02072
*                                       IF NO DATA, SETS CC=0
*                                       ELSE SETS CC=2 (POSITIVE)
         BCTR  RWRK8,0                  DECREMENT TO LEN-1       Y02072
         BR    RRET                     AND RETURN WITH CONDCODE Y02072
*
DELIM    EQU   *                                                 Y02072
***********************************************************************
*        INPUT IS PREV DATA LENGTH-1 IN RWRK8, DATA POS IN RWRK7
*        NORMAL OUTPUT IS NEXT DATA FIELD POS IN RWRK7
*        (IF NEXT FIELD IS OMITTED, WILL POINT TO ITS DELIMITER)
*        IF DELIMITER FOR PREVIOUS FIELD IS BLANK,ROUTINE DOES
*        NOT RETURN, BUT VERIFIES THAT REMAINDER OF REPLY AREA IS
*        BLANK, THEN CONTINUES WITH NEXT FUNCTION.
*        IF INVALID DELIMITOR SITUATION IS FOUND, GOES TO ERRORTN
*        THIS SUBROUTINE USES RWRK2 AND RETURNS ON RRET
***********************************************************************
         LA    RWRK7,1(RWRK7,RWRK8)     INCR PAST DATA FIELD     Y02072
         CLI   CHAR1,BLANK              IF BLANK DELIMITER       Y02072
         BE    SWEEP                    THEN GO CHECK REMAIN     Y02072
         LA    RWRK7,CHAR2              POINT PAST DELIMITER     Y02072
         CLI   CHAR1,BLANK              CHECK FOR COMMA-BLANK    Y02072
         BE    ERRORTN                  WHICH IS AN ERROR        Y02072
         BR    RRET                     OTHERWISE RETURN         Y02072
*
*   CLEAN UP AFTER SCAN
*
*        IF OPERATOR REPLIED WITH A NULL MESSAGE, TREAT IT AS IF
*        HE REPLIED WITH THE PREVIOUS UCS ID
*
REPNULL  ST    RWRK6,SPWREPID           KEEP PREVIOUS ID         Y02072
*
SWEEP    LA    RWRK2,SPWREPLY+L'SPWREPLY-1  FIND END OF AREA     Y02072
         SR    RWRK2,RWRK7              LENGTH-1 OF AREA LEFT    Y02072
         BNH   TSTNAME                  END OF AREA--IS OK       Y02072
         BCTR  RWRK2,0                  DECR TO BLANKS-2         Y02072
         EX    RWRK2,CLCBLNK            IF FIRST N-1 BYTES DON'T Y02072
*                                       MATCH LAST N-1 BYTES     Y02072
         BNE   ERRORTN                  THEN SOME BYTE NON-BLANK Y02072
*                                       ELSE CONTINUE            Y02072
         DROP  RWRK7
*
TSTNAME  EQU   *
*
***********************************************************************
*
*   TEST REPLY ID = SPECIFIED ID
*       NO - GO BACK REPEAT BLDL/LOAD TO LOAD REPLIED IMAGE
*       YES - BRANCH TO MODULE IGG08102
*
***********************************************************************
*
         C     RWRK6,SPWREPID           TEST IF SAME AS PREV. ID Y02072
         BE    XCTLRTN                  IF YES,GOTO NEXT MODULE
*
FINDUCS  EQU   *
*
***********************************************************************
*
*   WHEN AN ALTERNATE IMAGE IS SPECIFIED.
*   TEST IF THE REPLIED UCS IMAGE IS TO BE LOADED.
*
***********************************************************************
*
         L     RWRK6,SPWREPID           LOAD REPLIED UCS ID      Y02072
         SPACE
         MODESET  EXTKEY=DATAMGT                                 YM5703
         SPACE
         ST    RWRK6,SPWBLUCS           STORE IT FOR BLDL        Y02072
         SPACE
         MODESET  KEYADDR=SPRKEY,WORKREG=12                      YM5703
         SPACE
         MVC   SPWPARM1,SPWFLG1         MOVE REPLIED OPTION      Y02072
*
         L     RWRK5,UCBXTADR           GET ADDR OF UCB PTR EXT  S20202
         USING UCBUCS,RWRK5
         C     RWRK6,UCBUCSID           ARE UCS ID'S EQUAL?      S20202
         BNE   DELETE                   IF NOT,GOTO DELETE ROUTINE
         NI    SPWFLG3,X'FF'-SPW120RQ   SET NO IEC120 REQ'D      Y02072
*
*   WHEN IDS ARE EQUAL,TEST LOAD MODES ARE EQUAL
*
         MVC   SPWFLG8,UCBUCSOP         MOVE UCS OPT BITS FROM   S20202
*                                       UCB                      S20202
         XC    SPWFLG8,SPWPARM1         XLUSIVE OR THE REPLY BITS
*
         TM    SPWFLG8,SPWFOLD          TEST IF LOAD MODES ARE SAME
         BO    DELETE                   IF NOT,GOTO DLETE ROUTINE
*
***********************************************************************
*
*   TEST IF VERIFY IS SPECIFIED.
*       YES - SET SWITCH AND GO DELETE                           Y02072
*       NO  - GO DELETE                                          Y02072
*
***********************************************************************
*
         TM    SPWPARM1,SPWVERIF        TEST IF VERIFY IS SPECIFIED
         DROP  RWRK5
         BNO   DELETE                   IF NOT, DELETE PREVIOUS  Y02072
*                                         IMAGE                  Y02072
         OI    SPWFLG2,SPWENTVR         SET SWITCH FOR VERIFY    Y02072
*
DELETE   EQU   *
*
***********************************************************************
*
*   TEST IF THE IMAGE HAS BEEN LOADED
*
***********************************************************************
*
         LTR   RIMAG,RIMAG              TEST IF THE IMAGE BEEN LOADED
         BZ    BLDLRTN                  IF NOT GOTO BLDL ROUTINE Y02072
*
***********************************************************************
*
*   DELETE THE IMAGE LOADED AND GO BACK TO BLDL ROUTINE TO LOCATE
*   NEW IMAGE
*
***********************************************************************
*
ISSUEDEL EQU   *                                                 Y02072
         DELETE EPLOC=SPWUCSIM          DELETE THE LOADED IMAGE
         SR    RIMAG,RIMAG              INDICATE NOTHING LOADED  Y02072
         ST    RIMAG,SPWUCS2H                                    Y02072
         B     BLDLRTN                  GOTO BLDL ROUTINE
         SPACE 3
ERRORTN  EQU   *
*
***********************************************************************
*
*   WTO 'IEC125 ERROR - REPEAT REPLY' AND GO BACK TO REPLY ANALYSIS
*
***********************************************************************
*
         LA    RWRK2,MSG125             SPECIFY ERROR MESSAGE    Y02072
         BAL   RRET,GETMSG              GO GET MESSAGE           Y02072
         B     MESSAGO                  GO TO ISSUE MSG ROUTINE    DM0Q
         EJECT
EXITRTN  EQU   *
*
***********************************************************************
*
*   DELETE IMAGE IF IT HAS BEEN LOADED
*
***********************************************************************
*
         LTR   RIMAG,RIMAG              TEST IF IMAGE BEEN LOADED
         BE    CKFORFCB                 IF NOT GO CK FOR FCB     S20202
*                                       PARAMETER                S20202
*
         DELETE EPLOC=SPWUCSIM          DELETE THE IMAGE LOADED  Y02072
*
         SR    RIMAG,RIMAG              INDICATE NOTHING LOADED  Y02072
         ST    RIMAG,SPWUCS2H                                    Y02072
*
CKFORFCB EQU   *                                                 S20202
*
***********************************************************************
*        IF DEVICE HAS AN FCB, BRANCH TO ROUTINE TO PROCESS IT
*        OTHERWISE GO CLEAN UP AND EXIT
***********************************************************************
*
         CLI   UCBTBYT4,UCB41403        CK IF DEVICE IS A 1403   Y02072
         BE    FREEMAIN                 YES GO FREE MESSAGE/WORK Y02072
*                                       AREA                     S20202
*
*   GO BRANCH TO IGG08103 TO LOAD FCB
*
         L     R15,ID3                  ADDR. OF IGG08103      @Z40MSMI
         BR    R15                      BRANCH TO MODULE       @Z40MSMI
*
FREEMAIN EQU   *
*
***********************************************************************
*
*   EXIT ROUTINE - (1) CLOSE IMAGELIB DCB
*                  (2) DELETE MESSAGE CSECT
*                  (3) FREEMAIN MESSAGE/WORK AREA
*                  (4) FREEMAIN BLDL PARAMETER LIST              YM5703
*                  (5) RESTORE IOB AND EXIT TO ENTRY POINT
*
***********************************************************************
*
         L     RWRK1,SPRIDCBA           GET SYS1.IMAGELIB DCB    Y02072
*                                       ADDRESS                  S20202
         MODESET EXTKEY=ZERO            SWITCH TO SVRB KEY       Y02072
*
         SR    RWRK6,RWRK6              INDICATE NO IMAGELIB DCB Y02072
         ST    RWRK6,SPRIDCBA                                    Y02072
*
         IMGLIB CLOSE,(RWRK1)           CLOSE IMAGELIB DCB       S20202
*
         ST    RWRK6,SPRMSG             NO LONGER LOADED         Y02072
*
         DELETE EP=IGGMSG01             DELETE MESSAGE CSECT     Y02072
*
         ST    RWRK6,SPRIOBSV           INDICATE IOB RESTORED    Y02027
         MODESET KEYADDR=SPRKEY,WORKREG=1                        Y02072
*
* RESTORE IOB TO ORIGIONAL STATUS                                Y02072
*
         MVC   IOBFLAG1(4),SPWFLGSV     RESTORE FLAGS            Y02072
         MVC   IOBSTART,SPWSTRSV        RESTORE IOB START        Y02072
*
*  ISSUE FREEMAINS FOR SETPRT WORK AREA AND BLDL PARM LIST       YM5703
*
         FREEMAIN R,LV=SPWLNGTH,A=(RSPW),SP=SPWPOOL            @Z40MSAP
*
         SPACE
         MODESET  EXTKEY=DATAMGT        KEY OF BLDL PARM LIST    YM5703
         SPACE
         ST    RWRK6,SPWWKADR           INDIC WORK AREA FREED    YM5703
         FREEMAIN  R,LV=SPW5LNTH,A=(RBLDL),SP=SPW5POOL           YM5703
         SPACE
         MODESET  EXTKEY=SUPR                                    YM5703
         SPACE
         ST    RWRK6,SPRBLDLA           INDIC BLDL LIST FREED    YM5703
         LR    R15,RWRK5                LOAD RETURN CODE
         L     R14,SPREXIT              GET EXIT PROLOG ADDR     Y02072
         BR    R14                      EXIT                     Y02072
*
***********************************************************************
*
*   BRANCH TO IGG08102
*
***********************************************************************
*
XCTLRTN  EQU   *
         L     R15,ID2                  ADDR. OF IGG08102      @Z40MSMI
         BR    R15                      BRANCH TO MODULE       @Z40MSMI
         EJECT
WTOR     EQU   *                                                 Y02072
***********************************************************************
*
*   CLEAR REPLY AREA AND REPLY UCS ID SAVE AREA
*   THEN ISSUE WTOR IN PROBLEM STATE
*
***********************************************************************
*
         MVC   SPWREPLY,BLANKS          CLEAR REPLY AREA
         MVI   SPWRPECB,0               RESET REPLY ECB
*
         WTOR  MF=(E,SPWRPLYA)          ISSUE WTOR IN PROB STATE Y02072
         ST    R1,SPWMSGID              SAVE MSG ID FOR DOM    @ZA25004
         OI    SPWMSGID,X'80'           SET FLAG FOR ONE MSG   @ZA25004
*
         BR    R14                      RETURN TO SYNCH          Y02072
         SPACE 3
***********************************************************************
*        THIS SUBROUTINE FINDS A MESSAGE IN THE MESSAGE CSECT
*        AND MOVES IT INTO THE SETPRINT WORK AREA
*        INPUT: RWRK2 CONTAINS AN INDEX OFFSET (MSG NUMBER * 2)
*               SPRMSG CONTAINS THE ADDRESS OF THE MESSAGE CSECT
*        ADDRESSIBILITY REQUIRED:
*               SVRB EXTENDED SAVE AREA
*               SETPRT WORK AREA
*        OUTPUT:RWRK2 POINTS TO MESSAGE TEXT IN MSG CSECT
*               RWRK8 POINTS TO THE MSG ENTRY IN MSG CSECT
*               SPWMSGTX CONTAINS A COPY OF THE MESSAGE TEXT
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS EXCEPT RWRK2 AND RWRK8 ARE TRANSPARENT
***********************************************************************
GETMSG   L     RWRK8,SPRMSG             PICK UP MSG CSECT ADDR   Y02072
         USING MSGINDEX,RWRK8                                    Y02072
         AH    RWRK8,MSGINDOF(RWRK2)    ADD ENTRY OFFSET         Y02072
         USING MSGENTRY,RWRK8                                    Y02072
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGOFF             PICK UP TEXT OFFSET      Y02072
         AR    RWRK2,RWRK8              GET PTR TO TEXT          Y02072
         USING MSGTXT,RWRK2                                      Y02072
         MVC   SPWMSGTX,MSGTXT          MOVE IT INTO WORK AREA   Y02072
         BR    RRET                     RETURN TO CALLER         Y02072
         DROP  RWRK2,RWRK8                                       Y02072
         SPACE 2
***********************************************************************
*        THIS ROUTINE FILLS IN THE UNIT NAME AND IMAGE ID
*        IN MESSAGES WHICH HAVE ALREADY BEEN MOVED TO THE WORK AREA
*        INPUT: RWRK8 POINTS TO THE MESSAGE ENTRY IN MSG CSECT
*               SPWREPID CONTAINS THE IMAGE ID TO FILL IN
*        ADDRESSIBILITY REQUIRED:
*               UCB
*               SETPRT WORK AREA
*        OUTPUT:SPWREPID AND UCBNAME HAVE MEEN MOVED TO THE
*               APPROPRIATE OFFSETS FROM SPWMSGTX
*               RWRK8 IS UNCHANGED FROM INPUT
*        THIS ROUTINE RETURNS ON REGISTER RRET
*        ALL REGISTERS EXCEPT RWRK2 ARE TRANSPARENT
***********************************************************************
FILLFLDS EQU   *                                                 Y02072
         USING MSGENTRY,RWRK8                                    Y02072
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGOFF1            PICK UP FIRST OFFSET     Y02072
         LA    RWRK2,SPWMSGTX(RWRK2)    POINT TO VAR IN WORKAREA Y02072
         MVC   0(L'UCBNAME,RWRK2),UCBNAME  MOVE IN UCBNAME       Y02072
         SR    RWRK2,RWRK2                                       Y02072
         IC    RWRK2,MSGOFF2            PICK UP SECOND OFFSET    Y02072
         LA    RWRK2,SPWMSGTX(RWRK2)    POINT TO VAR IN WORKAREA Y02072
         MVC   0(L'SPWREPID,RWRK2),SPWREPID  MOVE IN IMAGE ID    Y02072
         BR    RRET                                              Y02072
         DROP  RWRK8                                             Y02072
         EJECT
***********************************************************************
*              CONSTANTS
***********************************************************************
*
FULLWORD DS    0F                      FORCE TO FULLWORD         M5143
*                                       BOUNDARY                 M5143
BLDLCNST DC    AL2(1,SPWBLDLN)          BLDL LIST HEADER         Y02072
UCSCONST DC    C'UCS1'                  UCS IMAGE MEMBER NAME
FOLDCN   DC    C'FOLD'                  MESSAGE 'FOLD'
VERIFYCN DC    C'VERIFY'                MESSAGE 'VERIFY'
CANCELCN DC    C'CANCEL'                MESSAGE 'CANCEL'
UBLANK   DC    C'U '                    REPLY = 'U'
CBLANK   DC    C'C '                    REPLY = 'C'
VBLANK   DC    C'V '                    REPLY = 'V'
BLANKS   DC    CL16' '                  CONSTANT =BLANKS         S20202
LOWER    EQU   BLANKS                   MASK TO ALLOW LOWER CASE ALPHAS
*
*   BRANCH TABLE
*
ID2      DC    V(IGG08102)              UCS IMAGE LOAD         @Z40MSMI
ID3      DC    V(IGG08103)              FCB IMAGE LOAD         @Z40MSMI
*
*        PATCH AREA
*
PATCH    DC    25H'0'                   PATCH AREA               YM5703
END      EQU   *                        END OF MODULE            Y02072
         TITLE 'IGG08101 - SETPRT LOAD 2 - DSECTS'
         DCBD  DSORG=PS
         EJECT
SRT      DSECT
*
         IEFUCBOB
         EJECT
         IEZDEB
         EJECT
         IEZIOB
         EJECT
         IHAECB
         EJECT
         IGGSPW
         EJECT
CHAR     DSECT
*
***********************************************************************
*
*        THIS DSECT IS USED TO SCAN THE REPLY FROM THE OPERATOR
*        IT REDEFINES SPWREPLY AND SPWREPID
*
***********************************************************************
*
CHAR1    DS    C                        FIRST CHARACTER
CHAR2    DS    C                        SECOND CHARACTER
CHAR3    DS    C                        THIRD CHARACTER
         ORG   CHAR1+(SPWREPID-SPWREPLY)                         Y02072
CHARSAV  DS    C                        USED TO SAVE REPLY
*                                       IN SPWREPID
*        THE FOLLOWING EQUATES ARE USED IN THE SCAN
BLANK    EQU   C' '                     A BLANK
COMMA    EQU   C','                     A COMMA
ALPHAV   EQU   C'V'                     V
ALPHAF   EQU   C'F'                     F
ALPHA    EQU   X'C0'                    USED TO CHECK IF CHAR ALPHA
         EJECT
         IHASPP
         EJECT
         IGGMSG                                                  Y02072
         END
