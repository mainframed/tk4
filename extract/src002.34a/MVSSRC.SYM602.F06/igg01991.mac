 TITLE 'IGG01991 - SAM STG 3 OPEN EXEC FOR VARIABLE LNGTH/SPANNED RECS'
IGG01991 CSECT
*MODULE NAME - IGG01991                                          Y02072
*
*DESCRIPTIVE NAME - LOAD ACCESS METHOD ROUTINES                  Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*          RELEASE 20 DELETIONS                                       *
*1262351400                                                      M5860
*1262                                                            S20038
*1262134600,192300-192420                                        A32160
*1262112000,321000,323000,330000,347000,353780,374000-434000,    S20201
*1262436500,533000,535000,623000,625600                          S20201
*1262506000-525000,604000-622700                                 M4028
*          RELEASE 21 DELETIONS                                       *
*1202134200-134800,192060-192840,258000-306000,348000-353000,    S21040
*1202357000,528380-530460,533000,592000,625600-626200            S21040
*1202346300                                                      A49371
*
*        VS 2 RELEASE 02 DELETIONS
*001500,011500,013600,014100,175600-175900,190600,191500-192600, Y02072
*320300-320440,320950-321090,331530-331980,347000,355000,        Y02072
*371800-371920,501050-501900,606880-615880,623300,403000,463000  Y02072
*458000-459000,485000-497000,528160-528300                       Y02072
*                                                                YM1141
*                                                                YM1140
*                                                                YM5922
*
*          VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*
*          VS2037 CHANGES
*C187700,187800,346000-346360                                  @ZA28034
*STATUS CHANGE LEVEL 005
*
*FUNCTION/OPERATION - THIS MODULE IS A CONTINUATION OF MODULE
*    IGG01915 AND LOADS THE END-OF-BLOCK ROUTINES AND ANY SIO
*    APPENDAGES REQUIRED.  WHICH SUBROUTINES ARE LOADED WAS
*    DETERMINED BY PREVIOUS OPEN EXECUTORS.  THE ADDRESSES OF THE
*    LOADED MODULES ARE PLACED IN THE DCB AND THE ID IN THE
*    SUBROUTINE ID SECTION OF THE DEB.
*
*ENTRY POINTS - THE MODULE IS ENTERED BY MEANS OF AN XCTL FROM
*    IGG01915.
*
*INPUT - SEE DESCRIPTION OF REGISTER CONTENTS.
*
*OUTPUT - SUBROUTINES LOADED, ADDRESSES IN DCB, ID'S IN DEB
*
*EXTERNAL ROUTINES - NONE
*EXITS - NORMAL - XCTL TO IGG01911                               Y02072
*      - ERROR - NONE
*
*TABLES/WORKAREAS - DESCRIBED BY DSECTS AT END OF MODULE LISTING
*
*ATTRIBUTES - REENTRANT, REUSABLE, SUPERVISOR STATE,             Y02072
*             RUNS IN DATA MANAGEMENT KEY                        Y02072
*
*
*
* REGISTER CONVENTIONS
*
RE       EQU   0                        WORK REG5
RWK1     EQU   RE                       WORK REGISTER            Y02072
RF       EQU   1                        WORK REG6
R1       EQU   RF                       PARM REG                 YM1140
RDCB     EQU   2                        DCB
RBASE    EQU   3                        BASE
RCORE    EQU   4                        WORE AREA
RPAR     EQU   5                        TOP OF PARAMETER
RWTG     EQU   6                        TOP OF WTG TABLE
RPARC    EQU   7                        CURRENT PARAMETER
RWTGC    EQU   8                        CURRENT TRANS LOAD
RTIOT    EQU   9                        TIOT
RUCB     EQU   10                       UCB
RDEB     EQU   11                       DEB
RB       EQU   12                       WORK REG1
RC       EQU   13                       WORK REG2
RBRANCH  EQU   RC                       BRANCH REGISTER          Y02072
RD       EQU   14                       WORK REG3
RJ       EQU   15                       WORK REG4
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
***********************************************************************
*
* MASK'S TO TEST PARAMETER LIST WITH
*
*********************************************************************
INP      EQU   X'0F'                    MASK
OUTP     EQU   X'0F'                    MASK
UPDATE   EQU   X'04'                    MASK
INOUT    EQU   X'03'                    MASK
OUTIN    EQU   X'07'                    MASK
RDBACK   EQU   X'01'                    MASK
INPRDBK  EQU   X'0E'               MASK TO CK INPUT OR RDBACK      UT18
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
FRTYATE  EQU   48                       MASK
DISPSN   EQU   X'0'                     MASK
*
RCDRYOF  EQU   6                        OFFSET IN JFCBMASK TO    S20201
*                                       RCD                      S20201
*                                       READY MASK
THREE    EQU   3                        CONSTANT OF THREE        S20201
FIVE     EQU   5                        FIVE BYTE QUANTITY       S20201
D0       EQU   0                        DISPLACEMENT OF 0        S20201
D1       EQU   1                        DISPLACEMENT OF 1        S20201
D5       EQU   5                        DISPLACEMENT OF 5        S20201
D6       EQU   6                        DISPLACEMENT OF 6        S20201
D12      EQU   12                       DISPLACEMENT OF TWELVE   S20201
D13      EQU   13                       DISPLACEMENT OF 13       S20201
D17      EQU   17                       DISPLACEMENT OF 17       S20201
D25      EQU   25                       DISPLACEMENT OF 25       S20201
*
*
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
BIN      EQU   36
BEXT     EQU   38
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE   EQU   X'01'                    MASK
*
*
STOWB    EQU   X'80'                    MASK
WRTCK    EQU   X'80'                    MASK
OVRFLO   EQU   X'20'                    MASK
PCI      EQU   X'20'                    MASK
MINKEY   EQU   X'01'                    MASK
CONCAT   EQU   X'FF'                    MASK
UTFMASK  EQU   X'02'               MASK FOR TOTALING FACILITY      UT18
UPDATEB  EQU   X'80'                    MASK                     S19015
BYPASS   EQU   X'10'               BYPASS DOS EMBEDDED CHKPT     S21040
*                                  RCDS IN TAPE DATA SETS
*
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB    EQU   X'01'                    MASK
BSAMBIT  EQU   X'00'                    MASK
PAM      EQU   X'02'                    MASK
*
******************************************************************
ASISVLN  EQU   9                        DBLWRDS FOR IRB WKA      YM1141
ADLEN    EQU   3                        LENGTH OF AN ADDR        S19015
TWOBYTES EQU   16                       NO OF BITS IN 2 BYTES    S19015
NOID     EQU   X'00'                    INDICATE NO MORE MODULES S19015
BFTEKR   EQU   X'20'                    BDAM VS                  S19015
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB     EQU   X'40'                    MASK
PUTB     EQU   X'40'                    MASK
READB    EQU   X'20'                    MASK
WRITEB   EQU   X'20'                    MASK
POINTB   EQU   X'04'                    MASK
CNTRLB   EQU   X'02'                    MASK
*
*
*********************************************************************
* MASKS FOR DEVICES TO BE SUPPORTED
*
*
*********************************************************************
*
NORCDRY  EQU   X'20'                    RCD READY MASK           S20201
SDINDIC  EQU   X'08'                    SEARCH DIRECT INDICATOR  S20201
TRKOVFL  EQU   X'20'                    TRK OVERFLOW MASK        S20201
*
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN    EQU   X'30'                    MASK
COMPLETE EQU   X'80'                    MASK
FIRSTIOB EQU   X'01'                    MASK
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
CYCLICB  EQU   X'20'
EXCHANGB EQU   X'10'
SIMPLEB  EQU   X'40'
EXCHCYCL EQU   X'30'
*
*
* MODES  OPERATION FOR QSAM
LOCATEB  EQU   X'08'
MOVEB    EQU   X'10'
SUBSTUTB EQU   X'04'
DATAMODE EQU   X'01'
* COMMAN YTES FOR THE 2841
SRCHE    EQU   X'31'
WRTCKD   EQU   X'1D'
RDC      EQU   X'92'
RDKD     EQU   X'8E'
RDD      EQU   X'86'
TIC      EQU   X'08'
* MASKS   RECORD FORMATS
STANDRDF EQU   X'08'
FORMATU  EQU   X'C0'
FORMATF  EQU   X'80'
FORMATV  EQU   X'40'
FORMATD  EQU   X'20'                    D FORMAT RECORDS         S20038
SPANNED  EQU   X'08'
BLOCKED  EQU   X'10'
FIXEDBLK EQU   X'90'
*   CHAN  CONTROL WORD FLAGS
SKIP     EQU   X'10'
SLI      EQU   X'20'
CC       EQU   X'40'
DATACH   EQU   X'A0'
SLICC    EQU   X'60'
SLICCSK  EQU   X'70'
KEYS     EQU   X'01'
QSAM     EQU   X'01'
ASA      EQU   X'04'
BKREAD   EQU   X'01'
URBITS   EQU   X'40'
TAPEB    EQU   X'80'
DABIT    EQU   X'20'
R25      EQU   25                       CONSTANT
R3       EQU   3                        CONSTANT
R5       EQU   5                        CONSTANT
OFF      EQU   X'7F'                    MASK TO TURN OFF UPDATE  S19015
*                                           BIT
BYTE     EQU   1                        ONE CONSTANT             S19015
ABENDISP EQU   17                       ABEND DISPLACEMENT
IRBDISP  EQU   24                       IRB DISPLACEMENT         S19015
ADDISP   EQU   25                       ADDRESS DISPLACEMENT     S19015
*
*
         BALR  RBASE,RE                 SET BASE
         USING SLDA,RBASE
         USING IHADCB,RDCB
         USING BLDEB,RDEB
         USING FORCORE,RCORE
*
*
SLDA     EQU   *
*
         B     BEGIN                    BR AROUND CONSTANTS      Y02072
         DC    C'IGG01991'              MODULE NAME              Y02072
         DC    C'@ZA28034'              LAST SHIP CODE         @ZA28034
         DC    C'02/02/78'              LAST DATE MODIFIED     @ZA28034
BEGIN    DS    0H                                                Y02072
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RCORE,4(RWTGC)           GET WORK AREA
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         MVI   22(RWTG),X'CB'          CHANGE DE ATTR.TO ONLY LOADABLE
*
         L     RTIOT,DEBAPPAD           GET APPENDAGE ADDRESS
         USING AVT,RTIOT
         SR    RUCB,RUCB                CLEAR REG
         SR    RF,RF                    CLEAR RER
         SR    RD,RD
         IC    RD,DEBNMSUB              GET NBR OF MODULES LOADED
         IC    RUCB,DEBNMEXT            GET NUMBER OF EXTENTS
         IC    RF,DEBEXSCL              GET SCALING FACTOR
         SLL   RUCB,0(RF)               SHIFT ACCORDING TO EXTENT SIZE
         IC    RF,DEBAMLNG              GET ACCESS METHOD LENGTH
         LA    RUCB,0(RF,RUCB)          ADD TO POINT TO SUBRT ID FLD
         LA    RUCB,32(RUCB,RDEB)       ADD BASIC DEB SZ TO DEB AD
*
*  RUCB NOW POINTS TO THE SUBROUTINE ID FIELD IN THE DEB
*  BUT MUST BE INCREMENTED TO POINT BEYOND THE LAST ENTRY          UT18
*
SLDAA    EQU   *                                                   UT18
         CLI   0(RUCB),X'00'            IS RUCB BEYOND LAST ENTRY  UT18
         BE    SLDAB                    BR IF YES                  UT18
         LA    RUCB,2(RUCB)             INCREMENT TO NEXT ID FIELD UT18
         B     SLDAA                    TEST NEXT FIELD            UT18
*
*
*  RUCB NOW POINTS TO NEXT AVAILABLE SUBROUTINE ID FIELD IN THE    UT18
*  DEB.                                                            UT18
*
SLDAB    EQU   *                                                 S21040
*
*      GET THE EOB MODULES NEEDED FOR THIS FILE
*
SLDAPP00 EQU   *
         TM    JFCBMASK+D6,SDINDIC      SEARCH DIRECT USED       S20201
         BNO   NOSDOPT                  BRANCH NO                S20201
         LA    RB,CEAFP                 GET SEARCH DIRECT CE     S20201
         BAL   RC,SLDROUT               LOAD ROUTINE             S20201
         ST    RE,AVTCE                 APPENDAGE TABLE ENTRY FOR CE
         LA    RB,AEOESF                GET END FO EXTENT APPEN  S20201
         BAL   RC,SLDROUT               LOAD IT IN AND PUT       S20201
         ST    RE,AVTEOE                APPENDAGE TABLE ENTRY FOR EOE
         B     SLDAPP19                 GET READY TO XCTL        S20201
*
NOSDOPT  EQU   *                                                 S20201
         TM    JFCBMASK+RCDRYOF,NORCDRY ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BO    LAB001                  NO,BRANCH                 S20201
         LA    RB,AEOESF                GET READY TO LOAD IN     S20201
*                                        END OF EXT APPEN.
*                                         IGG019C4
LAB001   EQU   *                                                 S20201
         TM    DCBCIND2,UPDATEB         IS IT UPDATE             S19015
         BO    SLDAPP02                 YES, BRANCH              S19015
         TM    0(RPARC),OUTP            DCB FOR OUTPUT ONLY
         BO    SLDAPP10                 YES, BRANCH              S20201
*
*  END OF EXTENT  APPENDAGE NEEDED FOR DISK INPUT
*
         TM    DCBDEVT,X'20'           D.A. DEVICE
         BZ    SLDAPP10                NO BRANCH                 Y02072
         TM    DCBCIND1,X'40'          SEARCH DIRECT INPUT
         BNO   LAB01                    NO, LOAD CH              S20201
         B     SLDAPP03                 BRANCH                   S20201
*
LAB01    EQU   *                                                 S20201
         LA    RB,AEOE                 GET END OF EXTENT ID
         B     SLDAPP03                 LOAD                     S19015
*
SLDAPP02 EQU   *                                                 S19015
*
         LA    RB,QUEOE                 GET END-OF-EXTENT ID     S19015
*
SLDAPP03 EQU   *                                                 S19015
*
         BAL   RC,SLDROUT              LOAD ROUTINE
         ST    RE,AVTEOE                APPENDAGE TABLE ENTRY FOR EOE
*
*        LENGTH CHECKING IS REQUIRED FOR DCB
*
SLDAPP10 EQU   *
         TM    0(RPARC),OUTP            DCB FOR OUTPUT ONLY?  @ZA28034
         BO    SLDAPP14                 YES-NO LENGTH CHECK   @ZA28034
*                                       APPEN NEEDED.         @ZA28034
         TM    JFCBMASK+RCDRYOF,NORCDRY ANY DEVICES W/O RCD      S20201
*                                       READY                    S20201
         BZ    LAB002                   BRANCH IF NO             A49371
         B     AROUND                   ELSE CHECK FOR C.E. APD  A49371
LAB002   EQU   *                                                 S20201
         TM    DCBRECFM,FORMATU         U FORMAT W/RCD READY     S20201
         BM    AROUND                   NO BRANCH                Y02072
         TM    DCBRECFM,TRKOVFL         TRACK OVERFLOW USED      S20201
         BO    AROUND                   BRANCH IF YES            S20201
         LA    RB,ACEU                  GET RCD READY U FORM CE  S20201
         B     SLDAPP08                 GO LOAD ROUTINE          Y02072
AROUND   EQU   *                                                 S20201
*
*
         TM    DCBOPTCD,BYPASS          BYPASS DOS CHKPT RCD     S21040
         BO    SLDAPP11                 BRANCH IF YES            S21040
SALADS   EQU   *                                                 S20038
         TM    DCBCIND2,QSAMB           QSAM BEING USED          S19015
         BO    SLDAPP06                 YES--BRANCH              S19015
         TM    DCBBFTEK,BFTEKR          VS BDAM SUPPORT NEEDED   S19015
         BZ    SLDAPP06                 NO--CONTINUE             S19015
         LA    RB,CEAOFRD               OFFSET READ CHANNEL END  S19015
         BAL   RC,SLDROUT               GO LOAD ROUTINE          S19015
         ST    RE,AVTCE                 APPENDAGE TABLE ENTRY FOR CE
         ST    RE,AVTABNE               APPENDAGE TABLE ENTRY FOR
*                                       ABNORMAL END APPENDAGE
         L     RJ,DCBCNTRL              NO EOB MODULES NEEDED    S19015
         SRL   RJ,TWOBYTES              SHIFT OUT EOB ID BYTES   S19015
         ST    RJ,DCBCNTRL                                       S19015
         B     SLDAPP19                 GET READY TO XCTL        S20201
*
SLDAPP06 EQU   *                                                 S19015
         LA    RB,ACEV                  GET V LN CKNG APPN.
SLDAPP08 EQU   *                                                 Y02072
*
         BAL   RBRANCH,SLDROUT          GO LOAD ROUTINE          Y02072
         ST    RWK1,AVTCE               ST CE APPENDAGE          Y02072
         TM    DCBDEVT,DABIT            IS THIS DA               YM5922
         BZ    SLDAPP14                 NO, BYPASS ABN END APP   Y02072
         TM    DCBRECFM,DCBRECTO        TRACK OVERFLO            Y02072
         BO    SLDAPP17                 YES, GO GET 19C3         Y02072
         AH    RWK1,SECENTRY            ABN END ENTRY PT ADDR    Y02072
         ST    RWK1,AVTABNE             ST ADDRESS               Y02072
         B     SLDAPP17                 GO AROUND                Y02072
SLDAPP11 EQU   *
         LA    RB,DACEV                 GET V APPEND. FOR BYPASS S21040
*                                       DOS EMBEDDED CHKPT RCDS
SLDAPP12 BAL   RC,SLDROUT               LOAD ROUTINE
         ST    RE,AVTCE                 APPENDAGE TABLE ENTRY FOR CE
         MVC   ABENDISP(ADLEN,RTIOT),ADDISP(RWTG) APPENDAGE ADDR S21040
*                                    TO ABNORMAL END FIELD IN DEB
SLDAPP14 EQU   *
         TM    DCBDEVT,X'48'            PRINTER USED
         BC    14,SLDAPP17              NO BRANCH
         LA    RB,PSIO                  GET SIO APPNDAGE
*
SLDAPP15 EQU   *                                                 S19015
*
         BAL   RC,SLDROUT               LOAD ROUTINE
         ST    RE,AVTSIO                APPENDAGE TABLE ENTRY FOR SIO
         B     SLDAPP19                 SKIP TO NEXT
*
SLDAPP17 EQU   *
*
         TM    DCBCIND2,UPDATEB         IS IT UPDATE             S19015
         BNO   SLDAPP19                 NO BRANCH                S19015
*
         NI    DCBCIND2,OFF             TURN OFF UPDATE BIT      S19015
*
         TM    DCBRECFM,OVRFLO          ARE TRACK OVERFLOW       S19015
*                                       MODULES                  S19015
*                                           REQUIRED
         BZ    SLDAPP18                 NO BRANCH                S19015
*
         LA    RB,TOABNE                GET ADDRESS OF ABNORMAL  S19015
*                                           END APPEND. FOR TRACK
*                                            OVERFLOW INPUT
         BAL   RC,SLDROUT               LOAD ROUTINE             S19015
         ST    RE,AVTABNE               APPENDAGE TABLE ENTRY FOR
*                                       ABNORMAL END APPENDAGE
*
         LA    RB,ASYNCH                GET ID OF ASYNCHRONOUS   S19015
*                                       RTN                      S19015
         BAL   RC,SLDROUT               LOAD ROUTINE             S19015
*
******************************************************************
*
*        BUILD IRB FOR IGG019C1 - WORKAREA IS USED IN 19C3
*
         CIRB  EP=(0),KEY=PP,MODE=PP,STAB=(RE),WKAREA=ASISVLN    YM1141
*
         ST    RF,IRBDISP(RWTG)         STORE ADDRESS OF IRB     S19015
         MVC   DEBIRBAD+BYTE(ADLEN),ADDISP(RWTG) PUT IRB ADDR    S19015
*                                           IN DEB
*
SLDAPP18 EQU   *
*
         LA    RB,USIO                  GET SIO APPENDAGE ID     S19015
         BAL   RC,SLDROUT               GO LOAD MODULE
         ST    RE,AVTSIO                APPENDAGE TABLE ENTRY FOR SIO
*
SLDAPP19 EQU   *
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP9            ID OF NEXT EXEC        @Z30TSCF
*
         STC   RD,DEBNMSUB              STORE NO. SUB RTS LOADED
*
***********************************************************************
*
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE                  BACK TO OPEN CONTROL
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         B     ZCHEK                    COMPLETE
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
*
*
SLDROUT  EQU   *
         USING WTGMODNM,RWTG                                     Y02072
         MVC   WTGMODID,0(RB)           ID TO MOD NAME           Y02072
         DROP  RWTG                                              Y02072
         L     R1,CVTPTR                LOAD CVT ADDRESS         YM1140
         USING CVT,R1                   CVT ADDRESSABILITY       YM1140
         L     R1,CVTLINK               GET LPALIB DCB ADDRESS   YM1140
         DROP  R1                       DROP CVT BASE            YM1140
*
         LOAD  EPLOC=(RWTG),DCB=(1)                              YM1140
*
*
*
         ST    RE,24(RWTG)             TEMP STORE OF ROUTINE ADDR,
SLDROUT1 MVC   0(2,RUCB),0(RB)          STORE ROUTINES ID IN DEB
         LA    RUCB,2(RUCB)             UPDATE SUBRT PNTR
         LA    RD,1(RD)                 ONE MORE SUB RT LOADED
         BR    RC                      RETURN
*
***********************************************************************
*
*
*
*
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
FOUR     DC    H'4'                     4                        M4567
SECENTRY EQU   FOUR                     ADDITIONAL ENTRY POINT   Y02072
*                                         IN APPENDAGE           Y02072
OPIDCNST DC    C'0S'                    ID
AMIDCNST DC    C'91'                    MODULE ID                  UT18
SOP9     DC    C'93',VL3(IGG01993)      NEXT EXEC              @Z30TSCF
*
*        BELOW ARE THE SHARABLE ROUTINES USED BY BSAM / QSAM
*
*        APPENDAGES USED BY BSAM AND QSAM   ---------------------
*
AEOE     DC    C'CH'                    END OF EXTENT APPNDG NON-SF-INP
QUEOE    DC    C'AW'                    END OF EXTENT FOR UPDATE S19015
DACEV    DC    C'EJ'                    CHAN/ABNORM END APPNDG   S21040
*                                       FOR BYPASS OF DOS CHKPT RCDS
ACEV     DC    C'CJ'                    CHANNEL END APPNDG LEN CHK VREC
CEAOFRD  DC    C'BV'                    OFFSET READ CEA          S19015
PSIO     DC    C'CL'                    APPENDAGE FOR PRINTERS SIO
USIO     DC    C'CG'                    SIO FOR UPDATE           S19015
TOABNE   DC    C'C3'                    ABNORMAL END APPENDAGE   S19015
*                                       FOR OVERFLOW             S19015
ASYNCH   DC    C'C1'                    T.O. ASYNCHRONOUS ERR    S19015
ACEU     DC    C'C0'                    RCD READY U FORMT CHAN   S20201
*                                       END                      S20201
AEOESF   DC    C'C4'                    S.D.END OF EXT APPEN     S20201
CEAFP    DC    C'FP'                    SEARCH DIRECT CHANNEL    S20201
         SPACE
PATCH    DC    25H'0'                   PATCH AREA               Y02072
END      EQU   *                        END OF MODULE            Y02072
 TITLE 'IGG01991 - FORMAT OF GOTTEN COrE'
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MOD ID              Y02072
*
AVT      DSECT                          APPENDAGE VECTOR TABLE
AVTEOEPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTEOE   DS    A                        ADDR OF END OF EXTENT
*                                       APPENDAGE
AVTSIOPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTSIO   DS    A                        ADDR OF START I/O
*                                       APPENDAGE
AVTPCIPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTPCI   DS    A                        ADDR OF PCI APPENDAGE
AVTCEPG  DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTCE    DS    A                        ADDR OF CHANNEL END
*                                       APPENDAGE
AVTABNPG DS    0CL1                     NO.PAGES MODULE REQUIRES
AVTABNE  DS    A                        ADDR OF ABNORMAL END
*                                       APPENDAGE
*
CVT      DSECT
         CVT
*
*
BLDEB    DSECT
DEB      DS    0F                       ALIGN
DEBNMSUB DS    0CL1                     NO. OF SUB.
DEBTCBAD DS    CL4                      TCB ADDR.
DEBAMLNG DS    0CL1                     ACCESS METHOD LEN.
DEBDEBAD DS    CL4                      DEB ADDR.
DEBOGLGS DS    0CL1                     OPTION
DEBIRBAD DS    CL4                      IRB ADDRESS
DEBOPATB DS    0CL1                     OPTION
DEBSYSPG DS    CL4                      SYS ABEND
DEBNMEXT DS    0CL1                     NO. OF EXTENT
DEBUSRPG DS    CL4                      USER PROG.
DEBPRIOR DS    0CL1                     PRIORITY
DEBECBAD DS    CL4                      ECB ADDRESS.
DEBPROTG DS    0CL1                     PROTECTION KEY
DEBDEBID DS    0CL1                     DEB ID
DEBDCBAD DS    CL4                      DCB ADDRESS
DEBEXSCL DS    0CL1                     EXCEPTION
DEBAPPAD DS    CL4                      APPENDAGE ADDRESS
DEBDVMOD DS    0CL1                     DEVICE
DEBUCBAD DS    CL4                      UCB ADDRESS
DEBBINUM DS    CL2                      BIN NUMBER
DEBSTRCC DS    CL2                      START CYC.
DEBSTRHH DS    CL2                      START TRACK
DEBENDCC DS    CL2                      END CYCLINDER
DEBENDHH DS    CL2                      END TRACK
DEBNMTRK DS    CL2                      NO. OF TRACKS
*
           DCBD  DSORG=PS
DCBECC   EQU   DCBCHECK+1               DCB FIELD
         IKJTCB
         END
