 TITLE 'IGG01916-SAM STG 3 OPEN EXEC FOR VLR/SPANNED/TRK OVFLO/PCI'
IGG01916 CSECT
*MODULE NAME - IGG01916                                          Y02072
*
*DESCRIPTIVE NAME - LOAD ACCESS METHOD ROUTINES                  Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*          VS 2 RELEASE 2 DELETIONS                              Y02072
*002500,023000,032400,236500,238500,240500-241500,263600,586000, Y02072
*578000-580000,614000-644000,646000                              Y02072
*                                                                YM1140
*
*          VS2 RELEASE 3 DELETIONS
*D332400-333600,A333000-333608                                 @ZA01530
*                                                              @Z30TSCF
*          RELEASE 21 DELETIONS                                       *
*2963648000-654000                                               A39228
*2963031200,348000-358000,582000,688000-820000,824000-826000     S21042
*
*STATUS CHANGE LEVEL 006
*
*FUNCTION/OPERATION - THIS MODULE LOADS ACCESS METHOD SUBROUTINES FOR
*    PROCESSING VARIABLE OR SPANNED RECORDS.  IT DETERMINES WHICH
*    MODULES SHOULD BE LOADED, LOADS THEM AND ENTERS THE ADDRESS OF
*    THE LOADED MODULES IN THE APPROPRIATE DCB FIELDS AND THE ID'S IN
*    THE DEB.  IT LOADS GET/PUT OR READ/WRITE ROUTINES AND ERROR CHECK
*    ROUTINES.
*
*    THIS MODULE WAS SPLIT FOR RELEASE 18.  THE RESULTING NEW MODULE
*    IS IGG01992.
*
*ENTRY POINTS - THE MODULE MAY BE ENTERED FROM STAGE 2 EXECUTOR
*    IGG0191H.
*
*INPUT - SEE DESCRIPTION OF REGISTER CONTENTS
*
*OUTPUT - ADDRESSES OF SUBROUTINES LOADED ARE PLACED IN DCB, ID'S
*    ARE PLACED IN DEB SUBROUTINE ID SECTION.
*
*EXTERNAL ROUTINES - NONE
*
*MACROS - ACTION - MODESET, XCTL, LOAD, DMABCOND, XCTLTABL       Y02072
*
*EXITS - NORMAL - XCTL TO IGG01992 TO COMPLETE LOADING OF ACCESS
*                 METHOD SUBROUTINES.
*       - ERROR - XCTL TO PROB DET FOR WTP AND 013 ABEND
*
*TABLES/WORKAREAS - DESCRIBED BY DSECTS AT END OF MODULE LISTING.
*
*ATTRIBUTES - REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT       Y02072
*             KEY UNLESS OTHERWISE SPECIFIED, SUPERVISOR STATE   Y02072
*
* REGISTER CONVENTIONS
*
RE       EQU   0                        WORK REG5
RF       EQU   1                        WORK REG6
R1       EQU   RF                       PARM REG                 YM1140
RDCB     EQU   2                        DCB
RBASE    EQU   3                        BASE
RCORE    EQU   4                        WORE AREA
RPAR     EQU   5                        TOP OF PARAMETER
RWTG     EQU   6                        TOP OF WTG TABLE
RPARC    EQU   7                        CURRENT PARAMETER
RWTGC    EQU   8                        CURRENT TRANS LOAD
RTIOT    EQU   9                        TIOT
RUCB     EQU   10                       UCB
RDEB     EQU   11                       DEB
RB       EQU   12                       WORK REG1
RC       EQU   13                       WORK REG2
RD       EQU   14                       WORK REG3
RJ       EQU   15                       WORK REG4
T3       EQU   3
T25      EQU   25                       25
PARAR    EQU   RPARC
* MASK'S TO TEST PARAMETER LIST WITH
INP      EQU   X'0F'                    MASK
OUTP     EQU   X'0F'                    MASK
INOUT    EQU   X'03'                    MASK
OUTIN    EQU   X'07'                    MASK
RDBACK   EQU   X'01'                    MASK
INPRDBK  EQU   X'0E'               MASK TO CK INPUT AND RDBACK     UT18
* OFFSET FOR PARAMETER TESTS
FRTYATE  EQU   48                       MASK
ONE      EQU   X'01'
DISPSN   EQU   X'0'
* OFFSETS FOR DEB REFERENCE
BIN      EQU   36
BEXT     EQU   38
* MASK'S USED TO TEST OPTION FIELDS IN DCB
DOUBLE   EQU   X'01'
STOWB    EQU   X'80'
WRTCK    EQU   X'80'
OVRFLO   EQU   X'20'
CONCAT   EQU   X'FF'
MINKEY   EQU   X'01'
PCI      EQU   X'20'
UTFMASK  EQU   X'02'               MASK FOR TOTALING FACILITY      UT18
* MASKS FOR ACCESS METHODS IN SAM
QSAMB    EQU   X'01'                    MASK
BSAMBIT  EQU   X'00'                    MASK
PAM      EQU   X'02'                    MASK
* MASKS FOR MACRO'S TO BE USED
GETB     EQU   X'40'                    MASK
PUTB     EQU   X'40'                    MASK
READB    EQU   X'20'                    MASK
WRITEB   EQU   X'20'                    MASK
POINTB   EQU   X'04'                    MASK
CNTRLB   EQU   X'02'
* MASKS FOR STATUS BITS TO BE TESTED
EXCPN    EQU   X'30'                    MASK
COMPLETE EQU   X'80'
FIRSTIOB EQU   X'01'                    MASK
* MASKS FOR BUFFER TECHNIQUE'S
EXCHANGB EQU   X'10'
SIMPLEB  EQU   X'40'
* MODES  OPERATION FOR QSAM
LOCATEB  EQU   X'08'
MOVEB    EQU   X'10'
MOVEXCHB EQU X'14'
SUBSTUTB EQU   X'04'
* COMMAN YTES FOR THE 2841
SRCHE    EQU   X'31'
WRTCKD   EQU   X'1D'
RDC      EQU   X'92'
RDKD     EQU   X'8E'
RDD      EQU   X'86'
TIC      EQU   X'08'
* MASKS   RECORD FORMATS
STANDRDF EQU   X'08'
FORMATU  EQU   X'C0'
FORMATF  EQU   X'80'
FORMATV  EQU   X'40'
SPANNED  EQU   X'08'
BLOCKED  EQU   X'10'
FIXEDBLK EQU   X'90'
*   CHAN  CONTROL WORD FLAGS
SKIP     EQU   X'10'
SLI      EQU   X'20'
DATACH   EQU   X'A0'
CC       EQU   X'40'
SLICC    EQU   X'60'
SLICCSK  EQU   X'70'
KEYS     EQU   X'01'
QSAM     EQU   X'01'
ASA      EQU   X'04'
BKREAD   EQU   X'01'
URBITS   EQU   X'40'
TAPEB    EQU   X'80'
DABIT    EQU   X'20'
FLGOFFST EQU   4                        OFFSET TO FLAG IN BCB    S19015
RAFLAG   EQU   X'80'                    RECORD AREA PRESENT      S19015
OABD076  EQU   76                                                S21042
         BALR  RBASE,RE                 SET BASE
         USING SLDA,RBASE
         USING IHADCB,RDCB
         USING BLDEB,RDEB
         USING FORCORE,RCORE
SLDA     EQU   *
         B     BEGIN                    BR AROUND CONSTANTS    @Z30TSCF
         DC    C'IGG01916'              MODULE NAME            @Z30TSCF
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'11/18/74'              LAST SHIP DATE         @Z30TSCF
BEGIN    DS    0H
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         L     RCORE,4(RWTGC)           GET WORK AREA
         MVI   22(RWTG),X'CB'          CHANGE DE ATTR.TO ONLY LOADABLE
         L     RTIOT,DEBAPPAD           GET APPENDAGE ADDRESS
         SR    RUCB,RUCB                CLEAR REG
         SR    RF,RF                    CLEAR RER
         IC    RUCB,DEBNMEXT            GET NUMBER OF EXTENTS
         IC    RF,DEBEXSCL              GET SCALING FACTOR
         SLL   RUCB,0(RF)               SHIFT ACCORDING TO EXTENT SIZE
         IC    RF,DEBAMLNG              GET ACCESS METHOD LENGTH
         LA    RUCB,0(RF,RUCB)          ADD TO POINT TO SUBRT ID FLD
         LA    RUCB,32(RUCB,RDEB)       ADD BASIC DEB SZ TO DEB AD
*
*  RUCB NOW POINTS TO THE SUBROUTINE ID FIELD IN THE DEB
*
         TM    DCBOPTCD,UTFMASK         TEST FOR TOTALING          UT18
         BZ    SLDAA                    BR IF NOT SPECIFIED        UT18
         TM    0(RPARC),INPRDBK         IS OPEN FOR INPUT/RDBACK   UT18
         BZ    SLDAA                    IF YES,NO TOTALING REQ'RD  UT18
*
*  SINCE UTF WAS SPECIFIED, THE TOTALING SAVE ROUTINE (IGG019AX)
*  WAS LOADED BY IGG0191Y IN STAGE 1 - SO IT IS NECESSARY TO       UT18
*  UPDATE THE SUBROUTINE ID POINTER (RUCB) TO POINT TO THE         UT18
*  SECOND ID SUBFIELD.                                             UT18
*                                                                  UT18
         LA    RUCB,2(RUCB)             INCREMENT POINTER BY 2     UT18
*                                                                  UT18
SLDAA    EQU   *                                                   UT18
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,NEXTMOD         ID OF NEXT MOD TO WTG  @Z30TSCF
         TM    DCBCIND2,QSAMB          DCB FOR QSAM
         BO    SLD100                  YES,BRANCH
         LA    RB,CHECK                GET ID OF CHECK ROUTINE
         B     SLD105                   BRANCH
SLD100   EQU   *
         LA    RB,GERR                 GET GERR ROUTINE ID
         TM    DISPSN(PARAR),OUTP      DCB FOR OUTPUT
         BO    SLD200                  YES, BRANCH
*
SLD105   EQU   *
         TM    DCBOFLGS,X'20'           CONCATENATION UNLIKE ATTRIBUTES
         BZ    SLDA0                   NO,GO TO LOAD ROUTINE
         BAL   RC,SLDROUT1             STORE CHECK OR GERR ID IN DEB
         B     SLDA1                    BRANCH
SLDA0    EQU   *
         BAL   RC,SLDROUT              GO TO LOAD ROUTINE
         MVC   DCBCHECZ(T3),T25(RWTG)   STORE ID IN DCB
SLDA1    EQU   *
         TM    DCBCIND2,QSAMB          DCB FOR QSAMB
         BO    SLD101                  YES,BRANCH
         LA    RB,WRH2                 GET READ WRITE ID
         B     SLD150                  GO TO LOAD ROUTINE
SLD101   EQU   *                        DETERMINE TO LOAD PROPER MODUL
         CLI   DCBLRECL,X'80'           LRECL=X
         BE    CHECKLOC                 TO CHECK WHEATHER IT IS LOCATE
SLD172   LA    RB,SGMF                  GET THE ENTRY OF TABLE
         TM    DCBMACRF,QSAMB           DATA MODE
         BO    SLD171                   IF YES, BRANCH TO IT
         TM    DCBMACRF,MOVEXCHB        MOVE OR SUBST. MODE?   @Z30TSMI
         BNZ   SLD170                   IF YES, BRANCH         @Z30TSMI
SLD173   LA    RB,2*L'NXTENTRY(RB)      STEP TO LOCATE MODE ENT  Y02072
SLD170   TM    DCBRECFM,STANDRDF        SPANNED RECORD?
         BZ    SLD150                   IF NO, BRANCH
         TM    DCBMACRZ,MOVEB           MOVE MODE?             @ZA01530
         BO    SLD175                   YES, LOAD FL           @ZA01530
         TM    DCBBFTEK,X'60'           LRI PRESENT            @ZA01530
         BO    SLD174                   YES, LOAD BP           @ZA01530
SLD175   EQU   *                                               @ZA01530
         LA    RB,L'NXTENTRY(RB)        STEP TO SPANNED MODULE   Y02072
         B     SLD150                   DONE
SLD174   LA    RB,3*L'NXTENTRY(RB)      GET SPECIAL LOCATE       Y02072
*                                       MODULE                   S19015
         B     SLD150                   ALL DONE                 S19015
*
SLD171   LA    RB,4*L'NXTENTRY(RB)      GET DATA MODE MODULE ENT Y02072
         B     SLD150                   TO LOADER
CHECKLOC TM    DCBMACRF,LOCATEB         LOCATE MODE?
         BO    SLD172                   IF YES, BRANCH
         DMABCOND OABD076,PDLOAD,RETURN=NONE,RES=NO,REGSAVE=YES  S21042X
                                        CALL PROBLEM DETERMINATION
         B     TCTLRTN                                           S21042
SLD200   LA    RB,PERR                  GET ADDRESS OF PERR ID
         BAL   RC,SLDROUT               TO LOAD SUBROUTINE
         MVC   DCBPERZ(T3),T25(RWTG)    LOAD PERR ADDR.
SLD250   LA    RB,SPMF                  (RB)=ENTRIES OF PUT MODULES
         TM    DCBMACRZ,QSAMB           DATA MODE?
         BO    SLD171                   BRANCH IF YES
         TM    DCBMACRZ,MOVEXCHB        MOVE OR SUBST. MODE?   @Z30TSMI
         BNZ   SLD170                   BRANCH IF YES          @Z30TSMI
         B     SLD173                   BRANCH IF YES
SLD150   EQU   *
         BAL   RC,SLDROUT               TO LOAD FUNCTION
         MVC   DCBGETZ(T3),T25(RWTG)   PUT ADDRESS IN DCBGET/READ
SLDEOB   EQU   *
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   RWTGC,RBASE              RETURN
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         B     ZCHEK                    TO ZERO CHECK
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
         DS    0H                       HALF WORD ALIGMENT
SLDROUT  EQU   *
         USING WTGMODNM,RWTG                                     Y02072
         MVC   WTGMODID,0(RB)           ID TO MOD NAME           Y02072
         DROP  RWTG                                              Y02072
         L     R1,CVTPTR                LOAD CVT ADDRESS         YM1140
         USING CVT,R1                   CVT ADDRESSABILITY       YM1140
         L     R1,CVTLINK               GET LPALIB DCB ADDRESS   YM1140
         DROP  R1                       DROP CVT BASE            YM1140
*
         LOAD  EPLOC=(RWTG),DCB=(1)                              YM1140
         ST    RE,24(RWTG)              TEMP STORE OF ROUTINE ADDR,
SLDROUT1 MVC   0(2,RUCB),0(RB)          STORE ROUTINES ID IN DEB
         LA    RUCB,2(RUCB)             UPDATE SUBRT PNTR
         SR    RD,RD                                             A39228
         IC    RD,DEBNMSUB              GET NO. OF SUBROUTINES   A39228
*                                       LOADED                   A39228
         LA    RD,1(RD)                 ADD ONE TO TOTAL         A39228
         STC   RD,DEBNMSUB              STORE NEW TOTAL OF       A39228
*                                       SUBROUTINES LOADED
         BR    RC                      RETURN
         EJECT
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
*
*  MODULE ID'S
*
NEXTMOD  DC    C'92',VL3(IGG01992)                             @Z30TSCF
SGMF     DC    C'AD'                                             Y02072
GMS      DC    C'FD'                                             Y02072
GL       DC    C'AB'                                             Y02072
GLS      DC    C'FB'                                             Y02072
GDS      DC    C'FF'                                             Y02072
GLSLR    DC    C'BO'                                             Y02072
SPMF     DC    C'AL'                                             Y02072
PMS      DC    C'FL'                                             Y02072
PL       DC    C'AJ'                                             Y02072
PLS      DC    C'FJ'                                             Y02072
PDS      DC    C'FG'                                             Y02072
PLSLR    DC    C'BP'                                             Y02072
GERR     DC    C'AQ'                                             Y02072
PERR     DC    C'AR'                                             Y02072
WRH2     DC    C'BA'                                             Y02072
CHECK    DC    C'BB'                                             Y02072
PDLOAD   DC    C'6M',VL3(IGG0196M)                             @Z30TSCF
OPIDCNST DC    C'0S'                     ID
AMIDCNST DC    C'16'                    MODULE ID
NXTENTRY DS    0CL2                     TO GET 2 BYTE LEN ATTR   Y02072
         SPACE 6
PATCH    DC    0H'0',50X'00'            PATCH AREA             @Z30TSCF
         EJECT
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
CVT      DSECT
         CVT
BLDEB    DSECT
DEB      DS    0F                       ALIGN
DEBNMSUB DS    0CL1                     NO. OF SUB.
DEBTCBAD DS    CL4                      TCB ADDR.
DEBAMLNG DS    0CL1                     ACCESS METHOD LEN.
DEBDEBAD DS    CL4                      DEB ADDR.
DEBOGLGS DS    0CL1                     OPTION
DEBIRBAD DS    CL4                      IRB ADDRESS
DEBOPATB DS    0CL1                     OPTION
DEBSYSPG DS    CL4                      SYS ABEND
DEBNMEXT DS    0CL1                     NO. OF EXTENT
DEBUSRPG DS    CL4                      USER PROG.
DEBPRIOR DS    0CL1                     PRIORITY
DEBECBAD DS    CL4                      ECB ADDRESS.
DEBPROTG DS    0CL1                     PROTECTION KEY
DEBDEBID DS    0CL1                     DEB ID
DEBDCBAD DS    CL4                      DCB ADDRESS
DEBEXSCL DS    0CL1                     EXCEPTION
DEBAPPAD DS    CL4                      APPENDAGE ADDRESS
DEBDVMOD DS    0CL1                     DEVICE
DEBUCBAD DS    CL4                      UCB ADDRESS
DEBBINUM DS    CL2                      BIN NUMBER
DEBSTRCC DS    CL2                      START CYC.
DEBSTRHH DS    CL2                      START TRACK
DEBENDCC DS    CL2                      END CYCLINDER
DEBENDHH DS    CL2                      END TRACK
DEBNMTRK DS    CL2                      NO. OF TRACKS
DEBIRBAZ EQU   DEBIRBAD+1
*
           DCBD  DSORG=PS
DCBEOBZ  EQU   DCBEOB+1
DCBCNTZZ EQU   DCBCNTRL+3
DCBEOBWZ EQU   DCBEOBW+1
DCBCNTRZ EQU   DCBCNTRL+1
DCBEOBRZ EQU   DCBEOBR+1
DCBSYZ   EQU   DCBSYNAD+2
DCBSYX   EQU   DCBSYNAD+3
DCBGETZ  EQU   DCBGET+1
DCBMACRZ EQU   DCBMACRF+1
DCBPERZ  EQU   DCBPERR+1
DCBCHECZ EQU   DCBCHECK+1
           END
