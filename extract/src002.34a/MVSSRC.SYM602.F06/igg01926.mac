         TITLE 'IGG01926 - SAM STAGE 3 OPEN EXECUTOR'
IGG01926 CSECT
*MODULE NAME - IGG01926                                          Y02072
*
*DESCRIPTIVE NAME - LOAD ACCESS METHOD ROUTINES                  Y02072
*
*COPYRIGHT - NONE                                                Y02072
*
*CHANGE ACTIVITY - AS FOLLOWS:                                   Y02072
*
*        VS2 RELEASE 02 DELETIONS                                Y02072
*002700,007200,013400,103800,110800152400-152600,136900,151100   Y02072
*116800-117000,117800,119000-122600,123200                       Y02072
*                                                                YM1140
*
*        VS2 RELEASE 3 DELETIONS
*                                                              @Z30TSCF
*
*STATUS CHANGE LEVEL 001
*
*FUNCTION/OPERATION - THIS MODULE IS A CONTINUATION OF MODULE      UT18
*    IGG01919 AND LOADS THE REMAINING I/O MODULES.  WHAT IS TO
*      BE LOADED IS DETERMINED FROM THE CODES IN THE DCBCNTRL      UT18
*      FIELD WHICH WAS SET BY PREVIOUS LOADS OF THE OPEN EXECUTORS.UT18
*      IT WILL PLACE THE ADDRESS OF THE LOADED MODULES IN THE
*      APPROPRIATE DCB FIELDS, AND THE ID'S IN THE DEB.
*      IT WILL BRING IN THE APPROPRIATE END-OF-BLOCK(EOB) ROUTINE
*
*ENTRY POINTS - ENTERED ONLY FROM IGG01919 BY USE OF XCTL MACRO
*
*INPUT: SEE DESCRIPTION OF REGISTERS, DCB(USERS)
*
*OUTPUT: DCB(USERS),IOB(USERS).
*
*EXTERNAL ROUTINES: NONE.
*EXITS-NORMAL: XCTL TO IGG01911                                  Y02072
*
*EXITS-ERROR: NONE.
*
*MACROS-MAPPING:IECDSECS(MAIN,WTG), DCBD, CVT                    Y02072
*
*TABLES/WORKAREAS- WHERE TO GO TABLE (WTG)
*
*      BYTE  0-7  NAME
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD
*      BYTE 11    CONCATENATION NUMBER
*      BYTE 12    ZERO
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR.
*                        ALIAS INDICATOR 1 BIT
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS
*      BYTE 14-16 TTR OF FIRST TEXT RECORD
*      BYTE 17    ZERO
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST
*      BYTE 20    TRANSLATION TABLE
*      BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST
*      BYTE 22-23 ATTRIBUTES
*      BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD
*      BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES
*      BYTE 32-36 IDTTR OF EXECUTOR FOR FIRST DCB
*      BYTE 37-39 WORKAREA ADDRESS FOR FIRST DCB
*      BYTE 40-   TABLE OF IDTTR'S
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR N TH DCB   (5 BYTES)
*                   WORKAREA ADDRESS FOR N TH DCB    (3 BYTES)
*                   IDTTR OF LAST ROUTINE LOAD       (5 BYTES)
*                   NOT USED                         (3 BYTES)
*
*ATTRIBUTES: REENTRANT, REUSABLE, RUNS IN DATA MANAGEMENT KEY    Y02072
*            AND SUPERVISOR STATE                                Y02072
*
*NOTES: THIS ROUTINE HAS A LIST OF ALL BSAM, QSAM MODULES SUPPORTED.
*
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGH OUT ALL OPEN PASSES
*
***********************************************************************
*
RE       EQU   0         WORK REG5
RF       EQU   1         WORK REG6
R1       EQU   RF        PARM REG                                YM1140
RDCB     EQU   2         DCB REGISTER
RBASE    EQU   3         BASE REGISTER
RCORE    EQU   4         WORK AREA ADDRESS
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RTIOT    EQU   9         USED HERE AS WRK REG AND  COMM VECTOR ADDR.
RUCB     EQU   10        USED HERE AS A COUNTER IN IOB GENERATION
RDEB     EQU   11        DEB ADDRESS
RB       EQU   12        WORK REG1  **
RC       EQU   13        WORK REG2  **  USED IN IOB GENERATION
RD       EQU   14        WORK REG3  **
RJ       EQU   15        WORK REG4
*
*
PARAR    EQU   RPARC
*
***********************************************************************
*
***********************************************************************
*
* MASK'S TO TEST PARAMETER LIST WITH
*
*********************************************************************
INP      EQU   X'0F'
OUTP       EQU   X'0F'
UPDATE     EQU   X'04'
INOUT      EQU   X'03'
OUTIN      EQU   X'07'
RDBACK     EQU   X'01'
INPRDBK  EQU   X'0E'               MASK TO CK INPUT AND RDBACK     UT18
*
*
*********************************************************************
*
*
* OFFSET FOR PARAMETER TESTS
*
ONE        EQU   X'01'
FRTYATE    EQU   48
DISPSN     EQU   X'0'
*
*
*********************************************************************
*
* OFFSETS FOR DEB REFERENCE
*
*
BIN      EQU   36
BEXT     EQU   38
*
*
*
*********************************************************************
*
* MASK'S USED TO TEST OPTION FIELDS IN DCB
*
*
*
DOUBLE     EQU   X'01'
*
*
STOWB      EQU   X'80'
WRTCK      EQU   X'80'
OVRFLO   EQU   X'20'
PCI        EQU   X'20'
MINKEY     EQU   X'01'
CONCAT     EQU   X'FF'
UTFMASK  EQU   X'02'                    MASK FOR TOTALING FACILITY UT18
*
*********************************************************************
*
* MASKS FOR ACCESS METHODS IN SAM
*
QSAMB      EQU   X'01'
BSAMBIT    EQU   X'00'
PAM        EQU   X'02'
*
*
* MASKS FOR MACRO'S TO BE USED
*
GETB       EQU   X'40'
PUTB       EQU   X'40'
READB      EQU   X'20'
WRITEB     EQU   X'20'
POINTB     EQU   X'04'
CNTRLB     EQU   X'02'
*
*
*********************************************************************
*
* MASKS FOR DEVICES TO BE SUPPORTED
*
*
*
*********************************************************************
*
*
*
*
*********************************************************************
*
* MASKS FOR STATUS BITS TO BE TESTED
*
*
EXCPN      EQU   X'30'
COMPLETE   EQU   X'80'
FIRSTIOB   EQU   X'01'
*
*
*
*********************************************************************
*
* MASKS FOR BUFFER TECHNIQUE'S
*
EXCHANGB   EQU   X'10'
SIMPLEB    EQU   X'40'
*
*********************************************************************
*
*
* MODES OF OPERATION FOR QSAM
*
LOCATEB    EQU   X'08'
MOVEB      EQU   X'10'
MOVEXCHB EQU X'14'
SUBSTUTB   EQU   X'04'
*
*
*********************************************************************
*
*
* COMMAND BYTES FOR THE 2841
*
*       CONTROL UNIT
*
*
*
SRCHE      EQU   X'31'
WRTCKD     EQU   X'1D'
RDC        EQU   X'92'
RDKD       EQU   X'8E'
RDD        EQU   X'86'
TIC        EQU   X'08'
*
*
*********************************************************************
*
*
* MASKS FOR RECORD FORMATS
*
*
STANDRDF   EQU   X'08'
FORMATU    EQU   X'C0'
FORMATF    EQU   X'80'
FORMATV    EQU   X'40'
BLOCKED    EQU   X'10'
FIXEDBLK   EQU   X'90'
*
*
*********************************************************************
*
*
*   CHANNEL CONTROL WORD FLAGS
*
SKIP       EQU   X'10'
SLI        EQU   X'20'
CC         EQU   X'40'
DATACH     EQU   X'A0'
SLICC      EQU   X'60'
SLICCSK    EQU   X'70'
*
*
*********************************************************************
*
*
KEYS       EQU   X'01'
QSAM       EQU   X'01'
*
*
*********************************************************************
*
*
*********************************************************************
*
*
**********************************************************************
ASA        EQU   X'04'
BKREAD     EQU   X'01'
URBITS   EQU   X'40'
TAPEB    EQU   X'80'
DABIT    EQU   X'20'
WAOFF    EQU   32
PLOFF    EQU   4                        OFFSET OF DCB ENTRIES
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES
IDLEN    EQU   2                        LENGTH OF A MODULE ID    Y02072
*
**********************************************************************
*
*
*
*
*
*
*
*
*
*
*
*
*
*
         BALR  RBASE,0
         USING SLDA,RBASE
         USING IHADCB,RDCB
         USING BLDEB,RDEB
         USING FORCORE,RCORE
*
*
SLDA     EQU   *
         B     BEGIN                    BR AROUND MODULE ID    @Z30TSCF
         DC    C'IGG01926'              MODULE NAME            @Z30TSCF
         DC    C'@Z30TSCF'              LAST SHIP CODE         @Z30TSCF
         DC    C'10/09/74'              LAST SHIP DATE         @Z30TSCF
BEGIN    DS    0H                                              @Z30TSCF
*
*
         L     RDCB,0(RPARC)            GET DCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR HI BYTE
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         L     RCORE,4(RWTGC)           GET WORK AREA
*                                                                 OC034
*   THIS SECTION OF CODE UP TO THE LABEL ENDOVR WILL ENSURE THAT  OC034
*   THE EOB ROUTINE IGG019CT GETS LOADED FOR ANY OPEN OVERRIDE.   OC034
         TM    JFCBMASK+6,X'C0'         WAS AN OVERRIDE USED      OC034
         BNO   ENDOVR                   BR IF NO                 A32160
         TM    0(RPARC),X'0F'           WAS IT LABEL=(,,,IN)     A32160
         BZ    INCHNG                   BR IF YES                A32160
         MVC   DCBCNTRL+2(1),DCBCNTRL+3 SAVE WRITE EOB DISP       OC034
         MVI   DCBCNTRL+3,X'0B'         SET READ EOB ROUTINE FOR  OC034
*                                       THE ERROR EOB ROUTINE     OC034
         B     ENDOVR                   CONTINUE                  OC034
INCHNG   MVI   DCBCNTRL+2,X'0B'         SET WRITE EOB ROUTINE FOR OC034
*                                       THE ERROR EOB ROUTINE     OC034
ENDOVR   EQU   *                        CONTINUE                  OC034
         MVI   22(RWTG),X'CB'          CHANGE DE ATTR.TO ONLY LOADABLE
*
         SR    RUCB,RUCB                CLEAR REG
         SR    RF,RF                    CLEAR RER
         IC    RUCB,DEBNMEXT            GET NUMBER OF EXTENTS
         IC    RF,DEBEXSCL              GET SCALING FACTOR
         SLL   RUCB,0(RF)               SHIFT ACCORDING TO EXTENT SIZE
         IC    RF,DEBAMLNG              GET ACCESS METHOD LENGTH
         LA    RUCB,0(RF,RUCB)          ADD TO POINT TO SUBRT ID FLD
         LA    RUCB,32(RUCB,RDEB)       ADD BASIC DEB SZ TO DEB AD
*
*  RUCB NOW POINTS TO THE SUBROUTINE ID FIELD IN THE DEB AND MUST  UT18
*  NOW BE INCREMENTED TO POINT BEYOND THE LAST ENTRY.              UT18
*                                                                  UT18
SLDAA    CLI   0(RUCB),X'00'            IS RUCB BEYOND LAST ENTRY  UT18
         BE    SLDAB                    BR IF YES                  UT18
         LA    RUCB,2(RUCB)             INCREMENT TO NEXT ID FIELD UT18
         B     SLDAA                    TEST NEXT FIELD            UT18
*                                                                  UT18
*  RUCB NOW POINTS TO THE NEXT AVAILABLE SUBROUTINE ID FIELD IN    UT18
*  THE DEB.                                                        UT18
*
SLDAB    EQU   *
*                                                                  UT18
*  IF USER TOTALING IS TO BE USED, EOB ROUTINES WHICH CONTAIN THE  UT18
*  TOTALING LINKAGE MUST BE LOADED INSTEAD OF THE NORMAL EOB RTNS. UT18
*  THIS IS ACCOMPLISHED BY DOING A TRANSLATE OF THE DCBCNTRL FIELD UT18
*  TO CONVERT NORMAL EOB DISPLACEMENTS INTO DISPLACEMENTS FOR THE  UT18
*  UTF EOB ROUTINES.                                               UT18
*
         TM    DCBOPTCD,UTFMASK         TEST FOR TOTALING OPTION   UT18
         BZ    SLDAC                    BR IF NOT SPECIFIED        UT18
         TM    0(RPARC),INPRDBK         IS OPEN FOR INPUT/RDBACK   UT18
         BZ    SLDAC                    IF YES, NO TOTALING REQ'D  UT18
         TR    DCBCNTRL(4),UTFTBL       CHANGE TO UTF DISPLACEMENT UT18
SLDAC    EQU   *                                                   UT18
*
*
***********************************************************************
*      GET THE EOB MODULES NEEDED FOR THIS FILE
*********************************************************************
*
         BAL   RF,EOBROUT               GET EOB RT ID
*
         BAL   RC,SLDROUT               LOAD ROUTINE
*
         USING WTGENTRY,RWTGC                                    Y02072
         MVC   WTGIDTTR,SOP9            NEXT EXECUTOR          @Z30TSCF
         TM    DCBCIND2,QSAMB           QSAM BEING USED
         BO    SLDEOB9                 YES,BRANCH
*
SLDEOB2  EQU   *
*
         MVC   DCBEOBR+1(3),25(RWTG)  LOAD EOB ADDR IN DCB
*
SLDEOB20 EQU   *
*
         MVC   DCBEOBW+1(3),25(RWTG)    LOAD EOB WRITE ADDRESS IN DCB
*
SLDEOB4  EQU   *
*
         BAL   RF,EOBROUT               GET POSSIBLE WRT ROUT (IN/OUT)
*
         LTR   RC,RC                    DCB FOR IN/OUT
         BC    8,SLDEOB6                NO BRANCH
*
         BAL   RC,SLDROUT               LOAD WRT EOB RT.
*
         MVC   DCBEOBW+1(3),25(RWTG)    LOAD EOB WRITE ADDRESS IN DCB
*
SLDEOB6  EQU   *
*
         BAL   RF,EOBROUT               IS NOTE/POINT USED
*
         LTR   RC,RC                    TEST FOR ITS ID
         BC    8,SLDEOBC                NO BRANCH
*
SLDEOB8  EQU   *
*
*
         BAL   RC,SLDROUT               LOAD NOTE/POINT ROUTINE
         MVC   DCBCNTRL+1(3),25(RWTG)   STORE NOTE/POINT ADDRESS
         B     SLDEOBE
SLDEOB9  EQU   *
         MVC   DCBEOB+1(3),25(RWTG)    STORE EOB ROUTINE
*
SLDEOBC  EQU   *
         XC    DCBCNTRL(4),DCBCNTRL     CLEAR PARA LIST
         OI    DCBCNTRL+3,X'01'         SET VECTOR  TO  ONE
SLDEOBE  EQU   *                        END.
         MVC    DCBEROPT(1),DXCCW6      REPLACE QSAM ERROR OPTIONS
*
*
***********************************************************************
*
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURR WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC)     INCR CURRENT DCB ENTRY PRTR
         CLC   0(2,RWTGC),AMIDCNST      THIS RT NEEDED AGAIN
         BCR   8,RBASE
*
         CLC   0(2,RWTGC),OPIDCNST      END OF TABLE
         BC    7,RELOOP                 NO,CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(0,RWTG)      REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS THIS ENTRY COMPLETE
         BC    7,TCTLRTN                IF NOT TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(0,RWTGC)     GET NEXT ENTRY
         LA    RPARC,PLOFF(0,RPARC)
         BC    15,ZCHEK
*
TCTLRTN  EQU   *
         USING WTG,RWTG
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSCF*
               MODID=WTGENTRY                                  @Z30TSCF
         DROP  RWTGC,RWTG                                      @Z30TSCF
*
*
*
*
SLDROUT  EQU   *
         USING WTGMODNM,RWTG                                     Y02072
         MVC   WTGMODID,0(RB)           ID TO MODULE NAME        Y02072
         DROP  RWTG                                              Y02072
         L     R1,CVTPTR                LOAD CVT ADDRESS         YM1140
         USING CVT,R1                   CVT ADDRESSABILITY       YM1140
         L     R1,CVTLINK               GET LPALIB DCB ADDRESS   YM1140
         DROP  R1                       DROP CVT BASE            YM1140
*
*
         LOAD  EPLOC=(RWTG),DCB=(1)                              YM1140
*
*
*
         SR    RD,RD
         IC    RD,DEBNMSUB              GET NO OF SUBROUTINES LOADED
         LA    RD,1(RD)                 ADD ONE TO TOTAL
         STC   RD,DEBNMSUB              STORE NEW TOTAL OF SUBRT LOADED
         ST    RE,24(RWTG)              TEMP STORE OF ROUTINE ADDR,
SLDROUT1 MVC   0(2,RUCB),0(RB)          STORE ROUTINES ID IN DEB
         LA    RUCB,2(RUCB)             UPDATE SUBRT PNTR
         BR    RC                      RETURN
*
*
***********************************************************************
*
*
***********************************************************************
*
EOBROUT  EQU   *
*
         SR    RC,RC
         LA    RE,EOBTABL               GET TABLE OF NAMES
         LA    RB,IDLEN                 LEN OF MODULE ID         Y02072
         IC    RC,DCBCNTRL+3            GET ID NO. DEVICE DEP.
         L     RJ,DCBCNTRL              SHIFT IDS RIGHT BY ONE BYTE
         SRL   RJ,8
         ST    RJ,DCBCNTRL
         MR    RB,RB                    CALCULATE WHERE ID IS
         LR    RB,RC                    PREPARE TO LOAD  MODULE
         AR    RB,RE                    POINT TO CORRECT ID
         BR    RF                       RETURN
OPIDCNST DC    C'0S'
AMIDCNST DC    C'19'                    ID OF THIS MODULE          UT18
*
*      THE FOLLOWING TABLE IS USED WITH A TRANSLATE INSTRUCTION TO UT18
*      CONVERT DISPLACEMENTS FOR THE EOB TABLE INTO THE ENTRIES    UT18
*      FOR THE CORRESPONDING UTF EOB ROUTINES.                     UT18
*
UTFTBL   DC    X'00'                    NO CHANGE                  UT18
         DC    X'0E'                    IGG019CV BECOMES IGG019TV  UT18
         DC    X'0F'                    IGG019CW BECOMES IGG019TW  UT18
         DC    X'03'                    NO CHANGE                  UT18
         DC    X'04'                    NO CHANGE                  UT18
         DC    X'05'                    NO CHANGE                  UT18
         DC    X'06'                    NO CHANGE                  UT18
         DC    X'07'                    NO CHANGE                  UT18
         DC    X'0D'                    IGG019CC BECOMES IGG019TC  UT18
         DC    X'10'                    IGG019C2 BECOMES IGG019T2  UT18
         DC    X'0A'                    NO CHANGE                  UT18
         DC    X'0B'                    NO CHANGE                  UT18
SOP9     DC    C'11',VL3(IGG01911)  IGGO1911 OR IECOS90X -QSAM @Z30TSCF
*
***********************************************************************
*
*        DEVICE DEPENDENT ROUTINES SUPPORTED
*
EOBTABL  EQU   *
         DC    C'  '
EPD2     DC    C'CV'
EGP2     DC    C'CW'
DDA2     DC    C'CX'
DDB2     DC    C'CY'
NPD2     DC    C'BK'                    NOTE-POINT  DA  WITH PCI
NPT2     DC    C'BL'                    NOTEPOINT  TAPE  WITH PCI
NPD3     DC    C'BC'                    NOTE/POINT DISK
EGP3     DC    C'CC'                    EOB RT. DISK-TP-RDR INP/OUTP
EOB2     DC    C'C2'                    EOB USED BY TRACK OVERFLOW
DUMY     DC    C'AV'
OVRD     DC    C'CT'                    OPEN OVERRIDE ERROR RTN   OC034
UTF1     DC    C'TD'                    USER TOTALLING EOB ROUTINE UT18
UTF2     DC    C'TC'                    USER TOTALLING EOB ROUTINE UT18
UTF3     DC    C'TV'                    USER TOTALLING EOB ROUTINE UT18
UTF4     DC    C'TW'                    USER TOTALLING EOB ROUTINE UT18
UTF5     DC    C'T2'                    USER TOTALLING EOB ROUTINE UT18
         SPACE
PATCH    DC    0H'0',XL50'00'           PATCH AREA             @Z30TSCF
END      EQU   *                        END OF MODULE            Y02072
         EJECT
         IECDSECS  MAIN,WTG,PREFX,EXPAND=YES                   @Z30TSCF
         ORG   WTGIDTTR                                          Y02072
WTGID    DS    CL2                      NEXT MODS ID             Y02072
*
*
CVT      DSECT
         CVT
*
*
BLDEB    DSECT
DEB      DS    0F
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOGLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
*
           DCBD  DSORG=PS
*
**********************************************************************
*
           END
