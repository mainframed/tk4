         TITLE 'IDA019RZ--VSAM BUFFER MANAGER INTERFACE ROUTINE        *
                        '
IDA019RZ CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IDA019RZ  78.209'                                 0001
IDAFREEB DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00105-IDAFREEB)
         ENTRY IDAFREEB
IDAWRBFR DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00108-IDAWRBFR)
         ENTRY IDAWRBFR
IDASBF   DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00121-IDASBF)
         ENTRY IDASBF
IDAGRB   DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00124-IDAGRB)
         ENTRY IDAGRB
IDAGNFL  DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00127-IDAGNFL)
         ENTRY IDAGNFL
IDAGNNFL DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00130-IDAGNNFL)
         ENTRY IDAGNNFL
IDAGNXT  DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00133-IDAGNXT)
         ENTRY IDAGNXT
IDAWRTBF DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00136-IDAWRTBF)
         ENTRY IDAWRTBF
IDAEXCL  DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00139-IDAEXCL)
         ENTRY IDAEXCL
IDASCHBF DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00142-IDASCHBF)
         ENTRY IDASCHBF
IDAMRKBF DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00145-IDAMRKBF)
         ENTRY IDAMRKBF
IDAGWSEG DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00148-IDAGWSEG)
         ENTRY IDAGWSEG
IDAWAIT  DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00180-IDAWAIT)
         ENTRY IDAWAIT
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*                                                                  0105
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAFREEB - FREE DATA OR INDEX BUFC FOR REUSE.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0105
*IDAFREEB:                                                         0105
*   ENTRY;                          /* FREE BUFR RTN                 */
@EP00105 DS    0H                                                  0106
*   RWORK1=FREEB;                   /* IND FREE BUFFER               */
         SLR   RWORK1,RWORK1                                       0106
*   GOTO MGRCHK;                    /* SET TO EXIT                   */
         B     MGRCHK                                              0107
*                                                                  0108
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAWRBFR - WRITE OUT A BUFC AND CHECK FOR I/O ERRORS.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0108
*IDAWRBFR:                                                         0108
*   ENTRY;                          /* FORCE WRITE ROUTINE           */
@EP00108 DS    0H                                                  0109
*   RWORK1=WRBFR;                   /* WRITE BUFFER IND              */
         LA    RWORK1,2                                            0109
*   IF AMBLSR=ON×AMBGSR=ON THEN     /* IF SHARED             @OX09854*/
         TM    AMBLSR(RAMB),B'01100000'                            0110
         BZ    @RF00110                                            0110
*     DO;                           /* RESOURCES,            @OX09854*/
*       RFY                                                        0112
*        (RWORK3,                                                  0112
*         RWORK4) RSTD;             /* INCR STATS            @OX09854*/
*WRLOOP:                                                           0113
*       RWORK3=BSPHUIW;             /* OLD UIW CNT           @OX09854*/
WRLOOP   L     @15,AMBBUFC(,RAMB)                                  0113
         L     RWORK3,BSPHUIW(,@15)                                0113
*       RWORK4=RWORK3+ONE;          /* NEW UIW CNT           @OX09854*/
         LA    RWORK4,1                                            0114
         ALR   RWORK4,RWORK3                                       0114
*       CS(RWORK3,RWORK4,BSPHUIW);  /* BUMP UIW              @OX09854*/
         CS    RWORK3,@08,BSPHUIW(@15)                             0115
*       BC(7,WRLOOP);               /* INTRPT--RETRY         @OX09854*/
         BC    7,WRLOOP                                            0116
*       RFY                                                        0117
*        (RWORK3,                                                  0117
*         RWORK4) UNRSTD;           /* DROP REGS             @OX09854*/
*       GO TO IDA019RY;             /* GO TO WRBFR           @OX09854*/
         L     @15,@CV00076                                        0118
         BR    @15                                                 0118
*     END;                          /* END OF LSR/GSR        @OX09854*/
*   ELSE                            /* NON-SHR RESRCS        @OX09854*/
*     GO TO IDA019R2;               /* NORMAL BFR MGR        @OX09854*/
@RF00110 L     @15,@CV00075                                        0120
         BR    @15                                                 0120
*                                                                  0121
*   /*****************************************************************/
*   /*                                                               */
*   /* IDASBF - REMOVE CURRENT BUFC FROM CHAIN.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0121
*IDASBF:                                                           0121
*   ENTRY;                          /* SUBTRACT BFR ROUTINE          */
@EP00121 DS    0H                                                  0122
*   RWORK1=SBF;                     /* SUB BFR IND                   */
         LA    RWORK1,4                                            0122
*   GOTO MGRCHK;                    /* SET TO EXIT                   */
         B     MGRCHK                                              0123
*                                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAGRB - GET CI WITH SPECIFIED RBA.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0124
*IDAGRB:                                                           0124
*   ENTRY;                          /* GET BY RBA                    */
@EP00124 DS    0H                                                  0125
*   RWORK1=GRB;                     /* GET RBA IND                   */
         LA    RWORK1,6                                            0125
*   GOTO MGRCHK;                    /* SET TO EXIT                   */
         B     MGRCHK                                              0126
*                                                                  0127
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAGNFL - GET A WORK BUFC.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*IDAGNFL:                                                          0127
*   ENTRY;                                                         0127
@EP00127 DS    0H                                                  0128
*   RWORK1=GNFL;                    /* GET WORK BFR IND              */
         LA    RWORK1,8                                            0128
*   GOTO MGRCHK;                    /* SET TO EXIT                   */
         B     MGRCHK                                              0129
*                                                                  0130
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAGNNFL - GET A WORK BUFC FOR OUTPUT.                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0130
*IDAGNNFL:                                                         0130
*   ENTRY;                                                         0130
@EP00130 DS    0H                                                  0131
*   RWORK1=GNNFL;                   /* GET NEXT FILL BFR IND         */
         LA    RWORK1,10                                           0131
*   GOTO MGRCHK;                    /* SET TO EXIT                   */
         B     MGRCHK                                              0132
*                                                                  0133
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAGNXT - GET THE NEXT CI IN PHYSICAL OR LOGICAL SEQUENCE.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*IDAGNXT:                                                          0133
*   ENTRY;                                                         0133
@EP00133 DS    0H                                                  0134
*   RWORK1=GNXT;                    /* GET NEXT IND                  */
         LA    RWORK1,12                                           0134
*   GOTO MGRCHK;                    /* SET TO EXIT                   */
         B     MGRCHK                                              0135
*                                                                  0136
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAWRTBF - SERVICE THE WRITE BUFFER MACRO.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*IDAWRTBF:                                                         0136
*   ENTRY;                                                         0136
@EP00136 DS    0H                                                  0137
*   RWORK1=WRTBF;                   /* WRTBF IND                     */
         LA    RWORK1,14                                           0137
*   GOTO IDA019RY;                  /* DBDC ONLY FUCNTION            */
         L     @15,@CV00076                                        0138
         BR    @15                                                 0138
*                                                                  0139
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAGEXCL - GET EXCLUSIVE CONTROL OF BUFC.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*IDAEXCL:                                                          0139
*   ENTRY;                                                         0139
@EP00139 DS    0H                                                  0140
*   RWORK1=GETEXCL;                 /* GETEXCL IND                   */
         LA    RWORK1,14                                           0140
*   GOTO IDA019R2;                  /* NON DBDC FUNCTION             */
         L     @15,@CV00075                                        0141
         BR    @15                                                 0141
*                                                                  0142
*   /*****************************************************************/
*   /*                                                               */
*   /* IDASCHBF - SERVICE THE SEARCH BUFFER MACRO.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0142
*IDASCHBF:                                                         0142
*   ENTRY;                                                         0142
@EP00142 DS    0H                                                  0143
*   RWORK1=SCHBF;                   /* SEARCH BUFFER IND             */
         LA    RWORK1,16                                           0143
*   GOTO IDA019RY;                  /* DBDC ONLY FUNCTION            */
         L     @15,@CV00076                                        0144
         BR    @15                                                 0144
*                                                                  0145
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAMRKBF - SERVICE THE MARK BUFFER MACRO.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*IDAMRKBF:                                                         0145
*   ENTRY;                                                         0145
@EP00145 DS    0H                                                  0146
*   RWORK1=MRKBF;                   /* MARK BUFFER IND               */
         LA    RWORK1,18                                           0146
*   GOTO IDA019RY;                  /* DBDC ONLY FUNCTION            */
         L     @15,@CV00076                                        0147
         BR    @15                                                 0147
*                                                                  0148
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAGWSEG - GET A WORK BUFC FOR SPANNED RECORDS.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*IDAGWSEG:                                                         0148
*   ENTRY;                                                         0148
@EP00148 DS    0H                                                  0149
*   IF AMBLSR=ON×                   /* SHARED -                      */
*       AMBGSR=ON THEN              /* OPTIONS ?                     */
         TM    AMBLSR(RAMB),B'01100000'                            0149
         BZ    @RF00149                                            0149
*     RWORK1=GWSEG;                 /* SET IND AND FALL THRU TO    0150
*                                      MGRCHK                        */
         LA    RWORK1,20                                           0150
*   ELSE                            /* NO,                           */
*     GOTO IDAGWSGW;                /* --- GO TO NON SHR RTN         */
*                                                                  0151
         B     @RC00149                                            0151
@RF00149 L     @15,@CV00078                                        0151
         BR    @15                                                 0151
*   /*****************************************************************/
*   /*                                                               */
*   /* DECIDE WHICH BFR MANAGER TO CALL. FOR SHARED BUFFERS, CALL    */
*   /* IDA019RY. FOR ALL OTHERS, CALL IDA019R2.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0152
*MGRCHK:                                                           0152
*   IF AMBLSR=ON×                   /* LOCAL SHARED -                */
*       AMBGSR=ON THEN              /* OR GLOBAL SHARED?             */
@RC00149 DS    0H                                                  0152
MGRCHK   TM    AMBLSR(RAMB),B'01100000'                            0152
         BZ    @RF00152                                            0152
*     GOTO IDA019RY;                /* SHARED                        */
         L     @15,@CV00076                                        0153
         BR    @15                                                 0153
*   ELSE                            /* NON ------                    */
*     GOTO IDA019R2;                /* --- SHARED                    */
@RF00152 L     @15,@CV00075                                        0154
         BR    @15                                                 0154
*SCANBUFF:                                                         0155
*                                                                  0155
*   /*****************************************************************/
*   /*                                                               */
*   /* SCANBUFF-                                             @ZA14824*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0155
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0155
SCANBUFF DS    0H                                                  0156
*   RESPECIFY                                                      0156
*     IDABUFDR BASED(AMBBUFC);                                     0156
*   RESPECIFY                                                      0157
*     IDACPA BASED(BUFCCPA);                                       0157
*   RESPECIFY                                                      0158
*    (RWORK1,                                                      0158
*     RWORK2,                                                      0158
*     RWORK3) RESTRICTED;                                          0158
*   IOMXSCAN=OFF;                   /* SET IOMXSCAN OFF              */
         L     @15,IOMUFLD(,RPARM1)                                0159
         NI    IOMXSCAN(@15),B'11011111'                           0159
*   RWORK1=IOMBUFC;                 /* POINT TO FIRST BUFC IN      0160
*                                      BUFCNXT1 CHAIN                */
         L     RWORK1,IOMBUFC(,RPARM1)                             0160
*   RWORK3=RWORK1->BUFCORBA;        /* RBA IN RWORK3                 */
         L     RWORK3,BUFCORBA(,RWORK1)                            0161
*   DO UNTIL RWORK1=IOMBUFC;        /* GO THRU CHAIN                 */
@DL00162 DS    0H                                                  0163
*     IF RWORK1->BUFCER2=OFF&       /* IF NO WRITE ERROR             */
*         RWORK1->BUFCCPA->CPAWV=ON THEN/* AND BUF WRITTEN           */
         TM    BUFCER2(RWORK1),B'00001000'                         0163
         BNZ   @RF00163                                            0163
         L     @15,BUFCCPA(,RWORK1)                                0163
         TM    CPAWV(@15),B'10000000'                              0163
         BNO   @RF00163                                            0163
*       DO;                                                        0164
*         RWORK2=BUFDBUFC;          /* POINT TO FIRST BUFC           */
         L     @15,AMBBUFC(,RAMB)                                  0165
         L     RWORK2,BUFDBUFC(,@15)                               0165
*         DO UNTIL RWORK2=0;        /* GO THRU BUFC CHAIN            */
@DL00166 DS    0H                                                  0167
*           IF RWORK3=RWORK2->BUFCDDDD&/* RBA MATCH                  */
*               RWORK1^=RWORK2&     /* AND NOT SAME BUFC             */
*               RWORK2->BUFCVAL=ON& /* DOWN LEVEL BUFC MARKED VALID  */
*               RWORK2->BUFCRRD=OFF THEN/* NO READ REQ'D             */
         CL    RWORK3,BUFCDDDD(,RWORK2)                            0167
         BNE   @RF00167                                            0167
         CLR   RWORK1,RWORK2                                       0167
         BE    @RF00167                                            0167
         TM    BUFCVAL(RWORK2),B'00000100'                         0167
         BNO   @RF00167                                            0167
         TM    BUFCRRD(RWORK2),B'00100000'                         0167
         BNZ   @RF00167                                            0167
*             DO;                                                  0168
*               RWORK2->BUFCVAL=OFF;/* FORCE REREAD IF NECESS        */
         NI    BUFCVAL(RWORK2),B'11111011'                         0169
*               IF RWORK2->BUFCPLH^=RPLH THEN/* INSURE CORRECT PLH 0170
*                                                            @ZA27904*/
         L     @15,BUFCPLH(,RWORK2)                                0170
         CR    @15,RPLH                                            0170
         BE    @RF00170                                            0170
*                 RWORK2->BUFCPLH->PLHDSCAN=ON;/* PLHDSCAN= ON       */
         OI    PLHDSCAN(@15),B'00000001'                           0171
*             END;                                                 0172
@RF00170 DS    0H                                                  0173
*           RWORK2=RWORK2->BUFCHAIN;/* POINT NEXT BUFC               */
@RF00167 L     RWORK2,BUFCHAIN(,RWORK2)                            0173
*         END;                                                     0174
@DE00166 LTR   RWORK2,RWORK2                                       0174
         BNZ   @DL00166                                            0174
*       END;                                                       0175
*     RWORK1=RWORK1->BUFCNXT1;      /* NEXT BUFC                     */
@RF00163 L     RWORK1,BUFCNXT1(,RWORK1)                            0176
*   END;                                                           0177
@DE00162 C     RWORK1,IOMBUFC(,RPARM1)                             0177
         BNE   @DL00162                                            0177
*   RESPECIFY                                                      0178
*    (RWORK1,                                                      0178
*     RWORK2,                                                      0178
*     RWORK3) UNRESTRICTED;                                        0178
*   END SCANBUFF;                                                  0179
@EL00002 DS    0H                                                  0179
@EF00002 DS    0H                                                  0179
@ER00002 BR    @14                                                 0179
*                                                                  0180
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAWAIT                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0180
*/*                                                                0180
*01 FUNCTION = SYNCHRONIZE VSAM PROCESSING WITH THE COMPLETION     0180
*              OF ALL I/O OPERATIONS.  FOR SYNCHRONOUS PROCESSING, 0180
*              IDAUPXIT IS CALLED TO TAKE A USER EXIT IF WAITX IS  0180
*              SPECIFIED IN THE RPL. A WAIT IS ISSUED ON IOBECB IF 0180
*              THE ECB IS NOT POSTED.                         @ZA07549
*              ASYNCHRONOUS PROCESSING, THE PLACEHOLDER IS SET SUCH
*              THAT THE ASYNCHRONOUS ROUTINE WILL BE SCHEDULED AND IT
*              WILL PASS CONTROL BACK TO HERE FOR THE PURPOSE OF   0180
*              CONTINUING WITH THE REQUEST.  AFTER SETTING THE PLACE-
*              HOLDER, EXIT TO THE USER.                           0180
*01 INPUT = RPARM1 POINTS TO AN IOB, RRPL POINTS TO THE RPL   @ZA07549
*01 OUTPUT = CONTROL RETURNED WHEN I/O COMPLETE.  STANDARD VSAM    0180
*            REGISTERS ARE PASSED.                                   */
*                                                                  0180
*   /*****************************************************************/
*   /*                                                               */
*   /* IDAWAIT                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0180
*IDAWAIT:                                                          0180
*   ENTRY;                                                         0180
@EP00180 DS    0H                                                  0181
*   RESPECIFY                                                      0181
*     RWORK1 UNRSTD;                                               0181
*   RFY                                                            0182
*     IOECB BASED(IOMECBPT);        /* ECB BASE                      */
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE EVENT HAS COMPLETED, RETURN TO THE CALLER.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   IF IOECBPT=ON THEN              /* IF ECB POSTED                 */
         L     @15,IOMECBPT(,RPARM1)                               0183
         TM    IOECBPT(@15),B'01000000'                            0183
         BNO   @RF00183                                            0183
*     DO;                                                          0184
*       GEN(IDASVR14);              /* SAVE R14              @ZA14824*/
         IDASVR14
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE    @ZA29388*/
         L     @15,AMBTRACE(,RAMB)                                 0186
         LTR   @15,@15                                             0186
         BZ    @RF00186                                            0186
*         DO;                       /*                       @ZA29388*/
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/
         L     @15,@CV00850                                        0188
         BALR  @14,@15                                             0188
*           GEN(DC X'0003');        /* TRACE ID              @ZA29388*/
         DC X'0003'
*         END;                      /*                       @ZA29388*/
*       IF IOMXSCAN=ON THEN         /* SCANBUFF              @ZA14824*/
@RF00186 L     @15,IOMUFLD(,RPARM1)                                0191
         TM    IOMXSCAN(@15),B'00100000'                           0191
         BNO   @RF00191                                            0191
*         DO;                       /* ALLOWED               @ZA14824*/
*           CALL SCANBUFF;          /* YES CALL SCANB        @ZA14824*/
         BAL   @14,SCANBUFF                                        0193
*         END;                      /*                       @ZA14824*/
*       GEN(IDARST14);              /* RESTORE R14           @ZA14824*/
@RF00191 DS    0H                                                  0195
         IDARST14
*       RETURN;                     /* RETURN                        */
@EL00001 DS    0H                                                  0196
@EF00001 DS    0H                                                  0196
@ER00001 BR    @14                                                 0196
*     END;                                                         0197
*                                                                  0197
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE REQUEST IS SYNCHRONOUS, WAIT FOR THE I/O TO COMPLETE.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0198
*   IF RPLASY=OFF×PLHIWAIT=ON       /* SYNCH REQ OR 2ND CALL         */
*     THEN                          /* IF SO, SYNCH I/O              */
@RF00183 TM    RPLASY(RRPL),B'00001000'                            0198
         BZ    @RT00198                                            0198
         TM    PLHIWAIT(RPLH),B'00000001'                          0198
         BNO   @RF00198                                            0198
@RT00198 DS    0H                                                  0199
*     DO;                                                          0199
*IDAWAIT1:                          /* REISSUE WAIT LABEL            */
*                                                                  0200
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK IF USER SPECIFIED WAITX FOR UPAD EXIT       @ZA07549*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0200
*       IF RPLWAITX=ON THEN         /* WAITX ?               @ZA07549*/
IDAWAIT1 TM    RPLWAITX(RRPL),B'00000100'                          0200
         BNO   @RF00200                                            0200
*         DO;                       /* YES.                  @ZA07549*/
*           GEN(IDASVR14);          /* SAVE R14              @ZA07549*/
         IDASVR14
*           PLHUCODE=PLHUWAIT;      /* SET WAIT CODE         @ZA07549*/
         MVI   PLHUCODE(RPLH),B'00000000'                          0203
*           PLHUPECB=ADDR(IOECB);   /* SET ECB ADDR.         @ZA07549*/
         L     @15,IOMECBPT(,RPARM1)                               0204
         ST    @15,PLHUPECB(,RPLH)                                 0204
*I01:                                                              0205
*           DO;                     /* IDACALL(IDAUPXIT)             */
I01      DS    0H                                                  0206
*             CALL IDAUPXIT;        /* EXIT TO IDAUPXIT              */
         L     @15,@CV00077                                        0206
         BALR  @14,@15                                             0206
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */
         BALR @11,0
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */
         USING *,@11
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */
         L     @11,=A(@PSTART)
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */
         USING @PSTART,@11
*           END I01;                /* CALL UPAD EXIT        @ZA07549*/
*           GEN(IDARST14);          /* RESTORE R14           @ZA07549*/
         IDARST14
*         END;                      /* END WAITX             @ZA07549*/
*       IF IOECBPT=OFF THEN         /* ECB POSTED?                   */
@RF00200 L     @15,IOMECBPT(,RPARM1)                               0214
         TM    IOECBPT(@15),B'01000000'                            0214
         BNZ   @RF00214                                            0214
*         DO;                       /* NO, ISSUE WAIT                */
*           R1=ADDR(IOECB);         /* POINT TO ECB                  */
         LR    R1,@15                                              0216
*           GEN(WAIT ECB=(1));      /* WAIT FOR I/O                  */
         WAIT ECB=(1)
*           R1=PLHCRPL;             /* RESTORE RPL PTR       @ZA07549*/
         L     R1,PLHCRPL(,RPLH)                                   0218
*         END;                                                     0219
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE    @ZA29388*/
@RF00214 L     @15,AMBTRACE(,RAMB)                                 0220
         LTR   @15,@15                                             0220
         BZ    @RF00220                                            0220
*         DO;                       /*                       @ZA29388*/
*           GEN(IDASVR14);          /* SAVE R14              @ZA29388*/
         IDASVR14
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/
         L     @15,@CV00850                                        0223
         BALR  @14,@15                                             0223
*           GEN(DC X'0003');        /* TRACE ID              @ZA29388*/
         DC X'0003'
*           GEN(IDARST14);          /* RESTORE R14           @ZA29388*/
         IDARST14
*         END;                      /*                       @ZA29388*/
*       IF IOMXSCAN=ON THEN         /* SCANBUFF              @ZA14824*/
@RF00220 L     @15,IOMUFLD(,RPARM1)                                0227
         TM    IOMXSCAN(@15),B'00100000'                           0227
         BNO   @RF00227                                            0227
*         DO;                       /* ALLOWED               @ZA14824*/
*           GEN(IDASVR14);          /* SAVE R14              @ZA14824*/
         IDASVR14
*           CALL SCANBUFF;          /* CALL SCANBUFF         @ZA14824*/
         BAL   @14,SCANBUFF                                        0230
*           GEN(IDARST14);          /* RESTORE R14           @ZA14824*/
         IDARST14
*         END;                      /*                       @ZA14824*/
*     END;                          /* END OF SYNCH CODE             */
*                                                                  0233
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE REQUEST IS ASYNCHRONOUS AND IF THE EVENT STILL HAS NOT */
*   /* COMPLETED OR IF AN INTERRUPT HAS OCCURRED SUCH THAT THE       */
*   /* REQUIRED PROCESSING HAS ALREADY BEEN COMPLETED, RETURN TO THE */
*   /* ORIGINATOR OF THE CURRENT I/O OPERATION (THE USER OR THE      */
*   /* SYSTEM ROUTINE THAT CALLED THE ASYNCHRONOUS INTERRUPT         */
*   /* ROUTINE).                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0234
*   ELSE                                                           0234
*     DO;                                                          0234
         B     @RC00198                                            0234
@RF00198 DS    0H                                                  0235
*       GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE RETURN REG       */
         IDASVR14
*IDAWAIT2:                          /* FILE PROTCT RETRY LABEL       */
*       PLHIWAIT=ON;                /* TEST IN PROGRESS              */
IDAWAIT2 OI    PLHIWAIT(RPLH),B'00000001'                          0236
*       PLHARET=ADDR(IOTHRU);       /* PUT RETURN IN PLH             */
         LA    @15,IOTHRU                                          0237
         ST    @15,PLHARET(,RPLH)                                  0237
*       PLHASYRQ=ON;                /* REQUEST IRB PROCESSING        */
         OI    PLHASYRQ(RPLH),B'00000100'                          0238
*       GEN(BCR   15,0);            /* STORE IF MULTIPROC    @ZA02276*/
         BCR   15,0
*       IF IOMNE=ON×IOMAE=ON THEN   /* APPENDAGE ENTERED     @ZA02276*/
         TM    IOMNE(RPARM1),B'11000000'                           0240
         BZ    @RF00240                                            0240
*         DO;                       /*                       @ZA02276*/
*           DO WHILE IOMEEXIT=OFF;  /* WAIT IF MULTIPROC     @ZA02276*/
         B     @DE00242                                            0242
@DL00242 DS    0H                                                  0243
*           END;                    /*                       @ZA02276*/
@DE00242 TM    IOMEEXIT(RPARM1),B'00001000'                        0243
         BZ    @DL00242                                            0243
*           IF IOMIRBSW=ON THEN     /* ASYNCH SCHEDULED      @ZA02276*/
         TM    IOMIRBSW(RPARM1),B'00000100'                        0244
         BO    @RT00244                                            0244
*             GO TO USERET;         /* RETURN TO USER        @ZA02276*/
*         END;                      /*                       @ZA02276*/
*       ELSE                        /* ASYNCH SCHEDULED      @ZA02276*/
*USERET:                            /*                       @ZA02276*/
*         DO;                       /*                       @ZA02276*/
         B     @RC00240                                            0247
@RF00240 DS    0H                                                  0247
USERET   DS    0H                                                  0248
*           PLHIWAIT=OFF;           /* END OF CONFLICT               */
         NI    PLHIWAIT(RPLH),B'11111110'                          0248
*           GEN(LM  R14,RPARM1,TWELVE(R13));/* RESTORE USER REGS     */
         LM  R14,RPARM1,TWELVE(R13)
*           GEN;                                                   0250
         SR    R15,R15                  SET ZERO ERROR CODE
         BR    R14                      RETURN
*         END;                      /* END, USER RETURN              */
*       PLHIWAIT=OFF;               /* END OF CONFLICT               */
*                                                                  0252
@RC00240 NI    PLHIWAIT(RPLH),B'11111110'                          0252
*       /*************************************************************/
*       /*                                                           */
*       /* CONTROL IS PASSED HERE BY THE ASYNCHRONOUS INTERRUPT      */
*       /* ROUTINE FOR FURTHER PROCESSING OF THE REQUEST UNDER THE   */
*       /* IRB.                                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0253
*IOTHRU:                            /* HERE IF I/O COMPLETE          */
*       GEN;                                                       0253
IOTHRU   DS    0H                                                  0253
    BALR  @11,0                            RESET BASE REG
    LA    @14,*-@PSTART                    GET OFFSET
    SR    @11,@14                          CORRECT BASE REG
*       PLHASYRQ=OFF;               /* IRB NOT NEEDED FURTHER        */
         NI    PLHASYRQ(RPLH),B'11111011'                          0254
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE    @ZA29388*/
         L     @15,AMBTRACE(,RAMB)                                 0255
         LTR   @15,@15                                             0255
         BZ    @RF00255                                            0255
*         DO;                       /*                       @ZA29388*/
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/
         L     @15,@CV00850                                        0257
         BALR  @14,@15                                             0257
*           GEN(DC X'0003');        /* TRACE ID              @ZA29388*/
         DC X'0003'
*         END;                      /*                       @ZA29388*/
*       IF IOMXSCAN=ON THEN         /* SCANBUFF              @ZA14824*/
@RF00255 L     @15,IOMUFLD(,RPARM1)                                0260
         TM    IOMXSCAN(@15),B'00100000'                           0260
         BNO   @RF00260                                            0260
*         CALL SCANBUFF;            /* ALLOWED               @ZA14824*/
         BAL   @14,SCANBUFF                                        0261
*       GEN REFS(HWORD4)(IDARST14); /* RESTORE 14                    */
@RF00260 DS    0H                                                  0262
         IDARST14
*     END;                          /* END OF ASYNCH CODE            */
*   RESPECIFY                                                      0264
*     R14 UNRESTRICTED;             /* RELEASE REG 14                */
*   RETURN;                         /* RETURN TO CALLER              */
         B     @EL00001                                            0265
*   GEN(IDAPATCH);                  /* DEFINE PATCH                  */
         IDAPATCH
*   END IDA019RZ                    /* END BFR MGR                   */
*                                                                  0267
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (LCGPLSSW)                                       */
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */
*/*%INCLUDE SYSLIB  (IDABSPH )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDACPA  )                                       */
*/*%INCLUDE SYSLIB  (IDAIOMB )                                       */
*/*%INCLUDE SYSLIB  (IDAAMBXN)                                       */
*                                                                  0267
*       ;                                                          0267
         B     @EL00001                                            0267
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDA019RZ CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IDA019RZ CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00075 DC    V(IDA019R2)
@CV00076 DC    V(IDA019RY)
@CV00077 DC    V(IDAUPXIT)
@CV00078 DC    V(IDAGWSGW)
@CV00850 DC    V(IDA019ST)
         DS    0D
HWORD4   DC    H'4'
@DATD    DSECT
TWELVE   EQU   12                       OFFSET TO REGS
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDA019RZ CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R1       EQU   @01
RRPL     EQU   @01
RPLH     EQU   @02
RAMB     EQU   @03
RBUFC    EQU   @04
RWORK1   EQU   @05
RWORK2   EQU   @06
RWORK3   EQU   @07
RWORK4   EQU   @08
RPARM1   EQU   @12
R14      EQU   @14
RWORK0   EQU   @00
RWORK5   EQU   @09
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R15      EQU   @15
IOECB    EQU   0
IOECBPT  EQU   IOECB
IDABSPH  EQU   0
BSPHFLG1 EQU   IDABSPH+1
BSPHCSRC EQU   IDABSPH+28
BSPHFLG2 EQU   BSPHCSRC
BSPHUIW  EQU   IDABSPH+44
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLASY   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IDAAMB   EQU   0
AMBBUFC  EQU   IDAAMB+8
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
AMBLSR   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBTRACE EQU   IDAAMB+120
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHASYRQ EQU   PLHFLG1
PLHFLG2  EQU   IDAPLH+3
PLHIWAIT EQU   PLHFLG2
PLHEFLGS EQU   IDAPLH+4
PLHDSCAN EQU   PLHEFLGS
PLHFLG3  EQU   IDAPLH+6
PLHAFLGS EQU   IDAPLH+7
PLHCRPL  EQU   IDAPLH+20
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHUPECB EQU   PLHJORBA
PLHJCODE EQU   IDAPLH+40
PLHUCODE EQU   PLHJCODE
PLHRSCS  EQU   IDAPLH+43
PLHDIOB  EQU   IDAPLH+76
PLHARET  EQU   IDAPLH+80
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHKEYPT EQU   IDAPLH+248
PLHTMRPL EQU   IDAPLH+265
PLHEND   EQU   IDAPLH+280
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
BUFDBUFC EQU   IDABUFDR+12
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCER2  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCIOFL EQU   IDABUFC+2
BUFCRRD  EQU   BUFCIOFL
BUFCFLG2 EQU   IDABUFC+3
BUFCPLH  EQU   IDABUFC+4
BUFCDDDD EQU   IDABUFC+8
BUFCORBA EQU   IDABUFC+12
BUFCCPA  EQU   IDABUFC+16
BUFCNXT1 EQU   IDABUFC+24
BUFCINV  EQU   IDABUFC+28
BUFCHAIN EQU   IDABUFC+48
IDACPA   EQU   0
CPAWPHAD EQU   IDACPA+36
CPAWSEEK EQU   CPAWPHAD+1
CPARPHAD EQU   IDACPA+52
CPARSEEK EQU   CPARPHAD+1
CPASTAT1 EQU   IDACPA+83
CPAFLAGS EQU   IDACPA+84
CPAFLAG1 EQU   CPAFLAGS
CPAWV    EQU   CPAFLAG1
CPAFLAG2 EQU   CPAFLAGS+1
CPACCW   EQU   0
IDAIOMB  EQU   0
IOMBUFC  EQU   IDAIOMB+4
IOMECBPT EQU   IDAIOMB+24
IOMFLAGS EQU   IDAIOMB+40
IOMFL    EQU   IOMFLAGS
IOMAPEND EQU   IOMFL
IOMNE    EQU   IOMAPEND
IOMAE    EQU   IOMAPEND
IOMEEXIT EQU   IOMFL+1
IOMIRBSW EQU   IOMFL+1
IOMSTIND EQU   IOMFLAGS+2
IOMSAVER EQU   IDAIOMB+52
IOMUFLD  EQU   IDAIOMB+120
IDAAMBXN EQU   0
AMBXEOV  EQU   IDAAMBXN
AMBXCSWD EQU   IDAAMBXN+16
IDAIOMBX EQU   0
IOMXFLGS EQU   IDAIOMBX+1
IOMXSCAN EQU   IOMXFLGS
IOMXPDET EQU   IDAIOMBX+4
IOMXRECB EQU   IDAIOMBX+20
IOMXECB  EQU   IOMXRECB
IOMXRSLT EQU   IOMXECB
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
RPLADDR  EQU   0
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
BUFCRSC1 EQU   BUFCAVL
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00026 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
IOMXRBPT EQU   IOMXECB+1
IOMXIOCC EQU   IOMXRSLT
IOMXPOST EQU   IOMXRSLT
IOMXWAIT EQU   IOMXECB
IOMXR14  EQU   IDAIOMBX+16
IOMXRPL  EQU   IOMXPDET+8
IOMXR13S EQU   IOMXPDET+4
IOMXBFLG EQU   IOMXPDET
@NM00041 EQU   IOMXFLGS
IOMXEOVW EQU   IOMXFLGS
IOMXUSE  EQU   IOMXFLGS
IOMXLOCK EQU   IDAIOMBX
AMBXBM2S EQU   IDAAMBXN+20
AMBXRDCT EQU   AMBXCSWD+2
@NM00040 EQU   AMBXCSWD
AMBXECB  EQU   IDAAMBXN+12
AMBXASCB EQU   IDAAMBXN+8
@NM00039 EQU   AMBXEOV+7
AMBXEVRC EQU   AMBXEOV+6
AMBXEOVR EQU   AMBXEOV+5
AMBXRSC  EQU   AMBXEOV+4
AMBXEVPT EQU   AMBXEOV
IOMNXT1  EQU   IDAIOMB+116
IOMSAVEF EQU   IOMSAVER+60
IOMSAVEE EQU   IOMSAVER+56
IOMSAVED EQU   IOMSAVER+52
IOMSAVEC EQU   IOMSAVER+48
IOMSAVEB EQU   IOMSAVER+44
IOMSAVEA EQU   IOMSAVER+40
IOMSAVE9 EQU   IOMSAVER+36
IOMSAVE8 EQU   IOMSAVER+32
IOMSAVE7 EQU   IOMSAVER+28
IOMSAVE6 EQU   IOMSAVER+24
IOMSAVE5 EQU   IOMSAVER+20
IOMSAVE4 EQU   IOMSAVER+16
IOMSAVE3 EQU   IOMSAVER+12
IOMSAVE2 EQU   IOMSAVER+8
IOMSAVE1 EQU   IOMSAVER+4
IOMSAVE0 EQU   IOMSAVER
IOMNSEG  EQU   IDAIOMB+50
IOMNBUF  EQU   IDAIOMB+48
IOMNMOD  EQU   IDAIOMB+46
IOMLOCK  EQU   IDAIOMB+45
IOMPFERR EQU   IDAIOMB+44
IOMCKEY  EQU   IDAIOMB+43
@NM00038 EQU   IOMSTIND
IOMSRBM  EQU   IOMSTIND
IOMSLOC  EQU   IOMSTIND
IOMLLOCK EQU   IOMSTIND
IOMEOVXC EQU   IOMSTIND
IOMEOVTS EQU   IOMSTIND
IOMEOVW  EQU   IOMSTIND
IOMAMUSE EQU   IOMSTIND
@NM00037 EQU   IOMFL+1
@NM00036 EQU   IOMFL+1
IOMCPRB  EQU   IOMFL+1
IOMDDR   EQU   IOMFL+1
IOMCSW   EQU   IOMFL
IOMPGFIX EQU   IOMFL
IOMADERR EQU   IOMFL
IOMCBERR EQU   IOMFL
@NM00035 EQU   IOMFL
IOMPURGE EQU   IOMFL
IOMIOSB  EQU   IDAIOMB+36
IOMPGAD  EQU   IDAIOMB+32
IOMVSL   EQU   IDAIOMB+28
IOMIQE   EQU   IDAIOMB+20
IOMAMB   EQU   IDAIOMB+16
IOMPLH   EQU   IDAIOMB+12
IOMCPA   EQU   IDAIOMB+8
IOMBID   EQU   IDAIOMB
CPACCWTC EQU   CPACCW+24
CPACCWSI EQU   CPACCW+16
CPACCWSS EQU   CPACCW+8
CPACCWSK EQU   CPACCW
CPACPCHN EQU   IDACPA+92
CPANXT1  EQU   IDACPA+88
CPAWSECT EQU   IDACPA+87
CPARSECT EQU   IDACPA+86
CPATKOFL EQU   CPAFLAG2
CPAPFENT EQU   CPAFLAG2
CPAXLRA  EQU   CPAFLAG2
CPARREPL EQU   CPAFLAG2
CPAWREPL EQU   CPAFLAG2
@NM00034 EQU   CPAFLAG1
CPACHNED EQU   CPAFLAG1
CPARRPS  EQU   CPAFLAG1
CPAWRPS  EQU   CPAFLAG1
CPARV    EQU   CPAFLAG1
CPAWCV   EQU   CPAFLAG1
CPAVPLV  EQU   CPASTAT1
CPASSECT EQU   IDACPA+82
CPABCINV EQU   IDACPA+80
CPABLKSZ EQU   IDACPA+76
CPAWORK2 EQU   IDACPA+72
CPAWORK1 EQU   IDACPA+68
CPAVPL   EQU   IDACPA+64
CPAIDAL  EQU   IDACPA+60
@NM00033 EQU   CPARPHAD+7
CPARSID  EQU   CPARSEEK+2
CPARBB   EQU   CPARSEEK
@NM00032 EQU   CPARPHAD
CPAFWCNT EQU   IDACPA+48
CPAWSID  EQU   IDACPA+44
CPAWPHR  EQU   CPAWPHAD+7
CPAWCHR  EQU   CPAWSEEK+2
CPAWBB   EQU   CPAWSEEK
@NM00031 EQU   CPAWPHAD
CPARCPE  EQU   IDACPA+32
CPARCPS  EQU   IDACPA+28
CPARREAL EQU   IDACPA+24
CPAWCKE  EQU   IDACPA+20
CPAWCKS  EQU   IDACPA+16
CPAWCPE  EQU   IDACPA+12
CPAWCPS  EQU   IDACPA+8
CPAWREAL EQU   IDACPA+4
CPALEN   EQU   IDACPA+2
@NM00030 EQU   IDACPA+1
CPAID    EQU   IDACPA
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCWLEN EQU   BUFCINV
BUFCBAD  EQU   IDABUFC+20
BUFCAMB  EQU   BUFCPLH
@NM00029 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCMW   EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00028 EQU   IDABUFDR+16
@NM00027 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00025 EQU   IDAPLH+266
@NM00024 EQU   PLHTMRPL
PLHTMIOB EQU   PLHTMRPL
PLHTMINX EQU   PLHTMRPL
PLHTMDTA EQU   PLHTMRPL
PLHTMDIW EQU   PLHTMRPL
PLHTMBUF EQU   PLHTMRPL
PLHTERM  EQU   PLHTMRPL
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSLRBA EQU   IDAPLH+244
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00023 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHISPLP EQU   IDAPLH+196
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00022 EQU   IDAPLH+172
@NM00021 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHCHAIN EQU   IDAPLH+112
PLHAMB   EQU   IDAPLH+108
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00020 EQU   PLHRSCS
PLHDBPER EQU   PLHRSCS
PLHDSERR EQU   PLHRSCS
PLHASYER EQU   PLHRSCS
@NM00019 EQU   PLHRSCS
PLHBUFHD EQU   PLHRSCS
PLHINEOV EQU   PLHRSCS
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHDSIDA EQU   IDAPLH+24
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHVAMB  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHSLVLD EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00018 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
@NM00017 EQU   PLHFLG1
PLHDRPND EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00016 EQU   AMBCSWD1+1
@NM00015 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
@NM00014 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00013 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00012 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00011 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00010 EQU   AMBINFL
@NM00009 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00008 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00007 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00006 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00005 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBDSB   EQU   IDAAMB+20
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00004 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00003 EQU   RPLRBAR+3
@NM00002 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
BSPH1ST  EQU   IDABSPH+60
BSPHUBTM EQU   IDABSPH+56
BSPHUTOP EQU   IDABSPH+52
BSPHNUIW EQU   IDABSPH+48
BSPHFND  EQU   IDABSPH+40
BSPHRDS  EQU   IDABSPH+36
BSPHCPLH EQU   IDABSPH+32
BSPHPSUC EQU   BSPHCSRC+2
@NM00001 EQU   BSPHCSRC+1
BSPHPCUC EQU   BSPHFLG2
BSPHAPRT EQU   BSPHFLG2
BSPHBSZ  EQU   IDABSPH+24
BSPHMDBT EQU   IDABSPH+20
BSPHBUFC EQU   IDABSPH+16
BSPHERCT EQU   IDABSPH+14
BSPHBFNO EQU   IDABSPH+12
BSPHNBSP EQU   IDABSPH+8
BSPHNM   EQU   IDABSPH+4
BSPHLEN  EQU   IDABSPH+2
BSPHBFRF EQU   BSPHFLG1
BSPHIOBF EQU   BSPHFLG1
BSPHID   EQU   IDABSPH
IOECBWT  EQU   IOECB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00244 EQU   USERET
@RC00198 EQU   @EL00001
@RF00227 EQU   @RC00198
@ENDDATA EQU   *
         END   IDA019RZ,(C'PLS1734',0701,78209)
