         TITLE 'IEDQBO - SETEOM MODULE'
IEDQBO   CSECT
         SPACE 3
*CHANGE ACTIVITY AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A094500,208822-208825,503100-503950                             S22026
*A212000,301400                                                 SA53636
*C133900                                                        SA53636
*A089000,149070-149840                                           S99238
*C149000                                                         S99238
*C148800,524500-525000                                          SA54290
*A559450-559900                                                 SA54935
*D522000-526000                                                 SA54935
*A253380-253430                                                 SA59188
*C208860,253150,253250,253330,284500,344060                     SA59188
*D208867-208881,222040-222240,253410,291040-291804              SA59188
*A584770,584785-584787,584790                                   SA59189
*D584792                                                        SA59189
*C148090,148120,209000-210000                                    Y01004
*C132000,562000                                                 SA65376
*C500700-501400                                                 SA68031
*A148760,148820,559400                                          SA68031
*D584770                                                        OX02192
*C150215,150535,164100                                         @SA69659
*A133000,222300,582700                                         @XA05312
*C294000,294200                                                @XA05312
*A294200                                                       @XA07482
*A583485                                                         X03039
*C006000,583495                                                  X03039
*D584210-584250                                                  X03039
*C575400,C580300                                               @SA74862
*A584800                                                       @YA10031
*A583485,584708,584788,586600                                  @YA10427
*C589000                                                       @YA10427
*A545440,A582430                                               @OX11928
*A582100                                                       @OS76479
*A233800,258000                                                @OS76698
*A304000                                                       @OS68010
*A293000,294200                                                @OZ07831
*D208810-208820                                                @OZ08372
*A208840,571000                                                @Y17XAMG
*C006000                                                       @Y17XAMG
*C208825-208830,294350,539920                                  @OX14763
*A486700,582150,D486590,582350,C582200-582300                  @OS77376
*A208790                                                       @OX20137
*A476000                                                       @OZ28866
*A576800                                                       @OZ27813
         SPACE 3
***********************************************************************
*                                                                     *
* MODULE NAME - IEDQBO                                                *
*                                                                     *
* DESCRIPTIVE NAME - SETEOM MODULE                                    *
*                                                                     *
* COPYRIGHT - NONE                                                    *
*                                                                     *
* TITLE 'IEDQBO' - SETEOM MODULE                                      *
*                                                                     *
* STATUS - CHANGE LEVEL 10                                     @Y17XAMG
*                                                                     *
* FUNCTION - BLOCKS OR DEBLOCKS PHYSICALS MESSAGES INTO LOGICAL       *
*    MESSAGES ON COUNT, ON EOB BUFFERS OR BY EOM CHARACTER STRING.
*                                                                     *
* ENTRY POINT - 'IEDQBO'                                              *
*    CALLING SEQUENCE -                                               *
*         L    R15,IEDUI                                              *
*         BALR R14,R15                                                *
*                                                                     *
* INPUT -                                                             *
*    EXPECTED REGISTER CONTENTS                                       *
*         USING R3,SCB ADDR                                           *
*         USING R4,LCB ADDR                                           *
*         USING R6,BUFFER DSECT                                       *
*         USING R9,AVT BASE                                           *
*         USING R11,DISP DSECT                                        *
*         USING R12,BASE REGISTER                                     *
*    ADDRESS OF BO PARAMETER LIST PASSED IN R1; GENERATED IN SETEOM   *
*    MACRO                                                            *
*                                                                     *
* OUTPUT - DEBLOCKED OR BLOCKED LOGICAL MESSAGES; RETURN CODE IN      *
*          PRFNHDR+1                                                  *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    IEDQAE - LOCATE OPTION FIELDS FOR LENGTH AND/OR ENDCHAR          *
*    IEDQBN - REMOVE BUFFER FROM HOLD QUEUE AND ATTACH TO IT THE      *
*          CURRENT BUFFER                                             *
*    IEDQBR - COUNT DATA BYTES IN BUFFER WHEN BLOCKING OR DEBLOCKING  *
*          ON COUNT                                                   *
*    IEDQAF - CLOSE UP DATA IN BUFFER                                 *
*    IEDQAO - OBTAIN NEW UNIT FOR DATA AFTER EOM CHARACTER            *
*                                                                     *
* EXITS,NORMAL - BRANCHES TO DISPATCHER; RETURNS TO MH VIA UI         *
*                                                                     *
* EXITS,ERROR - N/A                                                   *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    AVT - ADDRESS VECTOR TABLE                                       *
*    LCB - LINE CONTROL BLOCK                                         *
*    SCB - STATION CONTROL BLOCK                                      *
*                                                                     *
* ATTRIBUTES - REUSABLE,REENTRABLE                                    *
*                                                                     *
* CHARACTER CODE DEPENDENCY - THE OPERATION OF THIS MODULE DOES NOT   *
*    DEPEND UPON AN INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER *
*    SET.                                                             *
*                                                                     *
* NOTES - N/A                                                         *
*                                                                     *
***********************************************************************
R0       EQU   0                        INPUT/OUTPUT REG FOR AXM
R1       EQU   1                        WORK REG
R2       EQU   2                        INPUT REG FOR AXM; ALSO, OPFLD
*                                       FOR ENDCHAR
RSCB3    EQU   3                        SCB
RSTCB    EQU   3                        STCB FOR BYPASS
RLCB4    EQU   4                        LCB
R5       EQU   5                        WORK REG
RPREFIX  EQU   6                        BUFFER
R7       EQU   7                        WORK REG
R8       EQU   8                        WORK REG
RAVT     EQU   9                        AVT
RPARM    EQU   10                       SETEOM PARM LIST
R11      EQU   11                       DISP DSECT
RBASE    EQU   12                       BASE
R13      EQU   13                       REG
R14      EQU   14                       REG
R15      EQU   15                       REG
ENDCH    EQU   X'01'                    ENDCHAR OPERAND SPECIFIED
EDCHOPF  EQU   X'02'                    ENDCHAR IN OPT FIELD
LNGOP    EQU   X'04'                    LENGTH OPERAND SPECIFIED
PROCESS  EQU   X'10'                    PROCESS EQ YES SPECIFIED
REMOVE   EQU   X'20'                    REMOVE EQ YES SPECIFIED
EOMETB   EQU   X'40'                    EOM=ETB SPECIFIED        S99238
STATUS   EQU   2                        OFFSET IN PARM LIST TO STATUS
*                                       BYTE
SAVOFF   EQU   2                        OFFSET IN BFR - AREA FOR SAVING
*                                       EOM OFFSET
CONST    EQU   2                        CONSTANT VALUE
UNEX     EQU   X'01'                    UNIT EXCEPTION
AEOFF    EQU   3                        OFFSET IN PARM LIST TO AE INDEX
LINK     EQU   3                        LENGTH OF ADDR
THREE    EQU   3                        LENGTH TO RESET SCB PTR  S22026
DISP4    EQU   4                        DISPLACEMENT VALUE
LINKOS   EQU   5                        LINK FIELD OFFSET IN PARM LIST
*                                       AND IN BFR
HOLDQ    EQU   4                        HOLD Q OFFSET
RG15OFF  EQU   15                       REG 15 OFFSET          @Y17XAMQ
ENDLEN   EQU   16                       OFFSET TO ENDCHAR LENGTH
SETEOMQ  EQU   16                       SETEOM QCB OFFSET IN PARM LIST
EOBBFR   EQU   20                      OFFSET IN STCB TO EOB BFR
EOT      EQU   X'37'                    EOT
AOOFF    EQU   7                        AO OFFSET
TXTHDRDF EQU   7                        DIFFERENCE BETWEEN HDR AND
*                                       TEXT PREFIX SIZE
AFOFF    EQU   6                        AF OFFSET
INOFF    EQU   4                        INSERT OFFSET
DATOFF   EQU   6                        DATA OFFSET
PARMLN   EQU   X'04'                    AE PARM LIST LENGTH
DISPA    EQU   1                        DISPLACEMENT
ONE      EQU   1                        INCREMENT
DISPB    EQU   11                       DISPLACEMENT
LASTUT   EQU   X'02'                    INDICATES LAST UNIT IN BFR
UTCNTOFF EQU   12                       OFFSET
EOMSTCB  EQU   16                       OFFSET TO SETEOM STCB (LCBCPA)
STCBPRI  EQU   X'C0'                    PRIORITY
STCBVTO  EQU   X'0A'                    SETEOM STCB VTO
DISP5    EQU   5                        DISPLACEMENT
DISP8    EQU   8                        DISPLACEMENT
FOUR     EQU   4                        SHIFT BUFIN TO LOW HALF BYTE
CLRHI    EQU   X'0F'                    CLEAR HI HALF OF THE FIRST
*                                       BYTE OF LCBERBCT
LINKFD   EQU   9                        DISPLACEMENT
MODBIT   EQU   X'01'                    USED TO TURN ON LOW ORDER BIT
*                                       OF INDEX
BROFF    EQU   X'05'                    OFFSET TO IEDQBR INDEX
CTOPOFF  EQU   X'0E'                    OFFSET TO CTR OPT FIELD
MAXOPT   EQU   X'08'                    FLAG- MAX COUNT IN OPT FIELD
MAXOFF   EQU   X'0D'                    OFFSET TO MAX COUNT OPT FIELD
INTEG    EQU   X'0C'                    MAX COUNT OFFSET IN PARM LIST
*                                       (WHEN INTEGER)
RETOFF   EQU   X'26'                    RETURN TO MH OFFSET PASSED
*                                       SETEOM PARM LIST
PRIMH    EQU   0                        ALT MH QCB ADDRESS      SA65376
ALTMH    EQU   5                        ALT MH ADDRESS IN QCB   SA65376
PARMLEN  EQU   8                        STARTMH PARM LENGTH
DISP3    EQU   3                        DISPLACEMENT OF 3      @XA05312
*
*                  PRFTQBCK+2 -- FLAG BYTE
*
DEBLKBFR EQU   X'80'                    DEBLOCKED BFR FLAG
NORDCON  EQU   X'40'                    NO READ CONT TO BE DONE IN THIS
*                                       BFR- NOT AN ORIGINAL BFR
EOBBUF   EQU   X'20'                    READ CONTINUE HAS BEEN DONE
*                                         IN THIS BUFFER
NOLNGOP  EQU   X'10'                    OPTION FIELD FOR LENGTH NOT
*                                       FOUND
EOMXBFR  EQU   X'08'                    EOM STRING CROSS BFR BOUNDARY
BREOBBF  EQU   X'02'                    READ CONT NECESSARY  (FOR
*                                       PROCESS=NO CASE)
NOCHAROP EQU   X'01'                    OPTION FIELD FOR ENDCHAR NOT
*                                       FOUND
*
*                  PRFNHDR+1  --  FIELD FOR RETURN CODE
*
BOTHCD   EQU   X'0C'                    RETURN CODE- PROCESSED ON BOTH
*                                       CONDITIONS (PRFNHDR+1)
NOUNIT   EQU   X'10'                    RETURN CODE- NO AVAILABLE BFR
*                                       UNITS (PRFNHDR+1)
COUNTCD  EQU   X'08'                    RETURN CODE- PROCESSED ON
*                                       COUNT CONDITION (PRFNHDR+1)
STRINGCD EQU   X'04'                    RETURN CODE- PROCESSED ON EOM
*                                       STRING (PRFNHDR+1)
NOTPRO   EQU   X'14'                    BUFFER NOT PROCESSED    SA53636
         USING IEDQBO1,RBASE
         USING IEDQAVTD,RAVT
         USING IEDQLCB,RLCB4
         USING IEDQPRF,RPREFIX
         USING IEDQSCB,RSCB3
         USING IEDQDISP,R11
IEDQBO1  EQU   *
IEDQBO   IEDHJN IDPASS
         LR    RPARM,R1                 ADDR OF PARM LIST
         NI    PRFTQBCK+2,EOBBUF+NORDCON CLEAR ALL BUT TWO FLAGS
         MVC   PRFXTRA+1(2),AVTFZERO    INDICATE NO EOB IN BUFFER
         TM    PRFSTAT1,PRFCNCLN       IS THIS A RD CONT BUFFER
         BNO   SCANQ                    NO
         NI    PRFSTAT1,X'FF'-PRFCNCLN    RESET CANCEL BIT
         MVC   PRFSCAN(2),PRFNHDR      RESET SCAN POINTER FROM SAVED
SCANQ    EQU   *
         TM    PRFSTAT1,PRFITCPN        TEMP END OF MESSAGE      Y01004
         BNO   SKIP4                    BR NO
         NI    PRFSTAT1,X'FF'-PRFNLSTN  SET AS LAST BFR
         NI    PRFSTAT1,PRFITCPF        TURN OFF FLAG            Y01004
SKIP4    EQU   *
         LA    R1,DISP4(RPARM)          EXIT TO BN
         OI    0(R1),MODBIT             TURN ON BIT FOR RETURN
         L     R15,AVTUI                EXIT TO
         BALR  R14,R15                  SCAN HOLD Q
         L     RPREFIX,AVTADBUF         SET UP BFR ADDR
         MVC   PRFCRCD(1),LCBISZE       SAVE ISZE FOR BFR
         NI    PRFTQBCK+2,X'FF'-EOMXBFR-DEBLKBFR  TURN OFF FLAGS
         MVC   PRFCRCD+1(2),AVTFZERO    INITIALIZE FIELD (INDICATE
*                                       COUNT CONDITION NOT MET)
         CLC   PRFSIZE(2),AVTFZERO      ZERO LENGTH BUFFER
         BE    NOEOM                    CHECK FOR RD CONT NECESSARY
         TM    AVTAFE30,AVTEFF          IS DUMP REQUESTED?
         BZ    SKIPFE                   BR NO
         L     R2,AVTAFE30              GET RTN ADDR
         LR    R1,RPREFIX               BFR ADDR
         LR    R8,R13                   SAVE AVTSAVE3 ADDR      SA68031
         LA    R13,AVTSAVE2             SAVE2 ADDRESS FOR RTNE  SA68031
         LR    R14,RPARM                SAVE PARAMETER REG      SA54290
         BALR  RPARM,R2                 LINK TO BUFFER TRACE    SA54290
         LR    R13,R8                   RESTORE SAVE3 ADDRESS   SA68031
         LR    RPARM,R14                RESTORE PARM REG        SA54290
SKIPFE   EQU   *
         MVI   PRFNHDR+1,AVTEZERO       ZERO OUT RETURN CODE FIELD
         TM    STATUS(RPARM),EOMETB     EOM=ETB                  S99238
         BNO   NOTETB                   BRANCH NO                S99238
         SPACE
         TM    PRFSTAT1,PRFNLSTN        EOB OR EOT BUFFER        S99238
         BO    CKCOUNT                  BRANCH NO                S99238
         SPACE
         LH    R0,PRFSIZE               SET EOB OFFSET           S99238
         N     R0,AVTCLRHI              CLEAR HIGH ORDER BYTE    S99238
         MVI   PRFNHDR+1,STRINGCD       PROCESSED ON EOM INDICAT S99238
         B     CONP1                    BRANCH TO POST BUFFER    S99238
         SPACE
NOTETB   EQU   *                                                 S99238
         TM    STATUS(RPARM),LNGOP      LENGTH OPERAND SPECIFIED S99238
         BZ    CKENDOPF                 BR NO
         TM    PRFTQBCK+2,NOLNGOP       HAS OPTION FIELD BEEN FOUND
*                                       ON PREVIOUS PASS?
         BO    CKENDOPF                 BR IF NOT FOUND PREVIOUSLY
         MVC   AVTPARM(1),AEOFF(RPARM)  AE INDEX
         MVI   AVTPARM+1,PARMLN         PARM LIST LNG
         MVC   AVTPARM+2(1),CTOPOFF(RPARM)  COUNTER OPT FIELD OFFSET
         MVI   AVTPARM+3,RG15OFF        REG 15 OFFSET
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTUI                AE TO
         BALR  R14,R15                  LOCATE OPT FIELD
         LTR   R15,R15                  OPT FIELD FOUND?
         BNZ   OPFLD2                   BR YES
         OI    PRFTQBCK+2,NOLNGOP       SET FLAG FOR LENGTH OPERAND NOT
*                                       FOUND
         TM    STATUS(RPARM),ENDCH      ENDCHAR SPECIFIED?
         BO    CKENDOPF                 BR YES
         MVI   PRFNHDR+1,NOTPRO         SET RETURN CODE- OPTION FIELD
*                                       NOT FOUND- BFR NOT PROCESSED
         B     NOEOM                    BRANCH                 @SA69659
OPFLD2   EQU   *
         LR    R7,R15                   ADDR OF COUNTER OPT FIELD
         TM    STATUS(RPARM),MAXOPT     MAX COUNT IN OPT FIELD?
         BZ    NOOPT                    BR NO
*                                       THEREFORE, MAX COUNT IS INTEGER
*                                       IN SETEOM PARM LIST
         MVC   AVTPARM(1),AEOFF(RPARM)  AE INDEX
         MVI   AVTPARM+1,PARMLN         PARM LNG
         MVC   AVTPARM+2(1),MAXOFF(RPARM) MAX COUNT OPT FIELD INDEX
         MVI   AVTPARM+3,RG15OFF        RG 15 OFFSET
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTUI                AE TO
         BALR  R14,R15                  LOCATE MAXCOUNT OPT FIELD
         LTR   R15,R15                  OPT FIELD FOUND?
         BNZ   OPFLD1                   BR YES
         OI    PRFTQBCK+2,NOLNGOP       SET FLAG FOR LENGTH OPERAND NOT
*                                       FOUND
         TM    STATUS(RPARM),ENDCH      ENDCHAR SPECIFIED?
         BO    CKENDOPF                 BR YES
         MVI   PRFNHDR+1,NOTPRO         SET RETURN CODE- OPTION FIELD
*                                       NOT FOUND- BFR NOT PROCESSED
         B     NOEOM                    BRANCH                 @SA69659
OPFLD1   EQU   *
         LR    R8,R15                   ADDR OF MAX COUNT OPT FIELD
         B     SKIP2                    BRANCH
NOOPT    EQU   *
         LA    R8,INTEG(RPARM)          ADDR OF MAX COUNT IN PARM LIST
*                                       (INTEGER)
SKIP2    EQU   *
         ST    RPARM,AVTPARM            ADDR OF SETEOM PARM LIST
         MVC   AVTPARM(1),BROFF(RPARM)  BR INDEX
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTUI                BR
         BALR  R14,R15                  THRU UI
         LTR   R15,R15                  EOM CONDITION ON COUNT MET?
         BNZ   CTEOM                    BR YES
         TM    STATUS(RPARM),ENDCH      ENDCHAR SPECIFIED?
         BO    CKENDOPF                 BR YES
         B     NOEOM                    BRANCH
CTEOM    EQU   *
         STH   R15,PRFCRCD+1            SAVE EOM POSITION
         TM    STATUS(RPARM),ENDCH      ENDCHAR SPECIFIED?
         BZ    LNGEOM                   BR NO
CKENDOPF EQU   *
         TM    STATUS(RPARM),EDCHOPF    ENDCHAR IN OPTFLD?
         BZ    FINDEOM1                 BR NO
         MVC   AVTPARM(1),AEOFF(RPARM)  BUILD AE
         MVI   AVTPARM+1,PARMLN         PARM LIST
         MVC   AVTPARM+2(1),ENDLEN(RPARM)  TO LOCATE OPT FIELD
         MVI   AVTPARM+3,RG15OFF        FOR ENDCHAR
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTUI                AE VIA
         BALR  R14,R15                  UI
         LTR   R15,R15                  WAS OPT FIELD FOUND?
         BNZ   CONT1                    BR YES
         OI    PRFTQBCK+2,NOCHAROP      SET FLAG FOR ENDCHAR OPERAND
*                                       NOT FOUND
         TM    STATUS(RPARM),LNGOP      LENGTH OPERAND SPECIFIED?
         BNO   NOOPTFLD                 BR NO
         TM    PRFTQBCK+2,NOLNGOP       LENGTH OPTION FIELDS FOUND?
         BNO   CKCOUNT                  BR YES
NOOPTFLD EQU   *
         MVI   PRFNHDR+1,NOTPRO         SET RETURN CODE- BFR NOT
*                                       PROCESSED DUE TO OPTION FIELDS
*                                       NOT FOUND
         B     NOEOM                    BRANCH                 @SA69659
CONT1    EQU   *
         LR    R2,R15                   ADDR OF OPFLD (ENDCHAR)
         B     FINDEOM                  BRANCH TO EXIT TO AX
FINDEOM1 EQU   *
         L     R2,ENDLEN(RPARM)         PUT ADDR OF ENDCHAR IN R1
FINDEOM  EQU   *
         LR    R1,R2                    ADDR OF ENDCHAR
         SR    R8,R8                    CLEAR REG
         IC    R8,0(R2)                 LENGTH OF ENDCHAR STRING
         LNR   R2,R1                    MAKE R2 NEGATIVE
         LH    R0,PRFSCAN               POINT AT WHICH AX  STARTS SCAN
         N     R0,AVTCLRHI              CLEAR HIGH ORDER BYTES
         L     R15,AVTAX                EXIT TO AX TO
         BALR  R14,R15                  SEARCH FOR EOM IN THIS BFR
         LTR   R15,R15                  EOM FOUND?
         BNZ   CON                      BR YES
CKCOUNT  EQU   *
         CLC   PRFCRCD+1(2),AVTFZERO    EOM ON COUNT CONDITION MET?
         BNE   LNGEOM                   BR YES
NOEOM    EQU   *
         TM    STATUS(RPARM),PROCESS    PROCESS EQ YES?
         BO    PROYES                   BR YES
         TM    PRFSTAT1,PRFNLSTN        EOT BFR?
         BO    CONT                     BR NO
CKRDCON  EQU   *
         TM    SCBQTYPE,SCBBBFTM        SCB FOR TERMINAL?
         BNO   CONT                     BR NO
         TM    SCBERR4,SCBTXTTN+SCBSLCTN  TEXT ERROR OR ERROR
*                                       DURING SELECTION?
         BNZ   CONT                     BR YES
         TM    SCBERR1,SCBCUTFN         EXECUTED                OY00508
         BO    CONT                     YES, BRANCH             OY00508
         TM    LCBSTAT2,LCBDIAL         DIAL TERMINAL          @OX20137
         BNO   NOTDIAL                  NO, PROCEED            @OX20137
         CLI   LCBTSTSW,AVTEFF          IS IT STILL CONNCTD    @OX20137
         BE    CONT                     IF NOT, LEAVE BFR      @OX20137
*                                       MARKED AS LAST         @OX20137
NOTDIAL  EQU   *                                               @OX20137
         SPACE
         L     R5,LCBSTCBA-1            GET STCB ADDR           S22026
         CLI   AVTEZERO(R5),STCBVTO     PROC=YES ALREADY EXEC'D S22026
*                                       ON THIS BUFFER          S22026
         BNE   FIRST1                   NO, BRANCH             @OX14763
         CLI   FOUR(R5),STCBPRI         CORRECT PRIORITY       @OX14763
         BE    MIDMSG                   YES, NO READ CONT      @OX14763
FIRST1   EQU   *
         LH    R5,SCBEOB                GET EOB OFFSET         @OX14763
         MVC   PRFOPCDE(8),LCBCPA+16    SET CCW FOR COMMON CODE
         CLI   LCBFLAG1,LCBPLCB         PLCB                   @YM07646
         BNE   TSTRESP1                 BR NO                  @YM07646
         TM    LCBSTAT5,LCBLUNIT        IS THIS AN LU-LU SESS? @Y17XAMG
         BO    MIDMSG                   BRANCH IF SO           @Y17XAMG
TSTRESP1 EQU   *                                               @YM07646
         TM    LCBSTAT2,LCBRESP         IS READ CONTINUE NECESSARY
         BO    ARDCONT                  BR YES                  SA59188
MIDMSG   EQU   *
         SPACE
         OI    PRFSTAT1,PRFNLSTN+PRFITCPN TURN OFF EOT & ON EOM  Y01004
         OI    SCBQTYPE,SCBBFMM         TURN ON MID MSG BIT
CONT     EQU   *
         SR    R1,R1                    CLEAR REGISTER          SA53636
         IC    R1,PRFNHDR+1             SET RETURN CODE         SA53636
         L     R14,AVTUI                EXIT
         B     DISP4(R14)               THRU UI
PROYES   EQU   *
         TM    SCBERR4,SCBSLCTN         ERROR DURING SELECTION?
         BO    CONT                     BR YES
         TM    PRFSTAT1,PRFNLSTN        EOT BFR?
         BZ    FORCEOM                  BR YES
         TM    PRFTQBCK+2,DEBLKBFR      IS THIS A DEBLOCKED BFR?
         BZ    QBFR                     BR NO TO LINK BFR ON SETEOM Q
*                                       ELSE, LINK BFR ON HOLD Q
COMP     EQU   *
         TM    STATUS(RPARM),LNGOP      LENGTH OPERAND SPECIFIED?
         BZ    HOLDPRO                  BR NO
         TM    PRFTQBCK+2,NOLNGOP       LENGTH OPTION FIELDS FOUND?
         BO    HOLDPRO                  BR NO
         LH    R7,PRFSIZE               SIZE OF BFR
         N     R7,AVTCLRHI              CLEAR HIGH ORDER BYTES
HOLDPRO2 EQU   *
         SR    R2,R2                    CLEAR REG
         L     R14,LCBDCBPT             DCB ADDR
         TM    PRFSTAT1,PRFNHDRN        HDR BFR?
         BO    TXTIDL1                  BR NO
         TM    PRFTQBCK+2,DEBLKBFR      HDR BFR OF FIRST LOGICAL MSG?
         BO    HDRES                    BR NO
         IC    R2,LCBISZE               NO. OF RESERVES CHARACTERS
         B     HDRES1                   BR
HDRES    EQU   *
         IC    R2,DCBRESER-IHADCB(R14)  NO. OF HDR RESERVES
HDRES1   EQU   *
         LA    R2,AVTHDRSZ(R2)          HDR PREFIX SIZE
         B     SK                       BR
TXTIDL1  EQU   *
         IC    R2,DCBRESER+1-IHADCB(R14)  NO. OF TEXT RESERVES
         LA    R2,AVTTXTSZ(R2)          TEXT PREFIX SIZE
SK       EQU   *
         SR    R7,R2                    AMOUNT OF DATA BYTES GOING ON
*                                       HOLD Q (THAT IS, THE NO. TO BE
*                                       SUBTRACTED FROM CTR FIELD OF
*                                       LENGTH OPERAND)
HOLDPRO1 EQU   *
         MVC   AVTPARM(1),AEOFF(RPARM)  AE INDEX
         MVI   AVTPARM+1,PARMLN         PARM LIST LNG
         MVC   AVTPARM+2(1),CTOPOFF(RPARM)  CTR OPTION FIELD INDEX
         MVI   AVTPARM+3,RG15OFF        REG 15 OFFSET
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTUI                AE TO
         BALR  R14,R15                  LOCATE OPTION FIELD
CONTN    EQU   *
         LH    R8,0(R15)                VALUE IN COUNTER OPTION FIELD
         N     R8,AVTCLRHI              DECREMENT COUTN
         SR    R8,R7                    IN THE
         STH   R8,0(R15)                COUNTER OPTION FIELD
HOLDPRO  EQU   *
         LA    R14,EXITDSP              SET RETURN TO DISPATCH
         TM    STATUS(RPARM),PROCESS    PROCESS=YES            @XA05312
         BO    HOLDEOB                  BR YES                 @XA05312
*                                                              @XA05312
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER            @XA05312
         BO    HOLDEOB                  BR NO                  @XA05312
*                                                              @XA05312
         LA    R14,CRDCONT              RETURN TO READ CONTINUE@XA05312
HOLDEOB  EQU   *
         LR    R8,RPREFIX               ADDR OF FIRST UNIT OF BFR
         SR    R7,R7                    CLEAR REG
         IC    R7,PRFNBUNT              NO. OF UNITS IN BFR
         B     FUNIT                    BRANCH
LTUT     EQU   *
         L     R8,PRFTIC-IEDQPRF(R8)    BUMP TO NEXT UNIT
FUNIT    EQU   *
         BCT   R7,LTUT                  DECREMENT COUNT
*                                       R8 NOW HAS ADDR OF LAST UNIT
         L     R0,PRFTIC-IEDQPRF(R8)    GET NEXT FUFFER ADDR
         MVC   PRFTIC+1-IEDQPRF(3,R8),AVTFZERO  SET AS LAST
         MVI   DISPB(R8),LASTUT         UNIT OF BFR
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR?
         BO    STRN                     BR YES
         IC    R5,LCBISZE               SET ISZE IN
         STC   R5,PRFSCAN               PRFSCAN FOR BN
QHOLDQ   EQU   *                                               @OS76698
         LA    R5,HOLDQ(RPARM)          ADDR OF HOLD QCB
LP1      EQU   *
         B     LOOP1                    PUT BUFFER ON HOLD Q
CON      EQU   *
         CR    R15,R8                   ALL OF EOM STRING FOUND (STRING
*                                       NOT CROSS BFR BOUNDARY)
         BE    ALLFND                   BR YES
         CLC   PRFCRCD+1(2),AVTFZERO    EOM ON COUNT CONDITION MET?
         BNE   LNGEOM                   BR YES
         TM    PRFSTAT1,PRFNLSTN        EOT BFR?
         BO    CONT4                    BR NO
         TM    STATUS(RPARM),PROCESS    PROCESS EQ YES?
         BO    FORCEOM                  BR YES
         B     CKRDCON                  BRANCH
CONT4    EQU   *
         TM    PRFTQBCK+2,DEBLKBFR      DEBLOCKED BFR?
         BZ    CONTP                    BR NO
         TM    STATUS(RPARM),LNGOP      LENGTH OPERAND SPECIFIED?
         BZ    HOLDPRO                  BR NO                   SA59188
         TM    PRFTQBCK+2,NOLNGOP       LENTTH OPTION FIELDS FOUND?
         BO    HOLDPRO                  BR NO                   SA59188
         LH    R7,PRFSIZE               AMOUNT OF DATA IN BFR   SA59188
         N     R7,AVTCLRHI              CLEAR HI HALF           SA59188
         B     HOLDPRO2                 DECREMENT COUNT FIELD   SA59188
CONTP    EQU   *
         SR    R0,R15                   BACK UP PTR TO FIRST BYTE OF
*                                       THE SETEOM STRING WHICH
*                                       CROSSES BFR BOUNDARIES
         OI    PRFTQBCK+2,EOMXBFR       INDICATE PARTIAL EOM STRING
*                                       FOUND IN BFR
         SR    R1,R1                    CLEAR WORK REG         @OS76698
         IC    R1,LCBISZE               COUNT OF UNUSED IDLES  @OS76698
         LA    R1,PRFSTXT-PRFSUNIT(,R1)  ADD TEXT PREFIX LNGTH @OS76698
         TM    PRFSTAT1,PRFNHDRN        HEADER BUFFER?         @OS76698
         BO    CONTP1                   BRANCH IF NO           @OS76698
         LA    R1,PRFSHDR-PRFSTXT(,R1)  ADD DIFFERENCE BETWEEN @OS76698
*                                       TEXT AND HEADER PREFIX @OS76698
CONTP1   EQU   *                                               @OS76698
         LH    R14,PRFSIZE              PREFIX SIZE            @OS76698
         N     R14,AVTCLRHI             CLEAR HIGH HALFWORD    @OS76698
         SR    R14,R1                   NUMBER OF DATA BYTES   @OS76698
         CR    R14,R15                  IS THE PARTIAL STRING  @OS76698
*                                        THE ONLY DATA IN BFR? @OS76698
         BH    CONP                     BRANCH IF NO           @OS76698
         LA    R14,EXITDSP              HANG PARTIAL EOM BFR   @OS76698
         B     QHOLDQ                     ON HOLD QUEUE        @OS76698
STRN     EQU   *
         LR    R7,R5                    ADDR OF ORIGINAL BFR THAT HAD
*                                       PARTIAL EOM STRING IN IT
         LA    R5,HOLDQ(RPARM)          ADDR OF HOLD Q
         BAL   R14,LOOP1                BR TO LINK BFR WITH PARTIAL
*                                       STRING IN IT ON HOLD Q
         LR    RPREFIX,R7               ORIGINAL BFR WITH STRING
*                                       REMOVED
         ST    RPREFIX,AVTADBUF         SET ADBUF TO THIS BUFFER
         OI    PRFSTAT1,PRFNLSTN        SET AS NOT LAST BFR
         TM    STATUS(RPARM),PROCESS    PROCESS EQ YES?
         BNO   CONT                     BR NO TO RETURN
QBFR     EQU   *
         LA    R5,SETEOMQ(RPARM)        ADDR OF SETEOM Q
         BAL   R14,SIZE                 BR TO CALC ISZE AND LINK BFR
*                                       ON SETEOM Q
EXITDSP  EQU   *
         L     R11,AVTEA                DISPATCHER
         LA    R13,AVTSAVE2             ADDR OF SAVE2
         B     DSPDISP                  BR TO DISPATCHER
ALLFND   EQU   *
         CLC   PRFCRCD+1(2),AVTFZERO    EOM ON COUNT CONDITION MET?
         BE    CKCODE1                  BR NO                   SA59188
         CH    R0,PRFCRCD+1             EOM ON COUNT OCCUR FIRST?
         BE    CKCODE                   BR IF EOM ON COUNT CONDITION
*                                       COINCIDES WITH EOM STRING
         BL    CKCODE1                  BR IF EOM STRING OCCURS FIRST
*                                       ELSE, USE COUNT CONDITION
LNGEOM   EQU   *
         LH    R0,PRFCRCD+1             SET R0 AS OFFSET IN BFR TO
         N     R0,AVTCLRHI              END OF COUNT CONDITION
         LR    R1,R0                    SET R1
         LR    R7,RPREFIX               BFR ADDR
         BAL   R14,ENTERLOP             BR TO FIND ENDING ADDR OF
*                                       EOM DELIMITER
         MVI   PRFNHDR+1,COUNTCD        RETURN CODE- PROCESSED ON COUNT
*                                       CONDITION
         B     CKPRO2                   BRANCH
CKCODE   EQU   *
         MVI   PRFNHDR+1,BOTHCD         RETURN CODE- COUNT AND EOM
*                                       STRING COINCIDE
         B     CKPRO2                   BRANCH
CKCODE1  EQU   *
         MVI   PRFNHDR+1,STRINGCD       RETURN CODE- PROCESSED ON
*                                       EOM STRING
CKPRO2   EQU   *
         TM    STATUS(RPARM),PROCESS    PROCESS EQ YES?
         BO    CKEOT2                   BR YES
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER?           @OZ07831
         BO    NOTLAST                  BRANCH NO              @OZ07831
         TM    LCBCSW+DISP3,UNEX        EOT RECEIVED           @XA05312
         BO    CONT5                    BR YES                 @XA05312
NOTLAST  EQU   *                                               @OZ07831
         L     R7,LCBSTCBA-ONE          FIRST SUBTASK IN CHAIN @XA07482
         CLI   AVTEZERO(R7),STCBVTO     IS IT THE LMD SUBTASK  @XA07482
         BNE   SETSIZ                   NO, BRANCH             @OX14763
         CLI   FOUR(R7),STCBPRI         CORRECT PRIORITY       @OX14763
         BE    CONT5                    BRANCH YES             @OX14763
SETSIZ   EQU   *
         STH   R0,PRFSIZE               ADJUST PRFSIZE
         IC    R7,LCBISZE               SET ISZE IN
         STC   R7,PRFSCAN               PRFSCAN FOR BN
         B     COMP                     BR TO LINK BFR ON HOLD Q
CONT5    EQU   *
         CLI   PRFNHDR+1,COUNTCD        DOES COUNT CONDITION PREVAIL?
         BE    SHORT                    BR YES
         TM    STATUS(RPARM),REMOVE     REMOVE EOM STRING?
         BZ    SHORT                    BR NO
         SR    R0,R8                    SHORTEN BFR BY EOM STRING
         BAL   R14,CHECK                CHECK FOR ZERO BFR CREATED
SHORT    EQU   *
         STH   R0,PRFSIZE               SHORTEN BFR APPROPRIATELY
         CLC   SCBDEOB+1(3),AVTADBUF+1  EOB BFR
         BNE   SETLAST                  BR NO
         SPACE
         CH    R0,SCBEOB                PRFSIZE GREATER THAN EOB
         BNL   SETLAST                  BR YES
         SPACE
         STH   R0,SCBEOB                SET EOB TO PRFSIZE
SETLAST  EQU   *
         SR    R1,R1                    CLEAR REGISTER          SA53636
         IC    R1,PRFNHDR+1             SET RETURN CODE         SA53636
         NI    PRFSTAT1,PRFNLSTF        SET AS EOT BFR
         L     R14,AVTUI                EXIT THRU
         B     DISP4(R14)               UI+4
CKEOT2   EQU   *
         TM    LCBCSW+3,UNEX            REAL EOT RECEIVED?     @OS68010
         BNO   CONP1                    BRANCH IF NO           @OS68010
         CLI   DISPA(R1),EOT            NEXT CHAR A X'37' ?
         BNE   CONP1                    BR NO
         CLI   PRFNHDR+1,COUNTCD        DOES COUNT CONDITION PREVAIL?
         BE    FORCEOM                  BR YES
         TM    STATUS(RPARM),REMOVE     REMOVE EOM STRING?
         BZ    FORCEOM                  BR NO
         SR    R0,R8                    SHORTEN BFR BY
         BAL   R14,CHECK                CHECK FOR ZERO BFR CREATED
         STH   R0,PRFSIZE               EOM STRING
         B     FORCEOM                  BRANCH
CONP1    EQU   *
         CH    R0,PRFSIZE               EOM STRING LAST IN BFR?
         BNE   CONP2                    BR NO
         TM    PRFSTAT1,PRFNLSTN        LAST BFR?
         BO    CONP2                    BR NO
         TM    LCBCSW+3,UNEX            EOT RECEIVED?
         BNZ   SK1                      BR YES
         CLC   SCBDEOB+1(3),AVTADBUF+1  EOB BFR?
         BNE   SK1                      BR NO
         CLC   SCBEOB(2),PRFSIZE        EOB LAST IN BFR?
         BNE   SK1                      BR NO
         L     R2,AVTBFREB              AVAIL BFR Q
         LA    R2,0(R2)                 ANY BFR UNITS
         LTR   R2,R2                    AVAILABLE?
         BNZ   UNIT                     BR YES
         MVI   PRFNHDR+1,NOUNIT         SET RETURN CODE
         OI    LCBCSW+3,UNEX            SET UNEX BIT
         NI    LCBSTAT2,X'FF'-LCBRESP   TURN OFF RESP BIT
         B     PREPARE                  BRANCH
UNIT     EQU   *
         MVC   AVTBFREB+1(3),PRFLINK-IEDQPRF(R2)  DELINK BFR
         LH    R5,AVTAVFCT              ADJUST AVAIL COUNT
         BCTR  R5,0                     SET COUNTER
         STH   R5,AVTAVFCT              STORE IT BACK
         SR    R5,R5                    CLEAR REG
         L     R14,LCBDCBPT             NO. OF
         IC    R5,DCBRESER-IHADCB(R14)  HDR RESERVES
         STC   R5,PRFCRCD               SAVE IT
         LA    R5,AVTHDRSZ(R5)          ADD PREFIX SIZE
         BCTR  R5,0                     DECREMENT FOR EX
         EX    R5,MVPRE                 MOVE PREFIX + RESERVES INTO
*                                       NEW BFR
         LA    R5,ONE(R5)               RESET TOTAL
         STH   R5,PRFSIZE-IEDQPRF(R2)   SET PFFRIZE
         STH   R5,PRFSCAN-IEDQPRF(R2)   SET PRFSCAN
         STH   R5,SCBEOB                UPDATE EOB OFFSET AND
         ST    R2,SCBDEOB               EOB BFR POINTER
         NI    PRFSTAT1-IEDQPRF(R2),PRFNHDRF SET AS HDR BFR
         LR    R5,RPREFIX               ADDR OF FIRST UNIT OF BFR
         SR    R1,R1                    CLEAR REG
         IC    R1,PRFNBUNT              NO. OF UNITS
         B     FUNIT1                   BRANCH
LTUT1    EQU   *
         L     R5,PRFTIC-IEDQPRF(R5)    BUMP TO NEXT UNIT
FUNIT1   EQU   *
         BCT   R1,LTUT1                 DECREMENT COUNT
         MVC   PRFTIC-IEDQPRF(4,R2),PRFTIC-IEDQPRF(R5) MOVE NEXT BFR
*                                       ADDR INTO NEW BFR
         MVC   PRFTIC+1-IEDQPRF(3,R5),AVTFZERO  SET AS LAST
         MVI   DISPB(R5),LASTUT         UNIT OF BFR
         LA    R1,ONE                   SET TO
         STC   R1,PRFNBUNT-IEDQPRF(R2)  ONE UNIT BFR
         MVI   PRFTQBCK+2-IEDQPRF(R2),AVTEZERO REINIT FLAG BYTE
         OI    PRFTQBCK+2-IEDQPRF(R2),DEBLKBFR+NORDCON SET FLAGS
         CLI   PRFNHDR+1,COUNTCD        DOES COUNT CONDITION PREVAIL?
         BE    SKIP5                    BR YES
         TM    STATUS(RPARM),REMOVE     REMOVE EQ YES?
         BZ    SKIP5                    BR NO
         SR    R0,R8                    SUBTRACT LENGTH OF EOM STRING
         BAL   R14,CHECK                CHECK FOR ZERO BFR CREATED
         STH   R0,PRFSIZE               ADJUST PRFSIZE
SKIP5    EQU   *
         LA    R5,SETEOMQ(RPARM)        PUT ORIGINAL BFR ON
         BAL   R14,SIZE                 SETEOM Q
         LR    RPREFIX,R2               SET NEW BFR
         ST    RPREFIX,AVTADBUF         AS CURRENT BFR
         XC    PRFLINK(3),PRFLINK       CLEAR FIELD
         XC    PRFSTXT(PRFSHDR-PRFSTXT+ONE),PRFSTXT  ZERO BYTES
         B     FORCEOM                  BRANCH
SK1      EQU   *
         CLI   PRFNHDR+1,COUNTCD        COUNT CONDITION PREVAIL
         BE    FORCEOM                  BR YES
         TM    STATUS(RPARM),REMOVE     REMOVE EQ YES
         BZ    SKIP1                    BR NO
         SR    R0,R8                    SHORTEN BFR BY
         BAL   R14,CHECK                CHECK FOR ZERO BFR CREATED
         STH   R0,PRFSIZE               EOM STRING
         OI    PRFTQBCK+2,NORDCON       INDICATE NO RD CONT IN THIS BFR
SKIP1    EQU   *
         B     FORCEOM                  BRANCH TO CLEAN SETEOM Q
CONP2    EQU   *
         CLI   PRFNHDR+1,COUNTCD        DOES COUNT CONDITION PREVAIL?
         BE    CONP                     BR YES
         STH   R8,PRFCRCD+1             SAVE LENGTH OF EOM STRING
CONP     EQU   *
         LA    R2,ONE                   CTR TO DETERMINE WHICH UNIT
*                                       EOM IN (PRFNBUNT FOR EOM BFR)
         STH   R0,SAVOFF(RPREFIX)       SAVE OFFSET INTO EOM BFR (NEW
*                                       PRFSIZE FOR EOM BFR)
         B     FNDUT                    BRANCH TO FIND UNIT WITH EOM
LP2      LA    R2,ONE(R2)               ADD TO CTR
         SH    R0,AVTKEYLE              SUBTRACT KEYLEN
FNDUT    CH    R0,AVTKEYLE              EOM IN THIS UNIT?
         BH    LP2                      BR NO
*        R2 CONTAINS NO. OF UNITS IN SETEOM BFR
*        R0 CONTAINS OFFSET TO END OF EOM STRING IN THE ACTUAL UNIT
*        THAT CONTAINS THE STRING
         LR    R7,R0                    SAVE OFFSET
         LH    R5,AVTKEYLE              KEYLEN
         SR    R5,R0                    R5 CONTAINS REMAINING BYTES IN
*                                       IN EOM UNIT
         LH    R0,SAVOFF(RPREFIX)       RESTORE R0 - OFFSET IN EOM BFR
*                                       OF END OF EOM STRING
         N     R0,AVTCLRHI              CLEAR HIGH BYTES
         LA    R8,ONE                   INITIALIZE TO ONE
         AR    R0,R8                    ADD 1 FOR AO
GETUNIT  EQU   *
         MVC   AVTPARM(1),AOOFF(RPARM)  AO INDEX INTO AVTPARM
         OI    AVTPARM,MODBIT           TURN ON BIT IN AO INDEX SO
*                                       RETURN IS TO BO
         MVC   INOFF(2,RPREFIX),AVTFZERO  INSERT OFFSET
         STH   R0,DATOFF(RPREFIX)       DATA OFFSET
         MVI   AVTPARM3,AVTEFF          SET FLAG IN PARM3
         LA    R1,AVTPARM               EXIT TO AO AND BACK TO BO
         L     R15,AVTUI                UI
         BALR  R14,R15                  EXIT TO GET UNIT
         LTR   R15,R15                  DID I GET A UNIT
         BZ    AUNIT                    YES BRANCH
         MVI   PRFNHDR+1,NOUNIT         SET RETURN CODE- NO UNITS
*                                       AVAILABLE
         TM    PRFSTAT1,PRFNLSTN        LAST BFR?
         BNO   CONT7                    BR YES
         NI    PRFTQBCK+2,X'FF'-EOMXBFR  TURN OFF BIT
         B     HOLDPRO                  PUT BFR ON HOLD QUEUE   SA59188
CONT7    EQU   *
         CLI   LCBFLAG1,LCBPLCB         PLCB                   @YM07646
         BNE   SETUNEX                  BR NO                  @YM07646
         TM    LCBSTAT5,LCBLUNIT        LU                     @YM07646
         BO    PREPARE                  BR YES                 @YM07646
SETUNEX  EQU   *                                               @YM07646
         OI    LCBCSW+3,UNEX            SET UNEX BIT
         NI    LCBSTAT2,X'FF'-LCBRESP   TURN OFF RESP BIT
         B     PREPARE                  BRANCH
AUNIT    EQU   *
         SR    R1,R1                    CLEAR REG
         L     R14,LCBDCBPT             DCB ADDR
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR?
         BO    PARTSTR                  BR YES
         IC    R1,DCBRESER-IHADCB(R14)  NO. OF HDR RESERVES
         LA    R1,AVTHDRSZ(R1)          HDR PREFIX SIZE
         B     COPR                     BR TO DETERMINE IF ANOTHER UNIT
*                                       NEEDED
PARTSTR  EQU   *
         IC    R1,DCBRESER+1-IHADCB(R14)  NO. OF TEXT RESERVES
         LA    R1,AVTTXTSZ(R1)          TEXT PREFIX SIZE
COPR     EQU   *
         CR    R1,R7                    COMPARE PREFIX + RESERVES WITH
*                                       OFFSET IN UNIT(S) TO DETERMINE
*                                       IF SPACE AVAILABLE TO MOVE IN
*                                       PREFIX + RESERVES
         BNH   MVE                      BR IF SPACE AVAILABLE
         AH    R7,AVTKEYLE              OFFSET IN BFR AFTER GOT UNIT
         LH    R0,DATOFF(RPREFIX)       ELSE, GET NEW OFFSET IN BFR
         B     GETUNIT                  BR TO GET ANOTHER UNIT
MVE      EQU   *
         SR    R1,R1                    CLEAR REG
         IC    R1,PRFNBUNT              TOTAL NO. OF UNITS
         SR    R1,R2                    SUBTRACT NO. OF UNITS FOR EOM
*                                       BFR
         STC   R2,PRFNBUNT              NO. OF UNITS IN EOM BFR AND
*                                       R1 CONTAINS NO. OF UNITS FOR
*                                       NEW BFR
         LH    R8,PRFSIZE               TOTAL NO. OF BYTES IN ALL
         N     R8,AVTCLRHI             CLEAR HI ORDER BYTES
         MVC   PRFSIZE(2),SAVOFF(RPREFIX) MOVE PRFSIZE INTO EOM BFR
         LH    R2,PRFSIZE               PRFSIZE OF EOM BFR
         N     R2,AVTCLRHI              CLEAR HIGH ORDER BYTES
         SR    R8,R2                    PRFSIZE OF NEW BFR = TOTAL
         SR    R8,R5                    PRFSIZE - PRFSIZE OF SETEOM BFR
*                                       - REMAING BYTES IN EOM UNIT
         LR    R5,RPREFIX               BFR ADDR
         SR    R2,R2                    CLEAR REG
         IC    R2,PRFNBUNT              NO. OF BFR UNITS IN EOM BFR
         B     STCOMP                   BRANCH
DELOOP   EQU   *
         L     R5,PRFTIC-IEDQPRF(R5)    BUMP TO NEXT UNIT
STCOMP   EQU   *
         BCT   R2,DELOOP                BR IF NOT LAST UNIT OF EO
*                                       BFR
         L     R2,PRFTIC-IEDQPRF(R5)    ADDR OF NEW BFR
         MVC   PRFTIC+1-IEDQPRF(3,R5),AVTFZERO SET AS LAST UNIT OF
         MVI   DISPB(R5),LASTUT         EOM BFR
         SR    R5,R5                    CLEAR REG
         L     R14,LCBDCBPT             ADDR OF DCB
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR?
         BO    PARTSTR1                 BR YES
         IC    R5,DCBRESER-IHADCB(R14)  NO. OF HDR RESERVES
         LA    R5,AVTHDRSZ(R5)          HDR PREFIX SIZE
         B     COPR1                    BRANCH
PARTSTR1 EQU   *
         IC    R5,DCBRESER+1-IHADCB(R14)  NO. OF TEXT RESERVES
         LA    R5,AVTTXTSZ(R5)          TEXT PREFIX SIZE
COPR1    EQU   *
         BCTR  R5,0                     DECREMENT BY 1 FOR EX
         EX    R5,MVPRE                 MOVE PREFIX + RESERVES INTO
*                                       NEW BFR
         STC   R1,PRFNBUNT-IEDQPRF(R2)  NO. OF UNITS IN NEW BFR
         STH   R8,PRFSIZE-IEDQPRF(R2)   PRFSIZE IN NEW BFR
*                                       TURN OFF EOB FLAG IN NEW BFR
         NI    PRFTQBCK+2-IEDQPRF(R2),X'FF'-EOBBUF
         LH    R0,PRFSIZE               PRFSIZE OF EOM BFR
         N     R0,AVTCLRHI              CLEAR HI HALF
         LR    R5,R0                    SAVE ORIGINAL PRFSIZE
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR?
         BO    CONT6                    BR YES
         NI    PRFSTAT1,PRFNLSTF        SET EOM BFR AS EOT BFR
         CLI   PRFNHDR+1,COUNTCD        DEBLOCKING ON COUNT?
         BE    CONT6                    BR YES
         SPACE
         TM    STATUS(RPARM),REMOVE     REMOVE EQ YES?
         BZ    CONT6                    BR NO
         SH    R0,PRFCRCD+1             SHORTEN BFR BY LENGTH OF STRING
         LR    R1,R7                    SAVE REG
         BAL   R14,CHECK                CHECK FOR ZERO BFR CREATED
         LR    R7,R1                    RESTORE REG
         STH   R0,PRFSIZE               SET SIZE
CONT6    EQU   *
         CLC   SCBDEOB+1(3),AVTADBUF+1  DOES SCBDEOB POINT TO EOM BFR?
         BNE   SKIP                     BR NO
         SPACE
         CH    R5,SCBEOB                EOB AFTER EOM STRING
         BL    UPDEOB                   YES, GO UPDATE DEOB
         SPACE
         CH    R0,SCBEOB                EOB BEFORE EOM STRING
         BNL   SKIP                     BR YES
         SPACE
         STH   R0,SCBEOB                ADJUST EOB TO NEW PRFSIZE
         B     SKIP                     GO PUT BFR ON SETEOM Q
         SPACE
UPDEOB   EQU   *
         IC    R5,SCBDEOB               POINT SCBDEOB
         ST    R2,SCBDEOB               TO THE
         STC   R5,SCBDEOB               NEW BFR
SKIP     EQU   *
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR
         BO    SWAPBFR                  BR YES
         SPACE
         LA    R5,SETEOMQ(RPARM)        BR TO LINK EOM BFR ON
         BAL   R14,SIZE                 SETEOM Q
         SPACE
SWAPBFR  EQU   *
         LR    R5,RPREFIX               R5 CONTAINS ADDR OF ORIGINAL
*                                       BFR
         LR    RPREFIX,R2               SET NEW BFR AS CURRENT BFR
         ST    RPREFIX,AVTADBUF         UPDATE AVTADBUF
         SR    R2,R2                    CLEAR REG
         L     R14,LCBDCBPT             ADDR OF DCB
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR?
         BO    PARTSTR2                 BR YES
         IC    R2,DCBRESER-IHADCB(R14)  NO. OF HDR RESERVES
         STC   R2,LCBISZE               SET ISZE FOR NEW BFR
         STC   R2,PRFCRCD               SAVE ISZE BFR
         LA    R2,AVTHDRSZ(R2)          HDR PREFIX SIZE
         NI    PRFSTAT1,PRFNHDRF        SET AS HDR BFR
         XC    PRFSTXT(PRFSHDR-PRFSTXT+ONE),PRFSTXT ZERO LAST SEVEN
*                                       BYTES OF PREFIX PLUS ONE EXTRA
         STH   R2,PRFSCAN               SET UP PRFSCAN
         B     COPR2                    BRANCH
PARTSTR2 EQU   *
         IC    R2,DCBRESER+1-IHADCB(R14)  NO. OF TEXT RESERVES
         STC   R2,PRFSCAN               SET ISZE IN PRFSCAN FOR BN
         LA    R2,AVTTXTSZ(R2)          TEXT PREFIX SIZE
         STC   R2,PRFSCAN+1             SET UP PRFSCAN
         OI    PRFSTAT1,PRFNHDRN        SET AS NOT HDR
COPR2    EQU   *
         CR    R2,R7                    IS SHIFT NECESSARY TO CLOSE
*                                       UP BFR?
         BE    CONTPR                   BR NO
         IC    R1,AFOFF(RPARM)          AF INDEX IN
         LA    R1,ONE(R1)               AVTPARM WITH
         STC   R1,AVTPARM               X'01' ON
         STH   R7,DATOFF(RPREFIX)       DATA OFFSET
         SR    R7,R2                    CALCULATE INSERT
         STH   R7,INOFF(RPREFIX)        OFFSET
         LH    R8,PRFSIZE               PRFSIZE OF NEW BFR
         N     R8,AVTCLRHI              CLEAR HI ORDER BYTES
         SR    R8,R7                    PFRSIZE OF BFR AFTER SHIFT
         STH   R8,PRFSIZE               PRFSIZE
         SR    R8,R2                    R8 CONTAINS AMOUNT OF
         LA    R8,ONE(R8)               DATA (NO. OF BYTES) TO BE
*                                       SHIFTED
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTUI                AF TO
         BALR  R14,R15                  CLOSE UP
         CLC   SCBDEOB+1(3),AVTADBUF+1  IS THIS THE EOB BFR?
         BNE   CONTPR                   BR NO
         MVC   SCBEOB(2),PRFSIZE        SET EOB OFFSET
CONTPR   EQU   *
         OI    PRFTQBCK+2,DEBLKBFR+NORDCON INDICATE THAT THIS IS A
*                                       DEBLOCKED BFR AND NO READ CONT
*                                       CAN BE DONE INTO THIS BFR
         TM    PRFTQBCK+2,EOMXBFR       PARTIAL CHAR STRING BFR?
         BO    COMP                     BR YES
         MVC   PRFCRCD+1(2),AVTFZERO    REINITIALIZE AREA FOR COUNT
*                                       DATA TO ZERO
         B     SKIPFE                   BR BACK TO PROCESS THIS NEW BFR
         EJECT
***********************************************************************
*      CALCULATE AND SAVE ISZE BEFORE LINKING BUFFER ON SETEOM Q      *
***********************************************************************
SIZE     EQU   *
         TM    PRFSTAT1,PRFNHDRN        HDR BFR?
         BO    TXTIDL                   BR NO
         MVC   PRFNHDR+2(1),LCBSENS0    SAVE SENSE BYTE
         MVC   PRFCRCD(4),SCBERRST      SAVE SCB ERROR BYTES
TXTIDL   EQU   *
         IC    R8,LCBISZE               NO. OF RESERVES
SAVESIZE EQU   *
         MVC   PRFSCAN(1),PRFSCAN+1     SAVE SCAN PTR
         STC   R8,PRFSCAN+1             SAVE ISZE
***********************************************************************
*        THIS RTN LINKS A BFR ON A Q
***********************************************************************
LOOP1    EQU   *
         CLC   LINKOS(LINK,R5),AVTFZERO NO MORE BFR'S ON Q?
         BE    FOUND                    BR IF NO MORE
         CLI   LCBFLAG1,AVTEZERO        ATTACHED TO 3705       @OZ28866
         BNE   NXTBFR                   NO, GET NEXT ON CHAIN  @OZ28866
         TM    PRFSTAT1-IEDQPRF(R5),PRFNHDRN HEADER BUFFER     @OZ28866
         BO    NXTBFR                   NO, CONTINUE           @OZ28866
         CLC   PRFLCB-IEDQPRF(LINK,R5),LCBSCBA  CORRECT SCB    @OZ28866
         BNE   NXTBFR                   NO, CONTINUE           @OZ28866
         MVC   PRFNHDR+2-IEDQPRF(ONE,R5),LCBSENS0  SAVE SENSE  @OZ28866
         MVC   PRFCRCD-IEDQPRF(FOUR,R5),SCBERRST SAVE ERROR WRD@OZ28866
NXTBFR   EQU   *                                               @OZ28866
         L     R5,DISP4(R5)             INCREMENT TO NEXT BFR IN CHAIN
         B     LOOP1                    BRANCH TO CHECK AGAIN
FOUND    EQU   *
         IC    R8,DISP4(R5)             LINK BFR
         ST    RPREFIX,DISP4(R5)        LAST
         STC   R8,DISP4(R5)             ON Q
         MVC   PRFLCB-IEDQPRF(3,RPREFIX),LCBSCBA PUT SCB ADDR IN BFR
         MVC   PRFLINK(3),AVTFZERO      SET BFR AS LAST ON CHAIN
         BR    R14                      RETURN
***********************************************************************
*        ADDRESS FINDER ROUTINE                                       *
***********************************************************************
ADDRLOOP EQU   *
         L     R7,PRFTIC-IEDQPRF(,R7)   POINT TO NEXT UNIT
         SH    R1,AVTKEYLE              SUBTRACT UNIT LENGTH
ENTERLOP EQU   *
         CH    R1,AVTKEYLE              IS ITEM IN THIS UNIT?
         BH    ADDRLOOP                 NO, TEST NEXT UNIT
         LA    R1,AVTUMALN-1(R1,R7)     YES, ITEM ADDR
         BR    R14                      RETURN
***********************************************************************
*        ROUTINE TO PREVENT ZERO BFR IF REMOVE=YES                    *
***********************************************************************
CHECK    EQU   *
         SR    R7,R7                    CLEAR REG
         IC    R7,LCBISZE               NO. OF RESERVES
         LA    R7,AVTTXTSZ(R7)          PLUS PREFIX SIZE
         TM    PRFSTAT1,PRFNHDRN        HDR BFR?
         BO    NOTHDR1                  BR NO
         LA    R7,TXTHDRDF(R7)          ADD TO SIZE
NOTHDR1  EQU   *
         CR    R0,R7                    EOM FIRST IN BFR
         BNE   RET1                     BR NO
         LA    R7,AVTUMALN(R7,RPREFIX)  FIRST DATA BYTE IN BFR
         MVI   0(R7),EOT                MOVE IN EOT
         LR    R7,R0                    SHOW SIZE
         LA    R7,ONE(R7)               AS ONE
         LR    R0,R7                    BYTE OF DATA
RET1     EQU   *
         BR    R14                      RETURN
         EJECT
FORCEOM  EQU   *
         CLC   SCBDEOB+1(3),AVTADBUF+1  IS THIS THE EOB FUFFER
         BNE   PREPARE                  NO, PUT STCB IN LCB
         SR    R5,R5                   CLEAR REGISTER
         ST    R5,LCBCPA+EOMSTCB+EOBBFR  CLEAR BFR SAVE AREA
         TM    SCBERR4,SCBTXTTN        IS TEXT ERROR PRESENT
         BO    PREPARE                 YES, FORCE EOM CONDITION
         TM    SCBERR1,SCBCUTFN         CUTOFF EXECUTED         OY00508
         BO    PREPARE                  YES, BRANCH             OY00508
         TM    LCBCSW+3,UNEX            EOT RECEIVED?
         BO    PREPARE                  BRANCH IF EOT RECEIVED
         MVC   PRFXTRA+1(2),PRFSIZE     SET EOB OFFSET AS FLAG
         MVC   LCBCPA+EOMSTCB+EOBBFR+1(3),SCBDEOB+1  SAVE AS EOB BFR
         MVC   LCBCPA+EOMSTCB+EOBBFR(1),SCBBSCFM               @OS77376
*                                       SAVE FLAG BYTE         @OS77376
         MVC   PRFOPCDE(8),LCBCPA+16   SAVE READ CONTINUE CCW
         B     STCBSET                  SKIP LINKAGE ON Q
PREPARE  EQU   *
         LA    R5,SETEOMQ(RPARM)        BR TO LINK BFR ON
         BAL   R14,SIZE                 SETEOM Q
STCBSET  EQU   *
         LA    R5,POSTQ                 STCB RTN ADDR
         ST    R5,LCBCPA+EOMSTCB        BUILD SETEOM STCB IN LCB
         MVI   LCBCPA+EOMSTCB,STCBVTO   PUT VTO IN STCB
         MVI   LCBCPA+EOMSTCB+DISP4,STCBPRI  PRIORITY
         MVC   LCBCPA+EOMSTCB+DISP8(8),STCBCD
         LA    R0,SETEOMQ(RPARM)
         ST    R0,LCBCPA+EOMSTCB+SETEOMQ
         LA    R2,SETEOMQ(RPARM)        SETEOM Q
         B     CONT3                    BRANCH TO BEGIN CLEANING OFF
*                                       SETEOM Q
         EJECT
***********************************************************************
*                      ENTRY POINT -                                  *
*                  SUBTASK TO REMOVE BUFFERS FROM SETEOM QUEUE        *
***********************************************************************
         SPACE 3
POSTQ    EQU   *
         USING *,R15
         LR    RAVT,R13                 AVT ADDR                SA68031
         SH    RAVT,X48                 REAL AVT ADDR           SA68031
         LR    RLCB4,R7                 AND LCB ADDR
         L     RBASE,BASEBO             RESET MODULE BASE REGISTER
         DROP  R15
         LH    R1,LCBTTCIN              TERM ENTRY KEY           S22026
         N     R1,AVTCLRHI              CLEAR HI ORDER HALF      S22026
         LTR   R1,R1                    LCBTTCIN ZERO            S22026
         BZ    GETSCB                   YES, SKIP CONC TEST      S22026
         SPACE
         L     R15,AVTRNMPT             TNT CODE                 S22026
         BALR  R14,R15                  GO GET TERM ENTRY ADDR   S22026
         SPACE
         USING IEDQTRM,R1               ADDRABILITY FOR TRM ENT  S22026
         TM    TRMDEVFL+1,TRMCONC+TRMLMD CONC OR ATTACHED TO CONCS22026
*                                       AND LMD OR MB SPECIFIED? S22026
         BNO   GETSCB                   NO, SCB ADDR OK, BRANCH  S22026
         DROP  R1
         SPACE
         MVC   LCBSCBA(THREE),LCBSCBDA  RESET SCB TO LINE SCB    S22026
         SPACE
GETSCB   EQU   *                                                 S22026
         L     RSCB3,LCBSCBA-1          SCB ADDR
         MVC   LCBSTCBA(3),LCBCPA+EOMSTCB+DISP5   REMOVE SETEOM STCB
*                                       FROM LCB STCB CHAIN
         L     R2,LCBCPA+EOMSTCB+SETEOMQ ADDR OF SETEOM Q - 4
         LR    RPARM,R2                 ADDR OF SETEOMQ-4
         LA    R1,SETEOMQ               OFFSET IN PARM LIST OF
*                                       SETEOMQ-4
         SR    RPARM,R1                 ADDR OF SETEOM PARM LIST
CONT3    EQU   *
         CLC   LINKOS(3,R2),AVTFZERO    ANY BFR'S Q'ED?
         BE    RDCONT                   BR NO
         L     R5,DISP4(R2)             PREPARE TO
         LR    R8,R2                    SCAN Q
LOOP     EQU   *
         CLC   PRFLCB-IEDQPRF(3,R5),LCBSCBA BFR ON Q FOR THIS SCB?
         BE    BFRDELNK                 BR YES
         CLC   LINKOS(3,R5),AVTFZERO    LAST BFR ON Q?
         BE    RDCONT                   BR YES
         LR    R8,R5                    PUT ADDR OF BFR IN R8
         L     R5,DISP4(R5)             BUMP TO NEXT BFR IN CHAIN
         B     LOOP                     BRANCH TO CONTINUE SCAN
BFRDELNK EQU   *
         MVC   LINKOS(3,R8),LINKOS(R5)  PULL BFR OFF Q
         IC    R8,PRFNBUNT-IEDQPRF(R5)  PUT LCB ADDR
         ST    RLCB4,PRFNBUNT-IEDQPRF(R5)  BACK
         STC   R8,PRFNBUNT-IEDQPRF(R5)  IN BFR
         LR    RPREFIX,R5               SET RPREFIX TO THIS BFR
         MVC   LCBISZE(1),PRFSCAN+1     SET UP LCBISZE
         MVC   PRFSCAN+1(1),PRFSCAN     RESTORE SCAN
         MVI   PRFSCAN,AVTEZERO         POINTER
         TM    PRFSTAT1,PRFNHDRN+PRFNLSTN  HDR AND LAST?
         BNZ   TESTMM                   BR NO
         SR    R2,R2                    CLEAR REG
         IC    R2,LCBISZE               NO. OF RESERVES
         LA    R2,AVTHDRSZ+ONE(R2)      ADD PREFIX SIZE + 1
         CH    R2,PRFSIZE               DATA IN BFR?
         BL    TESTMM                   BR YES
         IC    R5,LCBLSPCI-1            SET BFR
         ST    RPREFIX,LCBLSPCI-1       ADDR IN
         STC   R5,LCBLSPCI-1            LSPCI
         MVC   LCBCPA+EOMSTCB+DISP5(3),LCBSTCBA  LINK SETEOM STCB
         LA    R5,LCBCPA+EOMSTCB        PUT SETEOM STCB
         IC    R8,LCBSTCBA-1            FIRST
         ST    R5,LCBSTCBA-1            IN
         STC   R8,LCBSTCBA-1            CHAIN
         L     R2,AVTMSGS-1             GET VCON TABLE ADDR
         MVC   PRFQCBA(3),ONE(R2)       PUT BFR DISP QCB IN PREFIX
         MVI   PRFPRI,PRIDSPLB          SET PRIORITY
         LR    R1,RPREFIX               GET RECB ADDR IN R1
         LA    R13,AVTSAVE2             SAVE2 ADDR
         L     R11,AVTEA                ADDR OF DISPATCHER
         BAL   R14,DSPPOST              EXIT TO POST RECB      @Y17XAMX
TESTMM   EQU   *
         TM    SCBQTYPE,SCBBFMM         MID MSG ON?
         BNO   SKIP6                    BR NO
FREEBF   EQU   *
         LA    R2,AVTBFRTB              BFR RETURN QCB
         MVI   PRFPRI,PRIBFRTB          PRIORITY
         ST    R2,PRFQCBA-1             DEST Q ADDR IN ELEMENT
         LR    R1,RPREFIX               BUFFER TO BE FREED
         LA    R13,AVTSAVE2             ADDR OF SAVE2
         L     R11,AVTEA                BRANCH TO
         BAL   R14,DSPPOSTR             DISPATCHER AND RETURN
         LA    R13,AVTSAVE2             SAVE2
         LA    R2,SETEOMQ(RPARM)        ADDR SETEOM Q - 4
         B     CONT3                    BRANCH
SKIP6    EQU   *
         L     R8,LCBSTCBA-1            ADDR OF FIRST STCB
         CLI   0(R8),STCBVTO            IS SETEOM STCB ALREADY IN
*                                       CHAIN?
         BNE   INSERT                   NO, BRANCH             @OX14763
         CLI   FOUR(R8),STCBPRI         CORRECT PRIORITY       @OX14763
         BE    SKIP3                    BYPASS INSERT          @OX14763
INSERT   EQU   *
         MVC   LCBCPA+EOMSTCB+DISP5(3),LCBSTCBA  LINK SETEOM STCB
         LA    R5,LCBCPA+EOMSTCB        PUT SETEOM STCB
         IC    R8,LCBSTCBA-1            FIRST
         ST    R5,LCBSTCBA-1            IN
         STC   R8,LCBSTCBA-1            CHAIN
SKIP3    EQU   *
         ST    RPREFIX,AVTADBUF         SET ADBUF TO THIS BFR
         TM    PRFSTAT1,PRFNHDRN        HDR BFR
         BO    NOTHDR                   BR NO
         SPACE
         MVC   LCBSENS0(1),PRFNHDR+2    RESTORE SENSE BYTE
         MVC   SCBERRST(4),PRFCRCD      RESTORE BYTES
         TM    LCBSTAT2,LCBDIAL         DIAL LINE              @OX11928
         BO    SETSRCE                  YES,DON'T UPDATE TTCIN @OX11928
         MVC   LCBTTCIN(2),PRFSRCE      RESET ORIGINIAL TTCIN
         B     PROCHDR                  SKIP TEXT MOVE
         SPACE
NOTHDR   EQU   *
         TM    PRFTQBCK+2,EOBBUF        SRCE SAVED IN TQBCK
         BNO   SETSRCE                  BR NO
         SPACE
         MVC   LCBTTCIN(2),PRFTQBCK     RESTORE LAST TTCIN
SETSRCE  EQU   *
         MVC   PRFSRCE(2),LCBTTCIN      SET TO SRCE OF LAST HDR
         SPACE
PROCHDR  EQU   *
         TM    PRFSTAT1,PRFNLSTN        EOT BFR?
         BZ    RET                      BR YES
         ST    RLCB4,0(RLCB4)           POINT LCB TO SELF FOR POSTING
         LR    R1,RLCB4                 ADDR OF LCB TO BE PLACED ON
*                                       READY Q
         MVI   LCBPRI,PRIDESTQ-1        PRIORITY
         L     R11,AVTEA                PREPARE
         LA    R13,AVTSAVE2             TO
         BAL   R14,DSPPOSTR             POST LCB TO SELF WITH SETEOM
*                                       STCB FIRST IN CHAIN
         B     RET2                     BRANCH
RET      EQU   *
         IC    R14,LCBLSPCI-1           SET BFR
         ST    RPREFIX,LCBLSPCI-1       ADDR IN
         STC   R14,LCBLSPCI-1           LSPCI
RET2     EQU   *
         LA    R13,AVTSAVE2             SAVE2 ADDRESS FOR RTNE  SA68031
         TM    AVTAFE30,AVTEFF          IS DUMP REQUESTED?      SA54935
         BZ    SKIPFE1                  BR IF NO                SA54935
         SPACE
         L     R2,AVTAFE30              GET RTN ADDRESS         SA54935
         LR    R1,RPREFIX               SET BUFFER ADDRESS      SA54935
         LR    R14,RPARM                SAVE PARAMETER REG      SA54935
         BALR  RPARM,R2                 LINK TO BUFFER TRACE    SA54935
         SPACE
         LR    RPARM,R14                RESTORE PARM REG        SA54935
SKIPFE1  EQU   *                                                SA54935
         L     R7,LCBDCBPT              DCB ADDR
         L     R8,DCBMH-1-IHADCB(,R7)   MH ADDRESS              SA65376
         CLI   LCBFLAG1,LCBPLCB         THIS A PLCB            @YM06085
         BNE   GOTMH                    BR NO, HAVE PROPER MH  @YM06085
         L     R8,LCBMHA-1              GET PROPER MH QCB ADDR @YM06085
GOTMH    EQU   *                                               @YM06085
         NC    ALTMH(3,R8),ALTMH(R8)    ALT MH SPECIFIED        SA65376
         BZ    SKIPFE2                  BRANCH IF NO            SA65376
         NC    LCBTTCIN(2),LCBTTCIN     TTCIN ZERO?             SA65376
         BZ    SKIPFE2                  BRANCH IF NO            SA65376
         LH    R1,LCBTTCIN              TNT OFFSET              SA65376
         N     R1,AVTCLRHI              CLEAR HIGH-ORDER HALF   SA65376
         L     R15,AVTRNMPT             CONVERSION LOGIC        SA65376
         BALR  R14,R15                  COMPUTE TERM ENTRY ADDR SA65376
         L     R1,TRMDESTQ-1-IEDQTRM(,R1) QCB ADDRESS           SA65376
         TM    QCBDSFLG-IEDQQCB(R1),QCBALTMH IS TERMINAL        SA65376
*                                       CONNECTED TO ALTERNATE  SA65376
*                                       MESSAGE HANDLER         SA65376
         BNO   SKIPFE2                  BRANCH IF NO            SA65376
         L     R8,PRIMH(,R8)            GET ALTMH QCB ADDRESS   SA65376
SKIPFE2  EQU   *                                                SA65376
         SR    R2,R2                    CLEAR REG2
         IC    R2,PARMLEN(R8)           PICK UP LENGTH OF STARTMH
*                                       PARM LIST
         LA    R8,AVTEZERO(R2,R8)       GET FIRST INSTRUCTION ADDR
         LH    R2,CONBASE               SET INCR VALUE IF MULT BASE
         LA    R15,RETOFF(RPARM)        RETURN ADDR TO MH PASSED
*                                       SETEOM PARM LIST
         SR    R1,R1                    SET
         IC    R1,PRFNHDR+1             RETURN CODE
         LR    RBASE,R8                 SET BASE
         LNR   R0,R2                    SET MINUS CONDITION CODE
         BR    RBASE                    RETURN TO MH
RDCONT   EQU   *
         CLI   LCBFLAG1,LCBPLCB         PLCB                   @YM07646
         BNE   TSTRESP2                 BR NO                  @YM07646
         TM    LCBSTAT5,LCBLUNIT        IS THIS AN LU-LU SESS? @Y17XAMG
         BO    NOBFR                    BRANCH IF SO           @Y17XAMG
TSTRESP2 EQU   *                                               @YM07646
         TM    LCBSTAT2,LCBRESP         READ CONT NECESSARY?
         BO    POSTBFR                 YES,  POST BUFFER OR ERB
         SPACE
NOBFR    EQU   *
         SPACE
         LR    R1,RLCB4                 LCB FOR BD/2 FOR CLEANUP
         MVI   LCBPRI,PRISBPCI          PRIORITY               @SA74862
         OI    LCBSTAT1,LCBRCLLN       SET FLAG TO INDICATE BFRS FREED
         L     R7,IEDQBD2               BD/2 ADDR
         ST    R7,LCBRCB                SET UP QCB ADDRESS     @OZ27813
         L     R11,AVTEA                DISP ADDR
         LA    R13,AVTSAVE2             ADDR OF SAVE AREA
         BAL   R14,DSPPOST              POST BD02              @Y17XAMA
         SPACE
POSTBFR  EQU   *
         L     RPREFIX,LCBCPA+EOMSTCB+EOBBFR   SET BFR FOR POST
         N     RPREFIX,CLRBITS          CLEAR HIGH & LOW BITS  @OS76479
         MVC   SCBBSCFM(1),LCBCPA+EOMSTCB+EOBBFR               @OS77376
*                                       RESTORE FLAG BYTE      @OS77376
         LTR   R0,RPREFIX               IS THERE AN EOB BFR    @OS77376
         BZ    CRDCONT                  NO, GET ONE FOR RD CONT@OS77376
         LH    R5,PRFXTRA+1             GET EOB OFFSET
ARDCONT  EQU   *
         MVC   LCBISZE,PRFCRCD          RESET LCBISZE
         TM    PRFTQBCK+2,EOBBUF        SUBSEQUENT RD CONT IN THIS BFR
         BO    BRDCONT                  YES, TTCIN CORRECTLY SET
         SPACE
         TM    PRFSTAT1,PRFNHDRN        HDR
         BNO   HDR                      BR YES
         SPACE
         MVC   PRFTQBCK(2),LCBTTCIN     SAVE CURRENT TTCIN
         OI    PRFTQBCK+2,EOBBUF        INDICATE TTCIN SAVED IN BFR
HDR      EQU   *
         TM    LCBSTAT2,LCBDIAL         DIAL LINE              @OX11928
         BO    BRDCONT                  YES,DON'T UPDATE TTCIN @OX11928
         MVC   LCBTTCIN(2),PRFSRCE      RESET TO ORIGINAL TTCIN
BRDCONT  EQU   *
         CLI   LCBFLAG1,AVTEZERO        PLCB                     S22024
         BE    HAVEPLCB                 YES, BRANCH              S22024
         TM    PRFTQBCK+2,NORDCON       CAN THIS BFR BE POSTED FOR
*                                       READ CONT?
         BZ    POSTHIS                  BR YES
HAVEPLCB EQU   *                                                 S22024
         BAL   R14,HOLDEOB              NO, PUT ON HOLD Q
CRDCONT  EQU   *                                               @XA05312
         SR    R5,R5                   CLEAR EOB OFFSET
         N     R0,CLRBITS               CLEAR HIGH AND LOW BITS
         ST    R0,LCBCPA+12            RESET UNIT ADDRESS FOR KA
         LTR   RPREFIX,R0               IS THE NEXT BFR AVAILABLE
         BNZ   POSTOK                   POST NEXT BFR FOR READ CONT
         LA    R1,LCBERB                ERB ADDR
         TM    LCBERBST,LCBDLNKN        IS DELINK SWITCH SET?
         BO    ERBFRE                   BRANCH NOT IN CHAIN
         LA    R8,AVTBFRTB-4            BFR RETURN QCB
         LA    R2,CONST                 LOOP TWICE FOR BOTH BFR
*                                       RETURN Q AND READY Q
NEXT     EQU   *
         LR    R7,R8                    SET TO NEXT ELEMENT
         L     R8,DISP4(,R7)            FIRST/NEXT ELEMENT IN CHAIN
         LA    R8,0(,R8)                CLEAR HIGH ORDER BYTE
         CLR   R8,R1                    IS THIS THE ERB?
         BE    REMOVERB                 BR IF ERB FOUND
         C     R8,AVTDELAD              IS THIS THE DUMMY END
*                                       ELEMENT?
         BNE   NEXT                     BR NO
         LA    R8,AVTREADY-4            ADDR OF READY Q FOR LOOP
         BCT   R2,NEXT                  LOOP THRU THE READY Q
REMOVERB EQU   *
         MVC   DISP5(3,R7),DISP5(R8)    REMOVE ERB FROM CHAIN
ERBFRE   EQU   *
         MVI   LCBERBPY,PRIINTRQ        SET PRIORITY             S22024
         SR    R11,R11                  CLEAR FOR LINK         @YA10427
         CLI   LCBFLAG1,LCBPLCB         PLCB                   @YM08040
         BNE   NOTNCP                   BR NO                  @YM08040
         L     R2,AVTSAVTP              ADDR OF SAVT           @YM08040
         L     R2,SAVTCNIR-IEDNSVTD(,R2) ADDR OF IEDNKA QCB    @YM08040
         B     POSTERB                  POST ERB FOR READ CONT @YM08040
NOTNCP   EQU   *                                               @YM08040
         NI    LCBERBST,LCBDLNKF        TURN OFF DELINK        @YM08040
         L     R2,LCBDCBPT             GET DCB ADDRESS
         IC    R2,DCBBUFIN-IHADCB(R2)   GET BFR COUNT FOR BUFIN
         SRL   R2,FOUR                  SHIFT OUT BUFOUT
         STC   R2,LCBERBCT             SET IN ERB BFR COUNT FOR GA
         NI    LCBERBCT,CLRHI           CLEAR HI HALF-BYTE
         MVI   LCBERBCT+1,AVTEZERO      ZERO DISABLED COUNT
         LA    R2,AVTBFREB             SET AVAIL BFR QCB  ADDR
         B     POSTERB                  BRANCH TO POST ERB
         SPACE 2
POSTHIS  EQU   *
         CLC   PRFSIZE(2),AVTFZERO      ZERO BFR?
         BE    POSTOK                   BR YES
         MVC   PRFNHDR(2),PRFSCAN      SAVE ORIGINAL SCAN POINTER
         MVC   PRFSCAN(2),PRFSIZE      RESET TO PREVENT TRANSLATE
         OI    PRFSTAT1,PRFCNCLN       PREVENT PROCESS OF FIRST BLOCK
POSTOK   EQU   *
         SR    R7,R7                    CLEAR REG
         LR    R8,RPREFIX               BFR ADDR
         SR    R11,R11                  CLEAR FOR LINK         @YA10427
         B     LOOP3                    BRANCH
INLOOP   EQU   *
         L     R8,PRFTIC-IEDQPRF(R8)    BUMP TO NEXT UNIT
DECRE    EQU   *
         BCT   R1,INLOOP                FIND LAST UNIT
         CLC   PRFTIC+1-IEDQPRF(2,R8),AVTFZERO  ANY MORE BFRS?
         BE    OUTCT                    BR NO
         L     R8,PRFTIC-IEDQPRF(R8)    BUMP TO FIRST UNIT OF BFR
LOOP3    EQU   *
         LA    R7,ONE(R7)               COUNT NO. OF BFRS IN CHAIN
         SR    R1,R1                    CLEAR REG
         IC    R1,PRFNBUNT-IEDQPRF(R8)  NO. OF UNITS IN BFR
         B     DECRE                    BRANCH
OUTCT    EQU   *
         SR    R2,R2                    CLEAR REG
         L     R8,LCBDCBPT              DCB ADDR
         IC    R2,DCBBUFMA-IHADCB(R8)   BUFMAX
         SR    R2,R7                    BUFMAX-NO. OF BFRS ON
*                                       LSPCI CHAIN
         LTR   R2,R2                    BUFMAX OR MORE IN CHAIN SA59189
         BNP   NOMORE                   BR YES                  SA59189
         SPACE
         STC   R2,LCBERBCT              PUT DIFFERENCE IN COUNT FIELD
         TM    LCBERBST,LCBDLNKN        IS ERB AVAILABLE?      @YA10427
         BNO   NOMORE                   NO, DO NOT POST        @YA10427
         ST    R11,LCBERBLK-1           CLEAR ERB LINK         @YA10427
         LA    R11,LCBERB               SET ERB ADDR FOR POST  @YA10427
         MVI   LCBERBPY,PRISBPCI        SET PRIORITY           @YA10427
         NI    LCBERBST,LCBDLNKF        SET FLAGS AS POSTED    @YA10427
         LA    R2,AVTBFREB              SET AVAIL BUFFER       @YA10427
         ST    R2,LCBERBQB-1              AS ERB QCB           @YA10427
NOMORE   EQU   *                                               @YA10427
         OI    PRFSTAT1,PRFNLSTN        SET AS NOT LAST BFR    @YA10427
         MVI   LCBERBCT+1,AVTEZERO      ZERO DISABLED COUNT    @YA10031
         MVC   LCBCPA+16(8),PRFOPCDE      RESET RD CONT CCW
         LA    R2,AVTACTIB             SET TO POST BUFFER TO
         LR    R1,RPREFIX                ACTIVATE QCB FOR RD CONT
         MVI   PRFPRI-IEDQPRF(R1),PRIACTIV  SET ELEMENT PRIORITY
         SPACE
POSTERB  EQU   *
         MVC   LCBTTBIN,LCBTTCIN        SET TTBIN FOR READ CONT  S22024
         IC    R0,LCBLSPCI-1            SET THIS
         ST    RPREFIX,LCBLSPCI-1       BUFFER AS
         STC   R0,LCBLSPCI-1            LSPCI
         IC    R0,SCBDEOB               RESET
         ST    RPREFIX,SCBDEOB          EOB BUFFER
         STC   R0,SCBDEOB               ADDR
         STH   R5,SCBEOB                RESET OFFSET TO EOB
         OI    LCBSTAT1,LCBCONT         TURN ON READ CONT BIT
         ST    R2,PRFKEY-IEDQPRF(R1)    SET TO POST ERB OR BFR
         IC    R0,PRFPRI-IEDQPRF(R1)    SAVE ELEMENT PRIORITY  @YA10427
         ST    R11,PRFPRI-IEDQPRF(R1)   SET NEXT ELEMENT       @YA10427
         STC   R0,PRFPRI-IEDQPRF(R1)    RESET PRIORITY         @YA10427
         L     R11,AVTEA                PREPARE
         LA    R13,AVTSAVE2             TO
         BAL   R14,DSPCHAIN             POST REQUEST           @Y17XAMA
         SPACE
**********************************************************************
MVPRE    MVC   UTCNTOFF(1,R2),UTCNTOFF(RPREFIX) MOVE             S22024
         DS    0F
STCBCD   L     R15,LCBCPA-IEDQLCB+EOMSTCB(,R7) CODE TO PICK UP ADDR
*                                       OF 'POSTQ' FROM SETEOM STCB
*                                       IN THE LCB AND
         BR    R15                      BRANCH
         DS    0H
X48      DC    X'0048'                  LENGTH OF SAVE AREA IN AVT
CONBASE  DC    H'4096'                  INCREMENT VALUE FOR MULTIPLE
*                                       BASE REGISTERS
BASEBO   DC    A(IEDQBO)                ADDR OF IEDQBO
IEDQBD2  DC    V(IEDQBD02)              BD/2 VCON
CLRBITS  DC    X'00FFFFFC'              CLEAR HIGH AND LOW BITS
*                                       A READ CONT?
         TAVTD
         TLCBD
         TPRFD
         TQCBD
         TSCBD
         TTRMD
         TDISPD
         TPRIOR
         DCBD  DSORG=TX
         END
