 TITLE 'IEDQFE30 BUFFER DUMP'
IEDQFE30 CSECT
*A168000,198000,258000,267000,290000,300000,502000,710000       SA67105
*D208000-214000,708000                                          SA67105
*A329200,709000                                                 SA69093
*A324000                                                        OY03830
*C224000,236000                                                @SA69974
*A290060                                                       @YA05146
*C328000,329200                                                @ZA00216
*C007000,290480-291560,299000                                    X03039
*C 290480                                                      @Y17XASZ
*C279000,342000-344000                                         @OY19405
*C406000,412000,418000,424000,436000-454000                    @OY19405
*A227000,288000,302000,308000,340000,341000,422000,430000      @OY19405
*A503000,506000                                                @OY19405
*D218000-226000,236000-240000                                  @OZ18768
***********************************************************************
*                                                                     *
*MODULE NAME--IEDQFE30 BUFFER DUMP                                    *
*                                                                     *
*STATUS - CHANGE LEVEL 8                                         X03039
*                                                                     *
*FUNCTION-                                                            *
*   IEDQFE30 IS USED TO ACCUMULATE BUFFER INFORMATION FOR A LINE OR   *
*   LINES BEING TRACED BY THE LINE I/O TRACE.THE BUFFERS AND SELECTED *
*   STATUS INFORMATION ARE OUTPUTTED VIA COMWRITE.                    *
*   UPON ENTRY FROM IEDQC6 THIS ROUTINE CHECKS TO SEE IF THIS IS A    *
*   LOAD OR DELETE FUNCTION.IF A LOAD IS REQUESTED THE FLAGS AT       *
*   AVTAFE30 ARE TESTED. IF THEY ARE OFF,THIS ROUTINE STORES ITS ENTRY*
*   POINT ADDRESS INTO AVTAFE30 AND SETS THE FLAGS ON,INDICATING THAT *
*   THE ROUTINE IS ACTIVE.THE ROUTINE THEN RETURNS TO IEDQC6 WITH A   *
*   RETURN CODE OF ZERO. IF THE FLAGS ARE ALREADY ON RETURN IS TO     *
*   IEDQC6 WITH A RETURN CODE OF FOUR.IF A DELETE FUNCTION IS         *
*   REQUESTED THE FLAGS IN AVTAFE30 ARE SET OFF INDICATING THAT THE   *
*   ROUTINE IS NOT ACTIVE.                                            *
*                                                                     *
*   EACH TIME MODULE IEDQAA IS ENTERED THE FLAGS AT AVTAFE30 ARE      *
*   TESTED. IF THEY ARE ON THIS ROUTINE IS BRANCHED TO.               *
*   UPON ENTRY FROM IEDQAA THE LCB AND SCB ARE FOUND. A TEST IS MADE  *
*   ON LCBTRACE TO DETERMINE IF THE LINE IS BEING TRACED. IF THE LINE *
*   IS NOT BEING TRACED RETURN IS TO IEDQAA.IF THE LINE IS BEING      *
*   TRACED,APPROPRIATE DATA IS MOVED INTO THE INTERNAL TRACE TABLE AND*
*   RETURN IS TO IEDQAA. WHEN FIVE BUFFERS HAVE BEEN COLLECTED IN THE *
*   INTERNAL TRACE TABLE THE COMWRITE ECB IS POSTED VIA SVC 102 TO    *
*   HAVE THE TABLE WRITTEN TO THE COMWRITE DATASET.                   *
*                                                                     *
*ENTRY POINTS-ENTER IS ENTERED FROM IEDQC6 FOR INITIALIZATION.        *
*             ENTRY IS ENTERED FROM IEDQAA                            *
*                                                                     *
*INPUT FROM IEDQC6                                                    *
*      REG 0 ZERO FOR LOAD OPERATION                                  *
*            NON-ZERO FOR DELETE OPERATION                            *
*      FROM IEDQAA                                                    *
*      REG 1 CONTAINS BUFFER ADDRESS                                  *
*                                                                     *
*OUTPUT AFTER SETUP REG 15 HAS RC FOR IEDQC6                          *
*       WHILE BUFFERS ARE BEING TRACED-                               *
*       ADDRESS OF PARM LIST IN AVTCWPM1 OR AVTCWPM2                  *
*                                                                     *
*EXITS NORMAL BR 14 TO IEDQC6 WITH R 15=0                             *
*      ERROR  BR 14 TO IEDQC6 WITH R 15= RETURN CODE.                 *
*                                                                     *
*ATTRIBUTES SERIALLY REUSABLE                                         *
*
*TABLES-BUFFER TRACE TABLE
*        FORMAT OF EACH 96 BYTE ENTRY                      BYTES
*        BUFFER ADDRESS                                     4
*        ERROR BITS IN SCB                                  4
*        LAST HALF OF CSW                                   4
*        SENSE BYTE                                         1
*        FLAG 1 OF IOB                                      1
*        FLAG 3 OF IOB                                      1
*        STATUS OF ERB IN LCB                               1
*        STATUS OF LCB                                      2
*        UCB (CHAN UNIT ADDRESS)                            2
*        BUFFER PREFIX AND PART OF BUFFER                   76
*EXTERNAL ROUTINES-SVC 102 TO POST COMWRITE(IEDQFW)
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*        R3                        BASE ADDRESS
*        R4                        AVT ADDRESS
RWK1     EQU   2
RWK2     EQU   5
ZERO     EQU   0                                                SA67105
ONE      EQU   1                                                SA67105
X1A      EQU   26                 DISPLACEMENT                 @ZA00216
X2C      EQU   44                 DISPLACEMENT                 @ZA00216
         EJECT
         USING IEDQAVTD,R4
         STM   R14,R12,12(R13)     SAVE
         BALR  R3,0                REGS
         USING *,R3
IEDQFE30 IEDHJN  ENTER
         ST    R13,SAVE+4
         LA    R8,SAVE
         ST    R8,8(R13)
         LR    R13,R8
         L     RWK2,AVTCWTCB       GET COMWRITE TCB ADDRESS
         ST    RWK2,COMWRTCB       AND PUT IN AQCTL PARM LIST
         OC    AVTBUFTR,AVTBUFTR   TRACE TABLE ON INTRO        @OY19405
         BZ    NOTABLE             NO                          @OY19405
         LA    R2,X'37'            SET UP                      @OY19405
         AH    R2,AVTKEYLE               TRACE                 @OY19405
         SRL   R2,5                           TABLE            @OY19405
         SLL   R2,5                                ENTRY       @OY19405
         STH   R2,ENTSZ                                 SIZE   @OY19405
NOTABLE  EQU   *
         LA    RWK2,ENTRY          GET ENTRY POINT ADDRESS
         ST    RWK2,AVTAFE30       STORE ADDRESS IN AVT
         MVI   AVTAFE30,X'FF'      SET LOADED FLAG
         SR    R15,R15             SET GOOG RETURN CODE
         B     RETURN
ERROR    LA    R15,4                    SET BAD RETURN CODE
RETURN   L     R13,SAVE+4          RETURN TO CALLER
         L     R14,12(R13)         WITH RETURN CODE
         LM    R0,R12,20(R13)      IN REG 15
         BR    R14
         SPACE 2
***********************************************************************
*        THE FOLLOWING CONSTANTS, VARIABLE AT ASSEMBLY TIME, CONTROL  *
*        THE SIZE OF EACH TRACE ENTRY AND THE NUMBER OF ENTRIES IN    *
*        EACH TRACE BUFFER.  IF CHANGED, SUBSEQUENT CHANGES MUST ALSO *
*        BE MADE IN THE FORMATTING PROGRAM - IEDQXB.                  *
***********************************************************************
         SPACE
SIZE     EQU   96                  LENGTH OF EACH TRACE ENTRY
ENTRYNUM EQU   10                  NUMBER OF ENTRIES IN EACH BUFFER
         EJECT
*                                  MODULE 'IEDQAA' WILL NOW BRANCH
*                                  TO THIS MODULE AT SYMBOL 'ENTRY'
RTERM    EQU   1                   TERMINAL ENTRY ADDRESS       SA67105
RSCB     EQU   3                   SCB ADDRESS
RLCB     EQU   4                   LCB ADDRESS
RPREFIX  EQU   6                   BUFFER ADDRESS
RTABLE   EQU   9                   370X LINE-TRACE TABLE ADDR   SA67105
         DROP  R3
         DROP  R4
         USING ENTRY,R2
         USING AVTSAVE2,R13
         DS    0F
ENTRY    B     NORM                ENTRY POINT FROM IEDQAA     @OY19405
         STM   R0,R15,SAVEREGS                                 @OY19405
         B     USER                ENTRY FROM BUFFTR MACRO     @OY19405
NORM     STM   R0,R15,SAVEREGS                                 @OY19405
         DROP  R2
         USING ENTRY,R12
         LR    R12,R2
         LR    RPREFIX,R1          SET BUFFER ADDRESS INTO RPREFIX
         USING IEDQPRF,RPREFIX
         L     RLCB,PRFLCB-1       LCB ADDRESS
         USING IEDQLCB,RLCB
         L     RSCB,LCBSCBA-1      SCB ADDRESS
         TM    AVTBUFSW,AVTUNCON   TRACE ALL SPECIFIED         @OY19405
         BO    TRACEBFR            YES, DONT CHK TERM TRACE    @OY19405
         USING IEDQSCB,RSCB
         LH    RTERM,LCBTTCIN      TNT OFFSET                   SA67105
         N     RTERM,AVTCLRHI           CLEAR NEG. PROPAGATION @YA05146
         BZ    TEST0X                   ZERO TNT - MUST BE 0X  @YA05146
         L     R15,AVTRNMPT        ADDR OF TNT CODE             SA67105
         BALR  R14,R15             GO GET TERMINAL ADDR         SA67105
         SH    RTERM,TERMPREF      BACK UP TO PREFIX            SA67105
         USING IEDNTRM,RTERM                                    SA67105
         TM    TRMSTATE,TRMPREF   3705-CONNECTED TERMINAL?     @YM08488
         BZ    TEST0X              BRANCH IF NO                 SA67105
         TM    TRMBYTE1,TRMTRACE   IS PTRACE ACTIVE            @Y17XASZ
*                                                                X03039
*  NOTE -                                                        X03039
*        NOP THE NEXT INSTRUCTION TO CAUSE BUFFER DUMPING        X03039
*        FOR ALL VTAM TERMINALS WHEN NO SPECIFIC VTAM            X03039
*        TERMINALS ARE BEING TRACED.                             X03039
*                                                                X03039
         BZ    RETURN1             BRANCH IF NO                 SA67105
         B     TRACEBFR            YES, GO TRACE THIS BUFFER    SA67105
         SPACE 1                                                SA67105
TEST0X   EQU   *                                                SA67105
         TM    LCBSTAT2,LCBTRACE   LINE BEING TRACED
         BC    14,RETURN1
*                                                                     *
*NOTE-                                                                *
*        NOP THE PRECEDING INSTRUCTION TO CAUSE                       *
*        BUFFER DUMPING FOR ALL NON-VTAM TERMINALS WHEN NO       X03039
*        LINES ARE BEING TRACED.                                 X03039
*                                                                     *
TRACEBFR EQU   *                                                SA67105
         L     R10,AVTBUFTR        DID USER SPECIFY            @OY19405
         LTR   R10,R10             TRACE ON INTRO              @OY19405
         BNZ   BYPASSDF            YES, DON'T SET UP DEFAULT   @OY19405
         LA    R10,CURD            POINT TO INTERNAL TABLE     @OY19405
         USING IEDTRBUF,R10                                    @OY19405
BYPASSDF EQU   *
         L     RWK2,CUR            LOAD TABLE POINTER
         L     RWK1,0(RWK2)
         USING BUFFTRAC,RWK1
         MVC   BUFFID(4),DAT       MOVE IN EYE CATCHER FOR AA  @OY19405
         ST    R6,BUFFADD          STORE BUFFER ADD (ELEMENT)
         MVC   CBERRST(L'CBERRST),SCBERRST
         MVC   CBSENS0(1),LCBSENS0 MOVE INFO INTO TABLE
         MVC   CBCSWLW(4),LCBCSW+3 MOVE INFO INTO TRACE TABLE
         MVC   CBFLAG1(1),LCBFLAG1 MOVE INFO INTO TRACE TABLE
         MVC   CBFLAG3(1),LCBFLAG3 MOVE INFO INTO TRACE TABLE
         MVC   CBERBST(1),LCBERBST MOVE INFO INTO TRACE TABLE
         MVC   CBSTATE(2),LCBSTATE MOVE INFO INTO TRACE TABLE
         CLI   LCBFLAG1,ZERO            IS THIS A PLCB          OY03830
         BE    MPPLCB                   YES, NO UCB THERE       OY03830
         L     RWK2,LCBDCBPT       DCB ADDRESS
         TM    X1A(RWK2),TRMLGB   IS THIS AN LGB               @ZA00216
         BO    MPPLCB                   BR YES                 @ZA00216
         L     RWK2,X2C(RWK2)     LOAD DCB ADDRESS             @ZA00216
         CLI   PRFPRI,PRIAPBFR          APPL PROG BUFFER ?      SA69093
         BE    MPPLCB                   BRANCH IF YES           SA69093
         SR    R7,R7               ZERO WORK REGISTER
         IC    R7,LCBUCBX          INSERT INDEX BYTE
         SLL   R7,2                MULT BY FOUR
         L     RWK2,32(RWK2,R7)    UCB ADDRESS
         MVC   UCB(2),4(RWK2)      MOVE INFO INTO TRACE TABLE
         B     REGRESTR            GO RESTORE ENTRY POINTER     PTR2345
MPPLCB   MVC   UCB(2),MPPFLAG      SET UCB ADDR TO ZERO         PTR2345
         S     RPREFIX,FULL8       POINT TO RH IN NEG. PREFIX  @OY19405
         MVC   CBCSWLW(4),0(RPREFIX) MOVE RH INTO TRACE ENTRY  @OY19405
         A     RPREFIX,FULL8       POINT AT BUFFER AGAIN       @OY19405
REGRESTR L     RWK2,CUR            RESTORE POINTER TO 'CURRENT' PTR2345
         LH    R7,ENTSZ            DATA SPACE LEFT IN THIS ENT @OY19405
         LA    R4,X'18'            IS DATA ALREADY MOVED       @OY19405
         SR    R7,R4               SUBTRACTED FROM SIZE OF ENT @OY19405
         LA    RWK1,24(RWK1)       BUMP DATA POINTER           @OY19405
         TM    AVTBUFSW,AVTFULLT   ENTIRE BUFFER TRACE         @OY19405
         BAL   R14,TRACALL         REQUESTED...., YES          @OY19405
         L     RWK1,0(RWK2)        RESTORE DATA POINTER        @OY19405
NOFULL   EQU   *                                               @OY19405
         LA    R14,SVC             POINT LINK REG TO SVC RTN   @OY19405
         BCTR  R7,0                DECREMENT FOR MOVE          @OY19405
         EX    R7,SINGLE           EXECUTE THE MOVE            @OY19405
         AH    RWK1,ENTSZ          UPDATE THE ENTRY POINTER    @OY19405
         CL    RWK1,8(RWK2)        LAST ENTRY IN TABLE
         BNL   BUMP                YES
         ST    RWK1,0(RWK2)        NO SAVE
         B     RETURN1
BUMP     EQU   *
         MVC   0(4,RWK2),4(RWK2)   UPDATE TABLE POINTERS
         L     RWK1,COUNT          TRACE NUMBER
         LA    RWK1,1(RWK1)        OF TIMES TABLE
         ST    RWK1,COUNT          HAS BEEN USED.
         TM    PARMFLAG,X'40'      HAS COMWRITE WRITTEN TABLE
         BC    8,RETURN1           NO BRANCH TO USE TABLE AGAIN
         TS    AVTCWTS1            PARM POINTER AVAILABLE
         BC    4,CKTS2             NO BRANCH
         LA    RWK1,PARMLIST       LOAD ADDRESS OF COMWRITE PARMS
         ST    RWK1,AVTCWPM1       STORE ADDRESS IN AVT PARM POINTER
         LA    RWK1,AVTCWEC1       GET COMWRITE ECB ADDRESS
         B     STAQC               GO SET UP TO WRITE
CKTS2    TS    AVTCWTS2            PARM POINTER AVAILABLE
         BC    4,RETURN1           NO BRANCH
         LA    RWK1,PARMLIST       LOAD ADDRESS OF COMWRITE PARMS
         ST    RWK1,AVTCWPM2       STORE ADDRESS IN AVT PARM POINTER
         LA    RWK1,AVTCWEC2       GET COMWRITE ECB ADDRESS
STAQC    ST    RWK1,AQPARM         STORE IN AQCTL PARM
         MVI   AQPARM,X'20'        SET NORMAL FLAGS
         MVI   PARMFLAG,X'00'      CLEAR FLAG
         L     RWK1,CUR            LOAD POINTERS
         LA    RWK2,CUR1
         CR    RWK1,RWK2           WHICH TABLE IS BEING USED NOW
         BNE   WRTTAB2             BRANCH TO WRITE SECOND TABLE
         MVC   COUNT1+1(3),COUNT+1      MOVE IN COUNT
         L     R7,TABLE1           GET COMWR AREA HEADER       @OY19405
         MVC   12(4,R7),COUNT1     MOVE BUF ID AND COUNT       @OY19405
         ST    R7,PARMAREA         START ADD. FOR COMWR        &OY19405
         L     RWK2,8(RWK1)        GET END OF TABLE ADD.       @OY19405
         SR    RWK2,R7             COMPUTE TABLE LENGTH        @OY19405
         STH   RWK2,PARMLEN        STORE LENGTH FOR COMWR      @OY19405
         LA    RWK2,CUR2           UPDATE POINTER TO
         ST    RWK2,CUR            USE TABLE TWO
         BR    R14                 LINK, SVC UNLESS FULL BUFFER@OY19405
*                                  TRACE FILLED ONE TABLE, THEN@OY19405
*                                  WE LINK TO HOOK             @OY19405
WRTTAB2  EQU   *
         MVC   COUNT2+1(3),COUNT+1      MOVE IN COUNT
         L     R7,TABLE2           GET COMWR AREA HEADER       @OY19405
         MVC   12(4,R7),COUNT2     MOVE BUF ID AND COUNT       @OY19405
         ST    R7,PARMAREA         START ADD. FOR COMWR        @OY19405
         L     RWK2,8(RWK1)        GET END OF TABLE ADD.       @OY19405
         SR    RWK2,R7             COMPUTE TABLE LENGTH        @OY19405
         STH   RWK2,PARMLEN        STORE LENGTH FOR COMWR      @OY19405
         LA    RWK2,CUR1           UPDATE POINTER TO
         ST    RWK2,CUR            USE TABLE ONE
         BR    R14                 LINK, SVC UNLESS FULL BUFFER@OY19405
*                                  TRACE FILLED ONE TABLE, THEN@OY19405
*                                  WE LINK TO HOOK             @OY19405
SVC      LA    R1,AQPARM           POINT TO PARM LIST FOR COMWR@OY19405
         AQCTL                     ISSUE POST FOR COMWRITE
RETURN1  LM    R0,R15,SAVEREGS     RESTORE REGS
         BR    R10                      RETURN TO IEDQAA
USER     LR    R12,R2              SET UP BASE REG             @OY19405
         LA    R13,72(R9)          POINT RD TO AVTSAVE2        @OY19405
         L     R10,AVTBUFTR        DID USER SPECIFY            @OY19405
         LA    R14,SVC             SET UP LINK FOR COMWR       @OY19405
         B     BUMP                UPDATE TABLE POINTERS       @OY19405
TRACALL  EQU   *                                               @OY19405
         BNOR  R14                 ENTIRE BUFFER NOT REQUESTED @OY19405
         L     R4,CUR1+8           COMPUTE SIZE OF ONE TABLE   @OY19405
         S     R4,CUR1+4           TO INSURE WE CAN WRITE      @OY19405
         CH    R4,PRFSIZE          IS ONE TABLE BIG ENOUGH     @OY19405
         BLR   R14                 NO, THEN TRACE PARTIAL      @OY19405
         LA    R14,RETURN1         SET LINK REG FOR EXIT       @OY19405
         LH    R4,PRFSIZE          GET DATA CNT TO BE TRACED   @OY19405
         LA    R8,12(RPREFIX)      POINT R8 TO DATA TO BE MOVED@OY19405
         LR    R11,RPREFIX         SET UP R11 AS UNIT POINTER  @OY19405
         LH    R3,AVTKEYLE         GET DATA CNT OF EACH UNIT   @OY19405
LOOP     LR    R9,R7               LOAD AMT TO MOVE THIS TIME  @OY19405
         CR    R7,R3               CORRECT SO FAR ?            @OY19405
         BL    OK                  YES                         @OY19405
         LR    R9,R3               NO, SWAP                    @OY19405
OK       CR    R9,R4               COMPARE WITH BUFFER DATA SIZ@OY19405
         BL    OKAGAIN             ALLRIGHT                    @OY19405
         LR    R9,R4               NO, SWAP                    @OY19405
OKAGAIN  BCTR  R9,0                SUBTRACT ONE FOR THE MOVE   @OY19405
         EX    R9,MOVEDATA         MOVE DATA                   @OY19405
         LA    R9,1(R9)            BUMP CNT BACK               @OY19405
         SR    R4,R9               DECREASE DATA LEFT TO MOVE  @OY19405
         SR    R7,R9               DECREASE DATA SPACE LEFT    @OY19405
         AR    RWK1,R9             UPDATE DATA POINTER         @OY19405
         LTR   R4,R4               ALL DATA BEEN MOVED         @OY19405
         BNZ   UPDATE              NO, CONTINUE                @OY19405
         LTR   R7,R7               ANY SPACE LEFT              @OY19405
         BZ    CLEANUP             NO, CONTINUE                @OY19405
         BCTR  R7,0                SUBTRACT ONE FOR THE MOVE   @OY19405
         EX    R7,MOVEZERO         CLEAR REST OF ENTRY         @OY19405
         AR    RWK1,R7             UPDATE THE                  @OY19405
         LA    RWK1,1(RWK1)        TRACE ENTRY POINTER         @OY19405
         B     CLEANUP             FINISHED... RETURN          @OY19405
UPDATE   CR    R3,R9               DID WE MOVE ALL OF ONE UNIT @OY19405
         BE    NXTUNIT             GET NEXT UNIT TO BE MOVED   @OY19405
         SR    R3,R9               SUBTRACT CNT ALLREADY MOVED @OY19405
         AR    R8,R9               UPDATE BUFFER POINTER       @OY19405
CLEANUP  LH    R7,ENTSZ            GET DATA SPACE IN ONE UNIT  @OY19405
         CL    RWK1,8(RWK2)        LAST ENTRY IN TABLE         @OY19405
         BNL   BUMP1               YES                         @OY19405
         ST    RWK1,0(RWK2)        NO, SAVE                    @OY19405
         LTR   R4,R4               THROUGH                     @OY19405
         BZR   R14                 YES, EXIT OR SVC COMWR EXIT @OY19405
         B     LOOP                CONTINUE                    @OY19405
NXTUNIT  L     R11,8(R11)          POINT TO NEXT UNIT          @OY19405
         LA    R8,12(R11)          POINT TO DATA TO BE MOVED   @OY19405
         LH    R3,AVTKEYLE         GET DATA CNT OF EACH UNIT   @OY19405
         LTR   R7,R7               CHECK TRACE ENTRY SIZE      @OY19405
         BNZ   LOOP                NOT ZERO, CONTINUE          @OY19405
         LH    R7,ENTSZ            RESTORE TRACE ENTRY SIZE    @OY19405
         B     LOOP                CONTINUE                    @OY19405
BUMP1    BAL   R14,BUMP            UPDATE TABLE POINTERS AND   @OY19405
*                                  RETURN HERE WITHOUT SVC     @OY19405
HOOK     LA    R14,SVC             SET LINK FOR SVC BEFORE EXIT@OY19405
         L     RWK2,CUR            RESTORE TABLE POINTER       @OY19405
         L     RWK1,0(RWK2)        RESTORE POINTER TO CURR ENT @OY19405
         LH    R7,ENTSZ            RESTORE TRACE ENTRY LENGTH  @OY19405
         LTR   R4,R4               WAS THERE MORE DATA IN BUFF @OY19405
         BZR   R14                 NO, ISSUE COMWR SVC AND EXIT@OY19405
         B     LOOP                CONTINUE TRACE OF BUFFER    @OY19405
MOVEDATA MVC   0(0,RWK1),0(R8)     MOVE DATA INTO TRACE AREA   @OY19405
MOVEZERO MVC   0(0,RWK1),CLEAR     CLEAR REST OF ENTRY         @OY19405
SINGLE   MVC   BUFFER(0),12(RPREFIX)          MOVE INTO TRACE  @OY19405
ENTSZ    DC    X'0060'             SIZE OF ONE TRACE ENTRY     @OY19405
FULL8    DC    F'00000008'         CONSTANT                    @OY19405
DAT      DC    CL4'TCAM'           DATA INDICATOR              @OY19405
CLEAR    DC    32F'0'              ZEROS FOR CLEARING TRACE ENT@OY19405
MPPFLAG  DC    XL2'0000'           USED FOR APPLIC UCB ADDRESS  PTR2345
         EJECT
ADDRMASK DC    F'16777215'         CLEAR HI BYTE OF REG         PTR2345
CURD     DC    A(CUR1D)            TABLE BEING USED            @OY19405
TABLE1D  DC    A(BUFFER01)                                     @OY19405
TABLE2D  DC    A(BUFFER02)                                     @OY19405
CUR1D    DC    A(FIRST)            CURRENT ENTRY TABLE ONE     @OY19405
         DC    A(FIRST)            FIRST ENTRY POINTER         @OY19405
         DC    A(LAST)             LAST ENTRY POINTER          @OY19405
CUR2D    DC    A(FIRST2)           POINTERS FOR TABLE TWO      @OY19405
         DC    A(FIRST2)           FIRST                       @OY19405
         DC    A(LAST2)            LAST                        @OY19405
COUNTD   DC    F'0'                COUNT OF TABLES USED        @OY19405
BUFFER01 DC    3F'0'                    BUFFER TIME STAMP HEADER
COUNT1   DC    X'F1',AL3(0)             BUF IDENT AND SEQUENCE FIELD
FIRST    DS    (ENTRYNUM)XL(SIZE)  BUFFER 1 TRACE TABLE
LAST     EQU   *
BUFFER02 DC    3F'0'                    BUFFER TIME STAMP HEADER
COUNT2   DC    X'F2',AL3(0)             BUF IDENT AND SEQUENCE FIELD
FIRST2   DS    (ENTRYNUM)XL(SIZE)  BUFFER 2 TRACE TABLE
LAST2    EQU   *
         DS    0D
PARMLIST EQU   *                   PARAMETER LIST FOR COMWRITE
PARMAREA DC    A(BUFFER01)
PARMTS   DC    X'00'
PARMFLAG DC    X'40'               SET COMPLETE
PARMLEN  DC    Y(LAST-BUFFER01)
PARMCT   DC    F'0'
PARMID   DC    CL4'BUFF'           I D USED IF COMWRITE ABENDS
AQPARM   EQU   *                   PARMLIST USED BY SVC AQCTL
         DC    X'20'
         DC    AL3(0)
         DC    X'80',AL3(TJID)
COMWRTCB DC    F'0'                COMWRITE TCB
TJID     DC    H'0'
         DS    0F
SAVE     DC    18F'0'              SAVE AREA
SAVEREGS DC    16F'0'              SAVE 'IEDQAA' REGS
TERMPREF DC    AL2(IEDQTRM-IEDNTRM)  370X TERMINAL PREFIX SIZE  SA67105
IEDTRBUF DSECT                                                 @OY19405
CUR      DS    AL4                 TABLE BEING USED            @OY19405
TABLE1   DS    AL4                                             @OY19405
TABLE2   DS    AL4                                             @OY19405
CUR1     DS    AL4                 CURRENT ENTRY TABLE ONE     @OY19405
         DS    AL4                 FIRST ENTRY POINTER         @OY19405
         DS    AL4                 LAST ENTRY POINTER          @OY19405
CUR2     DS    AL4                 POINTERS FOR TABLE TWO      @OY19405
         DS    AL4                 FIRST                       @OY19405
         DS    AL4                 LAST                        @OY19405
COUNT    DS    AL4                 COUNT OF TABLES USED        @OY19405
         EJECT
BUFFTRAC DSECT
BUFFID   DS    XL4                 IEDQAA EYE CATCHER          @OY19405
BUFFADD  DS    XL4                 BUFFER ADDRESS
CBERRST  DS    XL4                 ERROR BITS IN SCB
*CBERR1  DS    XL1 .               FIRST BYTE
*                                  BIT DEFINITIONS
*CBHDRRN EQU   X'80' .             INCOMPLETE HEADER
*CBNOLOG EQU   SCBHDRRN .          INVALID LOGON MESSAGE
*CBORIGN EQU   X'40' .             INVALID ORIGIN ON
*CBNOTRM EQU   X'20' .             NOT A TSO TERMINAL
*CBSEQHN EQU   X'10' .             SEQUENCE HIGH ON
*CBNOTSO EQU   SCBSEQHN .          TSO NOT IN SYSTEM
*CBSEQLN EQU   X'08' .             SEQUENCE LOW ON
*CBNXFRN EQU   X'04' .             MESSAGE NOT SENT/RECEIVED
*CBNOBFN EQU   X'02' .             INSUFFICIENT BUFFERS
*CBCUTFN EQU   X'01' .             CUTOFF ERROR
*
*CBERR2  DS    XL1 .               SECOND BYTE
*                                  BIT DEFINITIONS
*CBCRMIN EQU   X'80' .             CORE MINIMUM PASSED
*CBCRMAX EQU   X'40' .             CORE MAXIMUM PASSED
*        EQU   X'20' .             ERROR IN DYNAMIC TRANSLATE TSO
*CBALN   EQU   X'10' .             AUTOMATIC LINE NUMBERING
*CBOLTR  EQU   X'08' .             TOTE NOT IN SYSTEM
*
*CBERR3  DS    XL1 .               THIRD BYTE
*                                  BIT DEFINITIONS
*CBLOSTN EQU   X'80' .             MESSAGE LOST (OVERLAID)
*CBXPI   EQU   SCBLOSTN .          ATTENTION - SEND IT
*CBTMIDN EQU   X'40' .             ID FROM TERMINAL INVALID
*CBXPD   EQU   SCBTMIDN .          ATTENTION - SEND ID
*CBTMINN EQU   X'20' .             TERMINAL INOPERATIVE
*CBSATTN EQU   X'10' .             SIMULATED ATTENTION RECEIVED
*CBUSERN EQU   X'08' .             USER ERROR ON
*CBFORMN EQU   X'04' .             FORMAT ERROR-BSC MESSAGE
*CBATTN  EQU   X'02' .             HARDWARE ATTENTION
*CBXCEPN EQU   X'01' .             UNIT EXCEPTION
*CBERR4  DS    XL1 .               FOURTH BYTE
*CBSLCTN EQU   X'80' .             ERROR DURING SELECTION
*CBTXTTN EQU   X'40' .             ERROR DURING TEXT TRANSFER
*CBCONNN EQU   X'20' .             ERROR IN CONNECT/DISCONNECT
*CBTRMLN EQU   X'10' .             TERMINAL ERROR
*CBLINEN EQU   X'08' .             LINE ERROR
*CBCTLUN EQU   X'04' .             ERROR IN CONTROL UNIT
*CBCHANN EQU   X'02' .             ERROR IN CHANNEL
*CBUNDFN EQU   X'01' .             UNDEFINED ERROR
CBCSWLW  DS    XL4                 LAST WORD OF CSW IN LCB (IOB)
CBSENS0  DS    XL1                 SENSE BYTE IN LCB (IOB)
CBFLAG1  DS    XL1                 FLAG 1 OF LCB (IOB)
CBFLAG3  DS    XL1                 FLAG 3 OF LCB (IOB)
CBERBST  DS    XL1                 LCBERBST STATUS OF ERB
*                                  THE X'08' BIT MUST NEVER BE ON
*                                  IN THE STATUS BYTE. IT MUST
*                                  REMAIN THE 9TH BYTE OF THE ERB
*                                  BIT DEFINITIONS
*CBEOMSG EQU   X'40' .             END OF MESSAGE READ FROM DISK
*CBRDERR EQU   X'20' .             LOGICAL READ ERROR
*CBERROR EQU   X'04' .             ERROR ON SEND SIDE
*CBPRCPG EQU   X'02' .             AFTER INITIAL REQUEST IS
*                                  SATISFIED, ERB WILL BE POSTED
*                                  TO QCB INDICATED IN LCBRCQCB
*CBCOMPL EQU   X'02' .             DISK REQUEST IS COMPLETE
*CBDLNKN EQU   X'01' .             DELINK SWITCH ON- ERB NOT POSTED
*                                  IF ON, THE ERB CAN BE POSTED
*CBDLNKF EQU   X'FE' .             ERB POSTED
*                                  PCI CAN NOT POST ERB
CBSTATE  DS    XL2                 LCBSTATE STATUS OF LCB
*
*CBSTAT1 DS    XL1 .               FIRST STATUS BYTE
*                                  BIT DEFINITIONS
*CBRCLLN EQU   X'80' .             RECALL BEING PERFORMED
*CBCTLMD EQU   X'40' .             LINE IN CONTROL MODE
*CBOCNI  EQU   X'20' .             NON-IMMEDIATE OPERATOR CONTROL
*                                  OPERATION IN PROGRESS
*CBINITN EQU   X'10' .             RECEIVING INITIATE MODE MSG.
*CBCONT  EQU   X'08' .             CONTINUE OR RESET OPERATIONS
*CBFREEN EQU   X'04' .             LINE FREE
*CBRECVN EQU   X'02'               LINE IS RECEIVING
*CBSENDN EQU   X'01' .             ON = LINE SENDING
*                                  BOTH SEND AND RECEIVE BITS
*                                  OFF INDICATE LINE IS STOPPED
*
*CBSTAT2 DS    XL1 .               SECOND STATUS BYTE
*                                  BIT DEFINITIONS
*CBTRACE EQU   X'80' .             I/O TRACE ACTIVE FOR THIS LINE
*CBLOCK  EQU   X'80' .             LINE IN LOCK MODE
*CBMSGNN EQU   X'40' .             MSGEN/STARTUP MESSAGE
*CBBEOTN EQU   X'20' .             EOT FROM BFRED TERM - NO EOM
*CBSNDPR EQU   X'10' .             SEND PRIORITY SWITCH SET BY
*                                  SEND SCHEDULER
*CBNEGRP EQU   X'08'               NEGATIVE RESPONSE TO POLLING
*                                  RECEIVED
*CBSYNC  EQU   X'04' .             LINE IS BISYNC
*CBDIAL  EQU   X'02' .             DIAL LCB
*CBRESP  EQU   X'01' .
*
UCB      DS    XL2                 UCB CHAN UNIT ADDRESS
BUFFER   DS    XL(SIZE-(UCB+2-BUFFTRAC)) SIZE OF BUFFER TRACED
         EJECT
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TSCBD
         EJECT
         TTRMD                                                  SA67105
         EJECT
         TPRIOR                                                 SA69093
         END
