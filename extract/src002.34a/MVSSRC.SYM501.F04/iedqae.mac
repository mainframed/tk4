AE01     TITLE '''IEDQAE'' - LOCATE OPTION FIELD ADDRESS ROUTINE'
IEDQAE   CSECT
*A487000,488000,499200,709000,718000                             S22025
*C681000,726000,729000                                           S22025
*D498600-499800                                                  S22025
*C609000-618000                                                @YA05454
*A001917                                                       @OY19706
*
*
*
*
***********************************************************************
*                                                                     *
*STATUS -- CHANGE LEVEL                                               *
*                                                                     *
*FUNCTION -- RETURNS THE ADDRESS OF AN OPTION FIELD WHEN PASSED THE   *
*   INDEX TO THE OPTION FIELD.                                        *
*                                                                     *
*   THE KEY (ORDINAL INDEX) OF THE CURRENTLY CONNECTED TERMINAL IS    *
*   ACCESSED FROM THE LCB (LCBTTCIN) AND IS PASSED TO THE TERMINAL    *
*   NAME TABLE CODE,  WHOSE ADDRESS IS ACCESSED FROM THE AVT          *
*   (AVTRNMPT),  AND WHICH RETURNS THE ADDRESS OF THE TERMINAL        *
*   TABLE ENTRY FOR THE TERMINAL.                                     *
*                                                                     *
*   THE 'OPTION FIELDS USED' FLAG IN THE TERMINAL STATUS FIELD        *
*   (TRMSTATE) IS TESTED.  IF IT IS NOT ON,  THE ERROR EXIT IS        *
*   TAKEN.                                                            *
*                                                                     *
*   THE NUMBER-OF-OPTION-ENTRIES FIELD (TRMOPNO) IS COMPARED WITH     *
*   THE NUMBER OF THE OPTION ENTRY PASSED IN THE PARAMETER LIST.      *
*   IF THE NUMBER OF THE OPTION ENTRY PASSED IS HIGH,  THE ERROR      *
*   EXIT IS TAKEN.                                                    *
*                                                                     *
*   THE OFFSET BYTE FOR THE OPTION FIELD SOUGHT (TRMOPT,  INDEXED     *
*   BY THE PARAMETER LIST OFFSET PASSED) IS ACCESSED AND TESTED.      *
*   IF IT IS X'FF',  THE OPTION FIELD IS NOT DEFINED FOR THIS         *
*   ENTRY.  THE ERROR EXIT IS TAKEN.                                  *
*                                                                     *
*   THE ADDRESS OF THE OPTION FIELD SOUGHT IS COMPUTED BY ADDING      *
*   THE ADDRESS OF THE OPTION TABLE,  ACCESSED FROM THE AVT           *
*   (AVTOPTPT);  THE OFFSET TO THE SET OF OPTION FIELDS FOR THIS      *
*   ENTRY,  ACCESSED FROM THE ENTRY (TRMOPTBL);  AND THE OFFSET       *
*   BYTE TO THE INDIVIDUAL OPTION FIELD PREVIOUSLY ACCESSED.          *
*                                                                     *
*   IF THE RETURN REGISTER SPECIFIED IS REGISTER 15,  THE ADDRESS     *
*   IS PLACED IN REGISTER 15.  OTHERWISE,  THE ADDRESS IS STORED      *
*   IN THE PROPER WORD IN THE REGISTER SAVE AREA AND REGISTER 15 IS   *
*   SET TO A RETURN CODE OF X'00'.  RETURN IS MADE TO THE CALLER      *
*   VIA THE RETURN INTERFACE ROUTINE.                                 *
*                                                                     *
*   ERROR EXIT:                                                       *
*   IF THE RETURN REGISTER IS 15,  IT IS SET TO A RETURN CODE OF      *
*   X'00'.  IF THE RETURN REGISTER IS NOT 15,  A RETURN CODE OF       *
*   X'FF' IS STORED IN THE PROPER WORD IN THE REGISTER SAVE AREA      *
*   AND REGISTER 15 IS SET TO A RETURN CODE OF X'04'.                 *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAE' TO RETURN THE ADDRESS OF AN OPTION FIELD WHEN        *
*   PASSED THE INDEX TO THE OPTION FIELD.  CALLING SEQUENCE FROM      *
*   USER INTERFACE IS:                                                *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 -- THE ADDRESS OF A MACRO-GENERATED PARAMETER LIST.    *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        *       * PARAM *  OPT  *  RTN  *                            *
*        * INDEX * LIST  *  FLD  *  REG  *                            *
*        *       * LNGTH * OFFST * OFFST *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 4 - ADDRESS OF THE LCB.                                  *
*                                                                     *
*   REGISTER 9 - ADDRESS OF THE AVT.                                  *
*                                                                     *
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE REGISTER.              *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - IF OPTION FIELD IS FOUND AND REGISTER 15 IS THE     *
*   RETURN REGISTER,  CONTAINS THE ADDRESS OF THE OPTION FIELD.  IF   *
*   OPTION FIELD IS FOUND AND REGISTER 15 IS NOT THE RETURN           *
*   REGISTER,  CONTAINS A RETURN CODE OF X'00'.  IF OPTION FIELD IS   *
*   NOT FOUND AND REGISTER 15 IS THE RETURN REGISTER,  CONTAINS A     *
*   RETURN CODE OF X'00'.  IF OPTION FIELD IS NOT FOUND AND           *
*   REGISTER 15 IS NOT THE RETURN REGISTER,  CONTAINS A RETURN CODE   *
*   OF X'04'.                                                         *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQLM' - RETURN INTERFACE ROUTINE FOR EXIT.                     *
*                                                                     *
*   TERMINAL NAME TABLE CODE (AVTRNMPT) TO GET THE ADDRESS OF THE     *
*   TERMINAL TABLE ENTRY.                                             *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE.                                       *
*                                                                     *
*   LCB - LINE CONTROL BLOCK.                                         *
*                                                                     *
*   TERMINAL TABLE.                                                   *
*                                                                     *
*   OPTION TABLE.                                                     *
*                                                                     *
*EXITS,  NORMAL -- OPTION FIELD IS FOUND.  REGISTER 15 IS THE         *
*   RETURN REGISTER AND CONTAINS THE ADDRESS OF THE OPTION FIELD.     *
*                                                                     *
*   OPTION FIELD IS FOUND.  RETURN REGISTER (NOT REGISTER 15) IN      *
*   SAVE AREA CONTAINS THE ADDRESS OF THE OPTION FIELD.  REGISTER     *
*   15 CONTAINS A RETURN CODE OF X'00'.                               *
*                                                                     *
*EXITS,  ERROR -- OPTION FIELD IS NOT FOUND.  REGISTER 15 IS THE      *
*   RETURN REGISTER AND CONTAINS A RETURN CODE OF X'00'.              *
*                                                                     *
*   OPTION FIELD IS NOT FOUND.  RETURN REGISTER (NOT REGISTER 15)     *
*   IN SAVE AREA CONTAINS A RETURN CODE OF X'FF'.  REGISTER 15        *
*   CONTAINS A RETURN CODE OF X'04'.                                  *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- REENTRANT,  SERIALLY REUSABLE,  REFRESHABLE,           *
*   ENABLED,  RESIDENT,  PROBLEM PROGRAM MODE.                        *
*                                                                     *
*   NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN     *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
        SPACE
R0       EQU   0                        WORK REG               @Y17XANQ
*
R1       EQU   1                        PARAMETER REGISTER
*
RWORK    EQU   2                        GENERAL WORK REGISTER
*
RSAVE    EQU   3                        SAVE AREA FOR PARAMETER
*
RLCB     EQU   4                        BASE FOR LCB
*
RCOMP    EQU   5                        SECONDARY WORK REGISTER
*
RWORK7   EQU   7                        WORK REGISTER
         SPACE
RTERM    EQU   8                        TERMINAL ENTRY REGISTER
*
RAVT     EQU   9                        BASE REGISTER FOR AVT
*
R11      EQU   11                       SAVE AREA              @Y17XANQ
*
RBASE    EQU   12                       BASE REGISTER FOR MODULE
*
R13      EQU   13                       ADDRESS OF CALLER SAVE AREA
*
R14      EQU   14                       RETURN ADDRESS REGISTER
*
R15      EQU   15                       ENTRY POINT AND RETURN CODE
*
         SPACE
********* PARAMETER LIST OFFSETS *********
OPTOFF   EQU   2                        OFFSET OF OPTION FIELD
SAVEOFF  EQU   3                        OFFSET INTO SAVE AREA
OPTLEN   EQU   1                        PARMLIST LENGTH        @Y17XANQ
         SPACE
********* OTHER EQUATES *********
         SPACE
ONE      EQU   1                        ONE BYTE LENGTH
TWO      EQU   2                        DISPLACEMENT OF 2      @Y17XANQ
THREE    EQU   3                        SHIFT VALUE OF THREE
FOUR     EQU   4                        OFFSET TO 2ND WORD OF PARM
EIGHT    EQU   8                        DISPLACEMENT OF 8      @Y17XANQ
TWELVE   EQU   12                       DISPLACEMENT OF 12     @Y17XANQ
TWENTY   EQU   20                       VALUE                  @Y17XANQ
TWENTY8  EQU   28                       DISPLACEMENT OF 28     @Y17XANQ
CVTOFF   EQU   16                       OFFSET TO CVT ADDR     @Y17XANQ
PREVSAVE EQU   4                        PREVIOUS SAVE AREA ADDR  S22025
NEXTSAVE EQU   8                        NEXT SAVE AREA ADDRESS   S22025
         EJECT
         USING IEDQAVTD,RAVT            ESTABLISH BASE FOR AVT
         USING IEDQLCB,RLCB             ESTABLISH ADDRESSABILITY
         USING IEDQAE,RBASE             GIVE ROUTINE A BASE
         USING *,RBASE                  GIVE ROUTINE A BASE    @Y17XANQ
         B     LOCOPT1                  NORMAL ENTRY POINT     @Y17XANQ
*
*    PLUS FOUR ENTRY FOR NONMH LOCOPT CALLS                    @Y17XANQ
*
         STM   R14,RBASE,TWELVE(R13)    SAVE CALLER'S REGS     @Y17XANQ
         LR    RBASE,R15                GET BASE REG SET UP    @Y17XANQ
         SPACE
IEDQAE   IEDHJN LOCOPT                  ID AND DATE              S22025
         L     RAVT,CVTOFF              GET ADDR OF CVT        @Y17XANQ
         L     RAVT,AVTCVTPT(,RAVT)     GET ADDR OF TCX        @Y17XANQ
         L     RAVT,AVTEZERO(,RAVT)     GET ADDR OF AVT        @Y17XANQ
LOCOPT1  EQU   *
         LR    R11,R13                  RESTORE SAVE AREA      @Y17XANQ
         LR    RSAVE,R1                 SAVE PARMLIST ADDRESS  @Y17XANQ
         CLI   OPTLEN(R1),FOUR          IS STATION= SPEC       @Y17XANQ
         BE    USETTC                   NO                     @Y17XANQ
         SPACE 2
         L     R15,AVTRNMPT             GET ADDR OF TNT CODE   @Y17XANQ
         SR    R0,R0                    CLEAR REG 0            @Y17XANQ
         IC    R0,TNTENLEN-IEDQTNTD(R15) GET ENTRY LENGTH      @Y17XANQ
         L     R1,FOUR(,R1)             GET ADDR OF STATION    @Y17XANQ
*                                       CHAR                   @Y17XANQ
         L     R15,AVTMSGS-1            GET ADDR OF VCON TABLE @Y17XANQ
         L     R15,EIGHT(,R15)          LOAD ADDR OF IEDQA1    @Y17XANQ
         LA    R13,AVTSAVE3             PASS SAVE AREA         @Y17XANQ
         BAL   R14,FOUR(,R15)           LINK TO IEDQA1         @Y17XANQ
         LR    R13,R11                  RESTORE SAVE AREA      @Y17XANQ
         LTR   R1,R15                   DID A1 FIND TTCIN?     @Y17XANQ
         BNZ   TNT                      YES                    @Y17XANQ
         LA    R15,EIGHT                NOT FOUND SET RETURN   @Y17XANQ
         SR    RWORK,RWORK              CLEAR ADDR REGISTER    @OY19706
         B     SET8                     EXIT                   @Y17XANQ
         SPACE 1
**************************************************************** S22025
*
* THIS SECTION LOCATES AND GIVES CONTROL TO THE ROUTINE WHICH
* LOCATES THE TERMINAL ENTRY.
        SPACE
USETTC   EQU   *                                               @Y17XANQ
         LH    R1,LCBTTCIN              PICK UP TERMNAME INDEX
TNT      EQU   *                                               @Y17XANQ
         N     R1,AVTCLRHI              CLEAR HI-ORDER TWO BYTES
         BZ    NOTFOUND                 ERROR IF ZEROES
         SPACE
         L     R15,AVTRNMPT             GET ADDR OF TERMNAME RTN
         BALR  R14,R15                  GIVE IT CONTROL
*
* THIS SECTION GOES THROUGH THE NECESSARY THREE TESTS TO DETERMINE
* IF THE REQUESTED OPTION FIELD IS PRESENT.  IF NOT, ABNORMAL EXIT
* IS MADE.  OTHERWISE A SUCCESSFUL EXIT IS PREPARED AND TAKEN.
*
         LR    RTERM,R1                 SET UP BASE FOR TERM ENTRY
         USING IEDQTRM,RTERM            GIVE IT ADDRESSABILITY
         TM    TRMSTATE,TRMOPTFN        ARE OPTION FIELDS PRESENT
         BNO   NOTFOUND                 NO - RETURN TO CALLER
*
         CLC   OPTOFF(ONE,RSAVE),TRMOPNO COMPARE TO COUNT OF OPTIONS
         BH    NOTFOUND                 HIGHER - RETURN TO CALLER
*
         SR    RWORK,RWORK              CLEAR
         IC    RWORK,OPTOFF(,RSAVE)     PICK UP OPTION OFFSET
         SR    RCOMP,RCOMP              CLEAR OPTION OFFSET REG
         IC    RCOMP,TRMOPT-1(RWORK)    GET TRUE OFFSET
         IC    RWORK,AVTHFF+1           LOAD IT WITH AN X'FF'
         CR    RCOMP,RWORK              IS OFFSET A X'FF'
         BE    NOTFOUND                 YES - RETURN TO CALLER
*
* THIS SECTION DETERMINES THE ACTUAL ADDRESS OF THE OPTION FIELD
* AND OF THE OPTION CSECT TABLE ENTRY FOR THE OPTION FIELD
* AND BRANCHES TO THE COMMON EXIT ROUTINE
*
         LH    RWORK,TRMOPTBL           GET ENTRY OFFSET       @YA05454
         N     RWORK,AVTCLRHI           CLEAR HI HALF          @YA05454
         L     R1,AVTOPTPT              GET OPTION TABLE ADDR  @YA05454
         AR    RWORK,R1                 ADD OPT TABLE ADDR     @YA05454
         L     R1,FOUR(,R1)             GET OPT CSECT TBL ADDR @YA05454
         AR    RWORK,RCOMP              ADD OFFSET FOR THIS OPTION
*
         IC    RCOMP,OPTOFF(,RSAVE)     PICK UP OPTION OFFSET
         BCTR  RCOMP,AVTEZERO           DECREMENT FOR INDEX
         LA    RWORK7,AVTEZERO(RCOMP,RCOMP) MULTIPLY INDEX
         SLL   RCOMP,THREE              BY TEN TO GET
         LA    RCOMP,AVTEZERO(RWORK7,RCOMP) ACTUAL OFFSET
         LA    R1,AVTEZERO(RCOMP,R1)    POINT TO ENTRY
         SR    R15,R15                  SET ZERO RETRUN CODE   @Y17XANQ
SET8     EQU   *                                               @Y17XANQ
         CLI   0(RSAVE),AVTEFF          WHICH ENTRY POINT?     @Y17XANQ
         BE    RETURN                   NONMH ENTRY POINT      @Y17XANQ
         EJECT
         CLI   THREE(RSAVE),R15         IS OUTPUT REG 15       @Y17XANQ
         BE    DEFAULT                  YES - PUT RESULT IN 15
*
         B     STOREREG                 GO STORE IN RTN REG
*
ERROR    EQU   *
         SR    RWORK,RWORK              CLEAR ADDR REG TO ZERO
*
DEFAULT  EQU   *
         LR    R15,RWORK                PUT RESULT IN REG 15
         B     EXIT                     RETURN TO CALLER         S22025
*
NOTFOUND EQU   *
         LA    R15,FOUR                 SET ERR RETURN CODE    @Y17XANQ
         CLI   0(RSAVE),AVTEFF          IS THIS NONMH ENTRY?   @Y17XANQ
         BE    RETURN                   EXIT                   @Y17XANQ
         CLI   THREE(RSAVE),R15         IS OUTPUT REG 15       @Y17XANQ
         BE    ERROR                    YES, SET ERROR RETURN
*
         LA    RWORK,AVTEFF             PLACE NOT FOUND INDICATOR
*
STOREREG EQU   *
         L     R13,PREVSAVE(R13)        POINT TO PREV SAVE AREA  S22025
         SR    RCOMP,RCOMP
         IC    RCOMP,THREE(RSAVE)       PICK REGISTER NUMBER   @Y17XANQ
         SLL   RCOMP,TWO                MULTIPLY BY 4          @Y17XANQ
         LA    RCOMP,TWENTY(RCOMP)      ADJUST TO POSITION     @Y17XANQ
         ST    RWORK,AVTEZERO(RCOMP,R13) STORE OFFSET IN SAVE AREA
         L     R13,NEXTSAVE(R13)        CURRENT SAVE AREA        S22025
*
EXIT     EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              RETURN TO CALLER         S22025
***********************************************************************
*   THIS SECTION HANDLES THE EXIT FOR THE NONMH ENTRY TO THIS MODULE  *
***********************************************************************
         SPACE 2
RETURN   EQU   *                                               @Y17XANQ
         LR    R0,R1                    GET CHAR. CSECT ADDR   @Y17XANQ
         LR    R1,RWORK                GET OPTION FIELD OFFSET @Y17XANQ
         LM    RWORK,RBASE,TWENTY8(R13) RESTORE REGS           @Y17XANQ
         L     R14,TWELVE(R13)          RESTORE RETURN         @Y17XANQ
         BR    R14                      RETURN TO CALLER       @Y17XANQ
         SPACE 3
        EJECT
        EJECT
        TTNTD
********* DSECTS *********
        SPACE
         TTRMD
         TLCBD
         TAVTD
*
         END
