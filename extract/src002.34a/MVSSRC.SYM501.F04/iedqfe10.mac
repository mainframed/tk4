 TITLE 'IEDQFE10 STCB TRACE DUMP'
IEDQFE10 CSECT
*C445000,471000,297000                                         @SA69974
*D309000-318000                                                @SA69974
*D321000-324000,445000-446000,471000-477000                    @OZ18768
***********************************************************************
*                                                                     *
*MODULE NAME - IEDQFE10 STCB TRACE DUMP                               *
*                                                                     *
*STATUS--CHANGE LEVEL 1                                               *
*                                                                     *
*FUNCTION-- THIS MODULE WILL WRITE THE STCB TRACE TABLE OUT TO A      *
*   SEQUENTIAL DATA SET USING COMWRITE (IEDQFW). ADDRESSABILITY IS    *
*   ESTABLISHED AND A TEST IS MADE FOR A LOAD OR DELETE FUNCTION.     *
*   ON A LOAD OPERATION IF AT LEAST FOUR ENTRIES ARE NOT FOUND IN THE *
*   TRACE TABLE AN ERROR MESSAGE IS PREPARED AND CONTROL IS RETURNED  *
*   TO THE CALLING ROUTINE. THE TABLE IS THAN DIVIDED IN HALF WITH    *
*   SEPARATE CURRENT, FIRST AND LAST POINTERS FOR EACH HALF.          *
*   UPON ENTRY FROM IEDQC6 THIS ROUTINE CHECKS TO SEE IF THIS IS A    *
*   LOAD OR DELETE FUNCTION.IF A LOAD IS REQUESTED THE FLAGS AT       *
*   AVTAFE10 ARE TESTED. IF THEY ARE OFF,THIS ROUTINE STORES ITS ENTRY*
*   POINT ADDRESS INTO AVTAFE10 AND SETS THE FLAGS ON,INDICATING THAT *
*   THE ROUTINE IS ACTIVE.THE ROUTINE THEN RETURNS TO IEDQC6 WITH A   *
*   RETURN CODE OF ZERO. IF THE FLAGS ARE ALREADY ON RETURN IS TO     *
*   IEDQC6 WITH A RETURN CODE OF FOUR.IF A DELETE FUNCTION IS         *
*   REQUESTED THE FLAGS IN AVTAFE10 ARE SET OFF INDICATING THAT THE   *
*   ROUTINE IS NOT ACTIVE.                                            *
*   THIS ROUTINE IS ENTERED FROM THE DISPATCHER AT SYMBOL 'DISPENT'   *
*   UPON ENTRY AT THIS POINT THE TWO TRACE TABLES ARE SET UP WITH IDEN*
*   TIFING HEADERS. ALL SUBSEQUENT ENTRIES TO THIS ROUTINE FROM THE   *
*   DISPATCHER WILL ENTER AT SYMBOL 'BYPASS'. AT THIS ENTRY A COUNT OF*
*   THE NUMBER OF TABLES FILLED IS UPDATED. A TEST IS MADE TO         *
*   SEE IF THE PREVIOUS TABLE HAS BEEN WRITTEN. IF NOT, RETURN IS MADE*
*   TO THE DISPATCHER AND THE CURRENT TABLE WILL BE USED AGAIN.       *
*   A TEST IS THEN MADE TO SEE IF THE PARAMETER POINTERS IN THE       *
*   AVT ARE FREE. IF ONE IS FOUND AVAILABLE HEADER INFORMATION        *
*   IS COMPLETED AT THE BEGINNING OF THE CURRENT TABLE.               *
*   THE PARAMETER LIST FOR COMWRITE IS COMPLETED TO PRINT THE CURRENT *
*   TABLE AND CONTINUE TRACING ENTRIES IN THE AVAILABLE TRACE TABLE.  *
*   WHEN NO PARAMETER POINTER IS AVAILABLE CONTROL IS RETURNED TO     *
*   THE DISPATCHER AND THE CURRENT TABLE IS REUSED.                   *
*   ON A DELETE OPERATION THE DISPATCHER INSTRUCTIONS AND TRACE TABLE *
*   POINTERS ARE RESTORED TO THEIR ORIGINAL CONDITION AND CONTROL IS  *
*   RETURNED TO THE CALLING ROUTINE.                                  *
*                                                                     *
*ENTRY POINT--'IEDQFE10' TO INITIALIZE A LOAD OPERATION OR DEACTIVATE *
*                  ON A DELETE OPERATION.                             *
*        AT SYMBOL 'DISPENT' FROM DISPATCHER TO COMPLETE              *
*        INITIALIZATION                                               *
*        AT SYMBOL 'BYPASS' FROM DISPATCHER TO WRITE CURRENT TRACE    *
*                                                                     *
*INPUT                                                                *
*       FROM IEDQC6 REGISTER 4 - ADDRESS OF AVT.                      *
*                   REGISTER 13 - SAVE AREA                           *
*                   REGISTER 0 - ZERO FOR LOAD OPERATION              *
*                                NON-ZERO FOR DELETE OPERATION        *
*        FROM IGG019RO                                                *
*             REGISTER 2 - BASE ADDRESS                               *
*             REGISTER 5 - ADDRESS OF TRACE TABLE POINTERS            *
*             REGISTER 13 - ADDRESS OF AVT + HEX 48 (AVTSAVE2)        *
*             REGISTER 14 - RETURN ADDRESS.                           *
*                                                                     *
*OUTPUT-- TO IEDQC6 REGISTER 15 - RETURN CODE                         *
*EXTERNAL ROUTINES-- SVC 102 TO POST ECB FOR COMWRITE.                *
*                                                                     *
*EXITS-NORMAL--A RETURN CODE OR MESSAGE IS RETURNED TO THE CALLING    *
*        ROUTINE.                                                     *
*                                                                     *
*EXITS-ERROR--                                                        *
*        RETURN CODE OF 4 IN REGISTER 15.                             *
*        MESSAGES-                                                    *
*             IED110I  LESS THAN 4 ENTRIES                            *
*             IED111I  NO TRACE TABLE                                 *
*                                                                     *
*TABLES/WORK AREAS--PARMLIST USED BY AQCTL (SVC 102). PARMLIST USED   *
*        BY COMWRITE(IEDQFW). DSECTS OF AVT.                          *
*                                                                     *
* NOTE-  THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. REDEFINITION OF *
*        CHARACTER CONSTANTS BY REASSEMBLY WILL RESULT IN A CORRECT   *
*        MODULE FOR THE NEW DEFINITIONS. THIS MODULE IS ALSO          *
*        DEPENDENT ON DISPLACEMENTS IN SOME OS CONTROL BLOCKS. THESE  *
*        DISPLACEMENTS ARE DEFINED IN THE EQUATES PRECEEDING THE      *
*        CODING. REDEFINITION OF THESE EQUATES & REASSEMBLY WILL      *
*        RESULT IN A CORRECT MODULE FOR THE NEW DISPLACEMENTS.        *
***********************************************************************
 EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
*              R4 AVT ADDRESS
*              ENTER FROM ROUTER
         USING IEDQAVTD,R4
         STM   R14,R12,12(R13)     SAVE
         BALR  R2,0                REGS
         USING *,2
         ST R13,SAVER+4
IEDQFE10 IEDHJN ENTER                                          @SA69974
         LA    R8,SAVER
         ST    R8,8(R13)
         LR    R13,R8
* THIS IS TO TEST FOR FOUR OR MORE TRACE ENTRIES
         L     R5,AVTDISTR         R5 NOW POINTS TO POINTERS OF TRACE
         LTR   R5,R5               IS THERE A TRACE TABLE
         BZ    NOTRACE             NO
         L     R8,4(R5)            LOAD FIRST ENTRY
         L     R9,8(R5)            LOAD LAST ENTRY
         SR    R9,R8               SUBTRACT TO FIND LENGTH
         SRL   R9,5                BOUNDARY ALIGNMENT
         SLL   R9,1
         CL    R9,FOUR             AT LEAST FIVE ENTRIES
         BNL   FOURORMR            YES
         LA    R15,LESFOUR         RETURN AND WRITE MESSAGE
MSGRTN   LCR   R15,R15             LOAD COMPLIMENT
RETURN   L     R13,SAVER+4         RESTORE
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14                 RETURN TO ROUTER
NOTRACE  LA    R15,NOTRMSG         LOAD MESSAGE ADDRESS
         B     MSGRTN
FOURORMR SLL   R9,4                THE LNG OF THE TABLE IS NOW BOUNDRY
         SRL   R9,1                DIVIDE FOR LTH OF EACH SEP TABLE
         LR    R5,R9               SAVE LENGTH
         STH   R9,PARMLN           STORE LTH IN PARM COM WRITE
         AR    R9,R8               ADD FOR ADDRESS OF LAST ENTRY
         LA    R7,16
         SR    R9,R7               SUB FOR LAST ENTRY OF FIRST TABLE
         ST    R9,LASONE           SAVE LAST ENTRY FOR 1ST TABLE
         ST    R8,FIRONE           SAVE ENTRY FOR 1ST TABLE
         ST    R8,CURONE           SAVE CURRENT FOR 1ST TABLE
         LA    R9,16(R9)
         ST    R9,FIRTWO           1ST ENTRY 2ND TABLE
         LA    R8,0(R9,R5)         SET UP FOR ADDRESS OF LAST ENTRY
         SR    R8,R7
         ST    R8,LASTWO           LAST ENTRY OF 2ND TABLE
         ST    R9,CURTWO           STORE 2ND CURRENT POINTER
         L     R9,AVTDISTR         LOAD OLD TRACE POINTER
         MVC   OLDPTR(12),0(R9)    SAVE TRACE POINTERS
         MVC   0(12,R9),CURONE     SET UP NEW POINTERS
         L     R10,AVTCWTCB
         ST    R10,COMWRTCB
         LA    R10,DISPENT         ADDRESS OF ENTRY POINT
         ST    R10,AVTAFE10        STORE ENTRY ADDRESS IN AVT
         MVI   AVTAFE10,X'FF'      SET DUMP REQUESTED
         SR    R15,R15             SET GOOD RETURN CODE
         B     RETURN
ERROR    LA    R15,4               LOAD BAD RETURN CODE
         B     RETURN
         EJECT
* INPUT        R2  BASE ADDRESS
*              R5   ADDRESS OF TRACE TABLE POINTERS
*              R13  ADDRESS OF AVT PLUS HEX 48 (AVTSAVE2)
*              R14  RETURN ADDRESS
*              R15  ENTRY POINT OF SUBTASK
         DROP  R2
         DROP  R4
         USING AVTSAVE2,R13
         USING *,R2
*                                  THE FIRST TIME THE 'DISPATCHER'
*                                  ENTERS THIS MODULE IT WILL
*                                  BE AT THIS POINT
DISPENT  STM   R0,R15,SAVE
         L     R8,FIRONE           LOAD FIRST ENTRY
         LA    R8,16(R8)           UPDATE FOR 16 BYTES OF SPACE
         ST    R8,CURONE           STORE IN FIRST TABLE
         L     R8,FIRTWO           LOAD FIRST ENTRY
         LA    R8,16(R8)           UPDATE FOR 16 BYTES OF SPACE
         ST    R8,CURTWO           STORE IN SECOND TABLE
         L     R3,FIRONE           LOAD 1ST ENTRY 1ST TABLE
         L     R4,FIRTWO           LOAD 1ST ENTRY 2ND TABLE
         MVC   13(3,R3),AVTBASE+1       MOVE AVT ADDR INTO TABLE 1
         MVC   13(3,R4),AVTBASE+1       MOVE AVT ADDR INTO TABLE 2
         MVC   0(12,R5),CURONE     SET UP TO USE TABLE 1
         LA    R10,BYPASS
         ST    R10,AVTAFE10        CHANGE AVT POINTER TO BYPASS
         MVI   AVTAFE10,X'FF'      RESTORE FLAG
         LM    R0,R15,SAVE
         BALR  R2,0                SET UP BASE REGISTER TO WRITE OUT
*                                  THE FIRST TABLE
         EJECT
*  SET UP IS COMPLETE AT THIS POINT THE DISPATCHER WILL ENTER AT
*   BYPASS FROM NOW ON
* INPUT        R2                  BASE ADDRESS
*              R5                  ADDRESS OF TRACE TABLE POINTERS
*              R13                 ADDRESS OF AVT + X'48'  (AVTSAVE2)
*              R14                 RETURN ADDRESS
*              R15                 ENTRY POINT OF SUBTASK
         DROP  R2
         USING *,R2
BYPASS   EQU   *
         TM    AVTOPECA,X'40'      HAS OPERATOR CONTROL ABENDED
         BO    RESTORE             YES BRANCH
         STM   R0,R15,SAVE         SAVE REGS
         IC    R1,TRACECNT              GET TRACE COUNTER
         LA    R1,1(,R1)                UPDATE COUNT
         STC   R1,TRACECNT              STORE COUNTER BACK
         L     R3,4(R5)            LOAD 1ST ENTRY
         TM    PARMFLAG,X'40'      HAS COMWRITE WRITTEN TABLE
         BC    8,RAP1              NO BRANCH TO USE TABLE AGAIN
         STC   R1,12(,R3)               PLACE COUNT IN TRACE BUFFER
         TS    AVTCWTS1            PARM POINTER AVAILABLE
         BC    4,CKTS2             NO BRANCH
         LA    R1,PARMAREA         LOAD ADDRESS OF COMWRITE PARMS
         ST    R1,AVTCWPM1         STORE ADDRESS IN AVT PARM POINTER
         LA    R1,AVTCWEC1         GET COMWRITE ECB ADDRESS
         B     STAQC               GO SET UP TO WRITE
CKTS2    TS    AVTCWTS2            PARM POINTER AVAILABLE
         BC    4,RAP1              NO BRANCH
         LA    R1,PARMAREA         LOAD ADDRESS OF COMWRITE PARMS
         ST    R1,AVTCWPM2         STORE ADDRESS IN AVT PARM POINTER
         LA    R1,AVTCWEC2         GET COMWRITE ECB ADDRESS
STAQC    ST    R1,AQPARM           STORE IN AQCTL  PARM
         MVI   AQPARM,X'20'        SET NORMAL FLAGS
         MVC   PARMAREA(4),4(R5)        MOVE IN START OF AREA TO OUTPUT
         MVI   PARMFLAG,X'00'      CLEAR FLAG
         LA    R1,AQPARM
         AQCTL                     ISSUE POST FOR COMWRITE
         CLC   4(8,R5),FIRONE      COMPARE TO SEE WHICH TABLE
*                                  IS BEING USED NOW
         BE    SECOND              USE SECOND TABLE
         MVC   0(12,R5),CURONE     MOVE POINTERS TO
*                                  USE FIRST TABLE
         B     RETURN2
SECOND   MVC   0(12,R5),CURTWO     SET UP TO USE TABLE 2
         B     RETURN2
RAP1     L     R3,4(R5)            LOAD 1ST ENTRY
         LA    R3,16(R3)           UPDATE FOR SPACE IN FRONT OF TABLE
         ST    R3,0(R5)                 STORE 1ST TRACE ADDRESS
*                                       TO BE USED IN TABLE
RETURN2  LM    R0,R15,SAVE
         BR    R14                      RETURN TO DISPATCHER
RESTORE  MVC   0(12,R5),OLDPTR     RESTORE TRACE POINTERS
         BR    R14                 RETURN
SAVE     DS    18F
SAVER    DS    18F
OLDPTR   DC    3F'0'               TRACE POINTER SAVE AREA
LESFOUR  DC    CL29'IED110I  LESS THAN 4 ENTRIES    '
NOTRMSG  DC    CL29'IED111I  NO TRACE TABLE      '
TRACECNT DC    AL1(0)                   TRACE SEQUENCE COUNTER
CURONE   DC    F'0'                CURRENT FIRST TABLE
FIRONE   DC    F'0'                FIRST   FIRST TABLE
LASONE   DC    F'0'                LAST   FIRST TABLE
CURTWO   DC    F'0'                CURRENT SECOND TABLE
FIRTWO   DC    F'0'                FIRST   SECOND TABLE
LASTWO   DC    F'0'                LAST   SECOND TABLE
AQPARM   DC    X'20',AL3(0)        PARMLIST USED BY SVC AQCTL
         DC    X'80'
         DC    AL3(TJID)
COMWRTCB DC    F'0'
TJID     DC    X'0000'
         DS    0F
PARMAREA DC    F'0'                PARM LIST PASSED TO
PARMTS   DC    X'00'               COMWRITE
PARMFLAG DC    X'40'               COMPLETE FLAG ON
PARMLN   DC    X'0000'
PARMCT   DC    F'0'
PARMID   DC    CL4'STCB'           ID FOR STCB TRACE
FOUR     DC    X'00000004'
         TAVTD
         END
