IEDQEB   TITLE '''IEDQEB (IGC102)'' - AQCTL SVC'
IGC0010B CSECT                                                   Y02027
*A000000-999999                                                @X31X8D0
         SPACE 4
*CHANGE-ACTIVITY = AS FOLLOWS:                                  SA21903
************************MICROFICHE FLAGS ******************** SUPT CODE
*C THIS MODULE HAS BEEN COMPLETELY REWRITTEN FOR TCAM LEVEL 6    Y02027
*C167000,198500,202000,296000,300000,478000                     0Y00448
*A202300,202600,501700                                           A44022
*A383000,502000                                                  A42413
*C198500,199400,427000,431000                                    CLUP21
*A422000                                                         CLUP21
*A202300,202600,501700                                           A44022
*A198000,206000                                                  A42362
*C199400,252000,379000                                           CLUP21
*C199400                                                         A42362
*A468000                                                         CLUP21
*A237760,237800,489500-489600                                    X01004
*A058580-058900,122910-122970,188000,196200-196600,237020-237740,Y01004
*A237780,459670-459950,468100-468400,489100-489400,490070-490770 Y01004
*C185000,187000,199200,229500-229700,252000,379000,395000,       Y01004
*C397000-398000,427000,431000,445000,447000,450000               Y01004
*D186000,190000-192000,195000,199400,229800,252500-253000,289000,Y01004
*D379500,386000-387000,391000,448000-449000,452000,477000,492000,Y01004
*D501500,502500                                                  Y01004
*A459280,459520                                                  Y05330
*C006000,236180-236270                                           Y05330
*D236360                                                         Y05330
*C001000,158000,199000,213000,236810,272000,400000,457000,466000,Y01948
*C468500,473000,490000,491000,493000,495000-497000,501100-501200 Y01948
*D468600-468700                                                  Y01948
*A459840,501400                                                 OY01838
*A459170,459625-459635                                          OX03022
*C459300,459526                                                 OX03022
*C237540,A237546-237552                                          Y05331
*C004000-513000                                                  Y02027
*A237140                                                        OX02211
*A002000                                                       @Z30X8DM
*C003000,006000                                                @Z30X8DM
*D351800                                                       @Z30X8DM
*A294800,297800                                                @ZA02099
*C297400                                                       @ZA02615
*D297800                                INSTRUCTION IN TWICE   @ZA02099
*C446800                                                       @ZA02086
*C239200-240000,367800-368600,369400-369600                    @ZA03744
*A363200,366000                                                @ZA04032
*C201200,202800                                                @ZA05014
*D202060                                                       @ZA05014
*A202400                                                       @ZA05014
*A202430,203000,443700                                         @ZA05000
*A010100,031800,099000,161600,166000,170000                    @Z40X9DG
*A185600,186000,194200,464200                                  @Z40X9DG
*C006000,438400,439600,439800-441800,443300,443400-444800      @Z40X9DG
*C445000-446000,446200-446600,446800-451200,451400,451800      @Z40X9DG
*C454000,459200,461150                                         @Z40X9DG
*C199000-200600                                                @Z40X9DG
*C200800-203000,439800-441800,446200-446600                    @Z40X9DG
*C363320                                                       @OY11959
*C226400-226600,355600-355800,385600-385800                    @OZ07830
*D232400                                                       @OZ09927
*C312180-312228                                                @OZ08344
*A455600                                                       @OZ08344
*C252800                                                       @OZ08368
*A252600                                                       @OZ08368
*C360200                                                       @OZ16523
*A206800,207400,208900,209800,451850                           @OZ17630
*D332650-332750                                                @OY14092
*A274200                                                       @OZ17641
* A010300,100000,158000,169000,194320,198600,222600,           @G36XRDV
* A439690,464200                                               @G36XRDV
* C006000,100000,461150                                        @G36XRDV
*D191000-191200                                                @OZ26648
*A191800                                                       @OZ26648
*C461150                                                       @OZ26648
* DUMMY APAR                                                   @OZ27328
*C241600,373400                                                @OZ27843
*A325600                                                       @OZ18744
*
         EJECT                                                 @Z40X9DG
***********************************************************************
*                                                                     *
*TITLE: 'IEDQEB'  TCAM COMMUNICATION SVC                              *
*STATUS = CHANGE LEVEL 10                                      @G36XRDV
*MODULE-NAME = IEDQEB                                           SA21903
*DESCRIPTIVE NAME = TCAM COMMUNICATION SVC                      SA21903
*COPYRIGHTS = 'NONE'                                            SA21903
*FUNCTION: THIS ROUTINE SUPPORTS TCAM APPLICATION PROGRAMS AND        *
*   ATTACHED TASKS BY HANDLING THE COMMUNICATIONS IN KEY ZERO         *
*   BETWEEN THE APPLICATION PROGRAM MEMORY AND THE MCP MEMORY         *
*   USING CONTROL BLOCKS IN KEY 6 IN CSA.                             *
*                                                              @Z40X9DG
*   THIS ROUTINE PROCESSES REQUESTS BY TCAM'S DISK IO ROUTINE  @Z40X9DG
*   AND THE NCP INPUT/OUTPUT DRIVER                            @G36XRDV
*   TO ISSUE A STARTIO MACRO. IT ALSO PROCESSES REQUESTS TO    @Z40X9DG
*   SCHEDULE SRB'S TO DO 'CROSS MEMORY' POSTS. A SUBROUTINE    @Z40X9DG
*   OF THIS MODULE WILL RUN UNDER THE SRB.                     @Z40X9DG
*                                                                     *
*   UPON ENTRY, A TESTAUTH IS DONE FOR APF AUTHORIZATION. IF NOT      *
*   FOUND, THE TCX IS CHECKED FOR NO AUTHORIZATION NEEDED.  IF        *
*   THIS IS THE CASE, THE CHAIN OF PEB'S (ONE FOR EACH OPEN A.P.)     *
*   IS SEARCHED FOR A TCB-ASCB MATCH. IF NO MATCH IS FOUND, THE       *
*   TASK IS ABENDED.                                                  *
*                                                                     *
         EJECT
*   THE FOLLOWING ARE PERFORMED ACCORDING TO CODE:                    *
*                                                                     *
*   CODE  FUNCTION                                                    *
*   (4) - OPERATOR CONTROL AN NETWORK CONTROL                         *
*   (8) - MOVE IN MEMORY                                              *
*   (C) - POST ELEMENT TO ASYNCHRONOUS READY QUEUE AND POST           *
*         MCP ECB COMPLETE                                            *
*   (10)- GET/READ PREPARES AN AIB WITH INFORMATION FOR THE MCP       *
*         ROUTINE, POSTS THE AIB TO ACTIVATE IEDQEW, WAITS FOR        *
*         COMPLETION, MOVES MESSAGE TO WORKAREA, AND SETS RETURN CODE *
*   (14)- PUT/WRITE MOVES THE MESSAGE AND OTHER INFORMATION FOR THE   *
*         MCP ROUTINE TO THE AIB, POSTS THE AIB TO ACTIVATE IEDQEC,   *
*         WAITS FOR COMPLETION, AND SETS RETURN CODE.                 *
*   (18)- POINT CHECKS FOR RETRIEVE TERMINATION, SETS UP MULTIPLE     *
*         RETRIEVAL, MOVES USER DATA AND OTHER INFORMATION TO AIB,    *
*         POSTS AIB TO ACTIVATE IEDQES TO DO CHECKING, WAITS ON       *
*         COMPLETION, AND SETS RETURN CODE.                           *
*   (1C)- CHECK REQUESTS SETS UP THE AIB AS A CRE FOR THE MCP CHECK   *
*         POINT ROUTINE. THE RCB IS POSTED TO THE QCB IN THE AVT,     *
*   (20)- POST ECB IN MEMORY                                          *
*   (24)- QUEUE RESET INITIALIZES AIB WITH INFORMATION NEEDED BY THE  *
*         MCP ROUTINE, POSTS THE AIB TO ACTIVATE IEDQGQ, WAITS FOR    *
*         COMPLETION,AND SETS RETURN CODE.                            *
*   (28)- ISSUE STARTIO MACRO FOR MESSAGE QUEUES DISK I/O      @Z40X9DG
*   (2C)- SCHEDULE AN SRB TO DO 'CROSS MEMORY' POST            @Z40X9DG
*                                                                     *
*   THE FOLLOWING SUBROUTINES ARE USED BY THE FUNCTION CODE:          *
*                                                                     *
*   AIBSUBR - THIS SUBROUTINE GETS A FREE AIB FROM THE CHAIN, MARKS   *
*         IT BUSY, AND PASSES THE ADDRESS IN REGISTER 1.              *
*                                                                     *
*   TPOSTSUB - THIS SUBROUTINE PUTS AN ELEMENT ON THE ASYNCHRONOUS    *
*         READY QUEUE THROUGH COMPARE AND SWAP. IT POSTS THE          *
*         MCP-ECB COMPLETE.                                           *
*ENTRY POINT:                                                         *
*       IGC0010B                                                      *
*INPUT:                                                               *
*   REGISTER 1 POINTS TO A PARAMETER LIST WHICH HAS A FUNCTION CODE   *
*         IN THE FIRST BYTE AND THE HIGH ORDER BIT ON IN THE LAST     *
*         WORD.                                                       *
*                                                                     *
*         FUNCTION                      PARAMETER LIST                *
*                                                                     *
*                                       ************************      *
*         OPCTL & NETWORK CONTROL       *X'84'* PARAM ADDRESS  *      *
*                                       ************************      *
*                                                                     *
         EJECT
*                                       ************************      *
*         MOVE IN MEMORY                **'08'* DATA ADDRESS          *
*                                       ************************      *
*                                       **'00'* TARGET ADDRESS *      *
*                                       ************************      *
*                                       **'80'* LENGTH ADDRESS *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         TPOST TO READY QUEUE          *X'0C'* RCB ADDRESS    *      *
*                                       ************************      *
*                                       *X'00'* RCB ADDRESS    *      *
*                                       ************************      *
*                                       *X'80'* LENGTH ADDRESS *      *
*                                       ************************      *
*                                                   OR                *
*                                       ************************      *
*                                       *X'8C'* RCB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         GET/READ                      *X'90'* ECB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         PUT/WRITE                     *X'94'* ECB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         POINT                         *X'98'* ECB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         CKREQ                         *X'9C'* ECB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         POST ECB                      *X'A0'* ECB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         QRESET                        *X'A4'* ECB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         STARTIO                       *X'28'* IOSB ADDRESS   *      *
*                                       ************************      *
*                                       *X'80'* CPB ADDRESS    *      *
*                                       ************************      *
*                                                                     *
*                                       ************************      *
*         SCHSRB                        *X'2C'* ECB ADDRESS    *      *
*                                       ************************      *
*                                       *      ASCB ADDRESS    *      *
*                                       ************************      *
*                                       * CC  *     *  ASID    *      *
*                                       ************************      *
*                                       *       TCB ADDRESS    *      *
*                                       ************************      *
*         NCP STARTIO                   ************************      *
*                                       *X'B0'* IOSB ADDRESS   *      *
*                                       ************************      *
*                                       * CHANNEL PROG ADDRESS *      *
*                                       ************************      *
*                                                                     *
*         LIST POST                     ************************      *
*                                       *X'B4'* FIRST ELEMENT @*      *
*                                       ************************
*                                       * SECOND ELEMENT @     *      *
*                                       ************************      *
*                                                                     *
*                                                                     *
*                                                                     *
*   3 -  CVT ADDRESS                                                  *
*   4 -  TCB ADDRESS                                                  *
*   5 -  SVRB ADDRESS                                                 *
*   7 -  ASCB ADDRESS                                                 *
*   14-  RETURN ADDRESS                                               *
*   15-  ENTRY POINT                                                  *
*OUTPUT:                                                              *
*   15-  COMPLETION CODE                                              *
*EXTERNAL ROUTINES:                                                   *
*         POST (BRANCH ENTRY)                                         *
*         TESTAUTH (BRANCH ENTRY)                                     *
*         GETMAIN (BRANCH ENTRY)                                      *
*         SETLOCK                                                     *
*EXIT-NORMAL: RETURN TO SVC INTERRUPT HANDLER(R15=0)                  *
*EXIT ERROR:  RETURN TO SVC INTERRUPT HANDLER- R15=X'80'  IF TCAM IS  *
*             NOT ACTIVE OR R15=X'90' FOR INVALID FUNCTION CODE.      *
*TABLES/WORKAREAS:                                                    *
*   CVT    AIB    PSA    ASXB                                         *
*   AVT    PECB   PEB    DCB                                          *
*   TCB    TCX    PEWA                                                *
*   DEB    ASCB                                                       *
*ATTRIBUTES: REENTRANT, REFRESHABLE, SUPERVISOR MODE                  *
*NOTES: THIS ROUTINE RESIDES IN LPA LIB FOR USE ONLY BY TCAM.         *
*       SVC 102 IS A TYPE 3 SVC AND IS ENTERED WITH THE LOCAL LOCK.   *
*   THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL             *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT  *
*   TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED   *
*   SO THAT REDEFINITION OF 'CHARACTER' CONSTANTS, BY REASSEMBLY,     *
*   WILL RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.          *
***********************************************************************
         EJECT
         SPACE 2
         ENTRY IEDQEB                                            Y02027
         SPACE 2
*                                                                     *
*            S Y M B O L I C   R E G I S T E R S                      *
*                                                                     *
         SPACE 2
RZERO    EQU   0                        WORK REGISTER            Y01948
RFIRST   EQU   1                        FIRST ELMT IN LIST POST@G36XRDV
RPARM    EQU   1                        PARAMETER LIST REGISTER
*                                       ECB TO BE WAITED ON      Y02027
*                                       RCB TO BE TPOSTED        Y02027
*                                       BASE FOR AIB             Y02027
*                                                                Y02027
RPEB     EQU   2                        ADDRESS OF PEB           Y02027
RIOSB    EQU   2                        POINTER TO IOSB        @Z40X9DG
RCVT     EQU   3                        COMM. VECTOR TABLE
RTCB     EQU   4                        TASK CONTROL BLOCK
RSVRB    EQU   5                        SVRB ADDRESS             Y02027
RTCX     EQU   6                        TCX ADDRESS              Y02027
RASCB    EQU   7                        ADDRESS OF ASCB          Y02027
RIOSBE   EQU   7                        POINTER TO IOSBE       @Z40X9DG
RDEB     EQU   8                        ADDRESS OF DEB           Y02027
RBASE    EQU   9                        CSECT BASE REGISTER      Y02027
RCOMPC   EQU   10                       COMPLETION CODE
RLAST    EQU   10                       LAST ELMT IN LIST POST @G36XRDV
RCECB    EQU   11                       COMPLEMENT OF ECB ADDRESS
RCPB     EQU   11                       POINTER TO CPB         @Z40X9DG
RWORK    EQU   12                       WORK REGISTER            Y02027
RTEMP    EQU   13                       WORK REGISTER            Y02027
RETURN   EQU   14                       RETURN ADDRESS
RENTRY   EQU   15                       ENTRY POINT ADDRESS
         EJECT                                                 @Z40X9DG
IEDQEB   DS    0F                                                Y02027
         BALR  RBASE,RZERO              ESTABLISH
*                                                                Y02027
*              ADDRESSABILITY                                    Y02027
*                                                                Y02027
         USING *,RBASE                            ADDRESSABILITY
         USING IEDQTCX,RTCX             TCAM CVT EXTENSION       Y02027
*                                       ADDRESSABILITY
         USING IEDQTCB,RTCB             TASK CONTROL BLOCK
*                                       ADDRESSABILITY
         USING IEDQPEB,RPEB             ADDRESS OF PEB           Y02027
         B     IEDPASS                  BRANCH AROUND CONSTANTS@Z40X9DG
         DC    AL2(PURGE-IGC0010B)      OFFSET TO PURGE CODE - @Z40X9DG
*                                       THIS HALFWORD MUST BE  @Z40X9DG
*                                       AT OFFSET 6; VALUE IS  @Z40X9DG
*                                       USED BY IGG01931       @Z40X9DG
IEDQEB   IEDHJN ,                                              @Z40X9DG
IEDPASS  EQU   *                                               @Z40X9DG
         ST    RETURN,REG15(RSVRB)      SAVE REGISTER FOR RETURN Y02027
*                                                                Y02027
*              CHECK FOR AUTHORIZATION                           Y02027
*                                                                Y02027
         ICM   RTCX,ALL,CVTAQAVT-CVTMAP(RCVT)  GET TCX ADDRESS   Y02027
         BZ    NOTACT                   BR IF MCP NOT ACTIVE     Y02027
         TM    TCXFLAG1-IEDQTCX(RTCX),TCXMCPCD TEST TCX FLAGS    Y02027
         BNO   AOK                      BR MCP NOT CLOSING DOWN  Y02027
NOTACT   EQU   *                                                 Y02027
         LA    RENTRY,EIGHTY            MCP NOT ACTIVE           Y02027
         B     EXIT                     RETURN TO CALLER         Y02027
*                                       RETURN  RC=X'80'         Y02027
AOK      EQU   *                                                 Y02027
         LR    RCOMPC,RPARM             SAVE PARM THRU TESTAUTH  Y02027
*                                       AND SETLOCK              Y02027
         SPACE 1                                               @Z40X9DG
         CLM   RTCB,ADD,TCXTCB+ONE      IS TCB ADDR SAME AS    @Z40X9DG
*                                       TCAM'S                 @Z40X9DG
         BNE   TESTAUTH                 NO, BRANCH             @Z40X9DG
         CLM   RASCB,ADD,TCXASCB+ONE    IS ASCB ADDR SAME AS   @Z40X9DG
*                                       TCAM'S                 @Z40X9DG
         BE    AUTH                     YES, BRANCH - TCAM     @Z40X9DG
*                                       ISSUED SVC 102 AND     @Z40X9DG
*                                       AUTH CHECK NOT NEEDED  @Z40X9DG
         SPACE 1                                               @Z40X9DG
*                        CHECK FOR AUTHORITY OF APF              Y02027
*                                                                Y02027
TESTAUTH EQU   *                                               @Z40X9DG
         TESTAUTH   FCTN=1,BRANCH=YES                            Y02027
         LTR   RENTRY,RENTRY            PROGRAM AUTHORIZED       Y02027
         BZ    AUTH                     BRANCH IF YES            Y02027
         TM    TCXFLAG1,TCXAUTH         DO A.P. NEED AUTHORIZA-  Y02027
         BO    ABEND                    TION? BRANCH IF YES      Y02027
*        IF NO AUTHORIZATION NEEDED, CHECK TO SEE IF ISSUE       Y02027
*        BY TCAM A.P. BY SEARCHING PEB CHAIN                     Y02027
PEBO     SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=(PEB,       Y02027X
               IEDQEB,PEBR)             LOCK TO SEARCH CHAIN     Y02027
         LA    RPEB,TCXPEBC             ADDR OF PEB POINTER      Y02027
PLOOP    ICM   RPEB,ALL,PEBLINK-IEDQPEB(RPEB) ADDRESS OF PEB     Y02027
         BZ    ABEND                    NO MATCH FOUND IN CHAIN  Y02027
         CL    RASCB,PEBASCB            ASCB OF SVC = A.P. ASCB  Y02027
         BNE   PLOOP                    BRANCH NO TO NEXT PEB    Y02027
*        IF MATCH WAS FOUND, SVC WAS ISSUED BY TCAM A.P.         Y02027
PEBR     SETLOCK RELEASE,TYPE=CMS,RELATED=(PEB,IEDQEB,PEBO)      Y02027
*                                                                Y02027
         EJECT
AUTH     EQU   *                        VALID SVC ISSUER         Y02027
*                                                                Y02027
*              BRANCH TO FUNCTION BASED ON CODE IN FIRST         Y02027
*              BYTE OF PARAMETER LIST POINTED BY REG1            Y02027
*                                                                Y02027
         LA    RPARM,0(RCOMPC)          RELOAD SAVED PARAM REG   Y02027
         IC    RCOMPC,ZERO(RPARM)       GET FUNCTION CODE FROM   Y02027
         LA    RZERO,X7F                PARAM LIST. REMOVE EOL   Y02027
         NR    RCOMPC,RZERO             INDICATOR                Y02027
         CLM   RCOMPC,ONE,MAXCODE       TEST FOR VALID CODE    @OZ26648
         BH    RETURN90                 BR IF INVALID          @OZ26648
         B     CODETAB(RCOMPC)          BRANCH TO FUNCTION       Y02027
*                                       BASED ON TABLE           Y02027
CODETAB  B     RETURN90                 ERROR                    Y02027
         B     NETWKCTL                 NETWORK CONTROL X'04'    Y02027
         B     MOVE                     MOVE IN MEMORY X'08'     Y02027
         B     TPOST                    POST RCB TO R.Q. X'0C'   Y02027
         B     GETREAD                  GET/READ        X'10'    Y02027
         B     PUTWRITE                 PUT/WRITE       X'14'    Y02027
         B     POINT                    RETRIEVE        X'18'    Y02027
         B     CKREQ                    CHECKPOINT      X'1C'    Y02027
         B     POSTECB                  OS POST ECB     X'20'    Y02027
         B     QRESET                   QRESET          X'24'    Y02027
         B     STARTIO                  ISSUE STARTIO   X'28'  @Z40X9DG
         B     SCHSRB                   SCHEDULE SRB    X'2C'  @Z40X9DG
         B     NCPIO                    NCP STARTIO     X'30'  @G36XRDV
         B     LISTPOST                 LIST POST TO R QX'34'  @G36XRDV
         EJECT
***************************************************************  Y02027
*****    THIS ROUTINE PUTS AN ELEMENT ON THE ASYNCHRONOUS *****  Y02027
*****    READY QUEUE,AND THEN POSTS THE MCP-ECB COMPLETE. *****  Y02027
*****    REGISTER CONTENTS ON ENTRY MUST BE :             *****  Y02027
*****     RPARM = ADDRESS OF NEW ELEMENT(RECB).           *****  Y02027
*****     RTCB  = ADDRESS OF TCB.                         *****@Z40X9DG
*****     RSVRB = ADDRESS OF SVRB.                        *****@Z40X9DG
*****     RASCB = ASCB ADDRESS.                           *****  Y02027
*****     RTCX = TCX ADDRESS.                             *****  Y02027
*****     RETURN= RETURN ADDRESS.                         *****  Y02027
*****     REGISTER 15 IS ALTERED                          *****  Y02027
***************************************************************  Y02027
TPOSTSUB EQU   *                                                 Y02027
         L     RENTRY,TCXREADY          1ST ELEMENT ADDR         Y02027
POSTLOOP STCM  RENTRY,SEVEN,RECBLINK-IEDQRECB(RPARM) POINT NEW RCB02027
*                                       TO FIRST ELEMENT         Y02027
         CS    RENTRY,RPARM,TCXREADY    CURRENT ELEMENT UPDATED  Y02027
         BNE   POSTLOOP                 BRANCH IF YES            Y02027
*                                       YES, LINK NEW ELEMENT TO Y02027
*                                       NEW 1ST ELEMENT.         Y02027
*                                       NO, ASYCN READY QUEUE    Y02027
*                                       UPDATED WITH NEW ELEMENT Y02027
*                                       BY COMPARE & SWAP INST.  Y02027
         SPACE 2                                               @G36XRDV
***************************************************************@G36XRDV
*        THE 'POST' ENTRY OF THE TPOSTSUB ROUTINE IS USED BY   @G36XRDV
*        THE LIST POST ROUTINE TO POST THE MCP ECB COMPLETE.   @G36XRDV
*        IT IS CALLED AFTER THE LIST OF ELEMENTS IS POSTED     @G36XRDV
*        TO THE ASYCHRONOUS READY QUEUE.                       @G36XRDV
*        THE INPUT IS THE SAME AS THE TPOSTSUB ENTRY.          @G36XRDV
***************************************************************@G36XRDV
         SPACE 1                                               @G36XRDV
POST     DS    0H                                              @G36XRDV
         CLM   RASCB,ADD,TCXASCB+ONE    IS REQUESTOR A SUBTASK @Z40X9DG
*                                       OF TCAM                @Z40X9DG
         BNE   XMPOST                   NO, BRANCH             @Z40X9DG
         STM   RCOMPC,RETURN,EXTSA(RSVRB) SAVE REGS 10-14      @Z40X9DG
         L     RCECB,TCXAVT             GET AVT ADDRESS        @Z40X9DG
         LA    RCECB,AVTOSECB-IEDQAVTD(,RCECB) GET ADDRESS OF  @Z40X9DG
*                                       TCAM'S ECB             @Z40X9DG
         L     RENTRY,ZERO(,RCECB)      GET CONTENTS OF ECB    @Z40X9DG
         L     RTEMP,POSTBIT            POST BIT FOR CS        @Z40X9DG
         TM    ZERO(RCECB),WAITBIT      ECB WAITING            @Z40X9DG
         BO    POST1                    YES, BRANCH            @Z40X9DG
         CS    RENTRY,RTEMP,ZERO(RCECB) DO COMPARE AND SWAP TO @Z40X9DG
*                                       SET ECB AS POSTED      @Z40X9DG
         BZ    NOPOST                   BRANCH IF CS SUCCESSFUL@Z40X9DG
POST1    EQU   *                                               @Z40X9DG
         SLR   RCOMPC,RCOMPC            SET COMPLETION CODE    @Z40X9DG
         L     RENTRY,CVTPTR            GET CVT ADDRESS        @Z40X9DG
         L     RENTRY,CVT0PT01-CVT(,RENTRY) GET POST ENTRY ADDR@Z40X9DG
         BALR  RETURN,RENTRY            BRANCH TO POST WITH:   @Z40X9DG
*                                        R10=COMPLETION CODE   @Z40X9DG
*                                        R11=ECB ADDRESS       @Z40X9DG
*                                        R14=RETURN ADDRESS    @Z40X9DG
*                                        R15=ENTRY POINT ADDR  @Z40X9DG
*                                       REGS 0-9 ARE PRESERVED @Z40X9DG
NOPOST   EQU   *                                               @Z40X9DG
         LM    RCOMPC,RETURN,EXTSA(RSVRB) RESTORE REGS         @Z40X9DG
         BR    RETURN                   RETURN TO CALLER       @Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        SCHEDULE AN SRB TO RUN IN TCAM'S MEMORY TO POST     * @Z40X9DG
*        THE TCAM ECB                                        * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
XMPOST   EQU   *                                               @Z40X9DG
         ST    RETURN,EXTSA(,RSVRB)     SAVE REG 14 IN SVRB    @Z40X9DG
*                                       EXTENDED SAVE AREA     @Z40X9DG
         STM   RZERO,RCOMPC,EXTSA+FOUR(RSVRB) SAVE REGS 0-10   @Z40X9DG
LOCSRB   EQU   *                                               @Z40X9DG
         USING PSRBSECT,RPARM           PREFIX ADDRESSABILITY  @Z40X9DG
         LA    RPARM,TCXSRBS            POINT TO TCX AS DUMMY  @Z40X9DG
*                                       FIRST SRB PREFIX       @Z40X9DG
LOOPSRB  EQU   *                                               @Z40X9DG
         ICM   RPARM,ADD,PSRBLINK       GET SRB PREFIX PTR     @Z40X9DG
         BZ    CALLGET                  BRANCH IF NO MORE SRB'S@Z40X9DG
         TS    PSRBTSFL                 IS SRB AVAILABLE       @Z40X9DG
         BNZ   LOOPSRB                  NO, BRANCH             @Z40X9DG
         LA    RPARM,PSRBSRB            POINT TO SRB START     @Z40X9DG
         USING SRBSECT,RPARM            SRB ADDRESSABILITY     @Z40X9DG
         MVC   SRBASCB,TCXASCB          SET ASCB ADDRESS       @Z40X9DG
         MVC   SRBPASID,TCXASID         SET ASID               @Z40X9DG
         MVC   SRBPTCB,TCXTCB           SET TCB ADDRESS        @Z40X9DG
         L     RENTRY,TCXAVT            GET AVT ADDRESS        @Z40X9DG
         LA    RENTRY,AVTOSECB-IEDQAVTD(,RENTRY) GET TCAM ECB  @Z40X9DG
*                                       ADDRESS AND SET        @Z40X9DG
*                                       COMPLETION CODE (CC)   @Z40X9DG
*                                       OF 0 IN HIGH BYTE      @Z40X9DG
         ST    RENTRY,SRBPARM           SET ECB ADDR AND CC    @Z40X9DG
         SCHEDULE SRB=(1),SCOPE=LOCAL   SCHEDULE TO POST TCAM  @Z40X9DG
         L     RETURN,EXTSA(,RSVRB)     RESTORE RETURN ADDR    @Z40X9DG
         LM    RZERO,RCOMPC,EXTSA+FOUR(RSVRB) RESTORE REGS     @Z40X9DG
         BR    RETURN                   RETURN TO CALLER       @Z40X9DG
CALLGET  EQU   *                                               @Z40X9DG
         BAL   RDEB,SRBGETM             GO REQUEST THAT MORE   @Z40X9DG
*                                       SRB'S BE OBTAINED      @Z40X9DG
         B     LOCSRB                   TRY AGAIN FOR SRB      @Z40X9DG
         DROP  RPARM                                           @Z40X9DG
         EJECT
***************************************************************  Y02027
*****    THIS ROUTINE EITHER LOCATES OR GETS CORE FOR A   *****  Y02027
*****   FREE AIB, MARKS IT BUSY, AND RETURNS ITS ADDRESS  *****  Y02027
*****   IN REGISTER 1.                                    *****  Y02027
*****   REGISTERS ON ENTRY MUST BE AS FOLLOWS:            *****  Y02027
*****      RASCB= ASCB ADDRESS.                           *****  Y02027
*****      RTCX = TCX  ADDRESS.                           *****  Y02027
*****      RETURN=RETURN ADDRESS.                         *****  Y02027
*****    REGS 0,1,13, AND 15 ARE ALTERED                         Y02027
***************************************************************  Y02027
         USING IEDQAIB,RPARM            SET UP AIB BASE REG.     Y02027
AIBSUBR  EQU   *                                                 Y02027
*                                                                Y02027
         LA    RPARM,TCXAIBC-(AIBCHAIN-IEDQAIB-1)  TCX AIB PTR   Y02027
AIBGET   ICM   RPARM,SEVEN,AIBCHAIN     ANY AIB'S AVAIL          Y02027
         BNZ   GOTAIBS                  BR IF YES                Y02027
         LH    RZERO,TCXSZAIB           GET SIZE OF AIB        @OZ17630
         CH    RZERO,FOURK              SIZE GREATER THAN 4K   @OZ17630
         BH    GETCORE                  YES, BRANCH            @OZ17630
         LA    RZERO,HPAGE              2K VALUE                 Y02027
         AR    RZERO,RZERO              DOUBLE FOR 4K PAGE SIZE  Y02027
GETCORE  EQU   *                                               @OZ17630
         LR    RTEMP,RETURN             SAVE RETURN REG          Y02027
*                    GETMAIN FOR AIB'S                           Y02027
         GETMAIN RU,LV=(0),SP=CSA,KEY=KEY6,BNDRY=PAGE,BRANCH=YES Y02027
         L     RCVT,CVTPTR              LOAD CVT PTR             Y02027
         LH    RETURN,TCXSZAIB          GET SIZE OF AIB          Y02027
         CH    RETURN,FOURK             SIZE GREATER THAN 4K   @OZ17630
         BNH   SMALLAIB                 NO, BRANCH             @OZ17630
         LR    RENTRY,RPARM             GET ADDR OF ONLY AIB   @OZ17630
         B     CLRBYTE                  BRANCH TO CLEAR BYTE   @OZ17630
SMALLAIB EQU   *                                               @OZ17630
         LA    RENTRY,HPAGE             2K VALUE                 Y02027
         LA    RENTRY,HPAGE(RENTRY,RPARM) GET ADDR OF END OF AIBSY02027
         SR    RENTRY,RETURN            ADDR LAST POSS AIB       Y02027
CLRBYTE  EQU   *                                               @OZ17630
         LA    RZERO,0(RPARM)           CLEAR HI ORDER BYTE      Y02027
         B     BXLE                     BR TO INIT               Y02027
CHAINAIB ST    RZERO,AIBCHAIN-ONE       STORE PTR TO AIB         Y02027
*                                         AND MARK FREE          Y02027
         LR    RPARM,RZERO              SAVE CURRENT PTR         Y02027
BXLE     BXLE  RZERO,RETURN,CHAINAIB    LOOP THRU NEW CORE TILL  Y02027
*                                         ALL AIB'S ARE LINKED   Y02027
         LR    RENTRY,RPARM             LAST AIB PTR             Y02027
         N     RPARM,CLRLOW             ORIG START OF NEW CORE   Y02027
AIBLOOP  L     RZERO,TCXAIBC            GET CURRENT AIB PTR      Y02027
         ST    RZERO,AIBCHAIN-ONE-IEDQAIB(RENTRY)  LINK AIB BLKS Y02027
         CS    RZERO,RPARM,TCXAIBC      CHAIN NEW BLK OFF TCX    Y02027
         BNZ   AIBLOOP                  BR IF CS FAILED          Y02027
         LR    RETURN,RTEMP             RESTORE RETURN ADDR      Y02027
GOTAIBS  EQU   *                                                 Y02027
         TS    AIBSTATE                 ALLOCATE AND MARK AIB    Y02027
         BNZ   AIBGET              AIB IN USE, BR TO RETRY       Y02027
         BR    RETURN                   RETURN TO CALLING ROUTINEY02027
         DROP  RPARM                                             Y02027
         TITLE '''MOVE IN MEMORY FUNCTION'''
*                                                                Y02027
*                        MOVE IN MEMORY FUNCTION                 Y02027
*                                                                Y02027
*                                                                     *
*              RPARM POINTS TO A THREE WORD PARAMETER LIST:           *
*                  1. ADDRESS OF DATA TO BE MOVED.                    *
*                  2. ADDRESS OF TARGET FIELD OF THE MOVE.            *
*                  3. ADDR OF FIELD CONTAINING LENGTH OF DATA FIELD.  *
*                                                                     *
MOVE     EQU   *                                                 Y02027
         L     RCECB,EIGHT(RPARM)       ADDRESS OF BYTE COUNT    Y02027
         LH    RCECB,ZERO(RCECB)        GET BYTE COUNT           Y02027
         LR    RTEMP,RCECB              PUT COUNT IN ODD REGISTERY02027
         L     RCOMPC,FOUR(RPARM)       ADDRESS OF TARGET OF MOVEY02027
         L     RWORK,ZERO(RPARM)        ADDRESS OF FIELD TO MOVE Y02027
         MVCL  RCOMPC,RWORK             MOVE DATA IN MEMORY      Y02027
         B     EXIT                     RETURN                   Y02027
         TITLE '''POST TO ASYNC READY QUEUE'''
*                                                                Y02027
*                        POST RCB TO ASYCHRONOUS READY QUEUE     Y02027
*                        AND POST MCP-ECB COMPLETE               Y02027
*                                                                Y02027
*              RPARM POINTS TO EITHER A ONE OR TWO WORD PARM LISTY02027
*                  THE FIRST WORD CONTAINS THE ADDR OF THE RCB   Y02027
*                                                                Y02027
TPOST    EQU   *                                                 Y02027
         ICM   RPARM,SEVEN,ONE(RPARM)   GET ADDRESS OF RCB       Y02027
         BAL   RETURN,TPOSTSUB          BRANCH TO SUBROUTINE     Y02027
         B     EXIT                     RETURN TO CALLER         Y02027
         TITLE 'LIST POST ROUTINE'                             @G36XRDV
***************************************************************@G36XRDV
*                                                              @G36XRDV
*        LIST POST ROUTINE                                     @G36XRDV
*                                                              @G36XRDV
*        THIS ROUTINE POSTS A LIST OF ELEMENTS (RCB'S) TO      @G36XRDV
*        THE ASYCHRONOUS READY QUEUE AND POSTS THE MCP         @G36XRDV
*        COMPLETE.                                             @G36XRDV
*                                                              @G36XRDV
***************************************************************@G36XRDV
         SPACE 2                                               @G36XRDV
LISTPOST DS    0H                                              @G36XRDV
         SLR   RLAST,RLAST                                     @G36XRDV
         ICM   RLAST,SEVEN,FIVE(RPARM) ADDR OF LAST ELMT       @G36XRDV
         ICM   RFIRST,SEVEN,ONE(RPARM) ADDR OF FIRST ELMT      @G36XRDV
         L     RENTRY,TCXREADY    ASYCH READY Q ANCHOR         @G36XRDV
LISTLOOP DS    0H                                              @G36XRDV
         STCM  RENTRY,SEVEN,RECBLINK-IEDQRECB(RLAST) SET LAST  @G36XRDV
*                                 ELMT IN LIST TO POINT TO     @G36XRDV
*                                 FIRST ELMT ON QUEUE          @G36XRDV
         CS    RENTRY,RFIRST,TCXREADY SET ANCHOR TO POINT TO   @G36XRDV
*                                 FIRST ELMT IN LIST           @G36XRDV
         BNE   LISTLOOP           TRY AGAIN IF QUEUE UPDATED   @G36XRDV
*                                 BY ANOTHER TASK              @G36XRDV
         BAL   RETURN,POST        GO POST MCP TASK             @G36XRDV
         B     EXIT               RETURN TO CALLER             @G36XRDV
         TITLE '''GET/READ FUNCTION'''
*                                                                Y02027
*                        GET-READ FUNCTION                       Y02027
*                                                                Y02027
*              REGISTER EQUATES FOR GETREAD FUNCTION             Y02027
*                                                                Y02027
RDCB     EQU   10                       ADDRESS OF DCB           Y02027
RPEWA    EQU   11                       ADDRESS OF PEWA          Y02027
RPECB    EQU   12                       ADDRESS OF PECB          Y02027
*                                                                Y02027
*              ADDRESSABILITY                                    Y02027
*                                                                Y02027
         USING IEDQPECB,RPECB           ADDRESSABILITY OF PECB   Y02027
         USING IHADCB,RDCB              DCB ADDRESSABILITY       Y02027
         USING IEDQDEB,RDEB             DEB ADDRESSIBILITY       Y02027
         USING IEDQPEWA,RPEWA           ADDRESSABILITY OF PEWA   Y02027
GETREAD  EQU   *                        ENTERED VIA BRANCHING ON Y02027
*                                       INDEX GOTTEN FROM CODE   Y02027
         L     RPECB,ZERO(RPARM)        GET ECB ADDR           @OZ07830
         XC    PECBECB(FOUR),PECBECB    CLEAR ECB                Y02027
         L     RDCB,REG11(RSVRB)        GET REG 11 FROM SVRB     Y02027
*                                       DCB FROM IGG019RG        Y02027
         L     RDEB,DCBDEBAD            GET DEB ADDR             Y02027
         L     RPEWA,DEBPEWA-ONE        GET PEWA ADDRESS         Y02027
         CLI   PEWARTVE+TWO,BLANK       RETRIEVE TERMINATION     Y02027
         BE    GETAIB                   BRANCH IF YES,AVOID TESTSY02027
*                                                                Y02027
*              CHECK FOR EODAD EXIT                              Y02027
*                                                                Y02027
         TM    PEWAOPTC,EODADFLG        TIME TO TAKE EODAD EXIT  Y02027
         BZ    GETAIB                   BRANCH IF NO             Y02027
         TM    PEWAGSW+1,EOM            EOM PROCESSED LAST TIME  Y02027
         BNO   GETAIB                   BRANCH NO TO DELAY EODAD Y02027
         TM    PEWAOPTC,PARTBUF         EOM BUFFER PROCESSED     Y02027
         BO    GETAIB                   BRANCH IF NO             Y02027
         NI    PEWAOPTC,XFF-EODADFLG    TURN OFF EODAD FLAG      Y02027
         LA    RENTRY,FOUR              EODAD RETURN CODE        Y02027
         B     EXIT                     RETURN TO RG             Y02027
         EJECT
GETAIB   BAL   RETURN,AIBSUBR           GET AIB                  Y02027
*                                                                Y02027
         USING IEDQAIB,RPARM            ADDRESSABILITY OF AIB    Y02027
*                                       RETURNED FROM SUBRT IN R1Y02027
         ST    RPECB,AIBECBA            STORE ECB IN PECB TO BE  Y02027
*                                       WAITED ON IN AIB         Y02027
         LA    RDEB,AIBWAG              ADDR OF WORKAREA IN AIB  Y02027
         ST    RDEB,AIBWAPTR            STORE IN AIB             Y02027
*              ENSURE USER'S WORKAREA IS NOT GREATER THAN AIB'S  Y02027
         L     RDEB,REG2(RSVRB)         GET REGISTER 2           Y02027
         STH   RDEB,PEWASOWA            STORE SIZE IN PEWA       Y02027
         LA    RDEB,AIBWAG-IEDQAIB(RDEB)  ADD SIZE OF PREFIX     Y02027
         LA    RENTRY,SOWAERR           SET RETURN CODE          Y02027
         CH    RDEB,TCXSZAIB            SIZE GREATER THAN AIB    Y02027
         BH    FREEAIB                  BRANCH IF USER SPECIFIED Y02027
*                                       SIZE IS LARGER THAN AIB  Y02027
*                                       TO  RETURN TO USER       Y02027
*                                                                Y02027
*                   INITIALIZE AIB                               Y02027
*                                                                Y02027
         ST    RPEWA,AIBGPEWA           STORE PEWA ADDRESS IN AIBY02027
         ICM   RTEMP,EIGHT,DCBRECFM     STORE DCB INFORMATION    Y02027
         ICM   RTEMP,FOUR,DCBMACRF      NEEDED BY                Y02027
         ICM   RTEMP,THREE,DCBBUFL      IEDQEW                   Y02027
         ST    RTEMP,AIBRECFG           OF THE MCP               Y02027
         ICM   RTEMP,TWELVE,DCBBLKSI    IN THE                   Y02027
         ICM   RTEMP,THREE,DCBLRECL     AIB FUNCTION             Y02027
         ST    RTEMP,AIBBLKSI           EXTENSION                Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
         TM    DCBMACRF,QSAMFLG         CHECK IF QSAM            Y02027
         BO    BYPASS                   BRANCH IF QSAM           Y02027
         L     RDEB,REG9(RSVRB)         IF BSAM, GET DECB ADDRESSY02027
         ST    RDEB,AIBDECBG            AND STORE ADDRESS AND    Y02027
         L     RDEB,DECSDECB-IECTDECB(RDEB)  DECSDECB            Y02027
         ST    RDEB,AIBDECS             IN AIB                   Y02027
         ICM   RTEMP,THREE,DECLNGTH-IECTDECB(RDEB) GET DECLNGTH  Y02027
BYPASS   ICM   RTEMP,EIGHT,DCBOPTCD     GET DCBOPTCD             Y02027
*                                       CHECK FOR CHECKPOINT     Y02027
         ICM   RDEB,SEVEN,DCBEXLST+ONE  GET EXIT LIST ADDRESS    Y02027
         BZ    OUT                      BRANCH IF NOT SPECIFIED  Y02027
CLOOP    EQU   *                        START OF LOOP            Y02027
         TM    ZERO(RDEB),CKPTFLG       CKECK FOR CHECKPOINT   @ZA03744
         BO    SETCKPT                  YES, BRANCH            @ZA03744
         TM    ZERO(RDEB),EIGHTY        END OF EXIT LIST       @ZA03744
         BO    OUT                      YES, BR TO CONT        @ZA03744
         LA    RDEB,FOUR(RDEB)          BUMP TO NEXT ENTRY     @ZA03744
         B     CLOOP                    CONT SCAN              @ZA03744
SETCKPT  EQU   *                                               @ZA03744
         ICM   RTEMP,FOUR,ZERO(RDEB)    GET ENTRY INDICATOR    @ZA03744
OUT      EQU   *                        STORE DCBOPTCD,EXIT LIST Y02027
         ST    RTEMP,AIBOPTCG           FLAG,AND DECLNGTH IN AIB Y02027
         MVC   AIBPCBAD(4),PEPCBAD      STORE PCB ADDR IN AIB    Y02027
*                                                                Y02027
*                   SET UP RCB                                   Y02027
*                                                                Y02027
         MVI   AIBPRI,GETPRI            SET PRIORITY OF POST     Y02027
         LA    RPEB,PEWAQCB             GET DUMMY QCB ADDR     @OZ27843
         STCM  RPEB,SEVEN,AIBQCBA       PUT QCB ADDR IN RCB    @OZ27843
         LR    RPEB,RPARM               SAVE AIB ADDRESS         Y02027
         LA    RPARM,AIBKEY             SET REG1 = RCB ADDRESS   Y02027
         BAL   RETURN,TPOSTSUB          TPOST RCB TO ASYC READY QY02027
*                                                                Y02027
*                             WAIT ON ECB IN PECB                Y02027
*                                                                Y02027
         LA    RETURN,GRRETURN          GET RETURN ADDR FROM WAITY02027
         STCM  RETURN,SEVEN,RBOPSW+FIVE(RSVRB) AND STORE IN      Y02027
*                                       RIGHT HALF OF PSW IN SVRBY02027
         STM   RZERO,RENTRY,TCBGRS-IEDQTCB(RTCB) SAVE REGISTERS  Y02027
*                                       IN TCB                   Y02027
         LA    RZERO,ONE                WAIT COUNT               Y02027
         LA    RPARM,PECBECB            ADDRESS OF ECB           Y02027
         L     RCVT,CVTPTR              GET CVT ADDRESS          Y02027
         L     RENTRY,CVTVWAIT-CVTMAP(RCVT)  GET BRANCH ENTRY TO Y02027
*                                       WAIT                     Y02027
         BALR  RETURN,RENTRY            BRANCH TO WAIT           Y02027
         EJECT
*                                                                Y02027
*              MCP HAS POSTED A. P. ECB COMPLETE                 Y02027
*                                                                Y02027
GRRETURN EQU   *                                                 Y02027
         LR    RPARM,RPEB               GET AIB ADDRESS          Y02027
         L     RPECB,AIBECBA            ADDR OF PECB AND ECB     Y02027
         MVI   PECBFLAG,ZERO            INITIALIZE TO ZERO       Y02027
         L     RPEWA,AIBGPEWA           GET PEWA ADDRESS         Y02027
*                                                                Y02027
*              CHECK FOR CLOSEDOWN EODAD                         Y02027
*                                                                Y02027
         LA    RENTRY,FOUR              SET RETURN CODE = 4      Y02027
         CLI   PECBECB+THREE,FOUR       CHECK FOR EODAD RETURN   Y02027
         BE    FREEAIB                  BRANCH IF YES TO AVOID   Y02027
*                                       DATA MOVE                Y02027
*                                                                Y02027
*              CHECK FOR ERRORS                                  Y02027
*                                                                Y02027
         LA    RENTRY,STOPQRC           DISABLED ENTRY CODE      Y02027
         CLI   PECBECB+THREE,STOPQRC    CK FOR DISABLED ENTRY    Y02027
         BE    FREEAIB                  BR YES TO RETURN         Y02027
         L     RDEB,AIBDECBG            GET ADDRESS OF DECB      Y02027
         CLI   PEWASAVE,RETERR          RETRIEVE ERROR SET       Y02027
         BNE   CKTYPE                   BRANCH IF NO             Y02027
         MVI   PEWASAVE,ZERO            CLEAR INDICATOR          Y02027
         LA    RENTRY,RETERR            SET RETURN CODE          Y02027
         TM    AIBMACRF,QSAMFLG         QSAMDCB                  Y02027
         BO    FREEAIB                  BRANCH IF YES            Y02027
         MVI   DECSDECB-IECTDECB(RDEB),RETCC MOVE IN COND. CODE  Y02027
         B     FREEAIB                  EXIT                      02027
CKTYPE   EQU   *                                                 Y02027
         LA    RENTRY,SOWAERR           SET RETURN CODE          Y02027
         CLI   PECBECB+THREE,SOWACC     CHECK COMPLETION CODE FORY02027
*                                       SOWA ERROR               Y02027
         BE    FREEAIB                  RETURN                   Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         TM    AIBMACRF,QSAMFLG         QSAM DCB                 Y02027
         BO    CKSYNAD                  BRANCH IF YES            Y02027
         CLI   AIBDECS,WAFULL           X'40' SET IN DECS        Y02027
         BE    CKSYNAD                  BRANCH IF YES            Y02027
         L     RWORK,DECSDECB-IECTDECB(,RDEB)   GET CURRENT    @OZ08368
*                                        DECB CONTENTS         @OZ08368
         CLI   DECSDECB-IECTDECB(RDEB),MSGRAQCB  HAS DECB BEEN   Y02027
*                                       POSTED AS MSG ON RA QUEUEY02027
*                                       SINCE AIBDECS WAS SET AS Y02027
*                                       NO MSG ON DEST QCB OR    Y02027
*                                       RA QUEUE.                Y02027
         BE    FREEAIB                  BR IF YES TO PREVENT     Y02027
*                                       OVERLAY OF DECB          Y02027
         L     RTEMP,AIBDECS            GET AIBDECS CONTENTS   @OZ08368
         CS    RWORK,RTEMP,DECSDECB-IECTDECB(RDEB)  PUT IN     @OZ08368
*                                       DECB UNLESS IT HAS     @OZ08368
*                                       CHANGED SINCE CLI      @OZ08368
*                                       FOR X'40'              @OZ08368
         B     FREEAIB                  IN DECB AND RETURN       Y02027
CKSYNAD  EQU   *                                                 Y02027
         TM    PEWAOPTC,SYNADFLG        SYNAD TO BE TAKEN        Y02027
         BNO   CKCKPT                   BRANCH IF NO             Y02027
         LA    RENTRY,SYNADERR          RETURN CODE              Y02027
         NI    PEWAOPTC,XFF-SYNADFLG    TURN OFF FLAG            Y02027
         OI    PEWAOPT2,OVERFLOW        INDICATE OVERFLOW FOR    Y02027
*                                       CLOSE                    Y02027
         B     NOCKPT                   SKIP CHECKPOINT          Y02027
CKCKPT   EQU   *                                                 Y02027
         CLI   AIBEXLFG,ZERO            CHECKPT EXIT TO BE TAKEN Y02027
         BE    NOCKPT                   BRANCH IF NO             Y02027
         MVI   PECBFLAG,CKPTFLG         SET EXIT TO BE TAKEN     Y02027
NOCKPT   EQU   *                                                 Y02027
         TM    AIBRECFG,UNDFLG          UNDEFINED LENGTH         Y02027
         BNO   MOVEDATA                 BRANCH IF NOT            Y02027
         MVC   DCBLRECL(2),PEWALREC     PUT LENGTH IN DCB        Y02027
*                                                                Y02027
*              MOVE DATA FROM AIB WORKAREA TO USERS WORKAREA     Y02027
*                                                                Y02027
MOVEDATA EQU   *                                                 Y02027
         CLI   AIBKEY,DATE              USER NEED DATE/TIME      Y02027
         BNE   NOTPDATE                 NO, BRANCH               Y02027
         ICM   RTEMP,SEVEN,PEWADTSA     GET USER DTS AREA        Y02027
         MVC   ONE(SEVEN,RTEMP),AIBKEY+ONE MOVE TIME/DATE        Y02027
         MVC   EIGHT(EIGHT,RTEMP),PEWAELEM+EIGHT MOVE SOURCE     Y02027
NOTPDATE EQU   *                                                 Y02027
         L     RDCB,REG3(RSVRB)         GET USERS SAVE AREA ADDR Y02027
         LH    RTEMP,PEWALREC           GET SIZE OF MOVE         Y02027
         L     RPECB,AIBWAPTR           ADDRESS OF MOVE FROM     Y02027
         LR    RPEWA,RTEMP              GET LENGTH               Y02027
         MVCL  RDCB,RPECB               MOVE FROM AIB WORKAREA   Y02027
*                                       TO USER WORKAREA         Y02027
         TM    AIBMACRF,QSAMFLG         QSAM DCB                 Y02027
         BO    FREEAIB                  BRANCH IF YES            Y02027
         MVI   DECSDECB-IECTDECB(RDEB),NORMAL SET GOOD COMPL CODEY02027
FREEAIB EQU    *                                                 Y02027
         MVI   AIBSTATE,AIBFREE         FREE AIB                 Y02027
         B     EXIT                     GOOD RETURN              Y02027
         DROP  RPECB                                             Y02027
         DROP  RDCB                                              Y02027
         DROP  RDEB                                              Y02027
         DROP  RPEWA                                             Y02027
         DROP  RPARM                    MAKE REG 1 AVAILABLE     Y02027
         TITLE '''NETWORK CONTROL - OPCTL'''
NETWKCTL EQU   *                                                 Y02027
RAIB     EQU   3                        AIB BASE                 Y02027
         SPACE 1
         USING APCIBMAP,RPEB            APCIB ADDRESSABILITY     Y02027
         USING IEDQAIB,RAIB             AIB ADDRESSABILITY       Y02027
         USING IEDQDEB,RDEB             DEB ADDRESSABILITY       Y02027
         SPACE 1
         LA    RENTRY,EIGHTY            SET POSS ERR RET CODE    Y02027
         TM    TCXBIT1,AVTCLOSN         MCP CLOSE IN PROGRESS    Y02027
         BNO   TCAMOK                   NO - BRANCH              Y02027
         L     RTEMP,REG0(RSVRB)        GET FUNCTION CODE REG    Y02027
         LA    RWORK,SIX                MCPCLOSE CODE            Y02027
         CR    RTEMP,RWORK              ANOTHER CLOSE REQUEST    Y02027
         BNE   EXIT                     NO - EXIT WITH ERR RC    Y02027
         SR    RENTRY,RENTRY            ZERO REG FOR RET CODE    Y02027
         B     EXIT                     RETURN TO CALLER - CLOSE Y02027
*                                       ALREADY IN PROGRESS      Y02027
         SPACE 1
TCAMOK   EQU   *                                                 Y02027
         L     RPEB,ZERO(,RPARM)        GET POINTER TO INPUT     Y02027
         LA    RPEB,ZERO(,RPEB)         CLEAR HIGH ORDER BYTE    Y02027
         TM    APPCOMCD,CHKPASWD        NEED TO CHECK PASSWORD   Y02027
         BZ    OPCTLAIB                 BRANCH IF NO             Y02027
         BAL   RETURN,PASSCHK           GO CHECK PASSWORD        Y02027
         TM    APPCOMCD,NOTTCHNG        TCHNG FUNCTION           Y02027
         BZ    OPCTLAIB                 BR, YES - DON'T DESTROY  Y02027
*                                       COMMAND CODE             Y02027
         NI    APPCOMCD,XFF-CHKPASWD    TURN OFF PASSWORD FLAG   Y02027
         SPACE 1                                                 Y02027
OPCTLAIB EQU   *                                                 Y02027
         BAL   RETURN,AIBSUBR           GO GET AN AIB            Y02027
         LR    RAIB,RPARM               SET UP AIB BASE          Y02027
         SPACE 1
**************************************************************** Y02027
*                        INITIALIZE AIB                         *Y02027
**************************************************************** Y02027
         XC    CLROFF(CLRLEN,RAIB),CLROFF(RAIB)   CLEAR AREA IN  Y02027
*                                       AIB FOR FUNCTION INPUT   Y02027
         L     RTEMP,TCXAVT             GET AVT POINTER          Y02027
         LA    RTEMP,AVTOPCOB-IEDQAVTD(RTEMP)   GET OP CONTROL   Y02027
*                                       QCB ADDRESS              Y02027
         STCM  RTEMP,SEVEN,AIBQCBA      SET QCB ADDRESS          Y02028
         MVI   AIBKEY,AIBAPKEY          SET FLAG = MPP REQUESTOR Y02027
         MVI   AIBPRI,PRIOPCTL          SET POST PRIORITY        Y02027
         MVC   AIBCOMCD(ONE),APPCOMCD   MOVE COMMAND CODE TO AIB Y02027
         SPACE 1                                                 Y02027
         LA    RTEMP,APECB              GET ECB ADDRESS AND      Y02027
         ST    RTEMP,AIBECBA            STORE IN AIB             Y02027
         MVC   AIBWAPTR+ONE(3),APUSWKA  MOVE USER WORK AREA PTR  Y02027
         SPACE 2
**************************************************************** Y02027
* ASSURE THAT USER'S MPP MEETS ONE OF THE FOLLOWING CONDITIONS * Y02027
*                                                              * Y02027
*              1 - OPENS A TCAM DCB                            * Y02027
*              2 - IS A DAUGHTER OF AN APPL PROG THAT OPENS    * Y02027
*                  A TCAM DCB                                  * Y02027
*              3 - IS A DAUGHTER OF THE TCAM MCP               * Y02027
**************************************************************** Y02027
         USING IEDQTCB,RTCB             TCB ADDRESSABILITY       Y02027
         SR    RENTRY,RENTRY            CLEAR                    Y02027
         SR    RDEB,RDEB                REGISTERS                Y02027
         ICM   RDEB,ADD,TCBDEB+ONE      ADDRESS OF FIRST DEB     Y02027
         BZ    CHKMOTHR                 BRANCH IF NO DCB'S OPEN  Y02027
*                                       IN MPP TASK              Y02027
LOOP     EQU   *                                                 Y02027
         TM    DEBTAMID,ID              TCAM DEB                 Y02027
         BO    TCAMAPP                  BRANCH IF YES            Y02027
         ICM   RDEB,ADD,DEBDEBAD        GET PTR TO NEXT DEB      Y02027
         BNZ   LOOP                     CHECK NEXT DEB           Y02027
         SPACE 1
CHKMOTHR EQU   *                                                 Y02027
         LTR   RENTRY,RENTRY            FIRST TIME THROUGH       Y02027
         BNZ   NODCB                    NO BRANCH                Y02027
         LA    RENTRY,ONE               SET 2ND PASS SWITCH      Y02027
         LA    RWORK,TCBOTC             GET PTR TO ADDRESS OF    Y02027
*                                       MOTHER'S TCB             Y02027
         NC    ZERO(FOUR,RWORK),ZERO(RWORK)  IS THERE AN ATTACHR Y02027
         BZ    NODCB                    BRANCH IF NO             Y02027
         CLC   ZERO(FOUR,RWORK),TCXTCB  ATTACHER = TCAM MCP      Y02027
         BE    MPPOK                    BRANCH IF YES            Y02027
         L     RWORK,ZERO(RWORK)        GET MOTHER'S TCB       @OZ17641
         ICM   RDEB,ADD,TCBDEB+ONE-IEDQTCB(RWORK) GET MOTHER'S   Y02027
*                                       DEBCHAIN                 Y02027
         BNZ   LOOP                     GO CHECK MOTHER'S DEBS   Y02027
         SPACE 1
NODCB    EQU   *                                                 Y02027
         LA    RENTRY,NOPENDCB          SET ERROR RETURN CODE    Y02027
         TM    AIBCOMCD,XF0             FUNCTION OTHER THAN      Y02027
*                                       TPDATE OR MCOUNT         Y02027
         BNZ   FREEAIB2                 YES, BRANCH              Y02027
         LA    RENTRY,EIGHTY            SET RETURN CODE          Y02027
         B     FREEAIB2                 FREE AIB AND EXIT        Y02027
MPPOK    EQU   *                                                 Y02027
         ST    RASCB,AIBPCBAD           SET ASCB ADDR FOR XMPOST Y02027
*                                       FROM OPERATOR CONTROL    Y02027
         OI    AIBPCBAD,USEASCB         INDICATOR FOR OP CONTROL Y02027
         B     CHECKCD                  GO CHECK FUNCTION REQ    Y02027
TCAMAPP  EQU   *                                                 Y02027
         MVC   AIBPCBAD+ONE(THREE),DEBPCBAD  SET PCB ADDR IN AIB Y02027
         DROP  RTCB                     FREE REGISTER            Y02027
         DROP  RDEB                     FREE REGISTER            Y02027
         SPACE 1
CHECKCD  EQU   *                                                 Y02027
         L     RTEMP,REG0(RSVRB)        SET FUNCTION INDEX REG   Y02027
*                                       FROM CALLER'S REG 0      Y02027
         SLL   RTEMP,TWO                MULTIPLY ENTRY CODE BY 4 Y02027
         B     TABLE(RTEMP)             BRANCH TO FUNCTION RTN   Y02027
TABLE    EQU   *                                                 Y02027
         B     TCHNCOPY                 BR IF TCOPY OR TCHNG     Y02027
         B     QCOPY                    BR IF QCOPY              Y02027
         B     ICHNCOPY                 BR IF ICHNG OR ICOPY     Y02027
         B     TPDATE                   BR IF TPDATE             Y02027
         B     MCOUNT                   BR IF MCOUNT             Y02027
         B     MRELEASE                 BR IF MRELEASE           Y02027
         B     MCPCLOSE                 BR IF MCPCLOSE           Y02027
         SPACE 1
*************************************************************** Y02027
*      THIS CODE PROCESSES THE TCOPY AND TCHNG FUNCTIONS       * Y02027
*************************************************************** Y02027
         SPACE 1
TCHNCOPY EQU   *                                                 Y02027
         L     RTEMP,APNAME             GET PTR TO TERM NAME     Y02027
         MVC   AIBNAME(EIGHT),ZERO(RTEMP)    MOVE TERM NA TO AIB Y02027
         TM    AIBCOMCD,AIBTCOPY        TCOPY FUNCTION           Y02027
         BO    GOTCOPY                  BRANCH IF YES            Y02027
         OI    AIBFLAG1,AIBGETSZ        SET SIZE REQUEST FLAG    Y02027
*                                       FOR TCHNG                Y02027
         L     RCOMPC,AIBWAPTR          GET WORK AREA PTR        Y02027
         TM    TRMSTATE-IEDQTRM(RCOMPC),TRMLIST  DIST OR CAS LISTY02027
         BNO   GOTCOPY                  NO, BRANCH               Y02027
         NI    AIBFLAG1,XFF-AIBGETSZ    TURN OFF SIZING FLAG     Y02027
         SPACE 1
         LA    RWORK,TLISTEN-IEDQTRM    MINIMUM LIST ENTRY       Y02027
         LH    RTEMP,TLISTCNT-IEDQTRM(RCOMPC) # OF 2 BYTE ENT'S  Y02027
*                                       IN UPDATED LIST          Y02027
         SLL   RTEMP,ONE                TIMES SIZE OF 1 ENTRY    Y02027
         AR    RTEMP,RWORK              TOTAL LENGTH             Y02027
         STH   RTEMP,AIBCOUNT           SAVE COUNT               Y02027
         BAL   RETURN,TOAIB             GO MOVE UPDATED LIST     Y02027
         SPACE 1
GOTCOPY  EQU   *                                                 Y02027
*                                                              * Y02027
* GO TO SUBROUTINE TO PUT AIB ON DISABLED READY Q.  UPON RETURN *Y02027
* PREPARE FOR BRANCH ENTRY TO WAIT                              *Y02027
*                                                              * Y02027
         SPACE 1                                                 Y02027
         OI    AIBFLAG1,AIBTNT          TURN ON 'TERMNAME LOOK   Y02027
*                                       UP' FLAG                 Y02027
         LA    RPARM,AIBKEY             SET UP RCB ADDRESS       Y02027
         BAL   RETURN,TPOSTSUB          PUT AIB ON DISABLED RDY QY02027
         BAL   RETURN,BRWAIT            GO TO OS WAIT ROUTINE    Y02027
         SPACE 1                                                 Y02027
*                                                              * Y02027
* RETURN FROM OPERATOR CONTROL WITH ...                        * Y02027
*        TCOPY - TERM AND OPTION DATA COPIED INTO AIB          * Y02027
*        TCHNG - BYTE COUNT OF DATA TO BE MOVED FROM USER'S    * Y02027
*                WORKAREA.                                     * Y02027
*                                                              * Y02027
         SPACE 1                                                 Y02027
SIZERET  EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         ICM   RENTRY,ONE,AIBOPRC       CHECK RETURN CODE        Y02027
         BNZ   FREEAIB2                 BRANCH IF ERROR          Y02027
         TM    AIBCOMCD,AIBTCHNG        TCHNG OR TCOPY           Y02027
         BO    GOTCHNG                  BRANCH IF TCHNG          Y02027
*                                                              * Y02027
*          FOR TCOPY MOVE DATA FROM AIB TO USER WORK AREA        Y02027
*                                                              * Y02027
         LH    RTEMP,AIBCOUNT           GET SIZE FOR MOVE        Y02027
         BAL   RETURN,TOUSWKAR          GO MOVE DATA             Y02027
         SR    RENTRY,RENTRY            CLEAR FOR GOOD RETURN CD Y02027
         LR    RPARM,RAIB               SET AIB PTR FOR SUBRTN   Y02027
         B     FREEAIB2                 GO FREE AIB AND EXIT     Y02027
         SPACE 1
*                                                              * Y02027
*        FOR TCHNG MOVE DATA FROM USER'S WORK AREA TO AIB      * Y02027
*        AND RETURN TO OPERATOR CONTROL TO UPDATE TERM ENTRY   * Y02027
*                                                              * Y02027
GOTCHNG  EQU   *                                                 Y02027
         TM    AIBFLAG1,AIBGETSZ        FOR LIST OR SINGLE       Y02027
         BZ    CHNGRET                  BR IF LIST TO SET UP FOR Y02027
*                                       CHECK POINT              Y02027
         XC    AIBFLAG1(ONE),AIBFLAG1   CLEAR FLAG FIELD         Y02027
         LH    RTEMP,AIBCOUNT           GET SIZE FOR MOVE        Y02027
         BAL   RETURN,TOAIB             GO MOVE DATA TO AIB      Y02027
         SPACE 1
         L     RTEMP,TCXAVT             RESTORE OPERATOR         Y02027
         LA    RTEMP,AVTOPCOB-IEDQAVTD(RTEMP)     CONTROL        Y02027
         STCM  RTEMP,SEVEN,AIBQCBA      ADDRESS                  Y02027
         MVI   AIBKEY,AIBAPKEY          SET FLAG = MPP REQUESTOR Y02027
         XC    AIBLINK,AIBLINK          CLEAR LINK FIELD         Y02027
         LA    RPARM,AIBKEY             SET UP RCB ADDRESS       Y02027
SET1     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                @ZA02099X
               RELATED=(MCP,IEDQEB,SET2)                       @ZA02099
         BAL   RETURN,TPOSTSUB          PUT AIB ON DISABLED RDY QY02027
         BAL   RETURN,BRWAIT            GO TO OS WAIT ROUTINE    Y02027
         SPACE 1                                                 Y02027
CHNGRET  EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            CLEAR RETURN CD REG      Y02027
         ICM   RENTRY,BY3,AIBOPRC       GET RETURN CODE          Y02027
         BNZ   FREEAIB2                 BRANCH IF ERROR          Y02027
         TM    TCXCKPM,CHKPT            IS CHECKPOINT IN SYSTEM  Y02027
         BNO   FREEAIB2                 BRANCH IF NO             Y02027
         LR    RPARM,RAIB               SET PARM REG FOR SUBRTN  Y02027
         MVI   AIBKEY,TCHKPT            SET TCHNG CHECKPOINT     Y02027
*                                       REQUEST CODE IN AIB      Y02027
         MVC   AIBOFFS(TWO),AIBTNDX     SET TERM OFFSET        @ZA02615
*                                       ENTRY FOR SUBROUTINE     Y02027
SET2     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                @ZA02099X
               RELATED=(MCP,IEDQEB,SET1)                       @ZA02099
         B     CKPT                     GO TO TAKE A CHECKPOINT  Y02027
*                                       RETURN FROM CKPT SUBRTN  Y02027
*                                       IS TO 'EXIT'             Y02027
         SPACE 1
**************************************************************** Y02027
*         THIS CODE PROCESSES THE QCOPY FUNCTION               * Y02027
**************************************************************** Y02027
         SPACE 1
QCOPY    EQU   *                                                 Y02027
         L     RWORK,APNAME             GET PTR TO TRM NAME      Y02027
         ICM   RTEMP,ALL,APPASWD        GET LIMIT SPECIFICATION  Y02027
         BZ    NOTLIMIT                 BR IF NOT ITERATIVE FUNC Y02027
         STH   RTEMP,AIBLIMIT           SAVE IN AIB              Y02027
         ST    RWORK,AIBQLMNA           SAVE TERMNAME PTR        Y02027
         SPACE 1                                                 Y02027
NOTLIMIT EQU   *                                                 Y02027
         MVC   AIBNAME(EIGHT),ZERO(RWORK)    MOVE TERM NA TO AIB Y02027
         OI    AIBFLAG1,AIBTNT          TURN ON TERM LOOKUP FLAG Y02027
         LA    RPARM,AIBKEY             SET PARM REGISTER        Y02027
         BAL   RETURN,TPOSTSUB          GO PUT AIB ON ASYNCH R Q Y02027
         BAL   RETURN,BRWAIT            GO TO WAIT SUBRTN        Y02027
*                                                              * Y02027
*              RETURN FROM MCP WITH QCB COPIED INTO AIB        * Y02027
*              COPY QCB INTO USER WORKAREA AND EXIT            * Y02027
*                                                              * Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         ICM   RENTRY,ONE,AIBOPRC       PICK UP RETURN CODE      Y02027
         BZ    RTGOOD                   BR IF GOOD COMPLETION    Y02027
         LA    RTEMP,EIGHTY             CHECK FOR END OF QCOPY   Y02027
*                                       LIMIT FUNCTION           Y02027
         CR    RENTRY,RTEMP             CHECK FOR END OF QCOPY   Y02027
*                                       LIMIT FUNCTION           Y02027
         BNE   FREEAIB2                 NO, BRANCH               Y02027
         LA    RENTRY,ALL               SET RET CODE FOR IEDQE2  Y02027
         B     FREEAIB2                 PREPARE TO EXIT          Y02027
RTGOOD   EQU   *                                                 Y02027
         ICM   RENTRY,THREE,AIBLIMIT    WAS LIMIT SPECIFIED      Y02027
         BZ    REGULAR                  NO, BRANCH               Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
         IC    RTEMP,AIBQLMNA           MAXIMUM TERM NAME LENGTH Y02027
         L     RWORK,AIBQLMNA           AREA TO RETURN TERM NAME Y02027
         LA    RWORK,ZERO(,RWORK)       CLEAR HIGH ORDER BYTE    Y02027
         EX    RTEMP,MOVENAME           MOVE TERM NAME TO USER   Y02027
*                                       AREA                     Y02027
*                                       USER AREA                Y02027
         SPACE 1
REGULAR  EQU   *                                                 Y02027
         LH    RTEMP,AIBCOUNT           GET QCB SIZE             Y02027
         BAL   RETURN,TOUSWKAR          GO MOVE QCB DATA TO      Y02027
*                                       USER'S WORK AREA         Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         B     FREEAIB2                 FREE AIB AND EXIT        Y02027
         SPACE 1
MOVENAME MVC   ZERO(ZERO,RWORK),AIBNAME MOVE TERMINAL NAME       Y02027
         SPACE 2
*****************************************************************Y02027
*        THIS CODE HANDLES THE ICOPY AND ICHNG FUNCTIONS        *Y02027
*****************************************************************Y02027
ICHNCOPY EQU   *                                                 Y02027
         L     RWORK,APNAME             PICK UP DDNAME PTR & RLN Y02027
         STCM  RWORK,EIGHT,AIBFLAG2     MOVE RLN TO AIB          Y02027
         LA    RWORK,ZERO(,RWORK)       CLEAR HIGH ORDER BYTE    Y02027
         MVC   AIBNAME(EIGHT),ZERO(RWORK)    DDNAME IN AIB       Y02027
         CLI   AIBCOMCD,AIBICHNG        ICHNG FUNCTION           Y02027
         BNE   INVGO                    NO, BRANCH               Y02027
         MVC   AIBTNDX(FOUR),AIBWAPTR   MOVE WORKAREA PTR OR     Y02027
*                                       ACT/DEACT CODE           Y02027
         CLC   AIBWAPTR(THREE),ZEROES   REPLACE OR ACT/DEACT     Y02027
         BE    INVGO                    BRANCH IF ACT/DEACT      Y02027
         L     RWORK,AIBWAPTR           GET WORK AREA PTR
         SR    RPARM,RPARM              CLEAR                    Y02027
         SR    RTEMP,RTEMP                    REGISTERS          Y02027
         IC    RPARM,ZERO(RWORK)        GET NUMBER OF ENTRIES &  Y02027
         IC    RTEMP,TWO(RWORK)         LENGTH OF EACH FR WRKAREAY02027
         MR    RWORK,RPARM              GET TOTAL LIST LENGTH    Y02027
         LA    RTEMP,TEN(,RTEMP)      ADD SIZE OF CONTROL      @OZ08344
*                                      WORD+EOL+EOT(BSC)       @OZ08344
         BAL   RETURN,TOAIB             GO MOVE LIST TO AIB      Y02027
         LA    RTEMP,AIBDATA            SET WORK AREA PTR        Y02027
         ST    RTEMP,AIBTNDX            AND SAVE                 Y02027
         SPACE 1
INVGO    EQU   *                                                 Y02027
         LA    RPARM,AIBKEY             SET PARM REG FOR SUBRTN  Y02027
         BAL   RETURN,TPOSTSUB          GO POST AIB TO OP CONT   Y02027
         BAL   RETURN,BRWAIT            AND WAIT FOR OP CONTROL  Y02027
*                                       TO PROCESS               Y02027
*                                                              * Y02027
*     RETURN FROM MCP WITH INVITATION LIST COPIED TO AIB       * Y02027
*                                                              * Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         ICM   RENTRY,BY3,AIBOPRC       PICK UP RETURN CODE      Y02027
         BNZ   FREEAIB2                 BRANCH IF ERROR          Y02027
         SPACE 1
         TM    AIBCOMCD,AIBICHNG        ICHNG FUNCTION           Y02027
         BO    FREEAIB2                 PREPARE TO EXIT
         LH    RTEMP,AIBCOUNT           GET BYTE COUNT FOR MOVE  Y02027
         BAL   RETURN,TOUSWKAR          GO MOVE DATA TO USER     Y02027
*                                       WORK AREA                Y02027
         SR    RENTRY,RENTRY            CLEAR FOR GOOD RETURN CD Y02027
         B     FREEAIB2                 GO FREE AIB AND EXIT     Y02027
         SPACE 2
         SPACE 2
TPDATE   EQU   *                                                 Y02027
         SPACE 1
         SR    RTEMP,RTEMP              CLEAR                    Y02027
         SR    RETURN,RETURN            REGISTERS                Y02027
         IC    RTEMP,APNAME             PICK UP OPTION BYTE      Y02027
         STC   RTEMP,AIBFLAG2           AND STORE IN AIB         Y02027
         ICM   RTEMP,ADD,APUSWKA        DTS AREA SPECIFICATION   Y02027
         ICM   RETURN,ADD,APNAME+ONE    AND GET PEWA PTR         Y02027
         STM   RTEMP,RETURN,AIBNAME     STORE PTRS IN AIB        Y02027
         LA    RPARM,AIBKEY             SET PARM REG FOR SUBRTN  Y02027
         BAL   RETURN,TPOSTSUB          GO POST AIB TO OP CONT   Y02027
         BAL   RETURN,BRWAIT            AND WAIT FOR OPERATOR    Y02027
*                                       CONTROL TO PROCESS       Y02027
*                                                              * Y02027
*                       RETURN FROM OP CONTROL                 * Y02027
*                                                              * Y02027
         ICM   RETURN,ADD,APNAME+ONE    GET PEWA PTR           @OZ18744
         ICM   RENTRY,ALL,PEWADEB-IEDQPEWA(RETURN) GET DEB PTR @OZ18744
         ICM   RENTRY,ALL,DEBDCBAD-1-IEDQDEB(RENTRY)  DCB PTR  @OZ18744
         ICM   RENTRY,ALL,DCBPECB-IHADCB(RENTRY)   GET PECB PTR@OZ18744
         MVC   PECBDTSA-IEDQPECB(3,RENTRY),PEWADTSA-IEDQPEWA(RETURN)
*                                       SAVE DTSA FOR TPDATE   @OZ18744
         MVC   PECBOPTC-IEDQPECB(1,RENTRY),PEWAOPT2-IEDQPEWA(RETURN)
*                                        SAVE DELETE=YES FLAG  @OZ18744
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         ICM   RENTRY,EIGHT,AIBFLAG2    GET RECDLM OR ZERO       Y02027
         B     FREEAIB2                 GO FREE AIB AND EXIT     Y02027
         SPACE 2
MCOUNT   EQU   *                                                 Y02027
         MVC   AIBNAME(4),APNAME        SET PEWA PTR             Y02027
         LA    RPARM,AIBKEY             SET PARM REG FOR TPOST   Y02027
         BAL   RETURN,TPOSTSUB          GO POST AIB TO OP CNTRL  Y02027
         BAL   RETURN,BRWAIT            AND GO WAIT              Y02027
*                                                              * Y02027
*    RETURN FROM OPERATOR CONTROL WITH MESSAGE COUNT IN AIB    * Y02027
*                                                              * Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         ICM   RENTRY,BY3,AIBOPRC       PICK UP RETURN CODE      Y02027
         LH    RPARM,AIBCOUNT           SET REG 1 FOR USER       Y02027
         B     FREEAIB2                 GO FREE AIB AND EXIT     Y02027
         SPACE 2
MRELEASE EQU   *                                                 Y02027
         SPACE 1
         L     RWORK,APNAME             PTR TO STATION NAME      Y02027
         MVC   AIBNAME(EIGHT),ZERO(RWORK)    SET NAME IN AIB     Y02027
         LA    RPARM,AIBKEY             SET UP PARM REGISTER     Y02027
         BAL   RETURN,TPOSTSUB          GO POST AIB TO OP CNTRL  Y02027
         BAL   RETURN,BRWAIT            AND WAIT FOR OPERATOR    Y02027
*                                       CONTROL TO PROCESS       Y02027
*                                                              * Y02027
*  RETURN FROM OPERATOR CONTROL - GET RETURN CODE AND EXIT     * Y02027
*                                                              * Y02027
         SR    RENTRY,RENTRY            CLEAR RET CD REG         Y02027
         IC    RENTRY,AIBOPRC           PICK UP RETURN CODE      Y02027
         B     FREEAIB2                 FREE AIB AND EXIT        Y02027
         SPACE 2
MCPCLOSE EQU   *                                                 Y02027
         LA    RPARM,AIBKEY             SET PARM REGISTER        Y02027
         BAL   RETURN,TPOSTSUB          POST AIB TO OP CONTROL   Y02027
         OI    TCXBIT1,AVTCLOSN         SET CLOSEDOWN IN PROGRESSY02027
         SR    RENTRY,RENTRY            CLEAR FOR GOOD RET CD    Y02027
         B     EXIT                     RETURN TO USER           Y02027
         SPACE 2
**************************************************************** Y02027
* THIS CODE MOVES DATA FROM THE USER'S WORK AREA TO THE AIB.   * Y02027
* AT ENTRY, RTEMP CONTAINS THE BYTE COUNT.                     * Y02027
**************************************************************** Y02027
TOAIB    EQU   *                                                 Y02027
         LA    RENTRY,AIBSZERR          SET POSS ERROR CODE      Y02027
         LH    RZERO,TCXSZAIB           GET SIZE OF AIB          Y02027
         LA    RPARM,AIBDATA-IEDQAIB    GET PREFIX AREA SIZE     Y02027
         SR    RZERO,RPARM              GET SIZE OF USER DATA    Y02027
*                                       AREA IN AIB              Y02027
         CR    RZERO,RTEMP              IS AMT OF DATA LARGER    Y02027
*                                       THAN AIB AREA            Y02027
         BL    FREEAIB2                 YES, BRANCH              Y02027
         SPACE 1
         L     RWORK,AIBWAPTR           GET USER WORKAREA PTR    Y02027
         LA    RCOMPC,AIBDATA           RECIPIENT AREA IN AIB    Y02027
         LR    RCECB,RTEMP              RECEIVING AREA LENGTH    Y02027
         ICM   RTEMP,EIGHT,BLANKS       SET PAD CHARACTER        Y02027
         MVCL  RCOMPC,RWORK             MOVE DATA                Y02027
         BR    RETURN                   RETURN TO CALLER         Y02027
         SPACE 2
**************************************************************** Y02027
*  THIS CODE MOVES DATA FROM THE AIB TO THE USER'S WORK AREA.  * Y02027
*  AT ENTRY, RTEMP CONTAINS THE BYTE COUNT.                    * Y02027
**************************************************************** Y02027
TOUSWKAR EQU   *                                                 Y02027
         L     RCOMPC,AIBWAPTR          GET PTR TO USER'S        Y02027
*                                       WORKAREA                 Y02027
         LA    RWORK,AIBDATA            GET PTR TO DATA IN AIB   Y02027
         LR    RCECB,RTEMP              RECIEVING AREA LENGTH    Y02027
         ICM   RTEMP,EIGHT,BLANKS       SET PADDING CHARACTER    Y02027
         MVCL  RCOMPC,RWORK             MOVE DATA                Y02027
         BR    RETURN                   RETURN TO CALLER         Y02027
         SPACE 2                                                 Y02027
**************************************************************** Y02027
*                  THIS CODE PROVIDES THE INTERFACE            * Y02027
*                  FOR THE BRANCH ENTRY TO WAIT                * Y02027
**************************************************************** Y02027
         SPACE 1
BRWAIT   EQU   *                                                 Y02027
         LA    RZERO,ONE                SET WAIT COUNT           Y02027
         LA    RTEMP,WAITRET            ADD FOR RETURN FROM WAIT Y02027
         STCM  RTEMP,SEVEN,RBOPSW+FIVE(RSVRB) AND SET IT IN SVRB Y02027
         L     RENTRY,CVTPTR            GET CVT POINTER          Y02027
         L     RENTRY,CVTVWAIT-CVTMAP(RENTRY)    EPA FOR BRANCH  Y02027
*                                       ENTRY TO WAIT            Y02027
         STM   RZERO,RENTRY,TCBGRS-IEDQTCB(RTCB)   SAVE REGS IN  Y02027
*                                       THE TCB                  Y02027
         LA    RPARM,APECB              GET ECB ADDRESS          Y02027
         XC    ZERO(FOUR,RPARM),ZERO(RPARM)   CLEAR ECB          Y02027
         BR    RENTRY                   GO TO WAIT ROUTINE       Y02027
         SPACE 1                                                 Y02027
WAITRET  EQU   *                                                 Y02027
         L     RTEMP,AIBECBA            GET ECB ADDRESS          Y02027
         XC    ZERO(FOUR,RTEMP),ZERO(RTEMP)  CLEAR ECB           Y02027
         BR    RETURN                   RETURN TO CALLER         Y02027
         SPACE 2                                                 Y02027
PASSCHK  EQU   *                                                 Y02027
**************************************************************** Y02027
*                   SCRAMBLE AND CHECK PASSWORD                  Y02027
**************************************************************** Y02027
         SPACE 1                                                 Y02027
         CLC   TCXPASWD(EIGHT),BLANKS   IS PASSWORD REQUIRED     Y02027
         BER   RETURN                   NO, BRANCH               Y02027
         ICM   RTEMP,ALL,APPASWD        GET PTR TO PASSWORD      Y02027
         BZ    PASSERR                  BRANCH IF NO             Y02027
         ICM   RCOMPC,BY0+BY1,TWO(RTEMP)    SCRAMBLE             Y02027
         ICM   RCOMPC,BY2,ONE(RTEMP)    PASSWORD                 Y02027
         ICM   RCOMPC,BY3,SIX(RTEMP)    INTO                     Y02027
         ICM   RCECB,BY0,SEVEN(RTEMP)   REGISTERS                Y02027
         ICM   RCECB,BY1,ZERO(RTEMP)    FOR                      Y02027
         ICM   RCECB,BY2+BY3,FOUR(RTEMP)     COMPARISON          Y02027
         N     RCOMPC,NR                                         Y02027
         N     RCECB,NR                                          Y02027
         X     RCOMPC,XR                                         Y02027
         X     RCECB,XR                                          Y02027
         SPACE 1                                                 Y02027
         C     RCOMPC,TCXPASWD          FIRST HALF VALID         Y02027
         BNE   PASSERR                  BRANCH IF NO             Y02027
         C     RCECB,TCXPASWD+FOUR      SECOND HALF VALID        Y02027
         BER   RETURN                   YES, BRANCH              Y02027
         SPACE 1                                                 Y02027
PASSERR  EQU   *                                                 Y02027
         LA    RENTRY,INVPASS           SET ERROR RETURN CODE    Y02027
         B     EXIT                     RETURN TO CALLER         Y02027
         SPACE 2
FREEAIB2 EQU   *                                                 Y02027
         MVI   AIBSTATE,AIBFREE         INDICATE AIB IS FREE     Y02027
         B     EXIT                     LEAVE                    Y02027
         DROP  RAIB                                              Y02027
         TITLE '''PUT/WRITE FUNCTION'''
PUTWRITE EQU   *                                                 Y02027
*                                                                Y02027
*                        PUT-WRITE FUNCTION                      Y02027
*                                                                Y02027
*              REGISTER EQUATES FOR PUT WRITE FUNCTION           Y02027
*RDCB    EQU   10                       ADDRESS OF DCB           Y02027
*RPEWA   EQU   11                       ADDRESS OF PEWA          Y02027
*RPECB   EQU   12                       ADDRESS OF PECB          Y02027
*                                                                Y02027
*                                                                Y02027
*              ADDRESSABILITY                                    Y02027
*                                                                Y02027
         USING IEDQPECB,RPECB           PECB ADDRESSABILITY      Y02027
         USING IHADCB,RDCB              DCB ADDRESSABILITY       Y02027
         USING IEDQDEB,RDEB             DEB ADDRESSABILITY       Y02027
         USING IEDQPEWA,RPEWA           PEWA ADDRESSABILITY      Y02027
*                                                                Y02027
         L     RPECB,ZERO(RPARM)        GET ECB ADDR           @OZ07830
         XC    PECBECB(4),PECBECB       CLEAR ECB                Y02027
         L     RDCB,REG10(RSVRB)        GET REG 10 FROM SVRB-    Y02027
*                                       DCB FROM IGG019RI        Y02027
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          Y02027
         ICM   RPEWA,SEVEN,DEBPEWA      GET PEWA ADDRESS         Y02027
*                                                                Y02027
         BAL   RETURN,AIBSUBR           GET AIB                  Y02027
         USING IEDQAIB,RPARM            ADDRESSABILITY OF AIB    Y02027
*                                       RETURNED IN REG 1        Y02027
         L     RETURN,REG2(RSVRB)       GET ADDRESS OF WORKAREA  Y02027
         L     RCVT,REG3(RSVRB)         GET MSG SIZE AS SET      Y02027
*                                       BY IGG019RI              Y02027
         L     RTEMP,REG6(RSVRB)        GET ADDR OF MSG OR OPTIONY02027
*                                       FIELDS AS SET BY IGG019RIY02027
         TM    DCBOPTCD,CTLBYTE         WORKAREA CONTENTS BYTE   Y02027
         BZ    SETOFF                   BRANCH IF NO             Y02027
         MVC   PEWACTL(1),PECBFLAG      MOVE FROM TEMPORATY      Y02027
*                                       STORAGE AS SET BY 019RI  Y02027
         TM    PEWAGSW+ONE,NEEDHDRN     NEED A HEADER NOW        Y02027
         BO    HDRTST                   BRANCH IF YES            Y02027
         TM    ZERO(RTEMP),HDRFLG       HAVE HEADER ANYWAY       Y02027
         BNO   EOMTST                   BR IF NO               @OZ16523
         MVI   PECBERR,SEQERR           SET COMPL. CODE FOR SEQ  Y02027
         B     FREEUP                   BRANCH IF YES - ERROR    Y02027
HDRTST   EQU   *                                                 Y02027
         TM    ZERO(RTEMP),HDRFLG       HEADER SPECIFIED         Y02027
         BO    SETFLAG                  BRANCH IF YES            Y02027
         MVI   PECBERR,SEQERR           SET COMPL CODE FOR SEQ   Y02027
         B     FREEUP                   RETURN                   Y02027
SETFLAG  NI    PEWAGSW+ONE,XFF-NEEDHDRN TURN OFF HEADER FLAG     Y02027
EOMTST   EQU   *                                                 Y02027
         TM    ZERO(RTEMP),EOMFLAG      EOM SPECIFIED IN WORKAREAY02027
         BNO   SEQOK                    BRANCH IF NO             Y02027
         OI    PEWAGSW+ONE,NEEDHDRN     SET NEED HEADER NEXT     Y02027
SEQOK    EQU   *                                                 Y02027
         LA    RTEMP,ONE(RTEMP)         BUMP PASSED CTL BYTE     Y02027
         BCTR  RCVT,RZERO               SUBTRACT ONE FROM MSGSIZEY02027
         LTR   RCVT,RCVT                TEST SIZE              @ZA04032
         BM    LENERR                   BRANCH IF NEG SIZE     @OY11959
SETOFF   EQU   *                                                 Y02027
         SR    RTEMP,RETURN             OFFSET TO START OF MSG   Y02027
         STH   RTEMP,AIBMSTRT           AND STORE IN AIB         Y02027
         STCM  RCVT,THREE,AIBWASZE      SIZE OF WORKAREA MINUS   Y02027
*                                       OPTIONAL FIELDS IF ANY   Y02027
         L     RCVT,REG3(RSVRB)         SIZE OF WORKAREA         Y02027
         TM    DCBRECFM,FIXFLG          FIXED OR UNDEFINED       Y02027
         BO    NOTVAR                   BRANCH IF YES            Y02027
         LH    RCVT,ZERO(RETURN)        LOAD WORKAREA SIZE FOR   Y02027
*                                       VARIABLE FORMAT          Y02027
NOTVAR   EQU   *                                                 Y02027
         LA    RTEMP,AIBWAP-IEDQAIB(RCVT) ADD SIZE OF AIB PREFIX Y02027
         CH    RTEMP,TCXSZAIB           SIZE GREATER THAN AIB    Y02027
         BNH   SIZEOK                   BRANCH IF NO             Y02027
LENERR   EQU   *                                               @ZA04032
         MVI   PECBERR,SOWACC           SET COMPLETION CODE      Y02027
         B     FREEUP                   RETURN TO RI             Y02027
SIZEOK   EQU   *                                                 Y02027
*                                                                Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
         ICM   RDEB,SEVEN,DCBEXLST+ONE  GET EXIT LIST ADDRESS    Y02027
         BZ    REC                      BRANCH IF NOT SPECIFIED  Y02027
CKLOOP   EQU   *                                                 Y02027
         TM    ZERO(RDEB),CKPTFLP       CHECK FOR CHECKPOINT   @ZA03744
         BO    SETCKPT1                 YES, BR                @ZA03744
         TM    ZERO(RDEB),EIGHTY        END OF EXIT LIST       @ZA03744
         BO    REC                      YES, BR TO CONT        @ZA03744
         LA    RDEB,FOUR(RDEB)          BUMP TO NEXT ENTRY     @ZA03744
         B     CKLOOP                   CONT SCAN              @ZA03744
SETCKPT1 EQU   *                                               @ZA03744
         ICM   RTEMP,FOUR,ZERO(RDEB)    GET ENTRY INDICATOR    @ZA03744
REC      EQU   *                                                 Y02027
         IC    RTEMP,DCBRECFM           GET RECFM FOR AIB        Y02027
         ICM   RTEMP,TWO,DCBOPTCD       GET OPTCD FOR AIB        Y02027
         ST    RTEMP,AIBEXLFP-ONE       STORE WITH EXLST FLAG  @ZA03744
*                                        IN AIB                @ZA03744
         ST    RPEWA,AIBPPEWA           PUT PEWA ADDR IN AIB     Y02027
         MVC   AIBPCBAD(4),PEPCBAD      PUT PCB ADDR IN AIB      Y02027
         ST    RPECB,AIBECBA            STORE ADDR OF ECB IN PECBY02027
*                                       IN AIB (WAITED ON IN EB) Y02027
         ST    RPECB,PEWAECBA           STORE ECB ADDR IN PEWA   Y02027
*                                       POSTED BY IEDQEC         Y02027
         LA    RPEB,AIBWAP              ADDR OF WORKAREA IN AIB  Y02027
         ST    RPEB,AIBWAPTR            STORE IN AIB             Y02027
         ST    RPEB,PEWAWA              AND STORE IN PEWA        Y02027
         LR    RENTRY,RCVT              PUT SIZE IN ODD REGISTERSY02027
         MVCL  RPEB,RETURN              MOVE DATA FROM USERS TO  Y02027
*                                       AIB'S WORKAREA           Y02027
*                                       RPEB=AIBWAP, RETURN=USERSY02027
*                                       WORKAREA ADDR, RCVT=SIZE Y02027
*                                                                Y02027
*              SET UP RCB                                        Y02027
*                                                                Y02027
         MVI   AIBPRI,PUTPRI            SET PRIORITY OF POST     Y02027
         LA    RPEB,PEWAQCB             PUT QCB ADDR IN RCB    @OZ27843
         STCM  RPEB,SEVEN,AIBQCBA       PUT QCB ADDR IN RCB    @OZ27843
         LR    RPEB,RPARM               SAVE AIB ADDR            Y02027
         LA    RPARM,AIBKEY             SET REG 1 = RCB ADDRESS  Y02027
         BAL   RETURN,TPOSTSUB          TPOST RCB TO ASYC READY QY02027
*                                                                Y02027
*              WAIT ON ECB IN PECB                               Y02027
*                                                                Y02027
         LA    RETURN,PWRETURN          GET RETURN ADDR FROM WAITY02027
         STCM  RETURN,SEVEN,RBOPSW+FIVE(RSVRB) AND STORE IN      Y02027
*                                       RIGHT HALF OF PSW IN SVRBY02027
         STM   RZERO,RENTRY,TCBGRS-IEDQTCB(RTCB) SAVE REGISTERS  Y02027
*                                       IN TCB                   Y02027
         LA    RZERO,ONE                WAIT COUNT               Y02027
         LA    RPARM,PECBECB            ADDRESS OF ECB           Y02027
         L     RCVT,CVTPTR              GET CVT ADDRESS          Y02027
         L     RENTRY,CVTVWAIT-CVTMAP(RCVT) GET BRANCH ENTRY     Y02027
*                                       TO WAIT                  Y02027
         BALR  RETURN,RENTRY            BRANCH TO WAIT           Y02027
*                                                                Y02027
*              MCP HAS POSTED A. P. ECB COMPLETE                 Y02027
*                                                                Y02027
         EJECT
PWRETURN EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            SET GOOD RETURN CODE     Y02027
         LR    RPARM,RPEB               GET SAVED AIB ADDRESS    Y02027
         L     RPECB,AIBECBA            ADDR OF PECB AND ECB     Y02027
         MVI   PECBFLAG,ZERO            INITIALIZE TO ZERO       Y02027
         MVC   PECBERR(1),PECBECB+THREE SAVE COMPLETION CODE     Y02027
*                                                                Y02027
*              CHECK FOR EXIT AND MOVE COMPLETION CODE           Y02027
*                                                                Y02027
         CLI   AIBEXLFP,ZERO            CK/PT EXIT TO BE TAKEN   Y02027
         BE    FREEUP                   BRANCH IF NO             Y02027
         MVI   PECBFLAG,CKPTFLG         SET EXIT TO BE TAKEN     Y02027
*                                                                Y02027
FREEUP   EQU   *                                                 Y02027
         MVI   AIBSTATE,AIBFREE         FREE AIB                 Y02027
         B     EXIT                     BRANCH TO RETURN         Y02027
*                                                                Y02027
         DROP  RDCB                                              Y02027
         DROP  RPECB                                             Y02027
         DROP  RDEB                                              Y02027
         DROP  RPEWA                                             Y02027
         DROP  RPARM                    MAKE REG1 AVAILABLE      Y02027
         TITLE '''POINT FUNCTION'''
POINT    EQU   *                                                 Y02027
*                                                                Y02027
*                        POINT FUNCTION                          Y02027
*                                                                Y02027
*              REGISTER EQUATES FOR POINT FUNCTION               Y02027
*RDCB    EQU   10                       ADDRESS OF DCB           Y02027
*RPEWA   EQU   11                       ADDRESS OF PEWA          Y02027
*RPECB   EQU   12                       ADDRESS OF PECB          Y02027
*                                                                Y02027
*              ADDRESSABILITY                                    Y02027
*                                                                Y02027
         USING IEDQPECB,RPECB           PECB ADDRESSABILITY      Y02027
         USING IHADCB,RDCB              DCB ADDRESSABILITY       Y02027
         USING IEDQDEB,RDEB             DEB ADDRESSABILITY       Y02027
         USING IEDQPEWA,RPEWA           PEWA ADDRESSABILITY      Y02027
*                                                                Y02027
         L     RPECB,ZERO(RPARM)        GET ECB ADDR           @OZ07830
         L     RDCB,REG5(RSVRB)         GET REG 5 FROM SVRB-     Y02027
*                                       DCB FROM RM              Y02027
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          Y02027
         ICM   RPEWA,SEVEN,DEBPEWA      GET PEWA ADDRESS         Y02027
         L     RDEB,REG2(RSVRB)         GET REG 2 FROM SVRB      Y02027
*                                       ADDRESS OF RETRIEVE DATA Y02027
         CLI   EIGHT(RDEB),BLANK        RETRIEVAL TERMINATION    Y02027
         BNE   GO                       BRANCH IF NO             Y02027
*                                                                Y02027
*              RETRIEVE TERMINATION                              Y02027
*                                                                Y02027
         NI    PEWAOPTC,AVTEFF-PARTBUF  TURN OFF PARTIAL BUFFER  Y02027
         OI    PEWAGSW,RETRIEVE         SET RETRIEVE OK FLAG     Y02027
         NI    PEWARTVE+THREE,AVTEFF-MRM RESET FIRST TIME SWITCH Y02027
         MVI   PEWARTVE+TWO,BLANK       INDICATE END OF RETRIEVE Y02027
         SR    RENTRY,RENTRY            NORMAL RETURN CODE       Y02027
         B     EXIT                     RETURN                   Y02027
*                                                                Y02027
GO       EQU   *                                                 Y02027
         CLI   ZERO(RDEB),ZERO          MULTIPLE RETRIEVE MODE   Y02027
         BNE   RETCONT                  BRANCH IF NO             Y02027
*                                                                Y02027
*              MULTIPLE RETRIEVAL                                Y02027
*                                                                Y02027
         NI    PEWARTVE+THREE,AVTEFF-MRM RESET THE FIRST TIME SW Y02027
         ICM   RDCB,ONE,PEWARTVE+TWO    IS I OR O SPECIFIED      Y02027
         BNZ   MULTRET1                 BRANCH IF NO             Y02027
         MVC   PEWARTVE+TWO(1),EIGHT(RDEB)  ELSE MOVE ORIGINAL   Y02027
MULTRET1 EQU   *                                                 Y02027
         LA    RENTRY,INVTERM           POSSIBLE ERROR CODE      Y02027
         ICM   RDCB,SEVEN,PEWARTVE+FIVE TERMINAL ADDRESS         Y02027
         BZ    EXIT                     BRANCH IF NO RC=8        Y02027
         LA    RENTRY,INVSEQ            POSSIBLE ERROR CODE      Y02027
         ICM   RDCB,THREE,PEWARTVE+THREE SEQUENCE NUMBER         Y02027
         BZ    EXIT                     BRANCH IF NO RC=4        Y02027
         SR    RENTRY,RENTRY            NORMAL RETURN CODE       Y02027
         OI    PEWAOPTC,RTVFLG          TURN ON RETRIEVE MODE    Y02027
         B     EXIT                     BRANCH TO RETURN         Y02027
RETCONT  EQU   *                                                 Y02027
*              GET AIB                                           Y02027
*                                                                Y02027
         BAL   RETURN,AIBSUBR           GET AIB                  Y02027
         USING IEDQAIB,RPARM            AIB ADDRESSABILITY       Y02027
*                                       RETURNED IN REG 1        Y02027
*                                                                Y02027
*              INITIALIZE AIB FOR RETRIEVE CHECKING              Y02027
*                                                                Y02027
         MVC   AIBSTANM(11),ZERO(RDEB)  MOVE RETRIEVE DATA FROM  Y02027
*                                       USER AREA TO AIB         Y02027
         ST    RPEWA,AIBRPEWA           STORE PEWA ADDR IN AIB   Y02027
         XC    PEWAECBA,PEWAECBA        ENSURE ECB IS NOT POSTED Y02027
*                                       BY IEDQEW                Y02027
         ST    RPECB,AIBECBA            ADDRESS OF ECB IN AIB    Y02027
         LA    RDCB,AIBWAR              ADDR OF WORKAREA IN AIB  Y02027
         ST    RDCB,AIBWAPTR            STORE IN AIB             Y02027
         ICM   RDCB,SEVEN,PEPCBAD+ONE   ADDRESS OF DCB           Y02027
         ST    RDCB,AIBPCBAD            IN AIB                   Y02027
*                                                                Y02027
*              SET UP RCB                                        Y02027
*                                                                Y02027
         MVI   AIBPRI,PTPRI             SET PRIORITY OF POST     Y02027
         MVC   AIBQCBA(3),TCXPNTQ+ONE   GET QCB ADDR FOR ES      Y02027
         LR    RPEB,RPARM               SAVE AIB ADDRESS         Y02027
         LA    RPARM,AIBKEY             SET REG 1 = RCB ADDRESS  Y02027
         BAL   RETURN,TPOSTSUB          TPOST RCB TO ASYC READY QY02027
*                                                                Y02027
*              WAIT ON ECB IN PECB                               Y02027
*                                                                Y02027
         LA    RETURN,RRETURN           GET RETURN ADDR FROM WAITY02027
         STCM  RETURN,SEVEN,RBOPSW+FIVE(RSVRB) AND STORE IN      Y02027
*                                       RIGHT HALF OF PSW IN SVRBY02027
         STM   RZERO,RENTRY,TCBGRS-IEDQTCB(RTCB) SAVE REGISTERS  Y02027
*                                       IN TCB                   Y02027
         XC    PECBECB(FOUR),PECBECB    CLEAR ECB                Y02027
         LA    RZERO,ONE                WAIT COUNT               Y02027
         LA    RPARM,PECBECB            ADDRESS OF ECB           Y02027
         L     RCVT,CVTPTR              GET CVT ADDRESS          Y02027
         L     RENTRY,CVTVWAIT-CVTMAP(RCVT)  GET BRANCH ENTRY TO Y02027
*                                       WAIT                     Y02027
         BALR  RETURN,RENTRY            BRANCH TO WAIT           Y02027
         EJECT                                                   Y02027
*                                                                Y02027
*              MCP (IEDQES) HAS POSTED A. P. ECB COMPLETE        Y02027
*                                                                Y02027
RRETURN  EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            CLEAR RETURN CODE        Y02027
         LR    RPARM,RPEB               GET SAVED AIB ADDRESS    Y02027
         L     RPECB,AIBECBA            ADDRESS OF ECB IN PECB   Y02027
         ICM   RENTRY,SEVEN,ONE(RPECB)  GET COMPLETION CODE      Y02027
*                                       SET RETURN CODE IN REG15 Y02027
         BNZ   RELAIB                   BRANCH IF ERROR          Y02027
         TM    NINE(RDEB),MULTSEQ       TEST SEQ FIELD FOR       Y02027
*                                       MULTIPLE RETRIEVAL       Y02027
         BZ    RELAIB                   BRANCH IF NO             Y02027
         MVI   ZERO(RDEB),ZERO          SET MULTI-RETRIEVAL MODE Y02027
*                                       SWITCH IN USERS WORKAREA Y02027
         L     RPEWA,AIBRPEWA           GET PEWA ADDRESS         Y02027
         OI    PEWARTVE+THREE,MRM       ENSURE FLAG SET          Y02027
RELAIB   EQU   *                                                 Y02027
         MVI   AIBSTATE,AIBFREE         FREE AIB                 Y02027
         B     EXIT                     BRANCH TO RETURN TO RM   Y02027
         DROP  RDCB                                              Y02027
         DROP  RPECB                                             Y02027
         DROP  RDEB                                              Y02027
         DROP  RPEWA                                             Y02027
         DROP  RPARM                    MAKE REG1 AVAILABLE      Y02027
         TITLE '''CHECK REQUEST FUNCTION'''
*                                                                Y02027
*                        CHECK REQUEST FUNCTION                  Y02027
*                                                                Y02027
CKREQ    EQU   *                                                 Y02027
         LA    RENTRY,QNBNOCKR          SET ERROR CODE           Y02027
         L     RCECB,ZERO(RPARM)        GET ECB ADDRESS          Y02027
         TM    TCXCKPM,MCPCKPT          CHECK FOR ACTIVE CHECK   Y02027
*                                       POINT TASK               Y02027
         BNO   EXIT                     BRANCH IF NO RC = 04     Y02027
         CLI   TCXNCKPR,ZERO            CHECK FOR CKREQS         Y02027
*                                       SPECIFIED ON INTRO       Y02027
         BE    EXIT                     BRANCH IF NO CKREQ RCDS  Y02027
         BAL   RETURN,AIBSUBR           GET AIB                  Y02027
         USING IEDQAIB,RPARM            ADDRESSABILITY OF AIB    Y02027
*                                                                Y02027
*              INITIALIZE AIB FOR CHECK REQUEST                  Y02027
*                                                                Y02027
         LA    RCECB,ZERO(RCECB)        CLEAR HIGH ORDER BYTE    Y02027
         ST    RCECB,AIBECBA            STORE ECB ADDRESS IN AIB Y02027
         L     RWORK,REG11(RSVRB)       GET PEWA ADDRESS AS      Y02027
*                                       FOUND BY IEDQNB          Y02027
         ST    RWORK,AIBCPEWA           STORE FIRST PEWA IN AIB  Y02027
         L     RWORK,PEPCBAD-IEDQPEWA(RWORK) GET PCB ADDR        Y02027
         ST    RWORK,AIBPCBAD           STORE IN AIB             Y02027
         MVI   AIBKEY,CRECKREQ          SET KEY FOR CKREQ        Y02027
*                                                                Y02027
*              ENTRY POINT FOR CHECK REQUEST FROM TCHNG          Y02027
*              AIBKEY=X'10'                                      Y02027
*              ECB HAS BEEN CLEARED                              Y02027
*              TERM ENTRY OFFSET HAS BEEN STORED IN AIBOFFS      Y02027
*                                                                Y02027
CKPT     EQU   *                                                 Y02027
         MVC   AIBCKECB(4),AIBECBA      PUT ECB IN CRE           Y02027
*              SET UP RCB                                        Y02027
         L     RWORK,TCXAVT             ADDRESS OF AVT           Y02027
         LA    RWORK,AVTCKPTB-IEDQAVTD(RWORK)  ADDR OF CK PT QCB Y02027
         STCM  RWORK,SEVEN,AIBQCBA      PUT IN RCB               Y02027
         MVI   AIBPRI,PRIAPCKP          SET PRIORITY             Y02027
         LR    RPEB,RPARM               SAVE AIB ADDRESS         Y02027
         LA    RPARM,AIBKEY             SET REG 1 = RCB ADDRESS  Y02027
         BAL   RETURN,TPOSTSUB          TPOST RCB TO ASYC READY QY02027
*                                                                Y02027
*              WAIT ON ECB IN RCB                                Y02027
*                                                                Y02027
         LA    RETURN,CPRETURN          GET RETURN ADDR FROM WAITY02027
         STCM  RETURN,SEVEN,RBOPSW+FIVE(RSVRB) AND STORE IN      Y02027
*                                       RIGHT HALF OF PSW IN SVRBY02027
         STM   RZERO,RENTRY,TCBGRS-IEDQTCB(RTCB) SAVE REGISTERS  Y02027
         LA    RZERO,ONE                WAIT COUNT               Y02027
         L     RPARM,AIBECBA-IEDQAIB(RPEB) ADDRESS OF ECB        Y02027
         L     RCVT,CVTPTR              GET CVT ADDRESS          Y02027
         L     RENTRY,CVTVWAIT-CVTMAP(RCVT) GET ADDRESS OF BRANCHY02027
*                                       ENTRY TO WAIT            Y02027
         BALR  RETURN,RENTRY            BRANCH TO WAIT           Y02027
*                                                                Y02027
*              MCP (IEDQNQ) HAS POSTED A.P. ECB COMPLETE         Y02027
*                                                                Y02027
CPRETURN EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            SET GOOD RETURN CODE     Y02027
         LR    RPARM,RPEB               GET SAVED AIB ADDRESS    Y02027
         MVI   AIBSTATE,AIBFREE         SET AIB AS FREE          Y02027
         B     EXIT                     EXIT                     Y02027
         DROP  RPARM                    MAKE REG1 AVAILABLE      Y02027
         TITLE '''QUEUE RESET FUNCTION'''
QRESET   EQU   *                                                 Y02027
*                                                                Y02027
*                        QUEUE RESET FUNCTION                    Y02027
*                                                                Y02027
*              REGISTER EQUATES FOR QRESET FUNCTION              Y02027
*RDCB    EQU   10                       ADDRESS OF DCB           Y02027
*RPEWA   EQU   11                       ADDRESS OF PEWA          Y02027
*                                                                Y02027
*              ADDRESSABILITY                                    Y02027
*                                                                Y02027
         USING IHADCB,RDCB              DCB ADDRESSABILITY       Y02027
         USING IEDQPEWA,RPEWA           PEWA ADDRESSABILITY      Y02027
         USING IEDQDEB,RDEB             DEB ADDRESSABILITY       Y02027
         L     RWORK,ZERO(RPARM)        GET ECB ADDRESS          Y02027
         LA    RENTRY,QRERR             POSSIBLE ERROR CODE      Y02027
         L     RDCB,REG10(RSVRB)        GET REG 10 FROM SVRB     Y02027
*                                       DCB FROM GR              Y02027
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          Y02027
         ICM   RPEWA,SEVEN,DEBPEWA      GET PEWA ADDRESS         Y02027
*                                                                Y02027
*              TEST TO SEE IF QRESET CAN BE DONE NOW             Y02027
*                                                                Y02027
         TM    PEWAGSW+ONE,ARESET       QRESET ALLOWED ON QUEUE  Y02027
         BNO   EXIT                     BRANCH IF NO RC= X'10'   Y02027
         TM    PEWAGSW+ONE,RESETACT     QRESET CURRENTLY ACTIVE  Y02027
         BO    EXIT                     BRANCH IF YES RC = X'10' Y02027
         LA    RDCB,EPAGE               IS AIB SIZE 512 OR       Y02027
         CH    RDCB,TCXSZAIB            GREATER                  Y02027
         BH    EXIT                     BRANCH IF NO - AIB NOT   Y02027
*                                       BIG ENOUGH FOR WORKAREA  Y02027
*                                                                Y02027
*              GET AIB                                           Y02027
*                                                                Y02027
         BAL   RETURN,AIBSUBR           GET AIB                  Y02027
         USING IEDQAIB,RPARM            AIB ADDRESSABILITY       Y02027
*                                       RETURNED IN REG 1        Y02027
*                                                                Y02027
*              INITIALIZE AIB WITH INFORMATION NEEDED BY IEDQGQ  Y02027
*                                                                Y02027
         LA    RPEWA,0(RPEWA)           CLEAR HI-ORDER BYTE      Y02027
         ST    RPEWA,AIBQPEWA           STORE PEWA ADDR IN AIB   Y02027
         L     RDCB,REG2(RSVRB)         GET REG 2 FROM SVRB      Y02027
*                                       ADDR OF USER INFO        Y02027
         MVC   AIBDESTN(10),ZERO(RDCB)  MOVE DESTINATION NAME    Y02027
*                                       AND SEQENCE NUMBER TO AIBY02027
         L     RDCB,REG6(RSVRB)         GET REG 6 FROM SVRB      Y02027
*                                       MAXIMUM SEQ NUMBER       Y02027
         ST    RDCB,AIBMAXNO            AND STORE IN AIB         Y02027
         LA    RWORK,ZERO(RWORK)        CLEAR HIGH ORDER BYTE    Y02027
         ST    RWORK,AIBECBA            STORE ECB ADDR IN AIB    Y02027
         ICM   RWORK,SEVEN,PEPCBAD+ONE  GET PCB ADDRESS AND      Y02027
         ST    RWORK,AIBPCBAD           STORE IN AIB             Y02027
         LA    RWORK,AIBWAQR            ADDR OF WORKAREA IN AIB  Y02027
         ST    RWORK,AIBWAPTR           STORE IN AIB             Y02027
*                                                                Y02027
*              SET UP RCB                                        Y02027
*                                                                Y02027
         MVI   AIBPRI,PRIRTBFR          SET X'D4' PRIORITY       Y02027
         MVC   AIBQCBA(3),TCXQRQ+ONE    GET QCB ADDRESS          Y02027
         LR    RPEB,RPARM               SAVE AIB ADDRESS         Y02027
         LA    RPARM,AIBKEY             SET REG 1 = RCB ADDRESS  Y02027
         BAL   RETURN,TPOSTSUB          TPOST RCB TO ASYC READY QY02027
*                                                                Y02027
*              WAIT ON ECB IN IEDQGR                             Y02027
*                                                                Y02027
         LA    RETURN,QRETURN           GET RETURN ADDR FROM WAITY02027
         STCM  RETURN,SEVEN,RBOPSW+FIVE(RSVRB) AND STORE IN      Y02027
*                                       RIGHT HALF OF PSW IN SVRBY02027
         STM   RZERO,RENTRY,TCBGRS-IEDQTCB(RTCB) SAVE REGISTERS  Y02027
*                                       IN TCB                   Y02027
         LA    RZERO,ONE                WAIT COUNT               Y02027
         L     RPARM,AIBECBA-IEDQAIB(RPEB) GET ECB ADDR          Y02027
         L     RCVT,CVTPTR              GET CVT ADDR             Y02027
         L     RENTRY,CVTVWAIT-CVTMAP(RCVT) GET BRANCH ENTRY TO  Y02027
*                                       WAIT                     Y02027
         BALR  RETURN,RENTRY            BRANCH TO WAIT           Y02027
*                                                                Y02027
*              MCP (IEDQGQ) HAS POSTED A. P. ECB COMPLETE        Y02027
*                                                                Y02027
QRETURN  EQU   *                                                 Y02027
         LR    RPARM,RPEB               GET AIB ADDRESS          Y02027
         LH    RENTRY,AIBRETCD          GET RETURN CODE AS SET   Y02027
*                                       BY IEDQGQ                Y02027
         LH    RZERO,AIBMSGNO           GET MSG # IF AVAILABLE   Y02027
*                                       AS SET BY IEDQGQ         Y02027
         MVI   AIBSTATE,AIBFREE         FREE AIB                 Y02027
         B     EXIT                     RETURN TO IEDQGR         Y02027
         DROP  RDCB                                              Y02027
         DROP  RPEWA                                             Y02027
         DROP  RDEB                                              Y02027
         DROP  RPARM                    MAKE REG 1 AVAILABLE     Y02027
         TITLE '''POST ECB FUNCTION'''
*                                                                Y02027
*                        POST ECB IN MEMORY COMPLETE             Y02027
*                                                                Y02027
*              RPARM POINTS TO A ONE OR TWO WORD PARAMETER LIST  Y02027
*                   THE FIRST WORD CONTAINS THE ADDRESS OF ECB   Y02027
*                                                                Y02027
*              PREPARE INTERFACE WITH SYSTEM POST ROUTINE        Y02027
*                                                                Y02027
POSTECB  EQU   *                                                 Y02027
         L     RCECB,ZERO(RPARM)        GET ADDRESS OF ECB TO BE Y02027
         LA    RCECB,ZERO(RCECB)        POSTED - CLEAR HI-ORDER  Y02027
         SR    RCOMPC,RCOMPC            SET COMPLETION CODE TO 0 Y02027
         L     RENTRY,CVTPTR            GET CVT ADDRESS          Y02027
         L     RENTRY,CVT0PT01-CVTMAP(RENTRY) ADDRESS OF BRANCH  Y02027
*                                       ENTRY TO POST ROUTINE    Y02027
         BALR  RETURN,RENTRY            BRANCH TO POST           Y02027
         B     EXIT                     RETURN TO CALLER         Y02027
         TITLE '''DISK I/O FUNCTION'''
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*              ISSUE A STARTIO MACRO TO START I/O TO A       * @Z40X9DG
*              MESSAGE QUEUES DISK. BEFORE THE MACRO IS      * @Z40X9DG
*              ISSUED, CALL THE START I/O APPENDAGE          * @Z40X9DG
*              ADDRESSED BY THE DEB FOR INITIAL SETUP.       * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         USING IOSB,RIOSB               IOSB ADDRESSABILITY    @Z40X9DG
         USING IOSBE,RIOSBE             IOSBE ADDRESSABILITY   @Z40X9DG
         USING SRBSECT,RPARM            SRB ADDRESSABILITY     @Z40X9DG
STARTIO  EQU   *                                               @Z40X9DG
         LR    RIOSBE,RPARM             GET PARM LIST ADDR     @Z40X9DG
*                                       (PARM LIST IS BUILT IN @Z40X9DG
*                                       IOSBE)                 @Z40X9DG
         L     RIOSB,IOSBEIOS-ONE       GET IOSB ADDRESS       @Z40X9DG
         L     RCPB,IOSBECPB-ONE        GET CPB ADDRESS        @Z40X9DG
         L     RENTRY,IOSDSID           GET DEB ADDRESS        @Z40X9DG
         L     RENTRY,SIOA(,RENTRY)     GET ADDR OF SIO APPEN  @Z40X9DG
*                                       FROM THE DEB           @Z40X9DG
         BALR  RETURN,RENTRY            GO TO SIO APPENDAGE    @Z40X9DG
*                                       WITH REGS AS FOLLOWS:  @Z40X9DG
*                                         R2  - ADDR OF IOSB   @Z40X9DG
*                                         R7  - ADDR OF IOSBE  @Z40X9DG
*                                         R11 - ADDR OF CPB    @Z40X9DG
*                                         R14 - RETURN ADDRESS @Z40X9DG
*                                         R15 - ENTRY ADDR     @Z40X9DG
*                                       APPENDAGE ALTERS       @Z40X9DG
*                                       REGISTERS 1, 10, 11    @Z40X9DG
         L     RPARM,IOSSRB             GET SRB ADDRESS        @Z40X9DG
         XC    FOUR(SRBSIZE-FOUR,RPARM),FOUR(RPARM) CLEAR SRB  @Z40X9DG
         STCM  RIOSB,ADD,SRBPARM+ONE    POINT SRB TO IOSB      @Z40X9DG
         ST    RBASE,EXTSA(,RSVRB)      SAVE BASE REGISTER     @Z40X9DG
         LR    RTEMP,RSVRB              SAVE SVRB ADDR         @Z40X9DG
*                                       REG 13 IS THE ONLY REG @Z40X9DG
*                                       NOT DESTROYED BY       @Z40X9DG
*                                       STARTIO MACRO          @Z40X9DG
         STARTIO SRB=(1),TCB=0          ISSUE STARTIO          @Z40X9DG
         LR    RSVRB,RTEMP              RESTORE SVRB ADDR      @Z40X9DG
         L     RBASE,EXTSA(,RSVRB)      RESTORE BASE REG       @Z40X9DG
         B     EXIT                     RETURN TO SYSTEM       @Z40X9DG
         SPACE 1                                               @Z40X9DG
         DROP  RPARM,RIOSB,RIOSBE                              @Z40X9DG
         TITLE 'STARTIO FOR 3705 I/O'                          @G36XRDV
***************************************************************@G36XRDB
*                                                              @G36XRDB
* THIS ROUTINE ISSUES A STARTIO MACRO FOR 3705 I/O             @G36XRDB
*                                                              @G36XRDB
***************************************************************@G36XRDB
         USING PLSIO,RPARM                                     @G36XRDB
         USING IOSB,RIOSB                                      @G36XRDB
*                                                              @G36XRDB
NCPIO    DS    0H                                              @G36XRDV
         ICM   RIOSB,7,PLIOSB      GET IOSB ADDRESS            @G36XRDB
         SR    RWORK,RWORK         CLEAR REG                   @G36XRDB
         STC   RWORK,IOSFLA        ZERO FLAG BYTE              @G36XRDB
         MVC   IOSVST,PLSTART      START OF CHANNEL PROGRAM    @G36XRDB
         L     RWORK,PLSTART       GET REAL ADDRESS OF...      @G36XRDB
         LRA   RWORK,0(RWORK)      ...START OF CHANNEL PROGRAM @G36XRDB
         DROP  RPARM                                           @G36XRDV
         ST    RWORK,IOSRST        PUT REAL ADDR IN IOSB       @G36XRDB
         L     RENTRY,IOSDSID      ADDR OF DEB                 @G36XRDB
         L     RENTRY,SIOA(,RENTRY) ADDR OF 3705 SIO APPEND.   @G36XRDB
         LR    RPARM,RIOSB         ADDR OF IOSB IN REG 1       @G36XRDB
         BALR  RETURN,RENTRY       TRANSLATE CHANNEL PROGRAM   @G36XRDB
*                                  FROM VIRTUAL TO REAL        @G36XRDB
         L     RPARM,IOSSRB        SRB ADDRESS                 @G36XRDB
         USING SRBSECT,RPARM                                   @G36XRDV
         XC    FOUR(SRBSIZE-FOUR,RPARM),FOUR(RPARM) CLEAR SRB  @G36XRDB
         STCM  RIOSB,7,SRBPARM+ONE POINT SRB TO IOSB           @G36XRDB
         ST    RBASE,EXTSA(RSVRB)  SAVE BASE REG               @G36XRDB
         LR    RTEMP,RSVRB         SAVE SVRB ADDRESS           @G36XRDB
*                                  REG13 IS THE ONLY REG NOT   @G36XRDB
*                                  DESTROYED BY STARTIO MACRO  @G36XRDB
*                                                              @G36XRDB
         STARTIO SRB=(1),TCB=0     ISSUE START I/O             @G36XRDB
*                                                              @G36XRDB
         LR    RSVRB,RTEMP         RESTORE SVRB ADDRESS        @G36XRDB
         L     RBASE,EXTSA(,RSVRB) RESTORE BASE REG            @G36XRDB
         B     EXIT                EXIT                        @G36XRDB
         DROP  RPARM,RIOSB                                     @G36XRDB
         TITLE 'SCHEDULE SRB FOR POST'
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        SCHEDULE AN SRB TO RUN IN ANOTHER MEMORY. THE       * @Z40X9DG
*        CODE THAT RUNS UNDER THE SRB WILL POST AN ECB       * @Z40X9DG
*        COMPLETE. INPUT AT ENTRY POINT SCHSRB IS:           * @Z40X9DG
*              REGISTER 1  - PARAMETER LIST ADDRESS          * @Z40X9DG
*              REGISTER 3  - CVT ADDRESS                     * @Z40X9DG
*              REGISTER 4  - TCB ADDRESS                     * @Z40X9DG
*              REGISTER 5  - SVRB ADDRESS                    * @Z40X9DG
*              REGISTER 6  - TCX ADDRESS                     * @Z40X9DG
*              REGISTER 7  - ASCB ADDRESS                    * @Z40X9DG
*              REGISTER 9  - BASE ADDRESS                    * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         USING SSRBSECT,RWORK           PARM LIST ADDRESS      @Z40X9DG
SCHSRB   EQU   *                                               @Z40X9DG
         LR    RWORK,RPARM              GET PARM LIST ADDR     @Z40X9DG
         B     GETSRB                   GET AN SRB             @Z40X9DG
         SPACE 3                                               @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        GET AN SRB AND MARK IT 'IN USE'                     * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         USING PSRBSECT,RPARM           PREFIX ADDRESSABILITY  @Z40X9DG
SRBALLOC EQU   *                                               @Z40X9DG
         BAL   RDEB,SRBGETM             GET MORE SRB'S         @Z40X9DG
GETSRB   EQU   *                                               @Z40X9DG
         LA    RPARM,TCXSRBS            POINT TO TCX AS DUMMY  @Z40X9DG
*                                       FIRST SRB PREFIX       @Z40X9DG
NEXTSRB  EQU   *                                               @Z40X9DG
         ICM   RPARM,ADD,PSRBLINK       GET NEXT SRB ADDR      @Z40X9DG
         BZ    SRBALLOC                 NO MORE SRB'S -        @Z40X9DG
*                                       GO GET MORE            @Z40X9DG
         TS    PSRBTSFL                 IS SRB AVAILABLE       @Z40X9DG
         BNZ   NEXTSRB                  NO, BRANCH             @Z40X9DG
         LA    RPARM,PSRBSRB            GET START OF SRB       @Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        INITIALIZE THE SRB FROM THE PARAMETER LIST AND      * @Z40X9DG
*        SCHEDULE THE SRB FOR THE POST FUNCTION.             * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         USING SRBSECT,RPARM            SRB ADDRESSABILITY     @Z40X9DG
         MVC   SRBASCB,SSRBASCB         GET ASCB ADDRESS       @Z40X9DG
         MVC   SRBPASID,SSRBASID        GET ASID               @Z40X9DG
         MVC   SRBPTCB,SSRBTCB          GET TCB ADDRESS        @Z40X9DG
         MVC   SRBPARM(ONE),SSRBCC      SET COMPLETION CODE    @Z40X9DG
         MVC   SRBPARM+ONE(THREE),SSRBECBA GET ECB ADDRESS     @Z40X9DG
         SPACE 1                                               @Z40X9DG
         SCHEDULE SRB=(1),SCOPE=LOCAL   SCHEDULE SRB           @Z40X9DG
         SPACE 1                                               @Z40X9DG
         SLR   RENTRY,RENTRY            RETURN CODE = 0        @Z40X9DG
         B     EXIT                     RETURN TO CALLER       @Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        THIS SUBROUTINE WILL GETMAIN SRB'S TO BE USED FOR   * @Z40X9DG
*        THE 'SCHEDULE SRB FOR POST' FUNCTION. A POOL OF     * @Z40X9DG
*        SRB'S IS CHAINED OFF THE TCX (TCXSRBS). EACH TIME   * @Z40X9DG
*        ADDITIONAL SRB'S ARE NEEDED, 8 SRB'S WITH PREFIXES  * @Z40X9DG
*        ARE OBTAINED. EACH SRB IS OBTAINED WITH A FOUR-BYTE * @Z40X9DG
*        PREFIX WHICH CONTAINS THE TEST-AND-SET FLAGS AND    * @Z40X9DG
*        THE LINK FIELD. SRB'S ARE OBTAINED FROM SUBPOOL 245 * @Z40X9DG
*        IN SQA (FIXED STORAGE) IN KEY 0. THE SRB POOL IS    * @Z40X9DG
*        FREED BY IEDQOT01.                                  * @Z40X9DG
*                                                            * @Z40X9DG
*        INPUT:     REGISTER 4  = TCB ADDRESS                * @Z40X9DG
*                   REGISTER 7  = ASCB ADDRESS               * @Z40X9DG
*                   REGISTER 8  = RETURN ADDRESS             * @Z40X9DG
*                   REGISTER 9  = BASE REGISTER              * @Z40X9DG
*                   (REGS 0-3,10,14,15 ARE USED AS WORK REGS)* @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
SRBGETM  EQU   *                                               @Z40X9DG
         LA    RZERO,SRBBLKSZ           GET SIZE OF BLOCK OF   @Z40X9DG
*                                       SRB'S WITH PREFIXES    @Z40X9DG
         LR    RPEB,RASCB               SAVE ASCB ADDRESS      @Z40X9DG
         SPACE 1                                               @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        BRANCH ENTRY TO GETMAIN EXPECTS LENGTH IN REG 0,    * @Z40X9DG
*        TCB ADDRESS IN REG 4, AND ASCB ADDRESS IN REG 7.    * @Z40X9DG
*        MACRO EXPANSION USES REGS 1,3,14, AND 15. REG 7 IS  * @Z40X9DG
*        DESTROYED BY GETMAIN AND SHOULD BE SAVED. GETMAINED * @Z40X9DG
*        AREA ADDRESS IS RETURNED IN REG 1.                  * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         SPACE 1                                               @Z40X9DG
         GETMAIN RU,LV=(0),SP=SQA,KEY=SRBKEY,BRANCH=YES        @Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        INITIALIZE THE SRB'S AND CHAIN THEM OFF THE TCX.    * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         LR    RASCB,RPEB               RESTORE ASCB ADDRESS   @Z40X9DG
         LR    RPEB,RPARM               POINT TO SRB BLOCK     @Z40X9DG
         LA    RCVT,SRBBLKSZ            GET SIZE OF BLOCK AND  @Z40X9DG
*                                       SET PAD CHARACTER      @Z40X9DG
         SLR   RENTRY,RENTRY            CLEAR TO INDICATE NO   @Z40X9DG
*                                       BYTES MOVED FROM       @Z40X9DG
*                                       'FROM' FIELD           @Z40X9DG
         MVCL  RPEB,RETURN              CLEAR GETMAIN AREA     @Z40X9DG
*                                       ('RETURN' IS NOT USED) @Z40X9DG
         SPACE 1                                               @Z40X9DG
         LA    RZERO,SRBPOST            SRBEP ADDRESS          @Z40X9DG
         LA    RENTRY,SRBCLEAN          SRB CLEANUP ADDR       @Z40X9DG
         LA    RPEB,NUMSRBS             GET NUMBER OF SRB'S    @Z40X9DG
*                                       TO INITIALIZE          @Z40X9DG
         LR    RCOMPC,RPARM             SAVE POINTER TO 1ST    @Z40X9DG
*                                       SRB PREFIX             @Z40X9DG
         USING SRBSECT,RPARM            SRB ADDRESSABILITY     @Z40X9DG
INITSRB  EQU   *                                               @Z40X9DG
         LA    RCVT,PSRBSIZE+SRBSIZE(,RPARM) PTR TO NEXT SRB   @Z40X9DG
         ST    RCVT,PSRBLINK-ONE-PSRBSECT(,RPARM) SET LINK...  @Z40X9DG
*                                       ... AND TS FLAG        @Z40X9DG
         MVC   SRBID+PSRBSIZE,IDSRB     SET SRB ID             @Z40X9DG
         ST    RZERO,SRBEP+PSRBSIZE     SET ENTRY POINT FOR    @Z40X9DG
*                                       POST CODE UNDER SRB    @Z40X9DG
         ST    RENTRY,SRBRMTR+PSRBSIZE  SET CLEANUP ADDR       @Z40X9DG
         LR    RPARM,RCVT               POINT TO NEXT SRB      @Z40X9DG
         BCT   RPEB,INITSRB             IF ANOTHER SRB, THEN   @Z40X9DG
*                                       GO INIT IT             @Z40X9DG
         SH    RPARM,SIZE               BACK UP TO LAST SRB    @Z40X9DG
         L     RZERO,TCXSRBS            GET POINTER TO 1ST     @Z40X9DG
*                                       SRB ON CHAIN           @Z40X9DG
SRBLOOP  EQU   *                                               @Z40X9DG
         STCM  RZERO,ADD,PSRBLINK-PSRBSECT(RPARM) POINT LAST   @Z40X9DG
*                                       SRB IN NEW BLOCK TO    @Z40X9DG
*                                       CURRENT TOP SRB ON TCX @Z40X9DG
         CS    RZERO,RCOMPC,TCXSRBS     CHAIN NEW SRB'S ON TCX @Z40X9DG
         BNE   SRBLOOP                  IF CHAIN WAS UPDATED   @Z40X9DG
*                                       ASYNCHRONOUSLY, THEN   @Z40X9DG
*                                       TRY AGAIN              @Z40X9DG
         BR    RDEB                     RETURN TO CALLER       @Z40X9DG
         DROP  RPARM                                           @Z40X9DG
         TITLE '''IGC102-AQCTL SVC'''
RETURN90 LA    RENTRY,NINETY            INVALID FUNCTION CODE    Y02027
EXIT     EQU   *                                                 Y02027
         L     RETURN,REG15(RSVRB)      RESTORE RETURN REGISTER  Y02027
         RETURN
ABEND    EQU   *                                                 Y02027
         L     RPARM,ABEND047           ABEND 047 PROG NOT AUTHA Y02027
         ABEND (1)                      ABEND                  @Z40X9DG
         TITLE '''PURGE DISK I/O'''
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        THIS ENTRY POINT IS CALLED BY IOS WHEN A PURGE      * @Z40X9DG
*        HAS BEEN ISSUED. THIS IS NOT PART OF SVC 102.       * @Z40X9DG
*                                                            * @Z40X9DG
*        REGISTERS AT ENTRY:                                 * @Z40X9DG
*              REGISTER 1  - ADDRESS OF IOS PURGE INTERFACE  * @Z40X9DG
*                             BLOCK (IPIB)                   * @Z40X9DG
*              REGISTER 13 - ADDRESS OF 13-WORD SAVE AREA    * @Z40X9DG
*              REGISTER 14 - RETURN ADDRESS                  * @Z40X9DG
*              REGISTER 15 - ENTRY POINT                     * @Z40X9DG
*                                                            * @Z40X9DG
*        THE FUNCTION OF THIS ENTRY POINT IS TO RECOGNIZE    * @Z40X9DG
*        THAT AN IPIB IS FOR A HALT FOR TCAM AND THEN TO     * @Z40X9DG
*        DECHAIN THE SRB'S FROM THE IPIB.                    * @Z40X9DG
*                                                            * @Z40X9DG
*        THIS ENTRY POINT IS ADDRESSED BY THE VOID WHICH     * @Z40X9DG
*        IS INITIALIZED BY MESSAGE QUEUES OPEN AND RESET BY  * @Z40X9DG
*        IEDQOT01.                                           * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         USING *,RENTRY                 SET ROUTINE BASE       @Z40X9DG
         USING IPIB,RPARM               IPIB ADDRESSABILITY    @Z40X9DG
PURGE    EQU   *                                               @Z40X9DG
         TM    IPIBOPT,IPIBHALT         IS REQUEST FOR HALT    @Z40X9DG
         BZR   RETURN                   NO, RETURN TO CALLER   @Z40X9DG
         SPACE 1                                               @Z40X9DG
         STM   RZERO,RSVRB,ZERO(RTEMP)  SAVE REGS 0-5          @Z40X9DG
         SLR   RZERO,RZERO              CLEAR REGISTER         @Z40X9DG
         L     RSVRB,IPIBSRB            GET PTR TO CHAIN OF    @Z40X9DG
*                                       SRB'S                  @Z40X9DG
CLRIPIB  EQU   *                                               @Z40X9DG
         CS    RSVRB,RZERO,IPIBSRB      CLEAR IPIBSRB IF       @Z40X9DG
*                                       NOT UPDATED            @Z40X9DG
         BNE   CLRIPIB                  IF UPDATED, TRY AGAIN  @Z40X9DG
         LM    RZERO,RSVRB,ZERO(RTEMP)  RESTORE REGS 0-5       @Z40X9DG
         BR    RETURN                   RETURN TO CALLER       @Z40X9DG
         DROP  RENTRY                                          @Z40X9DG
         TITLE 'POST ECB UNDER SRB'
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        THIS ENTRY POINT IS ENTERED UNDER SRB SCHEDULED     * @Z40X9DG
*        BY THE SCHSRB CODE IN SVC 102. THIS IS NOT A PART   * @Z40X9DG
*        OF SVC 102. THE CODE IS ENTERED IN SUPERVISOR       * @Z40X9DG
*        STATE, ENABLED, NO LOCKS HELD, KEY 0. THE CODE      * @Z40X9DG
*        MUST RETURN TO ADDRESS IN R14 IN SUPERVISOR STATE   * @Z40X9DG
*        WITH NO LOCKS HELD.                                 * @Z40X9DG
*                                                            * @Z40X9DG
*        INPUT:                                              * @Z40X9DG
*              REGISTER 0  - ADDRESS OF SRB                  * @Z40X9DG
*              REGISTER 1  - CONTENTS OF SRBPARM             * @Z40X9DG
*              REGISTER 14 - RETURN ADDRESS                  * @Z40X9DG
*              REGISTER 15 - ENTRY POINT ADDRESS             * @Z40X9DG
*                                                            * @Z40X9DG
*        SRBPARM CONTAINS ECB ADDRESS TO POST. THE HIGH      * @Z40X9DG
*        ORDER BYTE OF SRBPARM CONTAINS THE COMPLETION CODE. * @Z40X9DG
*                                                            * @Z40X9DG
*        THIS CODE WILL USE THE BRANCH ENTRY POINT OF POST   * @Z40X9DG
*        TO POST AN ECB ADDRESSED BY SRBPARM. IT WILL        * @Z40X9DG
*        MARK ITS SRB AVAILABLE.                             * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         USING *,RBASE                  ADDRESSABILITY         @Z40X9DG
         USING SRBSECT,RTCX             SRB ADDRESSABILITY     @Z40X9DG
SRBPOST  EQU   *                                               @Z40X9DG
         LR    RBASE,RENTRY             SET BASE               @Z40X9DG
         LR    RTCX,RZERO               SAVE SRB ADDRESS       @Z40X9DG
         LR    RDEB,RETURN              SAVE RETURN ADDR       @Z40X9DG
         SPACE 2                                               @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        GET LOCAL LOCK REQUIRED FOR BRANCH ENTRY TO POST    * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
GETLOCK  EQU   *                                               @Z40X9DG
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X
               RELATED=(RELLOCK)        GET LOCAL LOCK         @Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        USE 'QUICK POST' TECHNIQUE TO POST ECB              * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         L     RCECB,ZERO(,RPARM)       GET CONTENTS OF ECB    @Z40X9DG
         L     RCOMPC,POSTBIT           SET POST BIT           @VS41494
         IC    RCOMPC,SRBPARM           GET COMPLETION CODE    @VS41494
         TM    ZERO(RPARM),WAITBIT      WAIT BIT ON ?          @Z40X9DG
         BO    CALLPOST                 YES, BRANCH            @Z40X9DG
         CS    RCECB,RCOMPC,ZERO(RPARM) COMPARE AND SWAP       @Z40X9DG
*                                       COMPLETION BIT AND CODE@Z40X9DG
         BZ    RELLOCK                  BRANCH IF CS SUCCESSFUL@Z40X9DG
         SPACE 1                                               @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        BRANCH ENTER TO POST:                               * @Z40X9DG
*              REGISTER 10 - COMPLETION CODE                 * @Z40X9DG
*              REGISTER 11 - ECB ADDRESS                     * @Z40X9DG
*              REGISTER 14 - RETURN ADDRESS                  * @Z40X9DG
*              REGISTER 15 - ENTRY POINT                     * @Z40X9DG
*        REGS 0-9 ARE PRESERVED BY POST                      * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
CALLPOST EQU   *                                               @Z40X9DG
         LA    RCOMPC,ZERO(,RCOMPC)     CLEAR POST BIT FROM    @VS41494
*                                       COMPLETION CODE        @VS41494
         LA    RCECB,ZERO(,RPARM)       SET ECB ADDRESS        @Z40X9DG
         L     RCVT,CVTPTR              GET CVT ADDRESS        @Z40X9DG
         L     RENTRY,CVT0PT01-CVT(,RCVT) GET BRANCH ENTRY ADDR@Z40X9DG
         BALR  RETURN,RENTRY            POST ECB               @Z40X9DG
         SPACE 1                                               @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        RELEASE THE LOCAL LOCK AND RETURN TO CALLER         * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
RELLOCK  EQU   *                                               @Z40X9DG
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(GETLOCK)          @Z40X9DG
         SPACE 1                                               @Z40X9DG
         USING PSRBSECT,RTCX            SRB PREFIX ADDR        @Z40X9DG
         SH    RTCX,PRESIZE             BACK UP TO SRB PREFIX  @Z40X9DG
         MVI   PSRBTSFL,ZERO            MARK SRB AVAILABLE     @Z40X9DG
         LR    RETURN,RDEB              RESTORE RETURN ADDR    @Z40X9DG
         BR    RETURN                   RETURN TO CALLER       @Z40X9DG
         DROP  RTCX,RBASE                                      @Z40X9DG
         TITLE 'SRB RESOURCE MANAGER'
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        THIS ROUTINE GETS CONTROL WHEN A PURGEDQ IS         * @Z40X9DG
*        ISSUED. ITS FUNCTION IS TO CLEANUP A DEQUEUED       * @Z40X9DG
*        SRB. THE ONLY SRB'S THAT IT PROCESSES ARE           * @Z40X9DG
*        THOSE WHOSE SRBEP FIELD EQUALS THE ADDRESS OF       * @Z40X9DG
*        SRBCLEAN. THE CLEANUP FUNCTION CONSISTS OF          * @Z40X9DG
*        MARKING THE SRB AVAILABLE. IEDQOT01 WILL FREE       * @Z40X9DG
*        THE SRB.                                            * @Z40X9DG
*                                                            * @Z40X9DG
*        INPUT:                                              * @Z40X9DG
*              REGISTER 0  - CONTENTS OF REGISTER 0 OF       * @Z40X9DG
*                            CALLER OF PURGEDQ               * @Z40X9DG
*              REGISTER 1  - SRB ADDRESS                     * @Z40X9DG
*              REGISTER 2  - CONTENTS OF SRBPARM             * @Z40X9DG
*              REGISTER 14 - RETURN ADDRESS                  * @Z40X9DG
*              REGISTER 15 - ENTRY POINT ADDRESS             * @Z40X9DG
*                                                            * @Z40X9DG
*        THIS CODE IS NOT PART OF SVC 102. IT RECEIVES       * @Z40X9DG
*        CONTROL IN SUPERVISOR STATE,KEY 0, NO LOCKS HELD.   * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
SRBCLEAN EQU   *                                               @Z40X9DG
         USING *,RENTRY                 CODE ADDRESSABILITY    @Z40X9DG
         USING PSRBSECT,RPARM           SRB PREFIX ADDRESS     @Z40X9DG
         SH    RPARM,PRESIZE            BACK UP TO PREFIX      @Z40X9DG
*                                       OF SRB                 @Z40X9DG
         MVI   PSRBTSFL,ZERO            MARK SRB AVAILABLE     @Z40X9DG
         BR    RETURN                   RETURN TO CALLER       @Z40X9DG
         DROP  RPARM,RENTRY                                    @Z40X9DG
         TITLE 'IGC102 - AQCTL SVC'
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        DATA DEFINITIONS                                    * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
         DS    0F                       ALIGNMENT                Y02027
CLRLOW   DC    X'FFFFF000'              USED TO CLEAR LO 3 BYTES Y02027
ABEND047 DC    X'80047000'              047 ABEND PROG NOT AUTHA Y02027
         DS    0F                       ALIGN 'XR' AND 'NR'      Y02027
NR       DC    4X'BF'                   NON BLANK MASK           Y02027
XR       DC    4X'0F'                   BIT FLIPPER              Y02027
MAX      DC    F'255'                   MASK FOR BYTE COUNT MASK Y02027
ZEROES   DC    F'0'                     COMPARISON VALUE         Y02027
BLANKS   DC    CL8' '                   MASK = PASSWORD NOT REQ'DY02027
MAXIM    DC    H'256'                   MAX VALUE FOR SUBTRACTIONY02027
HEX80    DC    X'80'                    HIGH ORDER BIT ON        Y02027
         DS    0F                                              @Z40X9DG
POSTBIT  DC    X'40000000'              POST BIT FOR C/S       @Z40X9DG
SIZE     DC    AL2(PSRBSIZE+SRBSIZE)    SIZE OF PREFIX +       @Z40X9DG
*                                       SIZE OF SRB            @Z40X9DG
PRESIZE  DC    AL2(PSRBSIZE)            SIZE OF SRB PREFIX     @Z40X9DG
IDSRB    DC    CL4'SRB'                 SRB ID                 @Z40X9DG
FOURK    DC    H'4096'                  LENGTH OF A PAGE       @OZ17630
         SPACE 2                                               @Z40X9DG
PAD      DC    25H'0'                   PATCH AREA             @Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        OFFSETS IN THE SVRB ADDRESSED BY REGISTER 5 AT      * @Z40X9DG
*        ENTRY TO IEDQEB VIA SVC 102.                        * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
REG0     EQU   32                       REGISTER 0 IN SAVE AREA  Y02027
REG1     EQU   36                       REGISTER 1 IN SAVE AREA  Y02027
REG2     EQU   40                       REGISTER 2 IN SAVE AREA  Y02027
REG3     EQU   44                       REGISTER 3 IN SAVE AREA  Y02027
REG5     EQU   52                       REGISTER 5 IN SAVE AREA  Y02027
REG6     EQU   56                       REGISTER 6 IN SAVE AREA  Y02027
REG9     EQU   68                       REG 9 IN SAVE AREA       Y02027
REG10    EQU   72                       REGISTER 10 IN SAVE AREA Y02027
REG11    EQU   76                       REGISTER 11 IN SAVE AREA Y02027
REG15    EQU   92                       REGISTER 15 IN SAVE AREA Y02027
EXTSA    EQU   96                       OFFSET IN SVRB TO 12   @Z40X9DG
*                                       WORD EXTENDED SAVE AREA@Z40X9DG
         EJECT                                                 @Z40X9DG
************************************************************** @Z40X9DG
*                                                            * @Z40X9DG
*        EQUATES                                             * @Z40X9DG
*                                                            * @Z40X9DG
************************************************************** @Z40X9DG
ZERO     EQU   0                        ZERO DISPLACEMENT        Y02027
ONE      EQU   1                        LENGTH OF ONE            Y02027
TWO      EQU   2                        MASK OF 0010             Y02027
THREE    EQU   3                        MASK OF 0011             Y02027
FOUR     EQU   4                        MASK OF 0100             Y02027
FIVE     EQU   5                        DISPLACEMENT OF 5        Y02027
SEVEN    EQU   7                        MASK OF 0111             Y02027
NINE     EQU   9                        DISPLACEMENT             Y02027
TEN      EQU   10                     DISPLACEMENT             @OZ08344
EIGHT    EQU   8                        MASK OF 1000             Y02027
TWELVE   EQU   12                       MASK OF 1100             Y02027
ALL      EQU   15                       MASK OF 1111             Y02027
ADD      EQU   7                        ADDRESS MASK             Y02027
AIBSZERR EQU   X'18'                    RC = DATA EXCEEDS AIB    Y02027
BADTRM   EQU   X'20'                    INVALID TERM NAME ERR CD Y02027
BSC      EQU   X'80'                    INVLIST FLAG = BYSYNCH   Y02027
BY0      EQU   8                        BYTE 0 MASK              Y02027
BY1      EQU   4                        BYTE 1 MASK              Y02027
BY2      EQU   2                        BYTE 2 MASK              Y02027
BY3      EQU   1                        BYTE 3 MASK              Y02027
CHKPASWD EQU   X'20'                    MASK FOR VERBS ALLOWING  Y02027
*                                       PASSWORD SPECIFICATION   Y02027
CCEQ     EQU   8                        MASK FOR CC EQUAL        Y02027
CHKPT    EQU   X'01'                    FLAG= CHECKPOINT ACTIVE  Y02027
CLROFF   EQU   4                        OFFSET AND LENGTH FOR    Y02027
CLRLEN   EQU   68                       CLEARING AIB PREFIX      Y0202M
ID       EQU   X'C0'                    TCAM DEB IDENTIFIER      Y02027
SIOA     EQU   4                        OFFSET TO SIO APPENDAGE@Z40X9DG
*                                       ADDR IN THE DEB        @Z40X9DG
INVPASS  EQU   X'14'                    INVALID PASSWORD ERR CODEY02027
MAXI     EQU   256                      MAX BYTE COUNT FOR 1 MVC Y02027
NOPENDCB EQU   12                       ERROR CODE FOR NO OPEN   Y02027
*                                       TCAM DCB                 Y02027
NOTTCHNG EQU   X'DF'                    MASK  FOR TCHNG FUNCTION Y02027
OFF16    EQU   16                       OFFSET                   Y02027
SIX      EQU   6                        OFFSET                   Y02027
TCHKPT   EQU   X'10'                    TCHNG CHKPOINT REQ CODE  Y02027
HPAGE    EQU   2048                     HALF PAGE SIZE           Y02027
EPAGE    EQU   512                      EIGHTH OF PAGE           Y02027
KEY6     EQU   6                        KEY 6                    Y02027
CSA      EQU   231                      COMMON STORAGE AREA      Y02027
RBOPSW   EQU   16                       OLD PSW IN SVRB          Y02027
PUTPRI    EQU  X'D5'                    PUT  PRIORITY          @ZA02086
GETPRI   EQU   X'D4'                    GET PRIORITY             Y02027
PTPRI    EQU   X'50'                    POINT PRIORITY           Y02027
PRIRTBFR EQU   X'D4'                    RETRIEVE REQUEST PRIORITYY02027
CRECHNGT EQU   X'10'                    KEY FOR TCHNG            Y02027
MCPCKPT  EQU   X'01'                    CHECK POINT ACTIVE IN MCPY02027
CRECKREQ EQU   X'60'                    KEY FOR CKREQ            Y02027
QSAMFLG  EQU   X'40'                    QSAM DCBMACRF FLAG       Y02027
BLANK    EQU   X'40'                    RETRIEVE TERMINATION     Y02027
EQUAL    EQU   8                        EQUAL CONDITION          Y02027
X7F      EQU   X'7F'                    CLEAR HIGH ORDER BIT     Y02027
NORMAL   EQU   X'7F'                    NORMAL COMPLETION CODE   Y02027
XFF      EQU   X'FF'                    USED TO TURN OFF FLAG    Y02027
EIGHTY   EQU   X'80'                    RETURN CODE              Y02027
NINETY   EQU   X'90'                    RETURN CODE              Y02027
SEQERR   EQU   X'58'                    COMPL. CODE FOR SEQ.ERRORY02027
SOWAERR  EQU   X'10'                    BAD SOWA RETURN CODE     Y02027
STOPQRC  EQU   20                       DISABLED QUEUE R.C.      Y02027
INVSEQ   EQU   4                        INVALID SEQUENCE NUMBER  Y02027
INVTERM  EQU   8                        INVALID TERM GIVEN       Y02027
RETERR   EQU   X'0C'                    RETRIEVE RETURN CODE     Y02027
RETCC    EQU   X'50'                    RETRIEVE CONDITION CODE  Y02027
QRERR    EQU   X'10'                    QRESET ERROR             Y02027
QNBNOCKR EQU   4                        RETURN CODE              Y02027
SYNADERR EQU   8                        SYNAD RETURN CODE        Y02027
SOWACC   EQU   X'52'                    SOWA ERROR COMPLETION C. Y02027
MSGRAQCB EQU   X'40'                    MSG ON RA QUEUE          Y02027
USEASCB  EQU   X'80'                    FLAG BIT FOR OP CONTROL  Y02027
XF0      EQU   X'F0'                    MASK FOR TESTING FOR     Y02027
*                                       MCOUNT OR TPDATE
MAXCODE  DC    X'34'                    MAX FUNCTION CODE      @OZ26648
WAITBIT  EQU   X'80'                    ECB WAIT BIT           @Z40X9DG
SQA      EQU   245                      SQA SUBPOOL            @Z40X9DG
SRBKEY   EQU   0                        STORAGE KEY FOR SRB'S  @Z40X9DG
         EJECT                                                 @Z40X9DG
**************************************************************** Y02027
*              MAP OF INPUT DATA PROVIDED TO SVC 102           * Y02027
**************************************************************** Y02027
APCIBMAP DSECT                                                   Y02027
         DS    0F                       FORCE ALIGNMENT          Y02027
APPASWD  DC    AL4(0)                   POINTER TO PASSWORD      Y02027
APECB    DC    F'0'                     ECB FOR WAIT IN SVC 102  Y02027
*                                       AND SUBSEQUENT XMPOST    Y02027
APPCBAD  DC    AL4(0)                   PCB POINTER              Y02027
APPCOMCD DS    XL(1)                    FUNCTION CODE BYTE       Y02027
APUSWKA  DC    AL3(0)                   PTR TO USER WORK AREA    Y02027
APNAME   DC    AL4(0)                   PTR TO TERMINAL NAME     Y02027
APPARM   DS    0F                       PARAMETER FOR SVC 102    Y02027
         DC    X'84'                    EOL X'80' + FUNCTION     Y02027
*                                       CODE X'04'               Y02027
         DC    AL3(APCIBMAP)            PTR TO INPUT DATA        Y02027
         SPACE 4                                               @G36XRDV
***************************************************************@G36XRDV
*                                                              @G36XRDV
*        PARM LIST FOR 3705 STARTIO                            @G36XRDV
*                                                              @G36XRDV
***************************************************************@G36XRDV
         SPACE 1                                               @G36XRDV
PLSIO    DSECT                     PARM LIST FOR 3705 STARTIO  @G36XRDB
PLCODE   DS    XL1                 STARTIO ENTRY CODE          @G36XRDB
PLIOSB   DS    AL3                 IOSB ADDRESS                @G36XRDB
PLSTART  DS    A                   VIRTUAL ADDRESS OF START    @G36XRDB
*                                  OF CHANNEL PROGRAM          @G36XRDB
         EJECT                                                 @Z40X9DG
*        PARAMETER LIST FOR SCHEDULE SRB FUNCTION OF SVC 102 * @Z40X9DG
         SPACE 1                                               @Z40X9DG
SSRBSECT DSECT                                                 @Z40X9DG
SSRBENTC DS    XL1                      ENTRY CODE             @Z40X9DG
SSRBCODE EQU   X'2C'                    ENTRY CODE = '2C'      @Z40X9DG
SSRBECBA DS    AL3                      ADDRESS OF ECB         @Z40X9DG
SSRBASCB DS    A                        ADDRESS OF ASCB        @Z40X9DG
SSRBCC   DS    XL1                      COMPLETION CODE        @Z40X9DG
         DS    XL1                      UNUSED                 @Z40X9DG
SSRBASID DS    H                        ASID                   @Z40X9DG
SSRBTCB  DS    A                        TCB ADDRESS            @Z40X9DG
         SPACE 4                                               @Z40X9DG
***********************************************************************
*                *                                                    *
*    SSRBENTC    *                      SSRBECBA                      *
*                *                                                    *
***********************************************************************
*                                                                     *
*                              SSRBASCB                               *
*                                                                     *
***********************************************************************
*                *                 *                                  *
*    SSRBCC      *                 *             SSRBASID             *
*                *                 *                                  *
***********************************************************************
*                                                                     *
*                              SSRBTCB                                *
*                                                                     *
***********************************************************************
         EJECT                                                 @Z40X9DG
*        IOSB DSECT                                            @Z40X9DG
         SPACE 2                                               @Z40X9DG
         IECDIOSB                                              @Z40X9DG
         EJECT                                                 @Z40X9DG
*        SRB DSECT                                             @Z40X9DG
         SPACE 2                                               @Z40X9DG
         IHASRB                                                @Z40X9DG
         EJECT                                                 @Z40X9DG
*        DSECT FOR FOUR-BYTE PREFIX TO SRB                     @Z40X9DG
         SPACE 1                                               @Z40X9DG
PSRBSECT DSECT                                                 @Z40X9DG
PSRBTSFL DS    XL1                      TEST AND SET FLAG      @Z40X9DG
PSRBLINK DS    AL3                      LINK TO NEXT SRB       @Z40X9DG
PSRBSRB  EQU   *                        START OF SRB           @Z40X9DG
PSRBSIZE EQU   *-PSRBSECT               SIZE OF PREFIX         @Z40X9DG
         SPACE 4
NUMSRBS  EQU   8                        NUMBER OF SRB'S WITH   @Z40X9DG
*                                       PREFIX IN ONE BLOCK    @Z40X9DG
SRBBLKSZ EQU   NUMSRBS*(SRBSIZE+PSRBSIZE) SIZE OF SRB BLOCK    @Z40X9DG
         EJECT                                                 @Z40X9DG
*        IOSB EXTENSION                                        @Z40X9DG
         SPACE 1                                               @Z40X9DG
IOSBE    DSECT                                                 @Z40X9DG
IOSBEENT DS    XL1                      ENTRY FLAG             @Z40X9DG
IOSBESIO EQU   X'28'                    ENTRY FOR START I/O    @Z40X9DG
IOSBEIOS DS    AL3                      ADDRESS OF IOSB        @Z40X9DG
IOSBEFLG DS    XL1                      FLAG BYTE              @Z40X9DG
IOSBEEOL EQU   X'80'                    END OF PARM LIST       @Z40X9DG
IOSBERDY EQU   X'40'                    IOSBE READY FOR        @Z40X9DG
*                                       NEW I/O OPERATION      @Z40X9DG
IOSBEBUS EQU   X'FF'-IOSBERDY           IOSBE BUSY - CANNOT    @Z40X9DG
*                                       ACCEPT NEW I/O         @Z40X9DG
IOSBECPR EQU   X'20'                    CCW'S ARE REAL         @Z40X9DG
IOSBECPV EQU   X'FF'-IOSBECPR           CCW'S ARE VIRTUAL      @Z40X9DG
IOSBENRQ EQU   X'10'                    QUEUE TYPE             @Z40X9DG
*                                         1 = NON-REUS QUEUES  @Z40X9DG
*                                         0 = REUS QUEUES      @Z40X9DG
IOSBECPB DS    AL3                      ADDRESS OF CPB         @Z40X9DG
IOSBEXCC DS    H                        ARM POSITION           @Z40X9DG
IOSBERET DS    XL3                      RETRY QUEUE            @Z40X9DG
IOSBENEW DS    AL3                      NEW QUEUE OF CPB'S     @Z40X9DG
IOSBELEN EQU   *-IOSBE                  LENGTH OF IOSBE        @Z40X9DG
         EJECT                                                 @Z40X9DG
*        DSECT NEEDED BY STARTIO MACRO                         @Z40X9DG
         SPACE 1                                               @Z40X9DG
         IECDIOCM                                              @Z40X9DG
         EJECT                                                 @Z40X9DG
         IECDIPIB                                              @Z40X9DG
         EJECT                                                 @Z40X9DG
         IHAWSAVT CLASS=LOCAL,DSECT=YES
         IHAPSA
         IHAASXB
         IHAASCB
         SPACE 1
         TTCXD                                                   Y02027
         EJECT
         TPEBD
         TPEWAD
         TPECBD
CVTMAP   CVT   DSECT=YES
         TPRIOR                                                  Y02027
         DCBD  DSORG=PS
DCBPECB  EQU   DCBIOBAD                 USED BY TCAM             Y02027
         IECTDECB
         EJECT
*                                                                     *
*                 D S E C T S                                         *
*                                                                     *
         SPACE 2
         TAVTD
         TTCBD
         TDEBAPD
         TRECBD
         SPACE 1
         TAIBD EXT=(QRESET,POINT,CKREQ,GETREAD,NETWKCTL,PUTWRITE)
         SPACE 1
         TTRMD                                                   Y02027
         END
