DQAS     TITLE    '''IEDQAS''  -  HOLD ROUTINE'
IEDQAS   CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A000000,999999       RESEQUENCED ONLY                         @Y17XA00
*A177869,562869,589869,679869                                  @OZ14184
*A295000,347600                                                @OZ15629
*C345200-346000,369400-369640                                  @OZ15629
*A118000,118600                                                @OX16386
*A808869                                                       @OZ29587
         SPACE 3
         SPACE 3
         ENTRY IEDQAS01
***********************************************************************
*                                                                     *
*  TITLE: IEDQAS - HOLD ROUTINE / IEDQAS01 - RELEASE ROUTINE          *
*                                                                     *
*  MODULE NAME = IEDQAS                                               *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE LEVEL 5                                            *
*                                                                     *
*FUNCTION -- THE APPEARANCE OF A HOLD MACRO IN A MESSAGE HANDLER S21903
*   WILL RESULT IN THE EXECUTION OF THIS ROUTINE.  IEDQAS WILL   S21903
*   STOP ALL OUTPUT TO THE TERMINAL TO BE HELD.  THE TERMINAL    S21903
*   TO BE HELD AND SUBSEQUENT ACTION TO BE TAKEN WILL DEPEND UPONS21903
*   THE PLACEMENT OF THE MACRO IN THE MH.  IF THE TERMINAL TO BE S21093
*   HELD HAS MAIN STORAGE ONLY QUEUEING, THE HOLD WILL NOT BE    S21903
*   DONE.                                                        S21903
*                                                                S21903
*   INHDR OR INMSG SUBGROUP - EXECUTION OF THE MACRO IS          S21903
*   UNCONDITIONAL.  THE SOURCE TERMINAL WILL BE HELD.  AN        S21903
*   OPERATOR COMMAND OR AN MRELEASE APPLICATION MACRO MUST BE    S21093
*   ISSUED TO RESUME TRANSMISSION.  THE MESSAGE WHICH CAUSED THE S21093
*   MACRO TO BE EXECUTED WILL NOT BE RESENT.                     S21093
*                                                                S21903
*   OUTMSG SUBGROUP - THE EXECUTION OF THE MACRO IS CONDITIONAL. S21093
*   IF THE CONDITIONS ARE SATISFIED, THE DESTINATION TERMINAL    S21093
*   WILL BE HELD AND THE MESSAGE WHICH CAUSED THE MACRO EXECUTIONS21903
*   WILL BE RESENT LATER.  THE MACRO MAY SPECIFY THAT THE HOLD   S21903
*   BE ACTIVE FOR AN INTERVAL OR UNTIL AN OPERATOR COMMAND OR    S21903
*   APPLICATION PROGRAM MRELEASE MACRO IS USSUED TO RESUME       S21903
*   TRANSMISSION.                                                S21903
*   HOLD FOR MID-BATCH RECOVERY WILL PERFORM THE HOLD FUNCTION   S22025
*   ON ANY BLOCK OF A MSG WHEN AN ERROR IS DETECTED ON TRANS-    S22025
*   MISSION OF THAT BLOCK, EXCEPT ON THE FIRST BLOCK OF THE MSG, S22025
*   SELECTION ERRORS,OR A DIAL LINE NO LONGER CONNECTED, IN      S22025
*   CASES NORMAL HOLD IS EXECUTED.  IN A MID-BATCH SITUATION     S22025
*   IF A TIME INTERVAL IS SPECIFIED,THE SEND SCHEDULERS STCB IS  S22025
*   IS REMOVED FROM STCB CHAIN AND THE QCB IS PUT ON THE TIME    S22025
*   DELAY QUEUE.  WHEN THE QCB COMES OFF TIME DELAY,THE SEND     S22025
*   SCHEDULERS STCB IS REINSERTED INTO THE STCB CHAIN, AND       S22025
*   RETURN IS MADE TO THE DISPATCHER.  IF NO TIME VALUE WAS      S22025
*   SPECIFIED THEN THE SEND SCHEDULER IS NOT REMOVED FROM THE    S22025
*   STCB CHAIN.                                                  S22025
*                                                                     *
*ENTR Y POINTS -- IEDQAS - TO HOLD A TERMINAL                         *
*                                                              * S21101
*   WHEN HOLD IS ISSUED IN THE INHDR SUBGROUP ENTRY IS THRU    * S21101
*   THE USER INTERFACE ROUTINE (IEDQUI).                       * S21101
*                                                              * S21101
*   WHEN HOLD IS ISSUED IN THE INMSG OR OUTMSG SUBGROUP, ENTRY ISS21903
*   FROM IEDQBD WHEN THE ERROR BYTES ARE FOUND TO MATCH THE      S21903
*   SPECIFIED MASK.                                              S21903
*                                                                S21903
*   THE CALLING SEQUENCE IF   LA    R12,IEDQAS                   S21903
*                             BR    R12                               *
*                                                                     *
*INPUT  -    WHEN ENTERED THRU IEDQUI                          * S21101
*   WHEN THE HOLD MACRO IS EXECUTED IN THE INHDR SUBGROUP,     * S21101
*   IEDQAS IS ENTERED WITH THE FOLLOWING REGISTERS             * S21101
*                                                              * S21101
*   R1   HAS THE PARAMETER LIST ADDRESS                        * S21101
*   R4   HAS THE LCB ADDRESS                                   * S21101
*   R13  HAS THE ADDRESS OF AVTSAVE2                           * S21101
*                                                              * S21101
*   WHEN IEDQAS IS CALLED BY IEDQBD UPON FINDING ERRORS        * S21101
*   WITH THE FOLLOWING REGISTERS SET.                                 *
*   R1 HAS THE ADDRESS OF A LIST OF THINGS TO BE POSTED               *
*   R3 HAS THE SCB ADDRESS                                            *
*   R4 HAS THE LCB ADDRESS                                            *
*   R6 HAS THE RECALLED HEADER BUFFER                                 *
*   R11 HAS THE DISPATCHER ADDRESS                                    *
*   R12 HAS THE ENTRY POJNT ADDRESS                                   *
*   R13 HAS THE ADDRESS OF AVTSAVE2                                   *
*                                                                     *
*OUTPUT -- THE HOLD FLAG IN THE TERMINAL TABLE INTRY WILL BE SET.S21903
*   IF ENTRY WAS FROM IEDQBD, A CHAIN OF ELEMENTS WILL BE PLACED S21903
*   ON THE READY QUEUE.  IF THE HOLD IS FOR A TIME INTERVAL, A   S21903
*   BUFFER WILL BE PLACED ON THE TIME DELQY QUEUE.               S21903
*                                                                     *
*EXTERNAL ROUTINES -- DISPATCHER CHAIN FUNCTION - PLACES A LIST OF    *
*   ITEMS ON THE READY Q.                                             *
*   IEDQTNT - TO FIND THE TERMINAL ENTRY FROM THE DESTINATION OFFSET  *
*   IN THE BUFFER.                                                    *
*                                                                     *
*EXITS-NORMAL -- WHEN EXECUTED IN THE INDHR SUBFROUP, EXIT IS TO S21903
*   THE MH WITH ZERO IN REGISTER 15.                             S21903
*   WHEN EXECUTED IN THE INMSG OR OUTMSG SUBFROUP, EXIT IS TO THES21903
*   DISPATCHER AT CHAIN.                                         S21903
*                                                                S21903
*EXITS-ERROR -- WHEN EXECUTED IN THE INHDR SUBGROUP, EXIT IS TO  S21903
*   THE MH WITH REGISTER 15 NON-ZERO.                            S21903
*                                                                     *
*TABLES/WORKAREAS -- AVT, SCB, TTABLE, PRF, QCB.                      *
*                                                                     *
*ATTRIBUTES -- REUSABLE, ENABLED, RESIDENT                            *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER      *
*   SET.                                                              *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*                            REGISTER EQUATES                         *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
RSCB     EQU   3
R4       EQU   4
R5       EQU   5
RPRF     EQU   6
RQCB     EQU   7
R8       EQU   8
RPQ      EQU   8
R9       EQU   9
R10      EQU   10
RDCB     EQU   10
RDISP    EQU   11
RBASE    EQU   12
R12      EQU   12                                                S21101
R13      EQU   13
R14      EQU   14
R15      EQU   15
*                            USING STATMENTS                          *
         USING IEDQSCB,RSCB
         USING IEDQPRF,RPRF
         USING IEDQTRM,R1
         USING IEDQQCB,RQCB
         USING IEDQPQCB,RPQ
         USING IEDQDISP,RDISP
         USING IEDQLCB,R4
         USING IHADCB,RDCB
         USING AVTSAVE2,R13                                      S22025
         USING *,RBASE
*                                                                     *
ONE      EQU   1                        ONE                      S22024
TWO      EQU   2                        TWO                     SA63009
NE       EQU   7                        BRANCH NOT EQUAL         S21903
ZERO     EQU   0                        ZERO                     S21903
L2       EQU   2                        LENGTH OF 2              S21903
L3       EQU   3                        LENGTH OF 3              S21903
CPBQTYPE EQU   X'03'                    MASK FOR QUEUING MEDIA  SA52971
TIMEINTV EQU   8                        DISPLACEMENT INTO THE    S22025
*                                       PARMAMETR LIST OF THE    S22025
*                                       DELAY VALUE              S22025
INVTCNT  EQU   4                        DISP OF THE INVITATION   S22025
*                                       LIST COUNTER             S22025
LVLBLKBT EQU   2                        DISP TO PARM LST BYTE    S22025
X01      EQU   X'01'                    01 CONSTANT              S21903
X80      EQU   X'80'                    80 CONSTANT              S21903
XE4      EQU   X'E4'                    E4 CONSTANT              S21903
LVLMASK  EQU   X'02'                    MASK FOR LEVEL=BLK       S22025
INVALSRC EQU   X'10'                    ORIGIN NOT IDENTIFIED    CLUP21
NOTHELD  EQU   X'0C'                    ENTRY NOT HOLDABLE       CLUP21
ALRDYHLD EQU   X'08'                    TERMINAL ALREADY HELD    CLUP21
NOTDISK  EQU   X'04'                    NOT DISK QUEUED          CLUP21
FOUR     EQU   4                        FOUR                     S22024
X60      EQU   X'60'                    QCBSTPRI FOR DIAL      @OS76674
*                                        W/O CLOCK OR INTVL    @OS76674
FIVE     EQU   5                        OFFSET                 @OY12688
EIGHT    EQU   8                        OFFSET FOR PLIST       @OY12688
ELEVEN   EQU   11                       PARM LIST REG OFFSET   @OY12688
TWELVE   EQU   12                       SAVE AREA OFFSET       @OY12688
X18      EQU   X'18'                    OPFIELD NOT FOUND      @OY12688
X1C      EQU   X'1C'                    NO BUFFERS AVAILABLE   @OY12688
OPFLDI   EQU   X'60'                    INTVL SPECIFIED IN OPFL@OY12688
BUFFER   EQU   X'08'                    BUFFER IDENTIFIER      @OZ14184
OFFSET1C EQU   X'1C'                    OFFSET FOR TTCIN       @OZ14184
*                                                                     *
         EJECT
*        HOLD FROM MH MAY BE FOR A TIME INTERVAL OR UNCONDITIONAL
*        UNTIL AN OPERATOR CONTROL RELEASE.  THE INTERVAL IN THE
*        PARAMETER LIST =0 IF HOLD UNITL RELEASE IS DESIRED.
*        WHEN ENTERED R8 HAS THE ADDRESS OF THE PARAMETER LIST
*        IF THE DESTINATION QCB REFERENCED IS A CORE ONLY QUEUE,
*        ( NO DISK QUEUES) THE MESSAGE WILL BE CANCELED AND THE
*        TERMINAL IS NOT HELD.  THE FIRST FEFO MESSAGE FOR THIS
*        QCB WILL BECOME THIS MESSAGE AND THE CANCEL BIT WILL
*        BE SET CAUSING THIS MESSAGE TO BE FREED FROM THE QUEUE
*        WHEN AN ATTEMPT IS MADE TO RESEND IT.
HOLD     EQU   *
IEDQAS   IEDHJN HOLD1                   GENERATE MODULE ID DATE  S22025
         LTR   R0,R0                    IS ENTRY FROM IEDQBD     S21101
         BNZ   IEDQAS02                 NO, BRANCH               S21101
         L    R5,AVTMSGS-1              ADDR OF LIST OF ADDRS
         L     R5,0(R5)                 ADDR OF BD
         ST    R5,LCBERBQB-1            FOR POST
         LA    R5,LCBERB                ADDR ERB TO POST LIST
         ST    R1,LCBERBLK-1            AND SAVE LIST IN R5
         MVI   LCBERBPY,PRIRCQCB
         XC    LCBERBCH(3),LCBERBCH
         NI    LCBSTAT1,X'FF'-LCBRCLLN  RECALL FLAG OFF
         TM    LCBSTAT1,LCBRECVN        HOLD IN INMSG          @OX16386
         BO    RECVE                    YES                    @OX16386
         NC    LCBLSPCI,LCBLSPCI        HAS HOLD BEEN EXECUTED   S22025
         BZ    NOTYET                   NO,BRANCH              @OS76483
RECVE    EQU   *                                               @OX16386
         TM    LCBSTAT1,LCBINITN        IS THIS INITATE MODE
         BO    NOHOLD                   BR YES TO BYPASS HOLD
         LH    R1,LCBTTCIN              DEST OFFSET
         L     R15,AVTRNMPT             ADDRESS OF IEDQTNT
         USING IEDQTNTD,R15             SET UP BASE FOR TERMNAMESA63011
*                                       TABLE                   SA63011
         N     R1,AVTCLRHI              CLEAR HI BYTE
         BZ    NOHOLD                   NO TNT OFFSET            S22025
         CLC   LCBTTCIN,TNTLEN          IS THIS A TOTE TTE? COND
*                                       CHEKED VIA SPM LATER   @Y17XANQ
         DROP  R15                                             @Y17XANQ
         BALR  R14,R15                  CALL
         TM    TRMSTATE,TRMLIST+TRMPROC    CAN THIS            @OX12499
*                                         TERMINAL BE HELD      SA66617
         BNZ   NOHOLD                   BR NO
         TM    LCBSTAT1,LCBRECVN        HOLD IN INMSG?         @OX12499
         BNO   SKPTEST                  NO, IN OUTMSG          @OX12499
         TM    TRMSTATE,TRMHELDN        IS TERM ALREADY HELD?  @OX12499
         BO    NOHOLD                   YES, CANNOT HOLD       @OX12499
SKPTEST  EQU   *                                               @OX12499
         SPM   R14                      IS THIS A TOTE TTE?    @Y17XANQ
         BNH   NOTOTE                     BRANCH IF NOT        @Y17XANQ
         SPACE
         TM    TRMSTATE,TRMPREF         IS THIS AN ATTACHED NCP?
         BZ    NOHOLD                     BRANCH IF NOT        @Y17XANQ
         SPACE
         LR    RQCB,R1                  COPY TTE ADDRESS       @Y17XANQ
         LA    R15,TRMPRFSZ             PREFIX SIZE            @Y17XANQ
         SLR   RQCB,R15                 BACK UP TO PREFIX      @Y17XANQ
         TM    TRMBYTE0-IEDNTRM(RQCB),TRMSNA   IF TTE IS SNA TOTE,
*                                       ALLOW A HOLD FUNCTION  @Y17XANQ
         BZ    NOHOLD                     BRANCH IF NOT SNA    @Y17XANQ
         SPACE
NOTOTE   EQU   *                                               @Y17XANQ
         L     RQCB,TRMDESTQ-1          QCB ADDR
         TM    QCBDSFLG,QCBREUS+QCBNREUS
         BZ    NOHOLD                   BR IF NO DISK
         CLI   LCBFLAG1,AVTEZERO        3705 PLCB                S22024
         BE    NOMDBTCH                 YES, BRANCH              S22024
         TM    LVLBLKBT(R8),LVLMASK     LEVEL=BLK SPECIFIED      S22025
         BZ    NOMDBTCH                 NO-BRANCH TO NORMAL HOLD S22025
*                                       PROCESSING               S22025
         L     R14,TIMEINTV(R8)         GET TIME INTERVAL        S22025
         LTR   R14,R14                  ANY INTERVAL SPECIFIED?@YA07685
         BZ    NOINTVL                  BRANCH IF NO           @YA07685
         TM    TRMSTATE,TRMHELDN        TERM ALREADY HELD      @OY12688
         BNO   INTVLOK                  BRANCH IF NOT          @OY12688
         SR    R14,R14                  CLEAR INTVL IF HELD    @OY12688
INTVLOK  EQU   *                                               @OY12688
         ST    R14,TDLEOLDT(RPRF)       SET INTVL IN BUFFER      S22025
NOINTVL  EQU   *                                               @YA07685
         TM    SCBERR4,SCBSLCTN         SELECTON ERROR           S22025
         BO    NOMDBTCH                 YES, NORMAL HOLD FUNCTON S22025
         TM    SCBERR4,SCBTXTTN         WAS THERE A TEXT TRANSFERS22025
*                                       ERROR                    S22025
         BZ    NOMDBTCH                 NO, BRANCH               S22025
         TM    SCBQTYPE,SCBBBFTM        MID BATCH SPECIFIED      S22025
         BZ    NOMDBTCH                NO GO DO NORMAL HOLD      S22025
         TM    LCBSTAT2,LCBDIAL         IS THIS A DIAL TERM      S22025
         BZ    GOMDBTCH                 NO-BR                    S22025
         TM    LCBSTAT1,LCBOCNI         STOPLINE IN PROGRESS    OX02199
         BO    NOMDBTCH                 YES,DO NORMAL HOLD      OX02199
         CLI   LCBTSTSW,AVTEFF          NO LONGER CONNECTED     OX02199
         BNE   MIDBATCH                 NO,DO MIDBATCH HOLD     OX02199
NOMDBTCH EQU   *                                                 S22025
         TM    LCBSTAT1,LCBRECVN        IS THIS HOLD IN INMSG    A49221
         BNO   SEND                     BR IF THIS IS OUTMSG     A49221
         OI    TRMSTATE,TRMHELDN        SET TERMINAL ENTRY HELD  A49221
         OI    QCBSTAT,QCBTRMHO         SET QCBHELD              A49221
         B     SAME2                    RETURN TO BD             A49221
SEND     EQU   *                                                 A49221
         TM    PRFCRCD+L'PRFCRCD-1,CPBQTYPE CORE POINTER        SA52971
         BNZ   NOTCORE                  NO, GOT DISK ADDRESS    SA52971
         L     R15,PRFCRCD-1            GET THE DISK ADDR OF THE HDR
         MVC   PRFCRCD(3),PRFCRCD-IEDQPRF(R15)
NOTCORE  EQU   *
         L     R9,LCBLSPCI-1            ADDR OF BFR FOR SERVICED FLG
         MVC   SCBPRI(1),PRFTQBCK-IEDQPRF(R9) SAVE PRI INDEX OF SA52971
*                                         MESSAGE TO HOLD       SA52971
         ST    R5,PRFLINK-1-IEDQPRF(R9) THIS BFR INTO POST LIST
         LR    R5,R9                    NEW FIRST IN POST LIST
         MVI   PRFPRI-IEDQPRF(R5),PRIBFRTB
         LA    R9,AVTBFRTB              ADDR OF BFR RTN QCB
         ST    R9,PRFQCBA-1-IEDQPRF(R5) RTN THIS BF*R
        XC    LCBLSPCI(3),LCBLSPCI     STOP THE SERVICED FLAG
         TM    SCBQTYPE,SCBCONC         IS THIS A CONCENTRATOR  SA52971
         BZ    RESET                    NO, GO RESET FLAGS      SA52971
         LR    R9,RQCB                  COMPUTE MAIN EXTENSION  SA52971
         AH    R9,QCBEXTO                 ADDRESS               SA52971
         TM    QCBEFLG-IEDQQCBE(R9),QCBEOPL MSG,L               SA52971
         BZ    RESET                    NO, GO RESET FLAGS      SA52971
         SR    R14,R14                  CLEAR REG               SA52971
         SR    R15,R15                  CLEAR REG               SA52971
         IC    R14,QCBELGTH-IEDQQCBE(,R9) GET MAIN EXTENSION    SA52971
*                                         SIZE                  SA52971
         AR    R9,R14                   GET TO FIRST SUB EXTEN  SA52971
         IC    R14,QCBELGTH-IEDQQCBE(,R9) GET SUB EXTENSION     SA52971
*                                         SIZE                  SA52971
         IC    R15,SCBPRI               GET PRI LVL INDEX       SA52971
         MR    R14,R14                  GET OFFSET TO EXTENSION SA52971
         AR    R9,R15                   POINT TO CORRECT EXTEN  SA52971
         XC    QCBEHDR-IEDQQCBE(3,R9),QCBEHDR-IEDQQCBE(R9) ZERO SA52971
*                                         HDR PTR AS FLAG FOR   SA52971
*                                         HM03                  SA52971
         B     NOSET                    BYPASS RESET OF SDFFO   SA52971
         SPACE 1                                                SA52971
RESET    EQU   *                                                SA52971
         NI    QCBFLAG,X'FF'-QCBSDFFO   CLEAR 'SENDING NOW'     SA52971
NOSET    EQU   *                                                SA52971
         L     RSCB,LCBSCBA-1           SCB ADDR
         LH    R9,TRMOUTSQ              SUBTRACT ONE FROM SEQUENCE
         BCTR  R9,ZERO                  OUT NUMBER               S21903
         CH    R9,SCBOSEQ               DID AA INCREMENT        SA68011
*                                        SEQUENCE OUT NO.       SA68011
         BNE   NODECR                   NO, DONT DECREMENT IT   SA68011
         STH   R9,TRMOUTSQ
NODECR   EQU   *                                                SA68011
*        IF TERMINAL IS IN LOCK MODE - THE REQUEST TO HOLD SHOULD BE
*        IGNORED AND THE MESSAGE RETRANSMITTED
         TM    SCBSTATE,SCBLCK1N+SCBMSGLN    LOCK MODE
         BZ    NOTLOCK                  BR NO
*        SET LCB TO RETRANSMIT THE MSG
         MVC   QCBLKRRN(3),PRFCRCD      RESET ADDR OF LOCK RESPONSE
         B     RETBUF                   RETURN BUFFER           SA66605
NOTLOCK  EQU   *
         LM    R2,R3,4(R8)              R8 HAS PARLIST ADDR
         TM    0(R8),X01                IS THERE AN ERROR MASK   S21903
         BO    NOMASK                   BR NO
         LR    R2,R3                    RESET INTVL IF ANY
         TM    TRMSTATE,TRMHELDN        TERM ALREADY HELD      @OY12688
         BNO   NOMASK                   BRANCH IF NO           @OY12688
         SR    R2,R2                    CLEAR INTVL IF HELD    @OY12688
NOMASK   EQU   *
         ST    R2,TDLEOLDT(RPRF)        R2 HAS INTVL IF ANY
         OI    TRMSTATE,TRMHELDN        SET HELD BIT
         OI    QCBSTAT,QCBTRMHO         INDICATE TERMINAL WAS HELD
         CLI   PRFNBUNT,ONE             ANY UNNECESSARY UNITS
         BE    JUSTONE                  BR NO
         ST    R1,AVTDOUBL
         L     R1,PRFTIC                ADDR OF FIRST UNIT
         IC    R9,PRFNBUNT              ADJUST NUMBER OF UNITS
         BCTR  R9,ZERO                  IN BOTH OLDBFR AND       S21903
         STC   R9,PRFNBUNT-IEDQPRF(R1)  EXTRA UNITS
         MVI   PRFNBUNT,ONE
         LA    R9,AVTBFRTB              ADDR FOR POST
         ST    R9,PRFQCBA-1-IEDQPRF(R1)
         ST    R5,PRFLINK-1-IEDQPRF(R1)    ADD EXTRA UNIT(S) TO
         MVI   PRFPRI-IEDQPRF(R1),PRIBFRTB
         LR    R5,R1                    POST LIST
         L     R1,AVTDOUBL
JUSTONE  EQU   *
         L     RQCB,TRMDESTQ-1          DEST QCB ADDR
         L     RSCB,LCBSCBA-1           SCB ADDRESS
         LR    R10,R8                   SAVE PARAMETER LIST ADDR S22025
         SR    R1,R1                    CLEAR                    CLUP21
         IC    R1,SCBPRI                GET PRIORITY LEVEL INDEX CLUP21
         LTR   R1,R1                    IS IT FIRST ONE          CLUP21
         BZ    GOTIT                    BR YES
         LA    R0,QCBPSIZE              SIZE OF PRIORITY QCB     CLUP21
         MR    R0,R0                    SIZE X LEVEL
GOTIT    EQU   *
         LA    RPQ,QCBMSIZE(RQCB,R1)    POINT TO PRIORITY QCB    CLUP21
         LA    R9,AVTBFRTB
         ST    R9,PRFQCBA-1
         NC    QCBINTFF(3),QCBINTFF     ANY HELD MSGS THERE
         BNZ   SAME                     YES-BR                   S22025
         CLC   PRFCRCD(3),QCBPREVF      IS MSG FIRST IN CHAIN?  SA52971
         BNE   SAME                     BRANCH IF NO            SA52971
         MVC   QCBINTFF(3),QCBPREVF     SET FIRST INTERCEPTED TOSA52971
SAME     EQU   *                        HDR PTR                 SA52971
         NC    TDLEOLDT(L2,RPRF),TDLEOLDT(RPRF)   ANY INTVL      S21903
         BZ    RTNBFR                   BR IF NO DELAY
         MVI   TDLOFF(RPRF),TDLINDEX    SET OFFSET TO QCV
         MVI   PRFPRI,PRIRELSE          SET PRTY
         LA    R9,IEDQAS01              QCB ADDR TO POST TO
         ST    R9,TDLQCBAD-1(RPRF)      SET IN ELEM
         LR    R1,RPRF                  ELEM IN R1
         L    R15,AVTHG01               E.P. TO INSERT AN ELEM
         BALR  R14,R15                  PUT BFR ON TIME QUEUE    CLUP21
SAME2    EQU   *
         LR    R1,R5                    RESTORE LIST
         BAL   R14,DSPCHAIN             EXIT                   @Y17XAMX
         SPACE 3                                                 S21903
MIDBATCH EQU   *                                                 S22025
         XC    TDLEOLDT(L2,RPRF),TDLEOLDT(RPRF)   CLEAR INTVL    S21903
GOMDBTCH EQU   *                                                 S22025
         NC    SCBEOB,SCBEOB            IS THIS THE FIRST BLOCK  S22025
*                                       OF THE MSG               S22025
         BZ    NOMDBTCH                 YES-GO DO NORMAL HOLD    S22025
         MVZ   SCBQTYPE(1),SCBHBFNO     RESET Q TYPE             S22025
         NI    SCBHBFNO,AVTEFF-SCBNREUS-SCBREUS-SCBCOREQ        SA52971
*                                       RESET QTYPE FLAGS       SA52971
         L     R15,LCBLSPCI-1           GET ERROR BUFFER ADDR    S22025
*                                       WHERE SCBPRI WAS SAVED BDS22025
         MVC   SCBPRI(1),PRFTQBCK-IEDQPRF(R15) RESET PRIORITY   SA52971
         MVC   SCBDEOB(4),LCBCPA        RESTORE DEOB FROM WHERE  S22025
*                                       IT WAS SAVED BY BD       S22025
         MVC   SCBTRANS(3),LCBCPA+4      RESTORE SCB TRANS FROM  S22025
*                                       WHERE IT WAS SAVED BY BD S22025
         ST    R5,PRFLINK-1-IEDQPRF(R15) ERROR BUFFER INTO POST  S22025
*                                       LIST                     S22025
         LR    R5,R15                   NEW FIRST IN POST LIST   S22025
         MVI   PRFPRI-IEDQPRF(R15),PRIBFRTB PRIORITY             S22025
         LA    R15,AVTBFRTB             BFR RETURN QCB           S22025
         ST    R15,PRFQCBA-1-IEDQPRF(R5) ERROR BUFFER TO BFR RTN S22025
         MVI   SCBERR4,AVTEZERO         CLEAR SCBERROR FLAGS     S22025
         MVI   LCBSENS0,AVTEZERO        CLEAR LCBERROR FLAGS     S22025
         NI    SCBERR3,SCBXCEPF         TURN OF UNIT EXCEPTION   S22025
         OI    QCBSTAT,QCBSEND          SET SEND MODE BIT        S22025
         OI    SCBQTYPE,SCBBFMM         SET MIDDLE OF MSG BIT    S22025
         TM    SCBSTATE,SCBLCK1N+SCBMSGLN   IS LINE IN LOCK MODE S22025
         BNZ   NOMIDMSG                 YES, BRANCH              S22025
         CLI   QCBSTVTO,DSPBUFSC        BUFFERED QCB             S22025
         BE    NOMIDMSG                 YES-BR                   S22025
         NC    TDLEOLDT(2,RPRF),TDLEOLDT(RPRF) TIME INTERVAL     S22025
         BZ    NOMIDMSG                 NO-BRANCH                S22025
         LA    R15,QCBSTVTO              STCB ADDR               S22025
         LA    R2,LCBSTCBA-5            SET SO FIRST STCB WILL   S22025
*                                       COINCIDE WITH THE STCB LIS22025
         TM    SCBQTYPE,SCBCONC                                  S22026
         BZ    STCBLOOP                 BRANCH IF NO             S22026
         LH    R2,QCBEXTO               EXT OFFSET               S22026
         AR    R2,RQCB                  QCBE ADDR                S22026
         L     R2,QCBECONC-1-IEDQQCBE(R2)                        S22026
*                                       CONC TRM ADDR            S22026
         L     R2,TRMDESTQ-1-IEDQTRM(R2)                         S22026
*                                       DRQ ADDR                 S22026
         SH    R2,AVTHA4                SET REG                  S22026
STCBLOOP EQU   *                                                 S22025
         L     R9,STCBLINK-1-IEDQSTCB(R2) NEXT STCB ADDR         S22025
         LA    R9,0(R9)                 CLEAR HIGH BUTE          S22025
         CLR   R9,R15                   THIS THE RIGHT STCB      S22025
         BE    TAKEOUT                  YES-BRANCH               S22025
         LR    R2,R9                    SET ADDR OF PREVIOUS STCBS22025
         B     STCBLOOP                 TO TOP OF LOOP           S22025
TAKEOUT  EQU   *                                                 S22025
         MVC   STCBLINK-IEDQSTCB(L3,R2),STCBLINK-IEDQSTCB(R9)    S21903
*                                       REMOVE THE STCB FROM THE S22025
*                                       CHAIN                    S22025
         MVC   QCBEOLDT(2),TDLEOLDT(RPRF) SET DELAY INTERVAL     S22025
         MVI   QCBEOLDT+2,AVTEZERO      TIME DELAY INTERFACE     S22025
*                                       INDEX FOR QCB            S22025
         MVI   QCBPRI,PRIRELSE          SET PRIORITY             S22025
         IC    R15,QCBDSFLG             SAVE FLAG BITE           S22025
         LA    R1,TIMEQBK               RETURN QCB ADDR WHEN TIMES22025
         ST    R1,QCBELCHN-1            DELAY EXPIRES            S22025
         STC   R15,QCBDSFLG             RESTORE FLAG             S22025
         LR    R1,RQCB                  SET ELEMEMT ADDR FOR TIMES22025
*                                       DELAY                    S22025
         L     R15,AVTHG01              E.P.A. TO INSERT QCB IN  S22025
*                                       TIME DELAY Q             S22025
         BALR  R14,R15                  GO TIME DELAY QCB        S22025
         SPACE 3
NOMIDMSG EQU   *                                                 S22025
         MVC   SCBDCHDR(2),LCBTTCIN     SET  COUNT               S22025
         XC    LCBLSPCI(3),LCBLSPCI     SET LSPCI TO ZERO        S22025
         LA    R10,AVTINOUT             END OUTMSG PROCESSING    S22025
         IC    R14,SCBMACR-1            SAVE HIGH ORDER BYTE     S22025
         ST    R10,SCBMACR-1            SET NEW LIST ADDRESS     S22025
         STC   R14,SCBMACR-1            RESTORE                  S22025
NOHOLD   EQU   *
         TM    LCBSTAT1,LCBRECVN        HOLD IN IN MSG           A49221
         BO    SAME2                    BR YES - NO BFRS THERE   A49221
NOTYET   EQU   *                                               @OS76483
RETBUF   EQU   *                                                SA66605
         LA    R9,AVTBFRTB              BFR RETRN Q
         ST    R9,PRFQCBA-1
RTNBFR   EQU   *
         LR    R1,RPRF                  ADD TO POST LIST
         ST    R5,PRFLINK-1             OLD POST LIST IN LINK
         MVI   PRFPRI,PRIBFRTB          OF BFR
         BAL   R14,DSPCHAIN             EXIT                   @Y17XAMX
         SPACE 5                                                 S22025
         DS    0F                                                S22025
TIMEQBK  EQU   *-8                      RETURN HERE WITH QCB FROMS22025
*                                       TIME DELAY               S22025
OFFTIMEQ DC    AL1(DSPMCPL4)            STCB                     S22025
         DC    AL3(OFFTIMEQ)            THAT GAIN CONTROL WHEN Q S22025
*                                       QCB COMES FROM TIME DELAYS22025
         USING *,R15                    ADDRESSABILITY ON R15    S22025
         LR    RQCB,R1                  SET QCB REG THIS IS THE  S22025
*                                       QCB FROM THE TIME DELAY QS22025
         SR    R0,R0
         LR    R1,R0                    CLEAR
         IC    R1,QCBRELLN              QCB REL LINE NO
         L     RDCB,QCBDCBAD-1          DCB ADDR
         L     R4,DCBIOBAD              FIRST IOB ADDR - SIZE OF LCB
         IC    R0,DCBEIOBX              ISZE OF LCB
         MR    R0,R0                    SIZE X REL LN. NO
         AR    R4,R1                    + ADDR FIRST IOB
         LA    R9,LCBFLAG1-IEDQLCB      DIFFERENCE BETWEEN LCB AND IOB
         SR    R4,R9                    R4 HAS LCB ADDR
         LA    R14,DSPDISP              SET RTN ADDR             CLUP21
         B     NOTEST                   BRANCH                  SA56907
         SPACE 2                                                SA52971
         DROP  R15                                               S22025
         TITLE    '''IEDQAS01''  -  RELEASE'
***********************************************************************
*TITLE  'IEDQAS01'  RELEASE                                           *
*                                                                     *
*  MODULE NAME IEDQAS ( IEDQAS01 )                                    *
*                                                                     *
*  DESCRIPTIVE NAME = RELESAE ROUTINE                                 *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE LEVEL 5                                            *
*                                                                     *
*FUNCTION -- TO RELEASE A TERMINAL THAT HAS BEEN HELD PREVIOUSLY.     *
*   RELEASE WILL BACK UP THE FEFO CHAIN BY MOVING THE SAVED     SA52971
*   POINTER IN INTFF INTO THE POINTER TO THE BEGINNING OF THE   SA52971
*   FEFO CHAIN.  THE SEND SCHEDULER FOR THIS QUEUE WILL THEN BE SA52971
*   ACTIVATED TO SEND THESE MESSAGES ACCORDING TO ITS OWN       SA52971
*   ALGORITHM.                                                  SA52971
*                                                                     *
*ENTRY POINTS -- IEDQAS01 - TO RELEASE A TERMINAL                     *
*   CALLING SEQUENCE         LA    R15,IEDQAS01                       *
*                            BR   R15                                 *
*                                                                     *
*INPUT -- A BUFFER UNIT FROM OPERATOR CONTROL OR FROM THE TIME        *
*   DELAY QUEUE.                                                      *
*                                                                     *
*OUTPUT -- THE HOLD BIT IN THE TERMINAL ENTRY IS OFF AND THE QCBINTFF *
*   CHAIN WILL BE MOVED TO THE FFEFO CHAIN.                           *
*                                                                     *
*EXTERNAL ROUTINES -- DSPPOST - TO PLACE ELEMENTS ON THE READY Q      *
*   A SCHEDULER SUBROUTINE TO FIND A LINE FOR THE SCHEDULER           *
*                                                                     *
*EXITS-ERROR -- NONE                                                  *
*                                                                     *
*TABLES/WORKAREAS -- AVT, SCB, TTABLE, PRF, QCB, STCB, DCB      SA52971
*                                                                     *
*ATTRIBUTES -- REUSABLE, ENABLED, RESIDENT                            *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER      *
*   SET.                                                              *
*                                                                     *
***********************************************************************
*                                                                     *
         DS    0F
IEDQAS01 EQU   *-8                      RELEASE QCB              CLUP21
RELSTCB  DC    AL1(DSPMCPL4)           SUBTASK ENTRY CODE
         DC    AL3(RELSTCB)            STCB ADDRESS
         SPACE 2
RELEASE  EQU   *
         USING *,R15                    SET BASE AS R15        @X50X9MH
         LR    RBASE,R15                SET UP REG 12          @X50X9MH
         SH    RBASE,OFFSET             BASE = TO START OF QAS @X50X9MH
         B     SKIPDC                   BRANCH AROUND CONSTANT @X50X9MH
OFFSET   DC    AL2(RELEASE-IEDQAS)                             @X50X9MH
SKIPDC   EQU   *                                               @X50X9MH
         DROP  R15                      DROP R15 AS BASE       @X50X9MH
         NC    SAVERLSE,SAVERLSE        IS THIS IEDRELS?       @VS41080
         BNZ   NEWRELS                  BRANCH YES             @VS41080
         LR    RPRF,R1                  BFR ADDR
         LH    R1,PRFDEST               DEST OFFSET
NEWRELS  EQU   *                                               @X50X9MH
         N     R1,AVTCLRHI
         LR    R4,R1                    LOAD TTCIN IN R4       @OZ14184
         L     R15,AVTRNMPT             TO SUBROUTINE TO FIND
         BALR  R14,R15                  TERM ENTRY
         L     RQCB,TRMDESTQ-1          DEST QCB ADDR           SA52971
         CLI   PRFPRI,PRIOPCTL          IS THIS PERM HOLD      @OZ15629
         BNE   HOLDNO                   NO, SKIP DELAY Q SCAN  @OZ15629
         CLI   PRFSTAT1,ONE             STOP MID-MSG           @OZ15629
         BNE   BUFFCHK                  BRANCH NO              @OZ15629
         TM    QCBINSRC+2,QCBDELAY      QCB ON TIME DELAY Q    @OZ15629
         BZ    BUFFCHK                  NO, GO CK FOR BUF ON Q @OZ15629
         L     R10,QCBELCHN-1           GET QCB POST ADDR      @OZ15629
         LA    R10,0(,R10)              ZERO BYTE 0            @OZ15629
         LA    R14,TIMEQBK              DELAY RETRN QCB ADDR   @OZ15629
         CR    R10,R14                  SAME AS POST QCB       @OZ15629
         BNE   BUFFCHK                  NO, CK BUF ON TDELAY Q @OZ15629
         LR    R10,R1                   SAVE TERM ENTRY ADDR   @OZ15629
         LR    R1,RQCB                  PUT QCB ADDR IN R1     @OZ15629
         L     R15,AVTHG02              ADDR ELEM REMOVE RTN   @OZ15629
         AH    R13,SAVESIZE             BUMP TO NEXT SAVE AREA @OZ15629
         BALR  R14,R15                  REMVE QCB FROM TDELAY Q@OZ15629
         SH    R13,SAVESIZE             RESTORE SAVE AREA PTR  @OZ15629
         LR    R1,R10                   RETURN TERN ENTRY ADDR @OZ15629
         NI    QCBINSRC+2,AVTEFF-QCBDELAY TURN OFF TDELAY BIT  @OZ15629
BUFFCHK  EQU   *                                               @OZ15629
         BAL   R10,QSCAN                GO SCAN TDELAY Q FOR BU@OZ15629
         LA    R14,DSPDISP              SET ROUTINE ADDR       @OZ15629
         B     FREEBUF                  GO FREE BUFFER         @OZ15629
HOLDNO   EQU   *                                               @OZ15629
         TM    TRMSTATE,TRMHELDN        TERMINAL HELD?         @X50X9MH
         BO    RLSTERM                  BRANCH YES             @X50X9MH
         NC    SAVERLSE,SAVERLSE        IS THIS IEDRELS?       @VS41080
         BZ    ALLFEFO                  BRANCH NO              @VS41080
         MVI   RTNFIELD,X'04'           ISSUE 04 RETURN CODE   @X50X9MH
         B     ALLFEFO                  DON'T FREE BUFFER      @X50X9MH
RLSTERM  EQU   *                                               @X50X9MH
         NI    TRMSTATE,TRMHELDF        TURN OFF HELD FLAG
         NI    QCBSTAT,AVTEFF-QCBTRMHO  INDICATE TERMINAL WAS RELEASED
         TM    QCBDSFLG,QCBDRQQ         CONC DRQ                 S22026
         BO    ALLFEFO                  BRANCH IF YES            S22026
         LA    RPQ,QCBMSIZE(RQCB)       ADDR OF PRTY QCB
LOOP     EQU   *
         NC    QCBINTFF(3),QCBINTFF     ANY HELD MSGS ON THES LEVEL
         BZ    NEXTLVL                  NO, GO TO NEXT ONE       CLUP21
         MVC   QCBFFEFO(3),QCBINTFF     SET NEW FEFO
         XC    QCBINTFF(3),QCBINTFF     CLEAR FIRST HELD FEFO
         MVC   QCBPREVF(3),QCBPFEFO     RESET SHUFFLE SPOT      SA52971
NEXTLVL  EQU   *
         CLI   QCBPRIPQ,AVTEZERO        LAST PRTY QCB
         LA    RPQ,QCBPEND-IEDQPQCB(RPQ)
*              ADDR OF NEXT PRTY LEVEL QCB
         BNE   LOOP                     NO, CONTINUE SEARCH      CLUP21
ALLFEFO  EQU   *
         BAL   R10,QSCAN                SCAN TIME DELAY QUEUE  @OZ14184
         NC    SAVERLSE,SAVERLSE        IS THIS IEDRELS?       @VS41080
         BNZ   NOBUFRTN                 YES-DON'T FREE BUFFER  @VS41080
         LR    R10,RQCB                 SAVE QCB ADDR FROM DISPATCHER
         BAL   R14,FREEBUF              GO FREE BUFFER         @OZ15629
         LR    RQCB,R10                 RESTORE QCB ADDR
         LA    R14,DSPDISP              SET RTN ADDR             CLUP21
         B     OLDCODE                  CONTINUE OLD PATH      @X50X9MH
FREEBUF  EQU   *                                               @OZ15629
         LA    R1,AVTBFRTB              GET BUF RTN QCB PTR    @OZ15629
         ST    R1,PRFQCBA-1             PUT PTR IN BUFFER      @OZ15629
         MVI   PRFPRI,PRIBFRTB          SET POST PRIORITY      @OZ15629
         LR    R1,RPRF                  PUT BUF ADDR IN REG1   @OZ15629
         B     DSPPOSTR                 GO POST BUFFER         @OZ15629
NOBUFRTN EQU   *                                               @X50X9MH
         LA    14,RETURN02              RETURN THRU IEDQUI     @X50X9MH
OLDCODE  EQU   *                                               @X50X9MH
         CLI   QCBSTPRI,X80             DIAL W/DELAY             S21903
         BE    NOTEST                                           SA56303
         TM    QCBINSRC+2,QCBDELAY      IS TIME Q
         BO    TIMEQ                    BRANCH IF YES          @OS76674
         CLI   QCBSTPRI,X60             DIAL W/O CLOCK OR INTVL@OS76674
         BL    NOTEST                   BRANCH IF NO           @OY13627
*   SCAN DIAL-OUT CALL QUEUE FOR STCB AND,IF FOUND,PROCEED AS IF
*   QCB HAD BEEN REMOVED FROM THE TIME DELAY QUEUE             @OS76674
         SR    R15,R15                  CLEAR FOR IC           @OS76674
         L     R10,QCBDCBAD-ONE         GET DCB ADDRESS        @OS76674
         TM    DCBDSORG-IHADCB(R10),AVTE80 IS THIS DCB OR LGB  @OS77382
         BO    NOTEST                   LGB, BRANCH            @OS77382
         IC    R15,DCBEIOBX-IHADCB(R10) LCB LENGTH             @OS76674
         L     R10,DCBIOBAD-IHADCB(,R10) ADDR OF IOB           @OS76674
*                                         LESS LCB SIZE        @OS76674
         AR    R10,R15                  POINT TO FIRST IOB     @OS76674
         SH    R10,DOCQ                 ADDR OF D/O CALL QUEUE @OS76674
         LA    R2,QCBSTVTO              SEND SCHED TO FIND     @OS76674
LOOPDOCQ EQU   *                                               @OS76674
         LR    R15,R10                  SAVE PREVIOUS ELEMENT  @OS76674
         L     R10,STCBLINK-1-IEDQSTCB(,R15) NEXT ELEMENT      @OS76674
         CLI   STCBPRI-IEDQSTCB(R10),AVTEZERO END OF CHAIN?    @OS76674
         BE    NOTEST                   BRANCH IF YES          @OS76674
         LA    R10,0(,R10)              CLEAR HIGH BYTE        @OS76674
         CLR   R10,R2                   IS THIS THE SEND SCHED @OS76674
*                                        WE ARE LOOKING FOR?   @OS76674
         BNE   LOOPDOCQ                 CONTINUE SCAN IF NO    @OS76674
         MVC   STCBLINK-IEDQSTCB(3,R15),STCBLINK-IEDQSTCB(R10) @OS76674
*              REMOVE SEND SCHED FROM D/O CALL QUEUE           @OS76674
         B     RESETQ                   PUT SEND SCHED BACK    @OS76674
*                                        INTO DEST QCB         @OS76674
TIMEQ    EQU   *                                               @OS76674
         LR    R1,RQCB                  QCB TO BE REMOVED       SA56303
         L     R15,AVTHG02              ADDR TO REMOVE          SA56303
         AH    R13,SAVESIZE             BUMP TO NEXT SAVEAREA  @OX12493
         LR    R10,R14                  SAVE R14                SA56303
         BALR  R14,R15                  REMOVE FROM TIME DELAY  SA56303
         LR    R14,R10                  RESTORE R14             SA56303
         SH    R13,SAVESIZE             RESTORE SAVEAREA ADDR  @OX12493
         NI    QCBINSRC+2,AVTEFF-QCBDELAY   RESET DELAY FLAG    SA56303
RESETQ   EQU   *                                               @OS76674
         MVC   QCBSLINK(3),QCBSTCHN     REINSERT SEND           SA56303
         LA    R10,QCBSTCHN-1            SCHEDULER STCB         SA56303
         IC    R15,QCBSTVTO              INTO THE               SA56303
         ST    R10,QCBSTVTO              QCB STCB               SA56303
         STC   R15,QCBSTVTO              CHAIN                  SA56303
         CLI   QCBSTVTO,DSPBUFSC        BUFFERED QCB            SA63009
         BNE   NOTEST                   NO, BRANCH              SA63009
         TM    QCBSTAT,QCBSEND          SENDING TO BFRD TERM   @OX12572
         BZ    NOTEST                   NO, COUNT WAS DECRMNTD @OX12572
*                                       BY BFRD TERM SCHEDULER @OX12572
         L     R10,QCBDCBAD-ONE         GET DCB ADDRESS         SA63009
         SR    R15,R15                  CLEAR FOR IC            SA63009
         IC    R15,QCBRELLN             GET RELATIVE LINE NUMBERSA63009
         SLL   R15,TWO                  MULTIPLY BY FOUR        SA63009
         L     R10,DCBINVLI-IHADCB-AVTECD4(R10,R15) GET         SA63009
*                                        INVITATION LIST ADDR   SA63009
         IC    R15,INVTCNT(R10)         SUBTRACT ONE FROM COUNT SA63009
         BCTR  R15,ZERO                 OF TERMINALS CURRENTLY  SA63009
         STC   R15,INVTCNT(R10)         BEING SENT TO -         SA63009
*                                        BUFFERED SCHEDULER     SA63009
*                                        WILL ADD IT BACK       SA63009
NOTEST   EQU   *
         LA    R10,QCBSTCHN-1           ADDR OF STCB
         L     R15,QCBSTCHN-1           SUBTASK POINTER          CLUP21
         LA    R15,AVTEZERO(,R15)       CLEAR FOR COMPARE        CLUP21
         CR    R10,R15                  IS SEND-SCHED THERE      CLUP21
         BCR   NE,R14                   NO, EXIT                 S21903
         SR    R15,R15                  THIS ROUTINE WILL
         IC    R15,QCBSTVTO             FIND THE SUBROUTINE
         AR    R15,R15                  IN THE SCHEDULER TO
         L     R2,AVTDISP-24(R15)       CALL TO MOVE THE STCB
         SH    R2,AVTHA2                FROM THE QCB TO THE SCB
         LH    R15,0(R2)                TO THE SCB TO DIAL OUT Q
         AR    R15,R2
         BR    R15                      RETURN                   S22025
QSCAN    EQU   *                                               @OZ14184
         LA    R2,AVTDELYB              ADDR TIME DELAY QCB    @OZ14184
LOOPBUF  EQU   *                                               @OZ14184
         L     R3,OFFSET1C(,R2)         GET LINK ADDR          @OZ14184
         LA    R3,0(,R3)                ZERO HIGH BYTE         @OZ14184
         C     R3,AVTDELYB              IS ELEM TIME DELAY QCB @OZ14184
         BER   R10                      YES, ELEM NOT HERE     @OZ14184
         CLI   TDLOFF(R3),BUFFER        IS THIS ELEM A BUFFER  @OZ14184
         BNE   NOTBUF                   NO, GET NEXT ELEM      @OZ14184
         CH    R4,PRFDEST-IEDQPRF(R3)   MATCHING BUFFER        @OZ14184
*                                       ON TIME DELAY QUEUE ?  @OZ14184
         BNE   NOTBUF                   NO, BRANCH             @OZ14184
         LA    R2,IEDQAS01              GET ADDR OF RELEASE QCB@OZ14184
         CLM   R2,7,TDLQCBAD(R3)        BUF SCHED FOR REL POST @OZ14184
         BE    FOUND                    YES, GO TO REMOVE      @OZ14184
NOTBUF   EQU   *                                               @OZ14184
         LR    R2,R3                    PUT NEXT ELEM ADDR     @OZ14184
*                                       IN REG 2               @OZ14184
         B     LOOPBUF                  GO SEARCH NEXT ELEM    @OZ14184
*                                       ON TIME DELAY QUEUE    @OZ14184
FOUND    EQU   *                                               @OZ14184
         L     R15,AVTHG02              GET ADDR OF TIME DELAY @OZ14184
*                                       REMOVE ELEM ROUTINE    @OZ14184
         AH    R13,SAVESIZE             BUMP TO NEXT SAVE AREA @OZ14184
         LR    R1,R3                    PUT BUFFER ADDR IN REQ @OZ14184
         BALR  R14,R15                  REMOVE BUFFER FROM TIME@OZ14184
*                                       DELAY QUEUE            @OZ14184
         SH    R13,SAVESIZE             RESTORE SAVE AREA PTR  @OZ14184
         LR    R2,RQCB                  SAVE QCB ADDR          @OZ14184
         LR    R5,RPRF                  SAVE BUF ADDR          @OZ15629
         LR    RPRF,R3                  SET BUFFER ADDR        @OZ15629
         BAL   R14,FREEBUF              GO PUT BFR ON RDY QUEUE@OZ15629
         LR    RPRF,R5                  RESTORE BUF ADDR       @OZ15629
         LR    RQCB,R2                  RESTORE QCB ADDR       @OZ14184
         BR    R10                      RETURN TO CALLER       @OZ14184
         SPACE 1
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  S21101
*                                                             *  S21101
*        THIS SECTION OF CODE GETS CONTROL WHEN THE HOLD      *  S21101
*        MACRO IS ISSUED IN THE INHEADER SUBGROUP AND IS      *  S21101
*        ENTERED FROM THE USER INTERFACE ROUTINE, IEDQUI      *  S21101
*                                                             *  S21101
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *@X50X9MH
IEDQAS02 EQU   *                                               @X50X9MH
         DROP  13                                              @X50X9MH
         USING IEDQAVTD,R9                                     @X50X9MH
         USING HOLD,RBASE                                      @X50X9MH
         XC    SAVERLSE,SAVERLSE        CLEAR SAVEAREA         @X50X9MH
         CLI   2(R1),X'D9'              IS THIS IEDRELS MACRO  @X50X9MH
         BNE   OLDRLSE                  BR NO TO CONTINUE      @X50X9MH
         XC    RTNFIELD,RTNFIELD        CLEAR RTNFIELD         @X50X9MH
         LH    R1,PRFSRCE               TERMINAL TO BE RELEASED@X50X9MH
         LA    R15,INVALSRC             ASSUME ERROR           @OX12507
         N     R1,AVTCLRHI              CLEAR HI HALFWORD AND  @OX12507
*                                       CHECK FOR ZERO         @OX12507
         BZ    GOODRTN                  BR IF SOURCE INVALID   @OX12507
         ST    R9,SAVERLS1              SAVE REG 9             @VS41488
         ST    R13,SAVERLSE             SAVE REG 13            @X50X9MH
         LA    R13,AVTSAVE2             PUT AVT ADDR IN REG13  @X50X9MH
         L     RDISP,AVTEA              PUT DISPATCH ADDR IN B @YM08009
         LA    R15,RELEASE              PREPARE TO BRANCH      @X50X9MH
         BR    R15                      BR TO OLD RELEASE CODE @X50X9MH
OLDRLSE  EQU   *                                               @X50X9MH
         LR    R8,R1                    SAVE PARM LIST ADDRESS @OY12688
*                                         ADDRESS                S21101
         LH    R1,LCBTTCIN              CURRENTLY CONNECTED    @OY12688
         LA    R15,INVALSRC             ASSUME ERROR             CLUP21
         N     R1,AVTCLRHI              CLEAR THE HIGH ORDER     S21101
*                                         BYTE OF THE OFFSET     S21101
         BZ    RETURN02                NO, RETURN                CLUP21
         L     R15,AVTRNMPT            LOAD THE ADDRESS OF THE   S21101
*                                         IEDQTNT ROUTINE        S21101
         CLC   LCBTTCIN,TNTLEN-IEDQTNTD(R15)   A TOTE TNT?     @Y17XANQ
         BALR  R14,R15                  BRANCH TO IEDQTNT        S21101
         SPACE 2                                                 S21101
         LA    R15,NOTHELD              ASSUME ERROR             CLUP21
         TM    TRMSTATE,TRMLIST+TRMPROC CAN TERM BE HELD        SA66617
         BNZ   RETURN02                NO, RETURN                CLUP21
         LA    R15,ALRDYHLD             ASSUME ERROR             CLUP21
         TM    TRMSTATE,TRMHELDN        IS TERMINAL ALREADY HELD CLUP21
         BNZ   RETURN02                 YES, RETURN              CLUP21
         SPM   R14                      IS THIS A TOTE TTE?    @Y17XANQ
         BNH   NOXTOTE                    BRANCH IF NOT        @Y17XANQ
         SPACE
         TM    TRMSTATE,TRMPREF         IS TTE ATTACHED VIA NCP?
         BZ    NOXTOTE                    BRANCH IF NOT        @Y17XANQ
         SPACE
         LR    RQCB,R1                  COPY TTE ADDRESS       @Y17XANQ
         LA    R15,TRMPRFSZ             PREFIX SIZE            @Y17XANQ
         SLR   RQCB,R15                 BACK UP TO PREFIX      @Y17XANQ
         TM    TRMBYTE0-IEDNTRM(RQCB),TRMSNA    SNA TOTE,      @Y17XANQ
*                                       ALLOW A HOLD FUNCTION  @Y17XANQ
         BZ    RETURN02                   BRANCH IF NOT SNA    @Y17XANQ
         SPACE
NOXTOTE  EQU   *                                               @Y17XANQ
         L     RQCB,TRMDESTQ-1          LOAD THE ADDRESS OF THE  S21101
*                                         DESTINATION QCB        S21101
         LA    R15,NOTDISK              ASSUME ERROR             CLUP21
         TM    QCBDSFLG,QCBREUS+QCBNREUS     IS DISK QUEUEING    S21101
*                                         BEING USED             S21101
         BZ    RETURN02                NO, RETURN                CLUP21
         OI    TRMSTATE,TRMHELDN        SET THE HELD BIT IN THE  S21101
*                                         TERMINAL ENTRY         S21101
         OI    QCBSTAT,QCBTRMHO         AND IN THE DEST QCB      S21101
         SR    R2,R2                    CLEAR FOR RETURN CODE  @OY12688
         TM    LCBSTAT1,LCBSENDN        SENDING/OUTHDR         @OY12688
         BNO   RETURN01                 NO RETURN              @OY12688
         TM    TWO(R8),OPFLDI           INTERVAL SPECIFIED     @OY12688
         BZ    RETURN01                 NO, EXIT               @OY12688
         BM    NOPT                     NOT INTVL=OPFLD        @OY12688
         LA    R1,EIGHT(R8)             SET QAE PARM LIST      @OY12688
         L     R15,FOUR(R8)             ADDRESS OF IEDQAE      @OY12688
         MVI   AVTEZERO(R1),AVTEFF      SET PARAMETERS FOR     @YM07733
         MVI   ONE(R1),FOUR             ENTRY TO IEDQAE        @YM07733
         LA    R3,AVTSAVE3-AVTSAVE2(R13) NEXT SAVE AREA ADDR   @OY12688
         ST    R13,FOUR(R3)             SAVE BACKWARD POINTER  @OY12688
         ST    R3,EIGHT(R13)            SAVE FORWARD POINTER   @OY12688
         LR    R13,R3                   QAE SAVE AREA          @OY12688
         BAL   R14,FOUR(R15)            LINK TO QAE PLUS FOUR  @YM07733
         L     R13,FOUR(R13)            RESTORE SAVE AREA      @YM08009
HERE     EQU   *
         LTR   R15,R15                  CHECK RETURN CODE      @OY12688
         BZ    MOVE                     OPTION FLD FOUND       @YM07733
DEFLT    EQU   *                                               @OY12688
         LA    R2,X18                   NO OPFIELD FOUND RET CO@OY12688
         LA    R1,ONESCND               DEFAULT OF ONE SECOND  @OY12688
MOVE     EQU   *                                               @OY12688
         MVC   EIGHT(TWO,R8),ZERO(R1)   MOVE INTVL TO PLIST    @OY12688
         LA    R8,FOUR(,R8)             BUMP PARMLIST ADDR     @OY12688
NOPT     EQU   *                                               @OY12688
         L     R1,AVTBFREB              AVAIL BUFFER QUEUE     @OY12688
         LA    R1,ZERO(R1)              CLEAR HIGH ORDER HALF  @OY12688
         LTR   R1,R1                    ANY BUFFERS AVAIL      @OY12688
         BNZ   NOCHNG                   YES, LEAVE RET CODE    @OY12688
         LA    R15,X1C                  NO BFRS AVAIL RET CODE @OY12688
         B     RETURN02                 EXIT                   @OY12688
NOCHNG   EQU   *                                               @OY12688
         MVC   AVTBFREB+1(3),FIVE(R1)   REMOVE BUFFER FROM Q   @OY12688
         LH    R15,AVTAVFCT             AVAILABLE COUNT        @OY12688
         BCTR  R15,0                    DECREMENT              @OY12688
         STH   R15,AVTAVFCT             STORE IT BACK          @OY12688
         MVC   PRFDEST-IEDQPRF(2,R1),LCBTTCIN SET UP DEST      @OY12688
         MVI   PRFSTAT1-IEDQPRF(R1),ZERO MARK AS HDR BUFFER    @OY12688
         MVI   PRFNBUNT-IEDQPRF(R1),X01 INDICATE ONE UNIT      @OY12688
         MVC   PRFSRCE-IEDQPRF(2,R1),FOUR(R8) PUT INTVL IN BFR @OY12688
         MVI   PRFSIZE-IEDQPRF(R1),EIGHT OFFSET TO QCB         @OY12688
         MVI   FOUR(R1),PRIRELSE        SET PRIORITY           @OY12688
         LA    R15,IEDQAS01             RELEASE QCB ADDRESS    @OY12688
         ST    R15,EIGHT(R1)            PUT IT IN BUFFER       @OY12688
         L     R15,AVTHG01              INSERT TIME ELEMENT RTN@OY12688
         LR    RPRF,R13                 SAVE AVTSAVE ADDRESS   @OY12688
         LA    R13,AVTSAVE3             MOVE TO NEXT           @OY12688
         BALR  R14,R15                  LINK TO INSERT ELEMENT @OY12688
         LR    R13,RPRF                 RESTORE SAVE2 ADDRESS  @OY12688
RETURN01 EQU   *                                               @OY12688
         LR    R15,R2                   SET RETURN CODE        @OY12688
RETURN02 EQU   *                                               @OY12688
         NC    SAVERLSE,SAVERLSE        SAVEAREA CONTAIN ZEROS @X50X9MH
         BZ    GOODRTN                  YES, CON'T OLD CODE    @X50X9MH
         L     R13,SAVERLSE             RESTORE REG 13         @OX12493
         XC    SAVERLSE,SAVERLSE        CLEAR SAVE AREA        @OZ29587
         LR    R9,R13                   R9 HAS CALLERS SAVEADR @OX12493
         SH    R9,SAVESIZE              SUBTRACT X'48'         @OX12493
         ST    R9,4(R13)                RESTORE BACK POINTER   @OX12493
         L     R9,SAVERLS1              RESTORE R9             @OX12493
         SR    R15,R15                  CLEAR R15 FOR RET CODE @OX12493
         IC    R15,RTNFIELD             ISSUE RETURN CODE      @OX12493
GOODRTN  EQU   *                                               @OX12493
         XC    SAVERLSE,SAVERLSE        CLEAR SAVE AREA
         L     R12,AVTUI                LOAD ADDR OF RETURN RTN@OY12688
         B     FOUR(R12)                RETURN TO CALLER       @OY12688
DOCQ     DC    AL2(LCBFLAG1-IEDQLCB+8)  CALL QUEUE OFFSET      @OY12688
         DS    0F                       BOUNDARY ALIGNMENT     @YM07733
SAVERLSE DC    XL4'0'                   SAVE AREA FOR R13      @OX12492
SAVERLS1 DC    XL4'0'                   SAVE AREA FOR REG 9    @OX12492
SAVESIZE DC    H'72'                    SIZE OF AVT SAVE AREA  @OX12493
ONESCND  DC    H'1'                     ONE SECOND DELAY DEFAUL@OY12688
RTNFIELD DC    XL1'0'                   RTNCODE FIELD          @OX12492
         EJECT
         TQCBED                                                  S22026
         EJECT                                                   S21101
         TPRIOR
         EJECT
         TAVTD                                                   S22025
         EJECT
         TLCBD
         TSTCBD
         TPRFD
         TQCBD
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*        OFFSETS FOR THE TIME DELAT SUBTASK                        *
TDLLINK  EQU   QCBLKRRN-IEDQQCB         AT X'1D'
TDLOFF   EQU   QCBEOLDT+2-IEDQQCB       AT X'12'
TDLEOLDT EQU   QCBEOLDT-IEDQQCB         AT X'10'
TDLQCBAD EQU   QCBSTCHN-IEDQQCB         AT X'08'
TDLINDEX EQU   X'08'                    OFFSET TO QCB ADDR
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*        TO COMPLY WITH THESE OFFSETS THE FOLLOWING WILL
*        BE DESTROYED
*        PRFTIC                         AT X'08'
*        PRFCRCD                        AT X'28H
*        PRFSRCE                        AT 16
*        PRFSIZE                        AT 18
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
         DCBD  DSORG=TX
         TTRMD
         TSCBD
         EJECT                                                   S21903
         TTNTD                         TERMNAME TABLE DSECT     SA63011
         TDISPD
         END
