AZ01     TITLE '''IEDQAZ'' - REDIRECT ROUTINE'
IEDQAZ   CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A506000                                                         A42407
*C477600                                                         A42407
*C477600,509000                                                  A51765
*C824000                                                         A52511
*A828000,930000                                                  A52511
*C700000-704000                                                 SA55948
*     CLEAN-UP                                                   S21903
*C556000                                                        SA62385
*A 490000,692000                                                SA63999
*C 700000,703000                                                SA63999
*A SAME CHANGE FOR 63999                                        OY00468
*C761800                                                       @Y17XAMG
*A426000,476800,908000,930000,944000                           @OY12678
*D507000,924000                                                @OY12678
*A479440                                                       @OY13640
*A477320                                                       @OY13658
*C929400-029600                                                @OY13658
*A001827,002905,002996                                         @OS77932
*A001260,001813,002499,002548,003668,003808                    @X30X5MT
*D001267,002555-002632                                         @X30X5MT
*A002289,002296                                                @OY19052
* DUMMY APAR                                                   @OZ27328
***********************************************************************
*                                                                     *
*  TITLE: IEDQAZ - REDIRECT ROUTINE                                   *
*                                                                     *
*  MODULE NAME = IEDQAZ                                               *
*                                                                     *
*  DESCRIPTIVE NAME = REDIRECT / ERRORMSG ROUTINE                     *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS CHANGE LEVEL 10                                      @Y17XANQ
*                                                                     *
*FUNCTION --                                                          *
*   REDIRECTS A MESSAGE TO THE DESTINATION SPECIFIED BY THE USER.     *
*                                                                     *
*   IF THE REDIRECT DESTINATION IS IN AN OPTION FIELD,  THE ROUTINE   *
*   LINKS TO THE LOCATE OPTION ROUTINE (IEDQAE) TO GET THE ADDRESS    *
*   OF THE OPTION FIELD.  IF THE FIELD IS NOT FOUND,  THE ERROR       *
*   HANDLING EXIT IS TAKEN.                                           *
*                                                                     *
*   IF THE FIELD IS FOUND,  PARAMETERS ARE BUILT FOR,  AND A LINK     *
*   TAKEN TO,  THE BINARY SEARCH ROUTINE (IEDQA1).  THIS IS ALSO      *
*   THE PROCEDURE TAKEN WHEN THE REDIRECT DESTINATION NAME IS         *
*   EXPLICITLY SPECIFIED BY THE MACRO.  ON RETURN,  IF THE NAME IS    *
*   NOT FOUND IN THE TERMINAL NAME TABLE,  THE ERROR HANDLING EXIT    *
*   IS TAKEN.                                                         *
*                                                                     *
*   IF THE NAME IS FOUND,  THE DESTINATION KEY RETURNED BY BINARY     *
*   SEARCH IS PASSED TO THE LOOK UP DESTINATION ROUTINE (IEDQAV).     *
*   THIS IS ALSO THE PROCEDURE TAKEN WHEN THE REDIRECT DESTINATION    *
*   IS THE ORIGIN OR THE ORIGINAL DESTINATION,  IN WHICH CASE THE     *
*   KEY PASSED IS ACCESSED FROM THE PREFIX FIELD PRFSRCE (ORIGIN)     *
*   OR PRFDEST (ORIGINAL DESTINATION).  ON RETURN,  IF THE DESTINA-   *
*   TION IS A TSO TERMINAL,  THE ERROR HANDLING EXIT IS TAKEN.        *
*                                                                     *
*   IF IT IS NOT,  THE MESSAGE IS POSTED TO THE DESTINATION VIA AN    *
*   EXIT TO THE DISPATCHER AT THE LABEL DSPCHAIN.                     *
*                                                                     *
*    ERRORMSG MACRO FUNCTION USES THE REDIRECT ROUTINE TO             *
*   DETERMINE THE ERROR MESSAGE DESTINATION.  WHEN THIS IS THE CASE   *
*   THE REDIRECT ROUTINE DOES NOT POST THE MESSAGE.  INSTEAD THE      *
*   FIELD SCBMACR IN THE SCB IS SET TO THE ADDRESS OF THE ERROR       *
*   MESSAGE PARAMETER LIST AND EXIT IS MADE TO THE ERROR MESSAGE    . *
*   ROUTINE..                                                         *
*                                                              @Y17XAMF
*   IF IEDAZ IS CALLED FOR AN ERRORMSG WITH HEADER=NO AND THIS IS THE *
*   FIRST MACRO IN THE MSG GROUP, THE ROUTINE MUST WAIT FOR EOM IN-   *
*   DICATION BY POSTING AN ERB.  UPON REGAINING CONTROL, SCBDESTQ IS  *
*   STORED IN LCBSTART WHICH IS RESTORED BY IEDQT.  BUFFER STEAL IS   *
*   THEN CALLED FOR A BUFFER INTO WHICH THE MESSAGE IS PLACE.         *
*   IF NO BUFFER IS AVAILABLE AN ERB IS POSTED TO IEDQGA TO OBTAIN    *
*   A BUFFER.  THE PREFIX IS THEN INITIALIZED APPROPRIATELY AND IT IS *
*   POSTED TO IEDQBD FOR THE IEDQAT PROCESSING.                @Y17XAMF
*                                                                     *
*   ERROR HANDLING EXIT (TESTDEAD) --                                 *
*   IF A DEAD-LETTER QUEUE IS SPECIFIED,  ITS KEY IS ACCESSED AND     *
*   PASSED TO IEDQAV AND THE MESSAGE IS POSTED THERE.  IF NONE IS     *
*   SPECIFIED,  THE MESSAGE IS NOT REDIRECTED AND EXIT IS MADE TO     *
*   BUFFER DISPOSITION VIA THE DISPATCHER AT THE LABEL DSPCHAIN.      *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAZ01' TO REDIRECT A MESSAGE TO AN ADDITIONAL DESTINA-    *
*   TION.  THE ROUTINE IS ENTERED BY A BRANCH FROM BUFFER             *
*   DISPOSITION (IEDQBD).                                             *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 - ADDRESS OF AN ADDITIONAL ELEMENT TO BE POSTED        *
*                                                                     *
*   REGISTER 3 - ADDRESS OF THE SCB                                   *
*                                                                     *
*   REGISTER 6 - ADDRESS OF THE BUFFER                                *
*                                                                     *
*   REGISTER 8 - ADDRESS OF A MACRO-GENERATED PARAMETER LIST.         *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        *       * PARAM * NO OF *       *                            *
*        * INDEX * LIST  * BFRS  *       *                            *
*        *       * LNGTH *       *       *                            *
*        *************************       *                            *
*        *                               *                            *
*        *          ERROR MASK           *                            *
*        *                               *                            *
*        *********************************                            *
*        *       *     VARIABLE DATA     *                            *
*        *STATUS *      (SEE BELOW)      *                            *
*        *       *                       *                            *
*        *********************************                            *
*        * INDEX * PARAM * INDEX * INDEX *                            *
*        *  TO   * LIST  *  TO   *  TO   *                            *
*        *   AT  * LNGTH *   AF  *   AO  *                            *
*        *********************************                            *
*        *       *                       *                            *
*        *       *  ADDRESS OF MESSAGE   *                            *
*        *       *                       *                            *
*        *********************************                            *
*        *          ADDRESS OF           *                            *
*        *       USER EXIT ROUTINE       *                            *
*        *           (OPTIONAL)          *                            *
*        *********************************                            *
*                                                                     *
*        VARIABLE DATA:                                               *
*                                                                     *
*        *********************************                            *
*        *       *                       * TO BE SENT                 *
*        *  'S'  *     UNUSED (ZERO)     *   TO SOURCE                *
*        *       *                       *                            *
*        *********************************                            *
*                                                                     *
*        *********************************                            *
*        *       *                       * TO BE SENT                 *
*        *  'D'  *     UNUSED (ZERO)     *   TO DESTINATION           *
*        *       *                       *   SPECIFIED IN PREFIX      *
*        *********************************                            *
*                                                                     *
*        *********************************                            *
*        *       * INDEX *  OPT  *  RTN  * TO BE SENT                 *
*        *  'O'  *  TO   * FIELD *  REG  *   TO DESTINATION           *
*        *       *   AE  * OFFST * OFFST *   SPECIFIED IN OPTION FL   *
*        *********************************                            *
*                                                                     *
*        *********************************                            *
*        *       *                       * TO BE SENT                 *
*        *  'N'  *    ADDRESS OF NAME    *   TO DESTINATION           *
*        *       *                       *   SPECIFIED BY NAME        *
*        *********************************                            *
*                                                              @Y17XANQ
*        *********************************                     @Y17XANQ
*        *       *                       *                     @Y17XANQ
*        *  'T'  *   ADDRESS OF 'TOTE'   *  TO BE SENT TO TOTE @Y17XANQ
*        *       *                       *                     @Y17XANQ
*        *********************************                     @Y17XANQ
*                                                                     *
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE REGISTER FOR THIS      *
*   SUBTASK.                                                          *
*                                                                     *
*   REGISTER 13 - ADDRESS OF THE SAVE AREA AND BASE FOR AVT           *
*   ADDRESSABILITY                                                    *
*                                                                     *
*OUTPUT --                                                            *
*   IF A VALID DESTINATION IS FOUND,  THE KEY FOR THE DESTINATION     *
*   IS SET IN THE PREFIX (PRFDEST).  THE DESTINATION QCB ADDRESS IS   *
*   SET IN THE BUFFER (PRFQCBA) AND THE ADDRESS OF THE ADDITIONAL     *
*   ELEMENT IS SET IN THE BUFFER (PRFLINK).  IF A VALID DESTINATION   *
*   IS NOT FOUND,  THE ADDRESS OF THE DEAD-LETTER QCB OR,  IF THERE   *
*   IS NO DEAD-LETTER QUEUE,  THE ADDRESS OF THE BUFFER DISPOSITION   *
*   QCB IS SET IN THE BUFFER (PRFQCBA).                               *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   RECALLED HEADER BUFFER                                            *
*                                                                     *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*EXITS,  NORMAL --
*   THE EXIT ADDRESS IN THE REDIRECT MACRO IS TESTED FOR AN    @XM05843
*   EXIT ROUTINE. A ZERO INDICATES NO EXIT WAS SPECIFIED. AN   @XM05843
*   ADDRESS CAUSES A BRANCH TO THE EXIT ROUTINE TO TAKE PLACE. @XM05843
*   ON RETURN FORM THE EXIT ROUTINE REGISTER 15 SPECIFIES WHAT @XM05843
*   IS TO BE DONE WITH THE CURRENT MESSAGE.  A RETURN CODE OF  @XM05843
*   ZERO PROCESSES THE MESSAGE NORMALLY, A RETURN CODE OF FOUR @XM05843
*   DOESN'T REDIRECT THIS MESSAGE, A RETURN CODE OF EIGHT      @XM05843
*   REDIRECTS THE MESSAGE TO THE DISTINATION POINTED TO IN     @XM05843
*   REGISTER ONE.                                              @XM05843
*   A VALID DESTINATION HAS BEEN FOUND.  THE BUFFER IS POSTED TO      *
*   THE DESTINATION.                                                  *
*                                                                     *
*EXITS, ERROR --                                                      *
*   NO VALID DESTINATION HAS BEEN FOUND.  A DEAD-LETTER QUEUE IS      *
*   SPECIFIED.  THE BUFFER IS POSTED TO THE DEAD-LETTER QUEUE.        *
*                                                                     *
*   NO VALID DESTINATION HAS BEEN FOUND.  NO DEAD-LETTER QUEUE IS     *
*   SPECIFIED.  THE BUFFER IS POSTED TO BUFFER DISPOSITION.           *
*                                                                     *
*TABLES/WORK AREAS: N/A                                               *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSEABLE, REENTERANT,ENABLED,RESIDENT,       *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTE -- THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      *
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    *
*   BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        *
*   DEFINITIONS.                                                      *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST REGISTER
         SPACE
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RSCB3    EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
         SPACE
RPREFIX  EQU   6                        ADDRESS OF BUFFER
         SPACE
RELEM7   EQU   7                        ADDRESS OF ELEMENT
         SPACE
RPARM8   EQU   8                        PARAMETER LIST ADDR
*                                         ON INITIAL ENTRY
         SPACE
RGO9     EQU   9                        LINK REG AFTER DEST FOUND
         SPACE
RDISP    EQU   11                       ADDRESS OF DISPATCHER
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       BRANCH REGISTER AND
*                                         RETURN CODE REGISTER
         EJECT
********* OTHER EQUATES *********
         SPACE
CHARS    EQU   C'S'                     SOURCE
CHARD    EQU   C'D'                     ORIGINAL DESTINATION
CHARN    EQU   C'N'                     NAME
CHART    EQU   C'T'                     TOTE INDICATOR         @Y17XANQ
         SPACE
PARMAZ   EQU   0                        INDEX OF IEDQAZ
PARMSTAT EQU   2                        STATUS BYTE
PARMDTYP EQU   0                        DESTINATION TYPE CODE
PARMNAME EQU   1                        ADDRESS OF NAME
PARMAE   EQU   1                        INDEX OF IEDQAE
PARMOPT  EQU   2                        OPTION FIELD OFFSET
PARMAT   EQU   4                        IEDQAT PARAMETER LIST
         SPACE
ONE      EQU   1                        INCREMENT FACTOR OF ONE
FOUR     EQU   4                        LENGTH OF A FULLWORD
         SPACE
UNCOFLAG EQU   X'01'                    UNCONDITIONAL FLAG
ERMSFLAG EQU   X'01'                    ERROR MESSAGE FLAG
INDEXA1  EQU   X'08'                    INDEX OF IEDQA1
INDEXAV  EQU   X'10'                    INDEX OF IEDQAV
RECALL   EQU   X'02'                    RECALL REQUIRED        @0Y12678
OPTIC    EQU   X'08'                    TOC OPCODE             @0Y12678
THIRTWO  EQU   32                       SHIFT LENGTH           @0Y12678
REGOFF   EQU   12                       OFFSET INTO SAVE AREA  @XM05843
TWO      EQU   2                        CONSTANT EQUATE        @XM05843
SEVEN    EQU   7                        MASK FOR ICM/STCM      @0Y12678
HDRNO    EQU   X'01'                    HEADER=NO FLAG         @0Y14053
NUMASK   EQU   X'F0'                    MASK FOR HEX COUNT     @OS77932
FOXONE   EQU   X'F1'                    HEX ONE                @OS77932
         SPACE
         SPACE
         EJECT
         USING AVTSAVE2,R13                                      S22025
         USING IEDQSCB,RSCB3
         USING IEDQPRF,RPREFIX
         USING IEDQAZ,RBASE
         USING IHADCB,RGO9                                     @0Y12678
         USING IEDQDISP,RDISP                                  @0Y12678
         USING IEDQLCB,RLCB4                                   @0Y12678
         SPACE
IEDQAZ01 EQU   *
IEDQAZ   IEDHJN REDIRECT                ID AND DATE              S22025
***********************************************************************
*                                                             @OY12678*
*  WHEN HEADER=NO IS CODED ON THE ERRORMSG MACRO, THIS SECTION@OY12678*
*  OF CODE WILL GO TO THE BUFFER POOL AND OBTAIN A BUFFER.    @OY12678*
*  THE ERROR MESSAGE TEXT WILL BE PLACED INTO THIS BUFFER     @OY12678*
*  INSTEAD OF REUSING THE RECALLED HEADER.                    @OY12678*
*                                                             @OY12678*
***********************************************************************
         TM    PARMSTAT(RPARM8),ERMSFLAG ERROR MESSAGE         @0Y12678
         BNO   RECYES                   BRANCH NO              @OY12678
         NI    LCBSTART+2,X'FF'-HDRNO   INSURE FLAG OFF        @OY14053
         TM    0(RPARM8),RECALL         RECALL REQUIRED        @OY12678
         BO    RECYES                   BRANCH YES             @Y17XANQ
         MVC   LCBSTART,SCBDESTQ        SAVE DESTINATION       @OY14053
         OI    LCBSTART+2,HDRNO         SET HEADER=NO          @OY14053
         LTR   RELEM7,R1                POST LIST ELEMENTS     @Y17XANQ
         BNZ   ERBTOAZ                  POST ERB TO WAI        @Y17XANQ
NOLIST   EQU   *
         LR    RPREFIX,RPARM8           SAVE PARM LIST POINTER @OY12678
         L     RGO9,LCBDCBPT            GET DCB ADDRESS        @OY12678
         TM    PARMAZ(RPARM8),UNCOFLAG  TEST IF UNCONDITIONAL  @OY12678
         LA    RPARM8,FOUR(,RPARM8)     BUMP TO SECOND WORD    @OY12678
         BO    NOMASK                   YES, NOW AT DEST TYPE  @OY12678
         LA    RPARM8,FOUR(,RPARM8)     NO, BUMP ANOTHER WORD  @OY12678
NOMASK   EQU   *                                               @OY12678
         SR    RELEM7,RELEM7            CLEAR REGISTER         @OY12678
         IC    RELEM7,8(,RPARM8)        GET LENGTH OF MESSAGE  @OY12678
         LR    RPARM8,RPREFIX           RESTORE PARM LIST PTR  @OY12678
         SR    RPREFIX,RPREFIX          CLEAR REGISTER         @OY12678
         IC    RPREFIX,DCBRESER         RESERVES COUNT         @OY12678
         LA    RPREFIX,AVTHDRSZ(RPREFIX,RELEM7)  TOTAL LENGTH  @OY12678
         SRDA  RPREFIX,THIRTWO          SHIFT VALUE INTO REG 7 @OY12678
         SR    RWORK2,RWORK2            CLEAR REGISTER         @OY12678
         LH    RWORK2,AVTKEYLE          KEY LENGTH             @OY12678
         DR    RPREFIX,RWORK2           FIND NUMBER OF UNITS   @OY12678
         LA    R0,ONE(,RELEM7)          ADD ONE TO UNIT COUNT  @Y17XANQ
         STC   R0,LCBRBCT2              STORE UNIT COUNT       @Y17XANQ
         LA    R1,ONE                   REQUEST ONE BUFFER     @Y17XANQ
         L     R15,AVTSTEAL             BUFFFER STEAL ROUTINE  @Y17XANQ
         BALR  R14,R15                    STEAL BUFFERS        @Y17XANQ
         SPACE 1                                               @Y17XANQ
         SR    R1,R1                    CLEAR LIST REG         @YM06112
         LTR   RPREFIX,R15              WAS STEAL SUCCESSFUL   @Y17XANQ
         BZ    GOERB                      NO-POST ERB          @Y17XANQ
         SPACE 1                                               @Y17XANQ
         STCM  RLCB4,SEVEN,PRFLCB       GET FIRST UNIT         @YM06112
         XC    PRFCORE(PRFSHDR+4-PRFCORE),PRFCORE              @OY12678
*                                       CLEAR PREFIX FIELDS    @OY12678
BUFHERE  EQU   *                                               @OY12678
         IC    RELEM7,DCBRESER          GET RESERVES           @OY12678
         STC   RELEM7,PRFISIZE          STORE FOR IEDQAT       @OY12678
         LA    RELEM7,30(,RELEM7)       INCREASE BY PREFIX SIZE@OY12678
         STC   RELEM7,PRFSCAN           SET SCAN POINTER       @OY12678
         STH   RELEM7,PRFSIZE           SIZE = SCAN OFFSET     @OY12678
         L     RELEM7,LCBLSPCI-ONE      PICK UP RECALLED BUFFER@OY19052
         TM    PRFSTAT1-IEDQPRF(RELEM7),PRFERMGN               @OY19052
*                                       ERROR MSG IN THIS BFR  @OY19052
         BO    SETERMSG
         MVI   PRFSTAT1,AVTEZERO        HEADER LAST            @OY12678
         B     BLDPREFX                                        @OY19052
SETERMSG EQU   *                                               @OY19052
         MVI   PRFSTAT1,PRFERMGN                               @OY19052
BLDPREFX EQU   *                                               @OY19052
         XC    PRFSRCE,PRFSRCE          ASSUME SENDING         @OY12678
         MVC   PRFDEST,LCBTTCIN         AND SET DESTINATION    @OY12678
         TM    LCBSTAT1,LCBSENDN        SENDING                @OY12678
         BO    RECYES                   BRANCH YES             @OY12678
         MVC   PRFSRCE,LCBTTCIN         SET DESTINATION FOR    @OY12678
         XC    PRFDEST,PRFDEST          RECEIVING              @OY12678
RECYES   EQU   *                                               @OY12678
         ST    RPREFIX,AVTADBUF         REINITIALIZE AVT BFR ADDR
         LR    RELEM7,R1                SAVE ELEMENT ADDRESS
         MVI   SCBPRI,AVTEZERO          CLEAR SCB PRIORITY
         NI    PRFSTAT1,PRFCNCLF        MAKE SURE CANCEL BIT IS OFF
         SPACE 1                                                OX00468
         MVC   AVTDOUBL+4(FOUR),0(RPARM8)  SAVE ENTRY FLAGS     SA63999
         TM    PRFSTAT1,PRFERMGN        IF ERRMSG,NOREDIRECT   @Y17XANQ
         BO    POSTDISP                      OR ERRMSG         @Y17XANQ
         TM    PARMSTAT(RPARM8),ERMSFLAG IS ERROR MSG REQUESTED
         LA    RGO9,ERRMSG              ANTICIPATE ERROR MSG
         BO    SETPARM                  YES, BRANCH
         SPACE
         LA    RGO9,SETQCB              NO, SET LINK TO POST
         L     RLCB4,PRFLCB-1           GET ADDRESS OF LCB
         USING IEDQLCB,RLCB4
         TM    LCBSTAT1,LCBINITN+LCBSENDN INIT MODE ON SEND SIDE
         BNO   SETPARM                  BR NOT SEND INITIATE     A51765
         TM    SCBERR4,SCBSLCTN+SCBTXTTN  LINE ERROR             A51765
         BNZ   POSTDISP                 YES,DON'T REDIRECT,POST  A51765
*                                         TO BFR DISP INSTEAD
         SPACE
SETPARM  EQU   *
         LR    R1,RPARM8                SAVE PARM LIST PTR     @XM05843
         TM    PARMAZ(RPARM8),UNCOFLAG  TEST IF UNCONDITIONAL
         LA    RPARM8,FOUR(,RPARM8)     BUMP TO SECOND WORD
         BO    TESTSRCE                 YES, NOW AT DEST TYPE FIELD
         SPACE
         LA    RPARM8,FOUR(,RPARM8)     NO, MUST BUMP ANOTHER WORD
         SPACE
TESTSRCE EQU   *
         LA    RWORK2,ERRMSG            SEE IF HERE FOR ERRMSG @XM05843
         CR    RWORK2,RGO9              ERRMSG ENTRY           @XM05843
         BE    RETZERO                  YES, BRNCH AROUND EXIT @XM05843
         TM    TWO(R1),TWO              EXIT SPECIFIED         @XM05843
         BZ    RETZERO                  NO, CONTINUE           @XM05843
         SR    RWORK2,RWORK2            CLEAR FOR LOCATE       @XM05843
         IC    RWORK2,ONE(R1)           GET LENGTH OF PARMLIST @XM05843
         SRL   RWORK2,TWO               DROP TWO LOW BITS      @XM05843
         SLL   RWORK2,TWO               REALIGN                @XM05843
         S     RWORK2,COMPRET4          SET LENGTH TO EXIT ADDR@XM05843
         LA    RWORK2,AVTEZERO(RWORK2,R1) LOAD ADDR OF EXIT RTN@XM05843
         ICM   R15,SEVEN,ONE(RWORK2)    LOAD ADDR EXIT         @XM05843
         BZ    RETZERO                  NO, RET CODE OF ZERO   @XM05843
         LR    R0,RSCB3                 LOAD SCB ADDR          @XM05843
         LR    R1,RPREFIX               LOAD BUFFER ADD        @XM05843
         STM   RWORK2,RBASE,AVTSAVE3+REGOFF SAVE REGS          @XM05843
         BALR  R14,R15                  BRANCH TO EXIT ROUTINE @XM05843
         LM    RWORK2,RBASE,AVTSAVE3+REGOFF  RESTORE REGS      @XM05843
         C     R15,COMPRET0             COMPARE REG15 TO ZERO  @XM05843
*                                       TO DETERMINE RET CODE  @XM05843
         BE    RETZERO                  RET CODE WAS ZERO      @XM05843
*                                       PROCESS NORMALLY       @XM05843
         C     R15,COMPRET4             RETURN CODE = 4?       @XM05843
         BE    POSTDISP                 RETURN CODE DOESN'T    @XM05843
*                                       REDIRECT               @XM05843
         C     R15,COMPRET8             RETURN CODE = 8?       @XM05843
         BNE   RETZERO                  NO, PROCESS NORMALLY   @XM05843
*                                       RET CODE OF 8 REDIRECTS@XM05843
*                                       MSG TO TERMINAL        @XM05843
*                                       ADDRESSED IN REG1      @XM05843
         LR    R15,R1                   LOAD REG TO WHERE MSG  @XM05843
*                                       IS TO BE REDIRECTED    @XM05843
         L     RWORK2,AVTRNMPT          TERM TABLE ADDR        @XM05843
         IC    RWORK2,TNTENLEN-IEDQTNTD(RWORK2) GET TERMNME LEN@XM05843
         B     LINKA1                   GO QUE MSG TO          @XM05843
*                                       SPECIFIC TERMINAL      @XM05843
RETZERO  CLI   PARMDTYP(RPARM8),CHARS   SEND TO ORIGIN         @XM05843
         LH    R1,PRFSRCE               YES, PICK UP ORIGIN KEY
         BNE   TESTDEST                 BRANCH IF NONZERO       SA62385
         MVC   PRFDEST,PRFSRCE          SET UP DEST             SA62385
         B     LINKRET                  SET FOR REDIRECT        SA62385
         SPACE
         SPACE
TESTDEST EQU   *
         CLI   PARMDTYP(RPARM8),CHARD   SEND TO ORIGINAL DEST
         BNE   TESTNAME                 NO, PROCEED
         SPACE
         LH    R1,PRFDEST               YES, PICK UP DEST KEY
         SPACE
LINKRET  EQU   *
         N     R1,AVTCLRHI              IS KEY ZEROES
         BZ    TESTDEAD                 YES, GO TEST FOR DLQ
         SPACE
         B     LINKAV                   NO, GO LINK TO IEDQAV
         SPACE
TESTNAME EQU   *
         CLI   PARMDTYP(RPARM8),CHARN   SEND TO DEST NAMED
         BNE   TESTOTE                  NO, CHECK TOTE         @Y17XANQ
         SPACE
         L     RWORK2,PARMNAME-1(,RPARM8) YES, GET ADDRESS OF NAME
         LA    R15,ONE(,RWORK2)         BUMP PAST LENGTH BYTE
         IC    RWORK2,AVTEZERO(,RWORK2) PICK UP LENGTH BYTE
         B     LINKA1                   GO LINK TO BINARY SEARCH
         SPACE
TESTOTE  EQU   *                                               @Y17XANQ
         CLI   PARMDTYP(RPARM8),CHART   SEND TO TOTE           @Y17XANQ
         BNE   PROCOPT                    NO, MUST BE IN OPT   @Y17XANQ
         SPACE 1                                               @Y17XANQ
         LA    R1,AVTOLTQB              TOTE QCB ADDRESS       @Y17XANQ
         STCM  R1,SEVEN,SCBDESTQ          TO THE SCB           @Y17XANQ
         BR    RGO9                     GO TO POST             @Y17XAMF
         SPACE 1
PROCOPT  EQU   *
         LH    RWORK2,PARMOPT(,RPARM8)  PICK UP AE PARM LIST DATA
         STH   RWORK2,AVTDOUBL+2        SET IN PARM LIST
         IC    RWORK2,PARMAE(,RPARM8)   PICK UP IEDQAE OFFSET
         STC   RWORK2,AVTDOUBL          SET IN PARM LIST
         LA    R1,AVTDOUBL              POINT TO PARM LIST
         MVI   AVTDOUBL+1,FOUR                                 @YM07359
         L     R15,AVTUI                GET USER INETRFACE ADDR
         BALR  R14,R15                  LINK TO LOCATE OPTION FIELD
         SPACE
         LTR   R15,R15                  IS OPTION FIELD FOUND
         BZ    TESTDEAD                 NO, GO TEST IF DLQ
         SPACE 1                                                OY00468
         TM    AVTDOUBL+6,ERMSFLAG      ERRORMSG REQUESTED ?    SA63999
         BNO   NERRMSG                  BRANCH IF NOT ERRORMSG  SA63999
         TM    0(R15),NUMASK            DECIMAL LENGTH SPEC    @OS77932
         BZ    GETLNGTH                 BRANCH YES             @OS77932
         SPACE
         CLI   0(R15),FOXONE            HEX LENGTH GT ZERO     @OS77932
         BL    NERRMSG                  NO LENGTH SPECIFIED    @OS77932
GETLNGTH EQU   *                                               @OS77932
         IC    RWORK2,0(,R15)           LOAD LENGTH             SA63999
         N     RWORK2,NUMB              ACCESS LENGTH          @Y17XANQ
         LA    R15,ONE(,R15)            LOAD ADDRESS            SA63999
         B     LINKA1
         SPACE 1                                                SA63999
NERRMSG  EQU   *
         IC    RWORK2,AVTEZERO(,R1)     GET LENGTH              SA63999
         LA    RWORK2,ONE(,RWORK2)      LOAD PAST LENGTH        SA63999
         SPACE 3                                                 S21903
LINKA1   EQU   *
         ST    R15,AVTDOUBL+4           SET ADDR OF CHAR STRING
         STC   RWORK2,AVTDOUBL+3          & COUNT IN PARM LIST
         CLI   AVTDOUBL+3,0             IS LENGTH ZERO         @OS77932
         BE    TESTDEAD                 YES, CHECK DEAD LTR Q  @OS77932
         MVI   AVTDOUBL+2,AVTEZERO      ZERO HIGH LENGTH BYTE
         MVI   AVTDOUBL,INDEXA1+ONE     SET BINARY SEARCH INDEX
         LA    R1,AVTDOUBL              POINT TO PARM LIST
         L     R15,AVTUI                GET USER INETRAFCE ADDR
         BALR  R14,R15                  LINK TO BINARY SEARCH
         SPACE
         LTR   R1,R15                   IS NAME FOUND IN TNT
         BZ    TESTDEAD                 NO, GO TEST FOR DLQ
         SPACE
LINKAV   EQU   *
         L     R15,AVTMSGS-1            GET ADDR OF LOOKUP ROUTINE
         L     R15,INDEXAV(,R15)          FROM MH VCON TABLE
         LR    RWORK2,R13               SAVE ADDR OF AVTSAVE2
         LA    R13,AVTSAVE3             POINT TO AVTSAVE3
         BALR  R14,R15                  LINK TO LOOKUP ROUTINE
         SPACE
         LR    R13,RWORK2               RESET ADDR OF AVTSAVE2
         LTR   R15,R15                  TEST IF TSO TERMINAL
         BZR   RGO9                     NO, PROCEED            @Y17XANQ
         SPACE
TESTDEAD EQU   *
         LH    R1,AVTDLQX               PICK UP DEAD-LETTER Q KEY
         N     R1,AVTCLRHI              IS THERE A DEAD-LETTER Q
         BNZ   LINKAV                   YES, GO LINK TO LOOKUP
         SPACE
POSTDISP EQU   *
         NI    LCBSTAT1,LCBRCLLF        RESET RCLLN FOR IEDQBD @YM07401
         LA    RWORK2,AVTBFRTB          ADDRESS OF BUF RETURN  @Y17XANQ
         B     MOVEQCB                  GO POST BUFFER
         SPACE
ERRMSG   EQU   *
         LR    R1,RELEM7                RESET ELEMENT ADDRESS
         LA    RPARM8,PARMAT(,RPARM8)   BUMP TO IEDQAT PARM LIST
         STCM  RPARM8,SEVEN,SCBMACR     SET IN SCB             @Y17XANQ
         SLR   R15,R15                  CLEAR                  @YM08381
         IC    R15,AVTEZERO(,RPARM8)    PICK UP IEDQAT OFFSET
         L     RBASE,AVTMSGS-1          GET MH VCON TABLE ADDRESS
         L     RBASE,AVTEZERO(R15,RBASE) GET IEDQAT ADDRESS
         BR    RBASE                    EXIT TO IEDQAT
         SPACE
SETQCB   EQU   *
         L     RWORK2,SCBDESTQ-1        SET DEST QCB ADDRESS
         SPACE
MOVEQCB  EQU   *
         LA    RGO9,PRIDESTQ            PRIORITY               @Y17XANQ
         LR    R1,RPREFIX               BUFFER TO BE POSTED    @Y17XANQ
         TM    LCBSTAT1,LCBRCLLN        TEST FOR RECALL BIT    @YM07309
         BO    POSTBUF                  IF RECALL POST BUFFER  @YM07309
         BAL   R14,POSTSUB              ADD TO POST LIST       @Y17XANQ
         SPACE 1                                               @Y17XANQ
         LR    RELEM7,R1                NEW POST LIST          @Y17XANQ
         L     RWORK2,AVTMSGS-1         MH VCON LIST           @Y17XANQ
         L     RWORK2,0(,RWORK2)        ADDRESS OF IEDQBD      @Y17XANQ
         LA    RGO9,PRIRCQCB            PRIORITY FOR POST      @Y17XANQ
POSTERB  EQU   *                                               @Y17XANQ
         LA    R1,LCBERB                ELEMENT IS ERB         @Y17XANQ
POSTBUF  L     RDISP,AVTEA              GET ADDR OF DISPATCHER @YM07309
         USING IEDQDISP,RDISP
         LA    R14,DSPCHAIN             EXIT TO DISPATCHER     @Y17XANQ
POSTSUB  EQU   *                                               @Y17XANQ
         STCM  RWORK2,SEVEN,ONE(R1)     QCB @ TO ELEMENT       @Y17XANQ
         ST    RELEM7,FOUR(,R1)         LINK IN POST LIST      @Y17XANQ
         STC   RGO9,FOUR(,R1)           PRIORITY               @Y17XANQ
         BALR  R14,R14                  EXIT/RETURN            @Y17XAMX
         SPACE 1                                               @Y17XANQ
ERBTOAZ  EQU   *                                               @Y17XANQ
         LA    RWORK2,AZQCB             QCB ADDRESS            @Y17XANQ
         LA    RGO9,PRIBFRTB            PRIORITY               @Y17XANQ
         B     POSTERB                  POST ERB               @Y17XANQ
GOERB    EQU   *                                               @Y17XANQ
         MVI   LCBERBCT,ONE             REQUEST ONE BUFFER     @OY12678
         OI    LCBERBST,LCBPRCPG        SET RETURN FLAG        @OY12678
         LA    RGO9,AZQCB               SET ADDRESS OF QCB TO  @OY12678
         ST    RGO9,LCBRCQCB            RECEIVE ERB            @OY12678
         LR    RELEM7,R1                POST LIST              @Y17XANQ
         LA    RWORK2,AVTBFREB          BUFFER REQUEST         @Y17XANQ
         LA    RGO9,PRIINTRQ            POST PRIORITY          @Y17XANQ
         B     POSTERB                  REQUEST BUFFER         @Y17XANQ
         DS    0F                                              @Y17XANQ
         ORG   *-8                                             @Y17XANQ
AZQCB    EQU   *                        ERB RETURN QCB         @Y17XANQ
         ORG
ASTCB    DC    AL1(DSPMCPL4)            STCB                   @OY12678
         DC    AL3(*-1)                                        @OY12678
         USING *,R15                                           @OY12678
         L     RBASE,ADRAZ              LOAD BASE REGISTER     @OY12678
         SH    R1,ERBLCB                BACK UP TO LCB         @OY12678
         LR    RLCB4,R1                 SET LCB BASE           @OY12678
         L     RGO9,LCBDCBPT            SET DCB BASE           @OY13658
         L     RSCB3,LCBSCBA-1          SET SCB BASE           @OY13658
         SR    R1,R1                    CLEAR POST LIST ADDR   @OY13658
         L     RPARM8,SCBMACR-1         SET PARM LIST ADDR     @OY13658
         TM    LCBERBST,LCBPRCPG        RETURN FROM POST DELAY @OY13658
         BNO   NOLIST                   YES, CONTINUE POST     @OY13658
         NI    LCBERBST,AVTEFF-LCBPRCPG RESET POST FLAG        @OY13658
         SR    RELEM7,RELEM7            CLEAR UNIT COUNT REG   @OY13658
*                                       ADDRESS                @OY12678
         L     RPREFIX,LCBERBCH-1       GET BUFFER ADDRESS     @OY12678
         B     BUFHERE                  INITIALIZE BUFFER      @OY12678
ERBLCB   DC    AL2(LCBERB-IEDQLCB)      ERB OFFSET             @OY12678
ADRAZ    DC    A(IEDQAZ01)              BEGINNING OF IEDQAZ    @OY12678
COMPRET0 DC    F'0'                     RET CODE ZERO           X30X5MT
COMPRET4 DC    F'4'                     RET CODE FOUR           X30X5MT
COMPRET8 DC    F'8'                     RET CODE EIGHT          X30X5MT
NUMB     DC    X'0000000F'              MASK FOR PRPM          @Y17XANQ
         EJECT
********* DSECTS *********
         DCBD  DSORG=TX
         SPACE
         TAVTD ,                                                 S22025
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TSCBD
         TTNTD                                                 @XM05843
         TTRMD                                                 @SA72461
         SPACE
         END
