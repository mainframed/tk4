BM01     TITLE '''IEDQBM'' - ORIGIN ROUTINE FOR SYSTEM WITH CONCENTRATE*
               D MESSAGE HANDLING SUPPORT'
         EJECT
IEDQBM   CSECT
*A000000-999999                                                @Z37XAMF
*A032000,265000,269000,274000,368000,370050,372000,377000,     @Y17XAXF
*A383000,384100,539000                                         @Y17XAMF
***********************************************************************
*                                                                     *
*STATUS - CHANGE LEVEL 5                                         S22024
*                                                                     *
* FUNCTION -                                                          *
*                                                                     *
*    WITHOUT THE FORM= OPERAND SPECIFIED -                            *
*                                                                     *
*    VERIFIES THE ORIGIN OF THE MESSAGE WHEN IT IS SPECIFIED OR       *
*    INITIALIZES IT WHEN IT IS NOT FOR TERMINALS NOT IN A             *
*    CONCENTRATOR NETWORK.                                            *
*                                                                     *
*    THE BINARY SEARCH ROUTINE IS USED TO SEARCH THE TERMNAME         *
*    TABLE FOR AN ENTRY MATCHING THE NAME FOUND IN THE BUFFER.        *
*    BINARY SEARCH THEN RETURNS IN REGISTER 15 EITHER A ZERO          *
*    OR A NON-ZERO VALUE.  IF IT IS ZERO, THE NAME FROM THE           *
*    BUFFER WAS NOT FOUND IN THE TERMINAL NAME TABLE.  THE            *
*    'INVALID ORIGIN' BIT IS SET IN THE SCB ERROR BYTE (SCBERR1)      *
*    AND EXIT IS MADE TO RETURN INTERFACE WITH A RETURN CODE          *
*    X'04' IN REGISTER 15.                                            *
*                                                                     *
*    IF THE RETURN CODE IS NOT ZERO, IT IS THE KEY (ORDINAL INDEX)    *
*    TO THE TERMINAL TABLE ENTRY FOR THE NAME FOUND.  THIS KEY IS     *
*    COMPARED WITH THE KEY IN THE BUFFER PREFIX SOURCE FIELD          *
*    (PRFSRCE).  IF THEY ARE EQUAL, THE KEY IN THE PREFIX IS          *
*    CORRECT.  EXIT IS MADE TO RETURN INTERFACE WITH A RETURN CODE    *
*    OF X'00' IN REGISTER 15.                                         *
*                                                                     *
*    IF THE KEYS ARE EQUAL, A VALIEDITY CHECK IS THIS MODULES  @PI06026
*    ONLY FUNCTION.  IF THE KEYS ARE NOT EQUAL AND THE TERMINAL@PI00626
*    IS NOT A DIAL RESOURCE, AND ERROR IS RETURNED TO USER.    @PI06026
*    IF THE KEYS ARE NOT EQUAL AND THE TERMINAL IS A DIAL      @Y17XAMF
*    RESOURCE, THE FOLLOWING LOGIC THEN OCCURS:                @Y17XAMF
*                                                              @Y17XAMF
*    A NON-ZERO PRFSRCE IS VALIDATED AS FOLLOWS.    IF AN EP   @Y17XAMF
*    RESOURCE, PRFSRCE MUST REFLECT A UTERM. IF A NCP RESOURCE @Y17XAMF
*    PRFSRCE MUST REFLECT A CTERM.                             @Y17XAMF
*                                                              @Y17XAMF
*    THE ORIGIN TTE IS THEN VALIDATED BY CHECKING THAT IF IT   @Y17XAMF
*    IS AN EP RESOURCE IT MUST BE A SINGLE, NON-LGB ENTRY.     @Y17XAMF
*    IF IT IS A NCP RESOURCE, IT MUST BE A PRE-SNA DEVICE.     @Y17XAMF
*                                                              @Y17XAMF
*    AFTER VALIDATING THE TTE TYPES, THE MODULE INSURES THAT   @Y17XAMF
*    BOTH RESOURCES HAVE THE SAME DCB(LGB) ADDRESS.            @Y17XAMF
*                                                              @Y17XAMF
*    IF THE ORIGIN NAME IS AN EP RESOURCE THE PRFSRCE AND      @Y17XAMF
*    LCBTTCIN IS UPDATED WITH ITS TTCIN AND A 0 RETURN CODE IS @Y17XAMF
*    SET.  IF IT IS AN NCP RESOURCE, IEDDVAS IS                @PI06026
*    CALLED IN ORDER TO CHANGE THE CONTROL BLOCKS SO THAT ALL  @Y17XAMF
*    COMMUNICATION WILL OCCUR WITH THE DIAL ENTRY.  LCBTTCIN   @Y17XAMF
*    AND PRFSRCE ARE THEN UPDATED WITH THE DIAL TTE'S TTCIN,   @Y17XAMF
*    AND A ZERO RETURN CODE IS SET                             @Y17XAMF
*                                                              @Y17XAMF
*                                                                     *
*    WITH THE FORM= OPERAND SPECIFIED -                               *
*                                                                     *
*    DETERMINES THE SOURCE TERMINAL ATTACHED TO THE CONCENTRATOR      *
*    ENTERING THE DATA, AND EXECUTES ONLY FOR TERMINALS DEFINED       *
*    IN A CONCENTRATOR NETWORK.                                       *
*                                                                     *
*    THE DETERMINATION OF THE TERMINAL ATTACHED TO A CONCENTRATOR     *
*    IS MADE EITHER BY SPECIFYING FORM=ID ON THE ORIGIN MACRO, IN     *
*    WHICH CASE A SEARCH OF THE DEVICE ID TABLE FOR THIS CONCENTRATOR *
*    IS MADE FOR AN ID EQUAL TO THE ID ENTERED IN THE MESSAGE,        *
*    OR BY SPECIFYING FORM=NAME, IN WHICH CASE A BINARY SEARCH OF     *
*    THE TERMNAME TABLE IS MADE FOR A MATCH.  IF A MATCH IS FOUND     *
*    IN THE TERMNAME TABLE, THEN A SECOND TEST IS MADE TO INSURE      *
*    THAT THIS TERMINAL IS ATTACHED TO THE CONCENTRATOR THAT          *
*    ENTERED THE MESSAGE.                                             *
*                                                                     *
*    IF THE FORM= OPERAND IS SPECIFIED AND THE ORIGIN ENTERED IN      *
*    THE MESSAGE IS NOT A VALID NAME OR ID FOR A TERMINAL ATTACHED    *
*    TO THE CONCENTRATOR THAT ENTERED THE MESSAGE, THE FIRST ENTRY    *
*    FOR AN ATTACHED TERMINAL AFTER THE CONCENTRATOR ENTRY IS         *
*    ASSUMED TO BE THE ORIGIN.  A RETURN CODE OF X'0C' IS RETURNED    *
*    IN REGISTER 15 ON THIS CONDITION.                                *
*                                                                     *
* ENTRY POINTS -                                                      *
*         'IEDQBM01' TO VERIFY OR INITIALIZE THE ORIGIN.              *
*         ENTRY IS INITIATED BY THE ORIGIN MACRO THROUGH IEDQUI.      *
*         THE CALLING SEQUENCE IN IEDQUI IS:                          *
*                                                                     *
*         L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE       *
*         IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR    *
*         LA    R0,ANDLOW                SET UP MASK                  *
*         NR    R15,R0                   CLEAR INDEX FLAGS            *
*         L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDR             *
*         BR    R12                      EXIT TO ROUTINE              *
*                                                                     *
* INPUT -                                                             *
*    REGISTER 1 - ADDRESS OF A MACRO GENERATED PARAMETER LIST.        *
*    PARAMETER LIST FORMAT IS:                                        *
*    REGISTER 13- ADDRESS OF SAVE AREA                         @Y17XAMF
*                                                                     *
*    *********************************                                *
*    * INDEX * PARAM * INDEX * PARAM *                                *
*    * & FORM* LIST  *  TO   * LIST  *                                *
*    * BITS  * LNGTH *  AI   * LNGTH *                                *
*    *********************************                                *
*    *       * LNGTH *                                                *
*    * ZEROS *  OF   *                                                *
*    *       * FIELD *                                                *
*    *****************                                                *
*                                                                     *
*    FORM BITS IN INDEX BYTE:                                         *
*                                                                     *
*    X'01' - FORM=NAME SPECIFIED                                      *
*    X'02' - FORM=ID SPECIFIED                                        *
*                                                                     *
*    REGISTER 3 - ADDRESS OF THE SCB.                                 *
*                                                                     *
*    REGISTER 4 - ADDRESS OF THE LCB.                                 *
*                                                                     *
*    REGISTER 6 - ADDRESS OF THE BUFFER.                              *
*                                                                     *
*    REGISTER 9 - ADDRESS OF THE AVT.                                 *
*                                                                     *
*    REGISTER 12 - ENTRY POINT ADDRESS AND BASE REGISTER.             *
*                                                                     *
*    REGISTER 14 - RETURN REGISTER.                                   *
*                                                                     *
*    REGISTER 15 - LINK REGISTER AND RETURN CODE REGISTER.            *
*                                                                     *
*    INPUT FROM AI - SCAN ROUTINE                                     *
*    AVTDOUBL - CONTAINS SOURCE NAME OR ID FOUND IN THE BUFFER.       *
*                                                                     *
*    AVTPARM+1 - CONTAINS LENGTH OF THE NAME OR ID IN THE BUFFER.     *
*                                                                     *
*    INPUT FROM A1 - BINARY SEARCH ROUTINE                            *
*    REGISTER 15 - INDEX INTO TERMNAME TABLE OR ZERO IF NO MATCH.     *
*                                                                     *
* OUTPUT -                                                            *
*    REGISTER 15 - RETURN CODES                                       *
*                                                                     *
*    X'00' - ON SUCCESSFUL COMPLETION AND FOR ZERO LENGTH BUFFERS.    *
*                                                                     *
*    X'04' - IF FORM= IS NOT SPECIFIED AND THE ORIGIN SPECIFIED       *
*    BY THE NAME IN THE BUFFER IS INVALID.                            *
*                                                                     *
*    X'08' - IF FORM= IS SPECIFIED FOR A TERMINAL NOT IN A            *
*    CONCENTRATOR NETWORK.                                            *
*                                                                     *
*    X'0C' - IF FORM= IS SPECIFIED AND THE ORIGIN SPECIFIED BY        *
*    EITHER THE ID OR THE NAME IN THE BUFFER IS NOT A TERMINAL        *
*    ATTACHED TO THE CONCENTRATOR THAT ENTERED THE MESSAGE.  IN       *
*    THIS CASE THE ORIGIN IS SET TO THE FIRST ATTACHED TERMINAL       *
*    ENTRY AFTER THE CONCENTRATOR ENTRY.                              *
*                                                                     *
*    BUFFER PREFIX SOURCE FIELD (PRFSRCE) - SET TO THE KEY TO THE     *
*    CORRECT TERMINAL ON SUCCESSFUL COMPLETION OR SET TO THE KEY      *
*    TO THE FIRST ENTRY AFTER THE CONCENTRATOR ENTRY IF FORM= WAS     *
*    SPECIFIED AND THE NAME OR ID IN THE BUFFER WAS INVALID FOR       *
*    THIS CONCENTRATOR.                                               *
*                                                                     *
*                                                                     *
*    SCB ERROR BYTE (SCBERR1) - IF RETURN FROM BINARY SEARCH          *
*    ROUTINE IS ZERO, IF PRFSRCE CONTAINS A KEY DIFFERENT FROM THE    *
*    KEY RETURNED BY BINARY SEARCH, OR IF THE TERMINAL INDICATED BY   *
*    THE KEY RETURNED BY BINARY SEARCH IS NOT IN THE DCB INDICATED    *
*    BY THE LCB FROM THE BUFFER PREFIX, AND FORM= WAS NOT SPECIFIED,  *
*    THE 'INVALID ORIGIN' BIT IS SET ON.                              *
*                                                                     *
*    OUTPUT TO AI - SCAN ROUTINE                                      *
*    REGISTER 1 - POINTS TO AI'S PARAMETER LIST.                      *
*                                                                     *
*    OUTPUT TO A1 - BINARY SEARCH                                     *
*    REGISTER 0 - LENGTH OF NAME FIELD FOUND IN THE BUFFER.           *
*                                                                     *
*    REGISTER 1 - ADDRESS OF AVTDOUBL WHICH CONTAINS THE NAME         *
*    OR ID FOUND IN THE BUFFER.                                       *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*                                                                     *
*         IEDQUI - INTERFACE TO SCAN ROUTINE AND TO MH                *
*                                                                     *
*         IEDDVAS- DEVICE ASSOCATION ROUTINE(DIAL SUPPORT)            *
*                                                                     *
*         IEDQA1 - BINARY SEARCH                                      *
*                                                                     *
*         TERMNAME TABLE CODE (AVTRNMPT)                              *
*                                                                     *
* EXITS,  NORMAL -                                                    *
*                                                                     *
*         BUFFER IS A ZERO LENGTH BUFFER.  REGISTER 15 CONTAINS A     *
*         RETURN CODE OF X'00'.                                       *
*                                                                     *
*         WITHOUT FORM= OPERAND SPECIFIED -                           *
*                                                                     *
*         THE KEY IN THE BUFFER PREFIX SOURCE FIELD (PRFSRCE)         *
*         MATCHES THE KEY FOR THE NAME FOUND IN THE BUFFER.           *
*         REGISTER 15 CONTAINS A RETURN CODE OF X'00'.                *
*                                                                     *
*         PRFSRCE, ZEROS ON ENTRY, IS INITIALIZED TO THE KEY FOR      *
*         THE NAME FOUND IN THE BUFFER.  THE LCB TERMINAL-CURRENTLY-  *
*         CONNECTED FIELD (LCBTTCIN) IS INITIALIZED TO THE SAME       *
*         KEY.  REGISTER 15 CONTAINS A RETURN CODE OF X'00'.          *
*                                                                     *
*         WITH FORM= OPERAND SPECIFIED -                              *
*                                                                     *
*         PRFSRCE AND LCBTTCIN ARE SUCCESSFULLY INITIALIZED TO THE    *
*         KEY FOR THE PROPER TERMINAL ATTACHED TO THE CONCENTRATOR.   *
*         REGISTER 15 CONTAINS A RETURN CODE OF X'00'.                *
*                                                                     *
*         THE NAME FOUND IN THE BUFFER IS NOT FOUND IN THE TERMNAME   *
*         TABLE, OR IF IT IS FOUND, IT IS NOT THE NAME OF A TERMINAL  *
*         ATTACHED TO THE CONCENTRATOR THAT ENTERED THE MESSAGE;      *
*         OR THE ID FOUND IN THE BUFFER IS NOT FOUND IN THE           *
*         CONCENTRATOR'S DEVICE ID TABLE.  PRFSRCE AND LCBTTCIN       *
*         ARE INITIALIZED TO THE KEY FOR THE FIRST ATTACHED TERMINAL  *
*         ENTRY AFTER THE CONCENTRATOR ENTRY.  REGISTER 15 CONTAINS   *
*         A RETURN CODE OF X'0C'.                                     *
*                                                                     *
* EXITS,  ERROR -                                                     *
*                                                                     *
*         WITHOUT FORM= OPERAND SPECIFIED -                           *
*                                                                     *
*         THE NAME FOUND IN THE BUFFER IS NOT FOUND IN THE TERMINAL   *
*         NAME TABLE.  THE 'INVALID ORIGIN' BIT IN SCBERR1 IS SET     *
*         ON.  REGISTER 15 CONTAINS A RETURN CODE OF X'04'.           *
*                                                                     *
*         THE KEY FOR THE NAME FOUND IN THE BUFFER DOES NOT MATCH     *
*         THE KEY IN PRFSRCE.  THE 'INVALID ORIGIN' BIT IS SET ON.    *
*         REGISTER 15 CONTAINS A RETURN CODE OF X'04'.                *
*                                                                     *
*         THE TERMINAL FOR THE NAME FOUND IN THE BUFFER IS NOT        *
*         ASSOCIATED WITH THE SAME DCB AS THE LCB WHOSE ADDRESS       *
*         IS IN THE BUFFER (PRFLCB).  THE 'INVALID ORIGIN' BIT IS     *
*         SET.  REGISTER 15 CONTAINS A RETURN CODE OF X'04'.          *
*                                                                     *
*         WITH FORM= OPERAND SPECIFIED -                              *
*                                                                     *
*         THE FORM= OPERAND WAS SPECIFIED FOR A TERMINAL NOT IN       *
*         A CONCENTRATOR NETWORK.  REGISTER 15 CONTAINS A RETURN      *
*         CODE OF X'08'.                                              *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*                                                                     *
*    AVT                                                              *
*    LCB                                                              *
*    SCB                                                              *
*    QCB                                                              *
*    QCB EXTENSION                                                    *
*    DEVICE ID TABLE                                                  *
*    TERMINAL TABLE                                                   *
*    BUFFER PREFIX                                                    *
*                                                                     *
* ATTRIBUTES -                                                        *
*    SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,               *
*    PROBLEM PROGRAM MODE.                                            *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS            *
*    EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS     *
*    BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,   *
*    BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW       *
*    DEFINITIONS.                                                     *
*                                                                     *
* NOTES -NONE                                                         *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        PARAMETER LIST ADDRESS
RWORK2   EQU   2                        WORK REGISTER
RSCB     EQU   3                        SCB ADDRESS
R3       EQU   3                        WORK REGISTER          @Y17XAMF
RLCB     EQU   4                        LCB ADDRESS
RLEN     EQU   5                        LNG PASSED TO IDSRCH
RQCB2    EQU   5                        SECOND QCB BASE          X03039
RPREFIX  EQU   6                        BUFFER ADDRESS
RQCB     EQU   7                        QCB ADDRESS
RTERM2   EQU   8                        SECOND TERMINAL ENTRY  @YM09033
RWORK8   EQU   8                        WORK REGISTER
RAVT     EQU   9                        AVT ADDRESS
RWORK10  EQU   10                       WORK REGISTER
RPARM    EQU   11                       PARM LIST ADDR SAVE REG
RBASE    EQU   12                       BASE REGISTER
R13      EQU   13                       SAVE AREA ADDRESS      @Y17XAMF
R14      EQU   14                       RETURN ADDRESS
R15      EQU   15                       LINK ADDRESS AND
*                                       RETURN CODE REGISTER
         SPACE 3
********* OTHER EQUATES *********
         SPACE
ONE      EQU   1                        USED AS DISP AND FOR SLL.
TWO      EQU   2                        USED AS DISPLACEMENT
THREE    EQU   3                        USED TO BUMP PTR 3 BYTES.
ADLEN    EQU   3                        LENGTH OF A 3-BYTE ADDRESS
FOUR     EQU   4                        OFFSET FOR BRANCH
EIGHT    EQU   8                        TO REACH CONC'S DEV DEP FLD
*                                       AND OFFSET FOR A1 ADDR
D15      EQU   15                       TO SHIFT OUT HI HALF OF REG
FORMBITS EQU   X'03'                    STATUS BITS FOR FORM=
FORMNAME EQU   X'01'                    FORM=NAME SPECIFIED
FORMID   EQU   X'02'                    FORM=ID SPECIFIED
XFF      EQU   X'FF'                    TEST FOR INVALD ID OF X'FF'
         EJECT
         USING IEDQSCB,RSCB             ADDRESSABILITY FOR SCB
         USING IEDQLCB,RLCB             ADDRESSABILITY FOR LCB
         USING IEDQPRF,RPREFIX          ADDRESSABILITY FOR PREFIX
         USING IEDQQCB,RQCB             ADDRESSABILITY FOR QCB
         USING IEDQAVTD,RAVT            ADDRESSABILITY FOR AVT
         USING IEDQBM01,RBASE           ADDRESSABILITY FOR ROUTINE
         SPACE
IEDQBM01 EQU   *
IEDQBM   IEDHJN SKIP                    MODULE ID              @Y17XAMF
         LH    R15,PRFSIZE              GET PRFSIZE
         LTR   R15,R15                  ZERO LENGTH BUFFER?
         BZ    RETURN                   YES RETURN TO CALLER
         SPACE
         LR    RPARM,R1                 NO, SAVE PARM LIST ADDR
         TM    AVTEZERO(RPARM),FORMBITS FORM= SPEC'D IN ORGN MAC?
         BZ    GOSCAN                   NO, NON-CONC ASSUMED
         SPACE
         LH    R1,LCBTTCIN              PASS KEY FOR SPEC'D NAME
         LA    R15,AVTECD8              ASSUME DIAL LINE
         LTR   R1,R1                    LCBTTCIN ZERO?
         BZ    RETURN                   YES RETURN
         SPACE
         N     R1,AVTCLRHI              CLEAR HI-ORDER TWO BYTES
         L     R15,AVTRNMPT             GET ADDR OF TNT CODE
         BALR  R14,R15                  LINK TO GET TERM ENTRY ADDR
         SPACE
         USING IEDQTRM,R1               ADDRABILITY FOR TERM ENT
         LA    R15,AVTECD8              ASSUME NOT IN CONC NETWORK
         TM    TRMDEVFL+1,TRMCONC       TERM IN CONC NETWORK?
         BZ    RETURN                   NO, GO RETURN
         SPACE
         DROP  R1
         SPACE
         LR    RWORK8,R1                SAVE ADDR OF TERM ENTRY
         LR    R1,RPARM                 RESTORE PARM LIST ADDR
         SPACE
GOSCAN   EQU   *
         LA    R1,TWO(R1)               INDEX TO SCANS PARM LIST
         L     R15,AVTUI                GET ADDR OF INTERFACE RTN
         BALR  R14,R15                  BRANCH TO SCAN ROUTINE
         SPACE
         LTR   R15,R15                  CHECK FOR RUNOUT
         BM    RETURN                   YES, RETURN TO CALLER
         SPACE
         LA    RWORK2,AVTDOUBL          BUFFER ADDR TO BE PASSED
         SR    RLEN,RLEN                CLEAR LENGTH REGISTER
         IC    RLEN,AVTPARM+1           GET LNG OF FLD IN BUFFER
         TM    AVTEZERO(RPARM),FORMID   FORM=ID SPECIFIED?
         BO    IDSRCH                   YES, GO TO DVCID SRCH
         SPACE
         LR    R1,RWORK2                NO, THEN SET UP REGS FOR
         LR    R0,RLEN                  BINARY SEARCH ROUTINE.
         L     R15,AVTMSGS-1            GET VCON TABLE ADDR
         L     R15,EIGHT(R15)           LOAD ADDR OF A1 ROUTINE
         BAL   R14,FOUR(R15)            LINK TO BINARY SEARCH ROUTINE
         SPACE
PROCESS  EQU   *
         LTR   R15,R15                  IS KEY ZERO?
         BZ    SETBIT3                  YES, ERROR, BRANCH
         SPACE
         LR    RWORK2,R15               NO, SAVE KEY
         TM    AVTEZERO(RPARM),FORMNAME FORM=NAME SPECIFIED?
         BO    RITECONC                 YES, GO INSURE THIS TERM
*                                       IS ATT. TO CORRECT CONC
         SPACE
         SR    R15,R15                  ASSUME GOOD RETURN
         CH    RWORK2,PRFSRCE           KEY FOUND=PREFIX KEY?
         BE    RETURN                   YES, GO RETURN
         TM    LCBSTAT2,LCBDIAL         IF NOT A DIAL RESOURCE,@PI06026
         BZ    SETBIT3                   SET ERROR CONDITION   @PI06026
         SPACE
         LH    R1,PRFSRCE               LOAD KEY FROM PREFIX
         LTR   R1,R1                    IS IT ZERO
         BZ    PASSKEY                  YES, GET ENTRY FOR KEY
         SPACE
         L     R15,AVTRNMPT             NO, GET ADDR OF TNT CODE
         BALR  R14,R15                  LINK TO GET TERM ENTRY ADDR
         SH    R1,TPREFIX               GET NEG PREF ADDRESS   @Y17XAMF
         SPACE
         USING IEDNTRM,R1               ADDRABILITY FOR TERM ENT
         LR    RTERM2,R1                SAVE ORIGINAL TERMENTRY  X03039
         TM    TRMSTATE,TRMPREF         DEVICE ATTACHED TO 3705@Y17XAMF
         BO    CHKCTERM                 YES, AVOID LINE CHECK  @Y17XAMF
         TM    TRMSTATE,TRMLINE         IS THIS A LINE           X03039
         BNO   SETBIT3                  NO, ERROR, BRANCH
         B     PASSKEY                  BRANCH                 @Y17XAMF
CHKCTERM DS    0H                                              @Y17XAMF
         CLI   TRMTYPE,TRMCTERM         IF 3705, PRFSRCE MUST  @Y17XAMF
         BNE   SETBIT3                   BE A CTERM            @Y17XAMF
         SPACE
PASSKEY  EQU   *
         LR    R1,RWORK2                PASS KEY FOR SPECIFIED NAME
         L     R15,AVTRNMPT             GET ADDR OF TNT CODE
         BALR  R14,R15                  LINK TO GET TERM ENTRY ADDR
         SH    R1,TPREFIX               GET NEG PREFIX ADDRESS @Y17XAMF
         SPACE
         L     RQCB,TRMDESTQ-1          GET QCB ADDR FROM TRM ENTRY
*                                       DO LCB AND QCB POINT
*                                       TO THE SAME DCB
         CLC   LCBDCBPT+1(ADLEN),QCBDCBAD
         BNE   SETBIT3                  NO, ERROR, BRANCH
         SPACE
         TM    TRMSTATE,TRMPREF         IS DEVICE ON 3705      @Y17XAMF
         BO    IS3705                   BRANCH ON YES          @Y17XAMF
         TM    TRMSTATE,TRMSNGLE        ORIGIN MUST BE SINGLE  @Y17XAMF
         BNZ   SETBIT3                   ENTRY                 @Y17XAMF
         TM    TRMDSORG,TRMLGB          ORIGIN MUST NOT BE     @Y17XAMF
         BO    SETBIT3                   A LGB                 @Y17XAMF
         B     SETKEY2                  IS GOOD 270X DIAL CALL @Y17XAMF
IS3705   DS    0H                                              @Y17XAMF
         NC    TRMCOHRT(L'TRMCOHRT),TRMCOHRT IF FIRST ORIGIN   @Y17XAMF
         BZ    FSTORG                    BRANCH                @Y17XAMF
         ST    R1,SAVREG                SAVE R1                @Y17XAMF
         LH    R1,TRMCOHRT              SEE IF ORIGIN IS ATTCH @Y17XAMF
         N     R1,AVTCLRHI              MAKE POSITIVE          @Y17XAMF
         L     R15,AVTRNMPT             GET CONV ROUTINE ADDR  @Y17XAMF
         BALR  R14,R15                  GO GET TTE ADDRESS     @Y17XAMF
         SH    R1,TPREFIX               CALCULATE NEG PREF ADDR@Y17XAMF
         CH    RWORK2,TRMSUBST          IF ORIGIN IS ALREADY   @Y17XAMF
         BE    SETBIT3                   CONNECTED BRANCH      @Y17XAMF
         L     R1,SAVREG                RELOAD ORIGIN TTE ADDR @Y17XAMF
FSTORG   DS    0H                                              @Y17XAMF
         CLI   TRMTYPE,TRMPSNA          IF 3705, ORIGIN MUST   @Y17XAMF
         BNE   SETBIT3                   BE PRE-SNA            @Y17XAMF
         TM    TRMPRE1,TRMCONT          IS CONTACT OUTSTANDING @Y17XAMF
         BO    SETBIT3                  YES, BRANCH            @Y17XAMF
         LR    R1,RWORK2                GET NEW ORIGIN INDEX   @YM09050
         L     R15,AVTSAVTP             SET SAVT BASE          @YM09050
         USING IEDNSVTD,R15                                    @YM09050
         L     R15,SAVTTNTX             ADDR TNT INDEX TO NET  @YM09050
*                                       ADDR CONVERSION        @YM09050
         BALR  R14,R15                  GET NETWORK ADDRESS OF @YM09050
*                                       NEW ORIGIN             @YM09050
         LTR   R15,R15                  INVALID NETWORK ADDR   @YM09050
         BZ    SETBIT3                  BR YES                 @YM09050
         LR    R1,RWORK2                R1 = ORIGIN TTCIN      @Y17XAMF
         LH    R0,PRFSRCE               R0 = CTERM TTCIN       @Y17XAMF
         N     R0,AVTCLRHI              MAKE TTCIN POSTIVE     @Y17XAMF
         L     R15,AVTSAVTP             GET SAVT ADDRESSABILTY @YM09033
         L     R15,SAVTDVAS             GET IEDDVAS ADDRESS    @Y17XAMF
         BALR  R14,R15                  GO TO IEDDVAS          @Y17XAMF
         DROP  R15                                             @YM09033
SETKEY2  EQU   *
         SR    R15,R15                  SET GOOD RETURN CODE
SETKEY   EQU   *
         STH   RWORK2,LCBTTCIN          INITIALIZE LCB WITH KEY
         STH   RWORK2,PRFSRCE           SET KEY IN BUFFER PREFIX
         B     RETURN                   RETURN TO CALLER
         SPACE
SETBIT3  EQU   *
         TM    AVTEZERO(RPARM),FORMNAME FORM=NAME SPECIFIED?
         BO    IDSRCH                   YES, THEN GO GET KEY FOR
*                                       FIRST ENTRY AFTER CONC
         SPACE
         OI    SCBERR1,SCBORIGN         SET 'INVALID ORIGIN' IN SCB
         LA    R15,AVTECD4              SET ERROR RETURN CODE
         SPACE
RETURN   EQU   *
         L     RBASE,AVTUI              GET ADDRESS OF RETURN ROUTINE
         B     FOUR(RBASE)              RETURN TO CALLER
         EJECT
RITECONC EQU   *
         LR    R1,RWORK2                PASS KEY FOR NAME IN BFR
         L     R15,AVTRNMPT             TNT CODE
         BALR  R14,R15                  GO GET TERM ENT ADDR
         SPACE
         SR    R15,R15                  CLEAR FOR IDSRCH
         USING IEDQTRM,R1               ADDRABILITY FOR TERM ENT
         TM    TRMDEVFL+1,TRMCONC       TERM IN CONC NETWORK?
         BZ    IDSRCH                   NO, GO SET TO FIRST
*                                       ENTRY AFTER THE CONC.
         SPACE
         L     RQCB,TRMDESTQ-1          ADDR OF QCB
         SPACE
         DROP  R1
         SPACE
         TM    QCBDSFLG,QCBDRQQ         IS IT A DRQ?
         BO    IDSRCH                   YES, THEN NAME IS A CONC
*                                       NAME. GO GET KEY FOR 1ST
*                                       ENTRY AFTER PROPER CONC.
         SPACE
         LH    R1,QCBEXTO               NOT DRQ, GET QCB EXT OFF
         AR    R1,RQCB                  COMPUTE PTR TO QCBEXTENT
         SPACE
         USING IEDQQCBE,R1              ADDRABILITY FOR QCBE
         L     R15,QCBECONC-1           PTR TO CONC TERM ENT
         LA    R15,AVTEZERO(,R15)       CLEAR HI ORDER BYTE
         SPACE
IDSRCH   EQU   *
         USING IEDQTRM,RWORK8           RWORK8 HAS ADDR OF TRM ENT
         L     RQCB,TRMDESTQ-1          GET ADDR OF QCB
         TM    QCBDSFLG,QCBDRQQ         IS IT DRQ?
         BO    NAMETEST                 YES, THEN TERM ENT IS A
*                                       CONC ENTRY. GO TEST FOR
*                                       FORM=NAME.
         SPACE
         LH    R1,QCBEXTO               NOT DRQ. GET QCB EXT OFFSET
         AR    R1,RQCB                  QCBEXTO+QCBSTART=PTR QCBEXT
         L     RWORK8,QCBECONC-1        GET PTR TO CONC TRM ENT
         SPACE
NAMETEST EQU   *
         TM    AVTEZERO(RPARM),FORMNAME FORM=NAME SPEC'D
         BZ    GETIDTAB                 NO, GO GET DVCID TABLE
         SPACE
         LTR   R15,R15                  INVALID TERM NAME?
         BZ    GETIDTAB                 YES, GO GET DVCID TABLE
         SPACE
         LA    RWORK8,AVTEZERO(,RWORK8) CLEAR HI ORDER BYTE
         CR    RWORK8,R15               IS TERM ATTACHED TO THE
*                                       SAME CONC THAT IS
*                                       ENTERING THE MESSAGE?
         SPACE
         BE    SETKEY2                  YES GO SET TTCIN & SRCE
         SPACE
GETIDTAB EQU   *
         SR    RWORK10,RWORK10          CLEAR WORK REG.
         LA    R1,TRMOPNO               PTR TO DEV FLD IF NO OPTFLD
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED?
         BZ    NOOPT                    NO, GO FIND DEV DEPEND FLD
         SPACE
         IC    RWORK10,TRMOPNO          GET NUMBER OPTION ENTRIES
         LA    R1,THREE(R1,RWORK10)     BUMP DEV DEPND FLD PTR PAST
*                                       OPTION OFFSETS.
NOOPT    EQU   *
         LH    R0,TRMDEVFL              GET DEV DEPND FIELD FLAGS.
         SLL   R0,D15                   SHIFT FLAGS TO LEFT IN R0.
         LA    RWORK8,EIGHT             SET CTR TO TEST 8 DEVICE
*                                       DEPENDENT FIELD FLAGS.
LOOP     EQU   *
         SLL   R0,ONE                   SHIFT TO TEST FOR PRESENCE
*                                       OF NEXT DEVICE DEPN'D FLD.
         LTR   R0,R0                    THIS FIELD PRESENT?
         BNM   BCTIT                    NO, DON'T BUMP PTR.
         SPACE
         IC    RWORK10,AVTEZERO(R1)     GET LNG OF THIS FIELD.
         LA    R1,ONE(R1,RWORK10)       BUMP PTR PAST THIS FIELD.
         SPACE
BCTIT    EQU   *
         BCT   RWORK8,LOOP              REACHED DVCID CHAR TAB PTR?
*                                       IF NOT, GO BACK
         MVC   AVTPARM+1(ADLEN),TWO(R1) YES, MOVE TAB ADDR TO WORK
         L     R1,AVTPARM               AREA FOR LOAD INTO REG.
         USING IEDQDVCT,R1              ADDRABILITY FOR DVCID TAB
         IC    RWORK10,DVCENLTH         GET TABLE ENTRY WIDTH
         TM    AVTEZERO(RPARM),FORMNAME FORM=NAME SPECIFIED?
         BO    FIRSTENT                 YES THEN DON'T SEARCH TAB,
*                                       JUST GET KEY FOR FIRST
*                                       ENTRY AFTER CONC.
         SPACE
         LR    RWORK8,RLEN              GET LNG FOR X'FF' TEST
         BCT   RWORK8,CONTINU           IF LNG PASSED IS ONE,
*                                       THEN TEST FOR X'FF'
         SPACE
         CLI   AVTEZERO(RWORK2),XFF     ID PASSED = X'FF' ?
         BE    FIRSTENT                 YES, GO SET KEY TO FIRST
*                                       ENTRY AFTER CONC.
         SPACE
CONTINU  EQU   *
         LA    R1,DVCECW                BUMP BASE PTR TO 1ST ENT
         SPACE
SRCHLOOP EQU   *
         AR    R1,RWORK10               BUMP TO NEXT ENTRY.BYPASSNG
*                                       CONC ENTRY FIRST TIME.
         CLI   DVCIDLTH,DVCEND          REACHED END OF TABLE?
         BE    NOTFOUND                 YES GO GET KEY FOR FIRST
*                                       ENTRY AFTER CONC.
         SPACE
         IC    RWORK8,DVCIDLTH          PICK UP DVCID LENGTH
         CR    RWORK8,RLEN              EQUAL TO LNG PASSED?
         BNE   SRCHLOOP                 NO, GO GET NEXT ENTRY
         SPACE
         BCTR  RWORK8,AVTEZERO          DECREMENT FOR COMPARE
         EX    RWORK8,COMP              TABLE DVCID = ID PASSED?
         BNE   SRCHLOOP                 NO, GO GET NEXT ENTRY
         SPACE
         SR    R15,R15                  YES, SET GOOD RTN CODE
         B     GETINDEX                 GO GET INDEX INTO TNT
         SPACE
NOTFOUND EQU   *
         L     R1,AVTPARM               RESET PTR TO BGN OF TAB
FIRSTENT EQU   *
         LA    R1,DVCECW(RWORK10)       PNT TO 1ST ENT AFTER CONC
         IC    RWORK8,DVCIDLTH          PICK UP ID LNG
         BCTR  RWORK8,AVTEZERO          DECR FOR COMMON LA INST
         LA    R15,AVTECD12             SET X'0C' RETURN CODE
         SPACE
GETINDEX EQU   *
         LA    R1,TWO(RWORK8,R1)        POINT R1 TO TNT OFFSET
         MVC   AVTPARM+2(TWO),AVTEZERO(R1)
*                                       MOVE OFFSET TO WORK AREA
         L     RWORK2,AVTPARM           FOR LOAD INTO RWORK2.
         N     RWORK2,AVTCLRHI          CLEAR HI ORDER HALF
         B     SETKEY                   GO SET LCBTTCIN
*                                       AND PRFSRCE.
         SPACE
*                                       CLC ID IN TAB TO ID PASSED
COMP     CLC   AVTEZERO(1,RWORK2),DVCCHAR COMPARE                S22024
SAVREG   DS    A                        SAVE TTE ADDR AREA     @Y17XAMF
TPREFIX  DS    0H                                              @Y17XAMF
         DC    AL2(TRMPRFSZ)            TTE PREFIX SIZE        @Y17XAMF
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         TDVCIDTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TQCBD
         EJECT
         TQCBED
         EJECT
         TSCBD
         EJECT
         TTRMD
         END
