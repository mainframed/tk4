BA01     TITLE '''IEDQBA'' -- MULTIPLE ROUTINE SUBTASK'
IEDQBA   CSECT
         SPACE 3
*CHANGE ACTIVITY=AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A5941000                                                        S21903
*C167000-174000,725400                                           S21903
*A064000-065000,112000,139000                                   SA61724
*C555000-556800                                                 SA61724
*C556300                                                       @YA05454
*D556100                                                       @YA05454
*A565000                                                       @OX11968
         SPACE
*******************************************************************   *
*                                                                     *
* MODULE NAME=IEDQBA                                                  *
*                                                                     *
* DESCRIPTIVE NAME=MULTIPLE ROUTINE SUBTASK                           *
*                                                                     *
* COPYRIGHT='NONE'                                                    *
*                                                                     *
* STATUS: CHANGE LEVEL 5                                              *
*                                                                     *
*FUNCTION --                                                          *
*   THE MULTIPLE ROUTING SUBTASK IDENTIFIES ADDITIONAL DESTINATIONS   *
*   SPECIFIED IN A BUFFER AND POSTS THE MESSAGE TO EACH OF THEM IN    *
*   ORDER.                                                            *
*                                                                     *
*   ON INITIAL ENTRY, THE ERB WITHIN THE LCB IS POSTED TO THE         *
*   MULTIPLE ROUTING SUBTASK WITH THE ADDRESS OF A RECALLED HEADER,   *
*   FIRST BUFFER ONLY, IN THE ERB CHAIN FIELD (LCBERBCH).  THE        *
*   SUBTASK COUNTS THE NUMBER OF BUFFERS PASSED (IN THIS CASE, ONE)   *
*   AND KEEPS BOTH THE ADDRESS OF THE HEADER BUFFER AND THE CURRENT   *
*   BUFFER (WHICH IN THIS CASE IS THE HEADER).  THE CURRENT BUFFER    *
*   ADDRESS IS SAVED IN THE LCB,  AND THE CURRENT COUNT IS SAVED IN   *
*   THE CURRENT BUFFER.                                               *
*                                                                     *
*   THE SUBTASK    SETS THE SCAN POINTER FROM THE FIRST-SECONDARY-    *
*   DESTINATION FIELD IN THE SCB (SCBMRFSD).  THE ADDRESS OF THE      *
*   FORWARD PARAMETER LIST IS LOADED FROM THE SCB AND THE SUBTASK     *
*   LINKS TO THE FORWARD ROUTINE.  IF A VALID DESTINATION IS          *
*   FOUND,  THE SUBTASK    TESTS IF IT IS A DISTRIBUTION LIST. IF     *
*   IT IS,  THE LCB IS SET TO POST THE MESSAGE TO EACH MEMBER OF      *
*   THE LIST BEFORE RE-ENTRY TO MULTIPLE ROUTING SUBTASK.  THE        *
*   SUBTASK THEN POSTS THE RECALLED HEADER TO THE APPROPRIATE QCB     *
*   (DISTRIBUTION LIST OR SINGLE ENTRY).                              *
*                                                                     *
*   IF AN INVALID DESTINATION HAS BEEN FOUND,  THE SUBTASK LINKS      *
*   AGAIN TO THE FORWARD ROUTINE TO FIND THE NEXT DESTINATION.        *
*                                                                     *
*   AFTER THE FIRST SECONDARY DESTINATION HAS BEEN FOUND AND A        *
*   RECALLED HEADER POSTED TO IT,  THE SUBTASK IS REENTERED WITH      *
*   ANOTHER RECALLED HEADER. THE CURRENT BUFFER ADDRESS, SAVED IN     *
*   THE LCB BEFORE THE PREVIOUS POST, IS RECOVERED.  IF THE CURRENT   *
*   BUFFER IS ITSELF A HEADER,  THE COUNT IS SET TO ONE AND THE       *
*   HEADER JUST POSTED TO THE SUBTASK IS SET AS THE CURRENT BUFFER.   *
*   OTHERWISE THE BUFFER ADDRESS RECOVERED FROM THE LCB REMAINS AS    *
*   THE CURRENT BUFFER AND THE COUNT IS RECOVERED FROM IT. THE SCAN   *
*   POINTER IS AGAIN SET FROM SCBMRFSD AND THE SUBTASK AGAIN LINKS    *
*   TO THE FORWARD ROUTINE.                                           *
*                                                                     *
*   IF RETURN FROM THE FORWARD ROUTINE INDICATES A DESTINATION        *
*   FIELD IS INCOMPLETE IN THE CURRENT BUFFER (MULTIPLE-BUFFER        *
*   HEADER), THE NEXT BUFFER MUST BE RECALLED.  AFTER THE DATA        *
*   FOUND IN THE CURRENT BUFFER IS SAVED, THE ADDRESS OF THE          *
*   HEADER, WITH ALL OTHER BUFFERS IN THE MESSAGE THAT HAVE BEEN      *
*   PASSED LINKED TO IT, IS STORED IN THE ERB.  THE CURRENT COUNT     *
*   IS INCREMENTED BY ONE AND SET IN THE ERB, AND THE ERB IS POSTED   *
*   TO THE DISK I/O QCB TO RECALL ANOTHER BUFFER.                     *
*                                                                     *
*   THE ERB IS POSTED TO THE SUBTASK WHEN ANOTHER BUFFER IS           *
*   ACCESSED.  THE SUBTASK DETERMINES THAT TWO OR MORE BUFFERS ARE    *
*   BEING PASSED (TO DISTINGUISH FROM INITIAL ENTRY),   COUNTS THE    *
*   NUMBER BEING PASSED, AND SAVES THE ADDRESS OF THE LAST BUFFER     *
*   IN THE CHAIN (WHICH IS THE NEW CURRENT BUFFER) IN THE LCB WITH    *
*   THE COUNT SAVED IN IT.  THE ADDRESS OF THE SECOND BUFFER, WITH    *
*   ANY SUBSEQUENT BUFFERS LINKED TO IT, IS ALSO SAVED IN THE LCB.    *
*   THE FIELD SCBMRFSD IS SET TO THE OFFSET TO THE FIRST DATA BYTE    *
*   IN THE CURRENT BUFFER.  THE SUBTASK THEN SETS THE SCAN POINTER    *
*   FROM SCBMRFSD AND LINKS AGAIN TO THE FORWARD ROUTINE.             *
*                                                                     *
*   IF RETURN FROM THE FORWARD ROUTINE INDICATES THAT THE EOA         *
*   STRING HAS BEEN FOUND, NO MORE DESTINATIONS ARE PRESENT. THE      *
*   LAST RECALLED HEADER IS SET TO POINT TO ANY RECALLED TEXT         *
*   BUFFERS, AND ALL BUFFERS ARE SET WITH THE ADDRESS OF THE BUFFER   *
*   RETURN QCB.  THE LCB ITSELF IS LINKED TO THE LAST BUFFER AND      *
*   SET WITH THE ADDRESS OF THE BUFFER DISPOSITION QCB. THE FIELD     *
*   SCBMRFSD IS CLEARED TO ZEROES AND THE BUFFERS AND LCB ARE         *
*   POSTED VIA AN EXIT TO THE DISPATCHER.                             *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQBA01' TO POST A MESSAGE TO ADDITIONAL DESTINATIONS.      *
*   THE MULTIPLE ROUTING SUBTASK IS DISPATCHED BY THE POSTING OF      *
*   AN ERB OR A BUFFER TO THE MULTIPLE ROUTING QCB.                   *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 -- THE ADDRESS OF THE ELEMENT POSTED.                  *
*                                                                     *
*   REGISTER 7 -- THE ADDRESS OF THE MULTIPLE ROUTING QCB.            *
*                                                                     *
*   REGISTER 11 -- THE ADDRESS OF THE DISPATCHER.                     *
*                                                                     *
*   REGISTER 13 -- THE ADDRESS OF THE SAVE AREA.                      *
*                                                                     *
*   SCB MULTIPLE ROUTING FIRST SECONDARY DESTINATION FIELD            *
*   (SCBMRFSD) -- THE OFFSET IN THE BUFFER TO THE FIRST SECONDARY     *
*   DESTINATION.                                                      *
*                                                                     *
*   SCB MULTIPLE ROUTING FORWARD PARAMETER LIST FIELD (SCBMRFPL) --   *
*   THE ADDRESS OF THE FORWARD PARAMETER LIST.                        *
*                                                                     *
*OUTPUT --                                                            *
*   SCBMRFSD -- RESET TO ZEROES                                       *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQA5' - FORWARD ROUTINE                                        *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   BUFFERS IN THE MULTIPLY-ROUTED MESSAGE                            *
*                                                                     *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*   LCB - LINE CONTROL BLOCK                                          *
*                                                                     *
*EXITS, NORMAL -- THE MESSAGE HAS BEEN POSTED TO ALL VALID SUBSE-     *
*   QUENT DESTINATIONS.  THE SCB MULTIPLE ROUTING FIRST SECONDARY     *
*   DESTINATION FIELD (SCBMRFSD) HAS BEEN RESET TO ZEROES.            *
*                                                                     *
*EXITS, ERROR -- N/A                                                  *
*                                                                     *
*TABLES/WORK AREAS -- N/A                                             *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN        *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
*******************************************************************   *
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        ELEMENT ADDRESS
         SPACE
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RSCB3    EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
         SPACE
RCT5     EQU   5                        COUNT OF BUFFERS RECALLED
RGO5     EQU   5                        INITIAL BRANCH REGISTER
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE
RQCB7    EQU   7                        QCB ADDRESS
         SPACE
RHDR8    EQU   8                        ADDRESS OF HEADER BUFFER
R9       EQU   9                        WORK REG                SA61724
R10      EQU   10                       WORK REG                SA61724
         SPACE
RDISP11  EQU   11                       DISPATCHER ADDRESS
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       ADDRESS OF SAVE AREA
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
ONE      EQU   1                        INCREMENT VALUE OF ONE
FOUR     EQU   4                        FULL-WORD OFFSET
SIXTH    EQU   5                        OFFSET TO SIXTH BYTE
SEVEN    EQU   7                        LENGTH OF SCB SAVE AREA
EIGHT    EQU   8                        BFR ADDR IN LCB ERB
OPLNGTH  EQU   3                        LENGTH OF OPTION FIELD  SA61724
         SPACE
CHARC    EQU   C'C'                     CHARACTER 'C'
         SPACE
MBHFLAG  EQU   X'01'                    MULTIPLE-BFR-HEADER FLAG
MLTRFLAG EQU   X'02'                    MULTIPLE-ROUTE FLAG
TICOP    EQU   X'08'                    TIC OP CODE
DISTLIST EQU   X'40'                    DISTRIBUTION LIST FLAGS
TYPEMASK EQU   X'E0'                    CLEAR FLAG FOR TRM TYPE
CLERDSET EQU   X'0F'                    CLEAR MASK FOR SCBQTYPE
X02      EQU   2                        DISPLACEMENT            SA61724
         EJECT
         USING AVTSAVE2,R13
         USING IEDQLCB,RLCB4
         USING IEDQSCB,RSCB3
         USING IEDQPRF,RHDR8
         USING IEDQDISP,RDISP11
         USING IEDQBA01,RBASE
         SPACE
IEDQBA01 EQU   *
         DC    CL6'IEDQBA'              CONSTANT                 S21903
         DC    X'1078'                  CONSTANT                 S21903
         DC    AL1(DSPMCPL4)            CONSTANT                 S21903
         DC    AL3(*-1)                 CONSTANT                 S21903
         SPACE
         LR    RBASE,RQCB7              RESET BASE
         SPACE
         LR    RHDR8,R1                 GET ELEMENT ADDRESS
         LA    RGO5,BUFFER              SET BRANCH ADDR FOR BUFFER
         L     RLCB4,PRFLCB-1           SET LCB ADDR AS IF BUFFER
         TM    PRFTIC,TICOP             BUFFER OR ERB
         BO    SETREGS                  BUFFER, BRANCH
         SPACE
         L     RHDR8,EIGHT(,RHDR8)      NO, GET HEADER ADDRESS
         LA    RGO5,ERB                 SET BRANCH ADDR FOR ERB
         LA    RLCB4,AVTEZERO(,R1)      SET LCB ADDRESS
         SH    RLCB4,BACKUP               FROM ERB ADDRESS
         SPACE
SETREGS  EQU   *
         LA    RHDR8,AVTEZERO(,RHDR8)   CLEAR HI-ORDER BYTE
         L     RSCB3,LCBSCBA-1          GET SCB ADDRESS
         LA    R14,POSTERB              SET ERROR EXIT ADDRESS
         LTR   RHDR8,RHDR8              IS THERE A BUFFER
         BZ    CLRMRFSD                 NO, LOGICAL READ ERROR, BR
         SPACE
         ST    RQCB7,LCBRCQCB           POINT LCB TO OUR QCB
         LR    RPREFIX,RHDR8            ASSUME FIRST BUFFER
         BR    RGO5                     ENTER APPROPRIATE CODE
         EJECT
ERB      EQU   *
         SR    RCT5,RCT5                INITIALIZE COUNT TO ZERO
         B     ERBENTER                 ENTER ERB LOOP
         SPACE
ERBLOOP  EQU   *
         LR    RPREFIX,RWORK2           GET NEXT BUFFER ADDRESS
         SPACE
ERBENTER EQU   *
         LA    RCT5,ONE(,RCT5)          COUNT FIRST/NEXT BUFFER
         L     RWORK2,PRFLINK-1-IEDQPRF(,RPREFIX) LOAD LINK
         LA    RWORK2,AVTEZERO(,RWORK2)   FIELD OF FIRST/NEXT BFR
         LTR   RWORK2,RWORK2            IS IT ZEROES
         BNZ   ERBLOOP                  NO, GET NEXT BUFFER ADDRESS
         SPACE
         CR    RHDR8,RPREFIX            YES, IS THIS FIRST BUFFER
         BNE   NOTFIRST                 IT IS NOT, BRANCH
         SPACE
         NI    SCBERR2,AVTEFF-SCBFRWDN  IT IS, RESET FORWARD FLAG
         B     SETAVTAD                 GO SET BUFFER ADDR IN AVT
         SPACE
NOTFIRST EQU   *
         SPACE
         STC   RCT5,PRFKEY-IEDQPRF(,RPREFIX) IT ISN'T, SAVE COUNT
         IC    R0,LCBERBCH-1            INITIALIZE ERB FIELD
         ST    RPREFIX,LCBERBCH-1         TO
         STC   R0,LCBERBCH-1              BFR ADDR ON NOT-FIRST
         OI    PRFSTAT1-IEDQPRF(RPREFIX),PRFDUPLN SET DUPL HDR BIT
         LH    RWORK2,PRFSCAN-IEDQPRF(,RPREFIX) PICK UP RESERVE CT
         LA    RWORK2,AVTTXTSZ(,RWORK2)   SET SCB TO START
         STH   RWORK2,SCBMRFSD            START OF CURRENT BUFFER
         L     RWORK2,PRFLINK-1         SAVE SECOND BUFFER'S
         ST    RWORK2,LCBRCB              ADDRESS IN LCB
         OI    SCBMBHEN+2,MBHFLAG+MLTRFLAG SET FLAGS IN SCB
         B     SETAVTAD                 GO SET NEXT BFR ADDR IN AVT
         SPACE 3
BUFFER   EQU   *
         L     RPREFIX,LCBERBCH-1       PICK UP CURRENT BUFFER
         LA    RPREFIX,AVTEZERO(,RPREFIX) ADDRESS FROM LCB
         SPACE
         TM    PRFSTAT1-IEDQPRF(RPREFIX),PRFNHDRN CURRENT BFR FIRST
         LA    RCT5,ONE                 ASSUME YES
         BNO   SETAVTAD                 YES, SET CURRENT BFR REG
         SPACE
         IC    RCT5,PRFKEY-IEDQPRF(,RPREFIX) NO, GET CT FROM BUFFER
*        B     SETAVTAD                 GO SET BFR ADDR IN AVT
         EJECT
SETAVTAD EQU   *
         ST    RPREFIX,AVTADBUF         SET BUFFER ADDR IN AVT
         MVI   SCBPRI,AVTEZERO          CLEAR SCB PRIORITY
         NI    PRFSTAT1,AVTEFF-PRFLOCK  MAKE SURE LOCK BIT IS OFF
         SPACE
NEXTDEST EQU   *
         LH    RWORK2,PRFSCAN-IEDQPRF(,RPREFIX) SAVE IDLES COUNT
         LH    R0,SCBMRFSD              GET SECONDARY DEST OFFSET
         STH   R0,PRFSCAN-IEDQPRF(,RPREFIX) SET TO START SCAN THERE
         L     R1,SCBMRFPL-1            GET FORWARD PARM LIST ADDR
         LA    R15,AVTECD4              CLEAR FLAGS
         LNR   R15,R15                    IN LOW-ORDER
         NR    R1,R15                     TWO BITS
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BALR  R14,R15                  LINK TO FORWARD ROUTINE
         SPACE
         STH   RWORK2,PRFSCAN-IEDQPRF(,RPREFIX) RESTORE IDLES CT
         LTR   R15,R15                  TEST RETURN
         BM    MBHEXIT                  MBH RETURN, BRANCH
         BNZ   VALTEST-4(R15)           NOT VALID DEST, SELECT EXIT
         SPACE
         TM    PRFSTAT1-IEDQPRF(RPREFIX),PRFNHDRN IS CURRENT FIRST
         BNO   TSTDLIST                 YES, GO TEST FOR DLIST
         SPACE
         LH    RWORK2,AVTPARM3          NO, RETRIEVE KEY FROM AVT
         STH   RWORK2,PRFDEST           SET IN HEADER PREFIX
         SPACE
TSTDLIST EQU   *
         L     RQCB7,SCBDESTQ-1         PICK UP DEST QCB ADDRESS
         L     RWORK2,AVTPARM           GET TERM ENTRY ADDRESS
         USING IEDQTRM,RWORK2
         IC    R0,TRMSTATE              PICK UP STATUS BYTE
         NI    TRMSTATE,TYPEMASK        CLEAR ALL BUT TYPE FLAGS
         CLI   TRMSTATE,DISTLIST        TEST IF DISTRIBUTION LIST
         STC   R0,TRMSTATE              RESET STATUS BYTE
         BNE   POSTBFR                  NO, POST NOW
         SPACE
         CLI   SIXTH(RQCB7),CHARC       YES, IS 6TH BYTE A 'C'
         BNE   POSTBFR                  NO, POST NOW
         SPACE
         ST    RWORK2,LCBLINK-1         YES, STORE TERM ENTRY ADDR
         LA    R0,ONE                   SET VALUE OF ONE
         STH   R0,SCBDLPTR                IN DIST LIST POINTER
         ST    RQCB7,LCBRCQCB           PASS DLIST QCB ADDR IN LCB
         SPACE
POSTBFR  EQU   *
         ST    RQCB7,PRFQCBA-1          SET DEST QCB ADDR IN BFR
         MVI   PRFPRI,PRIDESTQ          SET PRIORITY
         LR    R1,RHDR8                 SET HEADER ADDR IN REG 1
         BAL   R14,DSPPOST              EXIT TO POST BUFFER    @Y17XAMX
         EJECT
VALTEST  EQU   *
         B     NEXTDEST                 GET NEXT DESTINATION
         SPACE
EOA      EQU   *
         LA    R0,AVTBFRTB              GET BUFFER RTN QCB ADDR
         CR    RPREFIX,RHDR8            ONLY ONE BUFFER TO RETURN
         LR    RPREFIX,RHDR8            (START WITH HEADER BUFFER)
         BE    EOAENTER                 ONLY ONE, ENTER LOOP
         SPACE
         L     RWORK2,LCBRCB            MORE THAN ONE, LINK
         ST    RWORK2,PRFLINK-1           SECOND BUFFER TO FIRST
         B     EOAENTER                 ENTER LOOP
         SPACE
EOALOOP  EQU   *
         L     RPREFIX,PRFLINK-1-IEDQPRF(,RPREFIX) GET NEXT BFR
         SPACE
EOAENTER EQU   *
         ST    R0,PRFQCBA-1-IEDQPRF(,RPREFIX) SET QCB ADDR IN BFR
         MVI   PRFPRI-IEDQPRF(RPREFIX),PRIBFRTB SET PRIORITY
         BCT   RCT5,EOALOOP             LOOP TILL ALL BUFFERS SET
         SPACE
         SR    RWORK2,RWORK2            YES,CLEAR SECONDARY DESTSA61724
         SR    R10,R10                  CLEAR REGISTER          SA61724
         TM    SCBSTATE,SCBPRER         IS OPTION FIELD FIRST   SA61724
         BZ    NORESET                  NO                      SA61724
         LH    R1,LCBTTCIN              TNT OFFSET              SA61724
         N     R1,AVTCLRHI              CLEAR HIGH BYTES        SA61724
         BZ    NORESET                  NO SOURCE               SA61724
         L     R15,AVTRNMPT             TNT ROUTINE             SA61724
         BALR  R14,R15                  LINK TO TNT ROUTINE     SA61724
         DROP  RWORK2                                           SA61724
         USING IEDQTRM,R1                                       SA61724
         IC    R10,TRMOPT(R10)          OFFSET                  SA61724
         LH    R9,TRMOPTBL              GET ENTRY OFFSET       @YA05454
         N     R9,AVTCLRHI              CLEAR HI HALF          @YA05454
         A     R9,AVTOPTPT              ADD OPT TBL ADDR       @YA05454
         AR    R9,R10                   ADDR OF OPTION FIELD    SA61724
         MVC   AVTEZERO(OPLNGTH,R9),AVTFZERO CLEAR OPTION FIELD SA61724
         NI    SCBSTATE,AVTEFF-SCBPRER  TURN OFF FLAG           SA61724
NORESET  EQU   *                                                SA61724
         LR    R1,RHDR8                 SET ELEMENT ADDR FOR POSSA61724
         LA    RWORK2,LCBERB            GET ERB ADDRESS
         ST    RWORK2,PRFLINK-1-IEDQPRF(,RPREFIX) SET IN LAST BFR
         MVI   PRFPRI-IEDQPRF(RPREFIX),PRIBFRTB RESET PRIORITY
         SPACE
POSTERB  EQU   *
         NI    SCBMBHEN+2,AVTEFF-OPLNGTH TURN OFF MBFR/MR FLAGS@OX11968
         L     RWORK2,AVTMSGS-1         GET MH VCON TABLE ADDRESS
         L     RWORK2,AVTEZERO(,RWORK2) GET ADDR OF BFR DISP QCB
         ST    RWORK2,LCBERBQB-1        SET IT IN ERB QCB FIELD
         SR    R0,R0                    CLEAR LINK FIELD
         ST    R0,LCBERBLK-1              IN ERB'S ECB
         MVI   LCBERBPY,PRIRCQCB        SET ECB PRIORITY
         MVC   LCBERBCH,AVTFZERO        CLEAR CHAIN FIELD TO ZEROES
         NI    LCBSTAT1,LCBRCLLF        TURN OFF RECALL BIT
         SPACE
         BAL   R14,DSPCHAIN             EXIT TO POST ELEMENTS  @Y17XAMX
         EJECT
*
MBHEXIT  EQU   *
         TM    PRFSTAT1-IEDQPRF(RPREFIX),PRFNLSTN MBH ON LAST BFR
         BO    MBHSAVE                  NO, GO SAVE DATA FOUND
         SPACE
         LA    R14,EOA                  SET BRANCH ADDRESS
         SPACE
CLRMRFSD EQU   *
         SR    RWORK2,RWORK2            YES, CLEAR SECONDARY DEST
         STH   RWORK2,SCBMRFSD            FIELD IN SCB TO ZEROES
         BR    R14                      EXIT FROM FUNCTION
         SPACE
MBHSAVE  EQU   *
         MVC   LCBCPA(SEVEN),AVTDOUBL   NO, SAVE DATA FOUND IN LCB
         IC    RWORK2,AVTPARM+1         PICK UP LNG OF DATA FOUND
         SLL   RWORK2,FOUR              SHIFT LEFT
         EX    RWORK2,OIX               SET IN SCB
         SPACE
         BAL   R14,CLRMRFSD             LINK TO CLEAR FIELD
         SPACE
         CR    RPREFIX,RHDR8            IS CURRENT BUFFER FIRST BFR
         BE    MBHLINK                  YES, MAKE ITS LINK FLD ZERO
         SPACE
         L     RWORK2,LCBRCB            NO, GET SECOND BFR'S ADDR
         SPACE
MBHLINK  EQU   *
         ST    RWORK2,PRFLINK-1         SET FIRST BUFFER'S LINK FLD
         SPACE
         IC    R0,LCBERBCH-1
         ST    RHDR8,LCBERBCH-1         SET 1ST BFR'S ADDR IN ERB
         STC   R0,LCBERBCH-1
         SPACE
         NI    SCBQTYPE,CLERDSET        CLEAR OLD DATA-SET FLAGS
         SPACE
         LA    RCT5,ONE                 REQUEST 1 MORE BUFFER
         STH   RCT5,LCBERBCT            STORE REQUEST IN LCB
         SPACE
         LA    RWORK2,AVTDSIOB          SET ADDRESS OF DISK I/O
         ST    RWORK2,LCBERBQB-1          QCB IN LCB
         MVI   LCBERBPY,PRIRECAL        SET RECALL PRIORITY
         LA    R1,LCBERB                PUT ELEMENT ADDR IN R1
         BAL   R14,DSPPOST              POST TO GET NEXT BUFFER@Y17XAMX
         SPACE
********* EXECUTED INSTRUCTION *********
         SPACE
OIX      OI    SCBDESTL,AVTEZERO
         SPACE 3
********* CONSTANTS *********
         SPACE
BACKUP   DC    AL2(LCBERB-IEDQLCB)      CONSTANT                 S21903
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TTRMD
         EJECT
         TSCBD
         SPACE
         END
