         TITLE 'IEDQBQ - QACTION MODULE'
IEDQBQ   CSECT
*A406300-406600                                                 SA59012
*C407600                                                         Y01004
*A444100-444500                                                  S22027
*D000500                                                         S22027
*A681100-681500                                                  S99228
*C681000                                                         S99228
         ENTRY IEDQBQ02
***********************************************************************
*                                                                     *
* STATUS -- CHANGE LEVEL 0                                            *
*                                                                     *
* FUNCTION --                                                         *
*    THIS MODULE PERFORMS ANY OF THE FOLLOWING OPERATIONS BASED       *
*    UPON A USER PARAMETER LIST :                                     *
*    1- SET USER ERROR BIT IN USER ERROR WORD                         *
*    2- EXECUTION OF INMSG                                            *
*    3- EXECUTION OF OUTMSG                                           *
*    4- PREVENTION OF FURTHER OUTPUT (PENDING OPERATIONS NOT EXECUTED)*
*    5- CONTINUATION OF SENDING (PENDING OPERATIONS ARE EXECUTED)     *
*                                                                     *
* ENTRY POINTS --                                                     *
*                                                                     *
*         IEDQBQ -- WHEN ENTERED FROM QACTION                         *
*                                                                     *
*         BAL   1,*+12               POINT TO PARAMETER LIST          *
*         PARAMETER LIST                                              *
*         L     15,IEDQUI            USER INTERFACE ROUTINE           *
*         BALR  14,15                EXIT TO USER INTERFACE ROUTINE   *
*                                                                     *
*         IEDQBQ02 -- WHEN DUMMY LCB IS RETURNED                      *
*                                                                     *
* INPUT --                                                            *
*    WHEN ENTERED FROM QACTION MACRO VIA IEDQUI  :                    *
*                                                                     *
*    REGISTER 1 - POINTS TO A MACRO GENERATED PARAMETER LIST          *
*                                                                     *
*    ***************************************                          *
*    * INDEX  * LENGTH  *                  *                          *
*    *  TO    * OF PARM *    RESERVED      *                          *
*    * IEDQBQ * LIST    *                  *                          *
*    ***************************************                          *
*    *        *  ADDRESS OF USER WRITTEN   *                          *
*    * UNUSED *  STATUS ANALYSIS ROUTINE   *                          *
*    *        *                            *                          *
*    ***************************************                          *
*    <---------- 4 BYTES ------------------>                          *
*                                                                     *
*    REGISTER 3 - SCB ADDRESS                                         *
*    REGISTER 4 - LCB ADDRESS                                         *
*    REGISTER 6 - CURRENT BUFFER ADDRESS                              *
*    REGISTER 9 - AVT ADDRESS                                         *
*    REGISTER 12 - ADDRESS OF FIRST EXECUTABLE INSTRUCTION            *
*                                                                     *
*    WHEN ENTERED AT IEDQBQ02                                         *
*    REGISTER 1 - ADDRESS OF THE DUMMY LCB                            *
*    REGISTER 15 - THE ENTRY POINT ADDRESS                            *
*                                                                     *
* OUTPUT --                                                           *
*    N/A                                                              *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IEDQBD -- BUFFER DISPOSITION                                *
*                                                                     *
* EXITS,NORMAL --                                                     *
*                                                                     *
*         TO THE USER ROUTINE WHOSE ADDRESS IS PASSED IN THE MACRO    *
*         EXPANDED PARAMETER LIST. THIS USER ROUTINE ANALYZES THE     *
*         STATUS RETURNED BY THE TERMINAL AND RETURNS TO IEDQBQ WITH  *
*         REGISTER 1 POINTING TO A PARAMETER LIST WHICH INDICATES THE *
*         ACTION TO BE TAKEN FOR EACH TERMINAL IN THE LIST.           *
*                                                                     *
*         REGISTER 1 --                                               *
*                                                                     *
*         ****************************************************        *
*         * NUMBER  * FLAGS   *  ACTION *  TERMINAL NAME     *        *
*         *   OF    * AND     *   BYTE  *       OR           *        *
*         * ENTRIES * ENTRY   *         *  DEVICE I. D.      *        *
*         *         * LENGTH  *         *                    *        *
*         ****************************************************        *
*                    <--------- FORMAT OF EACH ENTRY ------->         *
*                                                                     *
*         NUMBER OF ENTRIES -- ONE BYTE FIELD APPEARING ONLY ONCE     *
*         AS THE FIRST BYTE OF THE PARAMETER LIST. IT CONTAINS        *
*         A COUNT OF THE NUMBER OF ENTRIES IN THE PARAMETER           *
*         LIST.                                                       *
*                                                                     *
*         FLAGS AND ENTRY LENGTH -- ONE BYTE FIELD                    *
*                                                                     *
*         FLAGS -- 4 BITS DEFINED AS FOLLOWS :                        *
*         BIT 0 - 0, DEVICE I. D. SPECIFIED                           *
*         BIT 0 - 1, TERMINAL NAME SPECIFIED                          *
*         BIT 1 - RESERVED                                            *
*         BIT 2 - RESERVED                                            *
*         BIT 3 - RESERVED                                            *
*                                                                     *
*         ENTRY LENGTH 4 BITS                                         *
*         BITS 4 THRU 7 -- LENGTH OF THIS ENTRY.                      *
*                                                                     *
*         ACTION BYTE -- INDICATES THE ACTION TO BE TAKEN FOR         *
*         THIS TERMINAL.                                              *
*                                                                     *
*         BIT 0 -- SET USER ERROR BIT IN USER ERROR WORD              *
*         BIT 1 -- RESERVED                                           *
*         BIT 2 -- RESERVED                                           *
*         BIT 3 -- RESERVED                                           *
*         BIT 4 -- TEMPORARY HOLD                                     *
*         BIT 5 -- FORCE OUTMSG                                       *
*         BIT 6 -- FORCE INMSG                                        *
*         BIT 7 -- CONTINUE SENDING ( PENDING OPERATIONS ARE EXEC. )  *
*                                                                     *
*         TERMINAL NAME OR DEVICE I. D. --                            *
*                                                                     *
*         TERMINAL NAME - 1 TO 8 BYTE EBCIDIC REPRESENTATION          *
*         DEVICE I. D.  - 1 TO 8 BYTES HEX. REPRESENTATION            *
*                                                                     *
*         TO THE DISPATCHER TO :                                      *
*         1 - POST A BUFFER TO IEDQBD FOR OUTMSG EXECUTION            *
*         2 - TO POST A BUFFER TO THE HOLD QCB (IEDQBQ03)             *
*         3 - TO DISPATCH THE NEXT SUBTASK                            *
*                                                                     *
*         REGISTER 1 -- THE ELEMENT ADDRESS (IF NEEDED)               *
*         REGISTER 7 -- THE ACB ADDRESS (IF NEEDED)                   *
*         REGISTER 11 - THE DISPATCHER'S ADDRESS                      *
*         REGISTER 13 - THE DISPATCHER'S SAVE AREA ( AVTSAVE2 )       *
*                                                                     *
*         TO THE NEXT SEQUENTIAL INSTRUCTION IS THE MESSAGE HANDLER   *
*         REGISTER 15 -- 0 TO INDICATE SUCCESSFULL EXECUTION          *
*                                                                     *
*                                                                     *
*         TO IGG019Q9 TO PUT THE CONC. SEND SCHED. IN THE LCB         *
*         REGISTER 7 -- DATA READY QUEUE ADDRESS                      *
*         REGISTER 11 - DISPATCHER'S ADDRESS                          *
*         REGISTER 13 - AVTSAVE2                                      *
*         REGISTER 14 - RETURN ADDRESS                                *
*         REGISTER 15 - ENTRY POINT IN IEDQBH                         *
*                                                                     *
* EXITS,ERROR --                                                      *
*                                                                     *
*         TO THE NEXT SEQUENTIAL INSTRUCTION IN THE MESSAGE HANDLER   *
*         REGISTER 1 -- ADDRESS OF THE INVALID ENTRY                  *
*         REGISTER 15 - X'04' TO INDICATE UNSUCCESSFUL EXECUTION.     *
*         NO ACTION WAS TAKEN FOR ANY ENTRY AFTER THE INVALID ENTRY.  *
*                                                                     *
*         TO THE NEXT INSTRUCTION IN THE MH                           *
*         REGISTER 1 -- ADDRESS OF THE CURRENT ENTRY IN PARM LIST     *
*         REGISTER 15 - X'08', NO BUFFERS, NO FURTHER ACTION TAKEN    *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    AVT                                                              *
*    BUFFER PREFIX                                                    *
*    DCB                                                              *
*    DEB                                                              *
*    DEVICE ID TABLE                                                  *
*    DRQ                                                              *
*    LCB                                                              *
*    QCB                                                              *
*    QCBE                                                             *
*    SCB                                                              *
*    TERMINAL ENTRY                                                   *
*                                                                     *
* ATTRIBUTES --                                                       *
*    SERIALLY REUSABLE, ENABLED, PROBLEM PROGRAM MODE                 *
*                                                                     *
* CHARACTER CODE DEPENDENCIES --                                      *
*                                                                     *
*    THE EXECUTION OF THIS MODULE DOES NOT DEPEND UPON ANY INTERNAL   *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET .                   *
*                                                                     *
* NOTES --                                                            *
*                                                                     *
*    THE BUFFER PREFIX IS USED AS A SAVE AREA TO SAVE THE DATA        *
*    NECESSARY TO SET UP FOR OUTMSG EXECUTION. THE DATA SAVED IS      *
*    1- ACTION BYTE FROM THE CURRENT ENTRY IN THE PARAMET5R LIST      *
*    2 - TNT INDEX FOR THIS TERMINAL                                  *
*    3 - SCB ADDRESS                                                  *
*    4 - QCB EXTENSION ADDRESS                                        *
*    5 - LCBSTAT2                                                     *
*    6 - QCB ADDRESS                                                  *
*    THIS DATA IS USED TO SET UP THE LCB, SCB, AND BUFFER PREFIX WITH *
*    THE FIELDS NECESSARY FOR OUTMSG EXECUTION                        *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
R0       EQU   0                        WORK REG
RZERO    EQU   0
RPARM    EQU   1                        PARAMETER LIST ADDRESS
R1       EQU   1                        WORK REG
R2       EQU   2                        WORK REG
RSCB     EQU   3                        SCB ADDRESS
RLCB     EQU   4                        LCB ADDRESS
RCURR    EQU   5                        CURRENT ENTRY IN PARM LIST
RPREFIX  EQU   6                        BUFFER ADDRESS
RQCB     EQU   7                        QCB ADDRESS
RTERM    EQU   8                        TERMINAL ENTRY ADDRESS
RAVT     EQU   9                        AVT ADDRESS
R10      EQU   10                       WORK REG
RQCBE    EQU   11                       QCB EXTENSION ADDRESS
RDISP    EQU   11                       DISPATCHER ADDRESSABILITY
RBASE    EQU   12                       BASE REG
RSAVE    EQU   13                       SAVE AREA ADDRESS
RLINK    EQU   14                       LINKAGE REGISTER
R14      EQU   14                       WORK REG
R15      EQU   15                       WORK REG
***********************************************************************
*        DSECT ADDRESSABILITY                                         *
***********************************************************************
         USING *,RBASE                  MODULE BASE
         USING IEDQSCB,RSCB             SCB BASE
         USING IEDQLCB,RLCB             LCB BASE
         USING IEDQPRF,RPREFIX
         USING IEDQQCB,RQCB             QCB BASE
         USING IEDQTRM,RTERM
         USING IEDQAVTD,RAVT            AVT BASE
         USING IEDQQCBE,RQCBE           QCBE BASE
IEDQBQ   IEDHJN IEDQBQ01
         OC    PRFSIZE,PRFSIZE          ZERO LENGTH BUFFER
         BZ    RETURN                   YES, RETURN
***********************************************************************
*        EXIT TO USER WRITTEN STATUS ANALYSIS ROUTINE                 *
***********************************************************************
         USING PARMLST,RPARM
         L     R15,PARMEXIT-1           USER EXIT ADDRESS
         STM   RLINK,RBASE,D12(RSAVE)   SAVE REGISTERS
         BALR  RLINK,R15                EXIT TO USER ROUTINE
         LM    R2,RBASE,D28(RSAVE)      RESTORE REGISTERS
         DROP  RPARM                    RELEASE PARM REG
         USING ACTLST,RPARM             DECLARE ACTLST REG
         CLI   TRMNO,AVTEZERO           ANY TERMINALS IN LIST
         BE    RETURN                   NO, RETURN TO NSI IN MH
         MVC   NOENT,TRMNO              INITIALIZE COUNT
         DROP  RPARM                    RELEASE ACTLST REG
         LA    RCURR,ONE(RPARM)         ADDRESS OF FIRST ENTRY
         USING ACTLST,RCURR             GET NEW ACTLST REG
ANYACT   EQU   *
         CLI   ACTBYTE,AVTEZERO         ANY ACTION THIS ENTRY
         BNE   CHKVAL                   YES, CHECK VALIDITY
***********************************************************************
*        INDEX TO NEXT ENTRY IN PARAMETER LIST OR EXIT IF ALL ENTRIES *
*        HAVE BEEN PROCESSED.                                         *
***********************************************************************
NXTENTRY EQU   *                        TRY NEXT ENTRY
         SR    R0,R0                    ZERO INDEX REG
         IC    R0,NOENT                 NO OF ENTRIES REMAINING
         BCTR  R0,AVTEZERO              SUBTRACT ONE
         LTR   R0,R0                    ANY ENTRIES LEFT
         BZ    RETURN                   NO, EXIT
         STC   R0,NOENT                 SAVE NO OF ENTRIES LEFT
         IC    R0,FLGLEN                GET ENTRY LENGTH
         N     R0,ELENMSK               ISOLATE LEN FROM FLAGS
         AR    RCURR,R0                 INDEX TO NEXT ENTRY
         B     ANYACT                   CHECK ACTION BYTE
CHKVAL   EQU   *                        CHECK ACTION BYTE
         TM    ACTBYTE,THLD+TRLSE       VALID ACTION BYTE
         BNO   SPEC                     YES, BRANCH
***********************************************************************
*        INVALID ENTRY                                                *
***********************************************************************
INVENT   EQU   *
         LR    RPARM,RCURR              POINT TO INVALID ENTRY
         LA    R15,AVTECD4              SET RETURN CODE
         B     BADRTN                   EXIT
***********************************************************************
*        VALID ACTION BYTE                                            *
***********************************************************************
SPEC     EQU   *                        CHECK LENGTH
         SR    R2,R2                    ZERO LENGTH REG
         IC    R2,FLGLEN                GET ENTRY LENGTH
         N     R2,ELENMSK               ISOLATE LENGTH
         CH    R2,AVTHA3                ENTRY LENGTH LESS THAN MIN.
         BL    INVENT                   YES, INVALID ENTRY
         TM    FLGLEN,TRMNME            TERMINAL NAME SPECIFIED
         BZ    IDSPEC                   NO, DVC ID SPECIFIED
***********************************************************************
*        TERMINAL NAME SPECIFIED                                      *
***********************************************************************
         SH    R2,AVTHA2                CALC LENGTH OF TRM NAME
         STC   R2,CHARLEN               SAVE LENGTH IN PARM LIST
         LA    R2,TRMNAME               POINT TO TERMINAL NAME
         ST    R2,CHARADDR              SAVE ADDR IN PARM LIST
         LA    RPARM,BSLST              POINT TO PARAMETER LIST
         L     R15,AVTUI                ADDR USER INTERFACE RTN
         BALR  RLINK,R15                LINK TO IEDQUI
         LTR   R1,R15                   TRM NAME FOUND
         BZ    INVENT                   NO, EXIT ON ERROR
         STH   R1,TTCIN                 SAVE TNT INDEX
         B     TENTRY                   TRM ENTRY ADDR FOUND
***********************************************************************
*        DEVICE ID SPECIFIED                                          *
***********************************************************************
IDSPEC   EQU   *
         CH    R2,AVTHA3                DVCID ONE BYTE LONG
         BH    NOTFF                    NO, BRANCH
         CLI   DVCID,AVTEFF             DVC ID EQUAL TO X'FF'
         BE    NXTENTRY                 YES, IGNORE ENTRY
NOTFF    EQU   *
         LR    RPREFIX,R2               SAVE ID LENGTH
         SH    RPREFIX,AVTHA2
         LH    RPARM,LCBTTCIN           GET TTCIN
         N     RPARM,AVTCLRHI           CLEAR HI-ORDER
         L     R15,AVTRNMPT             ADDR OF TNT CODE
         BALR  RLINK,R15                GET TERMINAL ENTRY ADDR
         LR    RTERM,R1                 SAVE TRM ENTRY ADDR
         TM    TRMDEVFL+ONE,TRMCONC     CONC OR ATTACHED TRM
         BZ    INVENT                   NO, INVALID ENTRY
         L     RQCB,TRMDESTQ-1          QCB ADDR
         TM    QCBDSFLG,QCBDRQQ         DATA READY QUEUE
         BO    TBLADDR                  YES, EXTRACT DVC ID ADDR
         LR    RQCBE,RQCB               CALC QCB EXT ADDR
         AH    RQCBE,QCBEXTO
         L     RTERM,QCBECONC-1         CONC TRM ENTRY ADDR
TBLADDR  EQU   *
         LA    RPARM,TRMOPNO            DVC DEP FLDS IF NO OPTION FLDS
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED
         BZ    NOOPT                    NO, BRANCH
         SR    R2,R2
         IC    R2,TRMOPNO               NO. OF OPTION FIELDS
         LA    RPARM,THREE(R2,RPARM)    ADDR OF DEV DEP FLDS
NOOPT    EQU   *
         LH    R0,TRMDEVFL              DEVICE DEPENDENT FLAGS
         SLL   R0,HIORDER               SHIFT TO HIGH ORDER
         LA    R2,DIDTBLB               LOCATE PTR TO DVC ID TBL
         SR    R14,R14
NXTFLD   EQU   *
         SLL   R0,ONE                   SHIFT TO TEXT FOR FIELD
         LTR   R0,R0                    FIELD PRESENT
         BNM   LPEND                    NO, BRANCH
         IC    R14,AVTEZERO(RPARM)      GET LENGTH OF THIS FLD
         LA    RPARM,ONE(R14,RPARM)     INDEX TO NEXT FIELD
LPEND    EQU   *
         BCT   R2,NXTFLD                LOOP TIL PROPER FLD LOCATED
         MVC   AVTDOUBL(L4),ONE(RPARM)  GET PTR TO DVC ID TABLE
         L     R2,AVTDOUBL              DVC ID TABLE ADDR
         USING IEDQDVCT,R2
         IC    R14,DVCENLTH             LENGTH OF EACH ENTRY
         SR    R0,R0                    ZERO INDEX REG
         IC    R0,DVCNO                 NO OF ENTRIES IN DVC ID TBL
         LA    R2,DVCECW                POINT TO FIRST ENTRY
         SR    RPARM,RPARM              ZERO LENGTH REG
NEXTID   EQU   *
         IC    RPARM,DVCIDLTH           LENGTH OF THIS ID
         CR    RPARM,RPREFIX            ARE ID LENGTHS EQUAL
         BNE   NEXTONE                  NO, BRANCH
         BCTR  RPARM,AVTEZERO           DECREMENT LENGTH BY ONE
         EX    RPARM,IDCLC              COMPARE DVC ID
         BE    IDOK                     BRANCH EQUAL
NEXTONE  EQU   *
         LA    R2,AVTEZERO(R14,R2)      INDEX TO NEXT ENTRY
         BCT   R0,NEXTID                COMPARE NEXT DVC ID
         B     INVENT                   ID NOT FOUND, INVALID ENTRY
IDOK     EQU   *
         LA    R14,TWO(RPARM,R2)        POINT TO TNT OFFSET
         MVC   TTCIN(TWO),AVTEZERO(R14) SAVE TNT OFFSET
         LH    RPARM,TTCIN              PARM FOR TNT CODE
         N     RPARM,AVTCLRHI           CLEAR HIGH HALF WORD
TENTRY   EQU   *
         L     R15,AVTRNMPT             ADDR OF TNT CODE
         BALR  RLINK,R15                GET TRM ENTRY ADDRESS
         DROP  RTERM
         USING IEDQTRM,RPARM
***********************************************************************
*        CAN QACTION BE EXECUTED FOR THIS TERMINAL                    *
***********************************************************************
         TM    TRMDEVFL+ONE,TRMCONC     CONC OR ATTACHED TRM
         BZ    INVENT                   NO, INVALID ENTRY
         L     RQCB,TRMDESTQ-1          QCB ADDRESS
         TM    QCBDSFLG,QCBDRQQ         DATA READY QUEUE
         BO    INVENT                   YES, INVALID ENTRY
         LR    RQCBE,RQCB
         AH    RQCBE,QCBEXTO            CALC QCB EXTENSION ADDR
         TM    QCBEFLG,QCBESTAT         STATUS ANALYSIS SPECIFIED
         BZ    INVENT                   NO, INVALID ENTRY
         DROP  RPARM
         L     R15,QCBDCBAD-1           DCB ADDRESS
         USING IHADCB,R15
         TM    DCBOFLGS,OPEN            DCB OPEN
         BZ    NXTENTRY                 NO, BRANCH
         L     R1,DCBDEBAD              DEB ADDRESS
         TM    DEBOPATB-DEBNMSUB(R1),OUTPUT OPEN FOR OUTPUT
         BZ    NXTENTRY                 NO, BRANCH
         USING IEDQTRM,RTERM
***********************************************************************
*        LOCATE PROPER PRIORITY QCB EXTENSION IF QUEUEING BY PRIORITY *
*        LEVEL                                                        *
***********************************************************************
         TM    QCBEFLG,QCBEOPL          QUEUEING BY PRTY LEVEL
         BZ    LFND                     NO, BRANCH
         SR    R2,R2                    ZERO WORK REG
         IC    R2,QCBENPLV              NO OF PRTY LEVEL EXTENSIONS
         SR    R0,R0                    ZERO LENGTH REG
NXTPL    EQU   *
         IC    R0,QCBELGTH              QCB EXTENSION LENGTH
         AR    RQCBE,R0                 FIRST/NEXT QCB EXT
         CLC   QCBETCIN(TWO),TTCIN      PROPER QCB EXT PRTY LEVEL
         BE    LFND                     YES, BRANCH
         BCT   R2,NXTPL                 SEARCH ALL LEVELS
         B     NXTENTRY                 PROCESS NEXT ENTRY
LFND     EQU   *
***********************************************************************
*        INMSG EXECUTION                                              *
***********************************************************************
EIMSG    EQU   *
         TM    ACTBYTE,IMSG             EXECUTE INMSG
         BZ    IMSGEXIT                 NO, BRANCH
         L     RPREFIX,AVTADBUF         CURRENT BUFFER
         TM    SCBQTYPE,SCBBFMM         IS MIDDLE MSG SET       SA59012
         BZ    IMSGEXIT                 NO, DO NOT SET EOM      SA59012
         NI    PRFSTAT1,PRFNLSTF        SET LAST BUFFER
         NI    SCBQTYPE,AVTEFF-SCBBFMM  TURN OFF MIDDLE OF MSG
         NI    PRFSTAT1,PRFITCPF        RESET EOM.               Y01004
         TM    ACTBYTE,UERR             SET USER ERROR BIT
         BZ    IMSGEXIT                 NO, BRANCH
         OI    SCBERR3,SCBUSERN         SET USER ERROR BIT
IMSGEXIT EQU   *
         TM    QCBEFLG,QCBEPEND         QACTION OPERATION IN PROCESS
         BO    NXTENTRY                 YES, SKIP ENTRY
***********************************************************************
*        LOCATE PROPER LCB IF TERMINAL NAME WAS SPECIFIED             *
***********************************************************************
         TM    FLGLEN,TRMNME            TRM NAME SPECIFIED
         BZ    LCBFND                   NO, BRANCH
         SR    R1,R1                    ZERO WORK REG
         IC    R1,QCBRELLN              QCB STARTING RLN
         SR    R0,R0                    ZERO WORK REG
         IC    R0,DCBEIOBX              LCB SIZE
         MR    R0,R0                    STARTING LCB OFFSET
         AL    R1,DCBIOBAD              POINT TO IOB
         LA    R2,LCBFLAG1-IEDQLCB      IOB OFFSET
         SR    R1,R2                    BACK UP TO START OF LCB
         LR    RLCB,R1                  LCB ADDRESS
         DROP  R15
LCBFND   EQU   *
***********************************************************************
*        OUTMSG EXECUTION                                             *
***********************************************************************
EOMSG    EQU   *
         TM    ACTBYTE,OMSG             FORCE OUTMSG EXECUTION
         BZ    EOMEXIT                  NO, BRANCH
         TM    QCBEFLG,QCBEHELD         HAS A CTB BEEN SENT
         BZ    EOMEXIT                  NO, CAN'T FORCE OUTMSG
EOMSG2   EQU   *
         SR    RSCB,RSCB
         IC    RSCB,QCBSCBOF            SCB OFFSET
         SR    R0,R0
         IC    R0,AVTSCBSZ              SCB SIZE
         MR    RSCB-ONE,R0              DISP OF PROPER SCB
         AL    RSCB,LCBSCBDA-1          SCB ADDRESS
         TM    SCBQTYPE,SCBBFMM         MIDDLE OF MESSAGE        S22027
         BO    GETUNIT                  YES, OUTMSG CAN BE EXEC  S22027
         TM    QCBEFLG,QCBEOMSG         OUTMSG PENDING           S22027
         BZ    EOMEXIT                  NO, DONT EXECUTE OUTMSG  S22027
GETUNIT  EQU   *                                                 S22027
         L     RPREFIX,AVTBFREB         GET BUFFER UNIT
         LA    RPREFIX,AVTEZERO(RPREFIX) CLEAR HI-ORDER
         LTR   RPREFIX,RPREFIX          UNIT AVAILABLE
         BNZ   DLNKBUF                  YES, BRANCH
         LA    R15,AVTECD8              SET RETURN CODE
         LR    RPARM,RCURR              CURRENT ENTRY IN PARM LIST
         B     BADRTN                   RETURN, NO BUFFERS AVAIL.
DLNKBUF  EQU   *
         MVC   AVTBFREB+ONE(L3),PRFLINK DELINK BUFFER
         LH    R2,AVTAVFCT              BUFFER COUNT
         N     R2,AVTCLRHI              FORCE POSITIVE
         BCTR  R2,AVTEZERO              SUBTRACT ONE
         STH   R2,AVTAVFCT              RESTORE COUNT
         MVC   PRFTIC(L4),CHAIN         SET INVALID TIC IN LINK FLD
         MVI   PRFPRI,PRIDSPLB          SET BUFFER PRTY
         ST    RSCB,PRFSRCE             SAVE CURRENT SCB ADDR
         MVC   PRFDEST(TWO),TTCIN       SET TNT INDEX
         ST    RQCBE,PRFSTAT1           SAVE PROPER QCB EXT ADDR
         ST    RQCB,PRFSCAN             SAVE QCB ADDRESS
         MVC   PRFISEQ(ONE),ACTBYTE     SAVE ENTRY IN BUFFER PREFIX
         MVC   PRFSTXT,LCBSTAT2         SAVE LCBSTAT2
         OI    QCBEFLG,QCBEPEND         SET PENDING OPERATION
         NI    QCBEFLG,AVTEFF-QCBEOMSG-QCBEDATA RESET OUTMSG PENDING
         LA    RLINK,NXTENTRY           SET RETURN ADDRESS
         LA    R2,DLCB                  USE DUMMY LCB
         ST    R2,PRFLCB-1              SET LCB ADDRESS IN BUFFER
         LR    R1,RQCB                  COMPUTE PRIMARY         SA52971
         AH    R1,QCBEXTO               EXTENSION               SA52971
         MVC   QCBEDEOB-IEDQQCBE(3,R1),PRFLCB SAVE LCB ADDR     SA52971
         MVI   PRFNBUNT,ONE             SET ONE UNIT
         DROP  RLCB
         USING IEDQLCB,R2               DECLARE LCB REG
         LR    R1,RPREFIX               ELEMENT TO POST
         TM    LCBTSTSW,LCBCONCT        DUMMY LCB BUSY
         BZ    BDPOST                   NO, BRANCH
         DROP  R2                       RELEASE LCB REG
         USING IEDQLCB,RLCB             DECLARE LCB REG
         LA    RQCB,IEDQBQ03            QCB ADDRESS
***********************************************************************
*        PLACE ELEMENT ON QUEUE.                                      *
***********************************************************************
ENQUE    EQU   *
         DROP  RQCBE
         USING IEDQDISP,RDISP
         STM   R2,R14,SAVE+D8           SAVE REGISTERS
         L     RDISP,AVTEA              DISPATCHER ADDRESS
         LA    RSAVE,AVTSAVE2           DISPATCHER'S SAVE AREA
         BAL   RLINK,DSPPRIOR           ENQUE ELEMENT
         LM    R2,R14,SAVE+D8           RESTORE REGISTERS
         BR    RLINK                    PROCESS NEXT ENTRY
         DROP  RDISP
         USING IEDQQCBE,RQCBE           DECLARE QCBE REG
EOMEXIT  EQU   *
         LA    RLINK,NXTENTRY           SET RETURN ADDRESS
***********************************************************************
*        HOLD FUNCTION                                                *
***********************************************************************
EHLD     EQU   *
         TM    ACTBYTE,THLD             HOLD TERMINAL
         BZ    HLDEXIT                  NO, BRANCH
         OI    QCBEFLG,QCBEHELD         MARK TERMINAL HELD
         BR    RLINK                    RETURN
HLDEXIT  EQU   *
***********************************************************************
*        RELEASE FUNCTION                                             *
***********************************************************************
ERLSE    EQU   *
         TM    ACTBYTE,TRLSE            RELEASE TERMINAL
         BZ    RLSEEXIT                 NO, BRANCH
         TM    QCBEFLG,QCBEDATA         DATA CURRENTLY BEING SENT
*                                       FROM THIS QUEUE
         BO    RLSEEXIT                 YES, DON'T RELEASE
         TM    QCBEFLG,QCBEOMSG         OUTMSG PENDING
         BO    EOMSG2                   YES, BRANCH
         TM    QCBEFLG,QCBEHELD         TERMINAL HELD
         BZ    RLSEEXIT                 NO, DONT RELEASE
         NI    QCBEFLG,AVTEFF-QCBEHELD  SET TERMINAL NOT HELD
         TM    QCBEFLG,QCBEOPL          QUEUEING BY PRIORITY LEV
         BZ    NOTBPL                   NO, BRANCH
         XC    QCBETCIN,QCBETCIN        RESET QCB EXT TTCIN OFFSET
NOTBPL   EQU   *
         STM   R0,RLINK,SAVE            SAVE REGISTERS
         LR    RQCBE,RQCB
         AH    RQCBE,QCBEXTO            QCB EXTENSION ADDRESS
         L     RTERM,QCBECONC-1         CONC TRM ENTRY
         L     RQCB,TRMDESTQ-1          DRQ ADDRESS
         L     R15,AVTCSCH              CONCENTRATED SCHEDULER
         LA    R15,AVTEZERO(R15)        CLEAR HI-ORDER
         SH    R15,AVTHA2               CAL BRANCH ENTRY ADDRESS
         AH    R15,AVTEZERO(R15)
         LA    RSAVE,AVTSAVE2           DISPATCHER'S SAVE AREA
         L     RDISP,AVTEA              DISPATCHER'S ADDRESS
         BALR  RLINK,R15                EFFECT TEMPORARY RELEASE
         LM    R0,RLINK,SAVE            RESTORE REGISTERS
RLSEEXIT EQU   *
         BR    RLINK                    RETURN
***********************************************************************
*        POST BUFFERS TO BUFFER DISPOSITION FOR OUTMSG EXECUTION.     *
***********************************************************************
BDPOST1  EQU   *
         LA    RLINK,DSPEXIT            SET RETURN ADDRESS
         DROP  RPREFIX
         USING IEDQPRF,RPARM
         L     R2,PRFLCB-1              LCB ADDRESS
         L     RQCB,PRFSCAN             QCB ADDRESS
         L     RQCBE,PRFSTAT1           QCB EXT ADDRESS
BDPOST   EQU   *
         DROP  RLCB
         USING IEDQLCB,R2
         OI    LCBTSTSW,LCBCONCT        SET DUMMY LCB BUSY
         MVI   LCBSTAT1,LCBSENDN        SET SENDING
         MVC   LCBSTAT2,PRFSTXT         RESET LCBSTAT2
         MVC   LCBTTCIN(TWO),PRFDEST    SET LCBTTCIN
         MVC   LCBSCBA(L11),PRFSRCE+ONE SET SCB, QCB, QCB EXT ADDR
         MVI   LCBERBST,LCBEOMSG+LCBDLNKN SET ERB AVAILABLE
         ST    RPARM,LCBLSPCI-1         SET BUFFER ADDRESS
         MVI   PRFSTAT1,ONE             SET TEXT LAST
         L     RSCB,LCBSCBA-1           CURRENT SCB ADDRESS
         TM    QCBEFLG,QCBEOPL          QUEUEING BY PRTY LEVEL
         BZ    NOTPLQ                   NO BRANCH
         MVC   DSCB+(SCBERRST-IEDQSCB)(L4),SCBERRST SET ERROR BITS
         LA    RSCB,DSCB                DUMMY SCB ADDRESS
         ST    RSCB,LCBSCBA-1           SET PSEUDO SCB ADDRESS
         LA    RQCB,AVTEZERO(RQCB)
         ST    RQCB,SCBDESTQ-1          SET QCB ADDRESS
         MVC   SCBSCHDR,QCBEHDR         SET HDR ADDRESS
         MVC   SCBFEFO,QCBEFEFO         SET FEFO POINTER
         MVC   SCBPRI,QCBEPRI           SET PRTY
         MVC   SCBOSEQ,QCBEOSEQ         SET SEQUENCE NUMBER
         MVZ   SCBQTYPE,QCBEQTYP        SET QUEUE TYPE
         NI    QCBEQTYP,AVTEFF-QCBEMM   RESET MIDDLE OF MSG
NOTPLQ   EQU   *
         MVC   PRFCHDR,SCBSCHDR         SET PREFIX HDR ADDRESS
         LR    R15,RQCB                 CALC ADDR OF FIRST EXT
         AH    R15,QCBEXTO              FROM QCB INFO
         MVC   SCBMACR,QCBEMACR-IEDQQCBE(R15) SET SCBMACR
         MVC   ACTBSAVE+ONE(ONE),PRFISEQ RESTORE ACTION BYTE
         TM    ACTBYTE,OMSG             FORCING OUTMSG
         BZ    NOFORCE                  NO, BRANCH
         OI    SCBERR4,SCBTRMLN         INDICATE TERMINAL ERROR
NOFORCE  EQU   *
         TM    ACTBYTE,UERR             SET USER ERROR BIT
         BZ    NOTUSER                  NO, BRANCH
         OI    SCBERR3,SCBUSERN         SET USER ERROR BIT
NOTUSER  EQU   *
         DROP  R2
         USING IEDQLCB,RLCB
         MVC   PRFRCB(L4),BDBASE        SET QCB ADDRESS FOR POST
         DROP  RPARM
         USING IEDQPRF,RPREFIX
***********************************************************************
*        PUT BUFFER ON READY QUEUE                                    *
***********************************************************************
         STM   R0,R15,SAVE              SAVE REG.
         LA    RSAVE,AVTSAVE2           DISPATCHERS SAVE AREA
         DROP  RQCBE
         USING IEDQDISP,RDISP
         L     RDISP,AVTEA              DISPATCHER
         BAL   RLINK,DSPPOSTR           ENQUE ELEMENT
         DROP  RDISP
         USING IEDQQCBE,RQCBE           DECLARE QCB REG
         LM    R0,R15,SAVE              RESTORE REGS
         BR    RLINK                    RETURN
***********************************************************************
*        LCB RETURNED AFTER OUTMSG EXECUTION                          *
***********************************************************************
         DS    0F                       ALIGNMENT
         ORG   *-8                      ORG BACK
IEDQBQ02 EQU   *                        ENTRY
         ORG
         DC    AL1(DSPMCPL4)            SUBTASK ENTRY CODE
         DC    AL3(*-1)                 STCB ADDRESS
         USING *,R15
         L     RBASE,BQBASE             SET ADDRESSABILITY
         DROP  R15
         LR    RAVT,RSAVE               RESET AVT ADDRESSABILITY
         SH    RAVT,SAVESZ              SUBTRACT
         DROP  RLCB
         USING IEDQLCB,RPARM            DECLARE LCB REG
         MVI   LCBTSTSW,AVTEZERO        SET DUMMY LCB NOT BUSY
         MVI   LCBSENS0,AVTEZERO        CLEAN UP LCB
         MVI   LCBCHAIN,AVTEZERO        ZERO CHAIN FIELD
         L     RSCB,LCBSCBA-1           CURRENT SCB ADDR
         SR    RZERO,RZERO              ZERO REG
         ST    RZERO,SCBDEOB            CLEAR DEOB
         STH   RZERO,SCBEOB             CLEAR EOB
         STC   RZERO,SCBHBFNO           CLEAR HBFNO
         NI    SCBQTYPE,255-SCBNREUS-SCBREUS-SCBCOREQ-SCBNORCL-SCBBFMM
*                                       RESET QTYPE
         L     RQCBE,LCBINVPT-1         RESTORE QCB EXT ADDR
         L     RQCB,LCBTPCD             QCB ADDRESS
         TM    QCBEFLG,QCBEOPL          PRIORITY LVL QUEUEING
         BO    NOCLEAR                  YES BRANCH
         XC    QCBEDEOB(4),QCBEDEOB     CLEAR LCB ADDR          SA52971
         ST    RZERO,SCBERRST           CLEAR ERROR BYTES
NOCLEAR  EQU   *
         DROP  RPARM
         USING IEDQLCB,RLCB             DECLARE LCB REG
         LA    RCURR,ACTBSAVE           ADDRESSABILITY
         BAL   RLINK,EHLD               EXECUTE REMAINING FUNCTIONS
         NI    QCBEFLG,AVTEFF-QCBEPEND  RESET PENDING OPERATION
         L     RPARM,IEDQBQ03           NEXT ELEMENT
         DROP  RPREFIX
         USING IEDQPRF,RPARM
         MVC   IEDQBQ03+ONE(L3),PRFLINK DELINK ELEMENT
         CLI   PRFPRI,AVTEZERO          ANY ELEMENTS ON QUEUE
         BNE   BDPOST1                  YES, BRANCH
         DROP  RPARM
         USING IEDQPRF,RPREFIX
DSPEXIT  EQU   *
         LA    RSAVE,AVTSAVE2           DISPATCHERS SAVE AREA
         L     RDISP,AVTEA              DISP ADDRESS
         DROP  RQCBE                    RELEASE QCB REG
         USING IEDQDISP,RDISP
         B     DSPDISP                  DISPATCH NEXT TASK
***********************************************************************
*        RETURN TO MH WITH RETURN CODE                                *
***********************************************************************
RETURN   EQU   *
         SR    R15,R15                  SET GOOD RETURN CODE
BADRTN   EQU   *
         L     RLINK,AVTUI              USER INTERFACE MODULE
         B     D4(RLINK)                RETURN TO MSG HANDLER
***********************************************************************
*        EXECUTED INSTRUCTIONS                                        *
***********************************************************************
         USING IEDQDVCT,R2              DECLARE DVC TABLE REG
IDCLC    CLC   DVCCHAR(AVTEZERO),DVCID  COMPARE DVC ID'S
         DROP  R2                       RELEASE DVC TABLE REG
***********************************************************************
*        BUFFERS GOTTEN TO EXECUTE OUTMSG ARE POSTED TO THIS QCB      *
***********************************************************************
         DS    0F                       ALLIGNMENT
IEDQBQ03 EQU   *
         DC    AL1(2)                   QCB IDENTIFIER
         DC    AL3(IEDDELEM)            ELEMENT CHAIN
***********************************************************************
*        PSEUDO LCB USED FOR OUTMSG EXECUTION                         *
***********************************************************************
         DS    0F
DLCB     EQU   *
         DC    AL4(IEDQBQ02)            ADDRESS OF QCB
         DC    XL48'00'                 FILLER                   S99228
         DC    AL4(DLCBX-DCBEIOBX+IHADCB) DUMMY DCB PTR          S99228
         DC    XL96'00'                 FILLER                   S99228
         DC    XL8'00'                  DUMMY LCB EXTENSION      S99228
DLCBX    EQU   *                                                 S99228
         DC    AL1(DLCBX-DLCB)          DUMMY LCB LENGTH         S99228
***********************************************************************
*        PSEUDO SCB USED FOR OUTMSG EXECUTION WHEN QUEUEING BY        *
*        PRIORITY LEVEL IS BEING USED                                 *
***********************************************************************
         DS    0F
DSCB     EQU   *                        PSEUDO SCB
         DC    3F'0'                    FILLER
         DC    BL1'00001000'            CONC. SCB
         DC    AL3(0)                   FILLER
         DC    17F'0'                   FILLER
***********************************************************************
*        CONSTANTS AND EQUATES                                        *
***********************************************************************
         DS    0F
         ORG   *-4                      ELIMINATE UN-NEEDED SPACE
IEDDELEM EQU   *
         ORG
         DC    AL1(0)                   QCB IDENTIFIER
         DC    AL3(IEDDELEM)            ELEMENT CHAIN
BDBASE   DC    V(IEDQBD)                BUFFER DISPOSITION
ELENMSK  DC    F'15'                    TO ISOLATE LENGTH
SAVE     DC    16F'0'                   INTERNAL SAVE AREA
BSLST    DS    0F                       PARM LIST FOR BINARY SEARCH
         DC    AL1(9)                   INDEX TO IEDQA1
         DC    AL1(8)                   LENGTH OF PARAMETER LIST
         DC    AL1(0)                   RESERVED
CHARLEN  DC    AL1(0)                   LENGTH OF TERMINAL NAME
CHARADDR DC    AL4(0)                   ADDR OF TERMINAL NAME
BQBASE   DC    AL4(IEDQBQ)              MODULE BASE
TTCIN    DC    H'0'                     TNT INDEX
SAVESZ   DC    AL2(AVTSVSIZ)            REQUIRES HWRD ALIGNMENT
CHAIN    DC    X'08000002'              INVALID TIC
NOENT    DC    AL1(0)                   NUMBER OF ENTRIES
         ORG   *-1                      BACK ONE BYTE
ACTBSAVE EQU   *
         ORG
         DC    X'00'                    ACTION BYTE SAVE AREA
L11      EQU   11                       ELEVEN
D4       EQU   4                        FOUR
L3       EQU   3                        THREE
L4       EQU   4                        FOUR
D12      EQU   12                       TWELVE
OPEN     EQU   X'10'                    TEST FOR OPEN DCB
OUTPUT   EQU   X'01'                    TO TEST DEB FOR OPEN FOR OUTPUT
D28      EQU   28                       TWENTY EIGHT
ONE      EQU   1                        ONE
RTNCDE4  EQU   4                        RETURN OF FOUR
TWO      EQU   2                        TWO
D8       EQU   8                        EIGHT
THREE    EQU   3                        THREE
DIDTBLB  EQU   8                        EIGHT
HIORDER  EQU   15                       SHIFT FACTOR
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
         TAVTD
         DCBD  DSORG=TX
         TDEBD
         TDISPD
         TDRQD
         TDVCIDTD
         TLCBD
         TPRFD
         TPRIOR
         TQCBD
         TQCBED
         TSCBD
         TTRMD
PARMLST  DSECT                          MACRO GENERATED PARM LIST
         DS    AL1                      VCON TABLE INDEX
PARMLEN  DS    AL1                      LENGTH OF LIST
         DS    AL2                      RESERVED
         DS    AL1                      RESERVED
PARMEXIT DS    AL3                      USER EXIT ADDRESS
ACTLST   DSECT                          USER RETURNED PARM LIST
TRMNO    DS    0AL1                     LENGTH OF PARAMETER LIST
ENTRY    EQU   *                        START OF AN ENTRY
FLGLEN   DS    AL1                      FLAGS AND LENGTH OF ENTRY
TRMNME   EQU   X'80'                    TERMINAL NAME SPECIFIED
ACTBYTE  DS    BL1                      ACTION BYTE
UERR     EQU   X'80'                    SET USFR ERROR BIT
THLD     EQU   X'08'                    STOP SENDING TO THIS TRM
OMSG     EQU   X'04'                    FORCE OUTMSG EXECUTION
IMSG     EQU   X'02'                    EXECUTE INMSG
TRLSE    EQU   X'01'                    CONTINUE SENDING THIS TRM
TRMNAME  EQU   *
DVCID    EQU   *                        DEVICE ID
         END
