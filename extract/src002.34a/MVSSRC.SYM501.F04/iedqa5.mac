A501     TITLE '''IEDQA5'' -- FORWARD ROUTINE'
IEDQA5   CSECT
*A000000-999999                                                @Z37X9A0
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*C721200                                                        SA59039
*C856000-861000                                                 SA59523
*C293000                                                         S22029
*A066000,192500,214000,215000,222000,270000,489000,491000        S22025
*A497000,498000,519000,708600-721200,731700,731800,884010-884220 S22025
*A891000-898600,290200-291800,690000,701000-703000               S22025
*C492000-496000,512000,712000,720000                             S22025
*D264000-280000,500000,888000-896000,298000                      S22025
*A214200-214600,234000,340500-341500,356200-357600,404500-406500 S22027
*A676800-679200                                                  S22027
*C013470-013480,013500-013510,013530-013550,304000,372000,380000 S22027
*C404000                                                         S22027
*A884045-884046,885000                                          SA56226
*C833800                                                        OX01422
*A839000                                                        OX01422
*C833800                                                        SA67104
*D839200-839600                                                 SA67104
*C718200                                                       @SA71961
*A234000,316000,688000                                         @SA72461
*A688300,689100                                                @SA72461
*C723200                                                       @SA74980
*C290400,A703000,A710400,A718200,A720000,A895800               @YA11171
*A215000,A730000                                               @YA11171
*C689200                                                       @OY12964
*D703300-703600                                                @OX13495
*A709020                                                       @OX13495
*A270000,013690,152000,160000                                  @Y17XAMF
*A700000,012895,013966                                         @Y17XAMG
*C688900                                                       @Y17XAMG
*D712800,713400                                                @Y17XAMG
*C884060,884210                                                @Y17XAMF
*A322850                                                       @OY18927
*A270400                                                       @OX20377
         SPACE
***********************************************************************
*                                                                     *
*  TITLE:  'IEDQA5' -- FORWARD ROUTINE                                *
*                                                                     *
*  MODULE NAME = IEDQA5                                               *
*   DEPENDENCIES: THIS MODULE MUST ONLY BE RUN WITH A MCP WHICH HAS   *
*   BEEN ASSEMBLED WITH AN EBCIDIC ASSEMBLER.  THIS IS TO INSURE THAT *
*   A CHARACTER STRING FOUND WITHIN THE MCP CAN BE COMPARED WITH      *
*   CORRECTLY.                                                 @Y17XAMF
*                                                                     *
*  DESCRIPTIVE NAME = FORWARD ROUTINE                                 *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*STATUS: CHANGE LEVEL 10                                       @Y17XAMF
*                                                                     *
*FUNCTION --                                                          *
*   DETERMINES THE DESTINATION TO WHICH A MESSAGE IS TO BE SENT ON    *
*   ENTRY FROM THE MCP OR FROM THE MULTIPLE ROUTING SUBTASK.          *
*                                                                     *
*   IF THE BUFFER IS A ZERO-LENGTH BUFFER,  RETURN IS MADE TO THE     *
*   CALLER IMMEDIATELY.                                               *
*                                                              @Y17XAMF
*   IF THE FORWARD MACRO IS CODED WITH TASK= OPERAND THE       @Y17XAMF
*   TASK INDICATOR(SSCP OR TOTE) IS FOUND WITHIN THE PARM LIST @Y17XAMF
*   PASSED IN REG 1.  UPON FINDING THE APPROPRITATE INDICATOR  @Y17XAMF
*   THE SCBDESTQ IS UPDATED WITH THE VALID QCB ADDR(AVTOPCOB OR@Y17XAMF
*   AVTOLTQB) AND BUFFER PREF IS CHANGED TO REFLECT A          @Y17XAMF
*   DESTINATION TTCIN.                                         @Y17XAMF
*                                                                     *
*   WHEN THE FORWARD ROUTINE IS ENTERED (WITHOUT TASK=  IND)   @Y17XAMF
*   REG 1 POINTS TO A STRING OF UP TO THREE PARAMETER LISTS,  THE 1ST *
*   LIST OF WHICH IS THE PARAMETER LIST FOR THE FORWARD ROUTINE       *
*   ITSELF. THE FORWARD ROUTINE SAVES THE ADDRESS OF THE FIRST PARM   *
*   LIST IN THE SCB MULTIPLE-ROUTE FORWARD LIST FIELD (SCBMRFPL).  THE*
*   FORWARD ROUTINE PASSES THE ADDRESS OF THE SECOND PARAMETER LIST   *
*   TO THE USER INTERFACE ROUTINE,  THUS LINKING TO ONE OF THREE      *
*   POSSIBLE SUBSIDIARY ROUTINES.                                     *
*                                                                     *
*   UPON RETURN,  THE FORWARD ROUTINE DETERMINES WHAT SUBSIDIARY      *
*   ROUTINE WAS EXECUTED BY TESTING A STATUS BYTE IN THE FORWARD      *
*   PARAMETER LIST.                                                   *
*                                                                     *
*                                                                     *
*   RETURN FROM IEDQAI:                                               *
*                                                                     *
*   IF THE SUBSIDIARY ROUTINE WAS THE SKIP FORWARD AND SCAN           *
*   ROUTINE (IEDQAI), THE NAME OF THE DESTINATION HAS BEEN PICKED     *
*   UP FROM THE BUFFER.  IF REGISTER 15 CONTAINS A NEGATIVE RETURN    *
*   CODE,  THE DESTINATION NAME IS NOT COMPLETE IN THE CURRENT        *
*   BUFFER.  IF THE CALLER IS THE MULTIPLE ROUTING SUBTASK,  THE      *
*   FORWARD ROUTINE RETURNS TO IT WITH THE NEGATIVE RETURN CODE.      *
*   OTHERWISE CONTROL PASSES TO THE ERROR RECOVERY PROCEDURE.         *
*                                                                     *
*   THE FORWARD ROUTINE TESTS IF AN END-OF-ADDRESS STRING WAS         *
*   DEFINED IN THE MACRO (INDICATED BY THE STATUS BYTE).  IF SO,      *
*   THE FIELD RETURNED BY IEDQAI MAY BE THAT STRING,  AND THE         *
*   FORWARD ROUTINE COMPARES THE STRING RETURNED WITH THE END-OF-     *
*   ADDRESS STRING.  IF THEY MATCH,  THE FORWARD ROUTINE TESTS TO     *
*   SEE IF IT HAS BEEN ENTERED FROM THE MULTIPLE ROUTING SUBTASK.     *
*   IF IT HAS NOT,  NO VALID DESTINATION HAS BEEN FOUND,  AND THE     *
*   FORWARD ROUTINE PROCEEDS TO THE ERROR RECOVERY PROCEDURE.  IF     *
*   ENTRY IS FROM THE MULTIPLE ROUTING SUBTASK,  THE FORWARD          *
*   ROUTINE CLEARS THE SECONDARY DESTINATION FIELD IN THE SCB         *
*   (SCBMRFSD) TO ZERO AND RETURNS TO THE CALLER WITH A RETURN CODE   *
*   OF X'08' IN REGISTER 15.                                          *
*                                                                     *
*   IF THE STRINGS DO NOT MATCH,  OR IF NO END-OF-ADDRESS STRING      *
*   WAS DEFINED,  THE FORWARD ROUTINE BUMPS THE PREFIX SCAN POINTER   *
*   (PRFSCAN) PAST THE STRING RETURNED AND PREPARES TO LINK TO THE    *
*   ROUTINE REPRESENTED BY THE THIRD PARAMETER LIST,  WHICH IS THE    *
*   BINARY SEARCH ROUTINE (IEDQA1).  THE ADDRESS AND LENGTH OF THE    *
*   STRING RETURNED ARE SET IN THE IEDQA1 PARAMETER LIST AND LINK-    *
*   AGE IS MADE TO IEDQA1 VIA THE USER INTERFACE ROUTINE.             *
*                                                                     *
*                                                                     *
*   RETURN FROM IEDQAE:                                               *
*                                                                     *
*   IF THE SUBSIDIARY ROUTINE WAS THE LOCATE OPTION FIELD ROUTINE     *
*   (IEDQAE),  THE NAME OF THE DESTINATION IS LOCATED IN AN OPTION    *
*   FIELD WHOSE ADDRESS SHOULD BE RETURNED BY IEDQAE IN REGISTER      *
*   15.  IF REGISTER 15 CONTAINS ZERO,  THE FORWARD ROUTINE           *
*   PROCEEDS TO THE ERROR RECOVERY PROCEDURE.  IF REGISTER 15 DOES    *
*   CONTAIN THE ADDRESS OF THE OPTION FIELD,  THE FORWARD ROUTINE     *
*   SETS THE ADDRESS AND LENGTH OF THE STRING IN THE OPTION FIELD     *
*   INTO THE THIRD PARAMETER LIST,  WHICH IS THE PARAMETER LIST FOR   *
*   IEDQA1.  THE FORWARD ROUTINE THEN LINKS TO IEDQA1 VIA THE USER    *
*   INTERFACE ROUTINE.                                                *
*                                                                     *
*                                                                     *
*   RETURN FROM IEDQA1:                                               *
*                                                                     *
*   THE BINARY SEARCH ROUTINE (IEDQA1) MAY BE THE SUBSIDIARY          *
*   ROUTINE FIRST LINKED TO BY THE FORWARD ROUTINE.  IF SO,  THE      *
*   DESTINATION NAME IS DIRECTLY DEFINED BY THE FORWARD MACRO.        *
*   SUBSEQUENT PROCESSING IS THE SAME FOR THIS CASE AS FOR RETURN     *
*   FROM SEARCHING FOR A STRING DEFINED IN THE BUFFER OR IN AN        *
*   OPTION FIELD.                                                     *
*                                                                     *
*   UPON RETURN FROM IEDQA1,  IF REGISTER 15 CONTAINS A ZERO,  NO     *
*   DESTINATION NAME MATCHING THE STRING PASSED TO IEDQA1 WAS         *
*   FOUND.  THE FORWARD ROUTINE PROCEEDS TO THE ERROR RECOVERY        *
*   PROCEDURE.                                                        *
*                                                                     *
*   IF IEDQA1 DOES NOT RETURN A ZERO IN REGISTER 15,  A MATCH HAS     *
*   BEEN FOUND AND THE REGISTER CONTAINS THE OFFSET TO THE TERMINAL   *
*   TABLE ENTRY FOR THE DESTINATION.  THIS OFFSET IS PASSED TO THE    *
*   LOOKUP ROUTINE (IEDQAV) TO GET THE DESTINATION QCB ADDRESS.  ON   *
*   RETURN FROM IEDQAV, THE FORWARD ROUTINE CHECKS TO SEE IF THE      *
*   THE CORE QUEUE SPACE HAS BEEN EXCEEDED OR REUSABLE QUEUE   @Y17XAMG
*   SPACE IS UNAVAILABLE AND, IF IT HAS AND THE RECIEVING QUEUE@Y17XAMG
*   EMPLOYS EITHER TYPE, THE DESTINATION IS INDICATED AS BUFFER@Y17XAMG
*   RETURN IF THE DLQ IS OF THE TYPE WHICH IS FULL.  IF THE    @Y17XAMG
*   QUEUES FULL CONDITION DOES NOT EXIST THE FORWARD ROUTINE   @Y17XAMG
*   NEXT CHECKS TO SEE IF THE                                  @Y17XAMG
*   THRESH OPERAND WAS SPECIFIED. IF IT WAS, AND THE DESTINATION HAS  *
*   MAIN-STORAGE ONLY QUEUEING, THIS ROUTINE CHECKS TO SEE IF THE     *
*   NUMBER OF MESSAGES ON THE QUEUE IS GREATER THAN OR EQUAL TO THE   *
*   THRESHOLD.  IF THE THRESHOLD HAS BEEN REACHED, BIT 6 IS TURNED ON *
*   IN BYTE THREE OF SCBERRST.NEXT THIS ROUTINE CHECKS TO SEE IF THE  *
*   DESTINATION REQUESTED AUTOMATIC DATE/TIME INSERTION.   IF SO,     *
*   THE FORWARD ROUTINE LINKS TO IEDQB3 FOR INSERTION.  UPON          *
*   RETURN FROM IEDQB3, THE FORWARD ROUTINE RETURNS TO THE            *
*   KCALLER WITH  A RETURN CODE OF X'00' IN REGISTER 15.              *
*                                                                     *
*                                                                     *
*   ERROR RECOVERY PROCEDURE:                                         *
*                                                                     *
*   THE FORWARD ROUTINE TESTS THE STATUS BYTE TO DETERMINE IF A       *
*   USER-WRITTEN ROUTINE TO ATTEMPT RECOVERY HAS BEEN DEFINED.  IF    *
*   SO,  THE FORWARD ROUTINE LINKS TO THE USER'S ROUTINE,  SAVING     *
*   AND RESTORING ITS OWN REGISTERS.  IF THE USER'S ROUTINE RETURNS   *
*   THE ADDRESS OF ANOTHER CHARACTER STRING IN REGISTER 15,  THE      *
*   FORWARD ROUTINE LINKS TO IEDQA1 TO TRY TO MATCH THIS STRING       *
*   WITH AN ENTRY IN THE TERMINAL NAME TABLE.  A RETURN REGISTER IS   *
*   SET,  HOWEVER,  TO PREVENT A RELINKAGE TO THE USER ROUTINE IF     *
*   THIS STRING FAILS TO FIND A MATCH.                                *
*                                                                     *
*   IF THIS STRING FINDS NO MATCH,  IF THE USER ROUTINE RETURNS A     *
*   ZERO IN REGISTER 15,  OR IF NO USER ROUTINE WAS DEFINED,  THE     *
*   FORWARD ROUTINE DETERMINES IF A DEAD-LETTER QUEUE HAS BEEN        *
*   DEFINED.  IF SO,  THE FORWARD ROUTINE PASSES ITS OFFSET TO        *
*   IEDQAV AND THEN RETURNS TO THE CALLER.  IF NO DEAD-LETTER QUEUE   *
*   IS DEFINED,  A RETURN CODE OF X'04' IS SET IN REGISTER 15.  IF    *
*   RETURN IS TO THE MESSAGE HANDLER,  THE SCB SECONDARY DESTINA-     *
*   TION FIELD (SCBMRFSD) IS CLEARED IN CASE MULTIPLE ROUTING IS      *
*   BEING ATTEMPTED.  RETURN IS THEN MADE TO THE CALLER.              *
*                                                                     *
*ENTRY POINTS --                                                      *
*        'IEDQA501' TO DETERMINE THE DESTINATION OF A MESSAGE.        *
*   CALLING SEQUENCE FROM USER INTERFACE IS:                          *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 - THE ADDRESS OF A PARAMETER LIST GENERATED BY A       *
*   FORWARD MACRO.  PARAMETER LIST FORMAT IS:                         *
*                                                                     *
*        *********************************         STATUS BYTE        *
*        * INDEX * PARAM *       * INDEX *                            *
*        *  TO   * LIST  *STATUS * TO BA *         X'80': DEST NAME   *
*        *   A5  *  LNG  *       * (OPT) *         DEFINED IN MACRO   *
*        *********************************                            *
*        *LNG OF *      ADDRESS  OF      *         X'40': DEST NAME   *
*        *  EOA  *    END-OF-ADDRESS     *OPTIONAL IN OPTION FIELD    *
*        * STRING*   CHARACTER STRING    *                            *
*        *********************************         X'20': DEST NAME   *
*        *       ADDRESS OF USER'S       *         IN BUFFER          *
*        *        ERROR RECOVERY         *OPTIONAL                    *
*        *            ROUTINE            *         X'10': ERROR RE-   *
*        *********************************         COVERY ROUTINE     *
*        *                               *         SPECIFIED          *
*        *         VARIABLE DATA         *OPTIONAL                    *
*        *                               *         X'08': EOA CHAR    *
*        *********************************         STRING SPECIFIED   *
*        * INDEX * PARAM * (UN-  * LNG   *                            *
*        *  TO   * LIST  * USED) *(MAY BE*         X'04': THRESH      *
*        *   A1  *  LNG  *       * INIT) *         CODED              *
*        *********************************                            *
*        *          ADDRESS OF           *         X'02': DEST=ORIGIN *
*        *       CHARACTER STRING        *         SPECIFIED          *
*        *     (MAY BE INITIALIZED)      *                            *
*        *********************************         X'01': DESTINATION *
*        *               *               *         SPECIFIED IN REG   *
*        *   THRESHOLD   *    (UNUSED)   *                            *
*        *               *               *                            *
*        *********************************                            *
*                                                                     *
*        VARIABLE DATA:                                               *
*                                                                     *
*        *********************************                            *
*        * INDEX * PARAM *  OPT  *       *                            *
*        *  TO   * LIST  *  FLD  * X'10' *                            *
*        *   AE  *   LNG *OFFSET *       *                            *
*        *********************************                            *
*                                                                     *
*        *********************************                            *
*        * INDEX * PARAM *       * SCAN  *                            *
*        *  TO   * LIST  * X'10' *  LNG  *                            *
*        *   AI  *   LNG *       *       *                            *
*        *********************************                            *
*                                                              @Y17XAMF
*    TASK= PARAMETER LIST                                      @Y17XAMF
*        *********************************                     @Y17XAMF
*        * INDEX * PARAM *       * FLAG  *                     @Y17XAMF
*        *  TO   * LIST  * X'00' * BYTE  *                     @Y17XAMF
*        *  A5   *  LEN  *       *       *                     @Y17XAMF
*        *********************************                     @Y17XAMF
*       GENERATED IF REG OPTION IS USED                        @YM06054
*        *********************************                     @YM06054
*        *  ADDRESS TO USER'S CHARACTER  *                     @YM06054
*        *  STRING IDENTIFYING THE TASK  *                     @YM06054
*        *********************************                     @YM06054
*       GENERATED IF REG OPTION NOT USED                       @Y17XAMF
*        *********************************                     @Y17XAMF
*        * CHAR  *  CHARACTER            *                     @Y17XAMF
*        * STRING*    STRING             *                     @Y17XAMF
*        * LEN   *    ADDR               *                     @Y17XAMF
*        *********************************                     @Y17XAMF
*                                                                     *
*   REGISTER 3 - THE ADDRESS OF THE SCB.                              *
*                                                                     *
*   REGISTER 6 - THE ADDRESS OF THE CURRENT BUFFER.                   *
*                                                                     *
*   REGISTER 9 - THE ADDRESS OF THE AVT.                              *
*                                                                     *
*   REGISTER 12 - THE ENTRY POINT ADDRESS AND BASE REGISTER FOR THE   *
*   ROUTINE.                                                          *
*                                                                     *
*   REGISTER 13 - THE ADDRESS OF THE CALLER'S SAVE AREA.              *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - RETURN CODE.  ITS VALUE IS (1) -X'04' IF A          *
*   DESTINATION NAME SPECIFIED IN THE BUFFER IS INCOMPLETE IN THE     *
*   CURRENT BUFFER (MULTIPLE BUFFER HEADER SITUATION);  (2) X'00'     *
*   ON SUCCESSFUL COMPLETION;  (3) X'04' IF A VALID DESTINATION       *
*   CANNOT BE DETERMINED (NOTE:  THE DEAD-LETTER QUEUE IS A VALID     *
*   DESTINATION);  OR (4) X'08' IF AN END-OF-ADDRESS STRING IS        *
*   DETECTED ON ENTRY FROM THE MULTIPLE ROUTING SUBTASK.              *
*                                                                     *
*   SCB SECONDARY DESTINATION FIELD (SCBMRFSD) - IF MULTIPLE          *
*   ROUTING IS SPECIFIED (END-OF-ADDRESS STRING DEFINED BY THE        *
*   FORWARD MACRO),  THE OFFSET IN THE BUFFER TO THE LAST BYTE OF     *
*   THE CHARACTER STRING FOUND BY THIS EXECUTION OF THE ROUTINE.      *
*   EXCEPTIONS ((FIELD RESET TO ZERO): (1) DETECTION OF AN END-OF-    *
*   ADDRESS STRING,  OR (2) FAILURE TO FIND AN INITIAL (BUT NOT       *
*   SECONDARY) VALID DESTINATION.                                     *
*                                                                     *
*   BIT 6 OF SCBERR3 (BYTE 3 OF SCBERRST) SET IF THRESHOLD REACHED    *
*   OR THE QUEUES FULL CONDITION EXISTS>                       @Y17XAMG
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQAE' - LOCATE OPTION FIELD ROUTINE TO RETURN THE ADDRESS      *
*   OF THE OPTION FIELD CONTAINING THE NAME OF THE DESTINATION.       *
*                                                                     *
*   'IEDQAI' - SKIP FORWARD AND SCAN ROUTINE TO RETURN THE NAME OF    *
*   A DESTINATION (OR AN END-OF-ADDRESS STRING) FROM THE BUFFER.      *
*                                                                     *
*   'IEDQA1' - BINARY SEARCH ROUTINE TO SEARCH THE TERMINAL NAME      *
*   TABLE FOR A DESTINATION NAME PASSED.                              *
*                                                                     *
*   'IEDQAV' - LOOKUP ROUTINE TO SET THE ADDRESS OF A DESTINATION     *
*   QCB IN THE SCB.                                                   *
*                                                                     *
*   'IEDQB3' - ROUTINE TO INSERT DATE/TIME FOR APPLICATION PGMS.      *
*                                                                     *
*   AVT - ADDRESS VECTOR ATBLE.                                       *
*                                                                     *
*   SCB - STATION CONTROL BLOCK.                                      *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED.                                 *
*                                                                     *
*EXITS,  NORMAL -- SUCCESSFUL COMPLETION.  REGISTER 15 CONTAINS A     *
*   RETURN CODE OF X'00'.  IF MULTIPLE ROUTING IS SPECIFIED,  THE     *
*   SCB SECONDARY DESTINATION FIELD (SCBMRFSD) CONTAINS THE OFFSET    *
*   IN THE BUFFER OF THE LAST BYTE OF THE CHARACTER STRING FOUND BY   *
*   THIS EXECUTION OF THE ROUTINE.                                    *
*                                                                     *
*   A DESTINATION NAME SPECIFIED IN THE BUFFER IS INCOMPLETE IN THE   *
*   CURRENT BUFFER (MULTIPLE BUFFER HEADER SITUATION).  REGISTER 15   *
*   CONTAINS A RETURN CODE OF -X'04'.                                 *
*                                                                     *
*   AN END-OF-ADDRESS STRING IS DETECTED ON ENTRY FROM THE MULTIPLE   *
*   ROUTING SUBTASK.  REGISTER 15 CONTAINS A RETURN CODE OF X'08'.    *
*   SCBMRFSD IS CLEARED TO ZERO.                                      *
*                                                                     *
*EXITS,  ERROR -- A VALID DESTINATION CANNOT BE DETERMINED.           *
*   REGISTER 15 CONTAINS A RETURN CODE OF X'04'.  IF MULTIPLE         *
*   ROUTING HAS BEEN SPECIFIED,  SCBMRFSD IS EITHER CLEARED TO ZERO   *
*   ON RETURN TO THE MESSAGE HANDLER OR CONTAINS THE OFFSET IN THE    *
*   BUFFER TO THE LAST BYTE OF THE CHARACTER STRING FOUND BY THIS     *
*   EXECUTION OF THE ROUTINE ON RETURN TO THE MULTIPLE ROUTING        *
*   SUBTASK.                                                          *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST ADDRESS
         SPACE
RPARM2   EQU   2                        IEDQA5 PARAMETER LIST
         SPACE
RSCB3    EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
         SPACE
RWORK5   EQU   5                        WORK REGISTER
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE 1                                                 S22025
RWORK    EQU   7                        WORK REGISTER            S22025
         SPACE
RA18     EQU   8                        ADDR OF IEDQA1 PARM LIST
RTRM     EQU   8                        TRM BASE               @Y17XAMF
         SPACE
RAVT9    EQU   9                        ADDRESS OF AVT
         SPACE
RRET10   EQU   10                       LOCAL RETURN REGISTER
         SPACE
REX11    EQU   11                       EXECUTE REGISTER
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         EJECT
********* OTHER EQUATES *********
         SPACE
PARMLEN  EQU   1                        PARAMETER LIST LENGTH
PARMSTAT EQU   2                        STATUS BYTE
TWO      EQU   2                        SHIFT LENGHT FOR CLEARINGS22025
PARMFLG  EQU   3                        FLAGS                  @YM06054
PARMEOA  EQU   4                        EOA CHARACTERS
PARMCLEN EQU   4                        CHAR STRING LEN DISPL  @Y17XAMF
PARMCADD EQU   4                        CHAR STRING LEN ADDR   @YM06054
PARMNADD EQU   5                        CHAR STRING ADDR DISPL @Y17XAMF
PARMUSER EQU   8                         USER ERROR RECOVERY ROUTINE
         SPACE 1
ADDR     EQU   7                        MASK FOR ICM & STCM    @Y17XAMF
TASKIND  EQU   0                        PARMSTAT VALUE FOR     @Y17XAMF
*                                        TASK= OPERAND         @Y17XAMF
REGSPEC  EQU   1                        PARMFLG VALUE FOR      @YM06054
*                                        TASK=(X)              @YM06054
BADRET   EQU   4                        BAD RETURN CODE        @Y17XAMF
         SPACE
A1LEN    EQU   3                        IEDQA1 LENGTH BYTE
A1CHARS  EQU   4                        IEDQA1 CHARACTERS ADDR
         SPACE
ONE      EQU   1                        INCREMENT VALUE OF ONE
FOUR     EQU   4                        FULLWORD OFFSET
EIGHT    EQU   8                        DOUBLE-WORD OFFSET
         SPACE
REG2OFF  EQU   28                       OFFSET TO R2 IN SAVE AREA
OPTOUT   EQU   4                        SHIFT LENGTH             S22025
         SPACE
MREOA1   EQU   X'01'                    MULTIPLE-ROUTE
MREOA2   EQU   X'02'                      EOA FLAGS
         SPACE
DESTNAME EQU   X'80'                    DESTINATION = NAME
DESTOPT  EQU   X'40'                    DESTINATION IN OPTION FIELD
USERFLAG EQU   X'10'                    USER ERR REC RTN PRESENT
EOAFLAG  EQU   X'08'                    EOA CHARACTERS PRESENT
THRSHFLG EQU   X'04'                    THRESH CODED             S22025
DESTORGN EQU   X'02'                    DEST=ORIGIN SPECIFIED    S22027
DESTREG  EQU   X'01'                    DEST ADDR SPECD IN REG   S22027
DESTBOTH EQU   X'81'                    DEST NAME IN MACRO FIELD S22027
CASDIST  EQU   X'40'                    CASCADE/DISTRIBUTION QCB S22025
HEX1     EQU   X'01'                    FLAG FOR DEST=PUT &THR @YA11171
         SPACE
ZERO     EQU   8                        ZERO CONDITION CODE
ZEROOFF  EQU   0                        ZERO OFFSET              S22025
ALOW     EQU   4                        A FIELD LOW COND CODE    S22027
         SPACE
INDEXAV  EQU   X'10'                    INDEX OF IEDQAV
PUTSCHED EQU   X'12'                    RS KEY FOR PUT SCHEDULER
UNIQUE   EQU   X'DF'                    MULTIPLE ROUTE BYTE
TNTSTOR  EQU   X'80'                    TNT OFFSET STORED        S22027
CUMASK   EQU   X'01'                    MASK FOR GENERAL POLL  @SA72461
         EJECT
         USING IEDQAVTD,RAVT9
         USING IEDQLCB,RLCB4
         USING IEDQPRF,RPREFIX
         USING IEDQSCB,RSCB3
         USING IEDQA5,RBASE
         SPACE
IEDQA501 EQU   *
IEDQA5   IEDHJN FORWARD                                          S22025
         EJECT
*                                                              @Y17XAMF
*        TASK= OPERAND LOGIC                                   @Y17XAMF
*                                                              @Y17XAMF
         CLI   PARMLEN(R1),TWO          DEST=PUT SPECIFIED     @OX20377
         BE    TSTBUF0                  YES                    @OX20377
         TM    ZEROOFF(R1),HEX1         DEST=PUT &THRESH CODED @OX20377
         BO    TSTBUF0                  YES, CHECK FOR ZERO    @OX20377
*                                        LENGTH BUFFER         @OX20377
         CLI   PARMSTAT(R1),TASKIND     WAS TASK CODED         @Y17XAMF
         BNE   TSTBUF0                  NO, BRANCH             @Y17XAMF
         TM    PARMFLG(R1),REGSPEC      WAS TASK CODED AS REG  @YM06054
         BO    ISREG                    YES, BRANCH            @YM06054
         SR    RWORK,RWORK              PLACE LENGTH OF CHAR   @Y17XAMF
         IC    RWORK,PARMCLEN(R1)        STRING IN REG         @Y17XAMF
         ICM   R1,ADDR,PARMNADD(R1)     PLACE CHAR STRING ADDR @Y17XAMF
         LA    R1,0(,R1)                 IN REG                @Y17XAMF
         BCTR  RWORK,0                  DECR EXECUTE REG       @Y17XAMF
         EX    RWORK,CLCSSCP            CHECK FOR SSCP         @Y17XAMF
         BNE   UPTOTE                   IF EQUAL GO TO SSCP    @Y17XAMF
         BAL   R14,SSCPUPT               UPDATE ROUTINE        @Y17XAMF
         B     EXIT1                    EXIT ROUTINE           @Y17XAMF
UPTOTE   EQU   *                                               @Y17XAMF
         BAL   R14,TOTEUPT              GO TO TOTE UPDATE RTN  @Y17XAMF
         B     EXIT1                    EXIT ROUTINE           @Y17XAMF
         SPACE
ISREG    EQU   *                                               @Y17XAMF
         L     R1,PARMCADD(R1)          LOAD ADDR TO CHAR STRG @YM06054
         CLC   SSCPLEN(L'SSCPLEN+L'SSCP),0(R1) IS CHAR STRING LENGTH
         BNE   CHKTOTE                   EQUAL TO SSCP STRING  @Y17XAMF
         BAL   R14,SSCPUPT              GO UPDATE PREFIX & SCB @Y17XAMF
         B     EXIT1                    EXIT ROUTINE           @Y17XAMF
CHKTOTE  EQU   *                                               @Y17XAMF
         CLC   TOTELEN(L'TOTELEN+L'TOTE),0(R1) IS CHAR STRING EQUAL
         BNE   SETBAD                    TO TOTE CHAR STRING   @Y17XAMF
         BAL   R14,TOTEUPT              GO UPDATE PREFIX & SCB @Y17XAMF
         B     EXIT1                    EXIT ROUTINE           @Y17XAMF
*                                                              @Y17XAMF
*        INVALID TASK= DESTINATION ROUTINE                     @Y17XAMF
*                                                              @Y17XAMF
SETBAD   EQU   *                                               @Y17XAMF
         LA    R15,BADRET               SET BAD RETURN CODE    @Y17XAMF
         NC    AVTDLQX(L'AVTDLQX),AVTDLQX IS DLQ VALID         @Y17XAMF
         BZ    EXIT1                    NO, BRANCH             @Y17XAMF
         TM    SCBERR2,SCBFRWDN         IS MSG ALREADY ON QUE  @Y17XAMF
         BO    EXIT1                    YES, BRANCH            @Y17XAMF
         OI    SCBERR2,SCBFRWDN         SET DLQ FLAG           @Y17XAMF
         L     R15,AVTMSGS-1            CALL IEDQAV            @Y17XAMF
         L     R15,INDEXAV(,R15)         *                     @Y17XAMF
         BALR  R14,R15                   *                     @Y17XAMF
         B     EXIT1                    EXIT ROUTINE           @Y17XAMF
CLCSSCP  CLC   SSCP(*-*),0(R1)          IS IT SSCP CHAR STRING @Y17XAMF
SSCPLEN  DC    AL1(L'SSCP)              'SSCP' LEN             @Y17XAMF
SSCP     DC    C'SSCP'                  'SSCP'                 @Y17XAMF
TOTELEN  DC    AL1(L'TOTE)              'TOTE' LEN             @Y17XAMF
TOTE     DC    C'TOTE'                  'TOTE'                 @Y17XAMF
         EJECT
*                                                              @Y17XAMF
*        TASK=SSCP UPDATE ROUTINE                              @Y17XAMF
*                                                              @Y17XAMF
SSCPUPT  EQU   *                                               @Y17XAMF
         LA    RWORK,AVTOPCOB+1         OP CTL QCB+FLG         @YM07395
         STCM  RWORK,ADDR,SCBDESTQ       ADDR IN THE SCB       @Y17XAMF
         OI    SCBQTYPE,SCBNORCL        SET NO RECALL BIT      @Y17XAMF
         L     R15,AVTSAVTP             GET ADDR TO SAVT       @Y17XAMF
         USING IEDNSVTD,R15                                    @Y17XAMF
         MVC   PRFDEST(L'PRFDEST),SAVTSCPT PLACE TTCIN FOR     @Y17XAMF
*                                        SSCP IN PREFIX        @Y17XAMF
         DROP  R15                                             @Y17XAMF
         SR    R15,R15                  SET RETURN CODE        @Y17XAMF
         BR    R14                      RETURN                 @Y17XAMF
*                                                              @Y17XAMF
*        TASK=TOTE UPDATE ROUTINE                              @Y17XAMF
*                                                              @Y17XAMF
TOTEUPT  EQU   *                                               @Y17XAMF
         LA    RWORK,AVTOLTQB           PLACE TOTE QCB ADDR    @Y17XAMF
         STCM  RWORK,ADDR,SCBDESTQ       IN THE SCB            @Y17XAMF
         OI    SCBQTYPE,SCBNORCL        SET NO RECALL BIT      @Y17XAMF
*                                        IN PREFIX             @Y17XAMF
         BR    R14                      RETURN                 @Y17XAMF
         EJECT
TSTBUF0  LH    RWORK5,PRFSIZE           LOAD BUFFER SIZE       @Y17XAMF
         LTR   RWORK5,RWORK5            ZERO-LENGTH BUFFER
         BZ    EXIT1                    YES, RETURN IMMEDIATELY
         SPACE 1                                                 S22025
         LR    RPARM2,R1                SAVE PARMLIST START      S22025
         CLI   PARMLEN(R1),TWO          DEST=PUT SPECIFIED       S22025
         BE    DESTPUT                  YES                    @YA11171
         TM    ZEROOFF(R1),HEX1         DEST=PUT &THRESH CODED @YA11171
         BNO   CKDUPL                   NO,CHECK TYPE          @YA11171
         STCM  R1,7,SCBMRFPL            SAVE FORWARD PARAM LIST@YM07395
DESTPUT  EQU   *                                               @YA11171
         SPACE 1                                                 S22025
         TM    PRFSTAT1,PRFNHDRN        TEXT BUFFER              S22025
         BO    EXITERR                  YES, CANNOT FORWARD      S22025
         SPACE 1                                                 S22025
         SR    R1,R1                    USE DEST KEY IN BUFFER   S22025
         B     LINKAV1                  LINK TO IEDQAV      ER   S22025
         SPACE 1                                                 S22025
CKDUPL   EQU   *                                                 S22025
         SPACE
         TM    PRFSTAT1,PRFTSMSG       IS THIS A TSO MESSAGE     S22029
         BO    EXIT1                    YES, DO NOT FORWARD
         SPACE
         TM    PRFSTAT1,PRFDUPLN        IS THIS A RECALLED BUFFER
         BO    TESTDEST                 YES,MAY BE TEXT,PROCEED  S22027
         SPACE
         TM    PRFSTAT1,PRFNHDRN        NO, MUST BE HEADER, IS IT
         BO    EXITERR                  IT IS NOT, GO TO ERROR EXIT
         TM    PARMSTAT(RPARM2),EOAFLAG MULTIPLE ROUTE         @SA72473
         BO    NOCLEAR                  BRANCH IF YES          @SA72473
         XC    SCBMRFSD(2),SCBMRFSD     SET NOT MULTI-ROUTE    @SA72473
NOCLEAR  EQU   *                                               @SA72473
         SPACE
         CLI   LCBRSKEY,PUTSCHED        TEST FOR PUT SCHEDULER
         BE    SAVEPARM                 YES, WON'T BE EXTENDED LOCK
         SPACE
         TM    SCBSTATE,SCBLCK1N       IN EXTENDED LOCK MODE
         BZ    SAVEPARM                 NO, BRANCH             @YM07747
         SR    R1,R1                    CLEAR FOR IC           @YM07747
         ICM   R1,3,LCBINSRC            PROC ENTRY TTCIN       @YM07747
         L     R15,AVTRNMPT             TERMNAME CODE BASE     @YM07747
         BALR  R14,R15                  GET TERM ENTRY ADDRESS @YM07747
         ST    R1,AVTPARM               SAVE TERM ENTRY ADDR   @YM07747
         SR    R15,R15                  CLEAR RETURN CODE      @OY18927
         B     EXITCLR                  EXIT                   @YM07747
         SPACE
SAVEPARM EQU   *
         STCM  R1,7,SCBMRFPL            SAVE FORWARD PARM LIST@YM07395
TESTDEST EQU   *                                                 S22027
         TM    PARMSTAT(RPARM2),DESTORGN  DOES DEST=ORIGIN       S22027
         BZ    INCPARM                  BRANCH NO              @YM07395
         LH    R15,PRFSRCE              GET TNT OFFSET         @YM07395
         LTR   R15,R15                  ZERO                   @YM07395
         BZ    ERRTEST                  YES, NO SOURCE         @YM07395
         B     LINKAV                   NO LOOKUP              @YM07395
         SPACE
INCPARM  EQU   *
         IC    R15,PARMLEN(,R1)         BUMP TO FIRST
         LA    R1,AVTEZERO(R15,R1)        PARAMETER LIST
         LR    RA18,R1                  SAVE FIRST RTN'S PARM LIST
         TM    PARMSTAT(RPARM2),DESTNAME  NAME SPECD IN MACRO    S22027
         BZ    FIRSTRTN                 NO, SKIP THIS TEST       S22027
         TM    A1CHARS(RA18),TNTSTOR    TNT OFFSET STORED        S22027
         BZ    FIRSTRTN                 NO, GO GET IT            S22027
         L     R15,A1CHARS(RA18)        YES, PUT IT IN REG 15    S22027
         LA    R15,0(R15)               CLEAR FLAG BIT           S22027
         B     LINKAV                   GO TO IEDQAV LINK        S22027
FIRSTRTN EQU   *                                                 S22027
         LA    RRET10,ERRTEST           SET ERROR RETURN         S22027
         TM    PARMSTAT(RPARM2),DESTBOTH  IS DEST IN MACRO       S22027
         BZ    GOTOFIRS                 BRANCH IF NO             S22027
         CLI   A1LEN(RA18),PARMLEN      IS LENGTH LESS THAN 1    S22027
         BCR   ALOW,RRET10              BRANCH IF YES            S22027
         CLI   A1LEN(RA18),EIGHT        IS LENGTH GT 8           S22027
         BCR   TWO,RRET10               BRANCH IF YES            S22027
GOTOFIRS EQU   *                                                 S22027
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BALR  R14,R15                  LINK TO FIRST ROUTINE
         SPACE
TESTRET  EQU   *
         TM    PARMSTAT(RPARM2),DESTBOTH  IS DEST IN MACRO       S22027
         BM    RETURNA1                 YES, RETURN IS FROM A1   S22027
         SPACE
         LA    RA18,FOUR(,RA18)         BUMP TO A1 PARAM LIST
         TM    PARMSTAT(RPARM2),DESTOPT IS DEST IN OPT FIELD
         BO    RETURNAE                 YES, RETURN IS FROM AE
         SPACE
         LTR   R15,R15                  TEST FOR MBH RETURN
         BM    MBHEXIT                  YES, GO TEST ENTRY
         SPACE
         TM    PARMSTAT(RPARM2),EOAFLAG IS THERE AN EOA STRING
         BNO   SETSCAN                  NO, MUST BE TERM NAME
         SPACE
         SR    REX11,REX11
         TM    SCBMRFPL+2,MREOA1        WAS EOA FOUND LAST TIME
         BO    EXITCLR1                 YES, RETURN TO CALLER
         SPACE
         IC    REX11,PARMEOA(,RPARM2)   GET COUNT AND ADDRESS
         L     RWORK5,PARMEOA(,RPARM2)    OF EOA CHARS
         BCTR  REX11,AVTEZERO           COMPARE STRING FOUND
         EX    REX11,CLCX                 WITH EOA CHARACTERS
         BE    EXITEOA                  EQUAL, SET EOA & RETURN
         SPACE
         LTR   REX11,REX11              ONE-CHARACTER EOA
         BNZ   SETMRFSD                 NO, BYPASS INTERNAL CHECK
         SPACE
         IC    REX11,AVTPARM+1          YES, GET LENGTH OF STRING
         SPACE
EOALOOP  EQU   *
         IC    R14,AVTDOUBL-1(REX11)    PICK UP BYTE FROM STRING
         EX    R14,CLIX                 DOES IT MATCH EOA BYTE
         BE    EXITEOA                  YES, EOA FOUND, BRANCH
         SPACE
         BCT   REX11,EOALOOP            NO, LOOP TILL ALL TESTED
         SPACE
SETMRFSD EQU   *
         STH   R15,SCBMRFSD             SAVE OFFSET TO SECOND DEST
         TM    PRFSTAT1,PRFDUPLN        ENTRY FROM MULTIPLE ROUTE
         BO    PREPA1                   YES, GO LINK TO BINARY SEAR
         SPACE
SETBYTE  EQU   *
         LR    RPARM2,RPREFIX           LOAD PREFIX ADDR         S22025
         STH   R15,PRFSCAN              POINT TO END OF DEST
         B     ENTERLOP                 GET ADDR OF SCAN PTR     S22025
ADDRLOOP EQU   *                                                 S22025
         L     RPARM2,PRFTIC-IEDQPRF(RPARM2) POINT TO NEXT UNIT  S22025
         SH    R15,AVTKEYLE             SUBT NO OF BYTES PASSED  S22025
ENTERLOP EQU   *                                                 S22025
         CH    R15,AVTKEYLE             IS ITEM IN THIS UNIT     S22025
         BH    ADDRLOOP                 NO, TEST NEXT UNIT       S22025
         LA    R15,AVTUMALN-1(R15,RPARM2) YES, GET ADDR OF ITEM  S22025
         SPACE
         L     RPARM2,SCBMRFPL-1        RESTORE PARM LIST ADDR
         IC    R0,AVTEZERO(,R15)        PICK UP LAST BYTE        S22025
         STC   R0,SCBMRFSD+1            SAVE IT IN SCB
         MVI   AVTEZERO(R15),UNIQUE     REPLACE WITH UNIQUE BYTE S22025
         B     PREPA1                   GO LINK TO BINARY SEARCH
         SPACE
SETSCAN  EQU   *
         STH   R15,PRFSCAN              POINT TO END OF DEST
         SPACE
PREPA1   EQU   *
         IC    R15,AVTPARM+1            PICK UP LNG OF FIELD FOUND
         LA    RRET10,ERRTEST           SET RETURN TO TRY RECOVERY
         LA    RWORK5,AVTDOUBL          GET ADDR OF FIELD FOUND
         B     LINKA1                   GO SET PARMS & LINK TO A1
         SPACE
EXITEOA  EQU   *
         TM    PRFSTAT1,PRFDUPLN        IS THIS VALID EOA
         BZ    ERRTEST                  NO, TRY TO RECOVER
         SPACE
         OI    SCBMRFPL+2,MREOA2        SET EOA-FOUND CODE
         EX    REX11,CLCX         WAS EOA CHARACTER STRING FOUND
         BE    EXITCLR            YES, RETURN TO CALLER
         B     ERRTEST1           NO, INVALID DEST. TEST USER EXIT
         SPACE
MBHEXIT  EQU   *
         TM    PRFSTAT1,PRFDUPLN        ENTRY FROM MULTIPLE ROUTE
         BO    EXIT1                    YES, RETURN WITH -4 CODE
         SPACE
         B     ERRTEST                  NO, GO TRY TO RECOVER
         EJECT
RETURNAE EQU   *
         LTR   R15,R15                  TEST FOR OPT FLD NOT FOUND
         LA    RRET10,ERRTEST           SET ERROR EXIT ADDRESS
         BCR   ZERO,RRET10              NOT FOUND, TRY TO RECOVER
         SPACE
         LR    RWORK5,R15               SET ADDR OF CHARACTERS
         IC    R15,AVTEZERO(,R1)        GET LNG FROM OP C ENTRY
         LA    R15,ONE(,R15)            ADD ONE FOR TRUE LENGTH
         SPACE
LINKA1   EQU   *
         STC   R15,A1LEN(,RA18)         SET LENGTH OF NAME
         ST    RWORK5,A1CHARS(,RA18)    SET ADDRESS OF NAME
         LR    R1,RA18                  POINT TO IEDQA1'S PARM LIST
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BALR  R14,R15                  LINK TO IEDQA1
         SPACE
RETURNA1 EQU   *
         LTR   R15,R15                  TEST IF TERM NAME FOUND
         BCR   ZERO,RRET10              NO, TRY TO RECOVER
         TM    PARMSTAT(RPARM2),DESTNAME  NAME SPECD IN MACRO    S22027
         BZ    LINKAV                   NO, CARRY ON             S22027
         ST    R15,A1CHARS(RA18)        YES, STORE TNT OFFSET    S22027
         OI    A1CHARS(RA18),TNTSTOR    SET STORED FLAG          S22027
         SPACE
LINKAV   EQU   *
         LR    R1,R15                   PASS DEST KEY TO IEDQAV
LINKAV1  EQU   *                                                 S22025
         L     R15,AVTMSGS-1            GET MH VCON TABLE ADDRESS
         L     R15,INDEXAV(,R15)        GET IEDQAV ADDRESS
         BALR  R14,R15                  LINK TO IEDQAV
         SPACE
         LTR   R15,R15                  VALID RETURN CODE      @YM06896
         BNZ   ERRTEST                  NO, ERROR              @YM06896
* PERFORM QUEUE FULL CHECKS FOR THE INDICATED DESTINATION.     @Y17XAMG
         SPACE
         L     REX11,SCBDESTQ-1         DESTINATION QCB ADDR   @Y17XAMG
         USING IEDQQCB,REX11                                  @Y17XAMG
         TM    QCBDSFLG,QCBNREUS        ANY NON-REUSE Q'ING?   @Y17XAMG
         BO    QUESOK                   BRANCH IF SO           @Y17XAMG
         TM    AVTBIT3,AVTRFULN         REUSABLE QUEUE SPACE   @Y17XAMG
*                                       FULL?                  @Y17XAMG
         BZ    REUSEOK                  BRANCH IF NOT          @Y17XAMG
         TM    QCBDSFLG,QCBREUS         THIS QUEUE EMPLOY ANY  @Y17XAMG
*                                       REUSABLE QUEUE SPACE?  @Y17XAMG
         BO    THRLIMIT                 BRANCH IF SO           @Y17XAMG
REUSEOK  EQU   *                                               @Y17XAMG
         TM    AVTBIT3,AVTRECVN         CORE QUEUES FULL?      @Y17XAMG
         BZ    QUESOK                   BRANCH IF NOT          @Y17XAMG
         TM    QCBDSFLG,QCBREUS+QCBNREUS THIS QUEUE EMPLOY ANY @Y17XAMG
*                                       DISK QUEUE SPACE?      @Y17XAMG
         BZ    THRLIMIT                 BRANCH IF NOT          @Y17XAMG
QUESOK   EQU   *                                               @Y17XAMG
         SPACE 1                                                 S22025
         CLI   PARMLEN(RPARM2),TWO      DEST=PUT SPECIFIED       S22025
         BE    EXIT                     YES, CHECK DATE/TIME     S22025
         SPACE
         LTR   R15,R15                  TEST IF TSO TERMINAL
         BNZ   ERRTEST                  YES, TEST FOR ERROR      S22025
         SPACE 1
         L     R14,AVTPARM              GET TERM ADDRESS         S22025
         USING IEDQTRM,R14                                       S22025
         SPACE 1
         TM    TRMSTATE,CASDIST         CASCADE OR DIST LIST QCB S22025
         BO    EXIT                     YES, BRANCH TO RETURN    S22025
         SPACE 1
         TM    ZEROOFF(RPARM2),HEX1     DEST=PUT & THRESH CODED@OX13495
         BO    THRES                    BRANCH IF YES          @OX13495
         SPACE 1
         SPACE
         TM    PARMSTAT(RPARM2),THRSHFLG IS THRES CODED          S22025
         BNO   EXIT                     NO, RETURN TO CALLER     S22025
THRES    EQU   *                                               @YA11171
         SPACE
         BAL   R14,GETOFF               BRANCH TO BUMP PARM ADDR S22025
         SPACE
         TM    QCBDSFLG,QCBDISK         IS IT DISK QUEUES
         BNZ   EXIT                     YES, RETURN TO CALLER
         SPACE
         TM    QCBDSFLG,QCBCORE         IS IT CORE QUEUES
         BNO   EXIT                     NO, RETURN TO CALLER
         SPACE
         NI    SCBERR3,AVTEFF-SCBTHRSN  TURN OFF CORE THRESH   @SA71961
         LA    R14,FOUR(,RWORK5)        ASSUME NOT PUT         @YM07395
         TM    ZEROOFF(RPARM2),HEX1     DEST=PUT &THRESH CODED @YA11171
         BNO   NOTPUT                   NO-BRANCH              @YA11171
         LA    R14,TWO(,RWORK5)         THRESH LIMIT           @YM07395
NOTPUT   EQU   *                                               @YA11171
         SPACE
         CLC   QCBMSGCT,0(R14)          HAS THRESH BEEN REACHED@YM07395
         BL    EXIT                     NO, RETURN TO CALLER     S22025
THRLIMIT EQU   *                                               @YA11171
         OI    SCBERR3,SCBTHRSN         SET THRESH LIMIT REACHED S22025
         LA    R14,AVTBFRTB             BUFFER RETURN QUEUE     SA59039
         STCM  R14,7,SCBDESTQ           SAVE DEST QUEUE        @YM07395
         TM    SCBERR2,SCBFRWDN         ERROR HNDLING DONE YET @SA74980
         BO    EXIT                     YES RETURN TO MH       @SA74980
         EJECT
ERRTEST  EQU   *
          TM    PRFSTAT1,PRFDUPLN       ENTRY FROM FORWARD MACRO
          BO    ERRTEST1                NO, LEAVE OFF BIT
         SPACE
         OI    SCBERR2,SCBFRWDN         SET FORWARD ERROR BIT
         TM    ZEROOFF(RPARM2),HEX1     DEST=PUT &THRESH CODED @YA11171
         BO    PERMERR                  YES SKIP EOA,EXIT CKS  @YA11171
         SPACE
ERRTEST1 EQU   *
         TM    SCBMRFPL+2,MREOA2        WAS EOA FOUND
         BNO   GETUSER1                 NO, BRANCH
         SPACE
         NI    SCBMRFPL+2,AVTEFF-MREOA2 YES, RESET TO INDICATE
         OI    SCBMRFPL+2,MREOA1          USER RECOVERY
         SPACE
GETUSER1 EQU   *
         BAL   R14,GETOFF               BRANCH TO BUMP PARM ADDR S22025
         LR    R15,RWORK5               LOAD CORRECT OFFSET      S22025
         TM    PARMSTAT(RPARM2),USERFLAG IS THERE A USER ROUTINE
         BNO   PERMERR                  NO, PERMANENT ERROR
         SPACE
         SPACE
GETUSER  EQU   *
         L     R15,AVTEZERO(,R15)       GET ADDR OF USER ROUTINE
         LR    R1,RPREFIX               PASS ADDRESS OF BUFFER
         STM   RPARM2,RBASE,REG2OFF(R13) SAVE REGISTERS
         BALR  R14,R15                  LINK TO USER ROUTINE
         SPACE
         LM    RPARM2,RBASE,REG2OFF(R13) RESTORE REGISTERS
         LTR   R15,R15                  TEST IF RECOVERY MADE
         BZ    PERMERR                  NO, PERMANENT ERROR
         SPACE
         LA    RWORK5,ONE(,R15)         POINT TO START OF CHARS
         IC    R15,AVTEZERO(,R15)       PICK UP LNG OF CHARACTERS
         BAL   RRET10,LINKA1            GO LINK TO IEDQA1
         SPACE
PERMERR  EQU   *
         LH    R15,AVTDLQX              GET DEAD-LETTER QUEUE KEY
         LTR   R15,R15                  IS IT ZERO
         BZ    EXITERR                  YES, PERMANENT ERROR, EXIT
         SPACE
         TM    PRFSTAT1,PRFDUPLN        ENTRY FROM FORWARD MACRO
         BNO   LINKAV                   YES, GO SET DLQ AS DEST SA67104
         SPACE
         TM    SCBERR2,SCBFRWDN         NO, IS MSG ALREADY ON DLQ
         BO    EXITERR                  YES, DON'T SEND ANOTHER
         SPACE
         OI    SCBERR2,SCBFRWDN         NO, TURN ON DLQ FLAG
         B     LINKAV                   GO SET DLQ AS DEST
         SPACE
EXITERR  EQU   *
         LA    R15,AVTECD4              SET RETURN CODE
         SPACE
         B     EXIT2                    GO CLEAN UP            @YM07747
         SPACE
         SPACE
EXITCLR1 EQU   *
         NI    SCBMRFPL+2,AVTEFF-MREOA1 RESET TO INDICATE
         OI    SCBMRFPL+2,MREOA2          EOA FOUND
EXITCLR  EQU   *
         SR    R0,R0                    SET SECONDARY
         STH   R0,SCBMRFSD              DESTINATION FIELD 0
         SPACE
EXIT     EQU   *
         TM    PRFSTAT1,PRFNHDRN+PRFDUPLN NOT HDR OR DUPE      @YM07395
         BNZ   EXIT2                    BRANCH IF EITHER       @YM07395
         DROP  R14                                             @YM07392
         L     RTRM,AVTPARM             RESTORE TTE ADDRESS    @YM07392
         USING IEDQTRM,RTRM                                    @YM07392
         TM    TRMSTATE,TRMPROC         IS THIS A TPROCESS     @YM07392
         BNO   EXIT2                    BRANCH NO, EXIT        @YM07392
         TM    TRMSTATE,TRMLOG          IS THIS LOGTYPE        @YM07392
         BO    EXIT2                    BRANCH YES, EXIT       @YM07392
         TM    SCBMRFPL+2,MREOA2        WAS EOA FOUND            S22025
         BO    EXIT2                    YES RETURN TO CALLER     S22025
         LR    RWORK,R15                SAVE RETURN CODE       @YM07392
         LA    R0,TRMTPIN               MASK FOR DEV DEP FLD   @Y17XAMF
         L     R1,AVTPARM               POINT TO SAVED TTE     @XM05681
         L     R15,AVTDDFT              LOAD IEDQTL ADDRESS    @Y17XAMF
         BALR  R14,R15                  GET DEV DEP FIELD ADDR @Y17XAMF
         TM    PROFLAG-IEDPROC(R15),PRODATE DATE=YES SPECIFIED @Y17XAMF
         BNO   NODATE                   NO, BRANCH             @Y17XAMF
         L     REX11,TRMDESTQ-1         GET DEST QCB ADDR      @Y17XAMF
         L     RWORK5,QCBDCBAD-1        GET ADDRESS OF PCB     @Y17XAMF
         USING IEDQPCB,RWORK5                                  @Y17XAMF
         L     R15,PCBDTRTN-1           ADDRESS OF DATE ROUTINE@Y17XAMF
         BALR  R14,R15                  LINK TO DATE RTN       @Y17XAMF
NODATE   EQU   *                                               @Y17XAMF
         LR    R15,RWORK                RESTORE RETURN CODE    @Y17XAMF
EXIT2    EQU   *                                                 S22025
         TM    SCBMRFPL+2,MREOA2        WAS EOA FOUND
         BNO   EXIT1                    NO, BRANCH
         NI    SCBBSCFM,AVTEFF-SCBDATEN RESET DATE INSERTED     SA56226
         SPACE
         LA    R15,AVTECD8              SET EOA RETURN CODE
         NI    SCBMRFPL+2,AVTEFF-MREOA1-MREOA2 RESET FLAGS TO ZERO
         SPACE
EXIT1    EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              RETURN TO CALLER         S22025
         SPACE
GETOFF   EQU   *                                                 S22025
         L     RPARM2,SCBMRFPL-1        RESTORE PARM LIST ADDR   S22025
         SRL   RPARM2,TWO               CLEAR FLAG BITS          S22025
         SLL   RPARM2,TWO               OUT OF ADDRESS           S22025
         LR    RWORK5,RPARM2            LOAD PARM LIST ADDR      S22025
         TM    ZEROOFF(RPARM2),HEX1     DEST=PUT &THRESH CODED @YA11171
         BO    ZEROOFF(R14)             YES-RETURN             @YA11171
         SPACE
         TM    PARMSTAT(RPARM2),USERFLAG IS THERE A USER EXIT    S22025
         BNO   EOAOFF                   NO, CHECK FOR EOA STRING S22025
         SPACE
         LA    RWORK5,FOUR(RWORK5)      YES, BUMP ADDR BY FOUR   S22025
         SPACE
EOAOFF   EQU   *                                                 S22025
         SPACE
         TM    PARMSTAT(RPARM2),EOAFLAG IS THERE A EOA STRING    S22025
         BNO   ZEROOFF(R14)             NO, RETURN TO CALLER     S22025
         SPACE
         LA    RWORK5,FOUR(RWORK5)      YES, BUMP ADDR BY FOUR   S22025
         SPACE
         BR    R14                      RETURN TO CALLER
         SPACE 3
********* EXECUTED INSTRUCTIONS *********
         SPACE
CLCX     CLC   AVTDOUBL(AVTEZERO),AVTEZERO(RWORK5)
         SPACE
CLIX     CLI   AVTEZERO(RWORK5),AVTEZERO
         EJECT
********* DSECTS *********
         TQCBD                                                   S22025
         TPCBD                                                   S22025
         EJECT
         TPROCD
         EJECT
         TTRMD                                                   S22025
         SPACE
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TSCBD
         SPACE
         END
