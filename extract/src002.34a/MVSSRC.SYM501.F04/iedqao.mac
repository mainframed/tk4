AO01     TITLE '''IEDQAO'' -- UNIT REQUEST INTERFACE ROUTINE'
IEDQAO   CSECT
*A018480-018640,177000,283000-285000,340000,356000,397000-488000 S22025
*A507000,519000,823000-826000,876500-881200                      S22025
*C588000,594000,606000,624000,630000,648000                      S22025
*D018450-018700,021900,336000,342000,396000-492000,516000,522000 S22025
         SPACE
***********************************************************************
*STATUS -- CHANGE LEVEL 0                                             *
*                                                                     *
*                                                                     *
*FUNCTION -- ACCESSES A REQUESTED UNIT,  LINKS IT INTO THE BUFFER     *
*   AND EXITS TO INSERT THE DATA REQUESTED.                           *
*                                                                     *
*   THE ROUTINE DETERMINES IF THE INSERT DATA CAN BE INSERTED INTO    *
*   THE CURRENT BUFFER. IF NOT A LINK IS MADE TO ACCESS AN EMPTY S22025
*   UNIT. IF AN EMPTY UNIT IS UNAVAILABLE A RETURN IS MADE TO THES22025
*   CALLER WITH A RETURN CODE OF FOUR IN REGISTER 15.            S22025
*                                                                     *
*   IF A UNIT IS FOUND,                                    THE UNIT   *
*   IS LINKED INTO THE BUFFER BETWEEN THE UNIT IN WHICH THE SCAN      *
*   POINTER POINTS AND THE FOLLOWING UNIT.  THE DATA IN THE SCAN      *
*   POINTER UNIT FROM THE SCAN POINTER TO THE END OF THE UNIT IS      *
*   MOVED TO THE CORRESPONDING LOCATION IN THE NEW UNIT.  THE DATA    *
*   OFFSET,  THE INSERT OFFSET AND THE PREFIX SIZE FIELD (PRFSIZE)    *
*   ARE EACH INCREMENTED BY THE UNIT SIZE.                            *
*                                                                     *
*   A PARAMETER LIST IS BUILT FOR THE INSERT DATA ROUTINE (IEDQAF)    *
*   AND EXIT IS MADE TO IT TO INSERT THE DATA REQUESTED. (IF A NEW    *
*   UNIT IS NOT NEEDED,  THIS IS DONE IMMEDIATELY.)                   *
*ENTRY POINT --                                                       *
*       'IEDQA001' TO ACCESS AND/OR LINK A REQUESTED UNIT INTO THE    *
*   BUFFER-  CALLING SEQUENCE FROM USER INTERFACE IS:                 *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 3 - ADDRESS OF THE SCB                                   *
*                                                                     *
*   REGISTER 4 - ADDRESS OF THE LCB                                   *
*                                                                     *
*   REGISTER 6 - ADDRESS OF THE BUFFER                                *
*                                                                     *
*   REGISTER 9 - ADDRESS OF THE AVT                                   *
*                                                                     *
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE FOR THIS ROUTINE-      *
*                                                                     *
*   AVTPARM - PARAMETER LIST FOR THIS ROUTINE.  PARAMETER LIST        *
*   FORMAT IS:                                                        *
*                                                                     *
*        *********************************                            *
*        * INDEX * DATA  * INDEX * (UN-  *                            *
*        *  TO   *  TYPE *  TO   *  USED)*                            *
*        *   AO  *  FLAG *   AF  *       *                            *
*        *********************************                            *
*                                                                     *
*        AO INDEX BYTE: X'01' OFF - TEST AND LINK                     *
*                       X'01' ON  - LINK ONLY                         *
*                                                                     *
*   PREFIX DATA OFFSET - OFFSET TO START OF UNPROCESSED DATA          *
*                                                                     *
*   PREFIX INSERT OFFSET - NUMBER OF LOGICALLY EMPTY BYTES            *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - RETURN CODE.  CONTAINS X'04' IF A NEW UNIT IS       *
*   NOT AVAILABLE.                                                    *
*                                                                     *
*                                                                     *
*   PREFIX DATA OFFSET - INCREMENTED BY THE LENGTH OF ONE UNIT        *
*                                                                     *
*   PREFIX INSERT OFFSET - INCREMENTED BY THE LENGTH OF ONE UNIT      *
*                                                                     *
*   PREFIX SIZE FIELD (PRFSIZE) - INCREMENTED BY THE LENGTH OF ONE    *
*   UNIT                                                              *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQAF' - INSERT DATA ROUTINE                                    *
*                                                                     *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED                                  *
*                                                                     *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*   LCB - LINE CONTROL BLOCK                                          *
*                                                                     *
*EXITS,  NORMAL -- A NEW UNIT HAS BEEN ACCESSED AND LINKED INTO THE   *
*   BUFFER.  CONTROL IS PASSED TO THE INSERT DATA ROUTINE (IEDQAF).   *
*                                                                     *
*EXITS,  ERROR -- A NEW UNIT IS NOT AVAILABLE.  CONTROL RETURNS TO    *
*   THE CALLER WITH A RETURN CODE OF X'04'.                           *
*                                                                     *
*TABLES/WORK AREAS - N/A                                              *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE,  ENABLED,  RESIDENT,   *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTE -- THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      *
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    *
*   BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        *
*   DEFINITIONS.                                                      *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST ADDRESS
         SPACE
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RSCB3    EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
RUNIT4   EQU   4                        LCB ADDRESS
         SPACE
RSCAN5   EQU   5                        DATA ADDRESS
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE
RCOMP7   EQU   7                        COMPARE REGISTER
         SPACE
RNEW8    EQU   8                        NEW UNIT ADDRESS
         SPACE
RAVT9    EQU   9                        AVT ADDRESS
         SPACE
RCC10    EQU   10                       CONDITION CODE REGISTER
         SPACE
REX11    EQU   11                       EXECUTE REGISTER
REOUAD   EQU   11                       END OF UNIT ADDR         S22025
RDISP11  EQU   11                       DISPATCHER ADDRESS
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
PARMAF   EQU   2                        IEDQAF INDEX
         SPACE
INSOFF   EQU   4                        INSERT OFFSET
DATOFF   EQU   6                        DATA OFFSET
         SPACE
ONE      EQU   1                        INCREMENT VALUE OF ONE
TWO      EQU   2                        LENGTH OF A HALFWORD
FOUR     EQU   4                        LENGTH OF A FULLWORD
THREE    EQU   3                        MOVE LENGHT FOR BUFF     S22025
FIVE     EQU   5                        OFFSET FOR DELINK BUFFER S22025
SEVEN    EQU   7                        INDEX IN EXECUTE         S22025
         EJECT
         USING IEDQAVTD,RAVT9
         USING IEDQLCB,RLCB4
         USING IEDQPRF,RPREFIX
         USING IEDQSCB,RSCB3
         USING IEDQAO,RBASE
         SPACE
IEDQAO01 EQU   *
IEDQAO   IEDHJN UNITREQ                 ID AND DATE              S22025
         LR    R14,R1                   SAVE PARM LIST           S22025
         SR    R0,R0
         IC    R0,AVTPARM3              GET DATA COUNT
         CH    R0,INSOFF(,RPREFIX)      IS IT GT SPACE AVAILABLE
         BNH   INSERT                   NO, GO INSERT DATA
         SPACE
GETUNIT  EQU   *
         L     R1,AVTBFREB              ADDR OF FIRST BFR        S22025
         LA    R1,0(R1)                 CLEAR HI BYTE            S22025
         LTR   R1,R1                    ANY BFR UNITS THERE      S22025
         BNZ   UNIT                     BRANCH TO GET UNIT       S22025
         LA    R15,FOUR                 SET BAD RETURN CODE      S22025
RETURN   EQU   *
         L     RBASE,AVTUI              GET RETURN ROUTINE ADDR  S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
UNIT     EQU   *                                                 S22025
         MVC   AVTBFREB+1(THREE),FIVE(R1) DELINK BUFFER          S22025
         XC    FIVE(SEVEN,R1),FIVE(R1)                           S22025
         LH    R0,AVTAVFCT              ADJUST AVAIL COUNT       S22025
         BCTR  R0,0                     SET COUNTER              S22025
         STH   R0,AVTAVFCT              STORE IT BACK            S22025
         LR    RNEW8,R1                 SET ADDR OF NEW UNIT     S22025
         EJECT
LINKUNIT EQU   *
         LH    RSCAN5,PRFSIZE           PICK UP DATA SIZE        S22025
         CLC   DATOFF(TWO,RPREFIX),PRFSIZE INSERT PT AT END OF BFR
         BH    LINKAL                   YES, PASS SIZE TO AL     S22025
         SPACE
         LH    RSCAN5,DATOFF(,RPREFIX)  NO, PASS DATA OFFSET TO AL
         SPACE
LINKAL   EQU   *
         N     RSCAN5,AVTCLRHI
         LR    RWORK2,RPREFIX           LOAD PREFIX ADDR         S22025
         BAL   R1,ENTERLOP              GET ADDR OF SCAN POINTER S22025
         SPACE
         L     R0,PRFTIC-IEDQPRF(,RWORK2) POINT NEW UNIT TO      S22025
         ST    R0,PRFTIC-IEDQPRF(,RNEW8)  NEXT UNIT
         IC    R0,PRFTIC-IEDQPRF(,RWORK2) GET TIC
         ST    RNEW8,PRFTIC-IEDQPRF(,RWORK2) POINT DATA UNIT TO  S22025
         STC   R0,PRFTIC-IEDQPRF(,RWORK2) NEW UNIT               S22025
         SPACE
MOVEDATA EQU   *
         CLC   DATOFF(TWO,RPREFIX),PRFSIZE INSERT PT AT END BUF  S22025
         BH    UPOFFS                   YES, BYPASS DATA SHIFT
         SPACE
         SR    REX11,RSCAN5             GET EXECUTE LENGTH
         SPACE
         LR    R0,RSCAN5                GET START
         SR    R0,RWORK2                ADDRESS FOR              S22025
         AR    RNEW8,R0                   MOVING DATA
         SPACE
         BCTR  REX11,AVTEZERO           MOVE DATA FROM OLD DATA
         EX    REX11,MOVEX                UNIT TO NEW DATA UNIT
         SPACE
UPOFFS   EQU   *
         LH    RWORK2,AVTKEYLE          GET LENGTH OF ONE UNIT
         SPACE
         LH    RSCAN5,DATOFF(,RPREFIX)  GET DATA OFFSET
         LA    RSCAN5,AVTEZERO(RWORK2,RSCAN5) ADD UNIT LENGTH
         STH   RSCAN5,DATOFF(,RPREFIX)  STORE IT BACK
         SPACE
         LH    RSCAN5,INSOFF(,RPREFIX)  GET INSERT OFFSET
         LA    RSCAN5,AVTEZERO(RWORK2,RSCAN5) ADD UNIT LENGTH
         STH   RSCAN5,INSOFF(,RPREFIX)  STORE IT BACK
         SPACE
         LH    RSCAN5,PRFSIZE           GET TOTAL DATA SIZE
         LA    RSCAN5,AVTEZERO(RWORK2,RSCAN5) ADD UNIT LENGTH
         STH   RSCAN5,PRFSIZE           STORE IT BACK
         SPACE
         IC    RSCAN5,PRFNBUNT          GET NUMBER OF UNITS
         LA    RSCAN5,ONE(,RSCAN5)      ADD TO COUNT NEW UNIT
         STC   RSCAN5,PRFNBUNT          STORE IT BACK
         TM    0(R14),ONE               DIRECT RETURN            S22025
         BNO   INSERT                   NO, GO TO AF             S22025
         SR    R15,R15                  INDICATE GOOD RETURN     S22025
         B     RETURN                   BRANCH FOR RETURN        S22025
         EJECT
INSERT   EQU   *
         SR    R15,R15
         IC    R15,AVTPARM+2            PICK UP IEDQAF INDEX
         STC   R15,AVTPARM              PUT INTO PARM LIST
         SRL   R15,TWO                  INSURE LOW TWO BITS
         SLL   R15,TWO                   ARE OFF
         LA    R1,AVTPARM               POINT TO IEDQAF PARM LIST
         L     RBASE,AVTMSGS-1          LOAD MH VCON TABLE ADDRESS
         L     RBASE,AVTEZERO(R15,RBASE) LOAD IEDQAF ADDRESS
         BR    RBASE                    GO INSERT DATA
ADDRLOOP EQU   *                                                 S22025
         L     RWORK2,PRFTIC-IEDQPRF(,RWORK2) POINT TO NEXT UNIT S22025
         SH    RSCAN5,AVTKEYLE          SUBT NO OF BYTES PASSED  S22025
ENTERLOP EQU   *                                                 S22025
         CH    RSCAN5,AVTKEYLE          IS ITEM IN THIS UNIT     S22025
         BH    ADDRLOOP                 NO, TEST NEXT UNIT       S22025
         LA    RSCAN5,AVTUMALN-1(RSCAN5,RWORK2) YES, UNIT ADDR   S22025
         LH    REOUAD,AVTKEYLE          GET KEY LENGTH           S22025
         LA    REOUAD,AVTUMALN(RWORK2,REOUAD) END OF UNIT ADDR   S22025
         BR    R1                       RETURN TO CALLER         S22025
         SPACE 3
********* EXECUTED INSTRUCTION *********
         SPACE
MOVEX    MVC   AVTEZERO(,RNEW8),AVTEZERO(RSCAN5)
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TSCBD
         SPACE
         END
