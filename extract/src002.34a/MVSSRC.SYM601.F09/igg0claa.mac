         TITLE 'IGG0CLAA - VSAM SUPER LOCATE PROCESSING                *
                        '
IGG0CLAA CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLAA  74.303'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPSLEN'
         EJECT
         B     @PB00002                                            0114
IGGPSLEN DS    0H                                                  0115
         ENTRY IGGPSLEN
         DROP @15
Z003     DS    0H                                                  0117
Z003SLEN DS    0H                                                  0118
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
         USING *,12
*                                                                  0124
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME = IGGPSLEN(IGG0CLAA)                                 *
**                                                                    *
**   DESCRIPTIVE NAME = SECOND MODULE SUPER LOCATE PROCESSING         *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION IS CALLED BY SUPER LOCATE MODULE IGG0CLAM   *
**      TO PROCESS THE RECORD ENTRY FOR THE DATA SET NAMED BY THE     *
**      CALLER. THE PROCESSING IS AS FOLLOWS:                         *
**      1. IF A RECOVERABLE CATALOG, MOVE THE CRA VOLUME INFORMATION  *
**         TO THE WORKAREA ESTABLISHED FOR EXTRACT AND CALL IGGPSLIV  *
**         TO INSERT THE CRA INFORMATION IN THE VOLUME LIST.          *
**      2. DETERMINE RECORD ENTRY TYPE IN RAB1 AND CALL APPROPRIATE   *
**         SUB-FUNCTION.                                              *
**                                                                    *
**   INPUT =                                                          *
**      CATALOG PARAMETER LIST (CPL) AND FIELD PARAMETER LIST (CTGFL) *
**      INITIALIZED FOR EXTRACT, CATALOG RECORD FOR NAMED DATA SET    *
**      IN RECORD AREA 1 (RAB1).                                      *
**                                                                    *
**   OUTPUT =                                                         *
**      ALL NON-DUPLICATE VOLUME INFORMATION INSERTED IN THE CALLER'S *
**      VOLUME LIST. VOLUMES ARE SORTED BY DEVICE TYPE BOTH WITHIN    *
**      AND OUTSIDE THE MINIMUM UNIT COUNT - DEVICE TYPES WITHIN THE  *
**      MUC ARE NOT ORDERED IN ANY PARTICULAR SEQUENCE NOR ARE THEY   *
**      RELATED TO THE DEVICE TYPES OUTSIDE THE MUC BY ANY ORDERING   *
**      RELATIONSHIP.                                                 *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0124
*                                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE VOLUME LIST POINTERS                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0124
*   SVEND=CTGWAVL+SVCM*LENGTH(CTGVL);/* END OF VOLUME LIST           */
         LA    @10,104                                             0124
         AL    @10,CCAR4REC(,R11)                                  0124
         L     @05,CCACPL(,R11)                                    0124
         L     @05,CTGWKA(,@05)                                    0124
         SLR   @15,@15                                             0124
         IC    @15,SVCM(,@10)                                      0124
         MH    @15,@CH00075                                        0124
         AL    @15,CTGWAVL(,@05)                                   0124
         ST    @15,SVEND(,@10)                                     0124
*   SVMUC=SVEND;                    /* SET MUC TO END OF VOL LIST    */
         ST    @15,SVMUC(,@10)                                     0125
*   SVSTART=SVEND;                  /* SET ADDRESS OF FIRST VOLUME TO
*                                      END OF VOLUME LIST, INDICATES
*                                      NO ENTRIES                    */
         ST    @15,SVSTART(,@10)                                   0126
*   IF RCDID=CTGTALIN×              /* IF ENTRY IS NON-VSAM OR       */
*       RCDID=CTGTUCAT THEN                                        0127
         L     @10,CCAURAB(,R11)                                   0127
         L     @10,CCACPE1(,@10)                                   0127
         CLI   RCDID(@10),C'A'                                     0127
         BE    @RT00127                                            0127
         CLI   RCDID(@10),C'U'                                     0127
         BE    @RT00127                                            0127
*     ;                             /* USER CATALOG DO NOT RETURN CRA
*                                      VOLUME INFORMATION            */
*   ELSE                            /* NOT NON-VSAM OR UCATALOG      */
*     DO;                           /* TEST FOR CRA                  */
*       IF RCDCRACI^=N THEN         /* IF RECOVERABLE CATALOG        */
         L     @10,CCAURAB(,R11)                                   0130
         L     @10,CCACPE1(,@10)                                   0130
         ICM   @05,7,RCDCRACI(@10)                                 0130
         BZ    @RF00130                                            0130
*         IF RCDCRADT^=N THEN       /* AND CRA DEVICE TYPE IN RCD, 0131
*                                      PLACE CRA VOLUME INFO IN THE
*                                      VOLUME LIST                   */
         SLR   @05,@05                                             0131
         CL    @05,RCDCRADT(,@10)                                  0131
         BE    @RF00131                                            0131
*           DO;                                                    0132
*             SVVPT=ADDR(SWKAS);    /* SET ADDRESS OF VOL INFO FOR 0133
*                                      INSERTION INTO VOLUME LIST    */
*                                                                  0133
         LA    @15,104                                             0133
         AL    @15,CCAR4REC(,R11)                                  0133
         LA    @14,SWKAS(,@15)                                     0133
         ST    @14,SVVPT(,@15)                                     0133
*             /*******************************************************/
*             /*                                                     */
*             /* CRA VOLUME INFORMATION TO WORKAREA TO ENABLE        */
*             /* INSERTION INTO VOLUME LIST                          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0134
*             SVODEVTY=RCDCRADT;    /* CRA DEVICE TYPE               */
         MVC   SVODEVTY(4,@14),RCDCRADT(@10)                       0134
*             SVOVOLSE=RCDCRAVL;    /* CRA VOLUME SERIAL             */
         MVC   SVOVOLSE(6,@14),RCDCRAVL(@10)                       0135
*             SVOFILES=N;           /* SET FILE SEQUENCE TO ZERO     */
         STH   @05,SVOFILES(,@14)                                  0136
*             SVOVOLFL=SVPRIVOL;    /* INDICATE PRIME VOLUME         */
         MVC   SVOVOLFL(1,@14),SVPRIVOL                            0137
*             SVINMUC=ON;           /* INDICATE VOLUME TO BE PUT   0138
*                                      WITHIN MUC                    */
*                                                                  0138
         OI    SVINMUC(@15),B'10000000'                            0138
*             /*******************************************************/
*             /*                                                     */
*             /* PUT CRA VOLUME INFORMATION IN VOLUME LIST           */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0139
*Z004SLIV:                                                         0139
*             CALL IGGPSLIV;                                       0139
Z004SLIV BAL   @14,IGGPSLIV                                        0139
*             SVINMUC=OFF;          /* MUC INSERTION FLAG OFF        */
         L     @10,CCAR4REC(,R11)                                  0140
         NI    SVINMUC+104(@10),B'01111111'                        0140
*           END;                                                   0141
*         ELSE                                                     0142
*           ;                       /* CRA DEVICE TYPE NOT GIVEN     */
@RF00131 DS    0H                                                  0143
*       ELSE                                                       0143
*         ;                         /* NOT RECOVERABLE CATALOG       */
@RF00130 DS    0H                                                  0144
*     END;                          /* END CRA VOLUME PROCESSING     */
*   IF RCDID=CTGTCL                 /* ENTRY TYPE IS CLUSTER OR      */
*       ×RCDID=CTGTAIX THEN         /* ALTERNATE INDEX               */
*                                                                  0145
@RT00127 L     @10,CCAURAB(,R11)                                   0145
         L     @10,CCACPE1(,@10)                                   0145
         CLI   RCDID(@10),C'C'                                     0145
         BE    @RT00145                                            0145
         CLI   RCDID(@10),C'G'                                     0145
         BNE   @RF00145                                            0145
@RT00145 DS    0H                                                  0146
*     /***************************************************************/
*     /*                                                             */
*     /* CALL SUPER LOCATE CLUSTER/AIX PROCESSING                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0146
*Z005SLCG:                                                         0146
*     CALL IGGPSLCG;                                               0146
Z005SLCG BAL   @14,IGGPSLCG                                        0146
*   ELSE                            /* NOT CLUSTER OR AIX            */
*     IF RCDID=CTGTPATH THEN        /* ENTRY TYPE IS PATH            */
*                                                                  0147
         B     @RC00145                                            0147
@RF00145 L     @10,CCAURAB(,R11)                                   0147
         L     @10,CCACPE1(,@10)                                   0147
         CLI   RCDID(@10),C'R'                                     0147
         BNE   @RF00147                                            0147
*       /*************************************************************/
*       /*                                                           */
*       /* CALL SUPER LOCATE PATH PROCESSING                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0148
*Z006SLR:                                                          0148
*       CALL IGGPSLR;                                              0148
Z006SLR  BAL   @14,IGGPSLR                                         0148
*     ELSE                          /* NOT CLUSTER, AIX OR PATH      */
*       IF RCDID=CTGTALIN           /* ENTRY TYPE IS ALIEN           */
*           ×RCDID=CTGTINDX         /* OR INDEX                      */
*           ×RCDID=CTGTUCAT THEN    /* OR USER CATALOG               */
*                                                                  0149
         B     @RC00147                                            0149
@RF00147 L     @10,CCAURAB(,R11)                                   0149
         L     @10,CCACPE1(,@10)                                   0149
         CLI   RCDID(@10),C'A'                                     0149
         BE    @RT00149                                            0149
         CLI   RCDID(@10),C'I'                                     0149
         BE    @RT00149                                            0149
         CLI   RCDID(@10),C'U'                                     0149
         BNE   @RF00149                                            0149
@RT00149 DS    0H                                                  0150
*         /***********************************************************/
*         /*                                                         */
*         /* CALL SUPER LOCATE ELEMENTARY ENTRY PROCESSING CALL TO   */
*         /* MODULE IGG0CLAM                                         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0150
*Z007SLEL:                                                         0150
*         CALL IGGPSLEL;                                           0150
Z007SLEL L     @15,@CV00038                                        0150
         BALR  @14,@15                                             0150
*       ELSE                        /* RECORD TYPE IS DATA           */
*         DO;                                                      0151
         B     @RC00149                                            0151
@RF00149 DS    0H                                                  0152
*           SLSAGON=RCDCINO;        /* SAVE RECORD CI NUMBER         */
*                                                                  0152
         L     @10,CCAR4REC(,R11)                                  0152
         L     @05,CCAURAB(,R11)                                   0152
         L     @05,CCACPE1(,@05)                                   0152
         MVC   SLSAGON+104(3,@10),RCDCINO(@05)                     0152
*           /*********************************************************/
*           /*                                                       */
*           /* CALL SUPER LOCATE UPGRADE PROCESSING                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0153
*Z008SLY:                                                          0153
*           CALL IGGPSLY;                                          0153
Z008SLY  BAL   @14,IGGPSLY                                         0153
*           IF CCACD1=RCS THEN      /* IF NO ERROR                   */
         CLI   CCACD1(R11),0                                       0154
         BNE   @RF00154                                            0154
*             DO;                                                  0155
*               IF SLSAGON=RCDCINO THEN                            0156
         L     @10,CCAR4REC(,R11)                                  0156
         L     @05,CCAURAB(,R11)                                   0156
         L     @05,CCACPE1(,@05)                                   0156
         CLC   SLSAGON+104(3,@10),RCDCINO(@05)                     0156
         BE    @RT00156                                            0156
*                 ;                 /* BASE DATA RECORD IN RECORD  0157
*                                      AREA 1                        */
*               ELSE                /* NO - MUST BE RETREIVED        */
*                 DO;               /* RETRIEVE BASE DATA RCD        */
*                   CCASRID=SLSAGON;/* CI NUMBER OF DATA RECORD      */
         L     @10,CCAR4REC(,R11)                                  0159
         MVC   CCASRID(3,R11),SLSAGON+104(@10)                     0159
*                   DO;                                            0160
*                     CCAF1KEY=OFF; /* GET BY CI NO.                 */
*                     CCAF1KGE=OFF; /* NOT GET NEXT                  */
*                     CCAF1UP=OFF;  /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0163
*                     CCAURAB=ADDR(CCARAB1);/* SET RAB PTR           */
*                                                                  0164
         LA    @10,CCARAB1(,R11)                                   0164
         ST    @10,CCAURAB(,R11)                                   0164
*                     /***********************************************/
*                     /*                                             */
*                     /* CALL TO MODULE IGG0CLBI                     */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0165
*Z010GET:                                                          0165
*                     CALL IGGPGET; /* GET RECORD                    */
Z010GET  L     @15,@CV00037                                        0165
         BALR  @14,@15                                             0165
*                   END;                                           0166
*                   IF CCACD1=RCS THEN/* ERROR IN GET                */
         CLI   CCACD1(R11),0                                       0167
         BNE   @RF00167                                            0167
*                     IF RCDID^=CTGTDATA THEN/* NO - WAS DATA RECORD
*                                      OBTAINED                      */
*                                                                  0168
         L     @10,CCAURAB(,R11)                                   0168
         L     @10,CCACPE1(,@10)                                   0168
         CLI   RCDID(@10),C'D'                                     0168
         BE    @RF00168                                            0168
*                       /*********************************************/
*                       /*                                           */
*                       /* NO - ERROR, DATA RECORD NOT RETRIEVED SET */
*                       /* CCAMODID='AA', CCAREASN=RSN6,             */
*                       /* CCARETRN=RCCATBAL                         */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0169
*                       CCAPROB=IGGSEGID+(RSN6*K256)+RCCATBAL;     0169
         MVC   CCAPROB(4,R11),@CF03005                             0169
*                     ELSE                                         0170
*                       ;           /* YES - DATA RECORD RETRIEVED 0170
*                                      PROCESS VOLUME ENTRIES        */
@RF00168 DS    0H                                                  0171
*                   ELSE                                           0171
*                     ;             /* ERROR IN GET                  */
@RF00167 DS    0H                                                  0172
*                 END;                                             0172
*               IF CCACD1^=RCS THEN                                0173
@RT00156 CLI   CCACD1(R11),0                                       0173
         BNE   @RT00173                                            0173
*                 ;                 /* WAS ERROR DETECTED            */
*               ELSE                /* NO ERROR DETECTED             */
*                 DO;               /* INSERT VOL IN VOL LIST        */
*                   SVINMUC=OFF;    /* INSERT VOLUMES OUTSIDE MINIMUM
*                                      UNIT COUNT                    */
*                                                                  0176
         L     @10,CCAR4REC(,R11)                                  0176
         NI    SVINMUC+104(@10),B'01111111'                        0176
*                   /*************************************************/
*                   /*                                               */
*                   /* CALL TO MODULE IGG0CLAM                       */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0177
*Z012SLEL:                                                         0177
*                   CALL IGGPSLEL;                                 0177
Z012SLEL L     @15,@CV00038                                        0177
         BALR  @14,@15                                             0177
*                 END;                                             0178
*             END;                                                 0179
*           ELSE                                                   0180
*             ;                     /* ERROR IN UPGRADE PROCESS.     */
@RF00154 DS    0H                                                  0181
*         END;                                                     0181
*                                                                  0181
@RC00154 DS    0H                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE VOLUME ENTRIES IN VOLUME LIST TO THE BEGINNING OF THE    */
*   /* CALLER'S WORKAREA                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0182
*   RFY                                                            0182
*    (RMVLEN2) RSTD;                /* RESTRICT REGISTER 5           */
@RC00149 DS    0H                                                  0182
@RC00147 DS    0H                                                  0182
@RC00145 DS    0H                                                  0183
*   RMVLEN1=CTGWAVCT*LENGTH(CTGVL); /* LENGTH OF MOVE                */
         L     @10,CCACPL(,R11)                                    0183
         L     @10,CTGWKA(,@10)                                    0183
         LH    RMVLEN1,CTGWAVCT(,@10)                              0183
         MH    RMVLEN1,@CH00075                                    0183
*   IF((RMVLEN1^=N)&(SVSTART^=CTGWAVL)) THEN/* IF LIST NOT FULL OR 0184
*                                      EMPTY, SHIFT ENTRIES TO     0184
*                                      BEGINNING OF VOLUME LIST      */
         LTR   RMVLEN1,RMVLEN1                                     0184
         BZ    @RF00184                                            0184
         L     @01,CCAR4REC(,R11)                                  0184
         L     @15,SVSTART+104(,@01)                               0184
         L     @10,CTGWAVL(,@10)                                   0184
         CR    @15,@10                                             0184
         BE    @RF00184                                            0184
*     DO;                                                          0185
*       RMVFRM=SVSTART;             /* MOVE FROM ADDRESS             */
         LR    RMVFRM,@15                                          0186
*       RMVTO=CTGWAVL;              /* MOVE TO ADDRESS               */
         LR    RMVTO,@10                                           0187
*       RMVLEN2=RMVLEN1;            /* LENGTH OF FIELD TO MOVE       */
         LR    RMVLEN2,RMVLEN1                                     0188
*       MVCL(RMVTO,RMVFRM);         /* SHIFT ENTRIES IN VOLUME LIST
*                                      TO BEGINNING OF THE LIST      */
         MVCL  RMVTO,RMVFRM                                        0189
*       RFY                                                        0190
*        (RMVLEN2) UNRSTD;          /* RELEASE REGISTER 5            */
*     END;                                                         0191
*   ELSE                                                           0192
*     ;                             /* NO SHIFT REQUIRED             */
@RF00184 DS    0H                                                  0193
*   IF CCACD1=RCS THEN              /* IF NO ERROR AND THE NUMBER    */
         CLI   CCACD1(R11),0                                       0193
         BNE   @RF00193                                            0193
*     IF SVCT>SVCM THEN             /* OF VOLUMES FOUND IS GT NUMBER
*                                      OF ENTRIES IN LIST            */
         LA    @10,104                                             0194
         AL    @10,CCAR4REC(,R11)                                  0194
         CLC   SVCT(1,@10),SVCM(@10)                               0194
         BNH   @RF00194                                            0194
*       DO;                                                        0195
*         CTGFDBK=SVCT*LENGTH(CTGVL);/* SET SIZE OF AREA REQUIRED FOR
*                                      VOLUME LIST                   */
*                                                                  0196
         L     @05,CCACPL(,R11)                                    0196
         SLR   @15,@15                                             0196
         IC    @15,SVCT(,@10)                                      0196
         MH    @15,@CH00075                                        0196
         STH   @15,CTGFDBK(,@05)                                   0196
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AA', CCAREASN=RSN0, CCARETRN=RCVLSZ       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0197
*         CCAPROB=IGGSEGID+(RSN0*K256)+RCVLSZ;                     0197
         MVC   CCAPROB(4,R11),@CF03006                             0197
*       END;                                                       0198
*     ELSE                          /* SET MINIMUM UNIT COUNT        */
*       CTGWAUCT=MAX(CTGWAUCT,MAX(((SVMUC-SVSTART)/LENGTH(CTGVL)),1));
         B     @RC00194                                            0199
@RF00194 L     @10,CCACPL(,R11)                                    0199
         L     @10,CTGWKA(,@10)                                    0199
         LA    @05,104                                             0199
         AL    @05,CCAR4REC(,R11)                                  0199
         L     @00,SVMUC(,@05)                                     0199
         SL    @00,SVSTART(,@05)                                   0199
         SRDA  @00,32                                              0199
         D     @00,@CF00075                                        0199
         LA    @05,1                                               0199
         CR    @01,@05                                             0199
         BNL   *+6
         LR    @01,@05                                             0199
         LH    @05,CTGWAUCT(,@10)                                  0199
         CR    @05,@01                                             0199
         BNL   *+6
         LR    @05,@01                                             0199
         STH   @05,CTGWAUCT(,@10)                                  0199
*                                   /* MUC                           */
*   ELSE                                                           0200
*     ;                             /* ERROR OCCURRED                */
@RF00193 DS    0H                                                  0201
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00193 BAL   @14,EXIT                                            0201
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPSLCG');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPSLCG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0204
@EF00002 DS    0H                                                  0204
@ER00002 BR    @14                                                 0204
@PB00002 DS    0H                                                  0205
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0206
*/********************************************************************/
*/*                                                                  */
*/*        IGGPSLCG  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0206
*IGGPSLCG:                                                         0206
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0206
IGGPSLCG DS    0H                                                  0207
*Z014:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z014SLCG:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0207
*    (R5,                                                          0207
*     R6,                                                          0207
*     R7,                                                          0207
*     R8,                                                          0207
*     R9,                                                          0207
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z014     DS    0H                                                  0207
Z014SLCG DS    0H                                                  0208
*   RFY                                                            0208
*    (R2,                                                          0208
*     R3,                                                          0208
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*                                                                  0211
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME = IGGPSLCG(IGG0CLAA)                                 *
**                                                                    *
**   DESCRIPTIVE NAME = SUPER LOCATE CLUSTER/AIX PROCESSING           *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION IS CALLED BY IGGPSLEN WHEN A CLUSTER OR     *
**      ALTERNATE INDEX ENTRY WAS READ FOR THE NAMED DATA SET.  IT    *
**      CALLS THE NECESSARY SUB-FUNCTIONS TO OBTAIN THE VOLUME        *
**      INFORMATION FOR THE VOLUMES ASSOCIATED WITH THE CLUSTER       *
**      OR ALTERNATE INDEX.                                           *
**                                                                    *
**   INPUT =                                                          *
**      INITIALIZED CPL AND FPLS TO EXTRACT GROUP OCCURRENCES, ENTRY  *
**      FOR NAMED DATA SET IN RECORD AREA 1, CCA INITIALIZED FOR      *
**      EXTRACT.                                                      *
**                                                                    *
**   OUTPUT =                                                         *
**      ALL NON-DUPLICATE VOLUME INFORMATION FOR NAMED ENTRY IN THE   *
**      VOLUME LIST.  VOLUME ENTRIES WILL BE LOCATED AT HIGH END OF   *
**      THE VOLUME LIST UPON EXITING FROM THE ROUTINE.                *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0211
*   SVSAVE=RCDID;                   /* SAVE ENTRY TYPE - C OR G      */
*                                                                  0211
         L     @10,CCAR4REC(,R11)                                  0211
         L     @05,CCAURAB(,R11)                                   0211
         L     @05,CCACPE1(,@05)                                   0211
         MVC   SVSAVE+104(1,@10),RCDID(@05)                        0211
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL EXTRACT PROCESSING - CALL TO MODULE IGG0CLAZ             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0212
*Z015EXT:                                                          0212
*   CALL IGGPEXT;                                                  0212
Z015EXT  L     @15,@CV00036                                        0212
         BALR  @14,@15                                             0212
*   IF CCACD1^=RCS THEN                                            0213
         CLI   CCACD1(R11),0                                       0213
         BNE   @RT00213                                            0213
*     ;                             /* EXIT IF ERROR IN EXTRACT      */
*   ELSE                            /* NO ERROR, TEST IF DATA      0215
*                                      RETURNED                      */
*     DO;                                                          0215
*       IF CTGFLPT(1)=N THEN        /* ERROR - NO GROUP ASSOCIATION
*                                      OCCURRENCES FOUND FOR CLUSTER
*                                      OR AIX ENTRY                  */
*                                                                  0216
         L     @10,CCAR4REC(,R11)                                  0216
         LA    @10,SFPLS(,@10)                                     0216
         ICM   @05,15,CTGFLPT(@10)                                 0216
         BNZ   @RF00216                                            0216
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AA', CCAREASN=RSN2, CCARETRN=RCCATBAL     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0217
*         CCAPROB=IGGSEGID+(RSN2*K256)+RCCATBAL;                   0217
         MVC   CCAPROB(4,R11),@CF03008                             0217
*       ELSE                        /* OCCURRENCES FOUND             */
*         DO;                                                      0218
         B     @RC00216                                            0218
@RF00216 DS    0H                                                  0219
*           IF((CTGFLNG(1)/LENGTH(SAGO)>ONE)&(SAGOT(2)=CTGTINDX)) THEN
         L     @10,CCAR4REC(,R11)                                  0219
         LA    @05,SFPLS(,@10)                                     0219
         L     @00,CTGFLNG(,@05)                                   0219
         SRDA  @00,32                                              0219
         D     @00,@CF00061                                        0219
         CH    @01,@CH00040                                        0219
         BNH   @RF00219                                            0219
         AH    @10,@CH00205                                        0219
         CLI   SAGOT+4(@10),C'I'                                   0219
         BNE   @RF00219                                            0219
*                                   /* IF INDEX ASSOCIATION RETRIEVE
*                                      INDEX RECORD                  */
*             DO;                                                  0220
*                                                                  0220
*               /*****************************************************/
*               /*                                                   */
*               /* RETRIEVE INDEX RECORD -                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0221
*               CCASRID=SAGON(2);   /* SET CI NUMBER OF ENTRY        */
         MVC   CCASRID(3,R11),SAGON+4(@10)                         0221
*               DO;                                                0222
*                 CCAF1KEY=OFF;     /* GET BY CI NO.                 */
*                 CCAF1KGE=OFF;     /* NOT GET NEXT                  */
*                 CCAF1UP=OFF;      /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0225
*                 CCAURAB=ADDR(CCARAB1);/* SET RAB PTR               */
*                                                                  0226
         LA    @10,CCARAB1(,R11)                                   0226
         ST    @10,CCAURAB(,R11)                                   0226
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLBI                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0227
*Z018GET:                                                          0227
*                 CALL IGGPGET;     /* GET RECORD                    */
Z018GET  L     @15,@CV00037                                        0227
         BALR  @14,@15                                             0227
*               END;                                               0228
*               IF CCACD1^=RCS THEN                                0229
         CLI   CCACD1(R11),0                                       0229
         BNE   @RT00229                                            0229
*                 ;                 /* EXIT IF ERROR                 */
*               ELSE                /* NO ERROR DETECTED             */
*                 IF RCDID^=CTGTINDX THEN/* IF NOT ENTRY TYPE I ERROR
*                                      - INCORRECT ENTRY TYPE      0231
*                                      OBTAINED                      */
*                                                                  0231
         L     @10,CCAURAB(,R11)                                   0231
         L     @10,CCACPE1(,@10)                                   0231
         CLI   RCDID(@10),C'I'                                     0231
         BE    @RF00231                                            0231
*                   /*************************************************/
*                   /*                                               */
*                   /* SET CCAMODID='AA', CCAREASN=RSN4,             */
*                   /* CCARETRN=RCCATBAL                             */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0232
*                   CCAPROB=IGGSEGID+(RSN4*K256)+RCCATBAL;         0232
         MVC   CCAPROB(4,R11),@CF03011                             0232
*                 ELSE              /* CORRECT ENTRY TYPE READ       */
*                   DO;                                            0233
         B     @RC00231                                            0233
@RF00231 DS    0H                                                  0234
*                     SVINMUC=ON;   /* INSERT VOLUME WITHIN MUC      */
*                                                                  0234
         L     @10,CCAR4REC(,R11)                                  0234
         OI    SVINMUC+104(@10),B'10000000'                        0234
*                     /***********************************************/
*                     /*                                             */
*                     /* CALL ELEMENTARY ENTRY PROCESSING CALL TO    */
*                     /* MODULE IGG0CLAM                             */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0235
*Z020SLEL:                                                         0235
*                     CALL IGGPSLEL;                               0235
Z020SLEL L     @15,@CV00038                                        0235
         BALR  @14,@15                                             0235
*                   END;                                           0236
*             END;                                                 0237
*           ELSE                                                   0238
*             ;                     /* NO INDEX ASSOCIATION          */
@RF00219 DS    0H                                                  0239
*           IF CCACD1^=RCS THEN                                    0239
@RC00219 CLI   CCACD1(R11),0                                       0239
         BNE   @RT00239                                            0239
*             ;                     /* EXIT IF ERROR                 */
*           ELSE                    /* CONTINUE - NO ERROR           */
*             DO;                                                  0241
*                                                                  0241
*               /*****************************************************/
*               /*                                                   */
*               /* CALL IGGPGET TO RETRIEVE DATA RECORD              */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0242
*               CCASRID=SAGON(1);   /* SET CI NUMBER OF ENTRY        */
         L     @10,CCAR4REC(,R11)                                  0242
         MVC   CCASRID(3,R11),SAGON+192(@10)                       0242
*               DO;                                                0243
*                 CCAF1KEY=OFF;     /* GET BY CI NO.                 */
*                 CCAF1KGE=OFF;     /* NOT GET NEXT                  */
*                 CCAF1UP=OFF;      /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0246
*                 CCAURAB=ADDR(CCARAB1);/* SET RAB PTR               */
*                                                                  0247
         LA    @10,CCARAB1(,R11)                                   0247
         ST    @10,CCAURAB(,R11)                                   0247
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLBI                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0248
*Z022GET:                                                          0248
*                 CALL IGGPGET;     /* GET RECORD                    */
Z022GET  L     @15,@CV00037                                        0248
         BALR  @14,@15                                             0248
*               END;                                               0249
*               IF CCACD1=RCS THEN  /* IF NO ERROR IN GET            */
         CLI   CCACD1(R11),0                                       0250
         BNE   @RF00250                                            0250
*                 IF RCDID^=CTGTDATA THEN/* ERROR IF DATA RECORD NOT
*                                      READ                          */
*                                                                  0251
         L     @10,CCAURAB(,R11)                                   0251
         L     @10,CCACPE1(,@10)                                   0251
         CLI   RCDID(@10),C'D'                                     0251
         BE    @RF00251                                            0251
*                   /*************************************************/
*                   /*                                               */
*                   /* SET CCAMODID='AA', CCAREASN=RSN6,             */
*                   /* CCARETRN=RCCATBAL                             */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0252
*                   CCAPROB=IGGSEGID+(RSN6*K256)+RCCATBAL;         0252
         MVC   CCAPROB(4,R11),@CF03005                             0252
*                 ELSE              /* DATA RECORD OBTAINED          */
*                   IF SVSAVE=CTGTCL THEN/* ORIGINAL ENTRY TYPE C    */
         B     @RC00251                                            0253
@RF00251 L     @10,CCAR4REC(,R11)                                  0253
         LA    @05,104                                             0253
         ALR   @05,@10                                             0253
         CLI   SVSAVE(@05),C'C'                                    0253
         BNE   @RF00253                                            0253
*                     DO;                                          0254
*                       SLSAGON=SAGON(1);/* SAVE CI NUMBER OF BASE 0255
*                                      DATA SET DATA RECORD          */
*                                                                  0255
         MVC   SLSAGON(3,@05),SAGON+192(@10)                       0255
*                       /*********************************************/
*                       /*                                           */
*                       /* CALL SUPER LOCATE UPGRADE PROCESSING      */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0256
*Z024SLY:                                                          0256
*                       CALL IGGPSLY;                              0256
Z024SLY  BAL   @14,IGGPSLY                                         0256
*                       IF CCACD1^=RCS THEN                        0257
         CLI   CCACD1(R11),0                                       0257
         BNE   @RT00257                                            0257
*                         ;         /* RETURN TO CALLER IF ERROR     */
*                       ELSE        /* CONTINUE, NO ERROR            */
*                         IF RCDCINO^=SLSAGON THEN/* IS BASE DATA SET
*                                      DATA RECORD IN RAB1           */
         L     @10,CCAURAB(,R11)                                   0259
         L     @10,CCACPE1(,@10)                                   0259
         LA    @05,104                                             0259
         AL    @05,CCAR4REC(,R11)                                  0259
         CLC   RCDCINO(3,@10),SLSAGON(@05)                         0259
         BE    @RF00259                                            0259
*                           DO;     /* NO - RETRIEVE BASE CLUSTER  0260
*                                      DATA RECORD                   */
*                             CCASRID=SLSAGON;/* RECORD CI NUMBER    */
         MVC   CCASRID(3,R11),SLSAGON(@05)                         0261
*                             DO;                                  0262
*                               CCAF1KEY=OFF;/* GET BY CI NO.        */
*                               CCAF1KGE=OFF;/* NOT GET NEXT         */
*                               CCAF1UP=OFF;/* NOT GET UPD           */
         NI    CCAF1KEY(R11),B'11100101'                           0265
*                               CCAURAB=ADDR(CCARAB1);/* SET RAB PTR */
*                                                                  0266
         LA    @10,CCARAB1(,R11)                                   0266
         ST    @10,CCAURAB(,R11)                                   0266
*                               /*************************************/
*                               /*                                   */
*                               /* CALL TO MODULE IGG0CLBI           */
*                               /*                                   */
*                               /*************************************/
*                                                                  0267
*Z026GET:                                                          0267
*                               CALL IGGPGET;/* GET RECORD           */
Z026GET  L     @15,@CV00037                                        0267
         BALR  @14,@15                                             0267
*                             END;                                 0268
*                             IF CCACD1=RCS THEN/* IF NO GET ERROR   */
         CLI   CCACD1(R11),0                                       0269
         BNE   @RF00269                                            0269
*                               IF RCDID^=CTGTDATA THEN/* SET ERROR
*                                      CODE IF DATA RECORD NOT READ  */
*                                                                  0270
         L     @10,CCAURAB(,R11)                                   0270
         L     @10,CCACPE1(,@10)                                   0270
         CLI   RCDID(@10),C'D'                                     0270
         BE    @RF00270                                            0270
*                                 /***********************************/
*                                 /*                                 */
*                                 /* SET CCAMODID='AA',              */
*                                 /* CCAREASN=RSN6, CCARETRN=RCCATBAL*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  0271
*                                 CCAPROB=IGGSEGID+(RSN6*K256)+RCCATBAL
*                                 ;                                0271
         MVC   CCAPROB(4,R11),@CF03005                             0271
*                               ELSE                               0272
*                                 ; /* DATA RECORD WAS READ          */
@RF00270 DS    0H                                                  0273
*                             ELSE                                 0273
*                               ;   /* ERROR IN GET PROCESSING       */
@RF00269 DS    0H                                                  0274
*                           END;                                   0274
*                         ELSE                                     0275
*                           ;       /* DATA RECORD STILL IN RAB1, NO
*                                      UPGRADE PROCESSING OCCURRED   */
@RF00259 DS    0H                                                  0276
*                     END;          /* END UPGRADE PROCESSING        */
*                   ELSE                                           0277
*                     ;             /* ORIGINAL ENTRY G (AIX)        */
@RF00253 DS    0H                                                  0278
*               ELSE                                               0278
*                 ;                 /* ERROR IN GET                  */
@RF00250 DS    0H                                                  0279
*               IF CCACD1^=RCS THEN                                0279
@RC00250 CLI   CCACD1(R11),0                                       0279
         BNE   @RT00279                                            0279
*                 ;                 /* EXIT IF ERROR                 */
*               ELSE                /* CONTINUE, NO ERROR            */
*                 DO;                                              0281
*                   SVINMUC=OFF;    /* INSERT VOLUME OUTSIDE MUC     */
*                                                                  0282
         L     @10,CCAR4REC(,R11)                                  0282
         NI    SVINMUC+104(@10),B'01111111'                        0282
*                   /*************************************************/
*                   /*                                               */
*                   /* CALL ELEMENTARY ENTRY PROCESSING. CALL TO     */
*                   /* MODULE IGG0CLAM                               */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0283
*Z028SLEL:                                                         0283
*                   CALL IGGPSLEL;                                 0283
Z028SLEL L     @15,@CV00038                                        0283
         BALR  @14,@15                                             0283
*                 END;                                             0284
*             END;                                                 0285
@RT00279 DS    0H                                                  0286
*         END;                                                     0286
@RT00239 DS    0H                                                  0287
*     END;                                                         0287
@RC00216 DS    0H                                                  0288
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RT00213 BAL   @14,EXIT                                            0288
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPSLR');           /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPSLR'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0291
@EF00003 DS    0H                                                  0291
@ER00003 BR    @14                                                 0291
@PB00003 DS    0H                                                  0292
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0293
*/********************************************************************/
*/*                                                                  */
*/*        IGGPSLR  -  PROCEDURE  INTERNALLY  CALLED  NESTED         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0293
*IGGPSLR:                                                          0293
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0293
IGGPSLR  DS    0H                                                  0294
*Z029:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z029SLR:                           /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0294
*    (R5,                                                          0294
*     R6,                                                          0294
*     R7,                                                          0294
*     R8,                                                          0294
*     R9,                                                          0294
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z029     DS    0H                                                  0294
Z029SLR  DS    0H                                                  0295
*   RFY                                                            0295
*    (R2,                                                          0295
*     R3,                                                          0295
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*                                                                  0298
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME = IGGPSLR(IGG0CLAA)                                  *
**                                                                    *
**   DESCRIPTIVE NAME = SUPER LOCATE PATH PROCESSING                  *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION IS CALLED BY IGGPSLEN WHEN A PATH ENTRY WAS *
**      READ FOR THE NAMED DATA SET. IT CALLS THE NECESSARY SUB-      *
**      FUNCTIONS TO OBTAIN THE VOLUME INFORMATION FOR THE VOLUMES    *
**      ASSOCIATED WITH THE SPECIFIED PATH.                           *
**                                                                    *
**   INPUT =                                                          *
**      CPL AND FPLS INITIALIZED TO EXTRACT GROUP OCCURRENCES, CCA    *
**      INITIALIZED FOR EXTRACT, ENTRY FOR NAMED DATA SET IN RAB1.    *
**                                                                    *
**   OUTPUT =                                                         *
**      ALL NON-DUPLICATE VOLUME INFORMATION OF THE VOLUMES           *
**      ASSOCIATED WITH THE SPECIFIED PATH. VOLUME ENTRIES WILL BE    *
**      LOCATED AT THE HIGH END OF THE VOLUME LIST UPON EXITING FROM  *
**      THIS ROUTINE.                                                 *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0298
*                                                                  0298
*   /*****************************************************************/
*   /*                                                               */
*   /* EXTRACT GROUP OCCURRENCES FOR PATH - CALL EXTRACT - CALL TO   */
*   /* MODULE IGG0CLAZ                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0298
*Z030EXT:                                                          0298
*   CALL IGGPEXT;                                                  0298
Z030EXT  L     @15,@CV00036                                        0298
         BALR  @14,@15                                             0298
*   IF CCACD1^=RCS THEN             /* IF ERROR IN EXTRACT           */
         CLI   CCACD1(R11),0                                       0299
         BE    @RF00299                                            0299
*     CALL EXIT;                    /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0300
*   ELSE                                                           0301
*     ;                             /* NO ERROR IN EXTRACT           */
@RF00299 DS    0H                                                  0302
*   IF CTGFLPT(1)=N THEN            /* NO DATA RETURNED              */
         L     @10,CCAR4REC(,R11)                                  0302
         LA    @10,SFPLS(,@10)                                     0302
         ICM   @05,15,CTGFLPT(@10)                                 0302
         BNZ   @RF00302                                            0302
*     DO;                           /* SET ERROR CODE - NO PATH GROUP
*                                      OCCURRENCES                   */
*                                                                  0303
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AA', CCAREASN=RSN8, CCARETRN=RCCATBAL       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0304
*       CCAPROB=IGGSEGID+(RSN8*K256)+RCCATBAL;                     0304
         MVC   CCAPROB(4,R11),@CF03014                             0304
*       CALL EXIT;                  /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0305
*     END;                                                         0306
*   ELSE                                                           0307
*     ;                             /* DATA RETURNED FROM EXTRACT    */
@RF00302 DS    0H                                                  0308
*   SVINMUC=ON;                     /* INSERT VOLUME WITHIN MUC      */
         L     @10,CCAR4REC(,R11)                                  0308
         LA    @05,104                                             0308
         ALR   @05,@10                                             0308
         OI    SVINMUC(@05),B'10000000'                            0308
*   SVSAVE=SAGOT(1);                /* SAVE FIRST ASSOCIATION ENTRY
*                                      TYPE - C OR G                 */
         LA    @15,192                                             0309
         ALR   @15,@10                                             0309
         MVC   SVSAVE(1,@05),SAGOT(@15)                            0309
*   SAGOT(1)=N;                     /* CLEAR FIRST ASSOCIATION ENTRY
*                                      TYPE                          */
         MVI   SAGOT(@15),X'00'                                    0310
*   SVGOPTR=ASSOCGC;                /* SET INDEX FOR SECOND EXTRACTED
*                                      ASSOCIATION GROUP OCCURRENCE -
*                                      DATA                          */
         MVI   SVGOPTR(@05),X'02'                                  0311
*   SLCUPDSV=CRGATTR;               /* SAVE PATH ATTRIBUTES FROM PATH
*                                      RECORD                        */
         L     @01,CCAURAB(,R11)                                   0312
         L     @01,CCACPE1(,@01)                                   0312
         MVC   SLCUPDSV(1,@05),CRGATTR(@01)                        0312
*   SVNPTHAS=CTGFLNG(1)/LENGTH(SAGO);/* SAVE NUMBER OF GROUP       0313
*                                      OCCURRENCES IN PATH           */
         LA    @10,SFPLS(,@10)                                     0313
         L     @00,CTGFLNG(,@10)                                   0313
         SRDA  @00,32                                              0313
         D     @00,@CF00061                                        0313
         STH   @01,SVNPTHAS(,@05)                                  0313
*   IF SVSAVE^=CTGTAIX THEN                                        0314
         CLI   SVSAVE(@05),C'G'                                    0314
         BNE   @RT00314                                            0314
*     ;                             /* CONTINUE IF NOT AIX PATH      */
*   ELSE                            /* PATH OVER ALTERNATE INDEX     */
*     DO;                                                          0316
*       SLAIXD=SAGON(SVGOPTR);      /* SAVE AIX DATA CI NUMBER       */
         L     @10,CCAR4REC(,R11)                                  0317
         LA    @05,104                                             0317
         ALR   @05,@10                                             0317
         SLR   @15,@15                                             0317
         IC    @15,SVGOPTR(,@05)                                   0317
         SLA   @15,2                                               0317
         AH    @10,@CH00205                                        0317
         ST    @15,@TF00001                                        0317
         ALR   @15,@10                                             0317
         AL    @15,@CF03039                                        0317
         MVC   SLAIXD(3,@05),SAGON-1(@15)                          0317
*       CCASRID=SAGON(SVGOPTR);     /* SET CI NUMBER FOR GET         */
*                                                                  0318
         AL    @10,@TF00001                                        0318
         AL    @10,@CF03039                                        0318
         MVC   CCASRID(3,R11),SAGON-1(@10)                         0318
*       /*************************************************************/
*       /*                                                           */
*       /* GET ALTERNATE INDEX DATA RECORD                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0319
*       DO;                                                        0319
*         CCAF1KEY=OFF;             /* GET BY CI NO.                 */
*         CCAF1KGE=OFF;             /* NOT GET NEXT                  */
*         CCAF1UP=OFF;              /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0322
*         CCAURAB=ADDR(CCARAB1);    /* SET RAB PTR                   */
*                                                                  0323
         LA    @10,CCARAB1(,R11)                                   0323
         ST    @10,CCAURAB(,R11)                                   0323
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLBI                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0324
*Z033GET:                                                          0324
*         CALL IGGPGET;             /* GET RECORD                    */
Z033GET  L     @15,@CV00037                                        0324
         BALR  @14,@15                                             0324
*       END;                                                       0325
*       IF CCACD1^=RCS THEN         /* EXIT IF ERROR IN GET          */
         CLI   CCACD1(R11),0                                       0326
         BE    @RF00326                                            0326
*         CALL EXIT;                /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0327
*       ELSE                                                       0328
*         ;                         /* NO ERROR IN GET               */
@RF00326 DS    0H                                                  0329
*       IF RCDID^=CTGTDATA THEN     /* ERROR IF NOT DATA RECORD      */
         L     @10,CCAURAB(,R11)                                   0329
         L     @10,CCACPE1(,@10)                                   0329
         CLI   RCDID(@10),C'D'                                     0329
         BE    @RF00329                                            0329
*         DO;                                                      0330
*                                                                  0330
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AA', CCAREASN=RSN10, CCARETRN=RCCATBAL  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0331
*           CCAPROB=IGGSEGID+(RSN10*K256)+RCCATBAL;                0331
         MVC   CCAPROB(4,R11),@CF03017                             0331
*           CALL EXIT;              /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0332
*         END;                                                     0333
*       ELSE                                                       0334
*         ;                         /* DATA RECORD WAS RETRIEVED     */
@RF00329 DS    0H                                                  0335
*       SVGOPTR=SVGOPTR+INCR1;      /* INCREMENT EXTRACTED GROUP   0335
*                                      OCCURRENCE ASSOCIATION INDEX  */
*                                                                  0335
         LA    @10,104                                             0335
         AL    @10,CCAR4REC(,R11)                                  0335
         LA    @05,1                                               0335
         SLR   @15,@15                                             0335
         IC    @15,SVGOPTR(,@10)                                   0335
         ALR   @05,@15                                             0335
         STC   @05,SVGOPTR(,@10)                                   0335
*       /*************************************************************/
*       /*                                                           */
*       /* CALL SUPER LOCATE ELEMENTARY ENTRY PROCESSING. CALL TO    */
*       /* MODULE IGG0CLAM                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0336
*Z035SLEL:                                                         0336
*       CALL IGGPSLEL;                                             0336
Z035SLEL L     @15,@CV00038                                        0336
         BALR  @14,@15                                             0336
*       IF CCACD1^=RCS THEN         /* EXIT IF ENTRY ERROR           */
         CLI   CCACD1(R11),0                                       0337
         BE    @RF00337                                            0337
*         CALL EXIT;                /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0338
*       ELSE                                                       0339
*         ;                         /* NO ENTRY ERROR                */
*                                                                  0339
@RF00337 DS    0H                                                  0340
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TO RETRIEVE AIX INDEX RECORD                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0340
*       CCASRID=SAGON(SVGOPTR);     /* SET AIX CI NUMBER             */
         L     @10,CCAR4REC(,R11)                                  0340
         SLR   @05,@05                                             0340
         IC    @05,SVGOPTR+104(,@10)                               0340
         SLA   @05,2                                               0340
         ALR   @10,@05                                             0340
         MVC   CCASRID(3,R11),SAGON+188(@10)                       0340
*       DO;                                                        0341
*         CCAF1KEY=OFF;             /* GET BY CI NO.                 */
*         CCAF1KGE=OFF;             /* NOT GET NEXT                  */
*         CCAF1UP=OFF;              /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0344
*         CCAURAB=ADDR(CCARAB1);    /* SET RAB PTR                   */
*                                                                  0345
         LA    @10,CCARAB1(,R11)                                   0345
         ST    @10,CCAURAB(,R11)                                   0345
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLBI                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0346
*Z037GET:                                                          0346
*         CALL IGGPGET;             /* GET RECORD                    */
Z037GET  L     @15,@CV00037                                        0346
         BALR  @14,@15                                             0346
*       END;                                                       0347
*       IF CCACD1^=RCS THEN         /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0348
         BE    @RF00348                                            0348
*         CALL EXIT;                /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0349
*       ELSE                                                       0350
*         ;                         /* CONTINUE - NO ERROR           */
@RF00348 DS    0H                                                  0351
*       SVGOPTR=SVGOPTR+INCR1;      /* INCREMENT EXTRACTED GROUP   0351
*                                      OCCURRENCE ASSOCIATION INDEX  */
         LA    @10,104                                             0351
         AL    @10,CCAR4REC(,R11)                                  0351
         LA    @05,1                                               0351
         SLR   @15,@15                                             0351
         IC    @15,SVGOPTR(,@10)                                   0351
         ALR   @05,@15                                             0351
         STC   @05,SVGOPTR(,@10)                                   0351
*       IF RCDID^=CTGTINDX THEN     /* EXIT IF NOT INDEX RECORD      */
         L     @10,CCAURAB(,R11)                                   0352
         L     @10,CCACPE1(,@10)                                   0352
         CLI   RCDID(@10),C'I'                                     0352
         BE    @RF00352                                            0352
*         DO;                       /* ERROR - AIX DATA RECORD NOT 0353
*                                      OBTAINED                      */
*                                                                  0353
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AA', CCAREASN=RSN12, CCARETRN=RCCATBAL  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0354
*           CCAPROB=IGGSEGID+(RSN12*K256)+RCCATBAL;                0354
         MVC   CCAPROB(4,R11),@CF03020                             0354
*           CALL EXIT;              /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0355
*         END;                                                     0356
*       ELSE                                                       0357
*         ;                         /* CONTINUE, NO ERROR            */
*                                                                  0357
@RF00352 DS    0H                                                  0358
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS AIX INDEX RECORD VOLUME OCCURRENCES CALL TO MODULE*/
*       /* IGG0CLAM                                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0358
*Z039SLEL:                                                         0358
*       CALL IGGPSLEL;                                             0358
Z039SLEL L     @15,@CV00038                                        0358
         BALR  @14,@15                                             0358
*       IF CCACD1^=RCS THEN         /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0359
         BE    @RF00359                                            0359
*         CALL EXIT;                /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0360
*       ELSE                                                       0361
*         ;                         /* CONTINUE, NO ERROR            */
@RF00359 DS    0H                                                  0362
*     END;                                                         0362
*   IF(SVGOPTR+INCR1)<=SVNPTHAS THEN/* POSSIBLE INDEX ASSOCIATIONS 0363
*                                      FOR BASE DATA SET             */
@RT00314 L     @10,CCAR4REC(,R11)                                  0363
         LA    @05,104                                             0363
         ALR   @05,@10                                             0363
         SLR   @15,@15                                             0363
         IC    @15,SVGOPTR(,@05)                                   0363
         LA    @14,1                                               0363
         ALR   @14,@15                                             0363
         CH    @14,SVNPTHAS(,@05)                                  0363
         BH    @RF00363                                            0363
*     IF SAGOT(SVGOPTR+INCR1)=CTGTINDX THEN/* INDEX ASSOCIATION    0364
*                                      RETURNED                      */
         SLA   @15,2                                               0364
         AH    @10,@CH00205                                        0364
         ST    @15,@TF00001                                        0364
         ALR   @15,@10                                             0364
         CLI   SAGOT(@15),C'I'                                     0364
         BNE   @RF00364                                            0364
*       DO;                                                        0365
*         CCASRID=SAGON(SVGOPTR+INCR1);/* SET INDEX CI NUMBER FOR GET*/
         AL    @10,@TF00001                                        0366
         MVC   CCASRID(3,R11),SAGON(@10)                           0366
*         DO;                                                      0367
*           CCAF1KEY=OFF;           /* GET BY CI NO.                 */
*           CCAF1KGE=OFF;           /* NOT GET NEXT                  */
*           CCAF1UP=OFF;            /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0370
*           CCAURAB=ADDR(CCARAB1);  /* SET RAB PTR                   */
*                                                                  0371
         LA    @10,CCARAB1(,R11)                                   0371
         ST    @10,CCAURAB(,R11)                                   0371
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLBI                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0372
*Z041GET:                                                          0372
*           CALL IGGPGET;           /* GET RECORD                    */
Z041GET  L     @15,@CV00037                                        0372
         BALR  @14,@15                                             0372
*         END;                                                     0373
*         IF CCACD1^=RCS THEN       /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0374
         BE    @RF00374                                            0374
*           CALL EXIT;              /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0375
*         ELSE                                                     0376
*           ;                       /* CONTINUE, NO ERROR            */
@RF00374 DS    0H                                                  0377
*         IF RCDID^=CTGTINDX THEN   /* EXIT IF NOT INDEX ENTRY       */
         L     @10,CCAURAB(,R11)                                   0377
         L     @10,CCACPE1(,@10)                                   0377
         CLI   RCDID(@10),C'I'                                     0377
         BE    @RF00377                                            0377
*           DO;                                                    0378
*                                                                  0378
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='AA', CCAREASN=RSN22, CCARETRN=RCCATBAL*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0379
*             CCAPROB=IGGSEGID+(RSN22*K256)+RCCATBAL;              0379
         MVC   CCAPROB(4,R11),@CF03023                             0379
*             CALL EXIT;            /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0380
*           END;                                                   0381
*         ELSE                                                     0382
*           ;                       /* INDEX RECORD OBTAINED         */
*                                                                  0382
@RF00377 DS    0H                                                  0383
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS INDEX RECORD VOLUME OCCURRENCES CALL TO MODULE  */
*         /* IGG0CLAM                                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0383
*Z043SLEL:                                                         0383
*         CALL IGGPSLEL;                                           0383
Z043SLEL L     @15,@CV00038                                        0383
         BALR  @14,@15                                             0383
*         IF CCACD1^=RCS THEN       /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0384
         BE    @RF00384                                            0384
*           CALL EXIT;              /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0385
*         ELSE                                                     0386
*           ;                       /* CONTINUE, NO ERROR            */
@RF00384 DS    0H                                                  0387
*       END;                                                       0387
*     ELSE                                                         0388
*       ;                           /* NO INDEX ASSOCIATIONS WITH THE
*                                      BASE DATA SET                 */
@RF00364 DS    0H                                                  0389
*   ELSE                                                           0389
*     ;                             /* NO INDEX FOR BASE DATA SET    */
*                                                                  0389
@RF00363 DS    0H                                                  0390
*   /*****************************************************************/
*   /*                                                               */
*   /* GET BASE DATA SET DATA RECORD TO PROCESS UPGRADE ASSOCIATIONS.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*   CCASRID=SAGON(SVGOPTR);         /* DATA RECORD CI NUMBER         */
         L     @10,CCAR4REC(,R11)                                  0390
         SLR   @05,@05                                             0390
         IC    @05,SVGOPTR+104(,@10)                               0390
         SLA   @05,2                                               0390
         ALR   @10,@05                                             0390
         MVC   CCASRID(3,R11),SAGON+188(@10)                       0390
*   DO;                                                            0391
*     CCAF1KEY=OFF;                 /* GET BY CI NO.                 */
*     CCAF1KGE=OFF;                 /* NOT GET NEXT                  */
*     CCAF1UP=OFF;                  /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0394
*     CCAURAB=ADDR(CCARAB1);        /* SET RAB PTR                   */
*                                                                  0395
         LA    @10,CCARAB1(,R11)                                   0395
         ST    @10,CCAURAB(,R11)                                   0395
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBI                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0396
*Z045GET:                                                          0396
*     CALL IGGPGET;                 /* GET RECORD                    */
Z045GET  L     @15,@CV00037                                        0396
         BALR  @14,@15                                             0396
*   END;                                                           0397
*   IF CCACD1^=RCS THEN             /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0398
         BE    @RF00398                                            0398
*     CALL EXIT;                    /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0399
*   ELSE                                                           0400
*     ;                             /* CONTINUE, NO ERROR            */
@RF00398 DS    0H                                                  0401
*   IF RCDID^=CTGTDATA THEN         /* EXIT IF NOT DATA RECORD       */
         L     @10,CCAURAB(,R11)                                   0401
         L     @10,CCACPE1(,@10)                                   0401
         CLI   RCDID(@10),C'D'                                     0401
         BE    @RF00401                                            0401
*     DO;                                                          0402
*                                                                  0402
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AA', CCAREASN=RSN20, CCARETRN=RCCATBAL      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0403
*       CCAPROB=IGGSEGID+(RSN20*K256)+RCCATBAL;                    0403
         MVC   CCAPROB(4,R11),@CF03026                             0403
*       CALL EXIT;                  /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0404
*     END;                                                         0405
*   ELSE                                                           0406
*     ;                             /* CONTINUE, DATA RECORD READ    */
@RF00401 DS    0H                                                  0407
*   IF SLCUPD=ON THEN               /* THIS AN UPDATE PATH           */
         L     @10,CCAR4REC(,R11)                                  0407
         LA    @05,104                                             0407
         ALR   @05,@10                                             0407
         TM    SLCUPD(@05),B'10000000'                             0407
         BNO   @RF00407                                            0407
*     DO;                           /* YES                           */
*       SLSAGON=SAGON(SVGOPTR);     /* SAVE CI NUMBER OF BASE DATA 0409
*                                      SET DATA RECORD               */
*                                                                  0409
         SLR   @15,@15                                             0409
         IC    @15,SVGOPTR(,@05)                                   0409
         SLA   @15,2                                               0409
         ALR   @10,@15                                             0409
         MVC   SLSAGON(3,@05),SAGON+188(@10)                       0409
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS UPGRADE VOLUME OCCURRENCES FOR BASE DATA RECORD   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0410
*Z047SLY:                                                          0410
*       CALL IGGPSLY;                                              0410
Z047SLY  BAL   @14,IGGPSLY                                         0410
*       IF CCACD1^=RCS THEN                                        0411
         CLI   CCACD1(R11),0                                       0411
         BNE   @RT00411                                            0411
*         ;                         /* EXIT IF ERROR IN UPGRADE    0412
*                                      PROCESSING                    */
*       ELSE                        /* CONTINUE, NO ERROR            */
*         IF RCDCINO^=SLSAGON THEN  /* IS DATA RECORD IN RAB1        */
         L     @10,CCAURAB(,R11)                                   0413
         L     @10,CCACPE1(,@10)                                   0413
         LA    @05,104                                             0413
         AL    @05,CCAR4REC(,R11)                                  0413
         CLC   RCDCINO(3,@10),SLSAGON(@05)                         0413
         BE    @RF00413                                            0413
*           DO;                     /* NO - GET BASE DATA RECORD     */
*             CCASRID=SLSAGON;      /* DATA RECORD CI NUMBER         */
         MVC   CCASRID(3,R11),SLSAGON(@05)                         0415
*             DO;                                                  0416
*               CCAF1KEY=OFF;       /* GET BY CI NO.                 */
*               CCAF1KGE=OFF;       /* NOT GET NEXT                  */
*               CCAF1UP=OFF;        /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0419
*               CCAURAB=ADDR(CCARAB1);/* SET RAB PTR                 */
*                                                                  0420
         LA    @10,CCARAB1(,R11)                                   0420
         ST    @10,CCAURAB(,R11)                                   0420
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLBI                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0421
*Z049GET:                                                          0421
*               CALL IGGPGET;       /* GET RECORD                    */
Z049GET  L     @15,@CV00037                                        0421
         BALR  @14,@15                                             0421
*             END;                                                 0422
*             IF CCACD1=RCS THEN    /* CONTINUE IF NO ERROR          */
         CLI   CCACD1(R11),0                                       0423
         BNE   @RF00423                                            0423
*               IF RCDID^=CTGTDATA THEN/* SET PROBLEM DETERMINATION
*                                      INFO IF NOT DATA RECORD       */
*                                                                  0424
         L     @10,CCAURAB(,R11)                                   0424
         L     @10,CCACPE1(,@10)                                   0424
         CLI   RCDID(@10),C'D'                                     0424
         BE    @RF00424                                            0424
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET CCAMODID='AA', CCAREASN=RSN20,              */
*                 /* CCARETRN=RCCATBAL                               */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0425
*                 CCAPROB=IGGSEGID+(RSN20*K256)+RCCATBAL;          0425
         MVC   CCAPROB(4,R11),@CF03026                             0425
*               ELSE                                               0426
*                 ;                 /* NO ERROR, DATA RCD READ       */
@RF00424 DS    0H                                                  0427
*             ELSE                                                 0427
*               ;                   /* ERROR IN GET                  */
@RF00423 DS    0H                                                  0428
*           END;                                                   0428
*         ELSE                                                     0429
*           ;                       /* YES - DATA RECORD IS IN RECORD
*                                      AREA 1                        */
@RF00413 DS    0H                                                  0430
*     END;                                                         0430
*   ELSE                                                           0431
*     ;                             /* NOT AN UPDATE PATH            */
@RF00407 DS    0H                                                  0432
*   IF CCACD1^=RCS THEN                                            0432
@RC00407 CLI   CCACD1(R11),0                                       0432
         BNE   @RT00432                                            0432
*     ;                             /* EXIT IF ERROR                 */
*   ELSE                            /* CONTINUE, NO ERROR            */
*     DO;                                                          0434
*       SVINMUC=OFF;                /* MUC INSERTION FLAG OFF        */
*                                                                  0435
         L     @10,CCAR4REC(,R11)                                  0435
         NI    SVINMUC+104(@10),B'01111111'                        0435
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS VOLUME OCCURRENCES FOR BASE DATA RECORD CALL TO   */
*       /* MODULE IGG0CLAM                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0436
*Z051SLEL:                                                         0436
*       CALL IGGPSLEL;                                             0436
Z051SLEL L     @15,@CV00038                                        0436
         BALR  @14,@15                                             0436
*     END;                                                         0437
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RT00432 BAL   @14,EXIT                                            0438
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPSLY');           /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPSLY'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0441
@EF00004 DS    0H                                                  0441
@ER00004 BR    @14                                                 0441
@PB00004 DS    0H                                                  0442
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0443
*/********************************************************************/
*/*                                                                  */
*/*        IGGPSLY  -  PROCEDURE  INTERNALLY  CALLED  NESTED         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0443
*IGGPSLY:                                                          0443
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0443
IGGPSLY  DS    0H                                                  0444
*Z052:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z052SLY:                           /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0444
*    (R5,                                                          0444
*     R6,                                                          0444
*     R7,                                                          0444
*     R8,                                                          0444
*     R9,                                                          0444
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z052     DS    0H                                                  0444
Z052SLY  DS    0H                                                  0445
*   RFY                                                            0445
*    (R2,                                                          0445
*     R3,                                                          0445
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*                                                                  0448
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME = IGGPSLY(IGG0CLAA)                                  *
**                                                                    *
**   DESCRIPTIVE NAME = SUPER LOCATE UPGRADE PROCESSING               *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION IS CALLED WHEN THE UPGRADE VOLUME           *
**      OCCURRENCES ARE TO BE PLACED IN THE VOLUME LIST.  THE         *
**      PROCESSING IS AS FOLLOWS:                                     *
**      1. EXTRACT THE GROUP OCCURRENCES FROM THE BASE CLUSTER DATA   *
**         RECORD.                                                    *
**      2. EXTRACT THE VOLUME OCCURRENCES FROM THE GROUP OCCURRENCES  *
**         ASSOCIATED WITH THE UPGRADE SET (CALL IGGPSLEL).           *
**      3. NON-DUPLICATE VOLUME INFORMATION INSERTED IN THE VOLUME    *
**         LIST (IGGPSLIV - CALLED BY IGGPSLEL).                      *
**                                                                    *
**   INPUT =                                                          *
**      CPL AND FPLS INITIALIZED TO EXTRACT GROUP OCCURRENCES, CCA    *
**      INITIALIZED FOR EXTRACT, BASE CLUSTER DATA RECORD IN RAB1.    *
**                                                                    *
**   OUTPUT =                                                         *
**      ALL NON-DUPLICATE VOLUME INFORMATION OF THE VOLUMES           *
**      ASSOCIATED WITH THE UPGRADE SET. VOLUMES WILL BE LOCATED AT   *
**      THE HIGH END OF THE VOLUME LIST WHEN EXITING THIS ROUTINE.    *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0448
*   SVSLYLP=ON;                     /* INDICATE UPGRADE PROCESSING TO
*                                      BE PERFORMED                  */
*                                                                  0448
         L     @10,CCAR4REC(,R11)                                  0448
         LA    @05,104                                             0448
         ALR   @05,@10                                             0448
         OI    SVSLYLP(@05),B'01000000'                            0448
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE FIELDS TO EXTRACT GROUP OCCURRENCES                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0449
*   RFY                                                            0449
*     CTGPL BASED(CCAXCPL);         /* SUPER LOCATE CTGPL ADDR.      */
*   CTGWKA=ADDR(SWKA0);             /* SET ADDRESS OF WORKAREA FOR 0450
*                                      EXTRACT                       */
         L     @01,CCAXCPL(,R11)                                   0450
         LA    @00,SWKA0(,@05)                                     0450
         ST    @00,CTGWKA(,@01)                                    0450
*   WKALEN1=LENGTH(SWKA0);          /* LENGTH OF WORKAREA            */
         LR    @01,@00                                             0451
         MVC   WKALEN1(2,@01),@CH00191                             0451
*   RFY                                                            0452
*     CTGPL BASED(CCACPL);          /* CALLER'S CTGPL ADDRESS.       */
*   CTGFLDNM=ADDR(ENTUPGD);         /* SET ADDRESS OF FIELD NAMES FOR
*                                      EXTRACT                       */
         LA    @15,SFPLS(,@10)                                     0453
         LA    @14,@CC02805                                        0453
         ST    @14,CTGFLDNM(,@15)                                  0453
*   SLREL=N;                        /* RELATIVE REPETITION TEST VALUE
*                                      TO ZERO                       */
         SLR   @15,@15                                             0454
         STH   @15,SLREL(,@05)                                     0454
*   SLCNT=LENGTH(SWKAS0)/LENGTH(SLASS);/* MAXIMUM NUMBER OF        0455
*                                      OCCURRENCES TO BE RETURNED    */
         MVC   SLCNT(2,@05),@CH00258                               0455
*   SVINMUC=ON;                     /* INDICATE VOLUMES TO BE PLACED
*                                      WITHIN THE MUC                */
         OI    SVINMUC(@05),B'10000000'                            0456
*   RFY                                                            0457
*     CTGFL BASED(ADDR(SFPLS(2)));  /* ADDRESSABILITY ON FIRST TEST
*                                      FPL                           */
*   CTGFLDGC=ASSOCGC;               /* SET ASSOCIATION GROUP CODE IN
*                                      TEST FPL                      */
         LA    @10,SFPLS+24(,@10)                                  0458
         MVI   CTGFLDGC(@10),X'02'                                 0458
*   RFY                                                            0459
*     CTGFL BASED(ADDR(SFPLS(1)));  /* ADDRESSABILITY FOR SL FIELD 0459
*                                      PARAMETER LIST                */
*   DO UNTIL(SVSLYLP=OFF);          /* BEGIN UPGRADE PROCESSING      */
*                                                                  0460
@DL00460 DS    0H                                                  0461
*     /***************************************************************/
*     /*                                                             */
*     /* EXTRACT UPGRADE GROUP OCCURRENCE ASSOCIATIONS. CALL TO      */
*     /* MODULE IGG0CLAZ                                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0461
*Z053EXT:                                                          0461
*     CALL IGGPEXT;                                                0461
Z053EXT  L     @15,@CV00036                                        0461
         BALR  @14,@15                                             0461
*     IF(CCACD1^=RCS)×(CTGFLNG(1)=N) THEN/* EXIT IF ERROR IN EXTRACT
*                                      OR IF NO DATA RETURNED        */
         CLI   CCACD1(R11),0                                       0462
         BNE   @RT00462                                            0462
         L     @10,CCAR4REC(,R11)                                  0462
         LA    @10,SFPLS(,@10)                                     0462
         ICM   @05,15,CTGFLNG(@10)                                 0462
         BNZ   @RF00462                                            0462
@RT00462 DS    0H                                                  0463
*       CALL EXIT;                  /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0463
*     ELSE                                                         0464
*       ;                           /* NO ERROR, CONTINUE            */
@RF00462 DS    0H                                                  0465
*     SLAWK=ONE;                    /* SET UP WORK COUNTER FOR     0465
*                                      UPGRADE ASSOCIATIONS          */
         L     @10,CCAR4REC(,R11)                                  0465
         LA    @05,104                                             0465
         ALR   @05,@10                                             0465
         MVC   SLAWK(4,@05),@CF00040                               0465
*     SLACT=CTGFLNG(1)/LENGTH(SLASS);/* NUMBER OF UPGRADE          0466
*                                      ASSOCIATIONS RETURNED         */
         LA    @10,SFPLS(,@10)                                     0466
         L     @00,CTGFLNG(,@10)                                   0466
         SRDA  @00,32                                              0466
         D     @00,@CF00253                                        0466
         ST    @01,SLACT(,@05)                                     0466
*     SVSLYUAP=ON;                  /* INDICATE PROCESSING OF UPGRADE
*                                      ASSOCIATIONS                  */
         OI    SVSLYUAP(@05),B'00100000'                           0467
*     DO UNTIL(SVSLYUAP=OFF);       /* PROCESS EXTRACTED UPGRADE   0468
*                                      ASSOCIATIONS                  */
@DL00468 DS    0H                                                  0469
*       IF SLANAME(SLAWK)=SLAIXD THEN                              0469
         L     @10,CCAR4REC(,R11)                                  0469
         LA    @05,104                                             0469
         ALR   @05,@10                                             0469
         L     @15,SLAWK(,@05)                                     0469
         MH    @15,@CH00253                                        0469
         ALR   @10,@15                                             0469
         CLC   SLANAME+182(3,@10),SLAIXD(@05)                      0469
         BE    @RT00469                                            0469
*         ;                         /* DO NOT PROCESS IF AIX DATA  0470
*                                      RECORD                        */
*       ELSE                        /* NOT AIX DATA RECORD           */
*         DO;                                                      0471
*           CCASRID=SLANAME(SLAWK); /* DATA CI NUMBER                */
         L     @10,CCAR4REC(,R11)                                  0472
         L     @05,SLAWK+104(,@10)                                 0472
         MH    @05,@CH00253                                        0472
         ALR   @10,@05                                             0472
         MVC   CCASRID(3,R11),SLANAME+182(@10)                     0472
*           DO;                                                    0473
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=OFF;          /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0476
*             CCAURAB=ADDR(CCARAB1);/* SET RAB PTR                   */
*                                                                  0477
         LA    @10,CCARAB1(,R11)                                   0477
         ST    @10,CCAURAB(,R11)                                   0477
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0478
*Z055GET:                                                          0478
*             CALL IGGPGET;         /* GET RECORD                    */
Z055GET  L     @15,@CV00037                                        0478
         BALR  @14,@15                                             0478
*           END;                                                   0479
*           IF CCACD1^=RCS THEN     /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0480
         BE    @RF00480                                            0480
*             CALL EXIT;            /* ERROR - RETURN TO CALLER      */
         BAL   @14,EXIT                                            0481
*           ELSE                                                   0482
*             ;                     /* CONTINUE, NO ERROR            */
@RF00480 DS    0H                                                  0483
*           IF RCDID^=CTGTDATA THEN /* SET ERROR CODE AND EXIT IF  0483
*                                      DATA RECORD NOT READ          */
         L     @10,CCAURAB(,R11)                                   0483
         L     @10,CCACPE1(,@10)                                   0483
         CLI   RCDID(@10),C'D'                                     0483
         BE    @RF00483                                            0483
*             DO;                                                  0484
*                                                                  0484
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='AA', CCAREASN=RSN14,                */
*               /* CCARETRN=RCCATBAL                                 */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0485
*               CCAPROB=IGGSEGID+(RSN14*K256)+RCCATBAL;            0485
         MVC   CCAPROB(4,R11),@CF03029                             0485
*               CALL EXIT;          /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0486
*             END;                                                 0487
*           ELSE                                                   0488
*             ;                     /* DATA RECORD WAS OBTAINED      */
*                                                                  0488
@RF00483 DS    0H                                                  0489
*           /*********************************************************/
*           /*                                                       */
*           /* CALL SUPER LOCATE ELEMENTARY ENTRY PROCESSING. CALL TO*/
*           /* MODULE IGG0CLAM                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0489
*Z057SLEL:                                                         0489
*           CALL IGGPSLEL;                                         0489
Z057SLEL L     @15,@CV00038                                        0489
         BALR  @14,@15                                             0489
*           IF CCACD1^=RCS THEN     /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0490
         BE    @RF00490                                            0490
*             CALL EXIT;            /* ERROR, RETURN TO CALLER       */
         BAL   @14,EXIT                                            0491
*           ELSE                                                   0492
*             ;                     /* CONTINUE, NO ERROR            */
*                                                                  0492
@RF00490 DS    0H                                                  0493
*           /*********************************************************/
*           /*                                                       */
*           /* RETRIEVE INDEX RECORD                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0493
*           CCASRID=SLANAME2(SLAWK);/* INDEX CI NUMBER               */
         L     @10,CCAR4REC(,R11)                                  0493
         L     @05,SLAWK+104(,@10)                                 0493
         MH    @05,@CH00253                                        0493
         ALR   @10,@05                                             0493
         MVC   CCASRID(3,R11),SLANAME2+182(@10)                    0493
*           DO;                                                    0494
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=OFF;          /* NOT GET UPD                   */
         NI    CCAF1KEY(R11),B'11100101'                           0497
*             CCAURAB=ADDR(CCARAB1);/* SET RAB PTR                   */
*                                                                  0498
         LA    @10,CCARAB1(,R11)                                   0498
         ST    @10,CCAURAB(,R11)                                   0498
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0499
*Z059GET:                                                          0499
*             CALL IGGPGET;         /* GET RECORD                    */
Z059GET  L     @15,@CV00037                                        0499
         BALR  @14,@15                                             0499
*           END;                                                   0500
*           IF CCACD1^=RCS THEN     /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0501
         BE    @RF00501                                            0501
*             CALL EXIT;            /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0502
*           ELSE                                                   0503
*             ;                     /* CONTINUE, NO ERROR            */
@RF00501 DS    0H                                                  0504
*           IF RCDID^=CTGTINDX THEN /* SET ERROR CODE AND EXIT IF  0504
*                                      INDEX RECORD NOT READ         */
         L     @10,CCAURAB(,R11)                                   0504
         L     @10,CCACPE1(,@10)                                   0504
         CLI   RCDID(@10),C'I'                                     0504
         BE    @RF00504                                            0504
*             DO;                                                  0505
*                                                                  0505
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='AA', CCAREASN=RSN16,                */
*               /* CCARETRN=RCCATBAL                                 */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0506
*               CCAPROB=IGGSEGID+(RSN16*K256)+RCCATBAL;            0506
         MVC   CCAPROB(4,R11),@CF03032                             0506
*               CALL EXIT;          /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0507
*             END;                                                 0508
*           ELSE                                                   0509
*             ;                     /* INDEX RECORD WAS READ         */
*                                                                  0509
@RF00504 DS    0H                                                  0510
*           /*********************************************************/
*           /*                                                       */
*           /* CALL SUPER LOCATE ELEMENTARY ENTRY PROCESSING CALL TO */
*           /* MODULE IGG0CLAM                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0510
*Z061SLEL:                                                         0510
*           CALL IGGPSLEL;                                         0510
Z061SLEL L     @15,@CV00038                                        0510
         BALR  @14,@15                                             0510
*           IF CCACD1^=RCS THEN     /* EXIT IF ERROR                 */
         CLI   CCACD1(R11),0                                       0511
         BE    @RF00511                                            0511
*             CALL EXIT;            /* RETURN TO CALLER - ERROR      */
         BAL   @14,EXIT                                            0512
*           ELSE                                                   0513
*             ;                     /* CONTINUE, NO ERROR            */
@RF00511 DS    0H                                                  0514
*         END;                                                     0514
*                                                                  0514
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TO OBTAIN NEXT EXTRACTED UPGRADE ASSOCIATION       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0515
*       SLREL=SLAREL(SLAWK);        /* OBTAIN NEXT RELREPNO          */
@RT00469 L     @10,CCAR4REC(,R11)                                  0515
         LA    @05,104                                             0515
         ALR   @05,@10                                             0515
         L     @15,SLAWK(,@05)                                     0515
         LR    @14,@15                                             0515
         MH    @14,@CH00253                                        0515
         LH    @10,SLAREL+182(@14,@10)                             0515
         STH   @10,SLREL(,@05)                                     0515
*       SLAWK=SLAWK+INCR1;          /* INCREMENT UPGRADE ASSOCIATION
*                                      COUNTER                       */
         AL    @15,@CF00040                                        0516
         ST    @15,SLAWK(,@05)                                     0516
*       IF SLAWK>SLACT THEN         /* STOP PROCESSING IF NO MORE  0517
*                                      ASSOCIATIONS                  */
         C     @15,SLACT(,@05)                                     0517
         BNH   @RF00517                                            0517
*         SVSLYUAP=OFF;             /* INDICATE ALL RETURNED       0518
*                                      ASSOCIATIONS PROCESSED        */
         NI    SVSLYUAP(@05),B'11011111'                           0518
*       ELSE                                                       0519
*         ;                         /* CONTINUE - MORE ASSOCIATIONS
*                                      RETURNED                      */
@RF00517 DS    0H                                                  0520
*     END;                                                         0520
@DE00468 LA    @10,104                                             0520
         AL    @10,CCAR4REC(,R11)                                  0520
         TM    SVSLYUAP(@10),B'00100000'                           0520
         BNZ   @DL00468                                            0520
*     IF SLACT<(LENGTH(SWKAS0)/LENGTH(SLASS)) THEN/* LESS THAN     0521
*                                      MAXIMUM POSSIBLE NUMBER OF  0521
*                                      ASSOCIATIONS RETURNED         */
         L     @05,SLACT(,@10)                                     0521
         CH    @05,@CH00258                                        0521
         BNL   @RF00521                                            0521
*       SVSLYLP=OFF;                /* END PROCESSING                */
         NI    SVSLYLP(@10),B'10111111'                            0522
*     ELSE                                                         0523
*       ;                           /* CONTINUE PROCESSING - MORE  0523
*                                      ASSOCIATIONS MAY EXIST        */
@RF00521 DS    0H                                                  0524
*   END;                                                           0524
@DE00460 L     @10,CCAR4REC(,R11)                                  0524
         TM    SVSLYLP+104(@10),B'01000000'                        0524
         BNZ   @DL00460                                            0524
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0525
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPSLIV');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPSLIV'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0528
@EF00005 DS    0H                                                  0528
@ER00005 BR    @14                                                 0528
@PB00005 DS    0H                                                  0529
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0530
*/********************************************************************/
*/*                                                                  */
*/*        IGGPSLIV  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0530
*IGGPSLIV:                                                         0530
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0530
IGGPSLIV DS    0H                                                  0531
*   GEN(ENTRY IGGPSLIV );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPSLIV
*Z062:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z062SLIV:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0532
*    (R5,                                                          0532
*     R6,                                                          0532
*     R7,                                                          0532
*     R8,                                                          0532
*     R9,                                                          0532
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z062     DS    0H                                                  0532
Z062SLIV DS    0H                                                  0533
*   RFY                                                            0533
*    (R2,                                                          0533
*     R3,                                                          0533
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
         SR 12,15
*                                                                  0539
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME = IGGPSLIV(IGG0CLAA)                                 *
**                                                                    *
**   DESCRIPTIVE NAME = SUPER LOCATE VOLUME LIST INSERTION            *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION PROCESSES EACH VOLUME OCCURRENCE AND        *
**      PLACES THE VOLUME SERIAL, DEVICE TYPE, AND FILE SEQUENCE      *
**      NUMBER IN THE VOLUME LIST. THE ENTRIES ARE PLACED AT THE      *
**      HIGH END OF THE LIST AREA. THE PROCESSING IS AS FOLLOWS:      *
**      1. SCAN THE LIST FOR DUPLICATE ENTRIES, EXIT IF               *
**         VOLUME ALREADY IN VOLUME LIST                              *
**      2. INCREMENT NON-DUPLICATE VOLUME COUNTER, SVCT.              *
**      3. IF VOLUME LIST IS FULL, EXIT.                              *
**      4. SCAN THE VOLUMES WITHIN THE MINIMUM UNIT COUNT TO FIND A   *
**         LAST VOLUME OF THE SAME DEVICE TYPE:                       *
**         A. IF NO LAST VOLUME OF THE SAME DEVICE TYPE, PLACE        *
**            VOLUME AT END AND WITHIN MUC. IF VOLUME IS CANDIDATE    *
**            AND MUC INSERTION FLAG IS OFF, PLACE VOLUME SERIAL IN   *
**            CANDIDATE VOLUME LIST (VOLUME WILL BE REPLACED IN MUC   *
**            IF SUBSEQUENT PRIME OR OVERFLOW VOLUME OF SAME DEVICE   *
**            TYPE IS ENCOUNTERED).                                   *
**         B. IF VOLUME OF SAME DEVICE TYPE IS FOUND AND THE MUC FLAG *
**            IS ON, PLACE THE VOLUME INFORMATION IN THE MUC          *
**            FOLLOWING THE LAST VOLUME OF THE SAME DEVICE TYPE.      *
**         C. EXCHANGE THE VOLUME INFORMATION OF THE VOLUME FOUND     *
**            IN THE MUC IF THE MUC INSERT FLAG IS OFF, THE INPUT     *
**            VOLUME IS PRIME OR OVERFLOW, AND THE VOLUME FOUND IN    *
**            THE MUC IS A CANDIDATE VOLUME.  REMOVE CANDIDATES       *
**            VOLUME SERIAL FOR CANDIDATE VOLUME LIST.  INSERT        *
**            CANDIDATES VOLUME INFORMATION IN LIST OUTSIDE OF MUC.   *
**         D. IF VOLUME OF SAME DEVICE TYPE FOUND, MUC INSERT FLAG    *
**            IS OFF, AND THE VOLUME FOUND IS NOT A CANDIDATE, PLACE  *
**            THE INPUT VOLUME IN THE VOLUME LIST OUTSIDE OF MUC.     *
**                                                                    *
**   INPUT =                                                          *
**      EXTRACTED VOLUME OCCURRENCE (VOLUME SERIAL, DEVICE TYPE, AND  *
**      FLAGS), POINTERS TO THE END OF THE VOLUME LIST AND FIRST      *
**      VOLUME ENTRY IN THE LIST.                                     *
**                                                                    *
**   OUTPUT =                                                         *
**      ALL NON-DUPLICATE VOLUME INFORMATION INSERTED IN THE VOLUME   *
**      LIST.  VOLUMES ARE SORTED BY DEVICE TYPE BOTH WITHIN AND      *
**      OUTSIDE THE MUC - DEVICE TYPES WITHIN THE MINIMUM UNIT COUNT  *
**      ARE NOT ORDERED IN ANY PARTICULAR SEQUENCE NOR ARE THEY       *
**      RELATED TO THE DEVICE TYPES OUTSIDE THE MUC BY ANY ORDERING   *
**      RELATIONSHIP.  VOLUMES ARE PLACED AT THE HIGH END OF THE      *
**      VOLUME LIST.                                                  *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0539
*   RFY                                                            0539
*     CTGVL BASED(SVIPT);           /* SET MAPPING FOR ENTRIES IN  0539
*                                      VOLUME LIST TO VOLUME INSERT
*                                      POINTER                       */
*                                                                  0539
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN VOLUME LIST TO SEE IF INPUT VOLUME ALREADY ADDED TO THE  */
*   /* LIST. IF FOUND, RETURN TO CALLER.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0540
*   SVIPT=SVSTART;                  /* INITIALIZE VOLUME INSERT    0540
*                                      POINTER TO ADDRESS OF THE   0540
*                                      FIRST ENTRY IN THE LIST       */
         LA    @10,104                                             0540
         AL    @10,CCAR4REC(,R11)                                  0540
         L     @05,SVSTART(,@10)                                   0540
         ST    @05,SVIPT(,@10)                                     0540
*   IF SVSTART=SVEND THEN                                          0541
         C     @05,SVEND(,@10)                                     0541
         BE    @RT00541                                            0541
*     ;                             /* IF EQUAL NO ENTRIES           */
*   ELSE                            /* SCAN VOLUME LIST FOR INPUT  0543
*                                      VOLUME SERIAL                 */
*     DO UNTIL(SVIPT=SVEND);        /* SCAN LIST                     */
@DL00543 DS    0H                                                  0544
*       IF SVOVOLSE=CTGVLVOL(1) THEN/* IF INPUT VOL SER FOUND        */
         LA    @10,104                                             0544
         AL    @10,CCAR4REC(,R11)                                  0544
         L     @05,SVVPT(,@10)                                     0544
         L     @10,SVIPT(,@10)                                     0544
         CLC   SVOVOLSE(6,@05),CTGVLVOL(@10)                       0544
         BNE   @RF00544                                            0544
*         CALL EXIT;                /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0545
*       ELSE                        /* VOLUME NOT IN VOLUME LIST     */
*         SVIPT=SVIPT+LENGTH(CTGVL);/* POINT TO NEXT ENTRY IN VOLUME
*                                      LIST                          */
         B     @RC00544                                            0546
@RF00544 LA    @10,104                                             0546
         AL    @10,CCAR4REC(,R11)                                  0546
         LA    @05,12                                              0546
         AL    @05,SVIPT(,@10)                                     0546
         ST    @05,SVIPT(,@10)                                     0546
*     END;                                                         0547
@RC00544 DS    0H                                                  0547
@DE00543 LA    @10,104                                             0547
         AL    @10,CCAR4REC(,R11)                                  0547
         CLC   SVIPT(4,@10),SVEND(@10)                             0547
         BNE   @DL00543                                            0547
*   SVCT=SVCT+INCR1;                /* INCREMENT NON-DUPLICATE VOLUME
*                                      COUNTER                       */
@RT00541 LA    @10,104                                             0548
         AL    @10,CCAR4REC(,R11)                                  0548
         LA    @05,1                                               0548
         SLR   @15,@15                                             0548
         IC    @15,SVCT(,@10)                                      0548
         ALR   @15,@05                                             0548
         STC   @15,SVCT(,@10)                                      0548
*   IF CTGWAVCT+INCR1>SVCM THEN     /* EXIT IF VOLUME LIST FULL      */
         L     @01,CCACPL(,R11)                                    0549
         L     @01,CTGWKA(,@01)                                    0549
         AH    @05,CTGWAVCT(,@01)                                  0549
         SLR   @15,@15                                             0549
         IC    @15,SVCM(,@10)                                      0549
         CR    @05,@15                                             0549
         BNH   @RF00549                                            0549
*     CALL EXIT;                    /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0550
*   ELSE                                                           0551
*     ;                             /* ADD VOLUME TO LIST            */
@RF00549 DS    0H                                                  0552
*   SVIPT=SVSTART;                  /* SET VOL INSERT POINTER TO   0552
*                                      ADDRESS OF FIRST ENTRY IN   0552
*                                      VOLUME LIST                   */
         LA    @10,104                                             0552
         AL    @10,CCAR4REC(,R11)                                  0552
         MVC   SVIPT(4,@10),SVSTART(@10)                           0552
*   SVDEVFND=OFF;                   /* DEVICE TYPE FOUND INDICATOR 0553
*                                      OFF                           */
*                                                                  0553
         NI    SVDEVFND(@10),B'11101111'                           0553
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN VOLUMES IN MINIMUM UNIT COUNT FOR LAST VOLUME WITH SAME  */
*   /* DEVICE TYPE AS INPUT VOLUME.                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*   DO WHILE((SVIPT^=SVMUC)&(SVDEVFND=OFF));/* LOOP UNTIL DEVICE TYPE
*                                      FOUND OR END OF MUC           */
         B     @DE00554                                            0554
@DL00554 DS    0H                                                  0555
*     IF SVODEVTY=CTGVLDEV(1) THEN  /* IF CURRENT ENTRY DEVICE TYPE
*                                      SAME AS INPUT VOLUME          */
         LA    @10,104                                             0555
         AL    @10,CCAR4REC(,R11)                                  0555
         L     @05,SVVPT(,@10)                                     0555
         L     @15,SVIPT(,@10)                                     0555
         CLC   SVODEVTY(4,@05),CTGVLDEV(@15)                       0555
         BNE   @RF00555                                            0555
*       DO;                         /* SCAN FOR LAST ENTRY WITH THE
*                                      SAME DEVICE TYPE              */
*         SVDEVFND=ON;              /* INDICATE DEVICE TYPE FOUND    */
         OI    SVDEVFND(@10),B'00010000'                           0557
*         SVIPT=SVIPT+LENGTH(CTGVL);/* INCREMENT POINTER TO NEXT   0558
*                                      ENTRY IN VOLUME LIST          */
         AL    @15,@CF00075                                        0558
         ST    @15,SVIPT(,@10)                                     0558
*         DO WHILE((SVIPT^=SVMUC)&(SVODEVTY=CTGVLDEV(1)));/* SEARCH
*                                      FOR LAST ENTRY IN VOLUME LIST
*                                      WITH THE SAME DEVICE TYPE     */
         B     @DE00559                                            0559
@DL00559 DS    0H                                                  0560
*           SVIPT=SVIPT+LENGTH(CTGVL);/* INCREMENT POINTER TO NEXT 0560
*                                      ENTRY IN VOLUME LIST          */
         LA    @10,104                                             0560
         AL    @10,CCAR4REC(,R11)                                  0560
         LA    @05,12                                              0560
         AL    @05,SVIPT(,@10)                                     0560
         ST    @05,SVIPT(,@10)                                     0560
*         END;                                                     0561
@DE00559 LA    @10,104                                             0561
         AL    @10,CCAR4REC(,R11)                                  0561
         L     @05,SVIPT(,@10)                                     0561
         C     @05,SVMUC(,@10)                                     0561
         BE    @DC00559                                            0561
         L     @10,SVVPT(,@10)                                     0561
         CLC   SVODEVTY(4,@10),CTGVLDEV(@05)                       0561
         BE    @DL00559                                            0561
@DC00559 DS    0H                                                  0562
*       END;                                                       0562
*     ELSE                          /* DEVICE TYPE NOT FOUND         */
*       SVIPT=SVIPT+LENGTH(CTGVL);  /* INCREMENT POINTER TO NEXT   0563
*                                      ENTRY IN VOLUME LIST          */
         B     @RC00555                                            0563
@RF00555 LA    @10,104                                             0563
         AL    @10,CCAR4REC(,R11)                                  0563
         LA    @05,12                                              0563
         AL    @05,SVIPT(,@10)                                     0563
         ST    @05,SVIPT(,@10)                                     0563
*   END;                            /* END OF MUC SCAN               */
@RC00555 DS    0H                                                  0564
@DE00554 LA    @10,104                                             0564
         AL    @10,CCAR4REC(,R11)                                  0564
         CLC   SVIPT(4,@10),SVMUC(@10)                             0564
         BE    @DC00554                                            0564
         TM    SVDEVFND(@10),B'00010000'                           0564
         BZ    @DL00554                                            0564
@DC00554 DS    0H                                                  0565
*   IF SVDEVFND=ON THEN             /* IF DEVICE TYPE FOUND          */
         LA    @10,104                                             0565
         AL    @10,CCAR4REC(,R11)                                  0565
         TM    SVDEVFND(@10),B'00010000'                           0565
         BNO   @RF00565                                            0565
*     IF SVINMUC^=ON THEN           /* IF MUC INSERT FLAG OFF        */
         TM    SVINMUC(@10),B'10000000'                            0566
         BO    @RF00566                                            0566
*       DO;                                                        0567
*         SVDVTFLG=OFF;             /* INDICATE UNIT FOR DATA VOL NOT
*                                      ALLOWED FOR WITHIN MUC        */
         NI    SVDVTFLG(@10),B'11110111'                           0568
*         SVIPT=SVIPT-LENGTH(CTGVL);/* POINT TO START OF VOLUME    0569
*                                      INFORMATION IN VOL LIST       */
         L     @05,SVIPT(,@10)                                     0569
         SL    @05,@CF00075                                        0569
         ST    @05,SVIPT(,@10)                                     0569
*         IF((RCDID^=CTGTALIN)&     /* IF NOT AN ALIEN OR USER       */
*             (RCDID^=CTGTUCAT)) THEN/* CATALOG ENTRY                */
         L     @05,CCAURAB(,R11)                                   0570
         L     @05,CCACPE1(,@05)                                   0570
         CLI   RCDID(@05),C'A'                                     0570
         BE    @RF00570                                            0570
         CLI   RCDID(@05),C'U'                                     0570
         BE    @RF00570                                            0570
*           DO;                                                    0571
*             IF((SVOPRIME=ON)×     /* IF VOLUME IS PRIME OR         */
*                 (SVOOVFLW=ON)) THEN/* OVERFLOW                     */
         L     @10,SVVPT(,@10)                                     0572
         TM    SVOPRIME(@10),B'10100000'                           0572
         BZ    @RF00572                                            0572
*               DO;                 /* TEST IF VOLUME FOUND IN VOL 0573
*                                      LIST IS CANDIDATE             */
*                                                                  0573
*                 /***************************************************/
*                 /*                                                 */
*                 /* TEST IF VOLUME FOUND IN VOLUME LIST IS A        */
*                 /* CANDIDATE VOLUME.                               */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0574
*                 DO RCND=1 TO DIM(SLCANDTE);/* SCAN CANDIDATE VOLUME
*                                      SERIAL LIST                   */
         LA    RCND,1                                              0574
@DL00574 DS    0H                                                  0575
*                   IF CTGVLVOL(1)=SLCANDTE(RCND) THEN/* IF VOLUME 0575
*                                      FOUND IN VOLUME LIST IS A   0575
*                                      CANDIDATE                     */
         L     @10,CCAR4REC(,R11)                                  0575
         LA    @05,104                                             0575
         ALR   @05,@10                                             0575
         L     @15,SVIPT(,@05)                                     0575
         LR    @14,RCND                                            0575
         MH    @14,@CH00054                                        0575
         ST    @14,@TF00001                                        0575
         ALR   @14,@05                                             0575
         CLC   CTGVLVOL(6,@15),SLCANDTE-6(@14)                     0575
         BNE   @RF00575                                            0575
*                     DO;           /* EXCHANGE INPUT VOLUME INFO  0576
*                                      WITH CANDIDATES'S INFO WITHIN
*                                      THE MUC                       */
*                       SLCTGVL=CTGVL(1);/* MOVE CANDIDATE VOLUME  0577
*                                      INFORMATION FROM VOL LIST TO
*                                      WORKAREA                      */
         AH    @10,@CH03033                                        0577
         MVC   SLCTGVL(12,@10),CTGVL(@15)                          0577
*                       CTGVLVOL(1)=SVOVOLSE;/* INPUT VOLUME SERIAL  */
         L     @14,SVVPT(,@05)                                     0578
         MVC   CTGVLVOL(6,@15),SVOVOLSE(@14)                       0578
*                       CTGVLDEV(1)=SVODEVTY;/* DEVICE TYPE, AND     */
         MVC   CTGVLDEV(4,@15),SVODEVTY(@14)                       0579
*                       CTGVLSEQ(1)=SVOFILES;/* FILE SEQUENCE        */
         MVC   CTGVLSEQ(2,@15),SVOFILES(@14)                       0580
*                       SLCANDTE(RCND)=SLCANDTE(RCND)&&SLCANDTE(RCND);
         LR    @01,@05                                             0581
         AL    @01,@TF00001                                        0581
         XC    SLCANDTE-6(6,@01),SLCANDTE-6(@01)                   0581
*                                   /* CLEAR CANDIDATE VOLSER IN   0582
*                                      CANDIDATE LIST                */
*                       SVOVOLSE=SLCTGVOL;/* CANDIDATE VOLUME SERIAL
*                                      TO INPUT LIST                 */
         MVC   SVOVOLSE(6,@14),SLCTGVOL(@10)                       0582
*                       SVODEVTY=SLCTGDEV;/* CANDIDATE VOLUME DEVICE
*                                      TYPE TO INPUT LIST            */
         MVC   SVODEVTY(4,@14),SLCTGDEV(@10)                       0583
*                       SVOFILES=SLCTGSEQ;/* CANDIDATE FILE SEQUENCE
*                                      NUMBER TO INPUT LIST          */
         MVC   SVOFILES(2,@14),SLCTGSEQ(@10)                       0584
*                       SVDVTFLG=ON;/* UNIT FOR DATA VOL ALLOWED FOR
*                                      WITHIN MUC                    */
         OI    SVDVTFLG(@05),B'00001000'                           0585
*                       RCND=DIM(SLCANDTE);/* END SCAN OF CANDIDATE
*                                      LIST, VOL SERIAL FOUND        */
         LA    RCND,4                                              0586
*                     END;                                         0587
*                   ELSE                                           0588
*                     ;             /* VOLUME SERIAL NOT FOUND       */
@RF00575 DS    0H                                                  0589
*                 END;              /* END CANDIDATE LIST SCAN       */
         AL    RCND,@CF00040                                       0589
         CH    RCND,@CH00061                                       0589
         BNH   @DL00574                                            0589
*               END;                                               0590
*             ELSE                                                 0591
*               ;                   /* VOL NOT PRIME OR OVERFLOW     */
@RF00572 DS    0H                                                  0592
*             IF SVDVTFLG=OFF THEN  /* INPUT VOLUME REPLACE A      0592
*                                      CANDIDATE VOLUME ENTRY        */
         L     @10,CCAR4REC(,R11)                                  0592
         TM    SVDVTFLG+104(@10),B'00001000'                       0592
         BNZ   @RF00592                                            0592
*               DO RCND=1 TO DIM(SLDVTBL);/* NO, SEE IF UNIT HAS BEEN
*                                      ALLOWED FOR WITHIN MUC        */
         LA    RCND,1                                              0593
@DL00593 DS    0H                                                  0594
*                 IF SVODEVTY=SLDVTBL(RCND) THEN/* DEV TYPE IN TBL   */
         LA    @10,104                                             0594
         AL    @10,CCAR4REC(,R11)                                  0594
         L     @05,SVVPT(,@10)                                     0594
         LR    @15,RCND                                            0594
         SLA   @15,2                                               0594
         ALR   @15,@10                                             0594
         CLC   SVODEVTY(4,@05),SLDVTBL-4(@15)                      0594
         BNE   @RF00594                                            0594
*                   DO;             /* DEV TYPE ENTRY IN TABLE       */
*                     SVDVTFLG=ON;  /* VOL NOT TO BE PUT IN MUC      */
         OI    SVDVTFLG(@10),B'00001000'                           0596
*                     RCND=DIM(SLDVTBL);/* END SCAN OF DEVICE TABLE  */
         LA    RCND,4                                              0597
*                   END;                                           0598
*                 ELSE                                             0599
*                   ;               /* DEV TYPE NOT EQ THIS ENTRY    */
@RF00594 DS    0H                                                  0600
*               END;                                               0600
         AL    RCND,@CF00040                                       0600
         CH    RCND,@CH00061                                       0600
         BNH   @DL00593                                            0600
*             ELSE                                                 0601
*               ;                   /* YES, INPUT VOL REPLACED A   0601
*                                      CANDIDATE, VOL NOT TO BE    0601
*                                      PLACED WITHIN MUC             */
@RF00592 DS    0H                                                  0602
*           END;                                                   0602
*         ELSE                      /* ALIEN OR USE CATALOG ENTRY    */
*           SVDVTFLG=ON;            /* VOL SER NOT TO BE PLACED    0603
*                                      WITHIN MUC                    */
         B     @RC00570                                            0603
@RF00570 L     @10,CCAR4REC(,R11)                                  0603
         OI    SVDVTFLG+104(@10),B'00001000'                       0603
*         IF SVDVTFLG=OFF THEN      /* VOL TO BE PUT WITHIN MUC      */
@RC00570 L     @10,CCAR4REC(,R11)                                  0604
         TM    SVDVTFLG+104(@10),B'00001000'                       0604
         BNZ   @RF00604                                            0604
*           DO;                     /* YES                           */
*             DO RCND=1 TO DIM(SLDVTBL);/* PUT DEVICE TYPE IN TBL    */
         LA    RCND,1                                              0606
@DL00606 DS    0H                                                  0607
*               IF SLDVTBL(RCND)=N THEN/* NULL ENTRY                 */
         LR    @10,RCND                                            0607
         SLA   @10,2                                               0607
         LA    @05,104                                             0607
         AL    @05,CCAR4REC(,R11)                                  0607
         L     @15,SLDVTBL-4(@10,@05)                              0607
         LTR   @15,@15                                             0607
         BNZ   @RF00607                                            0607
*                 DO;               /* YES                           */
*                   SLDVTBL(RCND)=SVODEVTY;/* DEVICE TYPE TO TABLE   */
         ALR   @10,@05                                             0609
         L     @05,SVVPT(,@05)                                     0609
         MVC   SLDVTBL-4(4,@10),SVODEVTY(@05)                      0609
*                   RCND=DIM(SLDVTBL);/* END DEVICE TABLE SCAN       */
         LA    RCND,4                                              0610
*                 END;                                             0611
*               ELSE                                               0612
*                 ;                 /* NO, ENTRY NOT NULL            */
@RF00607 DS    0H                                                  0613
*             END;                                                 0613
         AL    RCND,@CF00040                                       0613
         CH    RCND,@CH00061                                       0613
         BNH   @DL00606                                            0613
*             IF SVOCNDTE=ON THEN   /* INPUT VOLUME A CANDIDATE      */
         L     @10,CCAR4REC(,R11)                                  0614
         L     @10,SVVPT+104(,@10)                                 0614
         TM    SVOCNDTE(@10),B'01000000'                           0614
         BNO   @RF00614                                            0614
*               DO RCND=1 TO DIM(SLCANDTE);/* YES, PLACE ITS VOLUME
*                                      SERIAL IN CANDIDATE LIST      */
         LA    RCND,1                                              0615
@DL00615 DS    0H                                                  0616
*                 IF SLCANDTE(RCND)=NULL THEN/* THIS A NULL ENTRY    */
         LR    @10,RCND                                            0616
         MH    @10,@CH00054                                        0616
         LA    @05,104                                             0616
         AL    @05,CCAR4REC(,R11)                                  0616
         ST    @10,@TF00001                                        0616
         ALR   @10,@05                                             0616
         CLC   SLCANDTE-6(6,@10),NULL                              0616
         BNE   @RF00616                                            0616
*                   DO;             /* YES, ENTRY IS NULL            */
*                     SLCANDTE(RCND)=SVOVOLSE;/* INPUT VOLUME SERIAL
*                                      TO CANDIDATE LIST             */
         LR    @10,@05                                             0618
         AL    @10,@TF00001                                        0618
         L     @05,SVVPT(,@05)                                     0618
         MVC   SLCANDTE-6(6,@10),SVOVOLSE(@05)                     0618
*                     RCND=DIM(SLCANDTE);/* END SCAN OF LIST         */
         LA    RCND,4                                              0619
*                   END;                                           0620
*                 ELSE                                             0621
*                   ;               /* CURRENT ENTRY NOT NULL        */
@RF00616 DS    0H                                                  0622
*               END;                                               0622
         AL    RCND,@CF00040                                       0622
         CH    RCND,@CH00061                                       0622
         BNH   @DL00615                                            0622
*             ELSE                                                 0623
*               ;                   /* INPUT VOL NOT A CANDIDATE     */
@RF00614 DS    0H                                                  0624
*           END;                                                   0624
*         ELSE                      /* VOL TO BE OUTSIDE OF MUC      */
*           DO;                                                    0625
*                                                                  0625
         B     @RC00604                                            0625
@RF00604 DS    0H                                                  0626
*             /*******************************************************/
*             /*                                                     */
*             /* ESTABLISH SVIPT BY SEARCHING THE ENTRIES FOR A      */
*             /* VOLUME OF THE SAME DEVICE TYPE OUTSIDE OF THE MUC.  */
*             /* IF NONE ARE FOUND ADD THE INPUT VOLUME TO THE END OF*/
*             /* THE LIST ELSE INSERT FOLLOWING LAST ENTRY WITH THE  */
*             /* SAME DEVICE TYPE.                                   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0626
*             SVIPT=SVMUC;          /* SET INSERT POINTER TO FIRST 0626
*                                      ENTRY OUTSIDE MUC             */
         LA    @10,104                                             0626
         AL    @10,CCAR4REC(,R11)                                  0626
         L     @05,SVMUC(,@10)                                     0626
         ST    @05,SVIPT(,@10)                                     0626
*             SVMUC=SVMUC-LENGTH(CTGVL);/* SHIFT MUC END ADDRESS THE
*                                      LENGTH OF ONE ENTRY           */
         LR    @15,@05                                             0627
         SL    @15,@CF00075                                        0627
         ST    @15,SVMUC(,@10)                                     0627
*             SVDEVFND=OFF;         /* DEVICE TYPE FOUND FLAG OFF    */
         NI    SVDEVFND(@10),B'11101111'                           0628
*             IF SVIPT=SVEND THEN   /* IF NO ENTRIES OUTSIDE MUC     */
         C     @05,SVEND(,@10)                                     0629
         BNE   @RF00629                                            0629
*               SVIPT=SVMUC;        /* INSERT AT END OF MUC          */
         ST    @15,SVIPT(,@10)                                     0630
*             ELSE                                                 0631
*               DO;                 /* ENTRIES EXIST OUTSIDE MUC     */
         B     @RC00629                                            0631
@RF00629 DS    0H                                                  0632
*                 DO UNTIL((SVIPT=SVEND)×(SVDEVFND=ON));/* SCAN LIST
*                                      OF VOLUMES OUTSIDE OF MUC     */
@DL00632 DS    0H                                                  0633
*                   IF CTGVLDEV(1)=SVODEVTY THEN/* IF DEVICE TYPE  0633
*                                      FOUND                         */
         LA    @10,104                                             0633
         AL    @10,CCAR4REC(,R11)                                  0633
         L     @05,SVIPT(,@10)                                     0633
         L     @01,SVVPT(,@10)                                     0633
         CLC   CTGVLDEV(4,@05),SVODEVTY(@01)                       0633
         BNE   @RF00633                                            0633
*                     DO;                                          0634
*                       SVDEVFND=ON;/* DEVICE TYPE FOUND FLAG ON     */
         OI    SVDEVFND(@10),B'00010000'                           0635
*                       SVIPT=SVIPT+LENGTH(CTGVL);/* POINT TO NEXT 0636
*                                      ENTRY                         */
         AL    @05,@CF00075                                        0636
         ST    @05,SVIPT(,@10)                                     0636
*                       DO WHILE((SVIPT^=SVEND)&(CTGVLDEV(1)=SVODEVTY))
*                             ;     /* FIND LAST ENTRY IN VOLUME LIST
*                                      WITH SAME DEVICE TYPE         */
         B     @DE00637                                            0637
@DL00637 DS    0H                                                  0638
*                         SVIPT=SVIPT+LENGTH(CTGVL);/* POINT TO NEXT
*                                      ENTRY IN VOLUME LIST          */
         LA    @10,104                                             0638
         AL    @10,CCAR4REC(,R11)                                  0638
         LA    @05,12                                              0638
         AL    @05,SVIPT(,@10)                                     0638
         ST    @05,SVIPT(,@10)                                     0638
*                       END;                                       0639
@DE00637 LA    @10,104                                             0639
         AL    @10,CCAR4REC(,R11)                                  0639
         L     @05,SVIPT(,@10)                                     0639
         C     @05,SVEND(,@10)                                     0639
         BE    @DC00637                                            0639
         L     @10,SVVPT(,@10)                                     0639
         CLC   CTGVLDEV(4,@05),SVODEVTY(@10)                       0639
         BE    @DL00637                                            0639
@DC00637 DS    0H                                                  0640
*                       IF SVIPT^=SVEND THEN                       0640
         LA    @10,104                                             0640
         AL    @10,CCAR4REC(,R11)                                  0640
         CLC   SVIPT(4,@10),SVEND(@10)                             0640
         BNE   @RT00640                                            0640
*                         ;         /* IF NOT AT END OF VOLUME LIST,
*                                      CONTINUE                      */
*                       ELSE        /* AT END OF VOLUME LIST, SET  0642
*                                      POINTER TO ALLOW INSERTION AT
*                                      END OF LIST                   */
*                         SVIPT=SVIPT-LENGTH(CTGVL);               0642
         LA    @10,104                                             0642
         AL    @10,CCAR4REC(,R11)                                  0642
         L     @05,SVIPT(,@10)                                     0642
         SL    @05,@CF00075                                        0642
         ST    @05,SVIPT(,@10)                                     0642
*                     END;                                         0643
*                   ELSE            /* DEVICE TYPE NOT FOUND,        */
*                     SVIPT=SVIPT+LENGTH(CTGVL);/* TEST NEXT ENTRY   */
         B     @RC00633                                            0644
@RF00633 LA    @10,104                                             0644
         AL    @10,CCAR4REC(,R11)                                  0644
         LA    @05,12                                              0644
         AL    @05,SVIPT(,@10)                                     0644
         ST    @05,SVIPT(,@10)                                     0644
*                 END;                                             0645
@RC00633 DS    0H                                                  0645
@DE00632 LA    @10,104                                             0645
         AL    @10,CCAR4REC(,R11)                                  0645
         CLC   SVIPT(4,@10),SVEND(@10)                             0645
         BE    @DC00632                                            0645
         TM    SVDEVFND(@10),B'00010000'                           0645
         BNO   @DL00632                                            0645
@DC00632 DS    0H                                                  0646
*                 IF SVDEVFND=OFF THEN/* ANY ENTRIES OF SAME DEVICE
*                                      TYPE OUTSIDE OF MUC           */
         LA    @10,104                                             0646
         AL    @10,CCAR4REC(,R11)                                  0646
         TM    SVDEVFND(@10),B'00010000'                           0646
         BNZ   @RF00646                                            0646
*                   SVIPT=SVIPT-LENGTH(CTGVL);/* NO, INSERT AT END OF
*                                      VOLUME LIST                   */
         L     @05,SVIPT(,@10)                                     0647
         SL    @05,@CF00075                                        0647
         ST    @05,SVIPT(,@10)                                     0647
*                 ELSE                                             0648
*                   ;               /* ENTRIES EXIST OUTSIDE MUC     */
@RF00646 DS    0H                                                  0649
*               END;                                               0649
*           END;                                                   0650
*       END;                                                       0651
*     ELSE                          /* DEVICE TYPE FOUND, INSERT     */
*       SVIPT=SVIPT-LENGTH(CTGVL);  /* WITHIN MUC, SET POINTER TO  0652
*                                      START OF LAST ENTRY FOUND     */
         B     @RC00566                                            0652
@RF00566 LA    @10,104                                             0652
         AL    @10,CCAR4REC(,R11)                                  0652
         L     @05,SVIPT(,@10)                                     0652
         SL    @05,@CF00075                                        0652
         ST    @05,SVIPT(,@10)                                     0652
*   ELSE                            /* DEVICE TYPE NOT FOUND, ADD  0653
*                                      UNIQUE DEVICE TYPE TO MUC     */
*     DO;                                                          0653
         B     @RC00565                                            0653
@RF00565 DS    0H                                                  0654
*       SVIPT=SVMUC-LENGTH(CTGVL);  /* ADD TO END OF MUC ENTRIES     */
         LA    @10,104                                             0654
         AL    @10,CCAR4REC(,R11)                                  0654
         L     @05,SVMUC(,@10)                                     0654
         SL    @05,@CF00075                                        0654
         ST    @05,SVIPT(,@10)                                     0654
*       IF SVINMUC=OFF THEN         /* VOL TO BE OUTSIDE MUC         */
         TM    SVINMUC(@10),B'10000000'                            0655
         BNZ   @RF00655                                            0655
*         DO;                       /* YES                           */
*           DO RCND=1 TO DIM(SLDVTBL);/* PUT DEVICE TYPE IN TBL      */
         LA    RCND,1                                              0657
@DL00657 DS    0H                                                  0658
*             IF SLDVTBL(RCND)=N THEN/* THIS A NULL ENTRY            */
         LR    @10,RCND                                            0658
         SLA   @10,2                                               0658
         LA    @05,104                                             0658
         AL    @05,CCAR4REC(,R11)                                  0658
         L     @15,SLDVTBL-4(@10,@05)                              0658
         LTR   @15,@15                                             0658
         BNZ   @RF00658                                            0658
*               DO;                 /* YES                           */
*                 SLDVTBL(RCND)=SVODEVTY;/* DEVICE TYPE TO TABLE     */
         ALR   @10,@05                                             0660
         L     @05,SVVPT(,@05)                                     0660
         MVC   SLDVTBL-4(4,@10),SVODEVTY(@05)                      0660
*                 RCND=DIM(SLDVTBL);/* END DEVICE TABLE SCAN         */
         LA    RCND,4                                              0661
*               END;                                               0662
*             ELSE                                                 0663
*               ;                   /* CURRENT ENTRY NOT NULL        */
@RF00658 DS    0H                                                  0664
*           END;                                                   0664
         AL    RCND,@CF00040                                       0664
         CH    RCND,@CH00061                                       0664
         BNH   @DL00657                                            0664
*           IF SVOCNDTE=ON THEN     /* INPUT VOLUME A CANDIDATE      */
         L     @10,CCAR4REC(,R11)                                  0665
         L     @10,SVVPT+104(,@10)                                 0665
         TM    SVOCNDTE(@10),B'01000000'                           0665
         BNO   @RF00665                                            0665
*             DO RCND=1 TO DIM(SLCANDTE);/* SCAN CANDIDATE LIST FOR
*                                      NULL ENTRY                    */
         LA    RCND,1                                              0666
@DL00666 DS    0H                                                  0667
*               IF SLCANDTE(RCND)=NULL THEN/* IF NULL ENTRY          */
         LR    @10,RCND                                            0667
         MH    @10,@CH00054                                        0667
         LA    @05,104                                             0667
         AL    @05,CCAR4REC(,R11)                                  0667
         ST    @10,@TF00001                                        0667
         ALR   @10,@05                                             0667
         CLC   SLCANDTE-6(6,@10),NULL                              0667
         BNE   @RF00667                                            0667
*                 DO;                                              0668
*                   SLCANDTE(RCND)=SVOVOLSE;/* SAVE CANDIDATE VOLUME
*                                      SERIAL                        */
         LR    @10,@05                                             0669
         AL    @10,@TF00001                                        0669
         L     @05,SVVPT(,@05)                                     0669
         MVC   SLCANDTE-6(6,@10),SVOVOLSE(@05)                     0669
*                   RCND=DIM(SLCANDTE);/* END SCAN OF LIST           */
         LA    RCND,4                                              0670
*                 END;                                             0671
*               ELSE                                               0672
*                 ;                 /* VALID ENTRY                   */
@RF00667 DS    0H                                                  0673
*             END;                                                 0673
         AL    RCND,@CF00040                                       0673
         CH    RCND,@CH00061                                       0673
         BNH   @DL00666                                            0673
*           ELSE                                                   0674
*             ;                     /* VOLUME NOT A CANDIDATE OR IS
*                                      TO BE INSERTED WITHIN MUC     */
@RF00665 DS    0H                                                  0675
*         END;                                                     0675
*       ELSE                                                       0676
*         ;                         /* VOLUME TO BE PLACED IN MUC    */
@RF00655 DS    0H                                                  0677
*     END;                                                         0677
*                                                                  0677
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT VOLUME INFORMATION IN LIST - VOLUMES ADDED AT END OF   */
*   /* VOLUME LIST AREA, REQUIRING ALL ENTRIES TO THE LEFT OF THE    */
*   /* INSERT POINT TO BE SHIFTED LEFT THE LENGTH OF ONE ENTRY FOR   */
*   /* EACH INSERT.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0678
*   IF SVSTART=SVEND THEN           /* IF NO ENTRIES IN LIST THEN    */
@RC00565 LA    @10,104                                             0678
         AL    @10,CCAR4REC(,R11)                                  0678
         L     @05,SVSTART(,@10)                                   0678
         C     @05,SVEND(,@10)                                     0678
         BNE   @RF00678                                            0678
*     SVSTART=SVSTART-LENGTH(CTGVL);/* ALLOW FOR ONE ENTRY           */
         SL    @05,@CF00075                                        0679
         ST    @05,SVSTART(,@10)                                   0679
*   ELSE                            /* MOVE ENTRIES (THRU INSERT   0680
*                                      POINT) TO ALLOW INSERTION OF
*                                      NEW VOLUME                    */
*     DO;                                                          0680
         B     @RC00678                                            0680
@RF00678 DS    0H                                                  0681
*       RFY                                                        0681
*        (RMVLEN2) RSTD;            /* RESTRICT REGISTER 5           */
*       RMVFRM=SVSTART;             /* MOVE FROM ADDRESS             */
         LA    @10,104                                             0682
         AL    @10,CCAR4REC(,R11)                                  0682
         L     @15,SVSTART(,@10)                                   0682
         LR    RMVFRM,@15                                          0682
*       RMVLEN1=(SVIPT+LENGTH(CTGVL))-SVSTART;/* LENGTH OF MOVE      */
         LA    @14,12                                              0683
         L     RMVLEN1,SVIPT(,@10)                                 0683
         ALR   RMVLEN1,@14                                         0683
         SLR   RMVLEN1,@15                                         0683
*       SVSTART=SVSTART-LENGTH(CTGVL);/* ESTABLISH NEW ADDRESS OF  0684
*                                      FIRST VOLUME IN VOL LIST      */
         SLR   @15,@14                                             0684
         ST    @15,SVSTART(,@10)                                   0684
*       RMVTO=SVSTART;              /* MOVE TO ADDRESS               */
         LR    RMVTO,@15                                           0685
*       RMVLEN2=RMVLEN1;            /* LENGTH OF MOVE                */
         LR    RMVLEN2,RMVLEN1                                     0686
*       MVCL(RMVTO,RMVFRM);         /* SHIFT VOLUME ENTRIES TO ALLOW
*                                      INSERTION OF NEW VOLUME     0687
*                                      INFORMATION                   */
         MVCL  RMVTO,RMVFRM                                        0687
*       RFY                                                        0688
*        (RMVLEN2) UNRSTD;          /* RELEASE REGISTER 5            */
*     END;                                                         0689
*                                                                  0689
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT INPUT VOLUME INFORMATION IN VOLUMELIST                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0690
*   CTGVLVOL(1)=SVOVOLSE;           /* VOLUME SERIAL TO LIST         */
@RC00678 LA    @10,104                                             0690
         AL    @10,CCAR4REC(,R11)                                  0690
         L     @05,SVIPT(,@10)                                     0690
         L     @10,SVVPT(,@10)                                     0690
         MVC   CTGVLVOL(6,@05),SVOVOLSE(@10)                       0690
*   CTGVLDEV(1)=SVODEVTY;           /* DEVICE TYPE TO VOL LIST       */
         MVC   CTGVLDEV(4,@05),SVODEVTY(@10)                       0691
*   CTGVLSEQ(1)=SVOFILES;           /* FILE SEQUENCE NUMBER          */
         MVC   CTGVLSEQ(2,@05),SVOFILES(@10)                       0692
*   CTGWAVCT=CTGWAVCT+INCR1;        /* INCREMENT VOLUME COUNTER      */
         L     @10,CCACPL(,R11)                                    0693
         L     @10,CTGWKA(,@10)                                    0693
         LA    @05,1                                               0693
         AH    @05,CTGWAVCT(,@10)                                  0693
         STH   @05,CTGWAVCT(,@10)                                  0693
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0694
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0695
@EF00006 DS    0H                                                  0695
@ER00006 BR    @14                                                 0695
@PB00006 DS    0H                                                  0696
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0697
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0697
*EXIT:                                                             0697
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0697
EXIT     DS    0H                                                  0698
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0701
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00007 DS    0H                                                  0702
@EF00007 DS    0H                                                  0702
@ER00007 BR    @14                                                 0702
*   END                                                            0703
*                                                                  0703
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*                                                                  0703
*       ;                                                          0703
@EL00001 DS    0H                                                  0703
@EF00001 DS    0H                                                  0703
@ER00001 BR    @14                                                 0703
@DATA    DS    0H
@CH00054 DC    H'6'
@CH00258 DC    H'16'
@CH00191 DC    H'164'
@CH00205 DC    H'192'
@CH03033 DC    H'360'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
IGG0CLAA CSECT
         DS    0F
@CF00040 DC    F'1'
@CH00040 EQU   @CF00040+2
@CF00061 DC    F'4'
@CH00061 EQU   @CF00061+2
@CF00253 DC    F'10'
@CH00253 EQU   @CF00253+2
@CF00075 DC    F'12'
@CH00075 EQU   @CF00075+2
@CF03006 DC    F'-1044316120'
@CF03008 DC    F'-1044315532'
@CF03011 DC    F'-1044315020'
@CF03005 DC    F'-1044314508'
@CF03014 DC    F'-1044313996'
@CF03017 DC    F'-1044313484'
@CF03020 DC    F'-1044312972'
@CF03029 DC    F'-1044312460'
@CF03032 DC    F'-1044311948'
@CF03026 DC    F'-1044310924'
@CF03023 DC    F'-1044310412'
@CF03039 DC    F'-3'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLAA CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00036 DC    V(IGGPEXT)
@CV00037 DC    V(IGGPGET)
@CV00038 DC    V(IGGPSLEL)
         DS    0D
@CC02805 DC    C'ENTUPGD '
SVPRIVOL DC    X'80'
NULL     DC    X'000000000000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
RMVTO    EQU   @02
RMVLEN1  EQU   @03
RMVFRM   EQU   @04
RMVLEN2  EQU   @05
RCND     EQU   @02
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4REC EQU   CCARAB4+4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5SEG EQU   CCARAB5+8
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCACMS   EQU   IGGCCA+316
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFLGS EQU   CCAMNAT+240
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFDBK  EQU   CTGNEWNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKALEN1  EQU   USERWKA
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDCRAVL EQU   CATRCD+5
RCDCRACI EQU   CATRCD+11
RCDCRADT EQU   CATRCD+14
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGWAVCT EQU   CTGWA+6
CTGWAUCT EQU   CTGWA+8
CTGVL    EQU   0
CTGVLVOL EQU   CTGVL
CTGVLDEV EQU   CTGVL+6
CTGVLSEQ EQU   CTGVL+10
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
SWAREA   EQU   0
SCPL     EQU   SWAREA
SFPLS    EQU   SWAREA+32
SFIELDA  EQU   SWAREA+104
SFLDS    EQU   0
SFLDA    EQU   SFLDS
SVCT     EQU   SFLDA
SVCM     EQU   SFLDA+1
SVSAVE   EQU   SFLDA+2
SVGOPTR  EQU   SFLDA+3
SVNPTHAS EQU   SFLDA+4
SVMUC    EQU   SFLDA+8
SVEND    EQU   SFLDA+12
SVIPT    EQU   SFLDA+16
SVVPT    EQU   SFLDA+20
SVSTART  EQU   SFLDA+24
@NM00113 EQU   SFLDA+28
SVINMUC  EQU   @NM00113
SVSLYLP  EQU   @NM00113
SVSLYUAP EQU   @NM00113
SVDEVFND EQU   @NM00113
SVDVTFLG EQU   @NM00113
SLAIXD   EQU   SFLDA+29
SLCUPDSV EQU   SFLDA+32
SLCUPD   EQU   SLCUPDSV
SLSAGON  EQU   SFLDA+33
SLREL    EQU   SFLDA+36
SLCNT    EQU   SFLDA+38
SLCANDTE EQU   SFLDA+40
SLDVTBL  EQU   SFLDA+64
SWKA0    EQU   SFLDA+84
SWKAS0   EQU   SWKA0+4
SLAWK    EQU   SFLDA+248
SLACT    EQU   SFLDA+252
SLACTGVL EQU   SFLDA+256
SWKA     EQU   SFLDS+268
SWKAS    EQU   SWKA+4
SAGO     EQU   0
SAGOT    EQU   SAGO
SAGON    EQU   SAGO+1
SVOI     EQU   0
SVODEVTY EQU   SVOI+2
SVOVOLSE EQU   SVOI+6
SVOFILES EQU   SVOI+12
SVOVOLFL EQU   SVOI+14
SVOPRIME EQU   SVOVOLFL
SVOCNDTE EQU   SVOVOLFL
SVOOVFLW EQU   SVOVOLFL
SVOLIEXT EQU   SVOI+18
SLASS    EQU   0
SLAREL   EQU   SLASS
SLANAME  EQU   SLASS+3
SLANAME2 EQU   SLASS+7
SLCTGVL  EQU   0
SLCTGVOL EQU   SLCTGVL
SLCTGDEV EQU   SLCTGVL+6
SLCTGSEQ EQU   SLCTGVL+10
BUFSIZE  EQU   0
CATRECRD EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
ENTRYNAM EQU   0
EXCPNAME EQU   0
FIELDNM  EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
TNAM     EQU   0
@NM00037 EQU   CTGDDNM
CTGPROB  EQU   @NM00037
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00100 EQU   CATTR1
CCATTR   EQU   @NM00100
@NM00101 EQU   CCATTR
@NM00103 EQU   CATTR1
CRGATTR  EQU   @NM00103
CUPG     EQU   CRGATTR
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00104 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00101
@NM00102 EQU   @NM00101
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00099 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
@NM00098 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CEXP     EQU   CTGRBASE+55
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
CNAME    EQU   CTGRBASE
@NM00087 EQU   MCATDSTR+1
@NM00086 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTRV603 EQU   CVTS01+628
CVTRV602 EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTRV629 EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
SLATYPE2 EQU   SLASS+6
SLATYPE  EQU   SLASS+2
@NM00116 EQU   SVOLIEXT
SVOLNFMT EQU   SVOLIEXT
SVOLSSWD EQU   SVOLIEXT
SDSCBTTR EQU   SVOI+15
@NM00115 EQU   SVOVOLFL
SVORELRP EQU   SVOI
SWKAH    EQU   SWKA
SWKAH0   EQU   SWKA0
SLATTR   EQU   SFLDA+81
@NM00114 EQU   SFLDA+80
SVTTR    EQU   @NM00113
@NM00112 EQU   SFLDA+6
SCTGFLDA EQU   SFPLS+16
SCTGFL   EQU   SFPLS
SCTGFIEL EQU   SCPL+28
SCTGPL   EQU   SCPL
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00111 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00110 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00109 EQU   RTDEVUCB
@NM00108 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00107 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00106 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00105 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTVOLSER EQU   LTENTRY+2
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00097 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00096 EQU   CTGVLX
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00095 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00094 EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00093 EQU   COPTS
CENLST   EQU   COPTS
@NM00092 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
@NM00091 EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00090 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00089 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00088 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00085 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00084 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00083 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00082 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00081 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00080 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00079 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00078 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00077 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00076 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00051 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBRSV48 EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00050 EQU   TCB+296
TCBSCBQ  EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBRSV36 EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBRSV35 EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00049 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBRSV04 EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00048 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00047 EQU   CVTFIX+248
@NM00046 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00045 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00044 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDRELID EQU   CATRCD+4
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00043 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00042 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00041 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00040 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00039 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN2  EQU   USERWKA+2
CTGFLCHN EQU   CTGFL+12
CTGFLDTS EQU   CTGFLDRE
@NM00038 EQU   CTGFLDRE
CTGFLDCD EQU   CTGFL+1
CTGFLDNO EQU   CTGFL
CTGPSWD  EQU   CTGJSCB
@NM00036 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGNOFLD EQU   CTGPL+19
CTGTYPE  EQU   CTGPL+18
@NM00035 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00034 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00033 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1492
CCADGDGA EQU   IGGCCA+1488
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00032 EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00031 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
@NM00030 EQU   IGGCCA+1416
CCACUMPL EQU   IGGCCA+1412
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00029 EQU   CCAREGS
@NM00028 EQU   IGGCCA+1057
@NM00027 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNADR EQU   CCAMNCAT+252
CCAMNLEN EQU   CCAMNCAT+249
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00026 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00025 EQU   CCAMNAT+1
@NM00024 EQU   MNATTOP
MNATFULL EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00023 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00022 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00021 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
@NM00020 EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00019 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABL  EQU   IGGCCA+388
CCARABF  EQU   IGGCCA+384
CCARABB  EQU   IGGCCA+380
CCAMCPL  EQU   CCAXCPL
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCACMSWA EQU   CCACMS
CCARPRM  EQU   IGGCCA+312
@NM00018 EQU   CCAMSSPL+10
CCAMNSPL EQU   CCAMSSPL+9
@NM00017 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00016 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
@NM00015 EQU   IGGCCA+212
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
CCAR5REC EQU   CCARAB5+4
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2NVC EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00075 EQU   PSA+3412
PSASTAK  EQU   PSA+3072
@NM00074 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSARV062 EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSARV060 EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00073 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00072 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSARV009 EQU   PSASUP3
PSARV008 EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00071 EQU   FLCFSA
@NM00070 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00069 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00068 EQU   FLCIOA
@NM00067 EQU   FLCMCLA+15
@NM00066 EQU   FLCMCLA+14
@NM00065 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00064 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00063 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00062 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00061 EQU   FLCPER
@NM00060 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00059 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00058 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00057 EQU   FLCPIILC
@NM00056 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00055 EQU   FLCSVILC
@NM00054 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00053 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00052 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00173 EQU   @RC00154
@RC00194 EQU   @RC00193
@RC00231 EQU   @RC00219
@RT00229 EQU   @RC00219
@RC00253 EQU   @RC00250
@RC00251 EQU   @RC00250
@RT00411 EQU   @RC00407
@RT00640 EQU   @RC00633
@RC00566 EQU   @RC00565
@PB00007 EQU   @EL00001
@RT00257 EQU   @RC00253
@RC00604 EQU   @RC00566
@RC00629 EQU   @RC00566
@ENDDATA EQU   *
         END   IGG0CLAA,(C'PLS0616',0700,74303)
