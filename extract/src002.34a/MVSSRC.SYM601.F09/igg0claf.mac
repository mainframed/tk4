         TITLE 'IGG0CLAF - VSAM DELETE CATALOG                         *
                        '
IGG0CLAF CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLAF  78.174'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPDELC'
@EL00001 DS    0H                                                  0294
@EF00001 DS    0H                                                  0294
@ER00001 BR    @14                                                 0294
IGGPDELC DS    0H                                                  0295
         ENTRY IGGPDELC
         DROP @15
Z003     DS    0H                                                  0297
Z003DELC DS    0H                                                  0298
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
         USING *,12
*   DELR13SA=R13;                   /* SAVE R13 FOR ERROR ROUTINE  0305
*                                                            @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0305
         ST    R13,DELR13SA(,@10)                                  0305
*   CCAURAB=ADDR(CCARAB1);          /* POINT TO CATLG CLUS ENTRY     */
         LA    @10,CCARAB1(,R11)                                   0306
         ST    @10,CCAURAB(,R11)                                   0306
*   IF CTGDISC=OFF THEN             /* DELETE REQUEST ?              */
         L     @10,CCACPL(,R11)                                    0307
         TM    CTGDISC(@10),B'00001000'                            0307
         BNZ   @RF00307                                            0307
*     DO;                           /* YES,RETURN CATLG TYPE,NAME    */
*       IF CTGWKA^=NONE THEN        /* USER WORK AREA PROVIDED?    0309
*                                                            @Y30SSRG*/
         L     @10,CTGWKA(,@10)                                    0309
         LTR   @10,@10                                             0309
         BZ    @RF00309                                            0309
*         IF WKALEN1<LENGTH(USERWKA)/* YES, IS WORK AREA             */
*             +LENGTH(ENTNAMES) THEN/* LARGE ENOUGH?         @Y30SSRG*/
         LH    @10,WKALEN1(,@10)                                   0310
         C     @10,@CF03782                                        0310
         BNL   @RF00310                                            0310
*           DO;                     /* NO                            */
*             DO;                                                  0312
*               CCAMODID='AF';      /* SET MODULE ID                 */
         MVC   CCAMODID(2,R11),@CC04277                            0313
*               CCAREASN=RSN2;      /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'02'                                 0314
*               CCARETRN=RCVLSM;    /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'2C'                                 0315
*             END;                  /* WORK AREA TOO SMALL   @Y30SSRG*/
*             CALL EXIT;            /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0317
*           END;                                                   0318
*         ELSE                      /* W.A. LARGE ENOUGH     @Y30SSRG*/
*           DO;                                                    0319
         B     @RC00310                                            0319
@RF00310 DS    0H                                                  0320
*             WKALEN2=LENGTH(USERWKA);/* LEN OF RET DATA     @Y30SSRG*/
         L     @10,CCACPL(,R11)                                    0320
         L     @10,CTGWKA(,@10)                                    0320
         MVC   WKALEN2(2,@10),@CH00058                             0320
*             DELUSINX=INCR1;       /* SET INDEX TO USER WORK AREA TO
*                                      ONE                   @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0321
         MVI   DELUSINX(@10),X'01'                                 0321
*           END;                    /*                       @Y30SSRG*/
*       ELSE                                                       0323
*         ;                         /* NO USER WORK AREA     @Y30SSRG*/
*                                                                  0323
@RF00309 DS    0H                                                  0324
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK IF FORCE DELETE OF MASTER CATALOG           @Y30SSSM*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0324
*       IF CAXMCT=ON                /* MASTER CATALOG        @Y30SSSM*/
*           &CTGSCR=ON THEN         /* FORCE OPTION          @Y30SSSM*/
@RC00309 L     @10,CCAACB(,R11)                                    0324
         L     @10,ACBUAPTR(,@10)                                  0324
         TM    CAXMCT(@10),B'00000100'                             0324
         BNO   @RF00324                                            0324
         L     @10,CCACPL(,R11)                                    0324
         TM    CTGSCR(@10),B'00000010'                             0324
         BNO   @RF00324                                            0324
*         DO;                       /* YES                   @Y30SSSM*/
*                                                                  0325
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AF', CCAREASN=RSN30, CCARETRN=RCINFUNC  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0326
*           CCAPROB=IGGSEGID+(RSN30*K256)+RCINFUNC;/* NO FORCE     0326
*                                      ALLOWED WITH MASTER CATALOG 0326
*                                                            @Y30SSSM*/
         MVC   CCAPROB(4,R11),@CF04445                             0326
*           CALL EXIT;              /* RETURN TO CALLER      @Y30SSSM*/
         BAL   @14,EXIT                                            0327
*         END;                      /* END MCAT FORCE CHECK  @Y30SSSM*/
*       ELSE                                                       0329
*         ;                         /*                       @Y30SSSM*/
@RF00324 DS    0H                                                  0330
*       IF RCDCINO^=CATCLID×        /* NOT CATLG CLUSTER ENTRY       */
*           CTGSCR^=ON THEN                                        0330
         L     @10,CCAURAB(,R11)                                   0330
         L     @10,CCACPE1(,@10)                                   0330
         CLC   RCDCINO(3,@10),@CF00055+1                           0330
         BNE   @RT00330                                            0330
         L     @10,CCACPL(,R11)                                    0330
         TM    CTGSCR(@10),B'00000010'                             0330
         BNO   @RT00330                                            0330
*         ;                         /* OR NOT FORCE DELETE?  #Y30SSRG*/
*       ELSE                        /* FORCE DELETE REQUEST  #Y30SSRG*/
*         DO;                       /*                       #Y30SSRG*/
*           CCASRCH=CCASRCH&&CCASRCH;/* CLEAR SEARCH ARGUMENT      0333
*                                                            #Y30SSRG*/
         XC    CCASRCH(44,R11),CCASRCH(R11)                        0333
*           CCASRCH(1:1)=UPKRLL;    /* STARTING ARGUMENT     #Y30SSRG*/
         MVI   CCASRCH(R11),X'40'                                  0334
*           DO WHILE CCACD1=RCS;    /* LOOP TO DELETE ALL VOLUMES  0335
*                                                            #Y30SSRG*/
         B     @DE00335                                            0335
@DL00335 DS    0H                                                  0336
*             DO;                                                  0336
*               CCAF1KEY=ON;        /* TRUE NAME GET                 */
*               CCAF1KGE=ON;        /* GET NEXT                      */
*               CCAF1UP=ON;         /* GET FOR UPD                   */
         OI    CCAF1KEY(R11),B'00011010'                           0339
*               CCAURAB=ADDR(CCARAB1);/* SET RAB PTR                 */
*                                                                  0340
         LA    @10,CCARAB1(,R11)                                   0340
         ST    @10,CCAURAB(,R11)                                   0340
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLBI                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0341
*Z007GET:                                                          0341
*               CALL IGGPGET;       /* GET RECORD                    */
Z007GET  L     @15,@CV03023                                        0341
         BALR  @14,@15                                             0341
*             END;                                                 0342
*             IF CCACD1=RCS&        /* NO ERRORS AND         #Y30SSRG*/
*                 RCDID='V'&        /* VOLUME ENTRY AND      #Y30SSRG*/
*                 RCDCINO^=CATVOLCI THEN/* NOT CATALOG'S VOLUME ENTRY
*                                                            #Y30SSRG*/
         CLI   CCACD1(R11),0                                       0343
         BNE   @RF00343                                            0343
         L     @10,CCAURAB(,R11)                                   0343
         L     @10,CCACPE1(,@10)                                   0343
         CLI   RCDID(@10),C'V'                                     0343
         BNE   @RF00343                                            0343
         CLC   RCDCINO(3,@10),@CF03484+1                           0343
         BE    @RF00343                                            0343
*               DO;                 /*                       #Y30SSRG*/
*                                                                  0344
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLAI                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0345
*Z008FDSP:                                                         0345
*                 CALL IGGPFDSP;    /* CALL FORCE DELETE SPC #Y30SSRG*/
Z008FDSP L     @15,@CV03028                                        0345
         BALR  @14,@15                                             0345
*                 IF CCACD1^=RCS THEN                              0346
         CLI   CCACD1(R11),0                                       0346
         BNE   @RT00346                                            0346
*                   ;               /* ANY ERRORS?           #Y30SSRG*/
*                 ELSE              /* NO ERRORS             #Y30SSRG*/
*                   IF CTGWKA^=NONE THEN/* USER WORK AREA    #Y30SSRG*/
         L     @10,CCACPL(,R11)                                    0348
         L     @10,CTGWKA(,@10)                                    0348
         LTR   @10,@10                                             0348
         BZ    @RF00348                                            0348
*                     IF WKALEN1<WKALEN2+/* IS WORK AREA     #Y30SSRG*/
*                         LENGTH(ENTNAMES) THEN/* FULL?      #Y30SSRG*/
         LA    @05,45                                              0349
         AH    @05,WKALEN2(,@10)                                   0349
         CH    @05,WKALEN1(,@10)                                   0349
         BNH   @RF00349                                            0349
*                       DO;         /* WORK AREA TOO SMALL   #Y30SSRG*/
*                                                                  0350
*                         /*******************************************/
*                         /*                                         */
*                         /* SET CCAMODID='AF', CCAREASN=RSN0,       */
*                         /* CCARETRN=RCVLSZ                         */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0351
*                         CCAPROB=IGGSEGID+(RSN0*K256)+RCVLSZ;/* SET
*                                      WORK AREA TOO SMALL CODE    0351
*                                                            #Y30SSRG*/
         MVC   CCAPROB(4,R11),@CF04446                             0351
*                         CALL EXIT;/* RETURN TO CALLER      #Y30SSRG*/
         BAL   @14,EXIT                                            0352
*                       END;        /*                       #Y30SSRG*/
*                     ELSE                                         0354
*                       ;           /* WORK AREA NOT FULL    #Y30SSRG*/
@RF00349 DS    0H                                                  0355
*                   ELSE                                           0355
*                     ;             /* NO USER WORK AREA     #Y30SSRG*/
@RF00348 DS    0H                                                  0356
*                 CCASRCH=CCASRCH&&CCASRCH;/* CLEAR SRCH ARG FLD     */
@RT00346 XC    CCASRCH(44,R11),CCASRCH(R11)                        0356
*                 CCASRCH(1:6)=DELVLSER;/* ID OF GOTTEN RCD  #Y30SSRG*/
         L     @10,CCAR4REC(,R11)                                  0357
         MVC   CCASRCH(6,R11),DELVLSER(@10)                        0357
*               END;                /*                       #Y30SSRG*/
*             ELSE                  /* VOLUME ENTRY NOT FOUND      0359
*                                                            #Y30SSRG*/
*               CCASRCH=CNAME;      /* ID OF JUST GOTTEN RECORD    0359
*                                                            #Y30SSRG*/
         B     @RC00343                                            0359
@RF00343 L     @10,CCAURAB(,R11)                                   0359
         L     @10,CCACPE1(,@10)                                   0359
         MVC   CCASRCH(44,R11),CNAME(@10)                          0359
*             LEASTSIG=LEASTSIG+INCR1;/* INSURE GET OF NEXT HIGHER 0360
*                                                            #Y30SSRG*/
@RC00343 LA    @10,1                                               0360
         SLR   @05,@05                                             0360
         IC    @05,LEASTSIG(,R11)                                  0360
         ALR   @10,@05                                             0360
         STC   @10,LEASTSIG(,R11)                                  0360
*           END;                    /* LOOP UNTIL CI NOT FOUND OR  0361
*                                      FORCE DELETE ERROR    #Y30SSRG*/
@DE00335 CLI   CCACD1(R11),0                                       0361
         BE    @DL00335                                            0361
*           IF CCACD1^=RCENT THEN   /* RECORD NOT FOUND?     #Y30SSRG*/
         CLI   CCACD1(R11),8                                       0362
         BE    @RF00362                                            0362
*             CALL EXIT;            /* RETURN TO CALLER      #Y30SSRG*/
         BAL   @14,EXIT                                            0363
*           ELSE                                                   0364
*             ;                     /* NO ERRORS - CONTINUE  #Y30SSRG*/
*                                                                  0364
@RF00362 DS    0H                                                  0365
*           /*********************************************************/
*           /*                                                       */
*           /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0365
*           CCAPROB=IGNOREIT;       /* CLEAR ERROR FLAG      #Y30SSRG*/
         SLR   @10,@10                                             0365
         ST    @10,CCAPROB(,R11)                                   0365
*           CCASRCH=CCASRCH&&CCASRCH;/* CLEAR SEARCH ARGUMENT      0366
*                                                            #Y30SSRG*/
         XC    CCASRCH(44,R11),CCASRCH(R11)                        0366
*           CCASRCIN=CATCLID;       /* CI NUMBER TO GET      #Y30SSRG*/
         MVC   CCASRCIN(3,R11),@CF00055+1                          0367
*           DO;                                                    0368
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=OFF;          /* NOT GET UPD                   */
*                                                                  0371
         NI    CCAF1KEY(R11),B'11100101'                           0371
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0372
*Z012GET:                                                          0372
*             CALL IGGPGET;         /* GET RECORD                    */
Z012GET  L     @15,@CV03023                                        0372
         BALR  @14,@15                                             0372
*           END;                    /* REGET CATALOG CLUSTER RCD   0373
*                                                            #Y30SSRG*/
*           IF CCACD1=RCS THEN                                     0374
         CLI   CCACD1(R11),0                                       0374
         BE    @RT00374                                            0374
*             ;                     /* GET ERRORS?           #Y30SSRG*/
*           ELSE                    /* YES, ERROR IN GET     #Y30SSRG*/
*             CALL EXIT;            /* RETURN TO CALLER      #Y30SSRG*/
         BAL   @14,EXIT                                            0376
*         END;                      /*                       #Y30SSRG*/
@RT00374 DS    0H                                                  0378
*       IF CTGWKA^=NONE THEN        /* USER WORK AREA?       #Y30SSRG*/
@RT00330 L     @10,CCACPL(,R11)                                    0378
         L     @05,CTGWKA(,@10)                                    0378
         LTR   @05,@05                                             0378
         BZ    @RF00378                                            0378
*         DO;                       /* YES, ADD CATLG NAME   #Y30SSRG*/
*           ENTNAMET(DELUSINX)=CTGTYPE;/* CATALOG TYPE (M/U) #Y30SSRG*/
         LA    @15,45                                              0380
         L     @14,CCACMSWA(,R11)                                  0380
         SLR   @09,@09                                             0380
         IC    @09,DELUSINX(,@14)                                  0380
         LR    @07,@09                                             0380
         MR    @06,@15                                             0380
         ST    @07,@TF00001                                        0380
         ALR   @07,@05                                             0380
         AL    @07,@CF04460                                        0380
         MVC   ENTNAMET-4(1,@07),CTGTYPE(@10)                      0380
*           ENTNAMEV(DELUSINX)=DELCATNM;/* CATALOG NAME      #Y30SSRG*/
         LR    @08,@05                                             0381
         AL    @08,@TF00001                                        0381
         AL    @08,@CF04461                                        0381
         L     @10,CTGENT(,@10)                                    0381
         MVC   ENTNAMEV-5(44,@08),DELCATNM(@10)                    0381
*           WKALEN2=WKALEN2+LENGTH(ENTNAMES);/* INCREMENT RETURN DATA
*                                      LENGTH                #Y30SSRG*/
         AH    @15,WKALEN2(,@05)                                   0382
         STH   @15,WKALEN2(,@05)                                   0382
*           DELUSINX=DELUSINX+INCR1;/* INCREMENT WA INDEX    #Y30SSRG*/
         AL    @09,@CF00037                                        0383
         STC   @09,DELUSINX(,@14)                                  0383
*         END;                      /*                       #Y30SSRG*/
*       ELSE                                                       0385
*         ;                         /* NO USER WORK AREA     #Y30SSRG*/
@RF00378 DS    0H                                                  0386
*     END;                          /*                       #Y30SSRG*/
*   ELSE                                                           0387
*     ;                             /* NOT DELETE REQUEST    #Y30SSRG*/
@RF00307 DS    0H                                                  0388
*   IF RCDCINO^=CATCLID THEN        /* CATLG CLUSTER ENTRY FOUND     */
         L     @10,CCAURAB(,R11)                                   0388
         L     @10,CCACPE1(,@10)                                   0388
         CLC   RCDCINO(3,@10),@CF00055+1                           0388
         BE    @RF00388                                            0388
*     DO;                           /* NO                            */
*       IF CTGDISC=ON&              /* DISCONNECT CATLG REQUEST ?    */
*           RCDID='U' THEN          /* & U ENTRY FOUND               */
         L     @05,CCACPL(,R11)                                    0390
         TM    CTGDISC(@05),B'00001000'                            0390
         BNO   @RF00390                                            0390
         CLI   RCDID(@10),C'U'                                     0390
         BNE   @RF00390                                            0390
*         DO;                                                      0391
*           CCASCRA=OFF;            /* ALLOW CRA I/0         @ZA05925*/
*                                                                  0392
         NI    CCASCRA(R11),B'11011111'                            0392
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLA5                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0393
*Z013DALL:                                                         0393
*           CALL IGGPDALL;          /* DELETE ALIAS CHAIN, IF IT   0393
*                                      EXISTS                        */
Z013DALL L     @15,@CV03017                                        0393
         BALR  @14,@15                                             0393
*           CCACD1=IGNOREIT;        /* CLEAR RETURN CODE     @Y30SSSM*/
         MVI   CCACD1(R11),X'00'                                   0394
*           CCAURAB=ADDR(CCARAB1);  /* INSURE DELETE OF 'U' ENTRY  0395
*                                                            @ZA00959*/
         LA    @10,CCARAB1(,R11)                                   0395
         ST    @10,CCAURAB(,R11)                                   0395
*           DO;                                                    0396
*                                                                  0396
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLAG                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0397
*Z015PDE:                                                          0397
*             CALL IGGPPDE;         /* PUT-DELETE RECORD             */
Z015PDE  L     @15,@CV03024                                        0397
         BALR  @14,@15                                             0397
*           END;                                                   0398
*         END;                                                     0399
*       ELSE                        /* NOT DISCONNECT OF U ENTRY     */
*         DO;                                                      0400
         B     @RC00390                                            0400
@RF00390 DS    0H                                                  0401
*           DO;                                                    0401
*             CCAMODID='AF';        /* SET MODULE ID                 */
         MVC   CCAMODID(2,R11),@CC04277                            0402
*             CCAREASN=RSN2;        /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'02'                                 0403
*             CCARETRN=RCENT;       /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'08'                                 0404
*           END;                    /* SET NOT FOUND CODE    @Y30SSRG*/
*Z017DLER:                                                         0406
*           CALL IGGPDLER;          /* GO TO ERROR CLEANUP           */
Z017DLER BAL   @14,IGGPDLER                                        0406
*         END;                                                     0407
*       CALL EXIT;                  /* RETURN TO CMS DRIVER          */
@RC00390 BAL   @14,EXIT                                            0408
*     END;                                                         0409
*   ELSE                                                           0410
*     ;                             /* CATALOG CLUSTER ENTRY FOUND 0410
*                                                            @Y30SSRG*/
@RF00388 DS    0H                                                  0411
*   IF CAXMCT=ON THEN               /* ATTEMPT TO DEL MAST CATLG   0411
*                                                              Y02020*/
         L     @10,CCAACB(,R11)                                    0411
         L     @10,ACBUAPTR(,@10)                                  0411
         TM    CAXMCT(@10),B'00000100'                             0411
         BNO   @RF00411                                            0411
*     DO;                           /* YES                     Y02020*/
*                                                                  0412
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AF', CCAREASN=RSN0, CCARETRN=RCDNECAT       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0413
*       CCAPROB=IGGSEGID+(RSN0*K256)+RCDNECAT;/* SET ERR CODE      0413
*                                                            @X04SVSM*/
         MVC   CCAPROB(4,R11),@CF04447                             0413
*Z019DLER:                                                         0414
*       CALL IGGPDLER;              /* GO TO ERR CLEANUP       Y02020*/
Z019DLER BAL   @14,IGGPDLER                                        0414
*     END;                          /*                         Y02020*/
*                                                                  0415
*   /*****************************************************************/
*   /*                                                               */
*   /* * TEST EXPDT (IF NOT PURGE)                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*   IF CTGPURG=OFF THEN             /* NOT PURGE                     */
@RF00411 L     @10,CCACPL(,R11)                                    0416
         TM    CTGPURG(@10),B'00100000'                            0416
         BNZ   @RF00416                                            0416
*     DO;                                                          0417
*       IF CVTDATE(2:4)<CEXP THEN   /* CURRENT DATE < EXP DATE       */
         L     @10,CCAURAB(,R11)                                   0418
         L     @10,CCACPE1(,@10)                                   0418
         L     @05,CVTPTR                                          0418
         CLC   CVTDATE+1(3,@05),CEXP(@10)                          0418
         BNL   @RF00418                                            0418
*         DO;                       /* YES                           */
*                                                                  0419
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AF', CCAREASN=RSN0, CCARETRN=RCDATE     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0420
*           CCAPROB=IGGSEGID+(RSN0*K256)+RCDATE;/* UNEXPIRED DATE  0420
*                                      CODE                  @Y30SSRG*/
         MVC   CCAPROB(4,R11),@CF04448                             0420
*Z021DLER:                                                         0421
*           CALL IGGPDLER;          /* GO TO ERROR CLEANUP           */
Z021DLER BAL   @14,IGGPDLER                                        0421
*         END;                                                     0422
*       ELSE                                                       0423
*         ;                         /* EXP DATE HAS PASSED   @Y30SSRG*/
@RF00418 DS    0H                                                  0424
*     END;                                                         0424
*   ELSE                                                           0425
*     ;                             /* PURGE REQUESTED               */
*                                                                  0425
@RF00416 DS    0H                                                  0426
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR EMPTY CATALOG IF NOT FORCE DELETE            @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0426
*   IF CTGSCR^=ON THEN              /* FORCE DELETE REQUEST  @Y30SSRG*/
         L     @10,CCACPL(,R11)                                    0426
         TM    CTGSCR(@10),B'00000010'                             0426
         BO    @RF00426                                            0426
*     DO;                           /* NO, CHECK FOR EMPTY CATALOG 0427
*                                                            @Y30SSRG*/
*       CCASRCH=CCASRCH&&CCASRCH;   /* BUILD HIGH KEY RANGE          */
         XC    CCASRCH(44,R11),CCASRCH(R11)                        0428
*       CCASRCH(1:1)=UPKRLL;        /* STARTING SEARCH ARG.          */
         MVI   CCASRCH(R11),X'40'                                  0429
*       DO R2=1 TO 3                /* CHECK FOR LESS THAN 3         */
*             WHILE(CCACD1=RCS);    /* TRUE NAME ENTRIES             */
         LA    R2,1                                                0430
@DL00430 CLI   CCACD1(R11),0                                       0430
         BNE   @DC00430                                            0430
*         DO;                                                      0431
*           CCAF1KEY=ON;            /* TRUE NAME GET                 */
*           CCAF1KGE=ON;            /* GET NEXT                      */
*           CCAF1UP=OFF;            /* NOT GET UPD                   */
         OI    CCAF1KEY(R11),B'00011000'                           0434
         NI    CCAF1UP(R11),B'11111101'                            0434
*           CCAURAB=ADDR(CCARAB1);  /* SET RAB PTR                   */
*                                                                  0435
         LA    @10,CCARAB1(,R11)                                   0435
         ST    @10,CCAURAB(,R11)                                   0435
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLBI                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0436
*Z023GET:                                                          0436
*           CALL IGGPGET;           /* GET RECORD                    */
Z023GET  L     @15,@CV03023                                        0436
         BALR  @14,@15                                             0436
*         END;                      /* GET NEXT RECORD W/ TN ENT.    */
*         CCASRCH=CNAME;            /* I.D. OF JUST GOTTEN RECORD    */
         L     @10,CCAURAB(,R11)                                   0438
         L     @10,CCACPE1(,@10)                                   0438
         MVC   CCASRCH(44,R11),CNAME(@10)                          0438
*         LEASTSIG=LEASTSIG+INCR1;  /* INSURE GET OF NXT HIGHER      */
         LA    @10,1                                               0439
         SLR   @05,@05                                             0439
         IC    @05,LEASTSIG(,R11)                                  0439
         ALR   @10,@05                                             0439
         STC   @10,LEASTSIG(,R11)                                  0439
*       END;                                                       0440
         AL    R2,@CF00037                                         0440
         C     R2,@CF00416                                         0440
         BNH   @DL00430                                            0440
@DC00430 DS    0H                                                  0441
*       IF CCACD1=RCENT THEN        /* NO RECORD FOUND ?             */
*                                                                  0441
         CLI   CCACD1(R11),8                                       0441
         BNE   @RF00441                                            0441
*         /***********************************************************/
*         /*                                                         */
*         /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0442
*         CCAPROB=IGNOREIT;         /* YES - OK TO CONTINUE  @Y30SSRG*/
         SLR   @10,@10                                             0442
         ST    @10,CCAPROB(,R11)                                   0442
*       ELSE                        /* NOT END OF DATA       @Y30SSRG*/
*         DO;                                                      0443
         B     @RC00441                                            0443
@RF00441 DS    0H                                                  0444
*           IF CCACD1=RCS THEN      /* MORE THAN 2 RECORDS FOUND     */
*                                                                  0444
         CLI   CCACD1(R11),0                                       0444
         BNE   @RF00444                                            0444
*             /*******************************************************/
*             /*                                                     */
*             /* IF SECOND CCR RECORD IS IN CAT THEN ASSUME IT IS A  */
*             /* TARGET FROM A COPY CATALOG. OK, TO DELETE.          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0445
*             DO;                                                  0445
*               CCARPLX=XGIDGE;     /* SET OPTIONS TO SKIP RECORDS 0446
*                                                            @YM05745*/
         MVI   CCARPLX(R11),X'99'                                  0446
*               CCAMLRET=R13+SASIZ; /* SET FOR ERROR RETURN FROM XIO
*                                                            @YM05745*/
         LA    @10,12                                              0447
         ALR   @10,R13                                             0447
         ST    @10,CCAMLRET(,R11)                                  0447
*               CCASRCH=CCASRCH&&CCASRCH;/*                    Y02020*/
         XC    CCASRCH(44,R11),CCASRCH(R11)                        0448
*               CCASRCH(4:4)=VEXTCI;/* CHECK FOR               Y02020*/
         MVI   CCASRCH+3(R11),X'09'                                0449
*               CCAURAB=ADDR(CCARAB1);/*                       Y02020*/
         LA    @10,CCARAB1(,R11)                                   0450
         ST    @10,CCAURAB(,R11)                                   0450
*               RCDID=VOLEXTID;     /* SET FOR DO LOOP CONTROL Y02020*/
         L     @10,CCACPE1(,@10)                                   0451
         MVI   RCDID(@10),C'W'                                     0451
*               DO WHILE(RCDID=VOLEXTID);/* SKIP OVER VOL EXTENTIOS
*                                                              Y02020*/
         B     @DE00452                                            0452
@DL00452 DS    0H                                                  0453
*                 LEASTSIG=ONE;     /* OF SOURCE CAT, IF THERE Y02020*/
*                                                                  0453
         MVI   LEASTSIG(R11),X'01'                                 0453
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLAG                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0454
*Z025XIO:                                                          0454
*                 CALL IGGPXIO;                                    0454
*                                                                  0454
Z025XIO  L     @15,@CV03030                                        0454
         BALR  @14,@15                                             0454
*                 /***************************************************/
*                 /*                                                 */
*                 /* SKIP OVER VOLUME RECORDS                @YM05745*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0455
*                 CCASRCH=RECKEY;   /*                         Y02020*/
         L     @10,CCAURAB(,R11)                                   0455
         L     @10,CCACPE1(,@10)                                   0455
         MVC   CCASRCH(44,R11),RECKEY(@10)                         0455
*               END;                /*                         Y02020*/
@DE00452 L     @10,CCAURAB(,R11)                                   0456
         L     @10,CCACPE1(,@10)                                   0456
         CLI   RCDID(@10),C'W'                                     0456
         BE    @DL00452                                            0456
*               DO R2=1 TO 3 WHILE(RCDID=RECTPC(R2:R2));/* SKIP OVER
*                                      D,I AND C               Y02020*/
         LA    R2,1                                                0457
@DL00457 L     @10,CCAURAB(,R11)                                   0457
         L     @10,CCACPE1(,@10)                                   0457
         LA    @05,RECTPC-1(R2)                                    0457
         CLC   RCDID(1,@10),0(@05)                                 0457
         BNE   @DC00457                                            0457
*                 LEASTSIG=ONE;     /* OF SOURCE CAT, IF THERE Y02020*/
*                                                                  0458
         MVI   LEASTSIG(R11),X'01'                                 0458
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLAG                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0459
*Z026XIO:                                                          0459
*                 CALL IGGPXIO;                                    0459
*                                                                  0459
Z026XIO  L     @15,@CV03030                                        0459
         BALR  @14,@15                                             0459
*                 /***************************************************/
*                 /*                                                 */
*                 /* SKIP OVER OLD CATALOG ENTRY             @YM05745*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0460
*                 CCASRCH=RECKEY;   /*                         Y02020*/
         L     @10,CCAURAB(,R11)                                   0460
         L     @10,CCACPE1(,@10)                                   0460
         MVC   CCASRCH(44,R11),RECKEY(@10)                         0460
*               END;                /*                         Y02020*/
         AL    R2,@CF00037                                         0461
         C     R2,@CF00416                                         0461
         BNH   @DL00457                                            0461
@DC00457 DS    0H                                                  0462
*               IF RCDID^='L' THEN  /* IF NOT CCR RECORD OF SOURCE 0462
*                                      CAT                     Y02020*/
         L     @10,CCAURAB(,R11)                                   0462
         L     @10,CCACPE1(,@10)                                   0462
         CLI   RCDID(@10),C'L'                                     0462
         BE    @RF00462                                            0462
*                 DO;               /* THEN NON EMPTY CAT      Y02020*/
*                                                                  0463
*                   /*************************************************/
*                   /*                                               */
*                   /* SET CCAMODID='AF', CCAREASN=RSN0,             */
*                   /* CCARETRN=RCDNECAT                             */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0464
*                   CCAPROB=IGGSEGID+(RSN0*K256)+RCDNECAT;/* IND   0464
*                                      NON-EMPTY CAT         @Y30SSRG*/
         MVC   CCAPROB(4,R11),@CF04447                             0464
*Z028DLER:                                                         0465
*                   CALL IGGPDLER;  /*                         Y02020*/
Z028DLER BAL   @14,IGGPDLER                                        0465
*                 END;              /*                         Y02020*/
*               ELSE                /*                         Y02020*/
*                 CCAPROB=IGNOREIT; /* TARGET CAT OK TO DELETE Y02020*/
         B     @RC00462                                            0467
@RF00462 SLR   @10,@10                                             0467
         ST    @10,CCAPROB(,R11)                                   0467
*             END;                  /*                         Y02020*/
*           ELSE                    /*                         Y02020*/
*Z029DLER:                                                         0469
*             CALL IGGPDLER;                                       0469
*                                                                  0469
         B     @RC00444                                            0469
@RF00444 DS    0H                                                  0469
Z029DLER BAL   @14,IGGPDLER                                        0469
*           /*********************************************************/
*           /*                                                       */
*           /* IO ERRROR, ERROR CLEAN UP Y02020                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0470
*         END;                      /*                         Y02020*/
*     END;                          /*                       @Y30SSRG*/
*   ELSE                                                           0472
*     ;                             /* SKIP CHECK, WAS FORCE DELETE
*                                      REQUEST               @Y30SSRG*/
@RF00426 DS    0H                                                  0473
*   CCASRCH=CCASRCH&&CCASRCH;       /* CLEAR SRCH ARG FLD            */
@RC00426 XC    CCASRCH(44,R11),CCASRCH(R11)                        0473
*   CCASRCH(1:6)=UCBVOLI;           /* CATLGS VOL SER                */
         L     @10,CCAACB(,R11)                                    0474
         L     @10,ACBUAPTR(,@10)                                  0474
         L     @10,CAXUCB(,@10)                                    0474
         MVC   CCASRCH(6,R11),UCBVOLI(@10)                         0474
*   DO;                                                            0475
*     CCAF1KEY=ON;                  /* TRUE NAME GET                 */
*     CCAF1KGE=OFF;                 /* NOT GET NEXT                  */
*     CCAF1UP=OFF;                  /* NOT GET UPD                   */
         OI    CCAF1KEY(R11),B'00010000'                           0478
         NI    CCAF1KGE(R11),B'11110101'                           0478
*     CCAURAB=ADDR(CCARAB1);        /* SET RAB PTR                   */
*                                                                  0479
         LA    @10,CCARAB1(,R11)                                   0479
         ST    @10,CCAURAB(,R11)                                   0479
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBI                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0480
*Z031GET:                                                          0480
*     CALL IGGPGET;                 /* GET RECORD                    */
Z031GET  L     @15,@CV03023                                        0480
         BALR  @14,@15                                             0480
*   END;                                                           0481
*   IF CCACD1^=RCS THEN             /* IF ERROR                      */
         CLI   CCACD1(R11),0                                       0482
         BE    @RF00482                                            0482
*Z032DLER:                                                         0483
*     CALL IGGPDLER;                /* GO TO ERROR CLEANUP           */
*                                                                  0483
Z032DLER BAL   @14,IGGPDLER                                        0483
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR OPEN DATA SETS IF FORCE DELETE              @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0484
*   IF CTGSCR^=ON THEN                                             0484
@RF00482 L     @10,CCACPL(,R11)                                    0484
         TM    CTGSCR(@10),B'00000010'                             0484
         BNO   @RT00484                                            0484
*     ;                             /* FORCE DELETE REQUEST? @Y30SSRG*/
*   ELSE                            /* YES, FORCE DELETE     @Y30SSRG*/
*     DO;                           /*                       @Y30SSRG*/
*Z033DCDS:                                                         0487
*       CALL IGGPDCDS;              /* CHECK FOR OPEN D.S.   @Y30SSRG*/
Z033DCDS BAL   @14,IGGPDCDS                                        0487
*       IF CCACD1^=RCS THEN         /* IF ERRORS GO TO       @Y30SSRG*/
         CLI   CCACD1(R11),0                                       0488
         BE    @RF00488                                            0488
*Z034DLER:                                                         0489
*         CALL IGGPDLER;            /* ERROR CLEANUP         @Y30SSRG*/
Z034DLER BAL   @14,IGGPDLER                                        0489
*     END;                          /*                       @Y30SSRG*/
*                                                                  0490
@RF00488 DS    0H                                                  0491
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE DELETE CATALOG WORK AREA                   @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0491
*                                   /* ** INITIALIZE DELCAT WORK AR
*                                      **                            */
*   DLCSGA=DLCSGA&&DLCSGA;          /* CLEAR DLC WK AREA             */
@RT00484 L     @10,CCAR4REC(,R11)                                  0491
         XC    DLCSGA(256,@10),DLCSGA(@10)                         0491
*   DLCSGB=DLCSGB&&DLCSGB;          /*                               */
         XC    DLCSGB(256,@10),DLCSGB(@10)                         0492
*   DLCRT=CTGTYPE;                  /* TYPE OF CATLG (M/U)           */
         L     @05,CCACPL(,R11)                                    0493
         MVC   DLCRT(1,@10),CTGTYPE(@05)                           0493
*   DLCACB=CCAACB;                  /* CATLG ACB PTR                 */
         L     @15,CCAACB(,R11)                                    0494
         ST    @15,DLCACB(,@10)                                    0494
*   DLCUCPL=CCACPL;                 /* INPUT CPL PTR                 */
         ST    @05,DLCUCPL(,@10)                                   0495
*   RFY                                                            0496
*     CTGPL BASED(ADDR(DLCCPL));    /* USING CPL IN DLC WK AR        */
*   CTGWKA=ADDR(DLCXWA);            /* EXTRACT W.A. PTR              */
         LA    @05,DLCXWA(,@10)                                    0497
         ST    @05,CTGWKA(,@10)                                    0497
*   CTGNOFLD=INIT1;                 /* NO. OF FPLS                   */
         MVI   CTGNOFLD(@10),X'01'                                 0498
*   DLCFPLP=ADDR(DLCFPL(1));        /* PTR TO SP. HDR. GR. FPL       */
         LA    @05,DLCFPL(,@10)                                    0499
         ST    @05,DLCFPLP(,@10)                                   0499
*   R1=ADDR(DLCFPL(1));             /* SETUP 1ST FPL                 */
         LR    R1,@05                                              0500
*   CTGFLDNO=INIT1;                 /* COUNT OF DATA PRTS            */
         MVI   CTGFLDNO(R1),X'01'                                  0501
*   CTGFLDNM=ADDR(FLDNM1);          /* SPACE HEADER FIELD COMB NM    */
         LA    @05,FLDNM1                                          0502
         ST    @05,CTGFLDNM(,R1)                                   0502
*   CTGFLCHN=ADDR(DLCFPL(2));       /* CHAIN FPL 2 TO FPL1           */
         LA    @05,DLCFPL+24(,@10)                                 0503
         ST    @05,CTGFLCHN(,R1)                                   0503
*   R1=ADDR(DLCFPL(2));             /* SET UP 2ND FPL                */
         LR    R1,@05                                              0504
*   CTGFLDNO=INIT1;                 /* COUNT OF DATA PTRS            */
         MVI   CTGFLDNO(R1),X'01'                                  0505
*   CTGFLDCD=CTGFLDEQ;              /* INDICATE TEST EQUAL           */
         MVI   CTGFLDCD(R1),X'80'                                  0506
*   CTGFLDNM=ADDR(FLDNM2);          /* IND TEST OF RELREPNO COUNT    */
         LA    @05,FLDNM2                                          0507
         ST    @05,CTGFLDNM(,R1)                                   0507
*   CTGFLCHN=ADDR(DLCFPL(3));       /* CHAIN FPL3 TO FPL2            */
         LA    @05,DLCFPL+48(,@10)                                 0508
         ST    @05,CTGFLCHN(,R1)                                   0508
*   DLCFLNG(2)=LENGTH(GOTSTCT);     /* LENGTH OF RELREPNO CNT FLD    */
         LA    @05,2                                               0509
         ST    @05,DLCFLNG+24(,@10)                                0509
*   DLCFLPT(2)=ADDR(GOTSTCT);       /* PTR TO RELREPNO CNT FLD       */
         LA    @14,GOTSTCT                                         0510
         ST    @14,DLCFLPT+24(,@10)                                0510
*   R1=ADDR(DLCFPL(3));             /* SETUP 3RD FPL                 */
         LA    R1,DLCFPL+48(,@10)                                  0511
*   CTGFLDNO=INIT1;                 /* COUNT OF DATA PTRS            */
         MVI   CTGFLDNO(R1),X'01'                                  0512
*   CTGFLDCD=CTGFLDGT;              /* IND. TEST GR THAN             */
         MVI   CTGFLDCD(R1),X'20'                                  0513
*   CTGFLDNM=ADDR(FLDNM3);          /* RETURN NXT GO                 */
         LA    @14,FLDNM3                                          0514
         ST    @14,CTGFLDNM(,R1)                                   0514
*   DLCFLNG(3)=LENGTH(DLCSRRNO);    /* LENGTH OF CUR RELREPNO        */
         ST    @05,DLCFLNG+48(,@10)                                0515
*   DLCFLPT(3)=ADDR(DLCSRRNO);      /* PTR TO CUR RELREPNO           */
         LA    @05,DLCSRRNO(,@10)                                  0516
         ST    @05,DLCFLPT+48(,@10)                                0516
*   CTGFLDGC=SPHDRGC;               /* SPACE HDR GROUP CODE          */
         MVI   CTGFLDGC(R1),X'06'                                  0517
*   DLCXWAL=LENGTH(DLCXWA);         /* EXTRACT RTN AREA LENGTH       */
         MVC   DLCXWAL(2,@10),@CH00118                             0518
*   CCAREUSE=ON;                    /* ALLOW RAB REUSE               */
         OI    CCAREUSE(R11),B'00000100'                           0519
*   CCAF2NVC=ON;                    /* SUPPRESS FPL VALIDITY CHK     */
         OI    CCAF2NVC(R11),B'01000000'                           0520
*   CCARABB=CCAURAB;                /* BASE VOL ENT. RAB             */
         L     @05,CCAURAB(,R11)                                   0521
         ST    @05,CCARABB(,R11)                                   0521
*   CCARABF=ADDR(CCARAB1);          /* 1ST WORK RAB                  */
         LA    @05,CCARAB1(,R11)                                   0522
         ST    @05,CCARABF(,R11)                                   0522
*   CCARABL=ADDR(CCARAB3);          /* LAST WORK RAB                 */
         LA    @05,CCARAB3(,R11)                                   0523
         ST    @05,CCARABL(,R11)                                   0523
*   CCAEXT=ON;                      /* INDICATE EXTRACT OP.          */
         OI    CCAEXT(R11),B'00000010'                             0524
*   CCAXCPL=ADDR(DLCCPL);           /* POINT TO WORK CPL FOR XTR     */
         ST    @10,CCAXCPL(,R11)                                   0525
*   DCSWASG=DCSWASG&&DCSWASG;       /* SET UP SCRATCH P.L.           */
         L     @05,CCAR5REC(,R11)                                  0526
         XC    DCSWASG(106,@05),DCSWASG(@05)                       0526
*   DCSSPL=SCRACODE;                /* SCRATCH OPTIONS               */
         L     @14,SCRACODE                                        0527
         ST    @14,DCSSPL(,@05)                                    0527
*   DCSNMP=ADDR(DCSDSN);            /* POINT TO DATA SPACE NAME      */
         LA    @14,DCSDSN(,@05)                                    0528
         ST    @14,DCSNMP(,@05)                                    0528
*   DCSVLP=ADDR(DCSVL);             /* POINT TO VOL LIST             */
         LA    @14,DCSVL(,@05)                                     0529
         ST    @14,DCSVLP(,@05)                                    0529
*   DCSDSN=DSNSKEL;                 /* DATA-SPACE NAME SKELETON      */
*                                                                  0530
         MVC   DCSDSN(44,@05),@CC03767                             0530
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE VOLUME LIST                                @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*   DCSVL=INIT1;                    /* INDICATE ONE VOL              */
         MVC   DCSVL(2,@05),@CH00037                               0531
*   DCSDVTY=UCBTYP;                 /* DEVICE TYPE CODE              */
         L     @15,ACBUAPTR(,@15)                                  0532
         L     @15,CAXUCB(,@15)                                    0532
         MVC   DCSDVTY(4,@05),UCBTYP(@15)                          0532
*   DCSVOLI=UCBVOLI;                /* VOL SER NO.                   */
*                                                                  0533
         MVC   DCSVOLI(6,@05),UCBVOLI(@15)                         0533
*   /*****************************************************************/
*   /*                                                               */
*   /* EXTRACT DATA SPACE INFORMATION FROM VOLUME ENTRY              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0534
*   DLCSTOP=OFF;                    /* RESET LOOP STOPPER            */
         NI    DLCSTOP(@10),B'11111110'                            0534
*   DO WHILE(DLCSTOP=OFF);          /* PROCESS DATA SPACES           */
*                                                                  0535
         B     @DE00535                                            0535
@DL00535 DS    0H                                                  0536
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLAZ                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0536
*Z035EXT:                                                          0536
*     CALL IGGPEXT;                 /* EXTRACT NEXT SP. HDR GO       */
Z035EXT  L     @15,@CV03018                                        0536
         BALR  @14,@15                                             0536
*     IF DLCFLNG(1)^=0 THEN         /* WAS GO RETURNED               */
         L     @10,CCAR4REC(,R11)                                  0537
         L     @05,DLCFLNG(,@10)                                   0537
         LTR   @05,@05                                             0537
         BZ    @RF00537                                            0537
*       DO;                         /* YES                           */
*         IF CTVSPUNQ=OFF THEN      /* NON-UNIQUE DATA SPACE ?       */
         LA    @05,108                                             0539
         ALR   @05,@10                                             0539
         TM    CTVSPUNQ(@05),B'10000000'                           0539
         BNZ   @RF00539                                            0539
*           IF DLCFDSP=ON THEN      /* 1ST DATA SPACE ?              */
         TM    DLCFDSP(@10),B'00000010'                            0540
         BNO   @RF00540                                            0540
*             DO;                   /* NO                            */
*               DCSDSTS=CTVF1TIM;   /* RAW TIME STAMP                */
         L     @10,CCAR5REC(,R11)                                  0542
         MVC   DCSDSTS(8,@10),CTVF1TIM(@05)                        0542
*Z036SDSP:                                                         0543
*               CALL IGGPSDSP;      /* GO SCRATCH DATA SPACE         */
Z036SDSP BAL   @14,IGGPSDSP                                        0543
*             END;                                                 0544
*           ELSE                    /* D SP HAS PART OF A CATLG      */
*             DO;                                                  0545
         B     @RC00540                                            0545
@RF00540 DS    0H                                                  0546
*               DLCFDSP=ON;         /* 1ST DATA SP HAS BEEN SAVED    */
         L     @10,CCAR4REC(,R11)                                  0546
         OI    DLCFDSP(@10),B'00000010'                            0546
*               DLCTSA=CTVF1TIM;    /* SAVE D. SP T.S. FOR LATER     */
         MVC   DLCTSA(8,@10),CTVF1TIM+108(@10)                     0547
*             END;                                                 0548
*         ELSE                                                     0549
*           ;                                                      0549
@RF00539 DS    0H                                                  0550
*         DLCSRRNO=DLCRRNO;         /* SET TO XTRACT NXT GO          */
@RC00539 L     @10,CCAR4REC(,R11)                                  0550
         LH    @05,DLCRRNO(,@10)                                   0550
         STH   @05,DLCSRRNO(,@10)                                  0550
*       END;                                                       0551
*     ELSE                          /* NO MORE GOS                   */
*       DLCSTOP=ON;                 /* KILL LOOP                     */
         B     @RC00537                                            0552
@RF00537 L     @10,CCAR4REC(,R11)                                  0552
         OI    DLCSTOP(@10),B'00000001'                            0552
*   END;                                                           0553
*                                                                  0553
@RC00537 DS    0H                                                  0553
@DE00535 L     @10,CCAR4REC(,R11)                                  0553
         TM    DLCSTOP(@10),B'00000001'                            0553
         BZ    @DL00535                                            0553
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE THE CATALOG                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*   CAXF2DT=ON;                     /* INDICATE DELETED CATALOG      */
         L     @10,CCAACB(,R11)                                    0554
         L     @05,ACBUAPTR(,@10)                                  0554
         OI    CAXF2DT(@05),B'10000000'                            0554
*   DCSCLPL=CCAACB;                 /* ACB PTR TO CLOSE P.L.         */
         L     @05,CCAR5REC(,R11)                                  0555
         ST    @10,DCSCLPL(,@05)                                   0555
*   DCSCLPLE=ON;                    /* INDICATE SINGLE ENTRY LST     */
         OI    DCSCLPLE(@05),B'10000000'                           0556
*   R1=ADDR(DCSCLPL);               /* PT TO CLOSE P.L.              */
         LA    R1,DCSCLPL(,@05)                                    0557
*   GEN(CLOSE ,MF=(E,(1)));         /* CLOSE THE CATALOG             */
*                                                                  0558
         CLOSE ,MF=(E,(1))
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE THE CATALOG POINTER - DELETE U ENTRY FROM FROM MCAT    */
*   /*                                                       @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0559
*   CPLBLK=CCACPL->CPLBLK;          /* COPY USERS CPL          Y02020*/
         L     @10,CCAR4REC(,R11)                                  0559
         L     @05,CCACPL(,R11)                                    0559
         MVC   CPLBLK(28,@10),CPLBLK(@05)                          0559
*   CTGDISC=ON;                     /* INDICATE DISCONNECT CATLG   0560
*                                                              Y02020*/
         OI    CTGDISC(@10),B'00001000'                            0560
*   CCACPL=ADDR(DLCCPL);            /* PT TO INTERNAL CPL      Y02020*/
         ST    @10,CCACPL(,R11)                                    0561
*   CTGWKA=IGNOREIT;                /* NO WORKAREA PTR       @X04SVSM*/
         SLR   @05,@05                                             0562
         ST    @05,CTGWKA(,@10)                                    0562
*   CCAURAB=ADDR(CCARAB1);          /* INSURE GET TO RAB 1     Y02020*/
         LA    @10,CCARAB1(,R11)                                   0563
         ST    @10,CCAURAB(,R11)                                   0563
*   CCAF1UP=ON;                     /* INSURE GET FOR UPD      Y02020*/
         OI    CCAF1UP(R11),B'00000010'                            0564
*   CCAF4DRQ=OFF;                   /* PREVENT "U" CAT DEQ     Y02020*/
*                                                                  0565
         NI    CCAF4DRQ(R11),B'01111111'                           0565
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0566
*   CCAPROB=IGNOREIT;               /* INSURE CLEARED ERROR BYTE   0566
*                                                            @Y30SSRG*/
         ST    @05,CCAPROB(,R11)                                   0566
*   CCAACB=NONE;                    /* FORCE REPOINTING OF THE ACB 0567
*                                                            @Y30SSRG*/
*                                                                  0567
         ST    @05,CCAACB(,R11)                                    0567
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAH                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0568
*Z038SCAT:                                                         0568
*   CALL IGGPSCAT;                  /* GO TO SEARCH CATLG TO FIND U
*                                      ENTRY Y02020                  */
Z038SCAT L     @15,@CV03032                                        0568
         BALR  @14,@15                                             0568
*   IF CCACD1=RCS&                  /* IF NO ERROR &           Y02020*/
*       RCDID='U' THEN              /* U ENTRY FOUND           Y02020*/
         CLI   CCACD1(R11),0                                       0569
         BNE   @RF00569                                            0569
         L     @10,CCAURAB(,R11)                                   0569
         L     @10,CCACPE1(,@10)                                   0569
         CLI   RCDID(@10),C'U'                                     0569
         BNE   @RF00569                                            0569
*     DO;                           /* THEN                    Y02020*/
*                                                                  0570
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLA5                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0571
*Z039DALL:                                                         0571
*       CALL IGGPDALL;                                             0571
*                                                                  0571
Z039DALL L     @15,@CV03017                                        0571
         BALR  @14,@15                                             0571
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE ALIAS CHAIN, IF IT EXISTS                  @YM04819*/
*       /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0572
*       CCAPROB=IGNOREIT;                                          0572
*                                                                  0572
         SLR   @10,@10                                             0572
         ST    @10,CCAPROB(,R11)                                   0572
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR RETURN CODE                                 @Y30SSRG*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0573
*       CCAURAB=ADDR(CCARAB1);      /* INSURE DEL OF U ENTRY @ZA00614*/
         LA    @10,CCARAB1(,R11)                                   0573
         ST    @10,CCAURAB(,R11)                                   0573
*       CCASCRA=OFF;                /* ALLOW CRA I/0         @ZA05925*/
         NI    CCASCRA(R11),B'11011111'                            0574
*       DO;                                                        0575
*                                                                  0575
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLAG                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0576
*Z042PDE:                                                          0576
*         CALL IGGPPDE;             /* PUT-DELETE RECORD             */
Z042PDE  L     @15,@CV03024                                        0576
         BALR  @14,@15                                             0576
*       END;                        /* DELETE U ENTRY Y02020         */
*       IF CCAF1CR=ON THEN          /* IF CCR CHKPT IS REQUIRED    0578
*                                                              Y02020*/
         TM    CCAF1CR(R11),B'00000100'                            0578
         BNO   @RF00578                                            0578
*         DO;                       /*                         Y02020*/
*           CCAMLRET=R13+TWELVE;    /* INSURE ERROR RETURN TO ME   0580
*                                                              Y02020*/
*                                                                  0580
         LA    @10,12                                              0580
         ALR   @10,R13                                             0580
         ST    @10,CCAMLRET(,R11)                                  0580
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAG                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0581
*Z043CCCR:                                                         0581
*           CALL IGGPCCCR;          /* GO CHKPT THE CCR Y02020       */
Z043CCCR L     @15,@CV03016                                        0581
         BALR  @14,@15                                             0581
*         END;                      /*                         Y02020*/
*       ELSE                                                       0583
*         ;                         /*                         Y02020*/
@RF00578 DS    0H                                                  0584
*     END;                          /*                         Y02020*/
*   ELSE                                                           0585
*     ;                             /*                         Y02020*/
*                                                                  0585
@RF00569 DS    0H                                                  0586
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0586
*   CCAPROB=IGNOREIT;               /* CLEAR ERR CDE BYTE    @Y30SSRG*/
*                                                                  0586
         SLR   @10,@10                                             0586
         ST    @10,CCAPROB(,R11)                                   0586
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLA3                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0587
*Z045RPLF:                                                         0587
*   CALL IGGPRPLF;                  /* DEQ THE MCAT Y02020           */
Z045RPLF L     @15,@CV03025                                        0587
         BALR  @14,@15                                             0587
*   CCAF2XEQ=ON;                    /* RESTORE DEQ RQD. IND.   Y02020*/
         OI    CCAF2XEQ(R11),B'00010000'                           0588
*   CCAF4DRQ=ON;                    /* RESTORE EXC CONT. IND.  Y02020*/
         OI    CCAF4DRQ(R11),B'10000000'                           0589
*   CCAACB=DLCACB;                  /* RESTORE UCAT ACB PTR    Y02020*/
         L     @10,CCAR4REC(,R11)                                  0590
         L     @05,DLCACB(,@10)                                    0590
         ST    @05,CCAACB(,R11)                                    0590
*   CCAEDRNM=ADDR(CAXCNAM);         /* RESTORE DEQ MINOR NAME  Y02020*/
         L     @05,ACBUAPTR(,@05)                                  0591
         LA    @15,CAXCNAM(,@05)                                   0591
         ST    @15,CCAEDRNM(,R11)                                  0591
*   CCAEDUCB=ADDR(CAXUCB);          /* RESTORE DEQ UCB PTR     Y02020*/
         LA    @15,CAXUCB(,@05)                                    0592
         ST    @15,CCAEDUCB(,R11)                                  0592
*   CCACPL=DLCUCPL;                 /* RESTORE USER CPL PTR    Y02020*/
         L     @15,DLCUCPL(,@10)                                   0593
         ST    @15,CCACPL(,R11)                                    0593
*   CCARPLK=NONE;                   /* CLEAR THE RPL REF, RPLF       */
         MVI   CCARPLK(R11),X'00'                                  0594
*   IF CTGSCR=ON THEN               /* FORCE DELETE          @ZA11120*/
         TM    CTGSCR(@10),B'00000010'                             0595
         BNO   @RF00595                                            0595
*     DO;                                                          0596
*       DELUCB=CAXUCB;              /* SET UCB ADDRESS       @ZA11120*/
         L     @05,CAXUCB(,@05)                                    0597
         ST    @05,DELUCB(,@10)                                    0597
*       DELDEVT=UCBTYP;             /* DEVICE TYPE           @ZA11120*/
         MVC   DELDEVT(4,@10),UCBTYP(@05)                          0598
*       DELVLSER=UCBVOLI;           /* VOLUME SERIAL         @ZA11120*/
*                                                                  0599
         MVC   DELVLSER(6,@10),UCBVOLI(@05)                        0599
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0600
*Z046DFM1:                                                         0600
*       CALL IGGPDFM1;              /* DELETE UNIQUE DS      @ZA11120*/
Z046DFM1 L     @15,@CV03019                                        0600
         BALR  @14,@15                                             0600
*     END;                                                         0601
*   ELSE                            /* NOT FORCE DELETE      @ZA11120*/
*     DO;                                                          0602
         B     @RC00595                                            0602
@RF00595 DS    0H                                                  0603
*       IF DLCRT='M' THEN           /* IF DEL MCAT                   */
         L     @10,CCAR4REC(,R11)                                  0603
         CLI   DLCRT(@10),C'M'                                     0603
         BNE   @RF00603                                            0603
*         DSNTYPE=DSPMCAT;          /* D SP CONTAINS MCAT            */
         L     @10,CCAR5REC(,R11)                                  0604
         MVI   DSNTYPE(@10),C'6'                                   0604
*       ELSE                        /* DEL UCAT                      */
*         DSNTYPE=DSPUCAT;          /* D SP CONTAINS UCAT            */
         B     @RC00603                                            0605
@RF00603 L     @10,CCAR5REC(,R11)                                  0605
         MVI   DSNTYPE(@10),C'4'                                   0605
*       DO;                         /* SCRATCH SAVED DATA SPACE      */
@RC00603 DS    0H                                                  0607
*         DCSDSTS=DLCTSA;           /* MOVE RAW TIME STAMP           */
         L     @10,CCAR5REC(,R11)                                  0607
         L     @05,CCAR4REC(,R11)                                  0607
         MVC   DCSDSTS(8,@10),DLCTSA(@05)                          0607
*Z047SDSP:                                                         0608
*         CALL IGGPSDSP;            /* GO SCRATCH DATA SPACE         */
Z047SDSP BAL   @14,IGGPSDSP                                        0608
*       END;                                                       0609
*       IF DCSSRC=SCRNFCDE THEN     /* DSCB NOT FOUND          Y02020*/
         L     @10,CCAR5REC(,R11)                                  0610
         CLI   DCSSRC(@10),1                                       0610
         BNE   @RF00610                                            0610
*         DO;                       /*                         Y02020*/
*           IF DSNTYPE=DSPUCAT THEN /* Z9999994 WAS TRIED      Y02020*/
         CLI   DSNTYPE(@10),C'4'                                   0612
         BNE   @RF00612                                            0612
*             DSNTYPE=DSPMCAT;      /* TRY Z9999996            Y02020*/
         MVI   DSNTYPE(@10),C'6'                                   0613
*           ELSE                    /* Z9999996 WAS TRIED      Y02020*/
*             DSNTYPE=DSPUCAT;      /* TRY Z9999994            Y02020*/
         B     @RC00612                                            0614
@RF00612 L     @10,CCAR5REC(,R11)                                  0614
         MVI   DSNTYPE(@10),C'4'                                   0614
*Z048SDSP:                                                         0615
*           CALL IGGPSDSP;          /* GO RETRY SCRATCH        Y02020*/
@RC00612 DS    0H                                                  0615
Z048SDSP BAL   @14,IGGPSDSP                                        0615
*         END;                      /*                         Y02020*/
*       ELSE                                                       0617
*         ;                         /*                         Y02020*/
@RF00610 DS    0H                                                  0618
*     END;                          /*                       @ZA11120*/
*                                                                  0618
*   /*****************************************************************/
*   /*                                                               */
*   /* * RESET F4 DSCB OWNERSHIP BIT                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0619
*   CCAURAB=CCAR5REC;               /* POINT TO F4 RD/WR WA CORE     */
@RC00595 L     @10,CCAR5REC(,R11)                                  0619
         ST    @10,CCAURAB(,R11)                                   0619
*   F4WDUCB=CAXUCB;                 /* STORE UCB POINTER             */
         L     @05,CCAACB(,R11)                                    0620
         L     @05,ACBUAPTR(,@05)                                  0620
         MVC   F4WDUCB(3,@10),CAXUCB+1(@05)                        0620
*RESTART:                                                          0621
*   ;                                                              0621
*                                                                  0621
RESTART  DS    0H                                                  0622
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLBU                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*Z049F4RD:                                                         0622
*   CALL IGGPF4RD;                  /* READ THE FORMAT 4 DSCB        */
Z049F4RD L     @15,@CV03020                                        0622
         BALR  @14,@15                                             0622
*   IF CCACD1=RCS THEN              /* NO ERROR ON READ              */
         CLI   CCACD1(R11),0                                       0623
         BNE   @RF00623                                            0623
*     DO;                                                          0624
*       DS4AMTIM=DS4AMTIM&&DS4AMTIM;/* CLEAR TIME STAMP              */
         LA    @10,120                                             0625
         AL    @10,CCAR5REC(,R11)                                  0625
         XC    DS4AMTIM(8,@10),DS4AMTIM(@10)                       0625
*       DS4R2TIM=DS4R2TIM&&DS4R2TIM;/* CLEAR CRA TIME STAMP  @Y30SSRG*/
         XC    DS4R2TIM(8,@10),DS4R2TIM(@10)                       0626
*       DS4VSCRA=NONE;              /* CLEAR CRA TTR         @Y30SSRG*/
         SLR   @05,@05                                             0627
         STCM  @05,3,DS4VSCRA(@10)                                 0627
*       DS4AMCAT=DS4AMCAT&&DS4AMCAT;/* CLEAR VSAM INDICATOR          */
*                                                                  0628
         XC    DS4AMCAT(3,@10),DS4AMCAT(@10)                       0628
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBU                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0629
*Z050F4WR:                                                         0629
*       CALL IGGPF4WR;              /* WRITE BACK UPDATED F4         */
Z050F4WR L     @15,@CV03021                                        0629
         BALR  @14,@15                                             0629
*     END;                                                         0630
*   ELSE                            /* READ ERROR            @ZA11120*/
*                                                                  0631
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBU                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0631
*Z051F4DQ:                                                         0631
*     CALL IGGPF4DQ;                /* DEQ FORMAT 4          @ZA11120*/
         B     @RC00623                                            0631
@RF00623 DS    0H                                                  0631
Z051F4DQ L     @15,@CV03022                                        0631
         BALR  @14,@15                                             0631
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00623 BAL   @14,EXIT                                            0632
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPSDSP');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPSDSP'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0635
@EF00002 DS    0H                                                  0635
@ER00002 BR    @14                                                 0635
         EJECT
*                                                                  0636
*/********************************************************************/
*/*                                                                  */
*/*        IGGPSDSP  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0636
*IGGPSDSP:                                                         0636
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
IGGPSDSP DS    0H                                                  0637
*Z052:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z052SDSP:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0637
*    (R5,                                                          0637
*     R6,                                                          0637
*     R7,                                                          0637
*     R8,                                                          0637
*     R9,                                                          0637
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z052     DS    0H                                                  0637
Z052SDSP DS    0H                                                  0638
*   RFY                                                            0638
*    (R2,                                                          0638
*     R3,                                                          0638
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA     0640
*                                      SCRATCH DATA SP.              */
         LA 13,12(13)
*   R1=ADDR(DCSWA);                 /* PT TO SCRATCH WA COMPLETE DATA
*                                      SPACE NAME                    */
         L     R1,CCAR5REC(,R11)                                   0641
*   GEN REFS(R1,R14,R15,DCSDSTS,DSPNTR) SETS(DCSTRWA);             0642
             UNPK DCSTRWA(R15,R1),DCSDSTS(8,R1) /*TIMESTAMP  @Y30SSSM*/
             TR   DCSTRWA(R14,R1),DSPNTR-240 /*XLATE TO EBCDIC       */
*   DSNLTS=LTTS;                    /* TIMESTAMP TO DELETE SP NAME   */
         L     @10,CCAR5REC(,R11)                                  0643
         MVC   DSNLTS(7,@10),LTTS(@10)                             0643
*   DSNRTS=RTTS;                    /* TIMESTAMP TO DELETE SP NAME   */
         MVC   DSNRTS(7,@10),RTTS(@10)                             0644
*   R0=NONE;                        /* CLEAR R0                      */
         SLR   R0,R0                                               0645
*   R1=ADDR(DCSSPL);                /* PT TO SCRATCH PARMLIST        */
         LR    R1,@10                                              0646
*   GEN(SVC 29);                    /* SCRATCH DATA SPACE            */
         SVC 29
*   DELSPSCR=ON;                    /* INDICATE SPACE SCRATCHED    0648
*                                                            @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0648
         OI    DELSPSCR(@10),B'00000001'                           0648
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0649
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDLER');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDLER'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0652
@EF00003 DS    0H                                                  0652
@ER00003 BR    @14                                                 0652
         EJECT
*                                                                  0653
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDLER  -  PROCEDURE  INTERNALLY  CALLED  UNNESTED      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0653
*IGGPDLER:                                                         0653
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
IGGPDLER DS    0H                                                  0654
*Z053:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z053DLER:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0654
*    (R5,                                                          0654
*     R6,                                                          0654
*     R7,                                                          0654
*     R8,                                                          0654
*     R9,                                                          0654
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z053     DS    0H                                                  0654
Z053DLER DS    0H                                                  0655
*   RFY                                                            0655
*    (R2,                                                          0655
*     R3,                                                          0655
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*/*ERROR CLEANUP                                                     */
*                                                                  0656
*   RFY                                                            0656
*     CTGPL BASED(CCACPL);                                         0656
*   IF CTGWKA^=NONE THEN            /* USER WORK AREA PROVIDED?    0657
*                                                            @Y30SSRG*/
         L     @10,CCACPL(,R11)                                    0657
         L     @10,CTGWKA(,@10)                                    0657
         LTR   @10,@10                                             0657
         BZ    @RF00657                                            0657
*     DO;                           /* YES,DELETE LAST ENTRY @Y30SSRG*/
*       IF DELUSINX>INCR1 THEN      /* MORE THAN ONE ENTRY   @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0659
         CLI   DELUSINX(@10),1                                     0659
         BNH   @RF00659                                            0659
*         DELUSINX=DELUSINX-INCR1;  /* DECREMENT WORK AREA INDEX   0660
*                                                            @Y30SSRG*/
         SLR   @05,@05                                             0660
         IC    @05,DELUSINX(,@10)                                  0660
         BCTR  @05,0                                               0660
         STC   @05,DELUSINX(,@10)                                  0660
*       ELSE                                                       0661
*         ;                         /* ONLY ONE ENTRY        @Y30SSRG*/
@RF00659 DS    0H                                                  0662
*       ENTNAMET(DELUSINX)=NONE;    /* CLEAR ENTRY TYPE CODE @Y30SSRG*/
         LA    @10,45                                              0662
         L     @05,CCACMSWA(,R11)                                  0662
         SLR   @07,@07                                             0662
         IC    @07,DELUSINX(,@05)                                  0662
         MR    @06,@10                                             0662
         L     @05,CCACPL(,R11)                                    0662
         L     @05,CTGWKA(,@05)                                    0662
         SLR   @06,@06                                             0662
         LA    @15,0(@07,@05)                                      0662
         AL    @15,@CF04460                                        0662
         STC   @06,ENTNAMET-4(,@15)                                0662
*       ENTNAMEV(DELUSINX)=ENTNAMEV(DELUSINX)&&ENTNAMEV(DELUSINX);/*
*                                      CLEAR ENTRY NAME      @Y30SSRG*/
         ALR   @07,@05                                             0663
         AL    @07,@CF04461                                        0663
         XC    ENTNAMEV-5(44,@07),ENTNAMEV-5(@07)                  0663
*       IF WKALEN2>LENGTH(USERWKA)+ /* ANY ENTRIES IN        @Y30SSRG*/
*           LENGTH(ENTNAMES) THEN   /* USER WA TABLE?        @Y30SSRG*/
         LH    @15,WKALEN2(,@05)                                   0664
         C     @15,@CF03782                                        0664
         BNH   @RF00664                                            0664
*         WKALEN2=WKALEN2-LENGTH(ENTNAMES);/* SUBTRACT LENGTH OF LAST
*                                      ENTRY                 @Y30SSRG*/
         SLR   @15,@10                                             0665
         STH   @15,WKALEN2(,@05)                                   0665
*       ELSE                        /* NO OR ONE ENTRY ONLY  @Y30SSRG*/
*         WKALEN2=LENGTH(USERWKA);  /* INDICATE EMPTY WORK AREA    0666
*                                                            @Y30SSRG*/
         B     @RC00664                                            0666
@RF00664 L     @10,CCACPL(,R11)                                    0666
         L     @10,CTGWKA(,@10)                                    0666
         MVC   WKALEN2(2,@10),@CH00058                             0666
*     END;                          /*                       @Y30SSRG*/
*   ELSE                                                           0668
*     ;                             /* NO USER WORK AREA     @Y30SSRG*/
@RF00657 DS    0H                                                  0669
*   IF CAXF2REC=OFF THEN            /* RECOVERABLE CATALOG?  @Y30SSRG*/
@RC00657 L     @10,CCAACB(,R11)                                    0669
         L     @10,ACBUAPTR(,@10)                                  0669
         TM    CAXF2REC(@10),B'00000010'                           0669
         BNZ   @RF00669                                            0669
*     IF DELSPSCR=ON THEN           /* SPACE SCRATCHED?      @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0670
         TM    DELSPSCR(@10),B'00000001'                           0670
         BNO   @RF00670                                            0670
*       DO;                         /* YES, UPDATE TIME STAMPS     0671
*                                                            @Y30SSRG*/
*         CCARAB1=CCARAB1&&CCARAB3; /* SWAP CONTENTS         @Y30SSRG*/
         XC    CCARAB1(20,R11),CCARAB3(R11)                        0672
*         CCARAB3=CCARAB1&&CCARAB3; /* OF RAB1 & RAB3        @Y30SSRG*/
         XC    CCARAB3(20,R11),CCARAB1(R11)                        0673
*         CCARAB1=CCARAB1&&CCARAB3; /* FOR IGGPD4FT          @Y30SSRG*/
         XC    CCARAB1(20,R11),CCARAB3(R11)                        0674
*         DELERRIX=DELERRIX+INCR1;  /* INCREMENT ERROR ARRAY INDEX 0675
*                                                            @Y30SSRG*/
         LA    @05,1                                               0675
         SLR   @15,@15                                             0675
         IC    @15,DELERRIX(,@10)                                  0675
         ALR   @05,@15                                             0675
         STC   @05,DELERRIX(,@10)                                  0675
*         DELERRS(DELERRIX)=CCAPROB;/* SAVE ERROR            @Y30SSRG*/
*                                                                  0676
         SLA   @05,2                                               0676
         L     @15,CCAPROB(,R11)                                   0676
         ALR   @10,@05                                             0676
         STCM  @15,15,DELERRS-4(@10)                               0676
*         /***********************************************************/
*         /*                                                         */
*         /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0677
*         CCAPROB=IGNOREIT;         /* CLEAR ERROR CODE      @Y30SSRG*/
*                                                                  0677
         SLR   @10,@10                                             0677
         ST    @10,CCAPROB(,R11)                                   0677
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLA7                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0678
*Z055DF4T:                                                         0678
*         CALL IGGPDF4T;            /* UPDATE TIME STAMPS    @Y30SSRG*/
Z055DF4T L     @15,@CV03026                                        0678
         BALR  @14,@15                                             0678
*         IF CCACD1=RCS THEN        /* ANY ERRORS?           @Y30SSRG*/
         CLI   CCACD1(R11),0                                       0679
         BNE   @RF00679                                            0679
*           IF DELERRS(DELERRIX)^=NONE THEN/* ERROR SAVED?   @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0680
         SLR   @05,@05                                             0680
         IC    @05,DELERRIX(,@10)                                  0680
         LR    @15,@05                                             0680
         SLA   @15,2                                               0680
         ALR   @15,@10                                             0680
         ICM   @14,15,DELERRS-4(@15)                               0680
         LTR   @14,@14                                             0680
         BZ    @RF00680                                            0680
*             DO;                   /* YES, PREVIOUS ERROR   @Y30SSRG*/
*               CCAPROB=DELERRS(DELERRIX);/* RESTORE ERROR   @Y30SSRG*/
         ST    @14,CCAPROB(,R11)                                   0682
*               DELERRIX=DELERRIX-INCR1;/* DECREMENT INDEX   @Y30SSRG*/
         BCTR  @05,0                                               0683
         STC   @05,DELERRIX(,@10)                                  0683
*             END;                  /*                       @Y30SSRG*/
*           ELSE                                                   0685
*             ;                     /* NO ERROR SAVED        @Y30SSRG*/
@RF00680 DS    0H                                                  0686
*         ELSE                                                     0686
*           ;                       /* ERROR IN PROCESSING   @Y30SSRG*/
@RF00679 DS    0H                                                  0687
*         DELSPSCR=OFF;             /* RESET SPACE SCRATCHED BIT   0687
*                                                            @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0687
         NI    DELSPSCR(@10),B'11111110'                           0687
*       END;                        /*                       @Y30SSRG*/
*     ELSE                                                         0689
*       ;                           /* NO SPACE SCRATCHED    @Y30SSRG*/
@RF00670 DS    0H                                                  0690
*   ELSE                                                           0690
*     ;                             /* RECOVERABLE CATALOG   @Y30SSRG*/
@RF00669 DS    0H                                                  0691
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0691
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPEMSG');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPEMSG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0694
@EF00004 DS    0H                                                  0694
@ER00004 BR    @14                                                 0694
         EJECT
*                                                                  0695
*/********************************************************************/
*/*                                                                  */
*/*        IGGPEMSG  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0695
*IGGPEMSG:                                                         0695
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
IGGPEMSG DS    0H                                                  0696
*   GEN(ENTRY IGGPEMSG );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPEMSG
*Z056:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z056EMSG:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0697
*    (R5,                                                          0697
*     R6,                                                          0697
*     R7,                                                          0697
*     R8,                                                          0697
*     R9,                                                          0697
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z056     DS    0H                                                  0697
Z056EMSG DS    0H                                                  0698
*   RFY                                                            0698
*    (R2,                                                          0698
*     R3,                                                          0698
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE ERROR
*                                      MSG WTR                       */
         SR 12,15
*   RSAR13=R2;                      /* SAVE REG 2                    */
         STCM  R2,15,RSAR13(R13)                                   0704
*   R1=R13+SAVELEN2;                /* PT TO ERR MSG AREA            */
         LA    R1,24                                               0705
         ALR   R1,R13                                              0705
*   EMFL=WTPOP;                     /* SET TO ISSUE WTPS     @Y30SSRG*/
         MVC   EMFL(2,R1),WTPOP                                    0706
*   R2=CCACD1;                      /* CONVERT ERROR CODE            */
         SLR   R2,R2                                               0707
         IC    R2,CCACD1(,R11)                                     0707
*   CVD(R2,EMWB);                                                  0708
         CVD   R2,EMWB(,R1)                                        0708
*   UNPK(EMTX(1:3),EMWB(7:8));      /* AND INSERT INTO MSG           */
         UNPK  EMTX(3,R1),EMWB+6(2,R1)                             0709
*   EMTX(3:3)=EMTX(3:3)×'F0'X;                                     0710
         OI    EMTX+2(R1),X'F0'                                    0710
*   EMTX(4:4)='-';                  /* INSERT SEPERATOR      @Y30SSRG*/
         MVI   EMTX+3(R1),C'-'                                     0711
*   R2=CCAREASN;                    /* GET REASON CODE       @Y30SSRG*/
         SLR   R2,R2                                               0712
         IC    R2,CCAREASN(,R11)                                   0712
*   CVD(R2,EMWB);                   /* CNVT IT               @Y30SSRG*/
         CVD   R2,EMWB(,R1)                                        0713
*   UNPK(EMTX(5:7),EMWB(7:8));      /* INSERT IT INTO MSG    @Y30SSRG*/
         UNPK  EMTX+4(3,R1),EMWB+6(2,R1)                           0714
*   EMTX(7:7)=EMTX(7:7)×'F0'X;      /* INSURE NUMERIC        @Y30SSRG*/
         OI    EMTX+6(R1),X'F0'                                    0715
*   EMTX(8:8)=',';                  /* INSERT COMMA                  */
         MVI   EMTX+7(R1),C','                                     0716
*   EMTX(9:16)=JOBNAME;             /* INSERT JOBNAME                */
         L     @10,CVTPTR                                          0717
         L     @10,CVTTCBP(,@10)                                   0717
         L     @10,TCBPTR(,@10)                                    0717
         L     @10,TCBTIO(,@10)                                    0717
         MVC   EMTX+8(8,R1),JOBNAME(@10)                           0717
*   EMTX(17:17)=',';                /* INSERT COMMA                  */
         MVI   EMTX+16(R1),C','                                    0718
*   EMTX(18:25)=STEPNAME;           /* INSERT STEPNAME               */
         MVC   EMTX+17(8,R1),STEPNAME(@10)                         0719
*   EMTX(26:26)=',';                /* INSERT COMMA                  */
         MVI   EMTX+25(R1),C','                                    0720
*   R0=MSGLEN27;                    /* SET INSERT POINT FOR NFND     */
         LA    R0,27                                               0721
*   R2=R13;                         /* FIND CALLERS MOD-SF NAMES     */
         LR    R2,R13                                              0722
*Z057NFND:                                                         0723
*   CALL IGGPNFND;                  /* GO LOCATE NAMES AND STORE THEM
*                                      INTO MSG                      */
Z057NFND BAL   @14,IGGPNFND                                        0723
*   EMTX(31:37)=MODPREFX;           /* ST MOD NM PREFX       @Y30SSRG*/
         MVC   EMTX+30(7,R1),@CC03520                              0724
*   EMTX(38:39)=CCAMODID;           /* MOD ID TO MSG         @Y30SSRG*/
         MVC   EMTX+37(2,R1),CCAMODID(R11)                         0725
*   EMTX(40:43)=DCRC;               /* TERMINATE MSG W/ROUT CODE   0726
*                                                            @Y30SSRG*/
         MVC   EMTX+39(4,R1),DCRC                                  0726
*   EMLN=MSGLEN47+MSGHDRLN;         /* STORE MSG LEN         @Y30SSRG*/
         MVC   EMLN(2,R1),@CH03813                                 0727
*   EMID=M1ID;                      /* STORE MSG ID                  */
         MVC   EMID(8,R1),@CC03753                                 0728
*   GEN(WTO MF=(E,(1)));            /* ISSUE BASE MSG                */
         WTO MF=(E,(1))
*   CCAPDMW=ON;                     /* IND MSG WRITTEN       @Y30SSRG*/
         OI    CCAPDMW(R11),B'01000000'                            0730
*   R1=R13+SAVELEN2;                /* RESTORE R1                    */
         LA    R1,24                                               0731
         ALR   R1,R13                                              0731
*   R2=ADDR(CCAREGS)+SAVELEN;       /* POINT TO START OF CALLR CH  0732
*                                                            @Y30SSRG*/
         LA    R2,CCAREGS(,R11)                                    0732
         AL    R2,@CF00074                                         0732
*   IF R2<R13 THEN                  /* CALLER CHAIN REQUIRED ?     0733
*                                                            @Y30SSRG*/
         CR    R2,R13                                              0733
         BNL   @RF00733                                            0733
*     DO;                           /* YES,FORMAT WTO CALLER CHN     */
*       R0=INCR1;                   /* INDICATE 1ST BYTE OF MSG      */
         LA    R0,1                                                0735
*       DO WHILE(R2^=NONE);         /* FORMAT CHAIN-ISSUE MSG(S)     */
         B     @DE00736                                            0736
@DL00736 DS    0H                                                  0737
*Z058NFND:                                                         0737
*         CALL IGGPNFND;            /* FIND MOD-SF NAMES FOR NXT   0737
*                                      CALLER & PUT THEM INTO MSG    */
Z058NFND BAL   @14,IGGPNFND                                        0737
*         DO WHILE(R2<R13-SAVELEN&  /* SKIP NON-MAJ FUNC ENTRIES     */
*               R2->RSAMAP(2:4)=R2->RSAMAP(14:16));                0738
         B     @DE00738                                            0738
@DL00738 DS    0H                                                  0739
*           R2=R2+SAVELEN;          /* STEP TO NXT ENTRY             */
         AL    R2,@CF00074                                         0739
*         END;                                                     0740
@DE00738 LR    @10,R13                                             0740
         SL    @10,@CF00074                                        0740
         CR    R2,@10                                              0740
         BNL   @DC00738                                            0740
         CLC   RSAMAP+1(3,R2),RSAMAP+13(R2)                        0740
         BE    @DL00738                                            0740
@DC00738 DS    0H                                                  0741
*         R2=R2+SAVELEN;                                           0741
         AL    R2,@CF00074                                         0741
*         IF R2=R13×R0=MSGLEN51 THEN/* END OF CHN × MSG FULL         */
         CR    R2,R13                                              0742
         BE    @RT00742                                            0742
         C     R0,@CF03813                                         0742
         BNE   @RF00742                                            0742
@RT00742 DS    0H                                                  0743
*           DO;                     /* YES, OUTPUT MSG               */
*             EMTX(R0+O4:R0+O7)=DCRC;/* STORE ROUT CODE INTO MSG     */
         LR    @10,R1                                              0744
         ALR   @10,R0                                              0744
         MVC   EMTX+3(4,@10),DCRC                                  0744
*             EMLN=R0+MSGLEN11+MSGHDRLN;/* STORE MSG LEN             */
         LA    @10,15                                              0745
         ALR   @10,R0                                              0745
         STCM  @10,3,EMLN(R1)                                      0745
*             EMID=M2ID;            /* INSERT ID INTO MSG            */
         MVC   EMID(8,R1),@CC03755                                 0746
*             GEN(WTO MF=(E,(1)));  /* WRITE MSG                     */
         WTO MF=(E,(1))
*             R1=R13+SAVELEN2;      /* RESTORE R1                    */
         LA    R1,24                                               0748
         ALR   R1,R13                                              0748
*             IF R2=R13 THEN        /* CHAIN COMPLETED               */
         CR    R2,R13                                              0749
         BNE   @RF00749                                            0749
*               R2=NONE;            /* YES, KILL LOOP                */
         SLR   R2,R2                                               0750
*             ELSE                  /* CHAIN NOT COMPLETED           */
*               R0=INCR1;           /* START A NEW MSG               */
         B     @RC00749                                            0751
@RF00749 LA    R0,1                                                0751
*           END;                                                   0752
*         ELSE                      /* NOT END OF CHN OR NOT MSG FULL*/
*           DO;                                                    0753
         B     @RC00742                                            0753
@RF00742 DS    0H                                                  0754
*             EMTX(R0+O4:R0+O4)=',';/* INSERT COMMA                  */
         LR    @10,R1                                              0754
         ALR   @10,R0                                              0754
         MVI   EMTX+3(@10),C','                                    0754
*             R0=R0+MSGLEN5;        /* BUMP TO NXT SLOT IN MSG       */
         AL    R0,@CF00053                                         0755
*           END;                                                   0756
*       END;                                                       0757
@RC00742 DS    0H                                                  0757
@DE00736 LTR   R2,R2                                               0757
         BNZ   @DL00736                                            0757
*     END;                                                         0758
*   R2=RSAR13;                      /* RESTORE REG 2                 */
@RF00733 ICM   R2,15,RSAR13(R13)                                   0759
*   RSAR13=R13-SAVELEN;             /* RESTORE PDL BACK PTR          */
         LR    @10,R13                                             0760
         SL    @10,@CF00074                                        0760
         STCM  @10,15,RSAR13(R13)                                  0760
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0761
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPNFND');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPNFND'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0764
@EF00005 DS    0H                                                  0764
@ER00005 BR    @14                                                 0764
         EJECT
*                                                                  0765
*/********************************************************************/
*/*                                                                  */
*/*        IGGPNFND  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0765
*IGGPNFND:                                                         0765
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
IGGPNFND DS    0H                                                  0766
*Z059:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z059NFND:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0766
*    (R5,                                                          0766
*     R6,                                                          0766
*     R7,                                                          0766
*     R8,                                                          0766
*     R9,                                                          0766
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z059     DS    0H                                                  0766
Z059NFND DS    0H                                                  0767
*   RFY                                                            0767
*    (R2,                                                          0767
*     R3,                                                          0767
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA FIND
*                                      MOD/SF NAME                   */
         LA 13,12(13)
*   RFY                                                            0770
*     RSAMAP BASED(R2);             /* R2 POINTS TO A REG SAVE AR    */
*   EMWC=R3;                        /* TEMP SAVE REG 3               */
         STCM  R3,15,EMWC(R1)                                      0771
*   R3=RSAR14&'00FFFFFC'X;          /* PICK UP CALLERS RETURN REG    */
         ICM   R3,15,RSAR14(R2)                                    0772
         N     R3,@CF04393                                         0772
*   DO R3=R3 BY-WORDLEN             /* SEARCH BACKWARD THRU CODE     */
*         WHILE(NAMEIGG(1:6)^=MODCON&/* UNTIL SUB-FUNC NAME OR       */
*         NAMEIGG(1:4)^=SFCON);     /* MODULE NAME IS FOUND          */
         B     @DE00773                                            0773
@DL00773 DS    0H                                                  0774
*   END;                                                           0774
         AL    R3,@CF04449                                         0774
@DE00773 CLC   NAMEIGG(6,R3),@CC03749                              0774
         BE    @DC00773                                            0774
         CLC   NAMEIGG(4,R3),@CC03751                              0774
         BNE   @DL00773                                            0774
@DC00773 DS    0H                                                  0775
*   EMTX(R0:R0+O3)=NAMEIGG(5:8);    /* CHAR 5-8 OF SF NAME TO MSG    */
         LR    @10,R1                                              0775
         ALR   @10,R0                                              0775
         MVC   EMTX-1(4,@10),NAMEIGG+4(R3)                         0775
*   R3=EMWC;                        /* RESTORE R3                    */
         ICM   R3,15,EMWC(R1)                                      0776
*   RFY                                                            0777
*     RSAMAP BASED(R13);            /* RESTORE NORMAL BASE           */
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0778
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPEMIO');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPEMIO'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0781
@EF00006 DS    0H                                                  0781
@ER00006 BR    @14                                                 0781
         EJECT
*                                                                  0782
*/********************************************************************/
*/*                                                                  */
*/*        IGGPEMIO  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0782
*IGGPEMIO:                                                         0782
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
IGGPEMIO DS    0H                                                  0783
*   GEN(ENTRY IGGPEMIO );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPEMIO
*Z060:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z060EMIO:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0784
*    (R5,                                                          0784
*     R6,                                                          0784
*     R7,                                                          0784
*     R8,                                                          0784
*     R9,                                                          0784
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z060     DS    0H                                                  0784
Z060EMIO DS    0H                                                  0785
*   RFY                                                            0785
*    (R2,                                                          0785
*     R3,                                                          0785
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE I/O 0790
*                                      ERR MSG WTR                   */
         SR 12,15
*   RFY                                                            0791
*    (R14) RSTD;                    /*                       @Y30SSRG*/
*   RFY                                                            0792
*     IFGRPL BASED(R14);            /*                       @Y30SSRG*/
*   RFY                                                            0793
*     IFGACB BASED(RPLDACB);        /*                       @Y30SSRG*/
*   IF CCAMODID=RAMODID THEN        /* CRA I/O ERROR         @Y30SSRG*/
         CLC   CCAMODID(2,R11),@CC03518                            0794
         BNE   @RF00794                                            0794
*     R14=CCARARPL;                 /* YES,PT TO CRA RPL     @Y30SSRG*/
         L     R14,CCARARPL(,R11)                                  0795
*   ELSE                            /* CATLG I/O ERROR       @Y30SSRG*/
*     R14=CCARPL1;                  /* PT TO CATLG RPL       @Y30SSRG*/
         B     @RC00794                                            0796
@RF00794 L     R14,CCARPL1(,R11)                                   0796
*   IF RPLRTNCD='0C'X THEN          /* PHYSICAL I/O ERROR            */
@RC00794 CLI   RPLRTNCD(R14),12                                    0797
         BNE   @RF00797                                            0797
*     EMTX(1:1)='P';                /* YES,PHY ERR IND TO MSG        */
         MVI   EMTX(R1),C'P'                                       0798
*   ELSE                            /* NO,LOGICAL ERROR              */
*     EMTX(1:1)='L';                /* LOG ERR IND TO MSG            */
         B     @RC00797                                            0799
@RF00797 MVI   EMTX(R1),C'L'                                       0799
*   CVD(RPLERRCD,EMWB);             /* CONVERT RPL ERR CDE AND       */
@RC00797 SLR   @15,@15                                             0800
         IC    @15,RPLERRCD(,R14)                                  0800
         CVD   @15,EMWB(,R1)                                       0800
*   UNPK(EMTX(2:4),EMWB(7:8));      /* INSERT IT INTO MSG            */
         UNPK  EMTX+1(3,R1),EMWB+6(2,R1)                           0801
*   EMTX(4:4)=EMTX(4:4)×'F0'X;      /* INSURE NUMERIC CHAR.          */
         OI    EMTX+3(R1),X'F0'                                    0802
*   EMTX(5:5)=',';                  /* INSERT COMMA                  */
         MVI   EMTX+4(R1),C','                                     0803
*   EMWB(1:1)=XIOOPT;               /* CONVERT XIO CONTROL BYTE      */
         IC    @15,XIOOPT(,R11)                                    0804
         STC   @15,EMWB(,R1)                                       0804
*   UNPK(EMTX(6:8),EMWB(1:2));      /* AND INSERT INTO MSG           */
         UNPK  EMTX+5(3,R1),EMWB(2,R1)                             0805
*   GEN(TR EMTX+5(2,R1),DSPNTR-240)                                0806
*   REFS(DSPNTR);                                                  0806
         TR EMTX+5(2,R1),DSPNTR-240
*   EMTX(8:8)=',';                  /* INSERT COMMA                  */
         MVI   EMTX+7(R1),C','                                     0807
*   IF CAXMCT=ON THEN               /* MASTER CATLG ?                */
         L     @15,RPLDACB(,R14)                                   0808
         L     @15,ACBUAPTR(,@15)                                  0808
         TM    CAXMCT(@15),B'00000100'                             0808
         BNO   @RF00808                                            0808
*     EMTX(9:11)='MCT';             /* YES,INSERT MCAT INDICATOR     */
         MVC   EMTX+8(3,R1),@CC04406                               0809
*   ELSE                            /* NO,USER CATLG                 */
*     EMTX(9:11)=UCBNAME;           /* INSERT UCATS DEVICE ID        */
         B     @RC00808                                            0810
@RF00808 L     @15,RPLDACB(,R14)                                   0810
         L     @15,ACBUAPTR(,@15)                                  0810
         L     @15,CAXUCB(,@15)                                    0810
         MVC   EMTX+8(3,R1),UCBNAME(@15)                           0810
*   EMTX(12:12)=',';                /* INSERT COMMA                  */
@RC00808 MVI   EMTX+11(R1),C','                                    0811
*   R0=NONE;                                                       0812
         SLR   R0,R0                                               0812
*   IF XIOKEY=ON THEN               /* KEYED OPERATION ?             */
         TM    XIOKEY(R11),B'00010000'                             0813
         BNO   @RF00813                                            0813
*     DO;                           /* YES                           */
*       IF XIOTNE=ON THEN           /* FOR TN ENTRY                  */
         TM    XIOTNE(R11),B'00000010'                             0815
         BNO   @RF00815                                            0815
*         DO;                       /* YES                           */
*           EMTX(13:56)=CCASRCH;    /* INSERT ENTRY NAME IN MSG      */
         MVC   EMTX+12(44,R1),CCASRCH(R11)                         0817
*           EMTX(57:57)=' ';        /* INSURE TRUNC LOOP OPERATN     */
         MVI   EMTX+56(R1),C' '                                    0818
*           DO R0=13 BY INCR1       /* TRUNCATE TRAILING BL × OS     */
*                 WHILE(EMTX(R0:R0)>'40'X);                        0819
         LA    R0,13                                               0819
         B     @DE00819                                            0819
@DL00819 DS    0H                                                  0820
*           END;                                                   0820
         AL    R0,@CF00037                                         0820
@DE00819 LR    @15,R1                                              0820
         ALR   @15,R0                                              0820
         CLI   EMTX-1(@15),X'40'                                   0820
         BH    @DL00819                                            0820
*         END;                                                     0821
*       ELSE                        /* NOT FOR TN ENTRY              */
*         EMWB(2:4)=CCASRCH(2:4);   /* CI # TO WK AREA               */
         B     @RC00815                                            0822
@RF00815 MVC   EMWB+1(3,R1),CCASRCH+1(R11)                         0822
*     END;                                                         0823
*   ELSE                            /* NOT KEYED OPERATION           */
*     EMWC=ERCDRBA/CILEN;           /* COMP CI #,PUT INTO WK AR    0824
*                                                            @Y30SSRG*/
         B     @RC00813                                            0824
@RF00813 L     @15,RPLARG(,R14)                                    0824
         L     @15,ERCDRBA(,@15)                                   0824
         SRL   @15,9                                               0824
         STCM  @15,15,EMWC(R1)                                     0824
*   IF R0=NONE THEN                 /* CI # STORED ?                 */
@RC00813 LTR   R0,R0                                               0825
         BNZ   @RF00825                                            0825
*     DO;                           /* YES                           */
*       EMTX(13:15)='CI=';          /* MOVE TO MSG                   */
         MVC   EMTX+12(3,R1),@CC04409                              0827
*       UNPK(EMTX(16:22),EMWB(2:5));/* XLATE CI # INTO MSG           */
         UNPK  EMTX+15(7,R1),EMWB+1(4,R1)                          0828
*       GEN(TR EMTX+15(6,R1),DSPNTR-240)                           0829
*       REFS(DSPNTR);                                              0829
         TR EMTX+15(6,R1),DSPNTR-240
*       R0=MSGLEN22;                /* PT TO END OF MSG              */
         LA    R0,22                                               0830
*     END;                                                         0831
*   IF CCAMODID=RAMODID THEN        /* CRA I/O ERROR         @Y30SSRG*/
@RF00825 CLC   CCAMODID(2,R11),@CC03518                            0832
         BNE   @RF00832                                            0832
*     DO;                           /* YES                   @Y30SSRG*/
*       EMTX(22:29)=RAVOLIT;        /* "CRAVOL=" TO MSG      @Y30SSRG*/
         MVC   EMTX+21(8,R1),@CC03522                              0834
*       EMTX(30:35)=UCBVOLI;        /* VOL SER TO MSG        @Y30SSRG*/
         L     @15,RPLDACB(,R14)                                   0835
         L     @15,ACBUAPTR(,@15)                                  0835
         L     @15,CAXUCB(,@15)                                    0835
         MVC   EMTX+29(6,R1),UCBVOLI(@15)                          0835
*       R0=MSGLEN36;                /* PT TO END OF MSG      @Y30SSRG*/
         LA    R0,36                                               0836
*     END;                          /*                       @Y30SSRG*/
*   EMTX(R0:R0+O3)=DCRC;            /* ROUTE CODE TO MSG             */
@RF00832 LR    @15,R1                                              0838
         ALR   @15,R0                                              0838
         MVC   EMTX-1(4,@15),DCRC                                  0838
*   EMLN=R0+MSGLEN7+MSGHDRLN;       /* SET MSG LEN                   */
         LA    @15,11                                              0839
         ALR   @15,R0                                              0839
         STCM  @15,3,EMLN(R1)                                      0839
*   EMID=M3ID;                      /* STORE MSG ID                  */
         MVC   EMID(8,R1),@CC03757                                 0840
*   GEN(WTO MF=(E,(1)));            /* ISSUE WTP MSG                 */
         WTO MF=(E,(1))
*   RFY                                                            0842
*    (R14) UNRSTD;                  /*                       @Y30SSRG*/
*   RFY                                                            0843
*     IFGRPL BASED(CCARPL1);        /*                       @Y30SSRG*/
*   RFY                                                            0844
*     IFGACB BASED(CCAACB);         /*                       @Y30SSRG*/
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0845
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCDS');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCDS'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0848
@EF00007 DS    0H                                                  0848
@ER00007 BR    @14                                                 0848
         EJECT
*                                                                  0849
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCDS  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0849
*IGGPDCDS:                                                         0849
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
IGGPDCDS DS    0H                                                  0850
*Z061:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z061DCDS:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0850
*    (R5,                                                          0850
*     R6,                                                          0850
*     R7,                                                          0850
*     R8,                                                          0850
*     R9,                                                          0850
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z061     DS    0H                                                  0850
Z061DCDS DS    0H                                                  0851
*   RFY                                                            0851
*    (R2,                                                          0851
*     R3,                                                          0851
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*/*        @Y30SSRG                                                  */
*                                                                  0854
*   RFY                                                            0854
*     CTGPL BASED(ADDR(DELCPLST));  /*                       @Y30SSRG*/
*   RFY                                                            0855
*     CTGFL BASED(CTGFIELD(1));     /*                       @Y30SSRG*/
*   CCAXCPL=ADDR(DELCPLST);         /* EXTRACT CPL ADDRESS   @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0856
         LA    @05,DELCPLST(,@10)                                  0856
         ST    @05,CCAXCPL(,R11)                                   0856
*   CTGPL=CTGPL&&CTGPL;             /* CLEAR CPL STORAGE     @Y30SSRG*/
         LA    @05,52                                              0857
         ALR   @05,@10                                             0857
         XC    CTGPL(28,@05),CTGPL(@05)                            0857
*   CTGFIELD(1)=ADDR(DELFPLDT);     /* DATA FPL ADDR IN CPL  @Y30SSRG*/
         LA    @15,DELFPLDT(,@10)                                  0858
         ST    @15,CTGFIELD(,@05)                                  0858
*   CTGFL=CTGFL&&CTGFL;             /* CLEAR FPL STORAGE     @Y30SSRG*/
         XC    CTGFL(16,@15),CTGFL(@15)                            0859
*   CTGNOFLD=INIT1;                 /* NO. OF FPLS - DATA    @Y30SSRG*/
         MVI   CTGNOFLD(@05),X'01'                                 0860
*   CTGWKA=CCAR4REC;                /* RETURN DATA WORKAREA  @Y30SSRG*/
         ST    @15,@TF00001                                        0861
         L     @15,CCAR4REC(,R11)                                  0861
         ST    @15,CTGWKA(,@05)                                    0861
*   DLCSGA=DLCSGA&&DLCSGA;          /* CLEAR WORK AREA       @Y30SSRG*/
         XC    DLCSGA(256,@15),DLCSGA(@15)                         0862
*   DLCSGB=DLCSGB&&DLCSGB;          /* CLEAR WORK AREA       @Y30SSRG*/
         XC    DLCSGB(256,@15),DLCSGB(@15)                         0863
*   WKALEN1=LENGTH(DLCSG);          /* WORK AREA LENGTH      @Y30SSRG*/
         MVC   WKALEN1(2,@15),@CH01067                             0864
*   WKALEN2=NONE;                   /* RETURN AREA FEEDBACK LENGTH 0865
*                                                             @Y3DSSM*/
*                                                                  0865
         SLR   @05,@05                                             0865
         STH   @05,WKALEN2(,@15)                                   0865
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD THE EXTRACT INTERFACE IN THE CCA                @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0866
*   CCAREUSE=ON;                    /* IND RABS REUSABLE     @Y30SSRG*/
         OI    CCAREUSE(R11),B'00000100'                           0866
*   CCAF2NVC=ON;                    /* NO VALIDITY CHECK     @Y30SSRG*/
         OI    CCAF2NVC(R11),B'01000000'                           0867
*   CCARABB=CCAURAB;                /* SET BASE RECORD RAB   @Y30SSRG*/
         L     @15,CCAURAB(,R11)                                   0868
         ST    @15,CCARABB(,R11)                                   0868
*   CCARABF=ADDR(CCARAB1);          /* 1ST USABLE RAB ADDR   @Y30SSRG*/
         LA    @15,CCARAB1(,R11)                                   0869
         ST    @15,CCARABF(,R11)                                   0869
*   CCARABL=ADDR(CCARAB3);          /* LAST USABLE RAB ADDR  @Y30SSRG*/
*                                                                  0870
         LA    @15,CCARAB3(,R11)                                   0870
         ST    @15,CCARABL(,R11)                                   0870
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD THE DATA RETRIEVE FPL FOR THE DESIRED DATA      @Y30SSRG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0871
*   CTGFLDNM=ADDR(DSIDNOFN);        /* SET FIELD NAME FOR EXTRACT  0871
*                                                            @Y30SSRG*/
         LA    @15,@CC04258                                        0871
         L     @14,@TF00001                                        0871
         ST    @15,CTGFLDNM(,@14)                                  0871
*   CTGFLDNO=INIT1;                 /* NO. LENGTH/ADDR PAIR  @Y30SSRG*/
         L     @15,@TF00001                                        0872
         MVI   CTGFLDNO(@15),X'01'                                 0872
*   NUMDSID=NONE;                   /* CLR DS DIRECTORY CNT  @Y30SSRG*/
         STCM  @05,3,NUMDSID(@10)                                  0873
*   DELXLOC=NONE;                   /* CLEAR GOTTEN STORAGE POINTER
*                                                            @Y30SSRG*/
*                                                                  0874
         ST    @05,DELXLOC(,@10)                                   0874
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAZ                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0875
*Z062EXT:                                                          0875
*   CALL IGGPEXT;                   /* EXTRACT DS DIRECTORY  @Y30SSRG*/
Z062EXT  L     @15,@CV03018                                        0875
         BALR  @14,@15                                             0875
*   RFY                                                            0876
*     CTGPL BASED(ADDR(DELCPLST));  /*                       @Y30SSRG*/
*   IF CCACD1=RCVLSZ THEN           /* WORK AREA TOO SMALL?  @Y30SSRG*/
         CLI   CCACD1(R11),40                                      0877
         BNE   @RF00877                                            0877
*     DO;                           /* YES, AREA TOO SMALL   @Y30SSRG*/
*                                                                  0878
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0879
*       CCAPROB=IGNOREIT;           /* CLEAR ERROR CODE      @Y30SSRG*/
         SLR   @10,@10                                             0879
         ST    @10,CCAPROB(,R11)                                   0879
*       CCAMNLEN=WKALEN2;           /* REQUIRED WORK AREA LENGTH   0880
*                                                            @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0880
         L     @10,CTGWKA+52(,@10)                                 0880
         LH    @10,WKALEN2(,@10)                                   0880
         STCM  @10,7,CCAMNLEN(R11)                                 0880
*       RFY                                                        0881
*         R1 RSTD;                  /*                       @Y30SSRG*/
*       R1=ADDR(CCAMSSPL);          /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0882
*       CCAMNSPL=USUBPOOL;          /* STORE SUBPOOL VALUE           */
*                                                                  0883
         MVI   CCAMNSPL(R11),X'FC'                                 0883
*       /*************************************************************/
*       /*                                                           */
*       /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0884
*       GEN(GETMAIN LC,MF=(E,(1))); /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*       GEN(LR R1,R15);             /* PICK UP RETURN CODE           */
         LR R1,R15
*       IF R1^=NOGETMSE THEN        /* CHECK FOR ERROR RETURN        */
*                                                                  0886
         LTR   R1,R1                                               0886
         BZ    @RF00886                                            0886
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AF', CCAREASN=RSN2, CCARETRN=RCINSSWA     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0887
*         CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF04452                             0887
*       ELSE                        /* GETMAIN SUCCESSFUL            */
*         DO;                                                      0888
         B     @RC00886                                            0888
@RF00886 DS    0H                                                  0889
*           DO;                                                    0889
*             IF MNATFULL=ON THEN   /* TRACKING TABLE FULL           */
*                                                                  0890
         TM    MNATFULL(R11),B'10000000'                           0890
         BNO   @RF00890                                            0890
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLAT                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0891
*Z067ARFS:                                                         0891
*               CALL IGGPARFS;      /* YES,CALL SPILL ROUTINE        */
Z067ARFS L     @15,@CV03031                                        0891
         BALR  @14,@15                                             0891
*             GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*
*                                      PUSH AND TRACK                */
@RF00890 DS    0H                                                  0892
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*           END;                                                   0893
*         END;                      /*                       @Y30SSRG*/
*       CCAMNADR=R1;                /* CORE ADDRESS          @Y30SSRG*/
@RC00886 ST    R1,CCAMNADR(,R11)                                   0895
*       RFY                                                        0896
*         R1 UNRSTD;                /*                       @Y30SSRG*/
*       IF CCACD1^=RCS THEN                                        0897
         CLI   CCACD1(R11),0                                       0897
         BNE   @RT00897                                            0897
*         ;                         /* STORAGE OBTAINED?     @Y30SSRG*/
*       ELSE                        /* SUCCESSFUL GETMAIN    @Y30SSRG*/
*         DO;                       /*                       @Y30SSRG*/
*           DELXLOC=CCAMNADR;       /* OBTAINED CORE ADDRESS @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0900
         L     @05,CCAMNADR(,R11)                                  0900
         ST    @05,DELXLOC(,@10)                                   0900
*           DELXLEN=CCAMNLEN;       /* LENGTH OBTAINED CORE  @Y30SSRG*/
         L     @01,CCAMNLEN-1(,R11)                                0901
         LA    @01,0(,@01)                                         0901
         ST    @01,DELXLEN(,@10)                                   0901
*           CTGWKA=CCAMNADR;        /* ADDRESS OF NEW W.A.   @Y30SSRG*/
         ST    @05,CTGWKA+52(,@10)                                 0902
*           WKALEN1=CCAMNLEN;       /* LENGTH OF NEW W.A.    @Y30SSRG*/
*                                                                  0903
         STH   @01,WKALEN1(,@05)                                   0903
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAZ                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0904
*Z068EXT:                                                          0904
*           CALL IGGPEXT;           /* EXTRACT DS DIRECTORIES      0904
*                                                            @Y30SSRG*/
Z068EXT  L     @15,@CV03018                                        0904
         BALR  @14,@15                                             0904
*         END;                      /*                       @Y30SSRG*/
*     END;                          /*                       @Y30SSRG*/
*   ELSE                                                           0907
*     ;                             /* WORK AREA BIG ENOUGH  @Y30SSRG*/
@RF00877 DS    0H                                                  0908
*   IF CCACD1=RCS THEN              /* ANY ERROR?            @Y30SSRG*/
@RC00877 CLI   CCACD1(R11),0                                       0908
         BNE   @RF00908                                            0908
*     IF WKALEN2=LENGTH(USERWKA) THEN                              0909
         L     @01,CCACMSWA(,R11)                                  0909
         L     @01,CTGWKA+52(,@01)                                 0909
         CLC   WKALEN2(2,@01),@CH00058                             0909
         BE    @RT00909                                            0909
*       ;                           /* ANY DSID RETURNED?    @Y30SSRG*/
*     ELSE                          /* DSIDNOS IN WORK AREA  @Y30SSRG*/
*       DO;                         /*                       @Y30SSRG*/
*         DSIDWAPT=CTGWKA;          /* SET WORK AREA BASE POINTER  0912
*                                                            @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0912
         L     @05,CTGWKA+52(,@10)                                 0912
         ST    @05,DSIDWAPT(,@10)                                  0912
*         NUMDSID=(WKALEN2-LENGTH(USERWKA))/LENGTH(DSIDNO);/* NUMBER
*                                      DSIDNOS IN WA         @Y30SSRG*/
         LH    @06,WKALEN2(,@05)                                   0913
         SL    @06,@CF00058                                        0913
         SRDA  @06,32                                              0913
         D     @06,@CF00416                                        0913
         STCM  @07,3,NUMDSID(@10)                                  0913
*         DELACI(LASTCI)=NONE;      /* PROCESS ONE CI AT A TIME    0914
*                                                            @Y30SSRG*/
         SLR   @05,@05                                             0914
         STCM  @05,7,DELACI+4(@10)                                 0914
*         DO F=INCR1 TO NUMDSID WHILE CCACD1=RCS;/* LOOP TO CHECK FOR
*                                      OPEN DATA SETS        @Y30SSRG*/
         LA    @10,1                                               0915
         B     @DE00915                                            0915
@DL00915 CLI   CCACD1(R11),0                                       0915
         BNE   @DC00915                                            0915
*           DELACI(INCR1)=DSIDNO(F);/* SET CI NUMBER         @Y30SSRG*/
*                                                                  0916
         L     @10,CCACMSWA(,R11)                                  0916
         LH    @05,F(,@10)                                         0916
         MH    @05,@CH00416                                        0916
         L     @01,DSIDWAPT(,@10)                                  0916
         ALR   @01,@05                                             0916
         MVC   DELACI(3,@10),DSIDNO-3(@01)                         0916
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLBG                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0917
*Z069DOPN:                                                         0917
*           CALL IGGPDOPN;          /* OPEN DETRMINATION CHECK     0917
*                                                            @Y30SSRG*/
Z069DOPN L     @15,@CV03027                                        0917
         BALR  @14,@15                                             0917
*         END;                      /*                       @Y30SSRG*/
         L     @01,CCACMSWA(,R11)                                  0918
         LA    @10,1                                               0918
         AH    @10,F(,@01)                                         0918
@DE00915 L     @01,CCACMSWA(,R11)                                  0918
         STH   @10,F(,@01)                                         0918
         L     @01,CCACMSWA(,R11)                                  0918
         ICM   @05,12,NUMDSID(@01)                                 0918
         SRA   @05,16                                              0918
         CR    @10,@05                                             0918
         BNH   @DL00915                                            0918
@DC00915 DS    0H                                                  0919
*         IF DELXLOC=NONE THEN                                     0919
         L     @01,CCACMSWA(,R11)                                  0919
         L     @10,DELXLOC(,@01)                                   0919
         LTR   @10,@10                                             0919
         BZ    @RT00919                                            0919
*           ;                       /* ANY STORAGE TO FREE?  @Y30SSRG*/
*         ELSE                      /* YES, FREE STORAGE     @Y30SSRG*/
*           DO;                     /*                       @Y30SSRG*/
*             CCAMNADR=DELXLOC;     /* ADDR GOTTEN STORAGE   @Y30SSRG*/
         L     @10,CCACMSWA(,R11)                                  0922
         L     @05,DELXLOC(,@10)                                   0922
         ST    @05,CCAMNADR(,R11)                                  0922
*             CCAMNLEN=DELXLEN;     /* LENGTH OF STORAGE     @Y30SSRG*/
         MVC   CCAMNLEN(3,R11),DELXLEN+1(@10)                      0923
*             RFY                                                  0924
*               R1 RSTD;            /*                       @Y30SSRG*/
*             R1=ADDR(CCAMSSPL);    /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0925
*             CCAMNSPL=USUBPOOL;    /* STORE SUBPOOL VALUE           */
         MVI   CCAMNSPL(R11),X'FC'                                 0926
*             DO;                                                  0927
*               IF MNATFULL=ON THEN /* TRACKING TABLE FULL           */
*                                                                  0928
         TM    MNATFULL(R11),B'10000000'                           0928
         BNO   @RF00928                                            0928
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLAT                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0929
*Z072ARFS:                                                         0929
*                 CALL IGGPARFS;    /* YES,CALL SPILL ROUTINE        */
Z072ARFS L     @15,@CV03031                                        0929
         BALR  @14,@15                                             0929
*               GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));
@RF00928 DS    0H                                                  0930
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*                                   /* PUSH AND TRACK                */
*             END;                                                 0931
*                                                                  0931
*             /*******************************************************/
*             /*                                                     */
*             /* RELEASE MAIN STORAGE FROM USER SUBPOOL 252          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0932
*             GEN(FREEMAIN L,MF=(E,(1))) ;/*                 @Y30SSRG*/
         FREEMAIN L,MF=(E,(1))
*             RFY                                                  0933
*               R1 UNRSTD;          /*                       @Y30SSRG*/
*             DELXLOC=NONE;         /* CLEAR STORAGE PTR     @Y30SSRG*/
         SLR   @10,@10                                             0934
         L     @05,CCACMSWA(,R11)                                  0934
         ST    @10,DELXLOC(,@05)                                   0934
*             DSIDWAPT=NONE;        /* CLEAR WORK AREA PTR   @Y30SSRG*/
         ST    @10,DSIDWAPT(,@05)                                  0935
*           END;                    /*                       @Y30SSRG*/
*       END;                        /*                       @Y30SSRG*/
@RT00919 DS    0H                                                  0938
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RT00909 DS    0H                                                  0938
@RF00908 BAL   @14,EXIT                                            0938
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0939
@EF00008 DS    0H                                                  0939
@ER00008 BR    @14                                                 0939
         EJECT
*                                                                  0940
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0940
*EXIT:                                                             0940
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
EXIT     DS    0H                                                  0941
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0944
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00009 DS    0H                                                  0945
@EF00009 DS    0H                                                  0945
@ER00009 BR    @14                                                 0945
*   END                                                            0946
*                                                                  0946
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IGGMVEDC)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IECSDSL1)                                       */
*/*%INCLUDE SYSLIB  (IGGMF4WA)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*/*%INCLUDE SYSLIB  (IDAVVOLL)                                       */
*/*%INCLUDE SYSLIB  (IGGMGVO )                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*                                                                  0946
*       ;                                                          0946
@DATA    DS    0H
@CH00118 DC    H'32'
@CH01067 DC    H'512'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
IGG0CLAF CSECT
         DS    0F
@CF00037 DC    F'1'
@CH00037 EQU   @CF00037+2
@CF00055 DC    F'2'
@CF00416 DC    F'3'
@CH00416 EQU   @CF00416+2
@CF00058 DC    F'4'
@CH00058 EQU   @CF00058+2
@CF00053 DC    F'5'
@CF03484 DC    F'9'
@CF00074 DC    F'12'
@CF03782 DC    F'49'
@CF03813 DC    F'51'
@CH03813 EQU   @CF03813+2
@CF04446 DC    F'-1043988440'
@CF04448 DC    F'-1043988396'
@CF04447 DC    F'-1043988328'
@CF04452 DC    F'-1043987804'
@CF04445 DC    F'-1043980752'
@CF04460 DC    F'-41'
@CF04461 DC    F'-40'
@CF04449 DC    F'-4'
@CF04393 DC    XL4'00FFFFFC'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLAF CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03016 DC    V(IGGPCCCR)
@CV03017 DC    V(IGGPDALL)
@CV03018 DC    V(IGGPEXT)
@CV03019 DC    V(IGGPDFM1)
@CV03020 DC    V(IGGPF4RD)
@CV03021 DC    V(IGGPF4WR)
@CV03022 DC    V(IGGPF4DQ)
@CV03023 DC    V(IGGPGET)
@CV03024 DC    V(IGGPPDE)
@CV03025 DC    V(IGGPRPLF)
@CV03026 DC    V(IGGPDF4T)
@CV03027 DC    V(IGGPDOPN)
@CV03028 DC    V(IGGPFDSP)
@CV03030 DC    V(IGGPXIO)
@CV03031 DC    V(IGGPARFS)
@CV03032 DC    V(IGGPSCAT)
@CV03029 DC    V(IGGPPUPC)
         DS    0D
SCRACODE DC    XL4'41005000'
GOTSTCT  DC    AL2(1)
@CC03767 DC    C'Z9999992.VSAMDSPC.TXXXXXXX.TXXXXXXX         '
@CC03522 DC    C',CRAVOL='
@CC03753 DC    C'IEC331I '
@CC03755 DC    C'IEC332I '
@CC03757 DC    C'IEC333I '
@CC04258 DC    C'DSIDNO  '
@CC03520 DC    C',IGG0CL'
@CC03749 DC    C'IGG0CL'
@CC03751 DC    C'IGGP'
@CC04406 DC    C'MCT'
@CC04409 DC    C'CI='
@CC03518 DC    C'BO'
@CC04277 DC    C'AF'
FLDNM1   DC    CL8'SPACEHDR'
FLDNM2   DC    CL8'CNTREPNO'
FLDNM3   DC    CL8'RELREPNO'
WTPOP    DC    X'8000'
WTOOP    DC    X'0000'
DCRC     DC    X'00004020'
DSPNTR   DC    CL16'0123456789ABCDEF'
RECTPC   DC    CL3'DIC'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
DCWABASE EQU   @04
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAMODID EQU   CCAPROB
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2NVC EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAF4DRQ EQU   CCAFLG4
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCAREUSE EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCASRCIN EQU   CCASRID
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4REC EQU   CCARAB4+4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5REC EQU   CCARAB5+4
CCAR5SEG EQU   CCARAB5+8
CCARPLK  EQU   IGGCCA+208
CCARPLX  EQU   IGGCCA+210
CCATIQRN EQU   IGGCCA+212
CCARPL1  EQU   IGGCCA+220
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAEDRNM EQU   CCAEQDQ+8
CCAEDUCB EQU   CCAEQDQ+12
CCAMLRET EQU   IGGCCA+296
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCARABB  EQU   IGGCCA+380
CCARABF  EQU   IGGCCA+384
CCARABL  EQU   IGGCCA+388
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCAMSFLG EQU   IGGCCA+401
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCASCRA  EQU   CCAFLG8
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAFLG11 EQU   IGGCCA+1059
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARARPL EQU   IGGCCA+1428
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCAPDMW  EQU   CCAFLG10
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCADGDGA EQU   IGGCCA+1488
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGDISC  EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDCD EQU   CTGFL+1
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKALEN1  EQU   USERWKA
WKALEN2  EQU   USERWKA+2
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
ENTNAMET EQU   ENTNAMES
ENTNAMEV EQU   ENTNAMES+1
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDKEYTY EQU   CATRCD
RCDCINO  EQU   CATRCD+1
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDATE  EQU   CVTMAP+56
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXMCT   EQU   CAXFLGS
CAXFLG2  EQU   IGGCAXWA+9
CAXF2DT  EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXFLG3  EQU   IGGCAXWA+10
CAXUCB   EQU   IGGCAXWA+28
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
CTVOLRCD EQU   1
CTVDVCHR EQU   CTVOLRCD+52
CTVBOKAB EQU   CTVDVCHR+14
CTVDVFLG EQU   CTVDVCHR+17
CTVSPHDR EQU   0
CTVF1TIM EQU   CTVSPHDR+2
CTVSPFLG EQU   CTVSPHDR+15
CTVSPUNQ EQU   CTVSPFLG
CTVDESGP EQU   0
CTVEXTST EQU   CTVDESGP+4
CTVSTDES EQU   CTVEXTST
CTVDSGRP EQU   0
CTVDSDFL EQU   CTVDSGRP+6
CTVDSDIR EQU   CTVDSGRP+9
CTVGOPT  EQU   0
CTVGOCI  EQU   CTVGOPT
CTVGOGCI EQU   CTVGOPT+3
CTVRCTRL EQU   0
CTVEXRPT EQU   CTVRCTRL
CTVSPMAP EQU   0
CTVSMSN  EQU   CTVSPMAP
CTVDSPAC EQU   0
CTVDSPSN EQU   CTVDSPAC
CTVDSPFG EQU   CTVDSPAC+15
CTVSPEXT EQU   CTVDSPAC+21
CTVEXTNT EQU   CTVSPEXT
CTVDIR   EQU   0
CTVDSDSN EQU   CTVDIR
CTVDEXTN EQU   0
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
IECSDSF4 EQU   0
IECSDSL4 EQU   0
DS4DEVCT EQU   IECSDSL4+18
DS4DEVOV EQU   DS4DEVCT+6
DS4AMTIM EQU   IECSDSL4+32
DS4AMCAT EQU   IECSDSL4+40
DS4VSIND EQU   DS4AMCAT
DS4VSCRA EQU   DS4AMCAT+1
DS4R2TIM EQU   IECSDSL4+43
DS4VTOCE EQU   IECSDSL4+61
IGGMF4WA EQU   0
F4WDEB   EQU   IGGMF4WA
F4WDUCB  EQU   F4WDEB+33
F4WECB   EQU   IGGMF4WA+52
F4WIOB   EQU   IGGMF4WA+56
F4WCCW   EQU   IGGMF4WA+96
F4WBUF   EQU   IGGMF4WA+120
DLCWA    EQU   0
DLCCPL   EQU   DLCWA
DLCFPLP  EQU   DLCWA+28
DLCFPLA  EQU   DLCWA+32
DLCFPL   EQU   DLCFPLA
DLCFLNG  EQU   DLCFPLA+16
DLCFLPT  EQU   DLCFPLA+20
DLCXWA   EQU   DLCWA+104
DLCXWAL  EQU   DLCXWA
DLCSPHDR EQU   DLCXWA+4
DLCACB   EQU   DLCWA+136
DLCUCPL  EQU   DLCWA+140
DLCTSA   EQU   DLCWA+144
DLCSRRNO EQU   DLCWA+152
DLCRT    EQU   DLCWA+154
DLCFLG   EQU   DLCWA+155
DLCFDSP  EQU   DLCFLG
DLCSTOP  EQU   DLCFLG
DLCSG    EQU   0
DLCSGA   EQU   DLCSG
DLCSGB   EQU   DLCSG+256
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00138 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
DCSWA    EQU   0
DCSSPL   EQU   DCSWA
DCSNMP   EQU   DCSWA+4
DCSVLP   EQU   DCSWA+12
DCSDSTS  EQU   DCSWA+16
DCSDSN   EQU   DCSWA+24
DSNTYPE  EQU   DCSDSN+7
DSNLTS   EQU   DCSDSN+19
DSNRTS   EQU   DCSDSN+28
DCSTRWA  EQU   DCSWA+68
LTTS     EQU   DCSTRWA
RTTS     EQU   DCSTRWA+7
DCSVL    EQU   DCSWA+86
DCSDVTY  EQU   DCSWA+88
DCSVOLI  EQU   DCSWA+92
DCSSRC   EQU   DCSWA+99
DCSCLPL  EQU   DCSWA+100
@NM00147 EQU   DCSCLPL
DCSCLPLE EQU   @NM00147
DCSWASG  EQU   0
EMWA     EQU   0
EMLN     EQU   EMWA
EMFL     EQU   EMWA+2
EMSG     EQU   EMWA+4
EMID     EQU   EMSG
EMWB     EQU   EMID
EMWC     EQU   EMWB
EMTX     EQU   EMSG+8
RSAMAP   EQU   0
RSAR13   EQU   RSAMAP+4
RSAR14   EQU   RSAMAP+8
ERCDRBA  EQU   0
JNSN     EQU   0
JOBNAME  EQU   JNSN
STEPNAME EQU   JNSN+8
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
NAMEIGG  EQU   0
DELCATNM EQU   0
CPLBLK   EQU   0
IDAVVOLL EQU   0
@NM00153 EQU   IDAVVOLL
VVOLLERR EQU   IDAVVOLL+12
VVOLLENT EQU   IDAVVOLL+36
@NM00156 EQU   VVOLLENT+4
GVO      EQU   0
CMFLVLFL EQU   GVO+12
CMFLITEX EQU   GVO+34
CMFOVERL EQU   GVO+37
CMFOVLAY EQU   0
CMFXECTS EQU   0
CMFXEXST EQU   CMFXECTS+2
CMFXSTA  EQU   CMFXEXST
CMFXEXED EQU   CMFXECTS+6
CMFXEDA  EQU   CMFXEXED
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMCPLFVT EQU   CMSWA+20
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
CMRNGCTR EQU   CMSWA+40
CMVOLCTR EQU   CMSWA+42
CMSDFSPC EQU   CMSWA+48
CMVLLIST EQU   CMSWA+64
CMVLRTCD EQU   CMVLLIST+2
CMSPCATR EQU   CMSWA+76
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMUCATCI EQU   CMSWA+410
DELWKA   EQU   0
DELERRIX EQU   DELWKA+15
@NM00167 EQU   DELWKA+16
DELCODE5 EQU   @NM00167
DELSPSCR EQU   DELCODE5
DELSGRRN EQU   DELWKA+17
DELI     EQU   DELSGRRN
DELSPFLG EQU   DELI
DELVRRN  EQU   DELWKA+20
DELVCRN  EQU   DELWKA+22
DELXTNWA EQU   DELWKA+24
DELXLOC  EQU   DELXTNWA
DELXLEN  EQU   DELXTNWA+4
DELERRSX EQU   DELWKA+32
DELERRS  EQU   DELERRSX
DELEXTWA EQU   DELWKA+52
DELCPL   EQU   DELEXTWA
DELCPLST EQU   DELCPL
@NM00170 EQU   DELEXTWA+28
DELFPLR  EQU   DELEXTWA+32
DELFPLDT EQU   DELFPLR
@NM00171 EQU   DELEXTWA+48
DELNMR   EQU   DELEXTWA+56
DELFPLT  EQU   DELEXTWA+64
@NM00172 EQU   DELEXTWA+80
DELNMT   EQU   DELEXTWA+88
@NM00173 EQU   DELEXTWA+112
DELNMT2  EQU   DELEXTWA+120
DELUSINX EQU   DELWKA+183
DELR13SA EQU   DELWKA+184
DELDIV   EQU   DELWKA+188
DELASCWA EQU   DELDIV
DELASSO  EQU   DELASCWA+4
DELACI   EQU   DELASSO+1
DELCASWA EQU   DELDIV+16
DELCASSO EQU   DELCASWA+4
DELGASWA EQU   DELDIV+32
DELGASSO EQU   DELGASWA+4
DELRASWA EQU   DELDIV+48
DELRASSO EQU   DELRASWA+4
DELXASWA EQU   DELDIV+72
DELXASSO EQU   DELXASWA+4
DELVGOWA EQU   DELDIV+80
DELSHWA  EQU   DELDIV+137
DELDSDWA EQU   DELDIV+226
DELDIRCT EQU   DELDSDWA+4
DELSCRWA EQU   DELWKA+424
DELSCRTH EQU   DELSCRWA
DELSVOL  EQU   DELSCRWA+16
DELVOLL  EQU   DELWKA+454
DELTIOPT EQU   DELWKA+504
DELOPNPL EQU   DELWKA+508
DELOPOPT EQU   DELOPNPL
F        EQU   DELWKA+514
DELERASE EQU   0
DELPASSW EQU   DELERASE+156
DELENQ   EQU   0
ENQPROPR EQU   DELENQ
ENQOPT1  EQU   ENQPROPR
ENQOPT2  EQU   ENQPROPR+2
RNAME    EQU   DELENQ+12
DELOCAM  EQU   0
DELDBUF  EQU   DELOCAM+16
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
DSIDWA   EQU   0
DSIDNO   EQU   DSIDWA+4
BUFSIZE  EQU   0
CATRECRD EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
ENTRYNAM EQU   0
EXCPNAME EQU   0
FIELDNM  EQU   0
GDSVOLI  EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
PASSSTRT EQU   0
TNAM     EQU   0
UCBBGN   EQU   0
@NM00039 EQU   CTGDDNM
CTGPROB  EQU   @NM00039
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CNAME    EQU   CTGRBASE
CEXP     EQU   CTGRBASE+55
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00109 EQU   CATTR1
CCATTR   EQU   @NM00109
@NM00110 EQU   CCATTR
@NM00112 EQU   CATTR1
CRGATTR  EQU   @NM00112
CUPG     EQU   CRGATTR
DLCRRNO  EQU   DLCSPHDR
UCBOBS01 EQU   UCBDEV
UCBVOLI  EQU   UCBOBS01+4
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00137 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
XIOOPT   EQU   CCARPLX
XIOKEY   EQU   XIOOPT
XIOTNE   EQU   XIOOPT
XIOKGE   EQU   XIOOPT
LEASTSIG EQU   CCASRCH+43
RECKEY   EQU   RCDKEYTY
DELDSADR EQU   DELDBUF+148
DELDSREC EQU   DELDSADR+4
DELVTOCE EQU   DS4VTOCE
@NM00181 EQU   DELDSREC+1
DELVLSER EQU   @NM00181+1
DELDEVT  EQU   @NM00181+7
DELUCB   EQU   @NM00181+11
NUMDSID  EQU   DELSGRRN
DSIDWAPT EQU   DELOPNPL
CCADDDD  EQU   CCASRCH
FLC      EQU   PSA
F4WDCB   EQU   F4WDEB+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DELNOTRK EQU   @NM00181+15
@NM00182 EQU   @NM00181
DELDS4EN EQU   DELVTOCE+6
DELDS4BG EQU   DELVTOCE+2
@NM00180 EQU   DELVTOCE
DELDSHH  EQU   DELDSADR+2
DELDSCC  EQU   DELDSADR
XIOSEQ   EQU   XIOKGE
XIONCK   EQU   XIOOPT
XIONUP   EQU   XIOOPT
XIOARA   EQU   XIOOPT
XIOERS   EQU   XIOOPT
XIOGET   EQU   XIOOPT
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00137
UCBSKPFG EQU   @NM00137
UCBRIPND EQU   @NM00137
UCBRTIAC EQU   @NM00137
UCBRSV79 EQU   @NM00137
UCBRSV78 EQU   @NM00137
UCBRSV77 EQU   @NM00137
UCBOLTEP EQU   @NM00137
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00136 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVTOC  EQU   UCBOBS01
@NM00113 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00110
@NM00111 EQU   @NM00110
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00108 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
@NM00107 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
@NM00089 EQU   MCATDSTR+1
@NM00088 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
DSIDWAL2 EQU   DSIDWA+2
DSIDWAL1 EQU   DSIDWA
CUMRC    EQU   CUMWA+148
@NM00188 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00187 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00186 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00185 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00184 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00183 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
DELOBUF  EQU   DELOCAM+12
DELOVOL  EQU   DELOCAM+8
DELODSN  EQU   DELOCAM+4
DELOPT   EQU   DELOCAM
RNAMEID  EQU   RNAME+7
RNAMECA  EQU   RNAME+3
RNAMECI  EQU   RNAME
ENQRNADR EQU   ENQPROPR+8
ENQQNADR EQU   ENQPROPR+4
ENQRETC  EQU   ENQPROPR+3
@NM00179 EQU   ENQOPT2
ENQSHR   EQU   ENQOPT2
ENQRLEN  EQU   ENQPROPR+1
ENQDIR   EQU   ENQOPT1
@NM00178 EQU   ENQOPT1
ENQNEW   EQU   ENQOPT1
ENQEND   EQU   ENQOPT1
DELPASWD EQU   DELPASSW+1
DELPASLN EQU   DELPASSW
DELRCPTR EQU   DELERASE+152
DELRPL   EQU   DELERASE+76
DELACB   EQU   DELERASE
@NM00177 EQU   DELWKA+512
DELACBPT EQU   DELOPNPL+1
@NM00176 EQU   DELOPOPT
DELOPEND EQU   DELOPOPT
DELHECIN EQU   DELTIOPT+1
@NM00175 EQU   DELTIOPT
DELPROC  EQU   DELWKA+502
DELSVTET EQU   DELWKA+490
DELSVMTL EQU   DELVOLL
DELSRCD2 EQU   DELSVOL+13
DELSRCD1 EQU   DELSVOL+12
DELSVLID EQU   DELSVOL+6
DELSDEVT EQU   DELSVOL+2
DELSNVLS EQU   DELSVOL
DELSVLST EQU   DELSCRTH+12
DELSNUSE EQU   DELSCRTH+8
DELSDSNM EQU   DELSCRTH+4
DELSCRFL EQU   DELSCRTH
@NM00174 EQU   DELDSDWA+9
DELDRRN  EQU   DELDIRCT
DELDRLNG EQU   DELDSDWA+2
DELDLNG  EQU   DELDSDWA
DELDSGRP EQU   DELSHWA+4
DELSRLNG EQU   DELSHWA+2
DELSLNG  EQU   DELSHWA
DELVGO   EQU   DELVGOWA+6
DELTVRRN EQU   DELVGOWA+4
DELVRLNG EQU   DELVGOWA+2
DELVLNG  EQU   DELVGOWA
DELXCI   EQU   DELXASSO+1
DELXTYPE EQU   DELXASSO
DELXRLNG EQU   DELXASWA+2
DELXALNG EQU   DELXASWA
DELRCI   EQU   DELRASSO+1
DELRTYP  EQU   DELRASSO
DELRRLNG EQU   DELRASWA+2
DELRALNG EQU   DELRASWA
DELGCI   EQU   DELGASSO+1
DELGTYPE EQU   DELGASSO
DELGRLNG EQU   DELGASWA+2
DELGALNG EQU   DELGASWA
DELCCI   EQU   DELCASSO+1
DELCTYPE EQU   DELCASSO
DELCRLNG EQU   DELCASWA+2
DELCALNG EQU   DELCASWA
DELATYPE EQU   DELASSO
DELARLNG EQU   DELASCWA+2
DELALNG  EQU   DELASCWA
DELNROBJ EQU   DELWKA+182
DELNGOBJ EQU   DELWKA+181
DELNCOBJ EQU   DELWKA+180
DELT2NM  EQU   DELNMT2
DELT2DT  EQU   @NM00173
DELFPLT2 EQU   DELEXTWA+96
DELT1NM  EQU   DELNMT
DELT1DT  EQU   @NM00172
DELFPLT1 EQU   DELFPLT
DELFL1NM EQU   DELNMR
DELFL1DT EQU   @NM00171
DELCPLFL EQU   @NM00170
DELRETCD EQU   DELERRS+3
DELREASN EQU   DELERRS+2
DELMODID EQU   DELERRS
@NM00169 EQU   DELXLEN+2
TSTSPDUU EQU   DELXLEN
DELTSFPL EQU   DELXLOC
TSTCNTRN EQU   DELVCRN
TSTRELSP EQU   DELVRRN
DELC     EQU   DELWKA+19
DELE     EQU   DELSGRRN+1
@NM00168 EQU   DELSPFLG
DELNONVS EQU   DELSPFLG
DELCODE4 EQU   @NM00167
DELCODE3 EQU   @NM00167
DELGNMR  EQU   @NM00167
DELCAT   EQU   @NM00167
DELKYRNG EQU   @NM00167
DELCODE2 EQU   @NM00167
DELCODE  EQU   @NM00167
DELRTYPE EQU   DELWKA+14
DELR3SAV EQU   DELWKA+13
DELNMOBJ EQU   DELWKA+12
@NM00166 EQU   DELWKA
CMBYTAU  EQU   CMSWA+500
CMBYTTRK EQU   CMSWA+496
CMSCTREC EQU   CMSWA+416
@NM00165 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMBLPTKS EQU   CMSWA+408
CMSDSPTB EQU   CMSWA+344
@NM00164 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00163 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00162 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
DCWFPLPT EQU   CMSWA+196
DCWAREPT EQU   CMSWA+192
@NM00161 EQU   CMSWA+190
DCWIX    EQU   CMSWA+188
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
CMDEFSWA EQU   CMSWA+128
CMSRCCOR EQU   CMSWA+124
CMEXTLST EQU   CMSWA+120
WORKPROC EQU   CMSWA+118
@NM00160 EQU   CMSWA+116
CMFPLIDX EQU   CMSWA+112
CMCNVNO  EQU   CMSWA+110
CMCNVLEN EQU   CMSWA+108
CMTRKCYL EQU   CMSPCATR+12
CMTRKPCA EQU   CMSPCATR+10
CMBLKTRK EQU   CMSPCATR+8
CMSWADTY EQU   CMSPCATR+4
CMPHYBLK EQU   CMSPCATR
CMTOTVOL EQU   CMSWA+74
CMVLVOL  EQU   CMVLLIST+4
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
CMVLLTLN EQU   CMVLLIST
@NM00159 EQU   CMSWA+62
CMSCRADT EQU   CMSWA+58
CMSCRAVI EQU   CMSWA+52
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
CMRMVVOL EQU   CMVOLCTR
CMADDVOL EQU   CMRNGCTR
SPACINDC EQU   CMSWA+38
PROCESS  EQU   CMSWA+36
CMDTAFPL EQU   CMHIXFPL
CMTSTFPL EQU   CMHDTFPL
CMRNMLST EQU   CMLDTFPL
CMEXTFLS EQU   CMCPLFVT
CMASCFPL EQU   CMSWA+16
CMWFVTPT EQU   CMSWA+12
CMWACI   EQU   CMSWA+3
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMCISREQ EQU   CMSWA+1
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
CMFXHRBA EQU   CMFXECTS+16
CMFXLRBA EQU   CMFXECTS+12
CMFXNOTT EQU   CMFXECTS+10
CMFXEDHH EQU   CMFXEDA+2
CMFXEDCC EQU   CMFXEDA
CMFXSTHH EQU   CMFXSTA+2
CMFXSTCC EQU   CMFXSTA
CMFXEXSS EQU   CMFXECTS
CMFLEND  EQU   CMFOVLAY+14
CMFLEXLN EQU   CMFOVLAY+12
CMFLHKLN EQU   CMFOVLAY+10
CMFLLKLN EQU   CMFOVLAY+8
CMFBYTAU EQU   CMFOVLAY+4
CMFBYTRK EQU   CMFOVLAY
CMFLSSDS EQU   GVO+35
@NM00158 EQU   CMFLITEX
CMFLNOPF EQU   CMFLITEX
CMFLSSDT EQU   CMFLITEX
CMFLNTKA EQU   GVO+32
CMFLNBTK EQU   GVO+30
CMFLPHYB EQU   GVO+26
CMFLHABA EQU   GVO+22
CMFLHUBA EQU   GVO+18
CMFLHKBA EQU   GVO+14
CMFLNOEX EQU   GVO+13
@NM00157 EQU   CMFLVLFL
CMFLVLOV EQU   CMFLVLFL
CMFLVLCN EQU   CMFLVLFL
CMFLVLPR EQU   CMFLVLFL
CMFLFLSQ EQU   GVO+10
CMFLVOL  EQU   GVO+4
CMFLDEVT EQU   GVO
VVOLLVSR EQU   VVOLLENT+6
VVOLLVFY EQU   @NM00156
VVOLLMNT EQU   @NM00156
VVOLLUCB EQU   VVOLLENT
VVOLLDEB EQU   IDAVVOLL+32
VVOLLBIB EQU   IDAVVOLL+28
VVOLLSFI EQU   IDAVVOLL+16
VVOLLCNT EQU   VVOLLERR+3
VVOLLSFC EQU   VVOLLERR+2
VVOLLFNC EQU   VVOLLERR+1
VVOLLPDC EQU   VVOLLERR
VVOLLACB EQU   IDAVVOLL+8
VVOLLTAB EQU   IDAVVOLL+4
VVOLLNBR EQU   IDAVVOLL+2
@NM00155 EQU   IDAVVOLL+1
VVOLLSWD EQU   @NM00153
VVOLLCAT EQU   @NM00153
VVOLLEOV EQU   @NM00153
VVOLLOPE EQU   @NM00153
VVOLLTIO EQU   @NM00153
VVOLLID  EQU   @NM00153
@NM00154 EQU   @NM00153
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00152 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00151 EQU   RPLRBAR+3
@NM00150 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
NXTR12   EQU   RSAMAP+12
RSAR12   EQU   RSAMAP
DCSPLE   EQU   DCSWA+104
@NM00149 EQU   DCSCLPL+1
@NM00148 EQU   @NM00147
@NM00146 EQU   DCSWA+98
@NM00145 EQU   DCSWA+84
@NM00144 EQU   DCSTRWA+14
@NM00143 EQU   DCSDSN+35
@NM00142 EQU   DCSDSN+26
@NM00141 EQU   DCSDSN+8
@NM00140 EQU   DCSDSN
@NM00139 EQU   DCSWA+8
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00138
UCBHALI  EQU   @NM00138
UCBRSV09 EQU   @NM00138
UCBRSV08 EQU   @NM00138
UCBRSV07 EQU   @NM00138
UCBRSV06 EQU   @NM00138
UCBRSV05 EQU   @NM00138
UCBRSV04 EQU   @NM00138
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00135 EQU   UCB
@NM00134 EQU   DLCWA+156
@NM00133 EQU   DLCFLG
@NM00132 EQU   DLCXWA+2
F4WCCW3  EQU   F4WCCW+16
F4WCCW2  EQU   F4WCCW+8
F4WCCW1  EQU   F4WCCW
F4WSEEK  EQU   IGGMF4WA+88
@NM00131 EQU   F4WIOB+24
F4WIDCB  EQU   F4WIOB+20
F4WSCP   EQU   F4WIOB+16
@NM00130 EQU   F4WIOB+8
F4WIECB  EQU   F4WIOB+4
@NM00129 EQU   F4WIOB
@NM00128 EQU   F4WECB+1
F4WECMP  EQU   F4WECB
F4WDEBP  EQU   IGGMF4WA+48
F4WNTK   EQU   F4WDEB+46
F4WECC   EQU   F4WDEB+42
F4WSCC   EQU   F4WDEB+38
F4WDBB   EQU   F4WDEB+36
F4WDMOD  EQU   F4WDEB+32
F4WDAPP  EQU   F4WDEB+29
F4WDEXS  EQU   F4WDEB+28
F4WDDCB  EQU   F4WDEB+25
F4WDID   EQU   F4WDEB+24
@NM00127 EQU   F4WDEB+17
F4WEXT   EQU   F4WDEB+16
@NM00126 EQU   F4WDEB
DS4END   EQU   IECSDSL4+96
@NM00125 EQU   IECSDSL4+71
DS4F6PTR EQU   IECSDSL4+56
@NM00124 EQU   IECSDSL4+51
@NM00123 EQU   DS4VSIND
DS4VSBAD EQU   DS4VSIND
DS4VSREF EQU   DS4VSIND
DS4DEVDB EQU   DS4DEVCT+13
DS4DEVDT EQU   DS4DEVCT+12
DS4DEVTL EQU   DS4DEVCT+10
DS4DEVFG EQU   DS4DEVCT+9
DS4DEVK  EQU   DS4DEVCT+8
DS4DEVL  EQU   DS4DEVOV+1
DS4DEVI  EQU   DS4DEVOV
DS4DEVTK EQU   DS4DEVCT+4
DS4DEVSZ EQU   DS4DEVCT
@NM00122 EQU   IECSDSL4+16
DS4NOEXT EQU   IECSDSL4+15
DS4VTOCI EQU   IECSDSL4+14
DS4NOATK EQU   IECSDSL4+12
DS4HCCHH EQU   IECSDSL4+8
DS4DSREC EQU   IECSDSL4+6
DS4HPCHR EQU   IECSDSL4+1
DS4IDFMT EQU   IECSDSL4
@NM00121 EQU   IECSDSF4
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00120 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00119 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00118 EQU   RTDEVUCB
@NM00117 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00116 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00115 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00114 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTVOLSER EQU   LTENTRY+2
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CTVDRSTT EQU   CTVDEXTN+4
CTVDIRTS EQU   CTVDEXTN
CTVDSDCI EQU   CTVDIR+2
CTVDSDLF EQU   CTVDSDSN+1
CTVDSDCV EQU   CTVDSDSN
CTVEXTNN EQU   CTVEXTNT+2
CTVEXTT  EQU   CTVEXTNT
CTVSQT   EQU   CTVDSPAC+18
CTVSPOPT EQU   CTVDSPAC+17
CTVNOEXT EQU   CTVDSPAC+16
@NM00106 EQU   CTVDSPFG
CTVCATDF EQU   CTVDSPFG
@NM00105 EQU   CTVDSPFG
CTVAUTO  EQU   CTVDSPFG
CTVUNIQ  EQU   CTVDSPFG
CTVF1PTR EQU   CTVDSPAC+10
CTVF1TME EQU   CTVDSPAC+2
CTVDSPLF EQU   CTVDSPSN+1
CTVDSPCV EQU   CTVDSPSN
CTVSMBIT EQU   CTVSPMAP+4
CTVSMLEN EQU   CTVSPMAP+2
CTVSMLF  EQU   CTVSMSN+1
CTVSMCV  EQU   CTVSMSN
CTVEGOPT EQU   CTVRCTRL+6
CTVEXRCT EQU   CTVRCTRL+5
@NM00104 EQU   CTVEXRPT+3
CTVEXGCI EQU   CTVEXRPT
CTVGOSEQ EQU   CTVGOPT+4
CTVGOGC  EQU   CTVGOGCI
CTVGODEL EQU   CTVGOGCI
CTVGOEXT EQU   CTVGOGCI
CTVGODSP EQU   CTVGOCI+1
CTVGOFLG EQU   CTVGOCI
CTVSPSXC EQU   CTVDSDIR+2
CTVSPSSN EQU   CTVDSDIR
CTVDSXCT EQU   CTVDSGRP+7
@NM00103 EQU   CTVDSDFL
CTVDSDCN EQU   CTVDSDFL
CTVDSCID EQU   CTVDSGRP+3
CTVDSNEX EQU   CTVDSGRP+2
CTVDSGLF EQU   CTVDSGRP+1
CTVDSGCV EQU   CTVDSGRP
CTVMAP   EQU   CTVDESGP+14
CTVMAPLN EQU   CTVDESGP+12
CTVDESHD EQU   CTVDESGP+10
CTVDESTK EQU   CTVDESGP+8
CTVSTHH  EQU   CTVSTDES+2
CTVSTCC  EQU   CTVSTDES
CTVDESUU EQU   CTVDESGP+2
CTVDESLF EQU   CTVDESGP+1
CTVDESCV EQU   CTVDESGP
CTVSPSQT EQU   CTVSPHDR+20
CTVSPSPO EQU   CTVSPHDR+19
CTVSPNEX EQU   CTVSPHDR+18
CTVSPNDS EQU   CTVSPHDR+16
@NM00102 EQU   CTVSPFLG
CTVSPCDF EQU   CTVSPFLG
CTVSPMCT EQU   CTVSPFLG
CTVSPUCT EQU   CTVSPFLG
CTVSPAUT EQU   CTVSPFLG
CTVF1ADR EQU   CTVSPHDR+10
CTVSPHLF EQU   CTVSPHDR+1
CTVSPHCV EQU   CTVSPHDR
@NM00101 EQU   CTVOLRCD+74
CTVSYEDS EQU   CTVOLRCD+73
CTVOLFLG EQU   CTVOLRCD+72
CTVTLFAC EQU   CTVDVCHR+18
CTVTLFLG EQU   CTVDVFLG
@NM00100 EQU   CTVDVFLG
CTVABFLG EQU   CTVDVFLG
@NM00099 EQU   CTVDVFLG
CTVBONK  EQU   CTVDVCHR+16
CTVBKLB  EQU   CTVBOKAB+1
CTVBKNLB EQU   CTVBOKAB
CTVTRKSZ EQU   CTVDVCHR+12
CTVNOTRK EQU   CTVDVCHR+10
CTVNOCYL EQU   CTVDVCHR+8
CTVMXBLK EQU   CTVDVCHR+4
CTVDEVTY EQU   CTVDVCHR
CTVOLTIM EQU   CTVOLRCD+44
CTVOLNME EQU   CTVOLRCD
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00098 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00097 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00096 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00095 EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00094 EQU   COPTS
CENLST   EQU   COPTS
@NM00093 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00092 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00091 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00090 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00087 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00086 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00085 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00084 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00083 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00082 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00081 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00080 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00079 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00078 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00053 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00052 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00051 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00050 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00049 EQU   CVTFIX+248
@NM00048 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00047 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00046 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00045 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00044 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00043 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00042 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00041 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
CTGFLNG  EQU   CTGFLDAT
CTGFLDTS EQU   CTGFLDRE
@NM00040 EQU   CTGFLDRE
CTGPSWD  EQU   CTGJSCB
@NM00038 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00037 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00036 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
@NM00035 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00034 EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1536
@NM00033 EQU   IGGCCA+1496
CCAOCPL  EQU   IGGCCA+1492
CCASAVMN EQU   CCADGDGA
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00032 EQU   CCAFLG10
CCADEFUN EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00031 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00030 EQU   CCAREGS
@NM00029 EQU   CCAFLG11
CCAF11B6 EQU   CCAFLG11
CCAF11B5 EQU   CCAFLG11
@NM00028 EQU   CCAFLG11
@NM00027 EQU   IGGCCA+1057
@NM00026 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00025 EQU   MNATFLGS
MNATFCLS EQU   MNATFLGS
@NM00024 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00023 EQU   CCAMNAT+1
@NM00022 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00021 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00020 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00019 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
CCASAVID EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00018 EQU   CCAMSFLG
CCAGDGUY EQU   CCAMSFLG
CCASKYSS EQU   CCAMSFLG
CCACPLOK EQU   CCAMSFLG
CCACICIN EQU   CCAMSFLG
CCAUSKEY EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCAMCPL  EQU   CCAXCPL
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLF  EQU   IGGCCA+209
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00077 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00076 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00075 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00074 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00073 EQU   FLCFSA
@NM00072 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00071 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00070 EQU   FLCIOA
@NM00069 EQU   FLCMCLA+15
@NM00068 EQU   FLCMCLA+14
@NM00067 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00066 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00065 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00064 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00063 EQU   FLCPER
@NM00062 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00061 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00060 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00059 EQU   FLCPIILC
@NM00058 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00057 EQU   FLCSVILC
@NM00056 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00055 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00054 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00310 EQU   @RC00309
@RC00441 EQU   @RC00426
@RC00444 EQU   @RC00426
@RC00540 EQU   @RC00539
@RC00664 EQU   @RC00657
@RC00749 EQU   @RC00742
@RC00815 EQU   @RC00813
@RT00897 EQU   @RC00877
@PB00009 EQU   @EL00001
@RC00462 EQU   @RC00444
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGG0CLAF,(C'PLS1017',0701,78174)
