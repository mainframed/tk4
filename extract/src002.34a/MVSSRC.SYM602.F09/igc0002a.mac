         TITLE 'IGC0002A - FIRST LOAD OF BPAM STOW ROUTINE'
IGC0002A CSECT
         SPACE
***********************************************************************
*                                                                     *
* MODULE NAME = IGC0002A                                              *
*                                                                     *
* DESCRIPTIVE NAME = FIRST LOAD OF BPAM STOW ROUTINE                  *
*                                                                     *
* STATUS = RELEASE VS2-4, LEVEL 000                                   *
*                                                                     *
*                                                                     *
* FUNCTION = THE STOW FUNCTION MAINTAINS THE DIRECTORY PORTION OF A   *
*            PARTITIONED DATA SET.  THE ENTRIES WITHIN A DIRECTORY    *
*            ARE KEPT IN ASCENDING ORDER OF THEIR BINARY VALUE.  STOW *
*            WILL PERFORM ONE OF THE FOLLOWING FOUR FUNCTIONS         *
*            DEPENDING UPON THE USER'S REQUEST:                       *
*            1. ADD - ADD A NEW ENTRY TO A DIRECTORY.                 *
*                                                                     *
*            2. REPLACE - EITHER REPLACE AN EXISTING ENTRY WITH A NEW *
*               ENTRY OR ADD THE NEW ENTRY IF THE EXISTING ENTRY CAN  *
*               NOT BE FOUND.                                         *
*                                                                     *
*            3. DELETE - DELETE AN ENTRY FROM A DIRECTORY.            *
*                                                                     *
*            4. CHANGE - CHANGE THE NAME OF A DIRECTORY ENTRY.        *
*                                                                     *
*            IF THE REQUEST IS FOR EITHER AN ADD OR REPLACE FUNCTION  *
*            AND THE DIRECTORY HAS BEEN SUCCESSFULLY UPDATED, AN END  *
*            OF DATA MARK WILL BE WRITTEN AT THE END OF THE MEMBER.   *
*                                                                     *
*            IGC0002A IS RESPONSIBLE FOR PERFORMING VARIOUS DIAGNOS-  *
*            TICS FOR THE STOW FUNCTION AS FOLLOWS:                   *
*            1. DATA CONTROL BLOCK CHECK                              *
*               A. CHECK THE DCB FOR TO DETERMINE IF IT IS OPEN.      *
*               B. CHECK TO SEE IF THE DCB IS OPEN FOR INPUT.         *
*               C. IF AN INVALID CONDITION IS DETECTED FROM THE ABOVE *
*                  CHECKS, IGC0002A WILL SET A  RETURN CODE IN REG 15 *
*                  AND RETURN TO THE CALLER VIA A BR 14.              *
*                                                                     *
*            2. REQUEST TYPE                                          *
*               THE REQUEST TYPE IS DETERMINED BY A UNIQUE            *
*               COMBINATION OF THE SIGNS IN REGISTERS 0 AND 1.        *
*                                                                     *
*            3. WORKAREA FOR THE FOLLOWING                            *
*               A. THE INPUT/OUTPUT BUFFERS FOR MANIPULATING THE      *
*                  THE DIRECTORY ENTRIES.                             *
*               B. THE ECB, IOB, AND CHANNEL PROGRAMS FOR READING AND *
*                  WRITING THE DIRECTORY BLOCKS.                      *
*               C. THE FUNCTION CODE INDICATING THE REQUEST TYPE.     *
*               D. THE RETURN CODE IF APPLICABLE.                     *
*               E. SAVE THE ADDRESS OF THE CALLER'S PARAMETERS.       *
*               F. SAVE THE RELATIVE TRACK ADDRESS, (TTR), FROM THE   *
*                  DCB IF THE ALIAS BIT IS NOT ON IN THE CALLER'S     *
*                  PARAMETER LIST AND THE FUNCTION REQUEST IS EITHER  *
*                  ADD OR REPLACE.                                    *
*               G. IF A CHANGE FUNCTION, SAVE THE RELATIVE ADDRESS,   *
*                  (TTR), FROM THE OLD ENTRY.                         *
*               H. SET A SWITCH REFLECTING THE LAST OPERATION         *
*                  PERFORMED WITH THE DCB BEFORE STOW WAS ISSUED.     *
*               I. FOR CHANGE, INDICATE IN WORK AREA WHICH OPERATION  *
*                  WILL BE PERFORMED FIRST - ADD OR DELETE.           *
*                                                                     *
*            4. EVENT CONTROL BLOCK, INPUT OUTPUT BLOCK               *
*               A. IGC0002A DYNAMICALLY CONSTRUCTS THE ECB, IOB, AND  *
*                  THE CHANNEL PROGRAMS THAT WILL BE USED BY IT.      *
*               B. IGC0002A EXECUTES A CHANNEL PROGRAM TO READ IN THE *
*                  DIRECTORY BLOCK AGAINST WHICH SOME ACTION WILL BE  *
*                  PERFORMED AND THE FOLLOWING BLOCK IF AVAILIBLE.    *
*               C. IF AN I/O ERROR OCCURS, RETURN AND REASON CODES    *
*                  WILL BE SET AND CONTROL RETURNED TO THE CALLER     *
*                  WITHOUT FURTHER PROCESSING.                        *
*                                                                     *
*            5. DIRECTORY BLOCK DIAGNOSTICS                           *
*               A. DETERMINE IF THE REQUEST IS VALID AND IF NOT SET   *
*                  THE APPROPIATE RETURN CODE AND RETURN TO THE       *
*                  CALLER VIA A BR 14.                                *
*                                                                     *
*                                                                     *
* NOTES = DIRECTORY LAYOUT                                            *
*                                                                     *
*         ×-------× ×-------× ×---×-------------×------×----------×   *
*         × COUNT × ×  KEY  × × N × FIRST ENTRY × ETC. × FFFFFFFF ×   *
*         ×-------× ×-------× ×---×-------------×------×----------×   *
*                                                                     *
*         COUNT - AN EIGHT BYTE FIELD CONTAINING THE ADDRESS OF THIS  *
*                 DIRECTORY BLOCK IN THE FORM OF CCHHRKDD.            *
*         KEY   - AN EIGHT BYTE FIELD CONTAINING THE NAME OF THE LAST *
*                 ENTRY IN THIS DIRECTORY BLOCK.  IF THIS IS THE LAST *
*                 BLOCK IN THE DIRECTORY THE KEY WILL CONTAIN         *
*                 X'FFFFFFFF'.                                        *
*         N     - A TWO BYTE FIELD INDICATING THE TOTAL NUMBER OF     *
*                 BYTES USED IN THIS DIRECTORY BLOCK INCLUDING ITSELF.*
*                 IF THIS IS THE LAST BLOCK, THE TOTAL WILL ALSO IN-  *
*                 CLUDE THE 4 X'0'S FOLLOWING THE X'FFFFFFFF' FIELD.  *
*         F'S   - AN EIGHT BYTE FIELD SHOWING THE END OF THE ENTRIES  *
*                 FOR A DIRECTORY.                                    *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = SEE REGISTER EQUATES BELOW                *
*                                                                     *
*    PATCH LABEL = PATCH                                              *
*                                                                     *
*                                                                     *
* MODULE TYPE = SVC ROTUINE                                           *
*                                                                     *
*    ATTRIBUTES = REENTRANT, ENABLED, PRIVILEGED, ENTERED IN          *
*                 SUPERVISOR KEY AND ISSUES A MODESET TO RUN IN THE   *
*                 CALLER'S KEY.                                       *
*                                                                     *
*                                                                     *
* ENTRY POINT = IGC0002A                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = THIS ROUTINE RECEIVES CONTROL FROM THE SECOND LEVEL    *
*              SVC INTERRUPT HANDLER FOLLOWING THE ISSUANCE OF THE    *
*              STOW MACRO WHICH RESULTS IN SVC 21.                    *
*                                                                     *
*    INPUT = REGISTER 0  - ADDRESS OF THE CALLERS DATA AREA           *
*            REGISTER 1  - ADDRESS OF THE CALLER'S DCB                *
*            REGISTER 3  - CVT ADDRESS                                *
*            REGISTER 4  - TCB ADDRESS                                *
*            REGISTER 5  - SVRB ADDRESS                               *
*            REGISTER 14 - RETURN ADDRESS                             *
*                                                                     *
*            IN ADDITION TO THE ADDRESS OF THE DATA IN REGISTER 0 AND *
*            THE ADDRESS OF THE DCB IN REGISTER 1, THE STOW MACRO     *
*            ALSO SETS THE SIGNS OF THE TWO REGISTERS AS FOLLOWS:     *
*               FUNCTION       REGISTER ZERO       REGISTER ONE       *
*                ADD              POSITIVE           POSITIVE         *
*                REPLACE          POSITIVE           NEGATIVE         *
*                DELETE           NEGATIVE           POSITIVE         *
*                CHANGE           NEGATIVE           NEGATIVE         *
*                                                                     *
*            FOLLOWING ARE THE FORMATS OF THE DATA AREA SUPPLIED BY   *
*            THE CALLER IN REGISTER 0:                                *
*                                                                     *
*               ADD OR REPLACE                                        *
*               ×------------×------×-------------------------×       *
*               ×    NAME    × TTRC ×   VARIABLE USER DATA    ×       *
*               ×------------×------×-------------------------×       *
*                                                                     *
*               CHANGE                                                *
*               ×------------×------------×                           *
*               ×  OLD NAME  ×  NEW NAME  ×                           *
*               ×------------×------------×                           *
*                                                                     *
*               DELETE                                                *
*               ×------------×                                        *
*               ×    NAME    ×                                        *
*               ×------------×                                        *
*                                                                     *
*               NAME- EIGHT BYTE NAME OF ENTRY BEING ACTED UPON.      *
*               TT -  RELATIVE TRACK FROM THE BEGINNING OF THE DATA   *
*                     SET.                                            *
*               R  -  RELATIVE BLOCK NUMBER ON A TRACK.               *
*               C  -  INDICATES IF THE NAME IS AN ALIAS, THE NUMBER   *
*                     OF TTRN'S IN THE USER DATA AND THE LENGTH OF    *
*                     THE USER DATA. THE FORMAT IS AS FOLLOWS:        *
*                        BIT0   -   IF ON NAME IS AN ALIAS.           *
*                        BITS 1-2 - NUMBER OF TTRNS IN USER DATA.     *
*                                   FIELD.  MAXIMUM NUMBER IS THREE.  *
*                        BITS 3-7 - BY THEIR BINARY VALUE, INDICATE   *
*                                   NUMBER OF HALF WORDS OF USER DATA.*
*                                                                     *
*    OUTPUT = IF RETURNING TO THE CALLER -                            *
*                REGISTER 0  - CONTAINS THE REASON CODE               *
*                REGISTER 15 - CONTAINS THE RETURN CODE               *
*                                                                     *
*             IF TRANSFERING CONTROL TO THE SECOND LOAD OF STOW -     *
*                REGISTER 10 - CONTAINS ADDR OF THE STOW WORK AREA    *
*                REGISTER 11 - ADDRESS OF THE CALLER'S DCB            *
*                                                                     *
*    EXIT-NORMAL = BRANCH TO THE SECOND LOAD - IGG0210A.              *
*                                                                     *
*    EXIT-ERROR = RETURN TO THE CALLER VIA A BR 14 WITH REASON CODE   *
*                 REGISTER 0 AND RETURN CODE REGISTER 15 CONTAINING   *
*                 THE FOLLOWING:                                      *
*                 REG 0   REG 15              CONDITION               *
*                   0       4 -  ADD FUNCTION - ENTRY ALREADY EXIST.  *
*                                CHANGE FUNCTION - DIRECTORY ALREADY  *
*                                CONTAINS THE SPECIFIED NEW NAME.     *
*                   0       8 -  REPLACE AND DELETE FUNCTIONS - THE   *
*                                SPECIFIED NAME COULD NOT BE FOUND.   *
*                                CHANGE FUNCTION - THE SPECIFIED      *
*                                OLD NAME COULD NOT BE FOUND.         *
*                   1       16 - ALL FUNCTIONS - A PERMANENT I/O      *
*                                ERROR OCCURED READING THE DIRECTORY. *
*                   0       20 - ALL FUNCTIONS - THE USER'S DCB IS    *
*                                NOT OPEN.                            *
*                   0       24 - ALL FUNCTIONS - NO CORE AVAILIBLE.   *
*                                                                     *
*                                                                     *
* ENTRY POINT = EXITRTN                                               *
*                                                                     *
*    PURPOSE = ENTERED FROM THE RTM WHEN THERE IS AN ATTEMPT TO       *
*              ABNORMALLY TERMINATE THE RB LEVEL ON WHICH THIS SVC IS *
*              ACTIVE.  THIS ROUTINE WILL FIND THE ADDRESS OF THE TRR *
*              BY ISSUING A LOAD. IT WILL ALSO FILL IN SDWACSCT       *
*              AND SDWAREXN.                                          *
*                                                                     *
*    LINKAGE = ENTERED FROM THE RTM VIA A SYNCH IN KEY ZERO, ENABLED  *
*                                                                     *
*    INPUT = REGISTER 0  - CODE (12 IF NO RTCA IS PASSED)             *
*            REGISTER 1  - ADDRESS OF THE RTCA                        *
*            REGISTER 13 - ADDRESS OF AN 18 FULLWORD SAVE AREA        *
*            REGISTER 14 - RETURN ADDRESS TO THE RTM                  *
*            REGISTER 15 - ADDRESS OF THE ESTAE EXIT BOOTSTRAP RTN    *
*                                                                     *
*    OUTPUT = SAME AS INPUT EXCEPTING REGISTER 15 WHICH WILL CONTAIN  *
*             THE ADDRESS OF THE ESTAE ROUTINE IGCT0021.              *
*                                                                     *
*    EXIT-NORMAL = BR 15 TO IGCT0021                                  *
*                                                                     *
*    EXIT-ERROR = BR 14 TO THE RTM IF NO RTCA WAS PASSED.             *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = ESTAE(SVC 60) - ESTABLISHES A TASK RECOVERY ROUTINE.  *
*                                                                     *
*               MODESET - USED TO CHANGE THE STORAGE PROTECT KEY.     *
*                                                                     *
*               GETMAIN(SVC 120) - GETS CORE FOR A STOW WORK AREA.    *
*                                                                     *
*               EXCP(SVC 0) AND WAIT(SVC 1) - ARE USED TO PERFORM I/O *
*               OPERATIONS.                                           *
*                                                                     *
*               FREEMAIN(SVC 10) - USED TO FREE THE STOW WORK AREA.   *
*                                                                     *
*               IGGSTAE - TRANSFERS CONTROL TO THE STOW ESTAE ROUTINE.*
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCKS = DCB,DEB,ECB,IOB,SVRB,SDWA,TCB                   *
*                                                                     *
*                                                                     *
* TABLES = A WORK AREA IS GOTTEN FROM SUBPOOL 229 IN WHICH TO BUILD   *
*          AN IOB, ECB, BUFFERS, AND CHANNEL PROGRAMS FOR STOW.       *
*                                                                     *
*                                                                     *
* MACROS = ACTION MACROS - ESTAE,MODESET,GETMAIN,EXCP,WAIT,FREEMAIN,  *
*             IGGSTAE                                                 *
*                                                                     *
*          MAPPING MACROS - DCBD,IEZDEB,IHAPDS,IHARB,IHASDWA,IHASTOW, *
*             IKJTCB,IGGSTW                                           *
*                                                                     *
*                                                                     *
* CHANGE ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*        RELEASE 21 DELETIONS                                         *
*    THIS MODULE WAS REWRITTEN FOR RELEASE 21.  THE FOLLOWING APARS   *
*    WERE CORRECTED.  28169, 33374, 35322, 42484, AND 43923.          *
*0281                                                            A50697
*0281                                                            S01964
*        VS1 RELEASE 01 DELETIONS                                     *
*                                                                XM5415
*        VS1 RELEASE 03 DELETIONS                                     *
*                                                               XA02068
*        VS2 RELEASE 01 DELETIONS                                     *
*D617400                                                         YM0943
*        VS2 RELEASE 02 DELETIONS                                     *
*D001400,005000,007400,279900,285300,298400-298900,305100-306000,Y02072
*D324500-325400,351100-351500,365400-366300,370800-377100,       Y02072
*D388800-390600,394200,400500-409500,452700-453600,485100-486000,Y02072
*D495000,615600-616500,665100-670500,708300-709200,713700-729000,Y02072
*D730800-893700,899100-908100                                    Y02072
*        VS2 RELEASE 03 DELETIONS                                     *
* SEE CODE FLAGGED YA06505 AND SA66881 FOR VS2-3 APAR ZA01548   ZA01548
*A628200-628400,628800                                         @ZA12202
*C713340-713342                                                @ZA12202
*                                                              @Z30TSMI
***********************************************************************
         EJECT
***********************************************************************
****                                                               ****
****     EQUATES                                                   ****
****                                                               ****
***********************************************************************
         SPACE
****     THE FOLLOWING REGISTER EQUATES WILL BE USED DURING CONSTRUC-
****     TION OF THE IOB, ECB, AND CHANNEL PROGRAMS USED BY STOW.
         SPACE
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        WORK REGISTER
R2       EQU   2                        WORK REGISTER
R3       EQU   3                        WORK REGISTER
R4       EQU   4                        WORK REGISTER
R5       EQU   5                        WORK REGISTER
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
R8       EQU   8                        WORK REGISTER
R9       EQU   9                        WORK REGISTER
R10      EQU   10                       WORK REGISTER
R11      EQU   11                       WORK REGISTER
R12      EQU   12                       WORK REGISTER
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       WORK REGISTER
R15      EQU   15                       WORK REGISTER
         SPACE 2
****     THE FOLLOWING REGISTER EQUATES WILL BE USED IN THE
****     PROGRAM FLOW
         SPACE
PARMRG0  EQU   R0                       POINTS TO USER DATA UPON ENTRY
DCBRG1   EQU   R1                       POINTS TO DCB UPON ENTRY
DIRSCNRG EQU   R2                       POINTS TO LOCATION IN DIRECTORY
*                                       FOR ACTION TAKING PLACE
PARMRG2  EQU   DIRSCNRG                 USED TO SAVE ADDR OF USER DATA
TTRCRG   EQU   R3                       MANIPULATES THE AMOUNT OF
*                                       USER DATA FOR AN ENTRY
RTCB     EQU   R4                       TCB ADDRESS              Y02072
ENTADDRG EQU   RTCB                     CONTAINS ADDR OF ENTRY   Y02072
*                                       SUPPLIED BY THE USER     Y02072
BUFADRG  EQU   R5                       ADDRESSABILITY TO BUFFERS
RWRK1    EQU   R6                       WORK REGISTER
RWRK2    EQU   R7                       WORK REGISTER
FUNRG    EQU   R8                       CONTAINS FUNCTION CODE
SAVECDRG EQU   R9                       SAVES THE RETURN CODE
RDEB     EQU   SAVECDRG                 ADDRESS OF USER'S DEB    Y02072
WRKARG   EQU   R10                      ADDRESS OF THE WORK AREA
DCBRG11  EQU   R11                      ADDRESS OF THE USER'S DCB
BASERG   EQU   R12                      BASE REGISTER
RSVRB    EQU   R13                      SVRB ADDRESS             Y02072
LINKRG   EQU   R14                      LINKAGE REGISTER WITHIN MODULE
RTNRG    EQU   R15                      CONTAINS RETURN CODE
         SPACE 2
****     DISPLACEMENT AND MASK EQUATES
         SPACE
THREE    EQU   3                        DISPLACE BY THREE
UNITEXCP EQU   X'01'                    TEST FOR UNIT EXCEPTION
         SPACE
****     ERROR CONDITION EQUATES
         SPACE
DIRECTRY EQU   1                        IND I/O ERROR ENCOUNTER- Y02072
*                                       ED IN DIRECTORY          Y02072
NMEXIST  EQU   X'04'                    NAME ALREADY EXISTS
NONAME   EQU   X'08'                    NAME DOESN'T EXIST
IOERRCD  EQU   X'10'                    I/O ERROR
DCBERR1  EQU   X'14'                    DCB NOT OPEN
NOCORE   EQU   X'18'                    NO CORE AVAILABLE
         EJECT
***********************************************************************
****                                                               ****
****     ESTABLISH BASE REGISTERS                                  ****
****                                                               ****
***********************************************************************
         BALR  BASERG,0                 ESTABLISH BASE ADDR
         USING *,BASERG                 ESTABLISH BASE ADDR
         USING TCB,RTCB                 ESTABLISH TCB BASE REG   Y02072
         LR    RSVRB,R5                 GET SVRB ADDRESS         Y02072
         USING RBSECT,RSVRB             ESTABLISH SVRB BASE REG  Y02072
         ST    R14,XSAREG14             SAVE RETURN REGISTER     Y02072
         SR    RWRK1,RWRK1              CLEAR REGISTER           Y02072
         ST    RWRK1,XSASTWWA           IND GETMAIN NOT YET DONE Y02072
         MVC   XSAESTAE(ESTAELEN),ESTALIST  MOVE ESTAE LIST TO   Y02072
*                                       SVRB EXTENDED SAVE AREA  Y02072
         SPACE 2
****
****     ISSUE THE ESTAE MACRO TO ESTABLISH A TASK RECOVERY ROUTINE.
****
         ESTAE XCTL=YES,PARAM=(RSVRB),MF=(E,XSAESTAE)            Y02072
         SPACE 2
****
****     MODSET TO THE CALLER'S KEY.
****
         MODESET EXTKEY=RBT234,WORKREG=1                         Y02072
         SPACE
         L     PARMRG0,RBGRS0           RESTORE PARMETER REG     Y02072
         L     DCBRG1,RBGRS1            RESTORE DCB REGISTER     Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION DETERMINES THE FUNCTION OF STOW REQUESTED    ****
****                                                               ****
***********************************************************************
         LA    FUNRG,STWADD             SET FUNCTION TO ADD
         LTR   PARMRG0,PARMRG0          TEST FOR DELETE OR CHANGE
         BP    TEST1                    BRANCH IF ADD OR REPLACE
         SLL   FUNRG,1                  SET CODE FOR REPLACE
         SPACE
TEST1    EQU   *
         LTR   DCBRG1,DCBRG1            TEST FOR ADD/REPLACE
         BP    TEST02                   BRANCH IF ADD / REPLACE
         SLL   FUNRG,1                  SET FUNCTION TO DELETE
         SPACE
TEST02   EQU   *
         LTR   PARMRG0,PARMRG0          TEST FOR CHANGE FUNCTION
         BP    DCBTEST                  IF NOT BRANCH
         SLL   FUNRG,1                  SET FUNCTION TO CHANGE
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION TESTS THE DATA CONTROL BLOCK FOR OPEN        ****
****                                                               ****
***********************************************************************
DCBTEST  EQU   *
         LPR   PARMRG2,PARMRG0          MAKE PARAMETER ADDR POSITIVE
         LPR   DCBRG11,DCBRG1           MAKE DCB ADDR POSITIVE
         USING IHADCB,DCBRG11           ESTABLISH DCB ADDRESSABILITY
         TM    DCBOFLGS,DCBOFOPN        DATA CONTROL BLOCK OPEN
         BO    GETWORK                  GO GET THE WORK AREA
         SPACE
INVALDCB EQU   *                                                 Y02072
         LA    RTNRG,DCBERR1            SET THE RETURN CODE
         SPACE
RTRNUSR1 EQU   *                                                 Y02072
         SR    R0,R0                    CLEAR REASON CODE REG    Y02072
         SPACE 2
****
****     MODESET TO KEY 0 AND RETURN TO THE CALLER.
****
RTRNUSR2 EQU   *                                                 Y02072
         L     R14,XSAREG14             RESTORE RETURN ADDRESS   Y02072
         MODESET EXTKEY=SUPR            MODESET TO KEY 0         Y02072
         BR    R14                      RETURN TO THE CALLER     Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION GETS THE WORK AREA FOR STOW                  ****
****                                                               ****
***********************************************************************
GETWORK  EQU   *
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         USING DEBBASIC,RDEB            ESTABLISH DEB BASE REGISTER
         TM    DEBOPATB,DEBACCS         DCB OPEN FOR INPUT
         BZ    INVALDCB                 BRANCH IF YES            Y02072
         GETMAIN  RC,LV=CORESIZE,SP=229  GET THE WORK AREA       Y02072
         SPACE
         LTR   RTNRG,RTNRG              GETMAIN SUCCESSFUL
         LA    RTNRG,NOCORE             SET RETURN CODE
         BNZ   RTRNUSR1                 RETURN TO USER IF NOT    Y02072
         LR    WRKARG,R1                GET THE ADDRESS OF CORE  Y02072
         USING STWAREA,WRKARG           EST WORK AREA BASE REG   Y02072
         SPACE 2
****
****     MODESET TO KEY 0 IN ORDER TO SAVE THE WORK AREA ADDRESS IN
****     THE EXTENDED SAVE AREA OF THE SVRB.
****
         MODESET EXTKEY=SUPR                                     Y02072
         ST    WRKARG,XSASTWWA          SAVE WORK AREA ADDR      Y02072
         SPACE 2
****
****     RETURN TO THE CALLER'S KEY.
****
         MODESET EXTKEY=RBT234,WORKREG=1                         Y02072
         DROP  RTCB                     DROP TCB BASE REGISTER   Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION CLEARS THE WORK AREA AND SAVES THE           ****
****     CONDITION AND FUNCTION CODES.                             ****
****                                                               ****
***********************************************************************
         XC    STWAREA(STWFLGLN),STWAREA  CLEAR THE CONDITION AND
*                                       FUNCTION BYTES
         STC   FUNRG,STWFLAG1           SAVE FUNCTION CODE
         TM    DCBOFLGS,DCBOFLWR        LAST OPERATION A WRITE
         BNO   CHANGECK                 NO, CHECK FOR CHANGE     Y02072
         OI    STWFLAG1,STWDCBWR        INDICATE LAST OPERATION
*                                       WAS A WRITE
         SPACE
CHANGECK EQU   *                                                 Y02072
         LA    ENTADDRG,STWOLDNM        POINT TO LOCATION FOR
*                                       ENTRY TO BE MOVED
         TM    STWFLAG1,STWCHNG         CHANGE FUNCTION
         BNO   DATEST                   GO MOVE THE PARAMETER
         SPACE 2
***********************************************************************
****                                                               ****
****     WITH A CHANGE REQUEST THIS SECTION DETERMINES WHICH       ****
****     ENTRY IS THE LOWEST IN ALPHANUMERIC SEQUENCE SO           ****
****     THE FIRST SEARCH IS ON THAT ENTRY                         ****
****                                                               ****
***********************************************************************
         USING STOW,PARMRG2             ESTABLISH ADDRESSABILITY
         LR    PARMRG0,PARMRG2          SAVE THE PARM. ADDR.    A50697
         CLC   STONAME,STOCHANG         COMPARE OLD ENTRY NAME TO NEW
*                                       ENTRY NAME
         BH    OLDHIGH                  BRANCH IF OLD NAME IS HIGHER
         OI    STWFLAG1,STWCHNG+STWDEL  INDICATE DELETE FUNCTION
*                                       TO BE PERFORMED FIRST
         ST    PARMRG2,STWPARM          SAVE ADDRESS OF OLD NAME
         LA    PARMRG2,STOCHANG         POINT TO NEW NAME
         ST    PARMRG2,STWHIGH          SAVE ADDRESS OF NEW NAME
         B     POINTOLD                 GO SAVE BOTH NAMES
         SPACE
OLDHIGH  EQU   *
         OI    STWFLAG1,STWCHNG+STWADD  INDICATE ADD FUNCTION TO
*                                       BE PERFORMED FIRST
         ST    PARMRG2,STWHIGH          SAVE ADDRESS OF OLD NAME
         LA    PARMRG2,STOCHANG         POINT TO NEW NAME
         ST    PARMRG2,STWPARM          SAVE NEW NAME ADDRESS
         SPACE
POINTOLD EQU   *
         LPR   PARMRG2,PARMRG0          POINT TO PARAMETER
*                                       ENTRY TO BE ACTED UPON
         MVC   STWOLDNM(L'STWOLDNM+L'STWNEWNM),STONAME  SAVE THE
*                                       USER' PARAMETER FOR CHANGE
         B     BUILDIO                  GO BUILD THE I/O
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION MOVES THE USER'S PARAMETER TO THE WORK AREA  ****
****                                                               ****
***********************************************************************
DATEST   EQU   *
         LA    TTRCRG,L'STONAME         LENGTH TO BE MOVED
         ST    PARMRG2,STWPARM          SAVE THE ENTRY ADDRESS
         TM    STWFLAG1,STWDEL          DELETE FUNCTION
         BO    MOVEUSER                 YES GO MOVE ITS ENTRY
         IC    TTRCRG,STOCTTRN          GET THE AMOUNT OF USER DATA
         SLL   TTRCRG,27                CLEAR ALIAS BIT
         SRL   TTRCRG,26                RESTORE, MULTIPLY BY TWO
         LA    TTRCRG,STOLNGMV(TTRCRG)  ADD NAME AND TTR LENGTH
         LA    ENTADDRG,STWNEWNM        POINT TO AREA FOR ENTRY
*                                       TO BE MOVED
         SPACE
MOVEUSER EQU   *
         BCTR  TTRCRG,0                 PREPARE FOR EXECUTE
         EX    TTRCRG,MOVEPARM          MOVE THE USER'S ENTRY
         TM    STWFLAG1,STWCHNG+STWDEL  CHANGE OR DELETE FUNCTION
         BM    BUILDIO                  IF YES, BRANCH
         TM    STWCTTRN,STWALIAS        ALIAS BIT ON
         BO    BUILDIO                  IF YES, BRANCH
         MVC   STWTTR,DCBRELAD          SAVE THE RELATIVE ADDR.
         MVC   STWCTTRN,STOCTTRN        GET THE USER'S LENGTH
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION BUILDS THE ECB IOB AND CHANNEL PROGRAMS      ****
****     THAT WILL BE USED BY STOW.                                ****
****                                                               ****
***********************************************************************
         SPACE 2
****
****     THIS PART BUILDS THE ECB AND THE IOB
****
BUILDIO  EQU   *
         DROP  PARMRG2                  DROP ADDRESSABILITY
         SR    R15,R15                  CLEAR FOR ECB
         SR    R0,R0                    CLEAR FOR IOB SENSE
         LA    R1,ECB                   POINT TO THE ECB
         SR    R2,R2                    CLEAR FOR IOB CHANNEL
         LA    R4,STWINCP               POINT TO THE CHANNEL PROG
         LR    R5,DCBRG11               GET THE DCB ADDRESS      Y02072
         SR    R6,R6                    CLEAR FOR RESTART ADDR
         SR    R7,R7                    CLEAR FOR BLOCK COUNT
         LM    R8,R9,DEBBASND+(DEBBINUM-DEBDASD)  GET DATA SET
*                                       STARTING BBCCHH FROM THE DEB
         DROP  RDEB                     DROP DEB BASE REGISTER   Y02072
         SRDL  R8,16                    SET EXTENT NUMBER TO ZERO
         SLDL  R8,8                     SET RECORD NUMBER TO ZERO
         STM   R15,R9,ECB               STORE REGISTERS TO CREATE
*                                       THE ECB AND IOB
         OI    IOBFLAG1,IOBUNREL+IOBSPSVC  SET UNRELATED AND NO  Y02072
*                                       APPENDAGE PROCESS. FLAGS Y02072
         SPACE 2
****
****     THIS PART BUILDS THE CHANNEL PROGRAMS
****
         LM    R14,R9,CHNLPRG1          LOAD SKELETON CHANNEL PROGRAM
         AR    R14,R10                  ESTABLISH ADDRESSING
*                                       FOR SEARCH ID
         AR    R0,R10                   ESTABLISH TRANSFER ADDR
         AR    R2,R10                   ADDRESSING FOR READ COUNT
         A     R4,STWPARM               POINT TO USER ENTRY
         AR    R6,R10                   ESTABLISH ADDRESSING
         AR    R8,R10                   ESTABLISH ADDRESSING
         STM   R14,R9,STWINCP           STORE REGISTERS TO CREATE
*                                       PARTIAL CHANNEL PROGRAM
         LM    R14,R15,RDCTKDA          LOAD REST OF SKELETON
*                                       CHANNEL PROGRAM
         AR    R14,R10                  ESTABLISH ADDRESSING
         STM   R14,R15,STWRCKD1         COMPLETE CHANNEL PROGRAM
         SPACE
CSWTEST  EQU   *
         BAL   LINKRG,EXCPSTW           GO EXECUTE CHANNEL PROG
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION SEARCHES FOR ENTRY IN THE DIRECTORY          ****
****     THAT IS EQUAL OR HIGHER THAN THE REQUESTER'S PARAMETER    ****
****                                                               ****
***********************************************************************
         LA    BUFADRG,STWBUF1          POINT TO THE FIRST BUFFER
         USING BUFFER,BUFADRG           ESTABLISH ADDRESSABILITY
         LA    DIRSCNRG,BUFENTRY        POINT TO FIRST ENTRY
         L     ENTADDRG,STWPARM         GET ADDRESS OF ENTRY IN
*                                       USER'S AREA
         TM    STWFLAG1,STWFLOW         FIRST TIME THROUGH
         BNO   DIRSCAN                  YES, GO SEARCH DIRECTORY
         L     ENTADDRG,STWHIGH         NO, POINT TO SECOND ENTRY
         SPACE
DIRSCAN  EQU   *
         CLC   0(L'STONAME,DIRSCNRG),0(ENTADDRG)  COMPARE ENTRY
*                                       NAME USER SUPPLIED TO ONE
*                                       IN THE DIRECTORY
         BNL   TSTRQST                  ENTRY IN DIRECTORY EQUAL
*                                       OR HIGH, BRANCH
         USING PDS2,DIRSCNRG            ESTABLISH ADDRESSABILITY
         IC    TTRCRG,PDS2INDC          GET C OF TTRC FOR THIS ENTRY
         SLL   TTRCRG,27                CLEAR TTR AND ALIAS BITS
         SRL   TTRCRG,26                RESTORE AND MULTIPLY BY TWO
         LA    DIRSCNRG,PDS2USRD(TTRCRG)  POINT TO NEXT ENTRY IN THE
*                                       DIRECTORY
         B     DIRSCAN                  GO LOOK AT NEXT ENTRY
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION TESTS THE VALIDITY OF THE USER'S REQUEST     ****
****                                                               ****
***********************************************************************
TSTRQST  EQU   *
         BE    EQLENT                   IF COMPARE OF ENTRIES WAS
*                                       EQUAL, BRANCH
         TM    STWFLAG1,STWFLOW         FIRST TIME THROUGH
         BNO   DELETFUN                 YES, BRANCH
         TM    STWFLAG1,STWCHNG+STWADD  CHANGE-ADD TO BE PERFORMED
         BO    EREXIT1                  YES, GO RETURN TO USER
         B     SAVEOFF                  GO SAVE THE OFFSET
         SPACE
DELETFUN EQU   *
         TM    STWFLAG1,STWDEL          DELETE FUNCTION
         BO    EREXIT1                  YES, RETURN TO USER
         TM    STWFLAG1,STWREPL         REPLACE FUNCTION
         BNO   SAVEOFF                  NO, BRANCH
         MVI   STWRTN,NONAME            INDICATE ENTRY COULD NOT
*                                       BE FOUND IN THE DIRECTORY
         XI    STWFLAG1,STWREPL+STWADD  CHANGE FUNCTION TO ADD
         B     SAVEOFF                  GO SAVE OFFSET
         SPACE
EQLENT   EQU   *
         TM    STWFLAG1,STWFLOW         FIRST TIME THROUGH
         BNO   ADDTEST                  YES, BRANCH
         TM    STWFLAG1,STWCHNG+STWDEL  CHANGE-DELETE REQUESTED
         BO    ER4EXIT                  YES, RETURN TO USER
         B     MAYBEREP                 GO SAVE USER DATA
         SPACE
ADDTEST  EQU   *
         TM    STWFLAG1,STWADD          ADD FUNCTION
         BNO   CHNGTEST                 NO, BRANCH
         SPACE
ER4EXIT  EQU   *
         LA    SAVECDRG,NMEXIST         SET RETURN CODE
         B     EREXIT2                  RETURN TO USER
         SPACE
CHNGTEST EQU   *
         TM    STWFLAG1,STWREPL+STWCHNG CHANGE OR REPLACE
         BZ    SAVEOFF                  NO, GO SAVE OFFSET
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION SAVES THE TTR AND USER DATA FROM THE         ****
****     ENTRY IN THE DIRECTORY BLOCK                              ****
****                                                               ****
***********************************************************************
MAYBEREP EQU   *
         USING PDS2,DIRSCNRG            ESTABLISH ENTRY ADDR
         TM    STWFLAG1,STWREPL         REPLACE FUNCTION
         BNO   SAVENTRY                 NO, SAVE ENTRY FOR CHANGE
         TM    STWFLAG1,STWDCBWR        LAST OPERATION A WRITE
         BO    SAVEOFF                  YES, GO SAVE OFFSET
         TM    STWCTTRN,STWALIAS        IS ENTRY AN ALAIS       XA02068
         BO    SAVEOFF                  YES, USE TTR SUPPLIED   XA02068
*                                       BY THE USER             XA02068
         MVC   STWTTR,PDS2TTRP          SAVE TTR FROM OLD ENTRY
         B     SAVEOFF                  GO SAVE OFFSET
         SPACE
SAVENTRY EQU   *
         IC    TTRCRG,PDS2INDC          GET C OF THE TTRC FOR
*                                       THIS ENTRY
         SLL   TTRCRG,27                CLEAR TTR AND ALIAS BITS
         SRL   TTRCRG,26                RESTORE AND MULTIPLY BY TWO
         LA    TTRCRG,(PDS2USRD-PDS2TTRP)-1(TTRCRG)  SET LENGTH TO MOVE
*                                       THE TTRC AND USER DATA
         LA    ENTADDRG,STWTTR          POINT IN WORK AREA TO
*                                       RELATIVE ADDR. FOR ENTRY
         EX    TTRCRG,MVTTRDAT          SAVE THE ENTRY'S TTRC
*                                       AND USER DATA
         B     SAVEOFF                  GO SAVE THE OFFSET
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION IS ENTERED WHEN AN ERROR IS DETECTED         ****
****     AND CONTROL IS TO BE PASSED TO THE USER                   ****
****                                                               ****
***********************************************************************
EREXIT1  EQU   *
         LA    SAVECDRG,NONAME          SET RETURN CODE
         SPACE
EREXIT2  EQU   *
         SR    RWRK1,RWRK1              CLEAR FOR REASON CODE    Y02072
         SPACE
EREXIT3  EQU   *                                                 Y02072
         FREEMAIN  R,LV=CORESIZE,A=(WRKARG),SP=229  FREE CORE    Y02072
         SPACE
         LR    R0,RWRK1                 GET THE REASON CODE      Y02072
         LR    RTNRG,SAVECDRG           GET THE RETURN CODE      YM0943
         B     RTRNUSR2                 RETURN TO THE CALLER     Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION ISSUES THE EXCP AND TESTS FOR                ****
****     A SUCCESSFUL COMPLETION                                   ****
****                                                               ****
***********************************************************************
EXCPSTW  EQU   *
         EXCP  IOBSTDRD                 EXECUTE THE CHANNEL PROG
         TM    ECBCC,ECBPOST            HAS ECB BEEN POSTED    @ZA12202
         BO    BYWAIT                   BYPASS WAIT SVC        @ZA12202
         WAIT  ECB=ECBCC                WAIT FOR PROGRAM
BYWAIT   EQU   *                                               @ZA12202
         TM    ECBCC,ECBNORM            SUCCESSFUL COMPLETION
         BCR   1,LINKRG                 YES, RETURN TO MAIN LINE
         NI    DCBIFLGS,X'FF'-DCBIFEC   TURN OFF ERROR FLAGS     Y02072
         TM    IOBCSW+3,UNITEXCP        UNIT EXCEPTION
         BCR   1,LINKRG                 YES, RETURN TO MAIN LINE
         LA    RWRK1,DIRECTRY           READ ERROR REASON CODE   Y02072
         LA    SAVECDRG,IOERRCD         SET IO ERROR CODE
         B     EREXIT3                  RETURN TO USER           Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION WILL ESTABLISH THE NEW KEY TO SEARCH         ****
****     ON FOR THE CHANGE FUNCTION                                ****
****                                                               ****
***********************************************************************
SETFRST  EQU   *
         OI    STWFLAG1,STWFLOW         INDICATE SECOND TIME THROUGH
         L     ENTADDRG,STWHIGH         POINT TO THE HIGH NAME
*                                       IN USER'S AREA
         MVC   STWKYAD1,STWHIGH+1       SET NEW SEARCH KEY
         B     CSWTEST                  GO ISSUE EXCP
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION OF CODE SAVES THE OFFSET OF THE ENTRY INTO   ****
****     THE INPUT BUFFER.                                         ****
****                                                               ****
***********************************************************************
SAVEOFF  EQU   *
         SR    DIRSCNRG,BUFADRG         DETERMINE OFFSET
         TM    STWFLAG1,STWFLOW         FIRST TIME THROUGH
         BO    NEXTLOAD                 NO, GO TO DETERMINE NEXT LOAD
         STH   DIRSCNRG,STWOFFLW        SAVE THE FIRST ENTRY OFFSET
         TM    STWFLAG1,STWCHNG         CHANGE FUNCTION
         BO    SETFRST                  YES, RETURN TO MAINLINE
         DROP  RSVRB                    DROP SVRB BASE REGISTER  Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SECTION BRANCHES TO THE SECOND LOAD.                 ****
****                                                               ****
***********************************************************************
NEXTLOAD EQU   *
         L     R15,V210A                ADDRESS OF NEXT LOAD   @Z30TSMI
         BR    R15                      BRANCH TO NEXT LOAD    @Z30TSMI
         SPACE 2
****
****     ESTABLISH THE ESTAE EXIT BOOTSTRAP ROUTINE.
****
EXITRTN  IGGSTAE STOWTRR                EST AN EXIT ROUTINE      Y02072
         EJECT
***********************************************************************
****                                                               ****
****     SKELETON CHANNEL PROGRAMS                                 ****
****                                                               ****
***********************************************************************
CHNLPRG1 DS    0F                       THIS CHANNEL PROGRAM IS USED TO
*                                       READ TWO DIRECTORY BLOCKS
RDSRCHID DC    X'31'                    SEARCH ID EQUAL
         DC    AL3(IOBCC-STWAREA)       ADDRESS OF SEARCH ARGUMENT
         DC    X'4000'                  COMMAND CHAINING
         DC    X'0005'                  NO. OF BYTES
RDSRCTIC DC    X'08'                    TRANSFER CONTROL
         DC    AL3(STWSRCH1-STWAREA)    ADDR OF SEARCH ID
         DC    XL4'00'                  NOT USED, BUT REQUIRED
RDCOUNT  DC    X'92'                    READ COUNT
         DC    AL3(STWBUF1-STWAREA)     ADDR. FOR COUNT
         DC    X'4000'                  COMMAND CHAINING
         DC    X'0008'                  NO. OF BYTES TRANSFERED
RDSRCHKY DC    X'E9'                    SEARCH KEY EQUAL- HIGH
         DC    AL3(0)                   ADDR OF USER PARAMETER
         DC    X'4000'                  COMMAND CHAINING
         DC    X'0008'                  NO. BYTES TO SEARCH ON
RDSRCHTC DC    X'08'                    TRANSFER CONTROL
         DC    AL3(STWRDCT1-STWAREA)    ADDR. OF READ COUNT
         DC    XL4'00'                  NOT USED BUT REQUIRED
RDRDDATA DC    X'86'                    READ DATA
         DC    AL3(STWBUF1+L'BUFCNT+L'BUFKEY-STWAREA)  ADDR. FOR DATA
         DC    X'4000'                  COMMAND CHAINING
         DC    X'0100'                  NO. OF BYTES TRANSFERED
RDCTKDA  DC    X'9E'                    READ COUNT KEY DATA
         DC    AL3(STWBUF2-STWAREA)     ADDR. FOR COUNT KEY DATA
         DC    X'0000'                  NO FLAGS
         DC    X'0110'                  NO. OF BYTES TRANSFERED
         SPACE 2
***********************************************************************
****                                                               ****
****     DEFINED CONSTANTS                                         ****
****                                                               ****
***********************************************************************
MOVEPARM MVC   0(0,ENTADDRG),0(PARMRG2) MOVE USER PARAMETER TO
*                                       WORK AREA
MVTTRDAT MVC   0(0,ENTADDRG),L'PDS2NAME(DIRSCNRG) MOVE USER DATA FROM
*                                       DIRECTORY TO WORK AREA
V210A    DC    V(IGG0210A)              ADDRESS OF NEXT LOAD   @Z30TSMI
STOWTRR  DC    CL8'IGCT0021'            STOW ESTAE ROUTINE NAME  Y02072
ESTALIST ESTAE EXITRTN,RECORD=YES,MF=L  LIST FORM OF ESTAE MACRO Y02072
ESTAELEN EQU   *-ESTALIST               LENGTH OF ESTAE LIST     Y02072
         DC    C'@ZA12202'              MODULE ID              @ZA12202
         DC    CL8'&SYSDATE'            LATEST DATE            @ZA12202
PATCH    DC    0XL50'0',C'IGC0002A',42X'0'  50 BYTE PATCH AREA   Y02072
         EJECT
***********************************************************************
****                                                               ****
****     CONTROL BLOCK DEFINITIONS                                 ****
****                                                               ****
***********************************************************************
         SPACE
         CVT   DSECT=YES
         EJECT
         DCBD  DSORG=PO,DEVD=DA
         EJECT
         IEZDEB
         EJECT
         IHAPDS PDSBLDL=NO
         EJECT
         IHARB                                                   Y02072
         EJECT
         IHASDWA                                                 Y02072
         EJECT
         IHASTOW
         EJECT
         IKJTCB                                                  Y02072
         EJECT
         IGGSTW                                                  Y02072
         END
