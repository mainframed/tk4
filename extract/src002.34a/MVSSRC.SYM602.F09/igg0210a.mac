         TITLE 'IGG0210A - SECOND LOAD OF BPAM STOW ROUTINE'
IGG0210A CSECT
         SPACE
***********************************************************************
*                                                                     *
* MODULE NAME = IGG0210A                                              *
*                                                                     *
* DESCRIPTIVE NAME = SECOND LOAD OF BPAM STOW ROUTINE                 *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE VS2-4, LEVEL 04/07/78                              *
*                                                                     *
*                                                                     *
* FUNCTION = WRITES AN EOD MARKER FOLLOWING THE LAST MEMBER WRITTEN   *
*            IF THE FOLLOWING CONDITIONS ARE MET:                     *
*            1 - THE FUNCTION REQUESTED IS AN ADD OR A REPLACE.       *
*            2 - THE ENTRY BEING ADDED OR REPLACED IS NOT AN ALIAS.   *
*            3 - THE USER'S DCB IS NOT OPEN FOR RDBACK OR UPDATE.     *
*            4 - THE LAST I/O OPERATION PERFORMED BY THE CALLER WAS A *
*                WRITE.                                               *
*                                                                     *
*            RETURNS, TO THE CALLER, THE TTR OF THE LAST MEMBER       *
*            WRITTEN IF THE FOLLOWING CONDITIONS ARE MET:             *
*            1 - THE FUNCTION REQUESTED IS AN ADD OR A REPLACE.       *
*            2 - THE ENTRY BEING ADDED OR REPLACED IS NOT AN ALIAS.   *
*                                                                     *
*            BUILDS, IN THE STOW WORK AREA, THE CHANNEL PROGRAM USED  *
*            BY THE THIRD LOAD (IGG021AB) TO PERFORM THE I/O OPERA-   *
*            TIONS ON THE DIRECTORY NECESSARY TO ACCOMPLISH THE       *
*            FUNCTION REQUESTED.                                      *
*                                                                     *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = SEE REGISTER EQUATES BELOW                *
*                                                                     *
*    PATCH LABEL = PATCH                                              *
*                                                                     *
*                                                                     *
* MODULE TYPE = SVC ROUTINE                                           *
*                                                                     *
*    ATTRIBUTES = REENTRANT, ENABLED, PRIVILEGED, ENTERED IN          *
*                 SUPERVISOR KEY AND ISSUES A MODESET TO RUN IN THE   *
*                 CALLER'S KEY.                                       *
*                                                                     *
*                                                                     *
* ENTRY POINT = IGG0210A                                              *
*                                                                     *
*    LINKAGE = THIS ROUTINE RECEIVES CONTROL FROM THE                 *
*              FIRST LOAD OF STOW - IGC0002A.                         *
*                                                                     *
*    INPUT = THE FOLLOWING PARAMETERS ARE PASSED WHEN CONTROL IS      *
*            RECEIVED AS DESCRIBED ABOVE.                             *
*            REGISTER 10 - CONTAINS THE ADDRESS OF STOW'S WORK AREA.  *
*            REGISTER 11 - CONTAINS THE ADDRESS OF THE CALLER'S DCB.  *
*                                                                     *
*    OUTPUT = SAME REGISTERS AS INPUT.  FOR THE FUNCTIONS OF ADD OR   *
*             REPLACE WITHOUT THE ALAIS OPTION, THE BEGINNING RELATIVE*
*             ADDRESS (TTR) OF THE MEMBER ADDED OR REPLACED IS        *
*             RETURNED WITHIN THE TTR FIELD OF THE PARAMETER LIST     *
*             PASSED TO STOW.                                         *
*                                                                     *
*    EXITS-NORMAL = BRANCHES TO IGG021AB.                             *
*                                                                     *
*    EXITS-ERROR = RETURNS TO THE CALLER VIA A BR 14 WITH REASON CODE *
*                  REGISTER 0 AND RETURN CODE REGITSER 15 CONTAINING  *
*                  THE FOLLOWING:                                     *
*                  REG 0   REG 15              CONDITION              *
*                    2       16  - AN I/O ERROR OCCURED WHILE WRITING *
*                                  AN EOD MARKER AFTER THE MEMBER.    *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IECPRLTV - USED TO CONVERT AN ABSOLUTE DIRECT ACCESS  *
*               ADDRESS, MBBCCHHR, TO ITS RELATIVE EQUIVALENT, TTRN.  *
*                                                                     *
*               IECPCNVT - CONVERTS A RELATIVE DIRECT ACCESS ADDRESS  *
*               AND CONCATENATION NUMBER, TTRN, TO ITS ABSOLUTE       *
*               EQUIVALENT, MBBCCHHR.                                 *
*                                                                     *
*               MODESET - USED TO CHANGE THE STORAGE PROTECT KEY.     *
*                                                                     *
*               SETLOCK - USED TO OBTAIN AND RELEASE THE LOCAL LOCK.  *
*                                                                     *
*               DEBCHK - USED TO VERIFY THE CALLER'S DEB ADDRESS.     *
*                                                                     *
*               ABEND(SVC 13) - USED TO ABEND THE USER WITH A SYSTEM  *
*               COMPLETION CODE OF 115 IF DEBCHK IS NOT SUCCESSFUL.   *
*                                                                     *
*               EOV(SVC 55) - USED TO EXTEND THE DATA SET WHEN THE    *
*               CURRENT EXTENT DOES NOT CONTAIN SUFFICIENT SPACE TO   *
*               WRITE AN EOD MARKER.                                  *
*                                                                     *
*               EXCP(SVC 0) AND WAIT(SVC 1) - ARE USED TO PERFORM I/O *
*               OPERATIONS.                                           *
*                                                                     *
*               FREEMAIN(SVC 10) - IS USED TO FREE STOW'S WORK AREA   *
*               IN THE EVENT OF AN I/O ERROR.                         *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCKS = CVT,DCB,DEB,DVCT,ECB,IOB,PSA,SVRB,TCB           *
*                                                                     *
*                                                                     *
* TABLES = THIS MODULE USES THE STOW WORK AREA, THE FORMAT AND        *
*          CONTENTS OF WHICH ARE DESCRIBED IN THE DSECT AT THE END OF *
*          THE LISTING.                                               *
*                                                                     *
*                                                                     *
* MACROS = ACTION MACROS - MODESET,SETLOCK,ABEND,EOV,EXCP,WAIT,       *
*             FREEMAIN                                                *
*                                                                     *
*          MAPPING MACROS - CVT,DCBD,IEZDEB,IHADVCT,IHAPSA,IHARB,     *
*             IHASTOW,IKJTCB,IGGSTW                                   *
*                                                                     *
*                                                                     *
* CHANGE ACTIVITY = AS FOLLOWS:                                       *
*                                                                     *
*          RELEASE 21 DELETIONS                                       *
*    THIS MODULE WAS REWRITTEN FOR RELEASE 21.  THE FOLLOWING APARS   *
*    WERE CORRECTED.  28169, 33374, 35322, 42484, AND 43923.          *
*                                                                 M0965
*                                                               SA66881
*          VS1 RELEASE 01 DELETIONS                                   *
*                                                                XM5415
*          VS1 RELEASE 02 DELETIONS                                   *
*                                                                XM9034
*          VS1 RELEASE 03 DELETIONS                                   *
*                                                               XA02388
* SEE CODE FLAGGED SA66881 FOR APAR XA03384                     XA03384
*          VS1 RELEASE 04 DELETIONS
* SEE CODE FLAGGED YA06505 FOR APAR XA06889                     XA06889
*          VS2 RELEASE 01 DELETIONS                                   *
*D365000                                                         YM0943
*                                                               YA06505
*          VS2 RELEASE 02 DELETIONS                                   *
*D001500,005500,008200,138000-140000,260000,271000-273000,288000,Y02072
*D292000,294000,300000-302000,410000-411000,413000,421000-422000,Y02072
*D482000-483000,485000-486000,493000-669000                      Y02072
*                                                                YM5733
*          VS2 RELEASE 03 DELETIONS                                   *
*                                                              @Z30TSMI
*          VS2 RELEASE 04 DELETIONS
* SEE CODE FLAGGED YA06505 AND SA66881 FOR APAR ZA01548         ZA01548
*A364000-364500,365500,481006-481012                           @ZA12202
*                                                              @ZA12202
*C481006-481012                                                @ZA31380
*A254000-256800,270200                                         @ZA31380
*D298000                                                       @ZA31777
***********************************************************************
         EJECT
***********************************************************************
****                                                               ****
****     REGISTER EQUATES                                          ****
****                                                               ****
***********************************************************************
         SPACE
R0       EQU   0                        WORK/PARAMETER REGISTER
R1       EQU   1                        WORK/PARAMETER REGISTER
RDEB     EQU   R1                       DEB ADDRESS
R2       EQU   2                        WORK REGISTER
REXTNO   EQU   R2                       NUMBER OF DEB EXTENTS    Y02072
R3       EQU   3                        WORK REGISTER
RCVT     EQU   R3                       CVT ADDRESS
R4       EQU   4                        WORK REGISTER
RDEVTBL  EQU   R4                       ADDR OF DEVICE CHAR TABLE
R5       EQU   5                        WORK REGISTER
RVOLSEQ  EQU   R5                       USED TO SAVE DEBVOLSEQ   Y02072
RAREA    EQU   6                        POINTER TO WORK AREA
RDCB     EQU   7                        POINTER TO THE USER'S DCB
RBASE    EQU   8                        BASE REGISTER
R9       EQU   9                        WORK REGISTER
RWORK1   EQU   R9                       WORK REGISTER
RRETURN  EQU   RWORK1                   SUBROUTINE RETURN REG    Y02072
R10      EQU   10                       WORK/PARAMETER REGISTER
*                                       USED TO PASS WORK AREA BETWEEN
*                                       LOADS OF STOW
RWORK2   EQU   R10                      WORK REGISTER
R11      EQU   11                       WORK/PARAMETER REGISTER
*                                       USED TO PASS THE DCB BETWEEN
*                                       LOADS OF STOW
RWORK3   EQU   R11                      WORK REGISTER
R13      EQU   13                       WORK REGISTER
RWORK4   EQU   R13                      WORK REGISTER
R14      EQU   14                       LINK/WORK REGISTER
R15      EQU   15                       RETURN CODE /LINK /WORK REG
         EJECT
***********************************************************************
****                                                               ****
****     MASKS, DISPLACEMENTS, AND OTHER EQUATES                   ****
****                                                               ****
***********************************************************************
         SPACE
RCDZERO  EQU   X'00'                    USED TO SET TTR TO IND RECORD 0
RCDONE   EQU   X'01'                    USED TO SET TTR TO IND RECORD 1
IOERROR  EQU   X'10'                    I/O ERROR CODE
STOWABCD EQU   X'115'                   ABEND CODE FOR FOR A     Y02072
*                                       DEBCHK FAILURE IN STOW   Y02072
EODERROR EQU   2                        IND I/O ERROR ENCOUNTER- Y02072
*                                       ED WRITING EOD MARKER    Y02072
EXTLNGTH EQU   16                       LENGTH OF A DASD DEB EXTENT
EOV      EQU   55                       EOV SVC NUMBER
         EJECT
****
****     ESTABLISH ADDRESSABILITY
****
         BALR  RBASE,0                  INITIALIZE BASE REGISTER
         USING *,RBASE                  ESTABLISH ADDRESSABILITY
         LR    RAREA,R10                CHANGE WORK AREA BASE REGISTER
         LR    RDCB,R11                 CHANGE DCB BASE REGISTER
         USING STWAREA,RAREA            ESTABLISH WORK AREA BASE REG
         USING IHADCB,RDCB              ESTABLISH DCB BASE REGISTER
         L     RDEB,DCBDEBAD            GET ADDRESS USER'S DEB   Y02072
         USING DEBBASIC,RDEB            ESTABLISH DEB BASE REGISTER
         L     RCVT,CVTPTR              GET CVT ADDRESS
         USING CVT,RCVT                 ESTABLISH CVT BASE REGISTER
         SPACE 2
****
****     IF THE FUNCTION IS ADD OR REPLACE, DETERMINE IF AN END OF DATA
****     MARKER MUST BE WRITTEN AFTER THE ASSOCIATED MEMBER.
****
         TM    STWFLAG1,STWCHNG+STWDEL  IS FUNCT CHANGE OR DELETE
         BNZ   BLDCHPGM                 YES, GO TO BUILD CHANNEL PGM
         TM    STWCTTRN,STWALIAS        IS NEW ENTRY AN ALIAS
         BO    BLDCHPGM                 YES, GO TO BUILD CHANNEL PGM
         TM    DEBOPATB,DEBACCS-(DEBUPDAT+DEBRDBCK)  IS DATA SET OPEN
*                                       FOR INPUT, RDBACK, OR UPDATE
         BZ    RETRNTTR                 YES, GO TO RETURN TTR TO USER
         TM    STWFLAG1,STWDCBWR        WAS LAST OPERATION ON USER'S
*                                       DCB A WRITE
         BNO   RETRNTTR                 NO, GO TO RETURN TTR TO USER
         SPACE 2
****
****     CHECK THE VOLUME AND THE CURRENT TRACK TO DETERMINE IF SPACE
****     IS AVAILABLE TO WRITE THE EOD MARKER.
****
SPACECHK EQU   *
         L     RDEVTBL,DCBDVTBL         GET ADDR OF DEVICE CHAR TABLE
         USING DVCT,RDEVTBL             ESTABLISH DEVICE TABLE BASE REG
         SR    RWORK1,RWORK1            CLEAR REGISTER
         IC    RWORK1,DVCOVLB           GET OVERHEAD FOR KEYED RECORD
*                                       WHICH IS LAST ON TRACK
         TM    DVCFLAGS,DVC2BOV         USING TWO BYTE OVERHEAD
         BNO   NOT2BYT1                 NO, CONT SIZE CALCULATION
         LH    RWORK1,DVCOVHD           GET TWO BYTE OVERHEAD
         SPACE
NOT2BYT1 EQU   *
         SR    RWORK4,RWORK4            CLEAR REGISTER
         IC    RWORK4,DVCOVNK           OVERHEAD FOR RECORD KEY
         SR    RWORK1,RWORK4            SUBTRACT KEY OVERHEAD
         LA    RWORK1,1(,RWORK1)        OVERHEAD FOR KEY AND DATA
*                                       LENGTH OF ZERO
         CH    RWORK1,DCBTRBAL          WILL TRACK HOLD EOD RECORD
         BNH   UPTRKBAL                 YES, GO TO UPDATE TRACK BALANCE
         SPACE 2
***********************************************************************
****                                                               ****
****     THE FOLLOWING ROUTINE IS USED TO DETERMINE THE NEXT TRACK ****
****     ADDRESS.  THIS IS DONE BY ADDING 1 TO THE CURRENT TT AND  ****
****     SENDING THIS VALUE TO THE RESIDENT CONVERT ROUTINE.  IF   ****
****     THE NUMBER OF TRACKS IN THE DEB IS EXCEEDED, THE CONVERT  ****
****     ROUTINE WILL RETURN A CODE OF 4 IN REGISTER 15.  INPUT TO ****
****     AND OUTPUT FROM THE RESIDENT CONVERT ROUTINE IS AS        ****
****     FOLLOWS.                                                  ****
****                                                               ****
****     IECPRLTV - CONVERTS AN ABSOLUTE DIRECT ACCESS ADDRESS,    ****
****                MBBCCHHR, TO ITS RELATIVE EQUIVALENT, TTRN.    ****
****                                                               ****
****                INPUT REGISTERS -                              ****
****                  1  - ADDRESS OF DEB                          ****
****                  2  - ADDRESS OF MBBCCHHR IN CORE             ****
****                  14 - ENTRY ADDRESS                           ****
****                  15 - ENTRY ADDRESS                           ****
****                                                               ****
****                OUTPUT REGISTERS -                             ****
****                  0  - TTR0 RESULT                             ****
****                  1-8  TRANSPARENT                             ****
****                  9-13 DESTROYED                               ****
****                  14 - TRANSPARENT                             ****
****                  15 - ZERO                                    ****
****                                                               ****
****     IECPCNVT - CONVERTS A RELATIVE DIRECT ACCESS ADDRESS AND  ****
****                CONCATENATION NUMBER, TTRN, TO ITS ABSOLUTE    ****
****                EQUIVALENT, MBBCCHHR.                          ****
****                                                               ****
****                INPUT REGISTERS -                              ****
****                  0  - ACTUAL TTRN                             ****
****                  1  - ADDRESS OF DEB                          ****
****                  2  - ADDRESS OF 8 BYTE AREA FOR MBBCCHHR     ****
****                  14 - RETURN ADDRESS                          ****
****                  15 - ENTRY ADDRESS                           ****
****                                                               ****
****                OUTPUT REGISTERS -                             ****
****                  0  - DESTROYED                               ****
****                  1-8  TRANSPARENT                             ****
****                  9-13 DESTROYED                               ****
****                  14 - TRANSPARENT                             ****
****                  15 - ERROR CODE                              ****
****                                                               ****
****                THE ERROR CODE FOR IECPCNVT WILL BE 0 FOR      ****
****                SUCCESSFUL CONVERSION, OR 4 IF THE VALUE OF TT ****
****                EXCEEDS THE TOTAL EXTENTS ASSIGNED.            ****
****                                                               ****
***********************************************************************
         LA    R2,DCBFDAD               GET ADDRESS OF MBBCCHHR
         L     R15,CVTPRLTV             GET ENTRY PT IN CONVERT ROUTINE
*                                       TO CONVERT MBBCCHHR TO TTRN
         BALR  R14,R15                  GO TO CONVERT ROUTINE
         LR    RWORK1,R0                SAVE TTRN
         AL    R0,CON10000              CALC NEXT RELATIVE TRACK ADDR
         AH    RWORK1,CON00100          CALC NEXT RCD ON CURRENT TRACK
         CL    RWORK1,DCBRELAD          IS NEXT RECORD FIRST IN MEMBER
         BNE   CONVRTTR                 NO, GO TO CONVERT TTR
         LR    R5,R0                    SAVE TTRN + 1          @ZA31380
         L     R15,CVTPCNVT             ENTRY PT TO CNVRT RTN  @ZA31380
         BALR  R14,R15                  BR TO CNVT TTR-MBBCCHHR@ZA31380
         LTR   R15,R15                  TEST RC-EXCEED EXTENTS @ZA31380
*                                       IN THE DEB             @ZA31380
         BZ    STFIRST                  NO CONTINUE PROCESSING @ZA31380
         CLI   DEBNMEXT,X'10'           CHECK FOR 16 EXTENTS   @ZA31380
         BE    GOEOV                    YES- TO TO DEBCHK -EOV @ZA31380
STFIRST  EQU   *                                               @ZA31380
         ST    R5,DCBRELAD              SET DCBRELAD TO 1ST REC@ZA31380
         MVI   DCBRELAD+2,RCDONE        RECORD OF NEXT TRACK   @ZA31380
         MVC   STWTTR,DCBRELAD          UPDATE ENTRY TTR FIELD @ZA31380
         LTR   R15,R15                  EXCEED EXTENTS ?       @ZA31380
         BZ    SETRCD0                  NO, GO TO RESET REC NO @ZA31380
         B     GOEOV                    GO - DEBCHK - EOV      @ZA31380
         SPACE
CONVRTTR EQU   *
         L     R15,CVTPCNVT             GET ENTRY PT IN CONVERT ROUTINE
*                                       TO CONVERT TTR TO MBBCCHHR
         BALR  R14,R15                  GO TO CONVERT ROUTINE
         LTR   R15,R15                  DOES IT EXCEED EXTENTS IN DEB
         BZ    SETRCD0                  NO, GO TO RESET RECORD NUMBER
*                                       AND TRACK BALANCE
         SPACE 2
****
****     GO TO EOV TO GET SPACE FOR THE EOD MARKER.
****
GOEOV    EQU   *                                               @ZA31380
         BAL   RRETURN,CHECKDEB         BR TO DEB CHECK ROUTINE  Y02072
*                                       UPON RETURN, REG 1 WILL  Y02072
*                                       CONTAIN VERIF'D DEB ADDR Y02072
         SR    REXTNO,REXTNO            CLEAR REGISTER           Y02072
         IC    REXTNO,DEBNMEXT          GET NO. EXTENTS IN DEB   Y02072
         SLL   REXTNO,4                 MULTIPLY EXTENTS BY 16   Y02072
         LA    RWORK1,DEBBASND(REXTNO)  POINT TO ACCESS METHOD   Y02072
*                                       SECTION OF THE USER'S DEB
         USING DEBACSMD,RWORK1          EST ACCESS METHOD SECTION BASE
         L     RVOLSEQ,DEBVOLSQ         SAVE DEBVOLSQ CONTENTS   Y02072
         MVC   DEBVOLSQ,VOLSEQNO        SET CURRENT AND TOTAL NUMBER
*                                       OF VOLUMES TO ONE FOR EXCP
         DROP  RWORK1                   DROP ACCESS METHOD SECTION BASE
         BAL   RRETURN,FREELOCK         BR TO FREE LOCAL LOCK    Y02072
*                                       AND RTRN TO CALLER'S KEY Y02072
         LH    RWORK1,DCBMACRF          SAVE USER'S ACCESS METHOD FLAGS
         MVI   DCBMACF1,DCBMRECP+DCBMRABC IND EXCP & ACCURATE BLCK CNT
         MVI   DCBMACF2,0               CLEAR SECOND BYTE
         DROP  RDEB                     DROP DEB BASIC SECT BASE Y02072
         EOV   (RDCB)                   ISSUE EOV SVC            Y02072
         TM    DCBCIND2,DCBCNCLO        DID CLOSE ISSUE STOW     XM9034
         BNO   NOTCLOSE                 CONTINUE IF NOT          XM9034
         OI    DCBOFLGS,DCBOFIOF        RESET DCB BUSY BIT       XM9034
         SPACE
NOTCLOSE EQU   *                                                 XM9034
         STH   RWORK1,DCBMACRF          RESTORE USER'S FLAGS
         L     RDEB,DCBDEBAD            GET ADDR OF THE CALLER'S Y02072
*                                       NEW DEB                  Y02072
         USING DEBBASIC,RDEB            EST BASE FOR DEB BASIC SECTION
         BAL   RRETURN,CHECKDEB         BR TO DEB CHECK ROUTINE  Y02072
*                                       UPON RETURN, REG 1 WILL  Y02072
*                                       CONTAIN VERIF'D DEB ADDR Y02072
         TM    DCBCIND2,DCBCNCLO        DID CLOSE ISSUE STOW    XA02388
         BNO   NOTCLOS2                 CONTINUE IF NOT         XA02388
         OI    DEBFLGS1,DEBF1CEV        IND EOV ISSUED DURING   XA02388
*                                       CLOSE                   XA02388
         SPACE
NOTCLOS2 EQU   *                                                XA02388
         LA    RWORK2,DEBBASND(REXTNO)  POINT TO THE NEW EXTENT  Y02072
*                                       IN THE CALLER'S DEB      Y02072
         USING DEBACSMD-EXTLNGTH,RWORK2 EST DEB ACCESS METHOD    Y02072
*                                       SECTION BASE REGISTER    Y02072
         DROP  RWORK2                   DROP DEB ACCESS METHOD   Y02072
*                                       SECTION BASE REGISTER    Y02072
         BAL   RRETURN,FREELOCK         BR TO FREE LOCAL LOCK    Y02072
*                                       AND RTRN TO CALLER'S KEY Y02072
         USING DEBDASD,RWORK2           EST DEB DASD SECTION     Y02072
*                                       BASE REGISTER            Y02072
         SRL   REXTNO,4                 CALCULATE EXTENT NUMBER  Y02072
         STC   REXTNO,DCBFDAD           UPDATE EXTENT NO.IN DCB  Y02072
         MVC   DCBFDAD+1(L'DCBFDAD-2),DEBBINUM  UPDATE BIN, CYLINDER,
*                                       AND HEAD NUMBERS IN DCB
         DROP  RWORK2                   DROP DASD SECTION BASE   Y02072
         SPACE 2
****
****     SINCE THE NEXT RECORD WILL BE WRITTEN ON A NEW TRACK, THE
****     DCBFDAD FIELD MUST BE UPDATED TO INDICATE RECORD 0 OF THE NEW
****     TRACK, AND DCBTRBAL MUST BE RESET TO MAXIMUM TRACK CAPACITY.
****
SETRCD0  EQU   *
         MVI   DCBFDAD+7,RCDZERO        SET RECORD TO ZERO
         MVC   DCBTRBAL,DVCTRKLN        SET TRACK BALANCE TO MAX.
         SPACE 2
****
****     CALCULATE AMOUNT OF TRACK WHICH WILL BE USED TO WRITE THE EOD
****     MARKER AND UPDATE THE DCBTRBAL FIELD.
****
UPTRKBAL EQU   *
         SR    RWORK4,RWORK4            CLEAR REGISTER
         IC    RWORK4,DVCOVNLB          GET OVERHEAD FOR KEYED RECORD
*                                       WHICH IS NOT LAST ON TRACK
         TM    DVCFLAGS,DVC2BOV         USING TWO BYTE OVERHEAD
         BNO   NOT2BYT2                 NO, CONTINUE OVERHEAD CALC
         LH    RWORK4,DVCOVHD           GET TWO BYTE OVERHEAD
         SPACE
NOT2BYT2 EQU   *
         LA    RWORK4,1(,RWORK4)        OVERHEAD FOR KEY AND DATA
*                                       LENGTH OF ZERO
         SR    RWORK1,RWORK1            CLEAR REGISTER
         IC    RWORK1,DVCOVNK           GET OVERHEAD FOR RECORD KEY
         SR    RWORK4,RWORK1            SUBTRACT KEY OVERHEAD
         LH    RWORK1,DCBTRBAL          GET CURRENT TRACK BALANCE
         SR    RWORK1,RWORK4            CALCULATE NEW BALANCE
         STH   RWORK1,DCBTRBAL          UPDATE DCBTRBAL FIELD
         SPACE 2
****
****     UPDATE DCBFDAD FIELD TO POINT TO END OF DATA MARKER.
****
         MVC   IOBSEEK,DCBFDAD          PUT NEW MBBCCHHR IN IOB
         SR    RWORK1,RWORK1            CLEAR REGISTER
         IC    RWORK1,DCBFDAD+7         GET RECORD NUMBER
         LA    RWORK1,1(,RWORK1)        UPDATE RECORD NUMBER BY ONE
         STC   RWORK1,DCBFDAD+7         UPDATE DCBFDAD FIELD
         SPACE 2
****
****     BUILD AND EXECUTE THE CHANNEL PROGRAM TO WRITE THE EOD MARKER.
****
         LM    R9,R14,EODCHPGM          GET SKELETON CHANNEL PROGRAM
         AR    R9,RAREA                 ESTABLISH SEARCH ADDRESS
         AR    R11,RAREA                ESTABLISH TIC ADDRESS
         AR    R13,RAREA                ESTABLISH BUFFER ADDRESS
         STM   R9,R14,STWWRDCP          CREATE CHANNEL PGM IN WORK AREA
         ST    R11,IOBSTART             PUT CHANNEL PGM ADDRESS IN IOB
         USING BUFFER,R13               ESTABLISH BUFFER BASE REGISTER
         MVC   BUFCCHHR,DCBFDAD+3       MOVE CCHHR TO BUFFER COUNT FLD
         XC    BUFKDD,BUFKDD            SET KEY AND DATA LENGTH TO ZERO
         DROP  RDEB                     DROP DEB BASE REIGISTER
         IC    RWORK1,IOBCSW+3          SAVE HI-ORDER BYTE OF    M0965
*                                       CSW STATUS FIELD         M0965
         EXCP  IOBSTDRD                 EXECUTE CHANNEL PROGRAM
         TM    ECBCC,ECBPOST            DID ECB GET POSTED?    @ZA12202
         BO    BYWAIT                   BYPASS WAITING ON ECB  @ZA12202
         WAIT  ECB=ECBCC                WAIT FOR I/O TO COMPLETE
BYWAIT   EQU   *                        ECB HAS BEEN POSTED    @ZA12202
         TM    ECBCC,ECBNORM            DID I/O COMPLETE NORMALLY
         BNO   ERROR                    NO, RETURN TO THE USER
         STC   RWORK1,IOBCSW+3          RESTORE HI-ORDER BYTE OF M0965
*                                       CSW STATUS FIELD         M0965
         SPACE 2
****
****     UPDATE THE DCBRELAD FIELD FOR NEXT MEMBER TO BE WRITTEN.
****
         L     RDEB,DCBDEBAD            RESTORE DEB ADDRESS      Y02072
         USING DEBBASIC,RDEB            ESTABLISH DEB BASE REGISTER
         LA    R2,DCBFDAD               GET ADDRESS OF MBBCCHHR
         L     R15,CVTPRLTV             GET ENTRY PT IN CONVERT ROUTINE
*                                       TO CONVERT MBBCCHHR TO TTRN
         BALR  R14,R15                  GO TO CONVERT ROUTINE
         AH    R0,CON00100              UPDATE TTRN TO NEXT RECORD
         ST    R0,DCBRELAD              UPDATE DCBRELAD FIELD
         SPACE 2
****
****     RESTORE THE EXTENT NUMBER IN THE IOBSEEK FIELD TO REFLECT THE
****     FIRST EXTENT OF THE DATA SET.
****
         MVI   IOBM,0                   INDICATE FIRST EXTENT
         SPACE 2
****
****     IF THE FUNCTION IS ADD OR REPLACE AND THE MEMBER IS NOT AN
****     ALAIS, RETURN THE TTR OF THE MEMBER TO THE USER.
****
RETRNTTR EQU   *
         L     RWORK1,STWPARM           GET ADDR OF USER'S PARM AREA
         USING STOW,RWORK1              ESTABLISH BASE FOR USER'S AREA
         MVC   STOTTR,STWTTR            RETURN TTR TO USER
         DROP  RWORK1                   DROP BASE FOR USER'S PARM AREA
         SPACE 2
****
****     CREATE THE WRITE/READ CHANNEL PROGRAM USED BY THE THIRD LOAD
****     AND BRANCH TO THE THIRD LOAD TO PROCESS THE USER'S REQUEST.
****
BLDCHPGM EQU   *
         DROP  RDEB                     DROP DEB BASE REGISTER
         LM    R9,R2,WRDCHPGM           GET SKELETON OF THE WRITE/READ
*                                       CHANNEL PROGRAM
         AR    R11,RAREA                ESTABLISH TIC ADDRESS
         STM   R9,R2,STWWRDCP           CREATE WRITE/READ CHANNEL
*                                       PROGRAM IN STOW'S WORK AREA
         MVC   STWRCKD4(STWRCKD4-STWRCKD3),WRDRCKD3 SET UP 3RD  YA06505
*                                       RCKD WHICH WILL READ IN YA06505
*                                       2ND DIRECTORY BLK       YA06505
         LR    R10,RAREA                RESTORE WORK AREA REGISTER
         LR    R11,RDCB                 RESTORE DCB REGISTER
*
         L     R15,V21AB                ADDRESS OF NEXT LOAD   @Z30TSMI
         BR    R15                      BRANCH TO NEXT LOAD    @Z30TSMI
         SPACE 2
****
****     FREE THE GOTTEN CORE, PUT THE REASON CODE IN REGISTER 0, THE
****     RETURN CODE IN REGISTER 15, AND RETURN TO THE CALLER.
****
ERROR    EQU   *
         FREEMAIN R,LV=CORESIZE,A=(RAREA),SP=229  FREE CORE      Y02072
         NI    DCBIFLGS,X'FF'-DCBIFEC   TURN OFF ERROR FLAGS     Y02072
         LA    R0,EODERROR              GET REASON CODE          Y02072
         LA    R15,IOERROR              IND AN I/O ERROR OCCURED YM0943
         USING PSA,0                    ESTABLISH PSA BASE REG   Y02072
         L     RWORK1,PSATOLD           GET ADDR OF CURRENT TCB  Y02072
         USING TCB,RWORK1               ESTABLISH TCB BASE REG   Y02072
         L     RWORK1,TCBRBP            GET SVRB ADDRESS         Y02072
         USING RBSECT,RWORK1            EST SVRB BASE REG        Y02072
         L     R14,XSAREG14             RESTORE RETURN REGISTER  Y02072
         DROP  RWORK1                   DROP SVRB BASE REG       Y02072
         SPACE 2
****
****     MODESET TO KEY 0 AND RETURN TO THE CALLER.
****
         MODESET EXTKEY=SUPR            MODESET TO KEY 0         Y02072
         BR    R14                      RETURN TO THE CALLER     Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SUBROUTINE MODESETS TO KEY 0, OBTAINS THE LOCAL      ****
****     LOCK, AND USES THE BRANCH ENTRY TO THE DEB CHECK ROUTINE  ****
****     TO VERIFY THE DEB ADDRESS OBTAINED FROM THE CALLER'S DCB. ****
****     IF THE DEB CHECK IS NOT SUCCESSFUL A SYSTEM 115 ABEND     ****
****     WILL BE ISSUED.  OTHERWISE, CONTROL IS RETURNED TO THE    ****
****     CALLING ROUTINE.                                          ****
****                                                               ****
****     INPUT REGISTERS -                                         ****
****          1       - ADDRESS OF THE DEB TO BE VERIFIED          ****
****          RRETURN - RETURN ADDRESS TO THE CALLER               ****
****          RCVT    - ADDRESS OF THE CVT                         ****
****                                                               ****
****     OUTPUT REGISTERS -                                        ****
****          0,2-9 - UNCHANGED                                    ****
****          1     - ADDRESS OF THE VERIFIED DEB                  ****
****          10-15 - DESTROYED                                    ****
****                                                               ****
***********************************************************************
CHECKDEB EQU   *                                                 Y02072
         MODESET EXTKEY=SUPR            MODESET TO KEY 0         Y02072
GETLOCK  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02072X
               RELATED=(DEB,IGG0210A,FREELOCK)                   Y02072
         L     R10,CVTTCBP              GET ADDR OF TCB PTRS     Y02072
         L     R10,4(,R10)              GET ADDR OF CURRENT TCB  Y02072
         L     R15,CVTEXT2              GET ADDR OF CVT EXT 2    Y02072
         USING CVTXTNT2,R15             EST CVT EXT 2 BASE REG   Y02072
         L     R15,CVTDEBVR             GET ADDR OF DEB CHECK    Y02072
         DROP  R15                      DROP CVT EXT 2 BASE REG  Y02072
         LA    RDEB,0(,RDEB)            CLEAR HI-ORDER BYTE      YM5733
         BALR  R14,R15                  GO TO DEB CHECK ROUTINE  Y02072
         BR    RRETURN                  RETURN IF DEB CHECK WAS  Y02072
         NOPR  0                        SUCCESSFUL               Y02072
         BAL   RRETURN,FREELOCK         BR TO FREE LOCAL LOCK    Y02072
         ABEND STOWABCD,,,SYSTEM        ABEND IF DEB CHECK WAS   Y02072X
                                        NOT SUCCESSFUL           Y02072
         SPACE 2
***********************************************************************
****                                                               ****
****     THIS SUBROUTINE FREES THE LOCAL LOCK AND MODESETS BACK    ****
****     TO THE KEY OF THE CALLER.                                 ****
****                                                               ****
****     INPUT REGISTERS -                                         ****
****          RCVT    - ADDRESS OF THE CVT                         ****
****          RRETURN - RETURN ADDRESS TO THE CALLER               ****
****                                                               ****
****     OUTPUT REGISTERS -                                        ****
****          0-9,15 - UNCHANGED                                   ****
****          11-14  - DESTROYED                                   ****
****                                                               ****
***********************************************************************
FREELOCK SETLOCK RELEASE,TYPE=LOCAL,                             Y02072X
               RELATED=(DEB,IGG0210A,GETLOCK)                    Y02072
         L     RWORK3,CVTTCBP           GET ADDR OF TCB PTRS     Y02072
         L     RWORK3,4(,RWORK3)        GET ADDR OF CURRENT TCB  Y02072
         USING TCB,RWORK3               ESTABLISH TCB BASE REG   Y02072
         MODESET EXTKEY=RBT234,WORKREG=12                        Y02072
         BR    RRETURN                  RETURN TO CALLING RTN    Y02072
         DROP  RWORK3                   DROP TCB BASE REGISTER   Y02072
         EJECT
***********************************************************************
****                                                               ****
****     SKELETON CHANNEL PROGRAMS                                 ****
****                                                               ****
***********************************************************************
         SPACE
WRDCHPGM DS    0F                       THIS CHANNEL PROGRAM IS
*                                       USED BY IGG021AB FOR WRITING
*                                       AND READING DIRECTORY BLOCKS
WRDSRHID DC    X'31'                    SEARCH ID EQUAL
         DC    AL3(0)                   POINTER TO SEARCH ARGUMENT
         DC    X'4000'                  COMMAND CHAINING
         DC    X'0005'                  NUMBER OF BYTES
WRDTIC   DC    X'08'                    TRANSFER CONTROL TO SEARCH ID
         DC    AL3(STWSRCH2-STWAREA)    ADDRESS OF SEARCH ID
         DC    XL4'00'                  NOT USED BUT REQUIRED
WRDWRCKD DC    X'0D'                    WRITE KEY AND DATA
         DC    AL3(0)                   ADDRESS OF KEY AND DATA
         DC    X'5000'                  COMMAND CHAIN AND SUPPRESS DATA
*                                       TRANSFER WHEN CCW IS CHANGED
*                                       TO A WRITE
         DC    X'0108'                  NO. OF BYTES TO BE TRANSFERED
WRDRCKD1 DC    X'9E'                    READ COUNT, KEY, AND DATA
         DC    AL3(STWBUF3-STWAREA)     ADDR OF COUNT, KEY, AND DATA
         DC    X'5000'                  SUPRESS DATA TRANSFER
         DC    X'0110'                  NO. OF BYTES TO BE TRANSFERED
WRDRCKD2 DC    X'9E'                    READ COUNT, KEY, AND DATA
         DC    AL3(STWBUF3-STWAREA)     ADDR OF COUNT, KEY, AND DATA
         DC    X'0000'                  FLAGS
         DC    X'0110'                  NO. OF BYTES TO BE TRANSFERED
WRDRCKD3 DC    X'9E'                    READ COUNT, KEY, DATA   YA06505
         DC    AL3(0)                   BUFFER ADDR TO READ CKD YA06505
         DC    X'0000'                  FLAGS                   YA06505
         DC    X'0110'                  NO. OF BYTES TRANSFERED YA06505
         SPACE 2
EODCHPGM DS    0F                       THIS CHANNEL PROGRAM IS USED TO
*                                       WRITE THE EOD MARKER FOLLOWING
*                                       A MEMBER
EODSRHID DC    X'31'                    SEARCH ID EQUAL
         DC    AL3(IOBSEEK+3-STWAREA)   POINTER TO SEARCH ARGUMENT
         DC    X'4000'                  COMMAND CHAINING
         DC    X'0005'                  NUMBER OF BYTES
EODTIC   DC    X'08'                    TRANSFER CONTROL TO SEARCH ID
         DC    AL3(STWSRCH2-STWAREA)    ADDRESS OF SEARCH ID
         DC    XL4'00'                  NOT USED BUT REQUIRED
EODWRCKD DC    X'1D'                    WRITE COUNT, KEY, AND DATA
         DC    AL3(STWBUF3-STWAREA)     ADDRESS OF COUNT FIELD
         DC    X'0000'                  FLAGS
         DC    X'0008'                  NO. OF BYTES TO BE TRANSFERED
         EJECT
***********************************************************************
****                                                               ****
****     CONSTANTS                                                 ****
****                                                               ****
***********************************************************************
         SPACE
CON10000 DC    F'65536'                 USED TO ADD 1 TO REL TRACK NO.
CON00100 DC    H'256'                   USED TO ADD 1 TO REL RECORD NO.
V21AB    DC    V(IGG021AB)              ADDRESS OF NEXT LOAD   @Z30TSMI
VOLSEQNO DC    X'00010001'              USED TO SET CURRENT AND TOTAL
*                                       NUMBER OF VOLUMES TO ONE
         DC    CL8'@ZA31380'            LATEST FLAG            @ZA31380
         DC    CL8'&SYSDATE'            LATEST DATE            @ZA31380
PATCH    DC    0XL50'0',C'IGG0210A',42X'0'  50 BYTE PATCH AREA   Y02072
         EJECT
***********************************************************************
****                                                               ****
****     CONTROL BLOCK DEFINITIONS                                 ****
****                                                               ****
***********************************************************************
         SPACE
         CVT   DSECT=YES                                         Y02072
         EJECT
         DCBD  DSORG=PO
         EJECT
         IEZDEB
*
*        THE FOLLOWING ARE EQUATES TO BE USED IN THE DEBOPATB
*        FIELD.  THEY WILL BE REMOVED WHEN THE DEB DSECT IS
*        UPDATED TO INCLUDE THEM.
*
DEBRDBCK EQU   X'01'                    READ BACKWARDS FLAG
DEBUPDAT EQU   X'04'                    UPDATE FLAG
         EJECT
         IHADVCT
         EJECT
         IHAPSA                                                  Y02072
         EJECT
         IHARB                                                   Y02072
         EJECT
         IHASTOW
         EJECT
         IKJTCB                                                  Y02072
         EJECT
         IGGSTW                                                  Y02072
         END
