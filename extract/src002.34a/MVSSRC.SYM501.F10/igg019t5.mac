19T5     TITLE 'IGG019T5 - TS BSAM READ/WRITE ROUTINE'          SA66590
IGG019T5 CSECT
***********************************************************************
*                                                                     *
* RELEASE 21.8 CHANGES                                                *
*A474500,525500-527920,810500                                   SA66590
*C003000,110000,014170                                          SA66590
*D242000,242500,663520-663640                                   SA69503
*A261500-263920,663580-663791                                   SA69503
* RELEASE 21 DELETIONS/CHANGES                                        *
*1395252000,471000-477000,684000,702000-705000,793000-797000     A42898
*                                                                     *
*                                                                M3038
*0000                                                            TS1616
* RELEASE 037 CHANGES                                            M1565
*C657000,769000                                               @ZA25486
*                                                                M5422
*                                                                M6374
* STATUS CHANGE LEVEL 002                                       SA66590
*                                                                     *
* NAME - IGG019T5 (TS READ/WRITE)                                     *
*                                                                     *
* FUNCTION/OPERATION - THIS INTERFACE ROUTINE PERFORMS THE FOLLOWING  *
*                      FUNCTIONS                                      *
*                                                                     *
*                      PREPARE PARAMETERS FOR TGET/TPUT, AND ISSUE    *
*                      TGET/TPUT MACROS WHICH CAUSE AN EDITED         *
*                      (SPECIALLY-INDICATED CHARACTERS ARE OMITTED)   *
*                      BLOCK OF TEXT TO BE TRANSMITTED TO THE         *
*                      BUFFRR (TGET) OR TO BE WRITTEN OUT TO THE      *
*                      TERMINAL (TPUT).                               *
*                                                                     *
*                      UPON REGAIN CONTROL FROM TGET/TPUT SET EDB     *
*                      COMPLETION CODE TO X'7F'. WHEN END OF FILE IS  *
*                      REACHED FOR READ, SET ECB COMPLETION CODE TO   *
*                      X'41'.                                         *
*                                                                     *
* ENTRY POINT - IGG019T7, BEGINNING OF MODULE. CONTROL IS RECEIVED    *
*               WHEN THE FOLLOWING CONDITIONS ARE MET.                *
*                                                                     *
*               THE TASK IS TIME SHARING.                             *
*               THE DCB OPENED IS FOR BSAM INOUT,OUTIN, OR UPDAT.     *
*               A READ OR A WRITE MACRO INSTRUCTION IS ISSUED.        *
*                                                                     *
* INPUT - DECB NAME, TYPE (IGNORED) DCB ADDRESS, BUFFER ADDRESS, 'S'  *
*         OR LENGTH OF DATA.                                          *
*                                                                     *
* OUTPUT - AN EDITED (SPECIALLY-INDICATED CHARACTERS ARE OMITTED)     *
*          BLOCK OF TEXT, EITHER MOVED TO THE BUFFER (FOR READ), OR   *
*          WRITTEN TO THE TERMINAL (FOR WRITE).                       *
*                                                                     *
* EXTERNAL REFERENCE - IGC0009C.                                      *
*                                                                     *
* EXIT, NORMAL - RETURN CONTROL TO CALLER VIA 'BR 14' INSTRUCTION.    *
*                                                                     *
* EXIT, ERROR - ABEND 002 IF VARIABLE-LENGTH RECORD TOO SHORT   SA66590
*                                                                     *
* TABLE/WORK AREA - NONE.                                             *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSABLE.                                   *
*                                                                     *
* CHARACTER DEPENDENCY -                                              *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
***********************************************************************
         SPACE 3
********
******** REGISTER EQUATES
********
R0       EQU   0                        CONTAINS BFR SIZE FOR TGET/TPUT
RSW      EQU   0                        SWITCH FOR FOLDING CHARS
R1       EQU   1                        POINTS AT DECB WHEN THIS
*                                       ROUTINE GETS CONTROL, CONTAINS
*                                       BUFR ADDR FOR TPUT
RDCB     EQU   2                        POINTS AT DCB
RDECB    EQU   3                        POINTS AT DECB
RECB     EQU   4                        POINTS AT ECB
RBUFAD   EQU   5                        POINTS AT BFR ADDR
RBUFSZ   EQU   6                        CONTAINS BFR SIZE
RDEB     EQU   8                        POINTS AT DEB
RPTR     EQU   9                        POINTS AT BFR FOR FOLDING MSG
RWORK    EQU   10                       WORK REGISTER
RENDMSG  EQU   11                       POINTS AT END OF MSG
R12      EQU   12                       REGISTER 12
RBASE    EQU   12                       BASE REGISTER
R13      EQU   13                       POINTS AT CALLER'S SAVE AREA
R14      EQU   14                       POINTS AT RETURN ADDR
R15      EQU   15                       POINTS AT ADDR TO BRANCH TO
RRETURN  EQU   15                       CONTAINS RETURN CODES
         SPACE 3
********
******** EQUATES FOR DISPLACEMENTS, LENGTH, AND MASKS
********
C3       EQU   3                        CONSTANT OF 3
C15      EQU   15                       CONSTANT OF 15
M01      EQU   X'01'                    MASK USED TO TEST EOD RTN ADDR
M0C      EQU   X'0C'                    DENOTES CHANNEL END DEVICE END
ZERO     EQU   X'00'                    CONSTANT 0
MC0      EQU   X'C0'                    U-TYPE RECORD IN DCBRECFM
M80      EQU   X'80'                    READ SF IN DECTYPE+1
*                                       'S' CODED FOR LENGTH IN DECTYPE
*                                       WRITE OPERATION IN DCBOFLGS
*                                       F-TYPE RECORD IN DCBRECFM
M7F      EQU   X'7F'                    READ OPERATION IN DCBOFLGS
*                                       COMPLETION BIT IN ECB
M41      EQU   X'41'                    DENOTES ECB COMPLETE WITH I/O
*                                       ERROR (EOD)
M40      EQU   X'40'                    V-TYPE RECORD IN DCBRECFM
M06      EQU   X'06'                    ASA/MACHINE CHAR USED IN
*                                       DCBRECFM
MBF      EQU   X'BF'                    USED TO TURN OFF READ BACKWARD
*                                       IN DCBOFLGS
MFE      EQU   X'FE'                    MASK TO ZERO OUT RESIDUAL CT
M8       EQU   8                        USED TO SHIFT REGISTER
EOF      EQU   X'20'                    END OF FILE
D0       EQU   0                        DISPLACEMENT OF 0
D1       EQU   1                        DISPLACEMENT OF 1
D2       EQU   2                        DISPLACEMENT OF 2
D8       EQU   8                        DISPLACEMENT OF 8        A42898
D12      EQU   12                       DISPLACEMENT OF 12
D20      EQU   20                       DISPLACEMENT OF 20
L2       EQU   2                        LENGTH OF 2
*****
*****    MASKS FOR ISOLATING LOWERCASE ALPHA FOR FOLD TO UPPERCASE
*****
M81      EQU   X'81'                    LOWERCASE A             SA69503
MA9      EQU   X'A9'                    LOWERCASE Z             SA69503
M89      EQU   X'89'                    LOWERCASE I             SA69503
M90      EQU   X'90'                    SPECIAL CHAR            SA69503
M99      EQU   X'99'                    LOWERCASE R             SA69503
MA1      EQU   X'A1'                    SPECIAL CHAR            SA69503
UPPER    EQU   X'40'                    USED TO FOLD MSG        SA69503
         SPACE 3
         SPACE 3
********
******** SAVE REGISTERS AND ESTABLISH ADDRESSABILITY
********
         STM   R14,R12,D12(R13)         SAVE REGISTERS
         LR    RBASE,R15                USE ENTRY ADDR AS BASE ADDR
         USING IGG019T5,RBASE           ESTABLISH ADDRESSABILITY
         USING IHADCB,RDCB              ESTABLISH ADDRESSABILITY
         USING DECB,RDECB               ESTABLISH ADDRESSABILITY
         USING DEB,RDEB                 ESTABLISH ADDRESSABILITY
         SPACE 3
********
******** INITIALIZATION AND GET BUFFER ADDRESS
********
         LR    RDECB,R1                 SAVE DECB ADDRESS
         L     RDCB,DECDCBAD            GET DCB ADDRESS
         LA    RECB,DECSDECB            GET ADDR OF ECB
         L     RBUFAD,DECAREA           GET BUFFER ADDRESS
         L     RDEB,DCBDEBAD            GET DEB ADDRESS
         TM    DECTYPE+1,M80            IS IT A READ OPERATION
         BNO   CONTINUE                 BRANCH IF NOT
         TM    DCBCIND1,EOF             IS EOF REACHED
         BO    RETURN                   RETURN CONTROL TO CALLER
CONTINUE EQU   *
         MVI   D0(RECB),M80             SET ECB WAIT BIT
         LA    RWORK,DCBIOBL            PUT DUMMY IOB ADDR IN REG
         ST    RWORK,DECIOBPT           PUT DUMMY IOB ADDR IN DECB
         SPACE 3
********
******** TEST RECORD TYPE AND GET BUFFER SIZE
********
         TM    DCBRECFM,MC0             CHECK FOR U-TYPE RECORD
         BNO   TESTMORE                 NO, GO TO TESTMORE
UTYPE    EQU   *
         TM    DECTYPE,M80              IS 'S' SPECIFIED
         BO    LNGINDCB                 YES, GET LENGTH FROM DCBBLKSI
LNGNDECB EQU   *
         LH    RBUFSZ,DECLNGTH          GET BUFFER SIZE
         N     RBUFSZ,ZEROHALF          CLEAR HIGH ORDER 2 BYTES
         B     CKOP                     GO TO CHECK OPERATION IS FOR
*                                       READ OR FOR WRITE
LNGINDCB EQU   *
         LH    RBUFSZ,DCBBLKSI          GET BUFFER SIZE FROM DCB
         B     CKOP                     GO TO CHECK OPERATION IS FOR
*                                       READ OR FOR WRITE
TESTMORE EQU   *
         TM    DCBRECFM,M40             CHECK FOR V-TYPE RECORD
         BZ    LNGINDCB                 NO, LENGTH IS IN DCBBLKSI
VTYPE    EQU   *
         TM    DECTYPE+1,M80            IS IT A READ OPERATION
         BO    READOP                   YES, GO TO READOP
WRITEOP  EQU   *
         SR    RBUFSZ,RBUFSZ            CLEAR REGISTER
         IC    RBUFSZ,D0(RBUFAD)        GET 1 L FROM RECORD DESCRIPTOR
*                                       WORD
         SLL   RBUFSZ,M8                PUT 1ST L IN PLACE
         IC    RBUFSZ,D1(RBUFAD)        GET OTHER L FROM RECORD
*                                       DESCRIPTOR WORD
         B     MINUS4                   GO TO SUBTRACT LENGTH OF RECORD
*                                       DESCRIPTOR WORD
READOP   EQU   *
         LH    RBUFSZ,DCBBLKSI          GET BUFFER SIZE FROM DCB
MINUS4   EQU   *
         SH    RBUFSZ,EIGHT             TAKE OFF LNG FOR BLK AND A42898
*                                       RECORD DESCRIPTOR WORDS
         BM    ABEND                    ABEND IF NEGATIVE       SA66590
         LA    RBUFAD,D8(RBUFAD)        MOVE UP PTR              A42898
         SPACE 3
********
******** TEST FOR READ OR WRITE AND ISSUE TGET OR TPUT ACCORDINGLY
********
CKOP     EQU   *
         TM    DECTYPE+1,M80            IS IT A READ OPERATION
         BO    READ                     YES, GO TO READ
WRITE    EQU   *
         SPACE 3
********
******** TEST FOR ASA OR MACHINE CHARACTER
********
         TM    DCBRECFM,M06             TEST FOR ASA OR MACHINE CHAR
         BZ    LDPARMP                  NO, GO TO LOAD PARM FOR TPUT
         LA    RBUFAD,D1(RBUFAD)        MOVE UP PTR TO BUFFER ADDR
         BCTR  RBUFSZ,R0                DECREMENT BUFFER SIZE BY 1
         LTR   RBUFSZ,RBUFSZ            CHECK FOR NEGATIVE      SA66590
         BNM   LDPARMP                  O.K., PUT IT OUT        SA66590
         SPACE 3                                                SA66590
********
******** ABEND THE USER - RECORD IS TOO SHORT TO PUT OUT        SA66590
********
ABEND    EQU   *                                                SA66590
         L     1,ABENDCOD               DUMP/STEP AND COMP CODE SA66590
         ABEND (1)                      ISSUE ABEND SVC         SA66590
         SPACE 3
********
******** PREPARE PARAMETER AND ISSUE TPUT
********
LDPARMP  EQU   *
         LR    R0,RBUFSZ                LOAD BFR SIZE
         LR    R1,RBUFAD                LOAD BFR ADDRESS
         SPACE 3
         TPUT  (1),(0)                  ISSUE TPUT
         SPACE 3
********
******** UPON RETURN FROM TPUT
********
PSUCCESS EQU   *
         OI    DCBOFLGS,M80             TURN ON WRITE BIT
         SPACE 3
********
******** RESTORE REGISTERS AND RETURN
********
RETURN   EQU   *
         MVI   D0(RECB),M7F             SET ECB COMPLETION BIT
RESTORE  EQU   *
         L     R14,D12(R13)             RESTORE REG 14
         LM    R0,R12,D20(R13)          RESTORE REG 0 - 12
         BR    R14                      RETURN CONTROL TO USER
         SPACE 3
********
******** PREPARE PARAMETERS AND ISSUE TGET
********
READ     EQU   *
         LR    R0,RBUFSZ                LOAD BFR SIZE
         LR    R1,RBUFAD                LOAD BFR ADDRESS
         TGET  (1),(0)                  ISSUE TGET MACRO
         SPACE 3
********
******** TEST RETURN CODE FROM TGET
********
CKATTN   EQU   *
         CH    RRETURN,EIGHT            TEST FOR ATTENTION INTERRUPT
         BE    ATTNHT                   BRANCH IF NOT          @ZA25486
         NI    DCBOFLGS,M7F             TURN OFF WRITE BIT (THIS IS A
*                                       READ OPERATION)
         SPACE 3
********
******** FOLD INPUT MESSAGE TO UPPER CASE
********
         LTR   R1,R1                    IS THERE ANY MSG TO FOLD
         BZ    URECORD                  NO, DO NOT FOLD
         LR    RPTR,RBUFAD              POINTS AT START OF BFR
         LA    RWORK,D1                 SET UP LOOP INDEX
         LR    RENDMSG,RBUFAD           POINTS AT START OF BUFFER
         AR    RENDMSG,R1               POINTS AT END OF BFR PLUS 1
         BCTR  RENDMSG,R0               POINTS AT END OF BUFFER
LOOP     EQU   *
         CLI   D0(RPTR),M81             COMPARE TO LOWER A      SA69503
         BL    TEST                     IF LOW, DONT FOLD       SA69503
         CLI   D0(RPTR),MA9             COMPARE TO LOWER Z      SA69503
         BH    TEST                     IF HIGH, DONT FOLD      SA69503
*****
*****        ONLY LOWERCASE ALPHA & IMBEDDED SPECIAL CHARACTERS
*****        WILL FALL THROUGH THE ABOVE TESTS
*****
         CLI   D0(RPTR),M89             COMPARE TO LOWER I      SA69503
         BNH   FOLD                     FOLD LOWER A-I          SA69503
         CLI   D0(RPTR),MA1             COMPARE TO SPEC         SA69503
         BH    FOLD                     FOLD LOWER S-Z          SA69503
         CLI   D0(RPTR),M90             COMPARE TO SPEC         SA69503
         BNH   TEST                     DONT FOLD SPEC          SA69503
         CLI   D0(RPTR),M99             COMPARE TO LOWER R      SA69503
         BH    TEST                     DONT FOLD SPEC          SA69503
*                                       FOLD LOWER J-R          SA69503
FOLD     EQU   *                                                SA69503
         OI    D0(RPTR),UPPER           FOLD LOWERCASE          SA69503
*                                       ALPHA TO UPPER          SA69503
TEST     EQU   *
         BXLE  RPTR,RWORK,LOOP          INCREMENT PTR AND TEST
         SPACE 3
********
******** FOR U/V TYPES OF RECORD, RETURN MESSAGE LENGTH IN
******** DCBLRECL, RETURN RESIDUAL COUNT IN DUMMY IOB
********
URECORD  EQU   *
         TM    DCBRECFM,M40             TEST IF TYPE U OR V
         BO    RESIDUAL                 BRANCH IF YES
         NI    DCBIOBA+C3,MFE           ZERO OUT RESIDUAL COUNT
         B     CKMORMSG                 DO NOT UPDATE LRECL
RESIDUAL EQU   *
         SR    RBUFSZ,R1                GET RESIDUAL COUNT
         MVI   DCBIOBA,M0C              SET STATUS TO CHANNEL END,
         MVI   DCBIOBA+1,ZERO           DEVICE END IN DUMMY IOB
         STH   RBUFSZ,DCBIOBA+2         PUT RESIDUAL BYTE COUNT IN
*                                       DUMMY IOB
         TM    DCBRECFM,M80             IS IT U OR F TYPE RECORD
         BO    RTNLNGTH                 BRANCH IF YES
         LR    RWORK,R1                 GET MESSAGE LENGTH
         AH    RWORK,FOUR               ADD LENGTH OF RECORD
*                                       DESCRIPTOR WORD
         STH   RWORK,DCBLRECL           RETURN PHYSICAL RECORD LENGTH
         B     CKMORMSG                 GO TO FURTHER CHECK
RTNLNGTH EQU   *
         STH   R1,DCBLRECL              RETURN PHYSICAL RECORD LENGTH
         SPACE 3
CKMORMSG EQU   *
         CH    RRETURN,TWELVE           MORE DATA TO GET
         BNE   GSUCCESS                 BRANCH IF NO
         SPACE 3                                                 A42898
********
******** TEST FOR V-TYPE RECORD, IF SO FILL IN CONTROL WORD
********
DESCRIBE EQU   *                                                 A42898
         TM    DCBRECFM,M80             CHECK FOR U-TYPE OR F-TYPE
*                                       RECORD
         BO    RETURN                   BRANCH IF YES
         SH    RBUFAD,FOUR              RESTORE PTR TO POINT AT  A42898
*                                       RECORD DESCRIPTOR WORD
         AH    R1,FOUR                  ADD LENGTH OF RECORD DESCRIPTOR
*                                       WORD
         LR    RWORK,R1                 PUT LENGTH IN WORK       A42898
*                                       REGISTER                 A42898
         STC   RWORK,D1(RBUFAD)         PUT LOW ORDER BYTE IN LL A42898
*                                       FIELD                    A42898
         SRL   RWORK,M8                 GET HIGH ORDER BYTE      A42898
         STC   RWORK,D0(RBUFAD)         PUT HIGH ORDER BYTE IN   A42898
*                                       LL FIEL                  A42898
         XC    D2(L2,RBUFAD),D2(RBUFAD) ZERO OUT BB FIELD        A42898
         SH    RBUFAD,FOUR              RESTORE PTR TO POINT AT  A42898
*                                       BLOCK DESCRIPTOR WORD
         AH    R1,FOUR                  ADD LENGTH FOR BLOCK     A42898
*                                       DESCRIPTOR WORD
         STC   R1,D1(RBUFAD)            PUT LOW ORDER BYTE IN LL FIELD
         SRL   R1,M8                    GET HIGH ORDER BYTE
         STC   R1,D0(RBUFAD)            PUT HIGH ORDER BYTE IN LL FIELD
         XC    D2(L2,RBUFAD),D2(RBUFAD) ZERO OUT BB FIELD
         B     RETURN                   GO TO RESTORE REGISTERS
         SPACE 3
GSUCCESS EQU   *
         CH    R1,TWO                   IS MSG LENGTH TWO
         BNE   DESCRIBE                 BRANCH IF NO
         SPACE 3
CKBUF    EQU   *
         CLC   D0(L2,RBUFAD),END        IS THERE A /* IN BUFFER
         BNE   DESCRIBE                 BRANCH IF NO
ATTNHT   MVI   D0(RECB),M41             SET ECB COMPLETE WITH I/O ERROR
         OI    DCBCIND1,EOF             SIGNAL EOF
*                                       (EOD)
         B     RESTORE                  GO TO RESTORE REGISTERS
         SPACE 3
********
******** CONSTANTS
********
         DS    0F                       FORCE WORD BOUNDARY
ABENDCOD DC    X'80002000'              DUMP/STEP AND COMP CODE SA66590
ZEROHALF DC    X'0000FFFF'              USED TO CLEAR HIGH ORDER 2
*                                       BYTES OF REGISTER
FOUR     DC    H'4'                     CONSTANT OF 4
TWO      DC    H'2'                     CONSTANT OF 2
EIGHT    DC    H'8'                     CONSTANT OF 8
TWELVE   DC    H'12'                    CONSTANT OF 12
SIXTEEN  DC    H'16'                    CONSTANT OF 16
END      DC    C'/*'                    DENOTE END OF DATA SET
         SPACE 3
         DS    0F
DEB      DSECT
         DS    CL32                     DEB BASIC SECTION
         DS    CL4                      DEB EXTENT
         DS    CL12                     DEB BSAM/QSAM DEPENDENT SECTION
DEBBLKSI DS    CL2                      BLOCK SIZE SAVE AREA
DEBLRECL DS    CL2                      LRECL SAVE AREA
         SPACE 3
         DS    0F
DECB     DSECT
DECSDECB DS    CL4
DECTYPE  DS    CL2
DECLNGTH DS    CL2
DECDCBAD DS    CL4
DECAREA  DS    CL4
DECIOBPT DS    CL4
         SPACE 3
         DCBD  DSORG=PS
         END
