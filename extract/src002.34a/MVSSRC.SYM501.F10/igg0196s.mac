         TITLE 'IGG0196S - TS OPEN EXECUTOR'
*
IGG0196S CSECT
*
* VS/2-3 SERVICE UPDATE
*  C 129400                                                     ZA16624
*0000107700,241100-244000                                      @ZA08323
*  D 422000,422500                                              ZA09612
*0000107700,129400,129600                                      @OZ09612
* VS/2-2 DELETIONS/CHANGES                                      YS02019
*                                       7/23/1973               YM01426
*                                       8/20/1973               YM03016
*                                       9/18/1973               YM03842
*                                      10/01/1973               YM03948
*                                                                     *
* RELEASE 21 DELETIONS/CHANGES                                        *
*                                                                     *
*0000215016,215044                                               TS2495
*                                                                M3415
*                                                                M3504
*                                                                M4324
*                                                                M1565
*                                                                M2307
*                                                                 M5005
*                                                                M5457
*STATUS CHANGE LEVEL 001
*                                                                     *
* NAME - IGG0196S, TS OPEN EXECUTOR                                   *
*                                                                     *
* FUNCTION - THIS ROUTINE OBTAINS CONTROL WHEN THE DCB BEING OPENED   *
*            IS A TERMINAL DEVICE AND THE TASK IS UNDER TIME SHARING. *
*            THE EXECUTOR PERFORMS THE FOLLOWING FUNCTIONS.           *
*                                                                     *
*          * DEFAULT DCBBLKSI, DCBLRECL, AND DCBRECFM FOR OUTPUT      *
*            DATA SET                                                 *
*                                                                     *
*          * FOR PUT LOCATE MODE, IT SET ON BIT 0 IN BYTE 0 IN BUFFER *
*            POOL CONTROL BLOCK TO SIGNAL IGG019T4 (TS PUT ROUTINE)   *
*            THAT THIS IS THE FIRST PUT                               *
*                                                                     *
*          * IT LOADS PROPER INTERFACE ROUTINE(S) FOR SAM AND TERMINAL*
*            I/O SVC                                                  *
*                                                                     *
* ENTRY POINTS - IGG0196S, BEGINNG OF ROUTINE. CONTROL IS RECEIVED    *
*                FROM IGG0196B OR IGG0193I VIA XCTL             YS02019
*                                                                     *
* INPUT - SEE DESCRIPTION OF REGISTERS                                *
*                                                                     *
* OUTPUT - PROPER INTERFACE ROUTINES LOADED                           *
*                                                                     *
* EXTERNAL REFERENCE - NONE                                           *
*                                                                     *
* EXIT, NORMAL - TO OPEN MODULE, IGG0190S VIA XCTL                    *
*                                                                     *
* EXIT, ERROR - NONE                                                  *
*                                                                     *
* TABLE/WORK AREAS - WHERE-TO-GO TABLE (WTG)                          *
*                                                                     *
*      BYTE  0-7  NAME                                                *
*      BYTE  8-10 RELATIVE DISK ADDRESS(TTR) OF FIRST RECORD          *
*      BYTE 11    CONCATENATION NUMBER                                *
*      BYTE 12    ZERO                                                *
*      BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR      *
*                        ALIAS 1 BIT                                  *
*                        NUMBER OF TTRS IN USERS DATA FIELD 2 BITS    *
*      BYTE 14-16 TTR OF FIRST TEXT RECORD                            *
*      BYTE 17    ZERO                                                *
*      BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST                    *
*      BYTE 20    TRANSLATION TABLE                                   *
*      BYTE 21    ZERO NUMBER OF ENTRIES IN THE NOTE LIST             *
*      BYTE 22-23 ATTRIBUTES                                          *
*      BYTE 24-26 TOTAL CONTIGIOUS MAIN STORAGE REQUIRED FOR MODULE   *
*      BYTE 27-28 LENGTH OF FIRST TEXT RECORD                         *
*      BYTE 29    LENGTH OF WHERE-TO-GO TABLE (IN DOUBLE WORDS)       *
*      BYTE 30-31 PATH THROUGH LOADS OF ROUTINES                      *
*      BYTE 32-34 IDTTR OF EXECUTOR FOR FIRST DCB                     *
*      BYTE 35    ADDRESS OF STORAGE FOR DCB                          *
*      BYTE 36-39 TABLE OF IDTTR'S                                    *
*      BYTE 32+N(8) IDTTR OF EXECUTOR FOR NEXT DCB (3 BYTES)          *
*                   ADDRESS OF STORAGE FOR DCB     (1 BYTE)           *
*                   IDTTR OF LAST ROUTINE LOADED   (3 BYTES)          *
*                   NOT USED                       (1 BYTE)           *
*                                                                     *
*      OPEN WORK AREA - SEE IECDSECT IN THIS LISTING                  *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSABLE, SUPERVISOR MODE                   *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
***********************************************************************
*
*
***********************************************************************
*
*   REGISTER CONVENTIONS USED THROUGH OUT OPEN EXECUTORS
*
***********************************************************************
*
RE       EQU   0                        WORK/PARAMETER REGISTER
RF       EQU   1                        WORK/PARAMETER REGISTER
RDCB     EQU   2                        ADDR OF USERS DCB
RBASE    EQU   3                        BASE REGISTER
RCORE    EQU   4                        ADDR OF OPEN WORK AREA
RPAR     EQU   5                        PARAMTER LIST
RWTG     EQU   6                        START OF WTG
RPARC    EQU   7                        CURRENT ENTRY IN PARAMETER LIST
RWTGC    EQU   8                        CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                        TIOT ADDR/WORK REGISTER
RUCB     EQU   10                       UCB ADDR
RDEB     EQU   11                       DEB ADDR
RB       EQU   12                       WORK AREA BASE REGISTER
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK/PARAMETER REGISTER
RJ       EQU   15                       WORK/PARAMETER REGISTER
*
***********************************************************************
*
*
***********************************************************************
*
*   EQUATES
*
***********************************************************************
*
NULL     EQU   0                        CONSTANT='0'
ONE      EQU   1                        CONSTANT='1'
TWO      EQU   2                        CONSTANT='2'
THREE    EQU   3                        CONSTANT=3
FOUR     EQU   4                        CONSTANT='4'
FIVE     EQU   5                        CONSTANT='5'
SIX      EQU   6                        CONSTANT=6
MSK14    EQU   14                       CONSTANT =14
MSK24    EQU   24                       CONSTANT=24
MSK25    EQU   25                       CONSTANT=25
PARMLNGH EQU   16                       LENGTH OF PARM LIST=16
MSK48    EQU   X'48'                    MASK FOR V/S RECORD
QSAMLOCT EQU   X'48'                    MACRF=PL OR GL
NOTONES  EQU   14                       'BC 14' FOR TEST UNDER MASK
BLKSIMRG EQU   X'10'                    BLKSI HAS BEEN MERGED
LRECLMRG EQU   X'80'                    LRECL HAS BEEN MERGED
RECFMMRG EQU   X'04'                    RECFM HAS BEEM MERGED
FIRSTPT  EQU   X'80'                    FIRST PUT IN PUT LOCATE MODE
MSK7     EQU   7                        CONSTANT = 7
MSK22    EQU   22                       CONSTANT = 22
WGOFF    EQU   8                        OFFSET TO CURRENT WTG ENTRIES
PLOFF    EQU   4                        OFFSET TO CURRENT DCB ENTRIES
WAOFF    EQU   32                       OFFSET TO 1ST ENTRY IN WTG TBL
DEBPRFX  EQU   16                       SIZE OF DEB PREFIX
NMXD     EQU   X'09'                    CC NOT MIXED AFTER BRANCH
MSK0E    EQU   X'0E'                    OPEN FLAG FOR INOUT/OUTIN/UPDAT
*
***********************************************************************
*
*   REGISTER INITIALIZATION
*
***********************************************************************
*
         LR    RBASE,RJ                 SET UP BASE REGISTER    YM01426
         USING IGG0196S,RBASE           MODULE ADDRESSABLE      YM01426
         B     GOGOGOGO                 BRANCH AROUND MODULE ID YM01426
         DC    C'IGG0196S'              MODULE ID               YM01426
         DC    X'7109'                  JULIAN DATE - 04/19/77  ZA16624
         USING IHADCB,RDCB              ESTABLISH DCB REG.
         USING FORCORE,RCORE            ESTABLISH OPEN WORK AREA
         USING DEBBASIC,RDEB            ESTABLISH DEB REG.
         USING CVT,RTIOT                ESTABLISH CVT REG.
         USING TCB,RD
*
***********************************************************************
*
*
***********************************************************************
*
GOGOGOGO EQU   *
*
***********************************************************************
*
         L     RDCB,NULL(RPARC)         GET DCB ADDR
         L     RCORE,FOUR(RWTGC)        GET WORK AREA
         L     RTIOT,CVTPTR             LOAD CVT ADDR
         L     RDEB,DCBDEBAD            GET DEB ADDRESS         YS02019
*
*  CHECK IF DCBBLKSI AND DCBLRECL ARE SPECIFIED. IF BOTH ARE
*  NOT THERE, DEFAULT WITH TERMINAL LINE SIZE WHEN IT IS SMALLER THAN
*  BUFFER LENGTH. WHEN DCBBUFL IS SMALLER THAN TERMINAL LINE SIZE,
*  THE FORMER WILL BE USED AS BLOCK SIZE AND LRECL
*
         LH    RJ,DCBBLKSI              GET BLOCK SIZE          YS02019
         LTR   RJ,RJ                    IS IT SPECIFIED         YS02019
         BNZ   OP6050                   BRANCH IF YES
         LH    RJ,DCBLRECL              GET LRECL               YS02019
         LTR   RJ,RJ                    IS IT SPECIFIED         YS02019
         BZ    OP6060                   BRANCH IF NO
         STH   RJ,DCBBLKSI              USE LRECL AS BLOCK SIZE YS02019
         OI    JFCBMASK+TWO,BLKSIMRG    INDICATE BLKSI MERGED
         B     OP5666                   GO TO CHECK RECFM
         SPACE 1
OP6050   EQU   *
         LH    RF,DCBLRECL              GET LRECL
         LTR   RF,RF                    IS IT SPECIFIED
         BNZ   OP5666                   BRANCH IF YES
         STH   RJ,DCBLRECL              USE BLOCK SIZE AS LRECL YS02019
         OI    JFCBMASK+TWO,LRECLMRG    INDICATE LRECL MERGED
         B     OP5666                   GO TO CHECK RECFM
         SPACE 1
*
*  GET TERMINAL LINE SIZE FROM TSB
*
OP6060   EQU   *
         L     RD,DEBTCBAD              GET ADDR OF TCB         YS02019
         L     RB,PSAAOLD-PSA           GET CURRENT ASCB ADDR   YS02019
         USING ASCB,RB                  ADDRESSABILITY FOR ASCB YS02019
         L     RF,ASCBTSB               GET TSB ADDRESS         YS02019
         USING TSB,RF
*
*  CHANGE TO TCAM'S KEY TO GET TSBLNSZ BECAUSE TSB IS FETCH PROTECTED
*
         MODESET EXTKEY=TCAM            CHANGE TO TCAM'S KEY
         IC    RJ,TSBLNSZ               GET TERMINAL LINE SIZE  YS02019
*
         MODESET EXTKEY=DATAMGT         CHANGE BACK TO DM'S KEY YS02019
*
         LH    RF,DCBBUFL               GET BUFFER LENGTH
         LTR   RF,RF                    IS IT SPECIFIED
         BZ    OP6070                   BRANCH IF NO
         CR    RJ,RF                    IS TERMINAL LINE SIZE   YS02019
*                                       LARGER THAN BUFFER LENGTH
*
*  IF BUFFER LENGTH IS LARGER THAN TERMINAL LINE SIZE, DEFAULT WITH
*  THE LATTER, OTHERWISE, DEFAULT WITH THE FORMER.
*
         BH    OP6080                   BRANCH IF YES
         SPACE 1
OP6070   EQU   *
         STH   RJ,DCBBLKSI              DEFAULT BLOCK SIZE      YS02019
         STH   RJ,DCBLRECL              DEFAULT LRECL           YS02019
         OI    JFCBMASK+TWO,BLKSIMRG+LRECLMRG
*                                       SET MERGE MASK
         B     OP5666                   GO TO CHECK RECFM
         SPACE 1
OP6080   EQU   *
         LR    RJ,RF                    GET BUFFER LENGTH       YS02019
         B     OP6070                   DEFAULT BLOCK SIZE
         SPACE 1
*
*  CHECK WHETHER DCBRECFM IS SPECIFIED, IF NOT, DEFAULT TO FIXED
*
OP5666   EQU   *
         DROP  RB                      RELEASE USAGE            ZA09612
         LA    RB,DEBDEVED             GET PTR DEV DEPENDENT    ZA16624
         USING DEBACSMD,RB             SET BASE                 ZA09612
         MVC   DEBBLKSI,DCBBLKSI       SAVE BLOCKSIZE IN DEB    ZA09612
         MVC   DEBLRECL,DCBLRECL       SAVE LRECL IN DEB        ZA09612
         CLI   DCBRECFM,NULL            CHECK RECFM IS SPECIFIED
         BNE   TSEX010                  BRANCH IF YES
         MVI   DCBRECFM,DCBRECF         DEFAULT TO FIXED
         OI    JFCBMASK+TWO,RECFMMRG    SET MERGE MASK
         SPACE 2
*
***********************************************************************
*
*   LOAD APPROPRIATE SAM ACCESS METHOD ROUTINE AND INITIALIZE FIELDS
*   IN THE DCB
*
***********************************************************************
*
*   DETERMINE ACCESS MODE AND LOAD PROPER ROUTINE
*
TSEX010  EQU   *
         SR    RJ,RJ                    RESET RJ TO '0'
         IC    RJ,DEBAMLNG              INSERT A.M. LENGTH
         LA    RUCB,WAOFF(RJ,RDEB)      LOAD DEB OFFSET
         IC    RJ,DEBNMEXT              INSERT NO. OF EXTENT
         SLL   RJ,2                     MULTIPLY EXTENT BY '4'
         AR    RUCB,RJ                  NOW RUCB POINT TO DEBSUBID
         TM    DCBCIND2,DCBCNQSM        TEST IF BSAM OR QSAM
         BO    TSEX050                  QSAM,GOTO CHECK PUT OR GET
         SPACE 2
*
*
*   TEST OPEN FOR INOUT, OUTIN OR UPDAT, AND LOAD COMBINED
*   READ/WRITE ROUTINE
*
TSEX042  EQU   *
         TM    DEBOPATB,MSK0E           TEST FOR INOUT,OUTIN,UPDAT
         BC    NMXD,TSEX041             NO,GOTO CHECK READ OR WRITE
         LA    RJ,RDWRRTN               LOAD ADDR OF READ/WRITE RTN ID
         B     TSEX070                  GOTO LOAD SUB RTN
         SPACE 1
TSEX041  EQU   *
         TM    DEBOPATB,MSK0E           TEST IF READ IS SPECIFIED
         BNZ   TSEX060                  NO,GOTO LOAD WRITE ROUTINE
         LA    RJ,READRTN               LOAD ADDR OF READ RTN ID
         B     TSEX070                  GOTO,BRANCH TO LOAD ROUTINE
         SPACE 1
TSEX060  EQU   *
         LA    RJ,WRITERTN              LOAD ADDR OF WRITE RTN ID
         SPACE 1
*
*   LOAD READ/WRITE ROUTINE
*
TSEX070  EQU   *
         BAL   RD,TSEX900               GOTO LOAD ROUTINE
         MVC   DCBRTNAD(THREE),MSK25(RWTG)   STORE RTN ADDR IN DCB
         SPACE 1
TSEX080  EQU   *
         TM    DCBMACF1,DCBMRCRL        IS CONTROL SPECIFIED FOR INPUT
         BO    TSEX020                  BRANCH IF YES
         TM    DCBMACF2,DCBMRCRL        IS CONTROL SPECIFIED FOR OUTPUT
         BNO   TSEX025                  BRANCH IF NO
         SPACE 3
*
*   LOAD CONTROL ROUTINE
*
TSEX020  EQU   *
         LA    RJ,CNTRLRTN              LOAD ADDR OF CNTRL ROUTINE ID
         BAL   RD,TSEX900               GO TO LOAD ROUTINE
         MVC   DCBCNTRL+ONE(THREE),MSK25(RWTG)
*                                       STORE CNTRL ROUTINE ADDR IN DCB
         B     TSEX030                  GO TO LOAD CHECK ROUTINE
         SPACE 1
TSEX025  EQU   *
         TM    DCBMACF1,DCBMRPT1        IS NOTE/POINT SPECIFIED
*                                       FOR INPUT
         BO    TSEX035                  BRANCH IF YES
         TM    DCBMACF2,DCBMRPT1        IS NOTE/POINT SPECIFIED FOR
*                                       OUTPUT
         BNO   TSEX030                  GO TO LOAD CHECK ROUTINE
         SPACE 1
*
*   LOAD NOTE/POINT ROUTINE
*
TSEX035  EQU   *
         LA    RJ,NTPTRTN               LOAD ADDR OF NOTE-POINT RTN ID
         BAL   RD,TSEX900               GO TO LOAD ROUTINE
         MVC   DCBPOINT+ONE(THREE),MSK25(RWTG)
*                                       STORE NOTE-POINT RTN ADDR
         SPACE 1
*
*   LOAD CHECK ROUTINE
*
TSEX030  EQU   *
         LA    RJ,CHECKRTN              LOAD ADDR OF CHECK RTN ID
         BAL   RD,TSEX900               GO TO LOAD ROUTINE
         MVC   DCBCKADR(THREE),MSK25(RWTG)
*                                       STORE CHECK RTN ADDRESS
*
         B     TSEX090                  GOTO CHECK WTG TABLE ROUTINE
         SPACE 3
*
***********************************************************************
*
*
*   QSAM IS SPECIFIED
*
***********************************************************************
*                                                                     *
*  TEST FOR LOCATE MODE, IF SO PUT BUFFER ADRESS IN DCBRECAD, PUT     *
*  BUFFER ADDRESS PLUS LOGICAL RECORD LENGTH IN DCBEOBAD. IF          *
*  PUT/LOCATE IS SPECIFIED, TURN ON BIT 0 OF BYTE 0 IN BUFFER POOL    *
*  CONTROL BLOCK TO INDICATE FIRST PUT.                               *
*                                                                     *
***********************************************************************
*
TSEX050  EQU   *
         TM    DCBMACRF,QSAMLOCT        TEST FOR GET/LOCATE
         BO    TSEX001                  BRANCH IF YES
         TM    DCBMACRF+ONE,QSAMLOCT    TEST FOR PUT/LOCATE
         BNO   TSEX040                  BRANCH IF NOT
         SPACE 1
TSEX001  EQU   *
         L     RD,DCBBUFNO              GET ADDR OF BUFCB
         MODESET KEYADDR=DXUKEY,WORKREG=13  CHANGE INTO         YM03948
*                                           USER'S KEY          YM03948
         L     RD,NULL(RD)              GET ADDR OF FIRST BUFFER
         MODESET EXTKEY=DATAMGT         CHANGE BACK TO DM KEY   YM03948
         ST    RD,DCBRECAD              PUT ADDR OF BUFFER IN DCB
         AH    RD,DCBLRECL              ADD LENGTH OF RECORD
         ST    RD,DCBEOBAD              PUT EOB ADDRESS IN DCB
         TM    DCBMACRF+ONE,QSAMLOCT    TEST FOR PUT/LOCATE
         BNO   TSEX040                  BRANCH IF NOT
         L     RD,DCBBUFNO              GET ADDR OF BUFCB
         MODESET KEYADDR=DXUKEY,WORKREG=13  CHANGE IN USER KEY  YM03948
         OI    NULL(RD),FIRSTPT         TURN ON FLAG FOR FIRST PUT
         MODESET EXTKEY=DATAMGT         CHANGE BACK TO DM KEY   YM03948
         SPACE 3
*
*   TEST IF DCB IS OPEND FOR UPDATE
*
TSEX040  EQU   *
         TM    DEBOPATB,MSK0E           TEST IF DCB IS OPENED FOR UPDAT
         BC    NMXD,TSEX051             NO,GOTO CHECK PUT OR GET
         LA    RJ,GTPTRTN                LOAD ADDR OF GET/PUT RTN ID
         B     TSEX110                  GO TO LOAD ROUTINE
         SPACE 1
TSEX051  EQU   *
         TM    DEBOPATB,MSK0E           TEST IF GET IS SPECIFIED
         BNZ   TSEX100                  NO, GO TO LOAD PUT RTN
         LA    RJ,GETRTN                LOAD ADDR OF GET RTN ID
*
*   FOR VARIABLE SPANNED RECORD, SAVE BLOCK SIZE IN DEB IF IT
*   IS SMALLER THAN LRGCL
*
TSEX057  EQU   *
         TM    DCBRECFM,DCBRECV+DCBRECSB TEST FOR V/S TYPE RECORD
         BNO   TSEX110                  BRANCH IF NO
         TM    DCBMACRF,DCBMRLCG        TEST FOR GET/LOCATE MODE
         BNO   TSEX110                  BRANCH IF NO
         LH    RC,DCBBLKSI              LOAD BLOCK SIZE
         DROP  RD
         USING BUFCB,RD
         L     RD,DCBBUFCB              GET ADDRESS OF BUFCB   @ZA08323
         MODESET KEYADDR=DXUKEY,WORKREG=9 CHANGE TO USERS KEY  @ZA08323
*                                                              @ZA08323
         CH    RC,BUFL                  IS BLOCK SIZE > BFR    @ZA08323
         BNH   TSEX055                  BRANCH IF NOT          @ZA08323
         LH    RC,BUFL                  YES GET BFR LENGTH     @ZA08323
TSEX055  EQU   *                                               @ZA08323
         MODESET EXTKEY=DATAMGT         CHANGE BACK TO DM KEY  @ZA08323
*                                                              @ZA08323
         L     RTIOT,CVTPTR             RELOAD CVT ADDRESS     @ZA08323
*                                                              @ZA08323
         SPACE 1
TSEX056  EQU   *
         CH    RC,DEBLRECL              IS BLOCK SIZE BIGGER THAN LRECL
         BNL   TSEX110                  BRANCH IF YES
         STH   RC,DEBLRECL              SAVE BLOCK SIZE IN DEB
         B     TSEX110                  GOTO,BRANCH TO LOAD ROUTINE
         SPACE 1
TSEX100  EQU   *
         LA    RJ,PUTRTN                LOAD ADDR OF PUT RTN ID
         SPACE 1
TSEX110  EQU   *
         BAL   RD,TSEX900               GOTO LOAD ROUTINE
         MVC   DCBRTNAD(THREE),MSK25(RWTG)   STORE RTN ADDR IN DCB
*
*
*   TEST CNTRL IS SPECIFIED, IF YES, LOAD CONTROL ROUTINE
*
         TM    DCBMACF1,DCBMRCRL        IS CONTROL SPECIFIED FOR INPUT
         BO    TSEX054                  BRANCH IF YES
         TM    DCBMACF2,DCBMRCRL        IS CONTROL SPECIFIED FOR OUTPUT
         BNO   TSEX090                  BRANCH IF NO
         SPACE 1
TSEX054  EQU   *
         LA    RJ,CNTRLRTN              LOAD ADDR OF CNTRL RTN ID
         BAL   RD,TSEX900               GO TO LOAD ROUTINE
         MVC   DCBCNTRL+ONE(THREE),MSK25(RWTG)
*                                       STORE CNTRL RTN ADDR IN DCB
         B     TSEX090                  GOTO CHECK WTG TABLE ROUTINE
         SPACE 3
*
*
***********************************************************************
*
TSEX900  EQU   *
*
***********************************************************************
*
*   LOAD SAM SUBROUTINE ROUTINE
*
***********************************************************************
*
         MVC   NULL(TWO,RUCB),NULL(RJ)  STORE ROUTINE ID IN DEB
         LA    RUCB,TWO(RUCB)           INCREMENT RUCB BY '2'
         MVC   SIX(TWO,RWTG),NULL(RJ)   MOVE 2 BYTE ID TO DE
         L     RC,CVTLINK               GET LINKLIB'S DCB ADDR  YM01426
         LOAD  EPLOC=(RWTG),DCB=(RC)    LOAD ROUTINE            YM03842
         ST    RE,MSK24(RWTG)           SAVE ADDR OF ROUTINE TEMPORARLY
*
         SR    RJ,RJ
         IC    RJ,DEBNMSUB              LOAD NO. OF SUBROUTINE
         LA    RJ,ONE(RJ)               INCREMENT NO. BY '1'
         STC   RJ,DEBNMSUB              UPDATE NO. OF SUBROUTINE
*
         BR    RD                       GO BACK TO ENTRY POINT
*
*
***********************************************************************
*
***********************************************************************
*
*
TSEX090  EQU   *
*
***********************************************************************
*
*   UPDATE USER'S DCB
*
***********************************************************************
*
         USING WTG,RWTG                 WTG TABLE ADDRESSABLE   YM03016
         IECRES INIT,DCBCOPY=FRWKAR,STM=(RE,RD,WTGPREFX) COPY   YM03016
*                                       BACK USER'S DCB         YM03016
         DROP  RWTG                     WTG NOT ADDRESSABLE     YM03016
         MVC   DEBDCBB,DXUDCBAD+ONE     UPDATE DCB PTR IN DEB   YM03016
         MVI   NULL(RWTGC),NULL         SET TO GO OUT FROM SAM EXECUTOR
         SPACE 2
*
***********************************************************************
*
*   UPDATES WHERE-TO-GO TABLE AND XCTL TO NEXT MODULE
*
***********************************************************************
*
RELOOP   EQU   *
         LA    RWTGC,WGOFF(NULL,RWTGC)  INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(NULL,RPARC)  INCREMENT CURRENT DCB ENTRY
         CLC   NULL(TWO,RWTGC),AMIDCNST IS THE RTN NEEDED AGAIN
         BE    GOGOGOGO                 YES,RETURN TO THE BEGINNING
         CLC   NULL(TWO,RWTGC),OPIDCNST TEST END OF WTG TABLE
         BNE   RELOOP                   NO,CHECK NEXT ENTRY
         LR    RPARC,RPAR               RESET REG. TO '0'
         LA    RWTGC,WAOFF(NULL,RWTG)   RESET WTG REG TO PT +32(WTG)
         SPACE 1
ZCHECK   EQU   *
         CLI   NULL(RWTGC),NULL         TEST IF THIS ENTRY IS COMPLETE
         BNE   TCTLRTN                  NO,GOTO XCTL
         LA    RWTGC,WGOFF(NULL,RWTGC)  GET NEXT ENTRY OF WTG TABLE
         LA    RPARC,PLOFF(NULL,RPARC)  GET NEXT ENTRY OF DCB
         B     ZCHECK                   GOTO TEST COMPLETION
         SPACE 1
TCTLRTN  EQU   *
         MVC   SIX(TWO,RWTG),NULL(RWTGC)     STORE ID IN WTG TABLE
         LA    RJ,DXCCW12
         XCTL  EPLOC=(RWTG),SF=(E,(15)) XCTL TO NEXT MODULE     YM03842
         SPACE 3
*
***********************************************************************
*
*   CONSTANTS
*
***********************************************************************
*
*   FOR WTG TABLE
*
OPIDCNST DC    C'0S'                    LAST MODULE OF OPEN
AMIDCNST DC    C'6S'                    THIS MODULE
GETRTN   DC    C'T3'                    TS GET ROUTINE ID       YM03016
PUTRTN   DC    C'T4'                    TS PUT ROUTINE ID       YM03016
RDWRRTN  DC    C'T5'                    TS READ/WRITE RTN ID    YM03016
GTPTRTN  DC    C'T6'                    TS GET/PUT ROUTINE ID   YM03016
READRTN  DC    C'T7'                    TS READ ROUTINE TID     YM03016
WRITERTN DC    C'T8'                    TS WRITE ROUTINE ID     YM03016
CHECKRTN DC    C'TX'                    TS CHECK ROUTINE ID     YM03016
NTPTRTN  DC    C'TY'                    TS NOTE/POINT RTN ID    YM03016
CNTRLRTN DC    C'TZ'                    TS CONTROL ROUTINE ID   YM03016
PATCH    DC    20F'0'                   PATCH AREA              YM03016
         EJECT
         IHAASCB                                                YS02019
         SPACE 3
*
*
***********************************************************************
*
*   DCB DSECT
*
***********************************************************************
*
         DCBD  DSORG=PS
*
DCBEND   EQU   *                                                YS02019
DCBLEN   EQU   DCBEND-IHADCB            LENGTH OF SAME DCB      YS02019
DCBRTNAD EQU   DCBREAD+1                SAM RTN ADDR
DCBPTADR EQU   DCBPOINT+1               ADDR OF DCB POINT/CNTRL RTN
DCBCKADR EQU   DCBCHECK+1               ADDR OF DCB CHECK RTN
DCBBLKSZ EQU   DCBBLKSI+1               DCB BLKSIZE
DCBLRCL2 EQU   DCBLRECL+1               DCB LRECL+1
*
***********************************************************************
*
*   OPEN WORK AREA DSECT
*
***********************************************************************
*
         IECDSECS (MAIN,(IOB,NO)),WTG,PREFX,EXPAND=YES          YM03016
*
*
*
***********************************************************************
*
*   DEB DSECT
*
***********************************************************************
*
*
         IEZDEB
         SPACE 3
*
*
***********************************************************************
*
*   CVT DUMMY SECTION
*
***********************************************************************
*
CVT      DSECT
*
         CVT
**********************************************************************
*                                                                     *
*                  BUFFER POOL CONTROL BLOCK DSECT                    *
*                                                                     *
**********************************************************************
         DS    0F
BUFCB    DSECT
BUFAD    DS    CL4                      BUFFER ADDRESS
BUFNO    DS    CL2                      BUFFER NUMBER
BUFL     DS    CL2                      BUFFER LENGTH
         SPACE 3
         IHAPSA                                                 YS02019
         SPACE 3
         IKJTCB
         SPACE 3
         IKJRB                                                  YS02019
         SPACE 3
         IKJTSB
         END
