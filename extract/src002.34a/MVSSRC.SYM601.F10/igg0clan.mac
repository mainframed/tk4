         TITLE 'IGG0CLAN - VSAM CMS DEFINE - 2ND MODULE                *
                        '
IGG0CLAN CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLAN  76.049'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPDSCB'
         EJECT
         B     @PB00002                                            0143
IGGPDSCB DS    0H                                                  0144
         ENTRY IGGPDSCB
         DROP @15
Z003     DS    0H                                                  0146
Z003DSCB DS    0H                                                  0147
         BALR 12,0
IGGSEGST DS 0H
         USING *,12
*                                                                  0151
*/*                                                                  */
*/* IGGPDSCB - VSAM CMS DEFINE - 2ND SEGMENT AND MODULE OF DEFINE    */
*/*                                                                  */
*                                                                  0151
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0151
         BNE   @RF00151                                            0151
*Z004DSPF:                                                         0152
*     CALL IGGPDSPF;                /* SPACE PARM FPL PROC   @Y30SSSG*/
Z004DSPF BAL   @14,IGGPDSPF                                        0152
*   ELSE                                                           0153
*     ;                                                            0153
@RF00151 DS    0H                                                  0154
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0154
         BNE   @RF00154                                            0154
*Z005DBSF:                                                         0155
*     CALL IGGPDBSF;                /* BUFF SIZE FPL PROC    @Y30SSSG*/
Z005DBSF BAL   @14,IGGPDBSF                                        0155
*   ELSE                                                           0156
*     ;                                                            0156
@RF00154 DS    0H                                                  0157
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0157
         BNE   @RF00157                                            0157
*     IF CTGTYPE^='P' THEN          /*                         Y02020*/
         L     @10,CCACPL(,R11)                                    0158
         CLI   CTGTYPE(@10),C'P'                                   0158
         BE    @RF00158                                            0158
*Z006DALR:                                                         0159
*       CALL IGGPDALR;              /* AVE LOG RCD SIZE PROC @Y30SSSG*/
Z006DALR BAL   @14,IGGPDALR                                        0159
*     ELSE                                                         0160
*       ;                                                          0160
@RF00158 DS    0H                                                  0161
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
@RF00157 CLI   CCACD1(R11),0                                       0161
         BNE   @RF00161                                            0161
*     IF CTGTYPE=CTGTMCAT           /* MASTER OR USER        @Y30SSSG*/
*         ×CTGTYPE=CTGTUCAT THEN    /* CATALOG DEFINE        @Y30SSSG*/
*                                                                  0162
         L     @10,CCACPL(,R11)                                    0162
         CLI   CTGTYPE(@10),C'M'                                   0162
         BE    @RT00162                                            0162
         CLI   CTGTYPE(@10),C'U'                                   0162
         BNE   @RF00162                                            0162
@RT00162 DS    0H                                                  0163
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAP                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0163
*Z007DCDA:                                                         0163
*       CALL IGGPDCDA;              /* DEFINE CATALOG PROC   @Y30SSSG*/
*                                                                  0163
Z007DCDA L     @15,@CV00039                                        0163
         BALR  @14,@15                                             0163
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL DEFINE CLUSTER OR DEFINE AIX                     @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0164
*     ELSE                          /* DEFINE CLUSTER OR AIX @Y30SSSG*/
*       DO;                         /*                       @Y30SSSG*/
         B     @RC00162                                            0164
@RF00162 DS    0H                                                  0165
*         IF CTGFVTYP=CTGTAIX THEN  /* AIX DEFINE            @Y30SSSG*/
*                                                                  0165
         L     @10,CCACPL(,R11)                                    0165
         L     @10,CTGFVT(,@10)                                    0165
         CLI   CTGFVTYP(@10),C'G'                                  0165
         BNE   @RF00165                                            0165
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLB9                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0166
*Z008PAIX:                                                         0166
*           CALL IGGPPAIX;          /* CALL DEFINE AIX       @Y30SSSG*/
Z008PAIX L     @15,@CV00045                                        0166
         BALR  @14,@15                                             0166
*         ELSE                      /* NOT AIX DEFINE        @Y30SSSG*/
*Z009DRDA:                                                         0167
*           CALL IGGPDRDA;          /* CALL DEFINE CLUSTER   @Y30SSSG*/
         B     @RC00165                                            0167
@RF00165 DS    0H                                                  0167
Z009DRDA BAL   @14,IGGPDRDA                                        0167
*       END;                        /*                       @Y30SSSG*/
*   ELSE                                                           0169
*     ;                                                            0169
@RF00161 DS    0H                                                  0170
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
@RC00161 CLI   CCACD1(R11),0                                       0170
         BNE   @RF00170                                            0170
*     IF CTGTYPE=CTGTMCAT×CTGTYPE=CTGTUCAT THEN/* MASTER OR USER   0171
*                                                            @Y30SSSG
*                                      CATALOG DEFINE        @Y30SSSG*/
*                                                                  0171
         L     @10,CCACPL(,R11)                                    0171
         CLI   CTGTYPE(@10),C'M'                                   0171
         BE    @RT00171                                            0171
         CLI   CTGTYPE(@10),C'U'                                   0171
         BNE   @RF00171                                            0171
@RT00171 DS    0H                                                  0172
*       /*************************************************************/
*       /*                                                           */
*       /* CALL DEFINE CATALOG DATA AND INDEX BUILD PROCESSING - NO  */
*       /* RETURN TO THIS SEGMENT - CALL TO MODULE IGG0CLAS          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0172
*Z010DEFC:                                                         0172
*       CALL IGGPDEFC;              /* DEF CAT DATA,INDEX    @Y30SSSG*/
Z010DEFC L     @15,@CV00041                                        0172
         BALR  @14,@15                                             0172
*     ELSE                                                         0173
*                                                                  0173
*       /*************************************************************/
*       /*                                                           */
*       /* CALL BUILD DATA AND INDEX ENTRIES SEGMENT - NO RETURN TO  */
*       /* THIS SEGMENT - CALL TO MODULE IGG0CLAJ                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0173
*Z011DBDI:                                                         0173
*       CALL IGGPDBDI;              /* BUILD DATA AND INDEX ENTRIES  */
         B     @RC00171                                            0173
@RF00171 DS    0H                                                  0173
Z011DBDI L     @15,@CV00037                                        0173
         BALR  @14,@15                                             0173
*   ELSE                            /* AN ERROR HAS OCCURRED @Y30SSSG*/
*     DO;                                                          0174
         B     @RC00170                                            0174
@RF00170 DS    0H                                                  0175
*       DCCPROB=CCAPROB;            /* SAVE RETURN CODE      @Y30SSSG*/
*                                                                  0175
         L     @10,CCAR4REC(,R11)                                  0175
         MVC   DCCPROB(4,@10),CCAPROB(R11)                         0175
*       /*************************************************************/
*       /*                                                           */
*       /* CALL DEFINE UNDO PROCESSING CALL TO MODULE IGG0CLB8       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0176
*Z012DUND:                                                         0176
*       CALL IGGPDUND;              /* CLEAN UP PROCESSING   @Y30SSSG*/
Z012DUND L     @15,@CV00040                                        0176
         BALR  @14,@15                                             0176
*       CCAPROB=DCCPROB;            /* RESTORE RETURN CODE           */
         L     @10,CCAR4REC(,R11)                                  0177
         MVC   CCAPROB(4,R11),DCCPROB(@10)                         0177
*     END;                                                         0178
*                                                                  0178
*/*                                                                  */
*/* END OF IGGPDSCB                                                  */
*/*                                                                  */
*                                                                  0179
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00170 BAL   @14,EXIT                                            0179
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDSPF');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDSPF'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0182
@EF00002 DS    0H                                                  0182
@ER00002 BR    @14                                                 0182
@PB00002 DS    0H                                                  0183
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0184
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDSPF  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0184
*IGGPDSPF:                                                         0184
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0184
IGGPDSPF DS    0H                                                  0185
*Z013:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z013DSPF:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0185
*    (R5,                                                          0185
*     R6,                                                          0185
*     R7,                                                          0185
*     R8,                                                          0185
*     R9,                                                          0185
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z013     DS    0H                                                  0185
Z013DSPF DS    0H                                                  0186
*   RFY                                                            0186
*    (R2,                                                          0186
*     R3,                                                          0186
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0188
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* SPACE PARAMETER FPL STRUCTURE PROCESSING SEGMENT              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0189
*   IF CTGFVSPC^=N THEN             /* PROCESS CLUSTER FVT           */
         SLR   @10,@10                                             0189
         L     @05,CCACPL(,R11)                                    0189
         L     @05,CTGFVT(,@05)                                    0189
         L     @05,CTGFVSPC(,@05)                                  0189
         CR    @05,@10                                             0189
         BE    @RF00189                                            0189
*     IF CTGFVSPC->CTGFLPT(1)=N THEN                               0190
*                                                                  0190
         C     @10,CTGFLPT(,@05)                                   0190
         BNE   @RF00190                                            0190
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AN', CCAREASN=RSN26, CCARETRN=RCINPTR       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0191
*       CCAPROB=IGGSEGID+(RSN26*K256)+RCINPTR;/*             @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0191
*                                      CLUSTER SPACE PARM FPL        */
         MVC   CCAPROB(4,R11),@CF03515                             0191
*     ELSE                                                         0192
*       IF CTGFVDCH->CTGFVSPC^=N THEN                              0192
*                                                                  0192
         B     @RC00190                                            0192
@RF00190 L     @10,CCACPL(,R11)                                    0192
         L     @10,CTGFVT(,@10)                                    0192
         L     @10,CTGFVDCH(,@10)                                  0192
         ICM   @05,15,CTGFVSPC(@10)                                0192
         BZ    @RF00192                                            0192
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AN', CCAREASN=RSN10, CCARETRN=RCINCNPM    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0193
*         CCAPROB=IGGSEGID+(RSN10*K256)+RCINCNPM;/*          @Y30SSSG
*                                      ERROR - INCONSISTANT  @Y30SSSG
*                                      PARAMETERS-SPACE PARMS ON BOTH
*                                      CLUSTER AND DATA FVT          */
         MVC   CCAPROB(4,R11),@CF03518                             0193
*       ELSE                                                       0194
*         ;                                                        0194
@RF00192 DS    0H                                                  0195
*   ELSE                                                           0195
*     IF CTGFVDCH->CTGFVSPC=N THEN                                 0195
*                                                                  0195
         B     @RC00189                                            0195
@RF00189 L     @10,CCACPL(,R11)                                    0195
         L     @10,CTGFVT(,@10)                                    0195
         L     @10,CTGFVDCH(,@10)                                  0195
         ICM   @05,15,CTGFVSPC(@10)                                0195
         BNZ   @RF00195                                            0195
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AN', CCAREASN=RSN16, CCARETRN=RCMISPAR      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0196
*       CCAPROB=IGGSEGID+(RSN16*K256)+RCMISPAR;/*            @Y30SSSG
*                                      ERROR - MISSING REQUIRED    0196
*                                      PARAMETER - NO SPACE PARM ON
*                                      CLUSTER OR DATA FVT           */
         MVC   CCAPROB(4,R11),@CF03520                             0196
*     ELSE                                                         0197
*       IF CTGFVDCH->CTGFVSPC->CTGFLPT(1)=N THEN                   0197
*                                                                  0197
         B     @RC00195                                            0197
@RF00195 L     @10,CCACPL(,R11)                                    0197
         L     @10,CTGFVT(,@10)                                    0197
         L     @10,CTGFVDCH(,@10)                                  0197
         L     @10,CTGFVSPC(,@10)                                  0197
         ICM   @05,15,CTGFLPT(@10)                                 0197
         BNZ   @RF00197                                            0197
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AN', CCAREASN=RSN28, CCARETRN=RCINPTR     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0198
*         CCAPROB=IGGSEGID+(RSN28*K256)+RCINPTR;/*           @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0198
*                                      DATA SPACE PARM FPL           */
         MVC   CCAPROB(4,R11),@CF03523                             0198
*       ELSE                                                       0199
*         ;                                                        0199
@RF00197 DS    0H                                                  0200
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
@RC00195 DS    0H                                                  0200
@RC00189 CLI   CCACD1(R11),0                                       0200
         BNE   @RF00200                                            0200
*     IF CTGFVICH^=N THEN           /* INDEXED CLUSTER               */
         SLR   @10,@10                                             0201
         L     @05,CCACPL(,R11)                                    0201
         L     @05,CTGFVT(,@05)                                    0201
         L     @05,CTGFVICH(,@05)                                  0201
         CR    @05,@10                                             0201
         BE    @RF00201                                            0201
*       IF CTGFVICH->CTGFVSPC^=N THEN/* PTR EXIST            @Y30SSSG*/
         L     @05,CTGFVSPC(,@05)                                  0202
         CR    @05,@10                                             0202
         BE    @RF00202                                            0202
*         IF CTGFVICH->CTGFVSPC->CTGFLPT(1)=N THEN                 0203
*                                                                  0203
         C     @10,CTGFLPT(,@05)                                   0203
         BNE   @RF00203                                            0203
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN30, CCARETRN=RCINPTR   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0204
*           CCAPROB=IGGSEGID+(RSN30*K256)+RCINPTR;/*         @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0204
*                                      INDEX SPACE PARM FPL          */
         MVC   CCAPROB(4,R11),@CF03526                             0204
*         ELSE                                                     0205
*           ;                                                      0205
@RF00203 DS    0H                                                  0206
*       ELSE                                                       0206
*         ;                                                        0206
@RF00202 DS    0H                                                  0207
*     ELSE                                                         0207
*       ;                                                          0207
@RF00201 DS    0H                                                  0208
*   ELSE                                                           0208
*     ;                                                            0208
*                                                                  0208
@RF00200 DS    0H                                                  0209
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF IGGPDSPF                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0209
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0209
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDBSF');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDBSF'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0212
@EF00003 DS    0H                                                  0212
@ER00003 BR    @14                                                 0212
@PB00003 DS    0H                                                  0213
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0214
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDBSF  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0214
*IGGPDBSF:                                                         0214
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0214
IGGPDBSF DS    0H                                                  0215
*Z019:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z019DBSF:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0215
*    (R5,                                                          0215
*     R6,                                                          0215
*     R7,                                                          0215
*     R8,                                                          0215
*     R9,                                                          0215
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z019     DS    0H                                                  0215
Z019DBSF DS    0H                                                  0216
*   RFY                                                            0216
*    (R2,                                                          0216
*     R3,                                                          0216
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0218
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* BUFFER SIZE FPL STRUCTURE PROCESSING SEGMENT                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0219
*   IF CCACD1=RCS THEN                                             0219
         CLI   CCACD1(R11),0                                       0219
         BNE   @RF00219                                            0219
*     DO;                                                          0220
*                                                                  0220
*       /*************************************************************/
*       /*                                                           */
*       /* IF BUFFER SIZE FPL STRUCTURE FOUND ATTACH IT TO DATA FVT  */
*       /* STRUCTURE                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0221
*       DCWIX=DCWIX&&DCWIX;         /* CLEAR INDICATOR OF BUFFER SIZE
*                                      FPL STRUCTURE FOUND   @Y30SSSG*/
*                                                                  0221
         L     @10,CCACMSWA(,R11)                                  0221
         LH    @05,DCWIX(,@10)                                     0221
         LR    @15,@05                                             0221
         XR    @15,@05                                             0221
         STH   @15,DCWIX(,@10)                                     0221
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS DATA FVT FIRST                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0222
*       IF CTGFVDCH->CTGFVBUF^=N THEN/* FPL PTR EXIST        @Y30SSSG*/
         SLR   @10,@10                                             0222
         L     @05,CCACPL(,R11)                                    0222
         L     @05,CTGFVT(,@05)                                    0222
         L     @05,CTGFVDCH(,@05)                                  0222
         L     @05,CTGFVBUF(,@05)                                  0222
         CR    @05,@10                                             0222
         BE    @RF00222                                            0222
*         IF CTGFVDCH->CTGFVBUF->CTGFLPT(1)=N THEN                 0223
*                                                                  0223
         C     @10,CTGFLPT(,@05)                                   0223
         BNE   @RF00223                                            0223
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN32, CCARETRN=RCINPTR   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0224
*           CCAPROB=IGGSEGID+(RSN32*K256)+RCINPTR;/*         @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0224
*                                      DATA FVT BUFFER SIZE FPL      */
         MVC   CCAPROB(4,R11),@CF03529                             0224
*         ELSE                                                     0225
*           DCWIX=DCWIX+ONE;        /* SET INDICATOR THAT BUFFER SIZE
*                                      FPL AND VALUE FOUND           */
         B     @RC00223                                            0225
@RF00223 L     @10,CCACMSWA(,R11)                                  0225
         LA    @05,1                                               0225
         AH    @05,DCWIX(,@10)                                     0225
         STH   @05,DCWIX(,@10)                                     0225
*       ELSE                                                       0226
*         ;                                                        0226
@RF00222 DS    0H                                                  0227
*     END;                                                         0227
*   ELSE                                                           0228
*     ;                                                            0228
*                                                                  0228
@RF00219 DS    0H                                                  0229
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS CLUSTER FVT                                   @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0229
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
@RC00219 CLI   CCACD1(R11),0                                       0229
         BNE   @RF00229                                            0229
*     IF CTGFVBUF^=N THEN           /* BUFFER SIZE FPL EXIST @Y30SSSG*/
         SLR   @10,@10                                             0230
         L     @05,CCACPL(,R11)                                    0230
         L     @05,CTGFVT(,@05)                                    0230
         L     @15,CTGFVBUF(,@05)                                  0230
         CR    @15,@10                                             0230
         BE    @RF00230                                            0230
*       IF DCWIX=N THEN             /* BUFF SIZE NOT PREVIOUSLY FOUND*/
         L     @14,CCACMSWA(,R11)                                  0231
         LH    @09,DCWIX(,@14)                                     0231
         CR    @09,@10                                             0231
         BNE   @RF00231                                            0231
*         IF CTGFVBUF->CTGFLPT(1)^=N THEN/* BUFF SIZE ON CL FPL      */
         C     @10,CTGFLPT(,@15)                                   0232
         BE    @RF00232                                            0232
*           DO;                                                    0233
*             CTGFVDCH->CTGFVBUF=CTGFVBUF;/* ATTACH CLUSTER FPL TO 0234
*                                      DATA FVT                      */
         L     @10,CTGFVDCH(,@05)                                  0234
         ST    @15,CTGFVBUF(,@10)                                  0234
*             DCWIX=DCWIX+ONE;      /* SET INDICATOR THAT BUFFER SIZE
*                                      FPL AND VALUE FOUND           */
         AH    @09,@CH00048                                        0235
         STH   @09,DCWIX(,@14)                                     0235
*           END;                                                   0236
*         ELSE                                                     0237
*                                                                  0237
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN34, CCARETRN=RCINPTR   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0237
*           CCAPROB=IGGSEGID+(RSN34*K256)+RCINPTR;/*         @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0237
*                                      CLUSTER BUFFER SIZE FPL       */
         B     @RC00232                                            0237
@RF00232 MVC   CCAPROB(4,R11),@CF03532                             0237
*       ELSE                                                       0238
*                                                                  0238
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AN', CCAREASN=RSN12, CCARETRN=RCINCNPM    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0238
*         CCAPROB=IGGSEGID+(RSN12*K256)+RCINCNPM;/*          @Y30SSSG
*                                      ERROR - BUFFER SIZE VALUE   0238
*                                      SPECFIED MORE THAN ONCE       */
         B     @RC00231                                            0238
@RF00231 MVC   CCAPROB(4,R11),@CF03534                             0238
*     ELSE                                                         0239
*       ;                                                          0239
@RF00230 DS    0H                                                  0240
*   ELSE                                                           0240
*     ;                                                            0240
@RF00229 DS    0H                                                  0241
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
@RC00229 CLI   CCACD1(R11),0                                       0241
         BNE   @RF00241                                            0241
*     IF CTGFVICH^=N THEN           /* INDEXED CLUSTER               */
         SLR   @10,@10                                             0242
         L     @05,CCACPL(,R11)                                    0242
         L     @05,CTGFVT(,@05)                                    0242
         L     @15,CTGFVICH(,@05)                                  0242
         CR    @15,@10                                             0242
         BE    @RF00242                                            0242
*       IF CTGFVICH->CTGFVBUF^=N THEN/* BUFF SIZE FPL EXIST          */
         L     @15,CTGFVBUF(,@15)                                  0243
         CR    @15,@10                                             0243
         BE    @RF00243                                            0243
*         IF DCWIX=N THEN           /* BUFFERSIZE NOT FOUND  @Y30SSSG*/
         L     @01,CCACMSWA(,R11)                                  0244
         CH    @10,DCWIX(,@01)                                     0244
         BNE   @RF00244                                            0244
*           IF CTGFVICH->CTGFVBUF->CTGFLPT(1)^=N THEN/* BUFFER SIZE
*                                      ON INDEX FPL          @Y30SSSG*/
         C     @10,CTGFLPT(,@15)                                   0245
         BE    @RF00245                                            0245
*             CTGFVDCH->CTGFVBUF=CTGFVICH->CTGFVBUF;/* ATTACH INDEX
*                                      FPL TO DATA FVT               */
         L     @10,CTGFVDCH(,@05)                                  0246
         ST    @15,CTGFVBUF(,@10)                                  0246
*           ELSE                                                   0247
*                                                                  0247
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='AN', CCAREASN=RSN36, CCARETRN=RCINPTR */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0247
*             CCAPROB=IGGSEGID+(RSN36*K256)+RCINPTR;/*       @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0247
*                                      INDEX BUFFER SIZE FPL         */
         B     @RC00245                                            0247
@RF00245 MVC   CCAPROB(4,R11),@CF03537                             0247
*         ELSE                                                     0248
*                                                                  0248
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN12, CCARETRN=RCINCNPM  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0248
*           CCAPROB=IGGSEGID+(RSN12*K256)+RCINCNPM;/*        @Y30SSSG
*                                      ERROR - BUFFER SIZE VALUE   0248
*                                      SPECIFIED MORE THAN ONCE      */
         B     @RC00244                                            0248
@RF00244 MVC   CCAPROB(4,R11),@CF03534                             0248
*       ELSE                                                       0249
*         ;                                                        0249
@RF00243 DS    0H                                                  0250
*     ELSE                                                         0250
*       ;                                                          0250
@RF00242 DS    0H                                                  0251
*   ELSE                                                           0251
*     ;                                                            0251
*                                                                  0251
@RF00241 DS    0H                                                  0252
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS BUFFER SIZE FOR CATALOG DEFINE                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0252
*   IF CCACD1=RCS&                  /* SUCCESSFUL            @Y30SSSG*/
*       (CTGTYPE=CTGTMCAT×CTGTYPE=CTGTUCAT) THEN/* MASTER OR USER  0252
*                                      CATALOG DEFINE                */
@RC00241 CLI   CCACD1(R11),0                                       0252
         BNE   @RF00252                                            0252
         L     @10,CCACPL(,R11)                                    0252
         CLI   CTGTYPE(@10),C'M'                                   0252
         BE    @RT00252                                            0252
         CLI   CTGTYPE(@10),C'U'                                   0252
         BNE   @RF00252                                            0252
@RT00252 DS    0H                                                  0253
*     IF CTGFVDCH->CTGFVBUF=N THEN  /* BUFFER SIZE EXIST             */
*                                                                  0253
         L     @10,CCACPL(,R11)                                    0253
         L     @10,CTGFVT(,@10)                                    0253
         L     @10,CTGFVDCH(,@10)                                  0253
         ICM   @05,15,CTGFVBUF(@10)                                0253
         BNZ   @RF00253                                            0253
*       /*************************************************************/
*       /*                                                           */
*       /* ATTACH WORKAREA FPL AND FIELD AND SET MINIMUM VALUE       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0254
*       DO;                                                        0254
*         CTGFVDCH->CTGFVBUF=ADDR(DCWPLBFL);                       0255
         L     @05,CCACMSWA(,R11)                                  0255
         LA    @05,DCWPLBFL(,@05)                                  0255
         ST    @05,CTGFVBUF(,@10)                                  0255
*         CTGFVDCH->CTGFVBUF->CTGFLPT(1)->BUFSIZE=CATBUFSZ;        0256
         L     @10,CTGFLPT(,@05)                                   0256
         MVC   BUFSIZE(4,@10),@CF03313                             0256
*       END;                                                       0257
*     ELSE                                                         0258
*       IF CTGFVDCH->CTGFVBUF->CTGFLPT(1)->BUFSIZE<CATBUFSZ THEN   0258
*                                                                  0258
         B     @RC00253                                            0258
@RF00253 LA    @10,3072                                            0258
         L     @05,CCACPL(,R11)                                    0258
         L     @05,CTGFVT(,@05)                                    0258
         L     @05,CTGFVDCH(,@05)                                  0258
         L     @05,CTGFVBUF(,@05)                                  0258
         L     @05,CTGFLPT(,@05)                                   0258
         C     @10,BUFSIZE(,@05)                                   0258
         BNH   @RF00258                                            0258
*         /***********************************************************/
*         /*                                                         */
*         /* INCREASE TO MINIMUM BUFFER SIZE                         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0259
*         CTGFVDCH->CTGFVBUF->CTGFLPT(1)->BUFSIZE=CATBUFSZ;        0259
         ST    @10,BUFSIZE(,@05)                                   0259
*       ELSE                                                       0260
*         ;                                                        0260
@RF00258 DS    0H                                                  0261
*   ELSE                                                           0261
*     ;                                                            0261
*                                                                  0261
@RF00252 DS    0H                                                  0262
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF IGGPDBSF                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0262
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00252 BAL   @14,EXIT                                            0262
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDALR');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDALR'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0265
@EF00004 DS    0H                                                  0265
@ER00004 BR    @14                                                 0265
@PB00004 DS    0H                                                  0266
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0267
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDALR  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0267
*IGGPDALR:                                                         0267
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0267
IGGPDALR DS    0H                                                  0268
*Z025:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z025DALR:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0268
*    (R5,                                                          0268
*     R6,                                                          0268
*     R7,                                                          0268
*     R8,                                                          0268
*     R9,                                                          0268
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z025     DS    0H                                                  0268
Z025DALR DS    0H                                                  0269
*   RFY                                                            0269
*    (R2,                                                          0269
*     R3,                                                          0269
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0271
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* AVERAGE LOGICAL RECORD SIZE FPL STRUCTURE PROCESSING SEG      */
*   /* PROCESS AVERAGE LOGICAL RECORD SIZE FPL STRUCTURE             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   IF CTGFVICH^=N THEN             /* INDEXED CLUSTER               */
         SLR   @10,@10                                             0272
         L     @05,CCACPL(,R11)                                    0272
         L     @05,CTGFVT(,@05)                                    0272
         L     @05,CTGFVICH(,@05)                                  0272
         CR    @05,@10                                             0272
         BE    @RF00272                                            0272
*     IF CTGFVICH->CTGFVLRS^=N THEN /* AVE LOG RCD SIZE EXIST        */
*                                                                  0273
         C     @10,CTGFVLRS(,@05)                                  0273
         BE    @RF00273                                            0273
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AN', CCAREASN=RSN14, CCARETRN=RCINCNPM      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0274
*       CCAPROB=IGGSEGID+(RSN14*K256)+RCINCNPM;/*            @Y30SSSG
*                                      ERROR - AVE. LOG. RECORD SIZE
*                                      SPECIFIED ON INDEX FVT        */
         MVC   CCAPROB(4,R11),@CF03540                             0274
*     ELSE                                                         0275
*       ;                                                          0275
@RF00273 DS    0H                                                  0276
*   ELSE                                                           0276
*     ;                                                            0276
*                                                                  0276
@RF00272 DS    0H                                                  0277
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS CATALOG DEFINE OR NORMAL DEFINE AVE.LOG.REC.SIZE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0277
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0277
         BNE   @RF00277                                            0277
*     IF CTGTYPE=CTGTMCAT×CTGTYPE=CTGTUCAT THEN/* MASTER OR USER CAT
*                                      DEFINE                @Y30SSSG*/
         L     @10,CCACPL(,R11)                                    0278
         CLI   CTGTYPE(@10),C'M'                                   0278
         BE    @RT00278                                            0278
         CLI   CTGTYPE(@10),C'U'                                   0278
         BNE   @RF00278                                            0278
@RT00278 DS    0H                                                  0279
*       IF CTGFVDCH->CTGFVLRS=N&CTGFVLRS=N THEN/* AVE LOG RCD SIZE 0279
*                                      EXIST                         */
*                                                                  0279
         SLR   @10,@10                                             0279
         L     @05,CCACPL(,R11)                                    0279
         L     @05,CTGFVT(,@05)                                    0279
         L     @15,CTGFVDCH(,@05)                                  0279
         C     @10,CTGFVLRS(,@15)                                  0279
         BNE   @RF00279                                            0279
         C     @10,CTGFVLRS(,@05)                                  0279
         BNE   @RF00279                                            0279
*         /***********************************************************/
*         /*                                                         */
*         /* ATTACH AVE.LOG.REC.SIZE FPL AND FIELD IN WORKAREA TO    */
*         /* DATA FVT AND SET VALUE FOR CATALOG                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0280
*         DO;                       /* NO                    @Y30SSSG*/
*           CTGFVDCH->CTGFVLRS=ADDR(DCWPLARL);                     0281
         L     @10,CCACMSWA(,R11)                                  0281
         LA    @10,DCWPLARL(,@10)                                  0281
         ST    @10,CTGFVLRS(,@15)                                  0281
*           CTGFVDCH->CTGFVLRS->CTGFLPT(1)->LRECL=CATLRECL;        0282
         L     @10,CTGFLPT(,@10)                                   0282
         MVC   LRECL(4,@10),@CF03311                               0282
*         END;                                                     0283
*       ELSE                                                       0284
*                                                                  0284
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AN', CCAREASN=RSN16, CCARETRN=RCINCNPM    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0284
*         CCAPROB=IGGSEGID+(RSN16*K256)+RCINCNPM;/*          @Y30SSSG
*                                      ERROR - AVE.LOG.REC.SIZE WAS
*                                      SPECIFIED ON CATALOG DEFINE   */
         B     @RC00279                                            0284
@RF00279 MVC   CCAPROB(4,R11),@CF03541                             0284
*     ELSE                          /* NOT MASTER OR USER CAT DEFINE */
*       DO;                                                        0285
*                                                                  0285
         B     @RC00278                                            0285
@RF00278 DS    0H                                                  0286
*         /***********************************************************/
*         /*                                                         */
*         /* ATTACH AVERAGE LOGICAL RECORD SIZE FPL TO DATA FVT IF ON*/
*         /* CLUSTER FVT                                             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0286
*         DCWIX=DCWIX&&DCWIX;       /* CLEAR INDICATOR               */
         L     @10,CCACMSWA(,R11)                                  0286
         LH    @05,DCWIX(,@10)                                     0286
         LR    @15,@05                                             0286
         XR    @15,@05                                             0286
         STH   @15,DCWIX(,@10)                                     0286
*         IF CTGFVDCH->CTGFVLRS^=N THEN/* AVE LOG RCD SIZE EXIST     */
         SLR   @10,@10                                             0287
         L     @05,CCACPL(,R11)                                    0287
         L     @05,CTGFVT(,@05)                                    0287
         L     @05,CTGFVDCH(,@05)                                  0287
         L     @05,CTGFVLRS(,@05)                                  0287
         CR    @05,@10                                             0287
         BE    @RF00287                                            0287
*           IF CTGFVDCH->CTGFVLRS->CTGFLPT(1)=N THEN               0288
*                                                                  0288
         C     @10,CTGFLPT(,@05)                                   0288
         BNE   @RF00288                                            0288
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='AN', CCAREASN=RSN38, CCARETRN=RCINPTR */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0289
*             CCAPROB=IGGSEGID+(RSN38*K256)+RCINPTR;/*       @X04SVSG
*                                      ERROR - NP PTR TO VALUE IN  0289
*                                      DATA AVERAGE LOGICAL RECORD 0289
*                                      SIZE FPL                      */
         MVC   CCAPROB(4,R11),@CF03544                             0289
*           ELSE                                                   0290
*             DCWIX=DCWIX+ONE;      /* SET VALUE FOUND INDICATOR     */
         B     @RC00288                                            0290
@RF00288 L     @10,CCACMSWA(,R11)                                  0290
         LA    @05,1                                               0290
         AH    @05,DCWIX(,@10)                                     0290
         STH   @05,DCWIX(,@10)                                     0290
*         ELSE                                                     0291
*           ;                                                      0291
@RF00287 DS    0H                                                  0292
*         IF CCACD1=N THEN          /* SUCCESS               @Y30SSSG*/
@RC00287 CLI   CCACD1(R11),0                                       0292
         BNE   @RF00292                                            0292
*           IF CTGFVLRS^=N THEN     /* AVE LOG RCD SIZE EXIST        */
         SLR   @10,@10                                             0293
         L     @05,CCACPL(,R11)                                    0293
         L     @05,CTGFVT(,@05)                                    0293
         L     @05,CTGFVLRS(,@05)                                  0293
         CR    @05,@10                                             0293
         BE    @RF00293                                            0293
*             IF DCWIX=N THEN       /* VALUE NOT FOUND PREVIOUSLY    */
         L     @01,CCACMSWA(,R11)                                  0294
         CH    @10,DCWIX(,@01)                                     0294
         BNE   @RF00294                                            0294
*               IF CTGFVLRS->CTGFLPT(1)=N THEN                     0295
*                                                                  0295
         C     @10,CTGFLPT(,@05)                                   0295
         BNE   @RF00295                                            0295
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET CCAMODID='AN', CCAREASN=RSN38,              */
*                 /* CCARETRN=RCINPTR                                */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0296
*                 CCAPROB=IGGSEGID+(RSN38*K256)+RCINPTR;/*   @X04SVSG
*                                      ERROR - NO PTR TO VALUE IN  0296
*                                      CLUSTER LOG. REC. SIZE FPL    */
         MVC   CCAPROB(4,R11),@CF03544                             0296
*               ELSE                /* VALUE FOUND           @Y30SSSG*/
*                 DO;                                              0297
         B     @RC00295                                            0297
@RF00295 DS    0H                                                  0298
*                   CTGFVDCH->CTGFVLRS=CTGFVLRS;/* ATTACH CLUSTER FPL
*                                      TO DATA FVT                   */
         L     @10,CCACPL(,R11)                                    0298
         L     @10,CTGFVT(,@10)                                    0298
         L     @05,CTGFVDCH(,@10)                                  0298
         MVC   CTGFVLRS(4,@05),CTGFVLRS(@10)                       0298
*                   DCWIX=DCWIX+ONE;/* SET VALUE FOUND INDICATOR     */
         L     @10,CCACMSWA(,R11)                                  0299
         LA    @05,1                                               0299
         AH    @05,DCWIX(,@10)                                     0299
         STH   @05,DCWIX(,@10)                                     0299
*                 END;                                             0300
*             ELSE                                                 0301
*                                                                  0301
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='AN', CCAREASN=RSN18,                */
*               /* CCARETRN=RCINCNPM                                 */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0301
*               CCAPROB=IGGSEGID+(RSN18*K256)+RCINCNPM;/*    @Y30SSSG
*                                      ERROR - AVE. LOG. REC. SIZE 0301
*                                      SPECIFIED ON BOTH CLUSTER AND
*                                      DATA FVT                      */
         B     @RC00294                                            0301
@RF00294 MVC   CCAPROB(4,R11),@CF03547                             0301
*           ELSE                                                   0302
*             ;                                                    0302
@RF00293 DS    0H                                                  0303
*         ELSE                                                     0303
*           ;                                                      0303
@RF00292 DS    0H                                                  0304
*         IF DCWIX=N THEN           /* VALUE NEVER FOUND     @Y30SSSG*/
*                                                                  0304
@RC00292 L     @10,CCACMSWA(,R11)                                  0304
         ICM   @05,3,DCWIX(@10)                                    0304
         BNZ   @RF00304                                            0304
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN18, CCARETRN=RCMISPAR  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0305
*           CCAPROB=IGGSEGID+(RSN18*K256)+RCMISPAR;/*        @Y30SSSG
*                                      ERROR - REQUIRED AVE.LOG.   0305
*                                      RECORD SIZE NOT SPECIFIED     */
         MVC   CCAPROB(4,R11),@CF03548                             0305
*         ELSE                                                     0306
*           ;                                                      0306
@RF00304 DS    0H                                                  0307
*       END;                                                       0307
*   ELSE                                                           0308
*     ;                                                            0308
*                                                                  0308
@RF00277 DS    0H                                                  0309
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF IGGPDALR                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0309
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00277 BAL   @14,EXIT                                            0309
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDRDA');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDRDA'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0312
@EF00005 DS    0H                                                  0312
@ER00005 BR    @14                                                 0312
@PB00005 DS    0H                                                  0313
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0314
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDRDA  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0314
*IGGPDRDA:                                                         0314
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0314
IGGPDRDA DS    0H                                                  0315
*   GEN(ENTRY IGGPDRDA );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPDRDA
*Z032:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z032DRDA:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0316
*    (R5,                                                          0316
*     R6,                                                          0316
*     R7,                                                          0316
*     R8,                                                          0316
*     R9,                                                          0316
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z032     DS    0H                                                  0316
Z032DRDA DS    0H                                                  0317
*   RFY                                                            0317
*    (R2,                                                          0317
*     R3,                                                          0317
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0322
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30SSSG*/
*   /* REGULAR DEFINE AMDSB PROCESSING SEGMENT                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0323
*   IF CCACD1=RCS&CTGFVICH^=N THEN  /* INDEXED CLUSTER               */
         CLI   CCACD1(R11),0                                       0323
         BNE   @RF00323                                            0323
         SLR   @10,@10                                             0323
         L     @05,CCACPL(,R11)                                    0323
         L     @05,CTGFVT(,@05)                                    0323
         L     @15,CTGFVICH(,@05)                                  0323
         CR    @15,@10                                             0323
         BE    @RF00323                                            0323
*     DO;                                                          0324
*                                                                  0324
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS KEY SPECIFICATION IN AMDSB                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0325
*       IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN^=N THEN/* DATA 0325
*                                      KEYLENGTH SPECIFIED           */
         L     @05,CTGFVDCH(,@05)                                  0325
         L     @05,CTGFVAMD(,@05)                                  0325
         L     @05,CTGFLPT(,@05)                                   0325
         LH    @05,AMDKEYLN(,@05)                                  0325
         CR    @05,@10                                             0325
         BE    @RF00325                                            0325
*         IF CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN=N THEN/* INDEX
*                                      KEYLENGTH NOT SPECIFIED       */
         L     @01,CTGFVAMD(,@15)                                  0326
         L     @15,CTGFLPT(,@01)                                   0326
         CH    @10,AMDKEYLN(,@15)                                  0326
         BNE   @RF00326                                            0326
*           CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN=/* SET INDEX    */
*               CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN;/* FROM DATA*/
         STH   @05,AMDKEYLN(,@15)                                  0327
*         ELSE                      /* INDEX KEYLENGTH SPECIFIED     */
*           IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN^=CTGFVICH->
*               CTGFVAMD->CTGFLPT(1)->AMDKEYLN THEN/* KEYLENGTH NOT
*                                      EQUAL                 @Y30SSSG*/
         B     @RC00326                                            0328
@RF00326 L     @10,CCACPL(,R11)                                    0328
         L     @10,CTGFVT(,@10)                                    0328
         L     @05,CTGFVDCH(,@10)                                  0328
         L     @05,CTGFVAMD(,@05)                                  0328
         L     @05,CTGFLPT(,@05)                                   0328
         L     @10,CTGFVICH(,@10)                                  0328
         L     @10,CTGFVAMD(,@10)                                  0328
         L     @10,CTGFLPT(,@10)                                   0328
         CLC   AMDKEYLN(2,@05),AMDKEYLN(@10)                       0328
         BE    @RF00328                                            0328
*             DO;                   /*                       @Y30SSSG*/
*                                                                  0329
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='AN', CCAREASN=RSN20,                */
*               /* CCARETRN=RCINCNPM                                 */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0330
*               CCAPROB=IGGSEGID+(RSN20*K256)+RCINCNPM;/*    @Y30SSSG
*                                      INCONSISTENT KEY      @Y30SSSG
*                                      LENGTHS SPECIFIED     @Y30SSSG*/
         MVC   CCAPROB(4,R11),@CF03551                             0330
*             END;                  /*                       @Y30SSSG*/
*           ELSE                                                   0332
*             ;                                                    0332
@RF00328 DS    0H                                                  0333
*       ELSE                        /* DATA KEYLENGTH ZERO   @Y30SSSG*/
*         IF CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN^=N THEN/* INDEX
*                                      KEYLENGTH SPECIFIED           */
         B     @RC00325                                            0333
@RF00325 L     @10,CCACPL(,R11)                                    0333
         L     @10,CTGFVT(,@10)                                    0333
         L     @05,CTGFVICH(,@10)                                  0333
         L     @05,CTGFVAMD(,@05)                                  0333
         L     @05,CTGFLPT(,@05)                                   0333
         LH    @05,AMDKEYLN(,@05)                                  0333
         LTR   @05,@05                                             0333
         BZ    @RF00333                                            0333
*           CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN=/* SET DATA     */
*               CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDKEYLN;/* FROM   0334
*                                      INDEX                         */
         L     @10,CTGFVDCH(,@10)                                  0334
         L     @10,CTGFVAMD(,@10)                                  0334
         L     @10,CTGFLPT(,@10)                                   0334
         STH   @05,AMDKEYLN(,@10)                                  0334
*         ELSE                      /* INDEX KEYLENGTH NOT SPECIFIED */
*                                                                  0335
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN20, CCARETRN=RCMISPAR  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0335
*           CCAPROB=IGGSEGID+(RSN20*K256)+RCMISPAR;/* NO KEY @Y30SSSG
*                                      LENGTHS SPECIFIED     @Y30SSSG
*                                      SPECIFIED                     */
         B     @RC00333                                            0335
@RF00333 MVC   CCAPROB(4,R11),@CF03552                             0335
*       IF CCACD1=RCS THEN          /* SUCCESSFUL            @Y30SSSG*/
@RC00333 DS    0H                                                  0336
@RC00325 CLI   CCACD1(R11),0                                       0336
         BNE   @RF00336                                            0336
*         IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDRKP^=N THEN/* DATA 0337
*                                      REL KEY POS NOT ZERO          */
         SLR   @10,@10                                             0337
         L     @05,CCACPL(,R11)                                    0337
         L     @05,CTGFVT(,@05)                                    0337
         L     @01,CTGFVDCH(,@05)                                  0337
         L     @01,CTGFVAMD(,@01)                                  0337
         L     @01,CTGFLPT(,@01)                                   0337
         LH    @15,AMDRKP(,@01)                                    0337
         CR    @15,@10                                             0337
         BE    @RF00337                                            0337
*           IF CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDRKP=N THEN/* INDEX
*                                      REL KEY POS ZERO              */
         L     @05,CTGFVICH(,@05)                                  0338
         L     @05,CTGFVAMD(,@05)                                  0338
         L     @05,CTGFLPT(,@05)                                   0338
         CH    @10,AMDRKP(,@05)                                    0338
         BNE   @RF00338                                            0338
*             CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDRKP=/* SET INDEX    */
*                 CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDRKP;/* FROM DATA*/
         STH   @15,AMDRKP(,@05)                                    0339
*           ELSE                    /* INDEX REL KEY POS NOT ZERO    */
*             IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDRKP^=CTGFVICH->
*                 CTGFVAMD->CTGFLPT(1)->AMDRKP THEN/* KEY POS NOT  0340
*                                      EQUAL                 @Y30SSSG*/
*                                                                  0340
         B     @RC00338                                            0340
@RF00338 L     @10,CCACPL(,R11)                                    0340
         L     @10,CTGFVT(,@10)                                    0340
         L     @05,CTGFVDCH(,@10)                                  0340
         L     @05,CTGFVAMD(,@05)                                  0340
         L     @05,CTGFLPT(,@05)                                   0340
         L     @10,CTGFVICH(,@10)                                  0340
         L     @10,CTGFVAMD(,@10)                                  0340
         L     @10,CTGFLPT(,@10)                                   0340
         CLC   AMDRKP(2,@05),AMDRKP(@10)                           0340
         BE    @RF00340                                            0340
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='AN', CCAREASN=RSN20,                */
*               /* CCARETRN=RCINCNPM                                 */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0341
*               CCAPROB=IGGSEGID+(RSN20*K256)+RCINCNPM;/*    @Y30SSSG
*                                      ERROR - INCONSISTENT KEY    0341
*                                      POSITIONS SPECIFIED           */
         MVC   CCAPROB(4,R11),@CF03551                             0341
*             ELSE                                                 0342
*               ;                                                  0342
@RF00340 DS    0H                                                  0343
*         ELSE                                                     0343
*           IF CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDRKP^=N THEN      0343
         B     @RC00337                                            0343
@RF00337 L     @10,CCACPL(,R11)                                    0343
         L     @10,CTGFVT(,@10)                                    0343
         L     @05,CTGFVICH(,@10)                                  0343
         L     @05,CTGFVAMD(,@05)                                  0343
         L     @05,CTGFLPT(,@05)                                   0343
         LH    @05,AMDRKP(,@05)                                    0343
         LTR   @05,@05                                             0343
         BZ    @RF00343                                            0343
*             CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDRKP=/* SET DATA     */
*                 CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDRKP;/* FROM   0344
*                                      INDEX                         */
         L     @10,CTGFVDCH(,@10)                                  0344
         L     @10,CTGFVAMD(,@10)                                  0344
         L     @10,CTGFLPT(,@10)                                   0344
         STH   @05,AMDRKP(,@10)                                    0344
*           ELSE                                                   0345
*             ;                                                    0345
@RF00343 DS    0H                                                  0346
*       ELSE                                                       0346
*         ;                                                        0346
@RF00336 DS    0H                                                  0347
*       IF CCACD1=RCS THEN          /* SUCCESSFUL            @Y30SSSG*/
@RC00336 CLI   CCACD1(R11),0                                       0347
         BNE   @RF00347                                            0347
*         DO;                                                      0348
*                                                                  0348
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS ATTRIBUTES IN AMDSB FOR CONSISTENCY BETWEEN   */
*           /* DATA AND INDEX INSURE ESDS ORGANIZATION IN INDEX AMDSB*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0349
*           CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDDST='0'B;/* SET KEY 0349
*                                      OFF                   @Y30SSSG*/
         L     @10,CCACPL(,R11)                                    0349
         L     @10,CTGFVT(,@10)                                    0349
         L     @05,CTGFVICH(,@10)                                  0349
         L     @05,CTGFVAMD(,@05)                                  0349
         L     @05,CTGFLPT(,@05)                                   0349
         NI    AMDDST(@05),B'01111111'                             0349
*           IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDSDT=ON THEN/*    0350
*                                      SEQUENCE SET WITH DATA        */
*                                                                  0350
         L     @10,CTGFVDCH(,@10)                                  0350
         L     @10,CTGFVAMD(,@10)                                  0350
         L     @10,CTGFLPT(,@10)                                   0350
         TM    AMDSDT(@10),B'00100000'                             0350
         BNO   @RF00350                                            0350
*             /*******************************************************/
*             /*                                                     */
*             /* SET SEQUENCE-SET-WITH-DATA 'ON' IN INDEX AMDSB TO BE*/
*             /* CONSISTENT WITH DATA AMDSB                          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0351
*             CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDSDT=ON;           0351
         OI    AMDSDT(@05),B'00100000'                             0351
*           ELSE                    /* SEQ SET INDICATOR NOT SET     */
*             IF CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDSDT=ON THEN    0352
*                                                                  0352
         B     @RC00350                                            0352
@RF00350 L     @10,CCACPL(,R11)                                    0352
         L     @10,CTGFVT(,@10)                                    0352
         L     @05,CTGFVICH(,@10)                                  0352
         L     @05,CTGFVAMD(,@05)                                  0352
         L     @05,CTGFLPT(,@05)                                   0352
         TM    AMDSDT(@05),B'00100000'                             0352
         BNO   @RF00352                                            0352
*               /*****************************************************/
*               /*                                                   */
*               /* SET SEQUENCE-SET-WITH-DATA 'ON' IN DATA AMDSB TO  */
*               /* BE CONSISTENT WITH INDEX AMDSB                    */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0353
*               CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDSDT=ON;         0353
         L     @10,CTGFVDCH(,@10)                                  0353
         L     @10,CTGFVAMD(,@10)                                  0353
         L     @10,CTGFLPT(,@10)                                   0353
         OI    AMDSDT(@10),B'00100000'                             0353
*             ELSE                                                 0354
*               ;                                                  0354
@RF00352 DS    0H                                                  0355
*         END;                                                     0355
*       ELSE                                                       0356
*         ;                                                        0356
@RF00347 DS    0H                                                  0357
*     END;                                                         0357
*   ELSE                                                           0358
*     ;                                                            0358
@RF00323 DS    0H                                                  0359
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
*                                                                  0359
@RC00323 CLI   CCACD1(R11),0                                       0359
         BNE   @RF00359                                            0359
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS MAXIMUM LOGICAL RECORD SIZE                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0360
*     IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDLRECL=N THEN           0360
         SLR   @10,@10                                             0360
         L     @05,CCACPL(,R11)                                    0360
         L     @05,CTGFVT(,@05)                                    0360
         L     @05,CTGFVDCH(,@05)                                  0360
         L     @01,CTGFVAMD(,@05)                                  0360
         L     @15,CTGFLPT(,@01)                                   0360
         C     @10,AMDLRECL(,@15)                                  0360
         BNE   @RF00360                                            0360
*       IF CTGFVDCH->CTGFVLRS^=N THEN/* IF LRECL GIVEN       @YM04475*/
*                                                                  0361
         L     @05,CTGFVLRS(,@05)                                  0361
         CR    @05,@10                                             0361
         BE    @RF00361                                            0361
*         /***********************************************************/
*         /*                                                         */
*         /* SET DEFAULT OF AVERAGE LOGICAL RECORD SIZE INTO MAXIMUM */
*         /* LOGICAL RECORD SIZE IN AMDSB                            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0362
*         CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDLRECL=CTGFVDCH->CTGFVLRS->
*             CTGFLPT(1)->LRECL;                                   0362
         L     @10,CTGFLPT(,@05)                                   0362
         MVC   AMDLRECL(4,@15),LRECL(@10)                          0362
*       ELSE                        /* LRECL NOT GIVEN       @YM04475*/
*         CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDLRECL=C4096;/* SET MAX
*                                      VALUE                 @YM04475*/
         B     @RC00361                                            0363
@RF00361 L     @10,CCACPL(,R11)                                    0363
         L     @10,CTGFVT(,@10)                                    0363
         L     @10,CTGFVDCH(,@10)                                  0363
         L     @10,CTGFVAMD(,@10)                                  0363
         L     @10,CTGFLPT(,@10)                                   0363
         MVC   AMDLRECL(4,@10),@CF03316                            0363
*     ELSE                                                         0364
*       ;                                                          0364
@RF00360 DS    0H                                                  0365
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
*                                                                  0365
@RC00360 DS    0H                                                  0365
@RF00359 CLI   CCACD1(R11),0                                       0365
         BNE   @RF00365                                            0365
*     /***************************************************************/
*     /*                                                             */
*     /* CALL CALCULATE SPACE PARAMETERS SEGMENT CALL TO MODULE      */
*     /* IGG0CLBX                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0366
*Z036DSPC:                                                         0366
*     CALL IGGPDSPC;                                               0366
Z036DSPC L     @15,@CV00042                                        0366
         BALR  @14,@15                                             0366
*   ELSE                                                           0367
*     ;                                                            0367
@RF00365 DS    0H                                                  0368
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
*                                                                  0368
         CLI   CCACD1(R11),0                                       0368
         BNE   @RF00368                                            0368
*     /***************************************************************/
*     /*                                                             */
*     /* CALL REGULAR SPACE PARAMETERS PROCESSING CALL TO MODULE     */
*     /* IGG0CLBY                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0369
*Z037DRSP:                                                         0369
*     CALL IGGPDRSP;                                               0369
Z037DRSP L     @15,@CV00043                                        0369
         BALR  @14,@15                                             0369
*   ELSE                                                           0370
*     ;                                                            0370
@RF00368 DS    0H                                                  0371
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0371
         BNE   @RF00371                                            0371
*     IF CTGFVTYP^=CTGTAIX THEN     /* IF NOT AIX DEFINE     @X04SVSG*/
         L     @10,CCACPL(,R11)                                    0372
         L     @10,CTGFVT(,@10)                                    0372
         CLI   CTGFVTYP(@10),C'G'                                  0372
         BE    @RF00372                                            0372
*Z038DCCE:                                                         0373
*       CALL IGGPDCCE;              /* BUILD CLUSTER ENTRY   @Y30SSSG*/
Z038DCCE BAL   @14,IGGPDCCE                                        0373
*     ELSE                                                         0374
*       ;                           /* DO NOT BUILD CLUSTER  @Y30SSSG*/
@RF00372 DS    0H                                                  0375
*   ELSE                                                           0375
*     ;                                                            0375
*                                                                  0375
@RF00371 DS    0H                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF IGGPDRDA                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0376
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0376
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCCE');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCCE'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0379
@EF00006 DS    0H                                                  0379
@ER00006 BR    @14                                                 0379
@PB00006 DS    0H                                                  0380
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0381
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCCE  -  PROCEDURE  EXTERNALLY  CALLED  UNNESTED      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0381
*IGGPDCCE:                                                         0381
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0381
IGGPDCCE DS    0H                                                  0382
*   GEN(ENTRY IGGPDCCE );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPDCCE
*Z039:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z039DCCE:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0383
*    (R5,                                                          0383
*     R6,                                                          0383
*     R7,                                                          0383
*     R8,                                                          0383
*     R9,                                                          0383
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z039     DS    0H                                                  0383
Z039DCCE DS    0H                                                  0384
*   RFY                                                            0384
*    (R2,                                                          0384
*     R3,                                                          0384
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0387
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSTRUCT EITHER CATALOG, NORMAL OR AIX CLUSTER ENTRY @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   IF CTGTYPE=CTGTMCAT×CTGTYPE=CTGTUCAT THEN                      0388
*                                                                  0388
         L     @10,CCACPL(,R11)                                    0388
         CLI   CTGTYPE(@10),C'M'                                   0388
         BE    @RT00388                                            0388
         CLI   CTGTYPE(@10),C'U'                                   0388
         BNE   @RF00388                                            0388
@RT00388 DS    0H                                                  0389
*     /***************************************************************/
*     /*                                                             */
*     /* SET UP FOR CATALOG CLUSTER ENTRY                            */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0389
*     DO;                                                          0389
*       CMWACI(1)=CLCINO;           /* SET CLUSTER CI NUMBER         */
         L     @10,CCACMSWA(,R11)                                  0390
         MVC   CMWACI(3,@10),@CF00066+1                            0390
*       CMWACI(2)=DACINO;           /* SET DATA CI NUMBER            */
         SLR   @05,@05                                             0391
         STCM  @05,7,CMWACI+3(@10)                                 0391
*       CMWACI(3)=IXCINO;           /* SET INDEX CI NUMBER           */
         MVC   CMWACI+6(3,@10),@CF00048+1                          0392
*     END;                                                         0393
*   ELSE                                                           0394
*     IF CTGFVTYP^=CTGTAIX THEN     /* IF NOT DEF AIX THEN   @Y30SSSG
*                                      ASSIGN THE CI'S       @Y30SSSG*/
*                                                                  0394
         B     @RC00388                                            0394
@RF00388 L     @10,CCACPL(,R11)                                    0394
         L     @10,CTGFVT(,@10)                                    0394
         CLI   CTGFVTYP(@10),C'G'                                  0394
         BE    @RF00394                                            0394
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP FOR NORMAL CLUSTER ENTRY                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0395
*       DO;                                                        0395
*                                                                  0395
*         /***********************************************************/
*         /*                                                         */
*         /* ASSIGN CI'S                                             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0396
*         IF CTGFVICH=N THEN        /* NON-INDEXED CLUSTER           */
         ICM   @05,15,CTGFVICH(@10)                                0396
         BNZ   @RF00396                                            0396
*           CCAASCIK=NXCLCICT;      /* SET NO. OF CI'S REQUIRED      */
         MVI   CCAASCIK(R11),X'02'                                 0397
*         ELSE                                                     0398
*           CCAASCIK=IXCLCICT;      /* INDEXED CLUSTER               */
         B     @RC00396                                            0398
@RF00396 MVI   CCAASCIK(R11),X'03'                                 0398
*         CMCISREQ=CCAASCIK;        /* SAVE NO. OF CI'S NEEDED       */
*                                                                  0399
@RC00396 L     @10,CCACMSWA(,R11)                                  0399
         MVC   CMCISREQ(1,@10),CCAASCIK(R11)                       0399
*         /***********************************************************/
*         /*                                                         */
*         /* CALL ASSIGN CI SUBFUNCTION CALL TO MODULE IGG0CLAG      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0400
*Z040AOCI:                                                         0400
*         CALL IGGPAOCI;                                           0400
Z040AOCI L     @15,@CV00036                                        0400
         BALR  @14,@15                                             0400
*         IF CCACD1=RCS THEN        /* ASSIGN CI DONE SUCCESSFUL MOVE
*                                      CI VALUES TO WORK AREA.       */
         CLI   CCACD1(R11),0                                       0401
         BNE   @RF00401                                            0401
*           DO;                                                    0402
*             CMWACI(1)=CCAASCI(1); /* CLUSTER                       */
         L     @10,CCACMSWA(,R11)                                  0403
         MVC   CMWACI(3,@10),CCAASCI(R11)                          0403
*             CMWACI(2)=CCAASCI(2); /* DATA                          */
         MVC   CMWACI+3(3,@10),CCAASCI+3(R11)                      0404
*             CMWACI(3)=CCAASCI(3); /* INDEX                         */
         MVC   CMWACI+6(3,@10),CCAASCI+6(R11)                      0405
*           END;                                                   0406
*         ELSE                                                     0407
*           ;                                                      0407
@RF00401 DS    0H                                                  0408
*       END;                                                       0408
*     ELSE                                                         0409
*       ;                           /* NULL ELSE             @Y30SSSG*/
@RF00394 DS    0H                                                  0410
*   IF CCACD1=RCS THEN              /* SUCCESSFUL            @Y30SSSG*/
*                                                                  0410
@RC00388 CLI   CCACD1(R11),0                                       0410
         BNE   @RF00410                                            0410
*     /***************************************************************/
*     /*                                                             */
*     /* CONSTRUCT CLUSTER ENTRY                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0411
*     DO;                                                          0411
*                                                                  0411
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP RAB FOR CONSTRUCTION OF CLUSTER ENTRY              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0412
*       CCAURAB=ADDR(CCARAB2);      /* USE RAB2 FOR CLUSTER ENTRY  0412
*                                      RECORD                        */
         LA    @10,CCARAB2(,R11)                                   0412
         ST    @10,CCAURAB(,R11)                                   0412
*       CCARABB=ADDR(CCARAB2);      /* SET BASE RAB ADDRESS FOR USE
*                                      BY UNDO IF NECESSARY          */
         ST    @10,CCARABB(,R11)                                   0413
*       CCARABFL=CCARABFL&&CCARABFL;/* CLEAR RAB FLAG                */
*                                                                  0414
         SLR   @05,@05                                             0414
         IC    @05,CCARABFL(,@10)                                  0414
         LR    @15,@05                                             0414
         XR    @15,@05                                             0414
         STC   @15,CCARABFL(,@10)                                  0414
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR RECORD AREA                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0415
*       CATRECRD(1,1:256)=CATRECRD(1,1:256)&&CATRECRD(1,1:256);    0415
         L     @10,CCACPE1(,@10)                                   0415
         XC    CATRECRD(256,@10),CATRECRD(@10)                     0415
*       CATRECRD(2,1:256)=CATRECRD(2,1:256)&&CATRECRD(2,1:256);    0416
*                                                                  0416
         XC    CATRECRD+256(256,@10),CATRECRD+256(@10)             0416
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD CLUSTER ENTRY NON-REPEATING FIELDS                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0417
*       IF(CTGNPROF=OFF&JSCBADSP=ON)×CTGFVRON=ON THEN/* RAC ON?    0417
*                                                            @Z40RSTC*/
         L     @10,CCACPL(,R11)                                    0417
         TM    CTGNPROF(@10),B'00100000'                           0417
         BNZ   @GL00009                                            0417
         L     @10,CVTPTR                                          0417
         L     @10,CVTTCBP(,@10)                                   0417
         L     @10,TCBPTR(,@10)                                    0417
         L     @10,TCBJSCB(,@10)                                   0417
         TM    JSCBADSP(@10),B'01000000'                           0417
         BO    @RT00417                                            0417
@GL00009 L     @10,CCACPL(,R11)                                    0417
         L     @10,CTGFVT(,@10)                                    0417
         TM    CTGFVRON(@10),B'00001000'                           0417
         BNO   @RF00417                                            0417
@RT00417 DS    0H                                                  0418
*         RCDEXSEC=ON;              /* RAC PROTECT IS ON SET THE RAC
*                                      INDICATOR             @Z40RSTC*/
         L     @10,CCAURAB(,R11)                                   0418
         L     @10,CCACPE1(,@10)                                   0418
         OI    RCDEXSEC(@10),B'10000000'                           0418
*       ELSE                                                       0419
*         ;                         /* RAC AUTO PROTECT IS OFF     0419
*                                                            @Z40RSTC*/
@RF00417 DS    0H                                                  0420
*       RCDKEYTY='00'X;             /* SET KEY TYPE                  */
         L     @10,CCAURAB(,R11)                                   0420
         L     @10,CCACPE1(,@10)                                   0420
         MVI   RCDKEYTY(@10),X'00'                                 0420
*       RCDCINO=CMWACI(1);          /* SET CI NUMBER OF RECORD       */
         L     @05,CCACMSWA(,R11)                                  0421
         MVC   RCDCINO(3,@10),CMWACI(@05)                          0421
*       RCDCRAVL=CMSCRAVI;          /* INSERT CRA VOLSER     @Y30SSSG*/
         MVC   RCDCRAVL(6,@10),CMSCRAVI(@05)                       0422
*       RCDCRADT=CMSCRADT;          /* INSERT CRA DEVTYP     @Y30SSSG*/
*                                                                  0423
         MVC   RCDCRADT(4,@10),CMSCRADT(@05)                       0423
*       /*************************************************************/
*       /*                                                           */
*       /* IF AIX BUILD THEN INSERT G ENTRY TYPE             @Y30SSSG*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0424
*       IF CTGFVTYP=CTGTAIX THEN    /* AIX BUILD             @Y30SSSG*/
         L     @05,CCACPL(,R11)                                    0424
         L     @05,CTGFVT(,@05)                                    0424
         CLI   CTGFVTYP(@05),C'G'                                  0424
         BNE   @RF00424                                            0424
*         DO;                       /* YES                   @Y30SSSG*/
*           CRGATTR=CTGFVUPG->CTGFLPT(1)->RGATTR1;/* MOVE    @Y30SSSG
*                                      RGATTR INTO RECORD    @Y30SSSG*/
         L     @05,CTGFVUPG(,@05)                                  0426
         L     @05,CTGFLPT(,@05)                                   0426
         MVC   CRGATTR(1,@10),RGATTR1(@05)                         0426
*           RCDID=CTGTAIX;          /* SET AIX ENTRY TYPE    @Y30SSSG*/
         MVI   RCDID(@10),C'G'                                     0427
*         END;                      /*                       @Y30SSSG*/
*       ELSE                        /* SET NORMAL CLUSTER    @Y30SSSG*/
*         RCDID=CTGTCL;             /* ENTRY TYPE            @Y30SSSG*/
         B     @RC00424                                            0429
@RF00424 L     @10,CCAURAB(,R11)                                   0429
         L     @10,CCACPE1(,@10)                                   0429
         MVI   RCDID(@10),C'C'                                     0429
*       NREPCV=CLNOVARC;            /* SET NUMBER OF VARIABLE LENGTH
*                                      FIELDS                        */
@RC00424 L     @10,CCAURAB(,R11)                                   0430
         L     @10,CCACPE1(,@10)                                   0430
         MVI   NREPCV(@10),X'00'                                   0430
*       NREPLF=LENGTH(CATRCD)+LENGTH(CNAME)+LENGTH(COWNID)+LENGTH(CCRE)
*           +LENGTH(CEXP)+LENGTH(CCATTR);/* SET LENGTH OF FIXED FIELD
*                                      AREA OF ENTRY                 */
         MVI   NREPLF(@10),X'6C'                                   0431
*       CNAME=CTGFVENT->ENTRYNAM;   /* SET ENTRYNAME                 */
         L     @05,CCACPL(,R11)                                    0432
         L     @05,CTGFVT(,@05)                                    0432
         L     @01,CTGFVENT(,@05)                                  0432
         MVC   CNAME(44,@10),ENTRYNAM(@01)                         0432
*       IF CTGFVOWN^=N THEN         /* OWNER ID IS SPECIFIED         */
         L     @05,CTGFVOWN(,@05)                                  0433
         LTR   @05,@05                                             0433
         BZ    @RF00433                                            0433
*         COWNID=CTGFVOWN->CTGFLPT(1)->OWNIDFLD;/* SET OWNER ID      */
         L     @05,CTGFLPT(,@05)                                   0434
         MVC   COWNID(8,@10),OWNIDFLD(@05)                         0434
*       ELSE                                                       0435
*         COWNID=FFS;               /* SET TO BINARY ONES SINCE UNSET
*                                      BY CALLER                     */
         B     @RC00433                                            0435
@RF00433 L     @10,CCAURAB(,R11)                                   0435
         L     @10,CCACPE1(,@10)                                   0435
         MVC   COWNID(8,@10),FFS                                   0435
*       CCRE=CTGFVCRE->CTGFLPT(1)->DATEFLD;/* SET CREATION DATE      */
@RC00433 L     @10,CCAURAB(,R11)                                   0436
         L     @10,CCACPE1(,@10)                                   0436
         L     @05,CCACPL(,R11)                                    0436
         L     @01,CTGFVT(,@05)                                    0436
         L     @01,CTGFVCRE(,@01)                                  0436
         L     @01,CTGFLPT(,@01)                                   0436
         MVC   CCRE(3,@10),DATEFLD(@01)                            0436
*       IF CTGTYPE=CTGTPGSP THEN    /* PAGESPACE ?           @Y30SSSG*/
         CLI   CTGTYPE(@05),C'P'                                   0437
         BNE   @RF00437                                            0437
*         DO;                       /* YES                   @Y30SSSG*/
*           CATTR1=ZERO;            /* CLEARS DS ATTRIBUTES  @Y30SSSG*/
         MVI   CATTR1(@10),X'00'                                   0439
*           CPGSP=ON;               /* TURN ON IF PAGE SPACE @Y30SSSG*/
         OI    CPGSP(@10),B'00000001'                              0440
*           IF CTGSWAP=ON THEN      /* SWAPSPACE D.S.        @Z40WSSG*/
         TM    CTGSWAP(@05),B'00100000'                            0441
         BNO   @RF00441                                            0441
*             CSWAPSPC=ON;          /* SET SWAPSPACE BIT     @Z40WSSG*/
         OI    CSWAPSPC(@10),B'00000010'                           0442
*           ELSE                                                   0443
*             ;                     /* NOT SWAPSPACE D.S.    @Z40WSSG*/
@RF00441 DS    0H                                                  0444
*         END;                      /*                       @Y30SSSG*/
*       ELSE                                                       0445
*         ;                         /* NOT PAGESPACE         @Y30SSSG*/
@RF00437 DS    0H                                                  0446
*       CEXP=CTGFVEXP->CTGFLPT(1)->DATEFLD;/* SET EXPIRATION DATE    */
*                                                                  0446
         L     @10,CCAURAB(,R11)                                   0446
         L     @05,CCACPE1(,@10)                                   0446
         L     @01,CCACPL(,R11)                                    0446
         L     @15,CTGFVT(,@01)                                    0446
         L     @01,CTGFVEXP(,@15)                                  0446
         L     @01,CTGFLPT(,@01)                                   0446
         MVC   CEXP(3,@05),DATEFLD(@01)                            0446
*       /*************************************************************/
*       /*                                                           */
*       /* FIXED AREA OF CLUSTER ENTRY COMPLETE EXCEPT FOR TOTAL     */
*       /* ENTRY LENGTH VALUE CONSTRUCT DATA ASSOCIATION AND INDEX   */
*       /* ASSOCIATION IF INDEXED CLUSTER                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0447
*       CCACPE2=CCACPE1+LENGTH(CATRCD)+LENGTH(CNAME)+LENGTH(COWNID)+
*           LENGTH(CCRE)+LENGTH(CEXP)+LENGTH(CCATTR);/* SET ADDRESS
*                                      OF GROUP OCCURRENCE POINTER 0447
*                                      AREA OF CLUSTER ENTRY         */
*                                                                  0447
         AH    @05,@CH00171                                        0447
         ST    @05,CCACPE2(,@10)                                   0447
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE NUMBER OF GROUP OCCURRENCES                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0448
*       REPCNT=MINAS+ONE;           /* SET MINIMUM NUMBER OF       0448
*                                      ASSOCIATION WITH CLUSTER PLUS
*                                      ONE FOR SECURITY G.O          */
         LA    @10,2                                               0448
         STC   @10,REPCNT(,@05)                                    0448
*       IF CTGFVICH^=N THEN         /* INDEXED TYPE CLUSTER          */
         ICM   @14,15,CTGFVICH(@15)                                0449
         BZ    @RF00449                                            0449
*         REPCNT=REPCNT+ONE;        /* ADD ONE FOR INDEX G.O.        */
         AL    @10,@CF00048                                        0450
         STC   @10,REPCNT(,@05)                                    0450
*       ELSE                                                       0451
*         ;                                                        0451
@RF00449 DS    0H                                                  0452
*       IF CTGFVTYP=CTGTAIX THEN    /* AIX BUILD             @Y30SSSG*/
         L     @10,CCACPL(,R11)                                    0452
         L     @10,CTGFVT(,@10)                                    0452
         CLI   CTGFVTYP(@10),C'G'                                  0452
         BNE   @RF00452                                            0452
*         REPCNT=REPCNT+ONE;        /* ADD ONE FOR CL G.O.   @Y30SSSG*/
         L     @10,CCAURAB(,R11)                                   0453
         L     @10,CCACPE2(,@10)                                   0453
         LA    @05,1                                               0453
         SLR   @15,@15                                             0453
         IC    @15,REPCNT(,@10)                                    0453
         ALR   @05,@15                                             0453
         STC   @05,REPCNT(,@10)                                    0453
*       ELSE                                                       0454
*         ;                         /*                       @Y30SSSG*/
*                                                                  0454
@RF00452 DS    0H                                                  0455
*       /*************************************************************/
*       /*                                                           */
*       /* SET ADDRESS OF FIRST GROUP OCCURRENCE                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0455
*       CCACPE3=CCACPE2+LENGTH(REPCNTRL)+LENGTH(CATGOPT)*REPCNT;   0455
*                                                                  0455
         L     @10,CCAURAB(,R11)                                   0455
         LA    @05,6                                               0455
         L     @15,CCACPE2(,@10)                                   0455
         LR    @14,@15                                             0455
         ALR   @14,@05                                             0455
         LA    @09,5                                               0455
         SLR   @01,@01                                             0455
         IC    @01,REPCNT(,@15)                                    0455
         MR    @00,@09                                             0455
         ALR   @01,@14                                             0455
         ST    @01,CCACPE3(,@10)                                   0455
*       /*************************************************************/
*       /*                                                           */
*       /* SET CURRENT END OF RECORD ADDRESS                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0456
*       CCACPE4=CCACPE3;                                           0456
*                                                                  0456
         ST    @01,CCACPE4(,@10)                                   0456
*       /*************************************************************/
*       /*                                                           */
*       /* SET ADDRESS OF FIRST GROUP OCCURRENCE POINTER TO USE      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0457
*       CCACPE5=CCACPE2+LENGTH(REPCNTRL);                          0457
*                                                                  0457
         ST    @14,CCACPE5(,R11)                                   0457
*       /*************************************************************/
*       /*                                                           */
*       /* SET ADDRESS OF FIRST GROUP OCCURRENCE TO BUILD            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0458
*       CCACPE6=CCACPE3;                                           0458
*                                                                  0458
         ST    @01,CCACPE6(,R11)                                   0458
*       /*************************************************************/
*       /*                                                           */
*       /* SET ADDRESS OF PLACE TO BUILD FIRST FIELD                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0459
*       CCACPE7=CCACPE3;                                           0459
*                                                                  0459
         ST    @01,CCACPE7(,R11)                                   0459
*       /*************************************************************/
*       /*                                                           */
*       /* CONSTRUCT ASSOCIATION OCCURRENCE AND POINTER              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0460
*       CATGOGC1=ASGC;              /* SET ASSOCIATION GRP CODE      */
         MVI   CATGOGC1(@14),X'02'                                 0460
*       CATGODSP=CCACPE6-CCACPE3;   /* SET DISPLACEMENT TO G.O.      */
         LR    @10,@01                                             0461
         SLR   @10,@01                                             0461
         STH   @10,CATGODSP(,@14)                                  0461
*       CATGOSEQ=DASQN;             /* SET SEQUENCE NUMBER FOR DATA
*                                      ASSOCIATION G.O.              */
         MVI   CATGOSEQ(@14),X'01'                                 0462
*       LENFIX=LENGTH(ASGO)+        /* SET LENGTH FIXED FIELDS       */
*           LENGTH(CNTRLINF);                                      0463
         MVI   LENFIX(@01),X'06'                                   0463
*       ASTYPE=CTGTDATA;            /* SET ASSOCIATED ENTRY TYPE TO
*                                      DATA                          */
         LA    @10,1                                               0464
         LR    @15,@01                                             0464
         ALR   @15,@10                                             0464
         MVI   ASTYPE(@15),X'C4'                                   0464
*       ASCI=CMWACI(2);             /* SET CI NUMBER TO THAT TO BE 0465
*                                      USED FOR DATA ENTRY           */
*                                                                  0465
         L     @08,CCACMSWA(,R11)                                  0465
         MVC   ASCI(3,@15),CMWACI+3(@08)                           0465
*       /*************************************************************/
*       /*                                                           */
*       /* UPDATE POINTERS FOR CONSTRUCTION OF NEXT G.O.             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0466
*       CCACPE5=CCACPE5+LENGTH(CATGOPT);/* SET ADDRESS OF NEXT G.O.
*                                      POINTER TO USE                */
         ALR   @14,@09                                             0466
         ST    @14,CCACPE5(,R11)                                   0466
*       CCACPE6=CCACPE6+LENGTH(ASGO)+/* SET ADDRESS OF NEXT          */
*           LENGTH(CNTRLINF);       /* G.O. TO BUILD                 */
         LR    @00,@01                                             0467
         ALR   @00,@05                                             0467
         ST    @00,CCACPE6(,R11)                                   0467
*       CCACPE7=CCACPE6;            /* SET ADDRESS OF PLACE TO BUILD
*                                      FIRST FIELD                   */
*                                                                  0468
         ST    @00,CCACPE7(,R11)                                   0468
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF INDEX ASSOCIATION TO BE BUILT                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0469
*       IF CTGFVICH^=N THEN         /* BUILD INDEX ASSOCIATION       */
         L     @15,CCACPL(,R11)                                    0469
         L     @15,CTGFVT(,@15)                                    0469
         ICM   @07,15,CTGFVICH(@15)                                0469
         BZ    @RF00469                                            0469
*         DO;                                                      0470
*           CATGOGC1=ASGC;          /* SET ASSOCIATION GRP CODE      */
         MVI   CATGOGC1(@14),X'02'                                 0471
*           CATGODSP=CCACPE6-CCACPE3;/* SET DISPLACEMENT TO G.O.     */
         LCR   @01,@01                                             0472
         ALR   @01,@00                                             0472
         STH   @01,CATGODSP(,@14)                                  0472
*           CATGOSEQ=IXSQN;         /* SET SEQUENCE NUMBER FOR INDEX
*                                      ASSOCIATION G. O.             */
         MVI   CATGOSEQ(@14),X'02'                                 0473
*           LENFIX=LENGTH(ASGO)+    /* SET LENGTH FIXED FIELDS       */
*               LENGTH(CNTRLINF);                                  0474
         LR    @01,@00                                             0474
         MVI   LENFIX(@01),X'06'                                   0474
*           ASTYPE=CTGTINDX;        /* SET ASSOCIATED ENTRY TYPE TO
*                                      INDEX                         */
         ALR   @10,@00                                             0475
         MVI   ASTYPE(@10),X'C9'                                   0475
*           ASCI=CMWACI(3);         /* SET CI NUMBER TO THAT TO BE 0476
*                                      USED FOR INDEX ENTRY          */
*                                                                  0476
         MVC   ASCI(3,@10),CMWACI+6(@08)                           0476
*           /*********************************************************/
*           /*                                                       */
*           /* UPDATE POINTERS FOR CONSTRUCTION OF NEXT G.O.         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0477
*           CCACPE5=CCACPE5+LENGTH(CATGOPT);/* SET ADDRESS OF NEXT 0477
*                                      G.O. POINTER TO USE           */
         ALR   @14,@09                                             0477
         ST    @14,CCACPE5(,R11)                                   0477
*           CCACPE6=CCACPE6+LENGTH(ASGO)+/* SET ADDRESS OF NEXT      */
*               LENGTH(CNTRLINF);   /* G.O. TO BUILD                 */
         ALR   @00,@05                                             0478
         ST    @00,CCACPE6(,R11)                                   0478
*           CCACPE7=CCACPE6;        /* SET ADDRESS OF PLACE TO BUILD
*                                      FIRST FIELD                   */
         ST    @00,CCACPE7(,R11)                                   0479
*         END;                                                     0480
*       ELSE                                                       0481
*         ;                         /* NON-INDEXED CLUSTER           */
*                                                                  0481
@RF00469 DS    0H                                                  0482
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF CLUSTER ASSOCIATION TO BE BUILT      @Y30SSSG*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0482
*       IF CTGFVTYP=CTGTAIX THEN    /* BUILD CLUSTER G.O.    @Y30SSSG*/
         L     @10,CCACPL(,R11)                                    0482
         L     @10,CTGFVT(,@10)                                    0482
         CLI   CTGFVTYP(@10),C'G'                                  0482
         BNE   @RF00482                                            0482
*         DO;                       /* YES                   @Y30SSSG*/
*           CATGOGC1=ASGC;          /* SET ASSOC GRP CODE    @Y30SSSG*/
         L     @10,CCACPE5(,R11)                                   0484
         MVI   CATGOGC1(@10),X'02'                                 0484
*           CATGODSP=CCACPE6-CCACPE3;/* SET DISPLACEMENT     @Y30SSSG*/
         L     @05,CCACPE6(,R11)                                   0485
         L     @01,CCAURAB(,R11)                                   0485
         LR    @00,@05                                             0485
         SL    @00,CCACPE3(,@01)                                   0485
         STH   @00,CATGODSP(,@10)                                  0485
*           CATGOSEQ=AXSQN;         /* SET SEQUENCE NUMBER   @Y30SSSG
*                                      FOR CL ASSOC G. O.    @Y30SSSG*/
         MVI   CATGOSEQ(@10),X'03'                                 0486
*           LENFIX=LENGTH(ASGO)+    /* SET LNGTH FIXED FIELDS      0487
*                                                            @Y30SSSG*/
*               LENGTH(CNTRLINF);   /*                       @Y30SSSG*/
         MVI   LENFIX(@05),X'06'                                   0487
*           ASTYPE=CTGFVCL;         /* SET ASSOCIATED ENTRY  @Y30SSSG
*                                      TYPE TO CLUSTER       @Y30SSSG*/
         LA    @15,1                                               0488
         ALR   @15,@05                                             0488
         MVI   ASTYPE(@15),X'C3'                                   0488
*           RFY                                                    0489
*             CTGPL BASED(CCAXCPL); /*                       @Y30SSSG*/
*           ASCI=ENTCI2;            /* SET CL RCD CI         @Y30SSSG*/
         L     @01,CCAXCPL(,R11)                                   0490
         L     @01,CTGWKA(,@01)                                    0490
         MVC   ASCI(3,@15),ENTCI2(@01)                             0490
*           RFY                                                    0491
*             CTGPL BASED(CCACPL);  /*                       @Y30SSSG*/
*                                                                  0491
*           /*********************************************************/
*           /*                                                       */
*           /* UPDATE PTRS FOR CONSTRUCTION OF NEXT G.O.     @Y30SSSG*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0492
*           CCACPE5=CCACPE5+LENGTH(CATGOPT);/* SET ADDR      @Y30SSSG
*                                      OF NEXT G.O. PTR      @Y30SSSG*/
         AH    @10,@CH00064                                        0492
         ST    @10,CCACPE5(,R11)                                   0492
*           CCACPE6=CCACPE6+LENGTH(ASGO)+/* SET ADDR OF      @Y30SSSG*/
*               LENGTH(CNTRLINF);   /* NEXT                  @Y30SSSG
*                                      G.O. TO BUILD         @Y30SSSG*/
         AH    @05,@CH00062                                        0493
         ST    @05,CCACPE6(,R11)                                   0493
*           CCACPE7=CCACPE6;        /* SET ADDR OF PLACE     @Y30SSSG
*                                      TO BUILD FIRST FIELD  @X04SVSG*/
         ST    @05,CCACPE7(,R11)                                   0494
*         END;                      /*                       @Y30SSSG*/
*       ELSE                                                       0496
*         ;                         /* NOT AIX BUILD         @Y30SSSG*/
*                                                                  0496
@RF00482 DS    0H                                                  0497
*       /*************************************************************/
*       /*                                                           */
*       /* CONSTRUCT PASSWORD GROUP OCCURRENCE POINTER       @Y30SSSG*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0497
*       CATGOGC1=PASSGC;            /* SET PASSWORD GROUP CODE       */
         L     @10,CCACPE5(,R11)                                   0497
         MVI   CATGOGC1(@10),X'04'                                 0497
*       CATGOSEQ=PASSSQN;           /* SET SEQUENCE NUMBER FOR     0498
*                                      PASSWORD G.O.                 */
*                                                                  0498
         MVI   CATGOSEQ(@10),X'01'                                 0498
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF PASSWORD G.O. TO BE BUILT                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0499
*       IF CTGFVSTY^=N THEN         /* PASSWORDS SPECIFIED           */
         L     @05,CCACPL(,R11)                                    0499
         L     @05,CTGFVT(,@05)                                    0499
         L     @05,CTGFVSTY(,@05)                                  0499
         LTR   @05,@05                                             0499
         BZ    @RF00499                                            0499
*         DO;                                                      0500
*           CATGODSP=CCACPE6-CCACPE3;/* SET DISPLACEMENT TO G.O.     */
*                                                                  0501
         L     @15,CCACPE6(,R11)                                   0501
         L     @14,CCAURAB(,R11)                                   0501
         LR    @09,@15                                             0501
         SL    @09,CCACPE3(,@14)                                   0501
         STH   @09,CATGODSP(,@10)                                  0501
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP VARIABLE LENGTH FIELD CONTROL                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0502
*           IF CTGFVSTY->CTGFLNG(1)>LENGTH(PASSWORD)+LENGTH(PASSPRMT)+
*               LENGTH(PASSATMP)+LENGTH(USVRMDUL) THEN             0502
*                                                                  0502
         L     @10,CTGFLNG(,@05)                                   0502
         CH    @10,@CH00298                                        0502
         BNH   @RF00502                                            0502
*             /*******************************************************/
*             /*                                                     */
*             /* VARIABLE LENGTH USAR INCLUDED IN PASSWORD G.O.      */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0503
*             CNTVAR=ONE;           /* ONE VARIABLE FIELD            */
         MVI   CNTVAR(@15),X'01'                                   0503
*           ELSE                                                   0504
*             CNTVAR=ZERO;          /* NO VARIABLE FIELDS            */
         B     @RC00502                                            0504
@RF00502 L     @10,CCACPE6(,R11)                                   0504
         MVI   CNTVAR(@10),X'00'                                   0504
*           LENFIX=LENGTH(PASSWORD)+LENGTH(PASSPRMT)+LENGTH(PASSATMP)+
*               LENGTH(USVRMDUL);   /* SET LENGTH OF FIXED FIELD   0505
*                                      PORTION OF G.O.               */
@RC00502 L     @10,CCACPE6(,R11)                                   0505
         LA    @05,50                                              0505
         STC   @05,LENFIX(,@10)                                    0505
*           PASSGO(1:LENFIX)=CTGFVSTY->CTGFLPT(1)/* MOVE PASS        */
*               ->PASSGOM(1:LENFIX);/* WORD G. O.                    */
         LA    @15,1                                               0506
         ALR   @15,@10                                             0506
         LR    @14,@05                                             0506
         BCTR  @14,0                                               0506
         L     @01,CCACPL(,R11)                                    0506
         L     @01,CTGFVT(,@01)                                    0506
         L     @01,CTGFVSTY(,@01)                                  0506
         L     @09,CTGFLPT(,@01)                                   0506
         EX    @14,@SM03576                                        0506
*           LENFIX=LENFIX+LENGTH(CNTRLINF);/* ADD SIZE OF CONTROL    */
         LA    @14,2                                               0507
         ALR   @05,@14                                             0507
         STC   @05,LENFIX(,@10)                                    0507
*           IF CNTVAR^=ZERO THEN    /* COUNT OF VAR FIELDS NOT ZERO  */
*                                                                  0508
         CLI   CNTVAR(@10),0                                       0508
         BE    @RF00508                                            0508
*             /*******************************************************/
*             /*                                                     */
*             /* MOVE IN USAR FIELD AND LENGTH                       */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0509
*             DO;                                                  0509
*               USERAREL=CTGFVSTY->CTGFLPT(1)->USERDREL;           0510
         SLR   @08,@08                                             0510
         ICM   @08,3,USERDREL(@09)                                 0510
         STH   @08,USERAREL(,@15)                                  0510
*               USERAREV(1:USERAREL)=CTGFVSTY->CTGFLPT(1)->USERDREV(1:
*                   USERAREL);                                     0511
         LR    @07,@08                                             0511
         BCTR  @07,0                                               0511
         EX    @07,@SM03578                                        0511
*               CCACPE6=CCACPE6+LENFIX+LENGTH(USERAREL)+USERAREL;  0512
         ALR   @10,@05                                             0512
         ALR   @10,@14                                             0512
         ALR   @10,@08                                             0512
         ST    @10,CCACPE6(,R11)                                   0512
*             END;                                                 0513
*           ELSE                                                   0514
*             ;                                                    0514
@RF00508 DS    0H                                                  0515
*         END;                                                     0515
*       ELSE                        /* NO PASSWORD SPECIFIED         */
*         CATGODEL=ON;              /* MARK G.O.PTR DELETED          */
*                                                                  0516
         B     @RC00499                                            0516
@RF00499 L     @10,CCACPE5(,R11)                                   0516
         OI    CATGODEL(@10),B'01000000'                           0516
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE ENTRY SIZE                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0517
*       RCDSIZ=CCACPE6-CCACPE1;     /* SET RECORD SIZE               */
@RC00499 L     @10,CCAURAB(,R11)                                   0517
         L     @10,CCACPE1(,@10)                                   0517
         L     @05,CCACPE6(,R11)                                   0517
         SLR   @05,@10                                             0517
         STH   @05,RCDSIZ(,@10)                                    0517
*       IF CTGTYPE^=CTGTMCAT&CTGTYPE^=CTGTUCAT THEN/* NOT MASTER OR
*                                      USER CAT DEFINE               */
*                                                                  0518
         L     @10,CCACPL(,R11)                                    0518
         CLI   CTGTYPE(@10),C'M'                                   0518
         BE    @RF00518                                            0518
         CLI   CTGTYPE(@10),C'U'                                   0518
         BE    @RF00518                                            0518
*         /***********************************************************/
*         /*                                                         */
*         /* PUT NORMAL OR AIX CLUSTER ENTRY INTO THE CAT    @Y30SSSG*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0519
*         DO;                                                      0519
*           DO;                                                    0520
*             CCAURAB=ADDR(CCARAB2);/* SET RAB PTR                   */
*                                                                  0521
         LA    @10,CCARAB2(,R11)                                   0521
         ST    @10,CCAURAB(,R11)                                   0521
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLAG                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0522
*Z042PAD:                                                          0522
*             CALL IGGPPAD;         /* PUT-ADD RECORD                */
Z042PAD  L     @15,@CV00038                                        0522
         BALR  @14,@15                                             0522
*           END;                                                   0523
*           IF CCACD1=RCS THEN      /* RECORD WRITTEN OK             */
         CLI   CCACD1(R11),0                                       0524
         BNE   @RF00524                                            0524
*             CMCISUSE=ONE;         /* SET NUMBER OF CI'S PROCESSED  */
         L     @10,CCACMSWA(,R11)                                  0525
         MVI   CMCISUSE(@10),X'01'                                 0525
*           ELSE                                                   0526
*             ;                                                    0526
@RF00524 DS    0H                                                  0527
*         END;                                                     0527
*       ELSE                                                       0528
*         CMCISUSE=ONE;             /* SET NO. OF CI'S PROCESSED     */
         B     @RC00518                                            0528
@RF00518 L     @10,CCACMSWA(,R11)                                  0528
         MVI   CMCISUSE(@10),X'01'                                 0528
*     END;                                                         0529
*   ELSE                                                           0530
*     ;                                                            0530
*                                                                  0530
@RF00410 DS    0H                                                  0531
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF IGGPDCCE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00410 BAL   @14,EXIT                                            0531
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPPSEM');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPPSEM'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0534
@EF00007 DS    0H                                                  0534
@ER00007 BR    @14                                                 0534
@PB00007 DS    0H                                                  0535
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0536
*/********************************************************************/
*/*                                                                  */
*/*        IGGPPSEM  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0536
*IGGPPSEM:                                                         0536
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0536
IGGPPSEM DS    0H                                                  0537
*   GEN(ENTRY IGGPPSEM );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPPSEM
*Z043:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z043PSEM:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0538
*    (R5,                                                          0538
*     R6,                                                          0538
*     R7,                                                          0538
*     R8,                                                          0538
*     R9,                                                          0538
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z043     DS    0H                                                  0538
Z043PSEM DS    0H                                                  0539
*   RFY                                                            0539
*    (R2,                                                          0539
*     R3,                                                          0539
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0544
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30SSSG*/
*   /* PARAMETER CHECKING PROCEDURE                          @Y30SSSG*/
*   /* CHECK IF AIX NAME AND RELATED OBJ NAME ARE THE SAME           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0545
*   RFY                                                            0545
*     CTGPL BASED(CCACPL);          /* BASE CPL ON DEFAIX CPL PTR    */
*   IF CTGFVNAM->ENTRYNAM=CTGFVENT->ENTRYNAM THEN/* OBJECT NAME = AIX
*                                      NAME                          */
         L     @10,CCACPL(,R11)                                    0546
         L     @10,CTGFVT(,@10)                                    0546
         L     @05,CTGFVNAM(,@10)                                  0546
         L     @10,CTGFVENT(,@10)                                  0546
         CLC   ENTRYNAM(44,@05),ENTRYNAM(@10)                      0546
         BNE   @RF00546                                            0546
*     DO;                           /* YES                   @Y30SSSG*/
*                                                                  0547
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AN', CCAREASN=RSN8, CCARETRN=RCRELOP        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0548
*       CCAPROB=IGGSEGID+(RSN8*K256)+RCRELOP;/*              @X04SVSG
*                                      INVALID OP FOR RELATIONSHIP 0548
*                                      NME OF AIX REL OBJ ARE SAME   */
         MVC   CCAPROB(4,R11),@CF03559                             0548
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0550
*     ;                             /*                       @Y30SSSG*/
*                                                                  0550
@RF00546 DS    0H                                                  0551
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RC=0 THEN CHECK IF RELATED OBJ BASE CLUSTER        @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0551
*   IF CCACD1=RCS THEN              /* RETURN CODE ZERO      @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0551
         BNE   @RF00551                                            0551
*     DO;                           /* YES,CHECK IF BASE CLUSTER     */
*       CCAURAB=ADDR(CCARAB1);      /* POINT TO RAB IN USE   @Y30SSSG*/
         LA    @10,CCARAB1(,R11)                                   0553
         ST    @10,CCAURAB(,R11)                                   0553
*       IF RCDCINO=CLCINO THEN      /* CATALOG RECORD        @Y30SSSG*/
         L     @10,CCACPE1(,@10)                                   0554
         CLC   RCDCINO(3,@10),@CF00066+1                           0554
         BNE   @RF00554                                            0554
*         DO;                       /*                       @Y30SSSG*/
*                                                                  0555
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN6, CCARETRN=RCRELOP    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0556
*           CCAPROB=IGGSEGID+(RSN6*K256)+RCRELOP;/*          @X04SVSG
*                                      INVALID OP FOR RELATIONSHIP 0556
*                                      AIX NOT TO RELATE CAT         */
         MVC   CCAPROB(4,R11),@CF03562                             0556
*         END;                      /*                       @Y30SSSG*/
*       ELSE                        /* NOT CATALOG RECORD    @Y30SSSG*/
*         DO;                       /* CHECK IF NOT CLUSTER RECORD OR
*                                      PAGESPACE RECORD      @Y30SSSG*/
         B     @RC00554                                            0558
@RF00554 DS    0H                                                  0559
*           IF RCDID^=CTGFVCL×NREPLF=LENGTH(CATRCD)+LENGTH(CNAME)+ 0559
*               LENGTH(COWNID)+LENGTH(CCRE)+LENGTH(CEXP)+LENGTH(CCATTR)
*               &CPGSP=ON THEN                                     0559
*                                                                  0559
         L     @10,CCAURAB(,R11)                                   0559
         L     @10,CCACPE1(,@10)                                   0559
         CLI   RCDID(@10),C'C'                                     0559
         BNE   @RT00559                                            0559
         CLI   NREPLF(@10),108                                     0559
         BNE   @RF00559                                            0559
         TM    CPGSP(@10),B'00000001'                              0559
         BNO   @RF00559                                            0559
@RT00559 DS    0H                                                  0560
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='AN', CCAREASN=RSN12, CCARETRN=RCRELOP */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0560
*             CCAPROB=IGGSEGID+(RSN12*K256)+RCRELOP;/*       @Y30SSSG
*                                      RCD NOT CLUSTER SO SET ERROR  */
         MVC   CCAPROB(4,R11),@CF03563                             0560
*         END;                      /*                       @Y30SSSG*/
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0563
*     ;                             /*                       @Y30SSSG*/
*                                                                  0563
@RF00551 DS    0H                                                  0564
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RC=0 THEN SAVE CLUSTER CI FOR G RECORD BUILD       @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0564
*   RFY                                                            0564
*     CTGPL BASED(CCAXCPL);         /* POINT TO NEW CPL      @Y30SSSG*/
@RC00551 DS    0H                                                  0565
*   IF CCACD1=RCS THEN              /* RETURN CODE ZERO      @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0565
         BNE   @RF00565                                            0565
*     DO;                           /* YES                   @Y30SSSG*/
*       ENTYP2=RCDID;               /* GET RECORD ID         @Y30SSSG*/
         L     @10,CCAXCPL(,R11)                                   0567
         L     @10,CTGWKA(,@10)                                    0567
         L     @05,CCAURAB(,R11)                                   0567
         L     @05,CCACPE1(,@05)                                   0567
         MVC   ENTYP2(1,@10),RCDID(@05)                            0567
*       ENTCI2=RCDCINO;             /* GET CLUSTER RECORD CI NUMBER  */
         MVC   ENTCI2(3,@10),RCDCINO(@05)                          0568
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0570
*     ;                             /*                       @Y30SSSG*/
*                                                                  0570
@RF00565 DS    0H                                                  0571
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL IGGPXDCI TO EXTRACT THE CI OF THE DATA COMPONENT RECORD  */
*   /* FROM THE BASE CLUSTER RECORD AND GET THE DATA COMPONENT RECORD*/
*   /* INTO RAB4. THEN EXTRACT THE AMDSB FROM THE DATA COMPONENT     */
*   /* RECORD FOR THE FOLLOWING TESTS.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0571
*   IF CCACD1=RCS THEN              /* RETURN CODE ZERO      @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0571
         BNE   @RF00571                                            0571
*Z047XDCI:                                                         0572
*     CALL IGGPXDCI;                /* GET DATA COMPONENT AMDSB      */
Z047XDCI BAL   @14,IGGPXDCI                                        0572
*   ELSE                                                           0573
*     ;                             /*                       @Y30SSSG*/
@RF00571 DS    0H                                                  0574
*   RFY                                                            0574
*     IDAAMDSB BASED(ADDR(WKA));    /* BASE AMDSB            @Y30SSSG*/
*   AMDPTR=ADDR(WKA);               /* GET ADDR OF AMDSB     @Y30SSSG*/
*                                                                  0575
         L     @10,CCAXCPL(,R11)                                   0575
         L     @10,CTGWKA(,@10)                                    0575
         LA    AMDPTR,WKA(,@10)                                    0575
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE IS SUCCESSFUL THEN CHECK IF THE BASE CLUSTER IS*/
*   /* A RRDS.                                               @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0576
*   IF CCACD1=RCS&CTGFLNG(1)^=N THEN/* EXTRACT SUCCESSFUL            */
         CLI   CCACD1(R11),0                                       0576
         BNE   @RF00576                                            0576
         L     @05,CCAFLPT(,R11)                                   0576
         ICM   @15,15,CTGFLNG(@05)                                 0576
         BZ    @RF00576                                            0576
*     DO;                           /* YES                   @Y30SSSG*/
*       IF AMDRRDS=ON THEN          /* RRDS                  @Y30SSSG*/
         TM    AMDRRDS+4(@10),B'00000010'                          0578
         BNO   @RF00578                                            0578
*         DO;                       /* YES                   @Y30SSSG*/
*                                                                  0579
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN2, CCARETRN=RCRELOP    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0580
*           CCAPROB=IGGSEGID+(RSN2*K256)+RCRELOP;/*          @X04SVSG
*                                      SET INV OP FOR RELATIONSHIP 0580
*                                      RELATED OBJECT IS A RRDS      */
         MVC   CCAPROB(4,R11),@CF03565                             0580
*         END;                      /*                       @Y30SSSG*/
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0583
*     ;                             /*                       @Y30SSSG*/
*                                                                  0583
@RF00576 DS    0H                                                  0584
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE IS ZERO THEN CHECK IF THE BASE CLUSTER IS      */
*   /* REUSABLE                                              @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0584
*   IF CCACD1=RCS THEN              /* RETURN CODE ZERO      @Y30SSSG*/
@RC00576 CLI   CCACD1(R11),0                                       0584
         BNE   @RF00584                                            0584
*     DO;                           /* YES                   @Y30SSSG*/
*       IF CREUSE=ON THEN           /* RELATED OBJECT REUSABLE       */
         L     @10,CCAURAB(,R11)                                   0586
         L     @10,CCACPE1(,@10)                                   0586
         TM    CREUSE(@10),B'00100000'                             0586
         BNO   @RF00586                                            0586
*         DO;                       /* YES                   @Y30SSSG*/
*                                                                  0587
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN0, CCARETRN=RCRELOP    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0588
*           CCAPROB=IGGSEGID+(RSN0*K256)+RCRELOP;/* REL OBJ REUS   0588
*                                                            @Y30SSSG*/
         MVC   CCAPROB(4,R11),@CF03566                             0588
*         END;                      /*                       @Y30SSSG*/
*       ELSE                                                       0590
*         ;                         /*                       @Y30SSSG*/
@RF00586 DS    0H                                                  0591
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0592
*     ;                             /*                       @Y30SSSG*/
*                                                                  0592
@RF00584 DS    0H                                                  0593
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK AMDSB REFERENCED BY DATA FVT AGAINST BASE DATA COMPONENT*/
*   /* AMDSB FOR REL KEY POSITION WITHIN CI SIZE OR LRECL SIZE.      */
*   /*                                                       @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0593
*   RFY                                                            0593
*     CTGPL BASED(CCACPL);          /* BASE CPL ON DEFAIX CPL PTR    */
*   IF CCACD1=RCS THEN              /* RETURN CODE ZERO      @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0594
         BNE   @RF00594                                            0594
*     DO;                           /* YES IF AIX KEY POS + LENGTH   */
*       IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDAXRKP+CTGFVDCH->CTGFVAMD
*           ->CTGFLPT(1)->AMDKEYLN>AMDPTR->AMDCINV THEN/* GREATER  0596
*                                      THAN                  @Y30SSSG*/
         L     @10,CCACPL(,R11)                                    0596
         L     @10,CTGFVT(,@10)                                    0596
         L     @10,CTGFVDCH(,@10)                                  0596
         L     @10,CTGFVAMD(,@10)                                  0596
         L     @10,CTGFLPT(,@10)                                   0596
         LH    @05,AMDAXRKP(,@10)                                  0596
         AH    @05,AMDKEYLN(,@10)                                  0596
         C     @05,AMDCINV(,AMDPTR)                                0596
         BNH   @RF00596                                            0596
*         DO;                       /* DATA CI SIZE          @Y30SSSG*/
*                                                                  0597
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN6, CCARETRN=RCSPANCK   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0598
*           CCAPROB=IGGSEGID+(RSN6*K256)+RCSPANCK;/*         @X04SVSG
*                                      SET SPANNER RCD VAL CHK FAIL
*                                      KEY SPEC FOR SPANNED RCD      */
         MVC   CCAPROB(4,R11),@CF03567                             0598
*         END;                      /* EXCEEDS CI SIZE FOR BASE DATA */
*       ELSE                                                       0600
*         ;                         /*                       @Y30SSSG*/
@RF00596 DS    0H                                                  0601
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0602
*     ;                             /*                       @Y30SSSG*/
@RF00594 DS    0H                                                  0603
*   IF CCACD1=RCS THEN              /* RETURN CODE ZERO      @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0603
         BNE   @RF00603                                            0603
*     DO;                           /* YES IF AIX KEY POS + LENGTH   */
*       IF CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDAXRKP+CTGFVDCH->CTGFVAMD
*           ->CTGFLPT(1)->AMDKEYLN>AMDPTR->AMDLRECL THEN/* GREATER 0605
*                                      THAN                  @Y30SSSG*/
         L     @10,CCACPL(,R11)                                    0605
         L     @10,CTGFVT(,@10)                                    0605
         L     @10,CTGFVDCH(,@10)                                  0605
         L     @10,CTGFVAMD(,@10)                                  0605
         L     @10,CTGFLPT(,@10)                                   0605
         LH    @05,AMDAXRKP(,@10)                                  0605
         AH    @05,AMDKEYLN(,@10)                                  0605
         C     @05,AMDLRECL(,AMDPTR)                               0605
         BNH   @RF00605                                            0605
*         DO;                       /* GT LRECL SIZE         @Y30SSSG*/
*                                                                  0606
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='AN', CCAREASN=RSN8, CCARETRN=RCSPANCK   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0607
*           CCAPROB=IGGSEGID+(RSN8*K256)+RCSPANCK;/*         @X04SVSG
*                                      SET SPANNER RCD VAL CHK FAIL
*                                      KEY SPEC FOR SPANNED RCD      */
         MVC   CCAPROB(4,R11),@CF03568                             0607
*         END;                      /* EXCEEDS LRECL FOR BASE DATA   */
*       ELSE                                                       0609
*         ;                         /*                       @Y30SSSG*/
@RF00605 DS    0H                                                  0610
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0611
*     ;                             /*                       @Y30SSSG*/
@RF00603 DS    0H                                                  0612
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0612
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPXDCI');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPXDCI'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0615
@EF00008 DS    0H                                                  0615
@ER00008 BR    @14                                                 0615
@PB00008 DS    0H                                                  0616
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0617
*/********************************************************************/
*/*                                                                  */
*/*        IGGPXDCI  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0617
*IGGPXDCI:                                                         0617
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0617
IGGPXDCI DS    0H                                                  0618
*Z052:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z052XDCI:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0618
*    (R5,                                                          0618
*     R6,                                                          0618
*     R7,                                                          0618
*     R8,                                                          0618
*     R9,                                                          0618
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z052     DS    0H                                                  0618
Z052XDCI DS    0H                                                  0619
*   RFY                                                            0619
*    (R2,                                                          0619
*     R3,                                                          0619
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0621
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30SSSG*/
*   /* SET UP FPLS TO EXTRACT THE DATA CI FROM THE           @Y30SSSG*/
*   /* BASE CLUSTER RECORD                                   @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*   RFY                                                            0622
*     CTGPL BASED(CCAXCPL);         /* BASE CPL ON NEW CPL PTR       */
*   RFY                                                            0623
*     CTGFL BASED(CTGFIELD(1));     /* BASE DATA FPL         @Y30SSSG*/
*   CCARABB=ADDR(CCARAB1);          /* SET BASE RCD RAB ADDR         */
         LA    @10,CCARAB1(,R11)                                   0624
         ST    @10,CCARABB(,R11)                                   0624
*   CTGFLDNM=ADDR(NAMEDS);          /* SET FIELD NME ADDR TO NAMEDS  */
         L     @10,CCAXCPL(,R11)                                   0625
         L     @10,CTGFIELD(,@10)                                  0625
         LA    @05,@CC03380                                        0625
         ST    @05,CTGFLDNM(,@10)                                  0625
*   CTGFLCHN->CTGFLDNM=ADDR(TYPE);  /* SET FIELD TO ADDR TYPE        */
         L     @10,CTGFLCHN(,@10)                                  0626
         LA    @05,@CC03384                                        0626
         ST    @05,CTGFLDNM(,@10)                                  0626
*   CTGFLCHN->CTGFLNG(1)=LENGTH(TESTDATD);/* SET DATA LENGTH         */
         MVC   CTGFLNG(4,@10),@CF00048                             0627
*   CTGFLCHN->CTGFLPT(1)=ADDR(TESTDATD);/* SET DATA ADDR             */
         LA    @05,@CC00907                                        0628
         ST    @05,CTGFLPT(,@10)                                   0628
*   CCAF2NVC=ON;                    /* INDICATE NO VALIDITY CHECK    */
*                                                                  0629
         OI    CCAF2NVC(R11),B'01000000'                           0629
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE EXTRACT FUNCTION                             @Y30SSSG*/
*   /* CALL TO MODULE IGG0CLAZ                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0630
*Z053EXT:                                                          0630
*   CALL IGGPEXT;                   /*                       @Y30SSSG*/
*                                                                  0630
Z053EXT  L     @15,@CV00046                                        0630
         BALR  @14,@15                                             0630
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE ZERO THEN GET THE DATA COMPONENT RECORD IN RAB4*/
*   /* USING THE CI OBTAINED FROM THE BASE CLUSTER RCD               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0631
*   IF CCACD1=RCS&CTGFLNG(1)^=N THEN/* EXTRACT SUCCESSFUL            */
         CLI   CCACD1(R11),0                                       0631
         BNE   @RF00631                                            0631
         L     @10,CCAXCPL(,R11)                                   0631
         L     @05,CTGFIELD(,@10)                                  0631
         ICM   @15,15,CTGFLNG(@05)                                 0631
         BZ    @RF00631                                            0631
*     DO;                           /* YES                   @Y30SSSG*/
*       CCASRID=ENTCI1;             /* INSERT CI NUMBER      @Y30SSSG*/
         L     @10,CTGWKA(,@10)                                    0633
         MVC   CCASRID(3,R11),ENTCI1(@10)                          0633
*       CCAF1KEY=OFF;               /* GET BY CI NUMBER      @Y30SSSG*/
*       CCAF1KGE=OFF;               /* GET EQUAL             @Y30SSSG*/
*       CCAF1UP=OFF;                /* NOT GET FOR UPDATE    @Y30SSSG*/
         NI    CCAF1KEY(R11),B'11100101'                           0636
*       CCAURAB=ADDR(CCARAB4);      /* SET RAB PTR           @Y30SSSG*/
*                                                                  0637
         LA    @10,CCARAB4(,R11)                                   0637
         ST    @10,CCAURAB(,R11)                                   0637
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0638
*Z054GET:                                                          0638
*       CALL IGGPGET;               /* GET RCD               @Y30SSSG*/
Z054GET  L     @15,@CV00044                                        0638
         BALR  @14,@15                                             0638
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0640
*     ;                             /*                       @Y30SSSG*/
*                                                                  0640
@RF00631 DS    0H                                                  0641
*   /*****************************************************************/
*   /*                                                               */
*   /* IF DATA COMPONENT RCD GOTTEN SUCCESSFULLY THEN GET DATA       */
*   /* COMPONENT AMDSB                                       @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0641
*   IF CCACD1=RCS THEN              /* RECORD GOTTEN         @Y30SSSG*/
         CLI   CCACD1(R11),0                                       0641
         BNE   @RF00641                                            0641
*     DO;                           /* YES                   @Y30SSSG*/
*       CTGFLDNM=ADDR(AMDSBNM);     /* SET FIELDNAME TO AMDSB        */
         L     @10,CCAXCPL(,R11)                                   0643
         L     @10,CTGFIELD(,@10)                                  0643
         LA    @05,@CC03382                                        0643
         ST    @05,CTGFLDNM(,@10)                                  0643
*       CTGFLCHN=N;                 /* UNCHAIN NEXT FPL      @Y30SSSG*/
         SLR   @05,@05                                             0644
         ST    @05,CTGFLCHN(,@10)                                  0644
*       CCARABB=CCAURAB;            /* POINT TO BASE RAB     @Y30SSSG*/
         MVC   CCARABB(4,R11),CCAURAB(R11)                         0645
*       CCARABF=ADDR(CCARAB2);      /* POINT TO FIRST RAB    @Y30SSSG*/
         LA    @10,CCARAB2(,R11)                                   0646
         ST    @10,CCARABF(,R11)                                   0646
*       CCARABL=ADDR(CCARAB4);      /* POINT TO LAST RAB     @Y30SSSG*/
         LA    @10,CCARAB4(,R11)                                   0647
         ST    @10,CCARABL(,R11)                                   0647
*       CCAF2NVC=ON;                /* INDICATE NO VALIDITY CHECK    */
*                                                                  0648
         OI    CCAF2NVC(R11),B'01000000'                           0648
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAZ                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0649
*Z055EXT:                                                          0649
*       CALL IGGPEXT;               /* EXTRACT THE AMDSB     @Y30SSSG*/
Z055EXT  L     @15,@CV00046                                        0649
         BALR  @14,@15                                             0649
*       CTGFLCHN=CTGFIELD(1)+LENGTH(CTGFL)+LENGTH(CTGFLDAT);/*     0650
*                                      RECHAIN NEXT FPL      @Y30SSSG*/
         L     @10,CCAXCPL(,R11)                                   0650
         L     @10,CTGFIELD(,@10)                                  0650
         LA    @05,24                                              0650
         ALR   @05,@10                                             0650
         ST    @05,CTGFLCHN(,@10)                                  0650
*     END;                          /*                       @Y30SSSG*/
*   ELSE                                                           0652
*     ;                             /*                       @Y30SSSG*/
*                                                                  0652
@RF00641 DS    0H                                                  0653
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF IGGPXDCI                                       @Y30SSSG*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0653
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0653
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0654
@EF00009 DS    0H                                                  0654
@ER00009 BR    @14                                                 0654
@PB00009 DS    0H                                                  0655
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0656
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0656
*EXIT:                                                             0656
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0656
EXIT     DS    0H                                                  0657
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0660
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00010 DS    0H                                                  0661
@EF00010 DS    0H                                                  0661
@ER00010 BR    @14                                                 0661
*   END                                                            0662
*                                                                  0662
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (ICHACHKL)                                       */
*/*%INCLUDE SYSLIB  (ICHRDDFL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*                                                                  0662
*       ;                                                          0662
@EL00001 DS    0H                                                  0662
@EF00001 DS    0H                                                  0662
@ER00001 BR    @14                                                 0662
@DATA    DS    0H
@CH00064 DC    H'5'
@CH00062 DC    H'6'
@CH00298 DC    H'50'
@CH00171 DC    H'108'
@SM03576 MVC   PASSGO(0,@15),PASSGOM(@09)
@SM03578 MVC   USERAREV(0,@15),USERDREV(@09)
@DATD    DSECT
         DS    0F
IGG0CLAN CSECT
         DS    0F
@CF00048 DC    F'1'
@CH00048 EQU   @CF00048+2
@CF00066 DC    F'2'
@CF03311 DC    F'505'
@CF03313 DC    F'3072'
@CF03316 DC    F'4096'
@CF03566 DC    F'-1043005360'
@CF03565 DC    F'-1043004848'
@CF03562 DC    F'-1043003824'
@CF03567 DC    F'-1043003808'
@CF03559 DC    F'-1043003312'
@CF03568 DC    F'-1043003296'
@CF03518 DC    F'-1043002740'
@CF03563 DC    F'-1043002288'
@CF03534 DC    F'-1043002228'
@CF03540 DC    F'-1043001716'
@CF03520 DC    F'-1043001208'
@CF03541 DC    F'-1043001204'
@CF03548 DC    F'-1043000696'
@CF03547 DC    F'-1043000692'
@CF03552 DC    F'-1043000184'
@CF03551 DC    F'-1043000180'
@CF03515 DC    F'-1042998652'
@CF03523 DC    F'-1042998140'
@CF03526 DC    F'-1042997628'
@CF03529 DC    F'-1042997116'
@CF03532 DC    F'-1042996604'
@CF03537 DC    F'-1042996092'
@CF03544 DC    F'-1042995580'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLAN CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00036 DC    V(IGGPAOCI)
@CV00037 DC    V(IGGPDBDI)
@CV00038 DC    V(IGGPPAD)
@CV00039 DC    V(IGGPDCDA)
@CV00040 DC    V(IGGPDUND)
@CV00041 DC    V(IGGPDEFC)
@CV00042 DC    V(IGGPDSPC)
@CV00043 DC    V(IGGPDRSP)
@CV00044 DC    V(IGGPGET)
@CV00045 DC    V(IGGPPAIX)
@CV00046 DC    V(IGGPEXT)
         DS    0D
@CC03380 DC    C'NAMEDS  '
@CC03382 DC    C'AMDSBCAT'
@CC03384 DC    C'TYPE    '
@CC00907 DC    C'D'
         DS    CL3
FFFFS    DC    XL4'FFFFFFFF'
         DC    XL4'FFFFFFFF'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
DCWABASE EQU   @04
AMDPTR   EQU   @04
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2NVC EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4REC EQU   CCARAB4+4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAASCIK EQU   IGGCCA+268
CCAASCI  EQU   IGGCCA+271
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCARABB  EQU   IGGCCA+380
CCARABF  EQU   IGGCCA+384
CCARABL  EQU   IGGCCA+388
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFLGS EQU   CCAMNAT+240
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCAREQDQ EQU   IGGCCA+1492
CCAREDOP EQU   CCAREQDQ+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGSWAP  EQU   CTGRCATN
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGNPROF EQU   CTGOPTN4
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CCACPE3  EQU   CCARAB+12
CCACPE4  EQU   CCARAB+16
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGODSP EQU   CATGOCI+1
CATGOGC1 EQU   CATGOPT+3
CATGODEL EQU   CATGOGC1
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDKEYTY EQU   CATRCD
RCDCINO  EQU   CATRCD+1
RCDCRAVL EQU   CATRCD+5
RCDCRADT EQU   CATRCD+14
RCDSECF  EQU   CATRCD+26
RCDEXSEC EQU   RCDSECF
RCDID    EQU   CATRCD+44
RCDSIZ   EQU   CATRCD+45
NREPCV   EQU   CATRCD+47
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
REPCNT   EQU   REPCNTRL+5
VARFIELD EQU   0
CNTRLINF EQU   0
CNTVAR   EQU   CNTRLINF
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACB3895L EQU   ACBCOMN
ACBLENG  EQU   ACB3895L+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACB3895L+4
ACBJWA   EQU   ACBAMBL
ACBIBCT  EQU   ACBJWA
ACBMACRF EQU   ACB3895L+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACB3895L+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACB3895L+24
ACBFTRS  EQU   ACBRECFM
ACBCCTYP EQU   ACB3895L+25
ACBOPT   EQU   ACB3895L+26
ACBDSORG EQU   ACBOPT
ACBDSOR1 EQU   ACBDSORG
ACBCROPS EQU   ACBDSOR1
ACBDVIND EQU   ACBDSOR1
ACBDSOR2 EQU   ACBDSORG+1
ACBEXLST EQU   ACB3895L+36
ACBDDNM  EQU   ACB3895L+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACB3895L+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACB3895L+50
ACBVVIC  EQU   ACBINFLG
ACBREM   EQU   ACBCOMN+52
ACBUJFCB EQU   ACBREM
ACBBLKSZ EQU   ACBREM+8
ACBUAPTR EQU   ACBREM+12
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
NOBASE   EQU   0
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CAXCCA   EQU   IGGCAXWA+104
CAXECB   EQU   IGGCAXWA+120
CAXECBHB EQU   CAXECB
CAXHRPLW EQU   IGGCAXWA+128
CTGFV    EQU   0
CTGFVTYP EQU   CTGFV
CTGFVPRO EQU   CTGFV+1
CTGFVRON EQU   CTGFVPRO
CTGFVDCH EQU   CTGFV+4
CTGFVICH EQU   CTGFV+8
CTGFVENT EQU   CTGFV+20
CTGFVSTY EQU   CTGFV+24
CTGFVOWN EQU   CTGFV+28
CTGFVEXP EQU   CTGFV+32
CTGFVCRE EQU   CTGFV+36
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVBUF EQU   CTGFV+64
CTGFVLRS EQU   CTGFV+68
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGFVUPG EQU   CTGFVGAT
CTGFVNAM EQU   CTGFV+80
CTGFVPWD EQU   CTGFV+84
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
ACHKLIST EQU   0
ACHKINSW EQU   ACHKLIST
ACHKENTW EQU   ACHKLIST+4
ACHKFLG1 EQU   ACHKENTW
ACHKENT  EQU   ACHKENTW+1
ACHKCLNW EQU   ACHKLIST+8
ACHKFLG2 EQU   ACHKCLNW
ACHKVOLW EQU   ACHKLIST+12
ACHKFLG3 EQU   ACHKVOLW
RDDFLIST EQU   0
RDDFINSW EQU   RDDFLIST
RDDFENTW EQU   RDDFLIST+4
RDDFFLGS EQU   RDDFENTW
RDDFOVOL EQU   RDDFLIST+8
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISREQ EQU   CMSWA+1
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMWACI   EQU   CMSWA+3
CMCPLFVT EQU   CMSWA+20
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
CMRNGCTR EQU   CMSWA+40
CMVOLCTR EQU   CMSWA+42
CMSDFSPC EQU   CMSWA+48
CMSCRAVI EQU   CMSWA+52
CMSCRADT EQU   CMSWA+58
CMVLLIST EQU   CMSWA+64
CMVLRTCD EQU   CMVLLIST+2
CMSPCATR EQU   CMSWA+76
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWIX    EQU   CMSWA+188
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMUCATCI EQU   CMSWA+410
CMSRAC   EQU   CMSWA+516
CMSROBJA EQU   CMSRAC+32
CMSROBJN EQU   CMSROBJA
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
CATRECRD EQU   0
ASGO     EQU   1
ASTYPE   EQU   ASGO
ASCI     EQU   ASGO+1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
PASSPRMT EQU   PASSGO+32
PASSATMP EQU   PASSGO+40
USVRMDUL EQU   PASSGO+42
USERAREC EQU   PASSGO+50
USERAREL EQU   USERAREC
USERAREV EQU   USERAREC+2
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
ENTRYNAM EQU   0
DATEFLD  EQU   0
OWNIDFLD EQU   0
BUFSIZE  EQU   0
LRECL    EQU   0
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDDST   EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDNEST  EQU   IDAAMDSB+4
AMDAXRKP EQU   AMDNEST
AMDRKP   EQU   IDAAMDSB+6
AMDKEYLN EQU   IDAAMDSB+8
AMDCINV  EQU   IDAAMDSB+20
AMDLRECL EQU   IDAAMDSB+24
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
DWAREA   EQU   0
DCPLCNTA EQU   DWAREA
DCONTROL EQU   DCPLCNTA
DCCPROB  EQU   DCONTROL
DUNDOFLS EQU   DCONTROL+8
DFPLS    EQU   DWAREA+44
PASSGOM  EQU   0
PASDGO   EQU   0
USERDREC EQU   PASDGO+50
USERDREL EQU   USERDREC
USERDREV EQU   USERDREC+2
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DMOVE    EQU   0
EXCPNAME EQU   0
FIELDNM  EQU   0
TNAM     EQU   0
@NM00037 EQU   CTGDDNM
CTGPROB  EQU   @NM00037
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CNAME    EQU   CTGRBASE
COWNID   EQU   CTGRBASE+44
CCRE     EQU   CTGRBASE+52
CEXP     EQU   CTGRBASE+55
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CREUSE   EQU   CATTR1
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00130 EQU   CATTR1
CCATTR   EQU   @NM00130
@NM00131 EQU   CCATTR
CSWAPSPC EQU   @NM00131
CPGSP    EQU   @NM00131
@NM00133 EQU   CATTR1
CRGATTR  EQU   @NM00133
CUPG     EQU   CRGATTR
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBADSP EQU   JSCBFBYT
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
FFS      EQU   FFFFS
GOENTRY  EQU   WKA
ENTRY1   EQU   GOENTRY
ENTCI1   EQU   ENTRY1+1
ENTRY2   EQU   GOENTRY+100
ENTYP2   EQU   ENTRY2
ENTCI2   EQU   ENTRY2+1
ENTRY3   EQU   GOENTRY+104
ENTRY4   EQU   GOENTRY+108
ENTRY5   EQU   GOENTRY+112
ENTRY6   EQU   GOENTRY+116
ENTRY7   EQU   GOENTRY+120
ENTRY8   EQU   GOENTRY+124
WAIND    EQU   GOENTRY+128
ACHKPROF EQU   ACHKENT
DWAREACL EQU   DWAREA
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
RCSAVE   EQU   GOENTRY+136
CPLSAVE  EQU   GOENTRY+132
@NM00151 EQU   GOENTRY+129
@NM00150 EQU   WAIND
PTHAIX   EQU   WAIND
ENTCI8   EQU   ENTRY8+1
ENTYP8   EQU   ENTRY8
ENTCI7   EQU   ENTRY7+1
ENTYP7   EQU   ENTRY7
ENTCI6   EQU   ENTRY6+1
ENTYP6   EQU   ENTRY6
ENTCI5   EQU   ENTRY5+1
ENTYP5   EQU   ENTRY5
ENTCI4   EQU   ENTRY4+1
ENTYP4   EQU   ENTRY4
ENTCI3   EQU   ENTRY3+1
ENTYP3   EQU   ENTRY3
@NM00149 EQU   GOENTRY+4
ENTYP1   EQU   ENTRY1
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00147 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00146 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
@NM00134 EQU   CRGATTR
CUPD     EQU   CUPG
@NM00132 EQU   @NM00131
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00129 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
CATTISDS EQU   CATTR2
@NM00128 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
@NM00090 EQU   MCATDSTR+1
@NM00089 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
USVRDMDL EQU   PASDGO+42
PASDATMP EQU   PASDGO+40
PASDPRMT EQU   PASDGO+32
PASDWORD EQU   PASDGO
DFIELDA  EQU   DWAREA+68
DCTGFLDA EQU   DFPLS+16
DCTGFL   EQU   DFPLS
DCTGFIEL EQU   DCPLCNTA+40
DCTGPL   EQU   DCPLCNTA+12
DEXTCIN  EQU   DCONTROL+9
@NM00148 EQU   DUNDOFLS
DUNDOHE  EQU   DUNDOFLS
DUNDIX   EQU   DCONTROL+6
DGOIX    EQU   DCONTROL+4
DCCACD1  EQU   DCCPROB+3
DCCREASN EQU   DCCPROB+2
DCCMODID EQU   DCCPROB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00145 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00144 EQU   IEZJSCB
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00143 EQU   IDAAMDSB+41
@NM00142 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00141 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00140 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00139 EQU   RTDEVUCB
@NM00138 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00137 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00136 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00135 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTVOLSER EQU   LTENTRY+2
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
CUMRC    EQU   CUMWA+148
@NM00127 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00126 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00125 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00124 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00123 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00122 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
CMSDYNAL EQU   CMSRAC+164
@NM00121 EQU   CMSROBJN+1
CMSROBJI EQU   CMSROBJN
CMSWRMAC EQU   CMSRAC+16
CMSWARFV EQU   CMSRAC+12
CMSRDSVL EQU   CMSRAC+8
CMSRDSNA EQU   CMSRAC+4
@NM00120 EQU   CMSRAC+2
CMSREACD EQU   CMSRAC+1
CMSRETCD EQU   CMSRAC
CMSRACBF EQU   CMSWA+504
CMBYTAU  EQU   CMSWA+500
CMBYTTRK EQU   CMSWA+496
CMSCTREC EQU   CMSWA+416
@NM00119 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMBLPTKS EQU   CMSWA+408
CMSDSPTB EQU   CMSWA+344
@NM00118 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00117 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00116 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
DCWFPLPT EQU   CMSWA+196
DCWAREPT EQU   CMSWA+192
@NM00115 EQU   CMSWA+190
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
CMDEFSWA EQU   CMSWA+128
CMSRCCOR EQU   CMSWA+124
CMEXTLST EQU   CMSWA+120
WORKPROC EQU   CMSWA+118
@NM00114 EQU   CMSWA+116
CMFPLIDX EQU   CMSWA+112
CMCNVNO  EQU   CMSWA+110
CMCNVLEN EQU   CMSWA+108
CMTRKCYL EQU   CMSPCATR+12
CMTRKPCA EQU   CMSPCATR+10
CMBLKTRK EQU   CMSPCATR+8
CMSWADTY EQU   CMSPCATR+4
CMPHYBLK EQU   CMSPCATR
CMTOTVOL EQU   CMSWA+74
CMVLVOL  EQU   CMVLLIST+4
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
CMVLLTLN EQU   CMVLLIST
@NM00113 EQU   CMSWA+62
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
CMRMVVOL EQU   CMVOLCTR
CMADDVOL EQU   CMRNGCTR
SPACINDC EQU   CMSWA+38
PROCESS  EQU   CMSWA+36
CMDTAFPL EQU   CMHIXFPL
CMTSTFPL EQU   CMHDTFPL
CMRNMLST EQU   CMLDTFPL
CMEXTFLS EQU   CMCPLFVT
CMASCFPL EQU   CMSWA+16
CMWFVTPT EQU   CMSWA+12
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMSUALOC EQU   CMWFLAGS
CMSRACDL EQU   CMWFLAGS
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00112 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
RDDFVSER EQU   RDDFLIST+12
RDDFNNAM EQU   RDDFOVOL
RDDFENT  EQU   RDDFENTW+1
@NM00111 EQU   RDDFFLGS
RDDFDSTV EQU   RDDFFLGS
@NM00110 EQU   RDDFFLGS
RDDFNEWN EQU   RDDFFLGS
RDDFOLDV EQU   RDDFFLGS
RDDFTADV EQU   RDDFFLGS
RDDFTDEL EQU   RDDFFLGS
RDDFINST EQU   RDDFINSW+1
RDDFLENG EQU   RDDFINSW
ACHKVOLS EQU   ACHKVOLW+1
@NM00109 EQU   ACHKFLG3
ACHKVOL  EQU   ACHKFLG3
@NM00108 EQU   ACHKFLG3
ACHKPRF  EQU   ACHKFLG3
@NM00107 EQU   ACHKFLG3
ACHKCLN  EQU   ACHKCLNW+1
@NM00106 EQU   ACHKFLG2
ACHKTRD  EQU   ACHKFLG2
ACHKTUPD EQU   ACHKFLG2
ACHKTCTL EQU   ACHKFLG2
@NM00105 EQU   ACHKFLG2
ACHKTALT EQU   ACHKFLG2
ACHKCSA  EQU   ACHKFLG1
ACHKLOGN EQU   ACHKFLG1
ACHKLOGF EQU   ACHKFLG1
@NM00104 EQU   ACHKFLG1
ACHKDSTV EQU   ACHKFLG1
@NM00103 EQU   ACHKFLG1
@NM00102 EQU   ACHKFLG1
@NM00101 EQU   ACHKFLG1
ACHKINST EQU   ACHKINSW+1
ACHKLENG EQU   ACHKINSW
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00100 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVCPP EQU   CTGFVPWD
CTGFVEXT EQU   CTGFVLMT
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
@NM00099 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00098 EQU   CTGFVPRO
CTGFVROF EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CAXWNQID EQU   CAXHRPLW+2
CAXHRPLC EQU   CAXHRPLW
CAXASCBP EQU   IGGCAXWA+124
@NM00097 EQU   CAXECB+1
@NM00096 EQU   CAXECBHB
CAXECBPB EQU   CAXECBHB
CAXECBWB EQU   CAXECBHB
CAXRACP  EQU   IGGCAXWA+116
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXPLOCK EQU   CAXCCA
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00095 EQU   COPTS
CENLST   EQU   COPTS
@NM00094 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00093 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
CAXRAC   EQU   CAXFLG3
@NM00092 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00091 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBREM+20
ACBCBMWA EQU   ACBREM+16
ACBLRECL EQU   ACBREM+10
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBREM+4
@NM00088 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00087 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00086 EQU   ACBINFLG
ACBERFLG EQU   ACB3895L+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00085 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00084 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACB3895L+32
ACBMSGAR EQU   ACB3895L+28
@NM00083 EQU   ACBDSOR2
ACBDORGA EQU   ACBDSOR2
@NM00082 EQU   ACBDSOR2
@NM00081 EQU   ACBDSOR1
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00080 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
ACBSPM   EQU   ACBFTRS
@NM00079 EQU   ACBFTRS
ACBRECAF EQU   ACBFTRS
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00078 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00077 EQU   ACBMACR3
ACBBUFNI EQU   ACB3895L+18
ACBBUFND EQU   ACB3895L+16
ACBSTRNO EQU   ACB3895L+15
ACBBSTNO EQU   ACB3895L+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00076 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACB3895L+8
ACBAMWAP EQU   ACBIBCT
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACB3895L+1
ACBID    EQU   ACB3895L
@NM00051 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00050 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00049 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00048 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00047 EQU   CVTFIX+248
@NM00046 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
@NM00045 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
@NM00044 EQU   CATRCD+27
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRACI EQU   CATRCD+11
RCDRELID EQU   CATRCD+4
CATGOGC  EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
@NM00043 EQU   CATGOFLG
@NM00042 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00041 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00040 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00039 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN2  EQU   USERWKA+2
WKALEN1  EQU   USERWKA
CTGFLDTS EQU   CTGFLDRE
@NM00038 EQU   CTGFLDRE
CTGFLDCD EQU   CTGFL+1
CTGFLDNO EQU   CTGFL
CTGPSWD  EQU   CTGJSCB
@NM00036 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
CTGNOFLD EQU   CTGPL+19
@NM00035 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00034 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00033 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1508
@NM00032 EQU   IGGCCA+1504
CCARMINN EQU   CCAREQDQ+8
CCARMAJN EQU   CCAREQDQ+4
CCAREDRC EQU   CCAREQDQ+3
@NM00031 EQU   CCAREDOP
CCAREDSH EQU   CCAREDOP
CCAREDLN EQU   CCAREQDQ+1
CCAREDFF EQU   CCAREQDQ
CCADGDGA EQU   IGGCCA+1488
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00030 EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00029 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00028 EQU   CCAREGS
@NM00027 EQU   IGGCCA+1057
@NM00026 EQU   CCARVFG1
RVWG     EQU   CCARVFG1
RVRPLMFG EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNADR EQU   CCAMNCAT+252
CCAMNLEN EQU   CCAMNCAT+249
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00025 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00024 EQU   CCAMNAT+1
@NM00023 EQU   MNATTOP
MNATFULL EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00022 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00021 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00020 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
@NM00019 EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00018 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCAMCPL  EQU   CCAXCPL
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
CCAMNSPL EQU   CCAMSSPL+9
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
CCAR5REC EQU   CCARAB5+4
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00075 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00074 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00073 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00072 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00071 EQU   FLCFSA
@NM00070 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00069 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00068 EQU   FLCIOA
@NM00067 EQU   FLCMCLA+15
@NM00066 EQU   FLCMCLA+14
@NM00065 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00064 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00063 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00062 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00061 EQU   FLCPER
@NM00060 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00059 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00058 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00057 EQU   FLCPIILC
@NM00056 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00055 EQU   FLCSVILC
@NM00054 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00053 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00052 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00162 EQU   @RC00161
@RC00165 EQU   @RC00161
@RC00171 EQU   @RC00170
@RC00190 EQU   @RC00189
@RC00222 EQU   @RC00219
@RC00230 EQU   @RC00229
@RC00242 EQU   @RC00241
@RC00253 EQU   @RC00252
@RC00288 EQU   @RC00287
@RC00293 EQU   @RC00292
@RC00278 EQU   @RC00277
@RC00326 EQU   @RC00325
@RC00337 EQU   @RC00336
@RC00347 EQU   @RC00323
@RC00361 EQU   @RC00360
@RC00518 EQU   @RC00410
@RC00554 EQU   @RC00551
@RF00559 EQU   @RC00551
@RF00578 EQU   @RC00576
@PB00010 EQU   @EL00001
@RC00223 EQU   @RC00222
@RC00231 EQU   @RC00230
@RC00243 EQU   @RC00242
@RC00279 EQU   @RC00278
@RC00294 EQU   @RC00293
@RC00338 EQU   @RC00337
@RC00350 EQU   @RC00347
@RC00232 EQU   @RC00231
@RC00244 EQU   @RC00243
@RC00295 EQU   @RC00294
@RC00245 EQU   @RC00244
@ENDDATA EQU   *
         END   IGG0CLAN,(C'PLS0229',0701,76049)
