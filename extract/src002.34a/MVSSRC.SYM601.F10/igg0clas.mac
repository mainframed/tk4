         TITLE 'IGG0CLAS VSAM CATALOG DEFINITION                       *
                        '
IGG0CLAS CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLAS  75.056'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPDEFC'
         EJECT
         B     @PB00002                                            0116
IGGPDEFC DS    0H                                                  0117
         ENTRY IGGPDEFC
         DROP @15
Z003     DS    0H                                                  0119
Z003DEFC DS    0H                                                  0120
         BALR 12,0
IGGSEGST DS 0H
         USING *,12
*   CCAF2CB=ON;                     /* SET CATALOG BUILD INDIC       */
         OI    CCAF2CB(R11),B'00000010'                            0125
*   ACBSAVAR=CCAACB;                /* SAVE CCA ACB ADDRESS          */
         L     @10,CCACMSWA(,R11)                                  0126
         MVC   ACBSAVAR+192(4,@10),CCAACB(R11)                     0126
*   RPLSAVAR=CCARPL1;               /* SAVE CAT RPL ADDRESS          */
         MVC   RPLSAVAR+196(4,@10),CCARPL1(R11)                    0127
*   IF CCAF1CR=ON THEN              /* CCR NEED CHECK POINT          */
         TM    CCAF1CR(R11),B'00000100'                            0128
         BNO   @RF00128                                            0128
*     DO;                                                          0129
*       CCAMLRET=R13+SASIZ;         /* INSURE ERROR RET HERE @YM05713*/
*                                                                  0130
         LA    @10,12                                              0130
         ALR   @10,R13                                             0130
         ST    @10,CCAMLRET(,R11)                                  0130
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAG                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0131
*Z004CCCR:                                                         0131
*       CALL IGGPCCCR;              /* CALL THE CCR CHECK POINT      */
Z004CCCR L     @15,@CV00036                                        0131
         BALR  @14,@15                                             0131
*     END;                                                         0132
*   ELSE                                                           0133
*     ;                             /* NO CCR CHECK POINT            */
@RF00128 DS    0H                                                  0134
*   CCAACB=NONE;                    /* CLEAR CAT ACB ADDRESS         */
         SLR   @10,@10                                             0134
         ST    @10,CCAACB(,R11)                                    0134
*Z005DCSP:                                                         0135
*   CALL IGGPDCSP;                  /* SPACE GETTING SUB FUNCTON     */
Z005DCSP BAL   @14,IGGPDCSP                                        0135
*   IF CCACD1=OKAY THEN             /* CHECK FOR OKAY SPACE GET      */
         CLI   CCACD1(R11),0                                       0136
         BNE   @RF00136                                            0136
*Z006DCVO:                                                         0137
*     CALL IGGPDCVO;                /* BUILD VOLUME OCCURRENCES      */
Z006DCVO BAL   @14,IGGPDCVO                                        0137
*   ELSE                                                           0138
*     ;                             /* VOL OCCURRS NOT BUILT         */
@RF00136 DS    0H                                                  0139
*   IF CCACD1=OKAY THEN             /* CHECK FOR OKAY TO PROCESS     */
         CLI   CCACD1(R11),0                                       0139
         BNE   @RF00139                                            0139
*Z007DCBE:                                                         0140
*     CALL IGGPDCBE;                /* BUILD RECORDS                 */
Z007DCBE BAL   @14,IGGPDCBE                                        0140
*   ELSE                                                           0141
*     ;                             /* RECORDS NOT BUILT             */
*                                                                  0141
@RF00139 DS    0H                                                  0142
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE MODIFY ENTRY ROUTINE                         @Y30SSDC*/
*   /* CALL TO MODULE IGG0CLAE                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0142
*Z008DCME:                                                         0142
*   CALL IGGPDCME;                  /* MODIFY ENTRY          @Y30SSDC*/
Z008DCME L     @15,@CV00042                                        0142
         BALR  @14,@15                                             0142
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0143
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCSP');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCSP'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0146
@EF00002 DS    0H                                                  0146
@ER00002 BR    @14                                                 0146
@PB00002 DS    0H                                                  0147
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0148
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCSP  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0148
*IGGPDCSP:                                                         0148
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0148
IGGPDCSP DS    0H                                                  0149
*Z009:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z009DCSP:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0149
*    (R5,                                                          0149
*     R6,                                                          0149
*     R7,                                                          0149
*     R8,                                                          0149
*     R9,                                                          0149
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z009     DS    0H                                                  0149
Z009DCSP DS    0H                                                  0150
*   RFY                                                            0150
*    (R2,                                                          0150
*     R3,                                                          0150
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0152
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL ROUTINE TO OBTAIN THE CATALOG PHYSICAL SPACE BY THE  */
*   /* USE OF DEFINE SPACE AND TO THEN SUBDIVIDE THAT SPACE BY THE   */
*   /* USE OF THE SUBALLOCATE FUNCTION GET CORE FOR THE EXTRA RECORD */
*   /* AREAS THAT ARE REQUIRED                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0153
*   CCAMNLEN=(NOXCTREC*CTRECSIZ)+   /* SET CORE SIZE                 */
*       (NOVGOS*LENGTH(CMFPLSTR))+LENGTH(CMASFPST)+LENGTH(USERWKA)+(
*       MAXEXTS*LENGTH(CMFXECTS))+(NOMODFPL*LENGTH(CTGFIELD))+(NORAS*
*       LENGTH(CCARAB))+LENGTH(CTGPL);                             0153
         LH    @10,@CH03357                                        0153
         STCM  @10,7,CCAMNLEN(R11)                                 0153
*   CMFPLIDX=CCAMNLEN;              /* SAVE WORK CORE SIZE           */
         L     @05,CCACMSWA(,R11)                                  0154
         ST    @10,CMFPLIDX(,@05)                                  0154
*   RFY                                                            0155
*    (R1) RSTD;                                                    0155
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0156
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0157
         MVI   CCAMNSPL(R11),X'FC'                                 0157
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0160
         LTR   R1,R1                                               0160
         BZ    @RF00160                                            0160
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='AS', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0161
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0161
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03359                             0161
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0162
         B     @RC00160                                            0162
@RF00160 DS    0H                                                  0163
*       DO;                                                        0163
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0164
         TM    MNATFULL(R11),B'10000000'                           0164
         BNO   @RF00164                                            0164
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0165
*Z013ARFS:                                                         0165
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z013ARFS L     @15,@CV00037                                        0165
         BALR  @14,@15                                             0165
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0166
*                                      PUSH AND TRACK                */
@RF00164 DS    0H                                                  0166
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0167
*     END;                                                         0168
*   RFY                                                            0169
*    (R1) UNRSTD;                                                  0169
@RC00160 DS    0H                                                  0170
*   IF CCACD1^=OKAY THEN            /* CHECK IF CORE OBTAINED        */
         CLI   CCACD1(R11),0                                       0170
         BE    @RF00170                                            0170
*     CALL EXIT;                    /* NO STORAGE ERROR EXIT         */
         BAL   @14,EXIT                                            0171
*   CMSRCCOR=CCAMNADR;              /* SAVE RECORD BUILD CORE PT     */
*                                                                  0172
@RF00170 L     @10,CCACMSWA(,R11)                                  0172
         L     @05,CCAMNADR(,R11)                                  0172
         ST    @05,CMSRCCOR(,@10)                                  0172
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR THE NEWLY OBTAINED RECORD CONSTRUCTION STORAGE          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   R2=CCAMNADR;                    /* GET CORE ADDRESS              */
         LR    R2,@05                                              0173
*   R3=CCAMNLEN;                    /* GET CORE LENGTH               */
         SLR   R3,R3                                               0174
         ICM   R3,7,CCAMNLEN(R11)                                  0174
*   RFY                                                            0175
*    (R5) RSTD;                                                    0175
*   R5=NONE;                        /* CLEAR THE REGISTER            */
         SLR   R5,R5                                               0176
*   GEN(MVCL R2,R4);                /* CLEAR THE CORE                */
         MVCL R2,R4
*   R2=CCAR0REC;                    /* SET START RECORD AREA         */
         L     R2,CCAR0REC(,R11)                                   0178
*   R3=(NORABRC1*CTRECSIZ);         /* SIZE OF CORE TO CLEAR         */
         LA    R3,1024                                             0179
*   GEN(MVCL R2,R4);                /* CLEAR VIRTUAL STORAGE         */
         MVCL R2,R4
*   R2=CCAR3REC;                    /* GET RECORD AREA PTR           */
         L     R2,CCAR3REC(,R11)                                   0181
*   R3=(NORABRC2*CTRECSIZ);         /* GET VIRTUAL STORAGE SIZE      */
         LA    R3,1536                                             0182
*   GEN(MVCL R2,R4);                /* CLEAR THE VIRTUAL STORAGE     */
         MVCL R2,R4
*   RFY                                                            0184
*    (R5) UNRSTD;                                                  0184
*                                                                  0184
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE MASTER INDEX TO THE IN CORE CATALOG RECORD         */
*   /* CONSTRUCTION AREAS                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*   CMSCTREC(1)=CMSRCCOR+(NOXCTREC*LENGTH(CCARAB));                0185
         L     @10,CCACMSWA(,R11)                                  0185
         LA    @05,200                                             0185
         AL    @05,CMSRCCOR(,@10)                                  0185
         ST    @05,CMSCTREC(,@10)                                  0185
*   CMSCTREC(2)=CMSCTREC(1)+CTRECSIZ;/* INDEX RECORD REFER           */
         LA    @15,512                                             0186
         ALR   @05,@15                                             0186
         ST    @05,CMSCTREC+4(,@10)                                0186
*   CMSCTREC(3)=CCAR2REC;           /* CLUSTER RECORD REFERENCE      */
         MVC   CMSCTREC+8(4,@10),CCAR2REC(R11)                     0187
*   CMSCTREC(4)=CCAR0REC;           /* CCR REFERENCE                 */
         MVC   CMSCTREC+12(4,@10),CCAR0REC(R11)                    0188
*   CMSCTREC(5)=CMSCTREC(2)+CTRECSIZ;/* HIGH LEVEL INDEX             */
         L     @05,CMSCTREC+4(,@10)                                0189
         ALR   @05,@15                                             0189
         ST    @05,CMSCTREC+16(,@10)                               0189
*   CMSCTREC(6)=CMSCTREC(5)+CTRECSIZ;/* LOW KEY RANGE RECRD          */
         ALR   @05,@15                                             0190
         ST    @05,CMSCTREC+20(,@10)                               0190
*   CMSCTREC(7)=CMSCTREC(6)+CTRECSIZ;/* LOW KEY RANGE SS             */
         ALR   @05,@15                                             0191
         ST    @05,CMSCTREC+24(,@10)                               0191
*   CMSCTREC(8)=CMSCTREC(7)+CTRECSIZ;/* HIGH KEY RANGE DATA          */
         ALR   @05,@15                                             0192
         ST    @05,CMSCTREC+28(,@10)                               0192
*   CMSCTREC(9)=CMSCTREC(8)+CTRECSIZ;/* HIGH KEY RANGE SS            */
         ALR   @05,@15                                             0193
         ST    @05,CMSCTREC+32(,@10)                               0193
*   CMSCTREC(10)=CCAR3REC;          /* VOLUME RECORD(BASE) REF       */
         MVC   CMSCTREC+36(4,@10),CCAR3REC(R11)                    0194
*   CMSCTREC(11)=CCAR4REC;          /* VOL EXTENSION REC 1 REF       */
         MVC   CMSCTREC+40(4,@10),CCAR4REC(R11)                    0195
*   CMSCTREC(12)=CCAR5REC;          /* VOL EXTENSION REC 2 REF       */
         MVC   CMSCTREC+44(4,@10),CCAR5REC(R11)                    0196
*   CMSCTREC(13)=CMSCTREC(9)+CTRECSIZ;/* VOL EXTENSION RCRD          */
         L     @05,CMSCTREC+32(,@10)                               0197
         ALR   @05,@15                                             0197
         ST    @05,CMSCTREC+48(,@10)                               0197
*   CMSCTREC(14)=CMSCTREC(13)+CTRECSIZ;/* VOL EXT RECORD             */
         ALR   @05,@15                                             0198
         ST    @05,CMSCTREC+52(,@10)                               0198
*   CMSCTREC(15)=CMSCTREC(14)+CTRECSIZ;/* VOL EXT RECORD             */
*                                                                  0199
         ALR   @05,@15                                             0199
         ST    @05,CMSCTREC+56(,@10)                               0199
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TO CALL DEFINE SPACE TO GET THE DATA SPACE THE SPACE   */
*   /* FVT IS INITIALIZED ON ENTRY TO THIS FCN                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0200
*PLSBG1:                                                           0200
*   CMCPLFVT=CTGFVT;                /* SAVE MAIN FVT ADDRESS         */
PLSBG1   L     @10,CCACMSWA(,R11)                                  0200
         L     @05,CCACPL(,R11)                                    0200
         L     @15,CTGFVT(,@05)                                    0200
         ST    @15,CMCPLFVT(,@10)                                  0200
*   CTGFVT=CTGFVVCH;                /* SET UP SPACE FVT ADDRESS      */
         L     @10,CTGFVVCH(,@15)                                  0201
         ST    @10,CTGFVT(,@05)                                    0201
*   CCAASCI(1)=MAINVRCI;            /* SET VOL RECORD CI VALUE       */
         MVC   CCAASCI(3,R11),@CF00095+1                           0202
*   CCADESA=CCADESA&&CCADESA;       /* CLEAR THE EXTENT RETURN       */
*                                                                  0203
         XC    CCADESA(44,R11),CCADESA(R11)                        0203
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE DEFINE SPACE FUNCTION TO GET THE CATALOG DATA SPACE  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0204
*   IF CMCPLFVT->CTGFVDCH->CTGFVATR->CTGFLPT(1)->/*          @Y30SSDC*/
*       CTGDSREC=ON THEN            /*                       @Y30SSDC*/
         L     @05,CTGFVDCH(,@15)                                  0204
         L     @05,CTGFVATR(,@05)                                  0204
         L     @05,CTGFLPT(,@05)                                   0204
         TM    CTGDSREC(@05),B'00001000'                           0204
         BNO   @RF00204                                            0204
*     CTGFVDRC=ON;                  /* IND RECOV CAT         @Y30SSDC*/
         OI    CTGFVDRC(@10),B'00010000'                           0205
*   ELSE                                                           0206
*     ;                             /* NOT RECOV CAT         @Y30SSDC*/
@RF00204 DS    0H                                                  0207
*   CCAURAB=ADDR(CCARAB3);          /* SET VOL RECORD RAB ADDR       */
*                                                                  0207
         LA    @10,CCARAB3(,R11)                                   0207
         ST    @10,CCAURAB(,R11)                                   0207
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAQ                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*Z014DEFS:                                                         0208
*   CALL IGGPDEFS;                                                 0208
*                                                                  0208
Z014DEFS L     @15,@CV00039                                        0208
         BALR  @14,@15                                             0208
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN FORM DEFINE SPACE                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0209
*   CTGFVT=CMCPLFVT;                /* RE-SET THE MAIN FVT ADDR      */
         L     @10,CCACPL(,R11)                                    0209
         L     @05,CCACMSWA(,R11)                                  0209
         L     @15,CMCPLFVT(,@05)                                  0209
         ST    @15,CTGFVT(,@10)                                    0209
*   CMDEFSWA=NONE;                  /* CLEAR DEFINE SPACE FIELD      */
         SLR   @10,@10                                             0210
         ST    @10,CMDEFSWA(,@05)                                  0210
*   SAVFSTXT=CCAEXTDE(1);           /* SAVE FIRST EXTENT     @XZ02675*/
         MVC   SAVFSTXT(8,@05),CCAEXTDE(R11)                       0211
*   IF CCACD1=OKAY THEN             /* CHECK FOR SUCCESSFUL PROC     */
         CLI   CCACD1(R11),0                                       0212
         BNE   @RF00212                                            0212
*     DO;                           /* PREPARE TO CALL SUBALLOC      */
*                                                                  0213
*       /*************************************************************/
*       /*                                                           */
*       /* CONSTRUCT THE SUBALLOCATE ROUTINE INTERFACE               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0214
*       CCAALPTR=CCAR1REC;          /* SUB ALLOCATE PARM LIST        */
         L     @10,CCAR1REC(,R11)                                  0214
         ST    @10,CCAALPTR(,R11)                                  0214
*       SALPARL(1:256)=SALPARL(1:256)&&SALPARL(1:256);             0215
         XC    SALPARL(256,@10),SALPARL(@10)                       0215
*       CMVLVOL=CTGFVVCH->CTGFVVLT->LTVOLSER(1);/* VOL SER           */
         L     @10,CTGFVVCH(,@15)                                  0216
         L     @10,CTGFVVLT(,@10)                                  0216
         MVC   CMVLVOL(6,@05),LTVOLSER(@10)                        0216
*       CMVLLTLN=LENGTH(CMVLLIST)-LENGTH(CMVLLTLN);/* LNG            */
         MVC   CMVLLTLN(2,@05),@CH00054                            0217
*       SALOPTNS=SACANOPT;          /* SET CANDIDATE REQUEST FLG     */
         L     @10,CCAALPTR(,R11)                                  0218
         MVI   SALOPTNS(@10),X'00'                                 0218
*       SALSOURC=SARABS;            /* VER SOURCE IS RABS            */
         MVI   SALSOURC(@10),X'01'                                 0219
*       SALDSCIN=CATCLSCI;          /* SET DATA SET CI ID VALUE      */
         MVC   SALDSCIN(3,@10),@CF00066+1                          0220
*       SALCALN=CMTRKPCA(1);        /* CONTROL AREA SIZE             */
         MVC   SALCALN(2,@10),CMTRKPCA(@05)                        0221
*       SALVLIST=ADDR(CMVLLIST);    /* VOLUME LIST ADDRESS           */
         LA    @15,CMVLLIST(,@05)                                  0222
         ST    @15,SALVLIST(,@10)                                  0222
*       SALRLIST=ADDR(CMDEFSWA);    /* RESPONSE LIST ADDRESS         */
         LA    @05,CMDEFSWA(,@05)                                  0223
         ST    @05,SALRLIST(,@10)                                  0223
*       SALMXEXT=MAXEXTS;           /* SET MAX NO. EXTENTS           */
         MVI   SALMXEXT(@10),X'05'                                 0224
*       PRLLN=INCR1;                /* SET NO. RESPONSE ELEMENTS     */
*                                                                  0225
         MVI   PRLLN(@05),X'01'                                    0225
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAR                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0226
*Z015SALL:                                                         0226
*       CALL IGGPSALL;                                             0226
Z015SALL L     @15,@CV00043                                        0226
         BALR  @14,@15                                             0226
*       IF CCACD1=OKAY THEN         /* PROCESS FOR DS DIR OKAY       */
         CLI   CCACD1(R11),0                                       0227
         BNE   @RF00227                                            0227
*         DO;                                                      0228
*           IF CCANDEXT>INCR1 THEN  /* MANY EXTENTS USE ALL SPC      */
         CLI   CCANDEXT(R11),1                                     0229
         BNH   @RF00229                                            0229
*             DO;                   /*                       @XZ02675*/
*               SALUNITS=CTGFVVCH->CTGFVSPC->CTGFLPT(1)->SPCPRIMQ; 0231
         L     @10,CCAALPTR(,R11)                                  0231
         L     @05,CCACPL(,R11)                                    0231
         L     @05,CTGFVT(,@05)                                    0231
         L     @05,CTGFVVCH(,@05)                                  0231
         L     @05,CTGFVSPC(,@05)                                  0231
         L     @05,CTGFLPT(,@05)                                   0231
         MVC   SALUNITS(2,@10),SPCPRIMQ+1(@05)                     0231
*               SALOPTNS=CTGFVVCH->CTGFVSPC->CTGFLPT(1)->SPCOPTNS; 0232
         MVC   SALOPTNS(1,@10),SPCOPTNS(@05)                       0232
*             END;                  /*                       @XZ02675*/
*           ELSE                    /* ONE EXTENT, USE NEEDED        */
*             DO;                   /*                       @XZ02675*/
         B     @RC00229                                            0234
@RF00229 DS    0H                                                  0235
*               SALUNITS=CTGFVSPC->CTGFLPT(1)->SPCPRIMQ;           0235
         L     @10,CCAALPTR(,R11)                                  0235
         L     @05,CCACPL(,R11)                                    0235
         L     @05,CTGFVT(,@05)                                    0235
         L     @05,CTGFVSPC(,@05)                                  0235
         L     @05,CTGFLPT(,@05)                                   0235
         MVC   SALUNITS(2,@10),SPCPRIMQ+1(@05)                     0235
*               SALOPTNS=CTGFVSPC->CTGFLPT(1)->SPCOPTNS;/*   @XZ02675*/
         MVC   SALOPTNS(1,@10),SPCOPTNS(@05)                       0236
*             END;                  /*                       @XZ02675*/
*           CCADESA=CCADESA&&CCADESA;/* CLEAR EXTENT RETURN LOC      */
*                                                                  0238
@RC00229 XC    CCADESA(44,R11),CCADESA(R11)                        0238
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAR                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0239
*Z016SALL:                                                         0239
*           CALL IGGPSALL;                                         0239
Z016SALL L     @15,@CV00043                                        0239
         BALR  @14,@15                                             0239
*           CCASSVOL=PRLENT(1);     /* SAVE DS DIR SEQ #     @Y30SSDC*/
         L     @10,CCAALPTR(,R11)                                  0240
         L     @10,SALRLIST(,@10)                                  0240
         MVC   CCASSVOL(2,R11),PRLENT(@10)                         0240
*           IF CCANDEXT>INCR1 THEN  /* MULTIPLE EXTENTS              */
*                                                                  0241
         CLI   CCANDEXT(R11),1                                     0241
         BNH   @RF00241                                            0241
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLAE                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0242
*Z017MEBM:                                                         0242
*             CALL IGGPMEBM;        /* RETURN UNUSED CAT SPACE       */
Z017MEBM L     @15,@CV00041                                        0242
         BALR  @14,@15                                             0242
*           ELSE                                                   0243
*             ;                     /* NOT MULTIPLE EXTENTS          */
*                                                                  0243
@RF00241 DS    0H                                                  0244
*           /*********************************************************/
*           /*                                                       */
*           /* TEST FOR RECOVERABLE CATALOG                  @Y30SSSB*/
*           /* AND IF ENOUGH SPACE FOR CAT AND CRA.          @Y30SSSB*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0244
*           IF CTGFVDCH->CTGFVATR->CTGFLPT(1)->/*            @Y30SSSB*/
*               CTGDSREC=ON THEN    /*                       @Y30SSSB*/
         L     @10,CCACPL(,R11)                                    0244
         L     @10,CTGFVT(,@10)                                    0244
         L     @05,CTGFVDCH(,@10)                                  0244
         L     @05,CTGFVATR(,@05)                                  0244
         L     @05,CTGFLPT(,@05)                                   0244
         TM    CTGDSREC(@05),B'00001000'                           0244
         BNO   @RF00244                                            0244
*             IF CTGFVVCH->CTGFVSPC->CTGFLPT(1)/*            @Y30SSSB*/
*                 ->SPCPRIMQ<       /*                       @Y30SSSB*/
*                 (CTGFVSPC->CTGFLPT(1)->SPCPRIMQ/*          @Y30SSSB*/
*                 +CMTRKCYL(1)) THEN/*                       @Y30SSSB*/
*                                                                  0245
         L     @05,CTGFVVCH(,@10)                                  0245
         L     @05,CTGFVSPC(,@05)                                  0245
         L     @05,CTGFLPT(,@05)                                   0245
         L     @10,CTGFVSPC(,@10)                                  0245
         L     @10,CTGFLPT(,@10)                                   0245
         L     @01,CCACMSWA(,R11)                                  0245
         SLR   @00,@00                                             0245
         ICM   @00,7,SPCPRIMQ(@10)                                 0245
         AH    @00,CMTRKCYL(,@01)                                  0245
         SLR   @10,@10                                             0245
         ICM   @10,7,SPCPRIMQ(@05)                                 0245
         CR    @00,@10                                             0245
         BNH   @RF00245                                            0245
*               /*****************************************************/
*               /*                                                   */
*               /* IF NOT SET ERROR CODE                     @Y30SSSB*/
*               /* SET CCAMODID='AS', CCAREASN=RSN6, CCARETRN=RCCRAOP*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0246
*               CCAPROB=IGGSEGID+(RSN6*K256)+RCCRAOP;/*      @Y30SSSB*/
         MVC   CCAPROB(4,R11),@CF03363                             0246
*             ELSE                  /*                       @Y30SSSB*/
*                                                                  0247
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLB4                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0247
*Z019DCRA:                                                         0247
*               CALL IGGPDCRA;      /* DEFINE CRA            @Y30SSSB*/
         B     @RC00245                                            0247
@RF00245 DS    0H                                                  0247
Z019DCRA L     @15,@CV00038                                        0247
         BALR  @14,@15                                             0247
*           ELSE                                                   0248
*             ;                     /* NOT RECOV CAT         @Y30SSSB*/
@RF00244 DS    0H                                                  0249
*         END;                                                     0249
*       ELSE                                                       0250
*         ;                         /* ERROR IN SUBALLOC PROC        */
@RF00227 DS    0H                                                  0251
*     END;                          /* END SUBALLOCATE FUNCTION      */
@RC00227 DS    0H                                                  0252
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RF00212 BAL   @14,EXIT                                            0252
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCVO');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCVO'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0255
@EF00003 DS    0H                                                  0255
@ER00003 BR    @14                                                 0255
@PB00003 DS    0H                                                  0256
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0257
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCVO  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0257
*IGGPDCVO:                                                         0257
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0257
IGGPDCVO DS    0H                                                  0258
*Z020:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z020DCVO:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0258
*    (R5,                                                          0258
*     R6,                                                          0258
*     R7,                                                          0258
*     R8,                                                          0258
*     R9,                                                          0258
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z020     DS    0H                                                  0258
Z020DCVO DS    0H                                                  0259
*   RFY                                                            0259
*    (R2,                                                          0259
*     R3,                                                          0259
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0261
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO BUILD VOLUME OCCURRENCES, CONVERT       */
*   /* PHYSICAL TO LOGICAL ADDRESS AND TO SET UP THE CATALOG KEY     */
*   /* RANGES ESTABLISH ADDRESSABILITY TO THE DATA FPL VOLUME        */
*   /* OCCURRENCES AND BUILD THE OCCURRENCES                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0262
*   CCAMCPL=CMSCTREC(15)+CTRECSIZ;  /* ADDRESS OF MODIFY CPL         */
*                                                                  0262
         L     @10,CCACMSWA(,R11)                                  0262
         LA    @05,512                                             0262
         AL    @05,CMSCTREC+56(,@10)                               0262
         ST    @05,CCAMCPL(,R11)                                   0262
*   /*****************************************************************/
*   /*                                                               */
*   /* ASSOCIATION FPL ADDRESS                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*   CMASCFPL=CCAMCPL+LENGTH(CTGPL)+(5*LENGTH(CTGFIELD));           0263
*                                                                  0263
         AH    @05,@CH00276                                        0263
         ST    @05,CMASCFPL(,@10)                                  0263
*   /*****************************************************************/
*   /*                                                               */
*   /* HIGHEST INDEX LEVELS VOLUME OCCURRENCE FPL ADDRESS            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0264
*   CMHIXFPL=CMASCFPL+LENGTH(CMASFPST);                            0264
*                                                                  0264
         AH    @05,@CH00271                                        0264
         ST    @05,CMHIXFPL(,@10)                                  0264
*   /*****************************************************************/
*   /*                                                               */
*   /* DATA LOW KEY RANGE VOLUME OCCURRENCE FPL ADDRESS              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0265
*   CMLDTFPL=CMHIXFPL+LENGTH(CMFPLSTR)+LENGTH(CMFXECTS);           0265
         AH    @05,@CH03364                                        0265
         ST    @05,CMLDTFPL(,@10)                                  0265
*   RFY                                                            0266
*    (CMFPLREF) RSTD;                                              0266
*   RFY                                                            0267
*     CMFPLSTR BASED(CMFPLREF);                                    0267
*Z021DCLD:                                                         0268
*   CALL IGGPDCLD;                  /* BUILD LOW DATA RANGE OCCR     */
Z021DCLD BAL   @14,IGGPDCLD                                        0268
*   RFY                                                            0269
*    (CMFPLREF) RSTD;                                              0269
*                                                                  0269
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSABILITY FOR THE HIGH DATA KEY RANGE FPL AND     */
*   /* VOLUME OCCURRENCE STRUCTURE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0270
*   CMHDTFPL=CMEXTLST+CMEXTLST->VARWRKLN+LENGTH(CMFLEXLN);         0270
*                                                                  0270
         L     @10,CCACMSWA(,R11)                                  0270
         L     @15,CMEXTLST(,@10)                                  0270
         LH    @14,VARWRKLN(,@15)                                  0270
         ALR   @14,@15                                             0270
         AH    @14,@CH00066                                        0270
         ST    @14,CMHDTFPL(,@10)                                  0270
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE BASIC FPL AND VOLUME OCCURRENCE OF THE LOW DATA KEY  */
*   /* RANGE INFORMATION INTO THE HIGH KEY RANGE INFO                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0271
*   GENWRKRG=LENGTH(CMFPLSTR)+(NOKEYRNG*LENGTH(CTRNGVLU));         0271
         LA    GENWRKRG,79                                         0271
*   CMHDTFPL->CMFPLSTR(1:GENWRKRG)=CMFPLSTR(1:GENWRKRG);           0272
         LR    @10,GENWRKRG                                        0272
         BCTR  @10,0                                               0272
         EX    @10,@SM03372                                        0272
*Z022DCIX:                                                         0273
*   CALL IGGPDCIX;                  /* BUILD HIGH LEVEL IX OCCR      */
Z022DCIX BAL   @14,IGGPDCIX                                        0273
*   RFY                                                            0274
*    (CMFPLREF) RSTD;                                              0274
*Z023DCHD:                                                         0275
*   CALL IGGPDCHD;                  /* BUILD HIGH DATA RANGE OCR     */
Z023DCHD BAL   @14,IGGPDCHD                                        0275
*   RFY                                                            0276
*    (CMFPLREF) RSTD;                                              0276
*                                                                  0276
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD AN ASSOCIATION FPL FOR THE CLUSTER                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0277
*   CMFPLREF=CMASCFPL;              /* GET THE FPL ADDRESS           */
         L     @10,CCACMSWA(,R11)                                  0277
         L     @15,CMASCFPL(,@10)                                  0277
         LR    CMFPLREF,@15                                        0277
*   RFY                                                            0278
*     CTGFL BASED(CMFPLREF);                                       0278
*   CTGFLDNO=INCR1;                 /* NO. OF LENGTH/ADDR PAIRS      */
         MVI   CTGFLDNO(CMFPLREF),X'01'                            0279
*   CTGFLDNM=ADDR(CMAFDNAM);        /* FIELD NAME ADDRESS            */
         LA    @14,CMAFDNAM(,@15)                                  0280
         ST    @14,CTGFLDNM(,CMFPLREF)                             0280
*   CMAFDNAM='NAMEDS  ';            /* FIELD NAME                    */
         MVC   CMAFDNAM(8,@15),@CC03248                            0281
*   CTGFLNG(1)=LENGTH(CMAFTYPE)+LENGTH(CMAFNAME);                  0282
         MVC   CTGFLNG(4,CMFPLREF),@CF00126                        0282
*   CTGFLPT(1)=ADDR(CMAFTYPE);      /* DATA LOCATION                 */
         LA    @14,CMAFTYPE(,@15)                                  0283
         ST    @14,CTGFLPT(,CMFPLREF)                              0283
*   CMAFTYPE=CTGFVCL;               /* SET CLUSTER TYPE ASSOC        */
         MVI   CMAFTYPE(@15),C'C'                                  0284
*   CMAFNAME=CATCLSCI;              /* SET CATALOG CLUSTER CI        */
*                                                                  0285
         MVC   CMAFNAME(3,@15),@CF00066+1                          0285
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPLETE THE ENTVOL FPLS AND PREPARE THE CPL IN CORE FOR THE  */
*   /* FIRST USE OF MODIFY                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0286
*   CMFPLREF=CMHIXFPL;              /* HIGH LEVELS INDEX FPL ADR     */
         L     CMFPLREF,CMHIXFPL(,@10)                             0286
*   GENWRKRG=(ADDR(CMFLEND)-ADDR(CMFLRLRP))+LENGTH(CMFXECTS);/* SET
*                                      DATA LENGTH                   */
         LA    GENWRKRG,CMFLEND(,CMFPLREF)                         0287
         LA    @10,CMFLRLRP(,CMFPLREF)                             0287
         SLR   GENWRKRG,@10                                        0287
         AH    GENWRKRG,@CH00179                                   0287
*Z024DCFL:                                                         0288
*   CALL IGGPDCFL;                  /* USE FIELD LIST INIT RTN       */
Z024DCFL BAL   @14,IGGPDCFL                                        0288
*   RFY                                                            0289
*    (CMFPLREF) RSTD;                                              0289
*   CMFPLREF=CMLDTFPL;              /* LOW DATA RANGE FPL ADDR       */
         L     @10,CCACMSWA(,R11)                                  0290
         L     CMFPLREF,CMLDTFPL(,@10)                             0290
*   GENWRKRG=GENWRKRG+(2*LENGTH(CTRNGVLU))+((CMFLNOEX-INCR1)*LENGTH(
*       CMFXECTS));                 /* DATA LENGTH                   */
         LA    @10,2                                               0291
         ALR   @10,GENWRKRG                                        0291
         SLR   @15,@15                                             0291
         IC    @15,CMFLNOEX(,CMFPLREF)                             0291
         BCTR  @15,0                                               0291
         MH    @15,@CH00179                                        0291
         ALR   @10,@15                                             0291
         LR    GENWRKRG,@10                                        0291
*Z025DCFL:                                                         0292
*   CALL IGGPDCFL;                  /* USE FIELD LIST INIT RTN       */
Z025DCFL BAL   @14,IGGPDCFL                                        0292
*   RFY                                                            0293
*    (CMFPLREF) RSTD;                                              0293
*   CMFPLREF=CMHDTFPL;              /* HIGH DATA RANGE FPL ADDR      */
         L     @10,CCACMSWA(,R11)                                  0294
         L     CMFPLREF,CMHDTFPL(,@10)                             0294
*   GENWRKRG=(ADDR(CMFLEND)-ADDR(CMFLRLRP))+(2*LENGTH(CTRNGVLU))+( 0295
*       CMFLNOEX*LENGTH(CMFXECTS));                                0295
         LA    GENWRKRG,CMFLEND(,CMFPLREF)                         0295
         LA    @10,CMFLRLRP(,CMFPLREF)                             0295
         SLR   GENWRKRG,@10                                        0295
         AH    GENWRKRG,@CH00066                                   0295
         SLR   @10,@10                                             0295
         IC    @10,CMFLNOEX(,CMFPLREF)                             0295
         MH    @10,@CH00179                                        0295
         ALR   GENWRKRG,@10                                        0295
*Z026DCFL:                                                         0296
*   CALL IGGPDCFL;                  /* USE FIELD LIST INIT RTN       */
Z026DCFL BAL   @14,IGGPDCFL                                        0296
*   RFY                                                            0297
*    (CMFPLREF) RSTD;                                              0297
*                                                                  0297
*   /*****************************************************************/
*   /*                                                               */
*   /* PREPARE THE MODIFY CPL FOR USAGE FOR THE DATA RECORD          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0298
*   RFY                                                            0298
*     CTGPL BASED(CCAMCPL);                                        0298
*   CTGNOFLD=NODATAOC;              /* NUMBER OF DATA OCCURENCES     */
         L     @10,CCAMCPL(,R11)                                   0299
         MVI   CTGNOFLD(@10),X'04'                                 0299
*   CTGFIELD(1)=CMASCFPL;           /* ASSOCIATION FPL               */
         L     @15,CCACMSWA(,R11)                                  0300
         MVC   CTGFIELD(4,@10),CMASCFPL(@15)                       0300
*   CTGFIELD(2)=CCACPL->CTGFVT->CTGFVDCH->CTGFVAMD;                0301
         L     @01,CCACPL(,R11)                                    0301
         L     @01,CTGFVT(,@01)                                    0301
         L     @01,CTGFVDCH(,@01)                                  0301
         MVC   CTGFIELD+4(4,@10),CTGFVAMD(@01)                     0301
*   CTGFIELD(3)=CMLDTFPL;           /* LOW RANGE DATA OCCURENCE      */
         MVC   CTGFIELD+8(4,@10),CMLDTFPL(@15)                     0302
*   CTGFIELD(4)=CMHDTFPL;           /* HIGH RANGE DATA OCCURENCE     */
         MVC   CTGFIELD+12(4,@10),CMHDTFPL(@15)                    0303
*   RFY                                                            0304
*     CTGPL BASED(CCACPL);                                         0304
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0305
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCLD');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCLD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0308
@EF00004 DS    0H                                                  0308
@ER00004 BR    @14                                                 0308
@PB00004 DS    0H                                                  0309
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0310
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCLD  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0310
*IGGPDCLD:                                                         0310
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0310
IGGPDCLD DS    0H                                                  0311
*Z027:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z027DCLD:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0311
*    (R5,                                                          0311
*     R6,                                                          0311
*     R7,                                                          0311
*     R8,                                                          0311
*     R9,                                                          0311
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z027     DS    0H                                                  0311
Z027DCLD DS    0H                                                  0312
*   RFY                                                            0312
*    (R2,                                                          0312
*     R3,                                                          0312
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0314
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO PROCESS THE LOW RANGE DATA INFO         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0315
*   RFY                                                            0315
*    (CMFPLREF) RSTD;                                              0315
*                                                                  0315
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSTRUCT THE FPL AND OCCURRENCE FOR THE USE OF MODIFY        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   CMFPLREF=CMLDTFPL;              /* SET DATA FPL ADDRESS          */
         L     @10,CCACMSWA(,R11)                                  0316
         L     CMFPLREF,CMLDTFPL(,@10)                             0316
*   CMFLDNAM='ENTVOL  ';            /* SET FIELD NAME                */
         MVC   CMFLDNAM(8,CMFPLREF),@CC03264                       0317
*   CMFLDEVT=CMSWADTY(1);           /* SET DEVICE TYPE               */
         MVC   CMFLDEVT(4,CMFPLREF),CMSWADTY(@10)                  0318
*   CMFLVOL=CTGFVVCH->CTGFVVLT->LTVOLSER(1);/* VOLUME ID             */
         L     @01,CCACPL(,R11)                                    0319
         L     @15,CTGFVT(,@01)                                    0319
         L     @01,CTGFVVCH(,@15)                                  0319
         L     @01,CTGFVVLT(,@01)                                  0319
         MVC   CMFLVOL(6,CMFPLREF),LTVOLSER(@01)                   0319
*   CMFLVLPR=ON;                    /* SET PRIMARY VOLUME            */
         OI    CMFLVLPR(CMFPLREF),B'10000000'                      0320
*   CMFLPHYB=CMPHYBLK(1);           /* SET PHYSICAL BLOCK SIZE       */
         MVC   CMFLPHYB(4,CMFPLREF),CMPHYBLK(@10)                  0321
*   CMFLNBTK=CMBLKTRK(1);           /* SET NO. OF BLOCKS/TRACK       */
         MVC   CMFLNBTK(2,CMFPLREF),CMBLKTRK(@10)                  0322
*   CMFLNTKA=CMTRKPCA(1);           /* SET NO. TRACKS PER CA         */
         LH    @14,CMTRKPCA(,@10)                                  0323
         STH   @14,CMFLNTKA(,CMFPLREF)                             0323
*   CMFLSSDS=CCASSVOL;              /* SET DS DIR SEQ #      @Y30SSDC*/
*                                                                  0324
         MVC   CMFLSSDS(2,CMFPLREF),CCASSVOL(R11)                  0324
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE KEY RANGES FOR THE LOW DATA RANGE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*   CMFLLKLN=INCR1;                 /* SET LOW RANGE LENGTH          */
         LA    @09,1                                               0325
         STH   @09,CMFLLKLN(,CMFPLREF)                             0325
*   RFY                                                            0326
*    (RANGLOCR) RSTD;                                              0326
*   RANGLOCR=ADDR(CMFLLKLN)+LENGTH(CMFLLKLN);/* KEY POSITON          */
         LA    @08,2                                               0327
         LA    RANGLOCR,CMFLLKLN(,CMFPLREF)                        0327
         ALR   RANGLOCR,@08                                        0327
*   RANGLOCR->CTRNGVLU=LOWKEYLO;    /* SET LOW RANGE LOW KEY         */
         MVI   CTRNGVLU(RANGLOCR),X'00'                            0328
*   RANGLOCR=RANGLOCR+CMFLLKLN;     /* HIGH KEY LENGTH LOCATION      */
         ALR   RANGLOCR,@09                                        0329
*   RANGLOCR->VARWRKLN=INCR1;       /* LOW KEY RANGE HI KEY LEN      */
         STH   @09,VARWRKLN(,RANGLOCR)                             0330
*   RANGLOCR=RANGLOCR+LENGTH(VARWRKLN);/* HI KEY POSITION            */
         ALR   RANGLOCR,@08                                        0331
*   RANGLOCR->CTRNGVLU=LOWKEYHI;    /* LOW KEY RANGE HIGH VALUE      */
         MVI   CTRNGVLU(RANGLOCR),X'3F'                            0332
*   CMEXTLST=RANGLOCR+CMFLLKLN;     /* LOCATION OF EXTENT LENGTH     */
         ALR   @09,RANGLOCR                                        0333
         ST    @09,CMEXTLST(,@10)                                  0333
*   RFY                                                            0334
*    (RANGLOCR) UNRSTD;                                            0334
*                                                                  0334
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS THE TOTAL CATALOG EXTENTS IN THE CCA AND SUB DIVIDE   */
*   /* THE TOTAL SPACE BETWEEN THE LOW DATA KEY RANGE, THE HIGHER    */
*   /* LEVELS OF THE INDEX, AND THE HIGH DATA KEY RANGE - TOTAL SPACE*/
*   /* IS IN THE CCA FROM SUBALLOCATE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0335
*   GENWRKRG=CTGFVSPC->CTGFLPT(1)->SPCPRIMQ;/* CATALOG QT            */
         L     @10,CTGFVSPC(,@15)                                  0335
         L     @10,CTGFLPT(,@10)                                   0335
         SLR   GENWRKRG,GENWRKRG                                   0335
         ICM   GENWRKRG,7,SPCPRIMQ(@10)                            0335
*   GENWRKRG=GENWRKRG-CMFLNTKA;     /* REMOVE HIGH LEVEL IX QTY      */
         SLR   GENWRKRG,@14                                        0336
*   HIRANGEQ=(GENWRKRG/(CMFLNTKA*HIRNGPCT))*CMFLNTKA;              0337
         LR    @01,@14                                             0337
         MH    @01,@CH00092                                        0337
         LR    @06,GENWRKRG                                        0337
         SRDA  @06,32                                              0337
         DR    @06,@01                                             0337
         MR    @06,@14                                             0337
         LR    HIRANGEQ,@07                                        0337
*   IF HIRANGEQ=NONE THEN           /* CHECK FOR NO QUOTIENT         */
         LTR   HIRANGEQ,HIRANGEQ                                   0338
         BNZ   @RF00338                                            0338
*     HIRANGEQ=CMFLNTKA;            /* SET HIGH RANGE QUANTITY       */
         LR    HIRANGEQ,@14                                        0339
*   ELSE                                                           0340
*     ;                             /* HIGH RANGE ALREADY SET        */
@RF00338 DS    0H                                                  0341
*   GENWRKRG=GENWRKRG-HIRANGEQ;     /* SPACE FOR LOW KEY RANGE       */
         SLR   GENWRKRG,HIRANGEQ                                   0341
*   CCAIXEXT=INCR1;                 /* SET EXTENT INDEX VALUE        */
         MVI   CCAIXEXT(R11),X'01'                                 0342
*   CMEXTLST=CMEXTLST+LENGTH(CMFLEXLN);/* EXTENTS POSITION           */
         L     @10,CCACMSWA(,R11)                                  0343
         LA    @15,2                                               0343
         AL    @15,CMEXTLST(,@10)                                  0343
         ST    @15,CMEXTLST(,@10)                                  0343
*   RECRDRFR=CMSCTREC(1);           /* REFERENCE TO DATA RECORD      */
         L     RECRDRFR,CMSCTREC(,@10)                             0344
*   RCDID=CTGTDATA;                 /* SET RECORD TYPE               */
         MVI   RCDID(RECRDRFR),C'D'                                0345
*   CHIA=-INCR1;                    /* SET STARTING RBA IN DATA      */
         MVC   CHIA(4,RECRDRFR),@CF03366                           0346
*Z028DCRC:                                                         0347
*   CALL IGGPDCRC;                  /* RBA AND CCHH PROCESS RTN      */
Z028DCRC BAL   @14,IGGPDCRC                                        0347
*   RFY                                                            0348
*    (CMFPLREF) RSTD;                                              0348
*   CMEXTLST=CMEXTLST-LENGTH(CMFLEXLN);/* EXTENT LENGTH ADR          */
         L     @10,CCACMSWA(,R11)                                  0349
         L     @15,CMEXTLST(,@10)                                  0349
         BCTR  @15,0                                               0349
         BCTR  @15,0                                               0349
         ST    @15,CMEXTLST(,@10)                                  0349
*   CMEXTLST->VARWRKLN=CMFLNOEX*LENGTH(CMFXECTS);/* LENGTH           */
         SLR   @10,@10                                             0350
         IC    @10,CMFLNOEX(,CMFPLREF)                             0350
         MH    @10,@CH00179                                        0350
         STH   @10,VARWRKLN(,@15)                                  0350
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0351
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCIX');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCIX'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0354
@EF00005 DS    0H                                                  0354
@ER00005 BR    @14                                                 0354
@PB00005 DS    0H                                                  0355
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0356
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCIX  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0356
*IGGPDCIX:                                                         0356
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0356
IGGPDCIX DS    0H                                                  0357
*Z029:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z029DCIX:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0357
*    (R5,                                                          0357
*     R6,                                                          0357
*     R7,                                                          0357
*     R8,                                                          0357
*     R9,                                                          0357
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z029     DS    0H                                                  0357
Z029DCIX DS    0H                                                  0358
*   RFY                                                            0358
*    (R2,                                                          0358
*     R3,                                                          0358
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0360
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO PROCESS THE HIGH LEVEL INDEX DATA       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0361
*   RFY                                                            0361
*    (CMFPLREF) RSTD;                                              0361
*                                                                  0361
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD THE FPL AND VOLUME OCCURRENCE STRUCTURE FOR THE         */
*   /* NON-SEQUENCE SET LEVELS OF THE CATALOG INDEX SECTION          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0362
*   CMFPLREF=CMHIXFPL;              /* GET STRUCTURE ADDRESS         */
         L     @10,CCACMSWA(,R11)                                  0362
         L     CMFPLREF,CMHIXFPL(,@10)                             0362
*   CMFLDNAM='ENTVOL  ';            /* SET FIELD NAME                */
         MVC   CMFLDNAM(8,CMFPLREF),@CC03264                       0363
*   CMFLDEVT=CMSWADTY(2);           /* SET DEVICE TYPE               */
         MVC   CMFLDEVT(4,CMFPLREF),CMSWADTY+16(@10)               0364
*   CMFLVOL=CMLDTFPL->CMFLVOL;      /* VOLUME ID-SAME AS DATA        */
         L     @01,CMLDTFPL(,@10)                                  0365
         MVC   CMFLVOL(6,CMFPLREF),CMFLVOL(@01)                    0365
*   CMFLVLPR=ON;                    /* SET PRIME VOLUME              */
         OI    CMFLVLPR(CMFPLREF),B'10000000'                      0366
*   CMFLPHYB=CMPHYBLK(2);           /* PHYSICAL BLOCK SIZE           */
         MVC   CMFLPHYB(4,CMFPLREF),CMPHYBLK+16(@10)               0367
*   CMFLNBTK=CMBLKTRK(2);           /* NO. BLOCKS PER TRACK          */
         MVC   CMFLNBTK(2,CMFPLREF),CMBLKTRK+16(@10)               0368
*   CMFLNTKA=CMTRKPCA(2);           /* TRACKS PER ALLOCATE UNIT      */
         MVC   CMFLNTKA(2,CMFPLREF),CMTRKPCA+16(@10)               0369
*   CMFLLKLN=CLEAR;                 /* NO KEY LENGTH FOR INDEX       */
         SLR   @15,@15                                             0370
         STH   @15,CMFLLKLN(,CMFPLREF)                             0370
*   CMFLHKLN=CLEAR;                 /* NO KEY LENGTH FOR INDEX       */
*                                                                  0371
         STH   @15,CMFLHKLN(,CMFPLREF)                             0371
*   /*****************************************************************/
*   /*                                                               */
*   /* NEED TO CALL SUBALLOCATE TO SET UP AN INDEX DATA SET DIRECTORY*/
*   /* GROUP IN THE VOLUME RECORD PREPARE AND GET THE INDEX PHYSICAL */
*   /* SPACE                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0372
*   GENWRKRG=CMTRKPCA(1);           /* SIZE OF 1 DATA CNTRL AREA     */
         LH    GENWRKRG,CMTRKPCA(,@10)                             0372
*   CMEXTLST=ADDR(CMFLEND);         /* POSITION FOR EXTENT           */
         LA    @15,CMFLEND(,CMFPLREF)                              0373
         ST    @15,CMEXTLST(,@10)                                  0373
*   RECRDRFR=CMSCTREC(2);           /* INDEX RECORD ADDRESSABLTY     */
         L     RECRDRFR,CMSCTREC+4(,@10)                           0374
*   RCDID=CTGTINDX;                 /* SET RECORD TYPE               */
         MVI   RCDID(RECRDRFR),C'I'                                0375
*   CHIA=-INCR1;                    /* STARTING INDEX RBA            */
         MVC   CHIA(4,RECRDRFR),@CF03366                           0376
*Z030DCRC:                                                         0377
*   CALL IGGPDCRC;                  /* RBA AND CCHH PROCESS RTN      */
Z030DCRC BAL   @14,IGGPDCRC                                        0377
*   RFY                                                            0378
*    (CMFPLREF) RSTD;                                              0378
*   CMFLEXLN=CMFLNOEX*LENGTH(CMFXECTS);/* LENGTH OF EXTENTS          */
*                                                                  0379
         SLR   @10,@10                                             0379
         IC    @10,CMFLNOEX(,CMFPLREF)                             0379
         LR    @15,@10                                             0379
         MH    @15,@CH00179                                        0379
         STH   @15,CMFLEXLN(,CMFPLREF)                             0379
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE THE INDEX AMDSB - EXTENTS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0380
*   CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDNEXT=CMFLNOEX;              0380
         L     @01,CCACPL(,R11)                                    0380
         L     @01,CTGFVT(,@01)                                    0380
         L     @01,CTGFVICH(,@01)                                  0380
         L     @01,CTGFVAMD(,@01)                                  0380
         L     @01,CTGFLPT(,@01)                                   0380
         STH   @10,AMDNEXT(,@01)                                   0380
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0381
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCHD');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCHD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0384
@EF00006 DS    0H                                                  0384
@ER00006 BR    @14                                                 0384
@PB00006 DS    0H                                                  0385
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0386
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCHD  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0386
*IGGPDCHD:                                                         0386
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0386
IGGPDCHD DS    0H                                                  0387
*Z031:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z031DCHD:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0387
*    (R5,                                                          0387
*     R6,                                                          0387
*     R7,                                                          0387
*     R8,                                                          0387
*     R9,                                                          0387
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z031     DS    0H                                                  0387
Z031DCHD DS    0H                                                  0388
*   RFY                                                            0388
*    (R2,                                                          0388
*     R3,                                                          0388
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0390
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO PROCESS THE HIGH RANGE DATA INFO        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0391
*   RFY                                                            0391
*    (CMFPLREF) RSTD;                                              0391
*                                                                  0391
*   /*****************************************************************/
*   /*                                                               */
*   /* MODIFY AND COMPLETE THE HIGH DATA KEY RANGE VOLUME AND FPL    */
*   /* STRUCTURE                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0392
*   CMFPLREF=CMHDTFPL;              /* STRUCTURE ADDRESS             */
         L     @10,CCACMSWA(,R11)                                  0392
         L     CMFPLREF,CMHDTFPL(,@10)                             0392
*   CMFLNOEX=OKAY;                  /* CLEAR NO. OF EXTENTS          */
*                                                                  0393
         MVI   CMFLNOEX(CMFPLREF),X'00'                            0393
*   /*****************************************************************/
*   /*                                                               */
*   /* RE-SET THE KEY RANGE VALUES                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0394
*   RFY                                                            0394
*    (RANGLOCR) RSTD;                                              0394
*   RANGLOCR=ADDR(CMFLLKLN)+LENGTH(CMFLLKLN);/* KEY POSITION         */
         LA    @15,2                                               0395
         LA    RANGLOCR,CMFLLKLN(,CMFPLREF)                        0395
         ALR   RANGLOCR,@15                                        0395
*   RANGLOCR->CTRNGVLU=HIKEYLOW;    /* HIGH RANGE LOW KEY VALUE      */
         MVI   CTRNGVLU(RANGLOCR),X'40'                            0396
*   RANGLOCR=RANGLOCR+CMFLLKLN+LENGTH(CMFLHKLN);                   0397
         LH    @06,CMFLLKLN(,CMFPLREF)                             0397
         LR    @14,RANGLOCR                                        0397
         ALR   @14,@06                                             0397
         ALR   @14,@15                                             0397
         LR    RANGLOCR,@14                                        0397
*   RANGLOCR->CTRNGVLU=HIKEYHI;     /* HIGH RANGE HIGH KEY VALUE     */
         MVI   CTRNGVLU(RANGLOCR),X'FF'                            0398
*   CMEXTLST=RANGLOCR+CMFLLKLN+LENGTH(CMFLEXLN);                   0399
         ALR   @06,RANGLOCR                                        0399
         ALR   @06,@15                                             0399
         ST    @06,CMEXTLST(,@10)                                  0399
*   RFY                                                            0400
*    (RANGLOCR) UNRSTD;                                            0400
*   GENWRKRG=HIRANGEQ;              /* SPACE FOR HIGH KEY RANGE      */
         LR    GENWRKRG,HIRANGEQ                                   0401
*   RECRDRFR=CMSCTREC(1);           /* REFERENCE TO DATA RECORD      */
         L     RECRDRFR,CMSCTREC(,@10)                             0402
*Z032DCRC:                                                         0403
*   CALL IGGPDCRC;                  /* RBA AND CCHH PROCESS RTN      */
Z032DCRC BAL   @14,IGGPDCRC                                        0403
*   RFY                                                            0404
*    (CMFPLREF) RSTD;                                              0404
*   CMEXTLST=CMEXTLST-LENGTH(CMFLEXLN);/* EXTENT LENGTH ADDR         */
         L     @10,CCACMSWA(,R11)                                  0405
         L     @15,CMEXTLST(,@10)                                  0405
         BCTR  @15,0                                               0405
         BCTR  @15,0                                               0405
         ST    @15,CMEXTLST(,@10)                                  0405
*   CMEXTLST->VARWRKLN=CMFLNOEX*LENGTH(CMFXECTS);/* LENGTH           */
         SLR   @14,@14                                             0406
         IC    @14,CMFLNOEX(,CMFPLREF)                             0406
         LR    @09,@14                                             0406
         MH    @09,@CH00179                                        0406
         STH   @09,VARWRKLN(,@15)                                  0406
*   CHIA=CHIA+INCR1;                /* ADJUST DATA HIGH RBA          */
*                                                                  0407
         LA    @15,1                                               0407
         AL    @15,CHIA(,RECRDRFR)                                 0407
         ST    @15,CHIA(,RECRDRFR)                                 0407
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE THE DATA AMDSB - EXTENTS AND FREE BYTES                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0408
*   CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDASPA=CHIA;                  0408
         L     @01,CCACPL(,R11)                                    0408
         L     @01,CTGFVT(,@01)                                    0408
         L     @01,CTGFVDCH(,@01)                                  0408
         L     @01,CTGFVAMD(,@01)                                  0408
         L     @09,CTGFLPT(,@01)                                   0408
         ST    @15,AMDASPA(,@09)                                   0408
*   CTGFVDCH->CTGFVAMD->CTGFLPT(1)->AMDNEXT=CMFLNOEX+CMLDTFPL->CMFLNOEX
*       ;                           /* TOTAL DATA EXTENTS            */
         L     @10,CMLDTFPL(,@10)                                  0409
         SLR   @15,@15                                             0409
         IC    @15,CMFLNOEX(,@10)                                  0409
         ALR   @14,@15                                             0409
         STH   @14,AMDNEXT(,@09)                                   0409
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0410
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCFL');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCFL'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0413
@EF00007 DS    0H                                                  0413
@ER00007 BR    @14                                                 0413
@PB00007 DS    0H                                                  0414
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0415
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCFL  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0415
*IGGPDCFL:                                                         0415
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0415
IGGPDCFL DS    0H                                                  0416
*Z033:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z033DCFL:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0416
*    (R5,                                                          0416
*     R6,                                                          0416
*     R7,                                                          0416
*     R8,                                                          0416
*     R9,                                                          0416
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z033     DS    0H                                                  0416
Z033DCFL DS    0H                                                  0417
*   RFY                                                            0417
*    (R2,                                                          0417
*     R3,                                                          0417
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0419
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO PREPARE THE VOLUME FPLS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0420
*   RFY                                                            0420
*    (CMFPLREF) RSTD;                                              0420
*   RFY                                                            0421
*     CTGFL BASED(CMFPLREF);                                       0421
*   CTGFLDNO=INCR1;                 /* SET NO. LENGTH/ADDR PAIRS     */
         MVI   CTGFLDNO(CMFPLREF),X'01'                            0422
*   CTGFLDNM=ADDR(CMFLDNAM);        /* FIELD NAME ADDRESS            */
         LA    @10,CMFLDNAM(,CMFPLREF)                             0423
         ST    @10,CTGFLDNM(,CMFPLREF)                             0423
*   CTGFLNG(1)=GENWRKRG;            /* LENGTH OF DATA                */
         ST    GENWRKRG,CTGFLNG(,CMFPLREF)                         0424
*   CTGFLPT(1)=ADDR(CMFLRLRP);      /* DATA ADDRESS                  */
         LA    @10,CMFLRLRP(,CMFPLREF)                             0425
         ST    @10,CTGFLPT(,CMFPLREF)                              0425
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0426
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCRC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCRC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0429
@EF00008 DS    0H                                                  0429
@ER00008 BR    @14                                                 0429
@PB00008 DS    0H                                                  0430
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0431
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCRC  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0431
*IGGPDCRC:                                                         0431
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0431
IGGPDCRC DS    0H                                                  0432
*   GEN(ENTRY IGGPDCRC );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPDCRC
*Z034:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z034DCRC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0433
*    (R5,                                                          0433
*     R6,                                                          0433
*     R7,                                                          0433
*     R8,                                                          0433
*     R9,                                                          0433
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z034     DS    0H                                                  0433
Z034DCRC DS    0H                                                  0434
*   RFY                                                            0434
*    (R2,                                                          0434
*     R3,                                                          0434
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0439
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30SSDC*/
*   /* INTERNAL ROUTINE TO DETERMINE LOGICAL DIVISION OF THE CATALOG */
*   /* PHYSICAL SPACE AND TO COMPUTE THE PROPER PHYSICAL AND LOGICAL */
*   /* BOUNDARIES                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0440
*   RFY                                                            0440
*    (CMFPLREF) RSTD;                                              0440
*   SPACINDC='GO';                  /* SET PROCESS INDICATOR         */
         L     @10,CCACMSWA(,R11)                                  0441
         MVC   SPACINDC(2,@10),@CC03301                            0441
*   IF CMFLNOEX=OKAY THEN           /* PROCESSING NEW EXTENTS        */
         CLI   CMFLNOEX(CMFPLREF),0                                0442
         BNE   @RF00442                                            0442
*     DO CCAIXEXT=CCAIXEXT TO CCANDEXT WHILE(SPACINDC='GO');       0443
         SLR   @10,@10                                             0443
         IC    @10,CCAIXEXT(,R11)                                  0443
         B     @DE00443                                            0443
@DL00443 L     @10,CCACMSWA(,R11)                                  0443
         CLC   SPACINDC(2,@10),@CC03301                            0443
         BNE   @DC00443                                            0443
*       CMFLNOEX=CMFLNOEX+INCR1;    /* INCREMENT EXTENT COUNTER      */
         LA    @15,1                                               0444
         SLR   @14,@14                                             0444
         IC    @14,CMFLNOEX(,CMFPLREF)                             0444
         ALR   @15,@14                                             0444
         STC   @15,CMFLNOEX(,CMFPLREF)                             0444
*       CMFXEXSS(CMFLNOEX)=CCAEXTSS(CCAIXEXT);/* EXTENT SS           */
         MH    @15,@CH00179                                        0445
         L     @10,CMEXTLST(,@10)                                  0445
         SLR   @14,@14                                             0445
         IC    @14,CCAIXEXT(,R11)                                  0445
         SLA   @14,3                                               0445
         ST    @14,@TF00001                                        0445
         ALR   @14,R11                                             0445
         SLR   @09,@09                                             0445
         ICM   @09,3,CCAEXTSS-8(@14)                               0445
         LA    @08,0(@15,@10)                                      0445
         AL    @08,@CF03375                                        0445
         STH   @09,CMFXEXSS(,@08)                                  0445
*       CMFXEXST(CMFLNOEX)=CCAEXTAD(CCAIXEXT);/* START CCHH          */
         ST    @15,@TF00002                                        0446
         ALR   @15,@10                                             0446
         AL    @15,@CF03376                                        0446
         LR    @14,R11                                             0446
         AL    @14,@TF00001                                        0446
         MVC   CMFXEXST-2(4,@15),CCAEXTAD-8(@14)                   0446
*       IF GENWRKRG>CCAEXTTH(CCAIXEXT) THEN/* SMALL EXTENT           */
         L     @01,@TF00001                                        0447
         LH    @15,CCAEXTTH-8(@01,R11)                             0447
         CR    GENWRKRG,@15                                        0447
         BNH   @RF00447                                            0447
*         CMFXNOTT(CMFLNOEX)=CCAEXTTH(CCAIXEXT);/* USE ALL           */
         L     @14,@TF00002                                        0448
         AL    @10,@CF03377                                        0448
         STH   @15,CMFXNOTT-10(@14,@10)                            0448
*       ELSE                        /* EXTENT LARGER THEN NEED       */
*         DO;                                                      0449
         B     @RC00447                                            0449
@RF00447 DS    0H                                                  0450
*           CMFXNOTT(CMFLNOEX)=GENWRKRG;/* SET TRACKS NEED           */
         SLR   @10,@10                                             0450
         IC    @10,CMFLNOEX(,CMFPLREF)                             0450
         MH    @10,@CH00179                                        0450
         L     @15,CCACMSWA(,R11)                                  0450
         L     @01,CMEXTLST(,@15)                                  0450
         AL    @01,@CF03377                                        0450
         STH   GENWRKRG,CMFXNOTT-10(@10,@01)                       0450
*           CCAEXTTH(CCAIXEXT)=CCAEXTTH(CCAIXEXT)-GENWRKRG;        0451
         SLR   @10,@10                                             0451
         IC    @10,CCAIXEXT(,R11)                                  0451
         SLA   @10,3                                               0451
         LH    @14,CCAEXTTH-8(@10,R11)                             0451
         SLR   @14,GENWRKRG                                        0451
         STH   @14,CCAEXTTH-8(@10,R11)                             0451
*           SPACINDC='NG';          /* SET PROCESS DONE              */
         MVC   SPACINDC(2,@15),@CC03302                            0452
*         END;                                                     0453
*       CMFXEDCC(CMFLNOEX)=(CMFXSTHH(CMFLNOEX)-INCR1+CMFXNOTT(CMFLNOEX)
*           )/CMTRKCYL(1);                                         0454
@RC00447 SLR   @10,@10                                             0454
         IC    @10,CMFLNOEX(,CMFPLREF)                             0454
         MH    @10,@CH00179                                        0454
         L     @15,CCACMSWA(,R11)                                  0454
         L     @14,CMEXTLST(,@15)                                  0454
         LA    @01,0(@10,@14)                                      0454
         AL    @01,@CF03378                                        0454
         LH    @09,CMFXSTHH-4(,@01)                                0454
         BCTR  @09,0                                               0454
         LA    @08,0(@10,@14)                                      0454
         AL    @08,@CF03377                                        0454
         AH    @09,CMFXNOTT-10(,@08)                               0454
         LH    @15,CMTRKCYL(,@15)                                  0454
         LR    @00,@09                                             0454
         SRDA  @00,32                                              0454
         DR    @00,@15                                             0454
         LA    @09,0(@10,@14)                                      0454
         AL    @09,@CF03379                                        0454
         STH   @01,CMFXEDCC-6(,@09)                                0454
*       CMFXEDHH(CMFLNOEX)=(CMFXSTHH(CMFLNOEX)-INCR1+CMFXNOTT(CMFLNOEX)
*           )//CMTRKCYL(1);         /* END HH VALUE                  */
         LA    @01,0(@10,@14)                                      0455
         AL    @01,@CF03378                                        0455
         LH    @09,CMFXSTHH-4(,@01)                                0455
         BCTR  @09,0                                               0455
         LA    @08,0(@10,@14)                                      0455
         AL    @08,@CF03377                                        0455
         AH    @09,CMFXNOTT-10(,@08)                               0455
         LR    @00,@09                                             0455
         SRDA  @00,32                                              0455
         DR    @00,@15                                             0455
         LA    @01,0(@10,@14)                                      0455
         AL    @01,@CF03380                                        0455
         STH   @00,CMFXEDHH-8(,@01)                                0455
*       CMFXEDCC(CMFLNOEX)=CMFXEDCC(CMFLNOEX)+CMFXSTCC(CMFLNOEX);/*
*                                      INDING CC VALUE               */
*                                                                  0456
         LA    @01,0(@10,@14)                                      0456
         AL    @01,@CF03379                                        0456
         LH    @15,CMFXEDCC-6(,@01)                                0456
         LA    @01,0(@10,@14)                                      0456
         AL    @01,@CF03376                                        0456
         AH    @15,CMFXSTCC-2(,@01)                                0456
         AL    @14,@CF03379                                        0456
         STH   @15,CMFXEDCC-6(@10,@14)                             0456
*       /*************************************************************/
*       /*                                                           */
*       /* COMPUTE RBAS                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0457
*PLSFIXA:                                                          0457
*       CMFXLRBA(CMFLNOEX)=CHIA+INCR1;/* SET START DDDD              */
PLSFIXA  SLR   @10,@10                                             0457
         IC    @10,CMFLNOEX(,CMFPLREF)                             0457
         MH    @10,@CH00179                                        0457
         L     @15,CCACMSWA(,R11)                                  0457
         L     @14,CMEXTLST(,@15)                                  0457
         LA    @09,1                                               0457
         AL    @09,CHIA(,RECRDRFR)                                 0457
         LA    @08,0(@10,@14)                                      0457
         AL    @08,@CF03381                                        0457
         ST    @09,CMFXLRBA-12(,@08)                               0457
*       IF RCDID=CTGTDATA THEN      /* DATA WITH SEQ SET W/DATA      */
         CLI   RCDID(RECRDRFR),C'D'                                0458
         BNE   @RF00458                                            0458
*         CMFXHRBA(CMFLNOEX)=CMBLKTRK(1)*CMPHYBLK(1)*(CMFXNOTT(CMFLNOEX
*             )-(CMFXNOTT(CMFLNOEX)/CMTRKPCA(1)))+CMFXLRBA(CMFLNOEX)-
*             INCR1;                                               0459
         L     @01,CMPHYBLK(,@15)                                  0459
         MH    @01,CMBLKTRK(,@15)                                  0459
         LA    @08,0(@10,@14)                                      0459
         AL    @08,@CF03377                                        0459
         LH    @08,CMFXNOTT-10(,@08)                               0459
         LR    @06,@08                                             0459
         SRDA  @06,32                                              0459
         LH    @15,CMTRKPCA(,@15)                                  0459
         DR    @06,@15                                             0459
         SLR   @08,@07                                             0459
         MR    @00,@08                                             0459
         ALR   @01,@09                                             0459
         BCTR  @01,0                                               0459
         AL    @14,@CF03382                                        0459
         ST    @01,CMFXHRBA-16(@10,@14)                            0459
*       ELSE                        /* HIGH LEVEL INDEX EXTENT       */
*         CMFXHRBA(CMFLNOEX)=CMPHYBLK(2)*CMFXNOTT(CMFLNOEX)*CMBLKTRK(2)
*             +CMFXLRBA(CMFLNOEX)-INCR1;                           0460
         B     @RC00458                                            0460
@RF00458 SLR   @10,@10                                             0460
         IC    @10,CMFLNOEX(,CMFPLREF)                             0460
         MH    @10,@CH00179                                        0460
         L     @15,CCACMSWA(,R11)                                  0460
         L     @14,CMEXTLST(,@15)                                  0460
         L     @01,CMPHYBLK+16(,@15)                               0460
         LA    @09,0(@10,@14)                                      0460
         AL    @09,@CF03377                                        0460
         MH    @01,CMFXNOTT-10(,@09)                               0460
         MH    @01,CMBLKTRK+16(,@15)                               0460
         LA    @15,0(@10,@14)                                      0460
         AL    @15,@CF03381                                        0460
         AL    @01,CMFXLRBA-12(,@15)                               0460
         BCTR  @01,0                                               0460
         AL    @14,@CF03382                                        0460
         ST    @01,CMFXHRBA-16(@10,@14)                            0460
*       CHIA=CMFXHRBA(CMFLNOEX);    /* NEW HIGH ALLOCATED            */
@RC00458 SLR   @10,@10                                             0461
         IC    @10,CMFLNOEX(,CMFPLREF)                             0461
         MH    @10,@CH00179                                        0461
         L     @15,CCACMSWA(,R11)                                  0461
         L     @14,CMEXTLST(,@15)                                  0461
         LA    @01,0(@10,@14)                                      0461
         AL    @01,@CF03382                                        0461
         L     @09,CMFXHRBA-16(,@01)                               0461
         ST    @09,CHIA(,RECRDRFR)                                 0461
*       IF CCAEXTTH(CCAIXEXT)^=CLEAR THEN/* NEED TO UPDATE           */
         SLR   @09,@09                                             0462
         SLR   @08,@08                                             0462
         IC    @08,CCAIXEXT(,R11)                                  0462
         SLA   @08,3                                               0462
         CH    @09,CCAEXTTH-8(@08,R11)                             0462
         BE    @RF00462                                            0462
*         DO;                                                      0463
*           CCAEXTCC(CCAIXEXT)=CMFXEDCC(CMFLNOEX);                 0464
         LA    @01,0(@10,@14)                                      0464
         AL    @01,@CF03379                                        0464
         LH    @07,CMFXEDCC-6(,@01)                                0464
         STH   @07,CCAEXTCC-8(@08,R11)                             0464
*           CCAEXTHH(CCAIXEXT)=CMFXEDHH(CMFLNOEX)+INCR1;           0465
         LA    @07,1                                               0465
         AL    @14,@CF03380                                        0465
         LH    @10,CMFXEDHH-8(@10,@14)                             0465
         ALR   @10,@07                                             0465
         STH   @10,CCAEXTHH-8(@08,R11)                             0465
*           IF CCAEXTHH(CCAIXEXT)=CMTRKCYL(1) THEN                 0466
         CH    @10,CMTRKCYL(,@15)                                  0466
         BNE   @RF00466                                            0466
*             DO;                   /* UPDATE TO NEXT CYLINDER       */
*               CCAEXTHH(CCAIXEXT)=CLEAR;                          0468
         STH   @09,CCAEXTHH-8(@08,R11)                             0468
*               CCAEXTCC(CCAIXEXT)=CCAEXTCC(CCAIXEXT)+INCR1;       0469
         AH    @07,CCAEXTCC-8(@08,R11)                             0469
         STH   @07,CCAEXTCC-8(@08,R11)                             0469
*             END;                                                 0470
*         END;                                                     0471
@RF00466 DS    0H                                                  0472
*       IF SPACINDC='NG' THEN       /* CHECK FOR PROCESS STATUS      */
@RF00462 L     @10,CCACMSWA(,R11)                                  0472
         CLC   SPACINDC(2,@10),@CC03302                            0472
         BNE   @RF00472                                            0472
*         CCAIXEXT=CCAIXEXT-INCR1;  /* DECREMENT INDEX TO CCA        */
         SLR   @10,@10                                             0473
         IC    @10,CCAIXEXT(,R11)                                  0473
         BCTR  @10,0                                               0473
         STC   @10,CCAIXEXT(,R11)                                  0473
*       ELSE                        /* ADJUST TRACKS NEEDED          */
*         GENWRKRG=GENWRKRG-CCAEXTTH(CCAIXEXT);                    0474
         B     @RC00472                                            0474
@RF00472 SLR   @10,@10                                             0474
         IC    @10,CCAIXEXT(,R11)                                  0474
         SLA   @10,3                                               0474
         SH    GENWRKRG,CCAEXTTH-8(@10,R11)                        0474
*     END;                                                         0475
@RC00472 LA    @10,1                                               0475
         SLR   @15,@15                                             0475
         IC    @15,CCAIXEXT(,R11)                                  0475
         ALR   @10,@15                                             0475
         STC   @10,CCAIXEXT(,R11)                                  0475
@DE00443 SLR   @15,@15                                             0475
         IC    @15,CCANDEXT(,R11)                                  0475
         CR    @10,@15                                             0475
         BNH   @DL00443                                            0475
@DC00443 DS    0H                                                  0476
*   ELSE                            /* CONVERT SEQ SET RBAS          */
*     DO;                                                          0476
         B     @RC00442                                            0476
@RF00442 DS    0H                                                  0477
*       DO CCAIXEXT=INCR1 TO CMFLNOEX;                             0477
         LA    @10,1                                               0477
         B     @DE00477                                            0477
@DL00477 DS    0H                                                  0478
*         CMFXLRBA(CCAIXEXT)=CHIA+INCR1;/* SET LOW DDDD              */
         LA    @10,20                                              0478
         SLR   @01,@01                                             0478
         IC    @01,CCAIXEXT(,R11)                                  0478
         MR    @00,@10                                             0478
         L     @15,CCACMSWA(,R11)                                  0478
         L     @14,CMEXTLST(,@15)                                  0478
         LA    @00,1                                               0478
         AL    @00,CHIA(,RECRDRFR)                                 0478
         LA    @09,0(@01,@14)                                      0478
         AL    @09,@CF03381                                        0478
         ST    @00,CMFXLRBA-12(,@09)                               0478
*         CMFXHRBA(CCAIXEXT)=(CMPHYBLK(2)*(CMFXNOTT(CCAIXEXT)/CMTRKPCA(
*             1)))+CMFXLRBA(CMFLNOEX)-INCR1;                       0479
         LA    @09,0(@01,@14)                                      0479
         AL    @09,@CF03377                                        0479
         LH    @06,CMFXNOTT-10(,@09)                               0479
         SRDA  @06,32                                              0479
         LH    @00,CMTRKPCA(,@15)                                  0479
         DR    @06,@00                                             0479
         M     @06,CMPHYBLK+16(,@15)                               0479
         LR    @09,@10                                             0479
         SLR   @10,@10                                             0479
         IC    @10,CMFLNOEX(,CMFPLREF)                             0479
         MR    @08,@10                                             0479
         AL    @09,@CF03381                                        0479
         AL    @07,CMFXLRBA-12(@09,@14)                            0479
         BCTR  @07,0                                               0479
         AL    @14,@CF03382                                        0479
         ST    @07,CMFXHRBA-16(@01,@14)                            0479
*         CHIA=CMFXHRBA(CCAIXEXT);  /* SET NEW HIGH RBA              */
         ST    @07,CHIA(,RECRDRFR)                                 0480
*       END;                                                       0481
         LA    @10,1                                               0481
         SLR   @15,@15                                             0481
         IC    @15,CCAIXEXT(,R11)                                  0481
         ALR   @10,@15                                             0481
@DE00477 STC   @10,CCAIXEXT(,R11)                                  0481
         SLR   @15,@15                                             0481
         IC    @15,CMFLNOEX(,CMFPLREF)                             0481
         CR    @10,@15                                             0481
         BNH   @DL00477                                            0481
*       CMFLSSDT=ON;                /* INDICATE SEQ SET WITH DAT     */
         OI    CMFLSSDT(CMFPLREF),B'10000000'                      0482
*       CTGFVICH->CTGFVAMD->CTGFLPT(1)->AMDNEXT=CTGFVICH->CTGFVAMD->
*           CTGFLPT(1)->AMDNEXT+CMFLNOEX;/* SET NO. OF EXTENTS       */
         L     @10,CCACPL(,R11)                                    0483
         L     @10,CTGFVT(,@10)                                    0483
         L     @10,CTGFVICH(,@10)                                  0483
         L     @10,CTGFVAMD(,@10)                                  0483
         L     @10,CTGFLPT(,@10)                                   0483
         SLR   @15,@15                                             0483
         IC    @15,CMFLNOEX(,CMFPLREF)                             0483
         AH    @15,AMDNEXT(,@10)                                   0483
         STH   @15,AMDNEXT(,@10)                                   0483
*     END;                                                         0484
*   CMFLHABA=CHIA+INCR1;            /* SET HIGH ALLOCATED RBA        */
@RC00442 LA    @10,1                                               0485
         AL    @10,CHIA(,RECRDRFR)                                 0485
         ST    @10,CMFLHABA(,CMFPLREF)                             0485
*   CMFLHUBA=CMFXLRBA(1);           /* SET HIGH USED RBA             */
         L     @10,CCACMSWA(,R11)                                  0486
         L     @10,CMEXTLST(,@10)                                  0486
         MVC   CMFLHUBA(4,CMFPLREF),CMFXLRBA(@10)                  0486
*   RFY                                                            0487
*    (CMFPLREF) UNRSTD;                                            0487
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0488
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCBE');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCBE'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0491
@EF00009 DS    0H                                                  0491
@ER00009 BR    @14                                                 0491
@PB00009 DS    0H                                                  0492
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0493
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCBE  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0493
*IGGPDCBE:                                                         0493
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0493
IGGPDCBE DS    0H                                                  0494
*Z035:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z035DCBE:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0494
*    (R5,                                                          0494
*     R6,                                                          0494
*     R7,                                                          0494
*     R8,                                                          0494
*     R9,                                                          0494
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z035     DS    0H                                                  0494
Z035DCBE DS    0H                                                  0495
*   RFY                                                            0495
*    (R2,                                                          0495
*     R3,                                                          0495
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0497
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO INITIALIZE THE RECORDS WITH KEY AND ANY */
*   /* NECESSARY FIXED INFORMATION                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0498
*   RFY                                                            0498
*     CATRCD BASED(RECRDRFR);                                      0498
*   RECRDRFR=CMSCTREC(1);           /* SET DATA RECORD REFERENCE     */
         L     @10,CCACMSWA(,R11)                                  0499
         L     RECRDRFR,CMSCTREC(,@10)                             0499
*   CMWFVTPT=CTGFVDCH;              /* SET UP THE DATA FVT ADDR      */
         L     @05,CCACPL(,R11)                                    0500
         L     @05,CTGFVT(,@05)                                    0500
         MVC   CMWFVTPT(4,@10),CTGFVDCH(@05)                       0500
*   RFY                                                            0501
*     CTGFV BASED(CMWFVTPT);                                       0501
*   CCAURAB=CMSRCCOR;               /* LOCATION OF FIRST RAB         */
         MVC   CCAURAB(4,R11),CMSRCCOR(@10)                        0502
*   PROCESS='GO';                   /* SET PROCESS INDICATOR         */
         MVC   PROCESS(2,@10),@CC03301                             0503
*   DO WHILE PROCESS='GO';          /* INITIALIZE DATA AND INDEX     */
         B     @DE00504                                            0504
@DL00504 DS    0H                                                  0505
*     RCDID=CTGFVTYP;               /* SET RECORD ID TYPE            */
         L     @10,CCACMSWA(,R11)                                  0505
         L     @10,CMWFVTPT(,@10)                                  0505
         MVC   RCDID(1,RECRDRFR),CTGFVTYP(@10)                     0505
*     NREPLF=LENGTH(CATRCD)+LENGTH(CTGRBASE);/* LENGTH FIXED         */
*                                                                  0506
         LA    @05,143                                             0506
         STC   @05,NREPLF(,RECRDRFR)                               0506
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE CONTROL INFORMATION FOR REPEATING FLDS       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0507
*     CCACPE1=RECRDRFR;             /* START OF RECORD AREA          */
         L     @15,CCAURAB(,R11)                                   0507
         ST    RECRDRFR,CCACPE1(,@15)                              0507
*     CCACPE2=RECRDRFR+NREPLF;      /* REPEATING FIELD PTR           */
         ALR   @05,RECRDRFR                                        0508
         ST    @05,CCACPE2(,@15)                                   0508
*     CCACPE3=CCACPE2+LENGTH(EXTRCDPT)+LENGTH(REPCNT);             0509
         AH    @05,@CH00129                                        0509
         ST    @05,CCACPE3(,@15)                                   0509
*     CCACPE5=CCACPE3;              /* SET FIRST GOP POINTER         */
*                                                                  0510
         ST    @05,CCACPE5(,R11)                                   0510
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE FIXED INFORMATION IN THE RECORD              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0511
*     IF CTGFVOWN^=NONE THEN        /* CHECK FOR OWNER ID FIELD      */
         L     @10,CTGFVOWN(,@10)                                  0511
         LTR   @10,@10                                             0511
         BZ    @RF00511                                            0511
*       COWNID=CTGFVOWN->CTGFLPT(1)->OWNIDFLD;/* SET ID              */
         L     @10,CTGFLPT(,@10)                                   0512
         MVC   COWNID(8,RECRDRFR),OWNIDFLD(@10)                    0512
*     ELSE                          /* SET NULL NAME VALUE           */
*       COWNID=NULLNAME;            /* SET NULL VALUE                */
         B     @RC00511                                            0513
@RF00511 MVC   COWNID(8,RECRDRFR),NULLNAME                         0513
*     IF CTGFVEXT^=NONE THEN        /* EXCEPTION EXIT        @Y30SSSB*/
@RC00511 L     @10,CCACMSWA(,R11)                                  0514
         L     @10,CMWFVTPT(,@10)                                  0514
         L     @10,CTGFVEXT(,@10)                                  0514
         LTR   @10,@10                                             0514
         BZ    @RF00514                                            0514
*       CEXT=CTGFVEXT->CTGFLPT(1)->EXCPNAME;/* INIT          @Y30SSSB*/
         L     @10,CTGFLPT(,@10)                                   0515
         MVC   CEXT(8,RECRDRFR),EXCPNAME(@10)                      0515
*     ELSE                          /* NO EXIT MODULE        @Y30SSSB*/
*       CEXT=NULLNAME;              /* NULL FIELD VALUE      @Y30SSSB*/
         B     @RC00514                                            0516
@RF00514 MVC   CEXT(8,RECRDRFR),NULLNAME                           0516
*     CATTR=CTGFVATR->CTGFLPT(1)->CTGDSATR;/* ATTRIBUTES             */
*                                                                  0517
@RC00514 L     @10,CCACMSWA(,R11)                                  0517
         L     @05,CMWFVTPT(,@10)                                  0517
         L     @01,CTGFVATR(,@05)                                  0517
         L     @01,CTGFLPT(,@01)                                   0517
         MVC   CATTR(2,RECRDRFR),CTGDSATR(@01)                     0517
*     /***************************************************************/
*     /*                                                             */
*     /* PERFORM SPECIAL DATA OR INDEX PROCESSING                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0518
*     IF CTGFVTYP=CTGFVDTA THEN     /* CHECK FOR DATA OBJECT         */
         CLI   CTGFVTYP(@05),C'D'                                  0518
         BNE   @RF00518                                            0518
*       DO;                         /* BUILD DELETED GOPS            */
*         CNAME=CATDTANM;           /* SET MAIN DATA RECORD NAME     */
         MVC   CNAME(44,RECRDRFR),@CC00073                         0520
*         CBUF=MINBUFSZ;            /* SET MINIMUM BUFFER SIZE       */
         MVC   CBUF(4,RECRDRFR),@CF00097                           0521
*         CLRECL=CTGFVLRS->CTGFLPT(1)->LRECL;/* AVG REC SIZE         */
         L     @05,CTGFVLRS(,@05)                                  0522
         L     @05,CTGFLPT(,@05)                                   0522
         MVC   CLRECL(4,RECRDRFR),LRECL(@05)                       0522
*         CSPACPRM=CTGFVT->CTGFVSPC->CTGFLPT(1)->SPACEPRM;         0523
         L     @05,CCACPL(,R11)                                    0523
         L     @05,CTGFVT(,@05)                                    0523
         L     @05,CTGFVSPC(,@05)                                  0523
         L     @05,CTGFLPT(,@05)                                   0523
         MVC   CSPACPRM(7,RECRDRFR),SPACEPRM(@05)                  0523
*         CPRIM=CPRIM-CMTRKPCA(1);  /* SET DATA PRIMARY QTY          */
         SLR   @05,@05                                             0524
         ICM   @05,7,CPRIM(RECRDRFR)                               0524
         SH    @05,CMTRKPCA(,@10)                                  0524
         STCM  @05,7,CPRIM(RECRDRFR)                               0524
*         REPCNT=DATADELT;          /* SET COUNT OF DATA DEL GOP     */
         L     @10,CCAURAB(,R11)                                   0525
         L     @10,CCACPE2(,@10)                                   0525
         MVI   REPCNT(@10),X'02'                                   0525
*         GENWRKRG=DTALORCI;        /* SET LOW RANGE EXTENTS CI      */
         LA    GENWRKRG,5                                          0526
*         INCRREG=INCR1;            /* SET SEQUENCE COUNTER          */
         LA    INCRREG,1                                           0527
*Z036DCPB:                                                         0528
*         CALL IGGPDCPB;            /* BUILD THE DELETED GOP         */
Z036DCPB BAL   @14,IGGPDCPB                                        0528
*         GENWRKRG=DTAHIRCI;        /* SET HIGH RANGE EXTS CI        */
         LA    GENWRKRG,7                                          0529
*         INCRREG=INCRREG+INCR1;    /* UPDATE SEQUENCE COUNTER       */
         AH    INCRREG,@CH00083                                    0530
*Z037DCPB:                                                         0531
*         CALL IGGPDCPB;            /* BUILD THE DELETED GOP         */
Z037DCPB BAL   @14,IGGPDCPB                                        0531
*         CCACPE4=CCACPE5;          /* END OF DATA IN REC ADDR       */
         L     @10,CCAURAB(,R11)                                   0532
         L     @05,CCACPE5(,R11)                                   0532
         ST    @05,CCACPE4(,@10)                                   0532
*         RCDSIZ=CCACPE4-CCACPE1;   /* LENGTH OF USED INFO           */
         SL    @05,CCACPE1(,@10)                                   0533
         STH   @05,RCDSIZ(,RECRDRFR)                               0533
*         RECRDRFR=CMSCTREC(2);     /* SET INDEX RECORD REF          */
         L     @05,CCACMSWA(,R11)                                  0534
         L     RECRDRFR,CMSCTREC+4(,@05)                           0534
*         CCAURAB=CCAURAB+LENGTH(CCARAB);/* SET INDEX RAB            */
         AH    @10,@CH00179                                        0535
         ST    @10,CCAURAB(,R11)                                   0535
*         CMWFVTPT=CTGFVT->CTGFVICH;/* SET INDEX FVT ADDR            */
         L     @10,CCACPL(,R11)                                    0536
         L     @10,CTGFVT(,@10)                                    0536
         MVC   CMWFVTPT(4,@05),CTGFVICH(@10)                       0536
*       END;                                                       0537
*     ELSE                          /* INDEX OBJECT                  */
*       DO;                         /* BUILD ALL NEEDED GOPS         */
         B     @RC00518                                            0538
@RF00518 DS    0H                                                  0539
*         CNAME=CATIDXNM;           /* SET MAIN IDX RECORD NAME      */
         MVC   CNAME(44,RECRDRFR),@CC00078                         0539
*         CBUF=NULLWORD;            /* SET NULL BUFFER SIZE VALU     */
         L     @10,NULLWORD                                        0540
         ST    @10,CBUF(,RECRDRFR)                                 0540
*         CLRECL=NULLWORD;          /* SET NULL LRECL VALUE          */
         ST    @10,CLRECL(,RECRDRFR)                               0541
*         CPRIM=CMTRKPCA(1);        /* SET HIGH LEVEL TRACKS         */
         L     @10,CCACMSWA(,R11)                                  0542
         LH    @10,CMTRKPCA(,@10)                                  0542
         STCM  @10,7,CPRIM(RECRDRFR)                               0542
*         CSEC=CMTRKPCA(1);         /* SET EXTENSION QUANTITY        */
         STCM  @10,7,CSEC(RECRDRFR)                                0543
*         CSORT=CMSALTRK;           /* SET TRACK ALLOCATION QTY      */
         MVI   CSORT(RECRDRFR),B'10000000'                         0544
*         REPCNT=INDXDELT;          /* COUNT OF DELETED GOPS         */
         L     @10,CCAURAB(,R11)                                   0545
         L     @10,CCACPE2(,@10)                                   0545
         MVI   REPCNT(@10),X'03'                                   0545
*         GENWRKRG=IDXHILCI;        /* HIGH LEVEL INDEX EXTS CI      */
         LA    GENWRKRG,4                                          0546
*         INCRREG=INCR1;            /* SET GOP SEQUENCE COUNTER      */
         LA    INCRREG,1                                           0547
*Z038DCPB:                                                         0548
*         CALL IGGPDCPB;            /* BUILD A DELETED GOP           */
Z038DCPB BAL   @14,IGGPDCPB                                        0548
*         GENWRKRG=IDXLSSCI;        /* LOW SEQ SET EXTENTS CI        */
         LA    GENWRKRG,6                                          0549
*         INCRREG=INCRREG+INCR1;    /* UPDATE SEQUENCE COUNTER       */
         AH    INCRREG,@CH00083                                    0550
*Z039DCPB:                                                         0551
*         CALL IGGPDCPB;            /* BUILD A DELETED GOP           */
Z039DCPB BAL   @14,IGGPDCPB                                        0551
*         GENWRKRG=IDXHSSCI;        /* HIGH SEQ SET EXTENTS CI       */
         LA    GENWRKRG,8                                          0552
*         INCRREG=INCRREG+INCR1;    /* UPDATE SEQUENCE COUNTER       */
         AH    INCRREG,@CH00083                                    0553
*Z040DCPB:                                                         0554
*         CALL IGGPDCPB;            /* BUILD A DELETED GOP           */
Z040DCPB BAL   @14,IGGPDCPB                                        0554
*         CCACPE4=CCACPE5;          /* END OF DATA IN REC ADDR       */
         L     @10,CCAURAB(,R11)                                   0555
         L     @05,CCACPE5(,R11)                                   0555
         ST    @05,CCACPE4(,@10)                                   0555
*         RCDSIZ=CCACPE4-CCACPE1;   /* LENGTH OF USED INFO           */
         SL    @05,CCACPE1(,@10)                                   0556
         STH   @05,RCDSIZ(,RECRDRFR)                               0556
*         RCDCINO=INDXCINO;         /* SET INDEX RECORD CI NO.       */
         MVC   RCDCINO(3,RECRDRFR),@CF00083+1                      0557
*         PROCESS='NG';             /* SET PROCESS COMPLETE INDC     */
         L     @10,CCACMSWA(,R11)                                  0558
         MVC   PROCESS(2,@10),@CC03302                             0558
*       END;                                                       0559
*   END;                                                           0560
@RC00518 DS    0H                                                  0560
@DE00504 L     @10,CCACMSWA(,R11)                                  0560
         CLC   PROCESS(2,@10),@CC03301                             0560
         BE    @DL00504                                            0560
*   RFY                                                            0561
*     CTGFV BASED(CTGFVT);                                         0561
*Z041DCEB:                                                         0562
*   CALL IGGPDCEB;                  /* BUILD EXTENSION RECORDS       */
Z041DCEB BAL   @14,IGGPDCEB                                        0562
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0563
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCPB');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCPB'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00010 DS    0H                                                  0566
@EF00010 DS    0H                                                  0566
@ER00010 BR    @14                                                 0566
@PB00010 DS    0H                                                  0567
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0568
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCPB  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0568
*IGGPDCPB:                                                         0568
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00011                                            0568
IGGPDCPB DS    0H                                                  0569
*Z042:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z042DCPB:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0569
*    (R5,                                                          0569
*     R6,                                                          0569
*     R7,                                                          0569
*     R8,                                                          0569
*     R9,                                                          0569
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z042     DS    0H                                                  0569
Z042DCPB DS    0H                                                  0570
*   RFY                                                            0570
*    (R2,                                                          0570
*     R3,                                                          0570
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0572
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO BUILD DELETED GROUP OCCURRENCE POINTERS */
*   /* IN THE DATA AND INDEX RECORDS                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0573
*   CATGOCI=GENWRKRG;               /* SET RECORD CI NUMBER          */
         L     @10,CCACPE5(,R11)                                   0573
         STCM  GENWRKRG,7,CATGOCI(@10)                             0573
*   CATGOGC1=VOLGROUP;              /* SET GROUP CODE                */
         MVI   CATGOGC1(@10),X'03'                                 0574
*   CATGODEL=ON;                    /* SET DELETED GOP FLAG          */
*   CATGOEXT=ON;                    /* SET OCCURRENCE OUTSIDE        */
         OI    CATGODEL(@10),B'11000000'                           0576
*   CATGOSEQ=INCRREG;               /* SET THE GOP SEQUENCE NO.      */
         STC   INCRREG,CATGOSEQ(,@10)                              0577
*   CCACPE5=CCACPE5+LENGTH(REPGOPT);                               0578
         AH    @10,@CH00090                                        0578
         ST    @10,CCACPE5(,R11)                                   0578
*   CCACPE3=CCACPE5;                /* SET GO ADDRESS                */
         L     @05,CCAURAB(,R11)                                   0579
         ST    @10,CCACPE3(,@05)                                   0579
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0580
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDCEB');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDCEB'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00011 DS    0H                                                  0583
@EF00011 DS    0H                                                  0583
@ER00011 BR    @14                                                 0583
@PB00011 DS    0H                                                  0584
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0585
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDCEB  -  PROCEDURE  INTERNALLY  CALLED  UNNESTED      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0585
*IGGPDCEB:                                                         0585
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00012                                            0585
IGGPDCEB DS    0H                                                  0586
*Z043:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z043DCEB:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0586
*    (R5,                                                          0586
*     R6,                                                          0586
*     R7,                                                          0586
*     R8,                                                          0586
*     R9,                                                          0586
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z043     DS    0H                                                  0586
Z043DCEB DS    0H                                                  0587
*   RFY                                                            0587
*    (R2,                                                          0587
*     R3,                                                          0587
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*                                                                  0587
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO BUILD EXTENSION RECORDS FOR THE DATA AND*/
*   /* INDEX EXTENTS AND TO BUILD THE CCR AND CALL MODIFY TO COMPLETE*/
*   /* THE DATA RECORDS AND THEN TO USE MODIFY TO COMPLETE THE INDEX */
*   /* RECORDS                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0588
*   DO GENWRKRG=FRSTEREC TO LASTEREC;/* BUILD EXTENSION RECS         */
         LA    GENWRKRG,5                                          0588
@DL00588 DS    0H                                                  0589
*     RECRDRFR=CMSCTREC(GENWRKRG);  /* SET RECORD REFERENCE          */
         LR    @10,GENWRKRG                                        0589
         SLA   @10,2                                               0589
         L     @05,CCACMSWA(,R11)                                  0589
         L     RECRDRFR,CMSCTREC-4(@10,@05)                        0589
*     CCAURAB=CCAURAB+LENGTH(CCARAB);/* SET RAB POINTER              */
         LA    @10,20                                              0590
         AL    @10,CCAURAB(,R11)                                   0590
         ST    @10,CCAURAB(,R11)                                   0590
*     RCDID=CATEXTID;               /* SET EXTENSION RECORD ID       */
         MVI   RCDID(RECRDRFR),C'E'                                0591
*     RCDCINO=GENWRKRG-INCR1;       /* SET THE CI NUMBER             */
         LR    @05,GENWRKRG                                        0592
         BCTR  @05,0                                               0592
         STCM  @05,7,RCDCINO(RECRDRFR)                             0592
*     NREPLF=LENGTH(CATRCD);        /* SET LENGTH OF FIXED INFO      */
         LA    @05,49                                              0593
         STC   @05,NREPLF(,RECRDRFR)                               0593
*     CCACPE1=RECRDRFR;             /* SET START ADDR OF RECORD      */
         ST    RECRDRFR,CCACPE1(,@10)                              0594
*     CCACPE2=RECRDRFR+NREPLF;      /* SET REPEATING FIELD PTR       */
         ALR   @05,RECRDRFR                                        0595
         ST    @05,CCACPE2(,@10)                                   0595
*     CCACPE3=CCACPE2+LENGTH(EXTRCDPT)+LENGTH(REPCNT);             0596
         LA    @15,6                                               0596
         ALR   @15,@05                                             0596
         ST    @15,CCACPE3(,@10)                                   0596
*     CCACPE4=CCACPE3;              /* LENGTH OF USED INFO           */
         ST    @15,CCACPE4(,@10)                                   0597
*     RCDSIZ=CCACPE4-CCACPE1;       /* SET SIZE OF RECORD INFO       */
         L     @10,CCAURAB(,R11)                                   0598
         L     @10,CCACPE1(,@10)                                   0598
         SLR   @15,@10                                             0598
         STH   @15,RCDSIZ(,RECRDRFR)                               0598
*     REPCNT=OKAY;                  /* COUNT OF GOPS IN RECORD       */
         MVI   REPCNT(@05),X'00'                                   0599
*   END;                                                           0600
*                                                                  0600
         AH    GENWRKRG,@CH00083                                   0600
         CH    GENWRKRG,@CH00095                                   0600
         BNH   @DL00588                                            0600
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD THE CATALOG CONTROL RECORD IN RAB 0                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0601
*   RECRDRFR=CMSCTREC(4);           /* SET THE CCR IN CORE REFR      */
         L     @10,CCACMSWA(,R11)                                  0601
         L     RECRDRFR,CMSCTREC+12(,@10)                          0601
*   RFY                                                            0602
*     CATRECRD BASED(RECRDRFR);                                    0602
*   CATRECRD(1)=CATRECRD(1)&&CATRECRD(1);/* CLEAR RECORD AREA        */
         XC    CATRECRD(256,RECRDRFR),CATRECRD(RECRDRFR)           0603
*   CATRECRD(2)=CATRECRD(2)&&CATRECRD(2);/* CLEAR RECORD AREA        */
         XC    CATRECRD+256(256,RECRDRFR),CATRECRD+256(RECRDRFR)   0604
*   RCDID=CCRRECID;                 /* SET CCR ID                    */
         MVI   RCDID(RECRDRFR),C'L'                                0605
*   RCDCINO=CCRCINO;                /* SET CCR CI NUMBER             */
         MVC   RCDCINO(3,RECRDRFR),@CF00101+1                      0606
*   RFY                                                            0607
*    (CMFPLREF) RSTD;                                              0607
*   CMFPLREF=CMLDTFPL;              /* GET LOW DATA FPL ADDRESS      */
         L     CMFPLREF,CMLDTFPL(,@10)                             0608
*   CCRHACI=(CMFLHABA/CTRECSIZ)-INCR1;/* TOTAL LOW DATA CIS          */
         L     @10,CMFLHABA(,CMFPLREF)                             0609
         SRL   @10,9                                               0609
         BCTR  @10,0                                               0609
         STCM  @10,7,CCRHACI+44(RECRDRFR)                          0609
*   RFY                                                            0610
*    (CMFPLREF) UNRSTD;                                            0610
*                                                                  0610
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE HIGHEST USED CI FOR VOLUME RECORD & EXTENSIONS      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0611
*   CCAURAB=ADDR(CCARAB0);          /* RAB FOR FIRST EXTENSION       */
         LA    @10,CCARAB0(,R11)                                   0611
         ST    @10,CCAURAB(,R11)                                   0611
*   RFY                                                            0612
*     CATRCD BASED(CCACPE1);                                       0612
*   DO GENWRKRG=FRSTWREC TO DIM(CMSCTREC) BY INCR1;/*        @Y30SSSB*/
         LA    GENWRKRG,11                                         0613
@DL00613 DS    0H                                                  0614
*     RECRDRFR=CMSCTREC(GENWRKRG);                                 0614
         LR    @10,GENWRKRG                                        0614
         SLA   @10,2                                               0614
         L     @05,CCACMSWA(,R11)                                  0614
         L     RECRDRFR,CMSCTREC-4(@10,@05)                        0614
*     IF RECRDRFR^=NONE&            /* VALID RECORD ADDRESS AND      */
*         RECRDRFR->RCDID=VOLEXTID THEN/* EXTENSION RECORD           */
         LTR   RECRDRFR,RECRDRFR                                   0615
         BZ    @RF00615                                            0615
         CLI   RCDID(RECRDRFR),C'W'                                0615
         BNE   @RF00615                                            0615
*       CCRNFCI=RECRDRFR->RCDCINO+INCR1;/* NEXT AVAIL CI NO          */
         L     @10,CCAURAB(,R11)                                   0616
         L     @10,CCACPE1(,@10)                                   0616
         LA    @05,1                                               0616
         SLR   @15,@15                                             0616
         ICM   @15,7,RCDCINO(RECRDRFR)                             0616
         ALR   @05,@15                                             0616
         STCM  @05,7,CCRNFCI+44(@10)                               0616
*     ELSE                                                         0617
*       ;                           /* ADDR OR ID ERROR              */
@RF00615 DS    0H                                                  0618
*   END;                                                           0618
         AH    GENWRKRG,@CH00083                                   0618
         CH    GENWRKRG,@CH00179                                   0618
         BNH   @DL00613                                            0618
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0619
*   END;                            /* END OF INNER PROCEDURE        */
@EL00012 DS    0H                                                  0620
@EF00012 DS    0H                                                  0620
@ER00012 BR    @14                                                 0620
@PB00012 DS    0H                                                  0621
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0622
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0622
*EXIT:                                                             0622
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00013                                            0622
EXIT     DS    0H                                                  0623
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0626
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00013 DS    0H                                                  0627
@EF00013 DS    0H                                                  0627
@ER00013 BR    @14                                                 0627
*   END                                                            0628
*                                                                  0628
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*/*%INCLUDE SYSLIB  (IGGMSAWA)                                       */
*                                                                  0628
*       ;                                                          0628
@EL00001 DS    0H                                                  0628
@EF00001 DS    0H                                                  0628
@ER00001 BR    @14                                                 0628
@DATA    DS    0H
@CH00090 DC    H'5'
@CH00129 DC    H'6'
@CH00054 DC    H'8'
@CH00092 DC    H'10'
@CH00179 DC    H'20'
@CH00271 DC    H'36'
@CH00276 DC    H'48'
@CH03364 DC    H'97'
@CH03357 DC    H'5739'
@SM03372 MVC   CMFPLSTR(0,@14),CMFPLSTR(CMFPLREF)
@DATD    DSECT
         DS    0F
@TF00001 DS    F
@TF00002 DS    F
IGG0CLAS CSECT
         DS    0F
@CF00083 DC    F'1'
@CH00083 EQU   @CF00083+2
@CF00066 DC    F'2'
@CH00066 EQU   @CF00066+2
@CF00101 DC    F'3'
@CF00126 DC    F'4'
@CF00095 DC    F'9'
@CH00095 EQU   @CF00095+2
@CF00097 DC    F'3072'
@CF03359 DC    F'-1042152796'
@CF03363 DC    F'-1042151848'
@CF03375 DC    F'-20'
@CF03376 DC    F'-18'
@CF03378 DC    F'-16'
@CF03379 DC    F'-14'
@CF03380 DC    F'-12'
@CF03377 DC    F'-10'
@CF03381 DC    F'-8'
@CF03382 DC    F'-4'
@CF03366 DC    F'-1'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLAS CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00036 DC    V(IGGPCCCR)
@CV00037 DC    V(IGGPARFS)
@CV00038 DC    V(IGGPDCRA)
@CV00039 DC    V(IGGPDEFS)
@CV00041 DC    V(IGGPMEBM)
@CV00042 DC    V(IGGPDCME)
@CV00043 DC    V(IGGPSALL)
@CV00040 DC    V(IGGPMOD)
         DS    0D
@CC00073 DC    C'VSAM.CATALOG.BASE.DATA.RECORD               '
@CC00078 DC    C'VSAM.CATALOG.BASE.INDEX.RECORD              '
@CC03248 DC    C'NAMEDS  '
@CC03264 DC    C'ENTVOL  '
@CC03301 DC    C'GO'
@CC03302 DC    C'NG'
NULLNAME DC    X'FFFFFFFFFFFFFFFF'
NULLWORD DC    X'FFFFFFFF'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RECRDRFR EQU   @02
GENWRKRG EQU   @03
HIRANGEQ EQU   @04
INCRREG  EQU   @04
CMFPLREF EQU   @05
RANGLOCR EQU   @07
RWA      EQU   @02
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
DCWABASE EQU   @04
CMFPLCTR EQU   @04
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CTRNGVLU EQU   0
VARWRKLN EQU   0
ACBSAVAR EQU   0
RPLSAVAR EQU   0
CCRCNTRL EQU   1
CCRHACI  EQU   CCRCNTRL
CCRNFCI  EQU   CCRCNTRL+3
CMFPLSTR EQU   0
CMFLDNAM EQU   CMFPLSTR+24
CMFLRLRP EQU   CMFPLSTR+32
CMFLDEVT EQU   CMFPLSTR+34
CMFLVOL  EQU   CMFPLSTR+38
CMFLVLFL EQU   CMFPLSTR+46
CMFLVLPR EQU   CMFLVLFL
CMFLNOEX EQU   CMFPLSTR+47
CMFLHUBA EQU   CMFPLSTR+52
CMFLHABA EQU   CMFPLSTR+56
CMFLPHYB EQU   CMFPLSTR+60
CMFLNBTK EQU   CMFPLSTR+64
CMFLNTKA EQU   CMFPLSTR+66
CMFLITEX EQU   CMFPLSTR+68
CMFLSSDT EQU   CMFLITEX
CMFLSSDS EQU   CMFPLSTR+69
CMFLLKLN EQU   CMFPLSTR+71
CMFLHKLN EQU   CMFPLSTR+73
CMFLEXLN EQU   CMFPLSTR+75
CMFLEND  EQU   CMFPLSTR+77
CMFXECTS EQU   0
CMFXEXSS EQU   CMFXECTS
CMFXEXST EQU   CMFXECTS+2
CMFXSTA  EQU   CMFXEXST
CMFXSTCC EQU   CMFXSTA
CMFXSTHH EQU   CMFXSTA+2
CMFXEXED EQU   CMFXECTS+6
CMFXEDA  EQU   CMFXEXED
CMFXEDCC EQU   CMFXEDA
CMFXEDHH EQU   CMFXEDA+2
CMFXNOTT EQU   CMFXECTS+10
CMFXLRBA EQU   CMFXECTS+12
CMFXHRBA EQU   CMFXECTS+16
CMASFPST EQU   0
CMAFDNAM EQU   CMASFPST+24
CMAFTYPE EQU   CMASFPST+32
CMAFNAME EQU   CMASFPST+33
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1CR  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2COB EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0REC EQU   CCARAB0+4
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1REC EQU   CCARAB1+4
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2REC EQU   CCARAB2+4
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3REC EQU   CCARAB3+4
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4REC EQU   CCARAB4+4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5REC EQU   CCARAB5+4
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCARPL1  EQU   IGGCCA+220
CCADESA  EQU   IGGCCA+224
CCANDEXT EQU   CCADESA
CCAIXEXT EQU   CCADESA+1
CCASSVOL EQU   CCADESA+2
CCAEXTDE EQU   CCADESA+4
CCAEXTSS EQU   CCAEXTDE
CCAEXTAD EQU   CCAEXTDE+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTTH EQU   CCAEXTDE+6
CCAASCI  EQU   IGGCCA+271
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMLRET EQU   IGGCCA+296
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCAMCPL  EQU   CCAXCPL
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAALPTR EQU   IGGCCA+540
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CCACPE3  EQU   CCARAB+12
CCACPE4  EQU   CCARAB+16
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOEXT EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDID    EQU   CATRCD+44
RCDSIZ   EQU   CATRCD+45
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
REPCNT   EQU   REPCNTRL+5
REPGOPT  EQU   REPCNTRL+6
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CTGFV    EQU   0
CTGFVTYP EQU   CTGFV
CTGFVPRO EQU   CTGFV+1
CTGFVDRC EQU   CTGFVPRO
CTGFVDCH EQU   CTGFV+4
CTGFVICH EQU   CTGFV+8
CTGFVVCH EQU   CTGFV+12
CTGFVOWN EQU   CTGFV+28
CTGFVVLT EQU   CTGFV+40
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVATR EQU   CTGFV+60
CTGFVLRS EQU   CTGFV+68
CTGFVLMT EQU   CTGFV+72
CTGFVEXT EQU   CTGFVLMT
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
CATRECRD EQU   0
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
LTVOLSER EQU   LTENTRY+2
SPACEPRM EQU   0
SPCPRIMQ EQU   SPACEPRM
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGDSREC EQU   CTGATR1
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
OWNIDFLD EQU   0
LRECL    EQU   0
EXCPNAME EQU   0
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
AMDNEXT  EQU   AMDSTAT+10
AMDASPA  EQU   AMDSTAT+32
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMWFVTPT EQU   CMSWA+12
CMASCFPL EQU   CMSWA+16
CMCPLFVT EQU   CMSWA+20
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
PROCESS  EQU   CMSWA+36
SPACINDC EQU   CMSWA+38
CMRNGCTR EQU   CMSWA+40
CMVOLCTR EQU   CMSWA+42
CMSDFSPC EQU   CMSWA+48
CMVLLIST EQU   CMSWA+64
CMVLLTLN EQU   CMVLLIST
CMVLRTCD EQU   CMVLLIST+2
CMVLVOL  EQU   CMVLLIST+4
CMSPCATR EQU   CMSWA+76
CMPHYBLK EQU   CMSPCATR
CMSWADTY EQU   CMSPCATR+4
CMBLKTRK EQU   CMSPCATR+8
CMTRKPCA EQU   CMSPCATR+10
CMTRKCYL EQU   CMSPCATR+12
CMFPLIDX EQU   CMSWA+112
CMEXTLST EQU   CMSWA+120
CMSRCCOR EQU   CMSWA+124
CMDEFSWA EQU   CMSWA+128
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWAREPT EQU   CMSWA+192
DCWFPLPT EQU   CMSWA+196
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMUCATCI EQU   CMSWA+410
CMSCTREC EQU   CMSWA+416
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
SALPARL  EQU   0
SALOPTNS EQU   SALPARL
SALSOURC EQU   SALPARL+2
SALDSCIN EQU   SALPARL+3
SALPARMS EQU   SALPARL+6
SALCALN  EQU   SALPARMS
SALUNITS EQU   SALPARMS+4
SALMXEXT EQU   SALPARMS+6
SALRLIST EQU   SALPARL+14
SALVLIST EQU   SALPARL+18
PRLIST   EQU   0
PRLLN    EQU   PRLIST
PRLENT   EQU   PRLIST+1
PRELENTF EQU   PRLENT
BUFSIZE  EQU   0
CATSN    EQU   0
CATTNAME EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
ENTRYNAM EQU   0
FIELDNM  EQU   0
TNAM     EQU   0
@NM00037 EQU   CTGDDNM
CTGPROB  EQU   @NM00037
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CNAME    EQU   CTGRBASE
COWNID   EQU   CTGRBASE+44
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CBUF     EQU   CTGRBASE+61
CSPACPRM EQU   CTGRBASE+65
CPRIM    EQU   CSPACPRM
CSEC     EQU   CSPACPRM+3
CSORT    EQU   CSPACPRM+6
CHIA     EQU   CTGRBASE+76
CLRECL   EQU   CTGRBASE+80
CEXT     EQU   CTGRBASE+86
@NM00099 EQU   CATTR1
CCATTR   EQU   @NM00099
@NM00100 EQU   CCATTR
@NM00102 EQU   CATTR1
CRGATTR  EQU   @NM00102
CUPG     EQU   CRGATTR
SAVFSTXT EQU   CMSCTREC+76
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00103 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00100
@NM00101 EQU   @NM00100
CDOSUINF EQU   CTGRBASE+84
CHIU     EQU   CTGRBASE+72
@NM00098 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
@NM00097 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CEXP     EQU   CTGRBASE+55
CCRE     EQU   CTGRBASE+52
@NM00087 EQU   MCATDSTR+1
@NM00086 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
PRLPAR2  EQU   PRELENTF+1
PRLPAR1  EQU   PRELENTF
SALAXWA  EQU   SALPARL+22
@NM00127 EQU   SALPARMS+7
SALBLKLN EQU   SALPARMS+2
@NM00126 EQU   SALPARL+1
CUMRC    EQU   CUMWA+148
@NM00125 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00124 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00123 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00122 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00121 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00120 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
CMBYTAU  EQU   CMSWA+500
CMBYTTRK EQU   CMSWA+496
@NM00119 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMBLPTKS EQU   CMSWA+408
CMSDSPTB EQU   CMSWA+344
@NM00118 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00117 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00116 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
@NM00115 EQU   CMSWA+190
DCWIX    EQU   CMSWA+188
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
WORKPROC EQU   CMSWA+118
@NM00114 EQU   CMSWA+116
CMCNVNO  EQU   CMSWA+110
CMCNVLEN EQU   CMSWA+108
CMTOTVOL EQU   CMSWA+74
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
@NM00113 EQU   CMSWA+62
CMSCRADT EQU   CMSWA+58
CMSCRAVI EQU   CMSWA+52
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
CMRMVVOL EQU   CMVOLCTR
CMADDVOL EQU   CMRNGCTR
CMDTAFPL EQU   CMHIXFPL
CMTSTFPL EQU   CMHDTFPL
CMRNMLST EQU   CMLDTFPL
CMEXTFLS EQU   CMCPLFVT
CMWACI   EQU   CMSWA+3
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMCISREQ EQU   CMSWA+1
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00112 EQU   IDAAMDSB+41
@NM00111 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00110 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00109 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00108 EQU   RTDEVUCB
@NM00107 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00106 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00105 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00104 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00096 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00095 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVBUF EQU   CTGFV+64
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
@NM00094 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00093 EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00092 EQU   COPTS
CENLST   EQU   COPTS
@NM00091 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00090 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00089 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00088 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00085 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00084 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00083 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00082 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00081 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00080 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00079 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00078 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00077 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00076 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00051 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBRSV48 EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00050 EQU   TCB+296
TCBSCBQ  EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBRSV36 EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBRSV35 EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00049 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBRSV04 EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00048 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00047 EQU   CVTFIX+248
@NM00046 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
@NM00045 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
@NM00044 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00043 EQU   CATGOFLG
@NM00042 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00041 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00040 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00039 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN2  EQU   USERWKA+2
WKALEN1  EQU   USERWKA
CTGFLCHN EQU   CTGFL+12
CTGFLDTS EQU   CTGFLDRE
@NM00038 EQU   CTGFLDRE
CTGFLDCD EQU   CTGFL+1
CTGPSWD  EQU   CTGJSCB
@NM00036 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
CTGTYPE  EQU   CTGPL+18
@NM00035 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00034 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00033 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1492
CCADGDGA EQU   IGGCCA+1488
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00032 EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00031 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00030 EQU   CCAREGS
@NM00029 EQU   IGGCCA+1057
@NM00028 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00027 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00026 EQU   CCAMNAT+1
@NM00025 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00024 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00023 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00022 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
@NM00021 EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00020 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABL  EQU   IGGCCA+388
CCARABF  EQU   IGGCCA+384
CCARABB  EQU   IGGCCA+380
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00019 EQU   CCAMSSPL+10
@NM00018 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00017 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
@NM00016 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00015 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
@NM00014 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00013 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
@NM00012 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00011 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
@NM00010 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00009 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
@NM00008 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00007 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
@NM00006 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00005 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00004 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2NVC EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1KEY EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00003 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
CMAFPL   EQU   CMASFPST
@NM00002 EQU   CMFLITEX
CMFLNOPF EQU   CMFLITEX
CMFLHKBA EQU   CMFPLSTR+48
@NM00001 EQU   CMFLVLFL
CMFLVLOV EQU   CMFLVLFL
CMFLVLCN EQU   CMFLVLFL
CMFLFLSQ EQU   CMFPLSTR+44
CMFPLOCR EQU   CMFPLSTR
CCRFDCI  EQU   CCRCNTRL+9
CCRCDCI  EQU   CCRCNTRL+6
@NM00075 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00074 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSARV062 EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00073 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00072 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00071 EQU   FLCFSA
@NM00070 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00069 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00068 EQU   FLCIOA
@NM00067 EQU   FLCMCLA+15
@NM00066 EQU   FLCMCLA+14
@NM00065 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00064 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00063 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00062 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00061 EQU   FLCPER
@NM00060 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00059 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00058 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00057 EQU   FLCPIILC
@NM00056 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00055 EQU   FLCSVILC
@NM00054 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00053 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00052 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00244 EQU   @RC00227
@PB00013 EQU   @EL00001
@RC00245 EQU   @RC00244
@ENDDATA EQU   *
         END   IGG0CLAS,(C'PLS1647',0602,75056)
