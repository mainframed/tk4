         TITLE 'IGG0CLAK - COMPLETE THE DEFINE OF AN ENTRY             *
                        '
IGG0CLAK CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLAK  76.050'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPDCMB'
         EJECT
         B     @PB00002                                            0118
IGGPDCMB DS    0H                                                  0119
         ENTRY IGGPDCMB
         DROP @15
Z003     DS    0H                                                  0121
Z003DCMB DS    0H                                                  0122
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
         USING *,12
*Z004DBVO:                                                         0129
*   CALL IGGPDBVO;                  /* BUILD THE VOLUME OCCUR        */
Z004DBVO BAL   @14,IGGPDBVO                                        0129
*   IF CCACD1=RCS THEN              /* CHECK STATUS TO CONTINUE      */
         CLI   CCACD1(R11),0                                       0130
         BNE   @RF00130                                            0130
*Z005DMOP:                                                         0131
*     CALL IGGPDMOP;                /* PUT THE FPLS IN THE RECORD    */
*                                                                  0131
Z005DMOP BAL   @14,IGGPDMOP                                        0131
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF SMF PROCESSING SHOULD BE PERFORMED                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0132
*   IF CCACD1=RCS&                  /* NO MAJOR ERRORS               */
*       CMCISUSE=CMCISREQ THEN      /* ALL OBJECTS PROCESSED         */
@RF00130 CLI   CCACD1(R11),0                                       0132
         BNE   @RF00132                                            0132
         L     @10,CCACMSWA(,R11)                                  0132
         CLC   CMCISUSE(1,@10),CMCISREQ(@10)                       0132
         BNE   @RF00132                                            0132
*Z006DOMF:                                                         0133
*     CALL IGGPDOMF;                /* SMF CHECK AND PROCESS         */
Z006DOMF BAL   @14,IGGPDOMF                                        0133
*   ELSE                                                           0134
*     ;                             /* ERROR OR NO SMF PROCESSING    */
@RF00132 DS    0H                                                  0135
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0135
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDBCV');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDBCV'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0138
@EF00002 DS    0H                                                  0138
@ER00002 BR    @14                                                 0138
@PB00002 DS    0H                                                  0139
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0140
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDBCV  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0140
*IGGPDBCV:                                                         0140
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0140
IGGPDBCV DS    0H                                                  0141
*Z007:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z007DBCV:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0141
*    (R5,                                                          0141
*     R6,                                                          0141
*     R7,                                                          0141
*     R8,                                                          0141
*     R9,                                                          0141
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z007     DS    0H                                                  0141
Z007DBCV DS    0H                                                  0142
*   RFY                                                            0142
*    (R2,                                                          0142
*     R3,                                                          0142
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0144
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO BUILD THE VOLUME OCCURRENCES AND FPLS   */
*   /* REQUIRED FOR CANDIDATE VOLUMES                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*   CMEXTRFR=CMCANVOL;              /* GET CANDIDATE VOL LST ADD     */
         L     @10,CCACMSWA(,R11)                                  0145
         L     CMEXTRFR,CMCANVOL(,@10)                             0145
*   RFY                                                            0146
*     R8 RSTD;                      /*                         Y02020*/
*   RFY                                                            0147
*     CMFPLSTR BASED(CMFPLREF);                                    0147
*   RFY                                                            0148
*     USERLIST BASED(CMEXTRFR);                                    0148
*   DO CMVOLCTR=INCR1 TO CMCNVNO;   /* GET CORE CANDIDATE VOLUME FPLS*/
         LA    @10,1                                               0149
         B     @DE00149                                            0149
@DL00149 DS    0H                                                  0150
*     IF CMEXNENT=MXEXENTS THEN     /* FPL DIRECTORY FULL            */
         CLC   CMEXNENT(2,CMEXRFRG),@CH00033                       0150
         BNE   @RF00150                                            0150
*Z008DEXD:                                                         0151
*       CALL IGGPDEXD;              /* GET ANOTHER DIRECTORY BLK     */
Z008DEXD BAL   @14,IGGPDEXD                                        0151
*     ELSE                                                         0152
*       ;                           /* FPL DIRECTORY NOT YET FULL    */
@RF00150 DS    0H                                                  0153
*     IF CCACD1^=RCS THEN           /* GET STORAGE OKAY              */
         CLI   CCACD1(R11),0                                       0153
         BE    @RF00153                                            0153
*       CALL EXIT;                  /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0154
*     CMEXNENT=CMEXNENT+INCR1;      /* INCR. NO. OF FPL POINTERS     */
@RF00153 LA    @10,1                                               0155
         AH    @10,CMEXNENT(,CMEXRFRG)                             0155
         STH   @10,CMEXNENT(,CMEXRFRG)                             0155
*     CCAMNLEN=LENGTH(CMFPLSTR);    /* GET NEEDED CORE SIZE          */
         LA    @09,85                                              0156
         STCM  @09,7,CCAMNLEN(R11)                                 0156
*     CMEXETSZ(CMEXNENT)=CCAMNLEN;  /* SAVE CORE SIZE                */
         SLA   @10,3                                               0157
         STH   @09,CMEXETSZ-8(@10,CMEXRFRG)                        0157
*     RFY                                                          0158
*       R1 RSTD;                                                   0158
*     R1=ADDR(CCAMSSPL);            /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0159
*     CCAMNSPL=USUBPOOL;            /* STORE SUBPOOL VALUE           */
*                                                                  0160
         MVI   CCAMNSPL(R11),X'FC'                                 0160
*     /***************************************************************/
*     /*                                                             */
*     /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0161
*     GEN(GETMAIN LC,MF=(E,(1)));   /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*     GEN(LR R1,R15);               /* PICK UP RETURN CODE           */
         LR R1,R15
*     IF R1^=NOGETMSE THEN          /* CHECK FOR ERROR RETURN        */
*                                                                  0163
         LTR   R1,R1                                               0163
         BZ    @RF00163                                            0163
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AK', CCAREASN=RSN2, CCARETRN=RCINSSWA       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0164
*       CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE 0164
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03430                             0164
*     ELSE                          /* GETMAIN SUCCESSFUL            */
*       DO;                                                        0165
         B     @RC00163                                            0165
@RF00163 DS    0H                                                  0166
*         DO;                                                      0166
*           IF MNATFULL=ON THEN     /* TRACKING TABLE FULL           */
*                                                                  0167
         TM    MNATFULL(R11),B'10000000'                           0167
         BNO   @RF00167                                            0167
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLAT                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0168
*Z012ARFS:                                                         0168
*             CALL IGGPARFS;        /* YES,CALL SPILL ROUTINE        */
Z012ARFS L     @15,@CV03193                                        0168
         BALR  @14,@15                                             0168
*           GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*
*                                      PUSH AND TRACK                */
@RF00167 DS    0H                                                  0169
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*         END;                                                     0170
*       END;                                                       0171
*     RFY                                                          0172
*       R1 UNRSTD;                                                 0172
@RC00163 DS    0H                                                  0173
*     IF CCACD1^=RCS THEN           /* GET STORAGE OKAY              */
         CLI   CCACD1(R11),0                                       0173
         BE    @RF00173                                            0173
*       CALL EXIT;                  /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0174
*     CMEXCRPT(CMEXNENT)=CCAMNADR;  /* SAVE CORE ADDR IN DIRECT      */
@RF00173 LH    @10,CMEXNENT(,CMEXRFRG)                             0175
         SLA   @10,3                                               0175
         L     @09,CCAMNADR(,R11)                                  0175
         ST    @09,CMEXCRPT-8(@10,CMEXRFRG)                        0175
*     RFY                                                          0176
*      (CMFPLREF) RSTD;                                            0176
*     CMFPLREF=CCAMNADR;            /* GET FPL CORE ADDRESS          */
         LR    CMFPLREF,@09                                        0177
*     CMFPLSTR=CMFPLSTR&&CMFPLSTR;  /* CLEAR THE CORE                */
         XC    CMFPLSTR(85,CMFPLREF),CMFPLSTR(CMFPLREF)            0178
*     CCAFLPT=ADDR(CMFPLOCR);       /* SET FPL REFERENCE             */
         ST    CMFPLREF,CCAFLPT(,R11)                              0179
*     CTGFLDNO=INCR1;               /* SET NO. DATA/LENGTH PAIRS     */
         L     @10,CCAFLPT(,R11)                                   0180
         MVI   CTGFLDNO(@10),X'01'                                 0180
*     CTGFLDNM=ADDR(CMFLDNAM);      /* SET FIELD NAME ADDRESS        */
         LA    @09,CMFLDNAM(,CMFPLREF)                             0181
         ST    @09,CTGFLDNM(,@10)                                  0181
*     CTGFLNG(1)=(ADDR(CMFLEND)-ADDR(CMFLRLRP));/* LENGTH            */
         LA    @09,CMFOVERL(,CMFPLREF)                             0182
         LA    @09,CMFLEND-8(,@09)                                 0182
         LA    @15,CMFLRLRP(,CMFPLREF)                             0182
         SLR   @09,@15                                             0182
         ST    @09,CTGFLNG(,@10)                                   0182
*     CTGFLPT(1)=ADDR(CMFLRLRP);    /* SET DATA ADDRESS              */
*                                                                  0183
         ST    @15,CTGFLPT(,@10)                                   0183
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS THE VOLUME                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0184
*     CMFLDNAM='ENTVOL  ';          /* COMBINATION FIELD NAME        */
         MVC   CMFLDNAM(8,CMFPLREF),@CC03328                       0184
*     CMFLVOL=LTVOLSER(CMVOLCTR);   /* SET THE VOLUME SERIAL NO.     */
         L     @10,CCACMSWA(,R11)                                  0185
         LH    @09,CMVOLCTR(,@10)                                  0185
         LR    @15,@09                                             0185
         SLA   @15,3                                               0185
         ALR   @15,CMEXTRFR                                        0185
         AL    @15,@CF03431                                        0185
         MVC   CMFLVOL(6,CMFPLREF),LTVOLSER-4(@15)                 0185
*     CMFLDEVT=CMSWADTY(CMTOTVOL);  /* SET VOLUME DEVICE TYPE        */
         LH    @15,CMTOTVOL(,@10)                                  0186
         SLA   @15,4                                               0186
         L     @14,CMSWADTY-16(@15,@10)                            0186
         ST    @14,CMFLDEVT(,CMFPLREF)                             0186
*     CMFLNBTK=CMBLKTRK(CMTOTVOL);  /* SET NO. BLOCKS PER TRACK      */
         LH    @14,CMBLKTRK-16(@15,@10)                            0187
         STH   @14,CMFLNBTK(,CMFPLREF)                             0187
*     CMFLPHYB=CMPHYBLK(CMTOTVOL);  /* SET PHYSICAL BLOCK SIZE       */
         L     @14,CMPHYBLK-16(@15,@10)                            0188
         ST    @14,CMFLPHYB(,CMFPLREF)                             0188
*     CMFLNTKA=CMTRKPCA(CMTOTVOL);  /* SET TRACKS PER CA             */
         LH    @10,CMTRKPCA-16(@15,@10)                            0189
         STH   @10,CMFLNTKA(,CMFPLREF)                             0189
*     CMFLSSDS=PRLENT(CMVOLCTR);    /* SET DATA SET DIR SEQ NO.      */
         ALR   @09,@09                                             0190
         L     @10,CCAALPTR(,R11)                                  0190
         L     @10,SALRLIST(,@10)                                  0190
         ALR   @10,@09                                             0190
         BCTR  @10,0                                               0190
         SLR   @09,@09                                             0190
         ICM   @09,3,PRLENT-1(@10)                                 0190
         STH   @09,CMFLSSDS(,CMFPLREF)                             0190
*     CMFLVLCN=ON;                  /* SET CANDIDATE VOLUME FLAG     */
         OI    CMFLVLCN(CMFPLREF),B'01000000'                      0191
*     CMFLNOPF=ON;                  /* SET NOT PREFORMATTED          */
         OI    CMFLNOPF(CMFPLREF),B'01000000'                      0192
*     RFY                                                          0193
*      (CMFPLREF) UNRSTD;                                          0193
*   END;                            /* END 'DO' FOR CANDIDATE VOLS   */
         L     @09,CCACMSWA(,R11)                                  0194
         LA    @10,1                                               0194
         AH    @10,CMVOLCTR(,@09)                                  0194
@DE00149 L     @09,CCACMSWA(,R11)                                  0194
         STH   @10,CMVOLCTR(,@09)                                  0194
         L     @09,CCACMSWA(,R11)                                  0194
         CH    @10,CMCNVNO(,@09)                                   0194
         BNH   @DL00149                                            0194
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0195
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDBVO');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDBVO'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0198
@EF00003 DS    0H                                                  0198
@ER00003 BR    @14                                                 0198
@PB00003 DS    0H                                                  0199
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0200
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDBVO  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0200
*IGGPDBVO:                                                         0200
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0200
IGGPDBVO DS    0H                                                  0201
*Z013:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z013DBVO:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0201
*    (R5,                                                          0201
*     R6,                                                          0201
*     R7,                                                          0201
*     R8,                                                          0201
*     R9,                                                          0201
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z013     DS    0H                                                  0201
Z013DBVO DS    0H                                                  0202
*   RFY                                                            0202
*    (R2,                                                          0202
*     R3,                                                          0202
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0204
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO BUILD THE VOLUME OCCURRENCES AND TO     */
*   /* BUILD ALL OF THE FPLS NECESSARY TO MODIFY ALL OF THE          */
*   /* INFORMATION INTO THE IN CORE RECORD                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0205
*   RFY                                                            0205
*     R8 RSTD;                      /*                         Y02020*/
*   CMEXRFRG=CMFPLIDX;              /* GET FPL DIRECTORY ADDRESS     */
         L     @10,CCACMSWA(,R11)                                  0206
         L     CMEXRFRG,CMFPLIDX(,@10)                             0206
*   IF CMEXRFRG=NONE THEN           /* CHECK FOR NO DIRECTORY        */
         LTR   CMEXRFRG,CMEXRFRG                                   0207
         BNZ   @RF00207                                            0207
*Z014DEXD:                                                         0208
*     CALL IGGPDEXD;                /* CALL CORE DIRECTORY GET       */
Z014DEXD BAL   @14,IGGPDEXD                                        0208
*   ELSE                                                           0209
*     ;                             /* DIRECTORY EXISTS              */
@RF00207 DS    0H                                                  0210
*   IF CCACD1^=RCS THEN             /* GET STORAGE OKAY              */
         CLI   CCACD1(R11),0                                       0210
         BE    @RF00210                                            0210
*     CALL EXIT;                    /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0211
*   WORKPROC='GO';                  /* SET PROCESS TO GO FOR BLD     */
@RF00210 L     @10,CCACMSWA(,R11)                                  0212
         MVC   WORKPROC(2,@10),@CC03338                            0212
*   CMEXTRFR=CMNRMEXT;              /* GET EXTENT DIRECTORY ADDR     */
         L     CMEXTRFR,CMNRMEXT(,@10)                             0213
*   DO WHILE WORKPROC='GO';         /* LOOP TO PROCESS ALL EXTS      */
         B     @DE00214                                            0214
@DL00214 DS    0H                                                  0215
*     CMEXNENT=CMEXNENT+INCR1;      /* INIT NO. OF FPL POINTERS      */
         LA    @10,1                                               0215
         AH    @10,CMEXNENT(,CMEXRFRG)                             0215
         STH   @10,CMEXNENT(,CMEXRFRG)                             0215
*     CMETRFRG=CMEXTRFR->CMEXCRPT(CMEXNENT);                       0216
         SLA   @10,3                                               0216
         L     CMETRFRG,CMEXCRPT-8(@10,CMEXTRFR)                   0216
*     RFY                                                          0217
*       CMXENTRY BASED(CMETRFRG);                                  0217
*     CCAMNLEN=LENGTH(CMFPLSTR)+(EXNTSIZE*CMXNEXTS);               0218
         SLR   @10,@10                                             0218
         IC    @10,CMXNEXTS(,CMETRFRG)                             0218
         MH    @10,@CH00110                                        0218
         AH    @10,@CH03428                                        0218
         STCM  @10,7,CCAMNLEN(R11)                                 0218
*     IF CTGFVRNG^=NONE THEN        /* CHECK FOR KEY RANGE           */
         L     @09,CCACMSWA(,R11)                                  0219
         L     @09,CMWFVTPT(,@09)                                  0219
         ICM   @05,15,CTGFVRNG(@09)                                0219
         BZ    @RF00219                                            0219
*       CCAMNLEN=CCAMNLEN+(2*MAXKEYLN);/* UPDATE SIZE                */
         AH    @10,@CH00176                                        0220
         STCM  @10,7,CCAMNLEN(R11)                                 0220
*     ELSE                                                         0221
*       ;                           /* CORE SIZE IS OKAY             */
@RF00219 DS    0H                                                  0222
*     CMEXETSZ(CMEXNENT)=CCAMNLEN;  /* SAVE CORE SIZE OF FPL COR     */
         LH    @10,CMEXNENT(,CMEXRFRG)                             0222
         SLA   @10,3                                               0222
         SLR   @09,@09                                             0222
         ICM   @09,7,CCAMNLEN(R11)                                 0222
         STH   @09,CMEXETSZ-8(@10,CMEXRFRG)                        0222
*     RFY                                                          0223
*       R1 RSTD;                                                   0223
*     R1=ADDR(CCAMSSPL);            /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0224
*     CCAMNSPL=USUBPOOL;            /* STORE SUBPOOL VALUE           */
*                                                                  0225
         MVI   CCAMNSPL(R11),X'FC'                                 0225
*     /***************************************************************/
*     /*                                                             */
*     /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0226
*     GEN(GETMAIN LC,MF=(E,(1)));   /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*     GEN(LR R1,R15);               /* PICK UP RETURN CODE           */
         LR R1,R15
*     IF R1^=NOGETMSE THEN          /* CHECK FOR ERROR RETURN        */
*                                                                  0228
         LTR   R1,R1                                               0228
         BZ    @RF00228                                            0228
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='AK', CCAREASN=RSN2, CCARETRN=RCINSSWA       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0229
*       CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE 0229
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03430                             0229
*     ELSE                          /* GETMAIN SUCCESSFUL            */
*       DO;                                                        0230
         B     @RC00228                                            0230
@RF00228 DS    0H                                                  0231
*         DO;                                                      0231
*           IF MNATFULL=ON THEN     /* TRACKING TABLE FULL           */
*                                                                  0232
         TM    MNATFULL(R11),B'10000000'                           0232
         BNO   @RF00232                                            0232
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLAT                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0233
*Z018ARFS:                                                         0233
*             CALL IGGPARFS;        /* YES,CALL SPILL ROUTINE        */
Z018ARFS L     @15,@CV03193                                        0233
         BALR  @14,@15                                             0233
*           GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*
*                                      PUSH AND TRACK                */
@RF00232 DS    0H                                                  0234
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*         END;                                                     0235
*       END;                                                       0236
*     RFY                                                          0237
*       R1 UNRSTD;                                                 0237
@RC00228 DS    0H                                                  0238
*     IF CCACD1^=RCS THEN           /* GET STORAGE OKAY              */
         CLI   CCACD1(R11),0                                       0238
         BE    @RF00238                                            0238
*       CALL EXIT;                  /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0239
*     CMEXCRPT(CMEXNENT)=CCAMNADR;  /* SET FPL CORE ADDR IN DIR      */
@RF00238 LH    @10,CMEXNENT(,CMEXRFRG)                             0240
         SLA   @10,3                                               0240
         L     @09,CCAMNADR(,R11)                                  0240
         ST    @09,CMEXCRPT-8(@10,CMEXRFRG)                        0240
*     RFY                                                          0241
*      (CMFPLREF) RSTD;                                            0241
*     CMFPLREF=CCAMNADR;            /* GET FPL CORE ADDRESS          */
         LR    CMFPLREF,@09                                        0242
*     RFY                                                          0243
*       CMFPLSTR BASED(CMFPLREF);                                  0243
*     RFY                                                          0244
*       CMFOVLAY BASED(R8);         /*                         Y02020*/
*     IF CTGTYPE=CTGTPGSP&CTGSWAP=OFF THEN/* PAGE SPACE      @Z40WSSG*/
         L     @10,CCACPL(,R11)                                    0245
         CLI   CTGTYPE(@10),C'P'                                   0245
         BNE   @RF00245                                            0245
         TM    CTGSWAP(@10),B'00100000'                            0245
         BNZ   @RF00245                                            0245
*       R8=ADDR(CMFOVERL);          /* CMFBYTRK AND CMFBYTAU INCLUDED
*                                      FOR PAGE SPACE          Y02020*/
         LA    R8,CMFOVERL(,CMFPLREF)                              0246
*     ELSE                          /* NOT PAGE SPACE RECORD ENTRY   */
*       R8=ADDR(CMFOVERL)           /* FIELDS NOT INCLUDED Y02020    */
*           -LENGTH(CMFBYTRK)-LENGTH(CMFBYTAU);/*              Y02020*/
         B     @RC00245                                            0247
@RF00245 LA    R8,CMFOVERL(,CMFPLREF)                              0247
         SH    R8,@CH00042                                         0247
*     CMFPLSTR=CMFPLSTR&&CMFPLSTR;  /* CLEAR FPL MAIN CORE           */
@RC00245 XC    CMFPLSTR(85,CMFPLREF),CMFPLSTR(CMFPLREF)            0248
*     IF CTGFVRNG=NONE THEN         /* CHECK FOR NO KEY RANGE        */
         SLR   @10,@10                                             0249
         L     @09,CCACMSWA(,R11)                                  0249
         L     @09,CMWFVTPT(,@09)                                  0249
         C     @10,CTGFVRNG(,@09)                                  0249
         BNE   @RF00249                                            0249
*       DO;                                                        0250
*         CMFLLKLN=CLEAR;           /* SET ZERO LOW KEY LENGTH       */
         STH   @10,CMFLLKLN(,R8)                                   0251
*         CMFLHKLN=CLEAR;           /* SET ZERO HIGH KEY LENGTH      */
         STH   @10,CMFLHKLN(,R8)                                   0252
*       END;                                                       0253
*     ELSE                          /* SET KEY RANGE VALUES          */
*Z019DRNG:                                                         0254
*       CALL IGGPDRNG;              /* STORE RANGEKEYS & LENGTHS     */
         B     @RC00249                                            0254
@RF00249 DS    0H                                                  0254
Z019DRNG BAL   @14,IGGPDRNG                                        0254
*     RFY                                                          0255
*      (CMFPLREF) RSTD;                                            0255
*                                                                  0255
@RC00249 DS    0H                                                  0256
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS THE EXTENTS                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0256
*     RFY                                                          0256
*      (RANGLOCR) RSTD;                                            0256
*     RANGLOCR=ADDR(CMFLLKLN)+CMFLLKLN+LENGTH(CMFLLKLN);/* SET RANGE
*                                      VALUE IN G.O.                 */
         LA    RANGLOCR,CMFLLKLN(,R8)                              0257
         LH    @10,CMFLLKLN(,R8)                                   0257
         ALR   RANGLOCR,@10                                        0257
         AH    RANGLOCR,@CH00055                                   0257
*     CMEXTLST=ADDR(CMFLEND)+CMFLLKLN+(RANGLOCR->VARWRKLN);/* SET  0258
*                                      EXTENT LIST POINTER           */
         L     @09,CCACMSWA(,R11)                                  0258
         LA    @06,CMFLEND(,R8)                                    0258
         ALR   @06,@10                                             0258
         AH    @06,VARWRKLN(,RANGLOCR)                             0258
         ST    @06,CMEXTLST(,@09)                                  0258
*     DO CMVOLCTR=INCR1 TO CMXNEXTS;/* PROCESS ALL EXTENTS           */
         LA    @10,1                                               0259
         B     @DE00259                                            0259
@DL00259 DS    0H                                                  0260
*       CMFXEXSS(CMVOLCTR)=CMXEXSSN(CMVOLCTR);/* SET SS VALUE        */
         L     @10,CCACMSWA(,R11)                                  0260
         LH    @09,CMVOLCTR(,@10)                                  0260
         LR    @06,@09                                             0260
         MH    @06,@CH00110                                        0260
         L     @10,CMEXTLST(,@10)                                  0260
         SLA   @09,3                                               0260
         LH    @15,CMXEXSSN-8(@09,CMETRFRG)                        0260
         LA    @14,0(@06,@10)                                      0260
         AL    @14,@CF03433                                        0260
         STH   @15,CMFXEXSS(,@14)                                  0260
*       CMFXEXST(CMVOLCTR)=CMXEXSRT(CMVOLCTR);/* SET START           */
         ST    @06,@TF00001                                        0261
         ALR   @06,@10                                             0261
         AL    @06,@CF03434                                        0261
         ST    @09,@TF00002                                        0261
         ALR   @09,CMETRFRG                                        0261
         MVC   CMFXEXST-2(4,@06),CMXEXSRT-8(@09)                   0261
*       CMFXNOTT(CMVOLCTR)=CMXEXNTT(CMVOLCTR);/* SET NO. TRKS        */
         L     @09,@TF00002                                        0262
         LH    @09,CMXEXNTT-8(@09,CMETRFRG)                        0262
         L     @06,@TF00001                                        0262
         AL    @10,@CF03435                                        0262
         STH   @09,CMFXNOTT-10(@06,@10)                            0262
*     END;                          /* END 'DO' FOR ALL EXTENTS      */
*                                                                  0263
         L     @09,CCACMSWA(,R11)                                  0263
         LA    @10,1                                               0263
         AH    @10,CMVOLCTR(,@09)                                  0263
@DE00259 L     @09,CCACMSWA(,R11)                                  0263
         STH   @10,CMVOLCTR(,@09)                                  0263
         SLR   @09,@09                                             0263
         IC    @09,CMXNEXTS(,CMETRFRG)                             0263
         CR    @10,@09                                             0263
         BNH   @DL00259                                            0263
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD THE REMAINDER OF THE OCCURRENCE                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0264
*     IF CTGTYPE=CTGTPGSP&CTGSWAP=OFF THEN/* PAGE SPACE      @Z40WSSG*/
         L     @10,CCACPL(,R11)                                    0264
         CLI   CTGTYPE(@10),C'P'                                   0264
         BNE   @RF00264                                            0264
         TM    CTGSWAP(@10),B'00100000'                            0264
         BNZ   @RF00264                                            0264
*       DO;                         /* PAGESPACE PROCESSING          */
*         CMFLDNAM='TOENTVOL';      /* FIELD NAME              Y02020*/
         MVC   CMFLDNAM(8,CMFPLREF),@CC03346                       0266
*         CMFBYTRK=CMBYTTRK;        /* BYTES PER TRACK         Y02020*/
         L     @10,CCACMSWA(,R11)                                  0267
         MVC   CMFBYTRK(4,R8),CMBYTTRK(@10)                        0267
*         CMFBYTAU=CMBYTAU;         /* BYTES PER ALLOC UNIT    Y02020*/
         MVC   CMFBYTAU(4,R8),CMBYTAU(@10)                         0268
*       END;                        /* END PAGE-SPACE PROCESSING     */
*     ELSE                                                         0270
*       CMFLDNAM='ENTVOL  ';        /* SET THE FIELD NAME      Y02020*/
         B     @RC00264                                            0270
@RF00264 MVC   CMFLDNAM(8,CMFPLREF),@CC03328                       0270
*     CMFLVOL=CMXVOLID;             /* SET THE VOLUME SERIAL NO.   0271
*                                                              Y02020*/
@RC00264 MVC   CMFLVOL(6,CMFPLREF),CMXVOLID(CMETRFRG)              0271
*     CMFLDEVT=CMXDEVTP;            /* SET THE DEVICE TYPE           */
         MVC   CMFLDEVT(4,CMFPLREF),CMXDEVTP(CMETRFRG)             0272
*     CMFLVLPR=ON;                  /* SET PRIME VOLUME INDICATR     */
         OI    CMFLVLPR(CMFPLREF),B'10000000'                      0273
*     CMFLNOPF=ON;                  /* SET NOT PREFORMATTED          */
         OI    CMFLNOPF(CMFPLREF),B'01000000'                      0274
*     CMFLSSDS=CMXSSVOL;            /* SET DATA SET DIR SS NO.       */
         MVC   CMFLSSDS(2,CMFPLREF),CMXSSVOL(CMETRFRG)             0275
*     CMFLNOEX=CMXNEXTS;            /* SET NO. OF EXTENTS            */
         SLR   @10,@10                                             0276
         IC    @10,CMXNEXTS(,CMETRFRG)                             0276
         STC   @10,CMFLNOEX(,CMFPLREF)                             0276
*     RFY                                                          0277
*       R1 RSTD;                                                   0277
*     R1=EXNTSIZE*CMXNEXTS;         /* GET LENGTH OF EXTENTS         */
         LR    R1,@10                                              0278
         MH    R1,@CH00110                                         0278
*     RANGLOCR=LENGTH(VARWRKLN)+(RANGLOCR->VARWRKLN)+RANGLOCR;     0279
         LA    @09,2                                               0279
         AH    @09,VARWRKLN(,RANGLOCR)                             0279
         ALR   RANGLOCR,@09                                        0279
*     RANGLOCR->VARWRKLN=R1;        /* SET EXTENT FIELD LENGTH       */
         STH   R1,VARWRKLN(,RANGLOCR)                              0280
*     RFY                                                          0281
*      (R1,                                                        0281
*       RANGLOCR) UNRSTD;                                          0281
*                                                                  0281
*     /***************************************************************/
*     /*                                                             */
*     /* SET THE NUMBER OF DATA SET EXTENTS                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0282
*     CTGFVAMD->CTGFLPT(1)->AMDNEXT=CTGFVAMD->CTGFLPT(1)->AMDNEXT+ 0282
*         CMXNEXTS;                 /* GET THE NEW TOTAL             */
         L     @09,CCACMSWA(,R11)                                  0282
         L     @15,CMWFVTPT(,@09)                                  0282
         L     @01,CTGFVAMD(,@15)                                  0282
         L     @14,CTGFLPT(,@01)                                   0282
         AH    @10,AMDNEXT(,@14)                                   0282
         STH   @10,AMDNEXT(,@14)                                   0282
*     IF CTGFVTYP=CTGFVDTA THEN     /* CHECK FOR DATA OBJECT         */
         CLI   CTGFVTYP(@15),C'D'                                  0283
         BNE   @RF00283                                            0283
*       CMTOTVOL=INCR1;             /* DATA ELEMENT OF ARRAY         */
         MVC   CMTOTVOL(2,@09),@CH00037                            0284
*     ELSE                          /* INDEX OBJECT                  */
*       CMTOTVOL=INCR2;             /* INDEX ELEMENT OF ARRAY        */
         B     @RC00283                                            0285
@RF00283 L     @10,CCACMSWA(,R11)                                  0285
         MVC   CMTOTVOL(2,@10),@CH00055                            0285
*     CMFLPHYB=CMPHYBLK(CMTOTVOL);  /* SET PHYSICAL BLOCK SIZE       */
@RC00283 L     @10,CCACMSWA(,R11)                                  0286
         LH    @09,CMTOTVOL(,@10)                                  0286
         SLA   @09,4                                               0286
         L     @15,CMPHYBLK-16(@09,@10)                            0286
         ST    @15,CMFLPHYB(,CMFPLREF)                             0286
*     CMFLNBTK=CMBLKTRK(CMTOTVOL);  /* SET NO. BLOCKS PER TRACK      */
         LH    @15,CMBLKTRK-16(@09,@10)                            0287
         STH   @15,CMFLNBTK(,CMFPLREF)                             0287
*     CMFLNTKA=CMTRKPCA(CMTOTVOL);  /* SET TRACKS PER CA             */
*                                                                  0288
         LH    @10,CMTRKPCA-16(@09,@10)                            0288
         STH   @10,CMFLNTKA(,CMFPLREF)                             0288
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE RBA CONVERT ROUTINE TO COMPUTE DDDD VALUES         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0289
*Z020DRCA:                                                         0289
*     CALL IGGPDRCA;                                               0289
Z020DRCA BAL   @14,IGGPDRCA                                        0289
*     RFY                                                          0290
*      (CMFPLREF) RSTD;                                            0290
*     CCAFLPT=ADDR(CMFPLOCR);       /* SET FPL REFERENCE             */
         ST    CMFPLREF,CCAFLPT(,R11)                              0291
*     CTGFLDNO=INCR1;               /* INDICATE 1 DATA/LEN PAIR      */
         L     @10,CCAFLPT(,R11)                                   0292
         MVI   CTGFLDNO(@10),X'01'                                 0292
*     CTGFLDNM=ADDR(CMFLDNAM);      /* SET FIELD NAME ADDRESS        */
         LA    @09,CMFLDNAM(,CMFPLREF)                             0293
         ST    @09,CTGFLDNM(,@10)                                  0293
*     CTGFLNG(1)=CMEXTLST-ADDR(CMFLRLRP)+(EXNTSIZE*CMFLNOEX);/* SET
*                                      LENGTH OF DATA                */
         L     @09,CCACMSWA(,R11)                                  0294
         LA    @15,CMFLRLRP(,CMFPLREF)                             0294
         L     @14,CMEXTLST(,@09)                                  0294
         SLR   @14,@15                                             0294
         SLR   @07,@07                                             0294
         IC    @07,CMFLNOEX(,CMFPLREF)                             0294
         MH    @07,@CH00110                                        0294
         ALR   @14,@07                                             0294
         ST    @14,CTGFLNG(,@10)                                   0294
*     CTGFLPT(1)=ADDR(CMFLRLRP);    /* SET DATA ADDRESS              */
         ST    @15,CTGFLPT(,@10)                                   0295
*     RFY                                                          0296
*      (CMFPLREF) UNRSTD;                                          0296
*                                                                  0296
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK IF ALL EXTENTS IN THIS DIRECTORY BLOCK PROCESSED      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0297
*     IF CMEXNENT=CMEXTRFR->CMEXNENT THEN/* END OF THIS BK           */
         CLC   CMEXNENT(2,CMEXRFRG),CMEXNENT(CMEXTRFR)             0297
         BNE   @RF00297                                            0297
*       IF CMEXTRFR->CMEXCHAN=NONE THEN/* NO MORE BLOCKS             */
         ICM   @10,15,CMEXCHAN(CMEXTRFR)                           0298
         BNZ   @RF00298                                            0298
*         WORKPROC='NG';            /* INDICATE PROCESS COMPLETE     */
         MVC   WORKPROC(2,@09),@CC03349                            0299
*       ELSE                        /* NEED ANOTHER DIRECTORY        */
*         DO;                       /* PROCESS NEXT DIRECTORY BLOCK  */
         B     @RC00298                                            0300
@RF00298 DS    0H                                                  0301
*           CMEXTRFR=CMEXTRFR->CMEXCHAN;/* SET EXTENT DIR            */
         L     CMEXTRFR,CMEXCHAN(,CMEXTRFR)                        0301
*Z021DEXD:                                                         0302
*           CALL IGGPDEXD;          /* GET A FPL DIRECTORY BLK       */
Z021DEXD BAL   @14,IGGPDEXD                                        0302
*           IF CCACD1^=RCS THEN     /* GET STORAGE FAIL              */
         CLI   CCACD1(R11),0                                       0303
         BE    @RF00303                                            0303
*             CALL EXIT;            /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0304
*         END;                      /* END 'DO' FOR DIRECTORY BLOCK  */
*     ELSE                                                         0306
*       ;                           /* NOT END OF BLOCK - CONTINUE   */
@RF00297 DS    0H                                                  0307
*   END;                            /* END 'DO-WHILE' TO PROCESS ALL
*                                      EXTENTS                       */
@RC00297 DS    0H                                                  0307
@DE00214 L     @10,CCACMSWA(,R11)                                  0307
         CLC   WORKPROC(2,@10),@CC03338                            0307
         BE    @DL00214                                            0307
*   RFY                                                            0308
*     CMFOVLAY BASED(ADDR(CMFOVERL)-CMFOVLY8);/* REPOSITION TRACK  0308
*                                      OVERFLOW STRUCTURE    @YM04677*/
*                                                                  0308
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR CANDIDATE VOLUMES, SINCE THEY REQUIRE FPLS          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0309
*   IF CMCANVOL^=NONE&CMCNVNO^=RCS THEN/* CANDIDATE VOLUME REQUESTED */
         SLR   @09,@09                                             0309
         C     @09,CMCANVOL(,@10)                                  0309
         BE    @RF00309                                            0309
         CH    @09,CMCNVNO(,@10)                                   0309
         BE    @RF00309                                            0309
*Z022DBCV:                                                         0310
*     CALL IGGPDBCV;                /* BUILD CANDIDATE VOL OCCRS     */
Z022DBCV BAL   @14,IGGPDBCV                                        0310
*   ELSE                                                           0311
*     ;                             /* NOT CANDIDATE VOLUME OR NO  0311
*                                      MORE VOLUMES                  */
@RF00309 DS    0H                                                  0312
*   IF(CTGFVTYP=CTGFVDTA)&(CTGFVAMD->CTGFLPT(1)->AMDSDT=ON) THEN/* 0312
*                                      NEED TO SAVE FPL INDEX        */
         L     @10,CCACMSWA(,R11)                                  0312
         L     @09,CMWFVTPT(,@10)                                  0312
         CLI   CTGFVTYP(@09),C'D'                                  0312
         BNE   @RF00312                                            0312
         L     @09,CTGFVAMD(,@09)                                  0312
         L     @09,CTGFLPT(,@09)                                   0312
         TM    AMDSDT(@09),B'00100000'                             0312
         BNO   @RF00312                                            0312
*     CMSSEXTS=CMFPLIDX;            /* SAVE THE FPL INDEX            */
         MVC   CMSSEXTS(4,@10),CMFPLIDX(@10)                       0313
*   ELSE                                                           0314
*     ;                             /* FPL INDEX NOT NEEDED LATER    */
@RF00312 DS    0H                                                  0315
*   IF CTGFVTYP=CTGFVIDX&CMSSEXTS^=NONE THEN/* INDEX TYPE AND      0315
*                                      SEQUENCE SET WITH DATA        */
         L     @10,CCACMSWA(,R11)                                  0315
         L     @09,CMWFVTPT(,@10)                                  0315
         CLI   CTGFVTYP(@09),C'I'                                  0315
         BNE   @RF00315                                            0315
         ICM   @05,15,CMSSEXTS(@10)                                0315
         BZ    @RF00315                                            0315
*     DO;                           /* PROCESS FOR SEQ SET WITH DATA */
*       CTGFVAMD->CTGFLPT(1)->AMDSSRBA=CHIA+INCR1;/* SET RBA OF FIRST
*                                      SEQUENCE SET RECORD           */
         L     @10,CTGFVAMD(,@09)                                  0317
         L     @10,CTGFLPT(,@10)                                   0317
         L     @09,CCAURAB(,R11)                                   0317
         L     @09,CCACPE1(,@09)                                   0317
         LA    @05,1                                               0317
         AL    @05,CHIA(,@09)                                      0317
         ST    @05,AMDSSRBA(,@10)                                  0317
*       CTGFVAMD->CTGFLPT(1)->AMDHLRBA=CTGFVAMD->CTGFLPT(1)->AMDSSRBA;
         ST    @05,AMDHLRBA(,@10)                                  0318
*                                   /* SET HIGH LEVEL RBA            */
*Z023DSSP:                                                         0319
*       CALL IGGPDSSP;              /* PROCESS DATA EXTENTS          */
Z023DSSP BAL   @14,IGGPDSSP                                        0319
*     END;                          /* END PROCESS FOR SEQ SET       */
*   ELSE                                                           0321
*     ;                             /* NOT SEQUENCE SET WITH DATA    */
*                                                                  0321
@RF00315 DS    0H                                                  0322
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE TOTAL DATA SET FREE SPACE QUANTITY                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*   CHIA=CHIA+INCR1;                /* DATA SET HIGH-ALLOCATED RBA   */
         L     @10,CCAURAB(,R11)                                   0322
         L     @10,CCACPE1(,@10)                                   0322
         LA    @09,1                                               0322
         AL    @09,CHIA(,@10)                                      0322
         ST    @09,CHIA(,@10)                                      0322
*   CTGFVAMD->CTGFLPT(1)->AMDASPA=CHIA;/* TOTAL FREE BYTE            */
         L     @10,CCACMSWA(,R11)                                  0323
         L     @10,CMWFVTPT(,@10)                                  0323
         L     @10,CTGFVAMD(,@10)                                  0323
         L     @10,CTGFLPT(,@10)                                   0323
         ST    @09,AMDASPA(,@10)                                   0323
*   RFY                                                            0324
*     R8 UNRSTD;                    /* FOR COMPILER USE        Y02020*/
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0325
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDEXD');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDEXD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0328
@EF00004 DS    0H                                                  0328
@ER00004 BR    @14                                                 0328
@PB00004 DS    0H                                                  0329
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0330
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDEXD  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0330
*IGGPDEXD:                                                         0330
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0330
IGGPDEXD DS    0H                                                  0331
*Z024:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z024DEXD:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0331
*    (R5,                                                          0331
*     R6,                                                          0331
*     R7,                                                          0331
*     R8,                                                          0331
*     R9,                                                          0331
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z024     DS    0H                                                  0331
Z024DEXD DS    0H                                                  0332
*   RFY                                                            0332
*    (R2,                                                          0332
*     R3,                                                          0332
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   CCAMNLEN=DIRCORLN;              /* SET DIRECTORY CORE SIZE       */
         MVC   CCAMNLEN(3,R11),@CF00060+1                          0335
*   RFY                                                            0336
*     R1 RSTD;                                                     0336
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0337
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0338
         MVI   CCAMNSPL(R11),X'FC'                                 0338
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0339
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0341
         LTR   R1,R1                                               0341
         BZ    @RF00341                                            0341
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='AK', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0342
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0342
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03430                             0342
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0343
         B     @RC00341                                            0343
@RF00341 DS    0H                                                  0344
*       DO;                                                        0344
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0345
         TM    MNATFULL(R11),B'10000000'                           0345
         BNO   @RF00345                                            0345
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0346
*Z028ARFS:                                                         0346
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z028ARFS L     @15,@CV03193                                        0346
         BALR  @14,@15                                             0346
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0347
*                                      PUSH AND TRACK                */
@RF00345 DS    0H                                                  0347
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0348
*     END;                                                         0349
*   RFY                                                            0350
*     R1 UNRSTD;                                                   0350
@RC00341 DS    0H                                                  0351
*   IF CCACD1^=RCS THEN             /* GET STORAGE FAIL              */
         CLI   CCACD1(R11),0                                       0351
         BE    @RF00351                                            0351
*     CALL EXIT;                    /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0352
*   IF CMEXRFRG=NONE THEN           /* NO EXTENT DIRECTORY REF       */
@RF00351 SLR   @10,@10                                             0353
         CR    CMEXRFRG,@10                                        0353
         BNE   @RF00353                                            0353
*     IF CMNRMEXT=NONE THEN         /* CHECK FOR NO EXT DIRECT       */
         L     @05,CCACMSWA(,R11)                                  0354
         C     @10,CMNRMEXT(,@05)                                  0354
         BNE   @RF00354                                            0354
*       CMNRMEXT=CCAMNADR;          /* ESTABLISH FIRST EXTENT DIR    */
         MVC   CMNRMEXT(4,@05),CCAMNADR(R11)                       0355
*     ELSE                          /* NORMAL EXTENT LIST EXISTS     */
*       CMFPLIDX=CCAMNADR;          /* ESTABLISH FIRST FPL DIR       */
         B     @RC00354                                            0356
@RF00354 L     @10,CCACMSWA(,R11)                                  0356
         MVC   CMFPLIDX(4,@10),CCAMNADR(R11)                       0356
*   ELSE                            /* EXTENT DIRECTORY REF EXISTS   */
*     CMEXCHAN=CCAMNADR;            /* CHAIN NEW DIRECTORY           */
         B     @RC00353                                            0357
@RF00353 MVC   CMEXCHAN(4,CMEXRFRG),CCAMNADR(R11)                  0357
*   CMEXRFRG=CCAMNADR;              /* SAVE CORE ADDRESS             */
@RC00353 L     CMEXRFRG,CCAMNADR(,R11)                             0358
*   CMEXCHAN=NONE;                  /* CLEAR CHAIN POINTER           */
         SLR   @10,@10                                             0359
         ST    @10,CMEXCHAN(,CMEXRFRG)                             0359
*   CMEXNENT=CLEAR;                 /* CLEAR FPL/EXTENT ENTRIES      */
         STH   @10,CMEXNENT(,CMEXRFRG)                             0360
*   CMEXCRSZ=DIRCORLN;              /* SET CORE LENGTH               */
         MVC   CMEXCRSZ(2,CMEXRFRG),@CH00060                       0361
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0362
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDMOP');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDMOP'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0365
@EF00005 DS    0H                                                  0365
@ER00005 BR    @14                                                 0365
@PB00005 DS    0H                                                  0366
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0367
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDMOP  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0367
*IGGPDMOP:                                                         0367
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0367
IGGPDMOP DS    0H                                                  0368
*Z029:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z029DMOP:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0368
*    (R5,                                                          0368
*     R6,                                                          0368
*     R7,                                                          0368
*     R8,                                                          0368
*     R9,                                                          0368
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z029     DS    0H                                                  0368
Z029DMOP DS    0H                                                  0369
*   RFY                                                            0369
*    (R2,                                                          0369
*     R3,                                                          0369
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0371
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO CONSTRUCT AN ASSOCIATION FPL AND TO     */
*   /* BUILD AN INTERNAL CPL THAT WILL CONTAIN ALL OF THE FPLS THAT  */
*   /* THE MODIFY FUNCTION WILL USE TO COMPLETE THE CONSTRUCTION OF  */
*   /* THE RECORD ENTRY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0372
*   WORKPROC='GO';                  /* SET LOOP CONTROL              */
         L     @10,CCACMSWA(,R11)                                  0372
         MVC   WORKPROC(2,@10),@CC03338                            0372
*   CMEXRFRG=CMFPLIDX;              /* GET FPL DIRECTORY ADDRESS     */
         L     CMEXRFRG,CMFPLIDX(,@10)                             0373
*   GENWRKRG=NONE;                  /* CLEAR FPL COUNTER             */
         SLR   GENWRKRG,GENWRKRG                                   0374
*   DO WHILE WORKPROC='GO';         /* DO FOR ALL EXTENTS            */
         B     @DE00375                                            0375
@DL00375 DS    0H                                                  0376
*     GENWRKRG=GENWRKRG+CMEXNENT;   /* GET NO. OF FPLS IN LIST       */
         AH    GENWRKRG,CMEXNENT(,CMEXRFRG)                        0376
*     IF CMEXCHAN=NONE THEN         /* CHECK FOR NO MORE DIR BLK     */
         ICM   @10,15,CMEXCHAN(CMEXRFRG)                           0377
         BNZ   @RF00377                                            0377
*       WORKPROC='NG';              /* PROCESS DONE                  */
         L     @10,CCACMSWA(,R11)                                  0378
         MVC   WORKPROC(2,@10),@CC03349                            0378
*     ELSE                          /* MORE DIRECTORY BLOCKS         */
*       CMEXRFRG=CMEXCHAN;          /* GET NEXT BLOCK ADDRESS        */
         B     @RC00377                                            0379
@RF00377 L     CMEXRFRG,CMEXCHAN(,CMEXRFRG)                        0379
*   END;                            /* END 'DO' PROCESS FOR EXTENTS  */
@RC00377 DS    0H                                                  0380
@DE00375 L     @10,CCACMSWA(,R11)                                  0380
         CLC   WORKPROC(2,@10),@CC03338                            0380
         BE    @DL00375                                            0380
*   IF CTGFVSTY=NONE THEN           /* CHECK IF SECURITY FPL         */
         L     @10,CMWFVTPT(,@10)                                  0381
         ICM   @05,15,CTGFVSTY(@10)                                0381
         BNZ   @RF00381                                            0381
*     GENWRKRG=GENWRKRG+INCR2;      /* NO, ONLY NEED AMDSB AND     0382
*                                      ASSOCIATION FPL EXTRA         */
         AH    GENWRKRG,@CH00055                                   0382
*   ELSE                            /* NEED SECURITY FPL, ALSO       */
*     GENWRKRG=GENWRKRG+INCR3;      /* AMDSB, ASSOC, & SECURITY      */
         B     @RC00381                                            0383
@RF00381 AH    GENWRKRG,@CH00417                                   0383
*   CCAMNLEN=LENGTH(CTGPL)+(GENWRKRG*LENGTH(CTGFIELD));            0384
@RC00381 LR    @10,GENWRKRG                                        0384
         SLA   @10,2                                               0384
         AH    @10,@CH00114                                        0384
         STCM  @10,7,CCAMNLEN(R11)                                 0384
*   RFY                                                            0385
*     R1 RSTD;                                                     0385
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0386
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0387
         MVI   CCAMNSPL(R11),X'FC'                                 0387
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0390
         LTR   R1,R1                                               0390
         BZ    @RF00390                                            0390
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='AK', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0391
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0391
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03430                             0391
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0392
         B     @RC00390                                            0392
@RF00390 DS    0H                                                  0393
*       DO;                                                        0393
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0394
         TM    MNATFULL(R11),B'10000000'                           0394
         BNO   @RF00394                                            0394
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0395
*Z033ARFS:                                                         0395
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z033ARFS L     @15,@CV03193                                        0395
         BALR  @14,@15                                             0395
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0396
*                                      PUSH AND TRACK                */
@RF00394 DS    0H                                                  0396
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0397
*     END;                                                         0398
*   RFY                                                            0399
*     R1 UNRSTD;                                                   0399
@RC00390 DS    0H                                                  0400
*   IF CCACD1^=RCS THEN             /* CHECK FOR BAD GET CORE        */
         CLI   CCACD1(R11),0                                       0400
         BE    @RF00400                                            0400
*     CALL EXIT;                    /* ERROR RETURN                  */
         BAL   @14,EXIT                                            0401
*   RFY                                                            0402
*     CTGPL BASED(CCAMCPL);                                        0402
@RF00400 DS    0H                                                  0403
*   CCAMCPL=CCAMNADR;               /* SET UP NEW CPL ADDRESS        */
         L     @10,CCAMNADR(,R11)                                  0403
         ST    @10,CCAMCPL(,R11)                                   0403
*   CTGPL=CTGPL&&CTGPL;             /* CLEAR MAIN PORTION OF CPL     */
         XC    CTGPL(28,@10),CTGPL(@10)                            0404
*   CTGNOFLD=GENWRKRG;              /* SET NO. OF FIELD PTRS         */
         STC   GENWRKRG,CTGNOFLD(,@10)                             0405
*   CCAR2UR=OFF;                    /* SET RAB NOT IN USE            */
         NI    CCAR2UR(R11),B'01111111'                            0406
*   CCAR3UR=OFF;                    /* SET RAB NOT IN USE            */
         NI    CCAR3UR(R11),B'01111111'                            0407
*   CCAR4UR=OFF;                    /* SET RABS NOT IN USE           */
         NI    CCAR4UR(R11),B'01111111'                            0408
*   CCAR5UR=OFF;                    /* SET RABS NOT IN USE           */
         NI    CCAR5UR(R11),B'01111111'                            0409
*   CCAREUSE=ON;                    /* SET RABS REUSEABLE            */
         OI    CCAREUSE(R11),B'00000100'                           0410
*   CCAF2NVC=ON;                    /* SET NO VALIDITY CHECK         */
         OI    CCAF2NVC(R11),B'01000000'                           0411
*   CCAMOD=ON;                      /* SET MODIFY CALL BIT           */
         OI    CCAMOD(R11),B'00000001'                             0412
*   CCARABB=CCAURAB;                /* SET BASE RAB ADDRESS          */
         MVC   CCARABB(4,R11),CCAURAB(R11)                         0413
*   CCARABF=ADDR(CCARAB2);          /* SET FIRST RAB TO USE          */
         LA    @05,CCARAB2(,R11)                                   0414
         ST    @05,CCARABF(,R11)                                   0414
*   CCARABL=ADDR(CCARAB5);          /* SET LAST RAB TO USE           */
         LA    @05,CCARAB5(,R11)                                   0415
         ST    @05,CCARABL(,R11)                                   0415
*   CCAMODPA=ON;                    /* INDICATE TO PUT ADD           */
*                                                                  0416
         OI    CCAMODPA(R11),B'00010000'                           0416
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT ALL OF THE FPL POINTERS IN THE CPL                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0417
*   CMEXRFRG=CMFPLIDX;              /* GET FPL DIRECTORY ADDRESS     */
         L     @05,CCACMSWA(,R11)                                  0417
         L     CMEXRFRG,CMFPLIDX(,@05)                             0417
*   GENWRKRG=INCR1;                 /* CLEAR FPL COUNTER             */
         LA    @15,1                                               0418
         LR    GENWRKRG,@15                                        0418
*   WORKPROC='GO';                  /* SET LOOP PROCESS              */
         MVC   WORKPROC(2,@05),@CC03338                            0419
*   CTGFIELD(GENWRKRG)=CTGFVAMD;    /* SET AMDSB FPL POINTER         */
         LR    @14,GENWRKRG                                        0420
         SLA   @14,2                                               0420
         L     @01,CMWFVTPT(,@05)                                  0420
         L     @09,CTGFVAMD(,@01)                                  0420
         ST    @09,CTGFIELD-4(@14,@10)                             0420
*   GENWRKRG=GENWRKRG+INCR1;        /* INCREMENT FPL COUNTER         */
         ALR   GENWRKRG,@15                                        0421
*   IF CMASCFPL=NONE THEN           /* CHECK FOR NO ASSOC FPL        */
         ICM   @10,15,CMASCFPL(@05)                                0422
         BNZ   @RF00422                                            0422
*     DO;                           /* NEED TO BUILD AN ASSC FPL     */
*       CCAMNLEN=LENGTH(CMASFPST);  /* CORE SIZE                     */
         MVC   CCAMNLEN(3,R11),@CF00118+1                          0424
*       RFY                                                        0425
*         R1 RSTD;                                                 0425
*       R1=ADDR(CCAMSSPL);          /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0426
*       CCAMNSPL=USUBPOOL;          /* STORE SUBPOOL VALUE           */
*                                                                  0427
         MVI   CCAMNSPL(R11),X'FC'                                 0427
*       /*************************************************************/
*       /*                                                           */
*       /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0428
*       GEN(GETMAIN LC,MF=(E,(1))); /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*       GEN(LR R1,R15);             /* PICK UP RETURN CODE           */
         LR R1,R15
*       IF R1^=NOGETMSE THEN        /* CHECK FOR ERROR RETURN        */
*                                                                  0430
         LTR   R1,R1                                               0430
         BZ    @RF00430                                            0430
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='AK', CCAREASN=RSN2, CCARETRN=RCINSSWA     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0431
*         CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03430                             0431
*       ELSE                        /* GETMAIN SUCCESSFUL            */
*         DO;                                                      0432
         B     @RC00430                                            0432
@RF00430 DS    0H                                                  0433
*           DO;                                                    0433
*             IF MNATFULL=ON THEN   /* TRACKING TABLE FULL           */
*                                                                  0434
         TM    MNATFULL(R11),B'10000000'                           0434
         BNO   @RF00434                                            0434
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLAT                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0435
*Z037ARFS:                                                         0435
*               CALL IGGPARFS;      /* YES,CALL SPILL ROUTINE        */
Z037ARFS L     @15,@CV03193                                        0435
         BALR  @14,@15                                             0435
*             GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*
*                                      PUSH AND TRACK                */
@RF00434 DS    0H                                                  0436
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*           END;                                                   0437
*         END;                                                     0438
*       RFY                                                        0439
*         R1 UNRSTD;                                               0439
@RC00430 DS    0H                                                  0440
*       IF CCACD1^=RCS THEN         /* CHECK FOR BAD GET CORE        */
         CLI   CCACD1(R11),0                                       0440
         BE    @RF00440                                            0440
*         CALL EXIT;                /* ERROR RETURN                  */
         BAL   @14,EXIT                                            0441
*       CMASCFPL=CCAMNADR;          /* GET CORE ADDRESS              */
@RF00440 L     @10,CCACMSWA(,R11)                                  0442
         L     @05,CCAMNADR(,R11)                                  0442
         ST    @05,CMASCFPL(,@10)                                  0442
*       RFY                                                        0443
*         CTGFL BASED(ADDR(CMAFPL));                               0443
*       CMASFPST=CMASFPST&&CMASFPST;/* CLEAR THE CORE                */
         XC    CMASFPST(36,@05),CMASFPST(@05)                      0444
*       CTGFLDNO=INCR1;             /* NO. OF LENGTH/ADDR PAIRS      */
         MVI   CTGFLDNO(@05),X'01'                                 0445
*       CTGFLDNM=ADDR(CMAFDNAM);    /* SET FIELD NAME ADDRESS        */
         LA    @15,CMAFDNAM(,@05)                                  0446
         ST    @15,CTGFLDNM(,@05)                                  0446
*       CTGFLNG(1)=LENGTH(CMAFTYPE)+LENGTH(CMAFNAME);              0447
         MVC   CTGFLNG(4,@05),@CF00058                             0447
*       CTGFLPT(1)=ADDR(CMAFTYPE);  /* SET DATA ADDRESS              */
         LA    @15,CMAFTYPE(,@05)                                  0448
         ST    @15,CTGFLPT(,@05)                                   0448
*       CMAFDNAM='NAMEDS  ';        /* SET FIELD NAME                */
         MVC   CMAFDNAM(8,@05),@CC03381                            0449
*       CMAFTYPE=CCACPL->CTGFVT->CTGFVTYP;/* SET ENTRY       @Y30SSSG*/
         L     @01,CCACPL(,R11)                                    0450
         L     @01,CTGFVT(,@01)                                    0450
         MVC   CMAFTYPE(1,@05),CTGFVTYP(@01)                       0450
*       CMAFNAME=CMWACI(1);         /* SET CLUSTER NAME ASSOC        */
         MVC   CMAFNAME(3,@05),CMWACI(@10)                         0451
*       RFY                                                        0452
*         CTGFL BASED(CCAFLPT);                                    0452
*     END;                          /* END 'DO' TO BUILD ASSOC FPL   */
*   ELSE                                                           0454
*     ;                             /* ASSOCIATION FPL ALREADY EXISTS*/
@RF00422 DS    0H                                                  0455
*   CTGFIELD(GENWRKRG)=CMASCFPL;    /* SET ASSOC FPL POINTER         */
         LR    @10,GENWRKRG                                        0455
         SLA   @10,2                                               0455
         L     @05,CCAMCPL(,R11)                                   0455
         L     @01,CCACMSWA(,R11)                                  0455
         L     @15,CMASCFPL(,@01)                                  0455
         ST    @15,CTGFIELD-4(@10,@05)                             0455
*   DO WHILE WORKPROC='GO';         /* DO FOR ALL FPL DIRECTORY BLKS */
         B     @DE00456                                            0456
@DL00456 DS    0H                                                  0457
*     DO CMFPLCTR=INCR1 TO CMEXNENT;/* LOOP FOR ALL FPLS             */
         LA    CMFPLCTR,1                                          0457
         B     @DE00457                                            0457
@DL00457 DS    0H                                                  0458
*       GENWRKRG=GENWRKRG+INCR1;    /* INCREMENT FPL COUNTER         */
         AH    GENWRKRG,@CH00037                                   0458
*       CTGFIELD(GENWRKRG)=CMEXCRPT(CMFPLCTR);                     0459
         LR    @10,GENWRKRG                                        0459
         SLA   @10,2                                               0459
         L     @05,CCAMCPL(,R11)                                   0459
         LR    @15,CMFPLCTR                                        0459
         SLA   @15,3                                               0459
         L     @15,CMEXCRPT-8(@15,CMEXRFRG)                        0459
         ST    @15,CTGFIELD-4(@10,@05)                             0459
*     END;                          /* END DO-LOOP FOR FPL'S         */
         AH    CMFPLCTR,@CH00037                                   0460
@DE00457 CH    CMFPLCTR,CMEXNENT(,CMEXRFRG)                        0460
         BNH   @DL00457                                            0460
*     IF CMEXCHAN=NONE THEN         /* CHECK FOR END OF FPL DIRS     */
         ICM   @10,15,CMEXCHAN(CMEXRFRG)                           0461
         BNZ   @RF00461                                            0461
*       WORKPROC='NG';              /* SET PROCESS DONE              */
         L     @10,CCACMSWA(,R11)                                  0462
         MVC   WORKPROC(2,@10),@CC03349                            0462
*     ELSE                          /* MORE FPLS TO PROCESS          */
*       CMEXRFRG=CMEXCHAN;          /* GET FPL DIRECTORY ADDRESS     */
         B     @RC00461                                            0463
@RF00461 L     CMEXRFRG,CMEXCHAN(,CMEXRFRG)                        0463
*   END;                            /* END 'DO-WHILE' FOR DIR BLKS   */
@RC00461 DS    0H                                                  0464
@DE00456 L     @10,CCACMSWA(,R11)                                  0464
         CLC   WORKPROC(2,@10),@CC03338                            0464
         BE    @DL00456                                            0464
*   IF CTGFVSTY^=NONE THEN          /* CHECK FOR SECURITY            */
         L     @10,CMWFVTPT(,@10)                                  0465
         L     @10,CTGFVSTY(,@10)                                  0465
         LTR   @10,@10                                             0465
         BZ    @RF00465                                            0465
*     DO;                           /* SECURITY FPL PROCESSING       */
*       GENWRKRG=GENWRKRG+INCR1;    /* INCREMENT FPL COUNTER         */
         AH    GENWRKRG,@CH00037                                   0467
*       CTGFIELD(GENWRKRG)=CTGFVSTY;/* SET SECURITY FPL ADDR         */
         LR    @05,GENWRKRG                                        0468
         SLA   @05,2                                               0468
         L     @01,CCAMCPL(,R11)                                   0468
         ST    @10,CTGFIELD-4(@05,@01)                             0468
*     END;                          /* END SECURITY FPL PROCESSING   */
*   ELSE                                                           0470
*     ;                             /* SECURITY CHECK NOT REQUIRED   */
@RF00465 DS    0H                                                  0471
*   RCDCRAVL=CMSCRAVI;              /* SET VOLID IN RCD      @Y30SSDW*/
         L     @10,CCAURAB(,R11)                                   0471
         L     @10,CCACPE1(,@10)                                   0471
         L     @05,CCACMSWA(,R11)                                  0471
         MVC   RCDCRAVL(6,@10),CMSCRAVI(@05)                       0471
*   RCDCRADT=CMSCRADT;              /* SET DEV TYPE IN RCD   @Y30SSDW*/
*                                                                  0472
         MVC   RCDCRADT(4,@10),CMSCRADT(@05)                       0472
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAV                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0473
*Z038MOD:                                                          0473
*   CALL IGGPMOD;                   /* CALL MODIFY                   */
Z038MOD  L     @15,@CV03195                                        0473
         BALR  @14,@15                                             0473
*   CCAURAB=ADDR(CCARAB2);          /* RE-SET THE BASE RECORD        */
         LA    @10,CCARAB2(,R11)                                   0474
         ST    @10,CCAURAB(,R11)                                   0474
*   RFY                                                            0475
*     CTGPL BASED(CCACPL);                                         0475
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0476
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDRCA');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDRCA'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0479
@EF00006 DS    0H                                                  0479
@ER00006 BR    @14                                                 0479
@PB00006 DS    0H                                                  0480
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0481
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDRCA  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0481
*IGGPDRCA:                                                         0481
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0481
IGGPDRCA DS    0H                                                  0482
*Z039:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z039DRCA:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0482
*    (R5,                                                          0482
*     R6,                                                          0482
*     R7,                                                          0482
*     R8,                                                          0482
*     R9,                                                          0482
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z039     DS    0H                                                  0482
Z039DRCA DS    0H                                                  0483
*   RFY                                                            0483
*    (R2,                                                          0483
*     R3,                                                          0483
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0485
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO COMPUTE THE OBJECT RBAS AND THE ENDING  */
*   /* CCHH OF THE EXTENT                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0486
*   RFY                                                            0486
*    (R8) RSTD;                                                    0486
*   RFY                                                            0487
*    (CMFPLREF) RSTD;                                              0487
*                                                                  0487
*   /*****************************************************************/
*   /*                                                               */
*   /* EXTENT LIST IS REFERENCED BY CMEXTLST                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0488
*   DO CMRNGCTR=INCR1 TO CMFLNOEX;  /* PROCESS ALL EXTENTS           */
         LA    @10,1                                               0488
         B     @DE00488                                            0488
@DL00488 DS    0H                                                  0489
*     CMFXEDCC(CMRNGCTR)=((CMFXSTHH(CMRNGCTR)+CMFXNOTT(CMRNGCTR)-INCR1)
*         /CMTRKCYL(CMTOTVOL));                                    0489
         L     @10,CCACMSWA(,R11)                                  0489
         LH    @09,CMRNGCTR(,@10)                                  0489
         MH    @09,@CH00110                                        0489
         L     @15,CMEXTLST(,@10)                                  0489
         LA    @01,0(@09,@15)                                      0489
         AL    @01,@CF03441                                        0489
         LH    @14,CMFXSTHH-4(,@01)                                0489
         LA    @01,0(@09,@15)                                      0489
         AL    @01,@CF03435                                        0489
         AH    @14,CMFXNOTT-10(,@01)                               0489
         BCTR  @14,0                                               0489
         LH    @07,CMTOTVOL(,@10)                                  0489
         SLA   @07,4                                               0489
         LH    @10,CMTRKCYL-16(@07,@10)                            0489
         ST    @15,@TF00001                                        0489
         SRDA  @14,32                                              0489
         DR    @14,@10                                             0489
         L     @14,@TF00001                                        0489
         AL    @14,@CF03442                                        0489
         STH   @15,CMFXEDCC-6(@09,@14)                             0489
*     CMFXEDHH(CMRNGCTR)=(CMFXSTHH(CMRNGCTR)+CMFXNOTT(CMRNGCTR)-INCR1)
*         //CMTRKCYL(CMTOTVOL);     /* SET ENDING HH NUMBER          */
         L     @01,@TF00001                                        0490
         AL    @01,@CF03441                                        0490
         LH    @15,CMFXSTHH-4(@09,@01)                             0490
         L     @14,@TF00001                                        0490
         AL    @14,@CF03435                                        0490
         AH    @15,CMFXNOTT-10(@09,@14)                            0490
         BCTR  @15,0                                               0490
         LR    @00,@15                                             0490
         SRDA  @00,32                                              0490
         DR    @00,@10                                             0490
         L     @10,@TF00001                                        0490
         AL    @10,@CF03443                                        0490
         STH   @00,CMFXEDHH-8(@09,@10)                             0490
*     CMFXEDCC(CMRNGCTR)=CMFXEDCC(CMRNGCTR)+CMFXSTCC(CMRNGCTR);    0491
*                                                                  0491
         L     @10,@TF00001                                        0491
         AL    @10,@CF03442                                        0491
         LH    @10,CMFXEDCC-6(@09,@10)                             0491
         L     @01,@TF00001                                        0491
         AL    @01,@CF03434                                        0491
         AH    @10,CMFXSTCC-2(@09,@01)                             0491
         L     @01,@TF00001                                        0491
         AL    @01,@CF03442                                        0491
         STH   @10,CMFXEDCC-6(@09,@01)                             0491
*     /***************************************************************/
*     /*                                                             */
*     /* COMPUTE THE DDDD VALUES                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0492
*FIXLBL:                                                           0492
*     CMFXLRBA(CMRNGCTR)=CHIA+INCR1;/* SET STARTING DDDD             */
FIXLBL   L     @10,CCACMSWA(,R11)                                  0492
         LH    @09,CMRNGCTR(,@10)                                  0492
         MH    @09,@CH00110                                        0492
         L     @15,CMEXTLST(,@10)                                  0492
         L     @14,CCAURAB(,R11)                                   0492
         L     @14,CCACPE1(,@14)                                   0492
         LA    @07,1                                               0492
         AL    @07,CHIA(,@14)                                      0492
         LA    @06,0(@09,@15)                                      0492
         AL    @06,@CF03444                                        0492
         ST    @07,CMFXLRBA-12(,@06)                               0492
*     RFY                                                          0493
*       CTGFL BASED(CTGFVAMD);                                     0493
*     RFY                                                          0494
*       IDAAMDSB BASED(CTGFLPT(1));                                0494
*     IF AMDREPL^=ON THEN           /* DATA OR INDEX WITH NO REP     */
         L     @01,CMWFVTPT(,@10)                                  0495
         L     @01,CTGFVAMD(,@01)                                  0495
         L     @14,CTGFLPT(,@01)                                   0495
         TM    AMDREPL(@14),B'00010000'                            0495
         BO    @RF00495                                            0495
*       CMFXHRBA(CMRNGCTR)=((CMFXNOTT(CMRNGCTR)/CMTRKPCA(CMTOTVOL))*
*           AMDCINV*AMDCIPCA)+CMFXLRBA(CMRNGCTR)-INCR1;/* NEW HIGH 0496
*                                      RBA VALUE                     */
         LH    @06,CMTOTVOL(,@10)                                  0496
         SLA   @06,4                                               0496
         LA    @01,0(@09,@15)                                      0496
         AL    @01,@CF03435                                        0496
         LH    @00,CMFXNOTT-10(,@01)                               0496
         SRDA  @00,32                                              0496
         LH    @10,CMTRKPCA-16(@06,@10)                            0496
         DR    @00,@10                                             0496
         M     @00,AMDCINV(,@14)                                   0496
         MH    @01,AMDCIPCA(,@14)                                  0496
         ALR   @01,@07                                             0496
         BCTR  @01,0                                               0496
         AL    @15,@CF03431                                        0496
         ST    @01,CMFXHRBA-16(@09,@15)                            0496
*     ELSE                          /* COMPUTE INDEX WITH REPL       */
*       CMFXHRBA(CMRNGCTR)=AMDCINV*CMFXNOTT(CMRNGCTR)+CMFXLRBA(CMRNGCTR
*           )-INCR1;                /* REPLICATED INDEX RBA          */
         B     @RC00495                                            0497
@RF00495 L     @10,CCACMSWA(,R11)                                  0497
         LH    @09,CMRNGCTR(,@10)                                  0497
         MH    @09,@CH00110                                        0497
         L     @15,CMEXTLST(,@10)                                  0497
         L     @10,CMWFVTPT(,@10)                                  0497
         L     @10,CTGFVAMD(,@10)                                  0497
         L     @10,CTGFLPT(,@10)                                   0497
         L     @10,AMDCINV(,@10)                                   0497
         LA    @01,0(@09,@15)                                      0497
         AL    @01,@CF03435                                        0497
         MH    @10,CMFXNOTT-10(,@01)                               0497
         LA    @01,0(@09,@15)                                      0497
         AL    @01,@CF03444                                        0497
         AL    @10,CMFXLRBA-12(,@01)                               0497
         BCTR  @10,0                                               0497
         AL    @15,@CF03431                                        0497
         ST    @10,CMFXHRBA-16(@09,@15)                            0497
*     CHIA=CMFXHRBA(CMRNGCTR);      /* SET NEW HIGH ALLOCATED        */
@RC00495 L     @10,CCAURAB(,R11)                                   0498
         L     @10,CCACPE1(,@10)                                   0498
         L     @09,CCACMSWA(,R11)                                  0498
         LH    @15,CMRNGCTR(,@09)                                  0498
         MH    @15,@CH00110                                        0498
         L     @09,CMEXTLST(,@09)                                  0498
         AL    @09,@CF03431                                        0498
         L     @09,CMFXHRBA-16(@15,@09)                            0498
         ST    @09,CHIA(,@10)                                      0498
*   END;                            /* END PROCESSING OF ALL EXTENTS */
         L     @09,CCACMSWA(,R11)                                  0499
         LA    @10,1                                               0499
         AH    @10,CMRNGCTR(,@09)                                  0499
@DE00488 L     @09,CCACMSWA(,R11)                                  0499
         STH   @10,CMRNGCTR(,@09)                                  0499
         SLR   @09,@09                                             0499
         IC    @09,CMFLNOEX(,CMFPLREF)                             0499
         CR    @10,@09                                             0499
         BNH   @DL00488                                            0499
*   CMFLHABA=CHIA+INCR1;            /* SET HIGH ALLOCATED RBA        */
         L     @10,CCAURAB(,R11)                                   0500
         L     @10,CCACPE1(,@10)                                   0500
         LA    @09,1                                               0500
         AL    @09,CHIA(,@10)                                      0500
         ST    @09,CMFLHABA(,CMFPLREF)                             0500
*   CMFLHUBA=CMFXLRBA(1);           /* SET HIGH USED RBA FOR VOL     */
         L     @10,CCACMSWA(,R11)                                  0501
         L     @10,CMEXTLST(,@10)                                  0501
         MVC   CMFLHUBA(4,CMFPLREF),CMFXLRBA(@10)                  0501
*   RFY                                                            0502
*    (CMFPLREF) UNRSTD;                                            0502
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0503
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDRNG');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDRNG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0506
@EF00007 DS    0H                                                  0506
@ER00007 BR    @14                                                 0506
@PB00007 DS    0H                                                  0507
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0508
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDRNG  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0508
*IGGPDRNG:                                                         0508
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0508
IGGPDRNG DS    0H                                                  0509
*Z040:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z040DRNG:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0509
*    (R5,                                                          0509
*     R6,                                                          0509
*     R7,                                                          0509
*     R8,                                                          0509
*     R9,                                                          0509
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z040     DS    0H                                                  0509
Z040DRNG DS    0H                                                  0510
*   RFY                                                            0510
*    (R2,                                                          0510
*     R3,                                                          0510
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0512
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO MANIPULATE KEY RANGES                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0513
*   RFY                                                            0513
*    (CMFPLREF) RSTD;                                              0513
*   RFY                                                            0514
*     R8 RSTD;                                                     0514
*   SPACINDC='GO';                  /* SET PROCESS INDICATOR         */
         L     @10,CCACMSWA(,R11)                                  0515
         MVC   SPACINDC(2,@10),@CC03338                            0515
*   RFY                                                            0516
*    (RANGREFR) RSTD;                                              0516
*   RANGREFR=CTGFVRNG+LENGTH(LTLENGTH);/* SET RANGE REFER            */
         L     @09,CMWFVTPT(,@10)                                  0517
         LA    RANGREFR,2                                          0517
         AL    RANGREFR,CTGFVRNG(,@09)                             0517
*   CMRNGCTR=INCR1;                 /* SET THE INDEX CNTR            */
         MVC   CMRNGCTR(2,@10),@CH00037                            0518
*   DO WHILE SPACINDC='GO';         /* LOCATE THE NEEDED RANGES      */
         B     @DE00519                                            0519
@DL00519 DS    0H                                                  0520
*     IF CMRNGCTR=CMXRNGSN THEN     /* CHECK FOR NEEDED RANGES       */
         L     @10,CCACMSWA(,R11)                                  0520
         LH    @09,CMRNGCTR(,@10)                                  0520
         SLR   @07,@07                                             0520
         IC    @07,CMXRNGSN(,CMETRFRG)                             0520
         CR    @09,@07                                             0520
         BNE   @RF00520                                            0520
*       DO;                         /* PERFORM RANGE PROCESSING      */
*         CMFLLKLN=RANGREFR->CMRANGLN;/* SET LOEW KEY LENGTH         */
         LA    @09,CMFOVERL(,CMFPLREF)                             0522
         SH    @09,@CH00042                                        0522
         LH    @07,CMRANGLN(,RANGREFR)                             0522
         STH   @07,CMFLLKLN(,@09)                                  0522
*         RANGREFR=RANGREFR+LENGTH(CMRANGLN);/* SET LOW KEY RF       */
         LA    @15,2                                               0523
         ALR   RANGREFR,@15                                        0523
*         RFY                                                      0524
*          (RANGLOCR) RSTD;                                        0524
*         RANGLOCR=ADDR(CMFLLKLN)+LENGTH(CMFLLKLN);                0525
         ST    @07,@TF00001                                        0525
         LA    RANGLOCR,CMFLLKLN(,@09)                             0525
         ALR   RANGLOCR,@15                                        0525
*         RANGLOCR->RANGEVLU(1:CMFLLKLN)=RANGREFR->RANGEVLU(1:CMFLLKLN)
*             ;                     /* SET LOW KEY RANGE VALUE       */
         L     @09,@TF00001                                        0526
         BCTR  @09,0                                               0526
         EX    @09,@SM03445                                        0526
*         RANGREFR=RANGREFR+CMFLLKLN;/* SET HI KEY LEN LOC           */
         AL    RANGREFR,@TF00001                                   0527
*         RANGLOCR=RANGLOCR+CMFLLKLN;/* GET HI KEY ADDRESS           */
         AL    RANGLOCR,@TF00001                                   0528
*         RFY                                                      0529
*          (R1) RSTD;                                              0529
*         R1=RANGREFR->CMRANGLN;    /* GET RANGE LENGTH              */
         LH    R1,CMRANGLN(,RANGREFR)                              0530
*         RANGLOCR->VARWRKLN=R1;    /* SET HIGH KEY LENGTH           */
         STH   R1,VARWRKLN(,RANGLOCR)                              0531
*         RANGREFR=RANGREFR+LENGTH(CMRANGLN);/* REF TO KIGH KY       */
         ALR   RANGREFR,@15                                        0532
*         RANGLOCR=RANGLOCR+LENGTH(CMFLHKLN);                      0533
         ALR   RANGLOCR,@15                                        0533
*         RANGLOCR->RANGEVLU(1:R1)=RANGREFR->RANGEVLU(1:R1);/* SET 0534
*                                      HIGH KEY RANGE VALUE          */
         LR    @09,R1                                              0534
         BCTR  @09,0                                               0534
         EX    @09,@SM03445                                        0534
*         RFY                                                      0535
*          (R1) UNRSTD;                                            0535
*         SPACINDC='NG';            /* SET PROCESS COMPLETE          */
         MVC   SPACINDC(2,@10),@CC03349                            0536
*         RFY                                                      0537
*          (RANGLOCR) UNRSTD;                                      0537
*       END;                                                       0538
*     ELSE                          /* CHECK NEXT RANGE              */
*       DO;                         /* SET NEXT RANGE ADDRESS        */
         B     @RC00520                                            0539
@RF00520 DS    0H                                                  0540
*         RANGREFR=RANGREFR+(RANGREFR->CMRANGLN)+LENGTH(CMRANGLN);/*
*                                      KEY LOCATION                  */
         LA    @10,2                                               0540
         LR    @09,RANGREFR                                        0540
         AH    @09,CMRANGLN(,RANGREFR)                             0540
         ALR   @09,@10                                             0540
         LR    RANGREFR,@09                                        0540
*         RANGREFR=RANGREFR+(RANGREFR->CMRANGLN)+LENGTH(CMRANGLN);/*
*                                      KEY LOCATION                  */
         LR    @09,RANGREFR                                        0541
         AH    @09,CMRANGLN(,RANGREFR)                             0541
         ALR   @09,@10                                             0541
         LR    RANGREFR,@09                                        0541
*         CMRNGCTR=CMRNGCTR+INCR1;  /* UPDATE THE INDEX CNTR         */
         L     @10,CCACMSWA(,R11)                                  0542
         LA    @09,1                                               0542
         AH    @09,CMRNGCTR(,@10)                                  0542
         STH   @09,CMRNGCTR(,@10)                                  0542
*       END;                        /* END PREPARATION FOR NEXT RANGE*/
*   END;                            /* END DO-WHILE FOR ALL RANGES   */
@RC00520 DS    0H                                                  0544
@DE00519 L     @10,CCACMSWA(,R11)                                  0544
         CLC   SPACINDC(2,@10),@CC03338                            0544
         BE    @DL00519                                            0544
*   RFY                                                            0545
*    (RANGREFR,                                                    0545
*     CMFPLREF) UNRSTD;                                            0545
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0546
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDSSP');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDSSP'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0549
@EF00008 DS    0H                                                  0549
@ER00008 BR    @14                                                 0549
@PB00008 DS    0H                                                  0550
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0551
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDSSP  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0551
*IGGPDSSP:                                                         0551
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0551
IGGPDSSP DS    0H                                                  0552
*Z041:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z041DSSP:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0552
*    (R5,                                                          0552
*     R6,                                                          0552
*     R7,                                                          0552
*     R8,                                                          0552
*     R9,                                                          0552
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z041     DS    0H                                                  0552
Z041DSSP DS    0H                                                  0553
*   RFY                                                            0553
*    (R2,                                                          0553
*     R3,                                                          0553
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0555
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO SCAN THE FPLS IN THE SAVED LIST FROM THE*/
*   /* DATA OBJECT AND USE THE FPLS THAT ARE VOLUME OCCURRENCES WITH */
*   /* PHYSICAL EXTENTS FOR THE PREVIOUSLY ALLOCATED SEQUENCE SET    */
*   /* EXTENTS                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*   RFY                                                            0556
*    (CMFPLREF) RSTD;                                              0556
*   CMEXRFRG=CMSSEXTS;              /* GET SEQ SET EXTENTS LIST      */
         L     @10,CCACMSWA(,R11)                                  0557
         L     CMEXRFRG,CMSSEXTS(,@10)                             0557
*   WORKPROC='GO';                  /* SET PROCESS INDICATOR         */
         MVC   WORKPROC(2,@10),@CC03338                            0558
*   DO WHILE WORKPROC='GO';         /* SCAN VOLS FOR SS EXTENTS      */
         B     @DE00559                                            0559
@DL00559 DS    0H                                                  0560
*     DO CMVOLCTR=INCR1 TO CMEXNENT;/* PROCESS ALL FPLS IN DR        */
         LA    @10,1                                               0560
         B     @DE00560                                            0560
@DL00560 DS    0H                                                  0561
*       CMFPLREF=CMEXCRPT(CMVOLCTR);/* GET VOL FPL ADDRESS           */
         L     @10,CCACMSWA(,R11)                                  0561
         LH    @15,CMVOLCTR(,@10)                                  0561
         SLA   @15,3                                               0561
         L     CMFPLREF,CMEXCRPT-8(@15,CMEXRFRG)                   0561
*       IF CMFLNOEX^=RCS THEN       /* CHECK FOR ENTRY WITH EXTS     */
         CLI   CMFLNOEX(CMFPLREF),0                                0562
         BE    @RF00562                                            0562
*         DO;                       /* COMPUTE NEW EXTENT RBAS       */
*                                                                  0563
*           /*********************************************************/
*           /*                                                       */
*           /* GET THE ADDRESS OF THE EXTENTS IN THE FPL             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0564
*           RFY                                                    0564
*            (RANGLOCR) RSTD;                                      0564
*           RANGLOCR=ADDR(CMFLLKLN)+CMFLLKLN+LENGTH(CMFLLKLN);     0565
         LA    RANGLOCR,CMFOVERL(,CMFPLREF)                        0565
         SH    RANGLOCR,@CH00042                                   0565
         LA    @06,CMFLLKLN(,RANGLOCR)                             0565
         LH    @15,CMFLLKLN(,RANGLOCR)                             0565
         ALR   @06,@15                                             0565
         AH    @06,@CH00055                                        0565
         ST    RANGLOCR,@TF00001                                   0565
         LR    RANGLOCR,@06                                        0565
*           CMEXTLST=ADDR(CMFLEND)+CMFLLKLN+(RANGLOCR->VARWRKLN);  0566
         L     @06,@TF00001                                        0566
         LA    @06,CMFLEND(,@06)                                   0566
         ALR   @06,@15                                             0566
         AH    @06,VARWRKLN(,RANGLOCR)                             0566
         ST    @06,CMEXTLST(,@10)                                  0566
*           RFY                                                    0567
*            (RANGLOCR) UNRSTD;                                    0567
*           DO CMRNGCTR=INCR1 TO CMFLNOEX;/* PROCESS ALL EXTS        */
         LA    @10,1                                               0568
         B     @DE00568                                            0568
@DL00568 DS    0H                                                  0569
*             CMFXLRBA(CMRNGCTR)=CHIA+INCR1;/* LOW DDDD              */
*                                                                  0569
         L     @10,CCACMSWA(,R11)                                  0569
         LH    @15,CMRNGCTR(,@10)                                  0569
         MH    @15,@CH00110                                        0569
         L     @14,CMEXTLST(,@10)                                  0569
         L     @01,CCAURAB(,R11)                                   0569
         L     @09,CCACPE1(,@01)                                   0569
         LA    @08,1                                               0569
         AL    @08,CHIA(,@09)                                      0569
         LA    @01,0(@15,@14)                                      0569
         AL    @01,@CF03444                                        0569
         ST    @08,CMFXLRBA-12(,@01)                               0569
*             /*******************************************************/
*             /*                                                     */
*             /* CALCULATE THE NEW EXTENT HIGH ALLOCATED RBA         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0570
*             CMFXHRBA(CMRNGCTR)=(CMPHYBLK(2)*(CMFXNOTT(CMRNGCTR)/ 0570
*                 CMTRKPCA(1)))+CMFXLRBA(CMRNGCTR)-INCR1;          0570
         LA    @01,0(@15,@14)                                      0570
         AL    @01,@CF03435                                        0570
         LH    @00,CMFXNOTT-10(,@01)                               0570
         SRDA  @00,32                                              0570
         LH    @07,CMTRKPCA(,@10)                                  0570
         DR    @00,@07                                             0570
         M     @00,CMPHYBLK+16(,@10)                               0570
         ALR   @01,@08                                             0570
         BCTR  @01,0                                               0570
         AL    @14,@CF03431                                        0570
         ST    @01,CMFXHRBA-16(@15,@14)                            0570
*             CHIA=CMFXHRBA(CMRNGCTR);/* SET HIGH ALLOCATED          */
         ST    @01,CHIA(,@09)                                      0571
*           END;                    /* END 'DO' PROCESS FOR EXTENTS  */
         L     @01,CCACMSWA(,R11)                                  0572
         LA    @10,1                                               0572
         AH    @10,CMRNGCTR(,@01)                                  0572
@DE00568 L     @01,CCACMSWA(,R11)                                  0572
         STH   @10,CMRNGCTR(,@01)                                  0572
         SLR   @15,@15                                             0572
         IC    @15,CMFLNOEX(,CMFPLREF)                             0572
         CR    @10,@15                                             0572
         BNH   @DL00568                                            0572
*           CMFLHABA=CHIA+INCR1;    /* SET HIGH ALLOCATED, VOL       */
         L     @10,CCAURAB(,R11)                                   0573
         L     @10,CCACPE1(,@10)                                   0573
         LA    @15,1                                               0573
         AL    @15,CHIA(,@10)                                      0573
         ST    @15,CMFLHABA(,CMFPLREF)                             0573
*           CMFLHUBA=CMFXLRBA(1);   /* SET THE HIGH USED RBA         */
         L     @10,CCACMSWA(,R11)                                  0574
         L     @10,CMEXTLST(,@10)                                  0574
         MVC   CMFLHUBA(4,CMFPLREF),CMFXLRBA(@10)                  0574
*         END;                      /* END 'DO' TO COMPUTE EXT RBA'S */
*       ELSE                                                       0576
*         ;                         /* ENTRY DOES NOT HAVE ENTENTS   */
@RF00562 DS    0H                                                  0577
*       CMFLSSDT=ON;                /* SET SEQUENCE-SET-WITH-DATA  0577
*                                      INDICATOR                     */
         OI    CMFLSSDT(CMFPLREF),B'10000000'                      0577
*       CMETRFRG=CMFPLIDX;          /* GET CURRENT FPL DIRECTORY     */
*                                                                  0578
         L     @10,CCACMSWA(,R11)                                  0578
         L     CMETRFRG,CMFPLIDX(,@10)                             0578
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR A VACANT ENTRY IN A DIRECTORY BLOCK             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0579
*       SPACINDC='GO';              /* SET PROCESS INDICATOR         */
         MVC   SPACINDC(2,@10),@CC03338                            0579
*       DO WHILE SPACINDC='GO';                                    0580
         B     @DE00580                                            0580
@DL00580 DS    0H                                                  0581
*         IF CMETRFRG->CMEXNENT=MXEXENTS THEN/* FULL                 */
         CLC   CMEXNENT(2,CMETRFRG),@CH00033                       0581
         BNE   @RF00581                                            0581
*           IF CMETRFRG->CMEXCHAN=NONE THEN/* MORE DIR               */
         ICM   @10,15,CMEXCHAN(CMETRFRG)                           0582
         BNZ   @RF00582                                            0582
*             DO;                   /* NEED ANOTHER DIRECTORY        */
*               CMEXTRFR=CMEXRFRG;  /* SAVE SS FPL DIRECT            */
         LR    CMEXTRFR,CMEXRFRG                                   0584
*               CMEXRFRG=CMETRFRG;  /* GET NORMAL FPL DIR            */
         LR    CMEXRFRG,CMETRFRG                                   0585
*Z042DEXD:                                                         0586
*               CALL IGGPDEXD;      /* GET MORE DIRECTORY CORE       */
Z042DEXD BAL   @14,IGGPDEXD                                        0586
*               IF CCACD1^=RCS THEN /* CHECK FOR ERROR               */
         CLI   CCACD1(R11),0                                       0587
         BE    @RF00587                                            0587
*                 CALL EXIT;        /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0588
*               RFY                                                0589
*                (CMFPLREF) RSTD;                                  0589
@RF00587 DS    0H                                                  0590
*               CMETRFRG=CMEXRFRG;  /* RESET NORMAL FPL DIR          */
         LR    CMETRFRG,CMEXRFRG                                   0590
*               CMEXRFRG=CMEXTRFR;  /* RESET SS FPL DIRECT           */
         LR    CMEXRFRG,CMEXTRFR                                   0591
*               SPACINDC='NG';      /* SET PROCESS COMPLETE          */
         L     @10,CCACMSWA(,R11)                                  0592
         MVC   SPACINDC(2,@10),@CC03349                            0592
*             END;                                                 0593
*           ELSE                    /* GET NEXT DIRECTORY BLOCK      */
*             CMETRFRG=CMETRFRG->CMEXCHAN;/* GET ADDR                */
         B     @RC00582                                            0594
@RF00582 L     CMETRFRG,CMEXCHAN(,CMETRFRG)                        0594
*         ELSE                      /* USE NEXT ENTRY IN DIRECT      */
*           SPACINDC='NG';          /* SET PROCESS COMPLETE          */
         B     @RC00581                                            0595
@RF00581 L     @10,CCACMSWA(,R11)                                  0595
         MVC   SPACINDC(2,@10),@CC03349                            0595
*       END;                                                       0596
@RC00581 DS    0H                                                  0596
@DE00580 L     @10,CCACMSWA(,R11)                                  0596
         CLC   SPACINDC(2,@10),@CC03338                            0596
         BE    @DL00580                                            0596
*       CMEXTRFR=(CMETRFRG->CMEXNENT)+INCR1;                       0597
         LA    CMEXTRFR,1                                          0597
         AH    CMEXTRFR,CMEXNENT(,CMETRFRG)                        0597
*       CMETRFRG->CMEXNENT=CMEXTRFR;/* UPDATE NO. FPLS               */
*                                                                  0598
         STH   CMEXTRFR,CMEXNENT(,CMETRFRG)                        0598
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE NEW FPL ADDRESS IN THE FPL DIRECTORY              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0599
*       CMETRFRG->CMEXHDRS(CMEXTRFR)=CMEXHDRS(CMVOLCTR);           0599
*                                                                  0599
         LR    @15,CMEXTRFR                                        0599
         SLA   @15,3                                               0599
         ALR   @15,CMETRFRG                                        0599
         LH    @14,CMVOLCTR(,@10)                                  0599
         SLA   @14,3                                               0599
         ALR   @14,CMEXRFRG                                        0599
         MVC   CMEXHDRS-8(8,@15),CMEXHDRS-8(@14)                   0599
*       /*************************************************************/
*       /*                                                           */
*       /* UPDATE THE NUMBER OF DATA SET EXTENTS                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0600
*       CTGFVAMD->CTGFLPT(1)->AMDNEXT=CTGFVAMD->CTGFLPT(1)->AMDNEXT+
*           CMFLNOEX;                                              0600
         L     @01,CMWFVTPT(,@10)                                  0600
         L     @01,CTGFVAMD(,@01)                                  0600
         L     @15,CTGFLPT(,@01)                                   0600
         SLR   @14,@14                                             0600
         IC    @14,CMFLNOEX(,CMFPLREF)                             0600
         AH    @14,AMDNEXT(,@15)                                   0600
         STH   @14,AMDNEXT(,@15)                                   0600
*       CMFLPHYB=CMPHYBLK(2);       /* SET PHYSICAL BLOCK SIZE       */
         MVC   CMFLPHYB(4,CMFPLREF),CMPHYBLK+16(@10)               0601
*       CMFLNBTK=CMBLPTKS;          /* SET NO. BLOCKS PER TRACK      */
         MVC   CMFLNBTK(2,CMFPLREF),CMBLPTKS(@10)                  0602
*       CMFLNTKA=CMTRKPCA(1);       /* SET TRACKS PER CA             */
         MVC   CMFLNTKA(2,CMFPLREF),CMTRKPCA(@10)                  0603
*     END;                          /* END 'DO' TO PROCESS ALL FPL'S
*                                      IN DIRECTORY                  */
         L     @01,CCACMSWA(,R11)                                  0604
         LA    @10,1                                               0604
         AH    @10,CMVOLCTR(,@01)                                  0604
@DE00560 L     @01,CCACMSWA(,R11)                                  0604
         STH   @10,CMVOLCTR(,@01)                                  0604
         CH    @10,CMEXNENT(,CMEXRFRG)                             0604
         BNH   @DL00560                                            0604
*     CMEXNENT=RCS;                 /* CLEAR NO. OF ENTRIES          */
         SLR   @10,@10                                             0605
         STH   @10,CMEXNENT(,CMEXRFRG)                             0605
*     IF CMEXCHAN=NONE THEN         /* CHECK FOR ALL DIRS USED       */
         C     @10,CMEXCHAN(,CMEXRFRG)                             0606
         BNE   @RF00606                                            0606
*       WORKPROC='NG';              /* CONVERT PROCESS COMPLETE      */
         L     @10,CCACMSWA(,R11)                                  0607
         MVC   WORKPROC(2,@10),@CC03349                            0607
*     ELSE                          /* ALL DIRECTORIES NOT USED      */
*       CMEXRFRG=CMEXCHAN;          /* USE THE NEXT FPL DIRECTORY    */
         B     @RC00606                                            0608
@RF00606 L     CMEXRFRG,CMEXCHAN(,CMEXRFRG)                        0608
*   END;                            /* END DO-WHILE TO SCAN VOLUMES
*                                      FOR SEQUENCE SET EXTENTS      */
@RC00606 DS    0H                                                  0609
@DE00559 L     @10,CCACMSWA(,R11)                                  0609
         CLC   WORKPROC(2,@10),@CC03338                            0609
         BE    @DL00559                                            0609
*   RFY                                                            0610
*    (CMFPLREF) UNRSTD;                                            0610
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0611
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDOMF');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDOMF'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0614
@EF00009 DS    0H                                                  0614
@ER00009 BR    @14                                                 0614
@PB00009 DS    0H                                                  0615
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0616
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDOMF  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0616
*IGGPDOMF:                                                         0616
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0616
IGGPDOMF DS    0H                                                  0617
*Z043:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z043DOMF:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0617
*    (R5,                                                          0617
*     R6,                                                          0617
*     R7,                                                          0617
*     R8,                                                          0617
*     R9,                                                          0617
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z043     DS    0H                                                  0617
Z043DOMF DS    0H                                                  0618
*   RFY                                                            0618
*    (R2,                                                          0618
*     R3,                                                          0618
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0620
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPDOMF - INTERNAL PROCEDURE TO PERFORM THE SMF PROCESS FOR  */
*   /* THE DEFINE REQUEST.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0621
*   CCASMFCD=RCS;                   /* CLEAR RETURN CODE FIELD       */
         MVI   CCASMFCD(R11),X'00'                                 0621
*   CCASMFDF=ON;                    /* SET DEFINE INDICATOR          */
         OI    CCASMFDF(R11),B'10000000'                           0622
*   DO CCAIXEXT=INCR1 TO CMCISREQ   /* PROCESS BASE RECORDS          */
*         WHILE CCASMFCD=RCS;       /* IF NO MAJOR ERRORS            */
         LA    @10,1                                               0623
         B     @DE00623                                            0623
@DL00623 CLI   CCASMFCD(R11),0                                     0623
         BNE   @DC00623                                            0623
*     CCAURAB=ADDR(CCARAB1);        /* SET RAB TO USE ADDRESS        */
         LA    @10,CCARAB1(,R11)                                   0624
         ST    @10,CCAURAB(,R11)                                   0624
*     CCASRCIN=CMWACI(CCAIXEXT);    /* SET CI SEARCH ARGUMENT        */
         SLR   @10,@10                                             0625
         IC    @10,CCAIXEXT(,R11)                                  0625
         MH    @10,@CH00417                                        0625
         L     @05,CCACMSWA(,R11)                                  0625
         ALR   @05,@10                                             0625
         MVC   CCASRCIN(3,R11),CMWACI-3(@05)                       0625
*     CCASMFBR=ON;                  /* SET GET BASE RECORD CI        */
*                                                                  0626
         OI    CCASMFBR(R11),B'00010000'                           0626
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBV                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0627
*Z044SMFA:                                                         0627
*     CALL IGGPSMFA;                /* CHECK/WRITE SMF ROUTINE       */
Z044SMFA L     @15,@CV03192                                        0627
         BALR  @14,@15                                             0627
*   END;                            /* END 'DO' TO PROCESS BASE RECS */
         LA    @10,1                                               0628
         SLR   @05,@05                                             0628
         IC    @05,CCAIXEXT(,R11)                                  0628
         ALR   @10,@05                                             0628
@DE00623 STC   @10,CCAIXEXT(,R11)                                  0628
         L     @05,CCACMSWA(,R11)                                  0628
         SLR   @15,@15                                             0628
         IC    @15,CMCISREQ(,@05)                                  0628
         CR    @10,@15                                             0628
         BNH   @DL00623                                            0628
@DC00623 DS    0H                                                  0629
*   CCAPROB=CCASMFP;                /* SET PROBLEM DETERMINATION   0629
*                                      FIELDS AS PASSED BY SMF     0629
*                                      PROCEDURES            @Y30SSDW*/
         MVC   CCAPROB(4,R11),CCASMFP(R11)                         0629
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0630
*   END;                            /* END OF INNER PROCEDURE        */
@EL00010 DS    0H                                                  0631
@EF00010 DS    0H                                                  0631
@ER00010 BR    @14                                                 0631
@PB00010 DS    0H                                                  0632
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0633
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0633
*EXIT:                                                             0633
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00011                                            0633
EXIT     DS    0H                                                  0634
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0637
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00011 DS    0H                                                  0638
@EF00011 DS    0H                                                  0638
@ER00011 BR    @14                                                 0638
*   END                                                            0639
*                                                                  0639
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (ICHACHKL)                                       */
*/*%INCLUDE SYSLIB  (ICHRDDFL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*/*%INCLUDE SYSLIB  (IGGMSAWA)                                       */
*                                                                  0639
*       ;                                                          0639
@EL00001 DS    0H                                                  0639
@EF00001 DS    0H                                                  0639
@ER00001 BR    @14                                                 0639
@DATA    DS    0H
@CH00037 DC    H'1'
@CH00055 DC    H'2'
@CH00417 DC    H'3'
@CH00042 DC    H'8'
@CH00110 DC    H'20'
@CH00114 DC    H'28'
@CH00033 DC    H'31'
@CH03428 DC    H'85'
@CH00176 DC    H'128'
@SM03445 MVC   RANGEVLU(0,RANGLOCR),RANGEVLU(RANGREFR)
@DATD    DSECT
         DS    0F
@TF00001 DS    F
@TF00002 DS    F
IGG0CLAK CSECT
         DS    0F
@CF00058 DC    F'4'
@CF00118 DC    F'36'
@CF00060 DC    F'256'
@CH00060 EQU   @CF00060+2
@CF03430 DC    F'-1043201372'
@CF03433 DC    F'-20'
@CF03434 DC    F'-18'
@CF03441 DC    F'-16'
@CF03442 DC    F'-14'
@CF03443 DC    F'-12'
@CF03435 DC    F'-10'
@CF03444 DC    F'-8'
@CF03431 DC    F'-4'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLAK CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03192 DC    V(IGGPSMFA)
@CV03193 DC    V(IGGPARFS)
@CV03195 DC    V(IGGPMOD)
@CV03194 DC    V(IGGPGET)
         DS    0D
@CC03328 DC    C'ENTVOL  '
@CC03346 DC    C'TOENTVOL'
@CC03381 DC    C'NAMEDS  '
@CC03338 DC    C'GO'
@CC03349 DC    C'NG'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
DCWABASE EQU   @04
CMEXRFRG EQU   @02
CMETRFRG EQU   @03
GENWRKRG EQU   @03
CMFPLCTR EQU   @04
CMEXTRFR EQU   @04
CMFPLREF EQU   @05
RANGREFR EQU   @06
RANGLOCR EQU   @07
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAFLG2  EQU   IGGCCA+15
CCAF2NVC EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAMODPA EQU   CCAFLG5
CCAFLG6  EQU   IGGCCA+19
CCAREUSE EQU   CCAFLG6
CCAMOD   EQU   CCAFLG6
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCASRCIN EQU   CCASRID
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2UR  EQU   CCAR2FLG
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3UR  EQU   CCAR3FLG
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4UR  EQU   CCAR4FLG
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5UR  EQU   CCAR5FLG
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAIXEXT EQU   CCADESA+1
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCAMCPL  EQU   CCAXCPL
CCARABB  EQU   IGGCCA+380
CCARABF  EQU   IGGCCA+384
CCARABL  EQU   IGGCCA+388
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAALPTR EQU   IGGCCA+540
CCAFLG7  EQU   IGGCCA+552
CCASMFBR EQU   CCAFLG7
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFDF EQU   CCASMFUC
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCASMFCD EQU   CCASMFP+3
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCAREQDQ EQU   IGGCCA+1492
CCAREDOP EQU   CCAREQDQ+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGSWAP  EQU   CTGRCATN
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCRAVL EQU   CATRCD+5
RCDCRADT EQU   CATRCD+14
RCDSECF  EQU   CATRCD+26
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACB3895L EQU   ACBCOMN
ACBLENG  EQU   ACB3895L+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACB3895L+4
ACBJWA   EQU   ACBAMBL
ACBIBCT  EQU   ACBJWA
ACBMACRF EQU   ACB3895L+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACB3895L+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACB3895L+24
ACBFTRS  EQU   ACBRECFM
ACBCCTYP EQU   ACB3895L+25
ACBOPT   EQU   ACB3895L+26
ACBDSORG EQU   ACBOPT
ACBDSOR1 EQU   ACBDSORG
ACBCROPS EQU   ACBDSOR1
ACBDVIND EQU   ACBDSOR1
ACBDSOR2 EQU   ACBDSORG+1
ACBEXLST EQU   ACB3895L+36
ACBDDNM  EQU   ACB3895L+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACB3895L+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACB3895L+50
ACBVVIC  EQU   ACBINFLG
ACBREM   EQU   ACBCOMN+52
ACBUJFCB EQU   ACBREM
ACBBLKSZ EQU   ACBREM+8
ACBUAPTR EQU   ACBREM+12
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
NOBASE   EQU   0
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CAXCCA   EQU   IGGCAXWA+104
CAXECB   EQU   IGGCAXWA+120
CAXECBHB EQU   CAXECB
CAXHRPLW EQU   IGGCAXWA+128
CTGFV    EQU   0
CTGFVTYP EQU   CTGFV
CTGFVPRO EQU   CTGFV+1
CTGFVSTY EQU   CTGFV+24
CTGFVRNG EQU   CTGFV+44
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGFVPWD EQU   CTGFV+84
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
ACHKLIST EQU   0
ACHKINSW EQU   ACHKLIST
ACHKENTW EQU   ACHKLIST+4
ACHKFLG1 EQU   ACHKENTW
ACHKENT  EQU   ACHKENTW+1
ACHKCLNW EQU   ACHKLIST+8
ACHKFLG2 EQU   ACHKCLNW
ACHKVOLW EQU   ACHKLIST+12
ACHKFLG3 EQU   ACHKVOLW
RDDFLIST EQU   0
RDDFINSW EQU   RDDFLIST
RDDFENTW EQU   RDDFLIST+4
RDDFFLGS EQU   RDDFENTW
RDDFOVOL EQU   RDDFLIST+8
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTLENGTH EQU   USERLIST
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
LTVOLSER EQU   LTENTRY+2
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDSDT   EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDNEST  EQU   IDAAMDSB+4
AMDCIPCA EQU   IDAAMDSB+12
AMDCINV  EQU   IDAAMDSB+20
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
AMDNEXT  EQU   AMDSTAT+10
AMDASPA  EQU   AMDSTAT+32
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISREQ EQU   CMSWA+1
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMWACI   EQU   CMSWA+3
CMWFVTPT EQU   CMSWA+12
CMASCFPL EQU   CMSWA+16
CMCPLFVT EQU   CMSWA+20
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
SPACINDC EQU   CMSWA+38
CMRNGCTR EQU   CMSWA+40
CMVOLCTR EQU   CMSWA+42
CMSDFSPC EQU   CMSWA+48
CMSCRAVI EQU   CMSWA+52
CMSCRADT EQU   CMSWA+58
CMVLLIST EQU   CMSWA+64
CMVLRTCD EQU   CMVLLIST+2
CMTOTVOL EQU   CMSWA+74
CMSPCATR EQU   CMSWA+76
CMPHYBLK EQU   CMSPCATR
CMSWADTY EQU   CMSPCATR+4
CMBLKTRK EQU   CMSPCATR+8
CMTRKPCA EQU   CMSPCATR+10
CMTRKCYL EQU   CMSPCATR+12
CMCNVNO  EQU   CMSWA+110
CMFPLIDX EQU   CMSWA+112
WORKPROC EQU   CMSWA+118
CMEXTLST EQU   CMSWA+120
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMBLPTKS EQU   CMSWA+408
CMUCATCI EQU   CMSWA+410
CMBYTTRK EQU   CMSWA+496
CMBYTAU  EQU   CMSWA+500
CMSRAC   EQU   CMSWA+516
CMSROBJA EQU   CMSRAC+32
CMSROBJN EQU   CMSROBJA
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
SALPARL  EQU   0
SALPARMS EQU   SALPARL+6
SALRLIST EQU   SALPARL+14
PRLIST   EQU   0
PRLENT   EQU   PRLIST+1
PRELENTF EQU   PRLENT
CMFPLSTR EQU   0
CMFPLOCR EQU   CMFPLSTR
CMFLDNAM EQU   CMFPLSTR+24
CMFLRLRP EQU   CMFPLSTR+32
CMFLDEVT EQU   CMFPLSTR+34
CMFLVOL  EQU   CMFPLSTR+38
CMFLVLFL EQU   CMFPLSTR+46
CMFLVLPR EQU   CMFLVLFL
CMFLVLCN EQU   CMFLVLFL
CMFLNOEX EQU   CMFPLSTR+47
CMFLHUBA EQU   CMFPLSTR+52
CMFLHABA EQU   CMFPLSTR+56
CMFLPHYB EQU   CMFPLSTR+60
CMFLNBTK EQU   CMFPLSTR+64
CMFLNTKA EQU   CMFPLSTR+66
CMFLITEX EQU   CMFPLSTR+68
CMFLSSDT EQU   CMFLITEX
CMFLNOPF EQU   CMFLITEX
CMFLSSDS EQU   CMFPLSTR+69
CMFOVERL EQU   CMFPLSTR+71
CMFOVLAY EQU   0
CMFBYTRK EQU   CMFOVLAY
CMFBYTAU EQU   CMFOVLAY+4
CMFLLKLN EQU   CMFOVLAY+8
CMFLHKLN EQU   CMFOVLAY+10
CMFLEND  EQU   CMFOVLAY+14
CMFXECTS EQU   0
CMFXEXSS EQU   CMFXECTS
CMFXEXST EQU   CMFXECTS+2
CMFXSTA  EQU   CMFXEXST
CMFXSTCC EQU   CMFXSTA
CMFXSTHH EQU   CMFXSTA+2
CMFXEXED EQU   CMFXECTS+6
CMFXEDA  EQU   CMFXEXED
CMFXEDCC EQU   CMFXEDA
CMFXEDHH EQU   CMFXEDA+2
CMFXNOTT EQU   CMFXECTS+10
CMFXLRBA EQU   CMFXECTS+12
CMFXHRBA EQU   CMFXECTS+16
CMASFPST EQU   0
CMAFPL   EQU   CMASFPST
CMAFDNAM EQU   CMASFPST+24
CMAFTYPE EQU   CMASFPST+32
CMAFNAME EQU   CMASFPST+33
CMEXTCOR EQU   0
CMEXCHAN EQU   CMEXTCOR
CMEXNENT EQU   CMEXTCOR+4
CMEXCRSZ EQU   CMEXTCOR+6
CMEXHDRS EQU   CMEXTCOR+8
CMEXCRPT EQU   CMEXHDRS
CMEXETSZ EQU   CMEXHDRS+6
CMXENTRY EQU   0
CMXDEVTP EQU   CMXENTRY
CMXVOLID EQU   CMXENTRY+4
CMXNEXTS EQU   CMXENTRY+10
CMXRNGSN EQU   CMXENTRY+11
CMXSSVOL EQU   CMXENTRY+12
CMXEXENT EQU   CMXENTRY+14
CMXEXSSN EQU   CMXEXENT
CMXEXSRT EQU   CMXEXENT+2
CMXEXCHS EQU   CMXEXSRT
CMXEXNTT EQU   CMXEXENT+6
CMRANGLN EQU   0
VARWRKLN EQU   0
RANGEVLU EQU   0
BUFSIZE  EQU   0
CATRECRD EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
ENTRYNAM EQU   0
EXCPNAME EQU   0
FIELDNM  EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
TNAM     EQU   0
@NM00037 EQU   CTGDDNM
CTGPROB  EQU   @NM00037
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
CHIA     EQU   CTGRBASE+76
@NM00115 EQU   CATTR1
CCATTR   EQU   @NM00115
@NM00116 EQU   CCATTR
@NM00118 EQU   CATTR1
CRGATTR  EQU   @NM00118
CUPG     EQU   CRGATTR
ACHKPROF EQU   ACHKENT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00119 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00116
CSWAPSPC EQU   @NM00116
@NM00117 EQU   @NM00116
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00114 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
CATTISDS EQU   CATTR2
@NM00113 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CEXP     EQU   CTGRBASE+55
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
CNAME    EQU   CTGRBASE
@NM00090 EQU   MCATDSTR+1
@NM00089 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
CMXEXHHA EQU   CMXEXCHS+2
CMXEXCCA EQU   CMXEXCHS
CMEXNUMB EQU   CMEXHDRS+5
@NM00148 EQU   CMEXHDRS+4
CMFLEXLN EQU   CMFOVLAY+12
@NM00147 EQU   CMFLITEX
CMFLHKBA EQU   CMFPLSTR+48
@NM00146 EQU   CMFLVLFL
CMFLVLOV EQU   CMFLVLFL
CMFLFLSQ EQU   CMFPLSTR+44
PRLPAR2  EQU   PRELENTF+1
PRLPAR1  EQU   PRELENTF
PRLLN    EQU   PRLIST
SALAXWA  EQU   SALPARL+22
SALVLIST EQU   SALPARL+18
@NM00145 EQU   SALPARMS+7
SALMXEXT EQU   SALPARMS+6
SALUNITS EQU   SALPARMS+4
SALBLKLN EQU   SALPARMS+2
SALCALN  EQU   SALPARMS
SALDSCIN EQU   SALPARL+3
SALSOURC EQU   SALPARL+2
@NM00144 EQU   SALPARL+1
SALOPTNS EQU   SALPARL
CUMRC    EQU   CUMWA+148
@NM00143 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00142 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00141 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00140 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00139 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00138 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
CMSDYNAL EQU   CMSRAC+164
@NM00137 EQU   CMSROBJN+1
CMSROBJI EQU   CMSROBJN
CMSWRMAC EQU   CMSRAC+16
CMSWARFV EQU   CMSRAC+12
CMSRDSVL EQU   CMSRAC+8
CMSRDSNA EQU   CMSRAC+4
@NM00136 EQU   CMSRAC+2
CMSREACD EQU   CMSRAC+1
CMSRETCD EQU   CMSRAC
CMSRACBF EQU   CMSWA+504
CMSCTREC EQU   CMSWA+416
@NM00135 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMSDSPTB EQU   CMSWA+344
@NM00134 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00133 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00132 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
DCWFPLPT EQU   CMSWA+196
DCWAREPT EQU   CMSWA+192
@NM00131 EQU   CMSWA+190
DCWIX    EQU   CMSWA+188
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
CMDEFSWA EQU   CMSWA+128
CMSRCCOR EQU   CMSWA+124
@NM00130 EQU   CMSWA+116
CMCNVLEN EQU   CMSWA+108
CMVLVOL  EQU   CMVLLIST+4
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
CMVLLTLN EQU   CMVLLIST
@NM00129 EQU   CMSWA+62
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
CMRMVVOL EQU   CMVOLCTR
CMADDVOL EQU   CMRNGCTR
PROCESS  EQU   CMSWA+36
CMDTAFPL EQU   CMHIXFPL
CMTSTFPL EQU   CMHDTFPL
CMRNMLST EQU   CMLDTFPL
CMEXTFLS EQU   CMCPLFVT
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMSUALOC EQU   CMWFLAGS
CMSRACDL EQU   CMWFLAGS
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00128 EQU   IDAAMDSB+41
@NM00127 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00126 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00125 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00124 EQU   RTDEVUCB
@NM00123 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00122 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00121 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00120 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00112 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
RDDFVSER EQU   RDDFLIST+12
RDDFNNAM EQU   RDDFOVOL
RDDFENT  EQU   RDDFENTW+1
@NM00111 EQU   RDDFFLGS
RDDFDSTV EQU   RDDFFLGS
@NM00110 EQU   RDDFFLGS
RDDFNEWN EQU   RDDFFLGS
RDDFOLDV EQU   RDDFFLGS
RDDFTADV EQU   RDDFFLGS
RDDFTDEL EQU   RDDFFLGS
RDDFINST EQU   RDDFINSW+1
RDDFLENG EQU   RDDFINSW
ACHKVOLS EQU   ACHKVOLW+1
@NM00109 EQU   ACHKFLG3
ACHKVOL  EQU   ACHKFLG3
@NM00108 EQU   ACHKFLG3
ACHKPRF  EQU   ACHKFLG3
@NM00107 EQU   ACHKFLG3
ACHKCLN  EQU   ACHKCLNW+1
@NM00106 EQU   ACHKFLG2
ACHKTRD  EQU   ACHKFLG2
ACHKTUPD EQU   ACHKFLG2
ACHKTCTL EQU   ACHKFLG2
@NM00105 EQU   ACHKFLG2
ACHKTALT EQU   ACHKFLG2
ACHKCSA  EQU   ACHKFLG1
ACHKLOGN EQU   ACHKFLG1
ACHKLOGF EQU   ACHKFLG1
@NM00104 EQU   ACHKFLG1
ACHKDSTV EQU   ACHKFLG1
@NM00103 EQU   ACHKFLG1
@NM00102 EQU   ACHKFLG1
@NM00101 EQU   ACHKFLG1
ACHKINST EQU   ACHKINSW+1
ACHKLENG EQU   ACHKINSW
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00100 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVCPP EQU   CTGFVPWD
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00099 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00098 EQU   CTGFVPRO
CTGFVROF EQU   CTGFVPRO
CTGFVRON EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CAXWNQID EQU   CAXHRPLW+2
CAXHRPLC EQU   CAXHRPLW
CAXASCBP EQU   IGGCAXWA+124
@NM00097 EQU   CAXECB+1
@NM00096 EQU   CAXECBHB
CAXECBPB EQU   CAXECBHB
CAXECBWB EQU   CAXECBHB
CAXRACP  EQU   IGGCAXWA+116
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXPLOCK EQU   CAXCCA
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00095 EQU   COPTS
CENLST   EQU   COPTS
@NM00094 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00093 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
CAXRAC   EQU   CAXFLG3
@NM00092 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00091 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBREM+20
ACBCBMWA EQU   ACBREM+16
ACBLRECL EQU   ACBREM+10
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBREM+4
@NM00088 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00087 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00086 EQU   ACBINFLG
ACBERFLG EQU   ACB3895L+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00085 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00084 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACB3895L+32
ACBMSGAR EQU   ACB3895L+28
@NM00083 EQU   ACBDSOR2
ACBDORGA EQU   ACBDSOR2
@NM00082 EQU   ACBDSOR2
@NM00081 EQU   ACBDSOR1
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00080 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
ACBSPM   EQU   ACBFTRS
@NM00079 EQU   ACBFTRS
ACBRECAF EQU   ACBFTRS
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00078 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00077 EQU   ACBMACR3
ACBBUFNI EQU   ACB3895L+18
ACBBUFND EQU   ACB3895L+16
ACBSTRNO EQU   ACB3895L+15
ACBBSTNO EQU   ACB3895L+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00076 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACB3895L+8
ACBAMWAP EQU   ACBIBCT
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACB3895L+1
ACBID    EQU   ACB3895L
@NM00051 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00050 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00049 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00048 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00047 EQU   CVTFIX+248
@NM00046 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00045 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
RCDID    EQU   CATRCD+44
@NM00044 EQU   CATRCD+27
RCDEXSEC EQU   RCDSECF
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRACI EQU   CATRCD+11
RCDRELID EQU   CATRCD+4
RCDCINO  EQU   CATRCD+1
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00043 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00042 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00041 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00040 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00039 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN2  EQU   USERWKA+2
WKALEN1  EQU   USERWKA
CTGFLCHN EQU   CTGFL+12
CTGFLDTS EQU   CTGFLDRE
@NM00038 EQU   CTGFLDRE
CTGFLDCD EQU   CTGFL+1
CTGPSWD  EQU   CTGJSCB
@NM00036 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00035 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00034 EQU   CTGOPTN4
CTGNPROF EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00033 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1508
@NM00032 EQU   IGGCCA+1504
CCARMINN EQU   CCAREQDQ+8
CCARMAJN EQU   CCAREQDQ+4
CCAREDRC EQU   CCAREQDQ+3
@NM00031 EQU   CCAREDOP
CCAREDSH EQU   CCAREDOP
CCAREDLN EQU   CCAREQDQ+1
CCAREDFF EQU   CCAREQDQ
CCADGDGA EQU   IGGCCA+1488
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00030 EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00029 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00028 EQU   CCAREGS
@NM00027 EQU   IGGCCA+1057
@NM00026 EQU   CCARVFG1
RVWG     EQU   CCARVFG1
RVRPLMFG EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00025 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00024 EQU   CCAMNAT+1
@NM00023 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00022 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00021 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00020 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
@NM00019 EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00018 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
CCAR5REC EQU   CCARAB5+4
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
CCAR4REC EQU   CCARAB4+4
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAEXT   EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1KEY EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00075 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00074 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00073 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00072 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00071 EQU   FLCFSA
@NM00070 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00069 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00068 EQU   FLCIOA
@NM00067 EQU   FLCMCLA+15
@NM00066 EQU   FLCMCLA+14
@NM00065 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00064 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00063 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00062 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00061 EQU   FLCPER
@NM00060 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00059 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00058 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00057 EQU   FLCPIILC
@NM00056 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00055 EQU   FLCSVILC
@NM00054 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00053 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00052 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00298 EQU   @RC00297
@RF00303 EQU   @RC00297
@RC00354 EQU   @RC00353
@RC00582 EQU   @RC00581
@PB00011 EQU   @EL00001
@ENDDATA EQU   *
         END   IGG0CLAK,(C'PLS0128',0701,76050)
