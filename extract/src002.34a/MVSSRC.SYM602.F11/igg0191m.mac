 TITLE   'IGG0191M - OPEN EXECUTOR, BSAM LOAD MODE, TRK OVERFLOW'
IGG0191M CSECT
*                                                                     *
*MODULE NAME - IGG0191M                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM CREATE OPEN EXECUTOR FOR TRACK OVERFLOW      *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*          RELEASE 19 DELETIONS/CHANGES
*1351000221-000400,023830-023950                                 A25961
*          RELEASE 20 DELETIONS/CHANGES
*0982014800,015600,016000-016200,017400,022400-022600,026800-    S20201
*0982027000,028000-028200,029800-030400,032200-032400,035200,    S20201
*0982035800,036200-036400,036800-037600,038400-039000,039800-    S20201
*0982040000,040600-040800,041200,041800-042000,044400-046200,    S20201
*0982047600,049200,062200                                        S20201
*          RELEASE VS2-2 DELETIONS/CHANGES
*037020,058800,060900                                            Y02072
*                                                                YM3029
*                                                                YM2886
*016000-016200,017200-017400                                     YM7300
*          RELEASE VS2-3 DELETIONS/CHANGES
*                                                              @Z30TSMI
*STATUS CHANGE LEVEL 005
*
*FUNCTIONS- THIS ROUTINE IS GIVEN CONTROL FOLLOWING IGG0191L TO,
*    1. INITIALIZE IOBS AND CONSTRUCT ATTACHED CHANNEL PROGRAMS,
*    2. CONSTRUCT A COMMON SEQUENCE OF CCWS TO ERASE TRACKS WHICH MUST
*       BE SKIPPED OVER AT THE END OF AN EXTENT
*    3. COPY DCB BACK INTO USER CORE - (AN AUDIT TRAIL BIT WILL BE
*       SET IN THE OPEN WORKAREA TO INDICATE THAT THE DCB WAS
*       COPIED BACK. THIS BIT WILL BE INTERROGATED BY THE FORCE
*       CLOSE EXECUTOR, SHOULD AN ABEND OCCUR DURING OPEN PRO-
*       CESSING. IF THIS BIT IS ON THE FORCE CLOSE EXECUTOR WILL
*       GIVE CONTROL TO NORMAL CLOSE EXECUTORS.)
*
*ENTRY POINT- ENTRY IS TO THE FIRST BYTE OF CODE BY A XCTL ISSUED BY
*    THE PREVIOUS EXECUTOR.
*
*INPUT- REGISTERS 5,6,7,8 HAVE BEEN POSITIONED AS FOLLOWS,
*    5 = BEGINNING OF THE OPEN PARAMETER LIST
*    6 = BEGINNING OF THE WHERE-TO-GO TABLE  (WTG)
*    7 = CURRENT ENTRY IN THE PARAMETER LIST
*    8 = CURRENT ENTRY IN THE WTG TABLE
*
*OUTPUT- THE SPECIFIED NUMBER OF IOB-CHANNEL PROGRAMS WILL BE LINKED TO
*    THE DCB (DCBIOBA), A SEQUENCE OF ERASE CCWS WILL BE LINKED TO THE
*    DCB (DCBEOBW) IF IT IS NEEDED (KEY LENGTH + DATA LENGTH EXCEEDS
*    TRACK LENGTH).
*
*EXTERNAL ROUTINES-
*
*EXIT- AT THE INSTRUCTION LABELED 'XCTLRTN', THE PARAMETERS FOR XCTL
*    ARE SET UP AND XCTL ISSUED FOR THE NEXT NON-ZERO ENTRY IN THE
*    WTG TABLE. FROM THIS EXECUTOR CONTROL WILL BE TRANSFERRED TO
*    IGG0190S, THE LAST LOAD OF COMMON OPEN.
*
*TABLES/WORK AREAS-
*    1. WHERE-TO-GO TABLE IS CONSTRUCTED BY AN INITIAL OPEN ROUTINE
*       AND CONSISTS OF, 2 BYTE ID OF THE FIRST EXECUTOR FOR THIS DCB
*                        3 BYTE TTR OF THAT EXECUTOR
*                        3 BYTE ADDRESS OF A WORK AREA FOR THIS DCB
*    2. CORRESPONDING TO EACH ENTRY IN THE WTG TABLE IS AN ENTRY IN A
*       PARAMETER LIST,  1 BYTE ATTRIBUTE (INPUT, OUTPUT, UPDATE)
*                        3 BYTE DCB ADDRESS
*
*ATTRIBUTES- THIS ROUTINE IS REENTRANT, EXECUTED ENABLED, PRIVILEGED.
*    IT EXECUTES IN DATA MANAGEMENT KEY FOR ALL BUT IOB INITIALIZING
*    WHICH IS EXECUTED IN USER KEY.
         EJECT
*
*
*   REGISTER USAGE
*
         USING STEPONE,RBASE
         USING DEBBASIC,RDEB
         USING IHADCB,RDCB
         USING FORCORE,RCORE                                     Y01021
         USING WTG,RWTG
         USING WTGENTRY,RWTGC
*
*
RE       EQU   0         WORK/PARAMETER REGISTER
R0       EQU   0         SAVE REG FOR IECRES                     Y02072
RF       EQU   1         WORK/PARAMETER REGISTER
RDCB     EQU   2         DCB ADDRESS
RBASE    EQU   3         BASE FOR THIS MODULE
RCORE    EQU   4         DCB WORK AREA ADDRESS
RPAR     EQU   5         POINTER TO THE PARAMETER LIST
RWTG     EQU   6         POINTER TO THE WHERE-TO-GO TABLE
RPARC    EQU   7         CURRENT ENTRY IN PARAMETER LIST
RWTGC    EQU   8         CURRENT ENTRY IN WHERE-TO-GO TABLE
RTIOT    EQU   9         TIOT ADDRESS
RUCB     EQU   10        UCB ADDRESS
RDEB     EQU   11        DEB ADDRESS
RB       EQU   12        WORK REGISTER
RC       EQU   13        WORK REGISTER
RD       EQU   14        WORK REGISTER
RJ       EQU   15        WORK/PARAMETER REGISTER
R15      EQU   15        SAVE REG FOR IECRES                     Y02072
*
*
*
         BALR  RBASE,0                 ESTABLISH BASE FOR THIS MODULE
STEPONE  L     RDCB,0(0,RPARC)         LOAD DCB ADDRESS
         L     RCORE,4(0,RWTGC)         LOAD ADDRESS OF DCB WORK AREA
         L     RDEB,DCBDEBAD            LOAD DEB ADDRESS FROM DCB
         LH    RJ,DCBOFFSR              LOAD TOTAL LAST RECORD   S20201
*                                       SIZE                     S20201
         SR    RF,RF
COUNTSEG EQU   *
         LA    RF,1(0,RF)               ADD ONE TO SEGMENT COUNT
         SH    RJ,DCBTRBAL              SUBTRACT TRACK LENGTH    S20201
*                                       FROM                     S20201
         BP    COUNTSEG                 RECORD REMAINDER. FITS BRANCH
         LA    RB,DEBBASND              LOAD ADDR TO DEV DEP     Y02072
*                                       SECTION OF THE DEB       Y02072
         USING DEBDASD,RB               ESTABLISH BASE FOR DEV   Y02072
*                                       DEPENDENT DEB SECTION    Y02072
COMPARE  EQU   *
         CH    RF,DEBNMTRK              WILL ONE RECORD FIT IN   Y02072
         BH    ABENDNRC                 EXTENT. NO, ABEND
         DROP  RB                                                Y02072
*
*
*   INITIALIZE THE IOBS AND ATTACH A CHANNEL PROGRAM TO EACH.
*
         MODESET   KEYADDR=DXUKEY,WORKREG=1  CHANGE TO USER KEY  Y02072
*
         USING IOBBSAMN,RF              ESTABLISH IOB BASE
         L     RF,DCBIOBA               LOAD START OF IOB AREA AS IOB 1
         OI    IOBNFLG1,IOBFIRST        MARK IOB AS FIRST
         L     RE,IOBSTART              GET SECTOR ADDRESS
*
FILLIOB  MVC   IOBDNRCF+5(1),DCBKEYLE  PUT KEY LENGTH IN FIRST COUNT
         L     RB,DXUDCBAD              GET USERS DCB ADDR       Y02072
         LA    RB,0(RB)                 ZERO TOP BYTE            Y02072
         ST    RB,IOBDCBPT              STORE DCB ADDR IN IOB    Y02072
         SR    RB,RB                    CLEAR SEGMENT COUNTER
         LA    RC,IOBDNRCF              POSITION CCW INDEX OVER COUNTS
         LR    RD,RC                    SAVE POINTER TO CURRENT COUNTS
         OI    IOBNFLG1,IOBWRITE        MARK IOB AS A WRITE IOB
*
BYPASSID LA    RC,24(0,RC)
         LA    RB,1(0,RB)              ADD 1 TO SEGMENT COUNTER
         EX    RB,CLICHK               ARE ALL COUNT FIELDS BYPASSED
         BC    7,BYPASSID               NO, LOOP
*
*      RC CONTAINS CCW 1 ADDRESS
*
         ST    RC,IOBSTART              START OF CHANNEL PROGRAM Y02072
         LA    RB,1                     SET SEGMENT COUNTER
         TM    JFCBMASK+D6,NONCARN      IS IT RECORD READY       S20201
         BO    NOTCARN1                 NO, THEN FORGET RPS      S20201
         BAL   RJ,CARNCCW               BRANCH TO INSERT RPS CCW S20201
         AH    RE,CONST1                POINT TO SECTOR=0        Y02072
NOTCARN1 EQU   *                                                 S20201
         LA    RJ,IOBCC                 CONSTRUCT INITIAL SRCH   Y02072
         ST    RJ,D0(RE,RC)             CCW ADDRESS AND          S20201
         MVI   0(RC),SCHIDEQ            OP-CODE
*
BLDSEGMT EQU   *
         ST    RC,8(0,RC)               STORE TIC ADDRESS
         MVC   4(5,RC),CCHN5TIC         AND MOVE SEARCH FLAGS,COUNT,TIC
*                                       OP-CODE.
         EX    RB,CLICHK                IDENTIFY LAST SEQUENCE
         BNE   *+8                      OF CCWS
         OI    13(RC),1
         ST    RD,16(0,RC)              CONSTRUCT A WRITE
         MVI   16(RC),WRTCKD            COUNT-KEY-DATA CCW
         MVI   20(RC),DCHN
         MVI   23(RC),8                 MV COUNT FIELD INTO CCW
*
         LA    RC,32(0,RC)              INCREMENT CCW INDEX TO SRCH.CCW
         TM    JFCBMASK+D6,NONCARN      IS  RPS FEATURED         S20201
         BO    TSTWTCHK                 IF NOT, GO CHECK FOR WRT S20201
*                                       CHK                      S20201
         LA    RC,CARN8(RE,RC)          SKIP OVER TIC            S20201
         BAL   RJ,CARNCCW               NOW GO TO INSERT SET     S20201
*                                       SECTOR                   S20201
         B     NOTIC                    BRANCH AND CONTINUE C.P. S20201
TSTWTCHK EQU   *                                                 S20201
         TM    DCBOPTCD,WRTCHK          IF WRITE CHECK IS SPECIFIED
         BC    8,NOTIC
         LA    RC,8(0,RC)               LEAVE ROOM FOR A TIC CCW
*
NOTIC    EQU   *
         LA    RJ,CARN8(RE,RD)          DEVELOPE AND ST R0 CNT   S20201
         ST    RJ,D0(RE,RC)             ADDR IN SCH CCW          S20201
         MVI   0(RC),SCHIDEQ            MOVE SEARCH OP-CODE
         ST    RC,8(0,RC)               STORE SEARCH CCW ADDRESS AS TIC
         MVC   4(5,RC),CCHN5TIC         ADDRESS, MOVE FLAGS, COUNT, TIC
*                                       OP-CODE.
         LA    RJ,CARN16(RE,RD)         CONSTRUCT CCW TO WRT R0  S20201
         ST    RJ,CARN16(RE,RC)         DATA FIELD               S20201
         MVI   16(RC),WRTD
         MVI   23(RC),8
*
*
         TM    DCBOPTCD,WRTCHK          IF WRITE CHECK IS SPECIFIED
         BC    8,NORDR0
         MVI   20(RC),CCHN              COMMAND CHAIN WRITE R0 CCW
         LA    RC,CARN24(RE,RC)         INCREMENT TO NEXT CCW    S20201
         TM    JFCBMASK+D6,NONCARN      DOES DEVICE FEATURE RPS  S20201
         BO    NOTCARN4                 NO, DONT PUT IN SET      S20201
*                                       SECTOR CCW               S20201
         BAL   RJ,CARNCCW               BRANCH & PUT IN SET      S20201
*                                       SECTOR CCW               S20201
*
NOTCARN4 EQU   *                                                 S20201
         MVI   D0(RC),RDR0              BLD A READ R0 CCW TO     S20201
         MVI   HALFCCW(RC),SILI+SKIP    VERIFY CAPACITY RECORD   S20201
         MVI   D7(RC),CNT16             INSERT CNT FIELD         S20201
         LA    RC,ONECCW(RE,RC)         JUMP OVER RD R0 CCW      S20201
         B     NORDRO1                  RC HAS ALREADY BEEN      S20201
*                                       UPDATED                  S20201
*
NORDR0   EQU   *
         LA    RC,24(0,RC)              INCREMENT CCW INDEX TO NEXT CCW
NORDRO1  EQU   *                                                 S20201
*
         EX    RB,CLICHK                TEST- ALL SEGMENTS BUILT
         BC    8,TSTWCOPT               YES, GO TEST FOR WRITE CHECK
*
         LA    RB,1(0,RB)               INCREMENT SEGMENT COUNTER
         LA    RD,24(0,RD)              INCREMENT TO NEXT SET OF COUNTS
         LA    RJ,CARN8(RE,RD)          CONSTRUCT SCH ADDR AND   S20201
         ST    RJ,D0(RE,RC)             OP CODE OF INITIAL SCH   S20201
         MVI   0(RC),MTSCHID
         B     BLDSEGMT                 LOOP TO BUILD WRITE CCWS FOR
*                                       NEXT SEGMENT OF THE BLOCK.
*  THIS SMALL ROUTINE BUILDS AND INSERTS SET SECTOR COMMAND WORDS
CARNCCW  EQU   *                                                 S20201
         ST    RE,D0(RE,RC)             PUT SECT2 ADDR IN CCW    Y02072
*                                       RD & SET SECT USE SAME   Y02072
*                                       BYTE, 2ND BYTE IS 0      Y02072
         MVI   D0(RC),SETSECT           ALONG WITH THE SET       S20201
*                                       SECTOR COMMAND CODE
         MVI   HALFCCW(RC),CCHN         PUT IN CHAIN COMMAND     S20201
         MVI   D7(RC),RPSCNT            AND COUNT                S20201
         LA    RC,ONECCW(RE,RC)         INCREMENT CHAN PGM PTR   S20201
         BR    RJ                       RETURN TO CALLING        S20201
*                                       ROUTINE                  S20201
*
CLICHK   CLI   DCBEOBR+1,0  -EXECUTED--TEST ALL SEGMENTS CONSTRUCTED
*
*
ABENDNRC EQU   *                        GO TO PROB DETERMINATION Y02072
*                                       TO ABEND BECAUSE BLKSIZE Y02072
*                                       IS GREATER THAN 1ST EXT  Y02072
         DMABCOND   208,PDLOAD,REGSAVE=YES,RES=NO    CALL        Y02072X
                                        PROBLEM DETERMINATION TO ABEND
         B     XCTLRTN                  GO TO XCTL TO 196M       Y02072
*
TSTWCOPT EQU   *
*
         LA    RB,CARN8                 ASSUME WRT CHK AND PRIME S20201
*                                       REG                      S20201
         TM    JFCBMASK+D6,NONCARN      ANY RPS DEVICES AROUND   S20201
         BO    NOTCARN2                 NO, FORGET READ SECTOR   S20201
*                                       COMMAND                  S20201
         BCTR  RE,RE                    ELSE PT TO SECTOR1 BYTE  Y02072
         ST    RE,D0(RE,RC)             PUT IT IN ADDR FIELD OF  S20201
*                                       CCW                      S20201
         MVI   D0(RC),RDSECT            PUT IN RD SECT OP CODE   S20201
         MVI   D7(RC),RPSCNT            PUT IN COUNT             S20201
         LA    RC,ONECCW(RE,RC)         UPDATE PTR TO NEXT CCW   S20201
NOTCARN2 EQU   *                                                 S20201
         LA    RD,IOBDNRCF              AND COUNT FIELD INDEX
         TM    DCBOPTCD,WRTCHK          ARE WRITE CHECK CCWS NEEDED
         BZ    CKSEQCNT                 BRANCH IF YES            S20201
         SR    RB,RB                    ZERO OUT REG IF WRITE    S20201
*                                       CHECK                    S20201
*
         LA    RJ,IOBBB                 CONSTRUCT A SEEK CCW TO  Y02072
         ST    RJ,D0(RE,RC)             RETURN TO 1ST TRK        S20201
         MVI   0(RC),SEEKHH
         MVI   HALFCCW(RC),CCHN         SET COMMAND CHAIN BIT    S20201
         MVI   D7(RC),SIXCOUNT          SET COUNT TO SIX         S20201
         TM    JFCBMASK+D6,NONCARN      RPS I PRESUME            S20201
         BO    NOTCARN8                 SKIP FOLLOWING INSTR IF  S20201
*                                       NOT                      S20201
         LA    RC,ONECCW(RE,RC)         PT TO OPEN SPACE AND     S20201
         BAL   RJ,CARNCCW               BRANCH TO FILL IT WITH   S20201
*                                       SETSECT                  S20201
         SH    RC,EIGHT                 DECREMENT TO RESTORE     S20201
*                                       POINTER                  S20201
NOTCARN8 EQU   *                                                 S20201
*
         LR    RJ,RD                                             S20201
         ST    RJ,CARN8(RE,RC)                                   S20201
         MVI   CARN8(RC),SCHIDEQ        PUT SCHID EQ OP CODE TO  S20201
         LA    RJ,CARN8(RE,RC)          LOCATE THE NEW REC, AND  S20201
         ST    RJ,CARN16(RE,RC)         A TIC TO THE SCH CCW     S20201
         MVC   12(5,RC),CCHN5TIC
         MVI   24(RC),RDKD              CONSTRUCT A READ KEY-DATA CCW
         MVI   28(RC),SILI+SKIP         WITH SILI AND SKIP FLAGS SET
         SR    RJ,RJ                                             S20201
         IC    RJ,DCBKEYLE                                       S20201
         AH    RJ,DCBBLKSI              SET COUNT TO KEY LENGTH  S20201
*                                       PLUS                     S20201
         STH   RJ,D30(RE,RC)            DATA LENGTH              S20201
CKSEQCNT EQU   *                                                 S20201
         SR    RF,RF                    RESET SEGMENT COUNTER    S20201
*
*
UPBY24   LA    RD,24(0,RD)              SET INDEX TO FIRST SEQUENCE OF
         LA    RF,D1(RE,RF)             WRITE CCWS               S20201
         EX    RF,CLICHK                EXECUTE INSTR            S20201
         BC    7,UPBY24
*
         LA    RJ,CARN8(RE,RC)          LOAD ADDR OF VERIFY CCW2 S20201
         TM    JFCBMASK+D6,NONCARN      TO RPS, OR NOT TO RPS    S20201
         BO    FILLTIC                  NO, FORGET NEXT TWO      S20201
*                                       INSTRS                   S20201
         SH    RC,SIXTEEN               POINT BACK TO 1ST WRTCHK S20201
*                                       CCW                      S20201
         AR    RC,RB                    POINT TO START OF WRT    S20201
*                                       CHK                      S20201
         LR    RJ,RC                    PUT IT INTO A POINTER    S20201
*                                       REGISTER                 S20201
         LA    RD,ONECCW(RE,RD)         YES, INCLUDE RPS CCW     S20201
         AR    RB,RB                    DOUBLE INCR FOR LATER    S20201
*                                       USE                      S20201
         B     FILLTICS                 BRANCH OUT OF CARNIVAL   S20201
*                                       RTN                      S20201
FILLTIC  EQU   *                                                 S20201
         LTR   RB,RB                    IS WRT CHK SPECIFIED     S20201
         BNZ   TSTFINI                  BRANCH IF NOT            S20201
*
FILLTICS ST    RJ,CARN32(RE,RD)         STORE AS TIC ADDR        S20201
         MVI   32(RD),TICOP             SET TIC OP-CODE
         ST    RJ,CARN36(RE,RD)         ALSO ST ADDR IN IGNORED  S20201
         MVI   36(RD),CCHN+SILI         BYTES,SET FLAGS FOR NOP
         LA    RD,72(0,RD)              INCREMENT TO NEXT SEQUENCE
         TM    JFCBMASK+D6,NONCARN      IS THIS RPS I SEE BEFORE S20201
*                                       ME                       S20201
         BO    NOTCARN6                 NO, SKIP OVER PT UPDATE  S20201
*                                       RTN                      S20201
         LA    RD,CARN16(RE,RD)         PT TO RD SECT CCW        S20201
         SR    RD,RB                    COMMAND IF REC READY     S20201
NOTCARN6 EQU   *                                                 S20201
         LR    RJ,RC                    LOAD ADDRESS OF VERIFY   S20201
*                                       CCW 1                    S20201
         BCT   RF,FILLTICS              TEST-ALL TICS COMPLETED  S20201
*                                       BRANCH ON NO.
*
*
TSTFINI  EQU   *
         L     RF,DCBIOBA               RESTORE IOB BASE         S20201
         L     RF,IOBNIOBA              LOAD NEXT IOB ADDRESS    Y02072
*
         MODESET  EXTKEY=DATAMGT        RETURN TO DATAMGT KEY    Y02072X
                                        TO STORE INTO DCB COPY   Y02072
*
         ST    RF,DCBIOBA               STORE NEXT IOB ADDR IF   S20201
*                                       THERE                    S20201
*                                       IS ONE OR PT BACK TO 1ST ONE
*
         MODESET  KEYADDR=DXUKEY,WORKREG=15  CHANGE TO USER KEY  Y02072
*
         TM    IOBNFLG1,IOBFIRST        IS THIS ADDR OF IOB 1    Y02072
         BC    8,FILLIOB                NO, GO BUILD CCWS FOR THIS IOB
*
         SR    RJ,RJ                    ZERO OUT AN UPDATE       S20201
*                                       REGISTER                 S20201
         TM    DCBEOBW+3,X'01'          ARE ERASE CCWS REQUIRED
         BC    1,COMPDCB                NO, GO FILL DCB FIELDS
         L     RC,DCBEOBW               LOAD ADDRESS OF ERASE CCW AREA
         TM    JFCBMASK+D6,NONCARN      IS IT A BIRD, A PLANE,   S20201
*                                       RPS                      S20201
         BO    NOCARERS                 NO, FORGET THIS ROUTINE  S20201
         AH    RE,CONST1                POINT TO LAST SECTOR(=0) Y02072
         LR    RF,RC                    SAVE POINTER TO ERASE    S20201
*                                       CCW STAR                 S20201
         BAL   RJ,CARNCCW               BRANCH TO INSERT SET     S20201
*                                       SECTOR                   S20201
         LA    RJ,CARN8                 PRIME RPS UPDATER        S20201
         MVC   CARN24(ONECCW,RC),D0(RF) PUT TWO SET SECT OP      S20201
         MVC   CARN64(ONECCW,RC),D0(RF) CODES IN CCWS 5 AND 10   S20201
         LR    RE,RJ                    SAVE AN EIGHT BYTE DISP  S20201
*                                       FOR RR                   S20201
         B     NEXT01                   BRANCH                   S20201
NOCARERS EQU   *                                                 S20201
         SR    RE,RE                    HAVE A 0 DISP IF NON RPS S20201
NEXT01   EQU   *                                                 S20201
         LA    RB,CARN24(RJ,RC)         CCW4 OR 6 ADDR FOR TIC   S20201
         ST    RB,CARN32(RJ,RC)          ADDR IN CCW5 OR 7       S20201
         LA    RB,CARN48(RJ,RC)         CCW7 OR 9 ADDR FOR       S20201
         ST    RB,CARN48(RJ,RC)         ADDR IN ERASE CCW        S20201
         AR    RJ,RJ                    UPDATE INDEX IF RPS      S20201
         LA    RB,CARN72(RJ,RC)         LOAD ADDR OF R0 FIELD    S20201
         ST    RB,D0(RE,RC)             ST AS SCH ADDR IN CCW1   S20201
*                                       OR 2                     S20201
         ST    RC,CARN8(RE,RC)          TIC ADDR IN CCW2 OR 3    S20201
         ST    RB,CARN16(RE,RC)         DATA ADDR IN CCW3 OR 4   S20201
         BCTR  RB,RE                    ADDR OF R0 FIELD - 1     S20201
         ST    RB,CARN56(RJ,RC)         FOR RD-HOME-ADDR CCW8    S20201
*                                       OR CCW11
*
*
         MVI   0(RC),SCHIDEQ            OP-CODE OF CCW 1
         MVC   4(5,RC),CCHN5TIC         FLAGS, COUNT OF CCW 1,TIC CCW 2
         MVI   16(RC),WRTD              WRITE DATA OP-CODE FOR CCW 3
         MVI   20(RC),SILI+CCHN         FLAGS FOR CCW3
         MVI   23(RC),7                 COUNT FOR CCW3
         LR    RJ,RC                    SAVE PT TO SCH-ID CCW    S20201
         AR    RC,RE                    INCREMENT PT OVER SET    S20201
*                                       SECT                     S20201
         MVC   CARN24(BYTEDEV,RC),D0(RJ)  MOVE SCH CCW AND TIC   S20201
         MVI   40(RC),READD             READ DATA OP-CODE TO CCW 6
         MVI   44(RC),CCHN+SILI+SKIP    FLAGS TO CCW6
         MVI   47(RC),8                 COUNT OF 8 TO CCW 6
         MVI   48(RC),ERSOP             BUILD ERASE CCW 7 TO CLEAR
         MVI   52(RC),ERSFLG+CCHN       THE TRACK
         MVI   55(RC),ERSCNT
         AR    RC,RE                    SKIP OVER CCW10 IF RPS   S20201
         MVI   56(RC),MTRDHA            MULTI-TRACK READ HOME ADDRESS
         MVC   D60(D5,RC),CCHN5TIC      FLAGS AND TIC CCW        S20201
         MVC   D65(D3,RC),DCBEOBW+D1    PUT IN CCW1 ADDR         S20201
*
*
*
COMPDCB  EQU   *
*
         MODESET  EXTKEY=DATAMGT        RETURN TO DATAMGT KEY    Y02072
*
         DROP  RDEB                     DROP DEB BASE            Y02072
         USING DEBDASD-(DEBBASND-DEBBASIC),RDEB  ESTABLISH BASE  Y02072
*                                       DEVICE DEPENDENT SECTION Y02072
         LH    RE,DEBNMTRK              PUT NO. OF TRACKS IN EXTENT 1
         STH   RE,DCBWCPO               INTO DCB FOR WRITE ROUTINE
*
         DROP  RDEB                                              Y02072
         SR    RJ,RJ                    CLEAR WORK REGISTERS
         SR    RF,RF
         SR    RE,RE
         L     RC,DCBDVTBL             LOAD DEVICE TABLE ENTRY ADDRESS
         IC    RE,OVERK(0,RC)          DEVELOP THE BYTES REQUIRED FOR
         IC    RJ,DCBKEYLE              A MINIMUM SIZE SEGMENT.
         LTR   RJ,RJ
         BZ    NOKEYS                   (KEY LENGTH + 1 + O'HEAD FOR A
         SR    RE,RE                     LAST RECORD)
NOKEYS   EQU   *
         IC    RF,OVERL(0,RC)
         TM    BYTEDEV(RC),TBOVHD       TWO BYTE OVERHEAD USED   S20201
         BNO   MZ0010                   BRANCH NO                S20201
         LH    RF,OVERI(RC)             GET TWO BYTE OVERHEAD    S20201
MZ0010   EQU   *                                                 S20201
         SR    RF,RE
         LA    RE,1(RJ,RF)
         STH   RE,DCBEOBR+2             STORE INTO UNUSED AREA OF DCB
*
*
***********************************************************************
*
*   SCAN THE DCB PARAMETER LIST FOR ANOTHER REQUEST FOR THIS EXECUTOR
*    IF NONE ARE FOUND TRANSER CONTROL TO THE FIRST EXECUTOR FOUND.
*
***********************************************************************
SCAN     EQU   *                        BRANCH TO NEXT EXEC
         USING  DEBBASIC,RDEB           ESTAB DEB BASE           Y02072
         MVC   DEBDCBB,DXUDCBAD+1       REPLACE DCB COPY ADDR    Y02072
*                                       WITH USER DCB IN DEB     Y02072
         DROP  RDEB                                              Y02072
*
*  ISSUE A MACRO WHICH CALLS AN EXTERNAL ROUTINE TO COPY THE
*  PROTECTED DCB INTO THE USER'S DCB CORE.
*
*
         IECRES  INIT,DCBCOPY=FRWKAR,STM=(R0,R15,WTGPREFX)       Y02072
*
         OI    DXATEXC1,FCAOCOPY        SET AUDIT TRAIL BIT      Y02072
*                                       FOR FORCE CLOSE CLEANUP  Y02072
*                                       INDICATING DCB COPIED    Y02072
         MVI   0(RWTGC),0               MARK THIS DCB FINISHED
*
SCAN4EQ  LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT WHERE-TO-GO INDEX AND
         LA    RPARC,PAROFF(0,RPARC)    PARAMETER LIST INDEX
         CLC   0(2,RWTGC),AMIDCNST      IS THIS EXECUTOR NAMED AGAIN
         BCR   8,RBASE                  YES, RETURN TO STARTING POINT
         CLC   0(2,RWTGC),OPIDCNST      IS THIS END OF WHERE-TO-GO TAB
         BC    7,SCAN4EQ                NO, CONTINUE SCAN
*
         LR    RPARC,RPAR               RESET PARAMETER LIST INDEX AND
         LA    RWTGC,32(0,RWTG)         WHERE-TO-GO INDEX TO ENTRY ONE
SCAN4ANY CLI   0(RWTGC),0               IS THIS DCB COMPLETED
         BC    7,XCTLRTN                NO, XCTL TO NAMED EXECUTOR
         LA    RWTGC,WGOFF(0,RWTGC)     YES, INCREMENT BOTH INDEX REGS
         LA    RPARC,PAROFF(0,RPARC)
         BC    15,SCAN4ANY              AND CONTINUE SCAN
*
XCTLRTN  EQU   *
         IECRES LOAD,PREFIX=WTGPREFX,BRANCH=DIRECT,            @Z30TSMI*
               MODID=WTGENTRY           GO TO NEXT LOAD        @Z30TSMI
         EJECT
*
***************
*
*
*      RPS CONSTANTS AND EQUATES
*
CONST1   DC    H'1'                     ONE BYTE DIFFERENCE BET  Y02072
*                                       SECTOR 1(RD AND SET) AND Y02072
*                                       SECTOR 2 (=0 FOR REC 0)  Y02072
EIGHT    DC    H'8'                     DECREASES PT TO CHAN     S20201
*                                       PROG BY 8                S20201
SIXTEEN  DC    H'16'                    DECREASES PT TO C.P. BY  S20201
*                                       16                       S20201
*
*
D0       EQU   0                        ZERO DISPLACEMENT        S20201
D1       EQU   1                        ONE BYTE DISPLACEMENT    S20201
D3       EQU   3                        THREE BYTE DISPLACEMENT  S20201
HALFCCW  EQU   4                        USED FOR HALF CCW        S20201
*                                       DISPLACEMENT             S20201
D5       EQU   5                        FIVE BYTE DISPLACEMENT   S20201
D6       EQU   6                        OFFSET IN JFCB FOR       S20201
*                                       CARNIVAL                 S20201
D7       EQU   7                        SEVEN BYTE DISPLACEMENT  S20201
ONECCW   EQU   8                        USED FOR FULL CCW        S20201
*                                       DISPLACEMENT             S20201
CARN8    EQU   8                        ONE CCW DISPLACEMENT     S20201
D14      EQU   14                       FOURTEEN BYTES           S20201
TWOCCW   EQU   16                       2 CCW DISPLACEMENT OR    S20201
*                                       LENTH                    S20201
CARN16   EQU   16                       USED FOR 2 CCW           S20201
*                                       DISPLACEMENT             S20201
CNT16    EQU   16                       COUNT OF SIXTEEN         S20201
CARN24   EQU   24                       USED FOR 3 CCW           S20201
*                                       DISPLACEMENT             S20201
CARN28   EQU   28                       USED FOR 3-1/2 CCW DISP  S20201
D30      EQU   30                       30 BYTE DISPLACEMENT     S20201
CARN32   EQU   32                       USED FOR FOUR CCW        S20201
*                                       DISPLACEMENT             S20201
CARN36   EQU   36                       USED FOR 4-1/2 CCW DISP  S20201
CARN48   EQU   48                       6 CCW DISPLACEMENT       S20201
CARN56   EQU   56                       USED FOR 7 CCW           S20201
*                                       DISPLACEMENT             S20201
D60      EQU   60                       60 BYTE DISPLACEMENT     S20201
CARN64   EQU   64                       USED FOR 8 CCW           S20201
*                                       DISPLACEMENT             S20201
D65      EQU   65                       65 BYTE DISPLACEMENT     S20201
CARN72   EQU   72                       USED FOR 9 CCW           S20201
*                                       DISPLACEMENT             S20201
CARN80   EQU   80                       USED FOR 10 CCW          S20201
*                                       DISPLACEMENT             S20201
*
*
NONCARN  EQU   X'20'                    TO TEST FOR RPS          S20201
TBOVHD   EQU   X'08'                    TWO BYTE OVERHEAD INDIC  S20201
SETSECT  EQU   X'23'                    SET SECTOR COMMAND CODE  S20201
RDSECT   EQU   X'22'                    READ SECTOR COMMAND CODE S20201
*
*   OTHER CONSTANTS AND EQUATES
*
*
*
CCHN5TIC DC    X'4000000508'  COMMAND CHAIN, COUNT OF 5, TIC OP CODE
*
ERSOP    EQU   X'11'          ERASE OP-CODE
ERSFLG   EQU   X'20'          SUPPRESS INCORRECT LENGTH
ERSCNT   EQU   X'08'          COUNT OF 8
*
SCHIDEQ  EQU   X'31'          SEARCH ID EQUAL OPERATION CODE
MTSCHID  EQU   X'B1'          MULTIPLE TRACK SEARCH ID EQUAL
MTRDHA   EQU   X'9A'          MULTIPLE TRACK READ HOME ADDRESS
SEEKHH   EQU   X'0B'          SEEK CCHH OP-CODE
WRTCKD   EQU   X'1D'          WRITE COUNT, KEY, DATA OPERATION CODE
DCHN     EQU   X'80'          DATA CHAIN FLAG
RDKD     EQU   X'0E'          READ KEY, DATA OPERATION CODE
CCHN     EQU   X'40'          COMMAND CHAIN FLAG
WRTD     EQU   X'05'          WRITE DATA OPERATION CODE
READD    EQU   X'06'          READ DATA OPERATION CODE
RDR0     EQU   X'16'          READ RECORD ZERO OP-CODE
TICOP    EQU   X'08'                    TIC OP-CODE
SKIP     EQU   X'10'                    SKIP DATA TRANSFER
SILI     EQU   X'20'                    SUPPRESS INCORRECT LENGTH
RPSCNT   EQU   1                        1 BYTE COUNT             S20201
SIXCOUNT EQU   6                        COUNT OF SIX             S20201
*
WRTCHK   EQU   X'80'                   WRITE CHECK OPTION
VORU     EQU   X'40'                   RECORD FORM IS VARIABLE OR UNDEF
*
*              DIRECT ACCESS DEVICE TABLE (DADT) DEFINITION
*
MAXCC    EQU   0         TOTAL TRACKS, CYLINDERS
TRKL     EQU   4         TRACK LENGTH
OVERI    EQU   6         OVERHEAD FOR INTERMEDIATE KEYED RECORD
OVERL    EQU   7         OVERHEAD FOR LAST (KEYED) RECORD ON TRACK
OVERK    EQU   8         OVERHEAD TO BE SUBTRACTED FOR NON-KEYED RECORD
BYTEDEV  EQU   9         FLAG BYTES
TOLER    EQU   10        TOLERANCE FACTOR
*
WGOFF    EQU   8                        OFFSET OF ENTRIES IN WTG TABLE
PAROFF   EQU   4                        OFFSET OF ENTRIES IN PARAM LIST
OPIDCNST DC    C'0S'                    LAST WTG ENTRY (OPEN)
PDLOAD   DC    C'6M',VL3(IGG0196M)      PROB DET MODULE ID     @Z30TSMI
MODID    DC    C'IGG019'                MODULE ID -2             Y02072
AMIDCNST DC    C'1M'                    THIS EXECUTOR'S ID
FIX      DC    C'@Z30TSMI'              LATEST FIX FLAG        @Z30TSMI
DATE     DC    C'10/18/74'              DATE OF LATEST FIX     @Z30TSMI
PATCH    DC    XL((*-IGG0191M)/20)'0'   5% PATCH AREA            Y02072
         EJECT
*************** CONTROL BLOCK DEFINITIONS******************************
*
UCBTYPCD EQU   19             OFFSET TO TYPE CODE IN THE UCB
*
*
         DCBD  DSORG=(PS),DEVD=(DA)
         EJECT
         CVT   DSECT=YES                                         Y02072
         EJECT
         IEZDEB                                                  Y02072
         EJECT
         IECDSECS  (MAIN,(IOB,NO)),PREFX,WTG,EXPAND=YES          Y02072
FORCORE  DSECT                          WORKAREA DSECT CONTINUED Y02072
*****   THE FOLLOWING ARE AUDIT TRAIL BITS SET FOR FORCE CLOSE    *****
         IHAFCAUD  ORG=YES                                       Y02072
*****
         EJECT
         IEZIOB                                                  Y02072
***********************************************************************
*  THE FOLLOWING DSECT FORMATS THE BDAM CREATE EXTENSION TO THE IOB   *
***********************************************************************
         ORG   IOBSEEK+8
IOBDNRCF DS    D                        NEW RECORD COUNT FIELD   Y02072
IOBR0CNT DS    D                        COUNT FIELD OF R0        Y02072
IOBR0DAT DS    D                        DATA FIELD OF R0         Y02072
IOBDCCW1 DS    D                        1ST CCW                  Y02072
         END
