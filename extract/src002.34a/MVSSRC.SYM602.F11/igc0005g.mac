         TITLE 'IGC0005G - FREE DYNAMIC BUFFER SVC ROUTINE (SVC 57).'
IGC0005G CSECT
***********************************************************************
*                                                                     *
*  MODULE NAME = IGC0005G                                             *
*                                                                     *
*  DESCRIPTIVE NAME = FREEDBUF SVC                                    *
*                                                                     *
*  COPYRIGHT = NONE                                                   *
*                                                                     *
*  STATUS = 001                                                       *
*                                                                     *
*  FUNCTION = THIS ROUTINE IS ENTERED WHEN THE PROBLEM PROGRAM ISSUES *
*    AN SVC 57(VIA THE FREEDBUF MACRO).THIS ROUTINE SETS UP FOR ENTRY *
*    TO THE BDAM AND ISAM FREEDBUF ROUTINES.UPON RETURN FROM THESE    *
*    ROUTINES REGISTER 15 IS CLEARED AND CONTROL IS GIVEN TO THE      *
*    PROBLEM PROGRAM ONCE AGAIN.                                      *
*                                                                     *
*    FOR BDAM ENTRY TO FREEDBUF, AN ESTAE MACRO IS ISSUED TO SET UP   *
*    AN ERROR EXIT SHOULD THERE BE AN ABEND AT THIS RB LEVEL DURING   *
*    SVC 57 OR DYN BUFFER PROCESSING.  THE ESTAE MACRO IDENTIFIES     *
*    AN ENTRY POINT WITHIN THIS SVC AS THE ERROR EXIT.  THIS ERROR    *
*    EXIT WILL LOAD AND TRANSFER CONTROL TO THE FREEDBUF ESTAE        *
*    MODULE, IGCT005G.                                                *
*                                                                     *
*    BEFORE TRANSFERRING CONTROL TO THE DYNAMIC BUFFERING MODULES,    *
*    MODESET WILL CHANGE FURTHER PROCESSING TO USER KEY.              *
*                                                                     *
*  NOTES = NONE                                                       *
*                                                                     *
*     DEPENDENCIES = NONE                                             *
*                                                                     *
*     DATA AREAS = NONE                                               *
*                                                                     *
*     RESTRICTIONS = NONE                                             *
*                                                                     *
*     REGISTER CONVENTIONS = SEE REGISTER EQUATES BELOW               *
*                                                                     *
*     PATCH LABEL = NONE                                              *
*                                                                     *
*  MODULE TYPE = SVC ROUTINE                                          *
*                                                                     *
*     PROCESSOR = ASSEMBLER XF                                        *
*                                                                     *
*     MODULE SIZE = 360 DECIMAL BYTES                                 *
*                                                                     *
*     ATTRIBUTES = REENTRANT,ENABLED,PRIVILEGED, ENTERED IN SUPERVISOR*
*       KEY.  MODESET IS ISSUED TO DO ALL PROCESSING IN USER KEY.     *
*       CONTROL IS PASSED TO DYN BUF MODULES IN SUPERVISOR KEY.       *
*                                                                     *
*                                                                     *
*                                                                     *
*  ENTRY POINT = 'BEGIN'(THE SECOND ENTRY POINT,'EXITRTN', IS         *
*     DESCRIBED IN A SEPARATE SECTION BELOW)                          *
*                                                                     *
*     PURPOSE = SEE FUNCTION                                          *
*                                                                     *
*     LINKAGE = WHEN AN SVC 57 IS ISSUED THIS ROUTINE IS READ INTO THE*
*       TRANSIENT AREA AND GIVEN CONTROL AT ITS ENTRY POINT.          *
*       THE MACRO IS ISSUED AS FOLLOWS:                               *
*                                                                     *
*                FREEDBUF  DECBADDR,K/D,DCBADDR                       *
*                                                                     *
*     INPUT - INPUTS TO THIS ROUTINE ARE                              *
*        REGISTER 1 - DCB ADDRESS                                     *
*        REGISTER 0 - DECB ADDRESS                                    *
*        REGISTER 4 - TCB ADDRESS                                     *
*        REGISTER 5 - SVRB ADDRESS                                    *
*        REGISTER 14- RETURN ADDRESS                                  *
*        REGISTER 15- ENTRY ADDRESS                                   *
*                                                                     *
*     OUTPUT = THIS ROUTINE SETS UP FOR BALR TO BDAM AND ISAM FREEDBUF*
*        ROUTINES AS FOLLOWS:                                         *
*        FOR ISAM REGISTER  2 - DECB ADDRESS                          *
*                           3 - DEB ADDRESS                           *
*        FOR BOTH REGISTER  4 - DCB ADDRESS                           *
*                           5 - SVRB ADDRESS                          *
*                           8 - TCB ADDRESS                           *
*                          14 - RETURN REGISTER                       *
*                          15 - ENTRY POINT REGISTER                  *
*                          SUPERVISOR KEY WITHOUT LOCAL LOCK          *
*                                                                     *
*     OUTPUT TO CALLER: A) AUDIT TRAIL BITS ARE SET IN SVRB EXT SAVE  *
*        FOR ESTAE RTN TO USE, B) RELEASE OF BUFFER TO A WAITING      *
*        USER OR TO THE AVAILABLE BUFFER QUEUE, C) RETURN CODE IN     *
*        REGISTER 15 IF EXTEND FUNCTION WAS NOT SUCCESSFUL.           *
*                                                                     *
*     EXIT-NORMAL = SVC EXIT IS ISSUED AFTER RETURN FROM BDAM OR ISAM *
*        DYNAMIC BUFFERING ROUTINES.  ON EXTEND EXIT, R15 IS ZERO.    *
*                                                                     *
*     EXIT-ABNORMAL = AN ESTAE EXIT IS PROVIDED FOR THE BDAM ENTRY TO *
*        INTERCEPT ANY ABEND AT THIS RB LEVEL. BRANCH IS THEN MADE TO *
*        FREEDBUF ESTAE, IGCT005G.                                    *
*     EXIT-ABEND = ABEND 339 IS ISSUED IF THE DEB IS INVALID.         *
*                                                                     *
*                                                                     *
*                                                                     *
*  ENTRY POINT = EXITRTN                                              *
*                                                                     *
*     PURPOSE = ENTERED FROM RTM VIA A SYNCH IN KEY ZERO ENABLED      *
*               WHEN THERE IS AN ATTEMPT TO ABNORMALLY TERMINATE THE  *
*               RB LEVEL ON WHICH THIS SVC IS ACTIVE.  THIS ROUTINE   *
*               WILL FIND THE ADDRESS OF THE TRR BY CALLING IEAVVMSR  *
*               TO SEARCH THE LPA DIRECTORY.  IT WILL ALSO FILL IN    *
*               SDWACSCT AND SDWAREXN.                                *
*                                                                     *
*     LINKAGE = REGISTER 0 - CODE.  IF 12 NO RTCA IS PASSED           *
*               REGISTER 1 - ADDRESS OF THE RTCA.                     *
*               REGISTER 13- ADDRESS OF A 16 FULLWORD SAVE AREA.      *
*               REGISTER 14- RETURN ADDRESS                           *
*               REGISTER 15- ADDRESS OF THE BOOTSTRAP ROUTINE.        *
*                                                                     *
*     INPUT = RTCA.                                                   *
*                                                                     *
*     OUTPUT = REGS AS PASSED FROM RTM EXCEPT 15 SET TO ADDR OF TRR.  *
*              SDWACSCT SET TO CSECT NAME.                            *
*              SDWAREXN SET TO TRR NAME.                              *
*                                                                     *
*     EXIT - NORMAL = BRANCH TO TRR.                                  *
*                                                                     *
*     EXIT - ERROR = A BRANCH ON REGISTER 14 BACK TO RTM IF NO RTCA   *
*                    PASSED.                                          *
*                    A PROGRAM CHECK TO CAUSE RTM TO PERCOLATE        *
*                    IF THE TRR NAME COULD NOT BE FOUND IN THE SEARCH *
*                    OF THE LPA DIRECTORY.                            *
*                                                                     *
*                                                                     *
*                                                                     *
*  EXTERNAL REFERENCES = NONE                                         *
*                                                                     *
*     ROUTINES:    'IGG019LE' BDAM SIO APPENDAGE FREES BUFFERS IF     *
*                   RECFM IN NOT VS AND ADDRESS SPACE = REAL.         *
*                  'IGG019LE' BDAM SIO APPENDAGE FREES BUFFERS IF     *
*                   RECFM IS VS AND ADDRESS SPACE = REAL.             *
*                  'IGG019JA' BDAM SIO APPENDAGE FREES BUFFERS IF     *
*                   RECFM IS NOT VS AND ADDRESS SPACE = VIRTUAL.      *
*                  'IGG019JA' BDAM SIO APPENDAGE FREES BUFFERS IF     *
*                   RECFM IS VS AND ADDRESS SPACE = VIRTUAL.          *
*                                                                     *
*                  'IGG019JI' ISAM ROUTINE FOR FREEING A BUFFER.      *
*                                                                     *
*                   DEBCHK(SVC 117) IS CALLED FOR DEB VALIDITY CHECK  *
*                   ESTAE(SVC 60) IS CALLED TO ESTABLISH ESTAE EXIT   *
*                                                                     *
*     DATA AREAS = NONE                                               *
*                                                                     *
*     CONTROL BLOCKS = DCB, DECB, AND SVRB                            *
*                                                                     *
*  TABLES = SVRB EXTENDED SAVEAREA IS USED AS SAVEAREA FOR REG 14 AND *
*    IS PASSED AS A PARAMETER LIST TO THE ESTAE ROUTINE.  IT IS ALSO  *
*    PASSED TO THE DYNAMIC BUFFERING ROUTINES TO BE USED AS A WORKAREA*
*                                                                     *
*  MACROS = ESTAE, DEBCHK, MODESET, IGGSTAE                           *
*                                                                     *
*                                                                     *
*                                                                     *
*  CHANGE ACTIVITY = AS FOLLOWS:                                      *
*                                                                     *
*                    OS 21 DELETIONS/CHANGES                          *
*1061016200                                                      S21045
*1061014600-014800,016080                                        M0079
*1061                                                            A49370
*1061004000-004800,006000,007600,010800,011500,013800-015600,    A30797
*1061016080,016160,017720,017800-018000                          A30797
*                    VS1-1 DELETIONS/CHANGES
*                                                                XM8240
*                    VS1-2 DELETIONS/CHANGES
*                    VS1-3 DELETIONS/CHANGES
*                    VS2-1 DELETIONS/CHANGES
*1061                                                            Y01021
*                    VS2-2 DELETIONS/CHANGES
*                    VS2-3 DELETIONS/CHANGES
*D012295-012299                                                @ZA08000
*                    CHANGES SUBSEQUENT TO VS2-3.7
*A011540,012980-013260,013400,017636                           @ZA12955
*A012311,012315,017643                                         @ZA14605
*A013230,013240,013360,C013350,014600                          @ZA24838
*A012300,A012302,A012418,A012420                               @ZA31948
         EJECT
***********************************************************************
*                      REGISTER EQUATES                               *
***********************************************************************
PARREG1  EQU   0                        INPUT PARAM REG WITH DECB
PARREG2  EQU   1                        INPUT PARAM REG WITH DCB
*                                       DEB PASSED TO DEBCHK-R1  Y02072
PARREG3  EQU   2                        PARAM REG WITH DECB ADDRESS
*                                       WHEN BR TO ISAM DYN BUF RTN
DEBREG   EQU   3                        BASE REG FOR DEB
DCBREG   EQU   4                        BASE REG FOR DCB
PARREG4  EQU   4                        TCB ADDR ON ENTRY        Y02072
SVRBREG  EQU   5                        REG IN WHICH SVRB IS PASSED
BASEREG  EQU   6                        BASE REGISTER FOR THIS MODULE
DECBREG  EQU   7                        BASE REG FOR DECB
TCBREG   EQU   8                        BASE REG FOR TCB         Y02072
SUBRTREG EQU   9                        RET REG FROM FREELOCK    Y02072
IOBREG   EQU   10                       REG WITH IOB ADDRESS
WORKREGY EQU   10                       USED AS WORK REGISTER    Y02072
WORKREGX EQU   11                       USED AS WORK REGISTER
RETREG   EQU   14                       RETURN REGISTER
EPREG    EQU   15                       LINK REGISTER
DEBAVTRG EQU   15                       REG CONTAINING AVT ADDRESS
DEBEXREG EQU   15                       REG CONTAINING DEB EXT PTR
DEBXTNRG EQU   15                       REG FOR PTR TO DEBXTN  @ZA12955
*
BEGIN    EQU   *                        ENTRY POINT - FREEDBUF   Y02072
         BALR  BASEREG,0                ESTABLISH ADDRESSABILITY
         USING *,BASEREG                FOR THIS ROUTINE
         USING RBSECT,SVRBREG           ESTABLISH BASE FOR SVRB  A30797
         LR    DECBREG,PARREG1          LOAD DECB BASEREG        A49370
         USING DECB,DECBREG             ESTABLISH BASE FOR DECB  A49370
         LR    TCBREG,PARREG4           LOAD TCB INTO ITS BASE   Y02072
         USING TCB,TCBREG               ESTABLISH TCB BASE       Y02072
*                                       TCB ADDR WILL BE PASSED  Y02072
*                                       TO DYN BUF RTN IN R8     Y02072
         LR    DCBREG,PARREG2           PUT DCB ADDRESS INTO DCBREG
         USING IHADCB,DCBREG            ESTABLISH BASE FOR DCB
         XC    WKAREA,WKAREA            CLEAR SVRB WORKAREA      Y02072
         ST    RETREG,WKASVC14          SAVE RET ADDR IN SVRB    Y02072
         L     WORKREGX,RBLINK          GET THE CALLERS RB ADDR  Y02072
         USING RBSECT,WORKREGX          ESTABLISH NEW SVRB BASE  Y02072
         DROP  SVRBREG                  DROP EARLIER BASE        Y02072
         IC    WORKREGX,RBOPSW+1        GET CALLER'S KEY         Y02072
         USING RBSECT,SVRBREG           REESTABLISH SVRB BASE    Y02072
         DROP  WORKREGX                 DROP NEW SVRB BASE       Y02072
         STC   WORKREGX,WKASVKEY        SAVE CALLER'S KEY IN WKA Y02072
         TM    DCBDSORG,DCBDSGDA        IS THIS BDAM DATA SET    Y02072
         BNO   CHECKDEB                 NO, GO ISSUE DEBCHK      Y02072
*
***********************************************************************
*  BDAM WILL ESTABLISH AN ESTAE TO BACK UP FREEDBUF IN CASE OF ERROR. *
*  THE ESTAE WILL ESTABLISH AN EXIT ROUTINE ADDRESS IN THIS MODULE.   *
***********************************************************************
*                        MOVE THE PARM LIST                      Y02072
         MVC   WKAESTAE(ESTAELEN),ELIST MOVE ESTAE PARM LIST     Y02072
*                                       INTO SVRB EXT SAVE       Y02072
*
        ESTAE PARAM=(SVRBREG),MF=(E,WKAESTAE) ESTAB ESTAE EXIT   Y02072
*
*     TEST IF BDAM FREEDBUF REQUEST IS VALID - IS THERE AN IOB?       *
*
         MODESET  KEYADDR=WKASVKEY,WORKREG=2  CHG TO USER KEY  @ZA31948
         L     IOBREG,DECIOBPT          LOAD IOBPTR IN DECB      A49370
         MODESET  EXTKEY=ZERO           RETURN TO KEY ZERO     @ZA31948
         LTR   IOBREG,IOBREG            WAS IO REQ INVALID?      A49370
         BZ    RETURN                   YES, NO BUFFER TO FREE   A49370
         TM    DECTYPE1,DECDYNBF        DYN BFR REQUESTED?     @ZA14605
         BZ    RETURN                   NO - GET OUT           @ZA14605
***********************************************************************
*  THE FOLLOWING ROUTINE VALIDITY CHECKS THE DEB, WHOSE ADDRESS IS IN *
*  DCBDEBAD.  THE BRANCH ENTRY IS USED TO ALLOW THE LOCAL LOCK TO BE  *
*  HELD AFTER RETURN FROM DEBCHK UNTIL THE BRANCHING ADDRESSES ARE    *
*  LOADED FROM THE VALIDATED DEB. IF THE DEB IS FOUND TO BE INVALID,  *
*  ABEND 339 RESULTS. THE BRANCH ENTRY TO DEBCHK REQUIRES THAT THE    *
*  LOCAL LOCK BE HELD AND KEY ZERO USED.  INPUT TO THE BRANCH ENTRY OF*
*  DEBCHK IS AS FOLLOWS:                                              *
*                                  REG 1 - DEB ADDRESS                *
*                                  REG 10- TCB ADDRESS                *
*                                  REG 14- RETURN ADDRESS             *
*                                  REG 15- DEBCHK ENTRY POINT         *
*  OUTPUT IS AS FOLLOWS:                                              *
*                                  REG 10,11 - DESTROYED              *
*                                  REG 15- 0 IF DEB VALID,            *
*                                          4 IF DEB INVALID           *
*  RETURN IS 4 BYTES BEYOND THE NORMAL RETURN IF THE DEB IS INVALID.  *
***********************************************************************
CHECKDEB EQU   *                        VALIDITY CHECK THE DEB   Y02072
         MODESET  KEYADDR=WKASVKEY,WORKREG=2  CHG TO USER KEY  @ZA31948
         L     DEBREG,DCBDEBAD          GET DEB ADDRESS          M0079
         MODESET  EXTKEY=ZERO           RETURN TO KEY ZERO     @ZA31948
         USING DEBBASIC,DEBREG          ESTABLISH BASE FOR DEB   A30797
         TM    DCBDSORG,DCBDSGDA        IS THIS BDAM DATA SET    Y01021
         BO    GETLOCK                  YES, ISSUE MACRO         Y01021
         TM    DCBDSORG,DCBDSGIS        IS THIS SVC CALLED FOR ISAM
         BO    GETLOCK                  YES, ISSUE MACRO         Y01021
         BR    RETREG                   ELSE, RETURN TO CALLER
*
GETLOCK  EQU   *                        GET THE LOCAL LOCK       Y02072
*
*     SETLOCK USES REGISTERS 11-14 WITHOUT RESTORING THEM             *
*
         SETLOCK  OBTAIN,TYPE=LOCAL,RELATED=('DEBFLDS,IGC0005G(FREELOCKX
               ,ABNFREE)'),MODE=UNCOND  GET LOCAL LOCK           Y02072
*
*                        SET UP REGS FOR DEBCHK                  Y02072
         CLM   DCBREG,MASK,DEBDCBB      ENSURE THAT DEB POINTS   Y02072
*                                       TO THIS DCB-DEBCHK BR    Y02072
*                                       ENTRY SKIPS THIS CHECK   Y02072
         BNE   ABEND                    IF NOT EQUAL,WRONG DEB   Y02072
         LA    PARREG2,0(DEBREG)        PUT DEB PTR IN REG 1     Y02072
         LR    WORKREGY,TCBREG          PUT TCB PTR IN REG 10    Y02072
         L     WORKREGX,CVTPTR          CVT ADDRESS              Y02072
         USING CVT,WORKREGX             ESTABLISH CVT BASE       Y02072
         L     WORKREGX,CVTEXT2         GET CVT EXTENSION        Y02072
         DROP  WORKREGX                 DROP CVT BASE            Y02072
         USING CVTXTNT2,WORKREGX        ESTABLISH CVT EXT BASE   Y02072
         L     EPREG,CVTDEBVR           GET DEBCHK ENTRY         Y02072
         DROP  WORKREGX                 DROP CVT EXT BASE        Y02072
         BALR  RETREG,EPREG             BR TO DEBCHK RTN         Y02072
         B     DEBOK                    BRANCH AROUND ERROR RET  Y02072
         B     ABEND                    DEB INVALID - ABEND 339  Y02072
DEBOK    EQU   *                        DEB PASSED VALIDITY CHK  Y02072
         LR    DEBREG,PARREG2           GET VALIDATED DEB ADDR   Y02072
         LR    PARREG1,DECBREG          RESTORE REGISTER 0       Y02072
         LR    PARREG2,DCBREG           RESTORE REGISTER 1       Y02072
***********************************************************************
*            DETERMINE IF ENTRY FOR ISAM OR BDAM                      *
***********************************************************************
         LA    DEBXTNRG,0(DEBREG)       GET DEB EXTENSION      @ZA12955
         SH    DEBXTNRG,XTNPTR          ADDRESS TO SEE IF      @ZA12955
         L     DEBXTNRG,0(DEBXTNRG)     THIS IS BDAM OR ISAM   @ZA12955
         USING DEBXTN,DEBXTNRG                                 @ZA12955
         TM    DEBXDSO1,DCBDSGDA        BDAM DATA SET?         @ZA12955
         BO    DOBDAM                   YES-GO DO IT           @ZA24838
         TM    DEBXDSO1,DCBDSGIS        ISAM DATA SET?         @ZA24838
         BO    FREEDBUF                 YES-SKIP ESTAE         @ZA24838
         B     ABEND                    NEITHER-ABEND          @ZA24838
         DROP  DEBXTNRG                                        @ZA12955
***********************************************************************
*                      BDAM ENTRY                                     *
***********************************************************************
*                        DETERMINE REASON FOR ENTRY
DOBDAM   L     DEBAVTRG,DEBAPPAD        LOAD PTR TO AVT        @ZA24838
         USING  DEBAVT,DEBAVTRG         ESTABLISH BASE FOR AVT   A30797
         L     EPREG,DEBSIOA            SAVE ADDR TO SIO APPEND  Y02072
         DROP  DEBAVTRG                                          A30797
         BAL   SUBRTREG,FREELOCK        BRANCH TO FREE LOCK AND  Y02072
*                                       MODESET TO USER KEY      Y02072
         BAL   RETREG,DYNBUF(EPREG)     BR TO SIO APPEND TO FREE A30797
*                                       BUFFER                   A30797
         L     RETREG,WKASVC14          LOAD RET ADDR TO SVCIH   Y02072
         BR    RETREG                   RETURN TO CALLER         Y02072
*
***********************************************************************
*                       ISAM ENTRY                                    *
***********************************************************************
FREEDBUF LR    PARREG3,DECBREG          PUT DECB ADDRESS INTO PARM REG
         L     DEBEXREG,DEBEXPT         LOAD ADDR OF DEB EXT     A30797
         USING DEBACSMD,DEBEXREG        ESTABLISH BASE FOR EXT   A30797
         L     EPREG,DEBFREED           DYN BUFR POINTER         S21045
         DROP  DEBEXREG                                          S21045
         BAL   SUBRTREG,FREELOCK        BRANCH TO FREE LOCK AND  Y02072
*                                       MODESET TO USER KEY      Y02072
         BALR  RETREG,EPREG             ROUTINE AND BRANCH TO IT.
         SPACE 3
RETURN   EQU   *                        RETURN TO CALLER         A30797
         SR    EPREG,EPREG              GIVE RETURN CODE=0
         L     RETREG,WKASVC14          LOAD RET ADDR TO SVCIH   Y02072
         BR    RETREG                   RETURN TO CALLER         Y02072
         SPACE 3
***********************************************************************
*  THE FOLLOWING ROUTINE RECEIVES CONTROL JUST BEFORE THE BRANCH IS   *
*  MADE TO THE DYNAMIC BUFFERING MODULE. THE LOCAL LOCK IS RELEASED.  *
***********************************************************************
FREELOCK EQU   *                        FREE LOCAL LOCK          Y02072
*
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=('DEBFLDS,IGC0005G(GETLOCKX
               )')                      RELEASE THE LOCAL LOCK   Y02072
*
         BR    SUBRTREG                 RETURN TO MAIN ROUTINE   Y02072
         SPACE 3
***********************************************************************
*   THE FOLLOWING ROUTINE ABENDS THE CALLER OF THE SVC IF THE DEB IS  *
*   FOUND TO BE INVALID.  THE LOCAL LOCK MUST BE RELEASED AND THE     *
*   ESTAE SET UP BY THIS SVC MUST BE REMOVED FROM THE QUEUE.          *
***********************************************************************
ABEND    EQU   *                        ABEND 339 - DEB INVALID  Y02072
*
ABNFREE  SETLOCK  RELEASE,TYPE=LOCAL,RELATED=('DEBFLDS,IGC0005G(GETLOCKX
               )')                      RELEASE THE LOCAL LOCK   Y02072
*
         ESTAE 0                        REMOVE THE ESTAE         Y02072
         LA    PARREG2,X'339'           LOAD ABEND CODE          Y02072
         ABEND (1),DUMP,,SYSTEM         ABEND 339-BAD DEB        Y02072
***********************************************************************
         EJECT
***********************************************************************
*  THE FOLLOWING IS THE ESTAE EXIT ROUTINE, ENTERED BY RTM IF AN      *
*  ABEND SHOULD OCCUR AT THIS RB LEVEL DURING FREEDBUF PROCESSING.    *
*  THIS ROUTINE FINDS THE ADDRESS OF THE FREEDBUF ESTAE ROUTINE,      *
*  IGCT005G, IN THE LPALIB AND BRANCHES TO IT.  THE ROUTINE ISSUES    *
*  THE MACRO, IGGSTAE, WHICH USES THE CONTENTS SUPERVISOR ROUTINE,    *
*  IEAVVMSR. THE ROUTINE IS ENTERED IN SUPERVISOR STATE AND SUPER-    *
*  VISOR KEY WITH THE LOCAL LOCK HELD.                                *
***********************************************************************
*
EXITRTN  IGGSTAE  ESTAEID               FIND ADDRESS OF ESTAE    Y02072
*
         EJECT
***********************************************************************
*                        EQUATES                                      *
***********************************************************************
EXIT     EQU   3                        SVC 3 TO EXIT
DYNBUF   EQU   8                        OFFSET IN DYN BUF RTNS FOR
*                                       ENTRY FROM FREEDBUF
MASK     EQU   B'0111'                  MASK TO COMPARE LOW-     Y02072
*                                       ORDER 3 BYTES OF REG     Y02072
***********************************************************************
*                       CONSTANTS                                     *
***********************************************************************
         DS    0D
ESTAEID  DC    CL8'IGCT005G'            ESTAE RTN ID TO LOCATE   Y02072
         SPACE
ELIST    ESTAE  EXITRTN,RECORD=YES,MF=L  LIST FORM OF ESTAE MAC  Y02072
ESTAELEN EQU   *-ELIST                  LENGTH OF LIST FORM      Y02072
XTNPTR   DC    H'8'                     DECREMENT FOR EXT PTR  @ZA12955
         SPACE
PATCH    DC    32X'0'                   PATCH AREA             @ZA14605
MODID    DC    CL8'IGC0005G'            SVC ID                   A30797
DATE     DC    CL8'&SYSDATE'            LAST SHIP DATE         @ZA08000
FIX      DC    CL8'@OZ31948'            LAST FIX               @ZA08000
        EJECT
***********************************************************************
*                           DSECTS                                    *
***********************************************************************
         IHASDWA                                                 Y02072
         EJECT
         IHAPSA                                                  Y02072
         EJECT
         DCBD  DSORG=(IS,DA)
         EJECT
         CVT   DSECT=YES                                         Y02072
         EJECT
         IKJTCB                                                  Y02072
         EJECT
         IHADECB
         EJECT
         IEZDEB
         EJECT
         IKJRB                                                   Y02072
         IGGFRWKA                                                Y02072
         END
