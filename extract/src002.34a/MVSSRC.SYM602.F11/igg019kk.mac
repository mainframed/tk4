 TITLE   'IGG019KK - CONSTRUCTS CHANNEL PROGRAMS BY ID'
IGG019KK CSECT
*MODULE NAME - IGG019KK                                               *
*                                                                     *
*DESCRIPTIVE NAME - BUILDS BDAM CHANNEL PROGRAMS THAT SEARCH ON ID    *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*        OS 20 CHANGES/DELETIONS
*                                                                S20201
*        OS 21 CHANGES/DELETIONS
*                                                               SA52385
*        VS1-1 CHANGES/DELETIONS
*        VS2-1 CHANGES/DELETIONS
*        VS1-2 CHANGES/DELETIONS
*                                                                XM1024
*        VS1-3 CHANGES/DELETIONS
* THE FIX FOR XA03120 IS FLAGGED SA66738                        XA03120
*        VS2-2 CHANGES/DELETIONS
*                                                                Y02072
*
*                                                                     *
*STATUS CHANGE LEVEL 002
*FUNCTION/OPERATION- THIS ROUTINE CONSTRUCTS A CHANNEL PROGRAM TO     *
*   PERFORM A READ OR WRITE BY ID (USES BLOCK ID AS THE SEARCH        *
*   ARGUMENT).                                                        *
*   THE CCWS ARE CONSTRUCTED OF CONSTANTS DEFINED IN THIS MODULE AND  *
*   ADDRESSES RESOLVED AT THE TIME THIS CODE IS EXECUTED.             *
*                                                                     *
*ENTRY POINT- ENTRY IS TO 'IGG019KK' (BEGIN) FROM MODULE IGG019KA BY  *
*   THE CALLING SEQUENCE,   L    15,DCBDID                            *
*                           BALR 14,15                                *
*                                                                     *
*INPUT- THE REGISTERS ARE INPUT AS FOLLOWS,                           *
*   4 - DCB ADDRESS                                                   *
*   5 - DECB ADDRESS                                                  *
*   6 - THE ADDRESS OF CCW 1 (CHANNEL PROGRAM START)                  *
*   7 - IOB ADDRESS                                                   *
*   11- BASE ADDRESS OF MODULE IGG019KA (FOUNDATION MODULE)           *
*                                                                     *
*OUTPUT- THE REQUIRED CCWS WILL BE CONSTRUCTED FOLLOWING THE IOB.     *
*   REGISTER 6 WILL CONTAIN THE ADDRESS OF THE LAST CCW.              *
*                                                                     *
*EXTERNAL ROUTINE- 'IGG019KQ' IS ENTERED TO CONSTRUCT THE VERIFY CCWS *
*   IF THE REQUEST IS A WRITE AND THE WRITE VALIDITY CHECK OPTION HAS *
*   BEEN SPECIFIED.                                                   *
*                                                                     *
*EXITS-NORMAL- 'D6TOVER' IS THE EXIT TO IGG019KQ IF NECESSARY. THE    *
*   REGISTERS WILL BE LOADED AS REQUIRED BY IGG019KQ.                 *
*   'D6EXIT' IS THE RETURN TO THE FOUNDATION MODULE, IGG019KA.        *
*                                                                     *
*TABLES/WORK AREAS- N/A                                               *
*                                                                     *
*ATTRIBUTES- THIS ROUTINE IS REENTRANT AND EXECUTED ENABLED.          *
*                                                                     *
*NOTE- REGISTER USAGE IN THIS MODULE MUST REMAIN CONSISTENT WITH THE  *
*   MODULES, IGG019KA, IGG019KQ.                                      *
         EJECT
         USING IGG019KK,D6EPREG
         USING IHADCB,DCBREG
         USING DECB,DECBREG                                      Y02072
         USING IOBDEF,IOBREG
*
*
*
*  REGISTER USAGE
*
D6WKREG  EQU   0         WORK REGISTER
D6VERR   EQU   1         POINTER TO A SEARCH CCW FOR VERIFY
SECTOR   EQU   2                        PNTR TO RPS SECTOR AREA  20201
C1       EQU   1                        GENERAL CONST 1          20201
ONEBYTE  EQU   8                        8 BITS = ONE BYTE        20201
IEC0SCR1 EQU   232                      SECTOR CONVERT RTN       20201
*                                       OFFSET                   20201
CVTPTR   EQU   16                       ADDRESS OF CVT           20201
PAR0     EQU   0                        PARAMETER REG            20201
PAR2     EQU   2                        PARAMETER REG            20201
UTIL     EQU   8                        UTILITY/ WORK REG        20201
DEBREG   EQU   3         DEB ADDRESS
DCBREG   EQU   4         DCB ADDRESS
DECBREG  EQU   5         DECB ADDRESS
CCWIND   EQU   6         CHANNEL COMMAND INDEX
IOBREG   EQU   7         IOB ADDRESS
VERBASE  EQU   10        BASE FOR VERIFY MODULE
FDNBASE  EQU   11        BASE FOR THE FOUNDATION MODULE
D6       EQU   12        RETURN FROM INTERNAL BAL
RETREG   EQU   14        RETURN TO FOUNDATION MODULE
D6EPREG  EQU   15        BASE OF THIS MODULE
*
*
         TM    IOBDCPND,YESCARN         IS RPS FEATURED          20201
         BNO   BEGIN                    NO, THEN BEGIN STANDARD  20201
*                                       CCWS                     20201
         L     SECTOR,IOBDCPND          GET SECTOR ADDR IF RPS   20201
         LA    SECTOR,ONE(SECTOR)       POINT TO SECTOR1         20201
         TM    DCBRECFM,DCBRECV         IS F FORMAT REQUESTED    20201
         BO    BEGIN                    NO, THEN BEGIN STANDARD  20201
*                                       CCWS                     20201
*
         TM    DCBRECFM,DCBRECTO        IF OVERFLOW OPTION       Y02072
*                                       SPECIFIED                20201
         BNO   NOTOVFLO                 BR IF NOT TRK OVERFLO   SA52385
         MVI   0(SECTOR),NOPSS          MV FF TO SECTOR AS NOP  SA52385
         B     GOCARN                   FORGET SECTOR CONVERT   SA52385
NOTOVFLO EQU   *                                                SA52385
         LH    PAR0,DCBBLKSI            GET RECORD LENGTH       SA66738
         SLL   PAR0,ONEBYTE             MAKE ROOM FOR KEY LENGTH 20201
         IC    PAR0,DCBKEYLE            GET KEY LENGTH           20201
         SLL   PAR0,ONEBYTE             MAKE ROOM FOR RECORD     20201
*                                       NUMBER                   20201
         IC    PAR0,IOBSEEK+D7          GET RECORD NUMBER        20201
*
         SR    D6VERR,D6VERR           ZERO OUT A REGISTER       20201
         IC    D6VERR,IOBSEEK          GET THE EXTENT NUMBER     20201
         SLL   D6VERR,FOUR             MULTIPLY BY 16            20201
         L     D6VERR,UCBADDR(D6VERR,DEBREG)  GET THE UCB ADDR   20201
         IC    D6VERR,UCBDEVT(D6VERR)  GET DEVICE TYPE           20201
         SLL   D6VERR,D24              PUT IT IN HI ORDER BYTE   20201
         OR    PAR2,D6VERR              PUT DEVICE TYPE IN PAR2  20201
*
         L     D6VERR,CVTPTR            GET CVT                  20201
         L     D6EPREG,IEC0SCR1(D6VERR) GET SECTOR CONVERT RTN   20201
         LR    UTIL,RETREG              SAVE FOUNDATION RETURN   20201
*                                       REG                      20201
         LR    D6VERR,FDNBASE           SAVE FOUNDATION BASE     20201
         BALR  RETREG,D6EPREG           OBTAIN SECTOR VALUE      20201
         LR    FDNBASE,D6VERR           RESTORE FOUNDATION BASE  20201
         LR    RETREG,UTIL              RESTORE RETURN REG       20201
         L     D6EPREG,D28(FDNBASE)     RELOAD BASE REG          20201
GOCARN   EQU   *                                                 20201
         ST    SECTOR,D0(D6WKREG,CCWIND) PUT IN ADDR AND SET     20201
         MVI   D0(CCWIND),SETSECT        SECT COMMAND            20201
         MVC   HALFCCW(HALFCCW,CCWIND),FLGCNT  PUT IN FLAG/COUNT 20201
*                                       FIELD                    20201
         LA    CCWIND,ONECCW(0,CCWIND)  UPDATE PT TO NEXT CCW    20201
*
BEGIN    LR    D6VERR,CCWIND           SAVE THE ADDRESS OF SEARCH CCW.
         MVC   IOBDNRCF+2(5),IOBSEEK+3 POSITION FEEDBACK TO COMMON LOC.
         LA    D6WKREG,IOBSEEK+3        DEVELOP SEARCH ARGUMENT ADDRESS
         ST    D6WKREG,0(CCWIND)           AND STORE IN CCW1 .
         ST    CCWIND,8(CCWIND)          STORE TIC ADDRESS
         MVI   0(CCWIND),D6SCHID         MOVE OP CODE TO CCW1
         MVC   4(5,CCWIND),D6CON1        MOVE FLAGS,COUNT,TIC OP CODE
         LA    CCWIND,16(CCWIND)         INCREMENT INDEX TO THIRD CCW
         MVC   0(2,CCWIND),D6CON2        MOVE 2 READ OP CODES TO CCW3
         TM    IOBDTYPE+1,READ         IF THIS IS A WRITE ,
         BC    1,D6TSTK                    REPLACE THE READ
         MVC   0(2,CCWIND),D6CON3           OP CODES WITH WRITE OP CODE
D6TSTK   CLI   DCBKEYLE,0              TEST FOR KEYED RECORDS
         BC    8,D6NOKEY                  IF NOT, OVERLAY THE READ OR
         L     D6WKREG,DECKYADR            WRITE KEY-DATA OP CODE
         LTR   D6WKREG,D6WKREG              WITH
         BC    7,D6KEY                       THE
         TM    IOBDTYPE+1,KEYOP               READ OR WRITE DATA
         BC    1,D6KEY                         OP CODE
D6NOKEY  MVC   0(1,CCWIND),1(CCWIND)            STORED AT CCW3+1
         BC    15,D6DATA                         AND OMIT KEY-DATA CCW
D6KEY    MVC   7(1,CCWIND),DCBKEYLE    MOVE KEY LENGTH AS COUNT
         MVC   8(1,CCWIND),1(CCWIND)    MOVE STORED OP-CODE TO CCW4
         MVI   4(CCWIND),D6DCCHN         SET DATA, COMMAND CHAIN FLAGS
         MVC   1(3,CCWIND),DECKYADR+1    MOVE KEY ADDR. FROM DECB
         LA    CCWIND,8(CCWIND)          INCREMENT INDEX TO CCW4
D6DATA   MVC   1(3,CCWIND),DECAREA+1     MOVE AREA ADDR. FROM DECB
         MVC   6(2,CCWIND),DECLNGTH    MOVE DATA LENGTH AS COUNT.
         TM    IOBDTYPE+1,READ         IF THIS IS A READ, THE CHANNEL
         BCR   1,RETREG                   PROGRAM IS COMPLETE
         TM    IOBDTYPE,VERIFY         IS THE VERIFY OPTION SPECIFIED
         BCR   8,RETREG                IF NOT CHANNEL PROG. IS COMPLETE
*
         TM    IOBDCPND,YESCARN        IS RPS FEATURED           20201
         BNO   SKIPCARN                NO, THEN SKIP RPS COMMAND 20201
         TM    DCBRECFM,DCBRECV        IS RECFM FIXED            Y02072
         BZ    SKIPCARN                YES, THEN TOO SKIP RPS    20201
         MVI   HALFCCW(CCWIND),CCHN     PUT IN COMMAND CHAINING  20201
         LA    CCWIND,ONECCW(0,CCWIND)  POINT TO READ SECTOR CCW 20201
         ST    SECTOR,D0(CCWIND)        PUT IN ADDR AND COMMAND  20201
         MVI   D0(CCWIND),RDSECT              CODE               20201
         MVC   HALFCCW(HALFCCW,CCWIND),NFLGCNT FILL IN           20201
*                                       FLAG/COUNT               20201
SKIPCARN EQU   *                                                 20201
         L     VERBASE,12(0,FDNBASE)    SET UP TO GO TO THE
         BR    VERBASE                 VERIFY MODULE TO CONSTRUCT CCWS
*                                      VERIFY MODULE WILL RETURN TO
*                                      FOUNDATION ON REGISTER 14
*
***********************************************************************
*                     CONSTANTS AND EQUATES
***********************************************************************
D6SCHID  EQU   X'31'     SEARCH-ID-EQUAL OP-CODE
D6DCCHN  EQU   X'C0'     DATA AND COMMAND CHAIN FLAGS
D6CON1   DC    X'4000000508'  FLAGS COUNT TIC OP-CODE
D6CON2   DC    X'0E'     READ KEY-DATA
         DC    X'06'     READ DATA
D6CON3   DC    X'0D'     WRITE KEY-DATA
         DC    X'05'     WRITE DATA
*
*     BDAM OPTIONS AND TYPES
VERIFY   EQU   X'80'
OFLOW    EQU   X'40'
EXSCH    EQU   X'20'
FEEDB    EQU   X'10'
ACTAD    EQU   X'08'
DYNBF    EQU   X'04'
READX    EQU   X'02'
RELRD    EQU   X'01'
KEYOP    EQU   X'80'
LGNOP    EQU   X'40'
READ     EQU   X'08'
KEY      EQU   X'04'
ADD      EQU   X'02'
*
*    RPS CONSTANTS AND EQUATES
*
FLGCNT   DC    X'40000001'              FLAG/COUNT FIELD         20201
NFLGCNT  DC    X'00000001'              FLAG/COUNT - NO CHAIN    20201
*                                       COMMAND                  20201
*
D0       EQU   0                        ZERO DISPLACEMENT        20201
ONE      EQU   1                        FOR INCREMENTING ONE     20201
*                                       BYTE                     20201
HALFCCW  EQU   4                        FOR INCREMENTING HALF    20201
*                                       CCW                      20201
D7       EQU   7                        7 BYTE DISPLACEMENT      20201
ONECCW   EQU   8                        FOR INCREMENTING ONE CCW 20201
D24      EQU   24                       24 BIT DISPLACEMENT      20201
D28      EQU   28                       28 BYTE DISPLACEMENT     20201
UCBDEVT  EQU   19                       OFFSET TO DEVICE TABL IN 20201
*                                         UCB
UCBADDR  EQU   32                      OFFSET TO UCB ADDR IN DEB 20201
FOUR     EQU   4                       MULTY FACTOR OF 16        20201
COMPSECT EQU   36                       OFFSET TO COMPUTE SECTOR 20201
*                                       ADDR                     20201
*
YESCARN  EQU   X'FF'                   BYTE TO TEST FOR RPS      20201
RDSECT   EQU   X'22'                    READ SECTOR COMMAND CODE 20201
SETSECT  EQU   X'23'                    SET SECTOR COMMAND CODE  20201
CCHN     EQU   X'40'                    COMMAND CHAINING BYTE    20201
NOPSS    EQU   X'FF'                    SECTOR VALUE WHICH IS   SA52385
*                                       INTERPRETED BY HARDWARE AS NOP
MODID    DC    C'IGG019KK'              MODULE ID                Y02072
FIX      DC    C' YM5349 '              LATEST FIX IN MODULE     YM5349
DATE     DC    C'11/15/73'              DATE OF LATEST FIX       YM5349
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
***********************************************************************
*                            DSECTS
***********************************************************************
         IHADECB                                                 Y02072
         EJECT
*      DATA CONTROL BLOCK (DCB) DEFINITION
*
         DCBD  DSORG=DA
         EJECT
*
*      I/O BLOCK (IOB) DEFINITION
*
*              STANDARD IOB
         DS    0F
IOBDEF   DSECT
IOBFLAG1 DS    CL1            STATUS FLAG
IOBFLAG2 DS    CL1            ERROR FLAG
IOBSENSE DS    CL2            SENSE BYTES 0 AND 1
IOBECBPT DS    CL4            ECB POINTER
IOBCSW   DS    0CL8           CHANNEL STATUS WORD
IOBCSWCA DS    0CL4           COMMAND ADDRESS
         DS    CL1
         DS    CL3
IOBCSWST DS    CL2            STATUS BYTES
IOBCSWCT DS    CL2            REMAINING COUNT
IOBSTART DS    0CL4           CHANNEL PROGRAM POINTER
IOBSIOCC DS    CL1            SIO CONDITION CODE
         DS    CL3
IOBDCBPT DS    0CL4           DCB POINTER
IOBWGHT  DS    CL1            CHANNEL WEIGHT
         DS    CL3
IOBRESTR DS    0CL4           RESTART POINTER
         DS    CL1
         DS    CL3
IOBINCAM DS    CL2            BLOCK COUNT INCREMENT AMOUNT
IOBERRCT DS    CL2            ERROR COUNTER
IOBSEEK  DS    CL8            SEEK ADDRESS
*        BDAM EXTENDED IOB
*
IOBDBYTR DS    CL2            BYTES REMAINING ON TRACK
IOBDIOBS DS    CL2            SIZE OF THIS IOB
IOBDPLAD DS    0CL4           IOB POOL LINK ADDRESS
IOBDAVLI DS    CL1            IOB AVAILABILITY INDICATOR
         DS    CL3
IOBDTYPE DS    CL2            TYPE FIELD
IOBDSTAT DS    CL2            IOB STATUS
IOBDCPND DS    CL4            CHANNEL PROGRAM NORMAL END ADDRESS
IOBDBYTN DS    CL2            BYTES NEEDED BY NEW RECORD
         DS    CL2
IOBDQPTR DS    CL4            LINK FIELD FOR QUEUED IOB'S
IOBUPLIM DS    CL8            LIMIT MBBCCHHR FOR EXTENDED SEARCH
IOBDNRCF DS    CL8            COUNT FIELD FOR NEW RECORD
IOBCP    DS    CL200                   CHANNEL PROGRAM AREA
         END
