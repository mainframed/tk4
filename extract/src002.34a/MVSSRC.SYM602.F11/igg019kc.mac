 TITLE   'IGG019KC - BDAM RELATIVE TRACK CONVERSION MODULE'
IGG019KC CSECT
*MODULE NAME - IGG019KC                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM RELATIVE TRACK CONVERSION AND FEEDBACK MODULE*
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*                                                                     *
*        OS REL 21 CHANGES/DELETIONS
*4093002800,016600                                               A35339
*        VS 1-1 CHANGES/DELETIONS
*        VS 2-1 CHANGES/DELETIONS
*        VS 1-2 CHANGES/DELETIONS
*        VS 2-2 CHANGES/DELETIONS
*016400-016640,037500                                            Y02072
*                                                                     *
*STATUS- CHANGE LEVEL 1                                               *
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE IS LOADED IF THE DCB INDICATES THAT  *
*   ADDRESSING IS BY RELATIVE TRACK (TT OR TTR), AND IS COMPOSED OF   *
*   TWO ROUTINES. 1.CONVERT TTR TO AN ACTUAL (MBBCCHHR) ADDRESS PRIOR *
*   TO EXECUTING THE I/O REQUEST.                                     *
*   2.CONVERT AN ACTUAL ADDRESS TO A TTR VALUE FOR FEEDBACK AFTER THE *
*   REQUEST HAS COMPLETED SUCCESSFULLY.                               *
*                                                                     *
*ENTRY POINTS- THE ENTRY TO THE FIRST ROUTINE (TTR TO ACTUAL) IS      *
*   'IECDRTB' WITH THE CALLING SEQUENCE,  L     15,8(IGG019KA BASE)   *
*                                         BAL   14,4(15)              *
*   THE  ENTRY TO THE SECOND ROUTINE (ACTUAL TO TTR) IS 'IGG019KC'    *
*   (IECDRT) WITH THE CALLING SEQUENCE    L     15,8(IGG019KA BASE)   *
*                                         BALR  14,15                 *
*                                                                     *
*                                                                     *
*INPUT- FOR THE FIRST ROUTINE THE REGISTERS ARE SET AS FOLLOWS,       *
*   3 - DEB ADDRESS                                                   *
*   4 - DCB ADDRESS                                                   *
*   5 - DECB ADDRESS                                                  *
*   7 - IOB ADDRESS                                                   *
*   11- BASE ADDRESS FOR MODULE IGG019KA (FOUNDATION MODULE)          *
*                                                                     *
*   FOR THE SECOND ROUTINE THE FOLLOWING REGISTERS ARE INPUT,         *
*   1 - IOB ADDRESS                                                   *
*   13- DCB ADDRESS                                                   *
*                                                                     *
*OUTPUT- THE FIRST ROUTINE WILL PLACE MBBCCHHR INTO IOB SEEK ADDRESS. *
*   THE SECOND ROUTINE WILL PLACE TTR INTO THE USER'S BLKREF FIELD.   *
*                                                                     *
*EXTERNAL ROUTINES- 'IECPCNVT' IS USED TO CONVERT TTR TO ACTUAL.      *
*   'IECPRLTV' IS USED TO CONVERT ACTUAL TO A TTR VAUE.               *
*                                                                     *
*EXITS-NORMAL- 'D3EXIT1' IS THE NORMAL RETURN TO MODULE IGG019KA      *
*   AFTER AN ACTUAL ADDRESS HAS BEEN DEVELOPED AND STORED AT IOBSEEK. *
*   'D3EXIT2' IS THE RETURN TO THE ASYNCHRONOUS INTERRUPT ROUTINE IN  *
*   THE MODULE IGG019KA AFTER TTR FEEDBACK HAS BEEN DEVELOPED AND     *
*   STORED INTO THE USERS BLKREF FIELD.                               *
*                                                                     *
*EXIT-ERROR- 'D3EXIT3' IS AN EXIT TO THE INVALID REQUEST ERROR ROUTINE*
*   IN MODULE IGG019KA. A TT VALUE GREATER THAN THE NUMBER OF TRACKS  *
*   IN THE DATA SET HAS BEEN SPECIFIED TO THE TTR TO ACTUAL CONVERSION*
*   ROUTINE. REGISTER 12 IS USED TO PASS THE EXCEPTION CODE TO THE    *
*   ERROR ROUTINE.                                                    *
*                                                                     *
*TABLES/WORK AREAS- THE COMMUNICATION VECTOR TABLE IS USED TO LOCATE  *
*   THE ROUTINES, IECPCNVT AND IECPRLTV.                              *
*                                                                     *
*ATTRIBUTES- THE ROUTINE IS REENTRANT AND EXECUTED ENABLED WITH USER  *
*   PROTECTION KEY. IT IS REUSABLE.                                   *
*                                                                     *
*NOTES- REGISTER USAGE IN THIS MODULE MUST REMAIN CONSISTENT WITH THE *
*   MODULES, IGG019KA, IECPCNVT, IECPRLTV.                            *
*
*
         USING IGG019KC,EPREG
         USING IOBDEF,IOBREG
         USING DECBDEF,DECBREG
         USING IHADCB,DCBREG
*
*
***********************************************************************
*  REGISTER USAGE
***********************************************************************
*
D3CONVR  EQU   0         RELATIVE TRACK PARAMETER
PARAM    EQU   1         DEB ADDRESS PARAMETER, (ASI-PARAM=IOB ADDRESS)
ACTUAL   EQU   2         ACTUAL ADDRESS LOCATION PARAMETER
DEBREG   EQU   3         DEB ADDRESS
DCBREG   EQU   4         DCB ADDRESS
DECBREG  EQU   5         DECB ADDRESS
D3WKREG  EQU   6         WORK REGISTER
IOBREG   EQU   7         IOB ADDRESS
GPR9     EQU   9         CONVERSION ROUTINE WORK REGISTERS ARE 9-13
FDNBASE  EQU   11        BASE FOR THE FOUNDATION MODULE
D3ASIRET EQU   12        RETURN TO ASI
SAVE     EQU   13        USER'S SAVE AREA , (ASI- SAVE=DCB ADDRESS)
RETREG   EQU   14        RETURN TO FOUNDATION
EPREG    EQU   15        BASE FOR THIS MODULE
         EJECT
*
IECDRTA  BC    15,D3FDBK               GO TO THE FEEDBACK        A35339
*                                       ROUTINE                  A35339
*
IECDRTB  STM   GPR9,EPREG,IOBDNRCF     SAVE VOLATILE REGISTERS IN IOB
         LR    PARAM,DEBREG            SET DEB ADDR FOR CONVERSION RTN
         L     D3WKREG,DECRECPT        LOCATE USER'S ADDRESS AREA
         MVC   IOBDCPND(3),0(D3WKREG)  MOVE TTR TO ALIGN IT.
         TM    IOBDTYPE+1,KEYADD       IS TYPE ID
         BC    8,*+8                    YES, LEAVE R AS STATED
         MVI   IOBDCPND+2,0             NO, MOVE A 0 TO R BYTE OF TTR
         L     D3CONVR,IOBDCPND        LOAD TTR0 TO CONVERSION REGISTER
         LA    ACTUAL,IOBSEEK          SET ACTUAL ADDRESS PARAMETER
D3LINK   EQU   *
         L     EPREG,CVTPTR(0,0)       LOAD ADDRESS OF CONVERSION
         L     EPREG,CVTPCNVT-CVTDEF(0,EPREG) MODULE FROM COMM.
*                                             VECTOR TABLE
         BALR  RETREG,EPREG              AND GO THERE.
*
         LTR   EPREG,EPREG             TEST FOR ANY ERROR RETURN CODE
         LM    GPR9,EPREG,IOBDNRCF      RESTORE REGISTERS
         BC    8,TSTPS2                IF NO ERROR, BRANCH
         IC    D3ASIRET,INVREF         INSERT CAUSE FLAG FOR INVALID
         L     RETREG,ERROFF(0,FDNBASE) REQUEST, LOCATE ERROR ROUTINE,
D3EXIT3  BCR   15,RETREG                AND BRANCH THERE
*
TSTPS2   TM    IOBDCPND+3,D3PASS1      TEST 2ND PASS, EXTENDED SEARCH
         BC    1,D3CLR                  BRANCH YES
D3TSTXS  TM    IOBDTYPE,EXSCH          IF EXTENDED SEARCH OPTION,
         BC    1,D3LOOP                 GO CALCULATE LIMIT ADDRESS.
         MVC   IOBUPLIM(7),IOBSEEK     DUPLICATE SEEK AS SEARCH LIMIT
D3EXIT1  BCR   15,RETREG               RETURN TO THE FOUNDATION MODULE.
*
*   THE FOLLOWING ROUTINE  DEVELOPS THE LIMIT TTR FOR EXTENDED SEARCH
*     AND RETURNS TO THE CONVERSION ROUTINE TO DEVELOP IOBUPLIM (ACTL)
*
D3LOOP   CLC   DCBREL+1(2),DCBLIMCT+1  IS SEARCH FOR ENTIRE DATA SET
         BC    13,D3WRAP                YES, GO SET END EQUAL TO START
*
         L     D3CONVR,IOBDCPND        LOAD SEARCH STARTING CC
         SRL   D3CONVR,16               GET RID OF EXTRA BYTES
         MVC   IOBCSW+2(2),DCBLIMCT+1  ALIGN NUMBER OF TRACKS TO SEARCH
         A     D3CONVR,IOBCSW          ADD TO BEGINNING TRACK NUMBER
         MVC   IOBCSW+2(2),DCBREL+1    ALIGN DATA SET SIZE(IN TRACKS)
         C     D3CONVR,IOBCSW          ARE WE OUT OF THE DATA SET RANGE
         BC    4,D3SHFT                NO , CONTINUE
         S     D3CONVR,IOBCSW          YES,SUBTRACT DATA SET SIZE FROM
*                                         UPPER LIMIT TO GET SEARCH END
D3SHFT   EQU   *
         SLL   D3CONVR,16              SHIFT TT, R WILL BE 0
         OI    IOBDCPND+3,D3PASS1      SET EXT. SEARCH PASS 1 FLAG ON.
         LA    ACTUAL,IOBUPLIM         SET ACTUAL ADDRESS PARAMETER
         BC    15,D3LINK                GO LINK TO CONVERSION ROUTINE
*
D3WRAP   EQU   *
         MVC   IOBUPLIM(7),IOBSEEK     SET LIMIT TO SEARCH ALL TRACKS
D3CLR    CLC   IOBSEEK(1),IOBUPLIM     ARE SEEK, LIMIT IN SAME EXTENT
         BC    7,D3DUMMY                 IF NOT, GO DUMMY R BYTE
         CLC   IOBSEEK+3(4),IOBUPLIM+3   DID SEARCH WRAP AROUND
         BC    4,D3EXIT1                             NO, GO EXIT
D3DUMMY  MVI   IOBUPLIM+7,X'FF'         SET R BYTE TO DUMMY VALUE
         B     D3EXIT1                  RETURN TO THE FOUNDATION MODULE
*
*  FEEDBACK ROUTINE
*
*
D3FDBK   STM   GPR9,ACTUAL,IOBDNRCF-IOBDEF(PARAM) SAVE REGISTERS USED
         LA    ACTUAL,IOBSEEK-IOBDEF(0,PARAM) SET ACTUAL ADDR.PARAMETER
         L     PARAM,DCBDEBAD-IHADCB(0,SAVE) SET DEB ADDRESS PARAMETER
         L     EPREG,CVTPTR(0,0)       LOAD ADDRESS OF CONVERSION
         L     EPREG,CVTPRLTV-CVTDEF(0,EPREG) MODULE FROM COMM.
*                                             VECTOR TABLE
         BALR  RETREG,EPREG              AND GO THERE.
*
         USING CNVRET,RETREG
CNVRET   EQU   *
         SH    ACTUAL,IOBOFF           ESTABLISH IOB BASE ADDRESS
         ST    D3CONVR,IOBDCPND-IOBDEF(0,ACTUAL) SAVE THE RETURNED TTR
         LM    GPR9,ACTUAL,IOBDNRCF-IOBDEF(ACTUAL)  RESTORE THE
*                                                  REGISTERS USED
         L     EPREG,IOBECBPT-IOBDEF(0,PARAM) LOCATE USER'S ADDR. AREA
         L     EPREG,DECRECPT-DECBDEF(0,EPREG)    AND
         MVC   0(3,EPREG),IOBDCPND-IOBDEF(PARAM) MOVE TTR TO HIS  AREA
D3EXIT2  BCR   15,D3ASIRET             GO BACK TO THE ASI ROUTINE.
*
*
         EJECT
***********************************************************************
*           CONSTANTS AND EQUATES                                     *
***********************************************************************
IOBOFF   DC    AL2(IOBSEEK-IOBFLAG1)   OFFSET OF IOBSEEK
INVREF   DC    X'10'     TTR IS OUTSIDE OF DATA SET
ERROFF   EQU   20        OFFSET TO ERROR ROUTINE ADCON.
ENTRY1   EQU   X'20'     TEST FOR ENTRY FROM ASI
D3PASS1  EQU   X'10'     MASK FOR FIRST PASS BIT
KEYADD   EQU   X'06'     TEST FOR TYPE = KEY OR ADD
*              OPTIONS AND TYPE
VERIFY   EQU   X'80'
OFLOW    EQU   X'40'
EXSCH    EQU   X'20'
FEEDB    EQU   X'10'
ACTAD    EQU   X'08'
DYNBF    EQU   X'04'
READX    EQU   X'02'
RELRD    EQU   X'01'
KEYOP    EQU   X'80'
LGNOP    EQU   X'40'
READ     EQU   X'08'
KEY      EQU   X'04'
ADD      EQU   X'02'
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
***********************************************************************
*                           DSECTS                                    *
***********************************************************************
CVTDEF   DSECT
         CVT
         EJECT
         DCBD  DSORG=DA
         EJECT
*      DATA EVENT CONTROL BLOCK (DECB) DEFINITION
         DS    0F
DECBDEF  DSECT
DECSDECB DS    CL4            STANDARD EVENT CONTROL BLOCK (ECB)
DECTYPE  DS    CL2            TYPE FIELD
DECLNGTH DS    CL2            DATA LENGTH
DECDCBAD DS    CL4            ADDRESS OF DCB
DECAREA  DS    CL4            ADDRESS OF DATA AREA
DECIOBPT DS    CL4            ADDRESS OF THE IOB
DECKYADR DS    CL4            ADDRESS OF KEY
DECRECPT DS    CL4            ADDRESS OF RECORD REFERENCE
         EJECT
*
*      I/O BLOCK (IOB) DEFINITION
*
*              STANDARD IOB
         DS    0F
IOBDEF   DSECT
IOBFLAG1 DS    CL1            STATUS FLAG
IOBFLAG2 DS    CL1            ERROR FLAG
IOBSENSE DS    CL2            SENSE BYTES 0 AND 1
IOBECBPT DS    CL4            ECB POINTER
IOBCSW   DS    0CL8           CHANNEL STATUS WORD
IOBCSWCA DS    0CL4           COMMAND ADDRESS
         DS    CL1
         DS    CL3
IOBCSWST DS    CL2            STATUS BYTES
IOBCSWCT DS    CL2            REMAINING COUNT
IOBSTART DS    0CL4           CHANNEL PROGRAM POINTER
IOBSIOCC DS    CL1            SIO CONDITION CODE
         DS    CL3
IOBDCBPT DS    0CL4           DCB POINTER
IOBWGHT  DS    CL1            CHANNEL WEIGHT
         DS    CL3
IOBRESTR DS    0CL4           RESTART POINTER
         DS    CL1
         DS    CL3
IOBINCAM DS    CL2            BLOCK COUNT INCREMENT AMOUNT
IOBERRCT DS    CL2            ERROR COUNTER
IOBSEEK  DS    CL8            SEEK ADDRESS
*        BDAM EXTENDED IOB
*
IOBDBYTR DS    CL2            BYTES REMAINING ON TRACK
IOBDIOBS DS    CL2            SIZE OF THIS IOB
IOBDPLAD DS    0CL4           IOB POOL LINK ADDRESS
IOBDAVLI DS    CL1            IOB AVAILABILITY INDICATOR
         DS    CL3
IOBDTYPE DS    CL2            TYPE FIELD
IOBDSTAT DS    CL2            IOB STATUS
IOBDCPND DS    CL4            CHANNEL PROGRAM NORMAL END ADDRESS
IOBDBYTN DS    CL2            BYTES NEEDED BY NEW RECORD
         DS    CL2
IOBDQPTR DS    CL4            LINK FIELD FOR QUEUED IOB'S
IOBUPLIM DS    CL8            LIMIT MBBCCHHR FOR EXTENDED SEARCH
IOBDNRCF DS    CL8            COUNT FIELD FOR NEW RECORD
IOBCP    DS    CL8            FIRST CCW IN CHANNEL PROGRAM
         END
