 TITLE   'IGG019KG - FEEDBACK RELATIVE BLOCK NUMBER-NO OVERFLOW'
IGG019KG CSECT
*MODULE NAME - IGG019KG                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM FEEDBACK, RELATIVE BLK, NON TRK OVERFLOW     *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*        OS REL 21 CHANGES/DELETIONS
*        VS 1-1 CHANGES/DELETIONS
*        VS 2-1 CHANGES/DELETIONS
*        VS 1-2 CHANGES/DELETIONS
*        VS 2-2 CHANGES/DELETIONS
*                                                                Y02072
*                                                                YM3029
*        POST-VS2-3 CHANGES/DELETIONS                                 *
*C023800,C024000                                                ZA02228
*STATUS- CHANGE LEVEL 1                                               *
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE IS ENTERED FROM THE ASI ROUTINE AND  *
*   EXCLUSIVE CNTROL SVC TO CONVERT THE ACTUAL ADDRESS OF THE BLOCK   *
*   JUST PROCESSED TO A RELATIVE BLOCK NUMBER. THIS IS DONE IF THE    *
*   USER HAS SPECIFIED FEEDBACK OPTION IN THE READ OR WRITE MACRO AND *
*   RELATIVE BLOCK AND FEEDBACK OPTIONS IN THE OPTCD PARAMETER OF THE *
*   DCB MACRO, OR IF EXCLUSIVE CONTROL WAS REQUESTED.                 *
*   THIS ROUTINE FIRST USES THE RESIDENT ROUTINE WHICH CONVERTS ACTUAL*
*   TO RELATIVE TRACK NUMBER TO OBTAIN A TTR VALUE. THIS VALUE IS     *
*   THEN CONVERTED TO A RELATIVE BLOCK NUMBER BY USE OF THE RELATIVE  *
*   EXTENTS ADDED TO THE DEB BY THE BDAM EXECUTOR 'IGG0193A'.         *
*                                                                     *
*ENTRY POINT- 'IGG019KG' (FDBSTAR) IS THE ENTRY POINT FROM SVC 53 AND *
*   ASYNCHRONOUS INTERRUPT ROUTINE BY THE CALLING SEQUENCE,           *
*            L     15,96(DCB)                                         *
*            BALR  12,15                                              *
*         OR SYNCH (15) - IF SVC 53                                   *
*                                                                     *
*INPUT- THE FOLLOWING REGISTERS ARE LOADED BY THE CALLING ROUTINE     *
*   1 - IOB ADDRESS                                                   *
*   13- DCB ADDRESS                                                   *
*   THE ACTUAL ADDRESS TO BE CONVERTED WILL BE FOUND IN THE IOB AT    *
*   IOBSEEK.                                                          *
*                                                                     *
*OUTPUT- THE CALCULATED RELATIVE BLOCK NUMBER WILL BE MOVED TO THE    *
*   USER'S BLKREF FIELD. BLKREF WILL BE LOCATED BY USING THE ECB      *
*   ADDRESS IN THE IOB TO LOCATE THE DECB AND THE ADDRESS OF BLKREF   *
*   WILL BE LOADED FROM THE DECB FIELD 'DECRECPT'.                    *
*                                                                     *
*EXTERNAL ROUTINES- 'IECPRLTV' IS USED TO CONVERT MBBCCHHR TO A TTR   *
*   VALUE.                                                            *
*                                                                     *
*EXIT NORMAL- 'EXTASI' IS THE EXIT TO RETURN TO THE ASYNCHRONOUS      *
*   INTERRUPT ROUTINE BY A     BR 12 (OR BR 14 IF SVC 53)             *
*                                                                     *
*TABLES/WORK AREAS- THE COMMUNICATIONS VECTOR TABLE IS REFERENCED TO  *
*   OBTAIN THE ADDRESS OF THE RESIDENT CONVERT ROUTINE (IECPRLTV).    *
*                                                                     *
*ATTRIBUTES- THIS MODULE IS REENTRANT AND EXECUTED ENABLED.           *
*   IT EXECUTES IN PROBLEM PROGRAM STATE, USER KEY.                   *
*                                                                     *
*NOTES- REGISTER USAGE IN THIS MODULE MUST REMAIN CONSISTENT WITH     *
*   THE MODULES IGG019KA, IECPRLTV.                                   *
*                                                                     *
         USING IGG019KG,BASE
         USING IOBSTDRD,IOBREG
         USING IHADCB,DCBREG
         USING DECBDEF,DECBREG
*
*              REGISTER USAGE
*
WKREG0   EQU   0                       WORKING REGISTER
SREG1    EQU   1                        PARAMETER REGISTER FOR BPAM
IOBREG   EQU   1                        IOB ADDRESS
SREG2    EQU   2                        PARAMETER REGISTER FOR BPAM
SREG9    EQU   9                        START OF SAVED REGISTERS
WKREG3   EQU   10                      WORKING REGISTER
DECBREG  EQU   11                      DECB ADDRESS
WKREG1   EQU   11                      WORKING REGISTER
FDNBASE  EQU   11                       BASE FOR FOUNDATION MODULE
SREG12   EQU   12                      ERROR CONDITION REGISTER
INTREG   EQU   12                      INTERNAL RETURN FOR THIS MODULE
WKREG2   EQU   12                      WORKING REGISTER
DCBREG   EQU   13                      DCB ADDRESS
RETREG   EQU   14                      RETURN TO FOUNDATION MODULE
SREG14   EQU   14                       PARAMETER REGISTER FOR BPAM
WKREG4   EQU   14                      WORKING REGISTER
SREG15   EQU   15                       PARAMETER REGISTER FOR BPAM
BASE     EQU   15                      BASE REGISTER FOR THIS MODULE
*
FDBSTAR  STM   SREG9,SREG2,IOBDNCRF     SAVE REGISTERS  9-2
         LA    SREG2,IOBSEEK            SET POINTER TO ACTUAL    Y02072
*                                       ADDRESS                  Y02072
         USING IOBSEEK,SREG2                                     Y02072
         L     SREG1,DCBDEBAD           SET DEB POINTER FOR CONVERT
         DROP  IOBREG                                            Y02072
         L     SREG15,CVTPTR(0,0)      LOAD ADDR.OF COMM. VECTOR TABLE
         L     SREG15,CVTPRLTV-CVTDEF(0,SREG15) LOAD ADDRESS OF
*                                                 CONVERSION ROUTINE
         BALR  SREG14,SREG15            GO TO ROUTINE
*
*
*                   RETURN FROM CONVERT ROUTINE
RETURN   EQU   *
         LM    SREG9,SREG15,IOBDNCRF    RESTORE REGISTERS  9-15  Y02072
         L     IOBREG,IOBDNCRF+DSAVER1  RESTORE IOB POINTER      Y02072
         USING IOBSTDRD,IOBREG                                   Y02072
         DROP  SREG2                                             Y02072
RETPT    SR    WKREG1,WKREG1            CLEAR REGISTER
         SRL   WKREG0,8                 SET REGISTER TO 0TTR
         BCTR  WKREG0,0                 SET R VALUE RELATIVE TO ZERO
         ST    WKREG1,IOBSTART          CLEAR IOB START POINTER
         STC   WKREG0,IOBSTART+3        PLACE R VALUE RETURNED BY
         IC    WKREG1,IOBSTART+3        CONVERT ROUTINE IN RESULT REG.
         L     SREG2,DCBDEBAD           LOAD DEB POINTER
         USING DEBDEF,SREG2
         SRL   WKREG0,8                 SET REGISTER TO 00TT
         LA    WKREG2,EXT1(0,SREG2)     SET POINTER TO FIRST EXTENT
         SR    WKREG4,WKREG4            CLEAR REGISTER
         IC    WKREG4,DEBNMEXT          LOAD NUMBER OF EXTENTS
         LR    WKREG3,WKREG2            SET POINTER TO FIRST EXTENT
INCPT    LA    WKREG3,EXTSZ(0,WKREG3)   INCREMENT POINTER BY EXT. SIZE
         BCT   WKREG4,INCPT             IS THIS THE LAST EXTENT
*                                       NO-GO TO INCPT
*                                       YES WKREG3 NOW POINTS TO FIRST
*                                        RELATIVE RECORD EXTENT
SUBTRK   SH    WKREG0,NMTRK(0,WKREG2)   SUBTRACT NO.OF TRACKS IN THIS
*                                        EXTENT FROM CONVERTED VALUE
         BC    4,ADDBACK                BRANCH IF RESULT IS MINUS
         MVC   IOBSTART+1(3),1(WKREG3)  ALIGN RECORDS PER EXTENT VALUE
         A     WKREG1,IOBSTART          ADD VALUE TO RESULT
         LA    WKREG2,EXTSZ(0,WKREG2)   INCREMENT NORMAL EXTENT POINTER
         LA    WKREG3,REXTSZ(0,WKREG3)  INCREMENT RELATIVE EXTENT PTR
         BC    15,SUBTRK                REPEAT CALCULATION
*
ADDBACK  AH    WKREG0,NMTRK(0,WKREG2)   ADD NO. OF TRACK IN THIS EXTENT
*                                        BACK TO TT REG.
         BC    8,NOMORE                 IF RESULT IS ZERO GO TO NOMORE
         MVC   IOBSTART+1(1),0(WKREG3)  ALIGN RECORDS PER TRACK VALUE
ADDRR    MH    WKREG0,IOBSTART          CALC REMAINING RECORDS  ZA02228
         AR    WKREG1,WKREG0            ADD TO RESULT           ZA02228
NOMORE   ST    WKREG1,IOBSTART          STORE RESULT
         L     DECBREG,IOBECBPT         SET DECB POINTER
         L     WKREG2,DECRECPT          LOAD ADDRESS OF USER'S BLKREF
*                                        FIELD
         MVC   0(3,WKREG2),IOBSTART+1   MOVE RELATIVE RECORD VALUE TO
*                                        USER'S AREA
         LM    SREG9,SREG2,IOBDNCRF     RESTORE REGS 9 - 2       Y02072
         TM    IOBSTAT1,IOBSYNCH        TEST FOR SYNCH ENTRY     Y02072
*                                       (ENTRY FROM EXCL CNTROL) Y02072
         BOR   RETREG                   IF SO, RETURN ON R14     Y02072
EXITASI  EQU   *
         BCR   15,INTREG                RETURN TO ASYNCHRONOUS
*                                        INTERRUPT ROUTINE
***********************************************************************
*                    CONSTANTS AND EQUATES
***********************************************************************
EXT1     EQU   32                       FIRST EXTENT OFFSET FROM START
*                                        OF DEB
EXTSZ    EQU   16                       DEB EXTENT SIZE
REXTSZ   EQU   4                        RELATIVE RECORD EXTENT SIZE
NMTRK    EQU   14                       NUMBER OF TRACKS OFFSET IN EXT.
DSAVER1  EQU   (16+1-9)*4               DISPLACEMENT OF REG 1    Y02072
*                                       SAVE AREA FROM R9 SAVED  Y02072
*                                       IN IOBDNRCF              Y02072
*
*              EXCEPTION CODES
NOREC    EQU   X'80'
LGNCK    EQU   X'40'
NOSPA    EQU   X'20'
INVAL    EQU   X'10'
UNCOR    EQU   X'08'
ENDOD    EQU   X'04'
UNREL    EQU   X'02'
*              OPTIONS AND TYPE
VERIFY   EQU   X'80'
OFLOW    EQU   X'40'
EXSCH    EQU   X'20'
FEEDB    EQU   X'10'
ACTAD    EQU   X'08'
DYNBF    EQU   X'04'
READX    EQU   X'02'
RELRD    EQU   X'01'
KEYOP    EQU   X'80'
LGNOP    EQU   X'40'
READ     EQU   X'08'
KEY      EQU   X'04'
ADD      EQU   X'02'
MODID    DC    C'IGG019KG'              MODULE ID                Y02072
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
***********************************************************************
*                         DSECTS
***********************************************************************
CVTDEF   DSECT
         CVT
         EJECT
*      DATA CONTROL BLOCK (DCB) DEFINITION
*
         DCBD  DSORG=DA
         EJECT
*      DATA EVENT CONTROL BLOCK (DECB) DEFINITION
         DS    0F
DECBDEF  DS    0CL25
DECSDECB DS    CL4            STANDARD EVENT CONTROL BLOCK (ECB)
DECTYPE  DS    CL2            TYPE FIELD
DECLNGTH DS    CL2            DATA LENGTH
DECDCBAD DS    CL4            ADDRESS OF DCB
DECAREA  DS    CL4            ADDRESS OF DATA AREA
DECIOBPT DS    CL4            ADDRESS OF THE IOB
DECKYADR DS    CL4            ADDRESS OF KEY
DECRECPT DS    CL4            ADDRESS OF RECORD REFERENCE
         EJECT
*
*      I/O BLOCK (IOB) DEFINITION
*
         IEZIOB
         EJECT
*
*      DATA EXTENT BLOCK (DEB) DEFINITION
*
         DS    0F
DEBDEF   DSECT
*
         DS    0F
DEBNMSUB DS    0CL1                    COUNT OF ROUTINES LOADED
DEBTCBAD DS    CL4                     TASK CONTROL BLOCK ADDRESS
DEBAMLNG DS    0CL1                    WORD CNT OF BDAM ADDED CORE
DEBDEBAD DS    CL4                     DEB CHAIN ADDRESS
DEBOFLGS DS    0CL1                    OPEN FLAGS
DEBIRBAD DS    CL4                     IRB ADDRESS
DEBOPATB DS    0CL1                    DATA SET ATTRIBUTES
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1                    COUNT OF EXTENTS
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4                     DCB ADDRESS
DEBEXSCL DS    0CL1                    EXTENT SIZE SCALE
DEBAPPAD DS    CL4                     IOS APPENDAGE LIST ADDRESS
DEBDVMOD DS    0CL1                    FILE MASK CODE
DEBUCBAD DS    CL4                     UCB ADDRESS
DEBBINUM DS    CL2                     BIN NUMBER (BB)
DEBSTRCC DS    CL2                     STARTING CYLINDER NUMBER
DEBSTRHH DS    CL2                     STARTING TRACK NUMBER
DEBENDCC DS    CL2                     ENDING CYLINDER NUMBER
DEBENDHH DS    CL2                     ENDING TRACK NUMBER
DEBNMTRK DS    CL2                     NO. OF TRACKS IN THIS EXTENT
DEBSUBID EQU   0         SUBROUTINE ID'S
*
*                IO DEVICE TABLE
*
         DS    0F
DTAB     DC    X'000814202C380000'
DEVSZ    DS    CL4                     DEVICE SIZE   CCHH
TRKLNGTH DS    CL2                     TRACK LENGTH
OVERI    DS    CL1                     OVERHEAD  NOT LAST
OVERL    DS    CL1                     OVERHEAD  NLAST
OVERK    DS    CL1                     OVERHEAD  NNON KEYED
FLAG     DS    CL1                     FLAG
TOLER    DS    CL2                     TOLERANCE
         END
