 TITLE   'IGG019KY - EXTENDED SEARCH FOR WRITE ADD MODULE,SELF FORMAT'
IGG019KY CSECT                                                        *
*                                                                     *
*MODULE NAME - IGG019KY                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM CHAN PGM MOD FOR EXTENDED SEARCH, WRITE ADD  *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*
*        VS2 RELEASE 2
*                                                                Y02072
*                                                                YM3029
*
*
*FUNCTION/OPERATION- THIS ROUTINE IS ENTERED FROM 19KM/19KN WHEN A NEW*
*   BLOCK IS TO BE ADDED BUT WILL NOT FIT ON THE CURRENT TRACK. THIS  *
*   ROUTINE INCREMENTS THE DEVICE ADDRESS TO THE NEXT TRACK, AND CHECK*
*   FOR A VALID ADDRESS, ADDRESS WITHIN THE EXTENT AND WITHIN THE     *
*   SEARCH LIMITS.                                                    *
*                                                                     *
*ENTRY POINT- 'IGG019KY' (BEGIN) IS ENTERED FROM 19KM/19KN BY THE     *
*   CALLING SEQUENCE,   L    15,DCBDFOR                               *
*                       L    15,4(15)                                 *
*                       BALR 12,15                                    *
*                                                                     *
*INPUT- THE FOLLOWING REGISTERS ARE LOADED BY IGG019KM/IGG019KN       *
*   1 - IOB ADDRESS                                                   *
*   11- ADDRESS OF THE CORRECT ENTRY IN THE DIRECT ACCESS DEVICE TABLE*
*                                                                     *
*OUTPUT- THE NEW TRACK ADDRESS WILL BE PLACED IN IOBSEEK FIELD AND    *
*   AN 'EXCP' GIVEN TO RESTART THE CHANNEL PROGRAM. IF NO TRACK       *
*   ADDRESS CAN BE ASSIGNED, THIS ROUTINE RETURNS TO 19KM/19KN TO SET *
*   THE ABNORMAL COMPLETION INDICATION.                               *
*                                                                     *
*EXTERNAL ROUTINE- 'IGG019LC' (END-OF-EXTENT APPENDAGE) IS ENTERED IF *
*   THE NEW TRACK ADDRESS IS NOT WITHIN THE CURRENT EXTENT.           *
*                                                                     *
*EXIT-NORMAL- 'EXIT3' IS THE POINT AT WHICH AN 'EXCP' IS GIVEN AND    *
*   A RETURN TO SUPERVISOR EFFECTED BY USE OF THE 'EXIT' SVC.         *
*                                                                     *
*EXIT-ERROR- 'EXIT2' IS THE RETURN TO 19KM/19KN WHEN THE SEARCH LIMIT *
*   HAS BEEN REACHED. 19KM/19KN WILL SET INDICATIONS OF ABNORMAL      *
*   COMPLETION, NO-SPACE-FOUND.                                       *
*                                                                     *
*TABLES/WORK AREAS- THE DIRECT ACCESS DEVICE TABLE (DADT) IS USED TO  *
*   DETERMINE THE PHYSICAL CHARACTERISTICS OF THE CURRENT DEVICE.     *
*                                                                     *
*ATTRIBUTES- THIS ROUTINE IS REUSABLE, EXECUTED ENABLED WITH THE      *
*   PROTECT KEY OF THE PROBLEM PROGRAM.                               *
*                                                                     *
*                                                                     *
*
         EJECT
*
*  REGISTER USAGE
*
         USING IGG019KY,EPREG
         USING IOBDEF,IOBREG
         USING DEBDEF,DEBREG
*
WKREG    EQU   1                        WORK REGISTER
WKREG1   EQU   7                        DADT ENTRY FOR THIS DEVICE
DEBREG   EQU   8                        DEB ADDRESS
WKREG2   EQU   9                        WORK REGISTER/CCHH INDEX
WKREG3   EQU   11                       WORK REGISTER
IOBREG   EQU   12                       IOB ADDRESS
INTRET   EQU   14                      INTERNAL LINKAGE REGISTER
EPREG    EQU   15        ENTRY POINT/BASE
*
EXIT     EQU   3         SVC CODE FOR 'EXIT'
*
*
BEGIN    MVC   IOBCSW(4),MAXCC(WKREG1)  MOVE TOTAL CCHH VALUES TO IOB
         MVC   IOBCSW+4(4),IOBSEEK+3    MOVE CCHH FOR ALIGNMENT
         MVI   IOBSEEK+7,0             ZERO OUT R OF IOBSEEK
         L     DEBREG,IOBDCBPT          SET POINTER TO
         L     DEBREG,DCBDEBAD(0,DEBREG) THE DEB AND TO THE
         SR    WKREG3,WKREG3             CURRENT
         IC    WKREG3,IOBSEEK            EXTENT
         SLL   WKREG3,4                  IN THE DEB
         AR    WKREG3,DEBREG
*
         LA    IOBREG,0(0,IOBREG)      CLEAR THE HI-ORDER BYTE TO ZERO
         LA    WKREG2,3(0,IOBREG)       SET CCHH INDEX TO LAST H
         L     WKREG,IOBCSW+4           LOAD SEEK ADDRESS CCHH TO AN
         TM    BYTEDEV(WKREG1),BYTE     ARE ADDRESS BYTES CONTIGUOUS
         BZ    DOWNONE                  BRANCH IF CONTIG ADDRESS BYTES
*                                                          ACCUMULATOR
ADDONE   AH    WKREG,ONE                ADD ONE TO SOME BYTE OF CCHH
         TM    BYTEDEV(WKREG1),BYTE     IF THIS DEVICE HAS NON-
         BC    1,USEBYTE                 CONTIGUOUS BYTES, BRANCH
         STH   WKREG,IOBCSW-IOBDEF+4(0,WKREG2) STORE NEW CC OR HH VALUE
         CLC   IOBCSW-IOBDEF+4(2,WKREG2),IOBCSW-IOBDEF(WKREG2)
*                                      IS THE NEW CC OR HH VALID VALUE
         BC    4,TSTEXT                  IF OK, GO TEST EXTENT LIMIT
         SRL   WKREG,16                 SHIFT TO NEXT VALUES
         MVC   IOBCSW-IOBDEF+4(2,WKREG2),ZERO  ZERO THESE TWO BYTES
         BCTR  WKREG2,0                 DECREMENT INDEX TO
DOWNONE  BCTR  WKREG2,0                  THE NEXT VALUE
         CR    WKREG2,IOBREG            HAS ALL OF CCHH BEEN INCREMENTD
         BC    10,ADDONE                 NO, REPEAT LOOP
*
EXIT1    L     EPREG,DEBAPPAD           LOCATE END-OF-EXTENT MODULE
         L     EPREG,EOE(0,EPREG)        FROM THE APPENDAGE LIST
         BC    15,4(0,EPREG)            AND GO THERE
*
USEBYTE  EQU   *
         STC   WKREG,IOBCSW-IOBDEF+4(0,WKREG2)  STORE NEW BYTE OF CCHH
         SRL   WKREG,8                  SHIFT TO THE NEXT VALUE
         CLC   IOBCSW-IOBDEF+4(1,WKREG2),IOBCSW-IOBDEF(WKREG2)
*                                      CHECK VALIDITY OF NEW BYTE
         BC    4,TSTEXT                 IF OK, GO TEST EXTENT LIMIT
         MVI   IOBCSW-IOBDEF+4(WKREG2),0  ZERO THIS BYTE OF CCHH
         BC    15,DOWNONE               GO SEE IF ALL BYTES PROCESSED
*
TSTEXT   MVC   IOBSEEK+3(4),IOBCSW+4    MOVE NEW CCHH BACK TO SEEK ADDR
         CLC   IOBSEEK+3(4),DEBENDCC-DEBDEF(WKREG3)  IF THE NEW CCHH
*                                       IS OUTSIDE OF THE CURRENT
         BC    2,EXIT1                  EXTENT, GO TO THE END-OF-EXTENT
*                                       MODULE.
         CLC   IOBSEEK,IOBUPLIM         HAS SEARCH LIMIT BEEN REACHED
EXIT2    BC    8,4(0,INTRET)           YES, RETURN TO SET NO-SPACE-
*                                        FOUND BIT
EXIT3    EQU   *
         BR    INTRET
*
*
*
ONE      DC    H'1'      ONE
ZERO     DC    H'0'      ZEROS
MAXCC    EQU   0         TOTAL CYLINDERS AND TRACKS(CCHH) IN DADT
BYTEDEV  EQU   9         OFFSET IN DADT TO THE FLAG BYTE
BYTE     EQU   2         DADT FLAG- BYTES OF CCHH ARE NON-CONTIGUOUS
*
EOE      EQU   0         OFFSET TO EOE ADDRESS IN APPENDAGE LIST
*
DCBDEBAD EQU   44        OFFSET TO DEB ADDRESS IN THE DCB
DCBDFOR  EQU   92        OFFSET TO SELF-FORMAT MODULE ADDRESS IN DCB
MODID    DC    C'IGG019KY'              MODULE ID                Y02072
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
*      I/O BLOCK (IOB) DEFINITION
*
*              STANDARD IOB
         DS    0F
IOBDEF   DSECT
IOBFLAG1 DS    CL1            STATUS FLAG
IOBFLAG2 DS    CL1            ERROR FLAG
IOBSENSE DS    CL2            SENSE BYTES 0 AND 1
IOBECBPT DS    CL4            ECB POINTER
IOBCSW   DS    0CL8           CHANNEL STATUS WORD
IOBCSWCA DS    0CL4           COMMAND ADDRESS
         DS    CL1
         DS    CL3
IOBCSWST DS    CL2            STATUS BYTES
IOBCSWCT DS    CL2            REMAINING COUNT
IOBSTART DS    0CL4           CHANNEL PROGRAM POINTER
IOBSIOCC DS    CL1            SIO CONDITION CODE
         DS    CL3
IOBDCBPT DS    0CL4           DCB POINTER
IOBWGHT  DS    CL1            CHANNEL WEIGHT
         DS    CL3
IOBRESTR DS    0CL4           RESTART POINTER
         DS    CL1
         DS    CL3
IOBINCAM DS    CL2            BLOCK COUNT INCREMENT AMOUNT
IOBERRCT DS    CL2            ERROR COUNTER
IOBSEEK  DS    CL8            SEEK ADDRESS
*        BDAM EXTENDED IOB
*
IOBDBYTR DS    CL2            BYTES REMAINING ON TRACK
IOBDIOBS DS    CL2            SIZE OF THIS IOB
IOBDPLAD DS    0CL4           IOB POOL LINK ADDRESS
IOBDAVLI DS    CL1            IOB AVAILABILITY INDICATOR
         DS    CL3
IOBDTYPE DS    CL2            TYPE FIELD
IOBDSTAT DS    CL2            IOB STATUS
IOBDCPND DS    CL4            CHANNEL PROGRAM NORMAL END ADDRESS
IOBDBYTN DS    CL2            BYTES NEEDED BY NEW RECORD
         DS    CL2
IOBDQPTR DS    CL4            LINK FIELD FOR QUEUED IOB'S
IOBUPLIM DS    CL8            LIMIT MBBCCHHR FOR EXTENDED SEARCH
IOBDNRCF DS    CL8            COUNT FIELD FOR NEW RECORD
IOBCP    DS    CL8            FIRST CCW IN CHANNEL PROGRAM
         EJECT
*
*      DATA EXTENT BLOCK (DEB) DEFINITION
*
DEBDEF   DSECT
         DS    0F
DEBNMSUB DS    0CL1      NO. OF SUBR. LOADED BY OPEN
DEBTCBAD DS    CL4       ADDRESS OF THE TCB FOR THIS DEB
DEBAMLNG DS    0CL1      NO. OF BYTES IN THE ACCESS MTHD. DPDT. SECTION
DEBDEBAB DS    CL4       ADDRESS OF THE PREVIOUS DEB IN THE SAME TASK
DEBOFLGS DS    0CL1      DATA SET STATUS FLAGS
DEBIRBAD DS    CL4       IRB ADDRESS
DEBOPATB DS    0CL1      TYPE OF FILES
DEBSYSPG DS    CL4       ADDRESS OF FIRST IOB IN THE SYSTEM PURGE CHAIN
DEBNMEXT DS    0CL1      NUMBER OF EXTENTS SPECIFIED IN THE DSCB
DEBUSRPG DS    CL4       ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN
DEBPRIOR DS    0CL1      ALWAYS ZERO
DEBECBAD DS    CL4       ECB ADDRESS FOR SVC PURGE REQUEST
DEBPROTG DS    0CL1      RESERVED FOR FUTURE USE (FIRST 4 BITS)
DEBDEBID DS    0CL1      HEX 'F' TO IDENTIFY THIS BLOCK AS A DEB
DEBDCBAD DS    CL4       ADDRESS OF THE DCB ASSOCIATED WITH THIS DEB
DEBEXSCL DS    0CL1      EXTENT SCALE
DEBAPPAD DS    CL4       ADDRESS OF I/O APPENDAGE VECTOR TABLE
DEBDVMOD DS    0CL1      DEVICE MODIFIER FILE MASK
DEBUCBAD DS    CL4       ADDR OF UCB ASSOCIATED WITH THIS DATA EXTENT
DEBBINUM DS    CL2       RESERVED FOR FUTURE USE-ALWAYS ZERO
DEBSTRCC DS    CL2       STARTING CYLINDER NUMBER FOR EXTENT
DEBSTRHH DS    CL2       STARTING HEAD NUMBER FOR EXTENT
DEBENDCC DS    CL2       ENDING CYLINDER NUMBER FOR EXTENT
DEBENDHH DS    CL2       ENDING HEAD NUMBER FOR EXTENT
DEBNMTRK DS    CL2       NUMBER OF TRACKS ALLOCATED TO A GIVEN EXTENT
DEBSUBID EQU   0         SUBROUTINE ID'S
         END
