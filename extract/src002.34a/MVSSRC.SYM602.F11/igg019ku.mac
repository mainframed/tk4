   TITLE 'IGG019KU - BDAM CHANNEL END/ABNORMAL END APPENDAGES'
IGG019KU CSECT
*MODULE NAME = IGG019KU                                               *
*                                                                     *
*DESCRIPTIVE NAME = BDAM CHANNEL END/ABNORMAL END APPENDAGES          *
*                                                                     *
*COPYRIGHT = NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*          RELEASE 20 CHANGES/DELETIONS
*1775024020,024080-024120                                        A33185
*          RELEASE 21 CHANGES/DELETIONS
*2683020450-020500                                              SA53130
*2683020500                                                      M0133
*2683029000,029800                                               M0055
*2683024118                                                      A40946
*                                                               SA53271
*2683020000                                                      21905
*                                                               SA53862
*                                                               SA62422
*        VS1-1 CHANGES/DELETIONS
*        VS2-1 CHANGES/DELETIONS
*        VS1-2 CHANGES/DELETIONS
*        VS2-2 CHANGES/DELETIONS
*012600,013800,014120,019800,029000-039800                       Y02072
*                                                                YM3857
*                                                                YM4606
*                                                                YM2862
*                                                                YM5762
*                                                                YM5947
*        VS2-3 CHANGES/DELETIONS
*020040-020060,021664-021666,021669,021672,021675,021681,      @OZ04942
*022383,022419,023075,024683,024690,026412,026930-027784,      @OZ04942
*027796-027804,027810,027831-027851,028000-028046,             @OZ04942
*040420-040520                                                 @OZ04942
*020024,022378,022413,023068,023076-023129,024682,024700        OZ04733
*023130-023132,026890-026898                                    OZ02226
*STATUS CHANGE LEVEL 6/12/75
*
*FUNCTION/OPERATION- THIS MODULE CONTAINS THE BDAM CHANNEL END AND    *
*   ABNORMAL (EXCEPTIONAL) END IOS APPENDAGES. THE MODULE IS ALWAYS   *
*   LOADED WHEN BDAM IS USED AND ALLOWS BDAM TO DETERMINE THE ACTION  *
*   TO BE TAKEN ON UNIT EXCEPTION, INCORRECT LENGTH, FIRST OCCURRENCE *
*   OF AN ERROR, PERMANENT ERROR, OR NORMAL CHANNEL END.              *
*                                                                     *
*ENTRY POINTS- 'IGG019KU' (BEGIN) IS ENTERED BY IOS WITH A CALLING    *
*   SEQUENCE,  L    15,12(APPENDAGE LIST)                             *
*              BALR 14,15                                             *
*   THE CAUSE OF ENTRY AND ACTION TAKEN IS AS FOLLOWS,                *
*   1.NORMAL CHANNEL END- SCHEDULE ASYNCHRONOUS INTERRUPT (ASI)       *
*            IF ADDITIONAL PROCESSING IS REQUIRED                     *
*            OR POST USERS DECB COMPLETE                              *
*            OR IN CERTAIN CASES, CHANGE IOBSTART AND RESTART         *
*   2.UNIT EXCEPTION- SET END-OF-DATA-SET EXCEPTION CODE, SCHEDULE ASI*
*   3.INCORRECT LENGTH- IF READING FORMAT V, RESET THE ERROR FLAGS IF *
*     LENGTH IS CORRECT, SCHEDULE ASI. IF LENGTH IS INCORRECT, RETURN *
*     TO IOS. IF READING FORMAT U, RESET THE ERROR FLAGS, SCHEDULE ASI*
*     IF READING FORMAT F OR WRITING ANY FORMAT, RETURN TO IOS.       *
*                                                                     *
*   'IECDCEB' IS ENTERED BY IOS WITH A CALLING SEQUENCE,              *
*   L    15,16(APPENDAGE LIST)                                        *
*   BALR 14,15                                                        *
*   THE CAUSE OF ENTRY AND ACTION TAKEN IS AS FOLLOWS,                *
*   1.FIRST OCCURRENCE OF AN ERROR- RETURN TO IOS (ERROR RETRY)       *
*        UNLESS FIXED WRITE ADD. IN THIS CASE TURN OFF ERROR
*        FLAGS AND RESTART, ENSURING ENTRY AGAIN IF NEW ERROR
*        OCCURS OR SAME ERROR REOCCURS. IF SAME ERROR REOCCURS
*        8 TIMES, SET PERMANENT ERROR FLAGS AND SCHEDULE ASI.
*   2.PERMANENT ERROR- SET ABNORMAL COMPLETION CODE, SCHEDULE ASI     *
*                                                                     *
*INPUT- THE FOLLOWING REGISTERS ARE USED AS POSITIONED BY IOS,        *
*   1- ADDRESS OF THE RQE                                             *
*   2- ADDRESS OF THE IOB ASSOCIATED WITH THIS I/O REQUEST            *
*   4- DCB ADDRESS                                                    *
*  13- IOS SAVEAREA ADDRESS                                           *
*  14- RETURN (NORMAL) TO IOS                                         *
*  15- ENTRY POINT IN THIS MODULE                                     *
*                                                                     *
*OUTPUT- THIS ROUTINE MAY SET EXCEPTION CODES IN THE IOB FOR THE      *
*   ASYNCHRONOUS INTERRUPT ROUTINE.                                   *
*                                                                     *
*EXTERNAL ROUTINES- 'IEA0EF00' IS ENTERED TO SCHEDULE ASI.            *
*                                                                     *
*EXITS- 'CEEXIT1','CEEXIT2', 'CEEXIT3' ARE ALL NORMAL RETURNS TO IOS  *
*   FROM THE CHANNEL END APPENDAGE. THE INCORRECT LENGTH INDICATION   *
*   REMAINS ON.                                                       *
*        'XCEEXIT1' IS A RETURN TO IOS FROM ABNORMAL END APPENDAGE.   *
*   AN ERROR HAS OCCURRED BUT THE OPERATION WILL BE RETRIED.          *
*        'XCEEXIT2' IS THE EXIT TO IEA0EF00 TO SCHEDULE ASI.          *
*   IEA0EF00 WILL RETURN TO IOS WITH IGNORE OFFSET.                   *
*                                                                     *
*TABLES/WORK AREAS- THE COMMUNICATION VECTOR TABLE IS A RESIDENT      *
*   VECTOR LIST USED TO LOCATE THE ROUTINE, IEA0EF00.                 *
*                                                                     *
*ATTRIBUTES- THESE ROUTINES ARE EXECUTED ENABLED AND PRIVILEGED AND   *
*   ARE REENTRANT. THEY ARE ENTERED IN KEY 0 WITH THE LOCAL LOCK HELD.*
*   A MODESET WILL BE ISSUED TO DO ALL PROCESSING IN USER KEY.        *
*                                                                     *
*NOTE- THIS ROUTINE RELIES ON THE REGISTER USAGE OF IOS.              *
*      REGISTER 13, ON ENTRY, POINTS TO THE IOS SAVEAREA WHERE
*      ALL IOS REGISTERS WILL BE SAVED.
*
*
         USING IGG019KU,BASE
         USING IOBSTDRD,IOBREG                                   Y02072
         USING RQE,RQEREG                                        Y02072
         USING IHADCB,DCBREG
         USING UCB,UCBREG
*
*  REGISTER USAGE
*
R0       EQU   0                        PARAMETER REGISTER       Y02072
RQEREG   EQU   1                        BASE REG FOR RQE         Y02072
IOBREG   EQU   2                        IOB ADDRESS (FROM IOS)
WORK5    EQU   2                        PASSES IOSKEY TO MODESET Y02072
DCBREG   EQU   4                        DCB ADDRESS (FROM IOS)
WORK2    EQU   5                        WORK REGISTER            Y02072
WRAPREG  EQU   6                        USED FOR DECREMENTING  @OZ04942
UCBREG   EQU   7                        PTR TO UCB FROM IOS     SA53271
LINKREG  EQU   9                        INTERNAL LINKAGE REG     Y02072
SWAREG   EQU   10                                                M0055
WORK4    EQU   10                       WORK REGISTER           SA53271
LNGREG   EQU   11                       WORK REGISTER
WORK3    EQU   11                       WORK REGISTER           SA53271
WORK1    EQU   12                       WORK REGISTER             24512
SAVEREG  EQU   13                       IOS SAVEAREA REGISTER    Y02072
RETREG   EQU   14                       RETURN TO IOS
BASE     EQU   15                       BASE - ENTRY POINT
R15      EQU   15                       SAVE/RESTORE REG         Y02072
*
*
*
*
BEGIN    B     IECDCEA                  BRANCH AROUND XCE ADCON
XCEAD    DC    A(IECDCEB-BEGIN)         ADDRESS OF XCE ROUTINE
*
IECDCEA  EQU   *                        CHK IF THIS NORMAL END   Y02072
         STM   R0,R15,0(SAVEREG)        SAVE REGISTERS FROM IOS  Y02072
         L     WRAPREG,WRAPBASE         SET UP FOR DECREMENTS  @OZ04942
         USING WRAPDECR,WRAPREG                                @OZ04942
         BZ    NORMEND                  BR IF THIS IS NORMAL END Y02072
         BAL   LINKREG,ECBCHK           BR TO CK FOR ECB PTR     Y02072
         TM    IOBSTBYT,CSWUNEXP        TEST FOR END OF DATA SET Y02072
         BO    SETEODS                  BR YES TO SET DECB CODE BIT
*
*    ANALYZE INCORRECT LENGTH ERROR
*
         TM    IOBDTYP2,IOBRQUST        WAS THIS A READ REQUEST  Y02072
CEEXIT1  BZ    CEEXIT3                  NO, LET ERROR CODE STAND Y02072
*
         TM    DCBRECFM,DCBRECL         IS RECORD FORMAT 'U'
         BM    TSTV                     NO, GO TEST FURTHER.
*
RESET    NI    IOBFLAG1,X'FF'-IOBIOERR  CLEAR ANY LENGTH ERROR FOR A
         NI    IOBSTBYT+1,X'FF'-CSWINCOR  READ TO FORMAT 'U' DATA SET.
         B     SCHASI                   SCHEDULE ASYNCHRONOUS INTERRUPT
*
TSTV     TM    DCBRECFM,DCBRECV         IF FORMAT IS 'F'
CEEXIT2  BZ    CEEXIT3                  LET THE ERROR CODE STAND
*
         L     WORK1,IOBCSW-1           GET ADDRESS OF READ DATA Y02072
*                                       CCW                      21905
         LA    WORK1,WRAP-CCWLEN(WORK1)  GET ADDR OF ERROR CCW @OZ04733
         USING CCW,WORK1                                         21905
         LH    LNGREG,CCWBYTE           GET LENGTH IN CCW        21905
         L     WORK1,CCWADDRA           LOAD BUFFER ADDR        SA53862
         DROP  WORK1                                             21905
         SH    LNGREG,IOBCSW+5          MINUS REMAINING BYTE CT  Y02072
         SR    WORK4,WORK4              CLEAR REGISTER          SA62422
         IC    WORK4,0(WORK1)           GET 1ST BYTE OF BDW     SA62422
         SLL   WORK4,8                  MOVE IT LEFT ONE BYTE   SA62422
         IC    WORK4,1(WORK1)           GET 2ND BYTE OF BDW     SA62422
         CR    LNGREG,WORK4             ARE BYTES READ SAME AS  SA62422
         BE    RESET                    LENGTH. IF EQUAL, NO ERROR.
         B     CEEXIT3                  BR TO LET ERROR STAND    Y02072
***********************************************************************
*                  END OF DATA CONDITION
**********************************************************************
SETEODS  EQU   *
         TM    IOBDTYPE,IOBEXTSC       IS THIS EXTENDED SRCH     Y02072
         BNO   SETEODS1                NO, GO SET EOD EXCEPT    SA53271
         TM    IOBDTYP2,IOBADDTY       IS THIS WRITE ADD REQ    SA53271
         BNO   SETEODS1                NO, GO SET EOD EXCEPT    SA53271
         MVI   IOBR,X'00'              BEGIN WITH R0 NEXT TRK    Y02072
         SR    WORK1,WORK1             CLEAR REGISTER           SA53271
         IC    WORK1,IOBHH1            PICK UP 1ST BYTE OF HH    Y02072
         SLL   WORK1,8                 MV IT TO 2ND BYTE IN REG SA53271
         IC    WORK1,IOBHH2            PICK UP 2ND BYTE OF HH    Y02072
         LA    WORK1,1(0,WORK1)        BUMP TO NEXT TRACK       SA53271
*     *     *     *     *     *     *     *     *     *     *     *   *
*                    IS NEXT TRACK VALID ON THAT DEVICE
*     *     *     *     *     *     *     *     *     *     *     *   *
         L     WORK2,CVTPTR(0,0)       PICK UP CVT PTR          SA53271
         USING CVT,WORK2                                        SA53271
         L     WORK2,CVTZDTAB          LOAD ADDR TO DEVICE TAB  SA53271
         USING DVCTI,WORK2                                     @OZ04942
         LA    WORK3,DVCTYPMK           SET UP TYPE MASK       @OZ04942
         N     WORK3,UCBTYP             GET UNIT TYPE          @OZ04942
         IC    WORK3,DVCTIOFF(WORK3)    GET OFFSET FROM INDEX  @OZ04942
         AR    WORK3,WORK2              POINT TO CORRECT ENTRY @OZ04942
         USING DVCT,WORK3                                      @OZ04942
         CH    WORK1,DVCTRK             ARE THERE THIS MANY    @OZ04942
*                                      TRACKS ON THE CYLINDER
         BNL   NEWCYL                  IF NOT, GO TO NEXT CYL   SA53271
         STC   WORK1,IOBHH2            ELSE STORE NEW TRK VALUE  Y02072
         SRL   WORK1,8                 IN SEARCH ADDR AND RET   SA53271
         STC   WORK1,IOBHH1            TO IOS TO RESTART THE     Y02072
         B     RESTARTA                CHANNEL PROGRAM           Y02072
         DROP  WORK2,WORK3                                     @OZ04942
*     *     *     *     *     *     *     *     *     *     *     *   *
*                    BUMP TO NEXT CYLINDER
*     *     *     *     *     *     *     *     *     *     *     *   *
NEWCYL   SR    WORK1,WORK1             CLEAR REG                SA53271
         IC    WORK1,IOBCC1            PICK UP 1ST BYTE OF CC    Y02072
         SLL   WORK1,8                 MV IT TO 2ND BYTE OF REG SA53271
         IC    WORK1,IOBCC2            PICK UP 2ND BYTE OF CC    Y02072
         LA    WORK1,1(0,WORK1)        BUMP CYLINDER BY ONE     SA53271
         STC   WORK1,IOBCC2            RETURN CYLINDER VALUE     Y02072
         SRL   WORK1,8                 TO IOBSEEK BUMPED BY 1.  SA53271
         STC   WORK1,IOBCC2            IF CYL VALUE NOT VALID    Y02072
*                                      EOE CONDITION RESULTS, WHICH
*                                      IS NECESSARY TO WRAP AROUND DS
         XC    IOBHH1(L'IOBHH),IOBHH1  START WITH TRK0           Y02072
         B     RESTARTA                 BR TO RESTART CHAN PGM   YM3857
***********************************************************************
SETEODS1 EQU   *                                                SA53271
         OI    IOBSTAT2,DECCCEOD        SET EOD EXCEPT CODE      Y02072
         B     SETABN                   MARK IOB AS ABNORMAL COMP.
*
***********************************************************************
*
*
*
*  THE FOLLOWING LOGIC APPLIES TO FIXED FORMAT WRITE ADD REQUESTS
*  WHICH ENCOUNTERED AN ERROR DURING THE SEARCH FOR A DUMMY RECORD
*  BUT BEFORE THE DATA BYTE(RECORD NO.) FROM A DUMMY RECORD WAS
*  READ INTO CORE. AN ERROR IN THIS PART OF THE CHANNEL PROGRAM
*  CAUSED THE ABNORMAL END APPENDAGE TO BE ENTERED. BECAUSE THE
*  ERP-IN-CONTROL BIT IS THEN TURNED ON, PREVENTING SUBSEQUENT
*  ENTRY INTO THE ABNORMAL END APPENDAGE (AND HENCE ANY ADJUST-
*  MENT TO THE CH PGM OR IOBSTART BEFORE RESTART, SHOULD THE ERROR
*  FOLLOW THE WRT KEY/DATA), THE CHANNEL PGM IS BROKEN UP SO THAT
*  THE CHAN PGM ENDS ONCE THE DUMMY RECORD IS IDENTIFIED. AT CHAN
*  END TIME (I.E. AT THIS POINT), THE IOBSTART IS ALTERED TO POINT
*  TO A SECOND PORTION OF THE CHANNEL PROGRAM WHICH VERIFIES THAT
*  THE IDENTIFIED DUMMY RECORD IS STILL A DUMMY BEFORE EXECUTING
*  WRT KEY AND DATA. THIS CHANGE IS REQUIRED AS OF VS2-2 BECAUSE
*  OF A CHANGE IN IOS WHEREBY DEVICE LOCKOUT NO LONGER EXISTS
*  WHEN THE ERPS ARE IN CONTROL. AS A RESULT, IT IS POSSIBLE THAT
*  ANOTHER CHANNEL PROGRAM WAS STARTED, FINDING AND UPDATING
*  THE SAME DUMMY RECORD WHILE THIS CHANNEL PROGRAM WAS RECOVER-
*  ING FROM AN ERROR.
*
*
NORMEND  EQU   *                        CHK IF WA FIXED- NORMAL  YM3857
         BAL   LINKREG,ECBCHK           BR TO CK FOR ECB PTR     Y02072
         TM    IOBDTYP2,IOBADDTY        IS REQ FOR WRITE ADD     YM3857
         BNO   CONTINUE                 NO, CONTINUE TESTS       YM3857
         TM    DCBRECFM,DCBRECV         IS RECFM FIXED           YM3857
         BO    SCHASI                   NO, SCHEDULE ASI       @OZ04942
         LA    WORK2,WRAP-WRKLEN(IOBREG) IOB - WORKLEN         @OZ04733
         AH    WORK2,IOBDIOBS           + IOBLENG -> WRKAREA   @OZ04942
         USING WRKIOB,WORK2             SET UP WORKAREA BASE     YM3857
         L     WORK1,IOBCSW-1           GET ADDR OF CP STOP      YM3857
         LA    WORK1,WRAP-CCWLEN(WORK1)  BACK UP TO LAST CCW   @OZ04733
         USING CCW,WORK1                                       @OZ04942
         C     WORK1,WRKCCAD            WAS THIS CHAN PGM        YM3857
*                                       BROKEN UP BY ABN END     YM3857
*                                       (DID IT STOP ON RD/RS?)  YM3857
         BNE   CHECKNOP                 NO, CONTINUE CHECKING    YM3857
         OI    CCWFLGS,CCWCC            RE-COMMAND CHAIN IN CASE YM2862
*                                       CP WAS DISCONNECTED      YM2862
         MVC   IOBSTART,WRKSTRT2        SET UP IOBSTART TO PART  YM3857
*                                       OF CH PGM THAT WILL      YM3857
*                                       REVERIFY THAT KEY =FF    YM3857
         MVC   IOBCCHHR,IOBDNCRF+2      UPDATE SEEK TO SRCH      YM4606
*                                       BEGINNING WITH DUMMY REC YM4606
         MVI   IOBR,0                   BEGIN WITH R0            YM2862
         TM    DCBOPTCD,DCBOPTTO        IS THIS TRK OVERFLO      YM5762
         BNO   RESTARTA                 NO, GO REEXCP            YM5762
         L     WORK1,IOBSTART           YES, GET 1ST CCW ADDR    YM5762
         CLI   CCWCOMCD,SETSECT         IS THIS RPS CP           YM5762
         BNE   RESTARTA                 NO, GO REEXCP            YM5762
         L     WORK1,CCWADDRA           YES, GET SECTOR ADDR     YM5762
         MVI   0(WORK1),RPSNOP          CHANGE SECTOR TO NOP,FF  YM5762
         B     RESTARTA                 BR TO RESTART CHAN PGM   YM3857
*
CHECKNOP EQU   *                        WAS DUMMY STILL THERE    YM3857
         CLI   CCWCOMCD,NOP             DID C.P. END ON NOP?     YM3857
         BNE   SCHASI                   NO, THIS IS NOT SPECIAL@OZ04942
         CLI   CCWCOMCD+L'CCW,RDHA      YES,WAS IT IN 2ND PART   YM5762
*                                       OF CP THAT VERIFYS KEY   YM3857
         BNE   SCHASI                   NO, CONTINUE PROCESSING@OZ04942
         MVC   IOBCCHHR,IOBDNCRF+2      UPDATE SEEK TO SRCH      YM4606
*                                       BEGINNING WITH DUMMY REC YM4606
         MVI   IOBR,0                   BEGIN WITH R0            YM2862
         LA    WORK1,IOBCHNPR           GET BEG OF CP ADDR       YM3857
         ST    WORK1,IOBSTART           SET UP IOBSTART TO BEG   YM3857
         B     RESTARTA                 BR TO RESTART CHAN PGM   YM3857
         DROP  WORK1                                           @OZ04942
*
CONTINUE EQU   *                        CONTINUE TESTING         YM3857
***********************************************************************
*        DETERMINE WHETHER ASYNCHRONOUS ROUTINE IS NEEDED
***********************************************************************
*        NOTE: THIS CODE IS NEVER ENTERED FOR WRITE ADD
         TM    DCBRECFM,DCBRECV+DCBRECSB  IF RECFM=VS          @OZ04942
         BO    SCHASI                     THEN USE ASI         @OZ04942
         CLI   IOBDAYLI,0               IF IOB NOT YET IN POOL @OZ04942
         BE    SCHASI                   THEN USE ASI           @OZ04942
         TM    IOBDTYPE,IOBDYNBF                               @OZ04733
*                                       IF DYNAMIC BUFFERING OR
*                                       READ EXCLUSIVE OR FEEDBACK
         BNZ   SCHASI                   THEN USE ASI           @OZ04942
         TM    IOBDTYPE,IOBRDEXC        IF NO EXCL CONTROL     @OZ04733
         BZ    CONT2                    THEN SKIP NEXT TESTS   @OZ04733
         TM    IOBDTYP2,IOBRQUST        IF WRITE RELEASE       @OZ04733
         BZ    SCHASI                   THEN USE ASI           @OZ04733
         TM    IOBSTAT2,IOBENQUE        IF CONTROL NOT GOTTEN  @OZ04733
         BZ    SCHASI                   THEN USE ASI           @OZ04733
CONT2    EQU   *                        CONTINUE PROC          @OZ04733
         CLC   IOBDCPND+SKPHIBYT(CMP3BYTS),IOBCSW     WAS       OZ02226
*                                       CHAN PROGRAM FINISHED?  OZ02226
         BNE   SCHASI                   NO - USE ASI            OZ02226
         L     WORK3,IOBECBPT           GET DECB/ECB           @OZ04942
         USING DECB,WORK3               ADDRESSIBILITY         @OZ04942
***********************************************************************
*        PROVIDE FEEDBACK AS REQUIRED
***********************************************************************
         TM    IOBDTYPE,IOBFDBCK        IF NO FEEDBACK         @OZ04942
         BZ    POST1                    THEN BYPASS THIS PART  @OZ04942
         TM    DCBOPTCD,DCBOPTF         IF ACTUAL FEEDBACK     @OZ04942
         BZ    FDBK1                    THEN GO MOVE IT        @OZ04942
         TM    IOBDTYPE,IOBACTAD        IF NOT ACTUAL ADDRESS  @OZ04942
         BNO   SCHASI                   THEN USE ASI TO CONVERT@OZ04942
FDBK1    L     WORK1,DECRECPT           FIND FDBK AREA         @OZ04942
         USING FDBKAREA,WORK1                                  @OZ04942
         MVC   FDBKMBB,IOBSEEK          MOVE IN MBB            @OZ04942
         MVC   FDBKCHR,IOBDNCRF+2       MOVE IN CCHHR          @OZ04942
         DROP  WORK1                                           @OZ04942
         EJECT
***********************************************************************
*        RELEASE IOB AND POST ECB
*        FOLLOWING IS THE REGISTER USAGE ON POST BRANCH ENTRY:
*        R0-R9         SAVED
*        R10 (WORK4)   POST CODE
*        R11 (WORK3)   ECB POINTER
*        R12-R13       UNUSED
*        R14 (RETREG)  RETURN ADDRESS
*        R15 (BASE)    ENTRY POINT
***********************************************************************
*        ECB POINTER IS ALREADY IN WORK3
POST1    SR    WORK4,WORK4              SET UP COMPLETION      @OZ04942
         ICM   WORK4,B'0100',IOBSTAT2   CODE FOR POST          @OZ04942
         TM    DCBMACRF,DCBMRCK         IF USING CHECK         @OZ04942
         BO    POST2                    KEEP IOB TILL THEN     @OZ04942
         MVI   IOBDAYLI,0               ELSE MAKE AVAILABL NOW @OZ04942
         DROP  IOBREG                   CANNOT USE IOB         @OZ04942
*                                       ONCE IT IS MADE AVAILABLE
POST2    EQU   *                                               @OZ04942
         USING CVT,WORK2                                       @OZ04942
         L     WORK2,CVTPTR             GO THRU CVT TO         @OZ04942
         L     BASE,CVT0PT01            GET POST ROUTINE PTR   @OZ04942
         DROP  BASE                                            @OZ04942
         MODESET EXTKEY=SUPR            GO INTO SUPERVISOR KEY @OZ04942
         BALR  RETREG,BASE              POST THE ECB           @OZ04942
         LM    R0,R15,0(SAVEREG)        RESTORE EXCP REGS      @OZ04942
         B     NOPOST(RETREG)           RETURN,BYPASSING POST  @OZ04942
         DROP  WORK2,WORK3                                     @OZ04942
         EJECT
         USING IGG019KU,BASE                                   @OZ04942
         USING IOBSTDRD,IOBREG                                 @OZ04942
***********************************************************************
*
*  THE FOLLOWING ROUTINE IS THE ABNORMAL END APPENDAGE, ENTERED BY IOS
*   ON UNIT CHECK ERROR AND PERMANENT ERROR OF ANY TYPE.
*
***********************************************************************
*
         USING IECDCEB,BASE
*
IECDCEB  STM   R0,R15,0(SAVEREG)        SAVE IOS REGISTERS       Y02072
         L     WRAPREG,WRAPBASE         SET UP FOR DECREMENTS  @OZ04942
         BAL   LINKREG,ECBCHK           BR TO CK FOR ECB PTR     Y02072
*
         CLI   IOBECBCC,ECBNORM         IS THERE A PERM ERROR  @OZ04942
         BNE   SETABN                   YES, GO TO ASYNCH RTN. @OZ04942
         TM    IOBDTYP2,IOBADDTY        WRITE ADD TYPE FIXED     Y02072
         BZ    CEEXIT3                  BRANCH IF NOT WRITE ADD  Y02072
         TM    DCBRECFM,DCBRECV         VARIABLE OR UNDEFINED     24512
         BO    CEEXIT3                  YES, BRANCH              Y02072
*
*
*  THE FOLLOWING LOGIC APPLIES TO FIXED FORMAT WRITE ADD REQUESTS.
*  BECAUSE THE ERP-IN-CONTROL BIT WOULD NORMALLY BE TURNED ON WHEN
*  CONTROL RETURNS TO EXCP/ERPS, THUS PREVENTING REENTRY INTO THIS
*  ABNORMAL END APPENDAGE SHOULD A SECOND ERROR (EG. FILE PROTECT,
*  ON A SEEK CYL WHICH IS NORMAL, OR DATA OVERRUN ON WRT KEY/DATA,
*  WHICH IS NOT) OCCUR BEFORE THE CHANNEL PROGRAM CONCLUDES SUC-
*  CESSFULLY. A PROBLEM EXISTS BECAUSE OF THE INABILITY TO REGAIN
*  CONTROL: IF THIS APPENDAGE IS ENTERED NORMALLY TO CROSS TRACKS
*  OR CYLINDERS DURING CHAN PGM EXECUTION AND ENCOUNTERS AN ERROR
*  LATER WHILE ATTEMPTING TO WRITE DATA, THE ERPS, WHICH WOULD
*  STILL BE IN CONTROL, WOULD AUTOMATICALLY RESTART THE CHANNEL
*  PROGRAM FROM THE BEGINNING. BECAUSE THE KEY WAS WRITTEN BEFORE
*  THE ERROR, THE SAME RECORD IS NO LONGER IDENTIFIED AS THE DUMMY.
*  A NEW DUMMY RECORD IS FOUND AND THE SAME KEY AND DATA ARE
*  WRITTEN, RESULTING IN DUPLICATE KEYS. THE SOLUTION TO THIS PROBLEM
*  IS TO ENSURE THAT THE ABNORMAL END APPENDAGE WILL CONTINUE TO GET
*  CONTROL ON THE OCCURRENCE OF EACH ERROR. THIS IS DONE AS FOLLOWS:
*
*  A) IF THE ERROR OCCURS BEFORE THE DUMMY RECORD IS IDENTIFIED (IE.
*  THE DATA BYTE RECORD NO. IS READ IN) TURN OFF THE COMMAND CHAIN
*  ON THE CCW THAT READS IN THE DATA BYTE (OR ON RD SECTOR FOR RPS),
*  STOPPING THE CHANNEL PROGRAM BEFORE ANYTHING IS WRITTEN. UPDATE
*  IOBSEEK FROM THE IOBDNCRF FIELD SO AS NOT TO REPEAT THE SEARCH
*  ON TRACKS ALREADY SEARCHED AT THIS POINT. AT CHANNEL END TIME
*  THE CHANNEL END APPENDAGE CAN THEN RESTART THE CHANNEL PGM AT A
*  POINT THAT VERIFIES THAT THE IDENTIFIED DUMMY RECORD IS STILL
*  A DUMMY BEFORE WRITING KEY AND DATA, (WHICH ALSO SOLVES AN
*  INTEGRITY PROBLEM EXISTING AS OF VS2-2 -SEE CEA FOR DETAILS).
*
*  B) IF THE ERROR OCCURS AFTER THE DUMMY RECORD HAS BEEN IDENTIFED
*  BUT BEFORE THE KEY OR DATA HAVE BEEN WRITTEN THE ERROR FLAGS ARE
*  TURNED OFF, THE IOBSTART IS CHANGED TO VERIFY THAT THE DUMMY
*  RECORD IS STILL A DUMMY BEFORE WRITING KEY AND DATA AND THE
*  CHANNEL PROGRAM IS RESTARTED. A COUNTER IS KEPT IN THE WORKAREA
*  TO PREVENT AN ENDLESS LOOP. IF THIS PART OF THE CHANNEL PROGRAM
*  EXPERIENCES GREATER THAN 10 ERRORS, PERMANENT ERROR FLAGS ARE
*  SET AND THE ASI IS SCHEDULED.
*
*  C) IF THE ERROR OCCURS AFTER OR DURING THE WRT KEY/DATA, THE
*  IOBSTART IS CHANGED TO EXECUTE ONLY THAT PORTION OF THE CHANNEL
*  PGM WHICH SEARCHES FOR THE RECORD BEING WRITTEN AND REEXECUTES
*  THE WRT KEY/DATA (AND THE WRITE VERIFY CCWS IF SPECIFIED). IN
*  THIS CASE THE ERROR FLAGS ARE NOT CHANGED AS IT IS NOT NECESSARY
*  THAT THE ABNORMAL END APPENDAGE GET CONTROL AGAIN.
*
*  NOTE: THERE IS A WORKAREA FOLLOWING THE IOB WHICH HAS BEEN INIT-
*        IALIZED BY THE PRE-FORMAT MODULE, IGG019KO. IT CONTAINS
*        THE VIRTUAL CHANNEL PGM ADDRESSES OF THE READ DATA, WRT
*        KEY, VERIFY DUMMY CHAN PGM ENTRY, WRT KEY/DATA CHAN PGM
*        ENTRY, ETC.
*
*
         L     WORK1,IOBCSW-1           GET CCW ADDR WHERE       YM3857
         LA    WORK1,WRAP-CCWLEN(WORK1)  INTERRUPT OCCURRED    @OZ04733
         USING CCW,WORK1                                       @OZ04942
         LA    WORK2,WRAP-WRKLEN(IOBREG)  IOB - WRKLEN         @OZ04733
         AH    WORK2,IOBDIOBS           + IOBLEN -> WRKAREA      YM3857
         USING WRKIOB,WORK2             SET UP WORKAREA BASE     YM3857
         SR    WORK4,WORK4              CLEAR WORK REG           YM3857
         LA    WORK3,ERPCOUNT           LOAD 10 AS RETRY MAX     YM3857
         C     WORK1,WRKRDAD            DID ERROR OCCUR ON OR    YM3857
*                                       BEFORE RD DATE OF DUMMY  YM3857
*                                       RECORD ID                YM3857
         BH    CHKMORE                  NO, KEEP LOOKING         YM3857
         TM    IOBSENS1,IOBS1B7         IS OVERFLO INCOMPLETE    YM5947
         BO    RETURN2                  YES, READ IN 1 BYTE FROM YM5947
*                                       OVERFLO REC-GO TO VERIFY YM5947
*
*    INTERRUPT WHILE LOOKING FOR DUMMY RECORD
*
         L     WORK1,WRKCCAD            LOAD ADDR OF RD/RS       YM3857
         TM    CCWFLGS,CCWCC            WAS COM CHAIN TURNED OFF YM3857
         BNO   CEEXIT3                  YES,RETURN FOR ERP RETRY YM3857
         NI    CCWFLGS,X'FF'-CCWCC      TURN OFF CMD CHAIN       YM3857
         NI    IOBFLAG1,X'FF'-IOBIOERR  TURN OFF ERROR FLAG      YM3857
         MVC   IOBCCHHR,IOBDNCRF+2      UPDATE SEEK TO SRCH      YM4606
*                                       BEGINNING WITH DUMMY REC YM4606
         MVI   IOBR,0                   BEGIN WITH R0 FIRST      YM2862
         B     RESTARTA                 BR TO RESTART CH PGM AT  YM3857
*                                       TOP. ERPS WONT RETRY NOW YM3857
*                                       CEA WILL ADJUST IOBSTART YM3857
*                                       TO CONTINUE IF NO ERROR. YM3857
*
CHKMORE  EQU   *                        WHERE DID ERROR OCCUR    YM3857
         C     WORK1,WRKSTRT2           DID ERROR OCCUR IN PART  YM3857
*                                       OF CP THAT VERIFY KEY=FF YM3857
         BL    NOTNEW                   NO,DID NOT STOP IN VERFY YM3857
*
*    INTERRUPT WHILE VERIFYING DUMMY RECORD IS STILL DUMMY
*
         IC    WORK4,WRKCT1             GET ABNE ENTRIES HERE    YM3857
         LA    WORK4,1(WORK4)           ADD 1 TO COUNTER         YM3857
         STC   WORK4,WRKCT1             STORE BACK IN WORKAREA   YM3857
         CR    WORK4,WORK3              IS THIS ENTERED 10 TIMES YM3857
         BL    RETURN                   NO, CONTINUE RETRYING    YM3857
*
         MVI   IOBECBCC,ECBPERR         COULD NOT RECOVER, SET   YM3857
*                                       X'41' IN IOB             YM3857
         B     SETABN                   GO SCHEDULE THE ASI      YM3857
*
RETURN   EQU   *                        LOOPING IN VERIFY SECTN  YM3857
         NI    IOBFLAG1,X'FF'-IOBIOERR  TURN OFF ERROR FLAG      YM3857
         B     RESTARTA                 GO RETRY CHAN PGM        YM3857
*
NOTNEW   EQU   *                        WHERE WAS INTERRUPT      YM3857
         C     WORK1,WRKWKD             DID WRT KEY/DATA         YM3857
*                                       GET EXECUTED             YM3857
         BL    RESETIT                  NO, MUST BE SEEK CYL     YM3857
*
*    INTERRUPT WHILE OR AFTER WRITING KEY AND DATA
*
         MVC   IOBSTART,WRKSTRT3        CHANGE START OF CP ONCE  YM3857
*                                       PART OF KEY WRITTEN      YM3857
         MVC   IOBCCHHR,IOBDNCRF+2      UPDATE SEEK TO SRCH      YM4606
*                                       BEGINNING WITH DUMMY REC YM4606
*                                       (NECESSARY FOR IOS SEEK) YM4606
         MVI   IOBR,0                   BEGIN WITH R0            YM2862
         B     CEEXIT3                  RETURN TO IOS FOR ERP    YM3857
*
*   INTERRUPT AFTER FOUND DUMMY AND BEFORE WRT KEY/DATA(EG. SEEK CYL)
*
RESETIT  EQU   *                        CHANGE START TO VER KEY  YM3857
         IC    WORK4,WRKCT2             GET LOOP CTR TO DATE     YM3857
         LA    WORK4,1(WORK4)           ADD THIS ENTRY TO CTR    YM3857
         STC   WORK4,WRKCT2             ST NEW COUNT             YM3857
         CR    WORK4,WORK3              IS THIS THE 10TH ENTRY   YM3857
         BL    RETURN2                  NO, RETURN TO RETRY      YM3857
*
         MVI   IOBECBCC,ECBPERR         SET X'41' IN IOB         YM3857
*                                       FOR PERMANENT ERROR      YM3857
         B     SETABN                   GO SCHEDULE THE ASI      YM3857
*
RETURN2  EQU   *                        RESTART CP AGAIN         YM3857
         MVC   IOBSTART,WRKSTRT2        START CP BY VERIFYING    YM3857
*                                       THAT DUMMY RECORD IS     YM3857
*                                       STILL A DUMMY            YM3857
         MVC   IOBCCHHR,IOBDNCRF+2      UPDATE SEEK TO SRCH      YM4606
*                                       BEGINNING WITH DUMMY REC YM4606
         MVI   IOBR,0                   BEGIN WITH R0            YM2862
         NI    IOBFLAG1,X'FF'-IOBIOERR  TURN OFF ERROR FLAG      YM3857
         TM    DCBOPTCD,DCBOPTTO        IS THIS TRK OVERFLO      YM5762
         BNO   RESTARTA                 NO, GO REEXCP            YM5762
         L     WORK1,IOBSTART           YES, GET 1ST CCW ADDR    YM5762
         CLI   CCWCOMCD,SETSECT         IS THIS RPS CP           YM5762
         BNE   RESTARTA                 NO, GO REEXCP            YM5762
         L     WORK1,CCWADDRA           YES, GET SECTOR ADDR     YM5762
         DROP  WORK1                                           @OZ04942
         MVI   0(WORK1),RPSNOP          CHANGE SECTOR TO NOP,FF  YM5762
         B     RESTARTA                 BR TO RESTART CHAN PGM   YM3857
*                                       TO VERIFY DUMMY RECORD   YM3857
*
***********************************************************************
*    THE FOLLOWING ARE EXITS FROM THIS MODULE, EITHER APPENDAGE,      *
*    TO RETURN TO IOS IN IOS KEY OR TO SCHEDULE THE ASI.              *
*  NOTE: BECAUSE THESE EXIT ROUTINES ARE USED BY BOTH THE CHANNEL END *
*  AND ABNORMAL END APPENDAGES, THE BASE REGISTER MUST BE REESTAB-    *
*  LISHED SHOULD CODE BE ADDED TO THIS SECTION THAT REQUIRES A BASE.  *
***********************************************************************
SETABN   OI    IOBSTAT1,IOBABNRM        MARK IOB AS ABNORMAL COMPLETION
*
*            SCHEDULE THE ASI ROUTINE
*
SCHASI   EQU   *                        SCHEDULE THE ASI ROUTINE Y02072
         LA    WORK5,IOSKEY             LOAD IOS KEY(=0) IN R2   Y02072
*
         MODESET  KEYADDR=(2)           RETURN TO IOS KEY        Y02072
*
         LM    R0,R15,0(SAVEREG)        RESTORE IOS REGS         Y02072
         LA    RETREG,NOFREE(RETREG)    SET NOPOST,NOFREE EXIT @OZ04942
*                                       TO EXCP FROM EXIT EFFECTOR
         L     BASE,CVTPTR              AND CALL EXIT EFFECTOR,
         USING CVT,BASE                                        @OZ04942
         L     BASE,CVT0EF00            LOCATING IT THRU CVT AND
         BR    BASE                     PASSING IT RQE TO USE    Y02072
*
*            RETURN TO IOS FROM CE OR ABE
*
         USING IGG019KU,BASE                                   @OZ04942
CEEXIT3  EQU   *                        RETURN TO IOS            Y02072
         LA    WORK5,IOSKEY             LOAD IOS KEY(=0) IN R2   Y02072
*
         MODESET  KEYADDR=(2)           RETURN TO IOS KEY        Y02072
*
         LM    R0,R15,0(SAVEREG)        RESTORE IOS REGISTERS    Y02072
         BR    RETREG                   LET ERROR CODE STAND     Y02072
*
RESTARTA EQU   *                        RETURN TO IOS TO RESTART YM3857
         MVI   IOBSENS0,0               CLEAR SENSE BYTES      @OZ04942
         MVI   IOBSENS1,0                                      @OZ04942
         LA    WORK5,IOSKEY             LOAD IOS KEY(=0) IN R2   Y02072
         MODESET  KEYADDR=(2)           RETURN TO IOS KEY        Y02072
*
         LM    R0,R15,0(SAVEREG)        RESTORE IOS REGISTERS    Y02072
         B     RESTART(RETREG)          RET TO IOS TO RESTART   SA53271
         EJECT
***********************************************************************
*  THE FOLLOWING SUBROUTINE IS ALWAYS EXECUTED UPON ENTRY TO 19KU.    *
*  FOR CROSSING VOLUMES, DYN BUF OR EXCLUSIVE CONTROL (IF THIS IOB    *
*  HAD TO WAIT FOR A BLOCK OR BUFFER), MORE THAN ONE EXCP IS ISSUED   *
*  AGAINST THE SAME IOB.  WHEN MULTIPLE EXCPS ARE REQUIRED THE USERS  *
*  DECB ADDR IS SAVED IN THE IOBDQPTR FIELD IN THE IOB BEFORE OTHER   *
*  THAN THE 1ST EXCP WAS ISSUED AGAINST THIS IOB(IN THE DYN BUF RTN,  *
*  IGC0005C, OR FDN MOD.)  THIS IS NECESSARY TO PREVENT PROCESSING OF *
*  SUBSEQENT EXCPS FROM OVERLAYING ANY CHANGE IN THE STATUS OF THE ECB*
***********************************************************************
ECBCHK   EQU   *                        CHECK DECB ADDR          Y02072
*
         MODESET  KEYADDR=RQEPRT,WORKREG=5   CHANGE TO USER KEY  Y02072
*
         L     WORK2,IOBECBPT           GET ADDR IN IOB FOR DECB Y02072
         LA    WORK2,0(WORK2)           CLEAR OUT TOP BYTE       Y02072
         LA    WORK3,IOBCSW+3           GET ADDR OF IOBCSW WORD  Y02072
         CR    WORK2,WORK3              DOES IOBECBPT PT TO CSW  Y02072
         BNER  LINKREG                  IF NOT, DECB PTR OK      Y02072
         L     WORK2,IOBDQPTR           ELSE,GET REAL DECB PTR   Y02072
         STCM  WORK2,ADDR,IOBECBPB      STORE IT IN LOW 3 BYTES  Y02072
         XC    IOBDQPTR,IOBDQPTR        CLEAR IOB FIELD          Y02072
         BR    LINKREG                  RETURN TO MAIN ROUTINE   Y02072
         EJECT
***********************************************************************
*                CONSTANTS AND EQUATES                                *
***********************************************************************
*
*
SKPHIBYT EQU   X'01'                    TO START AT SECOND BYTE OZ02226
*                                       OF WORD FOR THREE BYTE  OZ02226
*                                       COMPARES                OZ02226
CMP3BYTS EQU   X'03'                    USED FOR THREE BYTE     OZ02226
*                                       COMPARES                OZ02226
ADDR     EQU   B'0111'                  MASK FOR STCM TO ST LOW  Y02072
*                                       ORDER 3 BYTES OF REG     Y02072
*              RETURN OFFSETS TO EXCP
NOPOST   EQU   4                        DO NOT POST ECB        @OZ04942
RESTART  EQU   8                        REEXCP THE REQUEST      SA53271
NOFREE   EQU   12                       DON'T FREE RQE OR POST @OZ04942
*
ERPCOUNT EQU   10                       NO OF TIMES ERP RETRIES  YM3857
IOSKEY   EQU   0                        IOS KEY IS ZERO          Y02072
*
*              CCW OP CODES
NOP      EQU   X'03'                    NOP COMMAND CODE         YM3857
RDHA     EQU   X'1A'                    READ HOME ADDR           YM5762
SETSECT  EQU   X'23'                    SET SECTOR OP CODE       YM5762
*
RPSNOP   EQU   X'FF'                    NOPS SET SECTOR COMMAND  YM5762
*
WRAPBASE DC    A(4095*4096)             4K LESS THAN 16MEG     @OZ04942
*              NOTE: SEE WRAPDECR DSECT FOR USE OF ABOVE CONSTANT
MODID    DC    CL8'IGG019KU'            MODULE ID                Y02072
FIX      DC    C'@OZ04942 '             LAST PTM ENTERED         YM5947
DATE     DC    C'&SYSDATE'              DATE OF LAST PTM         YM5947
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
***********************************************************************
*                         DSECTS                                      *
***********************************************************************
WRAPDECR DSECT ,                        USED FOR DECREMENTING  @OZ04942
*        THE BASE FOR THIS DSECT MUST BE A REG HAVING 4095*4096
*        USED WITH WRAP (BELOW) THIS WILL GIVE UNCHANGED ADDRESS
*        EXAMPLE:  LA   RX,WRAP-N(RX)                          @OZ04942
*              CLEARS HIGH BYTE OF RX AND SUBTRACTS N          @OZ04942
         DS    XL4096                                          @OZ04942
WRAP     DS    0X                       EXACTLY 16 MEGS        @OZ04942
*
*
FDBKAREA DSECT ,                        USERS FEEDBACK AREA    @OZ04942
FDBKMBB  DS    CL3                      MBB PART OF SEEK       @OZ04942
FDBKCHR  DS    CL5                      CCHHR PART OF SEEK     @OZ04942
*
***********************************************************************
*  THE FOLLOWING FORMATS THE WORKAREA LOCATED AT THE END OF IOB CORE.
*  (IN EARLIER RELEASES,FOR V,U,VS FORMAT,THIS AREA WAS AN ENQ LIST.)
*  THIS WORKAREA CONTAINS ADDRESSES OF PARTICULAR CCWS IN THE CHANNEL
*  PROGRAM BUILT BY PREFORMAT MODULE, IGG019KO, FIXED WRITE ADD. IT
*  IS INTERROGATED BY THE CHANNEL OR ABNORMAL END APPENDAGE TO DETER-
*  MINE IF AN ERROR OCCURRED AND AT WHAT POINT, AND TO TAKE THE
*  APPROPRIATE ACTION.
***********************************************************************
WRKIOB   DSECT ,                        IOB WORKAREA             YM3857
WRKRDAD  DS    F                        ADDR OF CCW THAT READS   YM3857
*                                       IN 1 DATA BYTE - ID      YM3857
WRKCCAD  DS    F                        ADDR CCW THAT WILL NOT   YM3857
*                                       BE COMMAND CHAINED TO    YM3857
*                                       NEXT IF ERROR OCCURS     YM3857
*                                       BEFORE IT.               YM3857
WRKSKCYL DS    F                        ADDR OF FIRST SEEK CYL   YM3857
*                                       WILL BE 0 IF NOT OVFLO   YM3857
WRKWKD   DS    F                        ADDR OF CCW THAT WRT KD  YM3857
WRKSTRT2 DS    F                        ADDR OF BEG CP ONCE      YM3857
*                                       DUMMY RECORD IS FOUND    YM3857
WRKSTRT3 DS    F                        ADD OF BEG CP IF ANY     YM3857
*                                       PART OF KEY IS WRITTEN-  YM3857
*                                       ALSO,ADDR THAT 2ND PART  YM3857
*                                       OF CP TICS BACK TO IN    YM3857
*                                       1ST PART OF CHAN PGM     YM3857
WRKCT1   DS    BL1                      RETRY CTR - VERIFY DUMMY YM3857
WRKCT2   DS    BL1                      RETRY CTR AFTER DUMMY    YM3857
*                                       FOUND AND BEFORE KEY IS  YM3857
*                                       WRITTEN                  YM3857
         DS    BL2                      RESERVED                 YM3857
WRKEND   EQU   *                        END OF WRKIOB          @OZ04733
WRKLEN   EQU   WRKEND-WRKIOB            LENGTH OF WRKIOB       @OZ04733
         EJECT
IHACCW   DSECT ,                                               @OZ04942
         IHACCW DSECT=NO                                       @OZ04942
CCWEND   EQU   *                        END OF CCW             @OZ04733
CCWLEN   EQU   CCWEND-IHACCW            LENGTH OF CCW          @OZ04733
         EJECT
IHACSW   DSECT ,                                               @OZ04942
         IHACSW DSECT=NO                                       @OZ04942
         EJECT
         CVT  DSECT=YES
         EJECT
         DCBD  DSORG=DA
         EJECT
         IHADECB ,                                             @OZ04942
         EJECT
         IHADVCT ,                                             @OZ04942
         EJECT
         IHAECB ,                                              @OZ04942
         EJECT
         IEZIOB                                                  Y02072
         ORG   IOBCC                                           @OZ04942
IOBCCHHR DS    CL5                      DEF CCHHR WITHIN SEEK  @OZ04942
         EJECT
         IECDRQE                                                 Y02072
         EJECT
UCB      DSECT
SRT      EQU   UCB
         IEFUCBOB
         END
