 TITLE   'IGG019KO - PRE-FORMAT WRITE ADD, FIXED RECORDS'
IGG019KO CSECT
*MODULE NAME - IGG019KO                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM WRITE ADD(PRE-FORMAT) FOR FIXED RECORDS      *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*          OS 20 CHANGES/DELETIONS
*1777000230-000260,000380-000500,013800                          20201
*          OS 21 CHANGES/DELETIONS
*          VS1-1 CHANGES/DELETIONS
*          VS2-1 CHANGES/DELETIONS
*                                                                YM3694
*          VS1-2 CHANGES/DELETIONS
*          VS2-2 CHANGES/DELETIONS
*                                                                Y02072
*                                                                YM3857
*                                                                YM2862
*                                                                YM5705
*                                                                YM5762
*
*STATUS CHANGE LEVEL 007
*
*FUNCTION/OPERATION- THIS ROUTINE IS ENTERED TO CONSTRUCT THE CHANNEL *
*   PROGRAM TO ADD A NEW BLOCK TO A DATA SET OF FIXED FORMAT RECORDS. *
*   THE CCWS ARE CONSTRUCTED OF CONSTANTS DEFINED IN THIS MODULE AND  *
*   ADDRESSES RESOLVED AT THE TIME THIS CODE IS EXECUTED.             *
*                                                                     *
*ENTRY POINT- 'IGG019KO' (BEGIN) IS ENTERED FROM MODULE IGG019KA BY   *
*   THE CALLING SEQUENCE,   L    15,DCBDFOR                           *
*                           BALR 14,15                                *
*                                                                     *
*INPUT- THE REGISTERS ARE USED AS INPUT AS FOLLOWS,                   *
*   4 - DCB ADDRESS                                                   *
*   5 - DECB ADDRESS                                                  *
*   6 - ADDRESS OF CCW 1 (IOB+80)                                     *
*   7 - IOB ADDRESS                                                   *
*   11- BASE ADDRESS OF MODULE IGG019KA (FOUNDATION MODULE)           *
*                                                                     *
*OUTPUT- THE REQUIRED CCWS WILL BE CONSTRUCTED FOLLOWING THE IOB.     *
*   REGISTER 6 WILL CONTAIN THE ADDRESS OF THE LAST CCW.              *
*                                                                     *
*EXTERNAL ROUTINES- 'IGG019KQ' IS ENTERED TO ADD THE VERIFY CCWS IF   *
*   THAT OPTION IS SPECIFIED. 'IGG019LA' IS ENTERED TO ADD EXTENDED   *
*   SEARCH CCWS IF THAT OPTION IS SPECIFIED.                          *
*                                                                     *
*EXIT-NORMAL- 'D9EXIT' IS THE NORMAL RETURN TO THE FOUNDATION MODULE  *
*   WHEN ALL CCWS ARE COMPLETE.                                       *
*   'D9TOVER' IS THE EXIT TO MODULE IGG019KQ                          *
*EXIT-ERROR- 'D9ERR' IS AN EXIT TO THE INVALID REQUEST ERROR ROUTINE  *
*   IN MODULE IGG019KA WHEN IT HAS BEEN DETERMINED THAT THE USER IS   *
*   ATTEMPTING TO ADD A RECORD WHOSE KEY IS THE SAME AS A DUMMY KEY.  *
* REGISTER 12 WILL CONTAIN AN INVALID REQUEST ERROR CODE.             *
*                                                                     *
*TABLES/WORK AREAS- NOA                                               *
*                                                                     *
*ATTRIBUTES- THIS ROUTINE IS REENTRANT AND EXECUTED ENABLED.          *
*                                                                     *
*NOTE- THE REGISTER USAGE IN THIS MODULE MUST REMAIN CONSISTENT WITH  *
*   THE MODULES, IGG019KA, IGG019KQ, IGG019LA.                        *
*
         USING IGG019KO,D9EPREG
         USING IHADCB,DCBREG
         USING DECBDEF,DECBREG
         USING IOBSTDRD,IOBREG                                   Y02072
*
*
*   REGISTER USAGE
*
D9WKREG  EQU   0                       WORK REGISTER
D9VERR   EQU   1                       ADDR. OF SEARCH CCW FOR VERIFY
WORKREGA EQU   2                       WORKREG FOR BUILDING CP   YM3857
DEBREG   EQU   3                       DEB ADDRESS
DCBREG   EQU   4                       DCB ADDRESS
DECBREG  EQU   5                       DECB ADDRESS
D9CCWIND EQU   6                       CHANNEL PROGRAM INDEX
IOBREG   EQU   7                       IOB ADDRESS
SECTOR   EQU   8                       PT TO 1ST SECTOR ADDRESS   20201
IOBWKREG EQU   9                       BASE FOR IOB WORKAREA     YM3857
VERBASE  EQU   10                      ENTRY POINT-BASE, VERIFY MODULE
FDNBASE  EQU   11                      BASE, FOUNDATION MODULE
D9WKRET  EQU   12                      RETURN FOR INTERNAL LINKAGE
SAVE     EQU   13                      USER'S SAVE AREA ADDRESS
D9RETREG EQU   14                      RETURN TO FOUNDATION MODULE
D9EPREG  EQU   15                      BASE OF THIS MODULE
*
*
*
*
BEGIN    B     D9ENTRY                  GO TO BEGINNING OF THE CODE
EPAD     DC    V(IGG019LA)              ADDRESS OF EXT. SEARCH MODULE
*                                       IGG019LA, WHICH IS LINKEDITED
*                                       WITH THIS ONE            Y02072
D9ENTRY  EQU   *                                                  20201
         L     D9VERR,DECKYADR          TEST TO BE SURE THE       20201
*                                       USER'S                    20201
         TM    0(D9VERR),X'FF'          KEY DOES NOT HAVE BITS LIKE THE
         BC    12,D9OKKEY               DUMMY KEY, BRANCH IF OK.
         IC    D9WKRET,D9INVKY          ELSE INSERT EXCEPTION CODE,
         L     D9RETREG,D9ERRET(0,FDNBASE) LOCATE ERROR ROUTINE
D9ERR    BCR   15,D9RETREG              AND GO POST AS INVALID REQUEST
*
D9OKKEY  TM    IOBDTYPE,IOBEXTSC        TEST FOR EXTENDED SEARCH Y02072
         BO    D9XSCH                   AND GO TO THAT LINKAGE   Y02072
         LA    D9WKREG,IOBDNCRF+2       DEVELOP AND STORE ADDRESS
         ST    D9WKREG,0(D9CCWIND)      FOR READING FEEDBACK
         MVI   0(D9CCWIND),D9RDCNT      MOVE READ COUNT OP CODE
         MVI   4(D9CCWIND),D9CSFLG      SET COMMAND CHAIN, SILI FLAGS
         MVI   7(D9CCWIND),D9FIVE       MOVE COUNT OF FIVE
         ST    D9CCWIND,16(D9CCWIND)    INSERT TIC ADDRESS
         LA    D9CCWIND,8(D9CCWIND)     INCREMENT INDEX
D9BOTH   EQU   *                        SET UP WORKAREA BASE     YM3857
         LA    IOBWKREG,0(IOBREG)       GET IOB BASE,CLR TOP     YM3857
         AH    IOBWKREG,IOBDIOBS        ADD IOB SIZE TO BASE     YM3857
         SH    IOBWKREG,WRKSIZE         SUBT WORKAREA SIZE       YM3857
         USING WRKIOB,IOBWKREG          BASE FOR IOB WORKAREA    YM3857
         LA    SECTOR,NCCWC(D9CCWIND)   DEVELOP ADDR OF          YM3694
         MVI   0(SECTOR),DUMKEY         DUMMY KEY                YM3694
         ST    SECTOR,0(D9CCWIND)       FOR SEARCH ARGUMENT      YM3694
         MVI   0(D9CCWIND),D9SCHKEY     MOVE SEARCH KEY EQUAL OP CODE
         MVC   4(5,D9CCWIND),D9CON3     MOVE FLAGS, COUNT, TIC OP CODE
         LA    D9WKREG,IOBDNCRF+6       DEVELOP AND STORE ADDR   Y02072
         ST    D9WKREG,16(D9CCWIND)     FOR READING DUMMY RECORD ID
         MVI   16(D9CCWIND),D9RDDATA    MOVE READ DATA OP CODE
         MVI   20(D9CCWIND),D9CSFLG     COMMAND CHAIN, SILI FLAGS 24512
         MVI   23(D9CCWIND),D9ONE       SET COUNT TO ONE
         LA    D9CCWIND,TWOCCW(D9CCWIND) POINT TO READ DATA      YM3857
         ST    D9CCWIND,WRKRDAD         SAVE RD DATA CCW ADDR    YM3857
         LA    D9CCWIND,FULLCCW(D9CCWIND) INCREMENT TO OPT SEEK  YM3857
         TM    IOBDCPND,YESCARN         IS RPS FEATURED           20201
         BO    NEEDRS                   YES. NEED READ SECTOR    YM3857
         MVC   WRKCCAD,WRKRDAD          NO RPS-INST WHERE COMMND YM3857
*                                       CHAIN COULD BE CHANGED   YM3857
*                                       IS SAME AS READ DATA     YM3857
         B     NOTCARN1                 CONTINUE BUILDING CH PGM YM3857
NEEDRS   EQU   *                        CONTINUE CHAN PGM        YM3857
         L     SECTOR,IOBDCPND          GET SECTOR ADDR IF RPS   20201
         LA    SECTOR,ONEBYTE(0,SECTOR) YES, POINT TO SET SECTOR 20201
*                                       AREA                     20201
         ST    SECTOR,D0(D9CCWIND)      PUT POINTER IN CCW       20201
         MVI   D0(D9CCWIND),RDSECT      PUT IN RD SECT COMMAND   20201
         MVC   HALFCCW(HALFCCW,D9CCWIND),FLAGCNT   PUT IN        20201
*                                       FLAG/COUNT               20201
         ST    D9CCWIND,WRKCCAD         SAVE COM CHAIN - NO RPS  YM3857
         LA    D9CCWIND,FULLCCW(0,D9CCWIND)  UPDATE PT TO NEXT   20201
*                                       CCW                      20201
NOTCARN1 EQU   *                                                 20201
         TM    IOBDTYPE,IOBOVFLO        TEST FOR TRK OVERFLOW    Y02072
         BZ    D9NOTOF                  BRANCH TO OMIT SEEK       24512
         LA    D9WKREG,IOBDNCRF         IF NOT USING OPTION.      24512
         ST    D9WKREG,0(0,D9CCWIND)    OTHERWISE, SEEK NEEDED.   24512
         MVI   0(D9CCWIND),D9SEEKOP                               24512
         MVI   4(D9CCWIND),D9CFLG                                 24512
         MVI   7(D9CCWIND),D9SIX                                  24512
         ST    D9CCWIND,WRKSKCYL        SAVE SEEK CYL ADDR       YM3857
         LA    D9CCWIND,FULLCCW(D9CCWIND) UP CHAN PGM PTR        Y02072
D9NOTOF  EQU   *                                                  24512
         ST    D9CCWIND,WRKSTRT3        SAVE ADDR OF CHAN PGM    YM3857
*                                       START IF KEY WRITTEN     YM3857
         TM    IOBDCPND,YESCARN         DO WE GOT RPS            20201
         BNO   NOTCARN2                 NO, SO SEE ABOUT SCH ID  20201
         ST    SECTOR,D0(D0,D9CCWIND)   PUT IN CCW ADDR FIELD    20201
         MVI   D0(D9CCWIND),SETSECT     INSERT SET SECT COMMAND  20201
         MVC   HALFCCW(HALFCCW,D9CCWIND),FLAGCNT  IMPLACE FLAG & 20201
*                                       COUNT                    20201
         LA    D9CCWIND,FULLCCW(0,D9CCWIND)  UPDATE PT TO NEXT   20201
*                                       CCW                      20201
NOTCARN2 EQU   *                                                 20201
         LA    D9WKREG,IOBDNCRF+2       CONSTRUCT SCH ID EQUAL CCW MC0J
         ST    D9WKREG,0(D9CCWIND)      USING IOBSEEK AND ID READ FROM
         MVI   0(D9CCWIND),D9SCHID      THE DUMMY RECORD
         ST    D9CCWIND,8(D9CCWIND)     SET TIC ADDRESS TO SEARCH CCW
         MVC   4(5,D9CCWIND),D9CON9     MOVE FLAGS, COUNT, TIC OP CODE
         LA    D9VERR,TWOCCW(D9CCWIND)  GET ADDR OF WRT KEY/DATA YM3857
         ST    D9VERR,WRKWKD            ST ADDR OF WRT KEY/DATA  YM3857
         MVI   16(D9CCWIND),D9WRTKD     MOVE WRITE KEY-DATA OP CODE
         MVC   17(3,D9CCWIND),DECKYADR+1 MOVE KEY ADDRESS
         MVI   20(D9CCWIND),D9DCFLG     DATA, COMMAND CHAIN FLAGS
         MVC   23(1,D9CCWIND),DCBKEYLE  KEY LENGTH
         MVI   24(D9CCWIND),D9WRTD      MOVE WRITE DATA OP CODE
         MVC   25(3,D9CCWIND),DECAREA+1 AREA ADDRESS
         MVC   30(2,D9CCWIND),DECLNGTH  MOVE DECB LENGTH AS COUNT
*
*     BUILD SECOND PART OF CHANNEL PGM, WHICH WILL BE
*     EXECUTED ONLY IF THE ABNORMAL END APPENDAGE SHOULD
*     HAPPEN TO GET CONTROL BEFORE THE FIRST PART OF THE CHANNEL
*     PROGRAM IS COMPLETELY EXECUTED. SEE THE ABNORMAL END
*     APPENDAGE FOR DESCRIPTION OF LOGIC.
*
         L     WORKREGA,IOBDCPND        LOAD CH PGM END ADDR     YM3857
         LA    WORKREGA,0(WORKREGA)     CLEAR TOP BYTE           YM3857
         SH    WORKREGA,NEWCP           SUBT SIZE OF NEW CH PGM  YM3857
         TM    IOBDCPND,YESCARN         IS RPS ON DEVICE         YM3857
         BNO   RPSNO                    IF NOT BRANCH            YM3857
         ST    SECTOR,0(WORKREGA)       STORE SECTOR ADDR IN CCW YM3857
         ST    WORKREGA,WRKSTRT2        STORE CP START AFTER     YM3857
*                                       DUMMY RECORD FOUND       YM3857
         MVI   0(WORKREGA),SETSECT      MOVE SET SECTOR OPCODE   YM5705
         MVC   HALFCCW(HALFCCW,WORKREGA),FLAGCNT  MV IN CC/CNT   YM3857
         LA    WORKREGA,FULLCCW(WORKREGA) PT REG TO NEXT CCW     YM3857
         B     CONTINUE                 CONTINUE BUILDING CP     YM3857
*
RPSNO    EQU   *                        BUILD SID/TIC CCWS       YM3857
         LA    WORKREGA,FULLCCW(WORKREGA) PT REG TO NEXT CCW     YM3857
         ST    WORKREGA,WRKSTRT2        ST CP START-NO RPS-AFTER YM3857
*                                       DUMMY RECORD FOUND       YM3857
CONTINUE EQU   *                        CONTINUE BUILDING CP     YM3857
         ST    D9WKREG,0(WORKREGA)      ADDR OF IOBDNRCF+2       YM3857
         MVI   0(WORKREGA),D9SCHID      USED IN SID CCW          YM3857
         ST    WORKREGA,FULLCCW(WORKREGA) SAVE THIS ADDR IN TIC  YM3857
         MVC   HALFCCW(CCTICLG,WORKREGA),D9CON9   MV IN CC/TIC   YM3857
         LA    D9VERR,NCCWC(WORKREGA)   GET ADDR OF FF TO BE     YM3857
*                                       STORED AT TIC + 6        YM3857
         MVI   0(D9VERR),DUMKEY         STORE DUMMY KEY HERE     YM3857
         LA    WORKREGA,TWOCCW(WORKREGA) UP PTR 16 BYTES TO SKE  YM3857
         ST    D9VERR,0(WORKREGA)       ST ADDR OF DUM KEY - SKE YM3857
         MVI   0(WORKREGA),D9SCHKEY     MV IN X'29'=SKE OPCODE   YM3857
         MVC   HALFCCW(CCCTLG,WORKREGA),D9CON3  MV IN CC/CT CCW  YM3857
         LA    WORKREGA,FULLCCW(WORKREGA)  UP PTR TO NEXT CCW    YM3857
         MVI   0(WORKREGA),D9NOP        MV IN X'03' OPCODE-NOP   YM3857
         MVC   HALFCCW(CCCTLG,WORKREGA),D9CON4  MV IN CC/SILI/CT YM3857
         LA    WORKREGA,FULLCCW(WORKREGA) UP CCW PTR TO NEXT CCW YM3857
         MVC   0(FULLCCW,WORKREGA),RDHADDR READ HA AS DUMMY READ YM5762
*                                       BETWEEN SIDS ON SAME REC YM2862
*                                       RESETS INDEX MARKER      YM2862
         LA    WORKREGA,FULLCCW(WORKREGA) UP CCW PTR TO NEXT CCW YM2862
         L     D9VERR,WRKSTRT3          GET START IF KEY WRITTEN YM3857
         ST    D9VERR,0(WORKREGA)       STORE IN TIC CCW         YM3857
         MVI   0(WORKREGA),D9TIC        MV IN TIC OPCODE         YM3857
         DROP  IOBWKREG                 DROP WORKAREA BASE       YM3857
*
*   CONTINUE BUILDING MAIN PART OF CHANNEL PROGRAM IF VERIFY SPECIFIED
*
         LR    D9VERR,D9CCWIND          SAVE SEARCH ADDR. FOR VERIFY
         LA    D9CCWIND,24(D9CCWIND)    INCREMENT TO LAST CCW
         TM    IOBDTYPE,IOBVERFY        TEST FOR WRITE VERIFY    Y02072
         BZR   D9RETREG                 NO , CHANNEL PROGRAM IS DONE
         L     VERBASE,12(0,FDNBASE)    LOAD VERIFY ENTRY POINT/BASE
         BR    VERBASE                  GO CONSTRUCT VERIFY CCWS
*                                       VERIFY MODULE WILL RETURN TO
*                                       FOUNDATION ON REGISTER 14
D9XSCH   LA    D9WKRET,D9BOTH           SET RETURN ADDRESS
         L     D9EPREG,EPAD             LOAD ADDR. OF EXTENDED MODULE
         BR    D9EPREG                  GO CONSTRUCT EXT. SEARCH CCW'S
*
         EJECT
*
D9RDCNT  EQU   X'12'  READ-COUNT OP CODE
D9CSFLG  EQU   X'60'  COMMAND CHAIN, SUPPRESS INCORRECT LENGTH FLAGS
D9FIVE   EQU   X'05'  COUNT OF 5 FOR READ-COUNT
D9CFLG   EQU   X'40'  COMMAND CHAIN
D9RDDATA EQU   X'06'  READ-DATA OP CODE
D9ONE    EQU   X'01'  COUNT OF ONE
D9SEEKOP EQU   X'0B'  SEEK CCHH OP-CODE
D9SIX    EQU   X'06'  COUNT FOR SEEK
D9SCHID  EQU   X'31'  SEARCH-ID-EQUAL OP CODE
D9WRTKD  EQU   X'0D'  WRITE-KEY-DATA OP CODE
D9DCFLG  EQU   X'C0'  DATA, COMMAND CHAIN FLAGS
D9WRTD   EQU   X'05'  WRITE-DATA OP CODE
D9SCHKEY EQU   X'29'  SEARCH-KEY-EQUAL
D9NOP    EQU   X'03'                    NOP OP CODE              YM3857
D9TIC    EQU   X'08'                    TIC OP CODE              YM3857
DUMKEY   EQU   X'FF'                    DUMMY KEY -AVAILABL RECS YM3857
D9ERRET  EQU   20                       OFFSET TO ERROR ROUTINE ADCON
NCCWC    EQU   14                       COUNT FIELD OF NEXT CCW  YM3694
D9CON3   DC    X'6000000108'  FLAGS, COUNT, TIC OP-CODE
D9CON4   DC    X'20000001'              SILI/COUNT               YM3857
D9CON9   DC    X'4000000508'            FLAG,COUNT,TIC OP-CODE
RDHADDR  DC    XL8'1A00000070000001'    RD HA WITH SILI,SKIP,CC  YM5762
D9INVKY  DC    X'01'                    KEY MATCHES DUMMY KEY-ERROR
WRKSIZE  DC    H'28'                    SIZE OF WORKAREA         YM3857
NEWCP    DC    H'56'                    SIZE OF 2ND PART OF CP   YM5705
CCWLENG  DC    H'8'                     LENGTH OF CCW            YM3857
*
*
*          CONSTANTS AND EQUATES USED BY RPS
*
*
FLAGCNT  DC    X'40000001'              STANDARD FLAG/COUNT      20201
*                                       FIELD                    20201
*
RDSECT   EQU   X'22'                    READ SECTOR COMMAND CODE 20201
SETSECT  EQU   X'23'                    SET SECTOR COMMAND CODE  20201
YESCARN  EQU   X'FF'                   BYTE TO TEST FOR RPS      20201
*
D0       EQU   0                        ZERO DISPLACEMENT        20201
ONEBYTE  EQU   1                        ONE BYTE DISPLACEMENT    20201
ADDR     EQU   3                        SIZE OF 3BYTE ADDR       YM3857
HALFCCW  EQU   4                        HALF CCW DISPLACEMENT    20201
CCCTLG   EQU   4                        LG OF CC/CT              YM3857
CCTICLG  EQU   5                        LG OF CC/CT/TIC          YM3857
FULLCCW  EQU   8                        FULL CCW DISPLACEMENT    20201
TWOCCW   EQU   16                       LG OF 2 CCWS             YM3857
*
*
*              EXCEPTION CODES
NOREC    EQU   X'80'
LGNCK    EQU   X'40'
NOSPA    EQU   X'20'
INVAL    EQU   X'10'
UNCOR    EQU   X'08'
ENDOD    EQU   X'04'
UNREL    EQU   X'02'
MODID    DC    CL8'IGG019KO'            MODULE ID                Y02072
FIX      DC    C' YM5762 '              LATEST FIX IN MODULE     YM5762
DATE     DC    C'12/04/73'              DATE OF LATEST FIX       YM5762
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
***********************************************************************
*                      DSECTS
***********************************************************************
*
***********************************************************************
*  THE FOLLOWING FORMATS THE WORKAREA LOCATED AT THE END OF IOB CORE.
*  (IN V,U,VS FORMATS FOR EARLIER RELEASES THIS CORE WAS THE ENQ LIST.)
*  THIS WORKAREA CONTAINS ADDRESSES OF PARTICULAR CCWS IN THE CHANNEL
*  PROGRAM, WHICH WILL BE INTERROGATED BY THE ABNORMAL END APPENDAGE
*  OR THE CHANNEL END APPENDAGE (BOTH IN IGG019KU) SHOULD THE CHANNEL
*  PROGRAM STOP BEFORE NORMAL COMPLETION.
***********************************************************************
WRKIOB   DSECT                          IOB WORKAREA DSECT       YM3857
WRKRDAD  DS    F                        ADDR OF CCW THAT READS   YM3857
*                                       IN 1 DATA BYTE = ID      YM3857
WRKCCAD  DS    F                        ADDR CCW THAT WILL NOT   YM3857
*                                       NOT BE COMMAND CHAINED   YM3857
*                                       TO NEXT IF ERROR OCCURS  YM3857
*                                       BEFORE IT.               YM3857
WRKSKCYL DS    F                        ADDR OF FIRST SEEK CYL   YM3857
*                                       WILL BE 0 IF NOT OVFLO   YM3857
WRKWKD   DS    F                        ADDR OF CCW THAT WRT KD  YM3857
WRKSTRT2 DS    F                        ADDR OF BEG CP ONCE      YM3857
*                                       DUMMY RECORD IS FOUND    YM3857
WRKSTRT3 DS    F                        ADDR OF BEG CP IF ANY    YM3857
*                                       PART OF KEY IS WRITTEN-  YM3857
*                                       ALSO, ADDR THAT 2ND PART YM3857
*                                       OF CP TICS BACK TO IN    YM3857
*                                       1ST PART OF CP           YM3857
***********************************************************************
*      DATA CONTROL BLOCK (DCB) DEFINITION
*
         DCBD  DSORG=DA
*
*
*
*      DATA EVENT CONTROL BLOCK (DECB) DEFINITION
         DS    0F
DECBDEF  DSECT
DECSDECB DS    CL4            STANDARD EVENT CONTROL BLOCK (ECB)
DECTYPE  DS    CL2            TYPE FIELD
DECLNGTH DS    CL2            DATA LENGTH
DECDCBAD DS    CL4            ADDRESS OF DCB
DECAREA  DS    CL4            ADDRESS OF DATA AREA
DECIOBPT DS    CL4            ADDRESS OF THE IOB
DECKYADR DS    CL4            ADDRESS OF KEY
DECRECPT DS    CL4            ADDRESS OF RECORD REFERENCE
         EJECT
         IEZIOB                                                  Y02072
         END
