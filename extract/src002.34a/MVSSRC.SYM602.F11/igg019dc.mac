         TITLE 'IGG019DC - CHECK ROUTINE, CREATE A BDAM DATA SET'
IGG019DC CSECT
*MODULE NAME = IGG019DC                                               *
*                                                                     *
*DESCRIPTIVE NAME = BDAM CREATE CHECK MODULE FOR NON VS RECORD FORMAT *
*                                                                     *
*COPYRIGHT = NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*        VS1-1 CHANGES/DELETIONS
*        VS2-1 CHANGES/DELETIONS
*        VS1-2 CHANGES/DELETIONS
*        VS2-2 CHANGES/DELETIONS
*014000,017200-017240,021700,021800,024800,024820,025000-025600  Y02072
*                                                                YM3029
*
*STATUS CHANGE LEVEL 007                                          7M524
*
*FUNCTIONS- THIS ROUTINE IS ENTERED BY THE CHECK MACRO ISSUED BY THE
*    PROBLEM PROGRAM FOLLOWING A WRITE TYPE SF, SD, OR SZ.
*    IF THE WRITE COULD NOT BE SCHEDULED (DUE TO NO MORE ROOM IN THE
*    DATA SET) CONTROL IS PASSED TO THE END-OF-VOLUME ROUTINE.
*    IF THE WRITE WAS SCHEDULED AND THE USER HAS NOT ISSUED A WAIT,
*    THIS ROUTINE WILL WAIT FOR COMPLETION TO BE POSTED.
*    WHEN THE WRITE IS COMPLETE, ONE OF THE FOLLOWING WILL OCCUR,
*    1. IF THE WRITE COMPLETED WITHOUT ERROR CONTROL WILL BE RETURNED
*       TO THE PROBLEM PROGRAM,
*    2. IF THE WRITE COMPLETED IN ERROR CONTROL WILL BE PASSED TO THE
*       USER'S SYNCHRONOUS ERROR ROUTINE IF ONE IS SPECIFIED IN THE DCB
*       IF NO ERROR ROUTINE IS SPECIFIED, A DMABCOND MACRO WILL BE
*       ISSUED TO TRANSFER CONTROL TO PROBLEM DETERMINATION, WHICH
*       WILL ISSUE A WTP MESSAGE AND GTRACE PERTINENT CONTROL BLOCKS
*       BEFORE ABENDING WITH A 008.  AN ACCOMPANYING
*       RETURN CODE WILL IDENTIFY THE EXACT CAUSE OF THE ERROR.
*      IF THE ERROR IS AN IO ERROR AN SVC 55 IS ISSUED.  EOV WILL
*      IN THIS CASE ISSUE A WTP MESSAGE BEFORE ABENDING WITH A 001.
*
*ENTRY POINTS- 'SAVEREGS' IS THE ENTRY FROM THE CHECK MACRO EXPANSION
*    BY THE CALLING SEQUENCE-      L    15,DCBCHECK
*                                  BALR 14,15
*    'POSTCHK' IS THE RETURN FROM END-OF-VOLUME IF THE USER HAD
*    SPECIFIED SECONDARY ALLOCATION. ADDITIONAL SPACE HAS BEEN ASSIGNED
*    AND THE WRITE SCHEDULED BY THE WRITE ROUTINE.
*
*INPUT- INPUT TO THE CHECK MACRO IS THE ADDRESS OF THE DECB ASSIGNED TO
*    THE WRITE TO BE CHECKED. THIS ADDRESS WILL BE LOADED INTO
*    REGISTER 1 PRIOR TO ENTERING THIS ROUTINE.
*
*OUTPUT- THE IOB USED FOR THE WRITE IS MADE AVAILABLE SO THAT IT MAY
*    BE REUSED BY THE WRITE ROUTINE.
*    IF THE EXIT TO THE USER'S ERROR ROUTINE IS TAKEN, REGISTER 0 WILL
*    CONTAIN THE DECB ADDRESS AND REGISTER 1 THE DCB ADDRESS AND A
*    WRITE INDICATOR.
*
*EXTERNAL ROUTINES-
*
*EXITS- 'USEREXIT' IS THE EXIT TO RETURN TO THE PROBLEM PROGRAM ON
*    NORMAL COMPLETION.
*    'SYNCEXIT' IS THE EXIT TO THE USER'S SYNCHRONOUS ERROR ROUTINE.
*
*    'ABEXIT' IS AN EOV ABEND EXIT WHEN THE WRITE HAD AN IO ERROR
*    AND NO SYNAD  ROUTINE IS SPECIFIED. EOV ISSUES A 001 ABEND.
*
*    'SYNCRET' AND 'SYNCRET1' ARE  EXITS WHEN THE USER RETURNS FROM
*    SYNAD ROUTINE. DMABCOND IS ISSUED TO TRANSFER CONTROL TO PROB.
*    DETERMINATION WHICH WILL ISSUE A WTP MESSAGE AND GTRACE
*    PERTINENT CONTROL BLOCKS BEFORE ABENDING WITH 008.
*
*
*TABLES/WORK AREAS-
*
*ATTRIBUTES- THIS ROUTINE IS REENTRANT AND EXECUTED ENABLED.
*
*
*
         USING IGG019DC,BASE
         USING IOBDEF,IOBR
         USING IHADCB,DCBR
         USING DECBDEF,DECBR
         USING SAVEAREA,SAVE                                     Y02072
*
*              REGISTER USAGE
*
WKREG0   EQU   0                        WORK REGISTER
DCBR     EQU   1                        DCB POINTER
DECBR    EQU   2                        DECB POINTER
R2       EQU   2                        SAVE/RESTORE REG         Y02072
IOBR     EQU   3                        IOB POINTER
WKREG1   EQU   4                        WORK REGISTER
BASE     EQU   5                        BASE REGISTER FOR CHECK
R8       EQU   8                        SAVE/RESTORE REG         Y02072
SAVE     EQU   13                       SAVE AREA POINTER
RETR     EQU   14                       RETURN REGISTER
R14      EQU   14                       SAVE/RESTORE REG         Y02072
EPREG    EQU   15                       ENTRY POINT REGISTER
         EJECT
SAVEREGS EQU   *                        INITIALIZE BASE REGS     Y02072
         STM   R14,R8,SAVER14           SAVE REGS 14-8 IN SAVEAR Y02072
         LR    BASE,EPREG               SET BASE REGISTER
         LR    DECBR,DCBR               SAVE DECB POINTER
         L     DCBR,DECDCBAD            SET POINTER TO DCB
         ST    DCBR,SAVEDCBR            SAV DCB ADDR IN SAVEAREA Y02072
         L     IOBR,DECIOBPT            SET POINTER TO IOS IOB
         SH    IOBR,EIGHT               SET IOB POINTER TO BSAM IOB
         TM    IOBLINK,EOVBIT           WAS THIS IOB SCHEDULED
         BZ    POSTCHK                  YES
*                                       NO-SET UP FOR END-OF-VOLUME
         L     WKREG1,DCBIOBA           LOAD ADDRESS OF LAST IOB USED
         IC    WKREG0,4(0,WKREG1)       SAVE FIRST BYTE OF EOV POINTER
         ST    IOBR,4(0,WKREG1)         LINK THIS IOB TO EOV IOB
         STC   WKREG0,4(0,WKREG1)       RESTORE FIRST BYTE
         LR    WKREG0,IOBR              LOAD IOB ADDR INTO REG 0
         OI    20(IOBR),X'01'           TURN ON UNIT EXCEPTION BIT
         EOV   (DCBR)                   GO TO END OF VOLUME      Y02072
         LTR   EPREG,EPREG     NO SPACE RETURN                    7M524
         BZ    AROUND          NO                                 7M524
         BALR  RETR,EPREG      GO TO SYNAD                        7M524
         USING *,RETR                                             7M524
SYNCRET1 EQU   *                        NO SPACE - ABEND         Y02072
         L     DCBR,SAVEDCBR            RESTORE DCB ADDR         Y02072
         DMABCOND  209,SVC=YES,DCB=(DCBR)  BR TO PROB DETERMIN   Y02072
*                                       WHICH WILL ABEND 008     Y02072
*                                       BECAUSE NO SPACE ON VOL  Y02072
         DROP  RETR                                               7M524
AROUND   L     DCBR,DECDCBAD   RESTORE DCB ADDRESS                7M524
*
POSTCHK  TM    DECSDECB,X'60'           WAS DECB POSTED WITHOUT ERROR
         BO    USEREXIT                 YES-GO TO SET UP FOR RETURN
         BZ    CHKWAIT                  NOT POSTED  SET UP FOR WAIT
*
         TM    DCBSYNAD+3,X'01'         IS USER SYNCHRONOUS ERROR
*                                       ROUTINE SPECIFIED IN DCB
         BZ    SYNCEXIT                 YES
*
ABEXIT   EQU   *
         LH    WKREG0,ABCODE1           ABEND CODE X'00001000'   Y02072
         EOV   (DCBR)                   BR TO EOV TO ABEND       Y02072
*
*            SET UP FOR USER SYNCHRONOUS ERROR ROUTINE
SYNCEXIT LR    WKREG0,DECBR             SET POINTER TO DECB IN REG. 0
         MVI   DECDCBAD,WRITE           SET WRITE INDICATOR IN DECB
         L     15,DCBSYNAD              SET USER BASE REGISTER
         L     DCBR,DECDCBAD            SET DCB POINTER AND WRITE
*                                       INDICATOR IN REG. 1
         LM    R2,R8,SAVER2             RESTORE REGS 2-8         Y02072
         BALR  RETR,EPREG               GO TO SYNC ERROR ROUTINE
         USING *,RETR                                             11184
*
SYNCRET  EQU   *                        RET FROM SYNAD ABEND 008 Y02072
         L     DCBR,SAVEDCBR            RESTORE DCB ADDR         Y02072
         DMABCOND  210,SVC=YES,DCB=(DCBR)  BR TO PROB DETERMIN   Y02072
*                                       TO ABEND 008 WITH IO ERR Y02072
         DROP  RETR
*
*
USEREXIT NI    IOBIOBA,AVAIL            MAKE IOB AVAILABLE
*          RESTORE USER REGISTERS AND RETURN
         LM    R14,R8,SAVER14           RESTORE REGS 14-8        Y02072
         MVI   SAVER14,X'FF'            SET RETURN INDICATION    Y02072
         BR    R14                      RETURN TO USER           Y02072
*
*
CHKWAIT  LR    DCBR,DECBR               LOAD ECB ADDRESS FOR WAIT
         WAIT  ,ECB=(1)                 WAIT FOR WRITE TO COMPLETE
         L     DCBR,DECDCBAD            RESTORE DCB POINTER
         BC    15,POSTCHK               GO TO CHECK FOR ERROR
*
*
*
         DS    0H                                                Y02072
ABCODE1  DC    XL2'1000'                NO SYNAD RTN -IO ERROR   Y02072
*
EIGHT    DC    H'8'      CONSTANT EIGHT
MODID    DC    C'IGG019DC'              MODULE ID                Y02072
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
WRITE    EQU   X'40'
AVAIL    EQU   X'7F'
EOVBIT   EQU   X'80'
*
         EJECT
***********************************************************************
*                           DSECTS                                    *
***********************************************************************
SAVEAREA DSECT                          USER SAVEAREA            Y02072
         DS    XL20                     UNUSED BY THIS MOD       Y02072
SAVER14  DS    A                        REG 14 SAVED             Y02072
SAVER15  DS    A                        REG 15 SAVED             Y02072
SAVER0   DS    A                        REG 0 SAVED              Y02072
SAVER1   DS    A                        REG 1 SAVED              Y02072
SAVER2   DS    A                        REG 2 SAVED              Y02072
SAVER3   DS    A                        REG 3 SAVED              Y02072
SAVER4   DS    A                        REG 4 SAVED              Y02072
SAVER5   DS    A                        REG 5 SAVED              Y02072
SAVER6   DS    A                        REG 6 SAVED              Y02072
SAVER7   DS    A                        REG 7 SAVED              Y02072
SAVER8   DS    A                        REG 8 SAVED              Y02072
SAVEDCBR DS    A                        DCB ADDR SAVED           Y02072
         DS    XL4                      UNUSED BY THIS MOD       Y02072
         DCBD  DSORG=(PS),DEVD=(DA)
         EJECT
IOBDEF   DSECT      I/O BLOCK DEFINITION
IOBLINK  DS    F         IOB LINK ADDRESS
IOBIOBA  DS    F         IOB ADDRESS FOR EOV
IOBFLAG1 DS    CL1       ERROR FLAG 1
IOBFLAG2 DS    CL1       ERROR FLAG 2
IOBSENSE DS    CL2       I/O SENSE BITS
IOBECBPT DS    F         ECB ADDRESS
IOBCSW   DS    D         CSW STORED BY IOS
IOBSIOCC DS    0BL1      SIO CONDITION CODE
IOBSTART DS    F         CHANNEL PROGRAM STARTING CCW
IOBDCBPT DS    F         DCB ADDRESS
IOBRESTR DS    F         CHANNEL PROGRAM RESTART ADDRESS
IOBINCAM DS    CL2       BLOCK INCREMENT AMOUNT
IOBERRCT DS    CL2       ERROR COUNTS
IOBSEEK  DS    D         SEEK ADDRESS
IOBDNRCF DS    D         NEW RECORD COUNT FIELD
IOBR0CNT DS    D         COUNT FIELD OF R0
IOBR0DAT DS    D         DATA FIELD OF R0
IOBCCW1  DS    D         FIRST CCW OF CHANNEL PROGRAM
IOBCCW2  DS    D
IOBCCW3  DS    D
IOBCCW4  DS    D
IOBCCW5  DS    D
IOBCCW6  DS    D
IOBCCW7  DS    D
IOBCCW8  DS    D
IOBCCW9  DS    D
IOBCCW10 DS    D
IOBCCW11 DS    D
IOBCCW12 DS    D
IOBCCW13 DS    D
IOBCCW14 DS    D         LAST CCW OF LONGEST CHANNEL PROGRAM
         EJECT
DECBDEF  DSECT     DATA EVENT CONTROL BLOCK
DECSDECB DS    F         STANDARD ECB
DECTYPE  DS    CL2       TYPE AND OPTIONS
DECLNGTH DS    CL2       DATA LENGTH
DECDCBAD DS    F         DCB ADDRESS
DECAREA  DS    F         AREA ADDRESS
DECIOBPT DS    F         IOB ADDRESS
DECKYADR DS    F
DECOFSET DS    CL2
DECRESPN DS    CL1
         EJECT
*
DEB      DSECT
         DS    0F
DEBNMSUB DS    0CL1
DEBTCBAD DS    CL4
DEBAMLNG DS    0CL1
DEBDEBAD DS    CL4
DEBOGLGS DS    0CL1
DEBIRBAD DS    CL4
DEBOPATB DS    0CL1
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4
DEBEXSCL DS    0CL1
DEBAPPAD DS    CL4
DEBDVMOD DS    0CL1
DEBUCBAD DS    CL4
DEBBINUM DS    CL2
DEBSTRCC DS    CL2
DEBSTRHH DS    CL2
DEBENDCC DS    CL2
DEBENDHH DS    CL2
DEBNMTRK DS    CL2
DEBSUBID EQU   0         SUBROUTINE ID'S
         END
