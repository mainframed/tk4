         TITLE 'IGG019LC - BDAM END OF EXTENT APPENDAGE'
IGG019LC CSECT
*MODULE NAME = IGG019LC                                               *
*                                                                     *
*DESCRIPTIVE NAME = BDAM END OF EXTENT APPENDAGE                      *
*                                                                     *
*COPYRIGHT = NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*        OS REL 21 CHANGES/DELETIONS
*7030024000-024200                                               M0174
*        VS1-1 CHANGES/DELETIONS
*        VS2-1 CHANGES/DELETIONS
*        VS1-2 CHANGES/DELETIONS
*                                                               XA00088
*        VS2-2 CHANGES/DELETIONS
*035200-043400                                                   Y02072
*                                                                YM1397
*
*STATUS LEVEL - VS2-2 LEVEL 0                                         *
*                                                                     *
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE CONTAINS THE BDAM END OF EXTENT IOS  *
*   APPENDAGE.THIS MODULE IS REQUIRED IF THE DCB SPECIFIES THAT THE   *
*   EXTENDED SEARCH OPTION IS DESIRED. THIS MODULE IS ENTERED BY IOS  *
*   WHEN IOS DETERMINES THAT A CHANNEL PROGRAM,IN THE COURSE OF A     *
*   SEARCH,IS ABOUT TO LEAVE THE CURRENT EXTENT.THIS MODULE IS ALSO   *
*   USED BY IGG019KY WHEN THE ADDRESS OF THE NEXT TRACK TO BE EXAMINED*
*   BY THE SELF-FORMAT ROUTINE IS NOT WITHIN THE CURRENT EXTENT.      *
*   THIS ROUTINE OBTAINS THE STARTING ADDRESS IN THE NEXT EXTENT ,AND *
*   CHECKS THIS ADDRESS TO DETERMINE IF IT IS WITHIN THE SEARCH       *
*   LIMITS.                                                           *
*                                                                     *
*ENTRY POINT- 'EEAENTRY' IS THE NORMAL ENTRY POINT FROM IOS WITH A    *
*   CALLING SEQUENCE,   L     15,0(APPENDAGE LIST)                    *
*                       BALR  14,15                                   *
*                                                                     *
*   'SFMENTRY' IS THE ENTRY POINT FROM THE SELF FORMAT MODULE WITH A  *
*   CALLING SEQUENCE,   L     15,0(APPENDAGE LIST)                    *
*                       L     12,RETURN ADDR                          *
*                       BC    15,4(15)                                *
*                                                                     *
*INPUT- TO 'EEAENTRY' THE FOLLOWING REGISTERS ARE USED AS POSITIONED  *
*   BY IOS,                                                           *
*   1- ADDRESS OF IOS QUEUING ELEMENT FOR THIS I/O REQUEST            *
*   2- ADDRESS OF THE IOB ASSOCIATED WITH THIS I/O REQUEST            *
*   3- ADDRESS OF THE DEB ASSOCIATED WITH THIS DATA SET               *
*   6- ADDRESS OF THAT FIELD IN IOSB CONTAINING UCBSEEK INFO    Y02072*
*   7- ADDRESS OF THE UCB ASSOCIATED WITH THE CURRENT EXTENT          *
*  13- ADDRESS OF IOS REGISTER SAVEAREA                         Y02072*
*  14- RETURN (NORMAL) TO IOS                                         *
*  15- ENTRY POINT IN THIS MODULE                                     *
*                                                                     *
*   TO 'SFMENTRY' THE FOLLOWING REGISTERS ARE USED AS POSITIONED BY   *
*   'IGG019KY'                                                        *
*   1- ADDRESS OF THE IOB ASSOCIATED WITH THIS I/O REQUEST            *
*  12- RETURN TO SELF-FORMAT MODULE                                   *
*  14- ADDRESS  OF THE DEB ASSOCIATED WITH THIS DATA SET              *
*  15- ADDRESS OF THIS MODULE                                         *
*                                                                     *
*OUTPUT- IF THE LIMIT OF THE SEARCH HAS NOT BEEN REACHED THIS MODULE  *
*   CAUSES THE SEARCH TO BE RESTARTED AT THE START OF THE NEXT EXTENT.*
*   IF THE LIMIT HAS BEEN REACHED THE PROPER ERROR FLAG IS SET.       *
*                                                                     *
*EXTERNAL ROUTINES- N/A                                               *
*                                                                     *
*EXIT-NORMAL-'EXITA' IS THE POINT AT WHICH AN 'EXCP' IS GIVEN AND A   *
*   RETURN TO SUPERVISOR EFFECTED BY USE OF THE 'EXIT' SVC .          *
*   'CLRENTR1' IS A RETURN TO THE IOS IGNORE OFFSET WHICH CAUSES THE  *
*   ABNORMAL END APPENDAGE TO BE ENTRED.                              *
*   'EXITB' IS A RETURN TO THE IOS EXCP RETURN OFFSET                 *
*                                                                     *
*EXIT-ERROR- 'EXITC' IS A RETURN TO THE IOS IGNORE OFFSET WHICH CAUSES*
*   THE ABNORMAL END APPENDAGE TO BE ENTERED-THIS EXIT IS TAKEN IF THE*
*   SEARCH LIMIT IS REACHED AND THE REQUEST WAS NOT FOR A WRITE-ADD   *
*   'EXITD' IS A RETURN TO THE IOS IGNORE OFFSET-THIS EXIT IS TAKEN IF*
*   THE SEARCH LIMIT IS REACHED ON A WRITE ADD PRE-FORMAT REQUEST     *
*   'EXITE' IS A RETURN TO THE SELF FORMAT MODULE-THIS EXIT IS TAKEN  *
*   IF THE SEARCH LIMIT IS REACHED AND ENTRY WAS AT 'SFMENTRY'        *
*                                                                     *
*TABLES/WORK AREAS- N/A                                               *
*                                                                     *
*ATTRIBUTES- THIS ROUTINE IS REENTRANT, ENABLED AND PRIVILEGED (WHEN  *
*   FUNCTIONING AS AN APPENDAGE).AS AN APPENDAGE IT IS ENTERED IN KEY0*
*   WITH THE LOCAL LOCK HELD.  IN THIS CASE A MODESET IS ISSUED       *
*   TO DO ALL PROCESSING IN USER KEY.  WHEN BRANCHED TO BY THE        *
*   SELF-FORMAT MODULE PROCESSING IS IN PROBLEM PROG STATE,USER KEY.  *
*                                                                     *
*NOTE- THIS ROUTINE RELIES ON THE REGISTER USAGE OF IOS.              *
*                                                                     *
*                                                                     *
*                                                                     *
*   REGISTER USAGE                                                    *
*                                                                     *
         USING IGG019LC,BASER
         USING IOBSTDRD,IOBRR                                    Y02072
         USING DEBDEF,DEBR
*                                                                     *
*                                                                     *
*   REGISTER EQUATES                                                  *
*                                                                     *
R0       EQU   0                        PARAMETER REGISTER       Y02072
RQER     EQU   1                        RQE ADDRESS              Y02072
IOBRR    EQU   2                        IOB ADDRESS              Y02072
DEBR     EQU   3                        DEB ADDRESS
R5       EQU   5                        WORKREG FOR MODESET      Y02072
IOSEEKR  EQU   6                        IOSB UCBSEEK ADDR        Y02072
UCBR     EQU   7                        UCB ADDRESS
INTDEBR  EQU   8                        SELF FORMAT DEB REGISTER
WRKR4    EQU   9                        WORKING REGISTER
WRKR1    EQU   10                       WORKING REGISTER
WRKR2    EQU   11                       WORKING REGISTER
WRKR3    EQU   12                       WORKING REGISTER
INTIOBR  EQU   12                       WORKING REGISTER
INTDCBR  EQU   13                       SELF FORMAT DCB REGISTER
SAVER    EQU   13                       ADDR OF IOS SAVEAREA     Y02072
RETNR    EQU   14                       RETURN TO IOS
BASER    EQU   15                       BASE REGISTER FOR THIS MODULE
R15      EQU   15                       SAVE/RESTORE REG         Y02072
*                                                                     *
*                                                                     *
*                                                                     *
EEAENTRY EQU   *                        END OF EXTENT APPENDAGE ENTRY
         USING RQE,RQER                 ESTABLISH BASE FOR RQE   Y02072
         B     ECBCHK                   BRANCH TO MAIN FLOW      Y02072
SFMENTRY EQU   *                        SELF-FORMAT MODULE ENTRY POINT
         LR    DEBR,INTDEBR             SET UP DEB REGISTER
         LR    IOBRR,INTIOBR            SET UP IOB REGISTER      Y02072
         B     TSTEXTNO                 BR AROUND ECB PTR CHK    Y02072
***********************************************************************
*  THE FOLLOWING CODE IS ALWAYS EXECUTED UPON ENTRY TO THE APPENDAGE. *
*  IF DYNAMIC BUFFERING OR EXCLUSIVE CNTRL WERE REQUESTED,ITS POSSIBLE*
*  THAT THIS IOB HAD TO WAIT FOR A BUFFER OR BLK.  IF SO, USER'S DECB *
*  ADDRESS HAS BEEN SAVED IN THE IOBDQPTR FIELD IN THE IOB BEFORE     *
*  THE SECOND EXCP WAS ISSUED AGAINST THIS IOB IN THE DYN BUF RTN OR  *
*  IGC0005C.  THIS WAS NECESSARY TO PREVENT THE PROCESSING OF THE     *
*  SECOND EXCP FROM OVERLAYING ANY CHANGE IN THE STATUS OF THE ECB.   *
***********************************************************************
ECBCHK   EQU   *                        CHECK DECB ADDR          Y02072
         STM   R0,R15,0(SAVER)          SAVE IOS REGISTERS       Y02072
         SR    INTDEBR,INTDEBR          ZERO FOR EOE ENTRY       Y02072
*
         MODESET  KEYADDR=RQEPRT,WORKREG=5   CHANGE TO USER KEY  Y02072
*
         L     WRKR2,IOBECBPT           GET ADDR IN IOB FOR DECB Y02072
         LA    WRKR2,0(WRKR2)           CLEAR OUT TOP BYTE       Y02072
         LA    WRKR3,IOBCSW+3           GET ADDR OF IOBCSW WORD  Y02072
         CR    WRKR2,WRKR3              DOES IOBECBPT PT TO CSW  Y02072
         BNE   TSTEXTNO                 IF NOT, DECB PTR OK      Y02072
         L     WRKR2,IOBDQPTR           ELSE,GET REAL DECB PTR   Y02072
         STCM  WRKR2,ADDR,IOBECBPB      STORE IT IN LOW 3 BYTES  Y02072
         XC    IOBDQPTR,IOBDQPTR        CLEAR IOB FIELD          Y02072
***********************************************************************
TSTEXTNO EQU   *
         SR    WRKR3,WRKR3             CLEAR REGISTER AND
         IC    WRKR3,IOBSEEK           LOAD CURRENT EXTENT NUMBER
         LA    WRKR1,1(0,WRKR3)        ADJUST EXTENT NUMBER
         SR    WRKR2,WRKR2             CLEAR REGISTER
         IC    WRKR2,DEBNMEXT          AND PICK UP NO. OF EXTENTS
         CR    WRKR1,WRKR2             IS THIS THE LAST EXTENT
         BNE   NEXTEXTT                NO-WORK WITH NEXT EXTENT
         SR    WRKR1,WRKR1             YES-USE FIRST EXTENT
NEXTEXTT EQU   *
         STC   WRKR1,IOBSEEK           STORE NEW EXTENT NO IN IOBSEEK
         STC   WRKR1,IOBDNCRF+DISPR    AND IN FEEDBACK FIELD    XA00088
         SLL   WRKR1,4                 MULT EXTENT NO. BY 16
         LA    WRKR2,DEBDVMOD(WRKR1)   LOAD ADDRESS OF EXTENT
         USING DEBDVMOD,WRKR2                                    M0174
         MVC   IOBSEEK+1(6),4(WRKR2)   MOVE REST OF IOBSEEK FIELD
TSTUPLIM EQU   *
         CLC   IOBUPLIM(1),IOBSEEK     IS LIMIT IN THIS EXTENT
         BE    MOVEZERO                YES-TAKE BRANCH
TSTENTRY EQU   *                       NO-WAS ENTRY MADE FROM IOS
         CR    DEBR,INTDEBR            END OF EXTENT APPENDAGE
         BE    EXITA                   NO- TAKE BRANCH
         L     WRKR3,DEBUCBAD          GET UCB ADDR FOR THIS EXT  M0174
         LA    WRKR3,0(WRKR3)          CLEAR HI-ORDER BYTE        M0174
         CR    UCBR,WRKR3              IS DEVICE SAME AS BEFORE?  M0174
         DROP  WRKR2                                              M0174
         BNE   NEWEXCP                  NO-TAKE BRANCH
EXITB    EQU   *                        REISSUE THE EXCP
*
         MODESET  KEYADDR=IOSKEY,WORKREG=5  RETURN TO IOSKEY     Y02072
*
         MVC   0(L'IOBSEEK,IOSEEKR),IOBSEEK  MOVE NEW SEEK ADDR  YM1397
*                                       INTO IOSB PASSED BY IOS  Y02072
         LM    R0,R15,0(SAVER)          RESTORE IOS REGISTERS    Y02072
         B     EXCPRETN(RETNR)          RETURN TO EXCP OFFSET
NEWEXCP  EQU   *
         OI    IOBDSTAT,EXCPBIT         SET EXCP BIT IN DSTAT
CLRENTR1 EQU   *
*
         MODESET  KEYADDR=IOSKEY,WORKREG=5  RETURN TO IOSKEY     Y02072
*
         LM    R0,R15,0(SAVER)          RESTORE IOS REGISTERS    Y02072
         BR    RETNR                   RETURN-THEN ENTER ABNL. END APP.
MOVEZERO EQU   *
         MVI   IOBUPLIM+7,ZERO         ZERO R BYTE OF IOBUPLIM
         CLC   IOBUPLIM(8),IOBSEEK     DOES IOBSEEK EQUAL IOBUPLIM
         BNE   TSTENTRY                NO-TAKE BRANCH
*                                      YES-CONTINUE
         TM    IOBDTYP2,IOBADDTY       IS THIS A WRITE ADD       Y02072
         BO    NOSPACE                 YES-TAKE BRANCH
EXITC    EQU   *                       ERROR, NO REC FOUND       Y02072
         OI    IOBSTAT2,NOREC          NO-SET NO RECORD FOUND    Y02072
         B     CLRENTR1                IN EXCEPTION CODE AND RET Y02072
NOSPACE  OI    IOBSTAT2,NOSPA          SET NO SPACE FOUND BIT IN Y02072
*                                      EXCEPTION CODE
         CR    DEBR,INTDEBR            WAS ENTRY MADE FROM IOS END OF
*                                      EXTENT APPENDAGE
EXITD    EQU   *
         BNE   CLRENTR1                YES-RETURN                Y02072
         L     WRKR1,DCBDFOR(0,INTDCBR) NO-RESET THE BASE OF THE
*                                       SELF FORMAT MODULE
         LR    INTIOBR,IOBRR           RESTORE THE IOB TO REG    Y02072
EXITE    EQU   *
         B     4(0,RETNR)              AND RETURN TO IT
EXITA    EQU   *                       SAVE THE CONTENTS OF
         L     WRKR1,DCBDFOR(0,INTDCBR) RESTORE SELF FORMAT BASE
         LR    INTIOBR,IOBRR           RESTORE IOB ADDR TO REG   Y02072
         BR    RETNR                   ROUTINE AND RETURN TO IT
*
*
*                    CONSTANTS  AND  EQUATES
*
*
ENTRY1   EQU   X'20'                   ENTRY 1 BIT MASK FOR DSTAT
EXTSN    EQU   16                      SIZE OF NORMAL EXTENT FOR D. A.
UCBSEEK  EQU   48                      SEEK ADDRESS OFFSET IN UCB
TYPCD    EQU   19                      DEVICE TYPE OFFSET IN UCB
EXCPRETN EQU   8                       OFFSET FOR EXCP RETURN
EXCPBIT  EQU   X'40'                   EXCP BIT MASK FOR DSTAT
ZERO     EQU   0
ADDBIT   EQU   X'02'
NOREC    EQU   X'80'                   NO RECORD FOUND EXCEPTION CODE
DISPR    EQU   7                       OFFSET WHERE EXTENT      XA00088
*                                      IS SAVED FOR FEEDBACK    XA00088
NOSPA    EQU   X'20'                   NO SPACE  FOUND EXCEPTION CODE
DCBDFOR  EQU   92                      OFFSET OF SELF-FORMAT MODULE
DCBDEBAD EQU   44                      OFFSET OF DEB ADDRESS IN DCB
DEVMASK  EQU   X'0F'                   MASK FOR ISOLATING DEVICE TYPE
FIRST    EQU   X'10'                   FIRST PASS BIT MASK FOR DSTAT
EXIT     EQU   3                       EXIT SVC
ADDR     EQU   B'0111'                 MASK FOR STCM TO ST LOW   Y02072
*                                      ORDER 3 BYTES OF REGISTER Y02072
*
IOSKEY   DC    X'00'                   IOS KEY                   Y02072
PATCH    DC    XL50'0'                 PATCH AREA                Y02072
         EJECT
***********************************************************************
*                           DSECTS                                    *
***********************************************************************
         IEZIOB                                                  Y02072
*
*
         ORG   IOBRSV35                                          Y02072
IOBUPLIM DS    CL8                      MBBCCHHR OF UPPER LIMIT  Y02072
*                                       COUNT DURING EXT SEARCH  Y02072
         EJECT
         IECDRQE                                                 Y02072
         EJECT
*
*      DATA EXTENT BLOCK (DEB) DEFINITION
*
DEBDEF   DSECT
DEBNMSUB DS    0CL1      NO. OF SUBR. LOADED BY OPEN
DEBTCBAD DS    CL4       ADDRESS OF THE TCB FOR THIS DEB
DEBAMLNG DS    0CL1      NO. OF BYTES IN THE ACCESS MTHD. DPDT. SECTION
DEBDEBAB DS    CL4       ADDRESS OF THE PREVIOUS DEB IN THE SAME TASK
DEBOFLGS DS    0CL1      DATA SET STATUS FLAGS
DEBIRBAD DS    CL4       IRB ADDRESS
DEBOPATB DS    0CL1      TYPE OF FILES
DEBSYSPG DS    CL4       ADDRESS OF FIRST IOB IN THE SYSTEM PURGE CHAIN
DEBNMEXT DS    0CL1      NUMBER OF EXTENTS SPECIFIED IN THE DSCB
DEBUSRPG DS    CL4       ADDRESS OF FIRST IOB IN THE USER PURGE CHAIN
DEBPRIOR DS    0CL1      ALWAYS ZERO
DEBECBAD DS    CL4       ECB ADDRESS FOR SVC PURGE REQUEST
DEBPROTG DS    0CL1      RESERVED FOR FUTURE USE (FIRST 4 BITS)
DEBDEBID DS    0CL1      HEX 'F' TO IDENTIFY THIS BLOCK AS A DEB
DEBDCBAD DS    CL4       ADDRESS OF THE DCB ASSOCIATED WITH THIS DEB
DEBEXSCL DS    0CL1      EXTENT SCALE
DEBAPPAD DS    CL4       ADDRESS OF I/O APPENDAGE VECTOR TABLE
DEBDVMOD DS    0CL1      DEVICE MODIFIER FILE MASK
DEBUCBAD DS    CL4       ADDR OF UCB ASSOCIATED WITH THIS DATA EXTENT
DEBBINUM DS    CL2       RESERVED FOR FUTURE USE-ALWAYS ZERO
DEBSTRCC DS    CL2       STARTING CYLINDER NUMBER FOR EXTENT
DEBSTRHH DS    CL2       STARTING HEAD NUMBER FOR EXTENT
DEBENDCC DS    CL2       ENDING CYLINDER NUMBER FOR EXTENT
DEBENDHH DS    CL2       ENDING HEAD NUMBER FOR EXTENT
DEBNMTRK DS    CL2       NUMBER OF TRACKS ALLOCATED TO A GIVEN EXTENT
DEBSUBID EQU   0         SUBROUTINE ID'S
         END
