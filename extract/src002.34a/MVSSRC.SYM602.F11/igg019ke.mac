 TITLE   'IGG019KE - BDAM RELATIVE BLOCK CONVERSION MODULE'
IGG019KE CSECT
*MODULE NAME - IGG019KE                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM RELATIVE BLOCK CONVERSION, NON TRK OVERFLOW  *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*        OS REL 21 CHANGES/DELETIONS
*        VS 1-1 CHANGES/DELETIONS
*        VS 2-1 CHANGES/DELETIONS
*        VS 1-2 CHANGES/DELETIONS
*        VS 2-2 CHANGES/DELETIONS
*                                                                Y02072
*                                                                YM3029
*STATUS- CHANGE LEVEL 1                                               *
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE IS ENTERED TO CONVERT THE USER'S     *
*   RELATIVE BLOCK ADDRESS TO AN ACTUAL TRACK ADDRESS OF THE FORM     *
*   MBBCCHHR. THIS IS ACCOMPLISHED BY OBTAINING THE RELATIVE BLOCK    *
*   NUMBER FROM THE BLKREF FIELD ASSOCIATED WITH THIS REQUEST AND     *
*   CONVERTING TO A TTR (RELATIVE TRACK AND ID) VALUE, USING THE      *
*   RELATIVE EXTENTS WHICH WERE ADDED TO THE DEB AT OPEN TIME. THE    *
*   TTR VALUE IS THEN PASSED TO THE RESIDENT ROUTINE WHICH CONVERTS   *
*   TTR TO AN ACTUAL ADDRESS.                                         *
*                                                                     *
*ENTRY POINT- 'IGG019KE' (RRSTART) IS THE ENTRY POINT TO THIS ROUTINE *
*   FROM THE BDAM FOUNDATION MODULE (IGG019KA) AND FROM THE READ      *
*   EXCLUSIVE SVC.  THE CALLING SEQUENCES ARE AS FOLLOWS:             *
*            L    15,4(FOUNDATION BASE)                               *
*            BALR 14,15 - IF 19KA                                     *
*         OR SYNCH (15) - IF SVC 53                                   *
*                                                                     *
*INPUT- THE REGISTERS HAVE BEEN LOADED AS FOLLOWS,                    *
*   3 - ADDRESS OF THE DEB                                            *
*   4 - ADDRESS OF THE DCB                                            *
*   5 - ADDRESS OF THE DECB FOR THIS REQUEST                          *
*   7 - ADDRESS OF THE IOB FOR THIS REQUEST                           *
*   11- BASE ADDRESS OF THE FOUNDATION MODULE                         *
*   THE RELATIVE BLOCK NUMBER IS OBTAINED BY LOADING THE ADDRESS OF   *
*   BLKREF FROM THE DECB (DECRECPT) AND MOVING THE CONTENTS OF BLKREF *
*   TO THE IOB FOR ALLIGNMENT.                                        *
*                                                                     *
*OUTPUT- THE ACTUAL ADDRESS WILL BE DEVELOPED AND STORED INTO THE IOB *
*   AT THE LOCATION 'IOBSEEK'. THE REGISTERS DESCRIBED AS INPUT WILL  *
*   BE UNCHANGED WHEN THIS MODULE RETURNS TO THE FOUNDATION MODULE.   *
*                                                                     *
*EXTERNAL ROUTINE- 'IECPCNVT' IS USED TO CONVERT TTR TO AN ACTUAL     *
*   ADDRESS AND STORE IT IN THE IOB.                                  *
*                                                                     *
*EXIT-NORMAL- 'EXITFDN' IS THE EXIT TO RETURN TO THE CALLING          *
*   MODULE AFTER CONVERSION HAS BEEN SUCCESSFULLY COMPLETED.          *
*                                                                     *
*    -ERROR- 'EXITERR' IS THE EXIT TO THE INVALID REQUEST ERROR       *
*   ROUTINE IN THE FOUNDATION MODULE. AN ERROR CODE IS PASSED IN      *
*   REGISTER 12 AND WILL BE PLACED IN THE ECB WHEN THE ERROR ROUTINE  *
*   ISSUES A POST. THE CAUSE OF THE INVALID REQUEST IS A RELATIVE     *
*   BLOCK NUMBER GREATER THAN THE TOTAL BLOCKS IN THE DATA SET.       *
*                                                                     *
*TABLES/WORK AREAS- THE COMMUNICATION VECTOR TABLE IS REFERENCED      *
*   TO LOCATE THE RESIDENT TTR TO ACTUAL CONVERSION ROUTINE.          *
*                                                                     *
*ATTRIBUTES- THIS MODULE IS REENTRANT AND EXECUTED ENABLED.           *
*   IT EXECUTES IN PROBLEM PROGRAM STATE, USER KEY.                   *
*                                                                     *
*NOTES- THE REGISTER USAGE IN THIS MODULE MUST REMAIN CONSISTENT      *
*   WITH THE MODULES IGG019KA, IECPCNVT.                              *
*
         USING IGG019KE,BASE
         USING IOBSTDRD,IOBREG
         USING DEBDEF,DEBREG
         USING IHADCB,DCBREG
         USING DECBDEF,DECBREG
*
*              REGISTER USAGE
*
WKREG0   EQU   0                       WORKING REGISTER
SREG1    EQU   1                        PARAMETER REGISTER FOR BPAM
SREG2    EQU   2                        PARAMETER REGISTER FOR BPAM
DEBREG   EQU   3                       DEB ADDRESS
DCBREG   EQU   4                       DCB ADDRESS
DECBREG  EQU   5                       DECB ADDRESS
WKREG1   EQU   6                       WORKING REGISTER
IOBREG   EQU   7                        IOB ADDRESS
WKREG2   EQU   8                       WORKING REGISTER
SREG8    EQU   8
WKREG3   EQU   9                       WORKING REGISTER
WKREG4   EQU   10                      WORKING REGISTER
FDNBASE  EQU   11                      BASE FOR FOUNDATION MODULE
INTREG   EQU   12                      INTERNAL RETURN FOR THIS MODULE
SREG12   EQU   12                      ERROR CONDITION REGISTER
RETREG   EQU   14                      RETURN TO FOUNDATION MODULE
SREG14   EQU   14                       PARAMETER REGISTER FOR BPAM
BASE     EQU   15                      BASE REGISTER FOR THIS MODULE
SREG15   EQU   15                       PARAMETER REGISTER FOR BPAM
*
*
RRSTART  L     WKREG3,DECRECPT          LOAD ADDR. OF RELATIVE RECORD
*                                        VALUE
         MVC   IOBCSW(3),0(WKREG3)    MOVE VALUE TO IOB
         L     WKREG3,IOBCSW-1          LOAD VALUE INTO REGISTER
         LA    SREG2,IOBSEEK            SET POINTER TO IOBSEEK FIELD
DEBPT    LR    WKREG1,DEBREG            LOAD ADDR. OF DEB
         LA    WKREG1,EXT1(0,WKREG1)    SET POINTER TO FIRST EXTENT
         LR    WKREG2,WKREG1            SET UP TO DETERMINE ADDRESS OF
         SR    WKREG4,WKREG4             FIRST RELATIVE RECORD EXTENT
         IC    WKREG4,DEBNMEXT          LOAD NUMBER OF EXTENTS
RREXT    LA    WKREG2,EXTSN(0,WKREG2)   ADD EXTENT SIZE TO RELATIVE
*                                        RECORD EXTENT POINTER
         BCT   WKREG4,RREXT             WAS THIS THE LAST EXTENT
*                                       NO-INCREMENT POINTER
*                                       YES-WKREG2 NOW POINTS TO FIRST
*                                        RELATIVE RECORD EXTENT
         IC    WKREG4,DEBNMEXT          LOAD NUMBER OF EXTENTS
         SR    WKREG0,WKREG0            CLEAR REGISTER
RELTRK   EQU   *
         MVC   IOBCSW(3),1(WKREG2)      MOVE NO. OF RECORDS IN THIS
*                                        EXTENT TO ALIGN VALUE
         S     WKREG3,IOBCSW-1          SUBTRACT VALUE FROM GIVEN
*                                        RELATIVE RECORD ADDRESS
         BC    4,OVER                   ADDRESS IN THIS EXTENT
         AH    WKREG0,TRK(0,WKREG1)     NO-ADD NO. OF TRACKS IN THIS
*                                        EXTENT TO RESULT REG.
         LA    WKREG1,EXTSN(0,WKREG1)   INCREMENT NORMAL EXTENT POINTER
         LA    WKREG2,EXTSR(0,WKREG2)   INCREMENT REL. REC. EXTENT PTR.
         BCT   WKREG4,RELTRK            WAS THIS THE LAST EXTENT
*                                       NO CONTINUE  CALCULATION
         SR    SREG12,SREG12            YES-ERROR,REL. REC. NOT IN DATA
         IC    SREG12,ERRCODE            SET
         TM    IOBSTAT1,IOBSYNCH        MODULE ENTERED BY SYNCH? Y02072
*                                       ENTRY FROM EXCL CNTROL   Y02072
         BOR   RETREG                   RETURN ON R14            Y02072
         L     RETREG,20(0,FDNBASE)    LOAD ADDRESS OF ERROR RETURN
EXITERR  BR    RETREG                   AND GO TO ERROR ROUTINE
*
OVER     EQU   *
         A     WKREG3,IOBCSW-1          ADD NO. OF RECORDS IN THIS
*                                        EXTENT BACK TO REL. REC. VALUE
         IC    WKREG4,0(0,WKREG2)       LOAD NO. OF RECORDS PER TRACK
         SR    WKREG2,WKREG2            CLEAR REG
         DR    WKREG2,WKREG4            DIVIDE NO. OF RELATIVE RECORDS
*                                        WITHIN THE EXTENT BY THE NO.
*                                        OF RECORDS PER TRACK
*                                        QUOTIENT=TRACKS WITHIN EXTENT
*                                        REMAINDER=RECORD ID-1
         AR    WKREG0,WKREG3            ADD QUOTIENT TO TRACKS IN PRIOR
*                                        EXTENTS
         LA    WKREG2,1(0,WKREG2)       ADD ONE TO REMAINDER
         SLL   WKREG0,8                 SHIFT TT REG ONE BYTE TO LEFT
         OR    WKREG0,WKREG2            PLACE REC. ID IN TT REG
CONVERT  SLL   WKREG0,8                 SHIFT TTR REG ONE BYTE TO LEFT
*                                        REG IS NOW IN FORMAT REQUIRED
*                                        BY BPAM
*              SAVE REGISTERS
         STM   SREG8,SREG15,IOBDNCRF    SAVE REGISTERS 8-15
         LR    SREG1,DEBREG             SET POINTER TO DEB
         L     SREG15,CVTPTR(0,0)       LOAD ADDR. OF COMM.VECTOR TABLE
         L     SREG15,CVTPCNVT-CVTDEF(0,SREG15)  LOAD ADDRESS OF
*                                            CONVERSION ROUTINE
         BALR  SREG14,SREG15            GO TO CONVERT ROUTINE
*              RESTORE REGISTERS
RETURN   EQU   *
         LM    SREG8,SREG15,IOBDNCRF    RESTORE REGISTERS 8-15
         TM    IOBSTAT1,IOBSYNCH        MODULE ENTERED BY SYNCH? Y02072
*                                       ENTRY FROM EXCL CNTROL   Y02072
         BZ    TSTEXSCH                 BRANCH NO                Y02072
         SR    SREG12,SREG12            ZERO RETURN CODE         Y02072
         BR    RETREG                   RETURN                   Y02072
TSTEXSCH TM    IOBDTYPE,IOBEXTSC        IS EXTENDED SEARCH OPTION USED
         BCR   8,RETREG                 NO-RETURN TO FOUNDATION MODULE
RREXTS1  TM    IOBSTAT1,IOBPASS2        FIRST PASS FOR THIS IOB
         BC    1,CLEANUP                NO
         L     WKREG3,DECRECPT          YES-MOVE STARTING RELATIVE
         MVC   IOBCSW(3),0(WKREG3)       RECORD VALUE TO IOB
         LA    SREG2,IOBUPLIM           SET POINTER FOR CONVERT ROUTINE
         OI    IOBSTAT1,IOBPASS2        SET FIRST PASS INDICATOR
         L     WKREG3,DCBLIMCT-1       GET LIMCT INTO REG3
         LA    WKREG3,0(0,WKREG3)      CLEAR THE HI ORDER BYTE OF REG 3
*                FIX FOR APAR 7035
         LTR   WKREG3,WKREG3      IS LIMCT ZERO
         BZ    AROUND        YES, BRANCH AROUND DECREMENT
         BCTR  WKREG3,0
AROUND   EQU   *
         AR    WKREG3,WKREG4           ADD ON RECORDS/TRACK
         L     WKREG4,DCBKEYLE         GET THE DATA SET SIZE
         LA    WKREG4,0(0,WKREG4)      CLEAR THE HI ORDER BYTE
         CR    WKREG3,WKREG4           COMPARE LIMCT +RECORDS/TRACK TO
*                                      DATA SET SIZE
         BL    ADDSTART                SET. IF LOW BRANCH
         MVC   IOBUPLIM,IOBSEEK         YES-SET ENDING ADDRESS EQUAL TO
*                                        START ADDRESS
CLEANUP  NI    IOBSTAT1,X'FF'-IOBPASS2  CLEAR FIRST PASS INDICATOR
         MVI   IOBUPLIM+7,X'00'         SET R IN UPLIM TO ZERO
         CLC   IOBUPLIM(1),IOBSEEK      IS EXTENDED SEARCH LIMIT IN
*                                        SAME EXTENT AS START ADDRESS
         BC    6,DUMMYID                NO
         CLC   IOBSEEK+3(4),IOBUPLIM+3  DOES SEARCH WRAP AROUND
         BCR   4,RETREG                 NO-RETURN TO FOUNDATION MODULE
DUMMYID  MVI   IOBUPLIM+7,X'FE'         SET RECORD ID IN UPLIM TO 255
EXITFDN  EQU   *
         BCR   15,RETREG                RETURN TO FOUNDATION MODULE
*
*
ADDSTART EQU   *
         A     WKREG3,IOBCSW-1          ADD STARTING RELATIVE RECORD TO
*                                        EXTENDED SEARCH VALUE
         MVC   IOBCSW(3),DCBREL         ALIGN SIZE OF DATA SET
         CL    WKREG3,IOBCSW-1          COMPARE RESULT WITH SIZE OF
*                                        DATA SET
         BL    DEBPT                    BRANCH IF SEARCH DOES NOT WRAP
*                                        AROUND TO START OF DATA SET
         S     WKREG3,IOBCSW-1          ADJUST ENDING ADDRESS SO THAT
*                                        IT FALLS WITHIN DATA SET
         B     DEBPT                    GO TO CONVERT ENDING ADDRESS
*
*
*
EXT1     EQU   32             OFFSET OF FIRST EXTENT FROM START OF DEB
EXTSN    EQU   16             SIZE OF NORMAL EXTENT FOR DIRECT ACCESS
TRK      EQU   14             NO. OF TRACKS OFFSET FROM START OF EXTENT
EXTSR    EQU   4              SIZE OF RELATIVE RECORD EXTENT
TONE     DC    H'256'
ERRCODE  DC    FL1'16'
*              EXCEPTION CODES
NOREC    EQU   X'80'
LGNCK    EQU   X'40'
NOSPA    EQU   X'20'
INVAL    EQU   X'10'
UNCOR    EQU   X'08'
ENDOD    EQU   X'04'
UNREL    EQU   X'02'
*              OPTIONS AND TYPE
VERIFY   EQU   X'80'
OFLOW    EQU   X'40'
FEEDB    EQU   X'10'
ACTAD    EQU   X'08'
DYNBF    EQU   X'04'
READX    EQU   X'02'
RELRD    EQU   X'01'
KEYOP    EQU   X'80'
LGNOP    EQU   X'40'
READ     EQU   X'08'
KEY      EQU   X'04'
ADD      EQU   X'02'
MODID    DC    C'IGG019KE'              MODULE ID                Y02072
PATCH    DC    XL50'0'                  PATCH AREA               Y02072
         EJECT
***********************************************************************
*                         DSECTS
***********************************************************************
CVTDEF   DSECT
         CVT
         EJECT
*      DATA CONTROL BLOCK (DCB) DEFINITION
*
         DCBD  DSORG=DA
         EJECT
*      DATA EVENT CONTROL BLOCK (DECB) DEFINITION
         DS    0F
DECBDEF  DSECT
DECSDECB DS    CL4            STANDARD EVENT CONTROL BLOCK (ECB)
DECTYPE  DS    CL2            TYPE FIELD
DECLNGTH DS    CL2            DATA LENGTH
DECDCBAD DS    CL4            ADDRESS OF DCB
DECAREA  DS    CL4            ADDRESS OF DATA AREA
DECIOBPT DS    CL4            ADDRESS OF THE IOB
DECKYADR DS    CL4            ADDRESS OF KEY
DECRECPT DS    CL4            ADDRESS OF RECORD REFERENCE
         EJECT
*
*      I/O BLOCK (IOB) DEFINITION
*
         IEZIOB
         ORG   IOBRSV35
IOBUPLIM DS    D
         EJECT
*
*      DATA EXTENT BLOCK (DEB) DEFINITION
*
         DS    0F
DEBDEF   DSECT
*
         DS    0F
DEBNMSUB DS    0CL1                    COUNT OF ROUTINES LOADED
DEBTCBAD DS    CL4                     TASK CONTROL BLOCK ADDRESS
DEBAMLNG DS    0CL1                    WORD CNT OF BDAM ADDED CORE
DEBDEBAD DS    CL4                     DEB CHAIN ADDRESS
DEBOFLGS DS    0CL1                    OPEN FLAGS
DEBIRBAD DS    CL4                     IRB ADDRESS
DEBOPATB DS    0CL1                    DATA SET ATTRIBUTES
DEBSYSPG DS    CL4
DEBNMEXT DS    0CL1                    COUNT OF EXTENTS
DEBUSRPG DS    CL4
DEBPRIOR DS    0CL1
DEBECBAD DS    CL4
DEBPROTG DS    0CL1
DEBDEBID DS    0CL1
DEBDCBAD DS    CL4                     DCB ADDRESS
DEBEXSCL DS    0CL1                    EXTENT SIZE SCALE
DEBAPPAD DS    CL4                     IOS APPENDAGE LIST ADDRESS
DEBDVMOD DS    0CL1                    FILE MASK CODE
DEBUCBAD DS    CL4                     UCB ADDRESS
DEBBINUM DS    CL2                     BIN NUMBER (BB)
DEBSTRCC DS    CL2                     STARTING CYLINDER NUMBER
DEBSTRHH DS    CL2                     STARTING TRACK NUMBER
DEBENDCC DS    CL2                     ENDING CYLINDER NUMBER
DEBENDHH DS    CL2                     ENDING TRACK NUMBER
DEBNMTRK DS    CL2                     NO. OF TRACKS IN THIS EXTENT
DEBSUBID EQU   0         SUBROUTINE ID'S
*
*                IO DEVICE TABLE
*
         DS    0F
DTAB     DC    X'000814202C380000'
DEVSZ    DS    CL4                     DEVICE SIZE   CCHH
TRKLNGTH DS    CL2                     TRACK LENGTH
OVERI    DS    CL1                     OVERHEAD  NOT LAST
OVERL    DS    CL1                     OVERHEAD  NLAST
OVERK    DS    CL1                     OVERHEAD  NNON KEYED
FLAG     DS    CL1                     FLAG
TOLER    DS    CL2                     TOLERANCE
         END
