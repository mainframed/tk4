         TITLE 'IGG019KA - BDAM FOUNDATION MODULE-NON VS FORMAT'
IGG019KA CSECT
*MODULE NAME - IGG019KA                                               *
*                                                                     *
*DESCRIPTIVE NAME - BDAM FOUNDATION MODULE, NON VS FORMAT             *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*CHANGE ACTIVITY                                                      *
*                                                                     *
*          OS 20 CHANGES/DELETIONS
*0286074860-074920                                               M5471
*0286                                                            A33688
*0286000270-000440,000690-000830,048200,053400,063920,064080,    20201
*0286083400-083800,084400,084600                                 20201
*0286134860-134920                                               M5461
*          OS 21 CHANGES/DELETIONS
*1132111200,117400,120400,120800-121800,122600,132200-132400     A35339
*1132112600-112800                                               A30797
*                                                               SA53267
*057800,059200-060200                                           SA54515
*          VS 1-1 CHANGES/DELETIONS
*          VS 2-1 CHANGES/DELETIONS
*          VS 1-3 CHANGES/DELETIONS
*                                                               XA02033
*                                                               XA03071
*          VS 2-2 CHANGES/DELETIONS
*                                                                Y02072
*                                                                YM1458
*                                                                YM3857
*                                                                YM3850
*                                                                YM2862
*                                                                YM5969
*                                                                YM6585
*                                                                YM5893
*                                                                YM8817
*A052820-052920,053020-053024,053500                            ZA01524
*D095800-096338                                                @ZA08000
*          CHANGES SUBSEQUENT TO VS2 - 037                            *
*C129200                                                       @ZA15675
*A031900,084650                     OZ28786 CHANGES FLAGGED AS @YA19662
*
*STATUS CHANGE LEVEL 008                                              *
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE CONTAINS THREE ROUTINES WHOSE        *
*   FUNCTIONS ARE:                                                    *
*   ROUTINE 1. INITIAL ENTRY FOR ANY BDAM READ OR WRITE, CHECK THE    *
*    VALIDITY OF SPECIFIED TYPE AND OPTIONS, OBTAIN AN IOB, PROVIDE   *
*    LINKAGE FOR ADDRESS CONVERSION AND CHANNEL PROGRAM CONSTRUCTION, *
*    ISSUE THE 'EXCP' AND RETURN TO THE USER. IF WRITE ADD FOR A 2305,*
*    SVC 53 IS ISSUED INSTEAD OF EXCP. WHEN EXCLUSIVE CONTROL OF THE  *
*    TRACK OR DATA SET IS OBTAINED, IGC0005C WILL ISSUE THE EXCP.     *
*                                                                     *
*   ROUTINE 2. ASYNCHRONOUS INTERRUPT ROUTINE(ASI), LINK NEW IOBS     *
*    TO THE DCB IOB POOL, PROVIDE LINKAGE TO THE FEEDBACK, SELF-      *
*    FORMAT AND EXCLUSIVE CONTROL MODULES, MAKE THE IOB AVAILABLE     *
*    AND ISSUE THE 'POST' BEFORE RETURNING TO THE SUPERVISOR.         *
*                                                                     *
*   ROUTINE 3. ERROR ROUTINES, RELEASE THE IOB, SET THE PROPER        *
*    EXCEPTION CODES, ISSUE THE 'POST'.                               *
*                                                                     *
*ENTRY POINTS- 'IGG019KA' (ENTRYPT) IS THE ENTRY FOR A BDAM READ OR   *
*   WRITE MACRO INSTRUCTION. THE GENERATED CALLING SEQUENCE IS,       *
*   L    15,DCBREAD   (DCB+48)                                        *
*   BALR 14,15                                                        *
*                                                                     *
*   'IECDFDNA' IS THE ENTRY POINT TO THE ASI ROUTINE FROM SUPERVISOR  *
*   WHEN THE I/O HAS COMPLETED. THE CALLING SEQUENCE USED IS,         *
*   L    15,IRBRBEP   (IRB+12)                                        *
*   BALR 14,15                                                        *
*                                                                     *
*   'LATERR' IS AN ENTRY TO THE INVALID REQUEST ERROR ROUTINE FROM    *
*   THE ADDRESS CONVERSION OR PRE-FORMAT MODULES. CALLING SEQUENCE IS,*
*   L    REG,20(IGG019KA BASE)                                        *
*   BR   REG                                                          *
*                                                                     *
*INPUT- ROUTINE 1.- DECB ADDRESS IN REGISTER 1, SAVE AREA ADDRESS IN  *
*   REGISTER 13, RETURN ADDRESS IN REGISTER 14, ENTRY POINT IN        *
*   REGISTER 15.                                                      *
*                                                                     *
*   ROUTINE 2.(ASI)- IOS QUEUEING ELEMENT ADDRESS IN REGISTER 1,      *
*   RETURN ADDRESS IN REGISTER 14, ENTRY POINT IN REGISTER 15.        *
*                                                                     *
*   ROUTINE 3.(INVALID REQUEST)- REGISTERS 5,7,11,13 WILL CONTAIN THE *
*   DECB ADDRESS, IOB ADDRESS, IGG019KA ADDRESS, SAVE AREA ADDRESS,   *
*   RESPECTIVELY. REGISTER 12 WILL CONTAIN THE REASON CODE WHICH WILL *
*   APPEAR IN BYTE TWO OF THE DECB AFTER 'POST' IS EXECUTED.          *
*                                                                     *
*OUTPUT- ROUTINE 1.- AN IOB WILL BE OBTAINED, CHANNEL PROGRAM         *
*   CONSTRUCTED AND 'EXCP' EXCECUTED FOR A VALID READ OR WRITE.       *
*   IF 2305 WRITE ADD AND BLOCK IS NOT AVAILABLE, THE IOB WILL BE     *
*   PUT ON THE UNPOSTED QUEUE.                                        *
*                                                                     *
*   ROUTINE 2.(ASI)- FEEDBACK WILL BE RETURNED IF REQUESTED, AND A    *
*   COMPLETION CODE PLACED IN THE DECB BY THE 'POST' ROUTINE.         *
*                                                                     *
*   ROUTINE 3.(INVALID REQUEST)- A COMPLETION CODE AND REASON CODE    *
*   ARE PLACED IN THE DECB BY THE 'POST' ROUTINE.                     *
*                                                                     *
*EXTERNAL ROUTINES- 'IGG019KC'-CONVERT RELATIVE TRACK ADDRESS (TT OR  *
*   TTR) TO AN ACTUAL ADDRESS OR CONVERT ACTUAL TO TTR FOR FEEDBACK.  *
*                                                                     *
*   'IGG019KE'-CONVERT RELATIVE BLOCK ADDRESS TO AN ACTUAL ADDRESS.   *
*                                                                     *
*   'IGG019KF'-CONVERT RELATIVE BLOCK ADDRESS TO AN ACTUAL ADDRESS    *
*   FOR OVERFLOW RECORDS                                              *
*                                                                     *
*   'IGG019KK'-CONSTRUCT A CHANNEL PROGRAM TO SEARCH BY BLOCK ID.     *
*                                                                     *
*   'IGG019KI'-CONSTRUCT A CHANNEL PROGRAM TO SEARCH BY BLOCK KEY.    *
*                                                                     *
*   'IGG019KO'-CONSTRUCT A CHANNEL PROGRAM TO ADD A NEW BLOCK TO A    *
*   DATA SET OF FIXED FORMAT RECORDS, (PRE-FORMAT MODULE).            *
*                                                                     *
*   'IGG019KM'-CONSTRUCT A CHANNEL PROGRAM TO ADD A NEW BLOCK TO A    *
*   DATA SET OF VARIABLE OR UNDEFINED LENGTH RECORDS, (SELF-FORMAT    *
*   MODULE).                                                          *
*   ALSO ENTERED TO DETERMINE IF THE NEW BLOCK WILL FIT ON THE TRACK  *
*   AFTER THE CAPACITY RECORD IS READ INTO THE IOB.                   *
*   ALSO ENTERED AFTER THE WRITE-ADD REQUEST HAS COMPLETED, TO SCAN   *
*   THE UNSCHEDULED QUEUE FOR OTHER WRITE-ADD REQUESTS AND EXECUTE    *
*   THE FIRST REQUEST FOUND, IF ANY.                                  *
*                                                                     *
*   SVC 53  -PLACE A RECORD ON THE READ EXCLUSIVE LIST FOR A READ     *
*   OR WRITE ADD REQUEST, OR PUT THE IOB ON THE UNPOSTED QUEUE,       *
*   OR REMOVE A RECORD FROM THE READ EXCLUSIVE LIST FOR A WRITE       *
*   WHEN EXCLUSIVE CONTROL IS SPECIFIED, OR IF A WRITE ADD REQUEST.   *
*                                                                     *
*   'IGG019KG'-CONVERT AN ACTUAL ADDRESS TO A RELATIVE BLOCK NUMBER   *
*   IF FEEDBACK IS REQUESTED.                                         *
*                                                                     *
*   'IGG019KH'-CONVERT AN ACTUAL ADDRESS TO A RELATIVE BLOCK NUMBER   *
*   FOR OVERFLOW RECORDS, IF FEEDBACK IS REQUESTED.                   *
*                                                                     *
*EXITS-NORMAL- 'RSTOR' IS THE RETURN TO THE PROGRAM WHICH ISSUED THE  *
*   READ OR WRITE MACRO-INSTRUCTION. THE REQUEST HAS EITHER BEEN      *
*   EXECUTED VIA 'EXCP' OR HAS BEEN POSTED COMPLETE AS AN INVALID     *
*   REQUEST.                                                          *
*   'SUPEXIT' IS THE EXIT FROM THE ASI ROUTINE TO SUPERVISOR. THE DECB*
*   HAS BEEN POSTED AS COMPLETE WITH A CODE INDICATING SUCCESSFUL OR  *
*   ERROR COMPLETION.                                                 *
*                                                                     *
*TABLES/WORK AREAS- N/A                                               *
*                                                                     *
*ATTRIBUTES- THE INITIAL ENTRY ROUTINE AND INVALID REQUEST ERROR      *
*   ROUTINE ARE REENTRANT AND EXECUTED ENABLED, PROG PGM STATE.       *
*                                                                     *
*   THE ASI ROUTINE IS REENTRANT AND EXECUTED ENABLED, IN PROBLEM     *
*   PROGRAM STATE AND USER KEY.                                       *
*                                                                     *
*NOTE- THE BDAM MODUES BRANCH AND LINK TO EACH OTHER WITHOUT USE OF   *
*   A REGISTER SAVE AREA SO THE REGISTER USAGE MUST REMAIN CONSISTENT *
*   IN THE BDAM MODULES, IGG019KA, IGG019KC, IGG019KE, IGG019KF,      *
*   IGG019KG, IGG019KH, IGG019KI, IGG019KK, IGG019KM, IGG019KO,       *
*   IGG019KQ.                                                         *
         EJECT
***********************************************************************
*                    REGISTER USAGE                                   *
***********************************************************************
*
PARAM2   EQU   0
PARAM    EQU   1         PARAMETERS
WKREG1   EQU   2         WORK REGISTER
DEBREG   EQU   3         DEB ADDRESS
DCBREG   EQU   4         DCB ADDRESS
DECBREG  EQU   5         DECB ADDRESS
WKREG2   EQU   6         WORK REGISTER
IOBREG   EQU   7         IOB ADDRESS
SECTOR   EQU   8         POINTER TO SECTOR AREA OR LAST DW       20201
FDNBASE  EQU   11        BASE FOR THE FOUNDATION MODULE
INTRET   EQU   12        RETURN FOR INTERNAL LINKAGES
SAVE     EQU   13        POINTER TO USER SAVE AREA
RETREG   EQU   14        RETURN REGISTER
EPREG    EQU   15        ENTRY POINT
WKREG3   EQU   15        WORK REGISTER                           Y02072
*
         IEZBITS
         EJECT
         USING IGG019KA,EPREG
*
*
ENTRYPT  B     BEGIN                    BRANCH AROUND ADDR LOCATIONS
*
RRAD     DC    V(IGG019KE)             RELATIVE BLOCK MOD ADDR   Y02072
RTAD     DC    V(IGG019KC)             RELATIVE TRACK MOD ADDR   Y02072
VERAD    DC    V(IGG019KQ)             VERIFY MODULE ADDRESS     Y02072
ASIAD    DC    A(IECDFDNA)             ASYNCH INTERRUPT RTN      Y02072
ERRENTRY DC    A(LATERR)               INVALID REQUEST ERROR RTN Y02072
KEYMODAD DC    V(IGG019KI)             ADDRESS OF THE KEY MODULE Y02072
IDMODAD  DC    V(IGG019KK)             ADDRESS OF THE ID MODULE  Y02072
RROVAD   DC    V(IGG019KF)             REL BLOCK/TRK OFLO MOD AD Y02072
*
*
*
         DROP  EPREG
BEGIN    SAVE  (14,12)                  SAVE USER REGISTERS IN HIS AREA
         LR    FDNBASE,EPREG            ESTABLISH BASE FOR THIS MODULE
         USING IGG019KA,FDNBASE
         LR    DECBREG,PARAM            SET BASE REGISTER FOR DECB
         USING DECB,DECBREG
         L     DCBREG,DECDCBAD          SET BASE REGISTER FOR DCB
         USING IHADCB,DCBREG
         L     DEBREG,DCBDEBAD          SET BASE REGISTER FOR DEB
         USING DEBBASIC,DEBREG                                   Y02072
*
         NI    DECTYPE,OLDOPTS          CLEAR OLD DCB OPTIONS  @YA19662
         IC    INTRET,DECTYPE           SAVE REQUESTED OPTIONS IN A REG
         OI    DECTYPE,VERIFY+EXSCH+ACTAD+RELRD+OFLOW
         NC    DECTYPE(1),DCBOPTCD      COMBINE DCB OPTIONS WITH THE
         EX    INTRET,ORBACK            REQUEST OPTIONS.
         N     INTRET,OPSMSK            VALIDITY CHECK READX,DYN. BFR.
         BZ    OKOPTS                   OPTIONS (BR IF NONE PRESENT),BY
         EX    INTRET,VALCHK            EXECUTING A TM INSTRUCTION.
         BO    OKOPTS                   OK IF ALSO SPECIFIED IN DCB,
         IC    INTRET,INVOPT            ELSE FLAG THIS REQUEST AS
         B     ABORT                    INVALID AND GO POST COMPLETION.
*
ORBACK   OI    DECTYPE,0     EXECUTED-RETURN FEEDBACK OPTION BIT.
VALCHK   TM    DCBOPTCD,0    EXECUTED-CHECK READX,DYN. BFR. REQUEST.
*
OKOPTS   TM    DECTYPE+1,READ           IS THIS A READ REQUEST
         BO    LGNCHK                   YES, GO TEST LENGTH OPTION
         TM    DEBOPATB,DEBACCS         DID OPEN SPECIFY OUTPUT/UPDATE
*                                                                Y02072
         BC    5,FORMCHK                YES, WRITE REQUEST IS VALID
         IC    INTRET,INVWRT            FLAG THIS WRITE TO INPUT DATA
         B     ABORT                    SET, GO POST COMPLETION
*
*
FORMCHK  TM    DCBRECFM,DCBRECF         IS RECORD FORMAT VARIABLE
         BO    LGNCHK                   NO, GO TEST LENGTH OPTION
         L     WKREG2,DECAREA           USE FIRST TWO BYTES OF DATA AS
         MVC   DECLNGTH(2),0(WKREG2)    BLOCK LENGTH FOR THE WRITE
         B     SZRTN                    GO DETERMINE IOB SIZE
*
LGNCHK   TM    DECTYPE+1,LGNOP          DID USER CODE LENGTH AS 'S'
         BZ    SZRTN                    NO, USE DECB LENGTH
         MVC   DECLNGTH(2),DCBBLKSI     USE MAX BLOCK SIZE AS LENGTH
*
***********************************************************************
*   THE FOLLOWING ROUTINE DETERMINES THE SIZE IOB AND CHANNEL PROGRAM
*        CORE AREA REQUIRED FOR THIS REQUEST
***********************************************************************
*
SZRTN    LA    WKREG1,BASESZ            SIZE=BASE + OPTIONS
         LA    PARAM,XSCHSZ             SET TO EXTENDED SEARCH CORE AMT
         SR    INTRET,INTRET            CLEAR FEEDBACK INCREMENT REG
         TM    DCBOPTCD,DCBOPTTO        ARE OVERFLOW RECORDS PRESENT
         BZ    NOTOVFLO                 NO , CONTINUE            Y02072
         LA    WKREG1,OFLINCR(0,WKREG1) ADD ON FOR NOP CCW AT END OF CP
NOTOVFLO EQU   *                        CONTINUE IOB SIZE CALC   Y02072
         TM    DECTYPE+1,READ           TEST TYPE FOR READ
         BO    TSTRDX                   YES, GO TEST FOR READ EXCLUSIVE
*
         TM    DECTYPE,VERIFY           TEST FOR VERIFY OPTION
         BZ    TSTWA                    BR IF NO VERIFY SPECIFIED
         LA    WKREG1,VERSZ(0,WKREG1)   INCREMENT FOR VERIFY CCW'S
TSTWA    TM    DECTYPE+1,ADD            TEST FOR WRITE ADD TYPE
         BZ    TSTRDX                   NO, GO TEST FOR WRITE RELEASE
         LA    WKREG1,ADDSZ+ENQPL(0,WKREG1)  INCREMENT FOR WRITE ADD
*                                       AND ENQUE PARAMETER LIST
         LA    PARAM,PFEXTSZ            PRE-SET EXTENDED SEARCH REG
         TM    DCBRECFM,DCBRECV         ARE RECORDS FIXED FORMAT
         BZ    TSTX                     BRANCH IF YES
         LA    WKREG1,SFSZ(0,WKREG1)    INCREMENT FOR SELF FORMAT WRITE
         SR    PARAM,PARAM              NO CORE REQ'D FOR EXTENDED SRCH
         B     TSTX                     GO TEST FOR EXTENDED SEARCH
*
TSTRDX   TM    DECTYPE,READX            IS IT A READ EXCLUSIVE OR A
*                                       WRITE TO RELEASE
         BZ    TST4KEY                  BRANCH IF NO
         LA    WKREG1,ENQPL(WKREG1)     ADD FOR ENQ PARAMETER LIST
*
TST4KEY  TM    DECTYPE+1,KEY            IS TYPE = KEY
         BZ    CHKPOOL                  NO, SIZE IS IN WKREG1
         TM    DECTYPE,FEEDB+READX+OFLOW  ARE FEEDBACK CCWS NEEDED
         BZ    TSTX                     NO, LEAVE REGISTER ZERO
         LA    INTRET,FDBSZ             SET POSSIBLE FEEDBACK INCREMENT
*
TSTX     TM    DECTYPE,EXSCH            TEST FOR EXTENDED SEARCH OPTION
         BZ    CHKPOOL                  BR IF NOT SPECIFIED
         CLC   ZEROS(3),DCBLIMCT        IS LENGTH OF SEARCH SPECIFIED
         BNE   UPSZ88                   YES, REQUEST IS VALID
         IC    INTRET,INVLIMCT          FLAG INVALID REQUEST (LIMCT=0)
         B     ABORT                    GO POST COMPLETION
UPSZ88   AR    WKREG1,PARAM             INCREMENT FOR EXTENDED SEARCH
         AR    WKREG1,INTRET            INCREMENT FOR FEEDBACK
*
*        THIS CODE IS ADDED TO GET ONE MORE DOUBLE WORD FOR THE
*        SECTOR BYTES ASSOCIATED WITH RECORD READY.
*
CHKPOOL  EQU   *                                                 20201
         LA    WKREG1,RRINCR(WKREG1)    INCR IOB SZ FOR REC REDY 20201
*
*    THE FOLLOWING ROUTINE OBTAINS AN IOB AREA FROM THE POOL OF AREAS
*     IF ONE OF ENOUGH SIZE IS AVAILABLE
*
         USING IOBSTDRD,IOBREG          ESTABLISH IOB BASE       Y02072
         L     IOBREG,DCBIOBAD          LOAD FIRST LINK ADDRESS  20201
SHFT     LA    IOBREG,0(0,IOBREG)       BE SURE HI-ORDER BYTE IS ZERO
         LTR   IOBREG,IOBREG            TEST FOR ZERO LINK ADDRESS.
         BZ    GETCR                    IF ADDR=0, GO GET CORE FOR IOB
         CH    WKREG1,IOBDIOBS          IS THIS IOB AREA LARGE ENOUGH
         BH    TRYNEXT                  IF NOT GO SEE IF THERE ARE MORE
         TS    IOBDAVLI                 IS THIS IOB AVAILABLE
         BZ    CLRIOB                   YES, GO INITIALIZE AREA
*
TRYNEXT  L     IOBREG,IOBDPLAD          LOAD NEXT POOL LINK
         B     SHFT                     GO TEST FOR END OF CHAIN
*
*
CLRXC    XC    IOBDTYPE(1),IOBDTYPE  EXECUTED-- CLEAR LAST PART OF IOB
CLRXXC   XC    IOBDTYPE+Q255(Q1),IOBDTYPE+Q255  CLR IF IOB+CCWS  20201
*                                       GO BEYOND IOBDTYPE+255   20201
*
*
*                GETMAIN ROUTINE
*
GETCR    LR    PARAM2,WKREG1            MOVE BYTE COUNT TO PARAM REG
         GETMAIN R,LV=(0)
*
         LR    IOBREG,PARAM             LOAD CORE ADDRESS TO IOB BASE
         STH   WKREG1,IOBDIOBS          STORE THE AREA SIZE IN IOB
         SR    WKREG2,WKREG2            CLEAR THE POOL
         ST    WKREG2,IOBDAVLI          ADDRESS AREA
CLRIOB   EQU   *                        CLEAR THE IOB           ZA01524
         LR    WKREG2,WKREG1            SAVE LENGTH REQUIRED    ZA01524
         LH    WKREG1,IOBDIOBS          LOAD SIZE OF IOB        ZA01524
         XC    IOBFLAG2(41),IOBFLAG2    CLEAR IOB SIZE FIELD   @OZ04733
         LR    SECTOR,IOBREG            LOAD ADDR OF IOB         20201
         AR    SECTOR,WKREG2            ADD NUMBER OF BYTES     ZA01524
*                                       REQUIRED FOR THIS REQ   ZA01524
         S     SECTOR,EIGHT             POINT TO LAST DOUBLE     20201
*                                       WORD                     20201
         TM    DECTYPE+Q1,ADD           IS THIS WRITE ADD        20201
         BO    SUBRDX                   SUBTRACT OFF ENQ AREA    20201
         TM    DECTYPE,READX            IS THIS READ EXCLUSIVE   20201
         BZ    NOTREADX                 NO, ALL O.K.             20201
SUBRDX   EQU   *                                                 20201
         SH    SECTOR,RDXCORE           SUBTRACT OFF ENQ AREA    20201
NOTREADX EQU   *                                                 20201
         SH    WKREG1,K49               REDUCE SIZE TO REMAINING SIZE
         CH    WKREG1,IOBSZ255          IOB GO BEYOND            20201
*                                       IOBDTYPE+255?            20201
         BH    CLROVFF                  YES, GO TO CLEAR BEYOND  20201
         EX    WKREG1,CLRXC             ELSE CLEAR WHAT IS       20201
*                                       SPECIFIED                20201
         B     CORCLRD                  CORE ZEROED SO BRANCH    20201
CLROVFF  XC    IOBDTYPE(Q255),IOBDTYPE  CLR OUT 1ST 255 BYTES    20201
         SH    WKREG1,IOBSZ255          SUBT AMT ALREADY CLEAR  ZA01524
         EX    WKREG1,CLRXXC            CLEAR OUT THE REMAINDER  20201
*
CORCLRD  EQU   *                                                 20201
         ST    DCBREG,IOBDCBPT          STORE DCB ADDRESS IN IOB
         ST    DECBREG,IOBECBPT         STORE ECB ADDRESS IN IOB
         ST    IOBREG,DECIOBPT          STORE IOB ADDR IN DECB
         LA    WKREG1,IOBCHNPR          DEVELOP CHANNEL PROG STARTING
         ST    WKREG1,IOBSTART          ADDRESS AND STORE IT IN IOB
         MVC   IOBDTYPE(L'DECTYPE),DECTYPE  MOVE OPTION & TYPE CODE
         MVI   IOBFLAG1,CPFLAG          MARK AS UNRELATED,COMMAND CHAIN
*
*    THE FOLLOWING ROUTINE DETERMINES THE ADDRESSING METHOD BEING
*     USED AND CHECKS THE VALIDITY OF THE ADDRESS.
*
ADDRDEC  L     PARAM,DECRECPT           LOAD POINTER TO USER'S ADDRESS
         LA    RETREG,CLRCP             LOAD COMMON RETURN POINT ADDR
         TM    IOBDTYP2,IOBRQUST+IOBADDTY  BYPASS NEXT RTN IF RD OR WA
         BC    5,D1NOFDBK               AND GO DETERMINE ADDRESS TYPE
         TM    IOBDTYP2,IOBTYPE         IF TYPE IS KEY, BYPASS CHECKING
         BO    TRYX                     FOR A WRITE TO R ZERO
         TM    IOBDTYPE,IOBACTAD        IS ADDRESS ACTUAL
         BZ    TRYRT                    NO, GO TEST FURTHER
TESTR0   EQU   *                        WRT R0 INVALID -TEST IT OX02033
         CLI   7(PARAM),0               IS THIS A WRITE TO R0
         BNE   ACTUAL                   NO, ACTUAL ADDRESS IS OK
SETIRBIT IC    INTRET,INVID             FLAG INVAL REQUEST(WRITE TO R0)
         B     LATERR                   GO POST COMPLETION, FREE IOB
*
TRYRT    EQU   *
         TM    DCBOPTCD,DCBOPTF         FEEDBACK IN DCB OPTCD?  XA02033
         BO    TRYRT2                   YES, NOT ACTUAL ADDRESS XA02033
         TM    IOBDTYPE,IOBRDEXC+IOBFDBCK WRT REL/FDBK IN DECB  XA03071
         BM    TESTR0                   YES, ASSUME ACTUAL ADDR  YM8817
*                                       BECAUSE FEEDBACK ALWAYS XA02033
*                                       PROVIDED FOR READX REQ  XA02033
*                                       AND WRT REL MUST ASSUME XA02033
*                                       PREVIOUS READX REQUEST  XA02033
TRYRT2   EQU   *                        NOT ACTUAL ADDRESSING   XA02033
         TM    IOBDTYPE,IOBRELBL        IS ADDR RELATIVE BLOCK NUMBER
         BO    RELRCDX                  YES, GO TO RELATIVE BLOCK EXIT
         CLI   2(PARAM),0               IS R OF TTR A 0
         BE    SETIRBIT                 YES,WRITE REQUEST IS INVALID
*
RELTRKX  L     EPREG,RTAD               EXIT TO CONVERT TTR TO AN
         B     RTRKOFFS(0,EPREG)        ACTUAL ADDRESS (19KC+4)  Y02072
*
TRYX     TM    IOBDTYPE,IOBRDEXC        IS THIS A WRITE WITH FEEDBACK
         BZ    D1NOFDBK                 NO, GO TEST ADDRESS TYPE
         TM    DCBOPTCD,DCBOPTF         WAS FEEDBACK RELATIVE FOR READ
         BZ    ACTUAL                   NO, GO MOVE ACTUAL ADDR TO IOB
D1NOFDBK TM    IOBDTYPE,IOBACTAD        IF ADDRESS IS ALREADY ACTUAL,
         BO    ACTUAL                   GO MOVE IT TO THE IOB
         TM    IOBDTYPE,IOBRELBL        IS ADDRESS RELATIVE BLOCK
         BZ    RELTRKX                  NO, GO TO RELATIVE TRACK EXIT
*
RELRCDX  TM    DCBRECFM,DCBRECTO        IT TRK OVERFLOW PRESENT   13883
         BO    TRKOV                    YES--GO TO REL BLK/TRK OV 13883
         L     EPREG,RRAD               NO--CONVERSION MOD EXIT   13883
         ST    SECTOR,IOBDCPND          ST SECT ADDR WHEN        20201
*                                       BRANCHING TO             20201
*                                       THIS MODULE ONLY
         BALR  RETREG,EPREG             BRANCH TO BLOCK CONVERT  20201
*                                       RTN                      20201
         L     SECTOR,IOBDCPND          RESTORE SECTOR ADDR      20201
         B     CLRCP                    GO CLEAR OUT CHANNEL PGM 20201
*                                       AREA                     20201
TRKOV    L     EPREG,RROVAD             TRK OVERFLOW EXIT         13883
         ST    SECTOR,IOBDCPND                                   20201
         BALR  RETREG,EPREG             GO TO REL BLK TRK OVFLO  20201
*                                       MODULE
         L     SECTOR,IOBDCPND                                   20201
*
CLRCP    XC    IOBDNRCF(40),IOBDNRCF   CLEAR AREA USED TO STORE REGS
         B     TYPEDEC                 GO GENERATE CHANNEL PROGRAM
*
***********************************************************************
*  THE FOLLOWING ROUTINE DETERMINES THE TYPE OF READ OR WRITE
*    AND PROVIDES LINKAGE TO THE PROPER MODULE
***********************************************************************
*
ACTUAL   MVC   IOBSEEK,0(PARAM)         MOVE USER ADDRESS TO
         MVC   IOBUPLIM(7),IOBSEEK      SEEK AND LIMIT FIELDS
TYPEDEC  LA    RETREG,READY             LOAD COMMON RETURN ADDRESS
*
*    RPS IS TESTED FOR HERE. IF RPS IS TO BE USED, X'FF' AND THE
*    ADDRESS OF THE LAST DOUBLE WORD ARE PASSED IN IOBDCPND. ELSE X'00'
*    AND THE ADDRESS OF THE LAST DOUBLE WORD ARE PASSED IN IOBDCPND
*
         ST    SECTOR,IOBDCPND          STORE LAST DOUBLE WORD   20201
         SR    EPREG,EPREG              ZERO OUT WORK REG        Y02072
         LA    WKREG3,DEBBASND          GET ADDR OF DEV SECT     Y02072
         USING DEBDASD,WKREG3           ESTABLISH BASE, DEV SECT Y02072
         L     WKREG3,DEBUCBAD          GET UCB FROM 1ST EXT     Y02072
         DROP  WKREG3                   DROP DEB DEV SECT BASE   Y02072
         USING UCBOB,WKREG3             ESTABLISH UCB BASE       Y02072
         TM    UCBTBYT2,RECREDY         DOES THIS UCB HAVE RPS   Y02072
         DROP  WKREG3                                            Y02072
         BNO   AROUND                   NO, BRANCH AROUND        20201
         MVI   IOBDCPND,FF              MOVE IN THE RPS ID       20201
AROUND   EQU   *                                                 20201
         LA    WKREG2,IOBCHNPR          INITIALIZE CCW INDEX
*
OVERMVC  TM    IOBDTYP2,IOBTYPE+IOBADDTY  IS TYPE KEY OR WRITE ADD
         BZ    IDEXIT                   NO, GO GENERATE ID CHAN PROGRAM
         MVI   IOBR,0                   MAKE R BYTE 0 TO SEARCH ON R0
*
         TM    IOBDTYP2,IOBADDTY        IS TYPE WRITE ADD
         BO    SOMEWA                   YES, GO TEST RECORD FORMAT
TEST4KEY CLI   DCBKEYLE,0               HAVE KEYS BEEN SPECIFIED
         BE    SETNOKEY                 NO, GO SET ERROR CODE
         L     WKREG1,DECKYADR          LOAD AND TEST FOR MISSING KEY
         LTR   WKREG1,WKREG1            ADDRESS FIELD IN DECB
         BNZ   PROCEED                  IF NOT MISSING GO TEST EXIT
SETNOKEY IC    INTRET,INVKEY            SET INVALID REQUEST CODE
         B     LATERR                   GO POST COMPLETION, FREE IOB
*
PROCEED  TM    IOBDTYP2,IOBTYPE         IS TYPE KEY
         BZ    SELFOR                   NO, GO TO WRITE ADD EXIT
         L     EPREG,KEYMODAD           EXIT TO GENERATE KEY CHANNEL
         BR    EPREG                    PROGRAM
IDEXIT   L     EPREG,IDMODAD            LOAD ID MODULE ADDRESS AND
         BR    EPREG                    GO TO GENERATE ID CHANNEL PROG.
*
SOMEWA   TM    DCBRECFM,DCBRECV         DATA SET FIXED LENGTH RECORDS
         BZ    TEST4KEY                 IF YES, GO TEST KEYS PRESENT
SELFOR   L     EPREG,DCBDFOR            LOAD ENTRY POINT OF THE
         BR    EPREG                    WRITE ADD MODULE AND BR. TO IT
*
*
READY    EQU   *
         TM    DCBOPTCD,DCBOPTTO        TEST FOR TRACK OVERFLOW
         BZ    EXPCTEND                 NOT PRESENT, NO NOP CCW
         OI    4(WKREG2),CCHN           TURN ON COMMAND CHAIN BIT
         LA    WKREG2,8(0,WKREG2)       UPDATE TO NEXT CCW
         MVI   0(WKREG2),NOPCODE        PUT IN NOP OP CODE
         MVI   4(WKREG2),SILI           TURN ON SILI BIT IN NOP CCW
         MVI   7(WKREG2),ONE            SET A NON-ZERO COUNT IN NOP CCW
EXPCTEND EQU   *
         LA    WKREG2,8(0,WKREG2)       UPDATE POINTER TO PROGRAM END
         ST    WKREG2,IOBDCPND          EXPECTED ENDING ADDRESS
         MVC   IOBDNRCF+1(1),IOBBB2     MOVE 'B' TO INLINE SEEK AREA
*
***********************************************************************
*     THE FOLLOWING TESTS FOR 2305 FIXED WRITE ADD FUNCTION. IF IT IS *
*     SVC 53 MUST BE ISSUED TO ENQUEUE EITHER ON R0 OF THE TRACK      *
*     REQUESTED (NO EXTENDED SEARCH) OR ON R0 OF THE 1ST TRACK IN     *
*     THE DATA SET (EXTENDED SEARCH). IT IS NECESSARY TO HAVE EXCLU-  *
*     SIVE CONTROL TO PREVENT MULTIPLE WRITE ADD REQUESTS ON THE      *
*     SAME TRACK FROM FINDING AND UPDATING THE SAME DUMMY RECORD.     *
*     SVC 53 (IGC0005C) WILL EITHER ENQ ON THE PARTICULAR BLOCK AND   *
*     ISSUE THE EXCP, OR THE IOB WILL BE PUT ON THE IOB UNPOSTED      *
*     QUEUE. WHEN THE IOB DOES GAIN CONTROL OF THE BLOCK, IGC0005C    *
*     WILL ISSUE THE EXCP FOR THIS REQUEST.                           *
***********************************************************************
CHK2305  EQU   *                        IS IT 2305 WRITE ADD     Y02072
         TM    IOBDTYP2,IOBADDTY        IS TYPE WRITE ADD        Y02072
         BNO   EXCP                     NO, GO ISSUE EXCP        Y02072
         TM    DCBRECFM,DCBRECV         IS RECORD FORMAT FIXED   Y02072
         BO    EXCP                     NO, GO ISSUE EXCP        Y02072
         LA    WKREG1,DEBBASND          GET DEV DEP SECT         Y02072
         USING DEBDASD,WKREG1           EST BASE FOR DEV SECT    Y02072
         L     WKREG1,DEBUCBAD          GET UCB FOR 1ST EXTENT   Y02072
         DROP  WKREG1                   DROP DEV DEP SECT BASE   Y02072
         USING UCBOB,WKREG1             UCB ADDRESSABILITY       Y02072
         CLI   UCBTBYT4,UCB23051        IS DEVICE 2305-1?        Y02072
         BE    ISSUESVC                 IF 2305,WA,FIXED,GO ENQ  Y02072
         CLI   UCBTBYT4,UCB23052        IS DEVICE 2305-2?        Y02072
         BNE   EXCP                     NO, GO ISSUE EXCP        Y02072
         DROP  DEBREG,WKREG1                                     Y02072
*
*      SVC 53 (EXCLUSIVE CONTROL) WILL BE ISSUED. IGC0005C EXPECTS
*      REG 1 TO CONTAIN THE IOB ADDRESS, COMPLEMENTED.
*
ISSUESVC EQU   *                        GO TO XCLUSIVE CNTRL MOD Y02072
         LCR   PARAM,IOBREG             LOAD COMPLEMENT OF IOB   Y02072
*
         SVC   53                       GO TO ENQ RECORD         Y02072
*
         B     RSTOR                    RETURN TO THE USER       Y02072
***********************************************************************
*
EXCP     LR    PARAM,IOBREG             LOAD IOB ADDR AS THE PARAMETER
         EXCP  (1)
*
RSTOR    RETURN (14,12),T,RC=0
*
*
***********************************************************************
*    THE FOLLOWING ROUTINE COMPLETES THE PROCESSING OF AN INVALID
*     REQUEST AND RETURNS TO THE USER.
***********************************************************************
*
LATERR   TM    IOBDAVLI,AVLMSK          IF THE AVAILABILITY BIT IS SET
         BO    FRMPOOL                  THIS IOB IS LINKED TO THE POOL
         LH    PARAM2,IOBDIOBS          SET SIZE PARAMETER FOR FREEMAIN
         LR    PARAM,IOBREG             SET ADDRESS PARAMETER
         FREEMAIN R,LV=(0),A=(1)
         B     ABORT
*
FRMPOOL  EQU   *
         MVI   IOBDAVLI,0               AVAILABLE
ABORT    AH    INTRET,INVREQ            SET INVALID REQUEST EXCEPT CODE
         SR    WKREG2,WKREG2            ZERO OUT THE IOB POINTER FIELD
         ST    WKREG2,DECIOBPT          OF THE DECB
         LR    PARAM2,INTRET            POSITION THE POST CODE
         SLL   PARAM2,8                 (EXCEPTION CODES)
         LR    PARAM,DECBREG            LOAD ECB ADDRESS PARAMETER
         MVI   0(PARAM),0               AND CLEAR THE OLD POST CODE AND
         LA    PARAM,0(0,PARAM)         CLEAR HIGH ORDER BITS    A29259
         POST  (1),(0)                  POST.
         B     RSTOR                    GO RESTORE REGISTERS AND RETURN
*
OPSMSK   DC    F'6'                     OPTIONS-READX,DYNAMIC BFR.
ZEROS    EQU   OPSMSK                   PLUS ZEROS FOR COMPARING.
*
INVID    DC    X'08'                    INVALID ZERO ID
INVOPT   DC    X'02'                    INVALID OPTIONS
INVWRT   DC    X'40'                    WRITE TO INPUT DATA SET
INVLIMCT DC    X'20'                    EXTENDED SEARCH, LIMIT IS ZERO
INVREQ   DC    H'4096'                  INVALID REQUEST BIT
*
K49      DC    H'49'                    CONSTANT 49
INVKEY   DC    X'04'                    KEYS ARE MISSING
AVLMSK   EQU   X'80'          IOB AVAILABILITY FLAG
FIXDMSK  EQU   X'40'          FORMAT 'F' DATA SET
VFORM    EQU   X'80'          FORMAT 'V' DATA SET
WRTMSK   EQU   15             DCB WAS OPENED FOR OUTPUT OR UPDATE
*
IOBSZ255 DC    H'255'                   COMPARATOR FOR IOB SIZE  20201
BASESZ   EQU   X'78'                    IOBBASE SIZE =120 BYTES  20201
ADDSZ    EQU   X'68'                    WRITE ADD =104 BYTES     YM2862
VERSZ    EQU   X'30'                    VERIFT SIZE INCREMENT =  20201
*                                       48                       20201
SFSZ     EQU   X'010'         SELF-FORMAT INCREMENT = 16 BYTES
XSCHSZ   EQU   X'028'         EXTENDED SEARCH (KEY) INCREMENT=   S19015
*                                       40 BYTE                  S19015
PFEXTSZ  EQU   X'60'                    PRE-FORMAT INCREMENT=96  20201
FDBSZ    EQU   X'038'                   FEEDBACK(K) INCR=56      20201
Q1       EQU   1                        ONE BYTE QUANTITY        20201
Q255     EQU   255                      255 BYTE QUANTITY        20201
RRINCR   EQU   8                                                 20201
FOUR     EQU   4                                                 20201
UCBADDR  EQU   32                                                20201
UCB23051 EQU   X'06'                    UCB TYPE BIT, 2305-1     Y02072
UCB23052 EQU   X'07'                    UCB TYPE BIT, 2305-2     Y02072
RECREDY  EQU   X'10'                                             20201
OLDOPTS  EQU   X'16'          READX + DYN BUFF + FEEDBACK      @YA19662
FF       EQU   X'FF'                                             20201
RDXCORE  DC    H'28'                    RD EXCLUSIVE ADDITIVE    20201
OFLINCR  EQU   8                       BYTES NECESSARY FOR OVERFLOW
*                                      RECORDS IN IOB(FOR EXTRA CCW)
*
RDADD    EQU   X'0A'          TEST FOR READ OR WRITE ADD
ADDKY    EQU   X'06'          TEST FOR KEY OR ADD
RDXFDB   EQU   X'12'          TEST FOR READ EXCLUSIVE OR FEEDBACK
CPFLAG   EQU   X'42'          SET UNRELATED, COMMAND CHAIN BITS
SILI     EQU   X'20'         SUPPRESS INCORRECT LENGTH INDICATION
NOPCODE  EQU   X'03'     NO OP
ONE      EQU   X'01'                    COUNT OF ONE
CCHN     EQU   X'40'                    COMMAND CHAIN BIT IN CCW
ENQPL    EQU   28                       ENQUE LIST LENGTH
CNVENTRY EQU   12                       ENTRY IN ADDR CONV RTN   A35339
*
         DROP  DECBREG,IOBREG,DCBREG,FDNBASE                     Y02072
         EJECT
        TITLE 'IGG019KA-BDAM FOUNDATION MODULE, NO VS - ASI ROUTINE'
*
*
*  ASYNCHRONOUS INTERRUPT ROUTINE:
*        THIS ROUTINE IS ENTERED BY THE SUPERVISOR SO THAT BDAM MAY
*      COMPLETE THE PROCESSING OF A REQUEST.
*      BDAM EXPECTS THE FOLLOWING REGISTER USAGE'
*        1 RQE ADDRESS
*       14 RETURN POINT
*       15 ENTRY POINT OF THIS ROUTINE
*
         USING IECDFDNA,EPREG
*
R0       EQU   0                  PARAM REG ON RETURN FROM SVC53 Y02072
RIOB     EQU   2                  IOB ADDRESS
RRQE     EQU   7                  RQE BASE REGISTER              Y02072
WORKR7   EQU   7                  WORK REGISTER                  Y02072
RETURN   EQU   9                  RETURN REGISTER FOR READX & ADD
READADD  EQU   10                 ENTRY POINT REG FOR READX & ADD
WORKR2   EQU   14                 WORK REGISTER IN ASI ROUTINE
RRETCODE EQU   15                 RETURN CODE REGISTER
FREEDBUF EQU   57                 FREE DYNAMIC BUFFER SVC
*
IECDFDNA B     DASIA       ENTRY FROM SUPERVISOR
         B     DASIB       ENTRY FROM SELF-FORMAT
         B     DASIC       ENTRY TO CLEAN UP AND POST.
         B     DASID       ENTRY TO POST (FROM SELF FORMAT MOD)  YM3850
*                          IF ERROR. SELF FORMAT ASSUMES THAT THE NEXT
*                          IOB ADDR IS SAVED IN REG 6 AND MUST BE MAIN-
*                          TAINED THROUGHOUT ASI PROCESSING ON THIS
*                          PATH. CONTROL IS RETURNED TO 19KM VIA
*                          THE ADDR PUT IN IOBDQPTR BY 19KM.
*
*
*
*
DASIA    EQU   *
         LR    FDNBASE,EPREG            MOVE BASE TO TRANSPARENT REG.
         DROP  EPREG
         USING IECDFDNA,FDNBASE         PICK UP NEW BASE
         LR    RRQE,PARAM               SAVE IOS RQE ADDRESS     Y02072
         USING RQE,RRQE                 RQE ADDRESSABILITY       Y02072
         L     PARAM,RQEIOB             GET IOB ADDRESS FROM RQE Y02072
         USING IOBSTDRD,PARAM           IOB ADDRESSABILITY       Y02072
         L     SAVE,IOBDCBPT            ESTABLISH DCB BASE       Y02072
         USING IHADCB,SAVE              DCB ADDRESSABILITY       Y02072
         LR    INTRET,RETREG            MOVE SUPERVISOR RETURN ADDRESS.
         L     DECBREG,IOBECBPT         GET DECB ADDRESS
         USING DECB,DECBREG
*
***********************************************************************
*  THE FOLLOWING ROUTINE LINKS IOBS TO THE DCB POOL IF THEY WERE      *
*  OBTAINED BY GETMAIN. THEY ARE ADDED IN ORDER OF INCREASING SIZE.   *
***********************************************************************
POOLIOB  EQU   *                        POOL THE IOB             Y02072
         L     WKREG3,IOBDPLAD          WAS IOB FROM POOL OR     Y02072
         LTR   WKREG3,WKREG3            OBTAINED BY GETMAIN      Y02072
         BNZ   INPOOL                   IF NOT 0,ALREADY IN POOL Y02072
*
POOL     EQU   *                        ADD NEW IOB TO IOB POOL  Y02072
         MVI   IOBDAVLI,UNAVALSW        MARK CURRENT IOB UNAVAIL Y02072
*                                       ABLE BEFORE ADD TO POOL  Y02072
         LA    PARAM,0(0,PARAM)         INSURE 0 HI-ORDER BYTE   A30797
         L     WKREG3,DCBIOBAD          PUT DCB POOL ADDRESS IN
         LA    WORKR2,NULL(WKREG3)      BOTH WORK REGS.
LOOP     LA    WKREG3,NULL(WKREG3)      CLEAR HI BYTE.
         LTR   WKREG3,WKREG3            ANY IOB'S BEYOND THIS.
         BZ    TSTEQ                    NO, GO TEST FOR FIRST IOB
*
*   PUT IOB ON POOL IN ORDER OF INCREASING SIZE. PUT NEW IOB IN QUEUE
*   AS THE FIRST IOB IN THAT SIZE GROUP.
*
         CLC   IOBDIOBS,IOBDIOBS-IOBSTDRD(WKREG3)
         BH    SEENEXT1                 NEW IOB IS LARGER
         IC    PARAM2,IOBDAVLI          SAVE AVAILABILITY BYTE   Y02072
         SLL   PARAM2,SHFT3BYT          WHILE STORING INTO       Y02072
         OR    WKREG3,PARAM2            IOB CHAINING FIELD       Y02072
         ST    WKREG3,IOBDPLAD          STORE NXT IOB ADDR IN    A30797
         LA    WKREG3,0(WKREG3)         CLR TOP BYTE TO COMPARE  Y02072
TSTEQ    CR    WKREG3,WORKR2            IF EQUAL, THIS IOB IS THE
         BE    FIRSTIOB                 FIRST ONE TO BE POOLED
*
*   RELINK THE POOL CHAIN WITHOUT DESTROYING THE AVAILABILITY FLAG.
*
         IC    PARAM2,IOBDAVLI-IOBSTDRD(WORKR2)                   21905
         SLL   PARAM2,SHFT3BYT
         OR    PARAM,PARAM2                                       21905
         ST    PARAM,IOBDPLAD-IOBSTDRD(WORKR2)
         LA    PARAM,0(PARAM)           CLEAR TOP BYTE-NOT NEG   YM1458
         B     INPOOL                   CONTINUE IOB PROCESSING  Y02072
*
FIRSTIOB ST    PARAM,DCBIOBAD           INSERT THIS IOB AS TOP OF CHAIN
         B     INPOOL                   CONTINUE IOB PROCESSING  Y02072
SEENEXT1 LR    WORKR2,WKREG3            SAVE THE ADDRESS OF PRIOR LINK,
         L     WKREG3,IOBDPLAD-IOBSTDRD(WKREG3)  LOAD THE ADDRESS OF
*                                       THE NEXT IOB IN POOL
         B     LOOP                     GO TEST LINK ADDRESS = ZERO
*
***********************************************************************
*
INPOOL   EQU   *                        TEST FOR ERRORS          Y02072
         TM    IOBSTAT1,IOBNEWVL        DID END OF EXTENT CAUSE ASI
         BZ    TSTERR                   NO, CONTINUE LOOKING FOR CAUSE.
         XI    IOBSTAT1,IOBNEWVL+IOBABNRM   CLEAR EXCP AND ABNORM BITS
         L     DECBREG,IOBECBPT         LOAD USER DECB ADDR      Y02072
         ST    DECBREG,IOBDQPTR         SAVE IT IN IOB TO BE     Y02072
*                                       RESTORED BY CEA OR EOE   Y02072
         LA    WKREG2,IOBCSW+3          GET CSW ADDRESS TO USE   Y02072
         ST    WKREG2,IOBECBPT          AS DUMMY ECB FOR IOS     Y02072
         EXCP  (1)                      RESTART THE CHANNEL PROGRAM
         BR    INTRET                   GO BACK TO SUPERVISOR.   Y02072
*
TSTERR   EQU   *                        IS THERE AN ERROR        Y02072
         DROP  RRQE                                              Y02072
         ST    INTRET,IOBDQPTR          SAVE SUPVERVISOR RETURN IN IOB.
         TM    IOBSTAT1,IOBABNRM        WAS THIS ABNORMAL COMPLETION
         BO    ASIERR                   BRANCH IF YES
         TM    IOBDTYPE,IOBRDEXC        IS READX EXCLUSIVE SPECIFIED
         BO    ENQRCD                   YES CHECK IF RECORD ENQ'D
         TM    IOBDTYP2,IOBADDTY        IS WRITE ADD SPECIFIED
         BZ    ASI2NDEN                 NO TEST FOR CHANNEL PROGRAM END
         TM    DCBRECFM,DCBRECV         IS THIS FIXED LENGTH RECORDS
         BZ    ASI2NDEN                 YES, TEST FOR CHANNEL PROG. END
ENQRCD   EQU   *
         TM    IOBDTYP2,IOBRQUST+IOBADDTY  IS THIS A READ OR WRITE ADD
         BZ    ASI2NDEN                 NO TEST FOR CHANNEL PROGRAM END
         TM    IOBSTAT1,IOBENQUE        HAS RECORD BEEN OBTAINED YET
         BO    ASI2NDEN                 YES-GO TEST FOR PROGRAM END
         TM    IOBDTYP2,IOBADDTY        IS THIS A WRITE ADD       13513
         BO    ENQUEUE                  YES--ENQUEUE IT           13513
         CLC   IOBDCPND+SKPHIBYT(CMP3BYTS),IOBCSW     CHANNEL
*                                               PROGRAM FINISHED?
         BNE   ASIERR2                  NO RECORD FOUND           24512
         B     ENQUEUE                  ELSE GO ENQ RECORD       Y02072
*
*
ASI2NDEN CLC   IOBDCPND+SKPHIBYT(CMP3BYTS),IOBCSW     WAS CHANNEL
*                                                 PROGRAM FINISHED?
         BE    DASIE                    BRANCH IF COMPLETE
         TM    IOBDTYP2,IOBADDTY         IS THIS A WRITE ADD
         BZ    ASIERR2                  BRANCH IF AN ERROR        24512
         TM    DCBRECFM,DCBRECV         FIXED LENGTH RECORDS
         BZ    ASIERR2                  IF SO, AN ERROR OCCURRED  24512
         L     READADD,DCBDFOR          GET BASE OF SELF FORMAT MODULE
         B     ASIWAENT(READADD)        AND BRANCH TO IT
*
DASIB    TM    IOBDTYPE,IOBRDEXC+IOBFDBCK  IF NOT READ EXCLUSIVE OR
         BZ    DASIC                    FEEDBACK OPTION, SKIP NEXT RTN.
*
*
*  THE FOLLOWING ROUTINE LOCATES OR DEVELOPS ACTUAL ADDRESS FOR USE AS
*     FEEDBACK AND/OR READ EXCLUSIVE ARGUMENT
*
*
         TM    IOBSTAT1,IOBADDVU        IS THIS A SELF FORMAT ADD
         BO    TSTEXIT                  YES-SKIP MOVING FEEDBACK
         MVC   IOBSEEK+2(6),IOBDNRCF+1  ELSE MV ACTUAL TO COMMON FIELD
*
*  IF THIS WAS A WRITE TO RELEASE AN EXCLUSIVE RECORD, GO TO THE READ
*   EXCLUSIVE MODULE WITHOUT TESTING FOR FEEDBACK TO BE RETURNED.
*
TSTEXIT  TM    IOBDTYP2,IOBRQUST        IS THIS A READ OR WRITE
         BO    TSTFDB                   READ, GO TEST FOR FEEDBACK
         TM    IOBDTYPE,IOBRDEXC        WRITE AND EXCLUSIVE BITS SET,
         BO    RDXEXIT                  GO TO THE READX MODULE
TSTFDB   TM    DCBOPTCD,DCBOPTF         DCB DOES NOT SPECIFY
         BZ    ACTFDBK                  FEEDBACK
         TM    IOBDTYPE,IOBACTAD        OR ADDRESSING IS ACTUAL
         BZ    TSTRR                    RETURN
ACTFDBK  L     WKREG3,IOBECBPT          ACTUAL ADDRESS
         L     WKREG3,DECRECPT-DECB(WKREG3)  AS
         MVC   0(8,WKREG3),IOBSEEK      FEEDBACK.
         B     DASIC                    GO TEST FOR DYNAMIC BUFFERING
DASIE    TM    IOBDTYPE,IOBRDEXC        IS THIS A READX
         BO    DASIB                    BRANCH IF YES
         TM    IOBDTYP2,IOBRQUST        IS THIS A READ
         BO    DASIB                    BRANCH IF YES
         TM    IOBDTYP2,IOBADDTY        IS THIS WRT ADD REQUEST  Y02072
         BZ    DASIB                    BRANCH IF NO
         TM    DCBRECFM,DCBRECV         IS THIS V OR U FORMAT    Y02072
         BO    DEQUEUE                  YES,GO DEQ R0 FOR V,U    Y02072
         L     DEBREG,DCBDEBAD          GET DEB ADDRESS          Y02072
         USING DEBBASIC,DEBREG          DEB ADDRESSABILITY       Y02072
         LA    WKREG1,DEBBASND          GET ADDR OF DEV SECT     Y02072
         USING DEBDASD,WKREG1           EST BASE FOR DEVICE SECT Y02072
         L     WKREG1,DEBUCBAD          GET UCB ADDRESS,1ST EXT  Y02072
         DROP  WKREG1                   DROP DEV SECT BASE       Y02072
         USING UCBOB,WKREG1             UCB ADDRESSABILITY       Y02072
         CLI   UCBTBYT4,UCB23051        IS DEVICE 2305-1?        Y02072
         BE    DEQUEUE                  YES, MUST DEQ R0 THEN    Y02072
         CLI   UCBTBYT4,UCB23052        IS DEVICE 2305-2?        Y02072
         BE    DEQUEUE                  YES, MUST DEQ R0 THEN    Y02072
         B     DASIB                    NO, NO EXCLUSIVE CONTROL Y02072
         DROP  WKREG1,DEBREG            DROP UCB,DEB BASES       Y02072
*
         SPACE 2
***********************************************************************
*  THE FOLLOWING ARE THREE EXITS TO THE READ EXCLUSIVE MODULE, SVC 53 *
*  (IGC0005C). THE FIRST SVC CALL IS ISSUED TO ENQUEUE ON A RECORD    *
*  WHEN READ EXCLUSIVE OR WRITE ADD HAS BEEN REQUESTED.  THE SECOND   *
*  SVC CALL IS ISSUED TO DEQUEUE A BLOCK OBTAINED DURING WRITE ADD    *
*  PROCESSING.  THE THIRD SVC CALL IS ISSUED TO DEQUEUE A BLOCK READ  *
*  IN DURING READ EXCLUSIVE (I.E. WRITE RELEASE). IGC0005C EXPECTS    *
*  THAT REGISTER 1 WILL CONTAIN THE IOB ADDRESS,COMPLEMENTED.         *
***********************************************************************
ENQUEUE  EQU   *                        ENQUEUE ON BLOCK         Y02072
         LCR   PARAM,PARAM              REG 1,IOB -COMPLEMENTED  Y02072
*
         SVC   53                       GO ENQUEUE CURRENT REC   Y02072
*
         SVC   EXIT                     RETURN TO SUPERVISOR
*
DEQUEUE  EQU   *                        DEQUEUE WRITE ADD REQ    Y02072
         LR    RIOB,PARAM               SAVE IOB REG IN R2       Y02072
         LCR   PARAM,PARAM              REG 1,IOB -COMPLEMENTED  Y02072
         DROP  PARAM                    DROP IOB BASE FOR SVC    Y02072
*
         SVC   53                       GO DEQUEUE CURRENT REC   Y02072
*
         LR    PARAM,RIOB               RESTORE IOB REG          Y02072
         USING IOBSTDRD,PARAM           REESTABLISH ADDRESSING   Y02072
         TM    DCBRECFM,DCBRECV         VAR,UNDEF RECORD FORMAT? Y02072
         BNO   CHKERR                   NO,GO CHECK IF ERR       YM6585
         LTR   R0,R0                    IS THERE NEXT IOB?       Y02072
         BZ    DASIB                    NO,GO CHECK DYN BUF      Y02072
         LR    PARAM,R0                 PUT NEXT IOB IN R1;19KM  Y02072
*                                       ALSO EXPECTS ITS BASE    Y02072
*                                       IN R10, THE DCB IN R13   Y02072
         L     READADD,DCBDFOR          ADDR OF 19KM,SELF FORMAT Y02072
         B     ASIWAENT(READADD)        BR TO FORMAT MOD         Y02072
CHKERR   EQU   *                        2305 ERROR CHECK         YM6585
         TM    IOBSTAT2,ALLMSK          WERE THERE ANY ERRORS    YM6585
         BNO   DASIB                    NO, GO GET FDBACK THEN   YM6585
         B     DASIC                    YES,JUST FREE BUF & POST YM6585
*
RDXEXIT  EQU   *                        DEQUEUE WRT REL REQ      Y02072
         LR    RIOB,PARAM               SAVE IOB REG IN R2       Y02072
         LCR   PARAM,PARAM              REG 1,IOB -COMPLEMENTED  Y02072
         DROP  PARAM                    DROP IOB BASE FOR SVC    Y02072
*
         SVC   53                       GO DEQUEUE CURRENT REC   Y02072
*
         LR    PARAM,RIOB               RESTORE IOB REG          Y02072
         USING IOBSTDRD,PARAM           REESTABLISH ADDRESSING   Y02072
         B     DASIC                    CHECK FOR DYNAMIC BUFFERING
*
***********************************************************************
*
TSTRR    LA    INTRET,DASIC             SET UP TO TEST FOR DYN. BUFF.
*                                       ON RETURN FROM ADDR CONVERSION
         TM    IOBDTYPE,IOBRELBL        IS RELATIVE RECORD BEING
         BZ    RTEXIT                   USED,NO-GO TO RELATIVE TRACK
         L     EPREG,DCBDFBK            LOAD ENTRY POINT OF FEEDBACK
         BR    EPREG                    MODULE AND GO THERE
*
RTEXIT   L     EPREG,DCBREAD            LOCATE THE
         L     EPREG,8(0,EPREG)         ADDR OF RELATIVE TRACK MODULE
         BR    EPREG                    AND GO THERE             Y02072
*
*
DASIC    TM    IOBDTYP2,IOBRQUST        IS THIS A READ REQUEST
         BO    MAKEAVL                  YES-MAKE IOB AVAILABLE   Y02072
         TM    IOBDTYPE,IOBDYNBF        NO-TEST FOR DYN. BUFFERING
         BZ    MAKEAVL                  NO-MAKE IOB AVAILABLE    Y02072
*
*                       FREE DYNAMIC BUFFER
*
         LR    SAVE,PARAM               SAVE IOB POINTER         XM5413
         USING IOBSTDRD,SAVE
         L     PARAM2,IOBECBPT          ADDR OF DECB             A30797
         L     PARAM,IOBDCBPT           ADDR OF DCB              A30797
         FREEDBUF (0),D,(1)             ISSUE FREEDBUF SVC CALL  A30797
         LR    PARAM,SAVE               RESTORE IOB POINTER      A30797
         USING IOBSTDRD,PARAM
         L     SAVE,IOBDCBPT            RESTORE DCB POINTER      A30797
         USING IHADCB,SAVE
*
DASID    EQU   *                        ENTRY FOR POST ROUTINE   YM3850
*
*  THE FOLLOWING ROUTINE POSTS THE ECB COMPLETE AND ZEROS THE IOB
*  AVAILABILITY BYTE IN THE IOB.
*
MAKEAVL  SR    PARAM2,PARAM2            CLEAR FOR EXCEPTION CODES.
         IC    PARAM2,IOBSTAT2          INSERT EXCEP CODES FROM THE IOB
         SLL   PARAM2,16                POSITION THEM FOR POST.
         LR    RIOB,PARAM               SAVE IOB REG IN POST     Y02072
         DROP  PARAM                                             Y02072
         USING  IOBSTDRD,RIOB           NEW BASE FOR IOB         Y02072
         L     FDNBASE,IOBDQPTR         LOAD SAVED SUPER RETURN  YM5969
         L     PARAM,IOBECBPT           SET DECB PARAMETER
*
         POST  (1),(0)                  AND POST.
*
         TM    DCBMACRF,DCBMRCK         IS CHECK MACRO SPECIFIED Y02072
         BOR   FDNBASE                  YES, RETURN DIRECTLY     Y02072
         MVI   IOBDAVLI,NULL            ELSE, MAKE IOB AVAILABLE Y02072
         BR    FDNBASE                  RETURN TO SUPERVISOR     Y02072
         DROP  RIOB                     DROP TEMPORARY IOB BASE  Y02072
         USING IOBSTDRD,PARAM           REESTABLISH OLD IOB BASE Y02072
*
*
*    THE FOLLOWING ROUTINE DETERMINES THE CAUSE OF ABNORMAL COMPLETION
*     BY ANALYZING THE SENSE BYTES AND CSW STORED IN THE IOB BY IOS.
*
*
ASIERR   TM    IOBSTAT2,ALLMSK          HAS ERROR ALREADY BEEN FLAGGED
         BC    4,ERREXIT                IF YES , EXIT
         TM    IOBCSW+3,UCMSK           TEST FOR UNIT CHECK
         BZ    TSTEXC                   BR. IF NOT
         TM    IOBSENS0,DCMSK           TEST FOR DATA CHECK
         BO    SETUDC                   BRANCH IF YES
         TM    IOBSENS1,NRMSK           TEST NO RECORD FOUND
         BZ    SETUE                    IF NOT SET, MUST BE UNRELATED
ASIERR2  OI    IOBSTAT2,NOREC           SET NO RECORD FOUND EX. CODE
         TM    IOBDTYP2,IOBADDTY        IS TYPE WRITE ADD
         BZ    DASIC                    NO, RETURN TO POOLING ROUTINE
         XI    IOBSTAT2,FLIPMSK         MV NRF TO NO-SPACE-FND   YM5893
         TM    DCBRECFM,DCBRECV         IS RECFM V,U             YM6585
         BO    DASIC                    YES, GO RETURN           YM5893
         TM    IOBSTAT1,IOBENQUE        NO, IS THE ENQUE BIT ON  YM6585
*                                       COULD ONLY BE ON FOR     YM6585
*                                       FIXED FORMAT IF 2305     YM6585
         BNO   DASIC                    NO, GO FREE BUF & POST   YM6585
         B     DEQUEUE                  YES, GO DEQUEUE REQUEST  YM6585
*                                       SINCE ENQ'D ON WHOLE DS  YM6585
*
SETUDC   OI    IOBSTAT2,UNCOR           SET UNCORRECTABLE DATA CHECK
         B     ERREXIT                  GO TEST FOR EXIT
*
TSTEXC   EQU   *
         TM    IOBCSW+4,INCLMSK         WAS THE RECORD WRONG LENGTH
         BO    SETINCL                  IF YES GO SET FLAG
SETUE    OI    IOBSTAT2,UNREL           SET UNRELATED ERROR FLAG
*
ERREXIT  TM    IOBSTAT1,IOBADDVU        IF THIS WAS A FORMAT WRITE,
         BO    DASID                    GO POST & RETURN       @ZA15675
         TM    IOBSTAT2,INCLMSK+ENDOD   IF INCORRECT LENGTH OR END OF
         BC    7,DASIB                  DATA SET, GO CHECK FEEDBACK
         B     DASIC                    ELSE BYPASS FEEDBACK TEST
*
SETINCL  OI    IOBSTAT2,LGNCK           SET INCORRECT LENGTH EXCEPTION
         B     ERREXIT                  CODE, GO DETERMINE EXIT
*
         EJECT
***********************************************************************
*                   CONSTANTS AND EQUATES                             *
***********************************************************************
EIGHT    DC    F'8'                                                MC0J
ASIWAENT EQU   8                        OFFSET IN FORMAT MOD,ASI Y02072
EADCCW  EQU   X'06'                                               MC0J
EXIT     EQU   3                        SVC NUMBER TO RETURN TO SUPERV.
RTRKOFFS EQU   4                        OFFSET TO REL TRK ENTRY  Y02072
*                                       IN CONVERT ROUTINE       Y02072
SKPHIBYT EQU   X'01'                    TO START AT SCND BYTE OF WORD
*                                       FOR THREE BYTE COMPARES
CMP3BYTS EQU   X'03'                    USED FOR THREE-BYTE COMPARES
UNAVALSW EQU   X'FF'                    IOB UNAVAILABLE SWITCH
SCNDHALF EQU   X'04'                    SECOND HALF OF CCW
FLIPMSK  EQU   X'A0'                    NO RECORD FOUND TO NO SPACE
ALLMSK   EQU   X'FF'                    TEST FOR EXCEPTION CODES
INCLMSK  EQU   X'40'                    INCORRECT LENGTH
NRMSK    EQU   X'08'                    NO RECORD FOUND
UCMSK    EQU   X'02'                    UNIT CHECK
DCMSK    EQU   X'08'                    DATA CHECK
*              EXCEPTION CODES
NOREC    EQU   X'80'
LGNCK    EQU   X'40'
NOSPA    EQU   X'20'
INVAL    EQU   X'10'
UNCOR    EQU   X'08'
ENDOD    EQU   X'04'
UNREL    EQU   X'02'
*              OPTIONS AND TYPE
VERIFY   EQU   X'80'
OFLOW    EQU   X'40'
EXSCH    EQU   X'20'
FEEDB    EQU   X'10'
ACTAD    EQU   X'08'
DYNBF    EQU   X'04'
READX    EQU   X'02'
RELRD    EQU   X'01'
KEYOP    EQU   X'80'
LGNOP    EQU   X'40'
READ     EQU   X'08'
KEY      EQU   X'04'
ADD      EQU   X'02'
SHFT3BYT EQU   24                       SHIFT TO TOP BYTE OF REG Y02072
NULL     EQU   0                        0 OFFSET                 Y02072
MODID    DC    C'IGG019KA'              MODULE ID                Y02072
FIX      DC    C' OZ28786'              LATEST FIX             @ZA08000
DATE     DC    C'&SYSDATE'              DATE OF LATEST FIX     @ZA08000
PATCH    DC    XL((*-IGG019KA)/20)'0'   5% PATCH AREA            Y02072
         EJECT
***********************************************************************
*                            DSECTS                                   *
***********************************************************************
         DCBD  DSORG=DA
         EJECT
         IHADECB
         EJECT
         IECDRQE                                                 Y02072
         EJECT
         IEFUCBOB  LIST=YES                                      Y02072
         EJECT
         IEZIOB
CCW1     DS    D                  CHANNEL COMMAND # 1
CCW2     DS    D                  CHANNEL COMMAND # 2
CCW3     DS    D                  CHANNEL COMMAND # 3
         ORG   IOBDAYLI           ********************
IOBDAVLI DS    B                  ******************
         ORG   IOBDQPTR+4         *******************
IOBUPLIM DS    XL8                ******************
IOBDNRCF DS    CL8                ******************
         ORG   IOBSTAT2
OTHERERR EQU   BIT6               ERROR INDICATED IN NXT 2 BYTES
         IKJTCB
         EJECT
         IEZDEB                                                  Y02072
         END
