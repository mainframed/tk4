         TITLE 'IGG0CLCF -  OPEN, EXTEND, AND FORMAT'
*********************************************************************
*
*01*  MODULE-NAME = IGG0CLCF                                   @YL026UD
*01*  STATUS = 00
*01*  CHANGE-ACTIVITY = NEW FOR RELEASE 21
*                       (AS IGC0002H,IGG0CLF2)
*                       RENAMED AND CHANGED FOR VS2 RELEASE 2  @YL026UD
*                      SPLIT FROM IGG0CLCE FOR APAR OZ00006
*        VS2 RELEASE 037 CHANGES
* EXTENDED MVS CVOL SUPPORT                                    @Z40CSRC
*ADD 'RENT' TO LINKEDIT PARMS                                  @OZ07695
*D195500-196500,D197500-199000,A197500,C501000,A729451         @OZ15077
*A162510,C183100,A190010-190040                                @OZ17531
*A191605,A708000                                               @OZ25613
*A191641,A191683                                               @OZ26358
***********************************************************************
*01*  DESCRIPTIVE-NAME =  OPEN, EXTEND, AND FORMAT
*01* FUNCTION=   IGC0002H -                                    @YL026UD
*                1.  OPEN SYSCTLG DATA SET.                    @YL026UD
*                2.  STEPS TO NEXT EXTENT OF CATALOG DATA SET. @YL026UD
*                3.  EXTEND SYSCTLG DATA SET.                  @Z40CSRC
*                IGG0CLF2 -                                    @YL026UD
*                1.  FORMATS ALL OR PART OF A SYSCTLG DATA SET @YL026UD
*                    (256 BYTE RECORDS WITH 8 BYTE BINARY ZERO @YL026UD
*                    KEYS ARE WRITTEN.  THE FIRST RECORD WILL  @YL026UD
*                    CONTAIN AN INITIALIZED VOLUME INDEX BLOCK)@YL026UD
*     FOR AN OVERVIEW OF THIS MODULE AND ITS RELATIONSHIP WITH THE
*     OTHER CATALOG MANAGEMENT MODULES, REFER TO THE CVOL PROCESSOR
*     PLM, SY35-0011.                                          @Z40CSRC
*01*  NOTES = LABELS REFERED TO IN COMMENTARY ARE ENCLOSED IN SINGLE
*     QUOTES. EQUATED CONSTANTS ARE PREFIXED WITH 'D' OR 'X' WHEN THEY
*     ARE DECIMAL OR HEXADECIMAL RESPECTIVELY; FOR EXAMPLE, D12 EQU 12,
*     AND X12 EQU X'12'. ERROR CODES ARE SET USING 'ERRORXX' AT
*     CORRESPONDING LABELS, 'ERRXX'. BRANCHES ORIGINATE FROM LABELS
*     'IGG0CLCX'. FLAGS ARE LABELED 'FLAGX'.  IO IS DONE FROM EITHER A
*     SUBROUTINE NAMED 'CALLBLDL' OR A SUBROUTINE NAMED 'IO'. ADDRESS
*     CONVERSION IS ACCOMPLISHED IN SUBROUTINES NAMED 'TOABSL' AND
*     'TORLTV'. THESE CONVENTIONS ARE FOLLOWED IN EVERY MODULE WHERE
*     THE EVENT EXISTS.
*02*    DEPENDENCIES = OPERATION OF THIS MODULE DEPENDS ON THE
*       COLLATING SEQUENCE OF THE EXTERNAL CHARACTER SET. REDEFINITION
*       OF THE CHARACTER CONSTANTS BY REASSEMBLY WILL RESULT IN A
*       CORRECT MODULE. THE CONSTANTS IN QUESTION ARE PREFIXED WITH
*       'CCD', FOR 'CHARACTER CODE DEPENDENT'.
*02*    RESTRICTIONS = ALL DIRECT ACCESS STORAGE DEVICES EXCEPT 2321
*       DATA CELL ARE SUPPORTED BY CATALOG MANAGEMENT.
*02*    REGISTER-CONVENTIONS = REGISTERS ARE LABELED 'R0,R1,...,R15'.
*       REQUIRED ADDITIONAL LABELS ARE EQUATED TO THESE. REGISTERS
*       COMMON TO ALL MODULES OF CATALOG MANAGEMENT ARE
*       R4  BASE REGISTER FOR THE MODULE.
*       R6  BASE REGISTER FOR THE WORKAREA DSECT.
*       R8  BASE REGISTER FOR THE CAMLSTD DSECT.
*02*    PATCH-LABEL = 'FIXAREA'                                @YL026UD
*01*  MODULE-TYPE = MODULE
*02*    PROCESSOR = ASSEMBLER
*02*    MODULE-SIZE = SEE LENGTH OF IGG0CLCF IN
*                     EXTERNAL SYMBOL DICTIONARY ABOVE.
*02*    ATTRIBUTES = REENTERABLE, READ ONLY, ENABLED, SUPERVISORY MODE
*01*  ENTRY = IGC0002H
*02*    PURPOSE = TO OPEN OR EXTEND AN OS CVOL                 @Z40CSRC
*02*    LINKAGE = BALR 14,15                                   @Z40CSRC
*02*  INPUT =                                                  @Z40CSRC
*       (REQUEST TO OPEN CATALOG)                              @YL026UD
*       .  R0 CONTAINS ZERO                                    @YL026UD
*       .  R1 CONTAINS UCB ADDRESS OF THE VOLUME WHOSE         @YL026UD
*          CATALOG IS TO BE OPENED                             @YL026UD
*       .  R8 CONTAINS CAMLST ADDRESS                          @Z40CSRC
*       .  R15 CONTAINS THE ADDRESS OF A WORKAREA IN WHICH THE @YL026UD
*          DCB/DEB CHAIN IS TO BE BUILT.  THIS WORKAREA ALSO   @YL026UD
*          CONTAINS ENOUGH SPACE TO READ IN A DSCB.  IF OPEN   @YL026UD
*          IS SUCCESSFUL, CORE BEYOND THE DEB IS FREED.        @YL026UD
*       (REQUEST TO LOCATE NEXT EXISTING EXTENT)               @YL026UD
*       .  R0 CONTAINS THE DCB ADDRESS                         @YL026UD
*       .  R8 CONTAINS ADDRESS OF CAMLST                       @Z40CSRC
*       (REQUEST TO EXTEND SYSCTLG).                           @Z40CSRC
*       .  R0 CONTAINS ADDRESS OF DCB AREA.                    @Z40CSRC
*       .  R8 CONTAINS ADDRESS OF CAMLST.                      @Z40CSRC
*       .  THE REQUEST IS FOR A NEW EXTENT IF THE 'M'+1        @Z40CSRC
*          OF THE MBBCCHHR IN THE IOB OF THE CATALOG           @Z40CSRC
*          WORK AREA IS EQUAL TO THE 'M' IN THE NUMBER         @Z40CSRC
*          OF EXTENTS IN THE DEB.                              @Z40CSRC
*       (IF CONTROL HAS RETURNED VIA XCTL FROM EXTEND RTNS)    @Z40CSRC
*       .  R4 - CONTAINS ADDRESS OF EXTEND WORK AREA.          @Z40CSRC
*       .  R6 - CONTAINS ADDRESS OF SVRB                       @Z40CSRC
*       .  R7 - CONTAINS ADDRESS OF DCB.                       @Z40CSRC
*       .  R8 - CONTAINS ZERO.                                 @Z40CSRC
*       .  R9 - CONTAINS THE DCB ADDRESS FOR CATALOG.          @Z40CSRC
*       .  R10 - CONTAINS UCB ADDR FOR CATLG VOLUME.           @Z40CSRC
*        (GENERAL)                                             @Z40CSRC
*       .  THE ADDRESS OF THE CATALOG WORK AREA IS             @Z40CSRC
*          LOCATED AT OFFSET 32 OF THE DCB AREA.               @Z40CSRC
*02*    OUTPUT =
*          ADDRESS OF THE DCB IS RETURNED IN R1.
*          R15 - CONTAINS RETURN CODE.                         @Z40CSRC
*02*    EXIT-NORMAL = BR 14 WITH R15 = 0                       @Z40CSRC
*02*    EXIT-ERROR = BR 14 WITH R15 SET TO ERROR CODE:         @Z40CSRC
*        04 - SYSCTLG NOT FOUND OR INVALID.                    @Z40CSRC
*        08 - NO SECONDARY SPACE ALLOCATED.                    @Z40CSRC
*        12 - PERMANENT I/O ERROR.                             @Z40CSRC
*01*  EXTERNAL-REFERENCES = AS FOLLOWS.
*02*    ROUTINES = IECPRLTV, IECPCNVT, IGG0553A (EXTEND)
*02*    DATA-SETS = SYSCTLG
*02*    DATA-AREA = ALL DATA AREAS ARE DESCRIBED BY DSECTS AT THE END
*       OF THE MODULE LISTING.
*01*  TABLES = NONE
*01*  MACROS = EXCP, WAIT, CVT, GETMAIN, FREEMAIN, DEQ
*
*********************************************************************
         TITLE 'IGG0CLCF - (IGC0002H) CATALOG OPEN/EXTEND MODULE'
IGG0CLCF CSECT
          USING CAMLSTD,R8        ESTABL BASE FOR CAMLST
         USING ENTRY,R9           ESTABL BASE FOR ENTRY
         USING WORKAREA,R6        ESTABL BASE FOR WORKAREA
         BALR  BASE,0             SET BASE FOR MODULE
         USING *,BASE             ESTABL BASE FOR MODULE
         B    MODLABEL
         DC    C'IGG0CLCF'        MODULE IDENTIFIER
         DC    C'&SYSDATE'        DATE OF ASSEMBLY             @Z40CSRC
MODLABEL EQU   *
***********************************************************************
*                                                                     *
*     IGC0002H - CATALOG OPEN MODULE                                  *
*                                                                     *
***********************************************************************
*                                                              @YL026UD
         ENTRY IGC0002H                                        @YL026UD
*
IGC0002H EQU   *                                               @YL026UD
*
         LR    R2,BASE            SAVE CALLER'S BASE REGISTER  @YL026UD
         BALR  BASE,0             SET BASE FOR MODULE          @YL026UD
         USING *,BASE             ESTABL BASE FOR MODULE       @YL026UD
*                                                              @YL026UD
         LTR   R8,R8              TEST RETURNING FROM EXTEND   @Z40CSRC
         BZ    EXTENDB            YES, GO CHK SUCCESS          @Z40CSRC
         LTR   RFKEY,RFKEY        TEST FOR EXTEND REQUEST      @YL026UD
         BP    EXTEND             BRANCH FOR EXTEND REQUEST    @YL026UD
*                                                              @YL026UD
*      OPEN REQUEST                                            @YL026UD
*                                                              @YL026UD
         USING AREADCB,R15        SET DCB/DEB ADDRESSIBILITY   @YL026UD
         LR    R0,R2              SAVE CALLER'S BASE REGISTER  @YL026UD
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD
         DROP  R15                                             @YL026UD
         STM   R3,R14,0(R2)       SAVE REGISTERS               @YL026UD
         ST    R0,4(R2)           SAVE CALLER'S BASE REG       @YL026UD
*
         L     RCVT,CVTPTR        PICK UP THE CVT POINTER.
         LR    RGAREA,R15         LOAD AREA ADDRESS.
         USING CVT,RCVT           SET CVT ADDRESSABILITY.
         USING AREADCB,RGAREA     SET DCB/DEB ADDRESSABILITY.  @YL026UD
         USING UCB,RUCB           SET UCB ADDRESSABILITY.
         LR    RUCB,RPARM         SET UP UCB BASE REGISTER.
         XC    FMTSW(SWL),FMTSW   CLEAR ALL SWITCHES.
         EJECT
*
***********************************************************************
*
* THE FOLLOWING CODE FROM THE LABEL BLDEB TO YESFMT INITIALIZES A
* DCB AND DEB IN THE WORK AREA PROVIDED.
*
***********************************************************************
*
*
*      CLEAR DEB AND SET UCB ADDRESS
*
RVTTR    EQU   0                  REG 0 HOLDS VTOC TTR
RDBSET   EQU   6                  REG 6 USED TO SET UP THE DEB.
BLDEB    EQU   *
         XC    DEB(DEBL),DEB      CLEAR THE DEB AREA.
         ST    RUCB,DEBUCBAD      STORE UCB ADDRESS IN THE DEB.
         L     RVTTR,SRTEFSCT     GET THE VTOC TTR.
*
*      INITIALIZE APPENDAGE VECTOR TABLE
*
         MVC   DEBAPPAD,CVTXAPG   MOVE APP VECTOR TABLE ADDRESS.
         MVI   DEBAPPAD,FOUR      SET EXTENT CLASS.
*
*      SET DCBDEBAD
*
         LA    RDBSET,DEBDEBAD    USE AS DCB.
         S     RDBSET,FDEBAD      MINUS DEB ID COMPL & DISPL.
         ST    RDBSET,DEBDCBAD    ACTUAL DCB ADDRESS.
         MVI   DEBDVMOD,X10       FILE MASK, PERMIT SEEK HH.
         MVC   DEBENDCC(L'HICCHHNT),HICCHHNT SET HI UPPER EXTENT.
         MVI   DEBNMEXT,X01       NUMBER OF EXTENTS.
*
*      CONVERT RELATIVE TO ACTUAL ADDRESSES
*
RDEBP    EQU   1                  DEB POINTER FOR INPUT TO CNVT.
RRES     EQU   2                  RESULT RETURN AREA POINTER.
         IC    RVTTR,ZEROA        SET CONCAT NO. TO ZERO.
         L     RBR,CVTPCNVT       ENTRY OF CNVT RTN.
         LA    RDEBP,DEB          GET DEB ADDRESS.
         ST    RDEBP,DEBDEBAD     DEB POINTER.
         LA    RRES,M2B2C2HR      CONVERTED RESULT AREA.
         LR    RGAREA2,RGAREA     SAVE AREA ADDR.
         STM   R9,R13,DSCBK       SAVE VOLITILE REGISTERS.
         BALR  RGRET,RBR          GO TO THE CONVERT ROUTINE.
         LM    R9,R13,DSCBK-AREADCB(R8) RESTORE VOLATILE REGS. @YL026UD
         DROP  RCVT
         DROP  RUCB
         MVI   DS1FMTID,X00       ZERO THE FORMAT ID FIELD.
*
*      CONSTRUCT AN IOB AND ECB
*
RECBA    EQU   0                  REGS USED TO SET UP ECB/IOB.
RECBB    EQU   2                  REGS USED TO SET UP ECB/IOB.
RECBC    EQU   3                  REGS USED TO SET UP ECB/IOB.
         SR    RECBA,RECBA        ECB.
         LA    RECBB,AECB         ECB POINTER.
         STM   RECBA,RECBB,AECB   STORE ECB POINTER.           @YL026UD
         LA    RECBA,CHPG         CHANNEL PROGRAM POINTER.     @YL026UD
         SR    RECBC,RECBC        BLOCK INCR FLD.              @YL026UD
         LR    R1,RDBSET          DCB POINTER FOR IOB          @YL026UD
         STM   RECBA,RECBC,AIOB+16  STORE ECB AND IOB.         @YL026UD
         MVI   AIOB,X42           SET UNRELATED REQUEST.
*
*      RELOCATE CHANNEL PROGRAM FOR DSCB READ
*
RCCWA    EQU   0                  REGS USED TO SET CCW ADDRESSES.
RCCWB    EQU   2                  REGS USED TO SET CCW ADDRESSES.
RCCWC    EQU   3                  REGS USED TO SET CCW ADDRESSES.
         LM    RCCWA,RCCWC,CCW1   GET THE CCW CONSTANTS.       @YL026UD
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.
         STM   RCCWA,RCCWC,CHPG   STORE THE CHANNEL PROGRAM    @YL026UD
         LM    RCCWA,RCCWC,CCW3   GET MORE CCW CONSTANTS       @YL026UD
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES         @YL026UD
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.         @YL026UD
         STM   RCCWA,RCCWC,CHPGAA STORE THE CHANNEL PROGRAM    @YL026UD
         LM    RCCWA,RCCWC,CCW5   GET MORE CCW CONSTANTS       @YL026UD
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES         @YL026UD
*                                 IN THE PATTERN CCWS.         @YL026UD
         STM   RCCWA,RCCWC,CHPGBB STORE THE CHANNEL PROGRAM.   @YL026UD
         LM    RCCWA,RCCWC,CCW7   GET MORE CCW CONSTANTS.      @YL026UD
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.
         STM   RCCWA,RCCWC,CHPGCC STORE THE CHANNEL PROGRAM    @YL026UD
         LM    RCCWA,RCCWC,CCW9   GET MORE CCW CONSTANTS       @YL026UD
         AR    RCCWA,RGAREA       MODIFY THE ADDRESSES         @YL026UD
         AR    RCCWB,RGAREA       IN THE PATTERN CCWS.         @YL026UD
         STM   RCCWA,RCCWC,CHPGDD STORE REMAINING CHAN PROGS.  @YL026UD
*
*      SET SEARCH ARGUMENT AND READ DSCB
*
         MVC   DSCBK(L'SYSCTLG),SYSCTLG  SET DS NAME.
         MVC   DSCBK+8(L'DSCBK-L'SYSCTLG),DSCBK+7  BLANK REMAINDER
*
*      IO:  EXCP, WAIT, AND CHECK
*
         BAL   RGRET,IO3          GO TO THE IO ROUTINE.
         TM    DS1FMTID,XFF       CHECK FORMAT ID FIELD.
         BZ    ERROR4             SYSCTLG DATA SET NOT FOUND.
         MVC   DSCBTRK,COUNT      SAVE CCHH OF SYSCTLG DSCB.
*
*      CHECK FOR RACF-INDICATED SYSCTLG                        @Z40CSRC
*
         TM    DS1DSIND,DS1RACDF  IS CATLG RACF INDICATED      @Z40CSRC
         BNO   CHKEXTD            NO, SKIP RACF CODE           @Z40CSRC
         L     RCWA,CATWKAP       GET ADDR OF CATLG WORK AREA  @Z40CSRC
         USING WORKAREA,RCWA      WORK AREA ADDRESSABLE        @Z40CSRC
         OI    FLAG5,OCWRACAT     SET RACF INDICATOR           @Z40CSRC
         DROP  RCWA                                            @Z40CSRC
*
CHKEXTD  EQU   *                  CHECK FOR EXTEND             @Z40CSRC
         CLI   EXTDSW,1           TEST THE EXTEND SWITCH.
         BH    YESFMT             BRANCH IF 2ND PASS OF EXTEND.
         BE    EXTENDA            BR IF 1ST PASS OF EXTEND.    @Z40CSRC
         EJECT
*
* NOTE THAT THIS CODE IS ENTERED ONLY IF THE REQUEST IS FOR AN OPEN.
* THIS CODE BUILDS THE ACTUAL DEB/DCB FOR THE SYSCTLG DATA SET.
*
         TM    DS1LSTAR+2,XFF     'R' OF TTRLL IN DSCB.
         BO    NOFMT              DON'T FORMAT.
*
*      SET THE FORMAT FLAG ON
*
YESFMT   EQU   *
         MVC   FMTSW,DS4DEVDB     SAVE DIRECTORY BLOCKS/TRACK.
*
*      GET NUMBER OF EXTENTS ALLOWED
*
REXT     EQU   12                 NUMBER OF EXTENTS REGISTER.  @YL026UD
NOFMT    EQU   *
         SR    REXT,REXT
         IC    REXT,DS1NOEPV      GET NUMBER OF EXTENTS.
         LTR   REXT,REXT          IS EXTENT ALLOCATION ZERO?
         BZ    ERROR4             BRANCH IF NO EXTENTS ALLOCATED.
*                                                              @Y30LSRA
* IF THE CVOL RESIDE ON VIRTUAL DASD, THIS ROUTINE GETS CORE   @Y30LSRA
* TO BUILD A PARM LIST TO ACQUIRE THE SPACE ON DASD.  THE ADDR @Y30LSRA
* OF THIS SPACE IS TEMPORARILY SAVED IN THE UNUSED PORTIONS OF @Y30LSRA
* THE DEB.                                                     @Y30LSRA
*                                                              @Y30LSRA
         USING UCB,RUCB           ADDRESS UCB                  @Y30LSRA
         TM    UCBTBYT2,VIRTDASD  IS CVOL ON VIRT DASD         @Y30LSRA
         BNO   RNVIRT             DONT ISSUE GETMAIN FOR LIST  @Y30LSRA
         GETMAIN R,LV=L96,SP=230  GET NEEDED CORE              @Y30LSRA
         XC    D0(L96,R1),D0(R1)  ZERO OUT THE CORE            @Y30LSRA
         ST    R1,DEBDEBAD+D4     SAVE ADDR OF AREA IN UNUSED  @Y30LSRA
         MVC   D8(L6,R1),UCBVOLI  GET THE VOLID OF VIRT PACK   @Y30LSRA
         LA    R1,D28(,R1)        POINT TO PARAM LIST AREA     @Y30LSRA
         ST    R1,DEBDEBAD+D8     SAVE IT IN UNUSED            @Y30LSRA
         DROP  RUCB               DONT NEED IT ANYMORE         @Y30LSRA
RNVIRT   EQU   *                                               @Y30LSRA
*
*      FORMAT 1 DSCB EXTENT LOOP
*
RTOB     EQU   3                  EXTENT TO BASE.              @YL026UD
RFRL     EQU   7                  FROM LIMIT REGISTER.
RFRS     EQU   6                  SIZE FO FROM REGISTER.
RFRB     EQU   5                  EXTENT FROM BASE.
         STC   REXT,DEBNMEXT      STORE NO. OF EXTENTS.
         LA    RTOB,DAREA-EXTL    SET EXTENT AREA POINTER      @Z40CSRC
         LA    RFRL,DS1EXT3       LIMIT FOR BXLE.
         LA    RFRS,DS1EXT2-DS1EXT1 SIZE OF 'FROM' EXTENT.
         LA    RFRB,DS1SCALO+1    'FROM' BASE.
         MVI   COUNT,X'00'        INITIALIZE M BYTE = ZERO     @OZ17531
BLDXTLP  EQU   *
         LA    RTOB,EXTL(RTOB)    GO TO NEXT EXTENT IN DEB.
         BXLE  RFRB,RFRS,BLDXTM   BR IF STILL IN FORMAT 1 DSCB.
*
*      IO:  READ FORMAT 3 DSCB
*
RCCWH    EQU   1                  REG USED IN RELOCATING CCWS.
         MVC   CCHHR(CCHHRL),DS1PTRDS  FORMAT 3 POINTER.
         LM    RCCWA,RCCWH,CCWRDKD  READ KEY DATA CCW.
         AR    RCCWA,RGAREA       RELOCATE.
         STM   RCCWA,RCCWH,CHPG+CCW3-CCW1    MODIFY EXISTING CHAN PROG.
         MVC   DSVEXTNT,DEBSTRCC  SAVE OFF 1ST EXTEND          @Z40CSRC
         XC    DEBSTRCC(FOUR),DEBSTRCC CLEAR START CCHH        @Z40CSRC
         MVC   DEBENDCC(L'HICCHHNT),HICCHHNT ALLOW FULL ACCESS @Z40CSRC
         BAL   RGRET,IO3          EXCP, WAIT CHECK.
         MVC   DEBSTRCC(L'DSVEXTNT),DSVEXTNT RESTORE 1ST EXT   @Z40CSRC
         MVC   DS1FMTID(NINTY),DS1DSSN  SHIFT FLD LEFT 1 BYTE.
         LA    RFRB,DSCBK4        'FROM' EXTENT BASE.
*
*      SET FORMAT 3 EXTENTS
*
BLDXTM   EQU   *
         MVC   DEBUCBAD-DAREA((L'DEBUCBAD+L'DEBBINUM),RTOB),DEBUCBAD
*                                 MOVE DVMOD, UCBADR,BB TO DEB.
         MVC   DEBSTRCC-DAREA(EIGHT,RTOB),TWO(RFRB)
*                                 MOVE CCHH TO DEB.
* IF THE CVOL RESIDES ON VIRTUAL DASD, THIS ROUTINE FILLS IN   @Y30LSRA
* EXTENT INFORMATION INTO THE PARAMETER LIST TO ACQUIRE SPACE. @Y30LSRA
*                                                              @Y30LSRA
         L     RBR,DEBDEBAD+D8    GET POINTER TO ENTRIES       @Y30LSRA
         LTR   RBR,RBR            IS THERE ONE                 @Y30LSRA
         BZ    RNVIRT2            NO, NOTHING TO DO HERE       @Y30LSRA
         MVC   D0(L2,RBR),TWO(RFRB) MOVE IN LOW CC OF EXTENT   @Y30LSRA
         MVC   D2(L2,RBR),SIX(RFRB) MOVE IN HIGH CC OF EXTENT  @Y30LSRA
         LA    RBR,D4(RBR)        INCR POINTER TO EXT ENTRIES  @Y30LSRA
         ST    RBR,DEBDEBAD+D8    STORE IT BACK                @Y30LSRA
RNVIRT2  EQU   *                                               @Y30LSRA
         CLI   0(RFRB),X81        CHECK EXTENT TYPE.
         BE    CALCNT             BRANCH ON CYLINDER BOUNDARY.
         MVI   DEBUCBAD-DAREA(RTOB),X18  FILE MASK TO INHIBIT HD SW.
*
*      CALCULATE NUMBER OF TRACKS IN EXTENT
*
CALCNT   EQU   *
RCVTA    EQU   8                  SECOND CVT BASE REGISTER.
RTTCT    EQU   10                 COUNT OF TT REGISTER.
RTTCTA   EQU   0                  COUNT OF TT REG A.
         L     RCVTA,CVTPTR
         USING CVT,RCVTA
         L     RBR,CVTPRLTV       CONVERT ROUTINE ADDRESS.
         LA    RDEBP,DEB          REGISTER 1 = DEB ADDRESS.
         LA    RRES,COUNT         RRES = ADDRESS OF RESULTS.
         STM   R11,R15,REGS2      SAVE REGS.
         LR    RGAREA2,RGAREA     SAVE AREA ADDR.
         DROP  RGAREA
         USING AREADCB,RGAREA2                                 @YL026UD
         XC    COUNT+1(7),COUNT+1 CLEAR MBBCCHH0 FIELD FOR CNV @OZ17531
         MVC   COUNT+3(L'DEBSTRCC+L'DEBSTRHH),DEBSTRCC-DAREA(RTOB)
*                                 MOVE START CCHH TO DEB.
         BALR  RGRET,RBR          CONVERT TO START TT.
         ST    RTTCTA,REGSAVE     SAVE START TT.
         CL    RTTCTA,X10000      ARE WE ON TRACK 0            @Z40CSRC
         BL    ISFIRST            YES, LEAVE TTRN 0            @Z40CSRC
         ST    RTTCTA,EXTDTT      SAVE TTRN OF START OF LAST   @Z40CSRC
*                                 EXTENT                       @Z40CSRC
ISFIRST  EQU   *                  BEYOND TTR STORING           @Z40CSRC
         L     RBR,REGS6          RESTORE ROUTINE ADDR.
         MVC   COUNT+3(L'DEBENDCC+L'DEBENDHH),DEBENDCC-DAREA(RTOB)
*                                 MOVE END CCHH TO DEB.
         BALR  RGRET,RBR          CONVERT TO END TT.
         LM    R10,R15,REGSAVE    LOAD START TT AND RESTORE REGS.
         SR    RTTCT,RTTCTA       START TT - END TT = -(NT-1)
         SRL   RTTCT,16           GET -(NT-1) AS HALF WORD.
         BCTR  RTTCT,RTTCTA       -(NT-1)-1=-NT
         LCR   RTTCT,RTTCT        NT= NUMBER OF TKS IN EXTENT.
         STH   RTTCT,DEBNMTRK-DAREA(RTOB)      PUT IN EXTENT.
         SR    R10,R10            CLEAR WORK REG               @OZ17531
         IC    R10,COUNT          GET M BYTE                   @OZ17531
         LA    R10,ONE(R10)       BUMP IT FOR NEXT EXTENT      @OZ17531
         STC   R10,COUNT          STORE IT BACK                @OZ17531
         DROP  RCVTA
         USING AREADCB,RGAREA                                  @YL026UD
         BCT   REXT,BLDXTLP       BRANCH IF ANOTHER EXTENT.
*                                                              @Y30LSRA
*  FOR VIRTUAL DASD BELONGING TO THE MSS  SUBSYSTEM, THIS      @Y30LSRA
* ROUTINE ACQUIRES SPACE FOR THE CVOL.                         @Y30LSRA
*                                                              @Y30LSRA
         L     RDEBP,DEBDEBAD+D4  WAS PARM LIST BUILT          @Y30LSRA
         LTR   RDEBP,RDEBP        IF SO PROCESS IT             @Y30LSRA
         BZ    RNVIRT6            IF NOT, CONTINUE AS NORMAL   @Y30LSRA
         XC    DEBDEBAD+D4(L8),DEBDEBAD+D4 ZERO TEMP SAVE AREA @Y30LSRA
         MVC   D7(L1,RDEBP),DEBNMEXT GET NUMBER OF EXTENTS     @Y30LSRA
         MVI   D3(RDEBP),L96      MOVE IN HEADER LENGTH        @Y30LSRA
         MVI   D4(RDEBP),ACQOP    INDICATE TYPE=ACQUIRE        @OZ25613
         ICBACREL TYPE=ACQ,MF=(E,(1))                          @Y30LSRA
         LTR   RBR,RBR            ANY ERRORS                   @Y30LSRA
         BZ    RNVIRT4            NO DARN IT.  IT GOES SO WELL.@Y30LSRA
RVIRT1   EQU   *                  PROBLEM DETERMINATION        @Y30LSRA
         USING  UCB,RUCB          ESTABLISH ADDRESSABILITY     @Y30LSRA
         STH   R0,D0(RDEBP)       SAVE RETURN CODE             @Y30LSRA
         L     R10,BLDLP          SAVE BLDL WORKAREA ADDRESS   @OZ26358
         MVC   MESSAGEA(MSSMLEN),MSSMSG SET UP MSG             @Y30LSRA
         L     R15,CVTPTR         GET CVT ADDR                 @Y30LSRA
         L     R15,D0(,R15)       GET ADDR OF TCB WORDS        @Y30LSRA
         L     R15,D4(,R15)       GET CURRENT TCB PTR          @Y30LSRA
         L     R15,D12(,R15)      GET TIOT PTR                 @Y30LSRA
         MVC   MESSAGEA+D12(L8),D0(R15) GET JOBNAME            @Y30LSRA
         MVC   MESSAGEA+D21(L6),D8(RDEBP) INSERT VOLSER        @Y30LSRA
RVIRT6   SR    R15,R15            ZERO REGISTER                @Y30LSRA
         LH    R15,D26(,RDEBP)    GET REASON CODE              @Y30LSRA
         LTR   R15,R15            TEST FOR NON ZERO            @Y30LSRA
         BNZ   RVIRT7             YES -USE IT IN NSG           @Y30LSRA
         L     RDEBP,D92(RDEBP)   GET NEXT LIST PTR            @Y30LSRA
         LTR   RDEBP,RDEBP        TEST FOR ZERO                @Y30LSRA
         BZ    RVIRT7             YES-- USE CODE IN LIST       @Y30LSRA
         LR    RDEBP,R0           SET NEWLIST PTR              @Y30LSRA
         B     RVIRT6             EXAMINE REASON CODE          @Y30LSRA
RVIRT7   EQU   *                                               @Y30LSRA
         STH   R15,D0(,RDEBP)     SAVE REASON CODE             @Y30LSRA
RVIRT8   EQU   *                                               @Y30LSRA
         SLL   R15,D4             SHIFT 4 BITS                 @Y30LSRA
         STH   R15,D0(RDEBP)      RESET REASON CODE            @Y30LSRA
         UNPK  MESSAGEA+D60(L3),D0(L2,RDEBP) UNPACK REASON CDE @Y30LSRA
         OI    MESSAGEA+D62,DECZERO INSURE VALID DIGIT         @Y30LSRA
         TR    MESSAGEA+D60(L3),ABTABLE MAKE PRINTABLE         @Y30LSRA
         LA    R1,MESSAGEA        GET ADDR OF LST IN R1        @Y30LSRA
         WTO   MF=(E,(1))         ISSUE WTO,WTP                @Y30LSRA
         ST    R10,BLDLP          RESTORE BLDL WORKAREA ADDR   @OZ26358
         B     ERROR4             EXIT                         @Y30LSRA
RNVIRT4  EQU   *                                               @Y30LSRA
         LA    R0,L96             GET SIZE OF AREA             @Y30LSRA
         FREEMAIN R,LV=L96,A=(1),SP=230 RELEASE                @Y30LSRA
RNVIRT6  EQU   *                                               @Y30LSRA
*
*      SETUP NUMBYTES FIELD IN OPEN WORKAREA FOR FUTURE FREEMAIN
*
RNMA     EQU   1                  WORK REGISTER
RNMB     EQU   2                  NUMBER OF BYTES.
RNMT     EQU   0                  NUMBER OF TRACKS
         L     RNMB,SPBYTES       GET # OF BYTES IN WORKAREA   @OZ15077
         ST    RNMB,NUMBYTES      TO BE FREED LATER.
RBT      EQU   2                  BLOCKS PER TRACK REGISTER.
         SR    RBT,RBT
         IC    RBT,FMTSW          GET COUNT OF BLOCKS/TRACK.
         LH    RTTRP,EXTDTT       LOAD FORMATTING START TT.
         SLL   RTTRP,16           SET THE TTRN.
         EJECT
*
* THIS CODE HANDLES THE INTERFACE WITH THE FORMAT ROUTINE.
*
RFSW     EQU   2                  FORMAT SWITCH REGISTER.
RRP      EQU   1                  RETURN REGISTER POINTER.
         LTR   RFSW,RFSW          TEST FORMAT SW.
         BC    7,FORMAT           BRANCH TO FORMAT.
         L     RRP,DEBDCBAD       LOAD THE DCB ADDRESS.
*
RRC      EQU   15                 RETURN CODE REGISTER.
         SR    RRC,RRC            SET ZERO RETURN CODE.
*
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS
         LM    R3,R14,0(R2)       RESTORE REGISTERS
         BR    R14                RETURN TO CALLER
*
*      SET UP FORMAT ROUTINE WORKAREA                          @YL026UD
*
FORMAT   EQU   *
RTTRP    EQU   6                  TTRN PARM REGISTER.
         LA    R0,FMWAL           SET SP=0, LEN=512.
         LR    R3,R0              SAVE BYTE COUNT FOR CLF2.
         GETMAIN R,LV=(0)
         L     R7,BLDLP             OBTAIN BLDLAREA ADDRESS    @ZA06686
         USING BLDLAREA,R7                                     @ZA06686
         ST    R1,SVFMTWAP          SAVE WKA PTR FOR ESTAE     @ZA06686
         DROP  R7                                              @ZA06686
         LR    R7,R1              SAVE WORK AREA ADDR.         @YL026UD
         L     R1,DEBDCBAD        LOAD THE DCB ADDRESS.
         SR    RFKEY,RFKEY        SET CATALOG CALL INDICATOR.
*
         B     IGG0CLF2           GO TO FORMAT MODULE          @YL026UD
         EJECT
*
* THE FOLLOWING CODE HANDLES THE EXTENDING OF CATALOGS.
*
* INITIAL ENTRY FOR THE EXTEND FUNCTION IS AT THE LABEL 'EXTEND'.
* CHECK FIRST TO SEE IF THE REQUEST IS FOR A NEW EXTENT OR STEP TO
* THE NEXT EXTENT.
*
EXTEND   EQU   *
         DROP  RGAREA
*                                                              @YL026UD
         LR    R15,R0             OBTAIN DCB ADDRESS           @YL026UD
         USING AREADCB,R15        SET DCB/DEB ADDRESSIBILITY   @YL026UD
         L     R15,BLDLP          OBTAIN 'BLDLAREA' ADDRESS    @YL026UD
         DROP  R15                                             @YL026UD
         STM   R3,R14,0(R15)      SAVE REGISTERS               @YL026UD
         ST    R2,4(R15)          SAVE CALLER'S BASE REG       @YL026UD
*                                                              @YL026UD
         L     RCVT,CVTPTR        PICK UP THE CVT POINTER      @YL026UD
         LR    RGAREA3,RFKEY      OBTAIN THE INPUT DCB ADDR    @YL026UD
         USING AREADCB,RGAREA3
         L     RCWA,CATWKAP        GET CAT WORK AREA POINTER.
         USING WORKAREA,RCWA
         MVC   OPTNCCW,TIC2        SET TIC TO BYPASS WRITE VERIFY.
         LH    RTTCT,VCLSTBLK      LOAD THE TT OF EXTENT.
         LA    RTTCT,ONE(RTTCT)    STEP TO NEXT RELATIVE TRACK.
         SR    RIOBS,RIOBS         CLEAR AN ARITHMETIC REG.
         IC    RIOBS,IOBSKADD      PICK UP 'M' FROM THE IOB.
         LA    RIOBS,ONE(RIOBS)    STEP M TO M+1.
         STC   RIOBS,IOBSKADD      STORE IT BACK IN THE IOB.
         CLC   DEBNMEXT,IOBSKADD   COMPARE 'M' TO NO. OF EXTENTS.
         BE    EXTENDC             BRANCH FOR NEW EXTENT.
*
* THE REQUEST IS FOR A STEP TO THE NEXT EXISTING EXTENT.
* SATISFY THAT REQUEST HERE.
*
RIOBS    EQU   15                 REGISTERS USED TO SET CAT IOB.
         SLL   RIOBS,FOUR         SHIFT M TO USE AS AN INDEX.
         LA    RIOBS,DEBSTRCC(RIOBS) POINT R3 TO CCHH OF
*                                        NEXT EXTENT.
         MVC   IOBSKADD+3(FOUR),0(RIOBS)   MOVE THE CCHH TO THE IOB
         MVI   IOBSKADD+7,X00     SET R TO ZERO.
         MVI   THETA,X00          SET RPS THETA TO ZERO.
         SR    RRC,RRC            ZERO THE RETURN CODE.
*
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD
         LM    R3,R14,0(R2)       RESTORE REGISTERS            @YL026UD
         BR    R14                RETURN TO CALLER             @YL026UD
         DROP  RCWA
         EJECT
*
* PREPARE TO GET A NEW EXTENT FOR THE USER.
*
EXTENDC  EQU   *
         L     RUCB,DEBUCBAD      GET THE UCB ADDRESS.
         L     RNMT,XTBYTES       GET SUB-POOL AND LENGTH.
         MODESET EXTKEY=DATAMGT   GET INTO DATA MGT KEY        @Z40CSRC
         BAL   RGRET,GETMAINB     BRANCH TO GET MAIN ROUTINE.
         MODESET EXTKEY=ZERO      GET BACK TO KEY ZERO         @Z40CSRC
*
         L     R6,BLDLP           GET BLDL WORKAREA PTR        @YL026UD
         USING BLDLAREA,R6        ESTABLISH ADDRESSIBILITY     @YL026UD
         ST    R1,SVEXTWAP        SAVE WKA PTR (ESTAE)         @YL026UD
         DROP  R6                                              @YL026UD
         L     RCWA,CATWKAP       ADDR OF CATLG WORK AREA      @Z40CSRC
         DROP  RGAREA3                                           YM5169
         USING AREADCB,RGAREA                                    YM5169
         ST    RCWA,CATWKAP       SAVE ADDR OF CATLG WORK AREA @Z40CSRC
         MVI   EXTDSW,X01         INDICATE 1ST PASS OF EXTEND.
         STM   R9,R10,EXTDRGSV    SAVE THE INPUT PARAMETERS.
         B     BLDEB              GO TO GET DSCB FOR EXTEND.
         EJECT
*
* THE FOLLOWING CODE COMPLETES THE BLOCKS FOR THE CALL TO EXTEND
* AND THEN DOES THE XCTL TO THE EXTEND ROUTINE.
*
EXTENDA  EQU   *
         LM    R9,R10,EXTDRGSV    RESTORE REGS 9 & 10.
         OC    DS1SCALO+1(L'DS1SCALO-1),DS1SCALO+1  SEC ALLOC ZERO
         BC    8,EXTENDAA         BRANCH IF NO SEC ALLOCATION.
         MVC   NUMBYTES,DS1SCALO  SAVE SEC ALLOCATION REQUEST.
*
*      CONSTRUCT DUMMY JFCB
*
         MVC   JFCBDSNM,DSCBK     D.S. NAME OF SYSCTLG.
         XC    JFCBELNM(B184),JFCBELNM   ZERO JFCB, ECB AND IOB.
         MVC   JFCBCTRI(L'NUMBYTES),NUMBYTES  SEC ALLOC REQUEST.
         MVI   JFCBDRLH,ONE       AVE REC LENGTH = 1.
         STM   R9,R10,JFCBELNM    SAVE SOME REGISTERS.
*
*      CONSTRUCT THE IOB
*
RIOBR    EQU   0                  REGISTERS USED TO SET THE IOB.
RIOBT    EQU   12                 REGISTERS USED TO SET IOB    @YL026UD
         LM    RIOBR,RCVT,JFCBTSDM    LOAD ZEROS.
         LA    RIOBR,DXECB        ECB ADDRESS.
         LA    RCVT,DXCCW         CHANNEL PROGRAM START ADDRESS.
         STM   RIOBR,RCVT,IOBECBPT    STORE THEM IN THE IOB.   @YL026UD
         LA    RIOBT,DXDCB        DCB ADDRESS.
         ST    RIOBT,IOBECBPT+16  STORE DCB ADDRESS IN IOB.    @YL026UD
*
*      CONSTRUCT THE DEB
*
         MVC   DXDEB(DEBL),DEB    GET FROM ALL READY CONSTRUCTED DEB.
         MVC   DXDEBDCB+1(L'DXDEBDCB-1),IOBDCBPT  NEW DCB POINTER.
*
*      CONSTRUCT THE DCB
*
RXDEB    EQU   0                  DEB ADDRESS MANIPULATING REG.
         LA    RXDEB,DXDEB
         ST    RXDEB,DXDCBDEB     STORE THE DEB POINTER.
*
*      SET UP FOR EXTEND XCTL
*
RXP1     EQU   2                  XCTL PARM REG 1.
RXP3     EQU   5                  XCTL PARM REG 3.
RXP4     EQU   10                 XCTL PARM REG 4.
         LR    RXP1,RGAREA3       SET THE DCB ADDRESS.
         LR    R7,RGAREA          SET THE WORK AREA ADDRESS.   @YL026UD
         DROP  RGAREA
         USING AREADCB,RGAREA3
         LA    RXP3,DEB           SET THE DEB ADDRESS.
         L     RXP4,DEBUCBAD      SET THE UCB ADDRESS.
         DROP  RGAREA3
         LA    RGAREA,TWO         INDICATE SYSCTLG EXTEND.
         LA    RBR,XCTLCONX       EXTEND MODULE NAME ADDRESS.
         XC    FOUR(FOUR,R7),FOUR(R7)  ZERO XCTL DCB ADDRESS   @YL026UD
         MVC   EIGHT(EIGHT,R7),0(RBR)  MODULE NAME             @YL026UD
         LA    RBR,EIGHT(R7)      SET XCTL PTR TO MOD NAME     @YL026UD
         ST    RBR,0(R7)          STORE XCTL POINTER           @YL026UD
         LA    R4,EXTDAREA-AREADCB(,R7) ADDR OF EXTEND WK AREA @Z40CSRC
         SR    R8,R8              WILL SHOW RETURNING FROM     @Z40CSRC
*                                 EXTEND UPON RETURN FROM DADSM
         USING AREADCB,R7         WORK AREA ADDRESSABLE        @Z40CSRC
         L     R6,PSATOLD-PSA     GET ADDR OF TCB              @Z40CSRC
         L     R6,TCBRBP-TCB(,R6) GET ADDR OF SVRB             @Z40CSRC
         MVC   DSVSVRB,RBEXSAVE-RBBASIC(R6) SAVE RBEXSAVE      @Z40CSRC
         MODESET EXTKEY=DATAMGT   GO TO DADSM IN KEY 5         @Z40CSRC
         XCTL  MF=(E,(1)),SF=(E,(R7))                          @YL026UD
         DROP  R7                 ADDRESSABILITY ENDS          @Z40CSRC
         EJECT                                                 @YL026UD
*
* THIS CODE HANDLES THE CASE WHERE EXTEND WAS REQUESTED BUT NO
* SECONDARY SPACE HAS BEEN ALLOCATED.
*
* FREE THE EXTEND WORK AREA
*
EXTENDAA EQU   *
         L     RNMT,XTBYTES       EXTEND WORK AREA LENGTH.
         LA    RNMA,0(RGAREA)     LOAD WORK AREA ADDRESS.
         USING AREADCB,RGAREA3    SET DCB/DEB ADDRESSIBILITY   @YL026UD
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD
         XC    SVEXTWAP(4),SVEXTWAP    RESET WKA PTR (ESTAE)   @YL026UD
         MODESET EXTKEY=DATAMGT   GET INTO KEY 5               @Z40CSRC
         SVC   FREEMAIN           FREE THE EXTEND WORK AREA CORE.
         MODESET EXTKEY=ZERO      GET BACK TO KEY 0            @Z40CSRC
*
ERROR8   EQU   *                  TO EXIT WITH RETURN CODE 8   @Z40CSRC
         LR    RRP,RGAREA3        SET DCB AREA ADDRESS FOR RETURN.
         LA    RRC,EIGHT          SET NO EXTENT RETURN CODE.
*
         DROP  RGAREA3
         DROP  R2                                              @YL026UD
         LM    R3,R14,0(R2)       RESTORE REGISTERS
         BR    R14                RETURN TO CALLER
         EJECT
*
* THIS CODE HANDLES THE ENTRY FROM THE EXTEND MODULES AFTER THEY
* HAVE COMPLETED THEIR WORK.
*
* FREE EXTEND WORK AREA CORE
*
EXTENDB  EQU   *
         MODESET EXTKEY=ZERO      GET INTO KEY ZERO            @Z40CSRC
         MVC   RBEXSAVE-RBBASIC(L'SVRBEXT,R6),DSVSVRB-AREADCB(R7)      -
                                  REFRESH SVRB E.S.A           @Z40CSRC
         L     RCVT,CVTPTR        PICK UP THE CVT POINTER      @YL026UD
         LR    RUCB,R10           RESTORE UCB ADDRESS          @Z40CSRC
         L     RNMT,XTBYTES       EXTEND WORK AREA LENGTH.
         LA    RNMA,0(,R7)        EXTEND WORK AREA ADDRESS.    @Z40CSRC
         USING AREADCB,RGAREA3    SET DCB/DEB ADDRESSIBILITY   @YL026UD
         L     R2,BLDLP           GET BLDL WORKAREA ADDRESS    @YL026UD
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD
         XC    SVEXTWAP(4),SVEXTWAP    RESET WKA PTR (ESTAE)   @YL026UD
         MODESET EXTKEY=DATAMGT   GET INTO KEY 5 FOR FREEMAIN  @Z40CSRC
         SVC   FREEMAIN           FREE THE EXTEND CORE.
         MODESET EXTKEY=ZERO      GET BACK INTO KEY 0          @Z40CSRC
*                                                              @Z40CSRC
*      CHECK FOR ERRORS FROM DADSM                             @Z40CSRC
*                                                              @Z40CSRC
         LCR   R13,R13            TEST FOR DADSM ERR (R13 NEG) @Z40CSRC
         BNP   NOEXTERR           BRANCH IF NO ERROR           @Z40CSRC
         LA    R15,ERROR16        LOAD COMPARISON VALUE        @Z40CSRC
         CR    R15,R13            TEST FOR I/O ERR (R13=-16)   @Z40CSRC
         BNE   ERROR8             BRANCH IF NO I/O ERROR       @Z40CSRC
         LR    RGAREA,RGAREA3     GET ADDR OF DCB AREA         @Z40CSRC
         B     IOERR              GO TO I/O ERROR ROUTINE      @Z40CSRC
NOEXTERR EQU   *                  NO EXTEND ERROR              @Z40CSRC
*
*      FREE OLD SYSCTLG DEB/DCB
*
         USING AREADCB,RGAREA3
         L     RCWA,CATWKAP       SAVE CAT WORK AREA POINTER.
         L     RNMT,NUMBYTES      GET NUMBER OF BYTES.
         LA    RNMA,X00(,RGAREA3) ADDRESS OF AREA TO FREE      @Z40CSRC
         XC    SVOPNWAP(4),SVOPNWAP    RESET WKA PTR (ESTAE)   @YL026UD
         SVC   FREEMAIN           FREE THE OLD DCB AREA.
         DROP  RGAREA3
*
*      GET NEW SYSCTLG DEB/DCB CORE
*
         BAL   RGRET,GETMAIN      BRANCH TO GET MAIN ROUTINE.
         ST    R1,SVOPNWAP        SAVE WKA PTR (ESTAE)         @YL026UD
         USING AREADCB,RGAREA                                  @YL026UD
         ST    RCWA,CATWKAP       STORE THE CAT WORK AREA PTR.
         ST    R2,BLDLP           STORE THE BLDL WORK AREA PTR @YL026UD
         MVI   EXTDSW,TWO         INDICATE SECOND PASS.
         B     BLDEB              GO TO BUILD NEW DEB.
         DROP  R2                                              @YL026UD
         EJECT
*
* THE FOLLOWING ARE SUB-ROUTINES USED BY THE OPEN MODULE.
*
GETMAIN  EQU   *
         L     RNMT,SPBYTES       NO OF BYTES FOR SYSCTLG DEB/DCB.
GETMAINB EQU   *
         GETMAIN R,LV=(0)
         LR    RGAREA,RPARM       SET GOTTEN AREA ADDRESS IN BASE.
         BR    RGRET              RETURN TO THE CALLER.
         SPACE
*
* EXCP, WAIT AND IO ERROR CHECKING ROUTINE.
*
IO3      EQU   *
         EXCP  AIOB
         WAIT  1,ECB=AECB
         CLI   AECB,X7F           TEST ECB CONDITION.
         BCR   8,RGRET            BRANCH NO ERROR.
RRCA     EQU   7                  TEMP RETURN CODE REGISTER.   @YL026UD
*                                                              @Z40CSRC
IOERR    EQU   *                  I/O ERROR EXIT ROUTINE       @Z40CSRC
         LA    RRCA,TWELVE        SET IO ERROR CONDITION CODE.
         SPACE
*
* RETURN TO THE CALLER IF AN ERROR HAS OCCURRED.
*
RETURN   EQU   *
         L     RCWA,CATWKAP       SAVE THE CATALOG WORK AREA ADDR.
         L     RNMT,SPBYTES       LOAD WORK AREA LENGTH.
         LA    RNMA,0(RGAREA)     GET DCB AREA ADDRESS.
         L     R2,BLDLP           GET BLDL WORKAREA ADDRESS    @YL026UD
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD
         XC    SVOPNWAP(4),SVOPNWAP     RESET WKA PTR (ESTAE)  @YL026UD
         SVC   FREEMAIN           FREE DCB AREA CORE.
*
* THIS CODE IS TO SET DCB/DEB AREA CORE RELEASED FLAG.
*
         SPACE
         USING WORKAREA,RCWA
         OI    FLAG1,FREEDCB      TURN ON CORE FREED FLAG.
         DROP  RCWA
*
         LR    RRC,RRCA           SET CONDITION CODE.
         LM    R3,R14,0(R2)       RESTORE REGISTERS
         BR    R14                RETURN TO CALLER
         DROP  R2                                              @YL026UD
         SPACE
ERROR4   EQU   *
         LA    RRCA,FOUR          SET ERROR CODE IN R2.
         B     RETURN             GO TO RETURN TO CALLER.
*
         TITLE 'IGG0CLCF - (IGG0CLF2) SYSCTLG FORMATTER'       @YL026UD
***********************************************************************
*                                                                     *
*     IGG0CLF2 - SYSCTLG FORMATTER                                    *
*                                                              @Z40CSRC
*       INPUT =                                                @Z40CSRC
*       .  R0 CONTAINS ZERO                                    @YL026UD
*       .  R1 CONTAINS DCB OF DATA SET TO BE FORMATTED         @YL026UD
*       .  R2 CONTAINS NUMBER OF BLOCKS PER TRACK FOR DEVICE   @YL026UD
*          WHICH CONTAINS THE DATA SET                         @YL026UD
*       .  R3 CONTAINS COUNT OF BYTES IN WORKAREA PASSED TO    @YL026UD
*          THIS ROUTINE                                        @YL026UD
*       .  R5 CONTAINS DATA MANAGEMENT COUNT DECREMENT VALUE   @YL026UD
*       .  R6 CONTAINS STARTING RELATIVE (TTR) BEGIN ADDRESS   @YL026UD
*       .  R7 CONTAINS ADDRESS OF A WORKAREA                   @YL026UD
*                                                                     *
***********************************************************************
*
IGG0CLF2 EQU   *                                               @YL026UD
*
IEINIT   EQU   *
         LR    RGAREA,R7               AREA ADR FROM PREV PHASE
         USING WKAREA,RGAREA           SET WORK AREA ADDRESSABILITY.
         STM   R0,R6,FSVAREA           SAVE INPUT PARAS
         ST    R7,SVADDR               SAVE WORKAREA ADDRESS   @YL026UD
         LR    RGTTR,R6                SAVE TTR0 START
         LR    RGDQTY,R0               SAVE FUNCTION CODE
*
* BUILD AND RELOCATE ECB AND IOB
*
         SR    R0,R0                   ZERO ECB
         LA    R2,FECB                 ECB PTR IN IOB
         LA    R5,CHPGA                CHAN PROG PTR
         L     R6,SVDCB                DCB PTR
         SR    R8,R8                   ZERO BLOCK INCR FIELD
         STM   R0,R8,FECB              ECB AND IOB
         MVI   FIOB,TWO                SET UNRELATED BIT
         LTR   RGDQTY,RGDQTY           CHECK FUNCTION
         B     CTLGFMT                 BRANCH FOR CATALOG FORMAT
*                                                              @YL026UD
*      CODE TO FORMAT A BPAM DATA SET HAS BEEN REMOVED         @YL026UD
*      FROM THIS VS2 RELEASE 2 CODE                            @YL026UD
         EJECT
*
* THIS SECTION OF CODE FORMATS FOR THE CATALOG DATA SET.
*
         SPACE
CTLOOP1  L     RGA,SVBLPTK             NO. BLKS PER TRK
CTLOOP2  BAL   RGRET,RELOC             SET UP CHAN PROG
         BAL   RGRET,IO                WRITE COMPLETE OR PARTIAL TRK
         MVC   MBBCCHHR+7(ONE),HICOUNT+4 SET R INCASE TRK NOT COMPLETE
         LTR   RGA,RGA                 SEE IF TRK COMPLETE
         BP    CTLOOP2                 NO, WRITE REST OF TRK
         A     RGTTR,X10000            GO TO NEXT TRK
CTLGFMT  BAL   RGRET,CNVT              CONVERT TTR
         LTR   R15,R15                 TEST RETURN CODE
         BZ    CTLOOP1                 BRANCH IF NOT AT END OF EXTENT
         S     RGTTR,X10000            GO BACK TO LAST TRACK
         ST    RGTTR,HICOUNT           LAST TTR IN CTLG
         OC    SVTT(FOUR),SVTT         TEST TTR0 START
         BC    7,EXTNDA                BR IF FORMATTED AN EXTENDED AREA
         LA    RGTTR,X100              SET TTR TO INDEX DIR
         BAL   RGRET,CNVT              GO TO CONVERT TTR.
         LA    RGA,ONE                 SET TO WR ONE BLK
         BAL   RGRET,RELOC             SET UP CHAN PRG
*
* FILL IN DIRECTORY CONTROL BLOCK
*
         MVC   COUNT2(TEN),HIKEY       KEY AND BYTE COUNT
         XC    CTDIR(B22),CTDIR        ZERO DIR CTL BLK AREA
         MVI   CTLBK,ONE               LOWEST NAME G.T. ZERO
         LA    RGA,X105                TTRC
         STH   RGA,CTTTRC              STORE TTRC.
         MVC   CTHITT(TWO),HICOUNT     LAST TT IN CTLG
         MVC   CTHIR(ONE),SVBLPTK+3    HIGH R ON LAST TRACK
         MVI   CTNABTR,TWO             TTR OF NXT AVAIL BLK
         MVC   CTHIENT(EIGHT),HIKEY    HIGH ENTRY
*
* ALTER CHANNEL PROGRAM
*
         MVI   CHPGA3,X0D              WRITE KD
         MVI   CHPGA3+7,B40            COUNT
         MVI   CHPGB3,X0E              READ KD
         MVI   CHPGB3+7,EIGHT          CHANGE COUNT TO 264
*
* WRITE DIRECTORY CONTROL BLOCK
*
         BAL   RGRET,IO                GO EXECUTE EXCP AND WAIT.
*
* SET UP DEB AND CHANNEL PROGRAM TO READ SYSCTLG DSCB--
*
         L     RGH,SVDCB               GET DCB ADDRESS
         USING AREADCB,RGH
         MVC   D1SDSNAM(EIGHT),SYSCTLG  SET UP DSNAME FOR SEARCH KEY
         MVC   D1SDSNAM+8(B36),D1SDSNAM+7  PAD WITH BLANKS     @YL026UD
         MVC   EXTSAVE,DEBSTRCC        SAVE 1ST EXTENT OF DEB
         MVC   DEBSTRCC(FOUR),DSCBTRK  MODIFY DEB TO READ AND  @YL026UD
         MVC   DEBENDCC(FOUR),DSCBTRK  WRITE SYSCTLG DSCB      @YL026UD
         MVC   MBBCCHHR+3(FOUR),DSCBTRK   SET SEEK ADDRESS
         LM    R0,R3,READVTOC          RELOCATE CHANNEL PROG   @YL026UD
         AR    R0,RGAREA               MODIFY CCW ADDRESSES
         AR    R2,RGAREA               MODIFY CCW ADDRESSES.
         STM   R0,R3,CHPGA             STORE CHANNEL PROGRAM   @YL026UD
         LM    R0,R1,READVTOC+16       RELOCATE CHANNEL PROG   @YL026UD
         AR    R0,RGAREA               MODIFY CCW ADDRESSES.   @YL026UD
         STM   R0,R1,CHPGA3            STORE CHAN PROG         @YL026UD
         BAL   RGRET,IO                READ SYSCTLG DSCB
*
* TURN ON ALREADY FORMATTED INDICATOR AND REWRITE SYSCTLG DSCB--
*
         MVI   D1SLSTAR+2,XFF          SET 'FORMATTED' SW IN DSCB
         LM    R0,R3,WRVTOC            RELOCATE CHANNEL PROG   @YL026UD
         AR    R0,RGAREA               ADD BASE TO OFFSET
         AR    R2,RGAREA               ADD BASE TO OFFSET.
         STM   R0,R3,CHPGA3            STORE CCWS.             @YL026UD
         LM    R0,R3,WRVTOC+16         RELOCATE CHANNEL PROG   @YL026UD
         AR    R0,RGAREA               ADD BASE TO OFFSET.     @YL026UD
         STM   R0,R3,CHPGA5            STORE CCWS.             @YL026UD
         BAL   RGRET,IO                WRITE UPDATED DSCB
         MVC   DEBSTRCC(EIGHT),EXTSAVE  RESTORE 1ST EXTENT OF DEB
         EJECT
OK       SR    R10,R10                 SET ZERO ERROR CODE       YM6411
*
* FREE RPS CORE AND UNLOAD IGG019EK.
*
RETURN2  EQU   *
         L     RGH,SVDCB               GET DCB.
         L     R1,DEBAD(RGH)           GET DEB PTR.
         L     R3,DEBAPDS(R1)          GET APPENDAGE TABLE.    @YL026UD
         L     R12,FOUR(R3)            GET SIO APPENDAGE.      @YL026UD
         L     RGH,SVDCB          GET THE DCB ADDRESS          @YL026UD
         USING AREADCB,RGH        ESTABLISH ADDRESSIBILITY     @YL026UD
         L     R2,BLDLP           OBTAIN 'BLDLAREA' ADDRESS    @YL026UD
         USING BLDLAREA,R2        ESTABLISH ADDRESSIBILITY     @YL026UD
         CLC   RPSIDLOC(L'RPSID,R12),RPSID  IS THIS THE RPS APPENDAGE?
         BNE   CONTINUE                NO, NO RPSWA EXISTS
         MVC   DEBAPDS(FOUR,R1),AVTSV(R3)  RESTORE DEB AVT POINTER
         LA    R0,WASZ                 GET RPS WORK AREA SIZE
         XC    SVRPSWAP(4),SVRPSWAP     RESET WKA PTR (ESTAE)  @YL026UD
         FREEMAIN R,LV=(0),A=(3)       FREE RPS WORK AREA
         DELETE EP=IGG019EK
CONTINUE EQU   *
*
* FREEMAIN AND EXIT
*
         LM    R14,R1,SVDCB            DCB, NO. BYTES, AND AREA ADR
         XC    SVFMTWAP(4),SVFMTWAP     RESET WKA PTR (ESTAE)  @ZA06686
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R10                 SET ERROR CODE            YM6411
         LR    R0,RGTTR                HIGHEST TT
         LR    R1,R14                  RETURN DCB ADR
*
         DROP  R2                                              @YL026UD
         DROP  RGH
         LM    R3,R14,0(R2)       RESTORE REGISTERS            @YL026UD
         BR    R14                RETURN TO CALLER             @YL026UD
         EJECT
*
* SET UP EXTENT FOR THE CATALOG ROUTINES IF FORMATTING NEW EXTENT.
*
         SPACE
EXTNDA   EQU   *
RCWAA    EQU   8                       CAT WORK AREA BASE.
         L     RGH,SVDCB               GET THE DCB ADDRESS.
         USING AREADCB,RGH
         L     RCWAA,CATWKAP           LOAD CATALOG WORK AREA ADDRESS.
         USING WORKAREA,RCWAA
         MVC   VCLSTBLK(TWO),HICOUNT   SET LAST BLOCK TT IN VICE.
         ST    RGH,IOBDCB              STORE THE DCB PTR IN THE IOB.
         LA    RGA,DEB                 GET THE DEB ADDRESS.
         ST    RGA,DEBADDR             STORE IN CATALOG WORK AREA.
         MVI   THETA,X00               ZERO THE THETA VALUE FOR RPS.
         SR    RGA,RGA
         IC    RGA,IOBSKADD            GET M FROM THE IOB.
         SLL   RGA,FOUR                SHIFT M TO USE AS EXT INDEX.
         LA    RGA,DEBSTRCC(RGA)       PT. RGA TO CCHH OF NEW EXTENT.
         MVC   IOBSKADD+3(FOUR),0(RGA)  MOVE CCHH TO THE IOB.
         MVI   IOBSKADD+7,X00          SET R TO ZERO.
*                                                               SA50973
*      AT THIS POINT THE NEW EXTENT HAS BEEN OBTAINED AND       SA50973
*      FORMATTED WITH ALL THE NECESSARY INFORMATION BEING       SA50973
*      UPDATED IN THE CATALOG MANAGEMENT WORKAREA.  THE DATA    SA50973
*      SET, HOWEVER, HAS NOT BEEN UPDATED TO REFLECT THE NEW    SA50973
*      EXTENT.                                                  SA50973
*                                                               SA50973
*      TO INSURE THAT THE 'VICE' REMAINS CURRENT,               SA50973
*      1.  READ THE FIRST BLOCK OF THE SYSCTLG                  SA50973
*      2.  UPDATE 'VCLSTBLK' IN THE 'VICE'                      SA50973
*      3.  REWRITE THE BLOCK WITH THE UPDATED 'VICE'            SA50973
*                                                               SA50973
         LA    RGTTR,X100              TTR OF FIRST BLOCK       SA50973
         BAL   RGRET,CNVT              CONVERT TO MBBCCHHR      SA50973
*                                                               SA50973
*      SET UP THE CHANNEL PROGRAM AREA                          SA50973
*                                                               SA50973
         LM    RGE,RGF,CCWSID          GET SID CCW             @YL026UD
         AR    RGE,RGAREA              RELOCATE SID            @YL026UD
         STM   RGE,RGF,CHPGA           SID                     @YL026UD
         LM    RGE,RGF,CCWSID+8        GET TIC CCW             @YL026UD
         LA    RGG,CHPGA               DEVELOP TIC ADDR        @YL026UD
         AR    RGE,RGG                 RELOCATE TIC             SA50973
         STM   RGE,RGF,CHPGA2          TIC                     @YL026UD
*                                                               SA50973
         LM    RGE,RGF,CCWRD           GET RD CCW              @YL026UD
         AR    RGE,RGAREA              RELOCATE RD             @YL026UD
         STM   RGE,RGF,CHPGA3          RD                      @YL026UD
*                                                               SA50973
         STM   RGE,RGF,CHPGA4          RD                       SA50973
*                                                               SA50973
         BAL   RGRET,IO                ***READ VICE BLOCK***    SA50973
*                                                               SA50973
         MVC   UPLSTBLK(L'UPLSTBLK),HICOUNT UPDATE 'VCLSTBLK'   SA50973
*                                                               SA50973
         MVI   CHPGA3,CCWWDOP          CHANGE TO WD             SA50973
         MVI   CHPGA3+4,CCWOPTN2       COMMAND CHAIN            SA50973
         MVI   CHPGA4+4,CCWOPTN1       NO TRANSFER              SA50973
         BAL   RGRET,IO                ***WRITE VICE BLOCK***   SA50973
*                                                               SA50973
         B     OK                      GO TO SET RETURN         SA50973
         EJECT                                                  SA50973
*
* CONVERT TTR IN RGTTR TO MBBCCHHR
*
CNVT     LR    R0,RGTTR
         L     R1,SVDCB                DCB ADR
         L     R1,DEBAD(R1)            DEB ADR
         LA    R2,MBBCCHHR
         LR    R3,RGAREA               SAVE AREA ADR
         STM   R9,R14,COUNT2           SAVE VOLATILE REGS
         USING CVT,R15
         L     R15,CVTPTR              GET ADR OF CVT
         L     R15,CVTPCNVT            GET ADR OF CONVERT ROUTINE
         DROP  R15
         BALR  R14,R15                 GO TO CONVERT ROUTINE.
         LM    R9,R14,COUNT2-WKAREA(R3)  RESTORE REGS
         BR    RGRET                   RETURN TO CALLING CODE.
         EJECT
*
* BUILD CHANNEL PROGRAM OF 1 THRU 15 WRITE CCW'S FOLLOWED BY AN EQUAL
*        NUMBER OF WRITE CHECK CCW'S.
* ENTER NUMBER OF CCW'S TO BE WRITTEN ON GIVEN TRACK IN RGA.
* MBBCCHHR INDICATES PROPER TRACK AND ONE LESS THAN R OF FIRST RECORD
* UPON RETURN, RGA CONTAINS EXCESS OF ORIGINAL VALUE OVER 15, AND
*        RGG POINTS TO LAST WRITE CCW
*
RELOC    LR    RGB,RGA                 NUMBER OF CCW'S
         LA    RGE,B15                 MAXIMUM NO.  OF CCW'S   @YL026UD
         SR    RGA,RGE                                         @YL026UD
         BC    12,LTMAX                BRANCH IF LESS THAN MAX VALUE
         LA    RGB,B15                 SET TO MAX
LTMAX    LM    RGE,RGF,CCWSID          RELOCATE SID CCW        @YL026UD
         AR    RGE,RGAREA                                      @YL026UD
         STM   RGE,RGF,CHPGA           STORE SID CCW           @YL026UD
         STM   RGE,RGF,CHPGB           STORE SID CCW           @YL026UD
         LM    RGE,RGF,CCWSID+8        RELOCATE TIC CCW        @YL026UD
         LA    RGG,CHPGA               DEVELOP TIC ADDR        @YL026UD
         AR    RGE,RGG
         STM   RGE,RGF,CHPGA2          STORE TIC               @YL026UD
         LA    RGG,CHPGB-CHPGA         DEVELOP SECOND TIC ADDR @YL026UD
         AR    RGE,RGG
         STM   RGE,RGF,CHPGB2          SECOND SID, TIC         @YL026UD
         LA    RGG,CHPGA2
         LM    RGE,RGF,MBBCCHHR        DEVELOP COUNT FIELD
         SLDL  RGE,B24                 DROP MBB
         A     RGF,X080100             SET KL AND DL
RELOOP1  L     RGD,CCWWR               WR CKD CCW              @YL026UD
         AR    RGD,RGG                 POINT TO COUNT FIELD    @YL026UD
         ST    RGD,EIGHT(RGG)                                  @YL026UD
         L     RGD,CCWWR+4             WR CKD CCW              @YL026UD
         ST    RGD,B12(RGG)                                    @YL026UD
         MVC   CHPGB-SVTT(EIGHT,RGG),CCWRCH  MOVE WR CHECK CCW
         A     RGF,X1000000            INCREMENT R
         STM   RGE,RGF,COUNT2-CHPGA2(RGG) STORE COUNT FIELD
         LA    RGG,EIGHT(RGG)          GO TO NEXT CCW
         BCT   RGB,RELOOP1             BRANCH IF ANOTHER CCW
         NI    CHPGB-CHPGA1+4(RGG),XBF  TURN OFF CMD CHAIN BIT
         LTR   RGA,RGA                 SEE IF ALL CCW'S FILLED
         BCR   10,RGRET                BR IF ALL FILLED
         MVC   EIGHT(EIGHT,RGG),CHPGB2  MOVE TIC
         BR    RGRET                   RETURN TO CALLING CODE.
         EJECT
*
* EXCP, WAIT, AND I/O ERROR CHECK
*
IO       EXCP  FIOB
         WAIT  1,ECB=FECB
         TM    FECB,X20                CHECK I/O ERROR BIT
         BCR   1,RGRET                 Q. NO ERROR
         LA    R10,B12                 SET I/O ERROR CODE        YM6411
         B     RETURN2                 RETURN TO CALLER
         TITLE 'IGG0CLCF - CONSTANT DEFINITIONS'               @YL026UD
*
* CONSTANTS                                                    @YL026UD
*
         USING EREC,R9                                         @YL026UD
         DS    0F
ERCCWR   EQU   *
         DC    X'0E'                   READ KEY AND DATA
         DC    AL3(ERKEY-EREC)         POINT TO BUFFER
         DC    X'2000'                 SLI
         DC    H'12'                   READ 12 BYTES
         DS    0F
ERCCWW   EQU   *
         DC    X'05'                   WRITE DATA
         DC    AL3(0)                  BUFFER PTR SET DURING EXECUTION
TTRVFST  DS    0XL3                    TTR OF THE FIRST BLOCK OF VI
         DC    X'0000'                 ALL FLAGS OFF
         DC    H'256'                  BYTES WRITTEN
*
ONEREC   DC    F'256'                  UP TTR0 BY ONE
MOVE1    MVC   0(0,OUT),0(IN)
MSG      DC    AL2(81),X'8000'                                 @OZ00006
         DC    C'IEC302I SYSCTLG I/O ERROR,VVVVVV,'            @OZ00006
MSGLEN   EQU   *-MSG                   LENGTH OF MSG SKELETON  @OZ00006
DESCRTE  DC    X'10004040'             SYSTEM STATUS,SYSTEM    @OZ00006
*                                      ERROR/MAINTENANCE,      @OZ00006
*                                      MASTER CONSOLE INFOR-   @OZ00006
*                                      MATIONAL                @OZ00006
         DS    0H                                              @OZ00006
MOVENAM2 MVC   OUTPUT+MSGLEN(0),0(R14)   OBJECT OF EXECUTE     @OZ00006
MOVENAME MVC   ERNAME(0),0(R14)
         DROP  R9                                              #YL026UD
*
SYSCTLG  DC    C'SYSCTLG '             DATA SET NAME.
HIKEY    DC    X'FFFFFFFFFFFFFFFF'     HIGHEST POSSIBLE KEY.
         DC    HL2'36'                 COUNT CONSTANT.
         DS    0F                      FILLER.
X10000   DC    X'00010000'             TTR STEP CONSTANT.
X080100  DC    X'00080100'             KEY AND DATA LENGTH CONSTANT.
X1000000 DC    X'01000000'             R INCREMENT VALUE.
RPSID    DC    C'RPSA'                 ID OF RPS SIO APPENDAGE.
*
SPBYTES  DS    0F                 GET SP 253 PARAMETER WORD.
         DC    AL1(253)           SUBPOOL NUMBER.
         DC    AL3(AREAEND1-AREADCB) NUMBER OF BYTES.          @OZ15077
XTBYTES  DC    AL1(230)           SUBPOOL NUMBER               @Z40CSRC
         DC    AL3(DSEXTEND-AREADCB) LEN OF EXTEND WORK AREA   @Z40CSRC
FDEBAD   DS    0F                 ARITHMETIC CONSTANT EQUAL TO
         DC    X'F1'              2'S COMPL OF PROT TAG, DEB ID AND
         DC    AL3(DEBAD)         DEB ADDR DISPLACEMENT.
HICCHHNT DC    X'7FFF7FFF7FFF'    HIGH CCHH COUNT.
FF       EQU   HICCHHNT+1         EQUATES TO A 1 BYTE FF CONSTANT.
ZEROA    DC    H'00'              A ONE BYTE ZERO CONSTANT.
XCTLCONX DC    C'IGG0553A'        EXTEND MODULE NAME.
EXTMAXCC DC    F'2'               MAXIMUM EXTEND RETURN CODE   @YL026UD
ABTABLE  EQU   *-240              TR TABLE                     @Y30LSRA
         DC    C'0123456789ABCDEF'                             @Y30LSRA
MSSMSG   WTO   'IEC366I JOBNAMED,VOLSER MSS FAILURE DURING ACQUIRE CODE*
               =NNN',DESC=4,ROUTCDE=(2,11),MF=L                @Y30LSRA
MSSMLEN   EQU   *-MSSMSG          END OF MESSAGE               @Y30LSRA
*
         TITLE 'IGG0CLCF - CHANNEL COMMAND WORD DEFINITIONS'
*
* PATTERN CHANNEL COMMAND WORDS.
*
CCW1     CCW   X'31',M2B2C2HR+3-AREADCB,X'40',5 SEARCH EQUAL ID@YL026UD
CCW2     CCW   X'08',CHPG-AREADCB,0,1          TIC TO CCW1     @YL026UD
CCW3     CCW   X'06',IECSDSF4-AREADCB,X'60',48 READ VTOC DSCB. @YL026UD
CCW4     CCW   X'D1',DS4HPCHR-AREADCB,X'40',5  SEARCH HI ID.   @YL026UD
CCW5     CCW   X'08',CHPG+48-AREADCB,0,1       TIC TO CCW7.    @YL026UD
CCW6     CCW   X'03',0,0,1                   CONTROL NOP.
CCW7     CCW   X'29',DS1DSNAM-AREADCB,X'60',44 SEARCH KEY EQUAL@YL026UD
CCW8     CCW   X'08',CHPG+24-AREADCB,0,1       TIC TO CCW4.    @YL026UD
CCW9     CCW   X'06',DS1FMTID-AREADCB,X'40',96 RD SYSCTLG DSCB @YL026UD
CCW10    CCW   X'12',COUNT-AREADCB,0,8         READ COUNT.     @YL026UD
CCWRDKD  CCW   X'0E',DSCBK-AREADCB,0,140       READ KEY & DATA @YL026UD
*
CCWSID   CCW   X'31',MBBCCHHR+3-WKAREA,X'40',5 SEARCH ID
         DC    X'0800000000000000'     TIC
CCWWR    CCW   X'1D',COUNT2-CHPGA2,X'60',8 WRITE CKD, SLI
CCWRCH   CCW   X'1E',0,X'50',272       READ CKD, SKIP
READVTOC CCW   X'29',D1SDSNAM-WKAREA,X'60',44 SEARCH KEY EQUAL
         CCW   X'08',CHPGA-WKAREA,0,1    TIC
         CCW   X'06',D1SFMTID-WKAREA,0,96 READ DATA
WRVTOC   CCW   X'05',D1SFMTID-WKAREA,X'40',96 WRITE DATA
         CCW   X'29',D1SDSNAM-WKAREA,X'60',44 SEARCH KEY EQUAL
         CCW   X'08',CHPGA4-WKAREA,0,1 TIC
         CCW   X'06',0,X'10',96        CHECK DATA
CCWRD    CCW   X'06',BLOCK-WKAREA,X'00',256 READ DATA           SA50973
CCWWDOP  EQU   X'05'                   WRITE DATA OP CODE       SA50973
CCWOPTN1 EQU   X'30'                   NO TRANSFER, SILI        SA50973
CCWOPTN2 EQU   X'40'                   COMMAND CHAIN            SA50973
*                                                              @YL026UD
*                                                              @YL026UD
*      MODULE PATCH AREA (MAINTENANCE AREA)                    @YL026UD
*                                                              @YL026UD
FIXAREA  DC    100X'00'                                        @YL026UD
*                                                              @YL026UD
         TITLE 'IGG0CLCF - CONSTANT EQUATE DEFINITIONS'
*
*      CONSTANT EQUATES
*
VICETYP  EQU   5                       VICE TYPE CODE
ICETYP   EQU   3                       ICE TYPE CODE
ILETYP   EQU   0                       ILE TYPE CODE
IPETYP   EQU   0                       IPE TYPE CODE
DSPETYP  EQU   7                       OR MORE, FOR DSPE TYPE CODE
VCBPETYP EQU   1                       VCBPE TYPE CODE
OCVOLTYP EQU   3                       OLD CVOL TYPE CODE
NCVOLTYP EQU   5                       NEW CVOL TYPE CODE
ALIASTYP EQU   4                       ALIAS TYPE CODE
GIPETYP  EQU   2                       GIPE TYPE CODE
ERROR00  EQU   0
ERROR04  EQU   4
ERROR08  EQU   8
ERROR12  EQU   12
ERROR16  EQU   16
ERROR20  EQU   20
ERROR24  EQU   24
ERROR28  EQU   28
ERROR32  EQU   32
ERROR72  EQU   72
***********************************************************************
*      CHARACTER CODE DEPENDENT CONSTANTS
***********************************************************************
CCDBLANK EQU   C' '
CCDRPARN EQU   C')'
CCDMINUS EQU   C'-'
CCDPLUS  EQU   C'+'
CCD0     EQU   C'0'
CCDG     EQU   C'G'
CCDV     EQU   C'V'
CCDPERD  EQU   C'.'
CCDLPARN EQU   C'('
***********************************************************************
*
* MISCELLANEOUS EQUATES USED .
*
ONE      EQU   1                       A ONE CONSTANT.
TWO      EQU   2                       A TWO CONSTANT.
THREE    EQU   3                       A THREE CONSTANT.
FOUR     EQU   4                       A FOUR CONSTANT.
SIX      EQU   6                       A SIX CONSTANT          @Y30LSRA
EIGHT    EQU   8                       AN EIGHT CONSTANT.
TEN      EQU   10                      A TEN CONSTANT.
TWELVE   EQU   12                      A TWELVE CONSTANT.
NINTY    EQU   90                      DSCB MOVE LENGTH.
B12      EQU   12                      BINARY 12
B14      EQU   14                      BINARY 14
B15      EQU   15                      BINARY 15.
B22      EQU   22                      BINARY 22
B24      EQU   24                      BINARY 24
B26      EQU   26                      BINARY 26
B36      EQU   36                      BINARY 36
B40      EQU   40                      BINARY 40 EQUATE.
B100     EQU   100                     BINARY 100
B105     EQU   105                     BINARY 105
B184     EQU   184                     BINARY 184
B253     EQU   253                     SUBPOOL 253 CONSTANT.
RPSIDLOC EQU   62                      OFFSET TO RPS ID          XM2100
X00      EQU   X'00'                   HEX 00
X01      EQU   X'01'                   HEX 01
X0D      EQU   X'0D'                   HEX 0D
X0E      EQU   X'0E'                   HEX 0E
X10      EQU   X'10'                   HEX 10
X12      EQU   X'12'                   HEX 12
X14      EQU   X'14'                   HEX 14
X18      EQU   X'18'                   HEX 18
X20      EQU   X'20'                   HEX 20
X42      EQU   X'42'                   HEX 42
X7F      EQU   X'7F'                   HEX 7F
X81      EQU   X'81'                   HEX 81
XBF      EQU   X'BF'                   HEX BF
XFF      EQU   X'FF'                   HEX FF
X100     EQU   X'100'                  HEX 100
X105     EQU   X'105'                  HEX 105
X0100    EQU   X'0100'                 HEX 0100
DEBAD    EQU   44                      DEB POINTER IN DCB
WASZ     EQU   128                     SIZE OF RPS WORK AREA.
AVTSV    EQU   120                     DISP TO AVT PTR IN RPSWA.
DEBAPDS  EQU   28                      APPNDG. PTR DISP. IN DEB.
FMWAL    EQU   512                     FORMAT WORKAREA LENGTH.
*
CODPERD  EQU   4
CODBLANK EQU   8
CODPARN  EQU   12
CLC1     EQU   C'1'
CLC2     EQU   C'2'
CLC3     EQU   C'3'
CLC4     EQU   C'4'
CLC5     EQU   C'5'
CLC6     EQU   C'6'
CLC7     EQU   C'7'
FREEMAIN EQU   10
*
CC       EQU   X'40'                   COMMAND CHAIN
SLACK    EQU   32                      MAXIMUM NUMBER OF UNUSED BYTES
*                                      ALLOWED IN A CATALOG INDEX BLOCK
SILI     EQU   X'20'                   SUPPRESS INCORRECT LENGTH
*
D0       EQU   0                  DISPLACEMENT OF ZERO         @Y30LSRA
D01      EQU   1
D2       EQU   2                  DISPLACEMENT OF TWO          @Y30LSRA
D3       EQU   3                  DISPLACEMENT OF THREE        @Y30LSRA
D4       EQU   4                  DISPLACEMENT OF FOUR         @Y30LSRA
D6       EQU   6                  DISPLACEMENT OF SIX          @Y30LSRA
D7       EQU   7                  DISPLACEMENT OF SEVEN        @Y30LSRA
D8       EQU   8                  DISPLACEMENT OF EIGHT        @Y30LSRA
D12      EQU   12
D16      EQU   16
D21      EQU   21                 DISPLACEMENT OF 21           @Y30LSRA
D23      EQU   23                 DISPLACEMENT OF 23           @Y30LSRA
D24      EQU   24                 DISPLACEMENT OF 24           @Y30LSRA
D26      EQU   26                 DISPLACEMENT OF 26           @Y30LSRA
D28      EQU   28                 DISPLACEMENT OF TWENTY-EIGHT @Y30LSRA
D51      EQU   51                 DISPLACEMENT OF 51           @Y30LSRA
D60      EQU   60                 DISPLACEMENT OF 60           @Y30LSRA
D62      EQU   62                 DISPLACEMENT OF 62           @Y30LSRA
D92      EQU   92                 DISPLACEMENT OF 92           @Y30LSRA
L1       EQU   1                  LENGTH OF ONE                @Y30LSRA
L2       EQU   2                  LENGTH OF TWO                @Y30LSRA
L3       EQU   3                  LENGTH OF THREE              @Y30LSRA
L6       EQU   6                  LENGTH OF SIX                @Y30LSRA
L8       EQU   8                  LENGTH OF EIGHT              @Y30LSRA
L11      EQU   11                 LENGTH OF ELEVEN             @Y30LSRA
L96      EQU   96                 LENGTH OF NINETY-SIX         @Y30LSRA
L100     EQU   100                LENGTH OF ONE HUNDRED        @Y30LSRA
BLANK    EQU   C' '               BLANK                        @Y30LSRA
DECZERO  EQU   X'F0'              DECIMAL ZERO                 @Y30LSRA
VIRTDASD EQU   X'08'              VIRTUAL DASD                 @Y30LSRA
ACQOP    EQU   X'02'              ICBACREL ACQUIRE OP CODE     @OZ25613
         TITLE 'IGG0CLCF - REGISTER EQUATE DEFINITIONS'
*
* THE FOLLOWING ARE REGISTER EQUATES USED IN THIS PROGRAM.
*
R0       EQU   0                       REGISTER 0
R1       EQU   1                       REGISTER 1
R2       EQU   2                       REGISTER 2
R3       EQU   3                       REGISTER 3
R4       EQU   4                       REGISTER 4
R5       EQU   5                       REGISTER 5
R6       EQU   6                       REGISTER 6
R7       EQU   7                       REGISTER 7
R8       EQU   8                       REGISTER 8
R9       EQU   9                       REGISTER 9
R10      EQU   10                      REGISTER 10
R11      EQU   11                      REGISTER 11
R12      EQU   12                      REGISTER 12
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
RGA      EQU   2                       REGISTER 2
RGB      EQU   3                       REGISTER 3
RGC      EQU   4                       REGISTER 4
RGD      EQU   5                       REGISTER 5
RGE      EQU   6                       REGISTER 6
RGF      EQU   7                       REGISTER 7
RGG      EQU   8                       REGISTER 8
RGH      EQU   9                       REGISTER 9
RGBASE   EQU   4                       BASE REGISTER           @YL026UD
RGDQTY   EQU   10                      DIRECTORY QUANTITY
RGTTR    EQU   11                      RELATIVE TRACK COUNTER
RGAREA   EQU   13                      WORK AREA ADDRESS
RGRET    EQU   14                      RETURN REGISTER
*
BALREG1  EQU   R14
BALREG2  EQU   R12
BASE     EQU   R4
*
BALREG3  EQU   R11
BALREG4  EQU   R3
*
IN       EQU   R9
OUT      EQU   R7
LENGTH   EQU   R5
NEXTTTR  EQU   R10
*
RFKEY    EQU   0                  INPUT FUNCTION REQUEST KEY.
RPARM    EQU   1                  INPUT PARAMETER REGISTER.
RCVT     EQU   3                  CVT BASE REGISTER.
RBASE    EQU   4                  BASE REGISTER.               @YL026UD
RCWA     EQU   6                  CATALOG WORK AREA BASE.
RGAREA2  EQU   8                  SECONDARY DCB BASE REGISTER.
RGAREA3  EQU   9                  TERTIARY DCB BASE REGISTER.
RFKEYA   EQU   10                 POSSIBLE TTR KEY FROM EXTEND.
RUCB     EQU   11                 UCB BASE REGISTER.
RBR      EQU   15                 RETURN CODE REGISTER.
*
         SPACE
*
**********************************************************************
*
* END OF THE IGG0CLCF CSECT.
*
FMTSIZE  EQU   *                       EQUATE TO LAST BYTE OF CSECT.
MAXSIZE  EQU   IGG0CLCF+X'1000'        MAXIMUM ALLOWABLE LENGTH.
AVAILABL EQU   MAXSIZE-FMTSIZE         FREE SPACE REMAINING.
*
**********************************************************************
*
         TITLE 'IGG0CLCF - CATALOG WORKAREA DSECT'
*
*      DSECTS
*
         WORKAREA LIST=NO
         TITLE 'IGG0CLCF - ENVIRONMENT RECORD DSECT'
EREC     DSECT                         ENVIRONMENT RECORD
ERCTR    DS    F                       RESERVED
ERES1    DS    1F                      RESERVED
ERTIME   DS    2F                      TIME AND DATE
ERCAMLST DS    1F                      CAMLST OPTION BYTES
ERMODMAP DS    XL1                     MODULE MAP
ERFLG12  DS    XL2                     FLAG1 AND FLAG2
ERFLAG3  DS    XL1                     FLAG3
ERERRCOD DS    XL2                     CATALOG AND LOCATE ERROR CODES
ERNAMTTR DS    XL14                    CURRENT LEVEL NAME
EREGSAV  DS    15F                     REGS 1 THROUGH 14
ERWA1    DS    XL28                    TTRS IN WORKAREA
         ORG   ERWA1                   OVERLAY 12 BYTES 'ERWA1' SA52063
ERKEY    DS    CL8                     KEY FIELD                SA52063
EROCTR   DS    CL4                     OLD COUNT                SA52063
         ORG
ERINPUT  DS    XL18                    FIRST 18 BYTES OF 'INPUT'
EROUTPUT DS    XL18                    FIRST 18 BYTES OF 'OUTPUT'
EROPTNCC DS    XL8                     'OPTNCCW'--INDICATES LAST I/O
ERIOB    DS    XL40                    IOB
ERNAME   DS    CL44                    FULL GIVEN NAME
ERBUFF   EQU   ERWA1                   READ BUFFER
         TITLE 'IGG0CLCF - FORMAT WORKAREA DSECT'
*
* THIS DSECT DEFINES THE WORK AREA PASSED TO THE FORMAT ROUTINE.
*
         SPACE
WKAREA   DSECT
FSVAREA  DS    0F                      REG SAVE AREA.
SVBLKS   DS    F                       NUMBER OF BLOCKS FOR DIRECTORY
SVDCB    DS    F                       DCB ADDRESS
SVBLPTK  DS    F                       NUMBER OF BLOCKS PER TRACK
SVBYTES  DS    F                       NUMBER OF BYTES IN WORK AREA
SVADDR   DS    F                       ADDRESS OF WORK AREA
SVCNT    DS    F                       DATA MANAGEMENT COUNT
SVTT     DS    F                       STARTING RELATIVE TRACK ADDRESS
CHPGA    DS    0D                      WRITE CHANNEL PROGRAM
CHPGA1   DS    D                       CCW 1.
CHPGA2   DS    D                       CCW 2.
CHPGA3   DS    D                       CCW 3.
CHPGA4   DS    D                       CCW 4.
CHPGA5   DS    D                       CCW 5.
CHPGA6   DS    D                       CCW 6.
CHPGA7   DS    D                       CCW 7.
CHPGA8   DS    D                       CCW 8.
CHPGA9   DS    D                       CCW 9.
CHPGA10  DS    D                       CCW 10.
CHPGA11  DS    D                       CCW 11.
CHPGA12  DS    D                       CCW 12.
CHPGA13  DS    D                       CCW 13.
CHPGA14  DS    D                       CCW 14.
CHPGA15  DS    D                       CCW 15.
CHPGA16  DS    D                       CCW 16.
CHPGA17  DS    D                       CCW 17.
CHPGB    DS    0D                      READ CHANNEL PROGRAM
CHPGB1   DS    D                       CCW 1.
CHPGB2   DS    D                       CCW 2.
CHPGB3   DS    D                       CCW 3.
CHPGB4   DS    D                       CCW 4.
CHPGB5   DS    D                       CCW 5.
CHPGB6   DS    D                       CCW 6.
CHPGB7   DS    D                       CCW 7.
CHPGB8   DS    D                       CCW 8.
CHPGB9   DS    D                       CCW 9.
CHPGB10  DS    D                       CCW 10.
CHPGB11  DS    D                       CCW 11.
CHPGB12  DS    D                       CCW 12.
CHPGB13  DS    D                       CCW 13.
CHPGB14  DS    D                       CCW 14.
CHPGB15  DS    D                       CCW 15.
CHPGB16  DS    D                       CCW 16.
CHPGB17  DS    D                       CCW 17.
         EJECT
         ORG   CHPGA6                  OVERLAY CHPGA AND B      SA50973
BLOCK    DS    0CL256                  BUFFER                   SA50973
         DS    XL2                     FILLER, 'BYTES USED'     SA50973
         DS    XL12                    FILLER, FRST PART 'VICE' SA50973
UPLSTBLK DS    XL2                     FRST 2 BYTES 'VCLSTBLK'  SA50973
         ORG
COUNT2   DS    0D                      DIRECTORY CONTROL BLOCK
CTKEY    DS    CL8                     KEY OF DIR BLOCK.
CTCOUNT  DS    CL2                     COUNT OF DIRECTORY BLOCK.
CTDIR    DS    CL7                     FILLER.
CTLBK    DS    CL1                     LOW ORDER OF NAME.
         DS    CL2                     FILLER.
CTTTRC   DS    CL2                     TTRC
CTHITT   DS    CL2                     HI TT.
CTHIR    DS    CL1                     HI R.
         DS    CL3                     FILLER.
CTNABTR  DS    CL1                     NEXT AVAILABLE BLOCK TTR.
         DS    CL2                     FILLER.
CTNBLB   DS    CL1                     BYTES IN LAST BLOCK.
CTHIENT  DS    CL8                     HI ENTRY.
         DS    CL72                    FILLER.
HICOUNT  DS    D                       LAST RELATIVE TRACK
FECB     DS    F                       EVENT CONTROL BLOCK
FIOB     DS    8F                      INPUT OUTPUT BLOCK
MBBCCHHR DS    CL8                     SEEK ADDRESS
BPAMDIR  DS    0X                      BDAM DIRECTORY
BPDCNT   DS    CL8                     BPAM DIR COUNT.
BPDHIK   DS    CL9                     BPAM DIR HI KEY.
BPDBPB   DS    CL1                     BPAM DIR BYTES PER BLOCK.
BPDHIE   DS    CL8                     BPAM DIR HI ENTRY.
         ORG   COUNT2-148              ORG EXTEND SAVE AREA.
EXTSAVE  DS    CL8                     FIRST EXTENT OF DEB
*
*      FORMAT 1 DSCB
*
D1SDSNAM DS    CL44                    DATA SET NAME
D1SFMTID DS    CL1                     FORMAT IDENTIFIER
D1SDSSN  DS    CL6                     DATA SET SERIAL NUMBER
D1SVOLSQ DS    XL2                     VOLUME SEQUENCE NUMBER
D1SCREDT DS    XL3                     CREATION DATE
D1SEXPDT DS    XL3                     EXPIRATION DATE
D1SNOEPV DS    XL1                     NUMBER OF EXTENTS ON VOLUME
D1SNOBDB DS    XL1                     NUMBER OF BYTES USED IN LAST
*                                         DIRECTORY BLOCK
         DS    XL1                     RESERVED
D1SSYSCD DS    CL13                    SYSTEM CODE
         DS    XL7                     RESERVED
D1SDSORG DS    XL2                     DATA SET ORGANIZATION
D1SRECFM DS    XL1                     RECORD FORMAT
D1SOPTCD DS    XL1                     OPTION CODE
D1SBLKL  DS    XL2                     BLOCK LENGTH
D1SLRECL DS    XL2                     RECORD LENGTH
D1SKEYL  DS    XL1                     KEY LENGTH
D1SRKP   DS    XL2                     RELATIVE KEY POSITION
D1SDSIND DS    XL1                     DATA SET INDICATORS
D1SSCALO DS    XL4                     SECONDARY ALLOCATION
D1SLSTAR DS    XL3                     LAST USED TRACK AND BLOCK
D1STRBAL DS    XL2                     BYTES REMAINING ON LAST TRACK
         DS    XL2                     RESERVED
D1SEXT1  DS    XL10                    FIRST EXTENT DESCRIPTION
*        FIRST BYTE                    EXTENT TYPE INDICATOR
*        SECOND BYTE                   EXTENT SEQUENCE NUMBER
*        THIRD - SIXTH BYTES           LOWER LIMIT
*        SEVENTH - TENTH BYTES         UPPER LIMIT
D1SEXT2  DS    XL10                    SECOND EXTENT DESCRIPTION
D1SEXT3  DS    XL10                    THIRD EXTENT DESCRIPTION
D1SPTRDS DS    XL5                     POSSIBLE POINTER TO A FORMAT
*                                         2 OR 3 DSCB
D1SEND   EQU   *
         TITLE 'IGG0CLCF - COMMUNICATION VECTOR TABLE DSECT'
*
*COMMUNICATION VECTOR TABLE DEFINITION
*
CVT      DSECT
         CVT   SYS=MIN
         TITLE 'IGG0CLCF - DCB/DEB AREA DSECT'
*
* THIS DSECT DESCRIBES THE DCB/DEB AREA.
*
AREADCB  DSECT
         DS    6F                 DCB AREA FILLER.
DAREA    DS    0F                 WORK AREA REFERENCE.
NUMBYTES DS    F                  NUMBER OF BYTES.
DSCBTRK  DS    F                  CC HH OF SYSCTLG DSCB.
CATWKAP  DS    1F                 CATALOG WORKAREA ADDRESS     @YL026UD
BLDLP    DS    1F                 BLDL    WORKAREA ADDRESS     @YL026UD
DEB      DS    0F                 START OF THE DEB.
DEBTCBAD DS    F                  TCB ADDRESS.
DEBAMIND DS    0X                 AM INDICATOR.
DEBDEBAD DS    F                  NEXT DEB ADDRESS.
         DS    2F                 IRB AND SYS PURGE CHAIN.
DEBNMEXT DS    0X                 NO OF EXTENTS.
         DS    2F                 USER PURGE AND PURGE ECB ADDR.
DEBDCBAD DS    F                  DCB ADDRESS.
DEBAPPAD DS    F                  APPENDAGE VECTOR TABLE ADDRESS.
DEBDVMOD DS    0X                 DEBICE MODIFIER MASK.
DEBUCBAD DS    F                  UCB ADDRESS.
DEBBINUM DS    H                  BIN NUMBER.
DEBSTRCH DS    0CL8               START/END CCHH.
DEBSTRCC DS    H                  START CYLINDER.
DEBSTRHH DS    H                  START HEAD.
DEBENDCC DS    H                  END CYLINDER.
DEBENDHH DS    H                  END HEAD.
DEBNMTRK DS    H                  NUMBER OF TRACKS.
EXTL     EQU   16                 LENGTH OF AN EXTENT ENTRY.
MAXEL    EQU   256                MAXIMUM EXTENT AREA LENGTH.
DEBEND   EQU   *
DEBL     EQU   DEBEND-DEB         DEB LENGTH.
         EJECT
*
* FORMAT 4 DSCB DEFINITION.
*
         SPACE
         IECSDSL1 (4)
DS1RACDF EQU   X'40'              DATA SET IS RACF DEFINED     @Z40CSRC
*                                 (IN BYTE DS1DSIND)           @Z40CSRC
         ORG   IECSDSF4+48        ORG TO CCW AREA.
CHPG     DS    2D                 CHANNEL PROGRAM RELOCATE AREA.
CHPGAA   DS    2D                 CHANNEL PROGRAM RELOCATE AREA.
CHPGBB   DS    2D                 CHANNEL PROGRAM RELOCATE AREA
CHPGCC   DS    2D                 CHANNEL PROGRAM RELOCATE AREA
CHPGDD   DS    2D                 CHANNEL PROGRAM RELOCATE AREA
AECB     DS    F                  EVENT CONTROL BLOCK.
AIOB     DS    8F                 I/O CONTROL BLOCK.
M2B2C2HR DS    CL8                SEEK ADDRESS IN THE IOB.
CCHHR    EQU   M2B2C2HR+3         CHANNEL-HEAD ADDRESS.
CCHHRL   EQU   5                  LENGTH OF CCHHR.
DSCBK    DS    CL44               DATA SET NAME AREA.
DSCBK4   EQU   DSCBK+4            FOUR BYTES OFF DSCBK
DSCBD    EQU   DSCBK+44           FOURTY FOUR BYTES OFF DSCBK
*
* FORMAT 1 DSCB DEFINITION.
*
         SPACE
         ORG   DSCBK              ORG COUNT AREA.
         IECSDSL1 (1)
COUNT    DS    CL8                SYSCTLG DSCB DISK ADDR/
COUNTA   EQU   COUNT+4
*                                 WORKAREA FOR CONVERT ROUTINE.
REGSAVE  DS    1F                 REGISTER SAVE AREA
REGS2    DS    1F                 REGISTER SAVE AREA.
REGS3    DS    1F                 REGISTER SAVE AREA
REGS4    DS    1F                 REGISTER SAVE AREA.
REGS5    DS    1F                 REGISTER SAVE AREA.
REGS6    DS    1F                 REGISTER SAVE AREA.
NUMUCB   DS    H                  NUMBER OF UCB'S.
SWL      EQU   6                  LENGTH OF SWITCH AREA.
FMTSW    DS    X                  COUNT OF BLOCK TRACK.
EXTDSW   DS    X                  EXTEND COUNTER.
EXTDTT   DS    F                  RELATIVE TRACK ADDRESS.
AREAEND2 DS    0D                 USED TO DETERMINE NUMBER BYTES.
EXTDRGSV DS    2F                 REGISTER SAVE AREA.
*
* EXTEND WORK AREA DEFINITION.
*
         ORG   DAREA              ORG TO EXTEND AREA.
EXTDAREA DS    0F
         IECDSECT
DSVSVRB  DS    CL(L'SVRBEXT)      TO SAVE RBEXSAVE             @Z40CSRC
DSVEXTNT DS    CL10               DEB EXTENT SAVE AREA         @Z40CSRC
DSEXTEND DS    0D                 END OF EXTEND WORK AREA      @Z40CSRC
AREAEND1 EQU   DSEXTEND           END OF OPEN WORKAREA         @OZ15077
         TITLE 'IGG0CLCF - UNIT CONTROL BLOCK DSECT'
*
* THIS IS THE UCB DEFINITION DSECT.
*
         SPACE
UCB      DSECT
         IEFUCBOB
         TITLE 'IGG0CLCF - SYSCTLG OPEN, EXTEND, FORMAT'       @Z40CSRC
         IHAPSA                                                @Z40CSRC
         IHARB                                                 @Z40CSRC
         IKJTCB                                                @Z40CSRC
         END   IGG0CLCF
