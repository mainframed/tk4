         TITLE '*  IDCSA01  SYSTEM ADAPTER INITIALIZATION/TERMINATION M*
               MODULE  *'
IDCSA01  CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IDCSA01   77.201'                                 0001
IDCSATO  DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00254-IDCSATO)
         ENTRY IDCSATO
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*                                                                  0251
*        /************************************************************/
*        /*                                                  @YL026UK*/
*        /* SET THE TSO FLAG TO 0 (NORMAL AOS JCL OR         @YL026UK*/
*        /* SUBROUTINE CALL) AND BRANCH AROUND THE TSO ENTRY @YL026UK*/
*        /* POINT                                            @YL026UK*/
*        /*                                                  @YL026UK*/
*        /************************************************************/
*                                                                  0252
*        TSOFLAG = 0;                                      /*@YL026UK*/
         SLR   TSOFLAG,TSOFLAG                                     0252
*        GO TO INIT;                                       /*@YL026UK*/
*                                                                  0253
         B     INIT                                                0253
*        /************************************************************/
*        /*                                                  @YL026UK*/
*        /* ENTRY POINT THROUGH WHICH AMS IS INVOKED         @YL026UK*/
*        /* THROUGH TSO (AOS ONLY)                           @YL026UK*/
*        /*                                                  @YL026UK*/
*        /************************************************************/
*                                                                  0254
*IDCSATO:  ENTRY(CPPL);                                    /*@YL026UK*/
*                                                                  0254
@EP00254 MVC   @PC00001(4),0(@01)                                  0254
*        /************************************************************/
*        /*                                                  @YL026UK*/
*        /* SET THE TSO FLAG TO 1 (TSO CALL)                 @YL026UK*/
*        /*                                                  @YL026UK*/
*        /************************************************************/
*                                                                  0255
*        TSOFLAG = 1;                                      /*@YL026UK*/
         LA    TSOFLAG,1                                           0255
*INIT:                                                             0256
*                                                                  0256
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE THE GLOBAL DATA TABLE - THIS TABLE CONTAINS   */
*        /* ADDRESSES OF ROUTINES WITHIN THE AMS SYSTEM, ADDRESSES   */
*        /* OF HISTORICAL DATA TABLES OF MODULES WITHIN THE AMS      */
*        /* SYSTEM, ADDRESSES OF THE TRACE TABLES, AND THE ADDRESS   */
*        /* OF THE INVOKER'S PARAMETER LIST                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0256
*        GDTTBL(1:256) = '00'X;                            /*@Y30LSDD*/
INIT     XC    GDTTBL+1(255),GDTTBL+1                              0256
         MVI   GDTTBL,X'00'                                        0256
*        GDTTBL(257:LENGTH(GDTTBL)) = '00'X;               /*@Y30LSDD*/
         XC    GDTTBL+257(31),GDTTBL+257                           0257
         MVI   GDTTBL+256,X'00'                                    0257
*        GDTPRM = REG1;                                            0258
         ST    REG1,GDTPRM                                         0258
*        RESPECIFY (REG1) UNRSTD;                                  0259
*        GDTHDR = 'GDT ';                                          0260
         MVC   GDTHDR(4),@CC00926                                  0260
*        GDTTR1 = ADDR(INTER);                                     0261
         LA    @10,INTER                                           0261
         ST    @10,GDTTR1                                          0261
*        GDTTR2 = ADDR(INTRA);                                     0262
         LA    @02,INTRA                                           0262
         ST    @02,GDTTR2                                          0262
*        GDTSAH = ADDR(SAHIST);                                    0263
         LA    @02,SAHIST                                          0263
         ST    @02,GDTSAH                                          0263
*        GDTCAL = ADDR(IDCSACL);                                   0264
         L     @02,@CV00697                                        0264
         ST    @02,GDTCAL                                          0264
*        GDTGSP = ADDR(IDCSAGS);                                   0265
         L     @02,@CV00698                                        0265
         ST    @02,GDTGSP                                          0265
*        GDTFSP = ADDR(IDCSAFS);                                   0266
         L     @02,@CV00699                                        0266
         ST    @02,GDTFSP                                          0266
*        GDTGPL = ADDR(IDCSAGP);                                   0267
         L     @02,@CV00700                                        0267
         ST    @02,GDTGPL                                          0267
*        GDTFPL = ADDR(IDCSAFP);                                   0268
         L     @02,@CV00701                                        0268
         ST    @02,GDTFPL                                          0268
*        GDTLOD = ADDR(IDCSALD);                                   0269
         L     @02,@CV00702                                        0269
         ST    @02,GDTLOD                                          0269
*        GDTDEL = ADDR(IDCSADE);                                   0270
         L     @02,@CV00703                                        0270
         ST    @02,GDTDEL                                          0270
*        GDTPRL = ADDR(IDCSAPR);                                   0271
         L     @02,@CV00704                                        0271
         ST    @02,GDTPRL                                          0271
*        GDTEPL = ADDR(IDCSAEP);                                   0272
         L     @02,@CV00705                                        0272
         ST    @02,GDTEPL                                          0272
*        GDTTIM = ADDR(IDCSATI);                                   0273
         L     @02,@CV00706                                        0273
         ST    @02,GDTTIM                                          0273
*        GDTCAT = ADDR(IDCSACA);                                   0274
         L     @02,@CV00716                                        0274
         ST    @02,GDTCAT                                          0274
*        GDTSNP = ADDR(IDCSASN);                                   0275
         L     @02,@CV00717                                        0275
         ST    @02,GDTSNP                                          0275
*        GDTIIO = ADDR(IDCIOIT);                                   0276
         L     @02,@CV00707                                        0276
         ST    @02,GDTIIO                                          0276
*        GDTTIO = ADDR(IDCIOTM);                                   0277
         L     @02,@CV00708                                        0277
         ST    @02,GDTTIO                                          0277
*        GDTOPN = ADDR(IDCIOOP);                                   0278
         L     @02,@CV00709                                        0278
         ST    @02,GDTOPN                                          0278
*        GDTCLS = ADDR(IDCIOCL);                                   0279
         L     @02,@CV00710                                        0279
         ST    @02,GDTCLS                                          0279
*        GDTGET = ADDR(IDCIOGT);                                   0280
         L     @02,@CV00711                                        0280
         ST    @02,GDTGET                                          0280
*        GDTPUT = ADDR(IDCIOPT);                                   0281
         L     @02,@CV00712                                        0281
         ST    @02,GDTPUT                                          0281
*        GDTPOS = ADDR(IDCIOPO);                                   0282
         L     @02,@CV00713                                        0282
         ST    @02,GDTPOS                                          0282
*        GDTCPY = ADDR(IDCIOCO);                                   0283
         L     @02,@CV00714                                        0283
         ST    @02,GDTCPY                                          0283
*        GDTVFY = ADDR(IDCIOVY);                                   0284
         L     @02,@CV00715                                        0284
         ST    @02,GDTVFY                                          0284
*        GDTPRT = ADDR(IDCTPPR);                                   0285
         L     @02,@CV00692                                        0285
         ST    @02,GDTPRT                                          0285
*        GDTESS = ADDR(IDCTPES);                                   0286
         L     @02,@CV00693                                        0286
         ST    @02,GDTESS                                          0286
*        GDTESA = ADDR(IDCTPEA);                                   0287
         L     @02,@CV00694                                        0287
         ST    @02,GDTESA                                          0287
*        GDTRST = ADDR(IDCTPRS);                                   0288
         L     @02,@CV00695                                        0288
         ST    @02,GDTRST                                          0288
*        GDTRES = ADDR(IDCTPRE);                                   0289
         L     @02,@CV00696                                        0289
         ST    @02,GDTRES                                          0289
*        GDTABT = ADDR(SAABT);                                     0290
         LA    @02,SAABT                                           0290
         ST    @02,GDTABT                                          0290
*        RESPECIFY (REG13) RSTD;                                   0291
*        GDTABH = REG13;                                           0292
         ST    REG13,GDTABH                                        0292
*        RESPECIFY (REG13) UNRSTD;                         /*@YL026UK*/
*        GDTUID = ADDR(IDCSAID);                           /*@YL026UK*/
         L     @02,@CV00718                                        0294
         ST    @02,GDTUID                                          0294
*        GDTPMT = ADDR(IDCSAPT);                           /*@YL026UK*/
         L     @02,@CV00719                                        0295
         ST    @02,GDTPMT                                          0295
*        GDTCIR = ADDR(IDCSACR);                           /*@YL026UK*/
         L     @02,@CV00720                                        0296
         ST    @02,GDTCIR                                          0296
*        GDTSTW = ADDR(IDCIOST);                           /*@YL026UK*/
         L     @02,@CV00721                                        0297
         ST    @02,GDTSTW                                          0297
*        GDTALC = ADDR(IDCSAAL);                           /*@YL026UK*/
         L     @02,@CV00722                                        0298
         ST    @02,GDTALC                                          0298
*        GDTDLC = ADDR(IDCSADL);                           /*@YL026UK*/
         L     @02,@CV00723                                        0299
         ST    @02,GDTDLC                                          0299
*        GDTQAL = ADDR(IDCSAQL);                           /*@YL026UK*/
         L     @02,@CV00724                                        0300
         ST    @02,GDTQAL                                          0300
*        GDTLNK = ADDR(IDCSALK);                           /*@Y30LSDD*/
         L     @02,@CV00725                                        0301
         ST    @02,GDTLNK                                          0301
*        GDTSSC = ADDR(IDCSASS);                           /*@Y30LSDD*/
         L     @02,@CV00726                                        0302
         ST    @02,GDTSSC                                          0302
*        GDTENQ = ADDR(IDCSANQ);                           /*@Y30LSDD*/
         L     @02,@CV00727                                        0303
         ST    @02,GDTENQ                                          0303
*        GDTRSV = ADDR(IDCSARV);                           /*@Y30LSDD*/
         L     @02,@CV00728                                        0304
         ST    @02,GDTRSV                                          0304
*        GDTDEQ = ADDR(IDCSADQ);                           /*@Y30LSDD*/
         L     @02,@CV00729                                        0305
         ST    @02,GDTDEQ                                          0305
*        GDTSFO = ADDR(IDCSASI);                           /*@Y30LSDD*/
         L     @02,@CV00730                                        0306
         ST    @02,GDTSFO                                          0306
*        GDTWTO = ADDR(IDCSAWO);                           /*@Y30LSDD*/
         L     @02,@CV00731                                        0307
         ST    @02,GDTWTO                                          0307
*        GDTSCR = ADDR(IDCSASC);                           /*@Y30LSDD*/
         L     @02,@CV00732                                        0308
         ST    @02,GDTSCR                                          0308
*        GDTUNT = ADDR(IDCSA06);                           /*@Y30LSDD*/
         L     @02,@CV00733                                        0309
         ST    @02,GDTUNT                                          0309
*        GDTRCT = ADDR(IDCSARC);                           /*@Y30LSDD*/
         L     @02,@CV00734                                        0310
         ST    @02,GDTRCT                                          0310
*        GDTIFO = ADDR(IDCIOSI);                           /*@Y30LSDD*/
         L     @02,@CV00735                                        0311
         ST    @02,GDTIFO                                          0311
*        GDTEXP = ADDR(IDCIO05);                           /*@Y30LSDD*/
         L     @02,@CV00736                                        0312
         ST    @02,GDTEXP                                          0312
*        GDTSTA = ADDR(IDCSAST);                           /*@Y30LSMK*/
         L     @02,@CV00737                                        0313
         ST    @02,GDTSTA                                          0313
*        GDTERR = ADDR(IDCTPER);                           /*@Y30SSMK*/
         L     @02,@CV00738                                        0314
         ST    @02,GDTERR                                          0314
*        GDTUNC = ADDR(IDCSAUC);                           /*@X30LSBS*/
         L     @02,@CV00739                                        0315
         ST    @02,GDTUNC                                          0315
*        GDTLOC = ADDR(IDCSALC);                           /*@X30LSBS*/
         L     @02,@CV00740                                        0316
         ST    @02,GDTLOC                                          0316
*        GDTRCK = ADDR(IDCSARK);                           /*@G24LSBS*/
*                                                                  0317
         L     @02,@CV00741                                        0317
         ST    @02,GDTRCK                                          0317
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE THE STORAGE TABLE (FOR THE FROZEN     @YL026UK*/
*        /* AUTOMATIC STORAGE FOR THE ITERATIVELY CALLED     @YL026UK*/
*        /* MODULES).  INITIALIZE SUCH THAT THE MOST         @YL026UK*/
*        /* OFTEN CALLED MODULE IS THE FIRST ENTRY IN THE TABLE, ETC.*/
*        /* NOTE THAT OTHER CODE IS DEPENDENT ON THIS ORDERING--THE  */
*        /* UCALL ROUTINE OF MODULE IDCSA02, THE AREA OF THIS MODULE */
*        /* THAT ACQUIRES THE AUTOMATIC STORAGE FOR THE ITERATIVELY  */
*        /* CALLED MODULES, THE AREA OF THIS MODULE THAT FREES       */
*        /* THESE FROZEN AREAS, AND THE ULINK ROUTINE OF MODULE      */
*        /* IDCSA02.                                         @YL026UK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0318
*        AUTOTBL = '00'X;                                          0318
         XC    AUTOTBL+1(107),AUTOTBL+1                            0318
         MVI   AUTOTBL,X'00'                                       0318
*        AREAID(1) = 'IO01';                                       0319
         MVC   AREAID(4),@CC00929                                  0319
*        AREAID(2) = 'SA02';                                       0320
         MVC   AREAID+12(4),@CC00930                               0320
*        AREAID(3) = 'TP01';                                       0321
         MVC   AREAID+24(4),@CC00931                               0321
*        AREAID(4) = 'SA08';                               /*@Y30LSDD*/
         MVC   AREAID+36(4),@CC00932                               0322
*        AREAID(5) = 'IO05';                               /*@Y30LSMK*/
         MVC   AREAID+48(4),@CC00933                               0323
*        AREAID(6) = 'SA06';                               /*@Y30LSMK*/
         MVC   AREAID+60(4),@CC00934                               0324
*        AREAID(7) = 'SA07';                               /*@Y30LSMK*/
         MVC   AREAID+72(4),@CC00935                               0325
*        AREAID(8) = 'SA09';                               /*@Y30LSMK*/
         MVC   AREAID+84(4),@CC00936                               0326
*        AREAID(9) = 'SA10';                               /*@Y30LSMK*/
*                                                                  0327
         MVC   AREAID+96(4),@CC00937                               0327
*        /************************************************************/
*        /*                                                          */
*        /* BLANK AND IDENTIFY INTER-MODULE-TRACE AND INTRA-MODULE-  */
*        /* TRACE TABLES                                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0328
*        INTER = ' ';                                              0328
         MVI   INTER+1,C' '                                        0328
         MVC   INTER+2(98),INTER+1                                 0328
         MVI   INTER,C' '                                          0328
*        INTRA = ' ';                                              0329
         MVI   INTRA+1,C' '                                        0329
         MVC   INTRA+2(98),INTRA+1                                 0329
         MVI   INTRA,C' '                                          0329
*        HDR1 = ' INTER  ';                                        0330
         MVC   HDR1(8),@CC00939                                    0330
*        HDR2 = ' INTRA  ';                                        0331
*                                                                  0331
         MVC   HDR2(8),@CC00940                                    0331
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE THE SYSTEM ADAPTER HISTORICAL DATA TABLE      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0332
*        SAHIST = '00'X;                                   /*@Z40GSBF*/
         XC    SAHIST+1(19),SAHIST+1                               0332
         MVI   SAHIST,X'00'                                        0332
*        GPLAST = ADDR(GPFIRST);                                   0333
         LA    @02,GPFIRST                                         0333
         ST    @02,GPLAST                                          0333
*        AUTOPTR = ADDR(AUTOTBL);                                  0334
         LA    @02,AUTOTBL                                         0334
         ST    @02,AUTOPTR                                         0334
*        /************************************************************/
*        /*                                                          */
*        /* UPDATE THE INTER-MODULE-TRACE TABLE WITH THIS MODULE'S   */
*        /* ID AND STORE THIS MODULE'S ID INTO THE SAVEAREA IN WHICH */
*        /* IT SAVED REGISTERS                                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0335
*        NEWID1 = MODID;                                           0335
         MVC   NEWID1(4,@10),MODID                                 0335
*        RESPECIFY (REG13) RSTD;                                   0336
*        SAVEPTR = BACKSAVE;                                       0337
         L     @10,BACKSAVE+4(,SAVEPTR)                            0337
         LR    SAVEPTR,@10                                         0337
*        SAVEPTR = FWDSAVE;                                        0338
         L     @10,FWDSAVE+8(,SAVEPTR)                             0338
         LR    SAVEPTR,@10                                         0338
*        RESPECIFY (REG13) UNRSTD;                                 0339
*                                                                  0339
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE FOR UABORT ROUTINE BY STORING CURRENT REGISTER*/
*        /* CONTENTS IN SAVEAREA SET UP BY THIS MODULE (USED LATER BY*/
*        /* UABORT ROUTINE TO RE-ESTABLISH ADDRESSABILITY).  @YL026UK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0340
*        GEN(STM   REG14,REG12,12(REG13));                         0340
*                                                                  0340
         STM   REG14,REG12,12(REG13)
*        RESPECIFY (REG4) RSTD;                                    0341
*                                                                  0341
*        /************************************************************/
*        /************************************************************/
*        /*                                                          */
*        /* FROZEN AUTOMATIC STORAGE IS NEXT GOTTEN FOR MODULES      */
*        /* IDCSA03, IDCSA02, IDCSA08, IDCIO05, IDCSA06, IDCSA07,    */
*        /* IDCSA09, IDCSA10, IDCTP01 AND IDCIO01. THESE ARE @Y30LSMK*/
*        /* OFTEN CALLED MODULES WITHIN THE AMS SYSTEM--THEREFORE    */
*        /* THEIR FIRST LEVEL OF AUTOMATIC STORAGE IS GOTTEN AHEAD   */
*        /* OF TIME AND KEPT AROUND FOR THEIR USE UNTIL THE END OF   */
*        /* AMS PROCESSING                                           */
*        /*                                                          */
*        /************************************************************/
*        /************************************************************/
*                                                                  0342
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA03     */
*        /* SA03AU ADDRESSES THE ADDRESS OF SA03'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0342
*        GEN(L     REG4,SA03AU);                                   0342
         L     REG4,SA03AU
*        GEN(L     REG4,0(REG4));                                  0343
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                                  0344
         L     REG4,0(REG4)
*        SA03SZ = REG4;                                            0345
*                                                                  0345
         STH   REG4,SA03SZ                                         0345
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA02     */
*        /* SA02AU ADDRESSES THE ADDRESS OF SA02'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0346
*        GEN(L     REG4,SA02AU);                                   0346
         L     REG4,SA02AU
*        GEN(L     REG4,0(REG4));                                  0347
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                                  0348
         L     REG4,0(REG4)
*        ASIZE(2) = REG4;                                          0349
*                                                                  0349
         STCM  REG4,3,ASIZE+12                                     0349
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA08     */
*        /* SA08AU ADDRESSES THE ADDRESS OF SA08'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0350
*        GEN(L     REG4,SA08AU);                                   0350
         L     REG4,SA08AU
*        GEN(L     REG4,0(REG4));                                  0351
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                                  0352
         L     REG4,0(REG4)
*        ASIZE(4) = REG4;                                  /*#Y30LSDD*/
*                                                                  0353
         STCM  REG4,3,ASIZE+36                                     0353
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCIO05     */
*        /* IO05AU ADDRESSES THE ADDRESS OF IO05'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                       @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0354
*        GEN(L     REG4,IO05AU);                           /*@Y30LSMK*/
         L     REG4,IO05AU
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        ASIZE(5) = REG4;                                  /*@Y30LSMK*/
*                                                                  0357
         STCM  REG4,3,ASIZE+48                                     0357
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA06     */
*        /* SA06AU ADDRESSES THE ADDRESS OF SA06'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                       @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0358
*        GEN(L     REG4,SA06AU);                           /*@Y30LSMK*/
         L     REG4,SA06AU
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        ASIZE(6) = REG4;                                  /*@Y30LSMK*/
*                                                                  0361
         STCM  REG4,3,ASIZE+60                                     0361
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA07     */
*        /* SA07AU ADDRESSES THE ADDRESS OF SA07'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                       @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0362
*        GEN(L     REG4,SA07AU);                           /*@Y30LSMK*/
         L     REG4,SA07AU
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        ASIZE(7) = REG4;                                  /*@Y30LSMK*/
*                                                                  0365
         STCM  REG4,3,ASIZE+72                                     0365
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA09     */
*        /* SA09AU ADDRESSES THE ADDRESS OF SA09'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                       @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0366
*        GEN(L     REG4,SA09AU);                           /*@Y30LSMK*/
         L     REG4,SA09AU
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        ASIZE(8) = REG4;                                  /*@Y30LSMK*/
*                                                                  0369
         STCM  REG4,3,ASIZE+84                                     0369
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCSA10     */
*        /* SA10AU ADDRESSES THE ADDRESS OF SA10'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                       @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0370
*        GEN(L     REG4,SA10AU);                           /*@Y30LSMK*/
         L     REG4,SA10AU
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                          /*@Y30LSMK*/
         L     REG4,0(REG4)
*        ASIZE(9) = REG4;                                  /*@Y30LSMK*/
*                                                                  0373
         STCM  REG4,3,ASIZE+96                                     0373
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCTP01     */
*        /* TP01AU ADDRESSES THE ADDRESS OF TP01'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0374
*        GEN(L     REG4,TP01AU);                                   0374
         L     REG4,TP01AU
*        GEN(L     REG4,0(REG4));                                  0375
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                                  0376
         L     REG4,0(REG4)
*        ASIZE(3) = REG4;                                          0377
*                                                                  0377
         STCM  REG4,3,ASIZE+24                                     0377
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE SIZE FOR MODULE IDCIO01     */
*        /* IO01AU ADDRESSES THE ADDRESS OF IO01'S AUTOMATIC STORAGE */
*        /* SIZE VALUE                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0378
*        GEN(L     REG4,IO01AU);                                   0378
         L     REG4,IO01AU
*        GEN(L     REG4,0(REG4));                                  0379
         L     REG4,0(REG4)
*        GEN(L     REG4,0(REG4));                                  0380
         L     REG4,0(REG4)
*        ASIZE(1) = REG4;                                          0381
*                                                                  0381
         STCM  REG4,3,ASIZE                                        0381
*        RESPECIFY (REG4) UNRSTD;                                  0382
*                                                                  0382
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA03          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0383
*        CALL GETCORE(SA03SZ,GDTSPR);                              0383
*                                                                  0383
         LA    @10,SA03SZ                                          0383
         ST    @10,@AL00001                                        0383
         LA    @10,GDTSPR                                          0383
         ST    @10,@AL00001+4                                      0383
         LA    @01,@AL00001                                        0383
         BAL   @14,GETCORE                                         0383
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA02          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0384
*        CALL GETCORE(ASIZE(2),PTR1(2));                           0384
*                                                                  0384
         LA    @10,ASIZE+12                                        0384
         ST    @10,@AL00001                                        0384
         LA    @10,PTR1+12                                         0384
         ST    @10,@AL00001+4                                      0384
         LA    @01,@AL00001                                        0384
         BAL   @14,GETCORE                                         0384
*        /************************************************************/
*        /*                                                  @Y30LSDD*/
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA08  @Y30LSDD*/
*        /*                                                  @Y30LSDD*/
*        /************************************************************/
*                                                                  0385
*        CALL GETCORE(ASIZE(4),PTR1(4));                   /*@Y30LSDD*/
*                                                                  0385
         LA    @10,ASIZE+36                                        0385
         ST    @10,@AL00001                                        0385
         LA    @10,PTR1+36                                         0385
         ST    @10,@AL00001+4                                      0385
         LA    @01,@AL00001                                        0385
         BAL   @14,GETCORE                                         0385
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCIO05  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0386
*        CALL GETCORE(ASIZE(5),PTR1(5));                   /*@Y30LSMK*/
*                                                                  0386
         LA    @10,ASIZE+48                                        0386
         ST    @10,@AL00001                                        0386
         LA    @10,PTR1+48                                         0386
         ST    @10,@AL00001+4                                      0386
         LA    @01,@AL00001                                        0386
         BAL   @14,GETCORE                                         0386
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA06  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0387
*        CALL GETCORE(ASIZE(6),PTR1(6));                   /*@Y30LSMK*/
*                                                                  0387
         LA    @10,ASIZE+60                                        0387
         ST    @10,@AL00001                                        0387
         LA    @10,PTR1+60                                         0387
         ST    @10,@AL00001+4                                      0387
         LA    @01,@AL00001                                        0387
         BAL   @14,GETCORE                                         0387
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA07  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0388
*        CALL GETCORE(ASIZE(7),PTR1(7));                   /*@Y30LSMK*/
*                                                                  0388
         LA    @10,ASIZE+72                                        0388
         ST    @10,@AL00001                                        0388
         LA    @10,PTR1+72                                         0388
         ST    @10,@AL00001+4                                      0388
         LA    @01,@AL00001                                        0388
         BAL   @14,GETCORE                                         0388
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA09  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0389
*        CALL GETCORE(ASIZE(8),PTR1(8));                   /*@Y30LSMK*/
*                                                                  0389
         LA    @10,ASIZE+84                                        0389
         ST    @10,@AL00001                                        0389
         LA    @10,PTR1+84                                         0389
         ST    @10,@AL00001+4                                      0389
         LA    @01,@AL00001                                        0389
         BAL   @14,GETCORE                                         0389
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA10  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0390
*        CALL GETCORE(ASIZE(9),PTR1(9));                   /*@Y30LSMK*/
*                                                                  0390
         LA    @10,ASIZE+96                                        0390
         ST    @10,@AL00001                                        0390
         LA    @10,PTR1+96                                         0390
         ST    @10,@AL00001+4                                      0390
         LA    @01,@AL00001                                        0390
         BAL   @14,GETCORE                                         0390
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCTP01          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0391
*        CALL GETCORE(ASIZE(3),PTR1(3));                           0391
*                                                                  0391
         LA    @10,ASIZE+24                                        0391
         ST    @10,@AL00001                                        0391
         LA    @10,PTR1+24                                         0391
         ST    @10,@AL00001+4                                      0391
         LA    @01,@AL00001                                        0391
         BAL   @14,GETCORE                                         0391
*        /************************************************************/
*        /*                                                          */
*        /* GET FROZEN AUTOMATIC STORAGE FOR MODULE IDCIO01          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0392
*        CALL GETCORE(ASIZE(1),PTR1(1));                           0392
*                                                                  0392
         LA    @10,ASIZE                                           0392
         ST    @10,@AL00001                                        0392
         LA    @10,PTR1                                            0392
         ST    @10,@AL00001+4                                      0392
         LA    @01,@AL00001                                        0392
         BAL   @14,GETCORE                                         0392
*        /************************************************************/
*        /*                                                  @Z40GSBF*/
*        /*  FORMAT AUTO STORAGE LLBLK FOR UDELETE           @Z40GSBF*/
*        /*                                                  @Z40GSBF*/
*        /************************************************************/
*                                                                  0393
*                                                                  0393
*        LLAREA(1:256) = '00'X;                            /*@Z40GSBF*/
         XC    LLAREA+1(255),LLAREA+1                              0393
         MVI   LLAREA,X'00'                                        0393
*        LLAREA(257:LENGTH(LLAREA)) = '00'X;               /*@Z40GSBF*/
         XC    LLAREA+257(135),LLAREA+257                          0394
         MVI   LLAREA+256,X'00'                                    0394
*        LLBLKPTR = ADDR(LLAREA);                          /*@Z40GSBF*/
         LA    @10,LLAREA                                          0395
         ST    @10,LLBLKPTR                                        0395
*        LLFSTSLT = ADDR(LLSLOT(1));                       /*@Z40GSBF*/
         LA    @02,LLSLOT(,@10)                                    0396
         ST    @02,LLFSTSLT(,@10)                                  0396
*                                                          /*@Z40GSBF*/
*        DO  I = 1 TO LLSLTCNT;                            /*@Z40GSBF*/
         LA    I,1                                                 0397
@DL00397 DS    0H                                                  0398
*                                                          /*@Z40GSBF*/
*          LLNXTSLT(I) = ADDR(LLSLOT(I+1));                /*@Z40GSBF*/
         L     @10,LLBLKPTR                                        0398
         LR    @15,I                                               0398
         SLA   @15,4                                               0398
         LA    @14,LLSLOT(@15,@10)                                 0398
         ALR   @10,@15                                             0398
         AL    @10,@CF01019                                        0398
         STCM  @14,15,LLNXTSLT-8(@10)                              0398
*                                                          /*@Z40GSBF*/
*        END;                                              /*@Z40GSBF*/
         AL    I,@CF00213                                          0399
         C     I,@CF00330                                          0399
         BNH   @DL00397                                            0399
*                                                          /*@Z40GSBF*/
*        LLNXTSLT(LLSLTCNT) = 0;                           /*@Z40GSBF*/
         SLR   @10,@10                                             0400
         L     @02,LLBLKPTR                                        0400
         STCM  @10,15,LLNXTSLT+368(@02)                            0400
*                                                          /*@Z40GSBF*/
*        /************************************************************/
*        /*                                                  @YL026UK*/
*        /* DETERMINE IF AMS WAS INVOKED FROM TSO            @YL026UK*/
*        /*                                                  @YL026UK*/
*        /************************************************************/
*                                                                  0401
*        IF TSOFLAG = 1                                            0401
*          THEN                                                    0401
*                                                                  0401
         LA    @02,1                                               0401
         CR    TSOFLAG,@02                                         0401
         BNE   @RF00401                                            0401
*            /********************************************************/
*            /*                                              @YL026UK*/
*            /* PERFORM NECESSARY INITIALIZATION FOR TSO     @YL026UK*/
*            /* INVOCATION                                   @YL026UK*/
*            /*                                              @YL026UK*/
*            /********************************************************/
*                                                                  0402
*            DO;                                           /*@YL026UK*/
*                                                                  0402
*              /******************************************************/
*              /*                                            @YL026UK*/
*              /* SET THE GDT ENTRY GDTRIP TO THE ADDRESS OF @YL026UK*/
*              /* THE TSO READER/INTERPRETER NAME 'IDCRI04'  @YL026UK*/
*              /*                                            @YL026UK*/
*              /******************************************************/
*                                                                  0403
*              GDTRIP = ADDR(READER2);                     /*@YL026UK*/
*                                                                  0403
         LA    @03,READER2                                         0403
         ST    @03,GDTRIP                                          0403
*              /******************************************************/
*              /*                                            @YL026UK*/
*              /* EXTRACT ADDRESSES OF THE TSO COMMAND       @YL026UK*/
*              /* BUFFER, THE TSO ENVIRONMENT CONTROL TABLE, @YL026UK*/
*              /* THE TSO PROTECTED STEP CONTROL BLOCK, AND  @YL026UK*/
*              /* THE TSO USER PROFILE TABLE FROM THE CPPL,  @YL026UK*/
*              /* AND INSERT THESE ADDRESSES INTO THE GDT.   @YL026UK*/
*              /*                                            @YL026UK*/
*              /******************************************************/
*                                                                  0404
*              GDTCMB = TSOCB;                             /*@YL026UK*/
         L     @03,GDTPRM                                          0404
         L     @15,TSOCB(,@03)                                     0404
         ST    @15,GDTCMB                                          0404
*              GDTECT = TSOECT;                            /*@YL026UK*/
         L     @15,TSOECT+12(,@03)                                 0405
         ST    @15,GDTECT                                          0405
*              GDTPSB = TSOPSCB;                           /*@YL026UK*/
         L     @15,TSOPSCB+8(,@03)                                 0406
         ST    @15,GDTPSB                                          0406
*              GDTUPT = TSOUPT;                            /*#YL026UK*/
*                                                                  0407
         L     @03,TSOUPT+4(,@03)                                  0407
         ST    @03,GDTUPT                                          0407
*              /******************************************************/
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* SET UP AN INVOKER PARAMETER LIST THAT WILL #YL026UK*/
*              /* CAUSE ALL SYSPRINT OUTPUT TO BE PROCESSED  #YL026UK*/
*              /* BY MODULE IDCIO04, AND PLACE THE ADDRESS   #YL026UK*/
*              /* OF THIS LIST IN GDTPRM.                    #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*              /******************************************************/
*                                                                  0408
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* INITIALIZE THE INVOKER PARAMETER LIST      #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0408
*              TSOOP = 0;                                  /*#YL026UK*/
         ST    @10,TSOOP                                           0408
*              TSODN = 0;                                  /*#YL026UK*/
         ST    @10,TSODN                                           0409
*              TSOPG = 0;                                  /*#YL026UK*/
         ST    @10,TSOPG                                           0410
*              TSOIO = ADDR(IOL);                          /*#YL026UK*/
         LA    @10,IOL                                             0411
         ST    @10,TSOIO                                           0411
*              ENDFLG = ON;                                /*#YL026UK*/
*                                                                  0412
         OI    ENDFLG,B'10000000'                                  0412
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* INITIALIZE THE IOLIST ASSOCIATED WITH THIS #YL026UK*/
*              /* INVOKER PARAMETER LIST                     #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0413
*              ION = 1;                                    /*#YL026UK*/
         ST    @02,ION                                             0413
*              IODN = ADDR(ALTIO);                         /*#YL026UK*/
         LA    @10,ALTIO                                           0414
         ST    @10,IODN                                            0414
*              IODATUM = ADDR(GDTTBL);                     /*#YL026UK*/
*                                                                  0415
         LA    @10,GDTTBL                                          0415
         ST    @10,IODATUM                                         0415
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* LOAD MODULE IDCIO04 AND INSERT THIS LOAD   #YL026UK*/
*              /* ADDRESS INTO IOMOD TO FINISH THE IOLIST    #YL026UK*/
*              /* INITIALIZATION.                            #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0416
*              RESPECIFY (REG0) RSTD;                      /*#YL026UK*/
*              GEN(LOAD  EP=IDCIO04);                      /*#YL026UK*/
         LOAD  EP=IDCIO04
*              IOMOD = REG0;                               /*#YL026UK*/
         ST    REG0,IOMOD                                          0418
*              RESPECIFY (REG0) UNRSTD;                    /*#YL026UK*/
*                                                                  0419
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* INSERT ADDRESS OF INVOKER PARAMETER LIST   #YL026UK*/
*              /* CONSTRUCTED FOR TSO INVOCATION INTO GDTPRM #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0420
*              GDTPRM = ADDR(TSOIPL);                      /*#YL026UK*/
*                                                                  0420
         LA    @10,TSOIPL                                          0420
         ST    @10,GDTPRM                                          0420
*            END;                                          /*#YL026UK*/
*          ELSE                                                    0422
*                                                                  0422
*            /********************************************************/
*            /*                                              #YL026UK*/
*            /* SET THE GDT ENTRY GDTRIP TO THE ADDRESS OF   #YL026UK*/
*            /* THE NON-TSO READER/INTERPRETER NAME          #YL026UK*/
*            /* 'IDCRI01'                                    #YL026UK*/
*            /*                                              #YL026UK*/
*            /********************************************************/
*                                                                  0422
*            GDTRIP = ADDR(READER1);                       /*#YL026UK*/
*                                                                  0422
         B     @RC00401                                            0422
@RF00401 LA    @10,READER1                                         0422
         ST    @10,GDTRIP                                          0422
*        /************************************************************/
*        /************************************************************/
*        /*                                                          */
*        /* TRANSFER CONTROL TO THE EXECUTIVE MODULE TO CONTINUE     */
*        /* AMS PROCESSING                                           */
*        /*                                                          */
*        /************************************************************/
*        /************************************************************/
*                                                                  0423
*        CALL IDCEX01(GDTTBL);                                     0423
*                                                                  0423
@RC00401 LA    @10,GDTTBL                                          0423
         ST    @10,@AL00001                                        0423
         L     @15,@CV00749                                        0423
         LA    @01,@AL00001                                        0423
         BALR  @14,@15                                             0423
*        /************************************************************/
*        /*                                                          */
*        /* ALL AMS PROCESSING IS COMPLETED, RECEIVE THE RETURN      */
*        /* CODE FROM AMS                                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0424
*        RESPECIFY (RTNREG) RSTD;                                  0424
*        RESPECIFY RTNREG RSTD;                                    0425
*        TESTRC = RTNREG;                                          0426
         LR    TESTRC,RTNREG                                       0426
*        RESPECIFY RTNREG UNRSTD;                                  0427
*        RESPECIFY (RTNREG) UNRSTD;                                0428
*                                                                  0428
*        RESPECIFY (REG0,REG1) RSTD;                               0429
*                                                                  0429
*        /************************************************************/
*        /*                                                  @Z40GSBF*/
*        /* DELETE ALL MODULES THAT WERE LOADED BY AMS AND   @Z40GSBF*/
*        /* FREE ALL LLBLK(S) THAT WERE GOTTEN IF ANY        @Z40GSBF*/
*        /*                                                  @Z40GSBF*/
*        /************************************************************/
*                                                                  0430
*        RFY LLBLK BASED(P);                               /*@Z40GSBF*/
*        OLDERID2 = NEWERID2;                                      0431
         L     @10,GDTTR2                                          0431
         MVC   @TS00001(95),NEWERID2(@10)                          0431
         MVC   OLDERID2(95,@10),@TS00001                           0431
*        NEWID2 = 'SAD1';                                  /*@Z40GSBF*/
         MVC   NEWID2(4,@10),@CC00943                              0432
*        IX = 0;                                           /*@Z40GSBF*/
         SLR   IX,IX                                               0433
*        CONTROL = OFF;                                    /*@Z40GSBF*/
*                                                                  0434
         NI    CONTROL,B'01111111'                                 0434
*        /***************************************************@Z40GSBF*/
*        /*                                                  @Z40GSBF*/
*        /* FIRST TIME USE POINTER IN SAHIST TO LLBLK        @Z40GSBF*/
*        /*                                                  @Z40GSBF*/
*        /***************************************************@Z40GSBF*/
*                                                                  0435
*          IF IX = 0                                       /*@Z40GSBF*/
*            THEN                                          /*@Z40GSBF*/
         LTR   IX,IX                                               0435
         BNZ   @RF00435                                            0435
*              P = LLBLKPTR;                               /*@Z40GSBF*/
         L     @10,LLBLKPTR                                        0436
         ST    @10,P                                               0436
*            ELSE;                                         /*@Z40GSBF*/
@RF00435 DS    0H                                                  0438
*        DO WHILE CONTROL = OFF;                           /*@Z40GSBF*/
*                                                                  0438
         B     @DE00438                                            0438
@DL00438 DS    0H                                                  0439
*        /***************************************************@Z40GSBF*/
*        /*                                                  @Z40GSBF*/
*        /* GO THRU LLBLK AND DELETE ALL MODULES IN CORE     @Z40GSBF*/
*        /* THAT WERE LOADED AND IN LLBLK(S)                 @Z40GSBF*/
*        /*                                                  @Z40GSBF*/
*        /***************************************************@Z40GSBF*/
*                                                                  0439
*          DO IX = 1 TO LLSLTCNT;                          /*@Z40GSBF*/
         LA    IX,1                                                0439
@DL00439 DS    0H                                                  0440
*            IF LLNOMOD(IX) ^= 0                           /*@Z40GSBF*/
*              THEN                                        /*@Z40GSBF*/
         L     @10,P                                               0440
         LR    @04,IX                                              0440
         SLA   @04,4                                               0440
         ST    @04,@TF00001                                        0440
         ALR   @04,@10                                             0440
         AL    @04,@CF01022                                        0440
         ICM   @02,15,LLNOMOD-12(@04)                              0440
         LTR   @02,@02                                             0440
         BZ    @RF00440                                            0440
*                DO;                                       /*@Z40GSBF*/
*                  RFY REG0 RSTD;                          /*@Z40GSBF*/
*                  REG0 = ADDR(LLNAME(IX));                /*@Z40GSBF*/
         L     @04,@TF00001                                        0443
         AL    @10,@CF01019                                        0443
         LA    REG0,LLNAME-8(@04,@10)                              0443
*LDEL1:            GEN(DELETE EPLOC=(REG0));               /*@Z40GSBF*/
LDEL1    DELETE EPLOC=(REG0)
*                  RFY REG0 UNRSTD;                        /*@Z40GSBF*/
*                                                                  0445
*                  /*****************************************@Z40GSBF*/
*                  /*                                        @Z40GSBF*/
*                  /* FLAG MODULES THAT ARE DELETED WITH DEL IN FIRST
*                  /* CHAR OF MODULE NAME                    @Z40GSBF*/
*                  /*                                        @Z40GSBF*/
*                  /*****************************************@Z40GSBF*/
*                                                                  0446
*                  LLNAME(IX,1:3) = 'DEL';                 /*@Z40GSBF*/
         LR    @10,IX                                              0446
         SLA   @10,4                                               0446
         L     @04,P                                               0446
         ALR   @04,@10                                             0446
         AL    @04,@CF01019                                        0446
         MVC   LLNAME-8(3,@04),@CC00946                            0446
*                END;                                      /*@Z40GSBF*/
*              ELSE;                                       /*@Z40GSBF*/
@RF00440 DS    0H                                                  0449
*          END;                                            /*@Z40GSBF*/
         AL    IX,@CF00213                                         0449
         C     IX,@CF00330                                         0449
         BNH   @DL00439                                            0449
*          NXTPTR = LLNXTBLK;                              /*@Z40GSBF*/
         L     @10,P                                               0450
         L     NXTPTR,LLNXTBLK(,@10)                               0450
*          IF P ^= LLBLKPTR                                /*@Z40GSBF*/
*            THEN                                          /*@Z40GSBF*/
*                                                                  0451
         C     @10,LLBLKPTR                                        0451
         BE    @RF00451                                            0451
*            /***********************************************@Z40GSBF*/
*            /*                                              @Z40GSBF*/
*            /* FREE LLBLK THAT WERE GOTTEN                  @Z40GSBF*/
*            /*                                              @Z40GSBF*/
*            /***********************************************@Z40GSBF*/
*                                                                  0452
*              CALL IDCSAFS0(GDTTBL,P);                    /*@Z40GSBF*/
         LA    @10,GDTTBL                                          0452
         ST    @10,@AL00001                                        0452
         LA    @10,P                                               0452
         ST    @10,@AL00001+4                                      0452
         L     @15,GDTFSP                                          0452
         LA    @01,@AL00001                                        0452
         BALR  @14,@15                                             0452
*            ELSE;                                         /*@Z40GSBF*/
@RF00451 DS    0H                                                  0454
*          IF NXTPTR = 0                                   /*@Z40GSBF*/
*            THEN                                          /*@Z40GSBF*/
         LTR   NXTPTR,NXTPTR                                       0454
         BNZ   @RF00454                                            0454
*              CONTROL = ON;                               /*@Z40GSBF*/
         OI    CONTROL,B'10000000'                                 0455
*            ELSE                                          /*@Z40GSBF*/
*              P = NXTPTR;                                 /*@Z40GSBF*/
         B     @RC00454                                            0456
@RF00454 ST    NXTPTR,P                                            0456
*        END;                                              /*@Z40GSBF*/
@RC00454 DS    0H                                                  0457
@DE00438 TM    CONTROL,B'10000000'                                 0457
         BZ    @DL00438                                            0457
*        OLDERID2 = NEWERID2;                                      0458
         L     @10,GDTTR2                                          0458
         MVC   @TS00001(95),NEWERID2(@10)                          0458
         MVC   OLDERID2(95,@10),@TS00001                           0458
*        NEWID2 = 'SAD2';                                  /*@Z40GSBF*/
*                                                                  0459
         MVC   NEWID2(4,@10),@CC00947                              0459
*        /************************************************************/
*        /*                                                          */
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA03         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0460
*        REG0 = SA03SZ;                                            0460
         LH    REG0,SA03SZ                                         0460
*        REG1 = GDTSPR;                                            0461
         L     REG1,GDTSPR                                         0461
*LFREM3: GEN(FREEMAIN R,LV=(REG0),A=(REG1));               /*#YL026UK*/
*                                                                  0462
LFREM3   FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                          */
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA02         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0463
*        REG0 = ASIZE(2);                                          0463
         ICM   REG0,12,ASIZE+12                                    0463
         SRA   REG0,16                                             0463
*        REG1 = PTR1(2);                                           0464
         ICM   REG1,15,PTR1+12                                     0464
*LFREM4: GEN(FREEMAIN R,LV=(REG0),A=(REG1));                       0465
*                                                                  0465
LFREM4   FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                          */
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCTP01         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0466
*        REG0 = ASIZE(3);                                          0466
         ICM   REG0,12,ASIZE+24                                    0466
         SRA   REG0,16                                             0466
*        REG1 = PTR1(3);                                           0467
         ICM   REG1,15,PTR1+24                                     0467
*LFREM5: GEN(FREEMAIN R,LV=(REG0),A=(REG1));                       0468
*                                                                  0468
LFREM5   FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                          */
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCIO01         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0469
*        REG0 = ASIZE(1);                                          0469
         ICM   REG0,12,ASIZE                                       0469
         SRA   REG0,16                                             0469
*        REG1 = PTR1(1);                                           0470
         ICM   REG1,15,PTR1                                        0470
*LFREM6: GEN(FREEMAIN R,LV=(REG0),A=(REG1));                       0471
*                                                                  0471
LFREM6   FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                  @Y30LSDD*/
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA08 @Y30LSDD*/
*        /*                                                  @Y30LSDD*/
*        /************************************************************/
*                                                                  0472
*        REG0 = ASIZE(4);                                  /*@Y30LSDD*/
         ICM   REG0,12,ASIZE+36                                    0472
         SRA   REG0,16                                             0472
*        REG1 = PTR1(4);                                   /*@Y30LSDD*/
         ICM   REG1,15,PTR1+36                                     0473
*LFREM14: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@Y30LSMK*/
*                                                                  0474
LFREM14  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCIO05 @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0475
*        REG0 = ASIZE(5);                                  /*@Y30LSMK*/
         ICM   REG0,12,ASIZE+48                                    0475
         SRA   REG0,16                                             0475
*        REG1 = PTR1(5);                                   /*@Y30LSMK*/
         ICM   REG1,15,PTR1+48                                     0476
*LFREM15: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@Y30LSMK*/
*                                                                  0477
LFREM15  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA06 @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0478
*        REG0 = ASIZE(6);                                  /*@Y30LSMK*/
         ICM   REG0,12,ASIZE+60                                    0478
         SRA   REG0,16                                             0478
*        REG1 = PTR1(6);                                   /*@Y30LSMK*/
         ICM   REG1,15,PTR1+60                                     0479
*LFREM16: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@Y30LSMK*/
*                                                                  0480
LFREM16  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA07 @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0481
*        REG0 = ASIZE(7);                                  /*@Y30LSMK*/
         ICM   REG0,12,ASIZE+72                                    0481
         SRA   REG0,16                                             0481
*        REG1 = PTR1(7);                                   /*@Y30LSMK*/
         ICM   REG1,15,PTR1+72                                     0482
*LFREM17: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@Y30LSMK*/
*                                                                  0483
LFREM17  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA09 @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0484
*        REG0 = ASIZE(8);                                  /*@Y30LSMK*/
         ICM   REG0,12,ASIZE+84                                    0484
         SRA   REG0,16                                             0484
*        REG1 = PTR1(8);                                   /*@Y30LSMK*/
         ICM   REG1,15,PTR1+84                                     0485
*LFREM18: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@Y30LSMK*/
*                                                                  0486
LFREM18  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* FREE FROZEN AUTOMATIC STORAGE FOR MODULE IDCSA10 @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0487
*        REG0 = ASIZE(9);                                  /*@Y30LSMK*/
         ICM   REG0,12,ASIZE+96                                    0487
         SRA   REG0,16                                             0487
*        REG1 = PTR1(9);                                   /*@Y30LSMK*/
         ICM   REG1,15,PTR1+96                                     0488
*LFREM19: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@Y30LSMK*/
*                                                                  0489
LFREM19  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                          */
*        /* FREE STORAGE AREAS USED FOR PRINTING (PCT,BUFFERS,       */
*        /* MAIN TITLE LINE AND THE PRINT TRAIN TRANSLATE TABLE.     */
*        /*                                                          */
*        /************************************************************/
*                                                          /*@OZ10594*/
*        PCTPTR = GDTTPH;                                  /*@OZ10594*/
         L     PCTPTR,GDTTPH                                       0490
*                                                          /*@OZ10594*/
*        TEMPPTR = PCTBUF;        /* PRINT BUFFERS           @OZ10594*/
         L     TEMPPTR,PCTBUF(,PCTPTR)                             0491
*        TEMPPTR = TEMPPTR - 8;                            /*@OZ10594*/
         SL    TEMPPTR,@CF00173                                    0492
*        REG0 = GETSIZE;                                   /*@OZ10594*/
         L     REG0,GETSIZE(,TEMPPTR)                              0493
*        REG1 = TEMPPTR;                                   /*@OZ10594*/
         LR    REG1,TEMPPTR                                        0494
*LFREM20: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@OZ10594*/
LFREM20  FREEMAIN R,LV=(REG0),A=(REG1)
*                                                          /*@OZ10594*/
*        TEMPPTR = PCTTRP;        /* TRANSLATE TABLE         @OZ10594*/
         L     TEMPPTR,PCTTRP(,PCTPTR)                             0496
*        TEMPPTR = TEMPPTR - 8;                            /*@OZ10594*/
         SL    TEMPPTR,@CF00173                                    0497
*        REG0 = GETSIZE;                                   /*@OZ10594*/
         L     REG0,GETSIZE(,TEMPPTR)                              0498
*        REG1 = TEMPPTR;                                   /*@OZ10594*/
         LR    REG1,TEMPPTR                                        0499
*LFREM21: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@OZ10594*/
LFREM21  FREEMAIN R,LV=(REG0),A=(REG1)
*                                                          /*@OZ10594*/
*        TEMPPTR = PCTMLP;        /* MAIN TITLE LINE         @OZ10594*/
         L     TEMPPTR,PCTMLP(,PCTPTR)                             0501
*        TEMPPTR = TEMPPTR - 8;                            /*@OZ10594*/
         SL    TEMPPTR,@CF00173                                    0502
*        REG0 = GETSIZE;                                   /*@OZ10594*/
         L     REG0,GETSIZE(,TEMPPTR)                              0503
*        REG1 = TEMPPTR;                                   /*@OZ10594*/
         LR    REG1,TEMPPTR                                        0504
*LFREM22: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@OZ10594*/
*                                                                  0505
LFREM22  FREEMAIN R,LV=(REG0),A=(REG1)
*        TEMPPTR = PCTPTR;        /* PRINT CONTROL TABLE     @OZ10594*/
         LR    TEMPPTR,PCTPTR                                      0506
*        TEMPPTR = TEMPPTR - 8;                            /*@OZ10594*/
         SL    TEMPPTR,@CF00173                                    0507
*        REG0 = GETSIZE;                                   /*@OZ10594*/
         L     REG0,GETSIZE(,TEMPPTR)                              0508
*        REG1 = TEMPPTR;                                   /*@OZ10594*/
         LR    REG1,TEMPPTR                                        0509
*LFREM23: GEN(FREEMAIN R,LV=(REG0),A=(REG1));              /*@OZ10594*/
*                                                                  0510
LFREM23  FREEMAIN R,LV=(REG0),A=(REG1)
*        /************************************************************/
*        /*                                                          */
*        /* RETURN CONTROL TO THE AMS INVOKER ALONG WITH THE RETURN  */
*        /* CODE FROM AMS                                    #YL026UK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0511
*        RETURN CODE(TESTRC);                                      0511
         L     @13,4(,@13)                                         0511
         L     @00,@SIZDATD                                        0511
         LR    @01,@11                                             0511
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@05                                             0511
         L     @14,12(,@13)                                        0511
         LM    @00,@12,20(@13)                                     0511
         BR    @14                                                 0511
*        /************************************************************/
*        /************************************************************/
*        /*                                                          */
*        /* UABORT ROUTINE--REGISTER 15 CONTAINS A CODE INDICATING   */
*        /* THE REASON FOR ENTRANCE INTO THE UABORT ROUTINE.         */
*        /* THIS ROUTINE RECEIVES CONTROL WHEN TERMINATING TYPE      */
*        /* CONDITIONS ARE DETECTED WITHIN THE AMS SYSTEM.  CONTROL  */
*        /* PASSES FROM A ROUTINE WITHIN THE AMS SYSTEM      @YL026UK*/
*        /* DETECTING A TERMINATING TYPE CONDITION (UABORT CALL).    */
*        /*                                                          */
*        /************************************************************/
*        /************************************************************/
*                                                                  0512
*SAABT:                                                            0512
*                                                                  0512
*        /************************************************************/
*        /*                                                          */
*        /* RESTORE REGISTERS FROM SAVEAREA ORIGINALLY SET UP BY     */
*        /* THIS MOUDUE--REGISTER 13 WAS RESTORED BY THE CALLER      */
*        /* (UABORT CALL)                                    @YL026UK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0512
*        RESPECIFY (REG15) RSTD;                           /*@YL026UK*/
SAABT    DS    0H                                                  0513
*        GEN(LM    REG2,REG12,28(REG13));                          0513
         LM    REG2,REG12,28(REG13)
*        RESPECIFY (REG13) UNRSTD;                                 0514
*                                                                  0514
*        /************************************************************/
*        /*                                                          */
*        /* SAVE THE UABORT CODE TO BE USED LATER IF A       @Y30LSMK*/
*        /* STAE/ESTAE IS IN EFFECT.                         @Y30LSMK*/
*        /* MOVE WRITE TO PROGRAMMER LIST INTO DYNAMIC STORAGE AND   */
*        /* INSERT UABORT CODE (FROM REGISTER 15) INTO THIS LIST     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0515
*        RESPECIFY (REG5) RSTD;                            /*@Y30LSMK*/
*        REG5 = REG15;                                     /*@Y30LSMK*/
         LR    REG5,REG15                                          0516
*        WTPLIST = WTPGEN;                                         0517
         MVC   WTPLIST(32),WTPGEN                                  0517
*        GEN(CVD   REG15,DBLWORD);                                 0518
         CVD   REG15,DBLWORD
*        GEN(UNPK  DBLWORD(2),DBLWORD+6(2));                       0519
         UNPK  DBLWORD(2),DBLWORD+6(2)
*        GEN(MVZ   DBLWORD+1(1),DBLWORD);                          0520
         MVZ   DBLWORD+1(1),DBLWORD
*        WTPCODE1(1:2) = DBLWORD(1:2);                             0521
*                                                                  0521
         MVC   WTPCODE1(2),DBLWORD                                 0521
*        /************************************************************/
*        /*                                                          */
*        /* ISSUE WRITE TO PROGRAMMER MACRO                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0522
*        REG1 = ADDR(WTPLIST);                                     0522
         LA    REG1,WTPLIST                                        0522
*LWTO1:  GEN(WTO   MF=(E,(REG1)));                                 0523
LWTO1    WTO   MF=(E,(REG1))
*        RESPECIFY (REG1) UNRSTD;                                  0524
*                                                                  0524
*        /************************************************************/
*        /*                                                  #YL026UK*/
*        /* IF AMS WAS INVOKED VIA TSO (I.E., GETECT         #YL026UK*/
*        /* ADDRESSES THE TSO ENVIRONMENT CONTROL TABLE),    #YL026UK*/
*        /* THEN PRINT (PUTLINE MACRO) TO THE TSO TERMINAL   #YL026UK*/
*        /* THE SAME MESSAGE WRITTEN IN THE ABOVE WRITE TO   #YL026UK*/
*        /* PROGRAMMER                                       #YL026UK*/
*        /*                                                  #YL026UK*/
*        /************************************************************/
*                                                                  0525
*        IF GDTECT ^= 0                                            0525
*          THEN                                                    0525
*                                                                  0525
         L     @14,GDTECT                                          0525
         SLR   @10,@10                                             0525
         CR    @14,@10                                             0525
         BE    @RF00525                                            0525
*            /********************************************************/
*            /*                                              #YL026UK*/
*            /* AMS WAS INVOKED VIA TSO                      #YL026UK*/
*            /*                                              #YL026UK*/
*            /********************************************************/
*                                                                  0526
*            DO;                                           /*#YL026UK*/
*                                                                  0526
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* INITIALIZE THE HEADER WORD OF THE PUTLINE  #YL026UK*/
*              /* MESSAGE                                    #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0527
*              WTPLN = 28;                                 /*#YL026UK*/
         MVC   WTPLN(2),@CH00852                                   0527
*              WTPFLG = 0;                                 /*#YL026UK*/
*                                                                  0528
         STH   @10,WTPFLG                                          0528
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* MOVE PUTLINE MACRO LIST INTO DYNAMIC       #YL026UK*/
*              /* STORAGE                                    #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0529
*              PUTLPB = PLLIST;                            /*#YL026UK*/
*                                                                  0529
         MVC   PUTLPB(8),PLLIST                                    0529
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* INITIALIZE THE EVENT CONTROL BLOCK TO ZERO #YL026UK*/
*              /* AND INITIALIZE TSO INPUT OUTPUT PARAMETER  #YL026UK*/
*              /* LIST                                       #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0530
*              CPECB = 0;                                  /*#YL026UK*/
         ST    @10,CPECB                                           0530
*              UPTTSO = GDTUPT;                            /*#YL026UK*/
         L     @10,GDTUPT                                          0531
         ST    @10,UPTTSO                                          0531
*              ECTTSO = GDTECT;                            /*#YL026UK*/
         ST    @14,ECTTSO                                          0532
*              ECBTSO = ADDR(CPECB);                       /*#YL026UK*/
         LA    @14,CPECB                                           0533
         ST    @14,ECBTSO                                          0533
*              PLPBTSO = ADDR(PUTLPB);                     /*#YL026UK*/
*                                                                  0534
         LA    @14,PUTLPB                                          0534
         ST    @14,PLPBTSO                                         0534
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* INITIALIZE THE TSO OUTPUT LINE DESCRIPTOR  #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0535
*              TSOSEGNO = 1;                               /*#YL026UK*/
         MVC   TSOSEGNO(4),@CF00213                                0535
*              TSOSEGAD = ADDR(WTPLIST);                   /*#YL026UK*/
*                                                                  0536
         LA    @14,WTPLIST                                         0536
         ST    @14,TSOSEGAD                                        0536
*              /******************************************************/
*              /*                                            #YL026UK*/
*              /* ISSUE EXECUTE FORM OF TSO PUTLINE MACRO    #YL026UK*/
*              /*                                            #YL026UK*/
*              /******************************************************/
*                                                                  0537
*LPUTL1:       GEN;                                        /*#YL026UK*/
LPUTL1   DS    0H                                                  0537
         PUTLINE OUTPUT=(TSOOLD,TERM,SINGLE,INFOR),MF=(E,TSOIOPL)
*            END;                                          /*#YL026UK*/
*                                                                  0538
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* ISSUE A USER ABEND IF A STAE/ESTAE IS IN EFFECT. @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0539
*        IF SAHSTA ^= NULLPTR                                      0539
*          THEN                                                    0539
@RF00525 L     @14,SAHSTA                                          0539
         LTR   @14,@14                                             0539
         BZ    @RF00539                                            0539
*            DO;                                           /*@Y30LSMK*/
*LABEND1:      GEN(ABEND (REG5),DUMP,STEP);                /*@Y30LSMK*/
LABEND1  ABEND (REG5),DUMP,STEP
*              RESPECIFY (REG5) UNRSTD;                    /*@Y30LSMK*/
*            END;                                          /*@Y30LSMK*/
*                                                                  0543
*        /************************************************************/
*        /*                                                          */
*        /* MOVE DCB AND OPEN LISTS INTO DYNAMIC STORAGE AND OPEN    */
*        /* THE SNAP DCB FOR PROCESSING                              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0544
*        DUMPDCB = DCBFORM;                                        0544
@RF00539 MVC   DUMPDCB(90),DCBFORM                                 0544
*        OPENLIST = OPENGEN;                                       0545
         MVC   OPENLIST(4),OPENGEN                                 0545
*        OPENADDR = ADDR(DUMPDCB);                                 0546
         LA    @14,DUMPDCB                                         0546
         STCM  @14,7,OPENADDR                                      0546
*        RESPECIFY (REG1) RSTD;                                    0547
*        REG1 = ADDR(OPENLIST);                                    0548
         LA    REG1,OPENLIST                                       0548
*LOPEN1: GEN(OPEN  MF=(E,(REG1)));                                 0549
LOPEN1   OPEN  MF=(E,(REG1))
*        RESPECIFY (REG1) UNRSTD;                                  0550
*                                                                  0550
*        /************************************************************/
*        /*                                                          */
*        /* MOVE SNAP MACRO LIST INTO DYNAMIC STORAGE AND ISSUE THE  */
*        /* SNAP MACRO FOR A FULL REGION DUMP                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0551
*        SNAPLIST = SNAPGEN;                                       0551
         MVC   SNAPLIST(20),SNAPGEN                                0551
*        SNAPPTR = ADDR(DUMPDCB);                                  0552
         LA    @14,DUMPDCB                                         0552
         ST    @14,SNAPPTR                                         0552
*        RESPECIFY (REG1) RSTD;                                    0553
*        REG1 = ADDR(SNAPLIST);                                    0554
         LA    REG1,SNAPLIST                                       0554
*LSNAP1: GEN(SNAP  MF=(E,(REG1)));                                 0555
*                                                                  0555
LSNAP1   SNAP  MF=(E,(REG1))
*        /************************************************************/
*        /*                                                          */
*        /* CLOSE THE SNAP DCB                                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0556
*        SADCBACB = ADDR(DUMPDCB);                                 0556
         LA    @14,DUMPDCB                                         0556
         ST    @14,SADCBACB                                        0556
*        BLOCKFLG = ON;                                            0557
         OI    BLOCKFLG,B'10000000'                                0557
*        REG1 = ADDR(SADCBACB);                                    0558
         LA    REG1,SADCBACB                                       0558
*LCLOSE2:GEN(CLOSE MF=(E,(REG1)));                                 0559
LCLOSE2  CLOSE MF=(E,(REG1))
*        RESPECIFY (REG1) UNRSTD;                                  0560
*                                                                  0560
*        /************************************************************/
*        /*                                                          */
*        /* CLOSE ANY OPEN DATASETS FOUND FROM SCAN OF I/O ADAPTER   */
*        /* IOCS CHAIN                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0561
*        IF GDTIOH > NULLPTR                                       0561
*          THEN                                                    0561
         L     @14,GDTIOH                                          0561
         LTR   @14,@14                                             0561
         BNP   @RF00561                                            0561
*            DO;                                                   0562
*                                                                  0562
*              /******************************************************/
*              /*                                                    */
*              /* SET POINTER TO FIRST IOCS IN CHAIN                 */
*              /*                                                    */
*              /******************************************************/
*                                                                  0563
*              IOCSPTR = IODIOC;                                   0563
*                                                                  0563
         L     IOCSPTR,IODIOC(,@14)                                0563
*              /******************************************************/
*              /*                                                    */
*              /* FOR EACH IOCS THAT EXISTS, CHECK THE STATUS OF THE */
*              /* DATASET                                            */
*              /*                                                    */
*              /******************************************************/
*                                                                  0564
*CLOSEDO:      DO WHILE (IOCSPTR ^= NULLPTR);                      0564
*                                                                  0564
CLOSEDO  B     @DE00564                                            0564
@DL00564 DS    0H                                                  0565
*                /****************************************************/
*                /*                                                  */
*                /* CHECK IF DATASET IS OPEN                         */
*                /*                                                  */
*                /****************************************************/
*                                                                  0565
*                IF IOCFLGOP = '1'B                                0565
*                  THEN                                            0565
         L     @14,IOCEXT(,IOCSPTR)                                0565
         TM    IOCFLGOP(@14),B'00001000'                           0565
         BNO   @RF00565                                            0565
*                    DO;                                           0566
*                                                                  0566
*                      /**********************************************/
*                      /*                                            */
*                      /* CLOSE THE DATASET                          */
*                      /*                                            */
*                      /**********************************************/
*                                                                  0567
*                      SADCBACB = IOCCBA;                          0567
         L     @14,IOCCBA(,@14)                                    0567
         ST    @14,SADCBACB                                        0567
*                      BLOCKFLG = ON;                              0568
         OI    BLOCKFLG,B'10000000'                                0568
*                      RESPECIFY (REG1) RSTD;                      0569
*                      REG1 = ADDR(SADCBACB);                      0570
         LA    REG1,SADCBACB                                       0570
*LCLOSE1:              GEN(CLOSE MF=(E,(REG1)));                   0571
LCLOSE1  CLOSE MF=(E,(REG1))
*                      RESPECIFY (REG1) UNRSTD;                    0572
*                    END;                                          0573
*                                                                  0573
*                /****************************************************/
*                /*                                                  */
*                /* SET POINTER TO NEXT IOCS IN CHAIN                */
*                /*                                                  */
*                /****************************************************/
*                                                                  0574
*                IOCSPTR = IOCNIO;                                 0574
@RF00565 L     @14,IOCEXT(,IOCSPTR)                                0574
         L     @14,IOCNIO(,@14)                                    0574
         LR    IOCSPTR,@14                                         0574
*              END CLOSEDO;                                        0575
@DE00564 LTR   IOCSPTR,IOCSPTR                                     0575
         BNZ   @DL00564                                            0575
*            END;                                                  0576
*                                                                  0576
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* CALL UEXCP FOR ANY OPEN EXCP DATA SETS FOUND FROM THE   */
*        /* SCAN OF THE I/O ADAPTER EXCP CB CHAIN.           @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0577
*        DO WHILE IODIOX ^= NULLPTR;                       /*@Y30LSMK*/
@RF00561 B     @DE00577                                            0577
@DL00577 DS    0H                                                  0578
*          CALL IDCIO050 (GDTTBL,'CLOSE   ',IODIOX);       /*@Y30LSMK*/
         LA    @14,GDTTBL                                          0578
         ST    @14,@AL00001                                        0578
         LA    @14,@CC00993                                        0578
         ST    @14,@AL00001+4                                      0578
         L     @14,GDTIOH                                          0578
         LA    @14,IODIOX(,@14)                                    0578
         ST    @14,@AL00001+8                                      0578
         MVI   @AL00001+8,X'80'                                    0578
         L     @15,GDTEXP                                          0578
         LA    @01,@AL00001                                        0578
         BALR  @14,@15                                             0578
*        END;                                              /*@Y30LSMK*/
*                                                                  0579
@DE00577 L     @14,GDTIOH                                          0579
         L     @14,IODIOX(,@14)                                    0579
         LTR   @14,@14                                             0579
         BNZ   @DL00577                                            0579
*        /************************************************************/
*        /*                                                          */
*        /* RETURN CONTROL TO THE AMS INVOKER WITH A RETURN CODE     */
*        /* INDICATING AN ERROR CONDITION                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0580
*        TESTRC = 16;                                      /*@YL026UK*/
         LA    TESTRC,16                                           0580
*        RETURN CODE(TESTRC);                                      0581
         L     @13,4(,@13)                                         0581
         L     @00,@SIZDATD                                        0581
         LR    @01,@11                                             0581
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@05                                             0581
         L     @14,12(,@13)                                        0581
         LM    @00,@12,20(@13)                                     0581
         BR    @14                                                 0581
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - GETCORE                                */
*        /*                                                          */
*        /*  FUNCTION - THIS PROCEDURE GETS THE REQUESTED CORE AND   */
*        /*             PASSES BACK THE ADDRESS OF THIS CORE         */
*        /*                                                          */
*        /*  INPUT - PARAMETER LIST CONTAINING THE ADDRESS OF THE    */
*        /*          SIZE ARGUMENT AND THE ADDRESS OF A VARIABLE TO  */
*        /*          CONTAIN THE ADDRESS OF THE ACQUIRED CORE        */
*        /*                                                          */
*        /*  OUTPUT - THE ADDRESS OF THE ACQUIRED CORE               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0582
*GETCORE:  PROCEDURE(ZSIZE,ZPTR);                                  0582
*                                                                  0582
GETCORE  STM   @14,@12,@SA00002                                    0582
         MVC   @PC00002(8),0(@01)                                  0582
*        DCL ZSIZE FIXED(15);          /* SIZE OF REQUESTED AREA     */
*                                                                  0583
*        DCL ZPTR PTR(31);             /* VARIABLE TO CONTAIN THE    */
*                                      /* ACQUIRED CORE ADDRESS      */
*                                                                  0585
*        /* GETMAIN MACRO LIST                                       */
*        DCL 1 GETLIST CHAR(10) BDY(WORD),                         0585
*              2 GETSZ FIXED(31),      /* GETMAIN SIZE               */
*              2 GETPT PTR(31),        /* ADDRESS OF AREA WHERE ADDR */
*                                      /* OF GOTTEN CORE IS TO BE PUT*/
*              2 GETFLG CHAR(2);       /* GETMAIN FLAGS              */
*                                                                  0585
*        DCL LIST5 GENERATED LABEL;    /* GETMAIN MACRO LIST LABEL   */
*                                                                  0586
*        DCL GETGEN CHAR(10) DEFINED(LIST5);                       0587
*                                      /* GENERATED LIST FORM OF     */
*                                      /* GETMAIN MACRO              */
*                                                                  0588
*        /************************************************************/
*        /*                                                          */
*        /* ISSUE GETMAIN MACRO FOR REQUESTED CORE                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0588
*        GETLIST = GETGEN;                                         0588
         MVC   GETLIST(10),GETGEN                                  0588
*        GETSZ = ZSIZE;                                            0589
         L     @14,@PC00002                                        0589
         LH    @14,ZSIZE(,@14)                                     0589
         ST    @14,GETSZ                                           0589
*        GETPT = ADDR(ZPTR);                                       0590
         L     @14,@PC00002+4                                      0590
         ST    @14,GETPT                                           0590
*        RESPECIFY (REG1) RSTD;                                    0591
*        REG1 = ADDR(GETLIST);                                     0592
         LA    REG1,GETLIST                                        0592
*LGETM2: GEN(GETMAIN MF=(E,(REG1)));                               0593
LGETM2   GETMAIN MF=(E,(REG1))
*        RESPECIFY (REG1) UNRSTD;                                  0594
*                                                                  0594
*        /************************************************************/
*        /*                                                          */
*        /* CHECK RETURN CODE FROM CORE REQUEST                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0595
*        RESPECIFY (REG15) RSTD;                                   0595
*        IF REG15 ^= 0                                             0596
*          THEN                                                    0596
*                                                                  0596
         LTR   REG15,REG15                                         0596
         BZ    @RF00596                                            0596
*            DO;                                                   0597
*              RESPECIFY(REG13,REG14,REG15) RSTD;                  0598
*              REG15 = NOSPACE;                                    0599
         LA    REG15,28                                            0599
*              REG14 = GDTABT;                                     0600
         L     REG14,GDTABT                                        0600
*              REG13 = GDTABH;                                     0601
         L     REG13,GDTABH                                        0601
*              GEN(BR    REG14);                                   0602
         BR    REG14
*              RESPECIFY(REG13,REG14,REG15)UNRSTD;                 0603
*            END;                                                  0604
*        RESPECIFY (REG15) UNRSTD;                                 0605
*        END GETCORE;                                              0606
@EL00002 DS    0H                                                  0606
@EF00002 DS    0H                                                  0606
@ER00002 LM    @14,@12,@SA00002                                    0606
         BR    @14                                                 0606
*        /************************************************************/
*        /*                                                          */
*        /* LIST FORM OF WRITE TO PROGRAMMER (WTO ROUTCDE = 11)      */
*        /* MACRO--MOVED INTO A DYNAMIC AREA FOR USE IN UABORT       */
*        /* ROUTINE--PART OF LIST AREA IS ALTERED BEFORE USE         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0607
*        GENERATE DATA;                                            0607
*                                                                  0607
*        /************************************************************/
*        /*                                                          */
*        /* FULL REGION (SNAP) DUMP DCB - THIS IS COPIED INTO A      */
*        /* DYNAMIC AREA FOR USE                                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0608
*        GENERATE DATA;                                            0608
*                                                                  0608
*        /************************************************************/
*        /*                                                          */
*        /* LIST FORM OF OPEN MACRO--MOVED INTO A DYNAMIC AREA FOR   */
*        /* USE WITH SNAP                                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0609
*        GENERATE DATA;                                            0609
*                                                                  0609
*        /************************************************************/
*        /*                                                          */
*        /* LIST FORM OF SNAP MACRO--MOVED INTO A DYNAMIC AREA FOR   */
*        /* USE                                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0610
*        GENERATE DATA;                                            0610
*                                                                  0610
*        /************************************************************/
*        /*                                                          */
*        /* LIST FORM OF GETMAIN MACRO--MOVED INTO A DYNAMIC AREA    */
*        /* FOR USE                                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0611
*        GENERATE DATA;                                            0611
*                                                                  0611
*        /************************************************************/
*        /*                                                  @YL026UK*/
*        /* LIST FORM OF THE TSO PUTLINE MACRO--MOVED INTO A @YL026UK*/
*        /* DYNAMIC AREA FOR USE                             @YL026UK*/
*        /*                                                  @YL026UK*/
*        /************************************************************/
*                                                                  0612
*        GENERATE DATA;                                    /*@YL026UK*/
*                                                                  0612
*        /************************************************************/
*        /*                                                          */
*        /* DECLARATIONS ALLOWING ACCESS TO OTHER MODULE'S           */
*        /* AUTOMATIC STORAGE SIZE VALUE                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0613
*        GENERATE DATA;                                            0613
*        END IDCSA01                                               0614
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF05 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF09 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF40 )                                        *
*;                                                                 0614
@EL00001 L     @13,4(,@13)                                         0614
@EF00001 L     @00,@SIZDATD                                        0614
         LR    @01,@11                                             0614
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0614
         BR    @14                                                 0614
@DATA    DS    0H
@CH00852 DC    H'28'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@PC00002 DS    2F
@AL00001 DS    3A
@TF00001 DS    F
IDCSA01  CSECT
         DS    0F
@CF00213 DC    F'1'
@CF00173 DC    F'8'
@CF00330 DC    F'24'
@CF01019 DC    F'-8'
@CF01022 DC    F'-4'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
SADCBACB DS    AL4
         ORG   SADCBACB
BLOCKFLG DS    BL1
         ORG   SADCBACB+4
CPECB    DS    F
P        DS    A
LISTPTR  DS    A
SA03SZ   DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
         DS    CL4
GDTTBL   DS    CL288
         ORG   GDTTBL
GDTHDR   DS    CL4
GDTPRM   DS    AL4
GDTTR1   DS    AL4
GDTTR2   DS    AL4
GDTDBH   DS    AL4
GDTSTH   DS    AL4
GDTRIH   DS    AL4
GDTTPH   DS    AL4
GDTSAH   DS    AL4
GDTIOH   DS    AL4
GDTDBG   DS    AL4
GDTSTC   DS    AL4
GDTPRT   DS    AL4
GDTESS   DS    AL4
GDTESA   DS    AL4
GDTRST   DS    AL4
GDTRES   DS    AL4
GDTCAL   DS    AL4
GDTGSP   DS    AL4
GDTFSP   DS    AL4
GDTGPL   DS    AL4
GDTFPL   DS    AL4
GDTLOD   DS    AL4
GDTDEL   DS    AL4
GDTPRL   DS    AL4
GDTEPL   DS    AL4
GDTTIM   DS    AL4
GDTIIO   DS    AL4
GDTTIO   DS    AL4
GDTRIP   DS    AL4
GDTTOH   DS    AL4
GDTOPN   DS    AL4
GDTCLS   DS    AL4
GDTGET   DS    AL4
GDTPUT   DS    AL4
GDTPOS   DS    AL4
GDTCPY   DS    AL4
GDTCAT   DS    AL4
GDTABT   DS    AL4
GDTABH   DS    AL4
@NM00001 DS    AL4
GDTSNP   DS    AL4
GDTSPR   DS    AL4
GDTVFY   DS    AL4
GDTCMB   DS    AL4
GDTUPT   DS    AL4
GDTPSB   DS    AL4
GDTECT   DS    AL4
GDTUID   DS    AL4
GDTPMT   DS    AL4
GDTCIR   DS    AL4
GDTLNK   DS    AL4
GDTALC   DS    AL4
GDTDLC   DS    AL4
GDTQAL   DS    AL4
GDTSTW   DS    AL4
GDTSSC   DS    AL4
GDTENQ   DS    AL4
GDTRSV   DS    AL4
GDTDEQ   DS    AL4
GDTSFO   DS    AL4
GDTWTO   DS    AL4
GDTSCR   DS    AL4
GDTUNT   DS    AL4
GDTRCT   DS    AL4
GDTIFO   DS    AL4
GDTEXP   DS    AL4
GDTSTA   DS    AL4
GDTERR   DS    AL4
GDTUNC   DS    AL4
GDTLOC   DS    AL4
GDTRCK   DS    AL4
         ORG   GDTTBL+288
@NM00049 DS    CL108
         ORG   @NM00049
HDR1     DS    CL8
INTER    DS    CL100
         ORG   @NM00049+108
@NM00050 DS    CL108
         ORG   @NM00050
HDR2     DS    CL8
INTRA    DS    CL100
         ORG   @NM00050+108
SAHIST   DS    CL20
         ORG   SAHIST
GPFIRST  DS    AL4
GPLAST   DS    AL4
AUTOPTR  DS    AL4
SAHSTA   DS    AL4
LLBLKPTR DS    AL4
         ORG   SAHIST+20
AUTOTBL  DS    CL108
         ORG   AUTOTBL
AUTOARAY DS    CL12
         ORG   AUTOARAY+0
AREAID   DS    CL4
STATUS   DS    FL2
ASIZE    DS    FL2
PTR1     DS    AL4
         ORG   AUTOTBL+108
WTPLIST  DS    CL32
         ORG   WTPLIST
WTPLN    DS    FL2
WTPFLG   DS    FL2
WTPTEXT1 DS    CL21
WTPCODE1 DS    CL2
@NM00051 DS    CL1
WTPDESC  DS    FL2
WTPROUT  DS    FL2
         ORG   WTPLIST+32
OPENLIST DS    CL4
         ORG   OPENLIST
OPENOPT  DS    CL1
OPENADDR DS    AL3
         ORG   OPENLIST+4
SNAPLIST DS    CL20
         ORG   SNAPLIST
SNAPOPT  DS    CL8
SNAPPTR  DS    AL4
SNAPTCB  DS    AL4
SNAPLST  DS    AL4
         ORG   SNAPLIST+20
PUTLPB   DS    CL8
DUMPDCB  DS    CL90
         DS    CL6
DBLWORD  DS    CL8
IOL      DS    CL16
         ORG   IOL
ION      DS    FL4
IODN     DS    AL4
IOMOD    DS    AL4
IODATUM  DS    AL4
         ORG   IOL+16
TSOIPL   DS    CL16
         ORG   TSOIPL
TSOOP    DS    AL4
TSODN    DS    AL4
TSOPG    DS    AL4
TSOIO    DS    AL4
         ORG   TSOIO
ENDFLG   DS    BL1
         ORG   TSOIPL+16
TSOIOPL  DS    CL16
         ORG   TSOIOPL
UPTTSO   DS    AL4
ECTTSO   DS    AL4
ECBTSO   DS    AL4
PLPBTSO  DS    AL4
         ORG   TSOIOPL+16
TSOOLD   DS    CL8
         ORG   TSOOLD
TSOSEGNO DS    FL4
TSOSEGAD DS    AL4
         ORG   TSOOLD+8
LLAREA   DS    CL392
CONTROL  DS    BL1
         DS    CL3
GETLIST  DS    CL10
         ORG   GETLIST
GETSZ    DS    FL4
GETPT    DS    AL4
GETFLG   DS    CL2
         ORG   GETLIST+10
IDCSA01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00692 DC    V(IDCTPPR)
@CV00693 DC    V(IDCTPES)
@CV00694 DC    V(IDCTPEA)
@CV00695 DC    V(IDCTPRS)
@CV00696 DC    V(IDCTPRE)
@CV00697 DC    V(IDCSACL)
@CV00698 DC    V(IDCSAGS)
@CV00699 DC    V(IDCSAFS)
@CV00700 DC    V(IDCSAGP)
@CV00701 DC    V(IDCSAFP)
@CV00702 DC    V(IDCSALD)
@CV00703 DC    V(IDCSADE)
@CV00704 DC    V(IDCSAPR)
@CV00705 DC    V(IDCSAEP)
@CV00706 DC    V(IDCSATI)
@CV00707 DC    V(IDCIOIT)
@CV00708 DC    V(IDCIOTM)
@CV00709 DC    V(IDCIOOP)
@CV00710 DC    V(IDCIOCL)
@CV00711 DC    V(IDCIOGT)
@CV00712 DC    V(IDCIOPT)
@CV00713 DC    V(IDCIOPO)
@CV00714 DC    V(IDCIOCO)
@CV00715 DC    V(IDCIOVY)
@CV00716 DC    V(IDCSACA)
@CV00717 DC    V(IDCSASN)
@CV00718 DC    V(IDCSAID)
@CV00719 DC    V(IDCSAPT)
@CV00720 DC    V(IDCSACR)
@CV00721 DC    V(IDCIOST)
@CV00722 DC    V(IDCSAAL)
@CV00723 DC    V(IDCSADL)
@CV00724 DC    V(IDCSAQL)
@CV00725 DC    V(IDCSALK)
@CV00726 DC    V(IDCSASS)
@CV00727 DC    V(IDCSANQ)
@CV00728 DC    V(IDCSARV)
@CV00729 DC    V(IDCSADQ)
@CV00730 DC    V(IDCSASI)
@CV00731 DC    V(IDCSAWO)
@CV00732 DC    V(IDCSASC)
@CV00733 DC    V(IDCSA06)
@CV00734 DC    V(IDCSARC)
@CV00735 DC    V(IDCIOSI)
@CV00736 DC    V(IDCIO05)
@CV00737 DC    V(IDCSAST)
@CV00738 DC    V(IDCTPER)
@CV00739 DC    V(IDCSAUC)
@CV00740 DC    V(IDCSALC)
@CV00741 DC    V(IDCSARK)
@CV00749 DC    V(IDCEX01)
         DS    0D
@CC00939 DC    C' INTER  '
@CC00940 DC    C' INTRA  '
@CC00993 DC    C'CLOSE   '
@CC00926 DC    C'GDT '
@CC00929 DC    C'IO01'
@CC00930 DC    C'SA02'
@CC00931 DC    C'TP01'
@CC00932 DC    C'SA08'
@CC00933 DC    C'IO05'
@CC00934 DC    C'SA06'
@CC00935 DC    C'SA07'
@CC00936 DC    C'SA09'
@CC00937 DC    C'SA10'
@CC00943 DC    C'SAD1'
@CC00947 DC    C'SAD2'
@CC00946 DC    C'DEL'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
FIXAREA  DS    CL200
         ORG   FIXAREA
@NM00048 DC    200X'00'
         ORG   FIXAREA+200
TEXT2    DC    CL17' COMPLETION CODE '
TEXT3    DC    CL6' AREA '
READER2  DC    CL8'IDCRI04'
ALTIO    DC    CL10'DDSYSPRINT'
READER1  DC    CL8'IDCRI01'
MODID    DC    CL4'SA01'
@DATD    DSECT
IDCSA01  CSECT
LIST1    WTO   'IDC4999I UABORT CODE    ',ROUTCDE=11,MF=L
@DATD    DSECT
IDCSA01  CSECT
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=(W),BLKSIZE=1632,LRECL=125,DDNAX
               ME=AMSDUMP
@DATD    DSECT
IDCSA01  CSECT
LIST3    OPEN  (SNAPDCB,(OUTPUT)),MF=L
@DATD    DSECT
IDCSA01  CSECT
LIST4    SNAP  DCB=SNAPDCB,SDATA=(CB,Q),PDATA=(ALL),ID=(00),MF=L
@DATD    DSECT
IDCSA01  CSECT
LIST5    GETMAIN EC,LV=8,A=LIST5,MF=L
@DATD    DSECT
IDCSA01  CSECT
LIST6    PUTLINE TERMPUT=(EDIT,WAIT,HOLD,NOBREAK),MF=L
@DATD    DSECT
IDCSA01  CSECT
         EXTRN IDCTPS1,IDCIOS1,IDCIOS5,IDCSAS2,IDCSAS3,IDCSAS6 @Y30LSMK
         EXTRN IDCSAS7,IDCSAS8,IDCSAS9,IDCSAS10                @Y30LSMK
TP01AU   DC    A(IDCTPS1)
IO01AU   DC    A(IDCIOS1)
IO05AU   DC    A(IDCIOS5)                                      @Y30LSMK
SA02AU   DC    A(IDCSAS2)
SA03AU   DC    A(IDCSAS3)
SA06AU   DC    A(IDCSAS6)                                      @Y30LSMK
SA07AU   DC    A(IDCSAS7)                                      @Y30LSMK
SA08AU   DC    A(IDCSAS8)                                      @Y30LSDD
SA09AU   DC    A(IDCSAS9)                                      @Y30LSMK
SA10AU   DC    A(IDCSAS10)                                     @Y30LSMK
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCSA01  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PCTPTR   EQU   @04
TEMPPTR  EQU   @03
IX       EQU   @03
NXTPTR   EQU   @02
I        EQU   @02
TSOFLAG  EQU   @03
IOCSPTR  EQU   @04
TESTRC   EQU   @05
RTNREG   EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG4     EQU   @04
REG5     EQU   @05
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
SAVEPTR  EQU   @13
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG2     EQU   @02
REG3     EQU   @03
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSAFS0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
NEWID1   EQU   TRACE1+95
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
RACFAGL  EQU   0
RACFFLG1 EQU   RACFAGL
RACFFLG2 EQU   RACFAGL+1
RACFFLG3 EQU   RACFAGL+2
RACFFLG4 EQU   RACFAGL+3
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00017 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIO050 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
IOCEXT   EQU   IOCSTR+64
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
DMPITM   EQU   0
DMPARY   EQU   0
IODATA   EQU   0
IODIOC   EQU   IODATA
IODSID   EQU   IODATA+16
IODIOX   EQU   IODATA+52
IOCSEX   EQU   0
IOCCBA   EQU   IOCSEX
IOCRPL   EQU   IOCSEX+4
IOCXAD   EQU   IOCSEX+16
IOCXPM   EQU   IOCSEX+20
IOCNIO   EQU   IOCSEX+24
IOCFLG   EQU   IOCSEX+32
IOCFLGOP EQU   IOCFLG
IOCDEV   EQU   IOCSEX+33
IOCINF   EQU   IOCSEX+34
IOCMOD   EQU   IOCSEX+35
IOCDLM   EQU   IOCSEX+36
IOCRCV   EQU   IOCSEX+44
LLBLK    EQU   0
LLHDR    EQU   LLBLK
LLFSTSLT EQU   LLHDR
LLNXTBLK EQU   LLHDR+4
LLSLOT   EQU   LLBLK+8
LLNAME   EQU   LLSLOT
LLNXTSLT EQU   LLNAME
LLNOMOD  EQU   LLNAME+4
TSOCB    EQU   0
TSOUPT   EQU   0
TSOPSCB  EQU   0
TSOECT   EQU   0
BACKSAVE EQU   0
FWDSAVE  EQU   0
GETSIZE  EQU   0
PCTTAB   EQU   0
PCTFLG   EQU   PCTTAB+4
PCTACT   EQU   PCTTAB+12
PCTAPL   EQU   PCTACT+4
PCTSTD   EQU   PCTTAB+20
PCTSPL   EQU   PCTSTD+4
PCTALT   EQU   PCTTAB+28
PCTLPL   EQU   PCTALT+4
PCTMLP   EQU   PCTTAB+56
PCTTRP   EQU   PCTTAB+64
PCTBUF   EQU   PCTTAB+104
AMSTP011 EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCDB010 EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAEP0 EQU   0
IDCSAFP0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARK0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
IDSAVE   EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
CPPL     EQU   0
ZSIZE    EQU   0
ZPTR     EQU   0
WTPGEN   EQU   LIST1
OPENGEN  EQU   LIST3
SNAPGEN  EQU   LIST4
PLLIST   EQU   LIST6
DCBFORM  EQU   SNAPDCB
GETGEN   EQU   LIST5
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PCTBNL   EQU   PCTTAB+108
PCTLNM   EQU   PCTTAB+102
PCTFLN   EQU   PCTTAB+100
PCTLDL   EQU   PCTTAB+98
PCTFDL   EQU   PCTTAB+96
PCTPNI   EQU   PCTTAB+94
PCTDSC   EQU   PCTTAB+92
PCTPPD   EQU   PCTTAB+90
PCTAPC   EQU   PCTTAB+88
PCTPMN   EQU   PCTTAB+86
PCTPNL   EQU   PCTTAB+84
PCTHSC   EQU   PCTTAB+83
PCTHLC   EQU   PCTTAB+82
PCTFLC   EQU   PCTTAB+80
PCTFLP   EQU   PCTTAB+76
PCTSLC   EQU   PCTTAB+74
PCTMLC   EQU   PCTTAB+72
PCTPLW   EQU   PCTTAB+68
PCTSLP   EQU   PCTTAB+60
PCTAHP   EQU   PCTTAB+52
PCTSQP   EQU   PCTTAB+48
PCTSME   EQU   PCTTAB+44
PCTSTM   EQU   PCTTAB+36
PCTANL   EQU   PCTLPL+2
PCTAPN   EQU   PCTLPL
PCTIOP   EQU   PCTALT
PCTSNL   EQU   PCTSPL+2
PCTSPN   EQU   PCTSPL
PCTIOS   EQU   PCTSTD
PCTNLI   EQU   PCTAPL+2
PCTCPN   EQU   PCTAPL
PCTIOC   EQU   PCTACT
PCTSPP   EQU   PCTTAB+8
@NM00052 EQU   PCTFLG
PCTAPF   EQU   PCTFLG
PCTLLM   EQU   PCTFLG
PCTHAF   EQU   PCTFLG
PCTH2F   EQU   PCTFLG
PCTH1F   EQU   PCTFLG
PCTIDN   EQU   PCTTAB
LLMODSZ  EQU   LLSLOT+13
LLUSECTR EQU   LLSLOT+12
LLADDR   EQU   LLSLOT+8
@NM00047 EQU   IOCRCV
IOCRCVRA EQU   IOCRCV
IOCRCVXM EQU   IOCRCV
IOCVLN   EQU   IOCSEX+42
IOCDNM   EQU   IOCSEX+40
IOCDDN   EQU   IOCDLM
IOCMODEX EQU   IOCMOD
IOCMODRP EQU   IOCMOD
IOCMODXM EQU   IOCMOD
IOCMODUB EQU   IOCMOD
IOCMODRG EQU   IOCMOD
IOCMODDY EQU   IOCMOD
IOCMODRR EQU   IOCMOD
IOCMODPD EQU   IOCMOD
IOCINFR1 EQU   IOCINF
IOCINFCT EQU   IOCINF
IOCINFDO EQU   IOCINF
IOCINFAC EQU   IOCINF
IOCINFQX EQU   IOCINF
IOCINFND EQU   IOCINF
IOCINFAE EQU   IOCINF
IOCINFPT EQU   IOCINF
@NM00046 EQU   IOCDEV
IOCDEVUR EQU   IOCDEV
IOCDEVMT EQU   IOCDEV
IOCDEVDA EQU   IOCDEV
@NM00045 EQU   IOCFLG
IOCFLGSP EQU   IOCFLG
IOCFLGOE EQU   IOCFLG
IOCFLGIO EQU   IOCFLG
IOCFLGEF EQU   IOCFLG
IOCFLGDF EQU   IOCFLG
IOCFLGEX EQU   IOCFLG
IOCSID   EQU   IOCSEX+28
@NM00044 EQU   IOCXPM+2
IOCEXL   EQU   IOCXPM
IOCEXA   EQU   IOCXAD
IOCWKA   EQU   IOCSEX+12
IOCLRP   EQU   IOCSEX+10
IOCCBL   EQU   IOCSEX+8
IOCDEC   EQU   IOCRPL
@NM00043 EQU   IODATA+64
IODAEI   EQU   IODATA+60
@NM00042 EQU   IODATA+56
IODOCS   EQU   IODATA+48
IODICS   EQU   IODATA+44
IODOSO   EQU   IODATA+40
IODOSS   EQU   IODATA+36
IODEOD   EQU   IODATA+32
@NM00041 EQU   IODATA+30
@NM00040 EQU   IODATA+28
IODOEV   EQU   IODATA+24
IODIEV   EQU   IODATA+20
IODINC   EQU   IODSID+2
IODMID   EQU   IODSID
IODXTN   EQU   IODATA+12
IODADD   EQU   IODATA+8
IODMSG   EQU   IODATA+4
@NM00039 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00038 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00037 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00036 EQU   ERCNVTAB+4
@NM00035 EQU   ERCNVTAB+3
@NM00034 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00033 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00032 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00031 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00030 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00029 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00028 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00027 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00026 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00025 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00024 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00023 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00022 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00021 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00020 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00019 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00018 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00017+1
UNITCHA  EQU   @NM00017
UNITUCB  EQU   UNITABL
RACFVOLS EQU   RACFAGL+16
RACFCLN  EQU   RACFAGL+12
RACFPROF EQU   RACFAGL+8
RACFENT  EQU   RACFAGL+4
@NM00016 EQU   RACFFLG4
@NM00015 EQU   RACFFLG3
RACFPRF  EQU   RACFFLG3
@NM00014 EQU   RACFFLG3
@NM00013 EQU   RACFFLG2
RACFTRD  EQU   RACFFLG2
RACFTUPD EQU   RACFFLG2
RACFTCTL EQU   RACFFLG2
@NM00012 EQU   RACFFLG2
RACFTALT EQU   RACFFLG2
RACFCSA  EQU   RACFFLG1
RACFLOGN EQU   RACFFLG1
RACFLOGF EQU   RACFFLG1
@NM00011 EQU   RACFFLG1
RACFDSTV EQU   RACFFLG1
@NM00010 EQU   RACFFLG1
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00596 EQU   @EL00002
@ENDDATA EQU   *
         END   IDCSA01,(C'PLS0030',0701,77201)
