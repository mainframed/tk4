         TITLE '***********  IDCSA05  SYSTEM ADAPTER UTIME MODULE  *****
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCSA05  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCSA05   78.145'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(20),0(@01)                                 0002
*        /************************************************************/
*        /*                                                          */
*        /* SET BASE FOR THE GLOBAL DATA TABLE                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0158
*        GDTPR = ADDR(GDTTBLX);                                    0158
         L     GDTPR,@PC00001                                      0158
*        OLDERID2 = NEWERID2;                                      0159
         L     @10,GDTTR2(,GDTPR)                                  0159
         MVC   @TS00001(95),NEWERID2(@10)                          0159
         MVC   OLDERID2(95,@10),@TS00001                           0159
*        NEWID2 = 'SA05';                                          0160
*                                                                  0160
         MVC   NEWID2(4,@10),@CC00590                              0160
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE DAYS PER MONTH AREA                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0161
*        MONTO = MONFROM;                                          0161
*                                                                  0161
         MVC   MONTO(11),MONFROM                                   0161
*        /************************************************************/
*        /*                                                          */
*        /* IF A FOURTH ARGUMENT IS SPECIFIED, BUT THIS ARGUMENT IS  */
*        /* NOT 'FORMAT', 'HSECOND', OR 'CLOCK', THEN CALL   @Y30LSMK*/
*        /* THE UABORT ROUTINE.                              @Y30LSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0162
*        IF TILN = 4 & TIFORM ^= FORMAT & TIFORM ^= HSECOND &      0162
*          TIFORM ^= CLOCK                                 /*@Y30LSMK*/
*          THEN                                                    0162
*                                                                  0162
         L     @10,@PC00001+16                                     0162
         CLI   TILN(@10),4                                         0162
         BNE   @RF00162                                            0162
         L     @10,@PC00001+12                                     0162
         CLC   TIFORM(4,@10),FORMAT                                0162
         BE    @RF00162                                            0162
         CLC   TIFORM(4,@10),HSECOND                               0162
         BE    @RF00162                                            0162
         CLC   TIFORM(4,@10),CLOCK                                 0162
         BE    @RF00162                                            0162
*            DO;                                                   0163
*              RESPECIFY(REG13,REG14,REG15) RSTD;                  0164
*              REG15 = ARGERR;                                     0165
         LA    REG15,40                                            0165
*              REG14 = GDTABT;                                     0166
         L     REG14,GDTABT(,GDTPR)                                0166
*              REG13 = GDTABH;                                     0167
         L     REG13,GDTABH(,GDTPR)                                0167
*              GEN(BR    REG14);                                   0168
         BR    REG14
*              RESPECIFY(REG13,REG14,REG15)UNRSTD;                 0169
*            END;                                                  0170
*                                                                  0170
*        /************************************************************/
*        /*                                                          */
*        /* CHECK IF DATE AND TIME IS TO BE FORMATTED                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0171
*        IF TILN = 4 & TIFORM = FORMAT                     /*@ZA16002*/
*          THEN                                                    0171
@RF00162 L     @10,@PC00001+16                                     0171
         CLI   TILN(@10),4                                         0171
         BNE   @RF00171                                            0171
         L     @10,@PC00001+12                                     0171
         CLC   TIFORM(4,@10),FORMAT                                0171
         BNE   @RF00171                                            0171
*            DO;                                                   0172
*                                                                  0172
*              /******************************************************/
*              /*                                                    */
*              /* OBTAIN PACKED DECIMAL DATE AND TIME BY ISSUING     */
*              /* THE DEC FORM OF THE TIME MACRO.  THEN UNPACK THE   */
*              /* TIME INTO THE VARIABLE TIME                        */
*              /*                                                    */
*              /******************************************************/
*                                                                  0173
*              RESPECIFY (REG0,REG1) RSTD;                 /*@Y30LSMK*/
*LTIME1:       GEN(TIME  DEC);                                     0174
LTIME1   TIME  DEC
*              GEN(ST    REG0,TIME);                               0175
         ST    REG0,TIME
*              GEN(UNPK  TIME(9),TIME(4));                         0176
*                                                                  0176
         UNPK  TIME(9),TIME(4)
*              /******************************************************/
*              /*                                                    */
*              /* SHIFT HOUR VALUE LEFT AND INSERT COLON AFTER HOUR  */
*              /* VALUE,                                             */
*              /* SHIFT MINUTE VALUE LEFT AND INSERT COLON AFTER     */
*              /* MINUTE VALUE,                                      */
*              /* INSERT FORMATTED TIME INTO TITIME FOR THE USER     */
*              /*                                                    */
*              /******************************************************/
*                                                                  0177
*              TIME(1:2)=TIME(3:4);                                0177
         MVC   TIME(2),TIME+2                                      0177
*              TIME(3)=':';                                        0178
*                                                                  0178
         MVI   TIME+2,C':'                                         0178
*              TIME(4:5)=TIME(5:6);                                0179
         MVC   @TS00001(2),TIME+4                                  0179
         MVC   TIME+3(2),@TS00001                                  0179
*              TIME(6)=':';                                        0180
*                                                                  0180
         MVI   TIME+5,C':'                                         0180
*              TITIME(1:8)=TIME(1:8);                              0181
*                                                                  0181
         L     @10,@PC00001+4                                      0181
         MVC   TITIME(8,@10),TIME                                  0181
*              /******************************************************/
*              /*                                                    */
*              /* CONVERT PACKED DECIMAL YEAR AND DAY (00YYDDDF) TO  */
*              /* BINARY, F BEING THE SIGN CHARACTER                 */
*              /*                                                    */
*              /******************************************************/
*                                                                  0182
*              GEN(SR    REG0,REG0);                               0182
         SR    REG0,REG0
*              GEN(ST    REG0,DBLWORD);                            0183
         ST    REG0,DBLWORD
*              GEN(ST    REG1,DBLWORD+4);                          0184
         ST    REG1,DBLWORD+4
*              GEN(CVB   REG1,DBLWORD);                            0185
*                                                                  0185
         CVB   REG1,DBLWORD
*              /******************************************************/
*              /*                                                    */
*              /* SEPARATE THE YEAR AND DAY, STORE BINARY DAY NUMBER */
*              /* IN DAY, STORE BINARY YEAR NUMBER IN YEAR           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0186
*              GEN(D     REG0,=F'1000');                           0186
         D     REG0,=F'1000'
*              GEN(STH   REG0,DAY);                                0187
         STH   REG0,DAY
*              GEN(STH   REG1,YEAR);                               0188
         STH   REG1,YEAR
*              RESPECIFY (REG0,REG1) UNRSTD;                       0189
*                                                                  0189
*              /******************************************************/
*              /******************************************************/
*              /*                                                    */
*              /* USE CALENDAR CONVERSION ALGORITHM TO OBTAIN DATE IN*/
*              /* DAY, MONTH, AND YEAR--PUNT IN YEAR 2000            */
*              /*                                                    */
*              /******************************************************/
*              /******************************************************/
*                                                                  0190
*              /******************************************************/
*              /*                                                    */
*              /* IF YEAR IS A LEAP YEAR, THEN REINITIALIZE THE MONTH*/
*              /* FEBRUARY TO 29 DAYS                                */
*              /*                                                    */
*              /******************************************************/
*                                                                  0190
*              IF YEAR//4 = 0                                      0190
*                THEN                                              0190
         LH    @00,YEAR                                            0190
         SRDA  @00,32                                              0190
         D     @00,@CF00044                                        0190
         LTR   @00,@00                                             0190
         BNZ   @RF00190                                            0190
*                  MTHS(2) = 29;                                   0191
*                                                                  0191
         MVI   MTHS+1,X'1D'                                        0191
*              DOCNTRL = ON;                                       0192
*                                                                  0192
@RF00190 OI    DOCNTRL,B'10000000'                                 0192
*              /******************************************************/
*              /*                                                    */
*              /* CALCULATE DAY AND MONTH                            */
*              /*                                                    */
*              /******************************************************/
*                                                                  0193
*TIDO:         DO I=1 TO 11 WHILE(DOCNTRL = ON);                   0193
TIDO     LA    I,1                                                 0193
@DL00193 TM    DOCNTRL,B'10000000'                                 0193
         BNO   @DC00193                                            0193
*                DAY = DAY - MTHS(I);                              0194
*                                                                  0194
         LH    @10,DAY                                             0194
         SLR   @08,@08                                             0194
         IC    @08,MTHS-1(I)                                       0194
         SLR   @10,@08                                             0194
         STH   @10,DAY                                             0194
*                /****************************************************/
*                /*                                                  */
*                /* CHECK IF DAY VALUE LESS THAN OR EQUAL ZERO       */
*                /*                                                  */
*                /****************************************************/
*                                                                  0195
*                IF DAY <= 0                                       0195
*                  THEN                                            0195
         LTR   @10,@10                                             0195
         BP    @RF00195                                            0195
*                    DOCNTRL = OFF;                                0196
         NI    DOCNTRL,B'01111111'                                 0196
*              END TIDO;                                           0197
*                                                                  0197
@RF00195 AL    I,@CF00221                                          0197
         C     I,@CF00598                                          0197
         BNH   @DL00193                                            0197
@DC00193 DS    0H                                                  0198
*              /******************************************************/
*              /*                                                    */
*              /* SET DAY AND MONTH VALUES                           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0198
*              IF DOCNTRL = OFF                                    0198
*                THEN                                              0198
         TM    DOCNTRL,B'10000000'                                 0198
         BNZ   @RF00198                                            0198
*                  DO;                                             0199
*                    I = I - 1;                                    0200
         BCTR  I,0                                                 0200
*                    DAY = DAY + MTHS(I);                          0201
         SLR   @10,@10                                             0201
         IC    @10,MTHS-1(I)                                       0201
         AH    @10,DAY                                             0201
         STH   @10,DAY                                             0201
*                  END;                                            0202
*              MONTH = I;                                          0203
*                                                                  0203
@RF00198 STH   I,MONTH                                             0203
*              /******************************************************/
*              /*                                                    */
*              /* CONVERT DATE TO DECIMAL, UNPACK IT, AND FORMAT IT  */
*              /* INTO TIDATE FOR THE USER WITH A SLASH SEPARATING   */
*              /* MONTH FROM DAY AND DAY FROM YEAR                   */
*              /*                                                    */
*              /******************************************************/
*                                                                  0204
*              RESPECIFY(REG0) RSTD;                               0204
*              GEN(LH    REG1,MONTH);                              0205
         LH    REG1,MONTH
*              GEN(M     REG0,=F'1000');                           0206
         M     REG0,=F'1000'
*              GEN(AH    REG1,DAY);                                0207
         AH    REG1,DAY
*              GEN(M     REG0,=F'1000');                           0208
         M     REG0,=F'1000'
*              RESPECIFY (REG0) UNRSTD;                            0209
*              GEN(AH    REG1,YEAR);                               0210
         AH    REG1,YEAR
*              GEN(CVD   REG1,DBLWORD);                            0211
         CVD   REG1,DBLWORD
*              GEN(UNPK  DATETEMP(8),DBLWORD(8));                  0212
         UNPK  DATETEMP(8),DBLWORD(8)
*              GEN(MVZ   DATETEMP+7(1),DATETEMP+6);                0213
         MVZ   DATETEMP+7(1),DATETEMP+6
*              DATETEMP(3) = '/';                                  0214
         MVI   DATETEMP+2,C'/'                                     0214
*              DATETEMP(6) = '/';                                  0215
         MVI   DATETEMP+5,C'/'                                     0215
*              TIDATE(1:8) = DATETEMP(1:8);                        0216
         L     @10,@PC00001+8                                      0216
         MVC   TIDATE(8,@10),DATETEMP                              0216
*            END;                                                  0217
*          ELSE                                                    0218
*            DO;                                                   0218
         B     @RC00171                                            0218
@RF00171 DS    0H                                                  0219
*              IF TILN = 4 & TIFORM = HSECOND              /*@ZA16002*/
*                THEN                                              0219
         L     @10,@PC00001+16                                     0219
         CLI   TILN(@10),4                                         0219
         BNE   @RF00219                                            0219
         L     @10,@PC00001+12                                     0219
         CLC   TIFORM(4,@10),HSECOND                               0219
         BNE   @RF00219                                            0219
*                  DO;                                     /*@Y30LSMK*/
*                                                                  0220
*                    /************************************************/
*                    /*                                      @Y30LSMK*/
*                    /* OBTAIN THE TIME IN HUNDREDTHS OF A   @Y30LSMK*/
*                    /* SECOND BY ISSUING THE BIN FORM OF    @Y30LSMK*/
*                    /* THE TIME MACRO.                      @Y30LSMK*/
*                    /*                                      @Y30LSMK*/
*                    /************************************************/
*                                                                  0221
*                    RESPECIFY (REG0,REG1) RSTD;           /*@Y30LSMK*/
*LTIME3:             GEN(TIME  BIN);                       /*@Y30LSMK*/
LTIME3   TIME  BIN
*                    GEN(ST    REG0,TIME);                 /*@Y30LSMK*/
         ST    REG0,TIME
*                    RESPECIFY (REG0) UNRSTD;              /*@Y30LSMK*/
*                                                                  0224
*                    /************************************************/
*                    /*                                      @Y30LSMK*/
*                    /* INSERT TIME IN HUNDREDTHS OF A       @Y30LSMK*/
*                    /* SECOND INTO TITIME FOR USER.         @Y30LSMK*/
*                    /*                                      @Y30LSMK*/
*                    /************************************************/
*                                                                  0225
*                    TITIME(1:4) = TIME(1:4);              /*@Y30LSMK*/
         L     @10,@PC00001+4                                      0225
         MVC   TITIME(4,@10),TIME                                  0225
*                  END;                                    /*@Y30LSMK*/
*                ELSE                                              0227
*                  DO;                                     /*@Y30LSMK*/
*                                                                  0227
         B     @RC00219                                            0227
@RF00219 DS    0H                                                  0228
*                    /************************************************/
*                    /*                                              */
*                    /* OBTAIN PACKED DECIMAL DATE AND TIME IN       */
*                    /* MICROSECONDS BY ISSUING THE MIC FORM OF THE  */
*                    /* TIME MACRO.                                  */
*                    /*                                              */
*                    /************************************************/
*                                                                  0228
*                    RESPECIFY (REG1) RSTD;                /*@Y30LSMK*/
*LTIME2:             GEN(TIME  MIC,DBLWORD);                       0229
*                                                                  0229
LTIME2   TIME  MIC,DBLWORD
*                    /************************************************/
*                    /*                                              */
*                    /* INSERT TIME IN MICROSECONDS INTO TITIME      */
*                    /* FOR USER.                                    */
*                    /*                                              */
*                    /************************************************/
*                                                                  0230
*                    TITIME = DBLWORD;                             0230
         L     @10,@PC00001+4                                      0230
         MVC   TITIME(8,@10),DBLWORD                               0230
*                    IF TILN = 4 & TIFORM = CLOCK          /*@ZA16002*/
*                      THEN                                        0231
*                                                                  0231
         L     @10,@PC00001+16                                     0231
         CLI   TILN(@10),4                                         0231
         BNE   @RF00231                                            0231
         L     @10,@PC00001+12                                     0231
         CLC   TIFORM(4,@10),CLOCK                                 0231
         BNE   @RF00231                                            0231
*                        /********************************************/
*                        /*                                  @Y30LSMK*/
*                        /* OBTAIN THE TIME OF DAY IN MICRO  @Y30LSMK*/
*                        /* SECONDS BY ISSUING A STORE CLOCK @Y30LSMK*/
*                        /* INSTRUCTION AND INSERTING IT     @Y30LSMK*/
*                        /* INTO TITIME FOR THE USER.        @Y30LSMK*/
*                        /*                                  @Y30LSMK*/
*                        /********************************************/
*                                                                  0232
*                        GEN(STCK  DBLWORD);               /*@Y30LSMK*/
         STCK  DBLWORD
*                        TITIME = DBLWORD;                 /*@Y30LSMK*/
@RF00231 L     @10,@PC00001+4                                      0233
         MVC   TITIME(8,@10),DBLWORD                               0233
*                  END;                                    /*@Y30LSMK*/
*                                                                  0234
*              /******************************************************/
*              /*                                                    */
*              /* INSERT DATE IN PACKED DECIMAL (00YYDDDF) INTO THE  */
*              /* UTIME DATE VARIABLE TIDATE IF ASKED FOR, WHERE     */
*              /* F IS THE SIGN CHARACTER                            */
*              /*                                                    */
*              /******************************************************/
*                                                                  0235
*              IF TILN ^= 2                                /*@Y30LSMK*/
*                THEN                                              0235
@RC00219 L     @10,@PC00001+16                                     0235
         CLI   TILN(@10),2                                         0235
         BE    @RF00235                                            0235
*                  DO;                                             0236
*                    GEN(ST    REG1,DBLWORD);              /*@YL026UK*/
         ST    REG1,DBLWORD
*                    RESPECIFY (REG1) UNRSTD;              /*@YL026UK*/
*                    TIDATE(1:4) = DBLWORD(1:4);           /*@YL026UK*/
*                                                                  0239
         L     @10,@PC00001+8                                      0239
         MVC   TIDATE(4,@10),DBLWORD                               0239
*                  END;                                            0240
*            END;                                                  0241
*                                                                  0241
@RF00235 DS    0H                                                  0242
*        /************************************************************/
*        /*                                                          */
*        /* RETURN CONTROL TO THE CALLER                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0242
*        CALL IDCSAEP0(GDTTBL,MODID);                              0242
@RC00171 ST    GDTPR,@AL00001                                      0242
         LA    @10,MODID                                           0242
         ST    @10,@AL00001+4                                      0242
         MVI   @AL00001+4,X'80'                                    0242
         L     @15,GDTEPL(,GDTPR)                                  0242
         LA    @01,@AL00001                                        0242
         BALR  @14,@15                                             0242
*        RESPECIFY (GDTPR) UNRSTD;                                 0243
*        END IDCSA05                                               0244
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*;                                                                 0244
@EL00001 L     @13,4(,@13)                                         0244
@EF00001 L     @00,@SIZDATD                                        0244
         LR    @01,@11                                             0244
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0244
         BR    @14                                                 0244
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    5F
@AL00001 DS    2A
IDCSA05  CSECT
         DS    0F
@CF00221 DC    F'1'
@CF00044 DC    F'4'
@CF00598 DC    F'11'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
LISTPTR  DS    A
SETRC    DS    H
TESTRC   DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
TIME     DS    CL9
         DS    CL3
DATETEMP DS    CL8
DBLWORD  DS    CL8
MONTO    DS    CL11
         ORG   MONTO
MTHS     DS    11AL1
         ORG   MONTO+11
DOCNTRL  DS    BL1
@NM00038 DS    CL6
         ORG   @NM00038
DAY      DS    FL2
MONTH    DS    FL2
YEAR     DS    FL2
         ORG   @NM00038+6
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCSA05  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00590 DC    C'SA05'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
FIXAREA  DS    CL50
         ORG   FIXAREA
@NM00037 DC    50X'00'
         ORG   FIXAREA+50
MODID    DC    CL4'SA05'
MONFROM  DS    CL11
         ORG   MONFROM
MINIT    DC    AL1(31)
         DC    AL1(28)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         ORG   MONFROM+11
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @02
REG0     EQU   @00
REG1     EQU   @01
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
GDTPR    EQU   @09
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
RTNREG   EQU   @15
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTABT   EQU   GDTTBL+152
GDTABH   EQU   GDTTBL+156
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
IDCSAEP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGFLGS EQU   DARGLIST+19
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
DMPITM   EQU   0
DMPARY   EQU   0
AMSTP011 EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCDB010 EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBLX  EQU   0
TITIME   EQU   0
TIDATE   EQU   0
TIFORM   EQU   0
TILN     EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00036 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00035 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00034 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00033 EQU   ERCNVTAB+4
@NM00032 EQU   ERCNVTAB+3
@NM00031 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00030 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00029 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00028 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00027 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00026 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00025 EQU   DARGFLGS
DARGFULL EQU   DARGFLGS
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00024 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00023 EQU   OPNAGL+43
@NM00022 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IDCSA05,(C'PLS1011',0701,78145)
