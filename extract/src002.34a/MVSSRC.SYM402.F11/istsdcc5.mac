         TITLE 'ISTSDCC5-ADDBITS0 && ADDBITS4                          *
                         '
ISTSDCC5 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'ISTSDCC5  75.130'                                 0001
ISTSDCC6 DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00041-ISTSDCC6)
         ENTRY ISTSDCC6
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @03,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@03                                         0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
         USING @DATD-(MLCADDAT-ISTMLCA),MLCAPTR
*                                                                  0037
*/********************************************************************/
*/* ISTSDCC5 - ADDBITS PROCESSING THAT GIVES SUCCESS RETURN CODE     */
*/********************************************************************/
*                                                                  0038
*   INPUTSW=0;                      /* FOR ISTSDCC5, SET FLAG TO SKIP
*                                      ERRORS                        */
         MVI   INPUTSW,X'00'                                       0038
*   CALL ADDBITS;                                                  0039
         BAL   @14,ADDBITS                                         0039
*   RETURN CODE(0);                 /* ADDBITS0 ALWAYS GIVES RETURN
*                                      CODE 0                        */
         SLR   @15,@15                                             0040
         L     @14,12(,@13)                                        0040
         LM    @00,@12,20(@13)                                     0040
         BR    @14                                                 0040
*/********************************************************************/
*/* ISTSDCC6 - ADDBITS PROCESSING THAT CAN GIVE ERROR RETURN CODE    */
*/********************************************************************/
*                                                                  0041
*ISTSDCC6:                                                         0041
*   ENTRY;                                                         0041
@EP00041 DS    0H                                                  0042
*   INPUTSW=4;                      /* ISTSDCC6 KILLS THE BUILD ON 0042
*                                      ERRORS                        */
         MVI   INPUTSW,X'04'                                       0042
*   RC=0;                           /* INITIALIZE RETURN CODE        */
         MVI   RC,X'00'                                            0043
*   CALL ADDBITS;                                                  0044
         BAL   @14,ADDBITS                                         0044
*   RETURN CODE(RC);                /* USE RETURN CODE BASED ON    0045
*                                      WHETHER ERRORS FOUND          */
         SLR   @15,@15                                             0045
         IC    @15,RC                                              0045
         L     @14,12(,@13)                                        0045
         LM    @00,@12,20(@13)                                     0045
         BR    @14                                                 0045
*ADDBITS:                                                          0046
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0046
ADDBITS  DS    0H                                                  0047
*   RFY                                                            0047
*     R14 RSTD;                     /* PROTECT RETURN ADDRESS        */
*   MLCADSAV(2)=SAVREG;             /* CHAIN BACKPTR                 */
         ST    SAVREG,MLCADSAV+4(,MLCAPTR)                         0048
*   SVLSA=ADDR(MLCADSAV);           /* CHAIN SAVEAREA FWDPTR         */
         LA    @15,MLCADSAV(,MLCAPTR)                              0049
         ST    @15,SVLSA(,SAVREG)                                  0049
*   SAVREG=ADDR(MLCADSAV);          /* SET UP TO CALL SUBRTN         */
         LR    SAVREG,@15                                          0050
*   INSTREND=ADDR(PHRF2VAL(PHRF2NVL));/* SET START AND END OF LOOP   */
         L     @15,PHRF2NVL(,PHRPTR)                               0051
         SLA   @15,2                                               0051
         LA    @15,PHRF2VAL-4(@15,PHRPTR)                          0051
         ST    @15,INSTREND                                        0051
*   RFY                                                            0052
*     INSTRPTR RSTD;                                               0052
*   INSTRPTR=ADDR(PHRF2VAL(1));                                    0053
         LA    @15,PHRF2VAL(,PHRPTR)                               0053
         LR    INSTRPTR,@15                                        0053
*   RFY                                                            0054
*     PHRPTR UNRSTD;                                               0054
*   RFY                                                            0055
*    (R6,                                                          0055
*     R7,                                                          0055
*     R8,                                                          0055
*     R9,                                                          0055
*     R10,                                                         0055
*     R11,                                                         0055
*     R12) RSTD;                                                   0055
*   LM(R6,R12,MLCPTRS);             /* SET BASE REGS FOR EXECUTE     */
         LM    R6,R12,MLCPTRS(MLCAPTR)                             0056
*   DO INSTRPTR=INSTRPTR BY LENGTH(PHRF2VAL) WHILE INSTRPTR<=INSTREND;
         B     @DE00057                                            0057
@DL00057 DS    0H                                                  0058
*                                   /* LOOP THRU TABLE               */
*     IF INSTRCTN=EFS THEN          /* FOR UNKNOWN VALUE, ISSUE      */
         CLC   INSTRCTN(4,INSTRPTR),@CF00197                       0058
         BNE   @RF00058                                            0058
*       DO;                         /* MESSAGE. FOR ADDBITS4, SET    */
*         RETADSAV=R14;             /* ERR CODE TO KILL THE BUILD    */
         ST    R14,RETADSAV                                        0060
*         RFY                                                      0061
*           R14 UNRSTD;                                            0061
*         IF INPUTSW=0 THEN                                        0062
*                                                                  0062
         CLI   INPUTSW,0                                           0062
         BNE   @RF00062                                            0062
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(IGNORE)             */
*                                                                  0063
*           DO;                                                    0063
*             DCL                                                  0064
*               1 CMZP0003 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0003 FIXED(8) INIT(5),/* LEVEL PARAMETER    0064
*                                      (CLEV)                        */
*                2 CMZE0003 FIXED(8) INIT(4),/* ERROR PARAMETER    0064
*                                      (CERR)                        */
*                2 CMZA0003 CHAR(1) INIT('1'),/* ACTION PARAMETER  0064
*                                      (CACT)                        */
*                2 CMZS0003 FIXED(8) INIT(0);/* LENGTH OF STRING   0064
*                                      PARAM                         */
*             DCL                                                  0065
*               CMZR0003 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0066
*               CMZR0003 RSTD;      /* REGISTER FOR                  */
*             CMZR0003=ADDR(CMZP0003);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0003,CMZP0003                                   0067
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV00200                                        0068
         BALR  @14,@15                                             0068
*             RESPECIFY                                            0069
*               CMZR0003 UNRSTD;                                   0069
*           END;                    /*                       @DM12134*/
*         ELSE                                                     0071
*           DO;                                                    0071
*                                                                  0071
         B     @RC00062                                            0071
@RF00062 DS    0H                                                  0072
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  0072
*             DO;                                                  0072
*               DCL                                                0073
*                 1 CMZP0004 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                  2 CMZL0004 FIXED(8) INIT(5),/* LEVEL PARAMETER  0073
*                                      (CLEV)                        */
*                  2 CMZE0004 FIXED(8) INIT(4),/* ERROR PARAMETER  0073
*                                      (CERR)                        */
*                  2 CMZA0004 CHAR(1) INIT('6'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                  2 CMZS0004 FIXED(8) INIT(0);/* LENGTH OF STRING 0073
*                                      PARAM                         */
*               DCL                                                0074
*                 CMZR0004 REGISTER(1);/* ESTABLISH PARAMeter        */
*               RESPECIFY                                          0075
*                 CMZR0004 RSTD;    /* REGISTER FOR                  */
*               CMZR0004=ADDR(CMZP0004);/* ADDRESS OF PARAMETER LIST */
         LA    CMZR0004,CMZP0004                                   0076
*               CALL ISTSDCC2;      /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV00200                                        0077
         BALR  @14,@15                                             0077
*               RESPECIFY                                          0078
*                 CMZR0004 UNRSTD;                                 0078
*             END;                                                 0079
*             RC=4;                 /* INDICATE ERROR                */
         MVI   RC,X'04'                                            0080
*           END;                                                   0081
*         RFY                                                      0082
*           R14 RSTD;                                              0082
@RC00062 DS    0H                                                  0083
*         R14=RETADSAV;                                            0083
         L     R14,RETADSAV                                        0083
*       END;                                                       0084
*     ELSE                          /* PHRF2VAL NOT = EFS            */
*       IF INSTRCTN=ZERO THEN                                      0085
         B     @RC00058                                            0085
@RF00058 L     @15,INSTRCTN(,INSTRPTR)                             0085
         LTR   @15,@15                                             0085
         BZ    @RT00085                                            0085
*         ;                         /* IF VALUE IS 0, DO NOTHING.    */
*       ELSE                                                       0087
*         GEN REFS(INSTRCTN) NOSETS /* VALUE IS AN INSTRUCTION.      */
*                                                                  0087
*(EX    0,INSTRCTN(,INSTRPTR)   EXEC INSTRUCTION TO SET BITS);     0087
         EX    0,INSTRCTN(,INSTRPTR)   EXEC INSTRUCTION TO SET BITS
*   END;                                                           0088
@RT00085 DS    0H                                                  0088
@RC00058 AL    INSTRPTR,@CF00096                                   0088
@DE00057 C     INSTRPTR,INSTREND                                   0088
         BNH   @DL00057                                            0088
*   SAVREG=MLCADSAV(2);                                            0089
         L     SAVREG,MLCADSAV+4(,MLCAPTR)                         0089
*   RFY                                                            0090
*     R14 UNRSTD;                                                  0090
*   END ADDBITS;                                                   0091
*                                                                  0091
@EL00002 DS    0H                                                  0091
@EF00002 DS    0H                                                  0091
@ER00002 BR    @14                                                 0091
*/* TPEPILOG                                                         */
*                                                                  0092
*   GEN(PRINT OFF);                                                0092
         PRINT OFF
*   GEN(PRINT ON);                                                 0093
*                                                                  0093
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0094
*   END ISTSDCC5;                                                  0094
@EL00001 DS    0H                                                  0094
@EF00001 DS    0H                                                  0094
@ER00001 LM    @14,@12,12(@13)                                     0094
         BR    @14                                                 0094
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTSDCC5 CSECT
         DS    0F
@CF00096 DC    F'4'
@CF00197 DC    F'-1'
@DATD    DSECT
         DS    0D
RETADSAV DS    A
INSTREND DS    A
RC       DS    FL1
INPUTSW  DS    FL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCC5 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00200 DC    V(ISTSDCC2)
         DS    0D
CMZP0003 DS    CL4
         ORG   CMZP0003
CMZL0003 DC    AL1(5)
CMZE0003 DC    AL1(4)
CMZA0003 DC    CL1'1'
CMZS0003 DC    AL1(0)
         ORG   CMZP0003+4
CMZP0004 DS    CL4
         ORG   CMZP0004
CMZL0004 DC    AL1(5)
CMZE0004 DC    AL1(4)
CMZA0004 DC    CL1'6'
CMZS0004 DC    AL1(0)
         ORG   CMZP0004+4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SAVREG   EQU   @13
PHRPTR   EQU   @02
INSTRPTR EQU   @02
MLCAPTR  EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
CMZR0003 EQU   @01
CMZR0004 EQU   @01
ISTPHROA EQU   0
PHROADTA EQU   ISTPHROA+4
ISTMLCA  EQU   0
MLCFLAGS EQU   ISTMLCA+16
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCERBF2 EQU   MLCERBF+8
MLCERBF3 EQU   MLCERBF+32
MLCPTRS  EQU   ISTMLCA+96
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
SVAREA   EQU   0
SVLSA    EQU   SVAREA+8
INSTRCTN EQU   0
PHRFN1OA EQU   PHROADTA
PHRFN2OA EQU   PHROADTA
PHRF2NVL EQU   PHRFN2OA
PHRF2VAL EQU   PHRFN2OA+4
PHRF2FLG EQU   PHRF2VAL+2
PHRF34OA EQU   PHROADTA
PHRF34EN EQU   PHRF34OA+4
PHRFN5OA EQU   PHROADTA
PHRF5ENT EQU   PHRFN5OA+4
PHRFN7OA EQU   PHROADTA
PHRFN8OA EQU   PHROADTA
PHRF8ENT EQU   PHRFN8OA+4
PHRF8FLG EQU   PHRF8ENT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PHRF8NUM EQU   PHRF8ENT+1
@NM00004 EQU   PHRF8FLG
PHRF8DFT EQU   PHRF8FLG
PHRF8NSP EQU   PHRFN8OA
PHRF7NUM EQU   PHRFN7OA+4
PHRF7NSP EQU   PHRFN7OA
PHRF5SPT EQU   PHRF5ENT+4
PHRF5SL  EQU   PHRF5ENT+2
@NM00003 EQU   PHRF5ENT+1
PHRF5VF  EQU   PHRF5ENT
PHRF5NSP EQU   PHRFN5OA
PHRF34SP EQU   PHRF34EN+4
PHRF34SL EQU   PHRF34EN+2
@NM00002 EQU   PHRF34EN+1
PHRF34VF EQU   PHRF34EN
PHRF34NS EQU   PHRF34OA
PHRF2MSK EQU   PHRF2VAL+3
PHRF2MV  EQU   PHRF2FLG
PHRF2OFF EQU   PHRF2FLG
PHRF2ON  EQU   PHRF2FLG
@NM00001 EQU   PHRF2FLG
PHRF2TR  EQU   PHRF2FLG
PHRF2CL  EQU   PHRF2FLG
PHRF2LN  EQU   PHRF2FLG
PHRF2GP  EQU   PHRF2FLG
PHRF2OFS EQU   PHRF2VAL
PHRF1SLN EQU   PHRFN1OA+4
PHRF1SAD EQU   PHRFN1OA
SVR12    EQU   SVAREA+68
SVR11    EQU   SVAREA+64
SVR10    EQU   SVAREA+60
SVR9     EQU   SVAREA+56
SVR8     EQU   SVAREA+52
SVR7     EQU   SVAREA+48
SVR6     EQU   SVAREA+44
SVR5     EQU   SVAREA+40
SVR4     EQU   SVAREA+36
SVR3     EQU   SVAREA+32
SVR2     EQU   SVAREA+28
SVR1     EQU   SVAREA+24
SVR0     EQU   SVAREA+20
SVR15    EQU   SVAREA+16
SVR14    EQU   SVAREA+12
SVHSA    EQU   SVAREA+4
SVRSVD   EQU   SVAREA
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCMHDAT EQU   ISTMLCA+908
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDAT4  EQU   ISTMLCA+596
MLCSAV4  EQU   ISTMLCA+524
MLCDAT3  EQU   ISTMLCA+468
MLCSAV3  EQU   ISTMLCA+396
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00005 EQU   ISTMLCA+136
MLCNCSPL EQU   MLCPTRS+36
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR6  EQU   MLCPTRS+24
MLCPTR5  EQU   MLCPTRS+20
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCCNFG2 EQU   MLCERBF3
MLCFII   EQU   MLCERBF2+16
MLCMACRO EQU   MLCERBF2+8
MLCNAME  EQU   MLCERBF2
MLCCONFG EQU   MLCERBF1
MLCKWD   EQU   ISTMLCA+24
MLCENT   EQU   ISTMLCA+20
MLCINT   EQU   MLCFLAGS
MLCSKDCB EQU   ISTMLCA+12
MLCSKEL  EQU   ISTMLCA+8
MLCRPH   EQU   ISTMLCA+4
MLCSECCA EQU   ISTMLCA
PHROALEN EQU   ISTPHROA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ISTSDCC5,(C'PLS1055',0603,75130)
