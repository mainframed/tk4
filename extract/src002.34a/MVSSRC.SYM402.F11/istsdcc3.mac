         TITLE 'ISTSDCC3-  MHR                                         *
                        '
ISTSDCC3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSDCC3  75.130'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         USING @DATD,DATREG
*   DATREG=ADDR(MLCMHDAT);                                         0033
         LA    DATREG,MLCMHDAT(,MLCAPTR)                           0033
*   SCANPTR=PARMR;                                                 0034
         LR    SCANPTR,PARMR                                       0034
*   PARMSAVE=PARMR;                 /* SAVE PARM REG                 */
         LR    PARMSAVE,PARMR                                      0035
*   TABLEPTR=TABPTR;                                               0036
         LR    TABLEPTR,TABPTR                                     0036
*   MLCNAME=BLANK;                  /* BLANK MLCNAME                 */
         MVI   MLCNAME+1(MLCAPTR),C' '                             0037
         MVC   MLCNAME+2(6,MLCAPTR),MLCNAME+1(MLCAPTR)             0037
         MVI   MLCNAME(MLCAPTR),C' '                               0037
*   MLCMACRO=BLANK;                 /* BLANK MLCMACRO                */
         MVI   MLCMACRO+1(MLCAPTR),C' '                            0038
         MVC   MLCMACRO+2(6,MLCAPTR),MLCMACRO+1(MLCAPTR)           0038
         MVI   MLCMACRO(MLCAPTR),C' '                              0038
*   NAMELEN=0;                      /* SET CTR TO 0                  */
         SLR   NAMELEN,NAMELEN                                     0039
*/********************************************************************/
*/* IF THERE IS NO NAME ON THE MACRO SET UP THE MLCNAME AS BLANKS    */
*/* OTHERWISE MOVE IN THE NAME FROM THE MACRO. HTIS NAME WILL BE USED*/
*/* TO TELL THAT THIS MACRO CAUSED AN ERROR IF ONE IS DETECTED       */
*/********************************************************************/
*                                                                  0040
*   IF CHARCOMP^=BLANK THEN         /* 1ST BUFFER CHAR A BLANK?      */
         CLI   CHARCOMP(SCANPTR),C' '                              0040
         BE    @RF00040                                            0040
*     DO;                                                          0041
*       DO WHILE CHARCOMP^=BLANK;   /* NO,FIND BLANK & COUNT CHAR    */
         B     @DE00042                                            0042
@DL00042 DS    0H                                                  0043
*         NAMELEN=NAMELEN+1;        /* COUNT CHARACTERS              */
         LA    @08,1                                               0043
         ALR   NAMELEN,@08                                         0043
*         SCANPTR=SCANPTR+1;        /* STEP UP PTR                   */
         ALR   SCANPTR,@08                                         0044
*       END;                                                       0045
@DE00042 CLI   CHARCOMP(SCANPTR),C' '                              0045
         BNE   @DL00042                                            0045
*       SCANPTR=PARMSAVE;           /* RESTORE POINTER               */
         LR    SCANPTR,PARMSAVE                                    0046
*       IF NAMELEN<=8 THEN          /* NAME LONGER THAN 8            */
         CH    NAMELEN,@CH00047                                    0047
         BH    @RF00047                                            0047
*         DO;                                                      0048
*           MLCNAME(1:NAMELEN)=TEXTBUF(1:NAMELEN);/* MOVE IN NAME    */
         LR    @07,NAMELEN                                         0049
         BCTR  @07,0                                               0049
         EX    @07,@SM00177                                        0049
*           PARMSAVE=PARMR;         /* SAVE REGS 1 & 2 OVER TRT      */
         LR    PARMSAVE,PARMR                                      0050
*           TWOSAVE=R2;                                            0051
         LR    TWOSAVE,R2                                          0051
*           PARMR=0;                /* SET REGS 1 & 2 TO 0           */
         SLR   @08,@08                                             0052
         LR    PARMR,@08                                           0052
*           R2=0;                                                  0053
         LR    R2,@08                                              0053
*           TRT(CHARCOMP,TTABLE1);  /* TRT FIRST CHARACTER           */
         TRT   CHARCOMP(1,SCANPTR),TTABLE1                         0054
*           IF PARMR=0 THEN         /* FIRST CHAR VALID?             */
         LTR   PARMR,PARMR                                         0055
         BNZ   @RF00055                                            0055
*             DO;                                                  0056
*               SCANPTR=SCANPTR+1;  /* YES, ADVANCE PTR              */
         AH    SCANPTR,@CH00041                                    0057
*               TRT(TEXTBUF,TTABLE2);/* TRT REST OF NAME             */
         TRT   TEXTBUF(256,SCANPTR),TTABLE2                        0058
*               IF R2^=1 THEN       /* TRT STOPPED BY BLANK?         */
         CH    R2,@CH00041                                         0059
         BE    @RF00059                                            0059
*                 DO;                                              0060
*                   RCSAVE=8;       /* NO, ERROR CONDITION           */
         LA    RCSAVE,8                                            0061
*                 END;                                             0062
*               ELSE                /* R2 = 1, GO ON                 */
*                 RCSAVE=0;         /* INDICATE NO ERROR             */
         B     @RC00059                                            0063
@RF00059 SLR   RCSAVE,RCSAVE                                       0063
*             END;                                                 0064
*           ELSE                                                   0065
*             RCSAVE=8;             /* PARMR NOT = 0                 */
         B     @RC00055                                            0065
@RF00055 LA    RCSAVE,8                                            0065
*         END;                                                     0066
*       ELSE                        /* NAME > 8                      */
*         DO;                                                      0067
         B     @RC00047                                            0067
@RF00047 DS    0H                                                  0068
*           MLCNAME(1:8)=TEXTBUF(1:8);/* MOVE IN 1ST 8 CHAR          */
         MVC   MLCNAME(8,MLCAPTR),TEXTBUF(SCANPTR)                 0068
*           RCSAVE=8;               /* ERROR CONDITION               */
         LA    RCSAVE,8                                            0069
*         END;                                                     0070
*     END;                                                         0071
*   ELSE                            /* FIRST CHAR WAS BLANK          */
*     DO;                                                          0072
         B     @RC00040                                            0072
@RF00040 DS    0H                                                  0073
*       RCSAVE=0;                   /* SIGNIFY NO ERROR              */
         SLR   RCSAVE,RCSAVE                                       0073
*     END;                                                         0074
*   IF RCSAVE=0 THEN                                               0075
@RC00040 SLR   @07,@07                                             0075
         CR    RCSAVE,@07                                          0075
         BNE   @RF00075                                            0075
*     DO;                                                          0076
*                                                                  0076
*/********************************************************************/
*/* NOW SCAN THE INPUT FOR A MACRO NAME.  WHEN IT IS FOUND BEGIN A   */
*/* SCAN OF THE MACRO NAME TABLE AND COMPARE THE NAME OF THE MACRO   */
*/* THAT IS ON THE INPUT TO THE NAME IN THE TABLE IF THE NAMES ARE   */
*/* NOT THE SAME CONTINUE. IF THE NAME IS FOUND THEN PICK UP THE     */
*/* ADDRESS OF THE ROUTINE ASSOCIATED WITH THE MACRO AND PUT IT IN   */
*/* R0 TO RETURN TO THE CALLER                                       */
*/********************************************************************/
*                                                                  0077
*       SCANPTR=PARMSAVE+NAMELEN+1; /* RESET PTR                     */
         LR    SCANPTR,PARMSAVE                                    0077
         ALR   SCANPTR,NAMELEN                                     0077
         AH    SCANPTR,@CH00041                                    0077
*       IF CHARCOMP^=BLANK THEN                                    0078
         CLI   CHARCOMP(SCANPTR),C' '                              0078
         BE    @RF00078                                            0078
*         DO;                                                      0079
*           MACLEN=0;               /* ZERO OUT CTR                  */
         LR    MACLEN,@07                                          0080
*           DO WHILE CHARCOMP^=BLANK;/* SCAN FOR BLANKS              */
         B     @DE00081                                            0081
@DL00081 DS    0H                                                  0082
*             MACLEN=MACLEN+1;      /* KEEP COUNT OF CHAR            */
         LA    @10,1                                               0082
         ALR   MACLEN,@10                                          0082
*             SCANPTR=SCANPTR+1;    /* ADVANCE PTR                   */
         ALR   SCANPTR,@10                                         0083
*           END;                                                   0084
@DE00081 CLI   CHARCOMP(SCANPTR),C' '                              0084
         BNE   @DL00081                                            0084
*           BACKPTR=SCANPTR-MACLEN; /* GET PTR TO MACRO IN TEXT      */
         LR    BACKPTR,SCANPTR                                     0085
         SLR   BACKPTR,MACLEN                                      0085
*           IF MACLEN<=EIGHT THEN   /* MACNAME > 8?                  */
         CH    MACLEN,@CH00047                                     0086
         BH    @RF00086                                            0086
*             DO;                                                  0087
*               MLCMACRO(1:MACLEN)=MACOP(1:MACLEN);/* MOVE IN MACRO  */
         LR    @07,MACLEN                                          0088
         BCTR  @07,0                                               0088
         EX    @07,@SM00179                                        0088
*               ENTCOUNT=COUNT;     /* PUT # OF ENTRIES IN CTR       */
         SLR   ENTCOUNT,ENTCOUNT                                   0089
         ICM   ENTCOUNT,3,COUNT(TABLEPTR)                          0089
*               MHTEPTR=TABLEPTR+4; /* SET PTR TO FIRST ENTRY        */
         LA    @07,4                                               0090
         LR    MHTEPTR,TABLEPTR                                    0090
         ALR   MHTEPTR,@07                                         0090
*               RCSAVE=4;           /* INDICATE ERROR DO TABLE SEARCH*/
         LR    RCSAVE,@07                                          0091
*               DO WHILE ENTCOUNT^=0&RCSAVE=4;                     0092
         B     @DE00092                                            0092
@DL00092 DS    0H                                                  0093
*                 IF MLCMACRO=MHTMACRO THEN                        0093
         CLC   MLCMACRO(8,MLCAPTR),MHTMACRO(MHTEPTR)               0093
         BNE   @RF00093                                            0093
*                   DO;                                            0094
*                     TABPTR=MHTVALUE;/* PUT PTR TO MACRO IN R0      */
         L     TABPTR,MHTVALUE(,MHTEPTR)                           0095
*                     RCSAVE=0;     /* INDICATE NO ERROR             */
         SLR   RCSAVE,RCSAVE                                       0096
*                   END;                                           0097
*                 ELSE              /* MLCMACRO^=MHTMACRO,GO ON      */
*                   DO;                                            0098
         B     @RC00093                                            0098
@RF00093 DS    0H                                                  0099
*                     ENTCOUNT=ENTCOUNT-1;/* STEP DOWN CTR           */
         BCTR  ENTCOUNT,0                                          0099
*                     MHTEPTR=MHTEPTR+12;/* STEP UP PTR              */
         AH    MHTEPTR,@CH00149                                    0100
*                   END;                                           0101
*               END;                                               0102
@RC00093 DS    0H                                                  0102
@DE00092 LTR   ENTCOUNT,ENTCOUNT                                   0102
         BZ    @DC00092                                            0102
         CH    RCSAVE,@CH00039                                     0102
         BE    @DL00092                                            0102
@DC00092 DS    0H                                                  0103
*             END;                                                 0103
*           ELSE                    /* MACLEN > 8                    */
*             DO;                                                  0104
         B     @RC00086                                            0104
@RF00086 DS    0H                                                  0105
*               MLCMACRO(1:8)=MACOP(1:8);/* MOVE IN FIRST 8 CHAR     */
         MVC   MLCMACRO(8,MLCAPTR),MACOP(BACKPTR)                  0105
*               RCSAVE=4;           /* ERROR CONDITION               */
         LA    RCSAVE,4                                            0106
*             END;                                                 0107
*         END;                                                     0108
*       ELSE                        /* CHARCOMP = BLANK              */
*         RCSAVE=4;                 /* INDICATE ERROR                */
         B     @RC00078                                            0109
@RF00078 LA    RCSAVE,4                                            0109
*     END;                                                         0110
*   ELSE                                                           0111
*     ;                             /* RCSAVE ^= 0                   */
@RF00075 DS    0H                                                  0112
*   PARMR=SCANPTR+1;                /* SET REG 1 FOR RETURN          */
@RC00075 LA    PARMR,1                                             0112
         ALR   PARMR,SCANPTR                                       0112
*   SVR15=RCSAVE;                   /* REG 15 IN USERS SAVE AREA     */
         ST    RCSAVE,SVR15(,SAVREG)                               0113
*   SVR0=TABPTR;                    /* REG 0 IN USERS SAVE AREA      */
         ST    TABPTR,SVR0(,SAVREG)                                0114
*   SVR1=PARMR;                     /* REG 1 IN USERS SAVE AREA      */
         ST    PARMR,SVR1(,SAVREG)                                 0115
*/* TPEPILOG                                                         */
*                                                                  0116
*   GEN(PRINT OFF);                                                0116
         PRINT OFF
*   GEN(PRINT ON);                                                 0117
*                                                                  0117
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0118
*   END ISTSDCC3;                                                  0118
@EL00001 DS    0H                                                  0118
@EF00001 DS    0H                                                  0118
@ER00001 LM    @14,@12,12(@13)                                     0118
         BR    @14                                                 0118
@DATA    DS    0H
@CH00041 DC    H'1'
@CH00039 DC    H'4'
@CH00047 DC    H'8'
@CH00149 DC    H'12'
@SM00177 MVC   MLCNAME(0,MLCAPTR),TEXTBUF(SCANPTR)
@SM00179 MVC   MLCMACRO(0,MLCAPTR),MACOP(BACKPTR)
@DATD    DSECT
         DS    0F
ISTSDCC3 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCC3 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
TTABLE1  DS    CL256
         ORG   TTABLE1
TTAB1    DC    91CL1'X'
         DC    X'00'
         DC    31CL1'X'
         DC    2X'00'
         DC    68CL1'X'
         DC    9X'00'
         DC    7CL1'X'
         DC    9X'00'
         DC    8CL1'X'
         DC    8X'00'
         DC    22CL1'X'
         ORG   TTABLE1+256
TTABLE2  DS    CL256
         ORG   TTABLE2
TTAB2    DC    64CL1'X'
         DC    X'01'
         DC    26CL1'X'
         DC    X'00'
         DC    31CL1'X'
         DC    2X'00'
         DC    68CL1'X'
         DC    9X'00'
         DC    7CL1'X'
         DC    9X'00'
         DC    8CL1'X'
         DC    8X'00'
         DC    6CL1'X'
         DC    10X'00'
         DC    6CL1'x'
         ORG   TTABLE2+256
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTCOUNT EQU   @10
MHTEPTR  EQU   @09
BACKPTR  EQU   @09
MACLEN   EQU   @08
RCSAVE   EQU   @08
TWOSAVE  EQU   @08
PARMSAVE EQU   @10
NAMELEN  EQU   @09
SAVREG   EQU   @13
SCANPTR  EQU   @04
TABLEPTR EQU   @06
PARMR    EQU   @01
MLCAPTR  EQU   @05
R2       EQU   @02
TABPTR   EQU   @00
DATREG   EQU   @11
ISTMLCA  EQU   0
MLCFLAGS EQU   ISTMLCA+16
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCERBF2 EQU   MLCERBF+8
MLCNAME  EQU   MLCERBF2
MLCMACRO EQU   MLCERBF2+8
MLCERBF3 EQU   MLCERBF+32
MLCPTRS  EQU   ISTMLCA+96
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCMHDAT EQU   ISTMLCA+908
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
SVAREA   EQU   0
SVR15    EQU   SVAREA+16
SVR0     EQU   SVAREA+20
SVR1     EQU   SVAREA+24
CHARCOMP EQU   0
TEXTBUF  EQU   0
MACOP    EQU   0
HEADER   EQU   0
COUNT    EQU   HEADER
TABENTRY EQU   0
MHTMACRO EQU   TABENTRY
MHTVALUE EQU   TABENTRY+8
MACCHAR  EQU   0
MACTAB   EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00002 EQU   HEADER+2
SVR12    EQU   SVAREA+68
SVR11    EQU   SVAREA+64
SVR10    EQU   SVAREA+60
SVR9     EQU   SVAREA+56
SVR8     EQU   SVAREA+52
SVR7     EQU   SVAREA+48
SVR6     EQU   SVAREA+44
SVR5     EQU   SVAREA+40
SVR4     EQU   SVAREA+36
SVR3     EQU   SVAREA+32
SVR2     EQU   SVAREA+28
SVR14    EQU   SVAREA+12
SVLSA    EQU   SVAREA+8
SVHSA    EQU   SVAREA+4
SVRSVD   EQU   SVAREA
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDAT4  EQU   ISTMLCA+596
MLCSAV4  EQU   ISTMLCA+524
MLCDAT3  EQU   ISTMLCA+468
MLCSAV3  EQU   ISTMLCA+396
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00001 EQU   ISTMLCA+136
MLCNCSPL EQU   MLCPTRS+36
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR6  EQU   MLCPTRS+24
MLCPTR5  EQU   MLCPTRS+20
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCCNFG2 EQU   MLCERBF3
MLCFII   EQU   MLCERBF2+16
MLCCONFG EQU   MLCERBF1
MLCKWD   EQU   ISTMLCA+24
MLCENT   EQU   ISTMLCA+20
MLCINT   EQU   MLCFLAGS
MLCSKDCB EQU   ISTMLCA+12
MLCSKEL  EQU   ISTMLCA+8
MLCRPH   EQU   ISTMLCA+4
MLCSECCA EQU   ISTMLCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00047 EQU   @RC00040
@RC00078 EQU   @RC00075
@RC00055 EQU   @RC00047
@RC00086 EQU   @RC00078
@RC00059 EQU   @RC00055
@ENDDATA EQU   *
         END   ISTSDCC3,(C'PLS1054',0603,75130)
