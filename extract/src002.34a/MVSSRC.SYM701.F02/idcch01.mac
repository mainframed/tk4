         TITLE '************* IDCCH01:  CHECKMSS FUNCTION **************
               *        '
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCCH01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCCH01   77.297'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  LA    @10,4095(,@12)                                      0002
         LA    @09,4095(,@10)                                      0002
         LA    @08,4095(,@09)                                      0002
         USING @PSTART,@12                                         0002
         USING @PSTART+4095,@10                                    0002
         USING @PSTART+8190,@09                                    0002
         USING @PSTART+12285,@08                                   0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0461
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - IDCCH01                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - THIS MAIN PROCEDURE OF CHECKMSS CONTROLS    @Z40LB64*/
*/*              THE INVOCATION OF VARIOUS SUBPROCEDURES     @Z40LB64*/
*/*              BASED UPON USER OPTIONS SPECIFIED AND UPON  @Z40LB64*/
*/*              INTERNAL CHECKMSS CONDITION CODES.          @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - (1) AMS GLOBAL DATA TABLE.                     @Z40LB64*/
*/*           (2) CHECKMSS FUNCTION DATA TABLE.              @Z40LB64*/
*/*           (3) CHECKMSS CONDITION CODE (INITIALLY ZERO).  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - (1) ANY DIAGNOSTIC OUTPUT FROM CHECKMSS       @Z40LB64*/
*/*                PROCESSING.                               @Z40LB64*/
*/*            (2) THE FINAL CHECKMSS CONDITION CODE.        @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  0461
*   OLDERID2=NEWERID2;                                             0461
         L     @15,@PC00001                                        0461
         L     @15,GDTTR2(,@15)                                    0461
         MVC   @TS00001(95),NEWERID2(@15)                          0461
         MVC   OLDERID2(95,@15),@TS00001                           0461
*   NEWID2='CH1A';                  /*                       @Z40LB64*/
*                                                                  0462
         MVC   NEWID2(4,@15),@CC02430                              0462
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE SUU CONDITION CODE ZERO.                   @ZA27324*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0463
*   SUUCOND=0;                      /*                       @ZA27324*/
         SLR   @15,@15                                             0463
         STH   @15,SUUCOND                                         0463
*   DDSTRU=ADDR(PRNTLIST);          /*                       @ZA27324*/
*                                                                  0464
         LA    @14,PRNTLIST                                        0464
         ST    @14,DDSTRU                                          0464
*   /*****************************************************************/
*   /*                                                               */
*   /* EXAMINE THE CHECKMSS OPTIONS REQUESTED TO DETERMINE   @Z40LB64*/
*   /* WHICH PROCEDURES TO INVOKE.                           @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0465
*   MSVICHK=OFF;                    /*                       @Z40LB64*/
*   SACHK=OFF;                      /*                       @Z40LB64*/
*   MSCCHK=OFF;                     /*                       @Z40LB64*/
         NI    MSVICHK,B'00011111'                                 0467
*   IF(ADDR(MSVI)^=NULLPTR×ADDR(CHALL)^=NULLPTR) THEN              0468
         L     @14,@PC00001+4                                      0468
         C     @15,FDTPTR+16(,@14)                                 0468
         BNE   @RT00468                                            0468
         C     @15,FDTPTR+20(,@14)                                 0468
         BE    @RF00468                                            0468
@RT00468 DS    0H                                                  0469
*     MSVICHK=ON;                   /*                       @Z40LB64*/
         OI    MSVICHK,B'00100000'                                 0469
*   IF(ADDR(STGAD)^=NULLPTR×ADDR(CHALL)^=NULLPTR) THEN             0470
@RF00468 SLR   @15,@15                                             0470
         L     @14,@PC00001+4                                      0470
         C     @15,FDTPTR+12(,@14)                                 0470
         BNE   @RT00470                                            0470
         C     @15,FDTPTR+20(,@14)                                 0470
         BE    @RF00470                                            0470
@RT00470 DS    0H                                                  0471
*     SACHK=ON;                     /*                       @Z40LB64*/
         OI    SACHK,B'01000000'                                   0471
*   IF(ADDR(MSC)^=NULLPTR×ADDR(CHALL)^=NULLPTR) THEN               0472
@RF00470 SLR   @15,@15                                             0472
         L     @14,@PC00001+4                                      0472
         C     @15,FDTPTR+8(,@14)                                  0472
         BNE   @RT00472                                            0472
         C     @15,FDTPTR+20(,@14)                                 0472
         BE    @RF00472                                            0472
@RT00472 DS    0H                                                  0473
*     MSCCHK=ON;                    /*                       @Z40LB64*/
*                                                                  0473
         OI    MSCCHK,B'10000000'                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM CHECKMSS INITIALIZATION                       @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0474
*   CALL CHKINIT;                   /*                       @Z40LB64*/
*                                                                  0474
@RF00472 BAL   @14,CHKINIT                                         0474
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE MASS STORAGE CONTROL TABLES TO THE WORK      @Z40LB64*/
*   /* DATA SET (UNLESS PREVIOUS ERRORS HAVE OCCURED).       @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0475
*   IF LASTCOND=LASTCC00 THEN                                      0475
         L     @15,@PC00001+8                                      0475
         LH    @15,LASTCOND(,@15)                                  0475
         LTR   @15,@15                                             0475
         BNZ   @RF00475                                            0475
*     CALL COPYMSC;                 /*                       @Z40LB64*/
*                                                                  0476
         BAL   @14,COPYMSC                                         0476
*   /*****************************************************************/
*   /*                                                               */
*   /* IF STAGING ADAPTER VS. MASS STORAGE CONTROL TABLE     @Z40LB64*/
*   /* CHECKING HAS BEEN REQUESTED ('STAGINGADAPTERS' OR     @Z40LB64*/
*   /* 'ALL' KEYWORDS), OBTAIN A COPY OF THE STAGING         @Z40LB64*/
*   /* ADAPTERS' WORKING CONTROL STORAGE (UNLESS PREVIOUS    @Z40LB64*/
*   /* ERRORS HAVE OCCURED).                                 @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0477
*   IF LASTCOND=LASTCC00&SACHK=ON THEN                             0477
@RF00475 L     @06,@PC00001+8                                      0477
         LH    @06,LASTCOND(,@06)                                  0477
         LTR   @06,@06                                             0477
         BNZ   @RF00477                                            0477
         TM    SACHK,B'01000000'                                   0477
         BNO   @RF00477                                            0477
*     CALL COPYSA;                  /*                       @Z40LB64*/
         BAL   @14,COPYSA                                          0478
*   IF GDTDBG=NULLPTR THEN                                         0479
@RF00477 L     @06,@PC00001                                        0479
         L     @06,GDTDBG(,@06)                                    0479
         LTR   @06,@06                                             0479
         BZ    @RT00479                                            0479
*     ;                                                            0480
*   ELSE                                                           0481
*     CALL IDCDB010(GDTTBL,'CH1X'); /*                       @Z40LB64*/
*                                                                  0481
         L     @06,@PC00001                                        0481
         ST    @06,@AL00001                                        0481
         LA    @15,@CC02434                                        0481
         ST    @15,@AL00001+4                                      0481
         MVI   @AL00001+4,X'80'                                    0481
         L     @15,GDTDBG(,@06)                                    0481
         LA    @01,@AL00001                                        0481
         BALR  @14,@15                                             0481
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MASS STORAGE VOLUME INVENTORY VS. MASS STORAGE     @Z40LB64*/
*   /* CONTROL TABLE CHECKING HAS BEEN REQUESTED,            @Z40LB64*/
*   /* ('MSVINVENTORY' OR 'ALL' KEYWORDS), COMPARE MSVI      @Z40LB64*/
*   /* RECORD FIELDS TO CORRESPONDING FIELDS IN THE MSC      @Z40LB64*/
*   /* TABLES (UNLESS PREVIOUS ERRORS HAVE OCCURED).         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0482
*   IF LASTCOND=LASTCC00&MSVICHK=ON THEN                           0482
@RT00479 L     @06,@PC00001+8                                      0482
         LH    @06,LASTCOND(,@06)                                  0482
         LTR   @06,@06                                             0482
         BNZ   @RF00482                                            0482
         TM    MSVICHK,B'00100000'                                 0482
         BNO   @RF00482                                            0482
*     CALL CHKMSVI;                 /*                       @Z40LB64*/
*                                                                  0483
         BAL   @14,CHKMSVI                                         0483
*   /*****************************************************************/
*   /*                                                               */
*   /* IF STAGING ADAPTER VS. MASS STORAGE CONTROL TABLE     @Z40LB64*/
*   /* CHECKING OR INTER- MASS STORAGE CONTROL TABLE         @Z40LB64*/
*   /* CHECKING HAS BEEN REQUESTED ('STAGINGADAPTERS',       @Z40LB64*/
*   /* 'MASSSTORAGECONTROL' OR 'ALL' KEYWORDS), PERFORM      @Z40LB64*/
*   /* THE REQUESTED COMPARISONS (UNLESS PREVIOUS ERRORS     @Z40LB64*/
*   /* HAVE OCCURED).                                        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0484
*   IF LASTCOND=LASTCC00&(SACHK=ON×MSCCHK=ON) THEN                 0484
@RF00482 L     @06,@PC00001+8                                      0484
         LH    @15,LASTCOND(,@06)                                  0484
         LTR   @15,@15                                             0484
         BNZ   @RF00484                                            0484
         TM    SACHK,B'11000000'                                   0484
         BZ    @RF00484                                            0484
*     CALL IDCCH02(GDTTBL,CDALIST,LASTCOND);/*               @Z40LB64*/
*                                                                  0485
         L     @15,@PC00001                                        0485
         ST    @15,@AL00001                                        0485
         LA    @15,CDALIST                                         0485
         ST    @15,@AL00001+4                                      0485
         ST    @06,@AL00001+8                                      0485
         L     @15,@CV02183                                        0485
         LA    @01,@AL00001                                        0485
         BALR  @14,@15                                             0485
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM CHECKMSS TERMINATION                          @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0486
*   CALL CHKTERM;                   /*                       @Z40LB64*/
*                                                                  0486
@RF00484 BAL   @14,CHKTERM                                         0486
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE AMS EXECUTIVE                           @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*   CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);                          0487
*                                                                  0487
         L     @15,@PC00001                                        0487
         ST    @15,@AL00001                                        0487
         LA    @14,MODID                                           0487
         ST    @14,@AL00001+4                                      0487
         L     @14,@PC00001+8                                      0487
         ST    @14,@AL00001+8                                      0487
         MVI   @AL00001+8,X'80'                                    0487
         L     @15,GDTEPL(,@15)                                    0487
         LA    @01,@AL00001                                        0487
         BALR  @14,@15                                             0487
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0488
*                                                                  0488
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - CHKINIT                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - PERFORM CHECKMSS INITIALIZATION.            @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              PROCEDURE 'INITSPAC' IS INVOKED TO ACQUIRE  @Z40LB64*/
*/*              STORAGE REQUIRED FOR CHECKMSS PROCESSING.   @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              PROCEDURE 'INITWDS' IS INVOKED TO OPEN      @Z40LB64*/
*/*              THE WORK DATA SET.                          @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              DATA VALUES AND POINTERS TO BE USED IN      @Z40LB64*/
*/*              SUBSEQUENT PROCESSING ARE INITIALIZED.      @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - NONE                                           @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - INITIALIZED DATA VALUES AND POINTERS.         @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  0488
*CHKINIT:                                                          0488
*   PROCEDURE;                      /*                       @Z40LB64*/
@EL00001 L     @13,4(,@13)                                         0488
@EF00001 L     @00,@SIZDATD                                        0488
         LR    @01,@11                                             0488
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0488
         BR    @14                                                 0488
CHKINIT  STM   @14,@05,@SA00002                                    0488
         STM   @08,@12,@SA00002+32                                 0488
*   OLDERID2=NEWERID2;                                             0489
         L     @15,@PC00001                                        0489
         L     @15,GDTTR2(,@15)                                    0489
         MVC   @TS00001(95),NEWERID2(@15)                          0489
         MVC   OLDERID2(95,@15),@TS00001                           0489
*   NEWID2='CH1B';                  /*                       @Z40LB64*/
         MVC   NEWID2(4,@15),@CC02440                              0490
*   WDSCBPTR=NULLPTR;               /*                       @Z40LB64*/
*                                                                  0491
         SLR   @15,@15                                             0491
         ST    @15,WDSCBPTR                                        0491
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUIRE STORAGE REQUIRED FOR CHECKMSS PROCESSING      @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0492
*   CALL INITSPAC;                  /*                       @Z40LB64*/
*                                                                  0492
         BAL   @14,INITSPAC                                        0492
*   /*****************************************************************/
*   /*                                                               */
*   /* OPEN AND VERIFY THE ATTRIBUTES OF THE WORK DATA SET   @Z40LB64*/
*   /* (UNLESS PREVIOUS ERRORS HAVE OCCURED).                @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0493
*   IF LASTCOND=LASTCC00 THEN                                      0493
         L     @15,@PC00001+8                                      0493
         LH    @15,LASTCOND(,@15)                                  0493
         LTR   @15,@15                                             0493
         BNZ   @RF00493                                            0493
*     CALL INITWDS;                 /*                       @Z40LB64*/
*                                                                  0494
         BAL   @14,INITWDS                                         0494
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE DATA VALUES AND POINTERS TO BE USED IN     @Z40LB64*/
*   /* SUBSEQUENT PROCESSING (UNLESS PREVIOUS ERRORS HAVE    @Z40LB64*/
*   /* OCCURED).                                             @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0495
*   IF LASTCOND=LASTCC00 THEN                                      0495
@RF00493 L     @15,@PC00001+8                                      0495
         LH    @15,LASTCOND(,@15)                                  0495
         LTR   @15,@15                                             0495
         BNZ   @RF00495                                            0495
*     DO;                           /*                       @Z40LB64*/
*                                                                  0496
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE 'EXGARG' PARAMETER LIST FOR            @Z40LB64*/
*       /* READING THE WORK DATA SET.                        @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0497
*       RESPECIFY                                                  0497
*         EXGARG BASED(EXARGPTR);   /*                       @Z40LB64*/
*       EXGARG=''B;                 /*                       @Z40LB64*/
         L     @15,EXARGPTR                                        0498
         XC    EXGARG(32,@15),EXGARG(@15)                          0498
*       EXGCTLBK=WDSCBPTR;          /*                       @Z40LB64*/
         L     @14,WDSCBPTR                                        0499
         ST    @14,EXGCTLBK(,@15)                                  0499
*     END;                          /*                       @Z40LB64*/
*   END CHKINIT;                    /*                       @Z40LB64*/
@EL00002 DS    0H                                                  0501
@EF00002 DS    0H                                                  0501
@ER00002 LM    @14,@05,@SA00002                                    0501
         LM    @08,@12,@SA00002+32                                 0501
         BR    @14                                                 0501
*                                                                  0502
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - INITSPAC                              @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - TO ACQUIRE REQUIRED STORAGE FOR DATA        @Z40LB64*/
*/*              AREAS, I/O BUFFERS, AND CHECK-OFF TABLES.   @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE AMOUNT OF STORAGE REQUIRED DEPENDS UPON @Z40LB64*/
*/*              THE CHECKMSS OPTIONS REQUESTED, AND THE     @Z40LB64*/
*/*              NUMBER OF VALID STAGING ADAPTERS.           @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE MSC CONFIGURATION BIT MAP IS READ FROM  @Z40LB64*/
*/*              THE MSC WORKING CONTROL STORAGE AND IS      @Z40LB64*/
*/*              USED TO DETERMINE THE NUMBER OF VALID       @Z40LB64*/
*/*              STAGING ADAPTERS.                           @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              AREAS WITHIN ACQUIRED STORAGE WHICH ARE NOT @Z40LB64*/
*/*              NEEDED FOR THE DURATION OF CHECKMSS ARE     @Z40LB64*/
*/*              OVERLAYED BY LATER-USED DATA AREAS IN ORDER @Z40LB64*/
*/*              TO KEEP ACQUIRED STORAGE SIZE TO A MINIMUM. @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - (1) THE CHECKMSS OPTIONS REQUESTED             @Z40LB64*/
*/*           (2) THE MSC CONFIGURATION BIT MAP              @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - THE REQUIRED AMOUNT OF STORAGE HAS BEEN       @Z40LB64*/
*/*            OBTAINED, AND BASE POINTERS INITIALIZED TO    @Z40LB64*/
*/*            THEIR RESPECTIVE LOCATIONS WITHIN THE         @Z40LB64*/
*/*            ACQUIRED SPACE.                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  0502
*INITSPAC:                                                         0502
*   PROCEDURE;                      /*                       @Z40LB64*/
INITSPAC STM   @14,@05,@SA00003                                    0502
         STM   @08,@12,@SA00003+32                                 0502
*   OLDERID2=NEWERID2;                                             0503
         L     @15,@PC00001                                        0503
         L     @15,GDTTR2(,@15)                                    0503
         MVC   @TS00001(95),NEWERID2(@15)                          0503
         MVC   OLDERID2(95,@15),@TS00001                           0503
*   NEWID2='CH1C';                  /*                       @Z40LB64*/
         MVC   NEWID2(4,@15),@CC02448                              0504
*   NOSPACE=OFF;                    /*                       @Z40LB64*/
*                                                                  0505
         NI    NOSPACE,B'01111111'                                 0505
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE AMOUNT OF SPACE REQUIRED FOR ITEMS      @Z40LB64*/
*   /* WHICH MUST REMAIN FOR THE DURATION OF CHECKMSS        @Z40LB64*/
*   /* PROCESSING. ALL ITEMS ARE FULLWORD ALIGNED IN THE     @Z40LB64*/
*   /* ACQUIRED AREA. BASE POINTERS OF INDIVIDUAL DATA       @Z40LB64*/
*   /* ITEMS ARE INITIALLY USED TO CONTAIN THEIR OFFSET      @Z40LB64*/
*   /* WITHIN THE ACQUIRED AREA UNTIL THE ACQUIRED AREA      @Z40LB64*/
*   /* ADDRESS IS OBTAINED.                                  @Z40LB64*/
*   /* CALCULATE THE SIZES OF THE TWO WORK DATA SET I/O      @Z40LB64*/
*   /* BUFFERS AND THE WORKING CONTROL STORAGE BUFFER        @Z40LB64*/
*   /* WHICH CAN OVERLAY THE WORK DATA SET I/O BUFFERS.      @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0506
*   CHRADDR1=((LENGTH(IOBUF1)+FWDALIGN)/FWDLEN)*FWDLEN;/*    @Z40LB64*/
         LA    @15,264                                             0506
         ST    @15,CHRADDR1                                        0506
*   CHRADDR2=((LENGTH(IOBUF2)+FWDALIGN)/FWDLEN)*FWDLEN;/*    @Z40LB64*/
         ST    @15,CHRADDR2                                        0507
*   WCSBFPTR=((LENGTH(WCSBUF)+FWDALIGN)/FWDLEN)*FWDLEN;/*    @Z40LB64*/
         LA    @14,512                                             0508
         ST    @14,WCSBFPTR                                        0508
*   SPACEAMT=MAX((CHRADDR1+CHRADDR2),WCSBFPTR);/*            @Z40LB64*/
         LR    @05,@15                                             0509
         ALR   @05,@15                                             0509
         CR    @05,@14                                             0509
         BNL   *+6
         LR    @05,@14                                             0509
         ST    @05,SPACEAMT                                        0509
*   CHRADDR2=CHRADDR1;              /*                       @Z40LB64*/
         ST    @15,CHRADDR2                                        0510
*   CHRADDR1=NULLPTR;               /*                       @Z40LB64*/
         SLR   @04,@04                                             0511
         ST    @04,CHRADDR1                                        0511
*   WCSBFPTR=NULLPTR;               /*                       @Z40LB64*/
*                                                                  0512
         ST    @04,WCSBFPTR                                        0512
*   /*****************************************************************/
*   /*                                                               */
*   /* IF STAGING ADAPTER VS. MASS STORAGE CONTROL (MSC)     @Z40LB64*/
*   /* TABLE CHECKING OR MSC VS. MSC TABLE CHECKING IS       @Z40LB64*/
*   /* REQUESTED, CALCULATE THE SIZES OF THE CONFIGURATION   @Z40LB64*/
*   /* BIT MAP, AND INTERNAL MOUNT EQUALIZATION RECORD.      @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0513
*   IF MSCCHK=ON×SACHK=ON THEN                                     0513
         TM    MSCCHK,B'11000000'                                  0513
         BZ    @RF00513                                            0513
*     DO;                           /*                       @Z40LB64*/
*       CBMADDR=SPACEAMT;           /*                       @Z40LB64*/
         ST    @05,CBMADDR                                         0515
*       SPACEAMT=SPACEAMT+2*(((LENGTH(CBMAP)+FWDALIGN)/FWDLEN)*FWDLEN);
         AL    @05,@CF02621                                        0516
         ST    @05,SPACEAMT                                        0516
*                                   /*                       @Z40LB64*/
*     END;                          /*                       @Z40LB64*/
*   IF MSCCHK=ON THEN                                              0518
@RF00513 TM    MSCCHK,B'10000000'                                  0518
         BNO   @RF00518                                            0518
*     DO;                           /*                       @Z40LB64*/
*       IMERPTR=SPACEAMT;           /*                       @Z40LB64*/
         L     @15,SPACEAMT                                        0520
         ST    @15,IMERPTR                                         0520
*       SPACEAMT=SPACEAMT+((LENGTH(IMERECRD)+FWDALIGN)/FWDLEN)*FWDLEN;
         AL    @15,@CF02209                                        0521
         ST    @15,SPACEAMT                                        0521
*                                   /*                       @Z40LB64*/
*     END;                          /*                       @Z40LB64*/
*                                                                  0522
*   /*****************************************************************/
*   /*                                                               */
*   /* IF 'WORKDATASET' KEYWORD WAS SPECIFIED, CALCULATE     @Z40LB64*/
*   /* THE SIZE OF THE 'UALLOC' MACRO ARGUMENT LIST.         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0523
*   IF ADDR(WDS)^=NULLPTR THEN                                     0523
@RF00518 L     @15,@PC00001+4                                      0523
         L     @15,FDTPTR+4(,@15)                                  0523
         LTR   @15,@15                                             0523
         BZ    @RF00523                                            0523
*     DO;                           /*                       @Z40LB64*/
*       ALLPTR=SPACEAMT;            /*                       @Z40LB64*/
         L     @15,SPACEAMT                                        0525
         LR    ALLPTR,@15                                          0525
*       SPACEAMT=SPACEAMT+((LENGTH(ALLAGL)+FWDALIGN)/FWDLEN)*FWDLEN;
         AL    @15,@CF00223                                        0526
         ST    @15,SPACEAMT                                        0526
*                                   /*                       @Z40LB64*/
*     END;                          /*                       @Z40LB64*/
*                                                                  0527
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE SIZES OF THE'UEXCP' MACRO ('OPEN' AND   @Z40LB64*/
*   /* 'GET' OPTIONS) ARGUMENT LIST, THE 'USSC-READ WSC'     @Z40LB64*/
*   /* ARGUMENT LIST, AND THE CCHHR TABLE.                   @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0528
*   EXARGPTR=SPACEAMT;              /*                       @Z40LB64*/
@RF00523 L     @02,SPACEAMT                                        0528
         ST    @02,EXARGPTR                                        0528
*   SPACEAMT=SPACEAMT+((MAX(LENGTH(EXOARG),LENGTH(EXGARG))+FWDALIGN)/
*       FWDLEN)*FWDLEN;             /*                       @Z40LB64*/
         AL    @02,@CF02625                                        0529
         ST    @02,SPACEAMT                                        0529
*   RWCSPTR=SPACEAMT;               /*                       @Z40LB64*/
         ST    @02,RWCSPTR                                         0530
*   SPACEAMT=SPACEAMT+((LENGTH(RWCSLIST)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    @02,@CF00809                                        0531
         ST    @02,SPACEAMT                                        0531
*   CCHHRPTR=SPACEAMT;              /*                       @Z40LB64*/
         ST    @02,CCHHRPTR                                        0532
*   SPACEAMT=SPACEAMT+((LENGTH(CCHHRTBL)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
*                                                                  0533
         AL    @02,@CF02630                                        0533
         ST    @02,SPACEAMT                                        0533
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE SIZES OF THE 'ENTRYARG' AND 'MSGARG'    @Z40LB64*/
*   /* ARGUMENT LISTS.                                       @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0534
*   EARGPTR=SPACEAMT;               /*                       @Z40LB64*/
         ST    @02,EARGPTR                                         0534
*   SPACEAMT=SPACEAMT+((LENGTH(ENTRYARG)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    @02,@CF02607                                        0535
         ST    @02,SPACEAMT                                        0535
*   MARGPTR=SPACEAMT;               /*                       @Z40LB64*/
         ST    @02,MARGPTR                                         0536
*   SPACEAMT=SPACEAMT+((LENGTH(MSGARG)+FWDALIGN)/FWDLEN)*FWDLEN;/* 0537
*                                                            @Z40LB64*/
*                                                                  0537
         AL    @02,@CF02633                                        0537
         ST    @02,SPACEAMT                                        0537
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE CALCULATED AMOUNT OF STORAGE REQUIRED FOR  @Z40LB64*/
*   /* THE DURATION OF CHECKMSS PROCESSING.                  @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0538
*   CALL IDCSAGP0(GDTTBL,SPACEAMT,SPACEPTR,CHPOOLID,SETZERO);/*    0538
*                                                            @Z40LB64*/
         L     @02,@PC00001                                        0538
         ST    @02,@AL00001                                        0538
         LA    @15,SPACEAMT                                        0538
         ST    @15,@AL00001+4                                      0538
         LA    @15,SPACEPTR                                        0538
         ST    @15,@AL00001+8                                      0538
         LA    @15,@CC02193                                        0538
         ST    @15,@AL00001+12                                     0538
         LA    @15,SETZERO                                         0538
         ST    @15,@AL00001+16                                     0538
         MVI   @AL00001+16,X'80'                                   0538
         L     @15,GDTGPL(,@02)                                    0538
         LA    @01,@AL00001                                        0538
         BALR  @14,@15                                             0538
*   RESPECIFY                                                      0539
*     RTNREG RSTD;                                                 0539
*   TESTRC=RTNREG;                                                 0540
         LR    TESTRC,RTNREG                                       0540
*   RESPECIFY                                                      0541
*     RTNREG UNRSTD;                /*                       @Z40LB64*/
*                                                                  0541
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE REQUIRED STORAGE WAS NOT SUCCESSFULLY          @Z40LB64*/
*   /* OBTAINED, TERMINATE CHECKMSS PROCESSING.              @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0542
*   IF TESTRC^=0 THEN                                              0542
         LTR   TESTRC,TESTRC                                       0542
         BZ    @RF00542                                            0542
*     DO;                           /*                       @Z40LB64*/
*       NOSPACE=ON;                 /*                       @Z40LB64*/
         OI    NOSPACE,B'10000000'                                 0544
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0545
         MVC   LASTCOND(2,@15),@CH00567                            0545
*       RETURN;                     /*                       @Z40LB64*/
@EL00003 DS    0H                                                  0546
@EF00003 DS    0H                                                  0546
@ER00003 LM    @14,@05,@SA00003                                    0546
         LM    @08,@12,@SA00003+32                                 0546
         BR    @14                                                 0546
*     END;                          /*                       @Z40LB64*/
*                                                                  0547
*   /*****************************************************************/
*   /*                                                               */
*   /* REQUIRED STORAGE WAS SUCCESSFULLY OBTAINED.           @Z40LB64*/
*   /* INITIALIZE BASE POINTERS WITHIN THE ACQUIRED AREA.    @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0548
*   CHRADDR1=SPACEPTR+CHRADDR1;     /*                       @Z40LB64*/
@RF00542 L     @15,SPACEPTR                                        0548
         LR    @14,@15                                             0548
         AL    @14,CHRADDR1                                        0548
         ST    @14,CHRADDR1                                        0548
*   CHRADDR2=SPACEPTR+CHRADDR2;     /*                       @Z40LB64*/
         LR    @14,@15                                             0549
         AL    @14,CHRADDR2                                        0549
         ST    @14,CHRADDR2                                        0549
*   WCSBFPTR=SPACEPTR+WCSBFPTR;     /*                       @Z40LB64*/
         LR    @14,@15                                             0550
         AL    @14,WCSBFPTR                                        0550
         ST    @14,WCSBFPTR                                        0550
*   IF MSCCHK=ON×SACHK=ON THEN                                     0551
         TM    MSCCHK,B'11000000'                                  0551
         BZ    @RF00551                                            0551
*     CBMADDR=SPACEPTR+CBMADDR;     /*                       @Z40LB64*/
         AL    @15,CBMADDR                                         0552
         ST    @15,CBMADDR                                         0552
*   IF MSCCHK=ON THEN                                              0553
@RF00551 TM    MSCCHK,B'10000000'                                  0553
         BNO   @RF00553                                            0553
*     IMERPTR=SPACEPTR+IMERPTR;     /*                       @Z40LB64*/
         L     @15,SPACEPTR                                        0554
         AL    @15,IMERPTR                                         0554
         ST    @15,IMERPTR                                         0554
*   IF ADDR(WDS)^=NULLPTR THEN                                     0555
@RF00553 L     @15,@PC00001+4                                      0555
         L     @15,FDTPTR+4(,@15)                                  0555
         LTR   @15,@15                                             0555
         BZ    @RF00555                                            0555
*     ALLPTR=SPACEPTR+ALLPTR;       /*                       @Z40LB64*/
         AL    ALLPTR,SPACEPTR                                     0556
*   EXARGPTR=SPACEPTR+EXARGPTR;     /*                       @Z40LB64*/
@RF00555 L     @15,SPACEPTR                                        0557
         LR    @14,@15                                             0557
         AL    @14,EXARGPTR                                        0557
         ST    @14,EXARGPTR                                        0557
*   RWCSPTR=SPACEPTR+RWCSPTR;       /*                       @Z40LB64*/
         LR    @14,@15                                             0558
         AL    @14,RWCSPTR                                         0558
         ST    @14,RWCSPTR                                         0558
*   CCHHRPTR=SPACEPTR+CCHHRPTR;     /*                       @Z40LB64*/
         LR    @14,@15                                             0559
         AL    @14,CCHHRPTR                                        0559
         ST    @14,CCHHRPTR                                        0559
*   EARGPTR=SPACEPTR+EARGPTR;       /*                       @Z40LB64*/
         LR    @14,@15                                             0560
         AL    @14,EARGPTR                                         0560
         ST    @14,EARGPTR                                         0560
*   MARGPTR=SPACEPTR+MARGPTR;       /*                       @Z40LB64*/
*                                                                  0561
         AL    @15,MARGPTR                                         0561
         ST    @15,MARGPTR                                         0561
*   /*****************************************************************/
*   /*                                                               */
*   /* IF STAGING ADAPTER VS. MSC CHECKING OR MSC VS. MSC    @Z40LB64*/
*   /* CHECKING HAS BEEN REQUESTED, OBTAIN THE MSC           @Z40LB64*/
*   /* CONFIGURATION BIT MAP FROM THE MSC WORKING CONTROL    @Z40LB64*/
*   /* STORAGE TO DETERMINE THE NUMBER OF VALID STAGING      @Z40LB64*/
*   /* ADAPTERS AND MSFS. IF THE CONFIGURATION BIT MAP       @Z40LB64*/
*   /* IS NOT SUCCESSFULLY OBTAINED, TERMINATE PROCESSING.   @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
*   IF SACHK=ON×MSCCHK=ON THEN                                     0562
         TM    SACHK,B'11000000'                                   0562
         BZ    @RF00562                                            0562
*CBMDATA:                                                          0563
*     DO;                           /*                       @Z40LB64*/
CBMDATA  DS    0H                                                  0564
*       CBMPTR=CBMADDR;             /*                       @Z40LB64*/
         L     CBMPTR,CBMADDR                                      0564
*       CBMFLAG=ON;                 /*                       @Z40LB64*/
         L     @02,EARGPTR                                         0565
         OI    CBMFLAG(@02),B'01000000'                            0565
*       CALL IDCCH03(GDTTBL,CDALIST);/*                      @Z40LB64*/
         L     @02,@PC00001                                        0566
         ST    @02,@AL00001                                        0566
         LA    @02,CDALIST                                         0566
         ST    @02,@AL00001+4                                      0566
         L     @15,@CV02184                                        0566
         LA    @01,@AL00001                                        0566
         BALR  @14,@15                                             0566
*       IF GETRC^=0 THEN                                           0567
         L     @02,EARGPTR                                         0567
         LH    @02,GETRC(,@02)                                     0567
         LTR   @02,@02                                             0567
         BZ    @RF00567                                            0567
*         DO;                       /*                       @Z40LB64*/
*           LASTCOND=LASTCC12;      /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0569
         MVC   LASTCOND(2,@15),@CH00567                            0569
*           RETURN;                 /*                       @Z40LB64*/
         B     @EL00003                                            0570
*         END;                      /*                       @Z40LB64*/
*                                                                  0571
*       /*************************************************************/
*       /*                                                           */
*       /* COPY THE CONFIGURATION BIT MAP TO ITS PLACE       @Z40LB64*/
*       /* IN THE ACQUIRED STORAGE AREA.                     @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0572
*       CBMADDR->MOVEAREA(1:(LENGTH(CBMAP)*2))=TBLADDR->MOVEAREA(1:(
*           LENGTH(CBMAP)*2));      /*                       @Z40LB64*/
*                                                                  0572
@RF00567 L     @06,CBMADDR                                         0572
         L     @02,EARGPTR                                         0572
         L     @02,TBLADDR(,@02)                                   0572
         MVC   MOVEAREA(80,@06),MOVEAREA(@02)                      0572
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE THE NUMBER OF VALID                     @Z40LB64*/
*       /* STAGING ADAPTERS FROM THE MSC CONFIGURATION       @Z40LB64*/
*       /* BIT MAP.                                          @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0573
*       TMPBYTE1=CBMSA(1);          /*                       @Z40LB64*/
         MVC   TMPBYTE1(1),CBMSA(CBMPTR)                           0573
*       TMPBYTE2=CBMSA(2);          /*                       @Z40LB64*/
         MVC   TMPBYTE2(1),CBMSA+1(CBMPTR)                         0574
*       MTCHMASK=HWRDMASK;          /*                       @Z40LB64*/
         LH    @06,HWRDMASK                                        0575
         N     @06,@CF02684                                        0575
         STH   @06,MTCHMASK                                        0575
*       SAVLDCNT=0;                 /*                       @Z40LB64*/
         SLR   @06,@06                                             0576
         STH   @06,SAVLDCNT                                        0576
*       DO SA#=1 TO SAMAX;          /*                       @Z40LB64*/
         LA    SA#,1                                               0577
@DL00577 DS    0H                                                  0578
*         IF TEMPHWRD>MTCHMASK THEN                                0578
         CLC   TEMPHWRD(2),MTCHMASK                                0578
         BNH   @RF00578                                            0578
*           DO;                     /*                       @Z40LB64*/
*             SAVLDCNT=SAVLDCNT+1;  /*                       @Z40LB64*/
         LA    @06,1                                               0580
         AH    @06,SAVLDCNT                                        0580
         STH   @06,SAVLDCNT                                        0580
*             VLDSAID(SAVLDCNT)=SA#-1;/*                     @Z40LB64*/
         ALR   @06,@06                                             0581
         LR    @04,SA#                                             0581
         BCTR  @04,0                                               0581
         STH   @04,VLDSAID-2(@06)                                  0581
*             TEMPHWRD=TEMPHWRD&MTCHMASK;/*                  @Z40LB64*/
         LH    @06,MTCHMASK                                        0582
         N     @06,@CF02684                                        0582
         LH    @04,TEMPHWRD                                        0582
         N     @04,@CF02684                                        0582
         NR    @06,@04                                             0582
         STH   @06,TEMPHWRD                                        0582
*           END;                    /*                       @Z40LB64*/
*         MTCHMASK=MTCHMASK/2;      /*                       @Z40LB64*/
@RF00578 LH    @06,MTCHMASK                                        0584
         N     @06,@CF02684                                        0584
         SRL   @06,1                                               0584
         STH   @06,MTCHMASK                                        0584
*         VLDSSID(SA#)=NULLSSID;    /*                       @ZA27324*/
         LR    @06,SA#                                             0585
         ALR   @06,@06                                             0585
         SLR   @04,@04                                             0585
         BCTR  @04,0                                               0585
         STH   @04,VLDSSID-2(@06)                                  0585
*       END;                        /*                       @Z40LB64*/
*                                                                  0586
         AL    SA#,@CF00221                                        0586
         C     SA#,@CF00476                                        0586
         BNH   @DL00577                                            0586
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE THE NUMBER OF VALID MSFS FROM           @Z40LB64*/
*       /* THE MSC CONFIGURATION BIT MAP.                    @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0587
*       MSF#=0;                     /*                       @Z40LB64*/
         SLR   @06,@06                                             0587
         LR    MSF#,@06                                            0587
*       MSFVLCNT=0;                 /*                       @Z40LB64*/
         STH   @06,MSFVLCNT                                        0588
*       DO CBMBIT#=1 TO LENGTH(CBMMSF) BY 2;/*               @Z40LB64*/
         LA    CBMBIT#,1                                           0589
@DL00589 DS    0H                                                  0590
*         IF((CBMMSF&BITMASK(CBMBIT#))^='00'X)×((CBMMSF&BITMASK(CBMBIT#
*             +1))^='00'X) THEN                                    0590
         MVC   @TS00001(1),CBMMSF(CBMPTR)                          0590
         LA    @06,BITMASK-1(CBMBIT#)                              0590
         NC    @TS00001(1),0(@06)                                  0590
         CLI   @TS00001,X'00'                                      0590
         BNE   @RT00590                                            0590
         MVC   @TS00001(1),CBMMSF(CBMPTR)                          0590
         LA    @06,BITMASK(CBMBIT#)                                0590
         NC    @TS00001(1),0(@06)                                  0590
         CLI   @TS00001,X'00'                                      0590
         BE    @RF00590                                            0590
@RT00590 DS    0H                                                  0591
*           DO;                     /*                       @Z40LB64*/
*             MSF#=MSF#+1;          /*                       @Z40LB64*/
         LA    @06,1                                               0592
         ALR   MSF#,@06                                            0592
*             MSFVLCNT=MSFVLCNT+1;  /*                       @Z40LB64*/
         AH    @06,MSFVLCNT                                        0593
         STH   @06,MSFVLCNT                                        0593
*             VLDMSFID(MSF#)=(CBMBIT#-1)/2;/*                @Z40LB64*/
         LR    @06,MSF#                                            0594
         ALR   @06,@06                                             0594
         LR    @00,CBMBIT#                                         0594
         BCTR  @00,0                                               0594
         SRDA  @00,32                                              0594
         D     @00,@CF00155                                        0594
         STH   @01,VLDMSFID-2(@06)                                 0594
*           END;                    /*                       @Z40LB64*/
*       END;                        /*                       @Z40LB64*/
@RF00590 AL    CBMBIT#,@CF00155                                    0596
         C     CBMBIT#,@CF00181                                    0596
         BNH   @DL00589                                            0596
*     END CBMDATA;                  /*                       @Z40LB64*/
*                                                                  0597
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE AMOUNT OF OVERLAYABLE SPACE REQUIRED    @Z40LB64*/
*   /* BASED UPON CHECKMSS OPTIONS REQUESTED AND THE NUMBER  @Z40LB64*/
*   /* OF VALID STAGING ADAPTERS.                            @Z40LB64*/
*   /* CALCULATE THE SIZE OF THE 'UIOINFO' MACRO ARGUMENT    @Z40LB64*/
*   /* LIST, 'INFOAREA' BLOCK, 'UMSSUNIT' ARGUMENT LIST,     @Z40LB64*/
*   /* WORK DATA SET CCHHR AREA, 'UCCS-ACQUIRE' ARGUMENT     @Z40LB64*/
*   /* LIST, AND 'USSC-COPYTABL' ARGUMENT LIST.              @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0598
*   IOINFPTR=NULLPTR;               /*                       @Z40LB64*/
@RF00562 SLR   @15,@15                                             0598
         ST    @15,IOINFPTR                                        0598
*   OVRLDAMT=((LENGTH(IOINFOPT)+FWDALIGN)/FWDLEN)*FWDLEN;          0599
         LA    OVRLDAMT,4                                          0599
*   INFOAPTR=OVRLDAMT;              /*                       @Z40LB64*/
         ST    OVRLDAMT,INFOAPTR                                   0600
*   OVRLDAMT=OVRLDAMT+((LENGTH(INFOAREA)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLDAMT,@CF02619                                   0601
*   CKAGLPTR=OVRLDAMT;              /*                       @Z40LB64*/
         ST    OVRLDAMT,CKAGLPTR                                   0602
*   OVRLDAMT=OVRLDAMT+((LENGTH(CKAGL)+FWDALIGN)/FWDLEN)*FWDLEN;/*  0603
*                                                            @Z40LB64*/
         AL    OVRLDAMT,@CF00223                                   0603
*   WDSAPTR=OVRLDAMT;               /*                       @Z40LB64*/
         LR    WDSAPTR,OVRLDAMT                                    0604
*   OVRLDAMT=OVRLDAMT+((LENGTH(WDSCCHHR)+FWDALIGN)+FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLDAMT,@CF02630                                   0605
*   ACQPTR=OVRLDAMT;                /*                       @Z40LB64*/
         ST    OVRLDAMT,ACQPTR                                     0606
*   OVRLDAMT=OVRLDAMT+((LENGTH(ACQLIST)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLDAMT,@CF02635                                   0607
*   COTBPTR=OVRLDAMT;               /*                       @Z40LB64*/
         ST    OVRLDAMT,COTBPTR                                    0608
*   OVRLDAMT=OVRLDAMT+((LENGTH(COTBLIST)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
*                                                                  0609
         AL    OVRLDAMT,@CF00312                                   0609
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE AMOUNT OF SPACE WHICH WILL OVERLAY      @Z40LB64*/
*   /* THE PREVIOUSLY CALCULATED OVERLAYABLE SPACE.          @Z40LB64*/
*   /* CALCULATE THE SIZES OF THE MESSAGE AREA, TEXT AREA,   @Z40LB64*/
*   /* FORMAT AREA, AND BLOCK DATA AREA.                     @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0610
*   MSGAPTR=NULLPTR;                /*                       @Z40LB64*/
         ST    @15,MSGAPTR                                         0610
*   OVRLYAMT=((LENGTH(MSGAREA)+FWDALIGN)/FWDLEN)*FWDLEN;/*   @Z40LB64*/
         LA    @15,120                                             0611
         LR    OVRLYAMT,@15                                        0611
*   TEXTAPTR=OVRLYAMT;              /*                       @Z40LB64*/
         ST    OVRLYAMT,TEXTAPTR                                   0612
*   OVRLYAMT=OVRLYAMT+((LENGTH(TEXTAREA)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         ALR   OVRLYAMT,@15                                        0613
*   FMTAPTR=OVRLYAMT;               /*                       @Z40LB64*/
         ST    OVRLYAMT,FMTAPTR                                    0614
*   OVRLYAMT=OVRLYAMT+((LENGTH(FMTAREA)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLYAMT,@CF02213                                   0615
*   BDATAPTR=OVRLYAMT;              /*                       @Z40LB64*/
         ST    OVRLYAMT,BDATAPTR                                   0616
*   OVRLYAMT=OVRLYAMT+((LENGTH(BLKDATA)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
*                                                                  0617
         ALR   OVRLYAMT,@15                                        0617
*   /*****************************************************************/
*   /*                                                               */
*   /* IF STAGING ADAPTER VS. MSC TABLE CHECKING IS          @Z40LB64*/
*   /* REQUESTED, DETERMINE THE LENGTH OF THE INTERNAL       @Z40LB64*/
*   /* STAGING ADAPTER TABLES. THE AMOUNT REQUIRED IS        @Z40LB64*/
*   /* DETERMINED BY THE NUMBER OF VALID STAGING ADAPTERS.   @Z40LB64*/
*   /* POINTERS TO THE INTERNAL SA TABLES FOR INVALID SA'S   @Z40LB64*/
*   /* ARE SET TO ZERO AND VALID SA'S ARE SET NONZERO.       @Z40LB64*/
*   /* IF MSC VS. MSC TABLE CHECKING IS REQUESTED, BUT       @Z40LB64*/
*   /* SA VS. MSC CHECKING IS NOT REQUESTED, ONLY THE        @Z40LB64*/
*   /* SA TABLE POINTER ARRAYS ARE INITIALIZED.              @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0618
*   IF MSCCHK=ON×SACHK=ON THEN                                     0618
         TM    MSCCHK,B'11000000'                                  0618
         BZ    @RF00618                                            0618
*     DO;                           /*                       @Z40LB64*/
*       DO SA#=1 TO SAMAX;          /*                       @Z40LB64*/
         LA    SA#,1                                               0620
@DL00620 DS    0H                                                  0621
*         IVADPTR(SA#)=NULLPTR;     /*                       @Z40LB64*/
         SLR   @04,@04                                             0621
         LR    @15,SA#                                             0621
         SLA   @15,2                                               0621
         ST    @04,IVADPTR-4(@15)                                  0621
*         IVVITPTR(SA#)=NULLPTR;    /*                       @Z40LB64*/
         ST    @04,IVVITPTR-4(@15)                                 0622
*         IPSTPTR(SA#)=NULLPTR;     /*                       @Z40LB64*/
         ST    @04,IPSTPTR-4(@15)                                  0623
*         ILTRPTR(SA#)=NULLPTR;     /*                       @Z40LB64*/
         ST    @04,ILTRPTR-4(@15)                                  0624
*       END;                        /*                       @Z40LB64*/
         AL    SA#,@CF00221                                        0625
         C     SA#,@CF00476                                        0625
         BNH   @DL00620                                            0625
*       DO SA#=1 TO SAVLDCNT;       /*                       @Z40LB64*/
         LA    SA#,1                                               0626
         B     @DE00626                                            0626
@DL00626 DS    0H                                                  0627
*         SAID#=VLDSAID(SA#)+1;     /*                       @Z40LB64*/
         LR    @15,SA#                                             0627
         ALR   @15,@15                                             0627
         LA    SAID#,1                                             0627
         AH    SAID#,VLDSAID-2(@15)                                0627
*         IVADPTR(SAID#)=OVRLYAMT;  /*                       @Z40LB64*/
         LR    @15,SAID#                                           0628
         SLA   @15,2                                               0628
         ST    OVRLYAMT,IVADPTR-4(@15)                             0628
*         IF SACHK=ON THEN                                         0629
         TM    SACHK,B'01000000'                                   0629
         BNO   @RF00629                                            0629
*           OVRLYAMT=OVRLYAMT+((DIM(IVAD,1)*DIM(IVAD,2)*LENGTH(IVAD)+
*               FWDALIGN)/FWDLEN)*FWDLEN;/*                  @Z40LB64*/
         AL    OVRLYAMT,@CF00377                                   0630
*         IVVITPTR(SAID#)=OVRLYAMT; /*                       @Z40LB64*/
@RF00629 LR    @15,SAID#                                           0631
         SLA   @15,2                                               0631
         ST    OVRLYAMT,IVVITPTR-4(@15)                            0631
*         IF SACHK=ON THEN                                         0632
         TM    SACHK,B'01000000'                                   0632
         BNO   @RF00632                                            0632
*           OVRLYAMT=OVRLYAMT+((DIM(IVVIT)*LENGTH(IVVIT)+FWDALIGN)/
*               FWDLEN)*FWDLEN;     /*                       @Z40LB64*/
         AL    OVRLYAMT,@CF00377                                   0633
*         IPSTPTR(SAID#)=OVRLYAMT;  /*                       @Z40LB64*/
@RF00632 LR    @15,SAID#                                           0634
         SLA   @15,2                                               0634
         ST    OVRLYAMT,IPSTPTR-4(@15)                             0634
*         IF SACHK=ON THEN                                         0635
         TM    SACHK,B'01000000'                                   0635
         BNO   @RF00635                                            0635
*           OVRLYAMT=OVRLYAMT+((DIM(IPST,1)*DIM(IPST,2)*DIM(IPST,3)*
*               LENGTH(IPST)+FWDALIGN)/FWDLEN)*FWDLEN;/*     @Z40LB64*/
         AL    OVRLYAMT,@CF02641                                   0636
*         ILTRPTR(SAID#)=OVRLYAMT;  /*                       @Z40LB64*/
@RF00635 LR    @15,SAID#                                           0637
         SLA   @15,2                                               0637
         ST    OVRLYAMT,ILTRPTR-4(@15)                             0637
*         IF SACHK=ON THEN                                         0638
         TM    SACHK,B'01000000'                                   0638
         BNO   @RF00638                                            0638
*           OVRLYAMT=OVRLYAMT+((DIM(ILTR)*LENGTH(ILTR)+FWDALIGN)/FWDLEN
*               )*FWDLEN;           /*                       @Z40LB64*/
         AL    OVRLYAMT,@CF00476                                   0639
*       END;                        /*                       @Z40LB64*/
@RF00638 AL    SA#,@CF00221                                        0640
@DE00626 CH    SA#,SAVLDCNT                                        0640
         BNH   @DL00626                                            0640
*     END;                          /*                       @Z40LB64*/
*                                                                  0641
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE SIZE OF THE MSC MOUNTED VOLUME TABLE    @Z40LB64*/
*   /* CONTROL BLOCK.                                        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0642
*   MVCBADDR=OVRLYAMT;              /*                       @Z40LB64*/
@RF00618 ST    OVRLYAMT,MVCBADDR                                   0642
*   OVRLYAMT=OVRLYAMT+((MVTCBTOT*RECLNGTH+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
*                                                                  0643
         AL    OVRLYAMT,@CF02645                                   0643
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVI VS. MSC CHECKING IS REQUESTED, DETERMINE      @Z40LB64*/
*   /* THE MSVI-RELATED STORAGE REQUIREMENT WHICH CANNOT     @Z40LB64*/
*   /* BE OVERLAYED FOLLOWING 'CHECKMSVI' PROCESSING.        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0644
*   IF MSVICHK=ON THEN                                             0644
         TM    MSVICHK,B'00100000'                                 0644
         BNO   @RF00644                                            0644
*     DO;                           /*                       @Z40LB64*/
*                                                                  0645
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE THE SIZES OF THE MSC VOLUME             @Z40LB64*/
*       /* INVENTORY CHECK-OFF TABLE, MSC TRANSIENT          @Z40LB64*/
*       /* VOLUME LIST CHECK-OFF TABLE, AND THE              @Z40LB64*/
*       /* MSC MOUNTED VOLUME TABLE CHECK-OFF TABLE.         @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0646
*       VICOPTR=OVRLYAMT;           /*                       @Z40LB64*/
         ST    OVRLYAMT,VICOPTR                                    0646
*       OVRLYAMT=OVRLYAMT+((DIM(VICHKFF)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLYAMT,@CF01713                                   0647
*       TVLCOPTR=OVRLYAMT;          /*                       @Z40LB64*/
         ST    OVRLYAMT,TVLCOPTR                                   0648
*       OVRLYAMT=OVRLYAMT+((DIM(TVLCHKFF)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLYAMT,@CF01716                                   0649
*       MVTCOPTR=OVRLYAMT;          /*                       @Z40LB64*/
         ST    OVRLYAMT,MVTCOPTR                                   0650
*       OVRLYAMT=OVRLYAMT+((DIM(MVTCHKFF)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLYAMT,@CF01719                                   0651
*     END;                          /*                       @Z40LB64*/
*                                                                  0652
*   /*****************************************************************/
*   /*                                                               */
*   /* THE REQUIRED ALLOCATABLE SPACE IS THE MAXIMUM OF      @Z40LB64*/
*   /* THE OVERLAYABLE AREA AND THE OVERLAYING AREA.         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0653
*   SPACEAMT=MAX(OVRLDAMT,OVRLYAMT);/*                       @Z40LB64*/
*                                                                  0653
@RF00644 LR    @15,OVRLYAMT                                        0653
         CR    @15,OVRLDAMT                                        0653
         BNL   *+6
         LR    @15,OVRLDAMT                                        0653
         ST    @15,SPACEAMT                                        0653
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVI VS. MSC CHECKING IS REQUESTED, DETERMINE      @Z40LB64*/
*   /* THE MSVI-RELATED STORAGE REQUIREMENT WHICH CAN BE     @Z40LB64*/
*   /* OVERLAYED FOLLOWING 'CHECKMSVI' PROCESSING.           @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0654
*   OVRLDAMT=0;                     /*                       @Z40LB64*/
         SLR   OVRLDAMT,OVRLDAMT                                   0654
*   IF MSVICHK=ON THEN                                             0655
         TM    MSVICHK,B'00100000'                                 0655
         BNO   @RF00655                                            0655
*     DO;                           /*                       @Z40LB64*/
*                                                                  0656
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE THE SIZES OF THE MSC MANUFACTURER'S     @Z40LB64*/
*       /* ID CONVERSION TABLE, 'USSC-RVVI' MACRO            @Z40LB64*/
*       /* ARGUMENT LIST, MSVI CPU RECORD, AND MSVI          @Z40LB64*/
*       /* RECORD BUFFER.                                    @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0657
*       MICPTR=SPACEAMT;            /*                       @Z40LB64*/
         ST    @15,MICPTR                                          0657
*       OVRLDAMT=((LENGTH(MICTABLE)+FWDALIGN)/FWDLEN)*FWDLEN;/*    0658
*                                                            @Z40LB64*/
         LA    OVRLDAMT,128                                        0658
*       RVVIPTR=SPACEAMT+OVRLDAMT;  /*                       @Z40LB64*/
         LR    @02,OVRLDAMT                                        0659
         ALR   @02,@15                                             0659
         ST    @02,RVVIPTR                                         0659
*       OVRLDAMT=OVRLDAMT+((LENGTH(RVVI)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLDAMT,@CF02630                                   0660
*       CPUIDPTR=SPACEAMT+OVRLDAMT; /*                       @Z40LB64*/
         LR    @02,OVRLDAMT                                        0661
         ALR   @02,@15                                             0661
         ST    @02,CPUIDPTR                                        0661
*       OVRLDAMT=OVRLDAMT+((LENGTH(CPUID)+FWDALIGN)/FWDLEN)*FWDLEN;/*
*                                                            @Z40LB64*/
         AL    OVRLDAMT,@CF02656                                   0662
*       MSVIAPTR=SPACEAMT+OVRLDAMT; /*                       @Z40LB64*/
         ALR   @15,OVRLDAMT                                        0663
         ST    @15,MSVIAPTR                                        0663
*       OVRLDAMT=OVRLDAMT+((LENGTH(MSVIREC)+FWDALIGN)/FWDLEN)*FWDLEN;
         AL    OVRLDAMT,@CF02657                                   0664
*                                   /*                       @Z40LB64*/
*     END;                          /*                       @Z40LB64*/
*                                                                  0665
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSC VS. MSC CHECKING WAS REQUESTED, DETERMINE      @Z40LB64*/
*   /* THE CELL MAP AND CELL MAP CHECK-OFF TABLE STORAGE     @Z40LB64*/
*   /* REQUIREMENTS WHICH CAN BE OVERLAYED FOLLOWING         @Z40LB64*/
*   /* 'CELLMAP' PROCESSING.                                 @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0666
*   OVRLYAMT=0;                     /*                       @Z40LB64*/
@RF00655 SLR   OVRLYAMT,OVRLYAMT                                   0666
*   IF MSCCHK=ON THEN                                              0667
         TM    MSCCHK,B'10000000'                                  0667
         BNO   @RF00667                                            0667
*     DO;                           /*                       @Z40LB64*/
*       DO MSF#=1 TO MSFVLCNT+1;    /*                       @Z40LB64*/
         LA    MSF#,1                                              0669
         B     @DE00669                                            0669
@DL00669 DS    0H                                                  0670
*         DO CMBLK#=1 TO BLKSMSF;   /*                       @Z40LB64*/
         LA    CMBLK#,1                                            0670
@DL00670 DS    0H                                                  0671
*           CMBUFPTR(MSF#,CMBLK#)=SPACEAMT+OVRLYAMT;/*       @Z40LB64*/
         LR    @15,MSF#                                            0671
         SLA   @15,2                                               0671
         ALR   @15,CMBLK#                                          0671
         SLA   @15,2                                               0671
         LR    @14,OVRLYAMT                                        0671
         AL    @14,SPACEAMT                                        0671
         ST    @14,CMBUFPTR-20(@15)                                0671
*           OVRLYAMT=OVRLYAMT+CMBLKLEN;/*                    @Z40LB64*/
         AL    OVRLYAMT,@CF01098                                   0672
*         END;                      /*                       @Z40LB64*/
         AL    CMBLK#,@CF00221                                     0673
         C     CMBLK#,@CF00044                                     0673
         BNH   @DL00670                                            0673
*       END;                        /*                       @Z40LB64*/
         AL    MSF#,@CF00221                                       0674
@DE00669 LA    @05,1                                               0674
         AH    @05,MSFVLCNT                                        0674
         CR    MSF#,@05                                            0674
         BNH   @DL00669                                            0674
*       DO MSF#=1 TO MSFVLCNT;      /*                       @Z40LB64*/
         LA    MSF#,1                                              0675
         B     @DE00675                                            0675
@DL00675 DS    0H                                                  0676
*         DO CMBLK#=1 TO BLKSMSF;   /*                       @Z40LB64*/
         LA    CMBLK#,1                                            0676
@DL00676 DS    0H                                                  0677
*           CMCOPTR(MSF#,CMBLK#)=SPACEAMT+OVRLYAMT;/*        @Z40LB64*/
         LR    @15,MSF#                                            0677
         SLA   @15,2                                               0677
         ALR   @15,CMBLK#                                          0677
         SLA   @15,2                                               0677
         LR    @14,OVRLYAMT                                        0677
         AL    @14,SPACEAMT                                        0677
         ST    @14,CMCOPTR-20(@15)                                 0677
*           OVRLYAMT=OVRLYAMT+CMBLKLEN;/*                    @Z40LB64*/
         AL    OVRLYAMT,@CF01098                                   0678
*         END;                      /*                       @Z40LB64*/
         AL    CMBLK#,@CF00221                                     0679
         C     CMBLK#,@CF00044                                     0679
         BNH   @DL00676                                            0679
*       END;                        /*                       @Z40LB64*/
         AL    MSF#,@CF00221                                       0680
@DE00675 CH    MSF#,MSFVLCNT                                       0680
         BNH   @DL00675                                            0680
*     END;                          /*                       @Z40LB64*/
*                                                                  0681
*   /*****************************************************************/
*   /*                                                               */
*   /* THE REQUIRED ALLOCATABLE SPACE IS THE MAXIMUM OF      @Z40LB64*/
*   /* THE OVERLAYABLE AREA AND THE OVERLAYING AREA.         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0682
*   OVRLDAMT=MAX(OVRLDAMT,OVRLYAMT);/*                       @Z40LB64*/
*                                                                  0682
@RF00667 CR    OVRLDAMT,OVRLYAMT                                   0682
         BNL   *+6
         LR    OVRLDAMT,OVRLYAMT                                   0682
*   /*****************************************************************/
*   /*                                                               */
*   /* IF STAGING ADAPTER VS. MSC CHECKING OR MSC VS. MSC    @Z40LB64*/
*   /* TABLE CHECKING IS REQUESTED, DETERMINE THE MSC AND    @Z40LB64*/
*   /* STAGING ADAPTER TABLES, AND CHECK-OFF TABLES          @Z40LB64*/
*   /* STORAGE REQUIREMENTS.                                 @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0683
*   OVRLYAMT=0;                     /*                       @Z40LB64*/
         SLR   OVRLYAMT,OVRLYAMT                                   0683
*   IF MSCCHK=ON×SACHK=ON THEN                                     0684
         TM    MSCCHK,B'11000000'                                  0684
         BZ    @RF00684                                            0684
*     DO;                           /*                       @Z40LB64*/
*       IF MSCCHK=ON THEN                                          0686
         TM    MSCCHK,B'10000000'                                  0686
         BNO   @RF00686                                            0686
*         DO;                       /*                       @Z40LB64*/
*                                                                  0687
*           /*********************************************************/
*           /*                                                       */
*           /* CALCULATE THE SIZE OF THE MSC                 @Z40LB64*/
*           /* CONFIGURATION INDEX TABLE.                    @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0688
*           CIADDR=SPACEAMT;        /*                       @Z40LB64*/
         L     @15,SPACEAMT                                        0688
         ST    @15,CIADDR                                          0688
*           OVRLYAMT=((SAMAX*LENGTH(CIENTRY)+FWDALIGN)/FWDLEN)*FWDLEN;
         LA    OVRLYAMT,128                                        0689
*                                   /*                       @Z40LB64*/
*         END;                      /*                       @Z40LB64*/
*                                                                  0690
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE THE SIZES OF THE MSC VIRTUAL VOLUME     @Z40LB64*/
*       /* ADDRESS TABLE (VVAT) AND THE VVAT CHECK-OFF       @Z40LB64*/
*       /* TABLE.                                            @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0691
*       VVATADDR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
@RF00686 L     @15,SPACEAMT                                        0691
         LR    @14,OVRLYAMT                                        0691
         ALR   @14,@15                                             0691
         ST    @14,VVATADDR                                        0691
*       OVRLYAMT=OVRLYAMT+((SAMAX*LENGTH(VVAT)+FWDALIGN)/FWDLEN)*FWDLEN
*           ;                       /*                       @Z40LB64*/
         AL    OVRLYAMT,@CF02205                                   0692
*       VVACOPTR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
         ALR   @15,OVRLYAMT                                        0693
         ST    @15,VVACOPTR                                        0693
*       OVRLYAMT=OVRLYAMT+((DIM(VVACHKFF,1)*DIM(VVACHKFF,2)+FWDALIGN)/
*           FWDLEN)*FWDLEN;         /*                       @Z40LB64*/
*                                                                  0694
         AL    OVRLYAMT,@CF00377                                   0694
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE THE SIZES OF CHECK-OFF TABLES           @Z40LB64*/
*       /* FOR THE STAGING ADAPTER TABLES.                   @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0695
*       DO SA#=1 TO SAMAX;          /*                       @Z40LB64*/
         LA    SA#,1                                               0695
@DL00695 DS    0H                                                  0696
*         VADCOPTR(SA#)=NULLPTR;    /*                       @Z40LB64*/
         SLR   @04,@04                                             0696
         LR    @15,SA#                                             0696
         SLA   @15,2                                               0696
         ST    @04,VADCOPTR-4(@15)                                 0696
*         VVICOPTR(SA#)=NULLPTR;    /*                       @Z40LB64*/
         ST    @04,VVICOPTR-4(@15)                                 0697
*         PSTCOPTR(SA#)=NULLPTR;    /*                       @Z40LB64*/
         ST    @04,PSTCOPTR-4(@15)                                 0698
*       END;                        /*                       @Z40LB64*/
         AL    SA#,@CF00221                                        0699
         C     SA#,@CF00476                                        0699
         BNH   @DL00695                                            0699
*       IF SACHK=ON THEN                                           0700
         TM    SACHK,B'01000000'                                   0700
         BNO   @RF00700                                            0700
*         DO SA#=1 TO SAVLDCNT;     /*                       @Z40LB64*/
         LA    SA#,1                                               0701
         B     @DE00701                                            0701
@DL00701 DS    0H                                                  0702
*           SAID#=VLDSAID(SA#)+1;   /*                       @Z40LB64*/
         LR    @15,SA#                                             0702
         ALR   @15,@15                                             0702
         LA    SAID#,1                                             0702
         AH    SAID#,VLDSAID-2(@15)                                0702
*           VADCOPTR(SAID#)=SPACEAMT+OVRLYAMT;/*             @Z40LB64*/
         LR    @15,SAID#                                           0703
         SLA   @15,2                                               0703
         L     @14,SPACEAMT                                        0703
         LR    @01,OVRLYAMT                                        0703
         ALR   @01,@14                                             0703
         ST    @01,VADCOPTR-4(@15)                                 0703
*           OVRLYAMT=OVRLYAMT+((DIM(VADCHKFF,1)*DIM(VADCHKFF,2)+   0704
*               FWDALIGN)/FWDLEN)*FWDLEN;/*                  @Z40LB64*/
         LA    @01,24                                              0704
         ALR   OVRLYAMT,@01                                        0704
*           VVICOPTR(SAID#)=SPACEAMT+OVRLYAMT;/*             @Z40LB64*/
         LR    @00,OVRLYAMT                                        0705
         ALR   @00,@14                                             0705
         ST    @00,VVICOPTR-4(@15)                                 0705
*           OVRLYAMT=OVRLYAMT+((DIM(VVICHKFF)+FWDALIGN)/FWDLEN)*FWDLEN;
         ALR   OVRLYAMT,@01                                        0706
*                                   /*                       @Z40LB64*/
*           PSTCOPTR(SAID#)=SPACEAMT+OVRLYAMT;/*             @Z40LB64*/
         ALR   @14,OVRLYAMT                                        0707
         ST    @14,PSTCOPTR-4(@15)                                 0707
*           OVRLYAMT=OVRLYAMT+((DIM(PSTCHKFF,1)*DIM(PSTCHKFF,2)*DIM(
*               PSTCHKFF,3)+FWDALIGN)/FWDLEN)*FWDLEN;/*      @Z40LB64*/
         AL    OVRLYAMT,@CF02659                                   0708
*         END;                      /*                       @Z40LB64*/
*                                                                  0709
         AL    SA#,@CF00221                                        0709
@DE00701 CH    SA#,SAVLDCNT                                        0709
         BNH   @DL00701                                            0709
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE THE SIZES OF THE CHECK-OFF TABLES       @Z40LB64*/
*       /* FOR THE SDG DEMOUNTED VOLUMES BLOCK, SDG LRU      @Z40LB64*/
*       /* PAGES BLOCK, MSC REAL PAGE MAP, MSC PAGE          @Z40LB64*/
*       /* AVAILABILITY BLOCK, MSC VVA/MVT CROSS             @Z40LB64*/
*       /* REFERENCE TABLE, AND MSC CONFIGURATION DATA       @Z40LB64*/
*       /* BLOCK.                                            @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0710
*       DVBCOPTR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
@RF00700 L     @15,SPACEAMT                                        0710
         LR    @14,OVRLYAMT                                        0710
         ALR   @14,@15                                             0710
         ST    @14,DVBCOPTR                                        0710
*       OVRLYAMT=OVRLYAMT+((DIM(DVBCHKFF,1)*DIM(DVBCHKFF,2)+FWDALIGN)/
*           FWDLEN)*FWDLEN;         /*                       @Z40LB64*/
         LA    @14,480                                             0711
         ALR   OVRLYAMT,@14                                        0711
*       LPBCOPTR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
         LR    @05,OVRLYAMT                                        0712
         ALR   @05,@15                                             0712
         ST    @05,LPBCOPTR                                        0712
*       OVRLYAMT=OVRLYAMT+((DIM(LPBCHKFF,1)*DIM(LPBCHKFF,2)+FWDALIGN)/
*           FWDLEN)*FWDLEN;         /*                       @Z40LB64*/
         ALR   OVRLYAMT,@14                                        0713
*       RPMCOPTR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
         LR    @14,OVRLYAMT                                        0714
         ALR   @14,@15                                             0714
         ST    @14,RPMCOPTR                                        0714
*       OVRLYAMT=OVRLYAMT+((DIM(RPMCHKFF,1)*DIM(RPMCHKFF,2)*DIM(   0715
*           RPMCHKFF,3)+FWDALIGN)/FWDLEN)*FWDLEN;/*          @Z40LB64*/
         AL    OVRLYAMT,@CF02664                                   0715
*       VMXCOPTR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
         LR    @14,OVRLYAMT                                        0716
         ALR   @14,@15                                             0716
         ST    @14,VMXCOPTR                                        0716
*       OVRLYAMT=OVRLYAMT+((DIM(VMXCHKFF,1)*DIM(VMXCHKFF,2)+FWDALIGN)/
*           FWDLEN)*FWDLEN;         /*                       @Z40LB64*/
         LA    @14,384                                             0717
         ALR   OVRLYAMT,@14                                        0717
*       CDBCOPTR=SPACEAMT+OVRLYAMT; /*                       @Z40LB64*/
         ALR   @15,OVRLYAMT                                        0718
         ST    @15,CDBCOPTR                                        0718
*       OVRLYAMT=OVRLYAMT+((DIM(CDBCHKFF,1)*DIM(CDBCHKFF,2)*DIM(   0719
*           CDBCHKFF,3)+FWDALIGN)/FWDLEN)*FWDLEN;/*          @Z40LB64*/
         ALR   OVRLYAMT,@14                                        0719
*     END;                          /*                       @Z40LB64*/
*                                                                  0720
*   /*****************************************************************/
*   /*                                                               */
*   /* THE REQUIRED ALLOCATABLE SPACE IS THE MAXIMUM OF      @Z40LB64*/
*   /* THE OVERLAYABLE AREA AND THE OVERLAYING AREA.         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0721
*   SPACEAMT=SPACEAMT+MAX(OVRLDAMT,OVRLYAMT);/*              @Z40LB64*/
*                                                                  0721
@RF00684 LR    @15,OVRLYAMT                                        0721
         CR    @15,OVRLDAMT                                        0721
         BNL   *+6
         LR    @15,OVRLDAMT                                        0721
         AL    @15,SPACEAMT                                        0721
         ST    @15,SPACEAMT                                        0721
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUIRE THE REMAINING REQUIRED STORAGE FOR THE        @Z40LB64*/
*   /* REQUESTED CHECKMSS OPTIONS. IF THE REQUIRED STORAGE   @Z40LB64*/
*   /* IS NOT SUCCESSFULLY OBTAINED, TERMINATE PROCESSING.   @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0722
*   CALL IDCSAGP0(GDTTBL,SPACEAMT,SPACEPTR,CHPOOLID,SETZERO);/*    0722
*                                                            @Z40LB64*/
         L     @02,@PC00001                                        0722
         ST    @02,@AL00001                                        0722
         LA    @15,SPACEAMT                                        0722
         ST    @15,@AL00001+4                                      0722
         LA    @15,SPACEPTR                                        0722
         ST    @15,@AL00001+8                                      0722
         LA    @15,@CC02193                                        0722
         ST    @15,@AL00001+12                                     0722
         LA    @15,SETZERO                                         0722
         ST    @15,@AL00001+16                                     0722
         MVI   @AL00001+16,X'80'                                   0722
         L     @15,GDTGPL(,@02)                                    0722
         LA    @01,@AL00001                                        0722
         BALR  @14,@15                                             0722
*   RESPECIFY                                                      0723
*     RTNREG RSTD;                                                 0723
*   TESTRC=RTNREG;                                                 0724
         LR    TESTRC,RTNREG                                       0724
*   RESPECIFY                                                      0725
*     RTNREG UNRSTD;                /*                       @Z40LB64*/
*   IF TESTRC^=0 THEN                                              0726
         LTR   TESTRC,TESTRC                                       0726
         BZ    @RF00726                                            0726
*     DO;                           /*                       @Z40LB64*/
*       NOSPACE=ON;                 /*                       @Z40LB64*/
         OI    NOSPACE,B'10000000'                                 0728
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0729
         MVC   LASTCOND(2,@15),@CH00567                            0729
*       RETURN;                     /*                       @Z40LB64*/
         B     @EL00003                                            0730
*     END;                          /*                       @Z40LB64*/
*                                                                  0731
*   /*****************************************************************/
*   /*                                                               */
*   /* REQUIRED STORAGE SUCCESSFULLY ALLOCATED. INITIALIZE   @Z40LB64*/
*   /* ALL POINTERS WITHIN THE ACQUIRED AREA.                @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0732
*   IOINFPTR=SPACEPTR+IOINFPTR;     /*                       @Z40LB64*/
@RF00726 L     @15,SPACEPTR                                        0732
         LR    @14,@15                                             0732
         AL    @14,IOINFPTR                                        0732
         ST    @14,IOINFPTR                                        0732
*   INFOAPTR=SPACEPTR+INFOAPTR;     /*                       @Z40LB64*/
         LR    @14,@15                                             0733
         AL    @14,INFOAPTR                                        0733
         ST    @14,INFOAPTR                                        0733
*   CKAGLPTR=SPACEPTR+CKAGLPTR;     /*                       @Z40LB64*/
         LR    @14,@15                                             0734
         AL    @14,CKAGLPTR                                        0734
         ST    @14,CKAGLPTR                                        0734
*   WDSAPTR=SPACEPTR+WDSAPTR;       /*                       @Z40LB64*/
         ALR   WDSAPTR,@15                                         0735
*   ACQPTR=SPACEPTR+ACQPTR;         /*                       @Z40LB64*/
         LR    @14,@15                                             0736
         AL    @14,ACQPTR                                          0736
         ST    @14,ACQPTR                                          0736
*   COTBPTR=SPACEPTR+COTBPTR;       /*                       @Z40LB64*/
         LR    @14,@15                                             0737
         AL    @14,COTBPTR                                         0737
         ST    @14,COTBPTR                                         0737
*   MSGAPTR=SPACEPTR+MSGAPTR;       /*                       @Z40LB64*/
         LR    @14,@15                                             0738
         AL    @14,MSGAPTR                                         0738
         ST    @14,MSGAPTR                                         0738
*   TEXTAPTR=SPACEPTR+TEXTAPTR;     /*                       @Z40LB64*/
         LR    @14,@15                                             0739
         AL    @14,TEXTAPTR                                        0739
         ST    @14,TEXTAPTR                                        0739
*   FMTAPTR=SPACEPTR+FMTAPTR;       /*                       @Z40LB64*/
         LR    @14,@15                                             0740
         AL    @14,FMTAPTR                                         0740
         ST    @14,FMTAPTR                                         0740
*   BDATAPTR=SPACEPTR+BDATAPTR;     /*                       @Z40LB64*/
         AL    @15,BDATAPTR                                        0741
         ST    @15,BDATAPTR                                        0741
*   IF SACHK=ON THEN                                               0742
         TM    SACHK,B'01000000'                                   0742
         BNO   @RF00742                                            0742
*     DO SA#=1 TO SAVLDCNT;         /*                       @Z40LB64*/
         LA    SA#,1                                               0743
         B     @DE00743                                            0743
@DL00743 DS    0H                                                  0744
*       SAID#=VLDSAID(SA#)+1;       /*                       @Z40LB64*/
         LR    @15,SA#                                             0744
         ALR   @15,@15                                             0744
         LA    SAID#,1                                             0744
         AH    SAID#,VLDSAID-2(@15)                                0744
*       IVADPTR(SAID#)=SPACEPTR+IVADPTR(SAID#);/*            @Z40LB64*/
         LR    @15,SAID#                                           0745
         SLA   @15,2                                               0745
         L     @14,SPACEPTR                                        0745
         LR    @03,@14                                             0745
         AL    @03,IVADPTR-4(@15)                                  0745
         ST    @03,IVADPTR-4(@15)                                  0745
*       IVVITPTR(SAID#)=SPACEPTR+IVVITPTR(SAID#);/*          @Z40LB64*/
         LR    @03,@14                                             0746
         AL    @03,IVVITPTR-4(@15)                                 0746
         ST    @03,IVVITPTR-4(@15)                                 0746
*       IPSTPTR(SAID#)=SPACEPTR+IPSTPTR(SAID#);/*            @Z40LB64*/
         LR    @03,@14                                             0747
         AL    @03,IPSTPTR-4(@15)                                  0747
         ST    @03,IPSTPTR-4(@15)                                  0747
*       ILTRPTR(SAID#)=SPACEPTR+ILTRPTR(SAID#);/*            @Z40LB64*/
         LR    @03,@14                                             0748
         AL    @03,ILTRPTR-4(@15)                                  0748
         ST    @03,ILTRPTR-4(@15)                                  0748
*       VADCOPTR(SAID#)=SPACEPTR+VADCOPTR(SAID#);/*          @Z40LB64*/
         LR    @03,@14                                             0749
         AL    @03,VADCOPTR-4(@15)                                 0749
         ST    @03,VADCOPTR-4(@15)                                 0749
*       VVICOPTR(SAID#)=SPACEPTR+VVICOPTR(SAID#);/*          @Z40LB64*/
         LR    @03,@14                                             0750
         AL    @03,VVICOPTR-4(@15)                                 0750
         ST    @03,VVICOPTR-4(@15)                                 0750
*       PSTCOPTR(SAID#)=SPACEPTR+PSTCOPTR(SAID#);/*          @Z40LB64*/
         AL    @14,PSTCOPTR-4(@15)                                 0751
         ST    @14,PSTCOPTR-4(@15)                                 0751
*     END;                          /*                       @Z40LB64*/
         AL    SA#,@CF00221                                        0752
@DE00743 CH    SA#,SAVLDCNT                                        0752
         BNH   @DL00743                                            0752
*   MVCBADDR=SPACEPTR+MVCBADDR;     /*                       @Z40LB64*/
@RF00742 L     @15,SPACEPTR                                        0753
         LR    @14,@15                                             0753
         AL    @14,MVCBADDR                                        0753
         ST    @14,MVCBADDR                                        0753
*   IF MSVICHK=ON THEN                                             0754
         TM    MSVICHK,B'00100000'                                 0754
         BNO   @RF00754                                            0754
*     DO;                           /*                       @Z40LB64*/
*       MICPTR=SPACEPTR+MICPTR;     /*                       @Z40LB64*/
         LR    @14,@15                                             0756
         AL    @14,MICPTR                                          0756
         ST    @14,MICPTR                                          0756
*       RVVIPTR=SPACEPTR+RVVIPTR;   /*                       @Z40LB64*/
         LR    @14,@15                                             0757
         AL    @14,RVVIPTR                                         0757
         ST    @14,RVVIPTR                                         0757
*       CPUIDPTR=SPACEPTR+CPUIDPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0758
         AL    @14,CPUIDPTR                                        0758
         ST    @14,CPUIDPTR                                        0758
*       MSVIAPTR=SPACEPTR+MSVIAPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0759
         AL    @14,MSVIAPTR                                        0759
         ST    @14,MSVIAPTR                                        0759
*       VICOPTR=SPACEPTR+VICOPTR;   /*                       @Z40LB64*/
         LR    @14,@15                                             0760
         AL    @14,VICOPTR                                         0760
         ST    @14,VICOPTR                                         0760
*       TVLCOPTR=SPACEPTR+TVLCOPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0761
         AL    @14,TVLCOPTR                                        0761
         ST    @14,TVLCOPTR                                        0761
*       MVTCOPTR=SPACEPTR+MVTCOPTR; /*                       @Z40LB64*/
         AL    @15,MVTCOPTR                                        0762
         ST    @15,MVTCOPTR                                        0762
*     END;                          /*                       @Z40LB64*/
*   IF MSCCHK=ON THEN                                              0764
@RF00754 TM    MSCCHK,B'10000000'                                  0764
         BNO   @RF00764                                            0764
*     DO MSF#=1 TO MSFVLCNT+1;      /*                       @Z40LB64*/
         LA    MSF#,1                                              0765
         B     @DE00765                                            0765
@DL00765 DS    0H                                                  0766
*       DO CMBLK#=1 TO BLKSMSF;     /*                       @Z40LB64*/
         LA    CMBLK#,1                                            0766
@DL00766 DS    0H                                                  0767
*         CMBUFPTR(MSF#,CMBLK#)=SPACEPTR+CMBUFPTR(MSF#,CMBLK#);/*  0767
*                                                            @Z40LB64*/
         LR    @15,MSF#                                            0767
         SLA   @15,2                                               0767
         ALR   @15,CMBLK#                                          0767
         SLA   @15,2                                               0767
         L     @14,SPACEPTR                                        0767
         LR    @03,@14                                             0767
         AL    @03,CMBUFPTR-20(@15)                                0767
         ST    @03,CMBUFPTR-20(@15)                                0767
*         IF MSF#<=MSFVLCNT THEN                                   0768
         CH    MSF#,MSFVLCNT                                       0768
         BH    @RF00768                                            0768
*           CMCOPTR(MSF#,CMBLK#)=SPACEPTR+CMCOPTR(MSF#,CMBLK#);/*  0769
*                                                            @Z40LB64*/
         AL    @14,CMCOPTR-20(@15)                                 0769
         ST    @14,CMCOPTR-20(@15)                                 0769
*       END;                        /*                       @Z40LB64*/
@RF00768 AL    CMBLK#,@CF00221                                     0770
         C     CMBLK#,@CF00044                                     0770
         BNH   @DL00766                                            0770
*     END;                          /*                       @Z40LB64*/
         AL    MSF#,@CF00221                                       0771
@DE00765 LA    @05,1                                               0771
         AH    @05,MSFVLCNT                                        0771
         CR    MSF#,@05                                            0771
         BNH   @DL00765                                            0771
*   IF MSCCHK=ON×SACHK=ON THEN                                     0772
@RF00764 TM    MSCCHK,B'11000000'                                  0772
         BZ    @RF00772                                            0772
*     DO;                           /*                       @Z40LB64*/
*       IF MSCCHK=ON THEN                                          0774
         TM    MSCCHK,B'10000000'                                  0774
         BNO   @RF00774                                            0774
*         CIADDR=SPACEPTR+CIADDR;   /*                       @Z40LB64*/
         L     @15,SPACEPTR                                        0775
         AL    @15,CIADDR                                          0775
         ST    @15,CIADDR                                          0775
*       VVATADDR=SPACEPTR+VVATADDR; /*                       @Z40LB64*/
@RF00774 L     @15,SPACEPTR                                        0776
         LR    @14,@15                                             0776
         AL    @14,VVATADDR                                        0776
         ST    @14,VVATADDR                                        0776
*       VVACOPTR=SPACEPTR+VVACOPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0777
         AL    @14,VVACOPTR                                        0777
         ST    @14,VVACOPTR                                        0777
*       DVBCOPTR=SPACEPTR+DVBCOPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0778
         AL    @14,DVBCOPTR                                        0778
         ST    @14,DVBCOPTR                                        0778
*       LPBCOPTR=SPACEPTR+LPBCOPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0779
         AL    @14,LPBCOPTR                                        0779
         ST    @14,LPBCOPTR                                        0779
*       RPMCOPTR=SPACEPTR+RPMCOPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0780
         AL    @14,RPMCOPTR                                        0780
         ST    @14,RPMCOPTR                                        0780
*       VMXCOPTR=SPACEPTR+VMXCOPTR; /*                       @Z40LB64*/
         LR    @14,@15                                             0781
         AL    @14,VMXCOPTR                                        0781
         ST    @14,VMXCOPTR                                        0781
*       CDBCOPTR=SPACEPTR+CDBCOPTR; /*                       @Z40LB64*/
         AL    @15,CDBCOPTR                                        0782
         ST    @15,CDBCOPTR                                        0782
*     END;                          /*                       @Z40LB64*/
*   END INITSPAC;                   /*                       @Z40LB64*/
         B     @EL00003                                            0784
*                                                                  0785
*/*  ******************************************************  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - INITWDS                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - ALLOCATES AND OPENS THE WORK DATA SET,      @Z40LB64*/
*/*              VERIFIES THAT IT IS ON A MASS STORAGE       @Z40LB64*/
*/*              VOLUME, AND BINDS THE SPACE FOR THE DATA    @Z40LB64*/
*/*              SET.                                        @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - THE DDNAME OF THE WORK DATA SET (IF 'WORKFILE' @Z40LB64*/
*/*           KEYWORD SPECIFIED), OR THE DATA SET NAME OF    @Z40LB64*/
*/*           THE WORK DATA SET ( IF 'WORKDATASET' KEYWORD   @Z40LB64*/
*/*           SPECIFIED).                                    @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*           EACH 'UMACRO' PARAMETER LIST WAS ZEROED WHEN   @Z40LB64*/
*/*           STORAGE WAS ACQUIRED FOR THE PARAMETER LIST.   @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - (1) THE OPEN AND BOUND WORK DATA SET.         @Z40LB64*/
*/*            (2) THE VOLUME SERIAL NUMBER AND THE          @Z40LB64*/
*/*                STARTING AND ENDING CCHHR OF THE          @Z40LB64*/
*/*                WORK DATA SET (FOR USE BY 'COPYMSC').     @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  0785
*INITWDS:                                                          0785
*   PROCEDURE;                      /*                       @Z40LB64*/
INITWDS  STM   @14,@12,@SA00004                                    0785
*   OLDERID2=NEWERID2;                                             0786
         L     @15,@PC00001                                        0786
         L     @14,GDTTR2(,@15)                                    0786
         MVC   @TS00001(95),NEWERID2(@14)                          0786
         MVC   OLDERID2(95,@14),@TS00001                           0786
*   NEWID2='CH1D';                  /*                       @Z40LB64*/
*                                                                  0787
         MVC   NEWID2(4,@14),@CC02455                              0787
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE 'WORKDATASET' KEYWORD IS SPECIFIED,            @Z40LB64*/
*   /* DYNAMICALLY ALLOCATE THE WORK DATA SET ('UALLOC'      @Z40LB64*/
*   /* MACRO) AND RETURN A DDNAME FOR THE DATA SET.          @Z40LB64*/
*   /* IF THE 'WORKFILE' KEYWORD IS SPECIFIED, THE DDNAME    @Z40LB64*/
*   /* IS PROVIDED BY THE USER.                              @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0788
*   IF ADDR(WDS)^=NULLPTR THEN                                     0788
         L     @14,@PC00001+4                                      0788
         L     @14,FDTPTR+4(,@14)                                  0788
         LTR   @14,@14                                             0788
         BZ    @RF00788                                            0788
*     DO;                           /*                       @Z40LB64*/
*       RESPECIFY                                                  0790
*         ALLAGL BASED(ALLPTR);     /*                       @Z40LB64*/
*       ALLDSN=ADDR(WDSVAL);        /*                       @Z40LB64*/
         LA    @02,WDSVAL(,@14)                                    0791
         ST    @02,ALLDSN(,ALLPTR)                                 0791
*       ALLSTSOD=ON;                /*                       @Z40LB64*/
         OI    ALLSTSOD(ALLPTR),B'00000001'                        0792
*       ALLDSPKP=ON;                /*                       @Z40LB64*/
         OI    ALLDSPKP(ALLPTR),B'00001000'                        0793
*       ALLOPTDS=ON;                /*                       @Z40LB64*/
         OI    ALLOPTDS(ALLPTR),B'01000000'                        0794
*       ALLULP=ADDR(UNITLIST);      /*                       @Z40LB64*/
         LA    @02,UNITLIST                                        0795
         ST    @02,ALLULP(,ALLPTR)                                 0795
*       UNITCNT=1;                  /*                       @Z40LB64*/
         MVC   UNITCNT(2),@CH00221                                 0796
*       UNITLEN=LENGTH(SDG00);      /*                       @Z40LB64*/
         MVC   UNITLEN(2),@CH00288                                 0797
*       UNITTYPE=SDG00;             /*                       @Z40LB64*/
         MVI   UNITTYPE+5,C' '                                     0798
         MVC   UNITTYPE+6(2),UNITTYPE+5                            0798
         MVC   UNITTYPE(5),@CC02244                                0798
*       CALL IDCSAAL0(GDTTBL,ALLAGL);/*                      @Z40LB64*/
         ST    @15,@AL00001                                        0799
         ST    ALLPTR,@AL00001+4                                   0799
         MVI   @AL00001+4,X'80'                                    0799
         L     @15,GDTALC(,@15)                                    0799
         LA    @01,@AL00001                                        0799
         BALR  @14,@15                                             0799
*       RESPECIFY                                                  0800
*         RTNREG RSTD;                                             0800
*       TESTRC=RTNREG;                                             0801
         LR    TESTRC,RTNREG                                       0801
*       RESPECIFY                                                  0802
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*       IF TESTRC=0 THEN                                           0803
         LTR   TESTRC,TESTRC                                       0803
         BNZ   @RF00803                                            0803
*         WDSDDN=ALLDDN;            /*                       @Z40LB64*/
         MVC   WDSDDN(8),ALLDDN(ALLPTR)                            0804
*       ELSE                                                       0805
*         LASTCOND=LASTCC12;        /*                       @Z40LB64*/
         B     @RC00803                                            0805
@RF00803 L     @15,@PC00001+8                                      0805
         MVC   LASTCOND(2,@15),@CH00567                            0805
*     END;                          /*                       @Z40LB64*/
*   ELSE                                                           0807
*     WDSDDN=WFILEVAL;              /*                       @Z40LB64*/
*                                                                  0807
         B     @RC00788                                            0807
@RF00788 L     @15,@PC00001+4                                      0807
         L     @01,FDTPTR(,@15)                                    0807
         MVC   WDSDDN(8),WFILEVAL(@01)                             0807
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE DDNAME WAS SUCCESSFULLY OBTAINED, RETRIEVE     @Z40LB64*/
*   /* THE VOLUME SERIAL NUMBER FROM THE JFCB ('UIOINFO'     @Z40LB64*/
*   /* MACRO) FOR USE BY THE 'UMSSUNIT' MACRO.               @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0808
*   IF LASTCOND=LASTCC00 THEN                                      0808
@RC00788 L     @15,@PC00001+8                                      0808
         LH    @15,LASTCOND(,@15)                                  0808
         LTR   @15,@15                                             0808
         BNZ   @RF00808                                            0808
*     DO;                           /*                       @Z40LB64*/
*       RESPECIFY                                                  0810
*         IOINFOPT BASED(IOINFPTR); /*                       @Z40LB64*/
*       INFOWAL=LENGTH(INFOAREA);   /*                       @Z40LB64*/
         L     @02,INFOAPTR                                        0811
         MVC   INFOWAL(2,@02),@CH02250                             0811
*       IOINFVOL=ON;                /*                       @Z40LB64*/
         L     @02,IOINFPTR                                        0812
         OI    IOINFVOL(@02),B'01000000'                           0812
*       CALL IDCIOSI0(GDTTBL,IOINFOPT,ADDR(INFOAREA),WDSDDN);/*    0813
*                                                            @Z40LB64*/
         L     @15,@PC00001                                        0813
         ST    @15,@AL00001                                        0813
         ST    @02,@AL00001+4                                      0813
         LA    @02,INFOAPTR                                        0813
         ST    @02,@AL00001+8                                      0813
         LA    @02,WDSDDN                                          0813
         ST    @02,@AL00001+12                                     0813
         MVI   @AL00001+12,X'80'                                   0813
         L     @15,GDTIFO(,@15)                                    0813
         LA    @01,@AL00001                                        0813
         BALR  @14,@15                                             0813
*       RESPECIFY                                                  0814
*         RTNREG RSTD;                                             0814
*       TESTRC=RTNREG;                                             0815
         LR    TESTRC,RTNREG                                       0815
*       RESPECIFY                                                  0816
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*       IF TESTRC^=0 THEN                                          0817
         LTR   TESTRC,TESTRC                                       0817
         BZ    @RF00817                                            0817
*         LASTCOND=LASTCC12;        /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0818
         MVC   LASTCOND(2,@15),@CH00567                            0818
*     END;                          /*                       @Z40LB64*/
*                                                                  0819
@RF00817 DS    0H                                                  0820
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE VOLUME SERIAL NUMBER WAS SUCCESSFULLY          @Z40LB64*/
*   /* OBTAINED, VERIFY THAT THE WORK DATA SET IS ON A       @Z40LB64*/
*   /* MASS STORAGE VOLUME ('UMSSUNIT' MACRO).               @Z40LB64*/
*   /* (IF THE WORK DATA SET WAS DYNAMICALLY ALLOCATED,      @Z40LB64*/
*   /* PLACE THE VOLSER IN THE 'CKAGL' PARAMETER LIST SO     @Z40LB64*/
*   /* IF AN ERROR OCCURS, THE VOLSER WILL BE USED INSTEAD   @Z40LB64*/
*   /* OF THE DDNAME).                                       @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0820
*   IF LASTCOND=LASTCC00 THEN                                      0820
@RF00808 SLR   @15,@15                                             0820
         L     @14,@PC00001+8                                      0820
         CH    @15,LASTCOND(,@14)                                  0820
         BNE   @RF00820                                            0820
*     DO;                           /*                       @Z40LB64*/
*       RESPECIFY                                                  0822
*         CKAGL BASED(CKAGLPTR);    /*                       @Z40LB64*/
*       UCBPTR=NULLPTR;             /*                       @Z40LB64*/
         ST    @15,UCBPTR                                          0823
*       CKUCBPTR=ADDR(UCBPTR);      /*                       @Z40LB64*/
         L     @14,CKAGLPTR                                        0824
         LA    @05,UCBPTR                                          0824
         ST    @05,CKUCBPTR(,@14)                                  0824
*       CKDDNAME=WDSDDN;            /*                       @Z40LB64*/
         MVC   CKDDNAME(8,@14),WDSDDN                              0825
*       CKTESTVT=ON;                /*                       @Z40LB64*/
         OI    CKTESTVT(@14),B'10000000'                           0826
*       IF ADDR(WDS)^=NULLPTR THEN                                 0827
         L     @05,@PC00001+4                                      0827
         C     @15,FDTPTR+4(,@05)                                  0827
         BE    @RF00827                                            0827
*         CKLABELP=ADDR(INFOVSN(1));/*                       @Z40LB64*/
         L     @01,INFOAPTR                                        0828
         LA    @15,INFOVSN(,@01)                                   0828
         ST    @15,CKLABELP(,@14)                                  0828
*       CALL IDCSA060(GDTTBL,CHECK,CKAGL);/*                 @Z40LB64*/
@RF00827 L     @02,@PC00001                                        0829
         ST    @02,@AL00001                                        0829
         LA    @15,CHECK                                           0829
         ST    @15,@AL00001+4                                      0829
         L     @01,CKAGLPTR                                        0829
         ST    @01,@AL00001+8                                      0829
         MVI   @AL00001+8,X'80'                                    0829
         L     @15,GDTUNT(,@02)                                    0829
         LA    @01,@AL00001                                        0829
         BALR  @14,@15                                             0829
*       RESPECIFY                                                  0830
*         RTNREG RSTD;                                             0830
*       TESTRC=RTNREG;                                             0831
         LR    TESTRC,RTNREG                                       0831
*       RESPECIFY                                                  0832
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*       IF TESTRC^=0 THEN                                          0833
         LTR   TESTRC,TESTRC                                       0833
         BZ    @RF00833                                            0833
*         LASTCOND=LASTCC12;        /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0834
         MVC   LASTCOND(2,@15),@CH00567                            0834
*     END;                          /*                       @Z40LB64*/
*                                                                  0835
@RF00833 DS    0H                                                  0836
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE WORK DATA SET IS VERIFIED TO BE ON A MASS      @Z40LB64*/
*   /* STORAGE VOLUME, OPEN THE WORK DATA SET ('UEXCP'       @Z40LB64*/
*   /* MACRO). AFTER SUCCESSFULLY OPENING THE DATA SET,      @Z40LB64*/
*   /* THE BEGINNING AND ENDING ADDRESS MUST BE ON A         @Z40LB64*/
*   /* CYLINDER BOUNDARY. IF NOT CYLINDER ALIGNED, THE       @Z40LB64*/
*   /* BEGINNING CYLINDER ADDRESS IS ROUNDED UP, AND THE     @Z40LB64*/
*   /* ENDING CYLINDER ADDRESS IS ROUNDED DOWN.              @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0836
*   IF LASTCOND=LASTCC00 THEN                                      0836
@RF00820 L     @15,@PC00001+8                                      0836
         LH    @15,LASTCOND(,@15)                                  0836
         LTR   @15,@15                                             0836
         BNZ   @RF00836                                            0836
*     DO;                           /*                       @Z40LB64*/
*       RESPECIFY                                                  0838
*         EXOARG BASED(EXARGPTR);   /*                       @Z40LB64*/
*       EXODDN=ADDR(WDSDDN);        /*                       @Z40LB64*/
         L     @02,EXARGPTR                                        0839
         LA    @15,WDSDDN                                          0839
         ST    @15,EXODDN(,@02)                                    0839
*       EXOEXT=ADDR(WDSCCHHR);      /*                       @Z40LB64*/
         ST    WDSAPTR,EXOEXT(,@02)                                0840
*       EXOCTLBK=ADDR(WDSCBPTR);    /*                       @Z40LB64*/
         LA    @15,WDSCBPTR                                        0841
         ST    @15,EXOCTLBK(,@02)                                  0841
*       EXOTAB=ON;                  /*                       @Z40LB64*/
         OI    EXOTAB(@02),B'10000000'                             0842
*       CALL IDCIO050(GDTTBL,OPEN,EXOARG);/*                 @Z40LB64*/
         L     @15,@PC00001                                        0843
         ST    @15,@AL00001                                        0843
         LA    @14,OPEN                                            0843
         ST    @14,@AL00001+4                                      0843
         ST    @02,@AL00001+8                                      0843
         MVI   @AL00001+8,X'80'                                    0843
         L     @15,GDTEXP(,@15)                                    0843
         LA    @01,@AL00001                                        0843
         BALR  @14,@15                                             0843
*       RESPECIFY                                                  0844
*         RTNREG RSTD;                                             0844
*       TESTRC=RTNREG;                                             0845
         LR    TESTRC,RTNREG                                       0845
*       RESPECIFY                                                  0846
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*       IF TESTRC=0 THEN                                           0847
         SLR   @02,@02                                             0847
         CR    TESTRC,@02                                          0847
         BNE   @RF00847                                            0847
*         DO;                       /*                       @Z40LB64*/
*                                                                  0848
*           /*********************************************************/
*           /*                                                       */
*           /* ALIGN WORK DATA SET BEGINNING ADDRESS         @Z40LB64*/
*           /* TO CYLINDER BOUNDARY IF NECESSARY.            @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0849
*           IF WDSSTRK^=0 THEN                                     0849
         SLR   @03,@03                                             0849
         ICM   @03,3,WDSSTRK(WDSAPTR)                              0849
         CR    @02,@03                                             0849
         BE    @RF00849                                            0849
*             WDSSCYL=WDSSCYL+1;    /*                       @Z40LB64*/
         LA    @15,1                                               0850
         SLR   @14,@14                                             0850
         ICM   @14,3,WDSSCYL(WDSAPTR)                              0850
         ALR   @15,@14                                             0850
         STCM  @15,3,WDSSCYL(WDSAPTR)                              0850
*           IF WDSETRK^=0 THEN                                     0851
@RF00849 ICM   @15,3,WDSETRK(WDSAPTR)                              0851
         BZ    @RF00851                                            0851
*             WDSECYL=WDSECYL-1;    /*                       @Z40LB64*/
         SLR   @15,@15                                             0852
         ICM   @15,3,WDSECYL(WDSAPTR)                              0852
         BCTR  @15,0                                               0852
         STCM  @15,3,WDSECYL(WDSAPTR)                              0852
*         END;                      /*                       @Z40LB64*/
*       ELSE                                                       0854
*         LASTCOND=LASTCC12;        /*                       @Z40LB64*/
         B     @RC00847                                            0854
@RF00847 L     @15,@PC00001+8                                      0854
         MVC   LASTCOND(2,@15),@CH00567                            0854
*     END;                          /*                       @Z40LB64*/
*                                                                  0855
@RC00847 DS    0H                                                  0856
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE WORK DATA SET WAS SUCCESSFULLY OPENED,         @Z40LB64*/
*   /* ACQUIRE AND BIND THE DATA SET SPACE ('USSC' MACRO -   @Z40LB64*/
*   /* 'ACQUIRE' OPTION).                                    @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0856
*   IF LASTCOND=LASTCC00 THEN                                      0856
@RF00836 L     @15,@PC00001+8                                      0856
         LH    @15,LASTCOND(,@15)                                  0856
         LTR   @15,@15                                             0856
         BNZ   @RF00856                                            0856
*     DO;                           /*                       @Z40LB64*/
*       ARLL=LENGTH(ACQLIST);       /*                       @Z40LB64*/
         L     @02,ACQPTR                                          0858
         MVC   ARLL(4,@02),@CF02635                                0858
*       AROP='02'X;                 /*                       @Z40LB64*/
         MVI   AROP(@02),X'02'                                     0859
*       ARBDUBD=ON;                 /*                       @Z40LB64*/
*       ARINH=ON;                   /*                       @Z40LB64*/
         OI    ARBDUBD(@02),B'10100000'                            0861
*       ARNMEXT=1;                  /*                       @Z40LB64*/
         MVI   ARNMEXT(@02),X'01'                                  0862
*       ARVOL=INFOVSN(1);           /*                       @Z40LB64*/
         L     @15,INFOAPTR                                        0863
         MVC   ARVOL(6,@02),INFOVSN(@15)                           0863
*       AREXT(1,1:2)=WDSSCYL;       /*                       @Z40LB64*/
         MVC   AREXT(2,@02),WDSSCYL(WDSAPTR)                       0864
*       AREXT(1,3:4)=WDSECYL;       /*                       @Z40LB64*/
         MVC   AREXT+2(2,@02),WDSECYL(WDSAPTR)                     0865
*       SAVARVOL=INFOVSN(1);        /*                       @ZA14727*/
         MVC   SAVARVOL(6),INFOVSN(@15)                            0866
*       SAVREXT1=WDSSCYL;           /*                       @ZA14727*/
         MVC   SAVREXT1(2),WDSSCYL(WDSAPTR)                        0867
*       SAVREXT2=WDSECYL;           /*                       @ZA14727*/
         MVC   SAVREXT2(2),WDSECYL(WDSAPTR)                        0868
*       CALL IDCSASS0(GDTTBL,ACQUIRE,ACQPTR,RSNCODE);/*      @Z40LB64*/
         L     @02,@PC00001                                        0869
         ST    @02,@AL00001                                        0869
         LA    @15,ACQUIRE                                         0869
         ST    @15,@AL00001+4                                      0869
         LA    @15,ACQPTR                                          0869
         ST    @15,@AL00001+8                                      0869
         LA    @15,RSNCODE                                         0869
         ST    @15,@AL00001+12                                     0869
         MVI   @AL00001+12,X'80'                                   0869
         L     @15,GDTSSC(,@02)                                    0869
         LA    @01,@AL00001                                        0869
         BALR  @14,@15                                             0869
*       RESPECIFY                                                  0870
*         RTNREG RSTD;                                             0870
*       TESTRC=RTNREG;                                             0871
         LR    TESTRC,RTNREG                                       0871
*       RESPECIFY                                                  0872
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*                                                                  0872
*       /*************************************************************/
*       /*                                                           */
*       /* IF A NON-ZERO RETURN CODE WAS RETURNED BY         @Z40LB64*/
*       /* THE 'USSC' MACRO, CALL 'SSCMSG' PROCEDURE         @Z40LB64*/
*       /* TO ISSUE THE APPROPRIATE ERROR MESSAGE.           @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0873
*       IF TESTRC^=0 THEN                                          0873
         LTR   TESTRC,TESTRC                                       0873
         BZ    @RF00873                                            0873
*         DO;                       /*                       @Z40LB64*/
*           CALL SSCMSG(RSNCODE);   /*                       @Z40LB64*/
         LA    @15,RSNCODE                                         0875
         ST    @15,@AL00001                                        0875
         LA    @01,@AL00001                                        0875
         BAL   @14,SSCMSG                                          0875
*           LASTCOND=LASTCC12;      /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0876
         MVC   LASTCOND(2,@15),@CH00567                            0876
*         END;                      /*                       @Z40LB64*/
*       ELSE                        /*                       @ZA14727*/
*         ACQSW=ON;                 /*                       @ZA14727*/
         B     @RC00873                                            0878
@RF00873 OI    ACQSW,B'01000000'                                   0878
*     END;                          /*                       @Z40LB64*/
*   END INITWDS;                    /*                       @Z40LB64*/
@EL00004 DS    0H                                                  0880
@EF00004 DS    0H                                                  0880
@ER00004 LM    @14,@12,@SA00004                                    0880
         BR    @14                                                 0880
*                                                                  0881
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - COPYMSC                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - OBTAINS A COPY OF THE MASS STORAGE CONTROL  @Z40LB64*/
*/*              TABLES IN THE WORK DATA SET FOR SUBSEQUENT  @Z40LB64*/
*/*              ANALYSIS.                                   @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE 'USSC' MACRO ('RDMSC' OPTION) IS USED   @Z40LB64*/
*/*              TO OBTAIN THE MSC TABLES COPY, AND RETURNS  @Z40LB64*/
*/*              A MESSAGE AREA CONTAINING THE BEGINNING     @Z40LB64*/
*/*              CHR OF EACH OF THE MSC TABLES COPIED.       @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE CHR INFORMATION RETURNED BY 'USSC' IS   @Z40LB64*/
*/*              USED TO BUILD A CCHHR TABLE REFERENCED BY   @Z40LB64*/
*/*              THE IDCCH03 ROUTINE TO INDEX INDIVIDUAL     @Z40LB64*/
*/*              MSC TABLES.                                 @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE MSC MOUNT EQUALIZATION RECORD IS READ   @Z40LB64*/
*/*              FROM THE MSC WORKING CONTROL STORAGE FOR    @Z40LB64*/
*/*              SUBSEQUENT PROCESSING.                      @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - THE WORK DATA SET VOLUME SERIAL NUMBER, AND    @Z40LB64*/
*/*           STARTING AND ENDING CYLINDER ADDRESSES.        @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - (1) THE MSC TABLES HAVE BEEN COPIED TO THE    @Z40LB64*/
*/*                WORK DATA SET.                            @Z40LB64*/
*/*            (2) THE CCHHR TABLE CONTAINING THE BEGINNING  @Z40LB64*/
*/*                CCHHR OF EACH MSC TABLE COPIED.           @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  *****************************************************************/
*                                                                  0881
*COPYMSC:                                                          0881
*   PROCEDURE;                      /*                       @Z40LB64*/
COPYMSC  STM   @14,@12,@SA00005                                    0881
*   OLDERID2=NEWERID2;                                             0882
         L     @07,@PC00001                                        0882
         L     @02,GDTTR2(,@07)                                    0882
         MVC   @TS00001(95),NEWERID2(@02)                          0882
         MVC   OLDERID2(95,@02),@TS00001                           0882
*   NEWID2='CH1E';                  /*                       @Z40LB64*/
*                                                                  0883
         MVC   NEWID2(4,@02),@CC02464                              0883
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE 'COPY TABLES' PARAMETER LIST FOR THE   @Z40LB64*/
*   /* 'COPYTABL' OPTION OF THE 'USSC' MACRO. THE            @Z40LB64*/
*   /* PARAMETER LIST WAS ZEROED WHEN STORAGE WAS ACQUIRED   @Z40LB64*/
*   /* FOR IT.                                               @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0884
*   COTBTID='80'X;                  /*                       @Z40LB64*/
         L     @02,COTBPTR                                         0884
         NI    COTBTID(@02),B'10001111'                            0884
         OI    COTBTID(@02),B'10000000'                            0884
*   COTBEXTS(1:2)=WDSSCYL;          /*                       @Z40LB64*/
         MVC   COTBEXTS(2,@02),WDSSCYL(WDSAPTR)                    0885
*   COTBEXTS(3:4)=WDSECYL;          /*                       @Z40LB64*/
         MVC   COTBEXTS+2(2,@02),WDSECYL(WDSAPTR)                  0886
*   COTBVOL=INFOVSN(1);             /*                       @Z40LB64*/
*                                                                  0887
         L     @01,INFOAPTR                                        0887
         MVC   COTBVOL(6,@02),INFOVSN(@01)                         0887
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE MSC TABLES TO THE WORK DATA SET ('USSC'      @Z40LB64*/
*   /* MACRO - 'COPYTABL' OPTION).                           @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0888
*   CALL IDCSASS0(GDTTBL,COPYTABL,COTBPTR,RSNCODE,COPYECB,CTMSGPTR);
         ST    @07,@AL00001                                        0888
         LA    @02,COPYTABL                                        0888
         ST    @02,@AL00001+4                                      0888
         LA    @02,COTBPTR                                         0888
         ST    @02,@AL00001+8                                      0888
         LA    @02,RSNCODE                                         0888
         ST    @02,@AL00001+12                                     0888
         LA    @02,COPYECB                                         0888
         ST    @02,@AL00001+16                                     0888
         LA    @02,CTMSGPTR                                        0888
         ST    @02,@AL00001+20                                     0888
         MVI   @AL00001+20,X'80'                                   0888
         L     @15,GDTSSC(,@07)                                    0888
         LA    @01,@AL00001                                        0888
         BALR  @14,@15                                             0888
*                                   /*                       @Z40LB64*/
*   RESPECIFY                                                      0889
*     RTNREG RSTD;                                                 0889
*   TESTRC=RTNREG;                                                 0890
         LR    TESTRC,RTNREG                                       0890
*   RESPECIFY                                                      0891
*     RTNREG UNRSTD;                /*                       @Z40LB64*/
*                                                                  0891
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE 'USSC' MACRO RETURN CODE. IF THE RETURN      @Z40LB64*/
*   /* CODE INDICATES THAT THE 'COPYTABL' OPERATION WAS NOT  @Z40LB64*/
*   /* SUCCESSFUL, CALL THE COMMON 'SSCMSG' PROCEDURE TO     @Z40LB64*/
*   /* PRINT THE APPROPRIATE EXPLANATORY MESSAGE, AND        @Z40LB64*/
*   /* TERMINATE CHECKMSS PROCESSING.                        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0892
*   IF TESTRC^=0 THEN                                              0892
         LTR   TESTRC,TESTRC                                       0892
         BZ    @RF00892                                            0892
*     DO;                           /*                       @Z40LB64*/
*       IF TESTRC=4 THEN                                           0894
         C     TESTRC,@CF00044                                     0894
         BNE   @RF00894                                            0894
*         CALL SSCMSG(RSNCODE,COPYECB);/*                    @Z40LB64*/
         LA    @02,RSNCODE                                         0895
         ST    @02,@AL00001                                        0895
         LA    @02,COPYECB                                         0895
         ST    @02,@AL00001+4                                      0895
         LA    @01,@AL00001                                        0895
         BAL   @14,SSCMSG                                          0895
*       IF TESTRC=8 THEN                                           0896
@RF00894 C     TESTRC,@CF00181                                     0896
         BNE   @RF00896                                            0896
*         NOSPACE=ON;               /*                       @Z40LB64*/
         OI    NOSPACE,B'10000000'                                 0897
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
@RF00896 L     @15,@PC00001+8                                      0898
         MVC   LASTCOND(2,@15),@CH00567                            0898
*       RETURN;                     /*                       @Z40LB64*/
@EL00005 DS    0H                                                  0899
@EF00005 DS    0H                                                  0899
@ER00005 LM    @14,@12,@SA00005                                    0899
         BR    @14                                                 0899
*     END;                          /*                       @Z40LB64*/
*                                                                  0900
*   /*****************************************************************/
*   /*                                                               */
*   /* THE 'COPYTABL' OPERATION HAS COMPLETED SUCCESSFULLY.  @Z40LB64*/
*   /* CONVERT THE CHR STARTING LOCATIONS OF MSC TABLES      @Z40LB64*/
*   /* RETURNED BY THE 'USSC' MACRO INTO CCHHR ADDRESSES     @Z40LB64*/
*   /* IN THE 'CCHHR TABLE' (FOR USE BY IDCCH03).            @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0901
*   CTMSGPTR=CTMSGPTR+ECBLEN;       /*                       @Z40LB64*/
@RF00892 LA    @15,4                                               0901
         AL    @15,CTMSGPTR                                        0901
         ST    @15,CTMSGPTR                                        0901
*   DO CHRTBL#=1 TO DIM(TBLCCHHR);  /*                       @Z40LB64*/
         LA    CHRTBL#,1                                           0902
@DL00902 DS    0H                                                  0903
*     TBLCC(CHRTBL#)=CTTBLCC(CHRTBL#);/*                     @Z40LB64*/
         L     @03,CCHHRPTR                                        0903
         LR    @15,CHRTBL#                                         0903
         MH    @15,@CH00158                                        0903
         L     @14,CTMSGPTR                                        0903
         LR    @07,CHRTBL#                                         0903
         SLA   @07,2                                               0903
         SLR   @06,@06                                             0903
         IC    @06,CTTBLCC-4(@07,@14)                              0903
         LA    @01,0(@15,@03)                                      0903
         AL    @01,@CF02688                                        0903
         STH   @06,TBLCC-2(,@01)                                   0903
*     TBLHH(CHRTBL#)=CTTBLHH(CHRTBL#);/*                     @Z40LB64*/
         SLR   @06,@06                                             0904
         IC    @06,CTTBLHH-4(@07,@14)                              0904
         LA    @01,0(@15,@03)                                      0904
         AL    @01,@CF02689                                        0904
         STH   @06,TBLHH-4(,@01)                                   0904
*     TBLR(CHRTBL#)=CTTBLRR(CHRTBL#);/*                      @Z40LB64*/
         SLR   @06,@06                                             0905
         IC    @06,CTTBLRR-4(@07,@14)                              0905
         STC   @06,TBLR-6(@15,@03)                                 0905
*   END;                            /*                       @Z40LB64*/
*                                                                  0906
         AL    CHRTBL#,@CF00221                                    0906
         C     CHRTBL#,@CF00446                                    0906
         BNH   @DL00902                                            0906
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPUTE THE CYLINDER DIFFERENCE BETWEEN THE ORIGINAL  @Z40LB64*/
*   /* MSC TABLES VOLUME AND THE WORK DATA SET VOLUME, AND   @Z40LB64*/
*   /* PLACE THE DIFFERENCE IN THE 'CCHHR TABLE'.            @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0907
*   CCOFFSET=CTREALCC-CTTBLCC(1);   /*                       @Z40LB64*/
*                                                                  0907
         L     @15,CTMSGPTR                                        0907
         SLR   @14,@14                                             0907
         ICM   @14,3,CTREALCC(@15)                                 0907
         SLR   @07,@07                                             0907
         IC    @07,CTTBLCC(,@15)                                   0907
         SLR   @14,@07                                             0907
         L     @01,CCHHRPTR                                        0907
         STH   @14,CCOFFSET(,@01)                                  0907
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE 'USSC' MESSAGE AREA POINTER TO THE          @Z40LB64*/
*   /* BEGINNING OF THE MESSAGE AREA, AND FREE THE MESSAGE   @Z40LB64*/
*   /* AREA ACQUIRED BY THE 'USSC' MACRO ('UFSPACE' MACRO).  @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0908
*   CTMSGPTR=CTMSGPTR-ECBLEN;       /*                       @Z40LB64*/
         SL    @15,@CF00044                                        0908
         ST    @15,CTMSGPTR                                        0908
*   CALL IDCSAFS0(GDTTBL,CTMSGPTR); /*                       @Z40LB64*/
*                                                                  0909
         L     @15,@PC00001                                        0909
         ST    @15,@AL00001                                        0909
         LA    @14,CTMSGPTR                                        0909
         ST    @14,@AL00001+4                                      0909
         L     @15,GDTFSP(,@15)                                    0909
         LA    @01,@AL00001                                        0909
         BALR  @14,@15                                             0909
*   /*****************************************************************/
*   /*                                                               */
*   /* READ (FROM THE MSC WORKING CONTROL STORAGE) THE MSC   @Z40LB64*/
*   /* TABLES STARTING CHR LOCATIONS TO OBTAIN THE           @Z40LB64*/
*   /* STARTING CHR ADDRESS OF THE MOUNTED VOLUME TABLE      @Z40LB64*/
*   /* CONTROL BLOCK.                                        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0910
*   TCHRFLAG=ON;                    /*                       @Z40LB64*/
         L     @01,EARGPTR                                         0910
         OI    TCHRFLAG(@01),B'00100000'                           0910
*   CALL IDCCH03(GDTTBL,CDALIST);   /*                       @Z40LB64*/
         L     @15,@PC00001                                        0911
         ST    @15,@AL00001                                        0911
         LA    @15,CDALIST                                         0911
         ST    @15,@AL00001+4                                      0911
         L     @15,@CV02184                                        0911
         LA    @01,@AL00001                                        0911
         BALR  @14,@15                                             0911
*   IF GETRC^=0 THEN                                               0912
         L     @01,EARGPTR                                         0912
         LH    @15,GETRC(,@01)                                     0912
         LTR   @15,@15                                             0912
         BZ    @RF00912                                            0912
*     DO;                           /*                       @Z40LB64*/
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0914
         MVC   LASTCOND(2,@15),@CH00567                            0914
*       RETURN;                     /*                       @Z40LB64*/
         B     @EL00005                                            0915
*     END;                          /*                       @Z40LB64*/
*                                                                  0916
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT THE CHR ADDRESS OF THE MVT CONTROL BLOCK      @Z40LB64*/
*   /* TO A CCHHR ADDRESS AND PLACE IN THE 'CCHHR TABLE'.    @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0917
*   VTR1PTR=NULLPTR;                /*                       @Z40LB64*/
@RF00912 SLR   VTR1PTR,VTR1PTR                                     0917
*   VTR1PTR=TBLADDR-(ADDR(VTTBLCHR)-ADDR(VTABLER1));/*       @Z40LB64*/
         L     @03,EARGPTR                                         0918
         LA    @15,VTTBLCHR(,VTR1PTR)                              0918
         SLR   @15,VTR1PTR                                         0918
         LCR   @15,@15                                             0918
         AL    @15,TBLADDR(,@03)                                   0918
         LR    VTR1PTR,@15                                         0918
*   MVTDBCC=VTTBLC(1);              /*                       @Z40LB64*/
         L     @15,CCHHRPTR                                        0919
         SLR   @14,@14                                             0919
         IC    @14,VTTBLC(,VTR1PTR)                                0919
         STH   @14,MVTDBCC(,@15)                                   0919
*   MVTDBHH=VTTBLH(1);              /*                       @Z40LB64*/
         SLR   @14,@14                                             0920
         IC    @14,VTTBLH(,VTR1PTR)                                0920
         STH   @14,MVTDBHH(,@15)                                   0920
*   MVTDBR=VTTBLR(1);               /*                       @Z40LB64*/
*                                                                  0921
         MVC   MVTDBR(1,@15),VTTBLR(VTR1PTR)                       0921
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSC VS. MSC CHECKING IS REQUESTED,                 @Z40LB64*/
*   /* OBTAIN THE MSC MOUNT EQUALIZATION RECORD FROM THE     @Z40LB64*/
*   /* MSC WORKING CONTROL STORAGE.                          @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0922
*   IF MSCCHK=ON THEN                                              0922
         TM    MSCCHK,B'10000000'                                  0922
         BNO   @RF00922                                            0922
*     DO;                           /*                       @Z40LB64*/
*       MEFLAG=ON;                  /*                       @Z40LB64*/
         OI    MEFLAG(@03),B'10000000'                             0924
*       CALL IDCCH03(GDTTBL,CDALIST);/*                      @Z40LB64*/
         L     @15,@PC00001                                        0925
         ST    @15,@AL00001                                        0925
         LA    @15,CDALIST                                         0925
         ST    @15,@AL00001+4                                      0925
         L     @15,@CV02184                                        0925
         LA    @01,@AL00001                                        0925
         BALR  @14,@15                                             0925
*       IF GETRC^=0 THEN                                           0926
         L     @01,EARGPTR                                         0926
         LH    @15,GETRC(,@01)                                     0926
         LTR   @15,@15                                             0926
         BZ    @RF00926                                            0926
*         DO;                       /*                       @Z40LB64*/
*           LASTCOND=LASTCC12;      /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      0928
         MVC   LASTCOND(2,@15),@CH00567                            0928
*           RETURN;                 /*                       @Z40LB64*/
         B     @EL00005                                            0929
*         END;                      /*                       @Z40LB64*/
*                                                                  0930
*       /*************************************************************/
*       /*                                                           */
*       /* COPY THE MOUNT EQUALIZATION RECORD MOUNTED        @Z40LB64*/
*       /* VOLUME COUNTS FOR EACH STAGING DRIVE GROUP.       @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0931
*       MERPTR=TBLADDR;             /*                       @Z40LB64*/
@RF00926 L     @01,EARGPTR                                         0931
         L     MERPTR,TBLADDR(,@01)                                0931
*       IMERECRD(1:LENGTH(IMERECRD))=MERECORD(1:LENGTH(IMERECRD));/*
*                                                            @Z40LB64*/
         L     @03,IMERPTR                                         0932
         MVC   IMERECRD(120,@03),MERECORD(MERPTR)                  0932
*     END;                          /*                       @Z40LB64*/
*   END COPYMSC;                    /*                       @Z40LB64*/
         B     @EL00005                                            0934
*                                                                  0935
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - COPYSA                                @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - CHECKS TO SEE WHICH, IF ANY, SAS ARE OFF-   @ZA27324*/
*/*              LINE OR SUU.  IF THEY ARE, THE TABLES ARE   @ZA27324*/
*/*              NOT READ AND MESSAGE IDC21125I IS PRINTED.  @ZA27324*/
*/*                                                          @ZA27324*/
*/*              OBTAINS A COPY OF THE STAGING ADAPTER       @Z40LB64*/
*/*              TABLES FROM THE STAGING ADAPTER WORKING     @Z40LB64*/
*/*              CONTROL STORAGE FOR SUBSEQUENT ANALYSIS.    @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE STAGING ADAPTER DATA OBTAINED IS        @Z40LB64*/
*/*              REFORMATTED - UNREFERENCED FIELDS ARE       @Z40LB64*/
*/*              DELETED, AND REFERENCED FIELDS ARE          @Z40LB64*/
*/*              COMPRESSED WHERE POSSIBLE.                  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - THE STAGING ADAPTER TABLES IN STAGING ADAPTER  @Z40LB64*/
*/*           WORKING CONTROL STORAGE.                       @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - THE REFORMATTED COPY OF THE STAGING ADAPTER   @Z40LB64*/
*/*            TABLES IN MAIN STORAGE.                       @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  0935
*COPYSA:                                                           0935
*   PROCEDURE;                      /*                       @Z40LB64*/
COPYSA   STM   @14,@12,@SA00006                                    0935
*   DCL                                                            0936
*     DUMMYPTR FIXED(31) STATIC INIT(-1);/*                  @ZA27324*/
*   DCL                                                            0937
*     X FIXED(8);                   /* ITH INDEX             @ZA27324*/
*   DCL                                                            0938
*     Y FIXED(8);                   /* JTH INDEX             @ZA27324*/
*   OLDERID2=NEWERID2;                                             0939
         L     @15,@PC00001                                        0939
         L     @15,GDTTR2(,@15)                                    0939
         MVC   @TS00001(95),NEWERID2(@15)                          0939
         MVC   OLDERID2(95,@15),@TS00001                           0939
*   NEWID2='CH1F';                  /*                       @Z40LB64*/
*                                                                  0940
         MVC   NEWID2(4,@15),@CC02471                              0940
*   /*****************************************************************/
*   /*                                                               */
*   /* READ THE 4 MSC WCS MAIN SECTORS (7C - 7F) MARK ONLY   @ZA27324*/
*   /* VALID SAS WHICH ARE ONLINE AND READY AS OK.           @ZA27324*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0941
*   QUPTR=WCSBFPTR;                 /*                       @ZA27324*/
         L     @15,RWCSPTR                                         0941
         L     @14,WCSBFPTR                                        0941
         ST    @14,QUPTR(,@15)                                     0941
*   QWMEM=OFF;                                                     0942
         NI    QWMEM(@15),B'01111111'                              0942
*   DO X=1 TO 4;                    /*                       @ZA27324*/
         LA    X,1                                                 0943
@DL00943 DS    0H                                                  0944
*     QUSECT=SECTRTBL(X);           /*                       @ZA27324*/
         L     @05,RWCSPTR                                         0944
         LA    @02,SECTRTBL-1(X)                                   0944
         MVC   QUSECT(1,@05),0(@02)                                0944
*     CALL IDCSASS0(GDTTBL,RDMSC,RWCSPTR,RSNCODE);/*         @ZA27324*/
         L     @05,@PC00001                                        0945
         ST    @05,@AL00001                                        0945
         LA    @02,RDMSC                                           0945
         ST    @02,@AL00001+4                                      0945
         LA    @02,RWCSPTR                                         0945
         ST    @02,@AL00001+8                                      0945
         LA    @02,RSNCODE                                         0945
         ST    @02,@AL00001+12                                     0945
         MVI   @AL00001+12,X'80'                                   0945
         L     @15,GDTSSC(,@05)                                    0945
         LA    @01,@AL00001                                        0945
         BALR  @14,@15                                             0945
*     RESPECIFY                                                    0946
*       RTNREG RSTD;                                               0946
*     TESTRC=RTNREG;                                               0947
         LR    TESTRC,RTNREG                                       0947
*     RESPECIFY                                                    0948
*       RTNREG UNRSTD;              /*                       @ZA27324*/
*     IF TESTRC^=0 THEN             /*                       @ZA27324*/
         LTR   TESTRC,TESTRC                                       0949
         BZ    @RF00949                                            0949
*       DO;                         /*                       @ZA27324*/
*         CALL SSCMSG(RSNCODE);     /*                       @ZA27324*/
         LA    @15,RSNCODE                                         0951
         ST    @15,@AL00001                                        0951
         LA    @01,@AL00001                                        0951
         BAL   @14,SSCMSG                                          0951
*         DARGLIST=''B;             /*                       @ZA27324*/
         L     @15,DDSTRU                                          0952
         XC    DARGLIST(20,@15),DARGLIST(@15)                      0952
*         DARGSMOD=CHMSGMOD;        /*                       @ZA27324*/
         MVC   DARGSMOD(3,@15),@CC02426                            0953
*         DARGSENT=MSG31126;        /*                       @ZA27324*/
         MVI   DARGSENT(@15),X'06'                                 0954
*         CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*            @ZA27324*/
         L     @15,@PC00001                                        0955
         ST    @15,@AL00001                                        0955
         LA    @14,@CF00117                                        0955
         ST    @14,@AL00001+4                                      0955
         LA    @14,DDSTRU                                          0955
         ST    @14,@AL00001+8                                      0955
         MVI   @AL00001+8,X'80'                                    0955
         L     @15,GDTPRT(,@15)                                    0955
         LA    @01,@AL00001                                        0955
         BALR  @14,@15                                             0955
*         LASTCOND=LASTCC12;        /*                       @ZA27324*/
         L     @15,@PC00001+8                                      0956
         MVC   LASTCOND(2,@15),@CH00567                            0956
*         RETURN;                   /*                       @ZA27324*/
@EL00006 DS    0H                                                  0957
@EF00006 DS    0H                                                  0957
@ER00006 LM    @14,@12,@SA00006                                    0957
         BR    @14                                                 0957
*       END;                        /*                       @ZA27324*/
*     ELSE                          /*                       @ZA27324*/
*       DO Y=1 TO 4;                /*                       @ZA27324*/
@RF00949 LA    Y,1                                                 0959
@DL00959 DS    0H                                                  0960
*         IF SAVALID(Y)=ON THEN     /*                       @ZA27324*/
         L     @05,WCSBFPTR                                        0960
         LR    @03,Y                                               0960
         SLA   @03,2                                               0960
         ST    @03,@TF00001                                        0960
         ALR   @03,@05                                             0960
         TM    SAVALID-4(@03),B'10000000'                          0960
         BNO   @RF00960                                            0960
*           IF SAREADY(Y)=ON&       /*                       @ZA27324*/
*               SAONLINE(Y)=ON THEN /*                       @ZA27324*/
         AL    @05,@TF00001                                        0961
         TM    SAREADY-4(@05),B'01100000'                          0961
         BNO   @RF00961                                            0961
*             SAARRAY(X,Y)=ON;      /*                       @ZA27324*/
         LR    @05,X                                               0962
         SLA   @05,2                                               0962
         ALR   @05,Y                                               0962
         LA    @03,SAARRAY-5(@05)                                  0962
         OI    0(@03),B'10000000'                                  0962
*           ELSE                    /*                       @ZA27324*/
*             SAARRAY(X,Y)=OFF;     /*                       @ZA27324*/
         B     @RC00961                                            0963
@RF00961 LR    @05,X                                               0963
         SLA   @05,2                                               0963
         ALR   @05,Y                                               0963
         LA    @03,SAARRAY-5(@05)                                  0963
         NI    0(@03),B'01111111'                                  0963
*         ELSE                      /*                       @ZA27324*/
*           SAARRAY(X,Y)=OFF;       /*                       @ZA27324*/
         B     @RC00960                                            0964
@RF00960 LR    @05,X                                               0964
         SLA   @05,2                                               0964
         ALR   @05,Y                                               0964
         LA    @03,SAARRAY-5(@05)                                  0964
         NI    0(@03),B'01111111'                                  0964
*       END;                        /*                       @ZA27324*/
@RC00960 AL    Y,@CF00221                                          0965
         C     Y,@CF00044                                          0965
         BNH   @DL00959                                            0965
*   END;                            /*                       @ZA27324
*                                                            @ZA27324*/
*                                                                  0966
         AL    X,@CF00221                                          0966
         C     X,@CF00044                                          0966
         BNH   @DL00943                                            0966
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE 'READ STAGING ADAPTER WORKING CONTROL  @Z40LB64*/
*   /* STORAGE' PARAMETER LIST. THE PARAMETER LIST WAS       @Z40LB64*/
*   /* ZEROED WHEN STORAGE WAS ACQUIRED FOR IT.              @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0967
*   QUPTR=WCSBFPTR;                 /*                       @Z40LB64*/
         L     @06,WCSBFPTR                                        0967
         L     @01,RWCSPTR                                         0967
         ST    @06,QUPTR(,@01)                                     0967
*   SATBLPTR=WCSBFPTR+SECTRLEN;     /*                       @Z40LB64*/
*                                                                  0968
         AL    @06,@CF01098                                        0968
         LR    SATBLPTR,@06                                        0968
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE STAGING ADAPTER VIRTUAL ADDRESS DIRECTORY    @Z40LB64*/
*   /* (VAD), VIRTUAL VOLUME INFORMATION TABLE (VVIT),       @Z40LB64*/
*   /* PAGE STATUS TABLE (PST), AND LOGICAL TO REAL TABLE    @Z40LB64*/
*   /* (LTR) FOR EACH VALID STAGING ADAPTER.                 @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0969
*SACOPY:                                                           0969
*   DO SA#=1 TO SAVLDCNT;           /*                       @Z40LB64*/
*                                                                  0969
SACOPY   LA    SA#,1                                               0969
         B     @DE00969                                            0969
@DL00969 DS    0H                                                  0970
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE INDICES FOR EACH STAGING ADAPTER     @Z40LB64*/
*     /* TABLE READING AND REFORMATTING.                     @Z40LB64*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0970
*     VADCHNL=0;                    /*                       @Z40LB64*/
         SLR   @15,@15                                             0970
         STH   @15,VADCHNL                                         0970
*     SDG#=1;                       /*                       @Z40LB64*/
         LA    @15,1                                               0971
         STH   @15,SDG#                                            0971
*     LUA#=1;                       /*                       @Z40LB64*/
         LR    LUA#,@15                                            0972
*     RPAGE#=1;                     /*                       @Z40LB64*/
         STH   @15,RPAGE#                                          0973
*     PSTFLAG=OFF;                  /*                       @Z40LB64*/
         NI    PSTFLAG,B'01111111'                                 0974
*     SAID#=VLDSAID(SA#)+1;         /*                       @Z40LB64*/
         LR    @14,SA#                                             0975
         ALR   @14,@14                                             0975
         LH    @14,VLDSAID-2(@14)                                  0975
         ALR   @15,@14                                             0975
         LR    SAID#,@15                                           0975
*     QWSSID=SSIDBASE+(VLDSAID(SA#)*SAIDSHFT);/*             @Z40LB64*/
*                                                                  0976
         SLA   @14,4                                               0976
         LH    @15,SSIDBASE                                        0976
         N     @15,@CF02684                                        0976
         ALR   @14,@15                                             0976
         L     @15,RWCSPTR                                         0976
         STH   @14,QWSSID(,@15)                                    0976
*     /***************************************************************/
*     /*                                                             */
*     /* READ EACH STAGING ADAPTER WORKING CONTROL STORAGE   @Z40LB64*/
*     /* SECTOR CONTAINING A DESIRED STAGING ADAPTER TABLE   @Z40LB64*/
*     /* (OR PORTION OF A TABLE). READ PST FROM EXTENDED     @ZD00043*/
*     /* SA WCS -- READ THE OTHERS FROM MAIN SA WCS.         @ZD00043*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0977
*SECTCOPY:                                                         0977
*     DO SECT#=1 TO DIM(SASECTOR);  /*                       @Z40LB64*/
SECTCOPY LA    @15,1                                               0977
         STH   @15,SECT#                                           0977
@DL00977 DS    0H                                                  0978
*       IF SARYOVLY(SAID#)=ON THEN  /*                       @ZA27324*/
         LA    @01,SARYOVLY-1(SAID#)                               0978
         TM    0(@01),B'10000000'                                  0978
         BNO   @RF00978                                            0978
*         DO;                       /*                       @ZA27324*/
*           QUSECT=SASECTOR(SECT#); /*                       @Z40LB64*/
         L     @14,RWCSPTR                                         0980
         SLR   @03,@03                                             0980
         IC    @03,SASECTOR-1(@15)                                 0980
         STC   @03,QUSECT(,@14)                                    0980
*           IF SECT#>=PSTINDX1&SECT#<=PSTINDX2 THEN                0981
         C     @15,@CF01644                                        0981
         BL    @RF00981                                            0981
         C     @15,@CF02303                                        0981
         BH    @RF00981                                            0981
*             QWMEM=ON;             /*                       @ZD00043*/
         OI    QWMEM(@14),B'10000000'                              0982
*           ELSE                                                   0983
*             QWMEM=OFF;            /*                       @ZD00043*/
         B     @RC00981                                            0983
@RF00981 L     @01,RWCSPTR                                         0983
         NI    QWMEM(@01),B'01111111'                              0983
*           CALL IDCSASS0(GDTTBL,RDSTGAD,RWCSPTR,RSNCODE);/* @ZA27324*/
@RC00981 L     @02,@PC00001                                        0984
         ST    @02,@AL00001                                        0984
         LA    @15,RDSTGAD                                         0984
         ST    @15,@AL00001+4                                      0984
         LA    @15,RWCSPTR                                         0984
         ST    @15,@AL00001+8                                      0984
         LA    @15,RSNCODE                                         0984
         ST    @15,@AL00001+12                                     0984
         MVI   @AL00001+12,X'80'                                   0984
         L     @15,GDTSSC(,@02)                                    0984
         LA    @01,@AL00001                                        0984
         BALR  @14,@15                                             0984
*           RESPECIFY                                              0985
*             RTNREG RSTD;                                         0985
*           TESTRC=RTNREG;                                         0986
         LR    TESTRC,RTNREG                                       0986
*           RESPECIFY                                              0987
*             RTNREG UNRSTD;        /*                       @ZA27324*/
*         END;                      /*                       @ZA27324*/
*       ELSE                        /*                       @ZA27324*/
*         DO;                       /*                       @ZA27324*/
         B     @RC00978                                            0989
@RF00978 DS    0H                                                  0990
*           RSNCODE=0;              /*                       @ZA27324*/
         SLR   @02,@02                                             0990
         ST    @02,RSNCODE                                         0990
*           TESTRC=4;               /*                       @ZA27324*/
         LA    TESTRC,4                                            0991
*         END;                      /*                       @ZA27324*/
*                                                                  0992
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE REQUESTED STAGING ADAPTER WORKING CONTROL  @Z40LB64*/
*       /* STORAGE SECTOR WAS NOT SUCCESSFULLY OBTAINED, OR  @ZA27324*/
*       /* NOT READ, BYPASS THIS SA, SETUP DUMMY PTRS AND    @ZA27324*/
*       /* CALL SSCMSG TO PROCESS THE REASON CODE.           @ZA27324*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0993
*       IF TESTRC=4 THEN            /*                       @ZA27324*/
@RC00978 C     TESTRC,@CF00044                                     0993
         BNE   @RF00993                                            0993
*         DO;                       /*                       @ZA27324*/
*           IF RSNCODE^=0 THEN      /*                       @ZA27324*/
         L     @15,RSNCODE                                         0995
         LTR   @15,@15                                             0995
         BZ    @RF00995                                            0995
*             DO;                   /*                       @ZA27324*/
*               CALL SSCMSG(RSNCODE);/*                      @ZA27324*/
         LA    @15,RSNCODE                                         0997
         ST    @15,@AL00001                                        0997
         LA    @01,@AL00001                                        0997
         BAL   @14,SSCMSG                                          0997
*               DARGLIST=''B;       /*                       @ZA27324*/
         L     @15,DDSTRU                                          0998
         XC    DARGLIST(20,@15),DARGLIST(@15)                      0998
*               DARGSENT=MSG21127;  /*                       @ZA27324*/
         MVI   DARGSENT(@15),X'07'                                 0999
*             END;                  /*                       @ZA27324*/
*           ELSE                    /*                       @ZA27324*/
*             DO;                   /*                       @ZA27324*/
         B     @RC00995                                            1001
@RF00995 DS    0H                                                  1002
*               DARGLIST=''B;       /*                       @ZA27324*/
         L     @15,DDSTRU                                          1002
         XC    DARGLIST(20,@15),DARGLIST(@15)                      1002
*               DARGSENT=MSG21125;  /*                       @ZA27324*/
         MVI   DARGSENT(@15),X'05'                                 1003
*               DARGILP=LENGTH(SAUCB(SAID#));/*              @ZA27324*/
         LA    @14,3                                               1004
         STH   @14,DARGILP(,@15)                                   1004
*               DARGDBP=ADDR(SAUCB(SAID#));/*                @ZA27324*/
         LR    @01,@14                                             1005
         MR    @00,SAID#                                           1005
         LA    @14,SAUCB-3(@01)                                    1005
         ST    @14,DARGDBP(,@15)                                   1005
*             END;                  /*                       @ZA27324*/
*           DARGSMOD=CHMSGMOD;      /*                       @ZA27324*/
@RC00995 L     @01,DDSTRU                                          1007
         MVC   DARGSMOD(3,@01),@CC02426                            1007
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @ZA27324*/
         L     @15,@PC00001                                        1008
         ST    @15,@AL00001                                        1008
         LA    @14,@CF00117                                        1008
         ST    @14,@AL00001+4                                      1008
         LA    @14,DDSTRU                                          1008
         ST    @14,@AL00001+8                                      1008
         MVI   @AL00001+8,X'80'                                    1008
         L     @15,GDTPRT(,@15)                                    1008
         LA    @01,@AL00001                                        1008
         BALR  @14,@15                                             1008
*           IVADPTR(SAID#)=DUMMYPTR;/*                       @ZA27324*/
         L     @15,DUMMYPTR                                        1009
         LR    @14,SAID#                                           1009
         SLA   @14,2                                               1009
         ST    @15,IVADPTR-4(@14)                                  1009
*           IVVITPTR(SAID#)=DUMMYPTR;/*                      @ZA27324*/
         ST    @15,IVVITPTR-4(@14)                                 1010
*           IPSTPTR(SAID#)=DUMMYPTR;/*                       @ZA27324*/
         ST    @15,IPSTPTR-4(@14)                                  1011
*           ILTRPTR(SAID#)=DUMMYPTR;/*                       @ZA27324*/
         ST    @15,ILTRPTR-4(@14)                                  1012
*           SECT#=DIM(SASECTOR);    /*                       @ZA27324*/
         MVC   SECT#(2),@CH01515                                   1013
*           SUUCOND=LASTCC08;       /*                       @ZA27324*/
         MVC   SUUCOND(2),@CH00181                                 1014
*         END;                      /*                       @ZA27324*/
*       ELSE                        /*                       @ZA27324*/
*         DO;                       /*                       @ZA27324*/
*                                                                  1016
         B     @RC00993                                            1016
@RF00993 DS    0H                                                  1017
*           /*********************************************************/
*           /*                                                       */
*           /* SET VALID SA#S INTO THE VLDSSID TABLE FOR POS-        */
*           /*                                               @ZA27324*/
*           /* SIBLE LATER COMPARISON BY IDCCH02 AND/OR IDCCH04.     */
*           /*                                               @ZA27324*/
*           /* NOTE THAT THE TABLE WAS PRE-INITIALIZED TO -1.        */
*           /*                                               @ZA27324*/
*           /* VLDSSID THEN IS SIMPLY VLDSAID WITH INVALID,  @ZA27324*/
*           /* OFFLINE AND SUU ENTRIES SET TO -1 FOR ALL POS-        */
*           /*                                               @ZA27324*/
*           /* SIBLE SAS. ONLY THE SAVLDCNT ENTRIES OF VLDSAID       */
*           /*                                               @ZA27324*/
*           /* ARE VALID.                                    @ZA27324*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1017
*           VLDSSID(SA#)=VLDSAID(SA#);/*                     @ZA27324*/
         LR    @15,SA#                                             1017
         ALR   @15,@15                                             1017
         LH    @14,VLDSAID-2(@15)                                  1017
         STH   @14,VLDSSID-2(@15)                                  1017
*           IF GDTDBG=NULLPTR THEN                                 1018
         L     @15,@PC00001                                        1018
         L     @15,GDTDBG(,@15)                                    1018
         LTR   @15,@15                                             1018
         BZ    @RT01018                                            1018
*             ;                                                    1019
*           ELSE                                                   1020
*             DO;                                                  1020
*               DMPINDEX=ADDR(DUMPLIST);/*                   @Z40LB64*/
         LA    DMPINDEX,DUMPLIST                                   1021
*               DMPITMNM='SAREC';                                  1022
         MVI   DMPITMNM+5(DMPINDEX),C' '                           1022
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         1022
         MVC   DMPITMNM(5,DMPINDEX),@CC02476                       1022
*               DMPITMPT=ADDR(SATBLPTR->WCSBUF);                   1023
         ST    SATBLPTR,DMPITMPT(,DMPINDEX)                        1023
*               DMPITMLN=256;                                      1024
         MVC   DMPITMLN(2,DMPINDEX),@CH01098                       1024
*               DMPITMTP='H';                                      1025
         MVI   DMPITMTP(DMPINDEX),C'H'                             1025
*               DMPINDEX=DMPINDEX+DMPELEMT;/*                @Z40LB64*/
         AL    DMPINDEX,@CF00476                                   1026
*               DMPTRM=DMPTRMVL;                                   1027
         MVI   DMPTRM(DMPINDEX),X'FF'                              1027
*             END;                  /*                       @Z40LB64*/
*           IF GDTDBG=NULLPTR THEN                                 1029
@RT01018 L     @15,@PC00001                                        1029
         L     @15,GDTDBG(,@15)                                    1029
         LTR   @15,@15                                             1029
         BZ    @RT01029                                            1029
*             ;                                                    1030
*           ELSE                                                   1031
*             CALL IDCDB010(GDTTBL,'CH1U',ADDR(DUMPLIST));/* @Z40LB64*/
*                                                                  1031
         L     @15,@PC00001                                        1031
         ST    @15,@AL00001                                        1031
         LA    @14,@CC02478                                        1031
         ST    @14,@AL00001+4                                      1031
         LA    @14,DUMPLIST                                        1031
         ST    @14,@AFTEMPS                                        1031
         LA    @14,@AFTEMPS                                        1031
         ST    @14,@AL00001+8                                      1031
         MVI   @AL00001+8,X'80'                                    1031
         L     @15,GDTDBG(,@15)                                    1031
         LA    @01,@AL00001                                        1031
         BALR  @14,@15                                             1031
*           /*********************************************************/
*           /*                                                       */
*           /* REQUESTED SECTOR WAS SUCCESSFULLY OBTAINED.   @Z40LB64*/
*           /* PERFORM REFORMATTING OF OBTAINED TABLE OR TABLE       */
*           /*                                               @Z40LB64*/
*           /* PORTION IN THE SECTOR. THE SECTOR INDEX       @Z40LB64*/
*           /* DETERMINES THE REFORMATTING TO BE PERFORMED.  @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1032
*           DO;                     /* CASE(SECT#)NAMES(VAD1CASE,VAD2
*                                      CASE,VAD1CASE,VAD2CASE,VAD1CAS
*                                      E,VAD2CASE,VVI1CASE,VVI2CASE,P
*                                      STCASE,PSTCASE,PSTCASE,PSTCASE
*                                      ,PSTCASE,PSTCASE,PSTCASE,PSTCA
*                                      SE,PSTCASE,PSTCASE,PSTCASE,PST
*                                      CASE,PSTCASE,LTRCASE)         */
@RT01029 DS    0H                                                  1033
*             DCL                                                  1033
*               CL0001@ LABEL BASED(CP0001@(SECT#)) VALUERANGE(VAD1CASE
*                   ,VAD2CASE,VAD1CASE,VAD2CASE,VAD1CASE,VAD2CASE, 1033
*                   VVI1CASE,VVI2CASE,PSTCASE,PSTCASE,PSTCASE,PSTCASE,
*                   PSTCASE,PSTCASE,PSTCASE,PSTCASE,PSTCASE,PSTCASE,
*                   PSTCASE,PSTCASE,PSTCASE,LTRCASE);/* BRANCH TARGET*/
*             DCL                                                  1034
*               CP0001@(22) PTR(31) INIT(ADDR(VAD1CASE),ADDR(VAD2CASE),
*                   ADDR(VAD1CASE),ADDR(VAD2CASE),ADDR(VAD1CASE),ADDR(
*                   VAD2CASE),ADDR(VVI1CASE),ADDR(VVI2CASE),ADDR(  1034
*                   PSTCASE),ADDR(PSTCASE),ADDR(PSTCASE),ADDR(PSTCASE),
*                   ADDR(PSTCASE),ADDR(PSTCASE),ADDR(PSTCASE),ADDR(
*                   PSTCASE),ADDR(PSTCASE),ADDR(PSTCASE),ADDR(PSTCASE),
*                   ADDR(PSTCASE),ADDR(PSTCASE),ADDR(LTRCASE));    1034
*             GOTO CL0001@;         /* BRANCH TO SELECTED CASE       */
*                                                                  1035
         LH    @15,SECT#                                           1035
         SLA   @15,2                                               1035
         L     @01,CP0001@-4(@15)                                  1035
         BR    @01                                                 1035
*             /*******************************************************/
*             /*                                                     */
*             /*                                             @Z40LB64*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1036
*VAD1CASE:                                                         1036
*             DO;                   /* SUBCASE               @Z40LB64*/
*                                                                  1036
VAD1CASE DS    0H                                                  1037
*               /*****************************************************/
*               /*                                                   */
*               /* VIRTUAL ADDRESS DIRECTORY WORD 1 TO BE    @Z40LB64*/
*               /* REFORMATTED.                              @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1037
*               VADCHNL=VADCHNL+1;  /*                       @Z40LB64*/
         LA    @02,1                                               1037
         LH    @15,VADCHNL                                         1037
         ALR   @15,@02                                             1037
         STH   @15,VADCHNL                                         1037
*               VADPTR1=SATBLPTR;   /*                       @Z40LB64*/
         LR    VADPTR1,SATBLPTR                                    1038
*               DO VUA#=1 TO VUASINTF;/*                     @Z40LB64*/
         LA    @15,1                                               1039
         LR    VUA#,@15                                            1039
@DL01039 DS    0H                                                  1040
*                 IVADPTR(SAID#)->IVADVVA(VADCHNL,VUA#)=VADVVA(VUA#);
         LH    @15,VADCHNL                                         1040
         SLA   @15,6                                               1040
         ALR   @15,VUA#                                            1040
         ALR   @15,@15                                             1040
         LR    @14,SAID#                                           1040
         SLA   @14,2                                               1040
         L     @01,IVADPTR-4(@14)                                  1040
         LR    @14,VUA#                                            1040
         SLA   @14,2                                               1040
         AL    @14,@CF02690                                        1040
         SLR   @00,@00                                             1040
         IC    @00,VADVVA-1(@14,VADPTR1)                           1040
         AL    @01,@CF02691                                        1040
         STC   @00,IVADVVA(@15,@01)                                1040
*                                   /*                       @Z40LB64*/
*               END;                /*                       @Z40LB64*/
         AL    VUA#,@CF00221                                       1041
         C     VUA#,@CF01072                                       1041
         BNH   @DL01039                                            1041
*               GOTO CE0001@;       /* BRANCH TO END OF CASE         */
         B     CE0001@                                             1042
*             END VAD1CASE;         /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1044
*VAD2CASE:                                                         1044
*             DO;                   /* SUBCASE               @Z40LB64*/
*                                                                  1044
VAD2CASE DS    0H                                                  1045
*               /*****************************************************/
*               /*                                                   */
*               /* VIRTUAL ADDRESS DIRECTORY WORD 2 TO BE    @Z40LB64*/
*               /* REFORMATTED.                              @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1045
*               VADPTR2=SATBLPTR;   /*                       @Z40LB64*/
         LR    VADPTR2,SATBLPTR                                    1045
*               DO VUA#=1 TO VUASINTF;/*                     @Z40LB64*/
         LA    VUA#,1                                              1046
@DL01046 DS    0H                                                  1047
*                 IVADPTR(SAID#)->IVADFLG(VADCHNL,VUA#)=VADFLAGS(VUA#);
         LH    @15,VADCHNL                                         1047
         SLA   @15,6                                               1047
         ALR   @15,VUA#                                            1047
         ALR   @15,@15                                             1047
         LR    @14,SAID#                                           1047
         SLA   @14,2                                               1047
         L     @01,IVADPTR-4(@14)                                  1047
         ALR   @01,@15                                             1047
         AL    @01,@CF02692                                        1047
         LR    @15,VUA#                                            1047
         SLA   @15,2                                               1047
         ALR   @15,VADPTR2                                         1047
         AL    @15,@CF02349                                        1047
         MVC   IVADFLG-1(1,@01),VADFLAGS-3(@15)                    1047
*                                   /*                       @Z40LB64*/
*               END;                /*                       @Z40LB64*/
         AL    VUA#,@CF00221                                       1048
         C     VUA#,@CF01072                                       1048
         BNH   @DL01046                                            1048
*               GOTO CE0001@;       /* BRANCH TO END OF CASE         */
         B     CE0001@                                             1049
*             END VAD2CASE;         /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1051
*VVI1CASE:                                                         1051
*             DO;                   /* SUBCASE               @Z40LB64*/
*                                                                  1051
VVI1CASE DS    0H                                                  1052
*               /*****************************************************/
*               /*                                                   */
*               /* VIRTUAL VOLUME INFORMATION TABLE BYTE 1   @Z40LB64*/
*               /* TO BE REFORMATTED.                        @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1052
*               VVITPTR1=SATBLPTR;  /*                       @Z40LB64*/
         LR    VVITPTR1,SATBLPTR                                   1052
*               DO VVA#=LOWVVA TO HIGHVVA;/*                 @Z40LB64*/
         LA    VVA#,64                                             1053
@DL01053 DS    0H                                                  1054
*                 IVVITPTR(SAID#)->IVVI1(VVA#-LOWVVA+1)=VVITBYT1(VVA#+1
*                     );            /*                       @Z40LB64*/
         LR    @15,VVA#                                            1054
         ALR   @15,@15                                             1054
         LR    @14,SAID#                                           1054
         SLA   @14,2                                               1054
         L     @01,IVVITPTR-4(@14)                                 1054
         ALR   @01,@15                                             1054
         AL    @01,@CF02693                                        1054
         LR    @15,VVITPTR1                                        1054
         ALR   @15,VVA#                                            1054
         MVC   IVVI1(1,@01),VVITBYT1(@15)                          1054
*               END;                /*                       @Z40LB64*/
         AL    VVA#,@CF00221                                       1055
         C     VVA#,@CF02305                                       1055
         BNH   @DL01053                                            1055
*               GOTO CE0001@;       /* BRANCH TO END OF CASE         */
         B     CE0001@                                             1056
*             END VVI1CASE;         /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1058
*VVI2CASE:                                                         1058
*             DO;                   /* SUBCASE               @Z40LB64*/
*                                                                  1058
VVI2CASE DS    0H                                                  1059
*               /*****************************************************/
*               /*                                                   */
*               /* VIRTUAL VOLUME INFORMATION TABLE BYTE 2   @Z40LB64*/
*               /* TO BE REFORMATTED.                        @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1059
*               VVITPTR2=SATBLPTR;  /*                       @Z40LB64*/
         LR    VVITPTR2,SATBLPTR                                   1059
*               DO VVA#=LOWVVA TO HIGHVVA;/*                 @Z40LB64*/
         LA    VVA#,64                                             1060
@DL01060 DS    0H                                                  1061
*                 IVVITPTR(SAID#)->IVVI2(VVA#-LOWVVA+1)=VVITBYT2(VVA#+1
*                     );            /*                       @Z40LB64*/
         LR    @15,VVA#                                            1061
         ALR   @15,@15                                             1061
         LR    @14,SAID#                                           1061
         SLA   @14,2                                               1061
         L     @01,IVVITPTR-4(@14)                                 1061
         ALR   @01,@15                                             1061
         AL    @01,@CF02694                                        1061
         LR    @15,VVITPTR2                                        1061
         ALR   @15,VVA#                                            1061
         MVC   IVVI2-1(1,@01),VVITBYT2(@15)                        1061
*               END;                /*                       @Z40LB64*/
         AL    VVA#,@CF00221                                       1062
         C     VVA#,@CF02305                                       1062
         BNH   @DL01060                                            1062
*               GOTO CE0001@;       /* BRANCH TO END OF CASE         */
         B     CE0001@                                             1063
*             END VVI2CASE;         /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1065
*PSTCASE:                                                          1065
*             DO;                   /* SUBCASE               @Z40LB64*/
*                                                                  1065
PSTCASE  DS    0H                                                  1066
*               /*****************************************************/
*               /*                                                   */
*               /* PAGE STATUS TABLE TO BE REFORMATTED.      @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1066
*               PSTPTR=SATBLPTR;    /*                       @Z40LB64*/
         LR    PSTPTR,SATBLPTR                                     1066
*               DO PST#=1 TO(SECTRLEN/LENGTH(PST)) WHILE(PSTFLAG=OFF);
         LA    PST#,1                                              1067
@DL01067 TM    PSTFLAG,B'10000000'                                 1067
         BNZ   @DC01067                                            1067
*                                   /*                       @Z40LB64*/
*                 IPSTPTR(SAID#)->IPSTVVA(SDG#,LUA#,RPAGE#)=PSTVVA;/*
*                                                            @Z40LB64*/
         LH    @15,RPAGE#                                          1068
         LA    @14,52                                              1068
         LH    @01,SDG#                                            1068
         ST    @01,@TF00001                                        1068
         SLA   @01,3                                               1068
         ALR   @01,LUA#                                            1068
         MR    @00,@14                                             1068
         ALR   @01,@15                                             1068
         ALR   @01,@01                                             1068
         LR    @00,SAID#                                           1068
         SLA   @00,2                                               1068
         LR    @15,@00                                             1068
         L     @15,IPSTPTR-4(@15)                                  1068
         SLR   @00,@00                                             1068
         IC    @00,PSTVVA(,PSTPTR)                                 1068
         LA    @14,0(@01,@15)                                      1068
         AL    @14,@CF02695                                        1068
         STC   @00,IPSTVVA(,@14)                                   1068
*                 IPSTPTR(SAID#)->IPSTVP(SDG#,LUA#,RPAGE#)=PSTVPNUM;
         SLR   @14,@14                                             1069
         IC    @14,PSTVPNUM(,PSTPTR)                               1069
         AL    @15,@CF02696                                        1069
         STC   @14,IPSTVP-1(@01,@15)                               1069
*                                   /*                       @Z40LB64*/
*                 PSTPTR=PSTPTR+LENGTH(PST);/*               @Z40LB64*/
         AL    PSTPTR,@CF00044                                     1070
*                 IF RPAGE#=PAGESDEV THEN                          1071
         LH    @15,RPAGE#                                          1071
         LA    @14,52                                              1071
         CR    @15,@14                                             1071
         BNE   @RF01071                                            1071
*                   IF LUA#=DEVSSDG THEN                           1072
         C     LUA#,@CF00181                                       1072
         BNE   @RF01072                                            1072
*                     IF SDG#=SDGSSA THEN                          1073
         CLC   @TF00001(4),@CF00155                                1073
         BNE   @RF01073                                            1073
*                       PSTFLAG=ON; /*                       @Z40LB64*/
         OI    PSTFLAG,B'10000000'                                 1074
*                     ELSE                                         1075
*                       DO;         /*                       @Z40LB64*/
         B     @RC01073                                            1075
@RF01073 DS    0H                                                  1076
*                         SDG#=SDG#+1;/*                     @Z40LB64*/
         LA    @15,1                                               1076
         LH    @14,SDG#                                            1076
         ALR   @14,@15                                             1076
         STH   @14,SDG#                                            1076
*                         LUA#=1;   /*                       @Z40LB64*/
         LR    LUA#,@15                                            1077
*                         RPAGE#=1; /*                       @Z40LB64*/
         STH   @15,RPAGE#                                          1078
*                       END;        /*                       @Z40LB64*/
*                   ELSE                                           1080
*                     DO;           /*                       @Z40LB64*/
         B     @RC01072                                            1080
@RF01072 DS    0H                                                  1081
*                       LUA#=LUA#+1;/*                       @Z40LB64*/
         LA    @15,1                                               1081
         ALR   LUA#,@15                                            1081
*                       RPAGE#=1;   /*                       @Z40LB64*/
         STH   @15,RPAGE#                                          1082
*                     END;          /*                       @Z40LB64*/
*                 ELSE                                             1084
*                   RPAGE#=RPAGE#+1;/*                       @Z40LB64*/
         B     @RC01071                                            1084
@RF01071 LA    @15,1                                               1084
         AH    @15,RPAGE#                                          1084
         STH   @15,RPAGE#                                          1084
*               END;                /*                       @Z40LB64*/
@RC01071 AL    PST#,@CF00221                                       1085
         C     PST#,@CF01072                                       1085
         BNH   @DL01067                                            1085
@DC01067 DS    0H                                                  1086
*               GOTO CE0001@;       /* BRANCH TO END OF CASE         */
         B     CE0001@                                             1086
*             END PSTCASE;          /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1088
*LTRCASE:                                                          1088
*             DO;                   /* SUBCASE               @Z40LB64*/
*                                                                  1088
LTRCASE  DS    0H                                                  1089
*               /*****************************************************/
*               /*                                                   */
*               /* LOGICAL TO REAL TABLE TO BE REFORMATTED.  @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1089
*               LTRPTR=SATBLPTR+LTROFFST;/*                  @Z40LB64*/
         LR    LTRPTR,SATBLPTR                                     1089
         AH    LTRPTR,LTROFFST                                     1089
*               DO LUA#=1 TO DEVSSA;/*                       @Z40LB64*/
         LA    LUA#,1                                              1090
@DL01090 DS    0H                                                  1091
*                 ILTRPTR(SAID#)->ILTRRUA(LUA#)=LTRRUA(LUA#);/*    1091
*                                                            @Z40LB64*/
         LR    @03,SAID#                                           1091
         SLA   @03,2                                               1091
         L     @03,ILTRPTR-4(@03)                                  1091
         LR    @01,LTRPTR                                          1091
         AL    @01,@CF02349                                        1091
         SLR   @00,@00                                             1091
         IC    @00,LTRRUA(LUA#,@01)                                1091
         AL    @03,@CF02349                                        1091
         STC   @00,ILTRRUA(LUA#,@03)                               1091
*               END;                /*                       @Z40LB64*/
         AL    LUA#,@CF00221                                       1092
         C     LUA#,@CF00476                                       1092
         BNH   @DL01090                                            1092
*               GOTO CE0001@;       /* BRANCH TO END OF CASE         */
         B     CE0001@                                             1093
*             END LTRCASE;          /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1095
*CE0001@:                                                          1095
*           END;                    /* END OF CASE                   */
CE0001@  DS    0H                                                  1096
*/*@Z40LB64                                                          */
*                                                                  1096
*         END;                      /*                       @ZA27324*/
*     END SECTCOPY;                 /*                       @Z40LB64*/
@RC00993 LA    @15,1                                               1097
         AH    @15,SECT#                                           1097
         STH   @15,SECT#                                           1097
         C     @15,@CF01515                                        1097
         BNH   @DL00977                                            1097
*   END SACOPY;                     /*                       @Z40LB64*/
         AL    SA#,@CF00221                                        1098
@DE00969 CH    SA#,SAVLDCNT                                        1098
         BNH   @DL00969                                            1098
*   END COPYSA;                     /*                       @Z40LB64*/
         B     @EL00006                                            1099
*                                                                  1100
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - CHKMSVI                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - COMPARES INFORMATION CONTAINED IN THE MSVI  @Z40LB64*/
*/*              RECORDS WITH CORRESPONDING INFORMATION IN   @Z40LB64*/
*/*              THE MSC TABLES.                             @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              ACTIVE MSVI BASE VOLUME RECORDS ARE         @Z40LB64*/
*/*              COMPARED AGAINST THE MSC VOLUME INVENTORY.  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              INACTIVE MSVI BASE VOLUME RECORDS, MSVI     @Z40LB64*/
*/*              COPY VOLUME RECORDS, AND MSVI DUPLICATE     @Z40LB64*/
*/*              VOLUME RECORDS ARE COMPARED AGAINST THE     @Z40LB64*/
*/*              MSC TRANSIENT VOLUME LIST.                  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              ACTIVE MSVI BASE VOLUME RECORDS ARE ALSO    @Z40LB64*/
*/*              COMPARED AGAINST THE MSC MOUNTED VOLUME     @Z40LB64*/
*/*              TABLE FOR MOUNTED VOLUMES.                  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              CHECKING OF SPECIFIC FIELDS IN THE ABOVE    @Z40LB64*/
*/*              CASES IS PERFORMED BY THE 'VOLREC' AND      @Z40LB64*/
*/*              'CPUREC' PROCEDURES.                        @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - THE MASS STORAGE VOLUME INVENTORY (MSVI)       @Z40LB64*/
*/*           DATA SET.                                      @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - INCONSISTENCIES IN CORRESPONDING FIELDS       @Z40LB64*/
*/*            BETWEEN THE MSVI AND MSC TABLES ARE PRINTED.  @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  1100
*CHKMSVI:                                                          1100
*   PROCEDURE;                      /*                       @Z40LB64*/
CHKMSVI  STM   @14,@12,@SA00007                                    1100
*   OLDERID2=NEWERID2;                                             1101
         L     @15,@PC00001                                        1101
         L     @15,GDTTR2(,@15)                                    1101
         MVC   @TS00001(95),NEWERID2(@15)                          1101
         MVC   OLDERID2(95,@15),@TS00001                           1101
*   NEWID2='CH1G';                  /*                       @Z40LB64*/
*                                                                  1102
         MVC   NEWID2(4,@15),@CC02498                              1102
*   /*****************************************************************/
*   /*                                                               */
*   /* ZERO THE VOLUME INVENTORY CHECK-OFF TABLE, THE        @Z40LB64*/
*   /* TRANSIENT VOLUME LIST CHECK-OFF TABLE, AND THE        @Z40LB64*/
*   /* MOUNTED VOLUME TABLE CHECK-OFF TABLE.                 @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1103
*   COTLEN=DIM(VICHKFF);            /*                       @Z40LB64*/
         L     COTLEN,@CF01713                                     1103
*   COTPTR=VICOPTR;                 /*                       @Z40LB64*/
         L     COTPTR,VICOPTR                                      1104
*   DO WHILE COTLEN>0;              /*                       @Z40LB64*/
         B     @DE01105                                            1105
@DL01105 DS    0H                                                  1106
*     COTPTR->MOVEAREA(1:MIN(ZEROAMT,COTLEN))=COTPTR->MOVEAREA(1:MIN(
*         ZEROAMT,COTLEN))&&COTPTR->MOVEAREA(1:MIN(ZEROAMT,COTLEN));
         LA    @15,256                                             1106
         LR    @14,@15                                             1106
         CR    @14,COTLEN                                          1106
         BNH   *+6
         LR    @14,COTLEN                                          1106
         BCTR  @14,0                                               1106
         EX    @14,@SX02697                                        1106
*                                   /*                       @Z40LB64*/
*     COTPTR=COTPTR+ZEROAMT;        /*                       @Z40LB64*/
         ALR   COTPTR,@15                                          1107
*     COTLEN=COTLEN-ZEROAMT;        /*                       @Z40LB64*/
         SLR   COTLEN,@15                                          1108
*   END;                            /*                       @Z40LB64*/
@DE01105 LTR   COTLEN,COTLEN                                       1109
         BP    @DL01105                                            1109
*   COTLEN=DIM(TVLCHKFF);           /*                       @Z40LB64*/
         LA    COTLEN,1280                                         1110
*   COTPTR=TVLCOPTR;                /*                       @Z40LB64*/
         L     COTPTR,TVLCOPTR                                     1111
*   DO WHILE COTLEN>0;              /*                       @Z40LB64*/
         B     @DE01112                                            1112
@DL01112 DS    0H                                                  1113
*     COTPTR->MOVEAREA(1:MIN(ZEROAMT,COTLEN))=COTPTR->MOVEAREA(1:MIN(
*         ZEROAMT,COTLEN))&&COTPTR->MOVEAREA(1:MIN(ZEROAMT,COTLEN));
         LA    @15,256                                             1113
         LR    @14,@15                                             1113
         CR    @14,COTLEN                                          1113
         BNH   *+6
         LR    @14,COTLEN                                          1113
         BCTR  @14,0                                               1113
         EX    @14,@SX02697                                        1113
*                                   /*                       @Z40LB64*/
*     COTPTR=COTPTR+ZEROAMT;        /*                       @Z40LB64*/
         ALR   COTPTR,@15                                          1114
*     COTLEN=COTLEN-ZEROAMT;        /*                       @Z40LB64*/
         SLR   COTLEN,@15                                          1115
*   END;                            /*                       @Z40LB64*/
@DE01112 LTR   COTLEN,COTLEN                                       1116
         BP    @DL01112                                            1116
*   COTLEN=DIM(MVTCHKFF);           /*                       @Z40LB64*/
         LA    COTLEN,1024                                         1117
*   COTPTR=MVTCOPTR;                /*                       @Z40LB64*/
         L     COTPTR,MVTCOPTR                                     1118
*   DO WHILE COTLEN>0;              /*                       @Z40LB64*/
         B     @DE01119                                            1119
@DL01119 DS    0H                                                  1120
*     COTPTR->MOVEAREA(1:MIN(ZEROAMT,COTLEN))=COTPTR->MOVEAREA(1:MIN(
*         ZEROAMT,COTLEN))&&COTPTR->MOVEAREA(1:MIN(ZEROAMT,COTLEN));
         LA    @15,256                                             1120
         LR    @14,@15                                             1120
         CR    @14,COTLEN                                          1120
         BNH   *+6
         LR    @14,COTLEN                                          1120
         BCTR  @14,0                                               1120
         EX    @14,@SX02697                                        1120
*                                   /*                       @Z40LB64*/
*     COTPTR=COTPTR+ZEROAMT;        /*                       @Z40LB64*/
         ALR   COTPTR,@15                                          1121
*     COTLEN=COTLEN-ZEROAMT;        /*                       @Z40LB64*/
         SLR   COTLEN,@15                                          1122
*   END;                            /*                       @Z40LB64*/
*                                                                  1123
@DE01119 SLR   @15,@15                                             1123
         CR    COTLEN,@15                                          1123
         BH    @DL01119                                            1123
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE STATE OF 'GETREC' CONTROL VARIABLES    @Z40LB64*/
*   /* AND THE 'RVVI' READ REQUEST LIST.                     @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1124
*   RECTYPE=0;                      /*                       @Z40LB64*/
         MVI   RECTYPE,X'00'                                       1124
*   LASTBASE=NEWBASE;               /*                       @Z40LB64*/
         MVC   LASTBASE(6),@CC02394                                1125
*   LASTCOPY=0;                     /*                       @Z40LB64*/
         LR    LASTCOPY,@15                                        1126
*   LASTDUP=0;                      /*                       @Z40LB64*/
         LR    LASTDUP,@15                                         1127
*   RVVLNGTH=RVVLEN;                /*                       @Z40LB64*/
         L     @15,RVVIPTR                                         1128
         LH    @14,RVVLEN                                          1128
         ST    @14,RVVLNGTH(,@15)                                  1128
*   RVVOPCOD=RVVOP;                 /*                       @Z40LB64*/
*                                                                  1129
         XC    RVVOPCOD+1(3,@15),RVVOPCOD+1(@15)                   1129
         MVI   RVVOPCOD(@15),X'87'                                 1129
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE MSC MANUFACTURER'S ID CONVERSION TABLE     @Z40LB64*/
*   /* (MICT) TO ASSIST IN THE COMPARISON BETWEEN MSVI       @Z40LB64*/
*   /* BASE VOLUME RECORDS FOR MOUNTED VOLUMES AND THE       @Z40LB64*/
*   /* MSC VOLUME INVENTORY. SAVE THE MICT FOR REFERENCE     @Z40LB64*/
*   /* BY THE 'CPUREC' PROCEDURE.                            @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1130
*   TABLEID=CFGTBLID;               /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1130
         MVC   TABLEID(1,@15),CFGTBLID                             1130
*   MICTFLAG=ON;                    /*                       @Z40LB64*/
         OI    MICTFLAG(@15),B'00000100'                           1131
*   CALL IDCCH03(GDTTBL,CDALIST);   /*                       @Z40LB64*/
         L     @15,@PC00001                                        1132
         ST    @15,@AL00001                                        1132
         LA    @15,CDALIST                                         1132
         ST    @15,@AL00001+4                                      1132
         L     @15,@CV02184                                        1132
         LA    @01,@AL00001                                        1132
         BALR  @14,@15                                             1132
*   IF GETRC^=0 THEN                                               1133
         L     @01,EARGPTR                                         1133
         LH    @15,GETRC(,@01)                                     1133
         LTR   @15,@15                                             1133
         BZ    @RF01133                                            1133
*     DO;                           /*                       @Z40LB64*/
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      1135
         MVC   LASTCOND(2,@15),@CH00567                            1135
*       RETURN;                     /*                       @Z40LB64*/
@EL00007 DS    0H                                                  1136
@EF00007 DS    0H                                                  1136
@ER00007 LM    @14,@12,@SA00007                                    1136
         BR    @14                                                 1136
*     END;                          /*                       @Z40LB64*/
*   MICPTR->MOVEAREA(1:LENGTH(MICTABLE))=TBLADDR->MOVEAREA(1:LENGTH(
*       MICTABLE));                 /*                       @Z40LB64*/
@RF01133 L     @01,MICPTR                                          1138
         L     @15,EARGPTR                                         1138
         L     @14,TBLADDR(,@15)                                   1138
         MVC   MOVEAREA(128,@01),MOVEAREA(@14)                     1138
*   MICTCHR=PREVCHR;                /*                       @Z40LB64*/
*                                                                  1139
         MVC   MICTCHR(5),PREVCHR(@15)                             1139
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE MSVI CPU RECORD TO ASSIST IN THE           @Z40LB64*/
*   /* COMPARISON BETWEEN BASE VOLUME RECORDS FOR MOUNTED    @Z40LB64*/
*   /* VOLUMES AND THE MSC MOUNTED VOLUME TABLE. THE CPU     @Z40LB64*/
*   /* RECORD IS SAVED FOR REFERENCE BY 'CPUREC' PROCEDURE.  @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1140
*   MSVICPU=ON;                     /*                       @Z40LB64*/
         OI    MSVICPU,B'00010000'                                 1140
*   RVVRDR=ON;                      /*                       @Z40LB64*/
         L     @15,RVVIPTR                                         1141
         OI    RVVRDR(@15),B'10000000'                             1141
*   RVVBUFLN=LENGTH(CPUID);         /*                       @Z40LB64*/
         MVC   RVVBUFLN(2,@15),@CH02654                            1142
*   RVVRTBUF=ADDR(CPUID);           /*                       @Z40LB64*/
         L     @14,CPUIDPTR                                        1143
         ST    @14,RVVRTBUF(,@15)                                  1143
*   CALL GETREC;                    /*                       @Z40LB64*/
         BAL   @14,GETREC                                          1144
*   IF RECCODE^=0 THEN                                             1145
         CLI   RECCODE,0                                           1145
         BE    @RF01145                                            1145
*     DO;                           /*                       @Z40LB64*/
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      1147
         MVC   LASTCOND(2,@15),@CH00567                            1147
*       RETURN;                     /*                       @Z40LB64*/
         B     @EL00007                                            1148
*     END;                          /*                       @Z40LB64*/
*                                                                  1149
*   /*****************************************************************/
*   /*                                                               */
*   /* INDIVIDUALLY OBTAIN EACH MSVI BASE VOLUME RECORD      @Z40LB64*/
*   /* FOR COMPARISON WITH MSC TABLES, AND FOR EACH MSVI     @Z40LB64*/
*   /* BASE VOLUME RECORD, INDIVIDUALLY OBTAIN EACH          @Z40LB64*/
*   /* CORRESPONDING COPY VOLUME RECORD AND DUPLICATE        @Z40LB64*/
*   /* VOLUME RECORD.                                        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1150
*   RECTYPE=0;                      /*                       @Z40LB64*/
@RF01145 MVI   RECTYPE,X'00'                                       1150
*   MSVIBASE=ON;                    /*                       @Z40LB64*/
         OI    MSVIBASE,B'10000000'                                1151
*   RVVRDR=OFF;                     /*                       @Z40LB64*/
*   RVVRDNR=ON;                     /*                       @Z40LB64*/
         L     @15,RVVIPTR                                         1153
         OI    RVVRDNR(@15),B'01000000'                            1153
         NI    RVVRDR(@15),B'01111111'                             1153
*   RVVBUFLN=LENGTH(MSVIREC);       /*                       @Z40LB64*/
         MVC   RVVBUFLN(2,@15),@CH02657                            1154
*   RVVRTBUF=ADDR(MSVIREC);         /*                       @Z40LB64*/
         L     @14,MSVIAPTR                                        1155
         ST    @14,RVVRTBUF(,@15)                                  1155
*   ENDFLAG=OFF;                    /*                       @Z40LB64*/
         NI    ENDFLAG,B'01111111'                                 1156
*MSVILOOP:                                                         1157
*   DO WHILE ENDFLAG=OFF;           /*                       @Z40LB64*/
*                                                                  1157
MSVILOOP B     @DE01157                                            1157
@DL01157 DS    0H                                                  1158
*     /***************************************************************/
*     /*                                                             */
*     /* OBTAIN THE NEXT MSVI VOLUME RECORD                  @Z40LB64*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1158
*     CALL GETREC;                  /*                       @Z40LB64*/
         BAL   @14,GETREC                                          1158
*     IF RECCODE=0 THEN                                            1159
         CLI   RECCODE,0                                           1159
         BNE   @RF01159                                            1159
*       DO;                         /*                       @Z40LB64*/
*                                                                  1160
*         /***********************************************************/
*         /*                                                         */
*         /* MSVI RECORD SUCCESSFULLY OBTAINED. IF THE       @Z40LB64*/
*         /* RECORD IS A BASE VOLUME RECORD FOR A VOLUME     @Z40LB64*/
*         /* WHOSE CARTRIDGES HAVE BEEN REASSIGNED OR        @Z40LB64*/
*         /* AT LEAST ONE CARTRIDGE HAS BEEN EJECTED FROM    @Z40LB64*/
*         /* THE LIBRARY, NO CHECKING IS PERFORMED.          @Z40LB64*/
*         /* OTHERWISE THE 'VOLREC' PROCEDURE IS INVOKED     @Z40LB64*/
*         /* TO COMPARE INDIVIDUAL FIELDS AGAINST THE        @Z40LB64*/
*         /* APPROPRIATE MSC TABLE.                          @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1161
*         IF(BCDLIB1^='FF'X&BCDLIB2^='FF'X)&(BCDBASE=OFF×BASREASS=OFF)
*           THEN                                                   1161
         CLI   BCDLIB1(BCDVPTR),255                                1161
         BE    @RF01161                                            1161
         CLI   BCDLIB2(BCDVPTR),255                                1161
         BE    @RF01161                                            1161
         TM    BCDBASE(BCDVPTR),B'00100000'                        1161
         BZ    @RT01161                                            1161
         TM    BASREASS(BASEVPTR),B'00100000'                      1161
         BNZ   @RF01161                                            1161
@RT01161 DS    0H                                                  1162
*           DO;                     /*                       @Z40LB64*/
*             CALL VOLREC;          /*                       @Z40LB64*/
         BAL   @14,VOLREC                                          1163
*             IF LASTCOND^=LASTCC00 THEN                           1164
         L     @15,@PC00001+8                                      1164
         LH    @15,LASTCOND(,@15)                                  1164
         LTR   @15,@15                                             1164
         BNZ   @RT01164                                            1164
*               RETURN;             /*                       @Z40LB64*/
*                                                                  1165
*             /*******************************************************/
*             /*                                                     */
*             /* IF THE MSVI RECORD IS A BASE VOLUME         @Z40LB64*/
*             /* RECORD FOR A MOUNTED VOLUME, INVOKE         @Z40LB64*/
*             /* THE 'CPUREC' PROCEDURE TO COMPARE IT        @Z40LB64*/
*             /* AGAINST THE MSC MOUNTED VOLUME TABLE.       @Z40LB64*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1166
*             IF BCDBASE=ON&BASCPUID^=0 THEN                       1166
         TM    BCDBASE(BCDVPTR),B'00100000'                        1166
         BNO   @RF01166                                            1166
         LH    @15,BASCPUID(,BASEVPTR)                             1166
         N     @15,@CF02684                                        1166
         LTR   @15,@15                                             1166
         BZ    @RF01166                                            1166
*               DO;                 /*                       @Z40LB64*/
*                 CALL CPUREC;      /*                       @Z40LB64*/
         BAL   @14,CPUREC                                          1168
*                 IF LASTCOND^=LASTCC00 THEN                       1169
         L     @15,@PC00001+8                                      1169
         LH    @15,LASTCOND(,@15)                                  1169
         LTR   @15,@15                                             1169
         BNZ   @RT01169                                            1169
*                   RETURN;         /*                       @Z40LB64*/
*               END;                /*                       @Z40LB64*/
*           END;                    /*                       @Z40LB64*/
*                                                                  1172
@RF01166 DS    0H                                                  1173
*         /***********************************************************/
*         /*                                                         */
*         /* IF MSVI RECORD IS A BASE VOLUME                 @Z40LB64*/
*         /* RECORD, PREPARE TO OBTAIN EACH                  @Z40LB64*/
*         /* CORRESPONDING COPY VOLUME RECORD                @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1173
*         IF MSVIBASE=ON THEN                                      1173
@RF01161 TM    MSVIBASE,B'10000000'                                1173
         BNO   @RF01173                                            1173
*           DO;                     /*                       @Z40LB64*/
*             MSVIBASE=OFF;         /*                       @Z40LB64*/
*             MSVICOPY=ON;          /*                       @Z40LB64*/
         OI    MSVICOPY,B'01000000'                                1176
         NI    MSVIBASE,B'01111111'                                1176
*           END;                    /*                       @Z40LB64*/
*       END;                        /*                       @Z40LB64*/
@RF01173 DS    0H                                                  1179
*     IF RECCODE=RECNFND THEN                                      1179
@RF01159 CLI   RECCODE,4                                           1179
         BNE   @RF01179                                            1179
*       DO;                         /*                       @Z40LB64*/
*                                                                  1180
*         /***********************************************************/
*         /*                                                         */
*         /* REQUESTED MSVI RECORD TYPE WAS NOT FOUND.       @Z40LB64*/
*         /* IF REQUESTED TYPE WAS A BASE VOLUME RECORD      @Z40LB64*/
*         /* THEN ALL MSVI RECORDS HAVE BEEN CHECKED AND     @Z40LB64*/
*         /* 'CHKMSVI' PROCESSING IS COMPLETE.               @Z40LB64*/
*         /* IF REQUESTED TYPE WAS A COPY VOLUME RECORD      @Z40LB64*/
*         /* THEN ALL CORRESPONDING DUPLICATE VOLUME         @Z40LB64*/
*         /* RECORDS MUST NOW BE CHECKED.                    @Z40LB64*/
*         /* IF REQUESTED TYPE WAS A DUPLICATE VOLUME        @Z40LB64*/
*         /* RECORD THEN THE NEXT BASE VOLUME RECORD         @Z40LB64*/
*         /* MUST BE CHECKED.                                @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1181
*         IF MSVIBASE=ON THEN                                      1181
         TM    MSVIBASE,B'10000000'                                1181
         BNO   @RF01181                                            1181
*           ENDFLAG=ON;             /*                       @Z40LB64*/
         OI    ENDFLAG,B'10000000'                                 1182
*         IF MSVIDUP=ON THEN                                       1183
@RF01181 TM    MSVIDUP,B'00100000'                                 1183
         BNO   @RF01183                                            1183
*           DO;                     /*                       @Z40LB64*/
*             MSVIDUP=OFF;          /*                       @Z40LB64*/
*             MSVIBASE=ON;          /*                       @Z40LB64*/
         OI    MSVIBASE,B'10000000'                                1186
         NI    MSVIDUP,B'11011111'                                 1186
*           END;                    /*                       @Z40LB64*/
*         IF MSVICOPY=ON THEN                                      1188
@RF01183 TM    MSVICOPY,B'01000000'                                1188
         BNO   @RF01188                                            1188
*           DO;                     /*                       @Z40LB64*/
*             MSVICOPY=OFF;         /*                       @Z40LB64*/
*             MSVIDUP=ON;           /*                       @Z40LB64*/
         OI    MSVIDUP,B'00100000'                                 1191
         NI    MSVICOPY,B'10111111'                                1191
*           END;                    /*                       @Z40LB64*/
*       END;                        /*                       @Z40LB64*/
@RF01188 DS    0H                                                  1194
*     IF RECCODE=RECERROR THEN                                     1194
@RF01179 CLI   RECCODE,8                                           1194
         BNE   @RF01194                                            1194
*       DO;                         /*                       @Z40LB64*/
*                                                                  1195
*         /***********************************************************/
*         /*                                                         */
*         /* REQUESTED MSVI RECORD WAS NOT OBTAINED DUE      @Z40LB64*/
*         /* TO AN UNEXPECTED ERROR CONDITION. CHECKMSS      @Z40LB64*/
*         /* PROCESSING IS TERMINATED.                       @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1196
*         LASTCOND=LASTCC12;        /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      1196
         MVC   LASTCOND(2,@15),@CH00567                            1196
*         RETURN;                   /*                       @Z40LB64*/
         B     @EL00007                                            1197
*       END;                        /*                       @Z40LB64*/
*   END MSVILOOP;                   /*                       @Z40LB64*/
*                                                                  1199
@RF01194 DS    0H                                                  1199
@DE01157 TM    ENDFLAG,B'10000000'                                 1199
         BZ    @DL01157                                            1199
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SEQUENTIAL SCANNING OF THE MSC VOLUME           @Z40LB64*/
*   /* INVENTORY, TRANSIENT VOLUME LIST, AND MOUNTED         @Z40LB64*/
*   /* VOLUME TABLE WILL LATER BE PERFORMED (IDCCH02         @Z40LB64*/
*   /* ROUTINE), VERIFY THAT THE MSVI RECORDS HAVE           @Z40LB64*/
*   /* ACCOUNTED FOR ALL VOLUMES IN THE MSC VOLUME           @Z40LB64*/
*   /* INVENTORY, TRANSIENT VOLUME LIST, AND MOUNTED         @Z40LB64*/
*   /* VOLUME TABLE.                                         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1200
*   IF MSCCHK=OFF THEN                                             1200
         TM    MSCCHK,B'10000000'                                  1200
         BNZ   @RF01200                                            1200
*MSVISCAN:                                                         1201
*     DO;                           /*                       @Z40LB64*/
*                                                                  1201
MSVISCAN DS    0H                                                  1202
*       /*************************************************************/
*       /*                                                           */
*       /* VERIFY THAT THE MSVI RECORDS HAVE ACCOUNTED       @Z40LB64*/
*       /* FOR ALL VOLUMES IN THE MSC VOLUME INVENTORY.      @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1202
*       TBLADDR=0;                  /*                       @Z40LB64*/
         L     @01,EARGPTR                                         1202
         SLR   @00,@00                                             1202
         ST    @00,TBLADDR(,@01)                                   1202
*       ENDFLAG=OFF;                /*                       @Z40LB64*/
         NI    ENDFLAG,B'01111111'                                 1203
*VILOOP:                                                           1204
*       DO WHILE ENDFLAG=OFF;       /*                       @Z40LB64*/
VILOOP   B     @DE01204                                            1204
@DL01204 DS    0H                                                  1205
*         GETNEXT=ON;               /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1205
         OI    GETNEXT(@15),B'10000000'                            1205
*         TABLEID=VITBLID;          /*                       @Z40LB64*/
         MVC   TABLEID(1,@15),VITBLID                              1206
*         CALL IDCCH03(GDTTBL,CDALIST);/*                    @Z40LB64*/
*                                                                  1207
         L     @15,@PC00001                                        1207
         ST    @15,@AL00001                                        1207
         LA    @15,CDALIST                                         1207
         ST    @15,@AL00001+4                                      1207
         L     @15,@CV02184                                        1207
         LA    @01,@AL00001                                        1207
         BALR  @14,@15                                             1207
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE VOLUME INVENTORY ENTRY WAS               @Z40LB64*/
*         /* SUCCESSFULLY OBTAINED, VERIFY THAT THE          @Z40LB64*/
*         /* CORRESPONDING BIT IN THE VOLUME INVENTORY       @Z40LB64*/
*         /* CHECK-OFF TABLE HAS BEEN CHECKED-OFF.           @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1208
*         IF GETRC=0 THEN                                          1208
         SLR   @15,@15                                             1208
         L     @14,EARGPTR                                         1208
         CH    @15,GETRC(,@14)                                     1208
         BNE   @RF01208                                            1208
*           DO;                     /*                       @Z40LB64*/
*             VIENTPTR=TBLADDR;     /*                       @Z40LB64*/
         L     VIENTPTR,TBLADDR(,@14)                              1210
*             IF(VICHKFF(BYTE#)&BITMASK(BIT#))=0 THEN              1211
         LH    @03,BYTE#(,@14)                                     1211
         LH    @01,BIT#(,@14)                                      1211
         L     @07,VICOPTR                                         1211
         AL    @07,@CF02349                                        1211
         SLR   @06,@06                                             1211
         IC    @06,VICHKFF(@03,@07)                                1211
         SLR   @03,@03                                             1211
         IC    @03,BITMASK-1(@01)                                  1211
         NR    @06,@03                                             1211
         CR    @06,@15                                             1211
         BNE   @RF01211                                            1211
*               DO;                 /*                       @Z40LB64*/
*                                                                  1212
*                 /***************************************************/
*                 /*                                                 */
*                 /* MSC VOLUME INVENTORY ENTRY WAS          @Z40LB64*/
*                 /* NOT CHECKED-OFF. PRINT AN               @Z40LB64*/
*                 /* ERROR MESSAGE.                          @Z40LB64*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1213
*                 MTCHMSG=ON;       /*                       @Z40LB64*/
         L     @03,MARGPTR                                         1213
         OI    MTCHMSG(@03),B'00010000'                            1213
*                 MSVITBL(1)=ON;    /*                       @Z40LB64*/
         OI    MSVITBL(@03),B'00001000'                            1214
*                 VITBL(2)=ON;      /*                       @Z40LB64*/
         OI    VITBL+4(@03),B'01000000'                            1215
*                 VSNFLD=ON;        /*                       @Z40LB64*/
         OI    VSNFLD(@03),B'00000001'                             1216
*                 FLDCHAR(1)=VIVOLID;/*                      @Z40LB64*/
         MVI   FLDCHAR+6(@03),C' '                                 1217
         MVC   FLDCHAR+7(5,@03),FLDCHAR+6(@03)                     1217
         MVC   FLDCHAR(6,@03),VIVOLID(VIENTPTR)                    1217
*                 VSNINDEX(2)=VIVOLID;/*                     @Z40LB64*/
         MVC   VSNINDEX+24(6,@03),VIVOLID(VIENTPTR)                1218
*                 CHRINDEX(2)=PREVCHR;/*                     @Z40LB64*/
         MVC   CHRINDEX+24(5,@03),PREVCHR(@14)                     1219
*                 CALL IDCCH04(GDTTBL,CDALIST);/*            @Z40LB64*/
         L     @15,@PC00001                                        1220
         ST    @15,@AL00001                                        1220
         LA    @15,CDALIST                                         1220
         ST    @15,@AL00001+4                                      1220
         L     @15,@CV02185                                        1220
         LA    @01,@AL00001                                        1220
         BALR  @14,@15                                             1220
*               END;                /*                       @Z40LB64*/
*           END;                    /*                       @Z40LB64*/
*                                                                  1222
@RF01211 DS    0H                                                  1223
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE END OF THE VOLUME INVENTORY TABLE        @Z40LB64*/
*         /* WAS REACHED, SET FLAG ENDING VOLUME             @Z40LB64*/
*         /* INVENTORY SCAN.                                 @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1223
*         IF GETRC=ENDOFTBL THEN                                   1223
@RF01208 L     @01,EARGPTR                                         1223
         CLC   GETRC(2,@01),@CH00044                               1223
         BNE   @RF01223                                            1223
*           ENDFLAG=ON;             /*                       @Z40LB64*/
*                                                                  1224
         OI    ENDFLAG,B'10000000'                                 1224
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE VOLUME INVENTORY ENTRY WAS NOT           @Z40LB64*/
*         /* SUCCESSFULLY OBTAINED, TERMINATE CHECKMSS       @Z40LB64*/
*         /* PROCESSING.                                     @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1225
*         IF GETRC=TABLERR THEN                                    1225
@RF01223 LA    @15,12                                              1225
         L     @01,EARGPTR                                         1225
         CH    @15,GETRC(,@01)                                     1225
         BNE   @RF01225                                            1225
*           DO;                     /*                       @Z40LB64*/
*             LASTCOND=LASTCC12;    /*                       @Z40LB64*/
         L     @14,@PC00001+8                                      1227
         STH   @15,LASTCOND(,@14)                                  1227
*             RETURN;               /*                       @Z40LB64*/
         B     @EL00007                                            1228
*           END;                    /*                       @Z40LB64*/
*       END VILOOP;                 /*                       @Z40LB64*/
*                                                                  1230
@RF01225 DS    0H                                                  1230
@DE01204 TM    ENDFLAG,B'10000000'                                 1230
         BZ    @DL01204                                            1230
*       /*************************************************************/
*       /*                                                           */
*       /* VERIFY THAT THE MSVI RECORDS HAVE ACCOUNTED       @Z40LB64*/
*       /* FOR ALL VOLUMES IN THE MSC TRANSIENT VOLUME       @Z40LB64*/
*       /* LIST.                                             @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1231
*       TBLADDR=0;                  /*                       @Z40LB64*/
         L     @01,EARGPTR                                         1231
         SLR   @00,@00                                             1231
         ST    @00,TBLADDR(,@01)                                   1231
*       ENDFLAG=OFF;                /*                       @Z40LB64*/
         NI    ENDFLAG,B'01111111'                                 1232
*TVLLOOP:                                                          1233
*       DO WHILE ENDFLAG=OFF;       /*                       @Z40LB64*/
TVLLOOP  B     @DE01233                                            1233
@DL01233 DS    0H                                                  1234
*         GETNEXT=ON;               /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1234
         OI    GETNEXT(@15),B'10000000'                            1234
*         TABLEID=TVLTBLID;         /*                       @Z40LB64*/
         MVC   TABLEID(1,@15),TVLTBLID                             1235
*         CALL IDCCH03(GDTTBL,CDALIST);/*                    @Z40LB64*/
*                                                                  1236
         L     @15,@PC00001                                        1236
         ST    @15,@AL00001                                        1236
         LA    @15,CDALIST                                         1236
         ST    @15,@AL00001+4                                      1236
         L     @15,@CV02184                                        1236
         LA    @01,@AL00001                                        1236
         BALR  @14,@15                                             1236
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE TRANSIENT VOLUME LIST ENTRY WAS          @Z40LB64*/
*         /* SUCCESSFULLY OBTAINED, VERIFY THAT THE          @Z40LB64*/
*         /* CORRESPONDING BIT IN THE TRANSIENT VOLUME       @Z40LB64*/
*         /* LIST CHECK-OFF TABLE HAS BEEN CHECKED-OFF.      @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1237
*         IF GETRC=0 THEN                                          1237
         SLR   @15,@15                                             1237
         L     @14,EARGPTR                                         1237
         CH    @15,GETRC(,@14)                                     1237
         BNE   @RF01237                                            1237
*           DO;                     /*                       @Z40LB64*/
*             TVENTPTR=TBLADDR;     /*                       @Z40LB64*/
         L     TVENTPTR,TBLADDR(,@14)                              1239
*             IF(TVLCHKFF(BYTE#)&BITMASK(BIT#))=0 THEN             1240
         LH    @03,BYTE#(,@14)                                     1240
         LH    @01,BIT#(,@14)                                      1240
         L     @07,TVLCOPTR                                        1240
         AL    @07,@CF02349                                        1240
         SLR   @06,@06                                             1240
         IC    @06,TVLCHKFF(@03,@07)                               1240
         SLR   @03,@03                                             1240
         IC    @03,BITMASK-1(@01)                                  1240
         NR    @06,@03                                             1240
         CR    @06,@15                                             1240
         BNE   @RF01240                                            1240
*               DO;                 /*                       @Z40LB64*/
*                                                                  1241
*                 /***************************************************/
*                 /*                                                 */
*                 /* MSC TRANSIENT VOLUME LIST ENTRY         @Z40LB64*/
*                 /* WAS NOT CHECKED-OFF. PRINT AN           @Z40LB64*/
*                 /* ERROR MESSAGE.                          @Z40LB64*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1242
*                 MTCHMSG=ON;       /*                       @Z40LB64*/
         L     @03,MARGPTR                                         1242
         OI    MTCHMSG(@03),B'00010000'                            1242
*                 MSVITBL(1)=ON;    /*                       @Z40LB64*/
         OI    MSVITBL(@03),B'00001000'                            1243
*                 TVLTBL(2)=ON;     /*                       @Z40LB64*/
         OI    TVLTBL+4(@03),B'00100000'                           1244
*                 CSNFLD=ON;        /*                       @Z40LB64*/
         OI    CSNFLD(@03),B'10000000'                             1245
*                 FLDCHAR(1)=TVCSN; /*                       @Z40LB64*/
         MVC   FLDCHAR(12,@03),TVCSN(TVENTPTR)                     1246
*                 CSNINDEX(2)=TVCSN;/*                       @Z40LB64*/
         MVC   CSNINDEX+24(12,@03),TVCSN(TVENTPTR)                 1247
*                 VSNINDEX(2)=TVVOLID;/*                     @Z40LB64*/
         MVC   VSNINDEX+24(6,@03),TVVOLID(TVENTPTR)                1248
*                 CHRINDEX(2)=PREVCHR;/*                     @Z40LB64*/
         MVC   CHRINDEX+24(5,@03),PREVCHR(@14)                     1249
*                 CALL IDCCH04(GDTTBL,CDALIST);/*            @Z40LB64*/
         L     @15,@PC00001                                        1250
         ST    @15,@AL00001                                        1250
         LA    @15,CDALIST                                         1250
         ST    @15,@AL00001+4                                      1250
         L     @15,@CV02185                                        1250
         LA    @01,@AL00001                                        1250
         BALR  @14,@15                                             1250
*               END;                /*                       @Z40LB64*/
*           END;                    /*                       @Z40LB64*/
*                                                                  1252
@RF01240 DS    0H                                                  1253
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE END OF THE TRANSIENT VOLUME LIST         @Z40LB64*/
*         /* WAS REACHED, SET FLAG ENDING TVL SCAN.          @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1253
*         IF GETRC=ENDOFTBL THEN                                   1253
@RF01237 L     @01,EARGPTR                                         1253
         CLC   GETRC(2,@01),@CH00044                               1253
         BNE   @RF01253                                            1253
*           ENDFLAG=ON;             /*                       @Z40LB64*/
*                                                                  1254
         OI    ENDFLAG,B'10000000'                                 1254
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE TRANSIENT VOLUME LIST ENTRY WAS NOT      @Z40LB64*/
*         /* OBTAINED, TERMINATE CHECKMSS PROCESSING.        @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1255
*         IF GETRC=TABLERR THEN                                    1255
@RF01253 LA    @15,12                                              1255
         L     @01,EARGPTR                                         1255
         CH    @15,GETRC(,@01)                                     1255
         BNE   @RF01255                                            1255
*           DO;                     /*                       @Z40LB64*/
*             LASTCOND=LASTCC12;    /*                       @Z40LB64*/
         L     @14,@PC00001+8                                      1257
         STH   @15,LASTCOND(,@14)                                  1257
*             RETURN;               /*                       @Z40LB64*/
         B     @EL00007                                            1258
*           END;                    /*                       @Z40LB64*/
*       END TVLLOOP;                /*                       @Z40LB64*/
*                                                                  1260
@RF01255 DS    0H                                                  1260
@DE01233 TM    ENDFLAG,B'10000000'                                 1260
         BZ    @DL01233                                            1260
*       /*************************************************************/
*       /*                                                           */
*       /* VERIFY THAT THE MSVI RECORDS HAVE ACCOUNTED       @Z40LB64*/
*       /* FOR ALL VOLUMES IN THE MSC MOUNTED VOLUME         @Z40LB64*/
*       /* TABLE.                                            @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1261
*       TBLADDR=0;                  /*                       @Z40LB64*/
         L     @01,EARGPTR                                         1261
         SLR   @00,@00                                             1261
         ST    @00,TBLADDR(,@01)                                   1261
*       ENDFLAG=OFF;                /*                       @Z40LB64*/
         NI    ENDFLAG,B'01111111'                                 1262
*MVTLOOP:                                                          1263
*       DO WHILE ENDFLAG=OFF;       /*                       @Z40LB64*/
MVTLOOP  B     @DE01263                                            1263
@DL01263 DS    0H                                                  1264
*         GETNEXT=ON;               /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1264
         OI    GETNEXT(@15),B'10000000'                            1264
*         TABLEID=MVTBLID;          /*                       @Z40LB64*/
         MVC   TABLEID(1,@15),MVTBLID                              1265
*         CALL IDCCH03(GDTTBL,CDALIST);/*                    @Z40LB64*/
*                                                                  1266
         L     @15,@PC00001                                        1266
         ST    @15,@AL00001                                        1266
         LA    @15,CDALIST                                         1266
         ST    @15,@AL00001+4                                      1266
         L     @15,@CV02184                                        1266
         LA    @01,@AL00001                                        1266
         BALR  @14,@15                                             1266
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE MOUNTED VOLUME TABLE ENTRY WAS           @Z40LB64*/
*         /* SUCCESSFULLY OBTAINED, AND SPECIFIES THAT       @Z40LB64*/
*         /* THE VOLUME IS MOUNTED, VERIFY THAT THE          @Z40LB64*/
*         /* CORRESPONDING BIT IN THE MOUNTED VOLUME         @Z40LB64*/
*         /* TABLE CHECK-OFF TABLE HAS BEEN CHECKED-OFF.     @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1267
*         IF GETRC=0 THEN                                          1267
         SLR   @15,@15                                             1267
         L     @14,EARGPTR                                         1267
         CH    @15,GETRC(,@14)                                     1267
         BNE   @RF01267                                            1267
*           DO;                     /*                       @Z40LB64*/
*             MVENTPTR=TBLADDR;     /*                       @Z40LB64*/
         L     MVENTPTR,TBLADDR(,@14)                              1269
*             IF(MVMNTVOL=ON)&((MVTCHKFF(BYTE#)&BITMASK(BIT#))=0) THEN
         TM    MVMNTVOL(MVENTPTR),B'10000000'                      1270
         BNO   @RF01270                                            1270
         LH    @03,BYTE#(,@14)                                     1270
         LH    @01,BIT#(,@14)                                      1270
         L     @07,MVTCOPTR                                        1270
         AL    @07,@CF02349                                        1270
         SLR   @06,@06                                             1270
         IC    @06,MVTCHKFF(@03,@07)                               1270
         SLR   @03,@03                                             1270
         IC    @03,BITMASK-1(@01)                                  1270
         NR    @06,@03                                             1270
         CR    @06,@15                                             1270
         BNE   @RF01270                                            1270
*               DO;                 /*                       @Z40LB64*/
*                                                                  1271
*                 /***************************************************/
*                 /*                                                 */
*                 /* MSC MOUNTED VOLUME TABLE ENTRY          @Z40LB64*/
*                 /* WAS NOT CHECKED-OFF. PRINT AN           @Z40LB64*/
*                 /* ERROR MESSAGE.                          @Z40LB64*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1272
*                 MTCHMSG=ON;       /*                       @Z40LB64*/
         L     @03,MARGPTR                                         1272
         OI    MTCHMSG(@03),B'00010000'                            1272
*                 MSVITBL(1)=ON;    /*                       @Z40LB64*/
         OI    MSVITBL(@03),B'00001000'                            1273
*                 MVTTBL(2)=ON;     /*                       @Z40LB64*/
         OI    MVTTBL+4(@03),B'10000000'                           1274
*                 VSNFLD=ON;        /*                       @Z40LB64*/
         OI    VSNFLD(@03),B'00000001'                             1275
*                 FLDCHAR(1)=MVVOLID;/*                      @Z40LB64*/
         MVI   FLDCHAR+6(@03),C' '                                 1276
         MVC   FLDCHAR+7(5,@03),FLDCHAR+6(@03)                     1276
         MVC   FLDCHAR(6,@03),MVVOLID(MVENTPTR)                    1276
*                 VSNINDEX(2)=MVVOLID;/*                     @Z40LB64*/
         MVC   VSNINDEX+24(6,@03),MVVOLID(MVENTPTR)                1277
*                 CHRINDEX(2)=PREVCHR;/*                     @Z40LB64*/
         MVC   CHRINDEX+24(5,@03),PREVCHR(@14)                     1278
*                 CALL IDCCH04(GDTTBL,CDALIST);/*            @Z40LB64*/
         L     @15,@PC00001                                        1279
         ST    @15,@AL00001                                        1279
         LA    @15,CDALIST                                         1279
         ST    @15,@AL00001+4                                      1279
         L     @15,@CV02185                                        1279
         LA    @01,@AL00001                                        1279
         BALR  @14,@15                                             1279
*               END;                /*                       @Z40LB64*/
*           END;                    /*                       @Z40LB64*/
*                                                                  1281
@RF01270 DS    0H                                                  1282
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE END OF THE MOUNTED VOLUME TABLE          @Z40LB64*/
*         /* WAS REACHED, SET FLAG ENDING MVT SCAN.          @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1282
*         IF GETRC=ENDOFTBL THEN                                   1282
@RF01267 L     @01,EARGPTR                                         1282
         CLC   GETRC(2,@01),@CH00044                               1282
         BNE   @RF01282                                            1282
*           ENDFLAG=ON;             /*                       @Z40LB64*/
*                                                                  1283
         OI    ENDFLAG,B'10000000'                                 1283
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE MOUNTED VOLUME TABLE ENTRY WAS NOT       @Z40LB64*/
*         /* OBTAINED, TERMINATE CHECKMSS PROCESSING.        @Z40LB64*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1284
*         IF GETRC=TABLERR THEN                                    1284
@RF01282 LA    @15,12                                              1284
         L     @01,EARGPTR                                         1284
         CH    @15,GETRC(,@01)                                     1284
         BNE   @RF01284                                            1284
*           DO;                     /*                       @Z40LB64*/
*             LASTCOND=LASTCC12;    /*                       @Z40LB64*/
         L     @14,@PC00001+8                                      1286
         STH   @15,LASTCOND(,@14)                                  1286
*             RETURN;               /*                       @Z40LB64*/
         B     @EL00007                                            1287
*           END;                    /*                       @Z40LB64*/
*       END MVTLOOP;                /*                       @Z40LB64*/
@RF01284 DS    0H                                                  1289
@DE01263 TM    ENDFLAG,B'10000000'                                 1289
         BZ    @DL01263                                            1289
*     END MSVISCAN;                 /*                       @Z40LB64*/
*   IF GDTDBG=NULLPTR THEN                                         1291
@RF01200 L     @15,@PC00001                                        1291
         L     @15,GDTDBG(,@15)                                    1291
         LTR   @15,@15                                             1291
         BZ    @RT01291                                            1291
*     ;                                                            1292
*   ELSE                                                           1293
*     CALL IDCDB010(GDTTBL,'CH1Y'); /*                       @Z40LB64*/
         L     @15,@PC00001                                        1293
         ST    @15,@AL00001                                        1293
         LA    @14,@CC02513                                        1293
         ST    @14,@AL00001+4                                      1293
         MVI   @AL00001+4,X'80'                                    1293
         L     @15,GDTDBG(,@15)                                    1293
         LA    @01,@AL00001                                        1293
         BALR  @14,@15                                             1293
*   END CHKMSVI;                    /*                       @Z40LB64*/
         B     @EL00007                                            1294
*                                                                  1295
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - GETREC                                @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - OBTAINS A REUESTED MSVI VOLUME RECORD       @Z40LB64*/
*/*              (BASE, COPY, OR DUPLICATE), OR THE MSVI     @Z40LB64*/
*/*              CPU RECORD.                                 @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              VOLUME RECORDS OF THE REQUESTED TYPE ARE    @Z40LB64*/
*/*              OBTAINED (ONE PER INVOCATION) IN 'READ      @Z40LB64*/
*/*              NEXT' FASHION.                              @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - THE TYPE OF RECORD REQUESTED -                 @Z40LB64*/
*/*           1) NEXT BASE VOLUME RECORD                     @Z40LB64*/
*/*           2) NEXT COPY VOLUME RECORD                     @Z40LB64*/
*/*           3) NEXT DUPLICATE VOLUME RECORD                @Z40LB64*/
*/*           4) MSVI CPU RECORD                             @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - THE REQUESTED MSVI RECORD IS PLACED IN A      @Z40LB64*/
*/*            BUFFER CALLED 'MSVIREC'.                      @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*            THE 'GETREC' RETURN CODE SPECIFIES -          @Z40LB64*/
*/*            0 - RECORD SUCCESSFULLY OBTAINED              @Z40LB64*/
*/*            4 - RECORD NOT FOUND                          @Z40LB64*/
*/*            8 - ERROR OBTAINING RECORD                    @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  *****************************************************************/
*                                                                  1295
*GETREC:                                                           1295
*   PROCEDURE;                      /*                       @Z40LB64*/
GETREC   STM   @14,@03,@SA00008                                    1295
         STM   @08,@12,@SA00008+24                                 1295
*   OLDERID2=NEWERID2;                                             1296
         L     @15,@PC00001                                        1296
         L     @15,GDTTR2(,@15)                                    1296
         MVC   @TS00001(95),NEWERID2(@15)                          1296
         MVC   OLDERID2(95,@15),@TS00001                           1296
*   NEWID2='CH1H';                  /*                       @Z40LB64*/
*                                                                  1297
         MVC   NEWID2(4,@15),@CC02517                              1297
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE 'GETREC' RETURN CODE AND 'RVVI' READ       @Z40LB64*/
*   /* REQUEST LIST VARIABLE FIELDS.                         @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1298
*   RECCODE=0;                      /*                       @Z40LB64*/
         MVI   RECCODE,X'00'                                       1298
*   RVVRDRCD=''B;                   /*                       @Z40LB64*/
         L     @15,RVVIPTR                                         1299
         MVI   RVVRDRCD(@15),X'00'                                 1299
*   RVVRTEST=''B;                   /*                       @Z40LB64*/
         MVI   RVVRTEST(@15),X'00'                                 1300
*   RVVSPEC=''B;                    /*                       @Z40LB64*/
         MVI   RVVSPEC(@15),X'00'                                  1301
*   IF LASTBASE^=NEWBASE THEN                                      1302
         CLC   LASTBASE(6),@CC02394                                1302
         BE    @RF01302                                            1302
*     DO;                           /*                       @Z40LB64*/
*       RVVOLUME=LASTBASE;          /*                       @Z40LB64*/
         MVC   RVVOLUME(6,@15),LASTBASE                            1304
*       RVVSVOL=ON;                 /*                       @Z40LB64*/
         OI    RVVSVOL(@15),B'00000001'                            1305
*     END;                          /*                       @Z40LB64*/
*                                                                  1306
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE TYPE OF MSVI RECORD REQUESTED AND       @Z40LB64*/
*   /* COMPLETE THE 'RVVI' REQUEST LIST                      @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1307
*   IF MSVIBASE=ON THEN                                            1307
@RF01302 TM    MSVIBASE,B'10000000'                                1307
         BNO   @RF01307                                            1307
*     DO;                           /*                       @Z40LB64*/
*                                                                  1308
*       /*************************************************************/
*       /*                                                           */
*       /* NEXT BASE VOLUME RECORD REQUESTED                 @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1309
*       RVVBVRCD=ON;                /*                       @Z40LB64*/
         L     @01,RVVIPTR                                         1309
         OI    RVVBVRCD(@01),B'10000000'                           1309
*     END;                          /*                       @Z40LB64*/
*   IF MSVICOPY=ON THEN                                            1311
@RF01307 TM    MSVICOPY,B'01000000'                                1311
         BNO   @RF01311                                            1311
*     DO;                           /*                       @Z40LB64*/
*                                                                  1312
*       /*************************************************************/
*       /*                                                           */
*       /* NEXT COPY VOLUME RECORD REQUESTED                 @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1313
*       RVVCPYRC=ON;                /*                       @Z40LB64*/
         L     @15,RVVIPTR                                         1313
         OI    RVVCPYRC(@15),B'00100000'                           1313
*       RVVCPYID=LASTCOPY;          /*                       @Z40LB64*/
         STC   LASTCOPY,RVVCPYID(,@15)                             1314
*       RVVSCPY=ON;                 /*                       @Z40LB64*/
         OI    RVVSCPY(@15),B'00000100'                            1315
*     END;                          /*                       @Z40LB64*/
*   IF MSVIDUP=ON THEN                                             1317
@RF01311 TM    MSVIDUP,B'00100000'                                 1317
         BNO   @RF01317                                            1317
*     DO;                           /*                       @Z40LB64*/
*                                                                  1318
*       /*************************************************************/
*       /*                                                           */
*       /* NEXT DUPLICATE VOLUME RECORD REQUESTED            @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1319
*       RVVDUPRC=ON;                /*                       @Z40LB64*/
         L     @15,RVVIPTR                                         1319
         OI    RVVDUPRC(@15),B'00010000'                           1319
*       RVVDUPID=LASTDUP;           /*                       @Z40LB64*/
         STC   LASTDUP,RVVDUPID(,@15)                              1320
*       RVVDVOL=ON;                 /*                       @Z40LB64*/
         OI    RVVDVOL(@15),B'00000010'                            1321
*       RVVSDUP=ON;                 /*                       @Z40LB64*/
         OI    RVVSDUP(@15),B'00000010'                            1322
*     END;                          /*                       @Z40LB64*/
*   IF MSVICPU=ON THEN                                             1324
@RF01317 TM    MSVICPU,B'00010000'                                 1324
         BNO   @RF01324                                            1324
*     DO;                           /*                       @Z40LB64*/
*                                                                  1325
*       /*************************************************************/
*       /*                                                           */
*       /* MSVI CPU RECORD REQUESTED                         @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1326
*       RVVCPURC=ON;                /*                       @Z40LB64*/
         L     @01,RVVIPTR                                         1326
         OI    RVVCPURC(@01),B'00000010'                           1326
*     END;                          /*                       @Z40LB64*/
*                                                                  1327
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE REQUESTED MSVI RECORD ('USSC' MACRO -      @Z40LB64*/
*   /* 'VVIC' OPTION).                                       @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1328
*   CALL IDCSASS0(GDTTBL,VVIC,RVVIPTR,RSNCODE);/*            @Z40LB64*/
@RF01324 L     @02,@PC00001                                        1328
         ST    @02,@AL00001                                        1328
         LA    @15,VVIC                                            1328
         ST    @15,@AL00001+4                                      1328
         LA    @15,RVVIPTR                                         1328
         ST    @15,@AL00001+8                                      1328
         LA    @15,RSNCODE                                         1328
         ST    @15,@AL00001+12                                     1328
         MVI   @AL00001+12,X'80'                                   1328
         L     @15,GDTSSC(,@02)                                    1328
         LA    @01,@AL00001                                        1328
         BALR  @14,@15                                             1328
*   RESPECIFY                                                      1329
*     RTNREG RSTD;                                                 1329
*   TESTRC=RTNREG;                                                 1330
         LR    TESTRC,RTNREG                                       1330
*   RESPECIFY                                                      1331
*     RTNREG UNRSTD;                /*                       @Z40LB64*/
*   IF TESTRC=0 THEN                                               1332
         SLR   @02,@02                                             1332
         CR    TESTRC,@02                                          1332
         BNE   @RF01332                                            1332
*     DO;                           /*                       @Z40LB64*/
*                                                                  1333
*       /*************************************************************/
*       /*                                                           */
*       /* MSVI RECORD SUCCESSFULLY OBTAINED. UPDATE THE     @Z40LB64*/
*       /* 'GETREC' INFORMATION TO REMEMBER VOLUME ID,       @Z40LB64*/
*       /* COPY ID, OR DUP ID OF THE RECORD FOR THE NEXT     @Z40LB64*/
*       /* 'GETREC' INVOCATION. SET THE BASE PTR FOR THE     @Z40LB64*/
*       /* PARTICULAR MSVI RECORD TYPE OBTAINED.             @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1334
*       IF MSVIBASE=ON THEN                                        1334
         TM    MSVIBASE,B'10000000'                                1334
         BNO   @RF01334                                            1334
*         DO;                       /*                       @Z40LB64*/
*           BASEVPTR=ADDR(MSVIREC); /*                       @Z40LB64*/
         L     BASEVPTR,MSVIAPTR                                   1336
*           LASTBASE=BASSERNO;      /*                       @Z40LB64*/
         MVC   LASTBASE(6),BASSERNO(BASEVPTR)                      1337
*           LASTCOPY=0;             /*                       @Z40LB64*/
         LR    LASTCOPY,@02                                        1338
*           LASTDUP=0;              /*                       @Z40LB64*/
         LR    LASTDUP,@02                                         1339
*         END;                      /*                       @Z40LB64*/
*       IF MSVICOPY=ON THEN                                        1341
@RF01334 TM    MSVICOPY,B'01000000'                                1341
         BNO   @RF01341                                            1341
*         DO;                       /*                       @Z40LB64*/
*           COPYVPTR=ADDR(MSVIREC); /*                       @Z40LB64*/
         L     @15,MSVIAPTR                                        1343
         ST    @15,COPYVPTR                                        1343
*           LASTCOPY=COPNO;         /*                       @Z40LB64*/
         SLR   LASTCOPY,LASTCOPY                                   1344
         IC    LASTCOPY,COPNO(,@15)                                1344
*         END;                      /*                       @Z40LB64*/
*       IF MSVIDUP=ON THEN                                         1346
@RF01341 TM    MSVIDUP,B'00100000'                                 1346
         BNO   @RF01346                                            1346
*         DO;                       /*                       @Z40LB64*/
*           DUPVPTR=ADDR(MSVIREC);  /*                       @Z40LB64*/
         L     DUPVPTR,MSVIAPTR                                    1348
*           LASTDUP=DUPNO;          /*                       @Z40LB64*/
         SLR   LASTDUP,LASTDUP                                     1349
         IC    LASTDUP,DUPNO(,DUPVPTR)                             1349
*         END;                      /*                       @Z40LB64*/
*       IF MSVIBASE=ON×MSVICOPY=ON×MSVIDUP=ON THEN                 1351
@RF01346 TM    MSVIBASE,B'11100000'                                1351
         BZ    @RF01351                                            1351
*         BCDVPTR=ADDR(MSVIREC);    /*                       @Z40LB64*/
         L     BCDVPTR,MSVIAPTR                                    1352
*       IF GDTDBG=NULLPTR THEN                                     1353
@RF01351 L     @15,@PC00001                                        1353
         L     @15,GDTDBG(,@15)                                    1353
         LTR   @15,@15                                             1353
         BZ    @RT01353                                            1353
*         ;                                                        1354
*       ELSE                                                       1355
*         DO;                                                      1355
*           DMPINDEX=ADDR(DUMPLIST);/*                       @Z40LB64*/
         LA    DMPINDEX,DUMPLIST                                   1356
*           IF MSVICPU=ON THEN                                     1357
         TM    MSVICPU,B'00010000'                                 1357
         BNO   @RF01357                                            1357
*             DO;                   /*                       @Z40LB64*/
*               DMPITMNM='CPUID';                                  1359
         MVI   DMPITMNM+5(DMPINDEX),C' '                           1359
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         1359
         MVC   DMPITMNM(5,DMPINDEX),@CC02518                       1359
*               DMPITMPT=ADDR(CPUID);                              1360
         L     @03,CPUIDPTR                                        1360
         ST    @03,DMPITMPT(,DMPINDEX)                             1360
*               DMPITMLN=LENGTH(CPUID);                            1361
         MVC   DMPITMLN(2,DMPINDEX),@CH02654                       1361
*               DMPITMTP='H';                                      1362
         MVI   DMPITMTP(DMPINDEX),C'H'                             1362
*               DMPINDEX=DMPINDEX+DMPELEMT;                        1363
*                                                                  1363
         AL    DMPINDEX,@CF00476                                   1363
*               /*****************************************************/
*               /*                                                   */
*               /*                                           @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1364
*             END;                  /*                       @Z40LB64*/
*           ELSE                                                   1365
*             DO;                   /*                       @Z40LB64*/
         B     @RC01357                                            1365
@RF01357 DS    0H                                                  1366
*               DMPITMNM='MSVIREC';                                1366
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1366
         MVC   DMPITMNM(7,DMPINDEX),@CC02519                       1366
*               DMPITMPT=ADDR(MSVIREC);                            1367
         L     @03,MSVIAPTR                                        1367
         ST    @03,DMPITMPT(,DMPINDEX)                             1367
*               DMPITMLN=LENGTH(MSVIREC);                          1368
         MVC   DMPITMLN(2,DMPINDEX),@CH02657                       1368
*               DMPITMTP='H';                                      1369
         MVI   DMPITMTP(DMPINDEX),C'H'                             1369
*               DMPINDEX=DMPINDEX+DMPELEMT;                        1370
*                                                                  1370
         AL    DMPINDEX,@CF00476                                   1370
*               /*****************************************************/
*               /*                                                   */
*               /*                                           @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1371
*             END;                  /*                       @Z40LB64*/
*           DMPTRM=DMPTRMVL;                                       1372
@RC01357 MVI   DMPTRM(DMPINDEX),X'FF'                              1372
*         END;                      /*                       @Z40LB64
*                                                            @Z40LB64*/
*       IF GDTDBG=NULLPTR THEN                                     1374
@RT01353 L     @15,@PC00001                                        1374
         L     @15,GDTDBG(,@15)                                    1374
         LTR   @15,@15                                             1374
         BZ    @RT01374                                            1374
*         ;                                                        1375
*       ELSE                                                       1376
*         CALL IDCDB010(GDTTBL,'CH1W',ADDR(DUMPLIST));/*     @Z40LB64*/
         L     @15,@PC00001                                        1376
         ST    @15,@AL00001                                        1376
         LA    @14,@CC02520                                        1376
         ST    @14,@AL00001+4                                      1376
         LA    @14,DUMPLIST                                        1376
         ST    @14,@AFTEMPS+4                                      1376
         LA    @14,@AFTEMPS+4                                      1376
         ST    @14,@AL00001+8                                      1376
         MVI   @AL00001+8,X'80'                                    1376
         L     @15,GDTDBG(,@15)                                    1376
         LA    @01,@AL00001                                        1376
         BALR  @14,@15                                             1376
*     END;                          /*                       @Z40LB64*/
*   ELSE                                                           1378
*     DO;                           /*                       @Z40LB64*/
*                                                                  1378
         B     @RC01332                                            1378
@RF01332 DS    0H                                                  1379
*       /*************************************************************/
*       /*                                                           */
*       /* IF REASON CODE INDICATES THAT THE REQUESTED       @Z40LB64*/
*       /* RECORD WAS NOT FOUND, THEN ALL RECORDS OF         @Z40LB64*/
*       /* THE REQUESTED TYPE HAVE BEEN FOUND, AND A         @Z40LB64*/
*       /* RETURN CODE OF 4 IS RETURNED TO THE INVOKING      @Z40LB64*/
*       /* PROCEDURE. OTHERWISE, THE 'SSCMSG' PROCEDURE      @Z40LB64*/
*       /* IS INVOKED TO PRINT THE APPROPRIATE MESSAGE.      @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1379
*       IF RSNCODE=MSVINFND THEN                                   1379
         CLC   RSNCODE(4),MSVINFND                                 1379
         BNE   @RF01379                                            1379
*         RECCODE=RECNFND;          /*                       @Z40LB64*/
         MVI   RECCODE,X'04'                                       1380
*       ELSE                                                       1381
*         DO;                       /*                       @Z40LB64*/
         B     @RC01379                                            1381
@RF01379 DS    0H                                                  1382
*           CALL SSCMSG(RSNCODE);   /*                       @Z40LB64*/
         LA    @15,RSNCODE                                         1382
         ST    @15,@AL00001                                        1382
         LA    @01,@AL00001                                        1382
         BAL   @14,SSCMSG                                          1382
*           RECCODE=RECERROR;       /*                       @Z40LB64*/
         MVI   RECCODE,X'08'                                       1383
*         END;                      /*                       @Z40LB64*/
*     END;                          /*                       @Z40LB64*/
*   END GETREC;                     /*                       @Z40LB64*/
@EL00008 DS    0H                                                  1386
@EF00008 DS    0H                                                  1386
@ER00008 LM    @14,@03,@SA00008                                    1386
         LM    @08,@12,@SA00008+24                                 1386
         BR    @14                                                 1386
*                                                                  1387
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - VOLREC                                @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - COMPARES MSVI BASE/COPY/DUPLICATE VOLUME    @Z40LB64*/
*/*              RECORDS AGAINST THE MSC VOLUME INVENTORY    @Z40LB64*/
*/*              OR MSC TRANSIENT VOLUME LIST.               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              ACTIVE BASE VOLUME RECORDS ARE MATCHED      @Z40LB64*/
*/*              TO THE MSC VOLUME INVENTORY BY VOLUME       @Z40LB64*/
*/*              IDENTIFIER, AND VOLUME ATTRIBUTES AND       @Z40LB64*/
*/*              MSF IDENTIFIER FIELDS ARE COMPARED.         @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              INACTIVE BASE VOLUME RECORDS, COPY VOLUME   @Z40LB64*/
*/*              RECORDS, AND DUPLICATE VOLUME RECORDS ARE   @Z40LB64*/
*/*              MATCHED TO THE MSC TRANISENT VOLUME LIST    @Z40LB64*/
*/*              BY SEQUENCE #1 CARTRIDGE SERIAL NUMBER,     @Z40LB64*/
*/*              AND VOLUME IDENTIFIER, VOLUME ATTRIBUTES,   @Z40LB64*/
*/*              AND MSF IDENTIFIER FIELDS ARE COMPARED.     @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              IF A MATCHING VOLUME INVENTORY OR TRANSIENT @Z40LB64*/
*/*              VOLUME LIST ENTRY IS NOT FOUND, OR IS FOUND @Z40LB64*/
*/*              BUT ALREADY 'CHECKED-OFF' IN THE RESPECTIVE @Z40LB64*/
*/*              CHECK-OFF TABLE, OR IF COMPARED FIELDS ARE  @Z40LB64*/
*/*              NOT EQUAL, AN ERROR MESSAGE IS PRINTED.     @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - THE MSVI BASE/COPY/DUPLICATE VOLUME RECORDS    @Z40LB64*/
*/*           (OBTAINED BY THE 'CHKMSVI' PROCEDURE).         @Z40LB64*/
*/*           THE MATCHING MSC VOLUME INVENTORY OR TRANSIENT @Z40LB64*/
*/*           VOLUME LIST ENTRY (OBTAINED BY 'VOLREC'        @Z40LB64*/
*/*           PROCEDURE).                                    @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - IF A MATCHING UNCHECKED MSC VOLUME INVENTORY  @Z40LB64*/
*/*            OR TRANSIENT VOLUME LIST ENTRY IS FOUND AND   @Z40LB64*/
*/*            COMPARED FIELDS AGREE, THEN NO OUTPUT IS      @Z40LB64*/
*/*            PRODUCED.                                     @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*            IF A MATCHING UNCHECKED MSC VOLUME INVENTORY  @Z40LB64*/
*/*            OR TRANSIENT VOLUME LIST ENTRY IS NOT FOUND   @Z40LB64*/
*/*            OR COMPARED FIELDS DO NOT AGREE, AN ERROR     @Z40LB64*/
*/*            MESSAGE TO THAT EFFECT IS PRINTED (BY THE     @Z40LB64*/
*/*            'IDCCH04' ROUTINE).                           @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  *****************************************************************/
*                                                                  1387
*VOLREC:                                                           1387
*   PROCEDURE;                      /*                       @Z40LB64*/
VOLREC   STM   @14,@12,@SA00009                                    1387
*   OLDERID2=NEWERID2;                                             1388
         L     @15,@PC00001                                        1388
         L     @15,GDTTR2(,@15)                                    1388
         MVC   @TS00001(95),NEWERID2(@15)                          1388
         MVC   OLDERID2(95,@15),@TS00001                           1388
*   NEWID2='CH1I';                  /*                       @Z40LB64*/
*                                                                  1389
         MVC   NEWID2(4,@15),@CC02524                              1389
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVI VOLUME RECORD IS AN ACTIVE BASE VOLUME        @Z40LB64*/
*   /* RECORD, OBTAIN THE MSC VOLUME INVENTORY ENTRY WITH    @Z40LB64*/
*   /* THE SAME VOLUME IDENTIFIER.                           @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1390
*   IF BCDBASE=ON&BASINAC=OFF THEN                                 1390
         TM    BCDBASE(BCDVPTR),B'00100000'                        1390
         BNO   @RF01390                                            1390
         TM    BASINAC(BASEVPTR),B'00000100'                       1390
         BNZ   @RF01390                                            1390
*MSVIVI1:                                                          1391
*     DO;                           /*                       @Z40LB64*/
MSVIVI1  DS    0H                                                  1392
*       TABLEID=VITBLID;            /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1392
         MVC   TABLEID(1,@15),VITBLID                              1392
*       VOLID=BASSERNO;             /*                       @Z40LB64*/
         MVC   VOLID(6,@15),BASSERNO(BASEVPTR)                     1393
*       CALL IDCCH03(GDTTBL,CDALIST);/*                      @Z40LB64*/
*                                                                  1394
         L     @15,@PC00001                                        1394
         ST    @15,@AL00001                                        1394
         LA    @15,CDALIST                                         1394
         ST    @15,@AL00001+4                                      1394
         L     @15,@CV02184                                        1394
         LA    @01,@AL00001                                        1394
         BALR  @14,@15                                             1394
*       /*************************************************************/
*       /*                                                           */
*       /* IF MSC VOLUME INVENTORY ENTRY WAS SUCCESSFULLY    @Z40LB64*/
*       /* OBTAINED, COMPARE CORRESPONDING FIELDS            @Z40LB64*/
*       /* (VOLUME ATTRIBUTES AND MSF IDENTIFIER).           @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1395
*       IF GETRC=0 THEN                                            1395
         L     @01,EARGPTR                                         1395
         LH    @15,GETRC(,@01)                                     1395
         LTR   @15,@15                                             1395
         BNZ   @RF01395                                            1395
*MSVIVI2:                                                          1396
*         DO;                       /*                       @Z40LB64*/
MSVIVI2  DS    0H                                                  1397
*           VIENTPTR=TBLADDR;       /*                       @Z40LB64*/
*                                                                  1397
         L     @07,EARGPTR                                         1397
         L     VIENTPTR,TBLADDR(,@07)                              1397
*           /*********************************************************/
*           /*                                                       */
*           /* COMPARE CORRESPONDING FIELDS BETWEEN          @Z40LB64*/
*           /* THE VOLUME INVENTORY ENTRY AND THE            @Z40LB64*/
*           /* MSVI BASE VOLUME RECORD.                      @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1398
*           ERRFLAG=OFF;            /*                       @Z40LB64*/
         NI    ERRFLAG,B'01111111'                                 1398
*           CASEFLAG=OFF;           /*                       @Z40LB64*/
         NI    CASEFLAG,B'01111111'                                1399
*           CASE#=0;                /*                       @Z40LB64*/
         SLR   CASE#,CASE#                                         1400
*VICASES:                                                          1401
*           DO WHILE CASEFLAG=OFF;  /*                       @Z40LB64*/
VICASES  B     @DE01401                                            1401
@DL01401 DS    0H                                                  1402
*             CASE#=CASE#+1;        /*                       @Z40LB64*/
         AL    CASE#,@CF00221                                      1402
*             DO;                   /* CASE(CASE#)NAMES(VSECCASE,VEXC
*                                      CASE,VBNDCASE,VWRTCASE,VMF1CAS
*                                      E,VMF2CASE)                   */
*               DCL                                                1404
*                 CL0002@ LABEL BASED(CP0002@(CASE#)) VALUERANGE(  1404
*                     VSECCASE,VEXCCASE,VBNDCASE,VWRTCASE,VMF1CASE,
*                     VMF2CASE);    /* BRANCH TARGET                 */
*               DCL                                                1405
*                 CP0002@(6) PTR(31) INIT(ADDR(VSECCASE),ADDR(VEXCCASE)
*                     ,ADDR(VBNDCASE),ADDR(VWRTCASE),ADDR(VMF1CASE),
*                     ADDR(VMF2CASE));                             1405
*               GOTO CL0002@;       /* BRANCH TO SELECTED CASE     1406
*                                                            @Z40LB64*/
*                                                                  1406
         LR    @07,CASE#                                           1406
         SLA   @07,2                                               1406
         L     @07,CP0002@-4(@07)                                  1406
         BR    @07                                                 1406
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'VOLUME SECURE' ATTRIBUTE         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1407
*VSECCASE:                                                         1407
*               DO;                 /* SUBCASE               @Z40LB64*/
VSECCASE DS    0H                                                  1408
*                 IF(VISECVOL=ON&BASDAERA=OFF) THEN                1408
         TM    VISECVOL(VIENTPTR),B'00100000'                      1408
         BNO   @RF01408                                            1408
         TM    BASDAERA(BASEVPTR),B'10000000'                      1408
         BNZ   @RF01408                                            1408
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1410
*                     VSSFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1411
         OI    VSSFLD(@07),B'01000000'                             1411
*                     FLDCHAR(1)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1412
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1412
         MVC   FLDCHAR(3,@07),@CC02406                             1412
*                     FLDCHAR(2)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1413
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1413
         MVC   FLDCHAR+12(3,@07),@CC02408                          1413
*                   END;            /*                       @Z40LB64*/
*                 IF(VISECVOL=OFF&BASDAERA=ON) THEN                1415
@RF01408 TM    VISECVOL(VIENTPTR),B'00100000'                      1415
         BNZ   @RF01415                                            1415
         TM    BASDAERA(BASEVPTR),B'10000000'                      1415
         BNO   @RF01415                                            1415
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1417
*                     VSSFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1418
         OI    VSSFLD(@07),B'01000000'                             1418
*                     FLDCHAR(1)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1419
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1419
         MVC   FLDCHAR(3,@07),@CC02408                             1419
*                     FLDCHAR(2)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1420
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1420
         MVC   FLDCHAR+12(3,@07),@CC02406                          1420
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0002@;     /* BRANCH TO END OF CASE         */
         B     CE0002@                                             1422
*               END VSECCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1424
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'VOLUME EXCLUSIVE' ATTRIBUTE      @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1424
*VEXCCASE:                                                         1424
*               DO;                 /* SUBCASE               @Z40LB64*/
VEXCCASE DS    0H                                                  1425
*                 IF(VIEXCVOL=ON&BASEXCL=OFF) THEN                 1425
         TM    VIEXCVOL(VIENTPTR),B'00010000'                      1425
         BNO   @RF01425                                            1425
         TM    BASEXCL(BASEVPTR),B'00000001'                       1425
         BNZ   @RF01425                                            1425
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1427
*                     VESFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1428
         OI    VESFLD(@07),B'00100000'                             1428
*                     FLDCHAR(1)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1429
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1429
         MVC   FLDCHAR(3,@07),@CC02406                             1429
*                     FLDCHAR(2)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1430
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1430
         MVC   FLDCHAR+12(3,@07),@CC02408                          1430
*                   END;            /*                       @Z40LB64*/
*                 IF(VIEXCVOL=OFF&BASEXCL=ON) THEN                 1432
@RF01425 TM    VIEXCVOL(VIENTPTR),B'00010000'                      1432
         BNZ   @RF01432                                            1432
         TM    BASEXCL(BASEVPTR),B'00000001'                       1432
         BNO   @RF01432                                            1432
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1434
*                     VESFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1435
         OI    VESFLD(@07),B'00100000'                             1435
*                     FLDCHAR(1)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1436
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1436
         MVC   FLDCHAR(3,@07),@CC02408                             1436
*                     FLDCHAR(2)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1437
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1437
         MVC   FLDCHAR+12(3,@07),@CC02406                          1437
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0002@;     /* BRANCH TO END OF CASE         */
         B     CE0002@                                             1439
*               END VEXCCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1441
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'VOLUME BOUND' ATTRIBUTE          @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1441
*VBNDCASE:                                                         1441
*               DO;                 /* SUBCASE               @Z40LB64*/
VBNDCASE DS    0H                                                  1442
*                 IF(VIBNDVOL=ON&BASBIND=OFF) THEN                 1442
         TM    VIBNDVOL(VIENTPTR),B'00000100'                      1442
         BNO   @RF01442                                            1442
         TM    BASBIND(BASEVPTR),B'00000010'                       1442
         BNZ   @RF01442                                            1442
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1444
*                     VBSFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1445
         OI    VBSFLD(@07),B'00010000'                             1445
*                     FLDCHAR(1)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1446
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1446
         MVC   FLDCHAR(3,@07),@CC02406                             1446
*                     FLDCHAR(2)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1447
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1447
         MVC   FLDCHAR+12(3,@07),@CC02408                          1447
*                   END;            /*                       @Z40LB64*/
*                 IF(VIBNDVOL=OFF&BASBIND=ON) THEN                 1449
@RF01442 TM    VIBNDVOL(VIENTPTR),B'00000100'                      1449
         BNZ   @RF01449                                            1449
         TM    BASBIND(BASEVPTR),B'00000010'                       1449
         BNO   @RF01449                                            1449
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1451
*                     VBSFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1452
         OI    VBSFLD(@07),B'00010000'                             1452
*                     FLDCHAR(1)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1453
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1453
         MVC   FLDCHAR(3,@07),@CC02408                             1453
*                     FLDCHAR(2)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1454
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1454
         MVC   FLDCHAR+12(3,@07),@CC02406                          1454
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0002@;     /* BRANCH TO END OF CASE         */
         B     CE0002@                                             1456
*               END VBNDCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1458
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'WRITE INHIBIT' ATTRIBUTE         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1458
*VWRTCASE:                                                         1458
*               DO;                 /* SUBCASE               @Z40LB64*/
VWRTCASE DS    0H                                                  1459
*                 IF(VIWRTINH=ON&BASRONLY=OFF) THEN                1459
         TM    VIWRTINH(VIENTPTR),B'00000010'                      1459
         BNO   @RF01459                                            1459
         TM    BASRONLY(BASEVPTR),B'01000000'                      1459
         BNZ   @RF01459                                            1459
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1461
*                     WISFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1462
         OI    WISFLD(@07),B'00000100'                             1462
*                     FLDCHAR(1)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1463
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1463
         MVC   FLDCHAR(3,@07),@CC02406                             1463
*                     FLDCHAR(2)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1464
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1464
         MVC   FLDCHAR+12(3,@07),@CC02408                          1464
*                   END;            /*                       @Z40LB64*/
*                 IF(VIWRTINH=OFF&BASRONLY=ON) THEN                1466
@RF01459 TM    VIWRTINH(VIENTPTR),B'00000010'                      1466
         BNZ   @RF01466                                            1466
         TM    BASRONLY(BASEVPTR),B'01000000'                      1466
         BNO   @RF01466                                            1466
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1468
*                     WISFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1469
         OI    WISFLD(@07),B'00000100'                             1469
*                     FLDCHAR(1)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1470
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1470
         MVC   FLDCHAR(3,@07),@CC02408                             1470
*                     FLDCHAR(2)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1471
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1471
         MVC   FLDCHAR+12(3,@07),@CC02406                          1471
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0002@;     /* BRANCH TO END OF CASE         */
         B     CE0002@                                             1473
*               END VWRTCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1475
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE SEQ #1 CTG MSF IDENTIFIER         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1475
*VMF1CASE:                                                         1475
*               DO;                 /* SUBCASE               @Z40LB64*/
VMF1CASE DS    0H                                                  1476
*                 TEMPBYTE=VILZYX1/LIBSHIFT;/*               @Z40LB64*/
         LH    TEMPBYTE,VILZYX1(,VIENTPTR)                         1476
         N     TEMPBYTE,@CF02684                                   1476
         SRL   TEMPBYTE,14                                         1476
*                 IF TEMPBYTE^=BASLIB1 THEN                        1477
         SLR   @07,@07                                             1477
         IC    @07,BASLIB1(,BASEVPTR)                              1477
         CR    TEMPBYTE,@07                                        1477
         BE    @RF01477                                            1477
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1479
*                     MSFFLD=ON;    /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1480
         OI    MSFFLD(@15),B'00000010'                             1480
*                     FLDNUM(1)=TEMPBYTE;/*                  @Z40LB64*/
         ST    TEMPBYTE,FLDNUM(,@15)                               1481
*                     FLDNUM(2)=BASLIB1;/*                   @Z40LB64*/
         ST    @07,FLDNUM+12(,@15)                                 1482
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0002@;     /* BRANCH TO END OF CASE         */
         B     CE0002@                                             1484
*               END VMF1CASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1486
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE SEQ #2 CTG MSF IDENTIFIER         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1486
*VMF2CASE:                                                         1486
*               DO;                 /* SUBCASE               @Z40LB64*/
VMF2CASE DS    0H                                                  1487
*                 TEMPBYTE=VILZYX2/LIBSHIFT;/*               @Z40LB64*/
         LH    TEMPBYTE,VILZYX2(,VIENTPTR)                         1487
         N     TEMPBYTE,@CF02684                                   1487
         SRL   TEMPBYTE,14                                         1487
*                 IF TEMPBYTE^=BASLIB2 THEN                        1488
         SLR   @07,@07                                             1488
         IC    @07,BASLIB2(,BASEVPTR)                              1488
         CR    TEMPBYTE,@07                                        1488
         BE    @RF01488                                            1488
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1490
*                     MSFFLD=ON;    /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1491
         OI    MSFFLD(@15),B'00000010'                             1491
*                     FLDNUM(1)=TEMPBYTE;/*                  @Z40LB64*/
         ST    TEMPBYTE,FLDNUM(,@15)                               1492
*                     FLDNUM(2)=BASLIB2;/*                   @Z40LB64*/
         ST    @07,FLDNUM+12(,@15)                                 1493
*                   END;            /*                       @Z40LB64*/
*                 CASEFLAG=ON;      /*                       @Z40LB64*/
@RF01488 OI    CASEFLAG,B'10000000'                                1495
*                 GOTO CE0002@;     /* BRANCH TO END OF CASE         */
         B     CE0002@                                             1496
*               END VMF2CASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1498
*CE0002@:                                                          1498
*             END;                  /* END OF CASE                   */
CE0002@  DS    0H                                                  1499
*/*@Z40LB64                                                          */
*                                                                  1499
*             /*******************************************************/
*             /*                                                     */
*             /* IF COMPARED FIELDS DID NOT MATCH,           @Z40LB64*/
*             /* PRINT THE APPROPRIATE ERROR MESSAGE         @Z40LB64*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1499
*             IF ERRFLAG=ON THEN                                   1499
         TM    ERRFLAG,B'10000000'                                 1499
         BNO   @RF01499                                            1499
*               DO;                 /*                       @Z40LB64*/
*                 INCNMSG=ON;       /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1501
         OI    INCNMSG(@07),B'10000000'                            1501
*                 VITBL(1)=ON;      /*                       @Z40LB64*/
         OI    VITBL(@07),B'01000000'                              1502
*                 MSVITBL(2)=ON;    /*                       @Z40LB64*/
         OI    MSVITBL+4(@07),B'00001000'                          1503
*                 CHRINDEX(1)=PREVCHR;/*                     @Z40LB64*/
         L     @03,EARGPTR                                         1504
         MVC   CHRINDEX(5,@07),PREVCHR(@03)                        1504
*                 VSNINDEX(1)=VIVOLID;/*                     @Z40LB64*/
         MVC   VSNINDEX(6,@07),VIVOLID(VIENTPTR)                   1505
*                 KEYINDEX(2)=BASNAME;/*                     @Z40LB64*/
         MVC   KEYINDEX+24(13,@07),BASNAME(BASEVPTR)               1506
*                 CALL IDCCH04(GDTTBL,CDALIST);/*            @Z40LB64*/
         L     @07,@PC00001                                        1507
         ST    @07,@AL00001                                        1507
         LA    @07,CDALIST                                         1507
         ST    @07,@AL00001+4                                      1507
         L     @15,@CV02185                                        1507
         LA    @01,@AL00001                                        1507
         BALR  @14,@15                                             1507
*                 ERRFLAG=OFF;      /*                       @Z40LB64*/
         NI    ERRFLAG,B'01111111'                                 1508
*               END;                /*                       @Z40LB64*/
*           END VICASES;            /*                       @Z40LB64*/
*                                                                  1510
@RF01499 DS    0H                                                  1510
@DE01401 TM    CASEFLAG,B'10000000'                                1510
         BZ    @DL01401                                            1510
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK-OFF THE VOLUME INVENTORY ENTRY.         @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1511
*           VICHKFF(BYTE#)=VICHKFF(BYTE#)×BITMASK(BIT#);/*   @Z40LB64*/
         L     @15,EARGPTR                                         1511
         LH    @01,BYTE#(,@15)                                     1511
         L     @14,VICOPTR                                         1511
         ALR   @14,@01                                             1511
         AL    @14,@CF02349                                        1511
         LH    @01,BIT#(,@15)                                      1511
         LA    @15,BITMASK-1(@01)                                  1511
         OC    VICHKFF(1,@14),0(@15)                               1511
*         END MSVIVI2;              /*                       @Z40LB64*/
*                                                                  1512
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE MSC VOLUME INVENTORY ENTRY WAS NOT         @Z40LB64*/
*       /* FOUND, PRINT THE APPROPRIATE ERROR MESSAGE.       @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1513
*       IF GETRC=NOTFOUND THEN                                     1513
@RF01395 L     @01,EARGPTR                                         1513
         CLC   GETRC(2,@01),@CH00181                               1513
         BNE   @RF01513                                            1513
*         DO;                       /*                       @Z40LB64*/
*           MTCHMSG=ON;             /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1515
         OI    MTCHMSG(@15),B'00010000'                            1515
*           VSNFLD=ON;              /*                       @Z40LB64*/
         OI    VSNFLD(@15),B'00000001'                             1516
*           FLDCHAR(1)=BASSERNO;    /*                       @Z40LB64*/
         MVI   FLDCHAR+6(@15),C' '                                 1517
         MVC   FLDCHAR+7(5,@15),FLDCHAR+6(@15)                     1517
         MVC   FLDCHAR(6,@15),BASSERNO(BASEVPTR)                   1517
*           VITBL(1)=ON;            /*                       @Z40LB64*/
         OI    VITBL(@15),B'01000000'                              1518
*           MSVITBL(2)=ON;          /*                       @Z40LB64*/
         OI    MSVITBL+4(@15),B'00001000'                          1519
*           KEYINDEX(2)=BASNAME;    /*                       @Z40LB64*/
         MVC   KEYINDEX+24(13,@15),BASNAME(BASEVPTR)               1520
*           CALL IDCCH04(GDTTBL,CDALIST);/*                  @Z40LB64*/
         L     @15,@PC00001                                        1521
         ST    @15,@AL00001                                        1521
         LA    @15,CDALIST                                         1521
         ST    @15,@AL00001+4                                      1521
         L     @15,@CV02185                                        1521
         LA    @01,@AL00001                                        1521
         BALR  @14,@15                                             1521
*         END;                      /*                       @Z40LB64*/
*                                                                  1522
*       /*************************************************************/
*       /*                                                           */
*       /* IF AN ERROR WAS ENCOUNTERED TRYING TO OBTAIN      @Z40LB64*/
*       /* THE MSC VOLUME INVENTORY ENTRY, TERMINATE         @Z40LB64*/
*       /* CHECKMSS PROCESSING.                              @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1523
*       IF GETRC=TABLERR THEN                                      1523
@RF01513 LA    @15,12                                              1523
         L     @01,EARGPTR                                         1523
         CH    @15,GETRC(,@01)                                     1523
         BNE   @RF01523                                            1523
*         DO;                       /*                       @Z40LB64*/
*           LASTCOND=LASTCC12;      /*                       @Z40LB64*/
         L     @14,@PC00001+8                                      1525
         STH   @15,LASTCOND(,@14)                                  1525
*           RETURN;                 /*                       @Z40LB64*/
@EL00009 DS    0H                                                  1526
@EF00009 DS    0H                                                  1526
@ER00009 LM    @14,@12,@SA00009                                    1526
         BR    @14                                                 1526
*         END;                      /*                       @Z40LB64*/
*     END MSVIVI1;                  /*                       @Z40LB64*/
*                                                                  1528
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVI VOLUME RECORD IS AN INACTIVE BASE VOLUME      @Z40LB64*/
*   /* RECORD, COPY VOLUME RECORD, OR DUPLICATE VOLUME       @Z40LB64*/
*   /* RECORD, OBTAIN THE MSC TRANSIENT VOLUME LIST          @Z40LB64*/
*   /* ENTRY WITH THE SAME SEQUENCE #1 CARTRIDGE SERIAL      @Z40LB64*/
*   /* NUMBER.                                               @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1529
*   ELSE                                                           1529
*MSVITVL1:                                                         1529
*     DO;                           /*                       @Z40LB64*/
         B     @RC01390                                            1529
@RF01390 DS    0H                                                  1529
MSVITVL1 DS    0H                                                  1530
*       TABLEID=TVLTBLID;           /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1530
         MVC   TABLEID(1,@15),TVLTBLID                             1530
*       SEQ1CSN=BCDCSN1;            /*                       @Z40LB64*/
         MVC   SEQ1CSN(12,@15),BCDCSN1(BCDVPTR)                    1531
*       CALL IDCCH03(GDTTBL,CDALIST);/*                      @Z40LB64*/
*                                                                  1532
         L     @15,@PC00001                                        1532
         ST    @15,@AL00001                                        1532
         LA    @15,CDALIST                                         1532
         ST    @15,@AL00001+4                                      1532
         L     @15,@CV02184                                        1532
         LA    @01,@AL00001                                        1532
         BALR  @14,@15                                             1532
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE MSC TRANSIENT VOLUME LIST ENTRY WAS        @Z40LB64*/
*       /* SUCCESSFULLY OBTAINED, COMPARE CORRESPONDING      @Z40LB64*/
*       /* FIELDS (VOLUME ATTRIBUTES, VOLUME IDENTIFIER,     @Z40LB64*/
*       /* AND MSF IDENTIFIER). DUPLICATE VOLUME RECORDS     @Z40LB64*/
*       /* DO NOT CONTAIN THE VOLUME ATTRIBUTE FIELDS.       @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1533
*       IF GETRC=0 THEN                                            1533
         L     @01,EARGPTR                                         1533
         LH    @15,GETRC(,@01)                                     1533
         LTR   @15,@15                                             1533
         BNZ   @RF01533                                            1533
*MSVITVL2:                                                         1534
*         DO;                       /*                       @Z40LB64*/
MSVITVL2 DS    0H                                                  1535
*           TVENTPTR=TBLADDR;       /*                       @Z40LB64*/
*                                                                  1535
         L     @07,EARGPTR                                         1535
         L     TVENTPTR,TBLADDR(,@07)                              1535
*           /*********************************************************/
*           /*                                                       */
*           /* COMPARE CORRESPONDING FIELDS BETWEEN          @Z40LB64*/
*           /* THE TRANSIENT VOLUME LIST ENTRY AND           @Z40LB64*/
*           /* THE MSVI BASE/COPY/DUPLICATE VOLUME           @Z40LB64*/
*           /* RECORD.                                       @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1536
*           ERRFLAG=OFF;            /*                       @Z40LB64*/
         NI    ERRFLAG,B'01111111'                                 1536
*           CASEFLAG=OFF;           /*                       @Z40LB64*/
         NI    CASEFLAG,B'01111111'                                1537
*           CASE#=0;                /*                       @Z40LB64*/
         SLR   CASE#,CASE#                                         1538
*TVLCASES:                                                         1539
*           DO WHILE CASEFLAG=OFF;  /*                       @Z40LB64*/
TVLCASES B     @DE01539                                            1539
@DL01539 DS    0H                                                  1540
*             CASE#=CASE#+1;        /*                       @Z40LB64*/
         AL    CASE#,@CF00221                                      1540
*             DO;                   /* CASE(CASE#)NAMES(TSECCASE,TEXC
*                                      CASE,TBNDCASE,TWRTCASE,TVOLCAS
*                                      E,TMF1CASE,TMF2CASE)          */
*               DCL                                                1542
*                 CL0003@ LABEL BASED(CP0003@(CASE#)) VALUERANGE(  1542
*                     TSECCASE,TEXCCASE,TBNDCASE,TWRTCASE,TVOLCASE,
*                     TMF1CASE,TMF2CASE);/* BRANCH TARGET            */
*               DCL                                                1543
*                 CP0003@(7) PTR(31) INIT(ADDR(TSECCASE),ADDR(TEXCCASE)
*                     ,ADDR(TBNDCASE),ADDR(TWRTCASE),ADDR(TVOLCASE),
*                     ADDR(TMF1CASE),ADDR(TMF2CASE));              1543
*               GOTO CL0003@;       /* BRANCH TO SELECTED CASE       */
         LR    @07,CASE#                                           1544
         SLA   @07,2                                               1544
         L     @07,CP0003@-4(@07)                                  1544
         BR    @07                                                 1544
*/*  @Z40LB64                                                        */
*                                                                  1545
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'VOLUME SECURE' ATTRIBUTE         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1545
*TSECCASE:                                                         1545
*               DO;                 /* SUBCASE               @Z40LB64*/
TSECCASE DS    0H                                                  1546
*                 IF BCDBASE=ON THEN                               1546
         TM    BCDBASE(BCDVPTR),B'00100000'                        1546
         BNO   @RF01546                                            1546
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVSECVOL=ON&BASDAERA=OFF) THEN            1548
         TM    TVSECVOL(TVENTPTR),B'00100000'                      1548
         BNO   @RF01548                                            1548
         TM    BASDAERA(BASEVPTR),B'10000000'                      1548
         BNZ   @RF01548                                            1548
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1550
*                         VSSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1551
         OI    VSSFLD(@07),B'01000000'                             1551
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1552
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1552
         MVC   FLDCHAR(3,@07),@CC02406                             1552
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1553
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1553
         MVC   FLDCHAR+12(3,@07),@CC02408                          1553
*                       END;        /*                       @Z40LB64*/
*                     IF(TVSECVOL=OFF&BASDAERA=ON) THEN            1555
@RF01548 TM    TVSECVOL(TVENTPTR),B'00100000'                      1555
         BNZ   @RF01555                                            1555
         TM    BASDAERA(BASEVPTR),B'10000000'                      1555
         BNO   @RF01555                                            1555
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1557
*                         VSSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1558
         OI    VSSFLD(@07),B'01000000'                             1558
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1559
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1559
         MVC   FLDCHAR(3,@07),@CC02408                             1559
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1560
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1560
         MVC   FLDCHAR+12(3,@07),@CC02406                          1560
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
@RF01555 DS    0H                                                  1563
*                 IF BCDCOPY=ON THEN                               1563
@RF01546 TM    BCDCOPY(BCDVPTR),B'00010000'                        1563
         BNO   @RF01563                                            1563
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVSECVOL=ON&COPDAERA=OFF) THEN            1565
         TM    TVSECVOL(TVENTPTR),B'00100000'                      1565
         BNO   @RF01565                                            1565
         L     @07,COPYVPTR                                        1565
         TM    COPDAERA(@07),B'00000001'                           1565
         BNZ   @RF01565                                            1565
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1567
*                         VSSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1568
         OI    VSSFLD(@07),B'01000000'                             1568
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1569
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1569
         MVC   FLDCHAR(3,@07),@CC02406                             1569
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1570
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1570
         MVC   FLDCHAR+12(3,@07),@CC02408                          1570
*                       END;        /*                       @Z40LB64*/
*                     IF(TVSECVOL=OFF&COPDAERA=ON) THEN            1572
@RF01565 TM    TVSECVOL(TVENTPTR),B'00100000'                      1572
         BNZ   @RF01572                                            1572
         L     @07,COPYVPTR                                        1572
         TM    COPDAERA(@07),B'00000001'                           1572
         BNO   @RF01572                                            1572
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1574
*                         VSSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1575
         OI    VSSFLD(@07),B'01000000'                             1575
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1576
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1576
         MVC   FLDCHAR(3,@07),@CC02408                             1576
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1577
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1577
         MVC   FLDCHAR+12(3,@07),@CC02406                          1577
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1580
*               END TSECCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1582
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'VOLUME EXCLUSIVE' ATTRIBUTE      @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1582
*TEXCCASE:                                                         1582
*               DO;                 /* SUBCASE               @Z40LB64*/
TEXCCASE DS    0H                                                  1583
*                 IF BCDBASE=ON THEN                               1583
         TM    BCDBASE(BCDVPTR),B'00100000'                        1583
         BNO   @RF01583                                            1583
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVEXCVOL=ON&BASEXCL=OFF) THEN             1585
         TM    TVEXCVOL(TVENTPTR),B'00010000'                      1585
         BNO   @RF01585                                            1585
         TM    BASEXCL(BASEVPTR),B'00000001'                       1585
         BNZ   @RF01585                                            1585
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1587
*                         VESFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1588
         OI    VESFLD(@07),B'00100000'                             1588
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1589
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1589
         MVC   FLDCHAR(3,@07),@CC02406                             1589
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1590
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1590
         MVC   FLDCHAR+12(3,@07),@CC02408                          1590
*                       END;        /*                       @Z40LB64*/
*                     IF(TVEXCVOL=OFF&BASEXCL=ON) THEN             1592
@RF01585 TM    TVEXCVOL(TVENTPTR),B'00010000'                      1592
         BNZ   @RF01592                                            1592
         TM    BASEXCL(BASEVPTR),B'00000001'                       1592
         BNO   @RF01592                                            1592
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1594
*                         VESFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1595
         OI    VESFLD(@07),B'00100000'                             1595
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1596
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1596
         MVC   FLDCHAR(3,@07),@CC02408                             1596
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1597
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1597
         MVC   FLDCHAR+12(3,@07),@CC02406                          1597
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
@RF01592 DS    0H                                                  1600
*                 IF BCDCOPY=ON THEN                               1600
@RF01583 TM    BCDCOPY(BCDVPTR),B'00010000'                        1600
         BNO   @RF01600                                            1600
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVEXCVOL=ON&COPEXCL=OFF) THEN             1602
         TM    TVEXCVOL(TVENTPTR),B'00010000'                      1602
         BNO   @RF01602                                            1602
         L     @07,COPYVPTR                                        1602
         TM    COPEXCL(@07),B'00000010'                            1602
         BNZ   @RF01602                                            1602
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1604
*                         VESFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1605
         OI    VESFLD(@07),B'00100000'                             1605
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1606
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1606
         MVC   FLDCHAR(3,@07),@CC02406                             1606
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1607
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1607
         MVC   FLDCHAR+12(3,@07),@CC02408                          1607
*                       END;        /*                       @Z40LB64*/
*                     IF(TVEXCVOL=OFF&COPEXCL=ON) THEN             1609
@RF01602 TM    TVEXCVOL(TVENTPTR),B'00010000'                      1609
         BNZ   @RF01609                                            1609
         L     @07,COPYVPTR                                        1609
         TM    COPEXCL(@07),B'00000010'                            1609
         BNO   @RF01609                                            1609
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1611
*                         VESFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1612
         OI    VESFLD(@07),B'00100000'                             1612
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1613
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1613
         MVC   FLDCHAR(3,@07),@CC02408                             1613
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1614
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1614
         MVC   FLDCHAR+12(3,@07),@CC02406                          1614
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1617
*               END TEXCCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1619
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'VOLUME BOUND' ATTRIBUTE          @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1619
*TBNDCASE:                                                         1619
*               DO;                 /* SUBCASE               @Z40LB64*/
TBNDCASE DS    0H                                                  1620
*                 IF BCDBASE=ON THEN                               1620
         TM    BCDBASE(BCDVPTR),B'00100000'                        1620
         BNO   @RF01620                                            1620
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVBNDVOL=ON&BASBIND=OFF) THEN             1622
         TM    TVBNDVOL(TVENTPTR),B'00000100'                      1622
         BNO   @RF01622                                            1622
         TM    BASBIND(BASEVPTR),B'00000010'                       1622
         BNZ   @RF01622                                            1622
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1624
*                         VBSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1625
         OI    VBSFLD(@07),B'00010000'                             1625
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1626
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1626
         MVC   FLDCHAR(3,@07),@CC02406                             1626
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1627
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1627
         MVC   FLDCHAR+12(3,@07),@CC02408                          1627
*                       END;        /*                       @Z40LB64*/
*                     IF(TVBNDVOL=OFF&BASBIND=ON) THEN             1629
@RF01622 TM    TVBNDVOL(TVENTPTR),B'00000100'                      1629
         BNZ   @RF01629                                            1629
         TM    BASBIND(BASEVPTR),B'00000010'                       1629
         BNO   @RF01629                                            1629
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1631
*                         VBSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1632
         OI    VBSFLD(@07),B'00010000'                             1632
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1633
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1633
         MVC   FLDCHAR(3,@07),@CC02408                             1633
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1634
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1634
         MVC   FLDCHAR+12(3,@07),@CC02406                          1634
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
@RF01629 DS    0H                                                  1637
*                 IF BCDCOPY=ON THEN                               1637
@RF01620 TM    BCDCOPY(BCDVPTR),B'00010000'                        1637
         BNO   @RF01637                                            1637
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVBNDVOL=ON&COPBIND=OFF) THEN             1639
         TM    TVBNDVOL(TVENTPTR),B'00000100'                      1639
         BNO   @RF01639                                            1639
         L     @07,COPYVPTR                                        1639
         TM    COPBIND(@07),B'00000100'                            1639
         BNZ   @RF01639                                            1639
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1641
*                         VBSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1642
         OI    VBSFLD(@07),B'00010000'                             1642
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1643
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1643
         MVC   FLDCHAR(3,@07),@CC02406                             1643
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1644
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1644
         MVC   FLDCHAR+12(3,@07),@CC02408                          1644
*                       END;        /*                       @Z40LB64*/
*                     IF(TVBNDVOL=OFF&COPBIND=ON) THEN             1646
@RF01639 TM    TVBNDVOL(TVENTPTR),B'00000100'                      1646
         BNZ   @RF01646                                            1646
         L     @07,COPYVPTR                                        1646
         TM    COPBIND(@07),B'00000100'                            1646
         BNO   @RF01646                                            1646
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1648
*                         VBSFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1649
         OI    VBSFLD(@07),B'00010000'                             1649
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1650
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1650
         MVC   FLDCHAR(3,@07),@CC02408                             1650
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1651
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1651
         MVC   FLDCHAR+12(3,@07),@CC02406                          1651
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1654
*               END TBNDCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1656
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE 'WRITE INHIBIT' ATTRIBUTE         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1656
*TWRTCASE:                                                         1656
*               DO;                 /* SUBCASE               @Z40LB64*/
TWRTCASE DS    0H                                                  1657
*                 IF BCDBASE=ON THEN                               1657
         TM    BCDBASE(BCDVPTR),B'00100000'                        1657
         BNO   @RF01657                                            1657
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVWRTINH=ON&BASRONLY=OFF) THEN            1659
         TM    TVWRTINH(TVENTPTR),B'00000010'                      1659
         BNO   @RF01659                                            1659
         TM    BASRONLY(BASEVPTR),B'01000000'                      1659
         BNZ   @RF01659                                            1659
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1661
*                         WISFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1662
         OI    WISFLD(@07),B'00000100'                             1662
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1663
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1663
         MVC   FLDCHAR(3,@07),@CC02406                             1663
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1664
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1664
         MVC   FLDCHAR+12(3,@07),@CC02408                          1664
*                       END;        /*                       @Z40LB64*/
*                     IF(TVWRTINH=OFF&BASRONLY=ON) THEN            1666
@RF01659 TM    TVWRTINH(TVENTPTR),B'00000010'                      1666
         BNZ   @RF01666                                            1666
         TM    BASRONLY(BASEVPTR),B'01000000'                      1666
         BNO   @RF01666                                            1666
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1668
*                         WISFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1669
         OI    WISFLD(@07),B'00000100'                             1669
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1670
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1670
         MVC   FLDCHAR(3,@07),@CC02408                             1670
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1671
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1671
         MVC   FLDCHAR+12(3,@07),@CC02406                          1671
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
@RF01666 DS    0H                                                  1674
*                 IF BCDCOPY=ON THEN                               1674
@RF01657 TM    BCDCOPY(BCDVPTR),B'00010000'                        1674
         BNO   @RF01674                                            1674
*                   DO;             /*                       @Z40LB64*/
*                     IF(TVWRTINH=ON&COPRONLY=OFF) THEN            1676
         TM    TVWRTINH(TVENTPTR),B'00000010'                      1676
         BNO   @RF01676                                            1676
         L     @07,COPYVPTR                                        1676
         TM    COPRONLY(@07),B'10000000'                           1676
         BNZ   @RF01676                                            1676
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1678
*                         WISFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1679
         OI    WISFLD(@07),B'00000100'                             1679
*                         FLDCHAR(1)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1680
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1680
         MVC   FLDCHAR(3,@07),@CC02406                             1680
*                         FLDCHAR(2)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1681
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1681
         MVC   FLDCHAR+12(3,@07),@CC02408                          1681
*                       END;        /*                       @Z40LB64*/
*                     IF(TVWRTINH=OFF&COPRONLY=ON) THEN            1683
@RF01676 TM    TVWRTINH(TVENTPTR),B'00000010'                      1683
         BNZ   @RF01683                                            1683
         L     @07,COPYVPTR                                        1683
         TM    COPRONLY(@07),B'10000000'                           1683
         BNO   @RF01683                                            1683
*                       DO;         /*                       @Z40LB64*/
*                         ERRFLAG=ON;/*                      @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1685
*                         WISFLD=ON;/*                       @Z40LB64*/
         L     @07,MARGPTR                                         1686
         OI    WISFLD(@07),B'00000100'                             1686
*                         FLDCHAR(1)=STATNO;/*               @Z40LB64*/
         MVI   FLDCHAR+3(@07),C' '                                 1687
         MVC   FLDCHAR+4(8,@07),FLDCHAR+3(@07)                     1687
         MVC   FLDCHAR(3,@07),@CC02408                             1687
*                         FLDCHAR(2)=STATYES;/*              @Z40LB64*/
         MVI   FLDCHAR+15(@07),C' '                                1688
         MVC   FLDCHAR+16(8,@07),FLDCHAR+15(@07)                   1688
         MVC   FLDCHAR+12(3,@07),@CC02406                          1688
*                       END;        /*                       @Z40LB64*/
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1691
*               END TWRTCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1693
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE VOLUME IDENTIFIER                 @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1693
*TVOLCASE:                                                         1693
*               DO;                 /* SUBCASE               @Z40LB64*/
TVOLCASE DS    0H                                                  1694
*                 IF TVVOLID^=BCDSERNO THEN                        1694
         CLC   TVVOLID(6,TVENTPTR),BCDSERNO(BCDVPTR)               1694
         BE    @RF01694                                            1694
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1696
*                     VSNFLD=ON;    /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1697
         OI    VSNFLD(@07),B'00000001'                             1697
*                     FLDCHAR(1)=TVVOLID;/*                  @Z40LB64*/
         MVI   FLDCHAR+6(@07),C' '                                 1698
         MVC   FLDCHAR+7(5,@07),FLDCHAR+6(@07)                     1698
         MVC   FLDCHAR(6,@07),TVVOLID(TVENTPTR)                    1698
*                     FLDCHAR(2)=BCDSERNO;/*                 @Z40LB64*/
         MVI   FLDCHAR+18(@07),C' '                                1699
         MVC   FLDCHAR+19(5,@07),FLDCHAR+18(@07)                   1699
         MVC   FLDCHAR+12(6,@07),BCDSERNO(BCDVPTR)                 1699
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1701
*               END TVOLCASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1703
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE SEQ #1 CTG MSF IDENTIFIER         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1703
*TMF1CASE:                                                         1703
*               DO;                 /* SUBCASE               @Z40LB64*/
TMF1CASE DS    0H                                                  1704
*                 TEMPBYTE=TVLZYX1/LIBSHIFT;/*               @Z40LB64*/
         LH    TEMPBYTE,TVLZYX1(,TVENTPTR)                         1704
         N     TEMPBYTE,@CF02684                                   1704
         SRL   TEMPBYTE,14                                         1704
*                 IF TEMPBYTE^=BCDLIB1 THEN                        1705
         SLR   @07,@07                                             1705
         IC    @07,BCDLIB1(,BCDVPTR)                               1705
         CR    TEMPBYTE,@07                                        1705
         BE    @RF01705                                            1705
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1707
*                     MSFFLD=ON;    /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1708
         OI    MSFFLD(@15),B'00000010'                             1708
*                     FLDNUM(1)=TEMPBYTE;/*                  @Z40LB64*/
         ST    TEMPBYTE,FLDNUM(,@15)                               1709
*                     FLDNUM(2)=BCDLIB1;/*                   @Z40LB64*/
         ST    @07,FLDNUM+12(,@15)                                 1710
*                   END;            /*                       @Z40LB64*/
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1712
*               END TMF1CASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1714
*               /*****************************************************/
*               /*                                                   */
*               /* COMPARE SEQ #2 CTG MSF IDENTIFIER         @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1714
*TMF2CASE:                                                         1714
*               DO;                 /* SUBCASE               @Z40LB64*/
TMF2CASE DS    0H                                                  1715
*                 TEMPBYTE=TVLZYX2/LIBSHIFT;/*               @Z40LB64*/
         LH    TEMPBYTE,TVLZYX2(,TVENTPTR)                         1715
         N     TEMPBYTE,@CF02684                                   1715
         SRL   TEMPBYTE,14                                         1715
*                 IF TEMPBYTE^=BCDLIB2 THEN                        1716
         SLR   @07,@07                                             1716
         IC    @07,BCDLIB2(,BCDVPTR)                               1716
         CR    TEMPBYTE,@07                                        1716
         BE    @RF01716                                            1716
*                   DO;             /*                       @Z40LB64*/
*                     ERRFLAG=ON;   /*                       @Z40LB64*/
         OI    ERRFLAG,B'10000000'                                 1718
*                     MSFFLD=ON;    /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1719
         OI    MSFFLD(@15),B'00000010'                             1719
*                     FLDNUM(1)=TEMPBYTE;/*                  @Z40LB64*/
         ST    TEMPBYTE,FLDNUM(,@15)                               1720
*                     FLDNUM(2)=BCDLIB2;/*                   @Z40LB64*/
         ST    @07,FLDNUM+12(,@15)                                 1721
*                   END;            /*                       @Z40LB64*/
*                 CASEFLAG=ON;      /*                       @Z40LB64*/
@RF01716 OI    CASEFLAG,B'10000000'                                1723
*                 GOTO CE0003@;     /* BRANCH TO END OF CASE         */
         B     CE0003@                                             1724
*               END TMF2CASE;       /* END OF SUBCASE                */
*/*  @Z40LB64                                                        */
*                                                                  1726
*CE0003@:                                                          1726
*             END;                  /* END OF CASE                   */
CE0003@  DS    0H                                                  1727
*/*@Z40LB64                                                          */
*                                                                  1727
*             /*******************************************************/
*             /*                                                     */
*             /* IF COMPARED FIELDS DID NOT MATCH,           @Z40LB64*/
*             /* PRINT THE APPROPRIATE ERROR MESSAGE         @Z40LB64*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1727
*             IF ERRFLAG=ON THEN                                   1727
         TM    ERRFLAG,B'10000000'                                 1727
         BNO   @RF01727                                            1727
*               DO;                 /*                       @Z40LB64*/
*                 INCNMSG=ON;       /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1729
         OI    INCNMSG(@07),B'10000000'                            1729
*                 TVLTBL(1)=ON;     /*                       @Z40LB64*/
         OI    TVLTBL(@07),B'00100000'                             1730
*                 MSVITBL(2)=ON;    /*                       @Z40LB64*/
         OI    MSVITBL+4(@07),B'00001000'                          1731
*                 CHRINDEX(1)=PREVCHR;/*                     @Z40LB64*/
         L     @03,EARGPTR                                         1732
         MVC   CHRINDEX(5,@07),PREVCHR(@03)                        1732
*                 VSNINDEX(1)=TVVOLID;/*                     @Z40LB64*/
         MVC   VSNINDEX(6,@07),TVVOLID(TVENTPTR)                   1733
*                 CSNINDEX(1)=TVCSN;/*                       @Z40LB64*/
         MVC   CSNINDEX(12,@07),TVCSN(TVENTPTR)                    1734
*                 KEYINDEX(2)=BCDNAME;/*                     @Z40LB64*/
         MVC   KEYINDEX+24(13,@07),BCDNAME(BCDVPTR)                1735
*                 CALL IDCCH04(GDTTBL,CDALIST);/*            @Z40LB64*/
         L     @07,@PC00001                                        1736
         ST    @07,@AL00001                                        1736
         LA    @07,CDALIST                                         1736
         ST    @07,@AL00001+4                                      1736
         L     @15,@CV02185                                        1736
         LA    @01,@AL00001                                        1736
         BALR  @14,@15                                             1736
*                 ERRFLAG=OFF;      /*                       @Z40LB64*/
         NI    ERRFLAG,B'01111111'                                 1737
*               END;                /*                       @Z40LB64*/
*           END TVLCASES;           /*                       @Z40LB64*/
*                                                                  1739
@RF01727 DS    0H                                                  1739
@DE01539 TM    CASEFLAG,B'10000000'                                1739
         BZ    @DL01539                                            1739
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE IF THE TRANSIENT VOLUME LIST        @Z40LB64*/
*           /* ENTRY IS ALREADY CHECKED-OFF. IF SO,          @Z40LB64*/
*           /* PRINT AN ERROR MESSAGE.                       @Z40LB64*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1740
*           IF(TVVOLID=BCDSERNO)&((TVLCHKFF(BYTE#)&BITMASK(BIT#))^=0)
*             THEN                                                 1740
         CLC   TVVOLID(6,TVENTPTR),BCDSERNO(BCDVPTR)               1740
         BNE   @RF01740                                            1740
         L     @03,EARGPTR                                         1740
         LH    @01,BYTE#(,@03)                                     1740
         LH    @03,BIT#(,@03)                                      1740
         L     @15,TVLCOPTR                                        1740
         AL    @15,@CF02349                                        1740
         SLR   @14,@14                                             1740
         IC    @14,TVLCHKFF(@01,@15)                               1740
         SLR   @15,@15                                             1740
         IC    @15,BITMASK-1(@03)                                  1740
         NR    @14,@15                                             1740
         LTR   @14,@14                                             1740
         BZ    @RF01740                                            1740
*             DO;                   /*                       @Z40LB64*/
*                                                                  1741
*               /*****************************************************/
*               /*                                                   */
*               /* TRANSIENT VOLUME LIST ENTRY IS            @Z40LB64*/
*               /* ALREADY CHECKED-OFF.                      @Z40LB64*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1742
*               DUPLMSG=ON;         /*                       @Z40LB64*/
         L     @03,MARGPTR                                         1742
         OI    DUPLMSG(@03),B'01000000'                            1742
*               MSVITBL(1)=ON;      /*                       @Z40LB64*/
         OI    MSVITBL(@03),B'00001000'                            1743
*               CSNFLD=ON;          /*                       @Z40LB64*/
         OI    CSNFLD(@03),B'10000000'                             1744
*               FLDCHAR(1)=TVCSN;   /*                       @Z40LB64*/
         MVC   FLDCHAR(12,@03),TVCSN(TVENTPTR)                     1745
*               KEYINDEX(1)=BCDNAME;/*                       @Z40LB64*/
         MVC   KEYINDEX(13,@03),BCDNAME(BCDVPTR)                   1746
*               CALL IDCCH04(GDTTBL,CDALIST,LASTCOND);             1747
         L     @15,@PC00001                                        1747
         ST    @15,@AL00001                                        1747
         LA    @15,CDALIST                                         1747
         ST    @15,@AL00001+4                                      1747
         L     @15,@PC00001+8                                      1747
         ST    @15,@AL00001+8                                      1747
         L     @15,@CV02185                                        1747
         LA    @01,@AL00001                                        1747
         BALR  @14,@15                                             1747
*               IF LASTCOND^=0 THEN                                1748
         L     @15,@PC00001+8                                      1748
         LH    @15,LASTCOND(,@15)                                  1748
         LTR   @15,@15                                             1748
         BNZ   @RT01748                                            1748
*                 RETURN;           /*                       @Z40LB64*/
*             END;                  /*                       @Z40LB64*/
*           ELSE                                                   1751
*                                                                  1751
*             /*******************************************************/
*             /*                                                     */
*             /* TRANSIENT VOLUME LIST ENTRY IS NOT          @Z40LB64*/
*             /* ALREADY CHECKED-OFF. CHECK-OFF THE          @Z40LB64*/
*             /* TRANSIENT VOLUME LIST ENTRY.                @Z40LB64*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1751
*             TVLCHKFF(BYTE#)=TVLCHKFF(BYTE#)×BITMASK(BIT#);/*     1751
*                                                            @Z40LB64*/
         B     @RC01740                                            1751
@RF01740 L     @15,EARGPTR                                         1751
         LH    @01,BYTE#(,@15)                                     1751
         L     @14,TVLCOPTR                                        1751
         ALR   @14,@01                                             1751
         AL    @14,@CF02349                                        1751
         LH    @01,BIT#(,@15)                                      1751
         LA    @15,BITMASK-1(@01)                                  1751
         OC    TVLCHKFF(1,@14),0(@15)                              1751
*         END MSVITVL2;             /*                       @Z40LB64*/
*                                                                  1752
@RC01740 DS    0H                                                  1753
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE MSC TRANSIENT VOLUME LIST ENTRY WAS NOT    @Z40LB64*/
*       /* FOUND, PRINT THE APPROPRIATE ERROR MESSAGE.       @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1753
*       IF GETRC=NOTFOUND THEN                                     1753
@RF01533 L     @01,EARGPTR                                         1753
         CLC   GETRC(2,@01),@CH00181                               1753
         BNE   @RF01753                                            1753
*         DO;                       /*                       @Z40LB64*/
*           MTCHMSG=ON;             /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1755
         OI    MTCHMSG(@15),B'00010000'                            1755
*           CSNFLD=ON;              /*                       @Z40LB64*/
         OI    CSNFLD(@15),B'10000000'                             1756
*           FLDCHAR(1)=BCDCSN1;     /*                       @Z40LB64*/
         MVC   FLDCHAR(12,@15),BCDCSN1(BCDVPTR)                    1757
*           TVLTBL(1)=ON;           /*                       @Z40LB64*/
         OI    TVLTBL(@15),B'00100000'                             1758
*           MSVITBL(2)=ON;          /*                       @Z40LB64*/
         OI    MSVITBL+4(@15),B'00001000'                          1759
*           KEYINDEX(2)=BCDNAME;    /*                       @Z40LB64*/
         MVC   KEYINDEX+24(13,@15),BCDNAME(BCDVPTR)                1760
*           CALL IDCCH04(GDTTBL,CDALIST);/*                  @Z40LB64*/
         L     @15,@PC00001                                        1761
         ST    @15,@AL00001                                        1761
         LA    @15,CDALIST                                         1761
         ST    @15,@AL00001+4                                      1761
         L     @15,@CV02185                                        1761
         LA    @01,@AL00001                                        1761
         BALR  @14,@15                                             1761
*         END;                      /*                       @Z40LB64*/
*                                                                  1762
*       /*************************************************************/
*       /*                                                           */
*       /* IF AN ERROR WAS ENCOUNTERED TRYING TO OBTAIN      @Z40LB64*/
*       /* THE MSC TRANSIENT VOLUME LIST ENTRY, TERMINATE    @Z40LB64*/
*       /* CHECKMSS PROCESSING.                              @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1763
*       IF GETRC=TABLERR THEN                                      1763
@RF01753 LA    @15,12                                              1763
         L     @01,EARGPTR                                         1763
         CH    @15,GETRC(,@01)                                     1763
         BNE   @RF01763                                            1763
*         DO;                       /*                       @Z40LB64*/
*           LASTCOND=LASTCC12;      /*                       @Z40LB64*/
         L     @14,@PC00001+8                                      1765
         STH   @15,LASTCOND(,@14)                                  1765
*           RETURN;                 /*                       @Z40LB64*/
         B     @EL00009                                            1766
*         END;                      /*                       @Z40LB64*/
*     END MSVITVL1;                 /*                       @Z40LB64*/
*   END VOLREC;                     /*                       @Z40LB64*/
         B     @EL00009                                            1769
*                                                                  1770
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - CPUREC                                @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - COMPARES THE MSVI BASE VOLUME RECORD FOR    @Z40LB64*/
*/*              MOUNTED VOLUMES AGAINST THE MSC MOUNTED     @Z40LB64*/
*/*              VOLUME TABLE VIA THE MSVI CPU RECORD AND    @Z40LB64*/
*/*              THE MSC MANUFACTURER'S ID CONVERSION TABLE. @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE CPU IDENTIFIERS FOR EACH INTERFACE IN   @Z40LB64*/
*/*              THE MOUNTED VOLUME TABLE IS MATCHED TO A    @Z40LB64*/
*/*              MANUFACTURER'S IDENTIFIER IN THE            @Z40LB64*/
*/*              MANUFACTURER'S ID CONVERSION TABLE WHICH    @Z40LB64*/
*/*              IS THEN COMPARED AGAINST THE LIST OF        @Z40LB64*/
*/*              MANUFACTURER'S IDENTIFIERS IN THE MSVI CPU  @Z40LB64*/
*/*              RECORD.                                     @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - (1) THE MSVI BASE VOLUME RECORD FOR A MOUNTED  @Z40LB64*/
*/*               VOLUME.                                    @Z40LB64*/
*/*           (2) THE MATCHING MOUNTED VOLUME TABLE ENTRY    @Z40LB64*/
*/*               (OBTAINED BY THE 'CPUREC' PROCEDURE).      @Z40LB64*/
*/*           (3) THE MSVI CPU RECORD.                       @Z40LB64*/
*/*           (4) THE MSC MANUFACTURER'S ID CONVERSION       @Z40LB64*/
*/*               TABLE.                                     @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - ERROR MESSAGES ARE PRINTED IF -               @Z40LB64*/
*/*            (1) A MATCHING MOUNTED VOLUME TABLE ENTRY     @Z40LB64*/
*/*                WAS NOT FOUND.                            @Z40LB64*/
*/*            (2) THE MANUFACTURER'S ID CONVERSION TABLE    @Z40LB64*/
*/*                ENTRY WAS INCONSISTENT WITH THE MOUNTED   @Z40LB64*/
*/*                VOLUME TABLE ENTRY.                       @Z40LB64*/
*/*            (3) A MATCHING MANUFACTURER'S ID WAS NOT      @Z40LB64*/
*/*                FOUND FOR THE MSVI BASE VOLUME RECORD     @Z40LB64*/
*/*                TO MATCH THE MOUNTED VOLUME TABLE.        @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  1770
*CPUREC:                                                           1770
*   PROCEDURE;                      /*                       @Z40LB64*/
CPUREC   STM   @14,@12,@SA00010                                    1770
*   OLDERID2=NEWERID2;                                             1771
         L     @05,@PC00001                                        1771
         L     @15,GDTTR2(,@05)                                    1771
         MVC   @TS00001(95),NEWERID2(@15)                          1771
         MVC   OLDERID2(95,@15),@TS00001                           1771
*   NEWID2='CH1J';                  /*                       @Z40LB64*/
*                                                                  1772
         MVC   NEWID2(4,@15),@CC02574                              1772
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE MSC MOUNTED VOLUME TABLE ENTRY WITH THE    @Z40LB64*/
*   /* SAME VOLUME IDENTIFIER AS THE MSVI BASE VOLUME        @Z40LB64*/
*   /* RECORD.                                               @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1773
*   TABLEID=MVTBLID;                /*                       @Z40LB64*/
         L     @15,EARGPTR                                         1773
         MVC   TABLEID(1,@15),MVTBLID                              1773
*   VOLID=BASSERNO;                 /*                       @Z40LB64*/
         MVC   VOLID(6,@15),BASSERNO(BASEVPTR)                     1774
*   CALL IDCCH03(GDTTBL,CDALIST);   /*                       @Z40LB64*/
*                                                                  1775
         ST    @05,@AL00001                                        1775
         LA    @05,CDALIST                                         1775
         ST    @05,@AL00001+4                                      1775
         L     @15,@CV02184                                        1775
         LA    @01,@AL00001                                        1775
         BALR  @14,@15                                             1775
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE MATCHING MOUNTED VOLUME TABLE ENTRY WAS        @Z40LB64*/
*   /* SUCCESSFULLY OBTAINED, COMPARE THE MANUFACTURER'S     @Z40LB64*/
*   /* IDENTIFIERS OF THE ASSOCIATED CPUS BETWEEN THE MSVI   @Z40LB64*/
*   /* BASE VOLUME RECORD AND MOUNTED VOLUME TABLE ENTRY.    @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1776
*   IF GETRC=0 THEN                                                1776
         L     @05,EARGPTR                                         1776
         LH    @05,GETRC(,@05)                                     1776
         LTR   @05,@05                                             1776
         BNZ   @RF01776                                            1776
*MFRIDCHK:                                                         1777
*     DO;                           /*                       @Z40LB64*/
*                                                                  1777
MFRIDCHK DS    0H                                                  1778
*       /*************************************************************/
*       /*                                                           */
*       /* MOUNTED VOLUME TABLE ENTRY SUCCESSFULLY           @Z40LB64*/
*       /* OBTAINED. CHECK-OFF THE CORRESPONDING ENTRY       @Z40LB64*/
*       /* IN THE MOUNTED VOLUME TABLE CHECK-OFF TABLE.      @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1778
*       MVENTPTR=TBLADDR;           /*                       @Z40LB64*/
         L     @05,EARGPTR                                         1778
         L     MVENTPTR,TBLADDR(,@05)                              1778
*       MVTCHKFF(BYTE#)=MVTCHKFF(BYTE#)×BITMASK(BIT#);/*     @Z40LB64*/
*                                                                  1779
         LH    @03,BYTE#(,@05)                                     1779
         L     @01,MVTCOPTR                                        1779
         ALR   @01,@03                                             1779
         AL    @01,@CF02349                                        1779
         LH    @05,BIT#(,@05)                                      1779
         LA    @03,BITMASK-1(@05)                                  1779
         OC    MVTCHKFF(1,@01),0(@03)                              1779
*       /*************************************************************/
*       /*                                                           */
*       /* FOR EACH VALID AND ACTIVE INTERFACE (B,C,D)       @Z40LB64*/
*       /* IN THE MOUNTED VOLUME TABLE ENTRY, USE THE        @Z40LB64*/
*       /* CPU IDENTIFIER TO INDEX INTO THE MSC              @Z40LB64*/
*       /* MANUFACTURER'S ID CONVERSION TABLE.               @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1780
*       CPUCHKFF=0;                 /*                       @Z40LB64*/
         SLR   @05,@05                                             1780
         STCM  @05,3,CPUCHKFF                                      1780
*SAVLDCHK:                                                         1781
*       DO MVPATH#=1 TO INTFSSA;    /*                       @Z40LB64*/
SAVLDCHK LA    MVPATH#,1                                           1781
@DL01781 DS    0H                                                  1782
*         IF MVVLDSA(MVPATH#)=ON THEN                              1782
         LR    @05,MVPATH#                                         1782
         SLA   @05,3                                               1782
         ALR   @05,MVENTPTR                                        1782
         TM    MVVLDSA-8(@05),B'10000000'                          1782
         BNO   @RF01782                                            1782
*MVTINTF:                                                          1783
*           DO INTF#=1 TO DIM(MVCPUID);/*                    @Z40LB64*/
MVTINTF  LA    INTF#,1                                             1783
@DL01783 DS    0H                                                  1784
*             IF(INTF#=1&MVACTB(MVPATH#)=ON)×(INTF#=2&MVACTC(MVPATH#)=
*                 ON)×(INTF#=3&MVACTD(MVPATH#)=ON) THEN            1784
         C     INTF#,@CF00221                                      1784
         BNE   @GL00041                                            1784
         LR    @15,MVPATH#                                         1784
         SLA   @15,3                                               1784
         ALR   @15,MVENTPTR                                        1784
         TM    MVACTB-8(@15),B'01000000'                           1784
         BO    @RT01784                                            1784
@GL00041 C     INTF#,@CF00155                                      1784
         BNE   @GL00040                                            1784
         LR    @15,MVPATH#                                         1784
         SLA   @15,3                                               1784
         ALR   @15,MVENTPTR                                        1784
         TM    MVACTC-8(@15),B'00100000'                           1784
         BO    @RT01784                                            1784
@GL00040 C     INTF#,@CF00164                                      1784
         BNE   @RF01784                                            1784
         LR    @15,MVPATH#                                         1784
         SLA   @15,3                                               1784
         ALR   @15,MVENTPTR                                        1784
         TM    MVACTD-8(@15),B'00010000'                           1784
         BNO   @RF01784                                            1784
@RT01784 DS    0H                                                  1785
*INTFOKAY:                                                         1785
*               DO;                 /*                       @Z40LB64*/
INTFOKAY DS    0H                                                  1786
*                 MFRID#=MVCPUID(INTF#)&CPUIDMSK;/*          @Z40LB64*/
*                                                                  1786
         LR    @15,MVPATH#                                         1786
         SLA   @15,3                                               1786
         LA    @15,MVCPUIDS-8(@15,MVENTPTR)                        1786
         AL    @15,@CF02349                                        1786
         SLR   @14,@14                                             1786
         IC    @14,MVCPUID(INTF#,@15)                              1786
         SLR   MFRID#,MFRID#                                       1786
         IC    MFRID#,CPUIDMSK                                     1786
         NR    MFRID#,@14                                          1786
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THE MANUFACTURER'S ID CONVERSION     @Z40LB64*/
*                 /* TABLE ENTRY IS NOT VALID, PRINT AN      @Z40LB64*/
*                 /* ERROR MESSAGE.                          @Z40LB64*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1787
*                 IF MICVALID(MFRID#+1)=OFF THEN                   1787
         LR    @06,MFRID#                                          1787
         SLA   @06,3                                               1787
         L     @01,MICPTR                                          1787
         ALR   @01,@06                                             1787
         TM    MICVALID(@01),B'10000000'                           1787
         BNZ   @RF01787                                            1787
*                   DO;             /*                       @Z40LB64*/
*                     INCNMSG=ON;   /*                       @Z40LB64*/
         L     @15,MARGPTR                                         1789
         OI    INCNMSG(@15),B'10000000'                            1789
*                     MVTTBL(1)=ON; /*                       @Z40LB64*/
         OI    MVTTBL(@15),B'10000000'                             1790
*                     MICTTBL(2)=ON;/*                       @Z40LB64*/
         OI    MICTTBL+4(@15),B'00000010'                          1791
*                     IUSFLD=ON;    /*                       @Z40LB64*/
         OI    IUSFLD(@15),B'00000001'                             1792
*                     FLDCHAR(1)=STATYES;/*                  @Z40LB64*/
         MVI   FLDCHAR+3(@15),C' '                                 1793
         MVC   FLDCHAR+4(8,@15),FLDCHAR+3(@15)                     1793
         MVC   FLDCHAR(3,@15),@CC02406                             1793
*                     FLDCHAR(2)=STATNO;/*                   @Z40LB64*/
         MVI   FLDCHAR+15(@15),C' '                                1794
         MVC   FLDCHAR+16(8,@15),FLDCHAR+15(@15)                   1794
         MVC   FLDCHAR+12(3,@15),@CC02408                          1794
*                     VSNINDEX(1)=MVVOLID;/*                 @Z40LB64*/
         MVC   VSNINDEX(6,@15),MVVOLID(MVENTPTR)                   1795
*                     CHRINDEX(1)=PREVCHR;/*                 @Z40LB64*/
         L     @01,EARGPTR                                         1796
         MVC   CHRINDEX(5,@15),PREVCHR(@01)                        1796
*                     CPUINDEX(2)=MVCPUID(INTF#);/*          @Z40LB64*/
         STC   @14,CPUINDEX+24(,@15)                               1797
*                     CHRINDEX(2)=MICTCHR;/*                 @Z40LB64*/
         MVC   CHRINDEX+24(5,@15),MICTCHR                          1798
*                     CALL IDCCH04(GDTTBL,CDALIST);/*        @Z40LB64*/
         L     @15,@PC00001                                        1799
         ST    @15,@AL00001                                        1799
         LA    @15,CDALIST                                         1799
         ST    @15,@AL00001+4                                      1799
         L     @15,@CV02185                                        1799
         LA    @01,@AL00001                                        1799
         BALR  @14,@15                                             1799
*                   END;            /*                       @Z40LB64*/
*                 ELSE                                             1801
*MICTOKAY:                                                         1801
*                   DO;             /*                       @Z40LB64*/
*                                                                  1801
         B     @RC01787                                            1801
@RF01787 DS    0H                                                  1801
MICTOKAY DS    0H                                                  1802
*                     /***********************************************/
*                     /*                                             */
*                     /* THE MANUFACTURER'S ID CONVERSION    @Z40LB64*/
*                     /* TABLE (MICT) ENTRY IS VALID. COMPARE        */
*                     /*                                     @Z40LB64*/
*                     /* THE MICT MANUFACTURER'S IDENTIFIER  @Z40LB64*/
*                     /* WITH THE LIST OF IDENTIFIERS IN THE @Z40LB64*/
*                     /* MSVI CPU RECORD ENTRIES WHICH ARE   @Z40LB64*/
*                     /* FLAGGED IN THE BASE VOLUME RECORD.  @Z40LB64*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  1802
*                     CPUFLAG=OFF;  /*                       @Z40LB64*/
         NI    CPUFLAG,B'01111111'                                 1802
*                     TEMPHWRD=BASCPUID;/*                   @Z40LB64*/
         LH    @06,BASCPUID(,BASEVPTR)                             1803
         N     @06,@CF02684                                        1803
         STH   @06,TEMPHWRD                                        1803
*                     MTCHMASK=HWRDMASK;/*                   @Z40LB64*/
         LH    @06,HWRDMASK                                        1804
         N     @06,@CF02684                                        1804
         STH   @06,MTCHMASK                                        1804
*CPULOOP:                                                          1805
*                     DO CPUID#=1 TO DIM(CPUMAP) WHILE CPUFLAG=OFF;/*
*                                                            @Z40LB64*/
CPULOOP  LA    CPUID#,1                                            1805
@DL01805 TM    CPUFLAG,B'10000000'                                 1805
         BNZ   @DC01805                                            1805
*                       IF TEMPHWRD>MTCHMASK THEN                  1806
         CLC   TEMPHWRD(2),MTCHMASK                                1806
         BNH   @RF01806                                            1806
*                         DO;       /*                       @Z40LB64*/
*                                                                  1807
*                           /*****************************************/
*                           /*                                       */
*                           /* CPU ASSOCIATION FLAGGED IN    @Z40LB64*/
*                           /* MSIV BASE VOLUME RECORD.      @Z40LB64*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  1808
*                           IF MICMFID(MFRID#+1)=CPUIDREC(CPUID#) THEN
         LR    @15,MFRID#                                          1808
         SLA   @15,3                                               1808
         LR    @14,CPUID#                                          1808
         SLA   @14,3                                               1808
         L     @01,MICPTR                                          1808
         ALR   @01,@15                                             1808
         L     @15,CPUIDPTR                                        1808
         ALR   @15,@14                                             1808
         CLC   MICMFID(5,@01),CPUIDREC-8(@15)                      1808
         BNE   @RF01808                                            1808
*                             DO;   /*                       @Z40LB64*/
*                                                                  1809
*                               /*************************************/
*                               /*                                   */
*                               /* MATCHING MFR IDENTIFIER   @Z40LB64*/
*                               /* FOUND IN MSVI CPU RECORD. @Z40LB64*/
*                               /* CHECK-OFF THE CPU         @Z40LB64*/
*                               /* ASSOCIATION FOR THE       @Z40LB64*/
*                               /* BASE VOLUME RECORD.       @Z40LB64*/
*                               /*                                   */
*                               /*************************************/
*                                                                  1810
*                               CPUCHKFF=CPUCHKFF×(TEMPHWRD&(MTCHMASK+1
*                                   ));/*                    @Z40LB64*/
         LA    @15,1                                               1810
         LH    @14,MTCHMASK                                        1810
         N     @14,@CF02684                                        1810
         ALR   @15,@14                                             1810
         LH    @14,TEMPHWRD                                        1810
         N     @14,@CF02684                                        1810
         NR    @15,@14                                             1810
         SLR   @14,@14                                             1810
         ICM   @14,3,CPUCHKFF                                      1810
         OR    @15,@14                                             1810
         STCM  @15,3,CPUCHKFF                                      1810
*                               CPUFLAG=ON;/*                @Z40LB64*/
         OI    CPUFLAG,B'10000000'                                 1811
*                             END;  /*                       @Z40LB64*/
*                           TEMPHWRD=TEMPHWRD&MTCHMASK;/*    @Z40LB64*/
@RF01808 LH    @15,MTCHMASK                                        1813
         N     @15,@CF02684                                        1813
         LH    @14,TEMPHWRD                                        1813
         N     @14,@CF02684                                        1813
         NR    @15,@14                                             1813
         STH   @15,TEMPHWRD                                        1813
*                         END;      /*                       @Z40LB64*/
*                       MTCHMASK=MTCHMASK/2;/*               @Z40LB64*/
@RF01806 LH    @15,MTCHMASK                                        1815
         N     @15,@CF02684                                        1815
         SRL   @15,1                                               1815
         STH   @15,MTCHMASK                                        1815
*                     END CPULOOP;  /*                       @Z40LB64*/
*                                                                  1816
         AL    CPUID#,@CF00221                                     1816
         C     CPUID#,@CF00476                                     1816
         BNH   @DL01805                                            1816
@DC01805 DS    0H                                                  1817
*                     /***********************************************/
*                     /*                                             */
*                     /* IF A MATCHING MFR IDENTIFIER WAS    @Z40LB64*/
*                     /* NOT FOUND IN THE MSVI CPU RECORD,   @Z40LB64*/
*                     /* PRINT AN ERROR MESSAGE.             @Z40LB64*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  1817
*                     IF CPUFLAG=OFF THEN                          1817
         TM    CPUFLAG,B'10000000'                                 1817
         BNZ   @RF01817                                            1817
*                       DO;         /*                       @Z40LB64*/
*                         MTCHMSG=ON;/*                      @Z40LB64*/
         L     @06,MARGPTR                                         1819
         OI    MTCHMSG(@06),B'00010000'                            1819
*                         MSVITBL(1)=ON;/*                   @Z40LB64*/
         OI    MSVITBL(@06),B'00001000'                            1820
*                         MVTTBL(2)=ON;/*                    @Z40LB64*/
         OI    MVTTBL+4(@06),B'10000000'                           1821
*                         MIFLD=ON; /*                       @Z40LB64*/
         OI    MIFLD(@06),B'10000000'                              1822
*                         FLDCHAR(1)=MICMFID(MFRID#+1);/*    @Z40LB64*/
         MVI   FLDCHAR+5(@06),C' '                                 1823
         MVC   FLDCHAR+6(6,@06),FLDCHAR+5(@06)                     1823
         LR    @15,MFRID#                                          1823
         SLA   @15,3                                               1823
         L     @01,MICPTR                                          1823
         ALR   @01,@15                                             1823
         MVC   FLDCHAR(5,@06),MICMFID(@01)                         1823
*                         VSNINDEX(2)=MVVOLID;/*             @Z40LB64*/
         MVC   VSNINDEX+24(6,@06),MVVOLID(MVENTPTR)                1824
*                         CHRINDEX(2)=PREVCHR;/*             @Z40LB64*/
         L     @07,EARGPTR                                         1825
         MVC   CHRINDEX+24(5,@06),PREVCHR(@07)                     1825
*                         CALL IDCCH04(GDTTBL,CDALIST);/*    @Z40LB64*/
         L     @15,@PC00001                                        1826
         ST    @15,@AL00001                                        1826
         LA    @15,CDALIST                                         1826
         ST    @15,@AL00001+4                                      1826
         L     @15,@CV02185                                        1826
         LA    @01,@AL00001                                        1826
         BALR  @14,@15                                             1826
*                       END;        /*                       @Z40LB64*/
*                   END MICTOKAY;   /*                       @Z40LB64*/
@RF01817 DS    0H                                                  1829
*               END INTFOKAY;       /*                       @Z40LB64*/
@RC01787 DS    0H                                                  1830
*           END MVTINTF;            /*                       @Z40LB64*/
@RF01784 AL    INTF#,@CF00221                                      1830
         C     INTF#,@CF00164                                      1830
         BNH   @DL01783                                            1830
*       END SAVLDCHK;               /*                       @Z40LB64*/
*                                                                  1831
@RF01782 AL    MVPATH#,@CF00221                                    1831
         C     MVPATH#,@CF00155                                    1831
         BNH   @DL01781                                            1831
*       /*************************************************************/
*       /*                                                           */
*       /* VERIFY THAT ALL CPU ASSOCIATIONS FLAGGED IN       @Z40LB64*/
*       /* THE BASE VOLUME RECORD HAVE BEEN REFERENCED       @Z40LB64*/
*       /* BY THE MOUNTED VOLUME TABLE ENTRY.                @Z40LB64*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1832
*       TEMPHWRD=BASCPUID;          /*                       @Z40LB64*/
         LH    @05,BASCPUID(,BASEVPTR)                             1832
         N     @05,@CF02684                                        1832
         STH   @05,TEMPHWRD                                        1832
*       MTCHMASK=HWRDMASK;          /*                       @Z40LB64*/
         LH    @05,HWRDMASK                                        1833
         N     @05,@CF02684                                        1833
         STH   @05,MTCHMASK                                        1833
*CPUCHECK:                                                         1834
*       DO CPUID#=1 TO DIM(CPUMAP); /*                       @Z40LB64*/
CPUCHECK LA    CPUID#,1                                            1834
@DL01834 DS    0H                                                  1835
*         IF TEMPHWRD>MTCHMASK THEN                                1835
         CLC   TEMPHWRD(2),MTCHMASK                                1835
         BNH   @RF01835                                            1835
*           DO;                     /*                       @Z40LB64*/
*                                                                  1836
*             /*******************************************************/
*             /*                                                     */
*             /* CPU ASSOCIATION FLAGGED IN BASE             @Z40LB64*/
*             /* VOLUME RECORD.                              @Z40LB64*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1837
*             IF CPUCHKFF<=MTCHMASK THEN                           1837
         CLC   CPUCHKFF(2),MTCHMASK                                1837
         BH    @RF01837                                            1837
*               DO;                 /*                       @Z40LB64*/
*                                                                  1838
*                 /***************************************************/
*                 /*                                                 */
*                 /* CPU ASSOCIATION WAS NOT                 @Z40LB64*/
*                 /* REFERENCED BY THE MOUNTED               @Z40LB64*/
*                 /* VOLUME TABLE ENTRY. PRINT               @Z40LB64*/
*                 /* ERROR MESSAGE.                          @Z40LB64*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1839
*                 MTCHMSG=ON;       /*                       @Z40LB64*/
         L     @07,MARGPTR                                         1839
         OI    MTCHMSG(@07),B'00010000'                            1839
*                 MVTTBL(1)=ON;     /*                       @Z40LB64*/
         OI    MVTTBL(@07),B'10000000'                             1840
*                 MSVITBL(2)=ON;    /*                       @Z40LB64*/
         OI    MSVITBL+4(@07),B'00001000'                          1841
*                 MIFLD=ON;         /*                       @Z40LB64*/
         OI    MIFLD(@07),B'10000000'                              1842
*                 FLDCHAR(1)=       /*                       @Z40LB64*/
*                     CPUIDREC(CPUID#);/*                    @Z40LB64*/
         MVI   FLDCHAR+5(@07),C' '                                 1843
         MVC   FLDCHAR+6(6,@07),FLDCHAR+5(@07)                     1843
         LR    @05,CPUID#                                          1843
         SLA   @05,3                                               1843
         L     @01,CPUIDPTR                                        1843
         ALR   @01,@05                                             1843
         MVC   FLDCHAR(5,@07),CPUIDREC-8(@01)                      1843
*                 KEYINDEX(2)=BASNAME;/*                     @Z40LB64*/
         MVC   KEYINDEX+24(13,@07),BASNAME(BASEVPTR)               1844
*                 CALL IDCCH04(GDTTBL,CDALIST);/*            @Z40LB64*/
         L     @07,@PC00001                                        1845
         ST    @07,@AL00001                                        1845
         LA    @07,CDALIST                                         1845
         ST    @07,@AL00001+4                                      1845
         L     @15,@CV02185                                        1845
         LA    @01,@AL00001                                        1845
         BALR  @14,@15                                             1845
*               END;                /*                       @Z40LB64*/
*             TEMPHWRD=TEMPHWRD&MTCHMASK;/*                  @Z40LB64*/
@RF01837 LH    @07,MTCHMASK                                        1847
         N     @07,@CF02684                                        1847
         LH    @05,TEMPHWRD                                        1847
         N     @05,@CF02684                                        1847
         NR    @07,@05                                             1847
         STH   @07,TEMPHWRD                                        1847
*             CPUCHKFF=CPUCHKFF&MTCHMASK;/*                  @Z40LB64*/
         NC    CPUCHKFF(2),MTCHMASK                                1848
*           END;                    /*                       @Z40LB64*/
*         MTCHMASK=MTCHMASK/2;      /*                       @Z40LB64*/
@RF01835 LH    @07,MTCHMASK                                        1850
         N     @07,@CF02684                                        1850
         SRL   @07,1                                               1850
         STH   @07,MTCHMASK                                        1850
*       END CPUCHECK;               /*                       @Z40LB64*/
         AL    CPUID#,@CF00221                                     1851
         C     CPUID#,@CF00476                                     1851
         BNH   @DL01834                                            1851
*     END MFRIDCHK;                 /*                       @Z40LB64*/
*                                                                  1852
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A MATCHING MOUNTED VOLUME TABLE ENTRY WAS NOT      @Z40LB64*/
*   /* FOUND, PRINT AN ERROR MESSAGE.                        @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1853
*   IF GETRC=NOTFOUND THEN                                         1853
@RF01776 L     @05,EARGPTR                                         1853
         CLC   GETRC(2,@05),@CH00181                               1853
         BNE   @RF01853                                            1853
*     DO;                           /*                       @Z40LB64*/
*       MTCHMSG=ON;                 /*                       @Z40LB64*/
         L     @05,MARGPTR                                         1855
         OI    MTCHMSG(@05),B'00010000'                            1855
*       MVTTBL(1)=ON;               /*                       @Z40LB64*/
         OI    MVTTBL(@05),B'10000000'                             1856
*       MSVITBL(2)=ON;              /*                       @Z40LB64*/
         OI    MSVITBL+4(@05),B'00001000'                          1857
*       VSNFLD=ON;                  /*                       @Z40LB64*/
         OI    VSNFLD(@05),B'00000001'                             1858
*       FLDCHAR(1)=BASSERNO;        /*                       @Z40LB64*/
         MVI   FLDCHAR+6(@05),C' '                                 1859
         MVC   FLDCHAR+7(5,@05),FLDCHAR+6(@05)                     1859
         MVC   FLDCHAR(6,@05),BASSERNO(BASEVPTR)                   1859
*       KEYINDEX(2)=BASNAME;        /*                       @Z40LB64*/
         MVC   KEYINDEX+24(13,@05),BASNAME(BASEVPTR)               1860
*       CALL IDCCH04(GDTTBL,CDALIST);/*                      @Z40LB64*/
         L     @05,@PC00001                                        1861
         ST    @05,@AL00001                                        1861
         LA    @05,CDALIST                                         1861
         ST    @05,@AL00001+4                                      1861
         L     @15,@CV02185                                        1861
         LA    @01,@AL00001                                        1861
         BALR  @14,@15                                             1861
*     END;                          /*                       @Z40LB64*/
*                                                                  1862
*   /*****************************************************************/
*   /*                                                               */
*   /* IF AN ERROR OCCURED WHILE OBTAINING THE MOUNTED       @Z40LB64*/
*   /* VOLUME TABLE ENTRY, TERMINATE CHECKMSS PROCESSING.    @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1863
*   IF GETRC=TABLERR THEN                                          1863
@RF01853 LA    @05,12                                              1863
         L     @01,EARGPTR                                         1863
         CH    @05,GETRC(,@01)                                     1863
         BNE   @RF01863                                            1863
*     DO;                           /*                       @Z40LB64*/
*       LASTCOND=LASTCC12;          /*                       @Z40LB64*/
         L     @15,@PC00001+8                                      1865
         STH   @05,LASTCOND(,@15)                                  1865
*       RETURN;                     /*                       @Z40LB64*/
@EL00010 DS    0H                                                  1866
@EF00010 DS    0H                                                  1866
@ER00010 LM    @14,@12,@SA00010                                    1866
         BR    @14                                                 1866
*     END;                          /*                       @Z40LB64*/
*   END CPUREC;                     /*                       @Z40LB64*/
         B     @EL00010                                            1868
*                                                                  1869
*/*  ******************************************************* @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   PROCEDURE NAME - CHKTERM                               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   FUNCTION - PERFORM CHECKMSS TERMINATION.               @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE WORK DATA SET IS CLOSED AND DEALLOCATED @Z40LB64*/
*/*              (IF NECESSARY).                             @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              ALL ACQUIRED STORAGE IS RELEASED.           @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*              THE FUNCTION COMPLETION OR TERMINATION      @Z40LB64*/
*/*              MESSAGE IS PRINTED.                         @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   INPUT - (1) THE WORK DATA SET CONTROL BLOCK POINTER    @Z40LB64*/
*/*               (USED BY 'UEXCP' TO CLOSE THE DATA SET).   @Z40LB64*/
*/*           (2) THE CHECKMSS POOL IDENTIFIER               @Z40LB64*/
*/*               (USED BY 'UFPOOL' TO FREE ACQUIRED SPACE). @Z40LB64*/
*/*           (3) THECHECKMSS CONDITION CODE ('LASTCOND').   @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*   OUTPUT - THE CHECKMSS FINAL COMPLETION OR TERMINATION  @Z40LB64*/
*/*            MESSAGE IS PRINTED CONTAINING THE CHECKMSS    @Z40LB64*/
*/*            FINAL CONDITION CODE.                         @Z40LB64*/
*/*                                                          @Z40LB64*/
*/*  ******************************************************* @Z40LB64*/
*                                                                  1869
*CHKTERM:                                                          1869
*   PROCEDURE;                      /*                       @Z40LB64*/
CHKTERM  STM   @14,@12,@SA00011                                    1869
*   OLDERID2=NEWERID2;                                             1870
         L     @06,@PC00001                                        1870
         L     @15,GDTTR2(,@06)                                    1870
         MVC   @TS00001(95),NEWERID2(@15)                          1870
         MVC   OLDERID2(95,@15),@TS00001                           1870
*   NEWID2='CH1K';                  /*                       @Z40LB64*/
         MVC   NEWID2(4,@15),@CC02592                              1871
*   IF GDTDBG=NULLPTR THEN                                         1872
         L     @06,GDTDBG(,@06)                                    1872
         LTR   @06,@06                                             1872
         BZ    @RT01872                                            1872
*     ;                                                            1873
*   ELSE                                                           1874
*     CALL IDCDB010(GDTTBL,'CH1Z'); /*                       @Z40LB64*/
*                                                                  1874
         L     @06,@PC00001                                        1874
         ST    @06,@AL00001                                        1874
         LA    @15,@CC02593                                        1874
         ST    @15,@AL00001+4                                      1874
         MVI   @AL00001+4,X'80'                                    1874
         L     @15,GDTDBG(,@06)                                    1874
         LA    @01,@AL00001                                        1874
         BALR  @14,@15                                             1874
*   /*****************************************************************/
*   /*                                                               */
*   /* BEFORE CLOSING THE WDS, ISSUE RELINQUISH TO UNBIND    @ZA14727*/
*   /* THE SPACE BOUND WITH THE ACQUIRE ORDER.               @ZA14727*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1875
*   IF ACQSW=ON THEN                /*                       @ZA14727*/
@RT01872 TM    ACQSW,B'01000000'                                   1875
         BNO   @RF01875                                            1875
*     DO;                           /*                       @ZA14727*/
*       ACQLIST=ACQLIST&&ACQLIST;   /*                       @ZA14727*/
         L     @06,ACQPTR                                          1877
         XC    ACQLIST(96,@06),ACQLIST(@06)                        1877
*       ARLL=LENGTH(ACQLIST);       /*                       @ZA14727*/
         MVC   ARLL(4,@06),@CF02635                                1878
*       AROP='04'X;                 /*                       @ZA14727*/
         MVI   AROP(@06),X'04'                                     1879
*       ARBDUBD=ON;                 /*                       @ZA14727*/
         OI    ARBDUBD(@06),B'10000000'                            1880
*       ARNMEXT=1;                  /*                       @ZA14727*/
         MVI   ARNMEXT(@06),X'01'                                  1881
*       ARVOL=SAVARVOL;             /*                       @ZA14727*/
         MVC   ARVOL(6,@06),SAVARVOL                               1882
*       AREXT(1,1:2)=SAVREXT1;      /*                       @ZA14727*/
         MVC   AREXT(2,@06),SAVREXT1                               1883
*       AREXT(1,3:4)=SAVREXT2;      /*                       @ZA14727*/
         MVC   AREXT+2(2,@06),SAVREXT2                             1884
*       CALL IDCSASS0(GDTTBL,RELINQ,ACQPTR,RSNCODE);/*       @ZA14727*/
         L     @06,@PC00001                                        1885
         ST    @06,@AL00001                                        1885
         LA    @02,RELINQ                                          1885
         ST    @02,@AL00001+4                                      1885
         LA    @02,ACQPTR                                          1885
         ST    @02,@AL00001+8                                      1885
         LA    @02,RSNCODE                                         1885
         ST    @02,@AL00001+12                                     1885
         MVI   @AL00001+12,X'80'                                   1885
         L     @15,GDTSSC(,@06)                                    1885
         LA    @01,@AL00001                                        1885
         BALR  @14,@15                                             1885
*       RESPECIFY                                                  1886
*         RTNREG RSTD;                                             1886
*       TESTRC=RTNREG;                                             1887
         LR    TESTRC,RTNREG                                       1887
*       RESPECIFY                                                  1888
*         RTNREG UNRSTD;            /*                       @ZA14727*/
*                                                                  1888
*       /*************************************************************/
*       /*                                                           */
*       /* IF A NON-ZERO RETURN CODE WAS RETURNED BY         @ZA14727*/
*       /* THE 'USSC' MACRO, CALL 'SSCMSG' PROCEDURE         @ZA14727*/
*       /* TO ISSUE THE APPROPRIATE ERROR MESSAGE.           @ZA14727*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1889
*       IF TESTRC^=0 THEN           /*                       @ZA14727*/
         LTR   TESTRC,TESTRC                                       1889
         BZ    @RF01889                                            1889
*         DO;                       /*                       @ZA14727*/
*           CALL SSCMSG(RSNCODE);   /*                       @ZA14727*/
         LA    @06,RSNCODE                                         1891
         ST    @06,@AL00001                                        1891
         LA    @01,@AL00001                                        1891
         BAL   @14,SSCMSG                                          1891
*           LASTCOND=LASTCC04;      /*                       @ZA14727*/
         L     @06,@PC00001+8                                      1892
         MVC   LASTCOND(2,@06),@CH00044                            1892
*         END;                      /*                       @ZA14727*/
*       ELSE                        /*                       @ZA14727*/
*         ACQSW=OFF;                /*                       @ZA14727*/
         B     @RC01889                                            1894
@RF01889 NI    ACQSW,B'10111111'                                   1894
*     END;                          /*                       @ZA14727*/
*                                                                  1895
@RC01889 DS    0H                                                  1896
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE THE WORK DATA SET ('UEXCP' MACRO) IF IT WAS     @Z40LB64*/
*   /* SUCCESSFULLY OPENED.                                  @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1896
*   IF WDSCBPTR^=NULLPTR THEN                                      1896
@RF01875 L     @06,WDSCBPTR                                        1896
         LTR   @06,@06                                             1896
         BZ    @RF01896                                            1896
*     DO;                           /*                       @Z40LB64*/
*       CALL IDCIO050(GDTTBL,CLOSE,WDSCBPTR);/*              @Z40LB64*/
         L     @06,@PC00001                                        1898
         ST    @06,@AL00001                                        1898
         LA    @02,CLOSE                                           1898
         ST    @02,@AL00001+4                                      1898
         LA    @02,WDSCBPTR                                        1898
         ST    @02,@AL00001+8                                      1898
         MVI   @AL00001+8,X'80'                                    1898
         L     @15,GDTEXP(,@06)                                    1898
         LA    @01,@AL00001                                        1898
         BALR  @14,@15                                             1898
*       RESPECIFY                                                  1899
*         RTNREG RSTD;                                             1899
*       TESTRC=RTNREG;                                             1900
         LR    TESTRC,RTNREG                                       1900
*       RESPECIFY                                                  1901
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*       IF TESTRC^=0 THEN                                          1902
         LTR   TESTRC,TESTRC                                       1902
         BZ    @RF01902                                            1902
*         LASTCOND=MAX(LASTCOND,LASTCC04);/*                 @Z40LB64*/
         L     @06,@PC00001+8                                      1903
         LH    @15,LASTCOND(,@06)                                  1903
         LA    @14,4                                               1903
         CR    @15,@14                                             1903
         BNL   *+6
         LR    @15,@14                                             1903
         STH   @15,LASTCOND(,@06)                                  1903
*     END;                          /*                       @Z40LB64*/
*                                                                  1904
@RF01902 DS    0H                                                  1905
*   /*****************************************************************/
*   /*                                                               */
*   /* DEALLOCATE THE WORK DATA SET ('UDEALLOC' MACRO)       @Z40LB64*/
*   /* IF DYNAMICALLY ALLOCATED BY CHECKMSS.                 @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1905
*   IF(ADDR(WDS)^=NULLPTR)&(ALLDDN^=INITDDN) THEN                  1905
@RF01896 L     @06,@PC00001+4                                      1905
         L     @06,FDTPTR+4(,@06)                                  1905
         LTR   @06,@06                                             1905
         BZ    @RF01905                                            1905
         CLC   ALLDDN(8,ALLPTR),INITDDN                            1905
         BE    @RF01905                                            1905
*     DO;                           /*                       @Z40LB64*/
*       CALL IDCSADL0(GDTTBL,ALLAGL);/*                      @Z40LB64*/
         L     @06,@PC00001                                        1907
         ST    @06,@AL00001                                        1907
         ST    ALLPTR,@AL00001+4                                   1907
         MVI   @AL00001+4,X'80'                                    1907
         L     @15,GDTDLC(,@06)                                    1907
         LA    @01,@AL00001                                        1907
         BALR  @14,@15                                             1907
*       RESPECIFY                                                  1908
*         RTNREG RSTD;                                             1908
*       TESTRC=RTNREG;                                             1909
         LR    TESTRC,RTNREG                                       1909
*       RESPECIFY                                                  1910
*         RTNREG UNRSTD;            /*                       @Z40LB64*/
*       IF TESTRC^=0 THEN                                          1911
         LTR   TESTRC,TESTRC                                       1911
         BZ    @RF01911                                            1911
*         LASTCOND=MAX(LASTCOND,LASTCC04);/*                 @Z40LB64*/
         L     @15,@PC00001+8                                      1912
         LH    @14,LASTCOND(,@15)                                  1912
         LA    @07,4                                               1912
         CR    @14,@07                                             1912
         BNL   *+6
         LR    @14,@07                                             1912
         STH   @14,LASTCOND(,@15)                                  1912
*     END;                          /*                       @Z40LB64*/
*                                                                  1913
@RF01911 DS    0H                                                  1914
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE ALL STORAGE ACQUIRED BY THE CHECKMSS FUNCTION    @Z40LB64*/
*   /* ('UFPOOL' MACRO).                                     @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1914
*   CALL IDCSAFP0(GDTTBL,CHPOOLID); /*                       @Z40LB64*/
*                                                                  1914
@RF01905 L     @15,@PC00001                                        1914
         ST    @15,@AL00001                                        1914
         LA    @14,@CC02193                                        1914
         ST    @14,@AL00001+4                                      1914
         MVI   @AL00001+4,X'80'                                    1914
         L     @15,GDTFPL(,@15)                                    1914
         LA    @01,@AL00001                                        1914
         BALR  @14,@15                                             1914
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT THE PROPER CHECKMSS FUNCTION COMPLETION,        @Z40LB64*/
*   /* FUNCTION TERMINATED, OR INSUFFICIENT STORAGE          @Z40LB64*/
*   /* MESSAGE ('UPRINT' MACRO).                             @Z40LB64*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1915
*   DARGLIST=''B;                   /*                       @Z40LB64*/
         L     @15,DDSTRU                                          1915
         XC    DARGLIST(20,@15),DARGLIST(@15)                      1915
*   DARGSMOD=UNIVMSG;               /*                       @Z40LB64*/
         MVC   DARGSMOD(3,@15),@CC02418                            1916
*   LASTCOND=MAX(LASTCOND,SUUCOND); /*                       @ZA27324*/
         L     @14,@PC00001+8                                      1917
         LH    @07,LASTCOND(,@14)                                  1917
         LH    @06,SUUCOND                                         1917
         CR    @07,@06                                             1917
         BNL   *+6
         LR    @07,@06                                             1917
         STH   @07,LASTCOND(,@14)                                  1917
*   IF LASTCOND<LASTCC08            /*                       @ZA27324*/
*     THEN                                                         1918
         C     @07,@CF00181                                        1918
         BNL   @RF01918                                            1918
*     DARGSENT=END0MSG#;            /*                       @Z40LB64*/
         MVI   DARGSENT(@15),X'01'                                 1919
*   ELSE                                                           1920
*     DO;                           /*                       @Z40LB64*/
         B     @RC01918                                            1920
@RF01918 DS    0H                                                  1921
*       IF NOSPACE=ON THEN                                         1921
         TM    NOSPACE,B'10000000'                                 1921
         BNO   @RF01921                                            1921
*         DARGSENT=STORMSG#;        /*                       @Z40LB64*/
         L     @01,DDSTRU                                          1922
         MVI   DARGSENT(@01),X'04'                                 1922
*       ELSE                                                       1923
*         DARGSENT=TERMMSG#;        /*                       @Z40LB64*/
         B     @RC01921                                            1923
@RF01921 L     @01,DDSTRU                                          1923
         MVI   DARGSENT(@01),X'03'                                 1923
*     END;                          /*                       @Z40LB64*/
@RC01921 DS    0H                                                  1925
*   DARGDBP=ADDR(LASTCOND);         /*                       @Z40LB64*/
@RC01918 L     @15,DDSTRU                                          1925
         L     @14,@PC00001+8                                      1925
         ST    @14,DARGDBP(,@15)                                   1925
*   DARGILP=LENGTH(LASTCOND);       /*                       @Z40LB64*/
         MVC   DARGILP(2,@15),@CH00155                             1926
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Z40LB64*/
         L     @15,@PC00001                                        1927
         ST    @15,@AL00001                                        1927
         LA    @14,@CF00117                                        1927
         ST    @14,@AL00001+4                                      1927
         LA    @14,DDSTRU                                          1927
         ST    @14,@AL00001+8                                      1927
         MVI   @AL00001+8,X'80'                                    1927
         L     @15,GDTPRT(,@15)                                    1927
         LA    @01,@AL00001                                        1927
         BALR  @14,@15                                             1927
*   RETURN;                         /*                       @Z40LB64*/
@EL00011 DS    0H                                                  1928
@EF00011 DS    0H                                                  1928
@ER00011 LM    @14,@12,@SA00011                                    1928
         BR    @14                                                 1928
*   END CHKTERM;                    /*                       @Z40LB64*/
*                                                                  1930
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  1930
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           1930
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
SSCMSG   STM   @14,@12,@SA00012                                    1930
         MVC   @PC00012(8),0(@01)                                  1930
*                                   /*                       @Y30LB39*/
*                                                                  1931
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1931
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1931
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1931
*                                   /*                       @Y30LB39*/
*   DCL                                                            1931
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            1932
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1932
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1933
*                                   /*                       @Y30LB39*/
*   DCL                                                            1933
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            1934
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1934
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1935
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1935
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1935
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1936
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1936
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1936
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1937
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1937
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1937
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1938
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1938
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1938
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1939
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1939
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  1940
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1940
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             1940
         L     @15,@PC00001                                        1940
         L     @14,GDTTR2(,@15)                                    1940
         MVC   @TS00001(95),NEWERID2(@14)                          1940
         MVC   OLDERID2(95,@14),@TS00001                           1940
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1941
         MVC   NEWID2(4,@14),@CC02614                              1941
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1942
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1942
         LA    @14,SSDRGLT                                         1942
         ST    @14,SSDLPTR                                         1942
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1943
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              1943
         L     @07,@PC00012                                        1943
         L     @07,SSRCODE(,@07)                                   1943
         LTR   @07,@07                                             1943
         BNP   @RF01943                                            1943
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1944
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1945
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1945
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @03,SSINXLST                                        1946
         ST    @03,DARGRETP(,@14)                                  1946
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@14),SSMODSS0                            1947
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@14),X'01'                                 1948
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1949
         MVC   DARGRETL(2,@14),@CH02209                            1949
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1950
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1950
         ST    @15,@AL00001                                        1950
         LA    @03,@CF00117                                        1950
         ST    @03,@AL00001+4                                      1950
         LA    @03,SSDLPTR                                         1950
         ST    @03,@AL00001+8                                      1950
         MVI   @AL00001+8,X'80'                                    1950
         L     @15,GDTPRT(,@15)                                    1950
         LA    @01,@AL00001                                        1950
         BALR  @14,@15                                             1950
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1951
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         LA    ENTRYNUM,1                                          1951
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   1952
@DL01952 DS    0H                                                  1953
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         AL    ENTRYNUM,@CF00221                                   1953
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1954
@DE01952 L     @03,@PC00012                                        1954
         LR    @15,ENTRYNUM                                        1954
         ALR   @15,@15                                             1954
         LH    @15,SSARRAY-2(@15)                                  1954
         CH    @15,SSRHALF(,@03)                                   1954
         BE    @DC01952                                            1954
         SLR   @14,@14                                             1954
         CR    @15,@14                                             1954
         BNE   @DL01952                                            1954
@DC01952 DS    0H                                                  1955
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1955
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1955
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @07,SSDLPTR                                         1956
         MVC   DARGSMOD(3,@07),SSMODSS0                            1956
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   ENTRYNUM,DARGSENT(,@07)                             1957
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         CR    @15,@14                                             1958
         BNE   @RF01958                                            1958
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         ST    @03,DARGDBP(,@07)                                   1960
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@07),@CH00044                             1961
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  1964
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1964
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC01943                                            1964
@RF01943 DS    0H                                                  1965
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1965
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @15,SSDLPTR                                         1966
         MVC   DARGSMOD(3,@15),SSMODCM0                            1966
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         MVC   DARGSENT(1,@15),SSMSGNUM                            1967
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @14,@PC00012+4                                      1968
         ST    @14,DARGDBP(,@15)                                   1968
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@15),@CH00221                             1969
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1970
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1971
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1971
@RC01943 L     @15,@PC00001                                        1971
         ST    @15,@AL00001                                        1971
         LA    @14,@CF00117                                        1971
         ST    @14,@AL00001+4                                      1971
         LA    @14,SSDLPTR                                         1971
         ST    @14,@AL00001+8                                      1971
         MVI   @AL00001+8,X'80'                                    1971
         L     @15,GDTPRT(,@15)                                    1971
         LA    @01,@AL00001                                        1971
         BALR  @14,@15                                             1971
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1972
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             1972
         L     @14,@SA00012                                        1972
         LM    @00,@12,@SA00012+8                                  1972
         BR    @14                                                 1972
*   END SSCMSG;                     /*                       @Y30LB39*/
*   END IDCCH01                     /*                       @Z40LB64*/
*                                                                  1974
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF11 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF56 )                                       */
*/*%INCLUDE SYSLIB  (IEZBASEV)                                       */
*/*%INCLUDE SYSLIB  (IEZCOPYV)                                       */
*/*%INCLUDE SYSLIB  (IEZDUPV )                                       */
*/*%INCLUDE SYSLIB  (IEZBCDV )                                       */
*/*%INCLUDE SYSLIB  (IEZCPUID)                                       */
*/*%INCLUDE SYSLIB  (IEZRVVI )                                       */
*/*%INCLUDE SYSLIB  (IDCCSCH )                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*                                                                  1974
*       ;                                                          1974
@DATA    DS    0H
@CH00288 DC    H'5'
@CH00158 DC    H'6'
@CH00567 DC    H'12'
@CH02250 DC    H'38'
@CH02654 DC    H'151'
@SX02697 XC    MOVEAREA(0,COTPTR),MOVEAREA(COTPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    13F
@SA00005 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00011 DS    15F
@SA00003 DS    13F
@SA00004 DS    15F
@SA00012 DS    15F
@PC00012 DS    2F
@SA00008 DS    11F
@SA00010 DS    0F
@SA00009 DS    0F
         DS    15F
@AL00001 DS    6A
@TF00001 DS    F
@AFTEMPS DS    2F
IDCCH01  CSECT
         DS    0F
@CF00117 DC    F'0'
@CF00221 DC    F'1'
@CH00221 EQU   @CF00221+2
@CF00155 DC    F'2'
@CH00155 EQU   @CF00155+2
@CF00164 DC    F'3'
@CF00044 DC    F'4'
@CH00044 EQU   @CF00044+2
@CF00181 DC    F'8'
@CH00181 EQU   @CF00181+2
@CF01644 DC    F'9'
@CF00446 DC    F'10'
@CF00476 DC    F'16'
@CF02303 DC    F'21'
@CF01515 DC    F'22'
@CH01515 EQU   @CF01515+2
@CF00312 DC    F'24'
@CF00223 DC    F'32'
@CF02625 DC    F'36'
@CF02619 DC    F'40'
@CF00809 DC    F'44'
@CF02607 DC    F'56'
@CF01072 DC    F'64'
@CF02630 DC    F'68'
@CF02621 DC    F'80'
@CF02633 DC    F'92'
@CF02635 DC    F'96'
@CF02659 DC    F'112'
@CF02209 DC    F'120'
@CH02209 EQU   @CF02209+2
@CF02656 DC    F'152'
@CF02213 DC    F'200'
@CF02657 DC    F'224'
@CH02657 EQU   @CF02657+2
@CF02305 DC    F'255'
@CF01098 DC    F'256'
@CH01098 EQU   @CF01098+2
@CF00377 DC    F'384'
@CF02205 DC    F'512'
@CF01719 DC    F'1024'
@CF02645 DC    F'1056'
@CF01716 DC    F'1280'
@CF02641 DC    F'1664'
@CF02664 DC    F'1680'
@CF01713 DC    F'4560'
@CF02695 DC    F'-938'
@CF02696 DC    F'-937'
@CF02691 DC    F'-130'
@CF02692 DC    F'-129'
@CF02693 DC    F'-128'
@CF02694 DC    F'-127'
@CF02688 DC    F'-4'
@CF02690 DC    F'-3'
@CF02689 DC    F'-2'
@CF02349 DC    F'-1'
@CF02684 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
RPMPTR   DS    A
PABPTR   DS    A
DVBPTR   DS    A
LPBPTR   DS    A
VMXPTR   DS    A
VVATPTR  DS    A
MVCBPTR  DS    A
MVIBPTR  DS    A
SCCFPTR  DS    A
SCENTPTR DS    A
VICFPTR  DS    A
TVCFPTR  DS    A
CIENTPTR DS    A
MICPTR   DS    A
CDBPTR   DS    A
CMCBPTR  DS    A
CMENTPTR DS    A
COPYVPTR DS    A
CPUIDPTR DS    A
COTBPTR  DS    A
ACQPTR   DS    A
SPACEPTR DS    A
SPACEAMT DS    F
IOINFPTR DS    A
INFOAPTR DS    A
CKAGLPTR DS    A
WDSCBPTR DS    A
UCBPTR   DS    A
RSNCODE  DS    F
SSDLPTR  DS    A
LISTPTR  DS    A
CISA#    DS    H
SUUCOND  DS    H
TEMPHWRD DS    FL2
         ORG   TEMPHWRD
TMPBYTE1 DS    FL1
TMPBYTE2 DS    FL1
         ORG   TEMPHWRD+2
SDG#     DS    H
SECT#    DS    H
VADCHNL  DS    H
RPAGE#   DS    H
RECARG   DS    FL2
         ORG   RECARG
RECTYPE  DS    BL1
         ORG   RECTYPE
MSVIBASE DS    BL1
MSVICOPY EQU   RECTYPE+0
MSVIDUP  EQU   RECTYPE+0
MSVICPU  EQU   RECTYPE+0
@NM00201 EQU   RECTYPE+0
         ORG   RECARG+1
RECCODE  DS    FL1
         ORG   RECARG+2
CDBVUA#  DS    H
SETRC    DS    H
COPYECB  DS    FL1
LISTLN   DS    FL1
@TS00001 DS    CL95
         DS    CL3
CDALIST  DS    CL781
         ORG   CDALIST
IVADPTR  DS    16A
IVVITPTR DS    16A
IPSTPTR  DS    16A
ILTRPTR  DS    16A
IMERPTR  DS    AL4
CCHHRPTR DS    AL4
EARGPTR  DS    AL4
MARGPTR  DS    AL4
VICOPTR  DS    AL4
TVLCOPTR DS    AL4
MVTCOPTR DS    AL4
CMCOPTR  DS    16A
CDBCOPTR DS    AL4
VVACOPTR DS    AL4
VMXCOPTR DS    AL4
RPMCOPTR DS    AL4
DVBCOPTR DS    AL4
LPBCOPTR DS    AL4
VVICOPTR DS    16A
VADCOPTR DS    16A
PSTCOPTR DS    16A
VVATADDR DS    AL4
CBMADDR  DS    AL4
CIADDR   DS    AL4
MVCBADDR DS    AL4
CMBUFPTR DS    20A
RWCSPTR  DS    AL4
EXARGPTR DS    AL4
WCSBFPTR DS    AL4
CHRADDR1 DS    AL4
CHRADDR2 DS    AL4
RVVIPTR  DS    AL4
MSVIAPTR DS    AL4
MSGAPTR  DS    AL4
TEXTAPTR DS    AL4
FMTAPTR  DS    AL4
BDATAPTR DS    AL4
SAVLDCNT DS    FL2
VLDSAID  DS    16H
VLDSSID  DS    16H
MSFVLCNT DS    FL2
VLDMSFID DS    4H
@NM00162 DS    BL1
         ORG   @NM00162
MSCCHK   DS    BL1
SACHK    EQU   @NM00162+0
MSVICHK  EQU   @NM00162+0
@NM00163 EQU   @NM00162+0
         ORG   CDALIST+781
PRNTLIST DS    CL20
NOSPACE  DS    BL1
         DS    CL2
MTCHMASK DS    BL2
UNITLIST DS    CL12
         ORG   UNITLIST
UNITCNT  DS    FL2
UNITLEN  DS    FL2
UNITTYPE DS    CL8
         ORG   UNITLIST+12
WDSDDN   DS    CL8
SWITCHES DS    BL1
         ORG   SWITCHES
PSTFLAG  DS    BL1
ACQSW    EQU   SWITCHES+0
@NM00197 EQU   SWITCHES+0
         ORG   SWITCHES+1
SAVARVOL DS    CL6
SAVREXT1 DS    CL2
SAVREXT2 DS    CL2
MICTCHR  DS    CL5
ENDFLAG  DS    BL1
LASTBASE DS    CL6
         DS    CL3
DUMPLIST DS    CL17
ERRFLAG  DS    BL1
CASEFLAG DS    BL1
CPUFLAG  DS    BL1
CPUCHKFF DS    BL2
SSDRGLT  DS    CL20
         DS    CL2
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
SAARRAY  DS    16BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCCH01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02183 DC    V(IDCCH02)
@CV02184 DC    V(IDCCH03)
@CV02185 DC    V(IDCCH04)
         DS    0D
MSVINFND DC    XL4'208'
DUMMYPTR DC    F'-1'
RVVLEN   DC    AL2(68)
HWRDMASK DC    XL2'7FFF'
SSIDBASE DC    XL2'0800'
LTROFFST DC    XL2'B0'
MVTBLID  DC    XL1'20'
VITBLID  DC    XL1'40'
TVLTBLID DC    XL1'50'
CFGTBLID DC    XL1'70'
CPUIDMSK DC    XL1'0F'
SSMSGNUM DC    AL1(56)
@CC02519 DC    C'MSVIREC'
@CC02394 DC    C'      '
@CC02244 DC    C'SDG00'
@CC02476 DC    C'SAREC'
@CC02518 DC    C'CPUID'
@CC02193 DC    C'CH00'
@CC02430 DC    C'CH1A'
@CC02434 DC    C'CH1X'
@CC02440 DC    C'CH1B'
@CC02448 DC    C'CH1C'
@CC02455 DC    C'CH1D'
@CC02464 DC    C'CH1E'
@CC02471 DC    C'CH1F'
@CC02478 DC    C'CH1U'
@CC02498 DC    C'CH1G'
@CC02513 DC    C'CH1Y'
@CC02517 DC    C'CH1H'
@CC02520 DC    C'CH1W'
@CC02524 DC    C'CH1I'
@CC02574 DC    C'CH1J'
@CC02592 DC    C'CH1K'
@CC02593 DC    C'CH1Z'
@CC02614 DC    C'SSAA'
@CC02406 DC    C'YES'
@CC02408 DC    C'NO '
@CC02418 DC    C'UV0'
@CC02426 EQU   @CC02193
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
RVOPENR  DC    CL8'OPENR   '
RVRDCNT  DC    CL8'READCNT '
RVREADKD DC    CL8'READKD  '
RVSPACCR DC    CL8'SPACCR  '
RVFWRITE DC    CL8'FWRITE  '
RVWRITER DC    CL8'WRITEREC'
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODID    DC    CL4'CH01'
FIXAREA  DS    CL768
         ORG   FIXAREA
@NM00191 DS    CL256
         ORG   @NM00191
@NM00192 DC    256X'00'
         ORG   FIXAREA+256
@NM00193 DS    CL256
         ORG   @NM00193
@NM00194 DC    256X'00'
         ORG   FIXAREA+512
@NM00195 DS    CL256
         ORG   @NM00195
@NM00196 DC    256X'00'
         ORG   FIXAREA+768
INITDDN  DC    X'0000000000000000'
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
BITMASK  DC    X'80'
         DC    X'40'
         DC    X'20'
         DC    X'10'
         DC    X'08'
         DC    X'04'
         DC    X'02'
         DC    X'01'
SASECTOR DC    XL1'5F'
         DC    XL1'60'
         DC    XL1'61'
         DC    XL1'62'
         DC    XL1'63'
         DC    XL1'64'
         DC    XL1'69'
         DC    XL1'6B'
         DC    XL1'C0'
         DC    XL1'C1'
         DC    XL1'C2'
         DC    XL1'C3'
         DC    XL1'C4'
         DC    XL1'C5'
         DC    XL1'C6'
         DC    XL1'C7'
         DC    XL1'C8'
         DC    XL1'C9'
         DC    XL1'CA'
         DC    XL1'CB'
         DC    XL1'CC'
         DC    XL1'06'
SECTRTBL DC    X'7C'
         DC    X'7D'
         DC    X'7E'
         DC    X'7F'
SAUCB    DC    CL3'800'
         DC    CL3'810'
         DC    CL3'820'
         DC    CL3'830'
         DC    CL3'840'
         DC    CL3'850'
         DC    CL3'860'
         DC    CL3'870'
         DC    CL3'880'
         DC    CL3'890'
         DC    CL3'8A0'
         DC    CL3'8B0'
         DC    CL3'8C0'
         DC    CL3'8D0'
         DC    CL3'8E0'
         DC    CL3'8F0'
         DS    CL2
CP0001@  DC    AL4(VAD1CASE)
         DC    AL4(VAD2CASE)
         DC    AL4(VAD1CASE)
         DC    AL4(VAD2CASE)
         DC    AL4(VAD1CASE)
         DC    AL4(VAD2CASE)
         DC    AL4(VVI1CASE)
         DC    AL4(VVI2CASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(PSTCASE)
         DC    AL4(LTRCASE)
CP0002@  DC    AL4(VSECCASE)
         DC    AL4(VEXCCASE)
         DC    AL4(VBNDCASE)
         DC    AL4(VWRTCASE)
         DC    AL4(VMF1CASE)
         DC    AL4(VMF2CASE)
CP0003@  DC    AL4(TSECCASE)
         DC    AL4(TEXCCASE)
         DC    AL4(TBNDCASE)
         DC    AL4(TWRTCASE)
         DC    AL4(TVOLCASE)
         DC    AL4(TMF1CASE)
         DC    AL4(TMF2CASE)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTRYNUM EQU   @02
Y        EQU   @02
X        EQU   @04
INTF#    EQU   @05
CPUID#   EQU   @06
MFRID#   EQU   @07
CASE#    EQU   @06
TEMPBYTE EQU   @03
LASTDUP  EQU   @07
LASTCOPY EQU   @06
COTPTR   EQU   @03
COTLEN   EQU   @02
SATBLPTR EQU   @07
VVA#     EQU   @02
VUA#     EQU   @02
PST#     EQU   @03
SAID#    EQU   @04
LUA#     EQU   @06
CHRTBL#  EQU   @02
CBMBIT#  EQU   @02
CMBLK#   EQU   @05
MSF#     EQU   @04
WDSAPTR  EQU   @06
ALLPTR   EQU   @07
OVRLYAMT EQU   @02
OVRLDAMT EQU   @03
BCDVPTR  EQU   @05
DUPVPTR  EQU   @02
BASEVPTR EQU   @04
SA#      EQU   @05
TVENTPTR EQU   @02
VIENTPTR EQU   @02
MVPATH#  EQU   @03
MVENTPTR EQU   @02
MERPTR   EQU   @02
CBMPTR   EQU   @03
VTR1PTR  EQU   @02
LTRPTR   EQU   @02
PSTPTR   EQU   @02
VVITPTR2 EQU   @03
VVITPTR1 EQU   @03
VADPTR2  EQU   @03
VADPTR1  EQU   @03
DMPINDEX EQU   @02
TESTRC   EQU   @03
REG11    EQU   @11
REG12    EQU   @12
REG10    EQU   @10
REG9     EQU   @09
REG8     EQU   @08
RTNREG   EQU   @15
ARR1     EQU   @01
COTBR1   EQU   @01
QUERR1   EQU   @01
REG0     EQU   @00
REG1     EQU   @01
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
IDCSAEP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAFP0 EQU   0
IDCSAAL0 EQU   0
IDCSADL0 EQU   0
IDCSASS0 EQU   0
IDCSA060 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLDSN   EQU   ALLAGL
ALLDDN   EQU   ALLAGL+4
ALLULP   EQU   ALLAGL+12
ALLSTS   EQU   ALLAGL+24
ALLSTSOD EQU   ALLSTS
ALLDSP   EQU   ALLAGL+25
ALLDSPKP EQU   ALLDSP
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
ALLOPTDS EQU   ALLOPT
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOSI0 EQU   0
IDCIO050 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
IOINFVOL EQU   IOINFOPT
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTREALCC EQU   CTMSG+1
CTARRAY  EQU   CTMSG+4
CTTBLCC  EQU   CTARRAY+1
CTTBLHH  EQU   CTARRAY+2
CTTBLRR  EQU   CTARRAY+3
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKUCBPTR EQU   CKAGL+8
CKDDNAME EQU   CKAGL+12
CKLABELP EQU   CKAGL+24
CKFLAGS  EQU   CKAGL+28
CKTESTVT EQU   CKFLAGS
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXODDN   EQU   EXOARG+8
EXOEXT   EQU   EXOARG+24
EXOCTLBK EQU   EXOARG+28
EXOPT    EQU   EXOARG+32
EXOTAB   EQU   EXOPT
EXFLG    EQU   EXOARG+33
EXGARG   EQU   0
EXGCTLBK EQU   EXGARG+8
EXWRARG  EQU   0
EXRWCHR  EQU   EXWRARG+26
EXSPACE  EQU   EXWRARG+36
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
SV82LIST EQU   0
@NM00072 EQU   SV82LIST+4
SV82DCBP EQU   @NM00072
@NM00073 EQU   SV82LIST+12
SV82WRKP EQU   @NM00073
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
VADWORD1 EQU   0
VADVVA   EQU   VADWORD1+1
VADRUA   EQU   VADWORD1+2
VADWORD2 EQU   0
VADRPNUM EQU   VADWORD2
VADLUA   EQU   VADWORD2+1
VADFLAGS EQU   VADWORD2+3
VVITBYT1 EQU   0
VVITBYT2 EQU   0
PST      EQU   0
PSTVVA   EQU   PST
PSTVPNUM EQU   PST+1
LTR      EQU   0
LTRRUA   EQU   LTR
VTABLER1 EQU   0
@NM00091 EQU   VTABLER1+8
VTTBLCHR EQU   VTABLER1+16
VTTBLC   EQU   VTTBLCHR+1
VTTBLH   EQU   VTTBLCHR+2
VTTBLR   EQU   VTTBLCHR+3
VTSDGID  EQU   VTABLER1+80
VTUCB    EQU   VTABLER1+144
VTFLAGS  EQU   VTUCB
VTTRCCHR EQU   VTABLER1+220
VTLRUCW  EQU   VTABLER1+236
VTRVPAGE EQU   VTABLER1+240
RPM      EQU   0
RPMFLAGS EQU   RPM
PAB      EQU   0
PABSA    EQU   PAB+16
@NM00101 EQU   PAB+32
@NM00102 EQU   PAB+192
PABFLAGS EQU   @NM00102
PABRINTF EQU   @NM00102+1
PABORUA  EQU   @NM00102+2
DVB      EQU   0
DVBMVT   EQU   DVB+4
LPB      EQU   0
LPBMVT   EQU   LPB+4
VMX      EQU   0
VMXFLAGS EQU   VMX
VVAT     EQU   0
CBMAP    EQU   0
CBMSA    EQU   CBMAP+4
CBMMSF   EQU   CBMAP+39
MERECORD EQU   0
@NM00108 EQU   MERECORD
MEFLAGS  EQU   @NM00108
@NM00110 EQU   MERECORD+128
MVCTLBLK EQU   0
MVIDXBLK EQU   0
MVIFLAGS EQU   MVIDXBLK
@NM00113 EQU   MVIDXBLK+8
MVENTRY  EQU   0
MVVOLID  EQU   MVENTRY
MVVFLAGS EQU   MVENTRY+6
MVMFLAGS EQU   MVENTRY+12
MVMNTVOL EQU   MVMFLAGS
MVRESRVE EQU   MVENTRY+14
MVVAMSG  EQU   MVENTRY+17
@NM00122 EQU   MVENTRY+20
MVSA     EQU   @NM00122
MVVLDSA  EQU   MVSA
MVACTB   EQU   MVSA
MVACTC   EQU   MVSA
MVACTD   EQU   MVSA
MVCPUIDS EQU   @NM00122+1
MVVUAS   EQU   @NM00122+5
@NM00124 EQU   MVENTRY+52
MVLOGDEV EQU   @NM00124
MVCPUID  EQU   0
MVVUA    EQU   0
SCCTLFLD EQU   0
SCCOMLEN EQU   SCCTLFLD
SCCFLAGS EQU   SCCOMLEN
SCTRKPTR EQU   SCCTLFLD+4
SCENTRY  EQU   0
VICTLFLD EQU   0
VICFLAGS EQU   VICTLFLD
VITRKPTR EQU   VICTLFLD+4
VIENTRY  EQU   0
VIVOLID  EQU   VIENTRY
VIVFLAGS EQU   VIENTRY+6
VISECVOL EQU   VIVFLAGS
VIEXCVOL EQU   VIVFLAGS
VIBNDVOL EQU   VIVFLAGS
VIWRTINH EQU   VIVFLAGS
VILZYX1  EQU   VIENTRY+8
VILZYX2  EQU   VIENTRY+10
TVCTLFLD EQU   0
TVCOMLEN EQU   TVCTLFLD
TVCFLAGS EQU   TVCOMLEN
TVTRKPTR EQU   TVCTLFLD+4
TVENTRY  EQU   0
TVLZYX1  EQU   TVENTRY
TVLZYX2  EQU   TVENTRY+2
TVCSN    EQU   TVENTRY+4
TVVOLID  EQU   TVENTRY+16
TVVFLAGS EQU   TVENTRY+22
TVSECVOL EQU   TVVFLAGS
TVEXCVOL EQU   TVVFLAGS
TVBNDVOL EQU   TVVFLAGS
TVWRTINH EQU   TVVFLAGS
CIENTRY  EQU   0
CICSCNCT EQU   CIENTRY
CISACHNL EQU   CIENTRY+2
@NM00139 EQU   0
CICUCHL  EQU   @NM00139+1
MICTABLE EQU   0
@NM00141 EQU   MICTABLE
MICMFID  EQU   @NM00141
MICFLAG1 EQU   @NM00141+6
MICFLAG2 EQU   @NM00141+7
MICVALID EQU   MICFLAG2
CDBLOCK  EQU   0
@NM00145 EQU   CDBLOCK
CDBSDG   EQU   @NM00145
CDBCNFIG EQU   CDBSDG
CDBPATHS EQU   @NM00145+1
CMCTLBLK EQU   0
CMENTRY  EQU   0
IVAD     EQU   0
IVADVVA  EQU   IVAD
IVADFLG  EQU   IVAD+1
IVVIT    EQU   0
IVVI1    EQU   IVVIT
IVVI2    EQU   IVVIT+1
IPST     EQU   0
IPSTVVA  EQU   IPST
IPSTVP   EQU   IPST+1
ILTR     EQU   0
ILTRRUA  EQU   ILTR
CCHHRTBL EQU   0
CCOFFSET EQU   CCHHRTBL
TBLCCHHR EQU   CCHHRTBL+2
TBLCC    EQU   TBLCCHHR
TBLHH    EQU   TBLCCHHR+2
TBLR     EQU   TBLCCHHR+4
MVTDBCHR EQU   CCHHRTBL+62
MVTDBCC  EQU   MVTDBCHR
MVTDBHH  EQU   MVTDBCHR+2
MVTDBR   EQU   MVTDBCHR+4
ENTRYARG EQU   0
RDOPTION EQU   ENTRYARG
GETNEXT  EQU   RDOPTION
TABLEID  EQU   ENTRYARG+1
TBLFLAGS EQU   ENTRYARG+2
MEFLAG   EQU   TBLFLAGS
CBMFLAG  EQU   TBLFLAGS
TCHRFLAG EQU   TBLFLAGS
TBLPARTS EQU   ENTRYARG+3
MICTFLAG EQU   TBLPARTS
ENTRYID  EQU   ENTRYARG+4
TBLADDR  EQU   ENTRYID
PREVCHR  EQU   ENTRYID+4
VOLID    EQU   ENTRYARG+30
SEQ1CSN  EQU   ENTRYARG+36
BYTE#    EQU   ENTRYARG+48
BIT#     EQU   ENTRYARG+50
GETRC    EQU   ENTRYARG+52
MSGARG   EQU   0
MSGTYPE  EQU   MSGARG
INCNMSG  EQU   MSGTYPE
DUPLMSG  EQU   MSGTYPE
MTCHMSG  EQU   MSGTYPE
TBLTYPE  EQU   MSGARG+4
MVTTBL   EQU   TBLTYPE
VITBL    EQU   TBLTYPE
TVLTBL   EQU   TBLTYPE
MSVITBL  EQU   TBLTYPE
MICTTBL  EQU   TBLTYPE
FLDTYPE1 EQU   MSGARG+12
VSSFLD   EQU   FLDTYPE1
VESFLD   EQU   FLDTYPE1
VBSFLD   EQU   FLDTYPE1
WISFLD   EQU   FLDTYPE1
MSFFLD   EQU   FLDTYPE1
VSNFLD   EQU   FLDTYPE1
MIFLD    EQU   FLDTYPE1+1
CSNFLD   EQU   FLDTYPE1+3
IUSFLD   EQU   FLDTYPE1+3
FLDTYPE2 EQU   MSGARG+16
TBLINDEX EQU   MSGARG+20
KEYINDEX EQU   TBLINDEX
CSNINDEX EQU   KEYINDEX
CPUINDEX EQU   CSNINDEX+2
VSNINDEX EQU   TBLINDEX+13
CHRINDEX EQU   TBLINDEX+19
FLDVALUE EQU   MSGARG+68
FLDCHAR  EQU   FLDVALUE
FLDNUM   EQU   FLDCHAR
VICHKFF  EQU   0
TVLCHKFF EQU   0
MVTCHKFF EQU   0
CDBCHKFF EQU   0
VVACHKFF EQU   0
VMXCHKFF EQU   0
RPMCHKFF EQU   0
DVBCHKFF EQU   0
LPBCHKFF EQU   0
VVICOT   EQU   0
VVICHKFF EQU   VVICOT
VADCOT   EQU   0
VADCHKFF EQU   VADCOT
PSTCOT   EQU   0
PSTCHKFF EQU   PSTCOT
BASEV    EQU   0
BASNAME  EQU   BASEV
BASSERNO EQU   BASNAME+5
BASID    EQU   BASNAME+11
BASFLAGA EQU   BASEV+14
BASTYPE  EQU   BASFLAGA
BASINAC  EQU   BASFLAGA+2
BASBIND  EQU   BASFLAGA+2
BASEXCL  EQU   BASFLAGA+2
BASDAERA EQU   BASFLAGA+3
BASRONLY EQU   BASFLAGA+3
BASREASS EQU   BASFLAGA+3
BASCPUID EQU   BASEV+18
BASRCVYF EQU   BASEV+20
BASSATIA EQU   BASRCVYF
BASMISCF EQU   BASRCVYF+2
BASLIB1  EQU   BASEV+36
BASLID1  EQU   BASLIB1
BASLIB2  EQU   BASEV+49
BASLID2  EQU   BASLIB2
BASKLCPY EQU   BASEV+76
BASCOPID EQU   BASKLCPY+11
COPYV    EQU   0
COPNAME  EQU   COPYV
COPID    EQU   COPNAME+11
COPNO    EQU   COPID+1
COPFLAGA EQU   COPYV+14
COPTYPE  EQU   COPFLAGA
COPBIND  EQU   COPFLAGA+2
COPEXCL  EQU   COPFLAGA+2
COPDAERA EQU   COPFLAGA+2
COPRONLY EQU   COPFLAGA+3
COPRCVYF EQU   COPYV+20
COPSATIA EQU   COPRCVYF
COPMISCF EQU   COPRCVYF+2
COPLIB1  EQU   COPYV+36
COPLID1  EQU   COPLIB1
COPLIB2  EQU   COPYV+49
COPLID2  EQU   COPLIB2
DUPV     EQU   0
DUPNAME  EQU   DUPV
DUPID    EQU   DUPNAME+11
DUPNO    EQU   DUPID+1
DUPFLAGA EQU   DUPV+14
DUPTYPE  EQU   DUPFLAGA
DUPRCVYF EQU   DUPV+20
DUPLIB1  EQU   DUPV+36
DUPLID1  EQU   DUPLIB1
DUPLIB2  EQU   DUPV+49
DUPLID2  EQU   DUPLIB2
BCDV     EQU   0
BCDNAME  EQU   BCDV
BCDPREFX EQU   BCDNAME
BCDSERNO EQU   BCDNAME+5
BCDID    EQU   BCDNAME+11
BCDFLAGA EQU   BCDV+14
BCDTYPE  EQU   BCDFLAGA
BCDBASE  EQU   BCDTYPE
BCDCOPY  EQU   BCDTYPE
BCDFLAGB EQU   BCDFLAGA+2
BCDRCVYF EQU   BCDV+20
BCDSATIA EQU   BCDRCVYF
BCDMISCF EQU   BCDRCVYF+2
BCDCSN1  EQU   BCDV+24
BCDLIB1  EQU   BCDV+36
BCDLID1  EQU   BCDLIB1
BCDLIB2  EQU   BCDV+49
BCDLID2  EQU   BCDLIB2
CPUID    EQU   0
CPUTYPE  EQU   CPUID+18
CPUMAP   EQU   CPUID+20
CPUIDREC EQU   CPUMAP
RVVI     EQU   0
RVVLNGTH EQU   RVVI
RVVOPCOD EQU   RVVI+4
RVVOLUME EQU   RVVI+8
RVVBUFLN EQU   RVVI+30
RVVRTBUF EQU   RVVI+32
RVVCPYID EQU   RVVI+56
RVVDUPID EQU   RVVI+57
RVVFLAGA EQU   RVVI+58
RVVRMODE EQU   RVVFLAGA
RVVRDR   EQU   RVVRMODE
RVVRDNR  EQU   RVVRMODE
RVVCHAIN EQU   RVVFLAGA+1
RVVRDRCD EQU   RVVFLAGA+2
RVVBVRCD EQU   RVVRDRCD
RVVCPYRC EQU   RVVRDRCD
RVVDUPRC EQU   RVVRDRCD
RVVCPURC EQU   RVVRDRCD
RVVRTEST EQU   RVVFLAGA+3
RVVDVOL  EQU   RVVRTEST
RVVCPYTP EQU   RVVFLAGA+4
RVVSPEC  EQU   RVVFLAGA+5
RVVSCPY  EQU   RVVSPEC
RVVSDUP  EQU   RVVSPEC
RVVSVOL  EQU   RVVSPEC
WFILE    EQU   0
WFILEVAL EQU   WFILE+1
WDS      EQU   0
WDSFLG   EQU   WDS+10
WDSVAL   EQU   WDS+21
MSC      EQU   0
STGAD    EQU   0
MSVI     EQU   0
CHALL    EQU   0
COTBLIST EQU   0
COTBFLG  EQU   COTBLIST+6
COTBTID  EQU   COTBFLG
COTBEXTS EQU   COTBLIST+8
COTBVOL  EQU   COTBLIST+12
ACQLIST  EQU   0
ARLL     EQU   ACQLIST
AROP     EQU   ACQLIST+4
ARFLG    EQU   ACQLIST+6
ARBDUBD  EQU   ARFLG
ARINH    EQU   ARFLG
ARNMEXT  EQU   ACQLIST+7
ARVOL    EQU   ACQLIST+8
AREXT    EQU   ACQLIST+28
RWCSLIST EQU   0
QUCODE   EQU   RWCSLIST+6
QUSECT   EQU   RWCSLIST+7
QUXADDR  EQU   QUSECT
QUFLAG   EQU   QUXADDR
QUPARM   EQU   RWCSLIST+8
QUPTR    EQU   RWCSLIST+40
IOBUF1   EQU   0
IOBUF2   EQU   0
WCSBUF   EQU   0
WCSBF1   EQU   WCSBUF
IMERECRD EQU   0
MSGAREA  EQU   0
TEXTAREA EQU   0
FMTAREA  EQU   0
BLKDATA  EQU   0
MOVEAREA EQU   0
INFOAREA EQU   0
INFOHDR  EQU   INFOAREA
INFOWAL  EQU   INFOHDR
INFOVSN  EQU   INFOAREA+8
WDSCCHHR EQU   0
WDSSTART EQU   WDSCCHHR
WDSSCYL  EQU   WDSSTART
WDSSTRK  EQU   WDSSTART+2
WDSEND   EQU   WDSCCHHR+5
WDSECYL  EQU   WDSEND
WDSETRK  EQU   WDSEND+2
MSVIREC  EQU   0
CL0001@  EQU   0
CL0002@  EQU   0
CL0003@  EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
CDBCOT   EQU   0
DVBCOT   EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADQ0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
LPBCOT   EQU   0
NEWERID1 EQU   5
RPMCOT   EQU   0
VMXCOT   EQU   0
VVACOT   EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
QWPARM   EQU   QUPARM
QWRES1   EQU   QWPARM
QWSSID   EQU   QWRES1
QWFLAG   EQU   QWPARM+2
QWMEM    EQU   QWFLAG
QTPARM   EQU   QUPARM
QTID     EQU   QTPARM
QLPARM   EQU   QUPARM
QCPARM   EQU   QUPARM
SARYOVLY EQU   SAARRAY
SAOVLY   EQU   WCSBF1
SAFLAGS  EQU   SAOVLY+208
SAVALID  EQU   SAFLAGS
SAONLINE EQU   SAFLAGS
SAREADY  EQU   SAFLAGS
*                                      START UNREFERENCED COMPONENTS
@NM00200 EQU   SAOVLY+224
SAPOST   EQU   SAFLAGS+3
SAACTIVE EQU   SAFLAGS+2
SAWORK   EQU   SAFLAGS+1
@NM00199 EQU   SAFLAGS
SABUSY   EQU   SAFLAGS
@NM00198 EQU   SAOVLY
QCMAD3Z1 EQU   QCPARM+28
QCMAD3Z0 EQU   QCPARM+24
QCMAD2Z1 EQU   QCPARM+20
QCMAD2Z0 EQU   QCPARM+16
QCMAD1Z1 EQU   QCPARM+12
QCMAD1Z0 EQU   QCPARM+8
QCMAD0Z1 EQU   QCPARM+4
QCMAD0Z0 EQU   QCPARM
QLRES    EQU   QLPARM+2
QLZYX    EQU   QLPARM
QTRES    EQU   QTPARM+24
QTDASCHR EQU   QTPARM+20
QTDATA   EQU   QTPARM+2
QTFLAG   EQU   QTPARM+1
QTTABID  EQU   QTID
QWRES2   EQU   QWPARM+3
@NM00190 EQU   QWFLAG
@NM00202 EQU   SSRCODE
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
WDSEREC  EQU   WDSEND+4
WDSSREC  EQU   WDSSTART+4
INFODTL  EQU   INFOAREA+6
INFOTYPE EQU   INFOAREA+4
INFORTL  EQU   INFOHDR+2
WCSBF2   EQU   WCSBUF+256
QURES1   EQU   QUFLAG
QULIB    EQU   QUCODE
QURES    EQU   RWCSLIST+5
QUORD    EQU   RWCSLIST+4
QULEN    EQU   RWCSLIST
ARNEDB   EQU   ACQLIST+92
@NM00189 EQU   AREXT
ARCOMPC  EQU   ACQLIST+26
@NM00188 EQU   ACQLIST+25
ARHOST   EQU   ACQLIST+20
ARECB    EQU   ACQLIST+16
ARASID   EQU   ACQLIST+14
@NM00187 EQU   ARFLG
ARSEC    EQU   ARFLG
ARDRES   EQU   ARFLG
@NM00186 EQU   ACQLIST+5
COTBECB  EQU   COTBLIST+20
COTBASID EQU   COTBLIST+18
@NM00185 EQU   COTBFLG+1
COTBTRI  EQU   COTBFLG+1
COTBTRA  EQU   COTBFLG+1
COTBTRY  EQU   COTBFLG+1
COTBTRX  EQU   COTBFLG+1
@NM00184 EQU   COTBFLG
@NM00183 EQU   COTBLIST+5
COTBOP   EQU   COTBLIST+4
COTBLL   EQU   COTBLIST
WDSLEN   EQU   WDS+20
WDSMEM   EQU   WDS+12
WDSMLN   EQU   WDS+11
WDSFUQ   EQU   WDSFLG
WDSPOS   EQU   WDS+9
WDSPAS   EQU   WDS+1
WDSPLN   EQU   WDS
WFILELEN EQU   WFILE
@NM00182 EQU   RVVI+64
RVVSCSN  EQU   RVVSPEC
RVVSSEQ  EQU   RVVSPEC
RVVSDTE  EQU   RVVSPEC
RVVSEXP  EQU   RVVSPEC
RVVSGRP  EQU   RVVSPEC
@NM00181 EQU   RVVCPYTP
RVVCPLHD EQU   RVVCPYTP
RVVLCOPY EQU   RVVCPYTP
RVVOBKUP EQU   RVVCPYTP
RVVLBKUP EQU   RVVCPYTP
RVVBPLHD EQU   RVVRTEST
RVVACTV  EQU   RVVRTEST
RVVINACT EQU   RVVRTEST
RVVRSTD  EQU   RVVRTEST
RVVGSVOL EQU   RVVRTEST
RVVTHOLD EQU   RVVRTEST
RVVEXPDT EQU   RVVRTEST
RVVALL   EQU   RVVRDRCD
RVVCIRCD EQU   RVVRDRCD
RVVRUNKN EQU   RVVRDRCD
RVVGRPRC EQU   RVVRDRCD
@NM00180 EQU   RVVCHAIN
RVVNGVOL EQU   RVVCHAIN
RVVGPVOL EQU   RVVCHAIN
@NM00179 EQU   RVVRMODE
RVVRDCH  EQU   RVVRMODE
RVVRDCSN EQU   RVVI+44
RVVRDSEQ EQU   RVVI+43
RVVBLNK1 EQU   RVVI+42
RVVCDATE EQU   RVVI+38
RVVEXPIR EQU   RVVI+36
@NM00178 EQU   RVVI+28
RVVAREA  EQU   RVVI+24
RVVARLN  EQU   RVVI+22
RVVGROUP EQU   RVVI+14
@NM00177 EQU   RVVOPCOD+1
RVVCODE  EQU   RVVOPCOD
@NM00176 EQU   CPUID+150
CPUPURGE EQU   CPUID+148
CPUMASK  EQU   CPUMAP+6
@NM00175 EQU   CPUMAP+5
CPURES2  EQU   CPUTYPE
CPUASSOC EQU   CPUTYPE
CPURES1  EQU   CPUTYPE
CPUDNEXT EQU   CPUID+16
CPUINEXT EQU   CPUID+14
@NM00174 EQU   CPUID+13
CPUNAME  EQU   CPUID
BCD2BIT2 EQU   BCDLID2
BCD2BIT1 EQU   BCDLID2
BCDRES8  EQU   BCDLIB2
BCDCSN2  EQU   BCDV+37
BCD1BIT2 EQU   BCDLID1
BCD1BIT1 EQU   BCDLID1
BCDRE10  EQU   BCDLIB1
BCDRES7A EQU   BCDMISCF
BCDHOLD  EQU   BCDMISCF
BCDRES7  EQU   BCDSATIA
BCDVSMIS EQU   BCDSATIA
BCDIVCPY EQU   BCDSATIA
BCDIVCRE EQU   BCDSATIA
BCDCPUID EQU   BCDV+18
BCDRES5  EQU   BCDFLAGB+1
BCDREASS EQU   BCDFLAGB+1
BCDRES4  EQU   BCDFLAGB
BCDRES3  EQU   BCDTYPE
BCDDUP   EQU   BCDTYPE
BCDRES2  EQU   BCDTYPE
BCDRES1  EQU   BCDTYPE
BCDRES9  EQU   BCDV+13
BCDINDEX EQU   BCDID+1
BCDBLNK2 EQU   BCDID
BCDBLNK1 EQU   BCDPREFX+1
BCDALPHA EQU   BCDPREFX
@NM00173 EQU   DUPV+50
DUP2BIT2 EQU   DUPLID2
DUP2BIT1 EQU   DUPLID2
DUPRES4  EQU   DUPLIB2
DUPCSN2  EQU   DUPV+37
DUP1BIT2 EQU   DUPLID1
DUP1BIT1 EQU   DUPLID1
DUPRES3  EQU   DUPLIB1
DUPCSN1  EQU   DUPV+24
DUPMISCF EQU   DUPRCVYF+2
DUPSATIA EQU   DUPRCVYF
@NM00172 EQU   DUPV+18
@NM00171 EQU   DUPFLAGA+2
DUPRES2  EQU   DUPTYPE
DUPDUPLR EQU   DUPTYPE
DUPRES1  EQU   DUPTYPE
DUPRES5  EQU   DUPV+13
DUPBLANK EQU   DUPID
DUPSERNO EQU   DUPNAME+5
DUPD     EQU   DUPNAME
@NM00170 EQU   COPYV+136
COPFREXT EQU   COPYV+132
COPLEXT  EQU   COPYV+130
COPFRESP EQU   COPYV+128
COPOWNER EQU   COPYV+118
COPDEST  EQU   COPYV+88
COPDESCR EQU   COPYV+58
COPDTREM EQU   COPYV+54
COPDATE  EQU   COPYV+50
COP2BIT2 EQU   COPLID2
COP2BIT1 EQU   COPLID2
COPRES5  EQU   COPLIB2
COPCSN2  EQU   COPYV+37
COP1BIT2 EQU   COPLID1
COP1BIT1 EQU   COPLID1
COPRES4  EQU   COPLIB1
COPCSN1  EQU   COPYV+24
@NM00169 EQU   COPMISCF
COPHOLD  EQU   COPMISCF
COPRES3  EQU   COPSATIA
COPVSMIS EQU   COPSATIA
COPIVCPY EQU   COPSATIA
COPIVCRE EQU   COPSATIA
@NM00168 EQU   COPYV+18
@NM00167 EQU   COPFLAGA+3
COPDLSPF EQU   COPFLAGA+3
COPBKUP  EQU   COPFLAGA+2
COPRSTD  EQU   COPFLAGA+2
COPGENUS EQU   COPFLAGA+2
COPVSAM  EQU   COPFLAGA+2
COPGROUP EQU   COPFLAGA+2
COPRES2  EQU   COPTYPE
COPCOPYV EQU   COPTYPE
COPRES1  EQU   COPTYPE
COPRES6  EQU   COPYV+13
COPBLANK EQU   COPID
COPSERNO EQU   COPNAME+5
COPV     EQU   COPNAME
@NM00166 EQU   BASEV+192
BASXPDT2 EQU   BASEV+188
BASGROUP EQU   BASEV+180
BASRECOV EQU   BASEV+174
BASDEST  EQU   BASEV+144
BASOWNER EQU   BASEV+134
BASDESCR EQU   BASEV+104
BASDTREM EQU   BASEV+100
BASEXPDT EQU   BASEV+96
BASDLMTD EQU   BASEV+92
BASRES6  EQU   BASEV+89
BASCOPNO EQU   BASCOPID+1
BASCOPBK EQU   BASCOPID
BASCOPSN EQU   BASKLCPY+5
BASCOPV  EQU   BASKLCPY
BASFREXT EQU   BASEV+72
BASLEXT  EQU   BASEV+70
BASFRESP EQU   BASEV+68
@NM00165 EQU   BASEV+65
BASBKLMT EQU   BASEV+64
BASNBKUP EQU   BASEV+63
BASNCOPY EQU   BASEV+62
BASNEXTV EQU   BASEV+56
BASPREV  EQU   BASEV+50
BAS2BIT2 EQU   BASLID2
BAS2BIT1 EQU   BASLID2
BASRES5  EQU   BASLIB2
BASCSN2  EQU   BASEV+37
BAS1BIT2 EQU   BASLID1
BAS1BIT1 EQU   BASLID1
BASRES4  EQU   BASLIB1
BASCSN1  EQU   BASEV+24
BASRES3  EQU   BASMISCF
BASHOLD  EQU   BASMISCF
BASRES8  EQU   BASSATIA
BASVSMIS EQU   BASSATIA
BASIVCPY EQU   BASSATIA
BASIVCRE EQU   BASSATIA
@NM00164 EQU   BASFLAGA+3
BASLAST  EQU   BASFLAGA+3
BASFIRST EQU   BASFLAGA+3
BASRSTD  EQU   BASFLAGA+2
BASGENUS EQU   BASFLAGA+2
BASGRPV  EQU   BASFLAGA+2
BASNOCPY EQU   BASFLAGA+2
BASDLSF  EQU   BASFLAGA+2
BASRES2  EQU   BASTYPE
BASBASVR EQU   BASTYPE
BASRES1  EQU   BASTYPE
BASRES7  EQU   BASEV+13
BASZERO  EQU   BASID+1
BASBLANK EQU   BASID
BASEVKEY EQU   BASNAME
MSFINDEX EQU   KEYINDEX+12
@NM00161 EQU   CSNINDEX+11
@NM00160 EQU   CSNINDEX+10
SDGINDEX EQU   CSNINDEX+9
RPINDEX  EQU   CSNINDEX+8
LUAINDEX EQU   CSNINDEX+7
VVAINDEX EQU   CSNINDEX+6
VUAINDEX EQU   CSNINDEX+5
INFINDEX EQU   CSNINDEX+4
SAINDEX  EQU   CSNINDEX+3
XYZINDEX EQU   CSNINDEX
@NM00159 EQU   FLDTYPE2+1
BPFLD    EQU   FLDTYPE2+1
IPFLD    EQU   FLDTYPE2
APFLD    EQU   FLDTYPE2
FPFLD    EQU   FLDTYPE2
IPASFLD  EQU   FLDTYPE2
APASFLD  EQU   FLDTYPE2
RPFLD    EQU   FLDTYPE2
VSHSFLD  EQU   FLDTYPE2
APSFLD   EQU   FLDTYPE2
DOSFLD   EQU   FLDTYPE1+3
DVSFLD   EQU   FLDTYPE1+3
BPASFLD  EQU   FLDTYPE1+3
VUAFLD   EQU   FLDTYPE1+3
MVFLD    EQU   FLDTYPE1+3
LRUDFLD  EQU   FLDTYPE1+3
L3AFLD   EQU   FLDTYPE1+2
SDGFLD   EQU   FLDTYPE1+2
CPUFLD   EQU   FLDTYPE1+2
COSFLD   EQU   FLDTYPE1+2
CAFLD    EQU   FLDTYPE1+2
MVTPFLD  EQU   FLDTYPE1+2
BPCFLD   EQU   FLDTYPE1+2
IPCFLD   EQU   FLDTYPE1+2
APCFLD   EQU   FLDTYPE1+1
FPCFLD   EQU   FLDTYPE1+1
FPASFLD  EQU   FLDTYPE1+1
SAFLD    EQU   FLDTYPE1+1
RUAFLD   EQU   FLDTYPE1+1
VPFLD    EQU   FLDTYPE1+1
VVAFLD   EQU   FLDTYPE1+1
VRSFLD   EQU   FLDTYPE1
VMSFLD   EQU   FLDTYPE1
TBLNRSET EQU   TBLTYPE+3
@NM00158 EQU   TBLTYPE+2
VTSTBL   EQU   TBLTYPE+2
CBMTBL   EQU   TBLTYPE+2
METBL    EQU   TBLTYPE+2
CDBTBL   EQU   TBLTYPE+2
CITBL    EQU   TBLTYPE+2
VVATTBL  EQU   TBLTYPE+2
VMXTBL   EQU   TBLTYPE+1
RPMTBL   EQU   TBLTYPE+1
LPBTBL   EQU   TBLTYPE+1
DVBTBL   EQU   TBLTYPE+1
PABTBL   EQU   TBLTYPE+1
VVITTBL  EQU   TBLTYPE+1
LTRTBL   EQU   TBLTYPE+1
PSTTBL   EQU   TBLTYPE+1
VADTBL   EQU   TBLTYPE
CMTBL    EQU   TBLTYPE
SCLTBL   EQU   TBLTYPE
MSGNRSET EQU   MSGTYPE+3
@NM00157 EQU   MSGTYPE
SUMSMSG  EQU   MSGTYPE
MSFID    EQU   ENTRYARG+28
CELLBLK  EQU   ENTRYARG+26
DEVICEID EQU   ENTRYARG+24
VVADDR   EQU   ENTRYARG+22
INTFID   EQU   ENTRYARG+20
SDGNUM   EQU   ENTRYARG+18
SANUM    EQU   ENTRYARG+16
RECNUM   EQU   ENTRYID+10
ENTNUM   EQU   ENTRYID+9
RECREC   EQU   PREVCHR+4
RECHEAD  EQU   PREVCHR+2
RECCYL   EQU   PREVCHR
@NM00156 EQU   TBLPARTS
CDBFLAG  EQU   TBLPARTS
CIFLAG   EQU   TBLPARTS
LPBFLAG  EQU   TBLPARTS
DVBFLAG  EQU   TBLPARTS
PABFLAG  EQU   TBLPARTS
RPMFLAG  EQU   TBLPARTS
@NM00155 EQU   TBLFLAGS
@NM00154 EQU   RDOPTION
BUFFER2  EQU   RDOPTION
@NM00153 EQU   TBLCCHHR+5
ILTRM11  EQU   ILTRRUA
@NM00152 EQU   IVVI2
IVVIRSVD EQU   IVVI2
IVVIINTF EQU   IVVI2
@NM00151 EQU   IVVI2
IVVISHR  EQU   IVVI1
IVVIWI   EQU   IVVI1
IVVI1STR EQU   IVVI1
@NM00150 EQU   IVVI1
@NM00149 EQU   IVADFLG
IVADWI   EQU   IVADFLG
@NM00148 EQU   IVADFLG
CMX3Z1   EQU   CMENTRY
CMX3Z0   EQU   CMENTRY
CMX2Z1   EQU   CMENTRY
CMX2Z0   EQU   CMENTRY
CMX1Z1   EQU   CMENTRY
CMX1Z0   EQU   CMENTRY
CMX0Z1   EQU   CMENTRY
CMX0Z0   EQU   CMENTRY
CMCPTRS  EQU   CMCTLBLK+22
CMCFLAGS EQU   CMCTLBLK
CDBMVTP  EQU   @NM00145+2
CDBSA2D  EQU   CDBPATHS
CDBSA2C  EQU   CDBPATHS
CDBSA2B  EQU   CDBPATHS
@NM00147 EQU   CDBPATHS
CDBSA1D  EQU   CDBPATHS
CDBSA1C  EQU   CDBPATHS
CDBSA1B  EQU   CDBPATHS
@NM00146 EQU   CDBPATHS
CDB3333  EQU   CDBCNFIG
CDBINUSE EQU   CDBCNFIG
CDBNOSHR EQU   CDBCNFIG
MICAINTF EQU   MICFLAG2
@NM00144 EQU   MICFLAG2
MICCMB   EQU   MICFLAG2
MICCURMP EQU   MICFLAG2
MICINTF  EQU   MICFLAG1
@NM00143 EQU   MICFLAG1
MICAPATH EQU   MICFLAG1
MICPOTMP EQU   MICFLAG1
@NM00142 EQU   MICFLAG1
MICMPCPU EQU   @NM00141+5
CICHL    EQU   CICUCHL
@NM00140 EQU   CICUCHL
CICU     EQU   CICUCHL
CICPUID  EQU   @NM00139
@NM00138 EQU   CIENTRY+1
CIMSF3   EQU   CICSCNCT
CIMSF2   EQU   CICSCNCT
CIMSF1   EQU   CICSCNCT
CIMSF0   EQU   CICSCNCT
@NM00137 EQU   CICSCNCT
CIMSF    EQU   CICSCNCT
@NM00136 EQU   TVENTRY+23
@NM00135 EQU   TVVFLAGS
TVSCRCTG EQU   TVVFLAGS
@NM00134 EQU   TVVFLAGS
TVCECTG  EQU   TVVFLAGS
TVREC    EQU   TVTRKPTR+3
TVHEAD   EQU   TVTRKPTR+2
TVCYL    EQU   TVTRKPTR+1
@NM00133 EQU   TVTRKPTR
TVENTNUM EQU   TVCTLFLD+3
TVENTMAX EQU   TVCTLFLD+2
TVENTLEN EQU   TVCTLFLD+1
TVLSTTRK EQU   TVCFLAGS
TVENDTRK EQU   TVCFLAGS
TVLSTACT EQU   TVCFLAGS
TVLSTBLK EQU   TVCFLAGS
@NM00132 EQU   VIENTRY+7
@NM00131 EQU   VIVFLAGS
VISCRCTG EQU   VIVFLAGS
@NM00130 EQU   VIVFLAGS
VICECTG  EQU   VIVFLAGS
VIREC    EQU   VITRKPTR+3
VIHEAD   EQU   VITRKPTR+2
VICYL    EQU   VITRKPTR+1
@NM00129 EQU   VITRKPTR
VIENTNUM EQU   VICTLFLD+3
VIENTMAX EQU   VICTLFLD+2
VIENTLEN EQU   VICTLFLD+1
VIOFBLK  EQU   VICFLAGS
VIAREA   EQU   VICFLAGS
VIUSEBLK EQU   VICFLAGS
VILSTTRK EQU   VICFLAGS
VIENDTRK EQU   VICFLAGS
VILSTACT EQU   VICFLAGS
VILSTBLK EQU   VICFLAGS
@NM00128 EQU   SCENTRY+18
SCLZYX   EQU   SCENTRY+16
SCCSN    EQU   SCENTRY+4
@NM00127 EQU   SCENTRY
SCREC    EQU   SCTRKPTR+3
SCHEAD   EQU   SCTRKPTR+2
SCCYL    EQU   SCTRKPTR+1
@NM00126 EQU   SCTRKPTR
SCENTNUM EQU   SCCTLFLD+3
SCENTMAX EQU   SCCTLFLD+2
SCENTLEN EQU   SCCTLFLD+1
SCLSTTRK EQU   SCCFLAGS
SCENDTRK EQU   SCCFLAGS
SCLSTACT EQU   SCCFLAGS
SCLSTBLK EQU   SCCFLAGS
MVVUAI#  EQU   MVVUA
MVCYLMAP EQU   @NM00124+3
MVRPNUM  EQU   @NM00124+2
MVBNDCNT EQU   @NM00124+1
@NM00125 EQU   MVLOGDEV
MVDSTGC2 EQU   MVLOGDEV
MVDSTGC1 EQU   MVLOGDEV
MVPINACT EQU   MVLOGDEV
@NM00123 EQU   MVENTRY+44
MVPFI    EQU   MVENTRY+36
MVVVA    EQU   @NM00122+4
@NM00121 EQU   MVENTRY+18
@NM00120 EQU   MVVAMSG
MVINTFD  EQU   MVVAMSG
MVINTFC  EQU   MVVAMSG
MVINTFB  EQU   MVVAMSG
MVINTFA  EQU   MVVAMSG
MV3333   EQU   MVENTRY+16
MVSDG    EQU   MVENTRY+15
@NM00119 EQU   MVRESRVE
MVSA2RSV EQU   MVRESRVE
@NM00118 EQU   MVRESRVE
MVPINCNT EQU   MVENTRY+13
@NM00117 EQU   MVMFLAGS
MVREMNT  EQU   MVMFLAGS
MVMNTBND EQU   MVMFLAGS
MVMNTEXC EQU   MVMFLAGS
MVLZYX2  EQU   MVENTRY+10
MVLZYX1  EQU   MVENTRY+8
@NM00116 EQU   MVENTRY+7
@NM00115 EQU   MVVFLAGS
MVWRTINH EQU   MVVFLAGS
MVBNDVOL EQU   MVVFLAGS
MVSCRCTG EQU   MVVFLAGS
MVEXCVOL EQU   MVVFLAGS
MVSECVOL EQU   MVVFLAGS
@NM00114 EQU   MVVFLAGS
MVCECTG  EQU   MVVFLAGS
MVMVTPTR EQU   @NM00113+6
MVIVOLID EQU   @NM00113
@NM00112 EQU   MVIDXBLK+4
MVENTNUM EQU   MVIDXBLK+3
MVENTMAX EQU   MVIDXBLK+2
MVENTLEN EQU   MVIDXBLK+1
@NM00111 EQU   MVIFLAGS
MVLSTBLK EQU   MVIFLAGS
MVOFBLK  EQU   MVIFLAGS
MVOFOUT  EQU   MVIFLAGS
MVCTLBIT EQU   MVCTLBLK
MEUCBCNT EQU   @NM00110+2
MEDRVCNT EQU   @NM00110+1
MELRUCNT EQU   @NM00110
@NM00109 EQU   MERECORD+120
MEMNTCNT EQU   @NM00108+2
MEVOCNT  EQU   @NM00108+1
MEMVD2   EQU   MEFLAGS
MEMVI2   EQU   MEFLAGS
MEMVD1   EQU   MEFLAGS
MEMVI1   EQU   MEFLAGS
MEVOD2   EQU   MEFLAGS
MEVOI2   EQU   MEFLAGS
MEVOD1   EQU   MEFLAGS
MEVOI1   EQU   MEFLAGS
CBMFLAGS EQU   CBMAP+38
CBMDRIVE EQU   CBMAP+8
CBMDRC   EQU   CBMAP+6
CBMDRD   EQU   CBMAP
VVATVVA  EQU   VVAT
VMXMVT   EQU   VMX+2
@NM00107 EQU   VMX+1
@NM00106 EQU   VMXFLAGS
VMXVALID EQU   VMXFLAGS
LPBPFI   EQU   LPBMVT
LPBMSFID EQU   LPBMVT
@NM00105 EQU   LPB+2
LPBCURR  EQU   LPB+1
LPBNEXT  EQU   LPB
DVBPFI   EQU   DVBMVT
DVBMSFID EQU   DVBMVT
@NM00104 EQU   DVB+2
DVBCURR  EQU   DVB+1
DVBNEXT  EQU   DVB
PABRUA   EQU   @NM00102+3
PABORUAV EQU   PABORUA
PABSA2D  EQU   PABRINTF
PABSA2C  EQU   PABRINTF
PABSA2B  EQU   PABRINTF
@NM00103 EQU   PABRINTF
PABSA1D  EQU   PABRINTF
PABSA1C  EQU   PABRINTF
PABSA1B  EQU   PABRINTF
PABRAI   EQU   PABRINTF
PAB2M11  EQU   PABFLAGS
PABVARN  EQU   PABFLAGS
PABVBND  EQU   PABFLAGS
PABMSCT  EQU   PABFLAGS
PABMOD11 EQU   PABFLAGS
PABVARR  EQU   PABFLAGS
PABVARV  EQU   PABFLAGS
PABDEX   EQU   PABFLAGS
PABAMAP  EQU   PAB+128
PABFMAP  EQU   PAB+64
PABBCNT  EQU   @NM00101+3
PABICNT  EQU   @NM00101+2
PABACNT  EQU   @NM00101+1
PABFCNT  EQU   @NM00101
@NM00100 EQU   PAB+24
PABSRZ   EQU   PAB+23
PABSRY   EQU   PAB+22
PABSRX   EQU   PAB+21
PABSRW   EQU   PAB+20
@NM00099 EQU   PAB+18
PAB3333  EQU   PABSA
@NM00098 EQU   PABSA
PABVLDSA EQU   PABSA
PABLOTH  EQU   PAB+14
PABLODEL EQU   PAB+13
@NM00097 EQU   PAB+12
PABUPTH  EQU   PAB+10
PABUPDEL EQU   PAB+9
PABPPD   EQU   PAB+8
PABBTOT  EQU   PAB+6
PABITOT  EQU   PAB+4
PABATOT  EQU   PAB+2
PABFTOT  EQU   PAB
RPMMVT   EQU   RPM+2
RPMVPNUM EQU   RPM+1
RPMNA    EQU   RPMFLAGS
RPMMSCT  EQU   RPMFLAGS
@NM00096 EQU   RPMFLAGS
RPMIOERR EQU   RPMFLAGS
RPMVBND  EQU   RPMFLAGS
RPMBND   EQU   RPMFLAGS
RPMINACT EQU   RPMFLAGS
RPMACT   EQU   RPMFLAGS
VTVOLPFX EQU   VTABLER1+252
@NM00095 EQU   VTRVPAGE+4
VT20TO27 EQU   VTRVPAGE+3
VT18TO1F EQU   VTRVPAGE+2
VT10TO17 EQU   VTRVPAGE+1
VT08TO0F EQU   VTRVPAGE
VTLRUIOS EQU   VTLRUCW+2
VTLRUTIM EQU   VTLRUCW+1
VTLRUCLK EQU   VTLRUCW
VTTRCR   EQU   VTTRCCHR+3
VTTRCH   EQU   VTTRCCHR+2
VTTRCC   EQU   VTTRCCHR+1
VTXY     EQU   VTTRCCHR
@NM00094 EQU   VTABLER1+160
VTSADDR  EQU   VTUCB+6
VTPADDR  EQU   VTUCB+4
VTPOST   EQU   VTUCB+3
VTACTIVE EQU   VTUCB+2
VTWORK   EQU   VTUCB+1
VTSBUSY  EQU   VTFLAGS
VTSREADY EQU   VTFLAGS
VTSONLIN EQU   VTFLAGS
VTSVALID EQU   VTFLAGS
VTPBUSY  EQU   VTFLAGS
VTPREADY EQU   VTFLAGS
VTPONLIN EQU   VTFLAGS
VTPVALID EQU   VTFLAGS
VTLRU1   EQU   VTSDGID+3
VTLRU0   EQU   VTSDGID+2
VTL33331 EQU   VTSDGID+1
VTL33330 EQU   VTSDGID
@NM00093 EQU   VTTBLCHR
@NM00092 EQU   @NM00091+2
VTIMPLS  EQU   @NM00091
VTPACKID EQU   VTABLER1
LTRMOD11 EQU   LTRRUA
PSTCYLW  EQU   PST+3
PSTCYLV  EQU   PST+2
VVITPCDD EQU   VVITBYT2
VVITPCDC EQU   VVITBYT2
VVITPCDB EQU   VVITBYT2
VVITRSVD EQU   VVITBYT2
VVITINTF EQU   VVITBYT2
VVITVVB  EQU   VVITBYT2
VVITCC   EQU   VVITBYT2
VVITVVS  EQU   VVITBYT1
VVITVVWI EQU   VVITBYT1
VVITFR   EQU   VVITBYT1
VVITNBM  EQU   VVITBYT1
VVITDEDD EQU   VVITBYT1
VVITDEDC EQU   VVITBYT1
VVITDEDB EQU   VVITBYT1
VVITDEDA EQU   VVITBYT1
VADRM    EQU   VADFLAGS
VADVSI   EQU   VADFLAGS
VADRDED  EQU   VADFLAGS
VADRB    EQU   VADFLAGS
VADRR    EQU   VADFLAGS
VADVWI   EQU   VADFLAGS
VADVWG   EQU   VADFLAGS
VADVRW   EQU   VADFLAGS
VADPOH   EQU   VADWORD2+2
VADUDE   EQU   VADLUA
VADMOD11 EQU   VADRPNUM
VADLINK  EQU   VADWORD1+3
VADUCS   EQU   VADRUA
VADCCR   EQU   VADRUA
VADEDI   EQU   VADRUA
VADVFM   EQU   VADWORD1
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00090 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00089 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00088 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00087 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00086 EQU   VSDSCR+5
@NM00085 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00084 EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00083 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00082 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00081 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00080 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00079 EQU   VSDVTOC
@NM00078 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00077 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00076 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00075 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00074 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLVTOC  EQU   VOLLABEL+15
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
VOLKEY   EQU   VOLLABEL
STAVTTR  EQU   STAEPARM+54
@NM00071 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00070 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00069 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00068 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00067 EQU   RCTAGL+10
@NM00066 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00065 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00064 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00063 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00062 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00061 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00060 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00059 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00058 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00057 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00056 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
EXRWFUN  EQU   EXWRARG+46
@NM00055 EQU   EXSPACE+8
@NM00054 EQU   EXSPACE+6
@NM00053 EQU   EXSPACE+4
@NM00052 EQU   EXSPACE+1
@NM00051 EQU   EXSPACE
EXRWKDLN EQU   EXWRARG+32
@NM00050 EQU   EXWRARG+31
EXRECNUM EQU   EXRWCHR+4
EXHH     EQU   EXRWCHR+2
EXCC     EQU   EXRWCHR
EXCCWCNT EQU   EXWRARG+24
EXLOCPTR EQU   EXWRARG+20
EXRWDARE EQU   EXWRARG+16
EXRWIOAR EQU   EXWRARG+12
EXRWCTBL EQU   EXWRARG+8
EXRWRES  EQU   EXWRARG
EXGDATAL EQU   EXGARG+30
@NM00049 EQU   EXGARG+29
EXGKEYLN EQU   EXGARG+28
EXGDATAP EQU   EXGARG+24
EXGRECNO EQU   EXGARG+20
EXGCCHH2 EQU   EXGARG+16
EXGCCHH1 EQU   EXGARG+12
EXGHEAD  EQU   EXGARG
EXOVTH   EQU   EXFLG
EXORVT   EQU   EXFLG
EXORDS   EQU   EXFLG
EXOSPK   EQU   EXFLG
EXORVS   EQU   EXFLG
@NM00048 EQU   EXFLG
EXOREAD  EQU   EXFLG
@NM00047 EQU   EXOPT
EXOREP   EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXONEW   EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOUCB   EQU   EXOARG+20
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXOHEAD  EQU   EXOARG
@NM00046 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00045 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKDATYPE EQU   CKAGL+20
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00044 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
@NM00043 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00042 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00041 EQU   CMMSG+7
@NM00040 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00039 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00038 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
@NM00037 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00036 EQU   DMPITM+15
@NM00035 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00034 EQU   ERCNVTAB+4
@NM00033 EQU   ERCNVTAB+3
@NM00032 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGCNT  EQU   DARGLIST+14
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
*                                      END UNREFERENCED COMPONENTS
@RF00495 EQU   @EL00002
@RF00772 EQU   @EL00003
@RC00803 EQU   @RC00788
@RF00851 EQU   @RC00847
@RF00856 EQU   @EL00004
@RC00873 EQU   @EL00004
@RF00922 EQU   @EL00005
@RC00961 EQU   @RC00960
@RC01072 EQU   @RC01071
@RT01164 EQU   @EL00007
@RT01169 EQU   @EL00007
@RT01291 EQU   @EL00007
@RC01332 EQU   @EL00008
@RC01379 EQU   @EL00008
@RF01415 EQU   CE0002@
@RF01432 EQU   CE0002@
@RF01449 EQU   CE0002@
@RF01466 EQU   CE0002@
@RF01477 EQU   CE0002@
@RF01563 EQU   CE0003@
@RF01572 EQU   CE0003@
@RF01600 EQU   CE0003@
@RF01609 EQU   CE0003@
@RF01637 EQU   CE0003@
@RF01646 EQU   CE0003@
@RF01674 EQU   CE0003@
@RF01683 EQU   CE0003@
@RF01694 EQU   CE0003@
@RF01705 EQU   CE0003@
@RT01748 EQU   @EL00009
@RC01390 EQU   @EL00009
@RF01763 EQU   @EL00009
@RF01863 EQU   @EL00010
@RF01958 EQU   @RC01943
@PB00012 EQU   @EL00001
@RC01073 EQU   @RC01072
@RT01374 EQU   @RC01332
@RF01523 EQU   @RC01390
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCCH01,(C'PLS1344',0603,77297)
