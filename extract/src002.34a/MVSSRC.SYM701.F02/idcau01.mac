         TITLE '**************** IDCAU01: AUDITMSS FSR *****************
               *        '
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCAU01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCAU01   76.356'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @10,0                                               0002
@PSTART  LA    @12,4095(,@10)                                      0002
         USING @PSTART,@10                                         0002
         USING @PSTART+4095,@12                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0352
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE MAIN ROUTINE FOR THE AUDITMSS FSR.        @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0352
*   IF GDTDBG=NULLPTR THEN                                         0352
         L     @05,@PC00001                                        0352
         L     @05,GDTDBG(,@05)                                    0352
         LTR   @05,@05                                             0352
         BZ    @RT00352                                            0352
*     ;                                                            0353
*   ELSE                                                           0354
*     CALL IDCDB010(GDTTBL,'AUAA'); /*                       @Z40LB25*/
         L     @05,@PC00001                                        0354
         ST    @05,@AL00001                                        0354
         LA    @15,@CC01705                                        0354
         ST    @15,@AL00001+4                                      0354
         MVI   @AL00001+4,X'80'                                    0354
         L     @15,GDTDBG(,@05)                                    0354
         LA    @01,@AL00001                                        0354
         BALR  @14,@15                                             0354
*   OLDERID2=NEWERID2;                                             0355
@RT00352 L     @02,@PC00001                                        0355
         L     @02,GDTTR2(,@02)                                    0355
         MVC   @TS00001(95),NEWERID2(@02)                          0355
         MVC   OLDERID2(95,@02),@TS00001                           0355
*   NEWID2='AUAA';                  /*                       @Z40LB25*/
*                                                                  0356
         MVC   NEWID2(4,@02),@CC01705                              0356
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE LISTS AND POINTERS.                        @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0357
*   FLAGS=''B;                      /* INIT WORK FLAGS       @Z40LB25*/
         MVI   FLAGS,X'00'                                         0357
*   OPNPTR=ADDR(OPENLIST);          /* OPEN LIST PTR         @Z40LB25*/
         LA    OPNPTR,OPENLIST                                     0358
*   PRINTME=PRTFILE;                /* DEFLT SYSPRINT        @Z40LB25*/
         SLR   @02,@02                                             0359
         ST    @02,PRINTME                                         0359
*   LABDSPTR=NULLPTR;               /* DEFLT NO LABEL        @Z40LB25
*                                      DATA SET              @Z40LB25*/
         ST    @02,LABDSPTR                                        0360
*   IOCSPTR=''B;                    /* I/O CONT BLK          @Z40LB25*/
         SLR   @15,@15                                             0361
         ST    @15,IOCSPTR                                         0361
*   CIENTPTR=ADDR(RECDBUF);         /* CONFIG INDEX TABLE    @Z40LB25*/
         LA    CIENTPTR,RECDBUF                                    0362
*   RDTBLPTR=ADDR(QURYAREA);        /* READ TABLE LIST       @Z40LB25*/
         LA    @15,QURYAREA                                        0363
         ST    @15,RDTBLPTR                                        0363
*   DDSTRU=ADDR(PRINTAB);           /* PRINT MSGS            @Z40LB25*/
         LA    @15,PRINTAB                                         0364
         ST    @15,DDSTRU                                          0364
*   BLKPTR=ADDR(AU0PLIST);          /* PARM - IDCAU02 &      @Z40LB25
*                                      IDCAU03               @Z40LB25*/
*                                                                  0365
         LA    @15,AU0PLIST                                        0365
         ST    @15,BLKPTR                                          0365
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF THE USER SPECIFIED A DDNAME OR DSNAME TO      @Z40LB25*/
*   /* BE USED AS THE OUTPUT DATA SET. IF YES, ISSUE         @Z40LB25*/
*   /* THE UOPEN MACRO. IF NO, USE SYSPRINT AS DEFAULT.      @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0366
*   IF(ADDR(OFILE)^=NULLPTR×ADDR(ODS)^=NULLPTR)&LASTCOND=LASTCC00 THEN
         L     @15,@PC00001+4                                      0366
         C     @02,FDTPTR+56(,@15)                                 0366
         BNE   @GL00001                                            0366
         C     @02,FDTPTR+60(,@15)                                 0366
         BE    @RF00366                                            0366
@GL00001 SLR   @02,@02                                             0366
         L     @15,@PC00001+8                                      0366
         CH    @02,LASTCOND(,@15)                                  0366
         BNE   @RF00366                                            0366
*     DO;                           /*                       @Z40LB25*/
*       OPENLIST=''B;               /*                       @Z40LB25*/
         XC    OPENLIST(48),OPENLIST                               0368
*       IF ADDR(ODS)^=NULLPTR THEN                                 0369
         L     @04,@PC00001+4                                      0369
         L     @04,FDTPTR+60(,@04)                                 0369
         CR    @04,@02                                             0369
         BE    @RF00369                                            0369
*         OPNDSN=ADDR(ODSVAL);      /*                       @Z40LB25*/
         LA    @04,ODSVAL(,@04)                                    0370
         ST    @04,OPNDSN(,OPNPTR)                                 0370
*       ELSE                                                       0371
*         OPNDDN=ADDR(OFILEVAL);    /*                       @Z40LB25*/
         B     @RC00369                                            0371
@RF00369 L     @04,@PC00001+4                                      0371
         L     @04,FDTPTR+56(,@04)                                 0371
         LA    @04,OFILEVAL(,@04)                                  0371
         ST    @04,OPNDDN(,OPNPTR)                                 0371
*       OPNOPTOT=ON;                /*                       @Z40LB25*/
@RC00369 OI    OPNOPTOT(OPNPTR),B'01000000'                        0372
*       OPNMODAC=ON;                /*                       @Z40LB25*/
         OI    OPNMODAC(OPNPTR),B'01000000'                        0373
*       OPNIOC=ADDR(IOCSPTR);       /*                       @Z40LB25*/
         LA    @02,IOCSPTR                                         0374
         ST    @02,OPNIOC(,OPNPTR)                                 0374
*       CALL IDCIOOP0(GDTTBL,OPNAGL);/*                      @Z40LB25*/
         L     @02,@PC00001                                        0375
         ST    @02,@AL00001                                        0375
         ST    OPNPTR,@AL00001+4                                   0375
         MVI   @AL00001+4,X'80'                                    0375
         L     @15,GDTOPN(,@02)                                    0375
         LA    @01,@AL00001                                        0375
         BALR  @14,@15                                             0375
*       RESPECIFY                                                  0376
*         RTNREG RSTD;                                             0376
*       TESTRC=RTNREG;                                             0377
         LR    TESTRC,RTNREG                                       0377
*       RESPECIFY                                                  0378
*         RTNREG UNRSTD;            /*                       @Z40LB25*/
*       IF TESTRC=0 THEN                                           0379
         LTR   TESTRC,TESTRC                                       0379
         BNZ   @RF00379                                            0379
*         PRINTME=IOCSPTR;          /*                       @Z40LB25*/
         L     @02,IOCSPTR                                         0380
         ST    @02,PRINTME                                         0380
*       ELSE                                                       0381
*         LASTCOND=LASTCC12;        /*                       @Z40LB25*/
         B     @RC00379                                            0381
@RF00379 L     @02,@PC00001+8                                      0381
         MVC   LASTCOND(2,@02),@CH00567                            0381
*     END;                          /*                       @Z40LB25*/
*                                                                  0382
@RC00379 DS    0H                                                  0383
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE USER SPECIFIED A SEQUENTIAL DSNAME OR          @Z40LB25*/
*   /* DDNAME FOR THE READLABEL OPTION, THEN ISSUE           @Z40LB25*/
*   /* THE UOPEN MACRO.                                      @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0383
*   IF(ADDR(LFILE)^=NULLPTR×ADDR(LDS)^=NULLPTR)&LASTCOND=LASTCC00 THEN
@RF00366 SLR   @02,@02                                             0383
         L     @15,@PC00001+4                                      0383
         C     @02,FDTPTR+72(,@15)                                 0383
         BNE   @GL00003                                            0383
         C     @02,FDTPTR+76(,@15)                                 0383
         BE    @RF00383                                            0383
@GL00003 SLR   @02,@02                                             0383
         L     @15,@PC00001+8                                      0383
         CH    @02,LASTCOND(,@15)                                  0383
         BNE   @RF00383                                            0383
*     DO;                           /*                       @Z40LB25*/
*       OPENLIST=''B;               /*                       @Z40LB25*/
         XC    OPENLIST(48),OPENLIST                               0385
*       IF ADDR(LDS)^=NULLPTR THEN                                 0386
         L     @04,@PC00001+4                                      0386
         L     @04,FDTPTR+76(,@04)                                 0386
         CR    @04,@02                                             0386
         BE    @RF00386                                            0386
*         OPNDSN=ADDR(LDSVAL);      /*                       @Z40LB25*/
         LA    @04,LDSVAL(,@04)                                    0387
         ST    @04,OPNDSN(,OPNPTR)                                 0387
*       ELSE                                                       0388
*         OPNDDN=ADDR(LFILEVAL);    /*                       @Z40LB25*/
         B     @RC00386                                            0388
@RF00386 L     @04,@PC00001+4                                      0388
         L     @04,FDTPTR+72(,@04)                                 0388
         LA    @04,LFILEVAL(,@04)                                  0388
         ST    @04,OPNDDN(,OPNPTR)                                 0388
*       OPNOPTOT=ON;                /*                       @Z40LB25*/
@RC00386 OI    OPNOPTOT(OPNPTR),B'01000000'                        0389
*       OPNRFMFX=ON;                /* FIXED                 @Z40LB25*/
*       OPNRFMBK=ON;                /* BLOCKED               @Z40LB25*/
         OI    OPNRFMFX(OPNPTR),B'10001000'                        0391
*       OPNREC=LABRECLN;            /* REC LEN 256           @Z40LB25*/
         MVC   OPNREC(4,OPNPTR),@CF01234                           0392
*       OPNIOC=ADDR(IOCSPTR);       /*                       @Z40LB25*/
         LA    @02,IOCSPTR                                         0393
         ST    @02,OPNIOC(,OPNPTR)                                 0393
*       CALL IDCIOOP0(GDTTBL,OPNAGL);/*                      @Z40LB25*/
         L     @02,@PC00001                                        0394
         ST    @02,@AL00001                                        0394
         ST    OPNPTR,@AL00001+4                                   0394
         MVI   @AL00001+4,X'80'                                    0394
         L     @15,GDTOPN(,@02)                                    0394
         LA    @01,@AL00001                                        0394
         BALR  @14,@15                                             0394
*       RESPECIFY                                                  0395
*         RTNREG RSTD;                                             0395
*       TESTRC=RTNREG;                                             0396
         LR    TESTRC,RTNREG                                       0396
*       RESPECIFY                                                  0397
*         RTNREG UNRSTD;            /*                       @Z40LB25*/
*       IF TESTRC=0 THEN                                           0398
         LTR   TESTRC,TESTRC                                       0398
         BNZ   @RF00398                                            0398
*         LABDSPTR=IOCSPTR;         /*                       @Z40LB25*/
         L     @15,IOCSPTR                                         0399
         ST    @15,LABDSPTR                                        0399
*       ELSE                                                       0400
*         LASTCOND=LASTCC12;        /*                       @Z40LB25*/
         B     @RC00398                                            0400
@RF00398 L     @15,@PC00001+8                                      0400
         MVC   LASTCOND(2,@15),@CH00567                            0400
*     END;                          /*                       @Z40LB25*/
@RC00398 DS    0H                                                  0402
*                                                                  0402
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LASTCOND = 0, THEN OBTAIN THE CONFIGURATION INDEX  @Z40LB25*/
*   /* TABLE AND CHECK THE AVAILABILITY OF THE MSF.          @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0402
*   IF LASTCOND=LASTCC00 THEN                                      0402
@RF00383 SLR   @15,@15                                             0402
         L     @14,@PC00001+8                                      0402
         CH    @15,LASTCOND(,@14)                                  0402
         BNE   @RF00402                                            0402
*     DO;                           /*                       @Z40LB25*/
*       RDTBLIST=RDTBLIST&&RDTBLIST;/* 0 READ TBL LIST       @Z40LB25*/
         L     @04,RDTBLPTR                                        0404
         XC    RDTBLIST(44,@04),RDTBLIST(@04)                      0404
*       QTFLAG=READTBL;             /* READ TABLE            @Z40LB25*/
         MVI   QTFLAG(@04),B'00000001'                             0405
*       QUPTR=ADDR(DIAGBUF);        /* DIAG BUFFER           @Z40LB25*/
         LA    @02,DIAGBUF                                         0406
         ST    @02,QUPTR(,@04)                                     0406
*       QTTABID=CONFIGID;           /* CONFIG TBLE ID        @Z40LB25*/
         NI    QTTABID(@04),B'01111111'                            0407
         OI    QTTABID(@04),B'01110000'                            0407
*       CONFIG=CONFIGTB;            /* CONFIG TABLE          @Z40LB25*/
*                                                                  0408
         MVI   CONFIG(@04),B'00000000'                             0408
*       /*************************************************************/
*       /*                                                           */
*       /* DUMP THE PARM LIST, IF REQUESTED.                 @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0409
*       QAREALN=LENGTH(QURYAREA);   /* PARM LIST LENGTH      @Z40LB25*/
         LA    QAREALN,44                                          0409
*       IF GDTDBG=NULLPTR THEN                                     0410
         L     @04,@PC00001                                        0410
         C     @15,GDTDBG(,@04)                                    0410
         BE    @RT00410                                            0410
*         ;                                                        0411
*       ELSE                                                       0412
*         DO;                                                      0412
*           DMPINDEX=ADDR(DMPSTG);  /*                       @Z40LB25*/
         LA    DMPINDEX,DMPSTG                                     0413
*           DMPITMNM='QURYAREA';                                   0414
         MVC   DMPITMNM(8,DMPINDEX),@CC01707                       0414
*           DMPITMPT=ADDR(QURYAREA);                               0415
         LA    @04,QURYAREA                                        0415
         ST    @04,DMPITMPT(,DMPINDEX)                             0415
*           DMPITMLN=QAREALN;                                      0416
         STH   QAREALN,DMPITMLN(,DMPINDEX)                         0416
*           DMPITMTP='H';                                          0417
         MVI   DMPITMTP(DMPINDEX),C'H'                             0417
*           DMPINDEX=DMPINDEX+DMPELEMT;/*                    @Z40LB25
*                                      QTAB PARM LIST        @Z40LB25*/
         AL    DMPINDEX,@CF00473                                   0418
*           DMPTRM=DMPTRMVL;                                       0419
         MVI   DMPTRM(DMPINDEX),X'FF'                              0419
*         END;                      /*                       @Z40LB25*/
*       IF GDTDBG=NULLPTR THEN                                     0421
@RT00410 L     @04,@PC00001                                        0421
         L     @04,GDTDBG(,@04)                                    0421
         LTR   @04,@04                                             0421
         BZ    @RT00421                                            0421
*         ;                                                        0422
*       ELSE                                                       0423
*         CALL IDCDB010(GDTTBL,'AUAB',ADDR(DMPSTG));/*       @Z40LB25*/
*                                                                  0423
         L     @04,@PC00001                                        0423
         ST    @04,@AL00001                                        0423
         LA    @15,@CC01709                                        0423
         ST    @15,@AL00001+4                                      0423
         LA    @15,DMPSTG                                          0423
         ST    @15,@AFTEMPS                                        0423
         LA    @15,@AFTEMPS                                        0423
         ST    @15,@AL00001+8                                      0423
         MVI   @AL00001+8,X'80'                                    0423
         L     @15,GDTDBG(,@04)                                    0423
         LA    @01,@AL00001                                        0423
         BALR  @14,@15                                             0423
*       /*************************************************************/
*       /*                                                           */
*       /* GET THE CONFIGURATION TABLE.                      @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0424
*       CALL IDCSASS0(GDTTBL,RDMSCTBL,RDTBLPTR,REASONCD);/*  @Z40LB25*/
@RT00421 L     @15,@PC00001                                        0424
         ST    @15,@AL00001                                        0424
         LA    @14,RDMSCTBL                                        0424
         ST    @14,@AL00001+4                                      0424
         LA    @14,RDTBLPTR                                        0424
         ST    @14,@AL00001+8                                      0424
         LA    @14,REASONCD                                        0424
         ST    @14,@AL00001+12                                     0424
         MVI   @AL00001+12,X'80'                                   0424
         L     @15,GDTSSC(,@15)                                    0424
         LA    @01,@AL00001                                        0424
         BALR  @14,@15                                             0424
*       RESPECIFY                                                  0425
*         RTNREG RSTD;                                             0425
*       TESTRC=RTNREG;                                             0426
         LR    TESTRC,RTNREG                                       0426
*       RESPECIFY                                                  0427
*         RTNREG UNRSTD;            /* SAVE RET CODE         @Z40LB25*/
*                                                                  0427
*       /*************************************************************/
*       /*                                                           */
*       /* TEST THE RETURN CODE FROM USSC. IF IT IS          @Z40LB25*/
*       /* A 04 CALL SSCMSG TO PRINT THE MESSAGE FOR         @Z40LB25*/
*       /* THE RETURNED REASON CODE. IF IT IS 04 OR 08       @Z40LB25*/
*       /* PRINT MESSAGE IDC31140I.                          @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0428
*       IF TESTRC=4 THEN            /*                       @Z40LB25*/
         C     TESTRC,@CF00041                                     0428
         BNE   @RF00428                                            0428
*         CALL SSCMSG(REASONCD);    /*                       @Z40LB25*/
         LA    @15,REASONCD                                        0429
         ST    @15,@AL00001                                        0429
         LA    @01,@AL00001                                        0429
         BAL   @14,SSCMSG                                          0429
*       IF TESTRC=4×TESTRC=8 THEN   /*                       @Z40LB25*/
@RF00428 C     TESTRC,@CF00041                                     0430
         BE    @RT00430                                            0430
         C     TESTRC,@CF00178                                     0430
         BNE   @RF00430                                            0430
@RT00430 DS    0H                                                  0431
*         DO;                       /*                       @Z40LB25*/
*           LASTCOND=LASTCC12;      /*                       @Z40LB25*/
         L     @05,@PC00001+8                                      0432
         MVC   LASTCOND(2,@05),@CH00567                            0432
*           PRINTAB=''B;            /*                       @Z40LB25*/
         XC    PRINTAB(20),PRINTAB                                 0433
*           DARGSMOD=AUDMSG;        /*                       @Z40LB25*/
         L     @05,DDSTRU                                          0434
         MVC   DARGSMOD(3,@05),@CC01693                            0434
*           DARGSENT=MG31140I;      /*                       @Z40LB25*/
         MVI   DARGSENT(@05),X'02'                                 0435
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Z40LB25*/
         L     @05,@PC00001                                        0436
         ST    @05,@AL00001                                        0436
         LA    @15,@CF00114                                        0436
         ST    @15,@AL00001+4                                      0436
         LA    @15,DDSTRU                                          0436
         ST    @15,@AL00001+8                                      0436
         MVI   @AL00001+8,X'80'                                    0436
         L     @15,GDTPRT(,@05)                                    0436
         LA    @01,@AL00001                                        0436
         BALR  @14,@15                                             0436
*         END;                      /*                       @Z40LB25*/
*                                                                  0437
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK THE CONFIGURATION INDEX TABLE ENTRIES TO    @Z40LB25*/
*       /* VERIFY THE SPECIFIED MSF IS AVAILABLE.            @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0438
*       ELSE                        /*                       @Z40LB25*/
*         IF MSFVAL^=MSFZERO THEN   /*                       @Z40LB25*/
         B     @RC00430                                            0438
@RF00430 L     @15,@PC00001+4                                      0438
         L     @01,FDTPTR+24(,@15)                                 0438
         L     @15,MSFVAL(,@01)                                    0438
         LTR   @15,@15                                             0438
         BZ    @RF00438                                            0438
*           DO;                     /*                       @Z40LB25*/
*             BADMSF=ON;            /*                       @Z40LB25*/
         OI    BADMSF,B'10000000'                                  0440
*             DO I=1 BY 1 TO CONFIGNM WHILE BADMSF=ON;/*     @Z40LB25*/
         LA    I,1                                                 0441
@DL00441 TM    BADMSF,B'10000000'                                  0441
         BNO   @DC00441                                            0441
*               IF CIMSF(I)=OFF THEN                               0442
         LR    @03,I                                               0442
         SLA   @03,3                                               0442
         ST    @03,@TF00001                                        0442
         ALR   @03,CIENTPTR                                        0442
         AL    @03,@CF01745                                        0442
         TM    CIMSF(@03),B'10000000'                              0442
         BNZ   @RF00442                                            0442
*                 DO;               /*                       @Z40LB25*/
*                   IF CIMSF1(I)=ON THEN                           0444
         LR    @03,CIENTPTR                                        0444
         AL    @03,@TF00001                                        0444
         AL    @03,@CF01745                                        0444
         TM    CIMSF1(@03),B'00000100'                             0444
         BNO   @RF00444                                            0444
*                     IF MSFVAL=MSFONE THEN                        0445
         L     @03,@PC00001+4                                      0445
         L     @03,FDTPTR+24(,@03)                                 0445
         CLC   MSFVAL(4,@03),@CF00218                              0445
         BNE   @RF00445                                            0445
*                       BADMSF=OFF;                                0446
         NI    BADMSF,B'01111111'                                  0446
*                   IF CIMSF2(I)=ON THEN                           0447
@RF00445 DS    0H                                                  0447
@RF00444 LR    @03,I                                               0447
         SLA   @03,3                                               0447
         ALR   @03,CIENTPTR                                        0447
         AL    @03,@CF01745                                        0447
         TM    CIMSF2(@03),B'00000010'                             0447
         BNO   @RF00447                                            0447
*                     IF MSFVAL=MSFTWO THEN                        0448
         L     @03,@PC00001+4                                      0448
         L     @03,FDTPTR+24(,@03)                                 0448
         CLC   MSFVAL(4,@03),@CF00152                              0448
         BNE   @RF00448                                            0448
*                       BADMSF=OFF;                                0449
         NI    BADMSF,B'01111111'                                  0449
*                   IF CIMSF3(I)=ON THEN                           0450
@RF00448 DS    0H                                                  0450
@RF00447 LR    @03,I                                               0450
         SLA   @03,3                                               0450
         ALR   @03,CIENTPTR                                        0450
         AL    @03,@CF01745                                        0450
         TM    CIMSF3(@03),B'00000001'                             0450
         BNO   @RF00450                                            0450
*                     IF MSFVAL=MSFTHREE THEN                      0451
         L     @03,@PC00001+4                                      0451
         L     @03,FDTPTR+24(,@03)                                 0451
         CLC   MSFVAL(4,@03),@CF00161                              0451
         BNE   @RF00451                                            0451
*                       BADMSF=OFF;                                0452
         NI    BADMSF,B'01111111'                                  0452
*                 END;              /*                       @Z40LB25*/
@RF00451 DS    0H                                                  0453
@RF00450 DS    0H                                                  0454
*             END;                  /*                       @Z40LB25*/
*                                                                  0454
@RF00442 AL    I,@CF00218                                          0454
         C     I,@CF00473                                          0454
         BNH   @DL00441                                            0454
@DC00441 DS    0H                                                  0455
*             /*******************************************************/
*             /*                                                     */
*             /* IF THE MSF WAS NOT FOUND, BADMSF WILL       @Z40LB25*/
*             /* BE ON. IF ON, ISSUE MESSAGE IDC3822I.       @Z40LB25*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0455
*             IF BADMSF=ON THEN     /*                       @Z40LB25*/
         TM    BADMSF,B'10000000'                                  0455
         BNO   @RF00455                                            0455
*               DO;                 /*                       @Z40LB25*/
*                 LASTCOND=LASTCC12;/*                       @Z40LB25*/
         L     @05,@PC00001+8                                      0457
         MVC   LASTCOND(2,@05),@CH00567                            0457
*                 PRINTAB=''B;      /*                       @Z40LB25*/
         XC    PRINTAB(20),PRINTAB                                 0458
*                 DARGSMOD=AUDMSG;  /*                       @Z40LB25*/
         L     @05,DDSTRU                                          0459
         MVC   DARGSMOD(3,@05),@CC01693                            0459
*                 DARGSENT=MSG3822I;/*                       @Z40LB25*/
         MVI   DARGSENT(@05),X'01'                                 0460
*                 CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*    @Z40LB25*/
         L     @05,@PC00001                                        0461
         ST    @05,@AL00001                                        0461
         LA    @15,@CF00114                                        0461
         ST    @15,@AL00001+4                                      0461
         LA    @15,DDSTRU                                          0461
         ST    @15,@AL00001+8                                      0461
         MVI   @AL00001+8,X'80'                                    0461
         L     @15,GDTPRT(,@05)                                    0461
         LA    @01,@AL00001                                        0461
         BALR  @14,@15                                             0461
*               END;                /*                       @Z40LB25*/
*           END;                    /*                       @Z40LB25*/
@RF00455 DS    0H                                                  0464
*     END;                          /*                       @Z40LB25*/
@RF00438 DS    0H                                                  0464
@RC00430 DS    0H                                                  0465
*                                                                  0465
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LASTCOND = 0, THEN OBTAIN THE CURRENT CELL MAP     @Z40LB25*/
*   /* FOR THE INPUT MSF AND THE ORIGINAL CELL MAP.          @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0465
*   IF LASTCOND=LASTCC00 THEN                                      0465
@RF00402 SLR   @05,@05                                             0465
         L     @15,@PC00001+8                                      0465
         CH    @05,LASTCOND(,@15)                                  0465
         BNE   @RF00465                                            0465
*     DO;                           /*                       @Z40LB25*/
*                                                                  0466
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD THE PARAMETER LIST TO READ THE CELL MAPS.   @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0467
*       RDTBLIST=RDTBLIST&&RDTBLIST;/* 0 READ TBL LIST       @Z40LB25*/
         L     @15,RDTBLPTR                                        0467
         XC    RDTBLIST(44,@15),RDTBLIST(@15)                      0467
*       QTFLAG=READTBL;             /* READ TABLE            @Z40LB25*/
         MVI   QTFLAG(@15),B'00000001'                             0468
*       QUPTR=ADDR(DIAGBUF);        /* DIAG BUF              @Z40LB25*/
         LA    @14,DIAGBUF                                         0469
         ST    @14,QUPTR(,@15)                                     0469
*       QTTABID=MAPID;              /* CELL MAP ID           @Z40LB25*/
*                                                                  0470
         NI    QTTABID(@15),B'10011111'                            0470
         OI    QTTABID(@15),B'10010000'                            0470
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE MSF TO GET THE RECORD OF 5 BLOCKS.        @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0471
*       IF MSFVAL=MSFZERO           /* MSF 0?                @Z40LB25*/
*         THEN                      /* YES                   @Z40LB25*/
         L     @14,@PC00001+4                                      0471
         L     @01,FDTPTR+24(,@14)                                 0471
         C     @05,MSFVAL(,@01)                                    0471
         BNE   @RF00471                                            0471
*         RDRECORD=MSF0;            /* MSF 0                 @Z40LB25*/
         MVI   RDRECORD(@15),B'00000000'                           0472
*       IF MSFVAL=MSFONE            /* MSF 1?                @Z40LB25*/
*         THEN                      /* YES                   @Z40LB25*/
@RF00471 L     @05,@PC00001+4                                      0473
         L     @05,FDTPTR+24(,@05)                                 0473
         CLC   MSFVAL(4,@05),@CF00218                              0473
         BNE   @RF00473                                            0473
*         RDRECORD=MSF1;            /* MSF 1                 @Z40LB25*/
         L     @05,RDTBLPTR                                        0474
         MVI   RDRECORD(@05),B'00000001'                           0474
*       IF MSFVAL=MSFTWO            /*                       @Z40LB25*/
*         THEN                      /* YES                   @Z40LB25*/
@RF00473 L     @05,@PC00001+4                                      0475
         L     @05,FDTPTR+24(,@05)                                 0475
         CLC   MSFVAL(4,@05),@CF00152                              0475
         BNE   @RF00475                                            0475
*         RDRECORD=MSF2;            /*                       @Z40LB25*/
         L     @05,RDTBLPTR                                        0476
         MVI   RDRECORD(@05),B'00000010'                           0476
*       IF MSFVAL=MSFTHREE          /*                       @Z40LB25*/
*         THEN                      /* YES                   @Z40LB25*/
@RF00475 L     @05,@PC00001+4                                      0477
         L     @05,FDTPTR+24(,@05)                                 0477
         CLC   MSFVAL(4,@05),@CF00161                              0477
         BNE   @RF00477                                            0477
*         RDRECORD=MSF3;            /*                       @Z40LB25*/
*                                                                  0478
         L     @05,RDTBLPTR                                        0478
         MVI   RDRECORD(@05),B'00000011'                           0478
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP THE DUMP PARM LIST, IF REQUESTED.          @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0479
*       QAREALN=LENGTH(QURYAREA);   /* PARM LIST LENGTH      @Z40LB25*/
@RF00477 LA    QAREALN,44                                          0479
*       IF GDTDBG=NULLPTR THEN                                     0480
         L     @05,@PC00001                                        0480
         L     @05,GDTDBG(,@05)                                    0480
         LTR   @05,@05                                             0480
         BZ    @RT00480                                            0480
*         ;                                                        0481
*       ELSE                                                       0482
*         DO;                                                      0482
*           DMPINDEX=ADDR(DMPSTG);  /*                       @Z40LB25*/
         LA    DMPINDEX,DMPSTG                                     0483
*           DMPITMNM='QURYAREA';                                   0484
         MVC   DMPITMNM(8,DMPINDEX),@CC01707                       0484
*           DMPITMPT=ADDR(QURYAREA);                               0485
         LA    @05,QURYAREA                                        0485
         ST    @05,DMPITMPT(,DMPINDEX)                             0485
*           DMPITMLN=QAREALN;                                      0486
         STH   QAREALN,DMPITMLN(,DMPINDEX)                         0486
*           DMPITMTP='H';                                          0487
         MVI   DMPITMTP(DMPINDEX),C'H'                             0487
*           DMPINDEX=DMPINDEX+DMPELEMT;/*                    @Z40LB25
*                                      QTAB PARM LIST        @Z40LB25*/
         AL    DMPINDEX,@CF00473                                   0488
*           DMPTRM=DMPTRMVL;                                       0489
         MVI   DMPTRM(DMPINDEX),X'FF'                              0489
*         END;                      /*                       @Z40LB25*/
*                                                                  0490
*       /*************************************************************/
*       /*                                                           */
*       /* GET THE CELL CURRENT MAP.                         @Z40LB25*/
*       /* THE CELL MAP CONSISTS OF A RECORD OF FIVE         @Z40LB25*/
*       /* BLOCKS. EACH MSF HAS A RECORD OF FIVE BLOCKS.     @Z40LB25*/
*       /* THE FIRST BLOCK IS THE HEADER BLOCK. THE          @Z40LB25*/
*       /* REMAINING FOUR BLOCKS CONTAIN THE CELL MAP        @Z40LB25*/
*       /* DEPENDING ON THE SIZE OF THE MSF.                 @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0491
*       BLKNUM=BLOCKINC;            /* PUT IN 1ST BLK        @Z40LB25*/
@RT00480 LA    @02,1                                               0491
         LR    BLKNUM,@02                                          0491
*       BLKCOUNT=BLOCKINC;          /* READ 1ST BLOCK        @Z40LB25*/
         LR    BLKCOUNT,@02                                        0492
*       GOODBLCK=ON;                /* ERROR DETECT          @Z40LB25*/
         OI    GOODBLCK,B'01000000'                                0493
*       DO WHILE BLKCOUNT<=CURTMAPS&GOODBLCK=ON;/*           @Z40LB25
*                                      READ BLOCKS           @Z40LB25*/
         B     @DE00494                                            0494
@DL00494 DS    0H                                                  0495
*         IF GDTDBG=NULLPTR THEN                                   0495
         L     @04,@PC00001                                        0495
         L     @04,GDTDBG(,@04)                                    0495
         LTR   @04,@04                                             0495
         BZ    @RT00495                                            0495
*           ;                                                      0496
*         ELSE                                                     0497
*           CALL IDCDB010(GDTTBL,'AUAC',ADDR(DMPSTG));/*     @Z40LB25*/
         L     @04,@PC00001                                        0497
         ST    @04,@AL00001                                        0497
         LA    @02,@CC01711                                        0497
         ST    @02,@AL00001+4                                      0497
         LA    @02,DMPSTG                                          0497
         ST    @02,@AFTEMPS                                        0497
         LA    @02,@AFTEMPS                                        0497
         ST    @02,@AL00001+8                                      0497
         MVI   @AL00001+8,X'80'                                    0497
         L     @15,GDTDBG(,@04)                                    0497
         LA    @01,@AL00001                                        0497
         BALR  @14,@15                                             0497
*         CALL IDCSASS0(GDTTBL,RDMSCTBL,RDTBLPTR,REASONCD);/*      0498
*                                                            @Z40LB25*/
@RT00495 L     @02,@PC00001                                        0498
         ST    @02,@AL00001                                        0498
         LA    @15,RDMSCTBL                                        0498
         ST    @15,@AL00001+4                                      0498
         LA    @15,RDTBLPTR                                        0498
         ST    @15,@AL00001+8                                      0498
         LA    @15,REASONCD                                        0498
         ST    @15,@AL00001+12                                     0498
         MVI   @AL00001+12,X'80'                                   0498
         L     @15,GDTSSC(,@02)                                    0498
         LA    @01,@AL00001                                        0498
         BALR  @14,@15                                             0498
*         RESPECIFY                                                0499
*           RTNREG RSTD;                                           0499
*         TESTRC=RTNREG;                                           0500
         LR    TESTRC,RTNREG                                       0500
*         RESPECIFY                                                0501
*           RTNREG UNRSTD;          /*                       @Z40LB25*/
*                                                                  0501
*         /***********************************************************/
*         /*                                                         */
*         /* TEST FOR AN ERROR.                              @Z40LB25*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0502
*         IF TESTRC=4×TESTRC=8 THEN                                0502
         C     TESTRC,@CF00041                                     0502
         BE    @RT00502                                            0502
         C     TESTRC,@CF00178                                     0502
         BNE   @RF00502                                            0502
@RT00502 DS    0H                                                  0503
*           GOODBLCK=OFF;           /*                       @Z40LB25*/
*                                                                  0503
         NI    GOODBLCK,B'10111111'                                0503
*         /***********************************************************/
*         /*                                                         */
*         /* SAVE THE BLOCK.                                 @Z40LB25*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0504
*         ELSE                                                     0504
*           DO;                     /*                       @Z40LB25*/
         B     @RC00502                                            0504
@RF00502 DS    0H                                                  0505
*             BLKBUF(BLKNUM,1:256)=RECDBUF(1:256);/*         @Z40LB25
*                                      PUT BLOCK TO          @Z40LB25*/
         LR    @02,BLKNUM                                          0505
         MH    @02,@CH01665                                        0505
         LA    @01,BLKBUF-264(@02)                                 0505
         MVC   0(256,@01),RECDBUF                                  0505
*             BLKBUF(BLKNUM,257:264)=RECDBUF(257:264);/*     @Z40LB25
*                                      TO PARM LIST          @Z40LB25*/
*                                                                  0506
         LA    @01,BLKBUF-8(@02)                                   0506
         MVC   0(8,@01),RECDBUF+256                                0506
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP TO READ THE NEXT BLOCK.              @Z40LB25*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0507
*             BLKNUM=BLKNUM+BLOCKINC;/* PUT TO NXT BLK       @Z40LB25*/
         LA    @02,1                                               0507
         ALR   BLKNUM,@02                                          0507
*             RDBLOCK=RDBLOCK+BLOCKINC;/* READ NXT BLK       @Z40LB25*/
         L     @15,RDTBLPTR                                        0508
         SLR   @14,@14                                             0508
         IC    @14,RDBLOCK(,@15)                                   0508
         ALR   @14,@02                                             0508
         STC   @14,RDBLOCK(,@15)                                   0508
*             BLKCOUNT=BLKCOUNT+BLOCKINC;/* LOOP CONTROL     @Z40LB25*/
         ALR   BLKCOUNT,@02                                        0509
*           END;                    /*                       @Z40LB25*/
*       END;                        /*                       @Z40LB25*/
*                                                                  0511
@RC00502 DS    0H                                                  0511
@DE00494 C     BLKCOUNT,@CF00285                                   0511
         BH    @DC00494                                            0511
         TM    GOODBLCK,B'01000000'                                0511
         BO    @DL00494                                            0511
@DC00494 DS    0H                                                  0512
*       /*************************************************************/
*       /*                                                           */
*       /* GET THE ORIGINAL CELL MAP.                        @Z40LB25*/
*       /* THIS IS THE MAP OF AN MSF WHICH CONTAINS NO       @Z40LB25*/
*       /* CARTRIDGES - AN EMPTY MSF. SINCE MSF SIZE IS NOT  @Z40LB25*/
*       /* RELEVANT, NO HEADER RECORD IN PRESENT.            @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0512
*       IF GOODBLCK=ON THEN                                        0512
         TM    GOODBLCK,B'01000000'                                0512
         BNO   @RF00512                                            0512
*         DO;                       /*                       @Z40LB25*/
*           BLKCOUNT=BLOCKINC;      /* LOOP CONTROL          @Z40LB25*/
         LA    BLKCOUNT,1                                          0514
*           RDRECORD=ORGCELL;       /* ORIG CELL MAP         @Z40LB25*/
         L     @02,RDTBLPTR                                        0515
         MVI   RDRECORD(@02),B'00000100'                           0515
*           RDBLOCK=RDBLOCK&&RDBLOCK;/* READ 1ST BLOCK       @Z40LB25*/
         XC    RDBLOCK(1,@02),RDBLOCK(@02)                         0516
*           DO WHILE BLKCOUNT<=ORIGMAPS&GOODBLCK=ON;/*       @Z40LB25
*                                      READ BLOCKS           @Z40LB25*/
         B     @DE00517                                            0517
@DL00517 DS    0H                                                  0518
*             IF GDTDBG=NULLPTR THEN                               0518
         L     @04,@PC00001                                        0518
         L     @04,GDTDBG(,@04)                                    0518
         LTR   @04,@04                                             0518
         BZ    @RT00518                                            0518
*               ;                                                  0519
*             ELSE                                                 0520
*               CALL IDCDB010(GDTTBL,'AUAD',ADDR(DMPSTG));/* @Z40LB25*/
         L     @04,@PC00001                                        0520
         ST    @04,@AL00001                                        0520
         LA    @02,@CC01713                                        0520
         ST    @02,@AL00001+4                                      0520
         LA    @02,DMPSTG                                          0520
         ST    @02,@AFTEMPS                                        0520
         LA    @02,@AFTEMPS                                        0520
         ST    @02,@AL00001+8                                      0520
         MVI   @AL00001+8,X'80'                                    0520
         L     @15,GDTDBG(,@04)                                    0520
         LA    @01,@AL00001                                        0520
         BALR  @14,@15                                             0520
*             CALL IDCSASS0(GDTTBL,RDMSCTBL,RDTBLPTR,REASONCD);/*  0521
*                                                            @Z40LB25*/
@RT00518 L     @02,@PC00001                                        0521
         ST    @02,@AL00001                                        0521
         LA    @15,RDMSCTBL                                        0521
         ST    @15,@AL00001+4                                      0521
         LA    @15,RDTBLPTR                                        0521
         ST    @15,@AL00001+8                                      0521
         LA    @15,REASONCD                                        0521
         ST    @15,@AL00001+12                                     0521
         MVI   @AL00001+12,X'80'                                   0521
         L     @15,GDTSSC(,@02)                                    0521
         LA    @01,@AL00001                                        0521
         BALR  @14,@15                                             0521
*             RESPECIFY                                            0522
*               RTNREG RSTD;                                       0522
*             TESTRC=RTNREG;                                       0523
         LR    TESTRC,RTNREG                                       0523
*             RESPECIFY                                            0524
*               RTNREG UNRSTD;      /*                       @Z40LB25*/
*                                                                  0524
*             /*******************************************************/
*             /*                                                     */
*             /* TEST FOR AN ERROR.                          @Z40LB25*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0525
*             IF TESTRC=4×TESTRC=8 THEN                            0525
         C     TESTRC,@CF00041                                     0525
         BE    @RT00525                                            0525
         C     TESTRC,@CF00178                                     0525
         BNE   @RF00525                                            0525
@RT00525 DS    0H                                                  0526
*               GOODBLCK=OFF;       /*                       @Z40LB25*/
*                                                                  0526
         NI    GOODBLCK,B'10111111'                                0526
*             /*******************************************************/
*             /*                                                     */
*             /* SAVE THE BLOCK.                             @Z40LB25*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0527
*             ELSE                                                 0527
*               DO;                 /*                       @Z40LB25*/
         B     @RC00525                                            0527
@RF00525 DS    0H                                                  0528
*                 BLKBUF(BLKNUM,1:256)=RECDBUF(1:256);/*     @Z40LB25
*                                      PUT BLOCK TO          @Z40LB25*/
         LR    @02,BLKNUM                                          0528
         MH    @02,@CH01665                                        0528
         LA    @01,BLKBUF-264(@02)                                 0528
         MVC   0(256,@01),RECDBUF                                  0528
*                 BLKBUF(BLKNUM,257:264)=RECDBUF(257:264);/* @Z40LB25
*                                      TO PARM LIST          @Z40LB25*/
*                                                                  0529
         LA    @01,BLKBUF-8(@02)                                   0529
         MVC   0(8,@01),RECDBUF+256                                0529
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET UP TO READ THE NEXT BLOCK.          @Z40LB25*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0530
*                 BLKNUM=BLKNUM+BLOCKINC;/* PUT TO NXT BLK   @Z40LB25*/
         LA    @02,1                                               0530
         ALR   BLKNUM,@02                                          0530
*                 RDBLOCK=RDBLOCK+BLOCKINC;/* READ NEXT BLOCK      0531
*                                                            @Z40LB25*/
         L     @15,RDTBLPTR                                        0531
         SLR   @14,@14                                             0531
         IC    @14,RDBLOCK(,@15)                                   0531
         ALR   @14,@02                                             0531
         STC   @14,RDBLOCK(,@15)                                   0531
*                 BLKCOUNT=BLKCOUNT+BLOCKINC;/* LOOP CONTROL @Z40LB25*/
         ALR   BLKCOUNT,@02                                        0532
*               END;                /*                       @Z40LB25*/
*           END;                    /*                       @Z40LB25*/
@RC00525 DS    0H                                                  0534
@DE00517 C     BLKCOUNT,@CF00041                                   0534
         BH    @DC00517                                            0534
         TM    GOODBLCK,B'01000000'                                0534
         BO    @DL00517                                            0534
@DC00517 DS    0H                                                  0535
*         END;                      /*                       @Z40LB25*/
*                                                                  0535
*       /*************************************************************/
*       /*                                                           */
*       /* TEST THE RETURN CODE FROM USSC. IF IT IS          @Z40LB25*/
*       /* A 04, CALL SSCMSG TO PRINT THE MESSAGE FOR        @Z40LB25*/
*       /* THE RETURNED REASON CODE. IF IT IS 04 OR 08       @Z40LB25*/
*       /* PRINT MESSAGE IDC31140I.                          @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0536
*       IF GOODBLCK=OFF THEN                                       0536
@RF00512 TM    GOODBLCK,B'01000000'                                0536
         BNZ   @RF00536                                            0536
*         DO;                       /*                       @Z40LB25*/
*           IF TESTRC=4 THEN                                       0538
         C     TESTRC,@CF00041                                     0538
         BNE   @RF00538                                            0538
*             CALL SSCMSG(REASONCD);/*                       @Z40LB25*/
         LA    @05,REASONCD                                        0539
         ST    @05,@AL00001                                        0539
         LA    @01,@AL00001                                        0539
         BAL   @14,SSCMSG                                          0539
*           IF TESTRC=4×TESTRC=8 THEN                              0540
@RF00538 C     TESTRC,@CF00041                                     0540
         BE    @RT00540                                            0540
         C     TESTRC,@CF00178                                     0540
         BNE   @RF00540                                            0540
@RT00540 DS    0H                                                  0541
*             DO;                   /*                       @Z40LB25*/
*               LASTCOND=LASTCC12;  /*                       @Z40LB25*/
         L     @15,@PC00001+8                                      0542
         MVC   LASTCOND(2,@15),@CH00567                            0542
*               PRINTAB=''B;        /*                       @Z40LB25*/
         XC    PRINTAB(20),PRINTAB                                 0543
*               DARGSMOD=AUDMSG;    /*                       @Z40LB25*/
         L     @15,DDSTRU                                          0544
         MVC   DARGSMOD(3,@15),@CC01693                            0544
*               DARGSENT=MG31141I;  /*                       @Z40LB25*/
         MVI   DARGSENT(@15),X'03'                                 0545
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*      @Z40LB25*/
         L     @15,@PC00001                                        0546
         ST    @15,@AL00001                                        0546
         LA    @14,@CF00114                                        0546
         ST    @14,@AL00001+4                                      0546
         LA    @14,DDSTRU                                          0546
         ST    @14,@AL00001+8                                      0546
         MVI   @AL00001+8,X'80'                                    0546
         L     @15,GDTPRT(,@15)                                    0546
         LA    @01,@AL00001                                        0546
         BALR  @14,@15                                             0546
*             END;                  /*                       @Z40LB25*/
*         END;                      /*                       @Z40LB25*/
@RF00540 DS    0H                                                  0549
*     END;                          /*                       @Z40LB25*/
@RF00536 DS    0H                                                  0550
*                                                                  0550
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LASTCOND = 0, DUMP THE PARM LIST FOR IDCAU02       @Z40LB25*/
*   /* OR IDCAU03.                                           @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0550
*   IF LASTCOND=LASTCC00 THEN                                      0550
@RF00465 SLR   @15,@15                                             0550
         L     @14,@PC00001+8                                      0550
         CH    @15,LASTCOND(,@14)                                  0550
         BNE   @RF00550                                            0550
*     DO;                           /*                       @Z40LB25*/
*                                                                  0551
*       /*************************************************************/
*       /*                                                           */
*       /* IF REQUESTED, TAKE A FULL REGION DUMP             @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0552
*       IF GDTDBG=NULLPTR THEN                                     0552
         L     @14,@PC00001                                        0552
         C     @15,GDTDBG(,@14)                                    0552
         BE    @RT00552                                            0552
*         ;                                                        0553
*       ELSE                                                       0554
*         CALL IDCDB010(GDTTBL,'AUAE');/*                    @Z40LB25*/
*                                                                  0554
         L     @15,@PC00001                                        0554
         ST    @15,@AL00001                                        0554
         LA    @14,@CC01714                                        0554
         ST    @14,@AL00001+4                                      0554
         MVI   @AL00001+4,X'80'                                    0554
         L     @15,GDTDBG(,@15)                                    0554
         LA    @01,@AL00001                                        0554
         BALR  @14,@15                                             0554
*       /*************************************************************/
*       /*                                                           */
*       /* CALL IDCAU02 FOR A MAP REPORT OR IDCAU03 FOR      @Z40LB25*/
*       /* A CHECK OR READ REPORT.                           @Z40LB25*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0555
*       IF ADDR(MAP)^=NULLPTR THEN  /* MAP REQUEST?          @Z40LB25*/
@RT00552 L     @15,@PC00001+4                                      0555
         L     @14,FDTPTR(,@15)                                    0555
         LTR   @14,@14                                             0555
         BZ    @RF00555                                            0555
*         DO;                       /* YES                   @Z40LB25*/
*           CALL IDCAU02(GDTTBL,MSFVAL,BLKPTR,PRINTME);/*    @Z40LB25*/
         L     @05,@PC00001                                        0557
         ST    @05,@AL00001                                        0557
         L     @05,FDTPTR+24(,@15)                                 0557
         ST    @05,@AL00001+4                                      0557
         LA    @05,BLKPTR                                          0557
         ST    @05,@AL00001+8                                      0557
         LA    @05,PRINTME                                         0557
         ST    @05,@AL00001+12                                     0557
         L     @15,@CV01703                                        0557
         LA    @01,@AL00001                                        0557
         BALR  @14,@15                                             0557
*           RESPECIFY                                              0558
*             RTNREG RSTD;                                         0558
*           TESTRC=RTNREG;                                         0559
         LR    TESTRC,RTNREG                                       0559
*           RESPECIFY                                              0560
*             RTNREG UNRSTD;        /*                       @Z40LB25*/
*           LASTCOND=TESTRC;        /*                       @Z40LB25*/
         L     @05,@PC00001+8                                      0561
         STH   TESTRC,LASTCOND(,@05)                               0561
*         END;                      /*                       @Z40LB25*/
*       ELSE                        /* CHECK OR READLABEL    @Z40LB25
*                                      REQUEST?              @Z40LB25*/
*         IF ADDR(CHK)^=NULLPTR×ADDR(RDLBL)^=NULLPTR THEN/*  @Z40LB25*/
         B     @RC00555                                            0563
@RF00555 SLR   @15,@15                                             0563
         L     @14,@PC00001+4                                      0563
         C     @15,FDTPTR+4(,@14)                                  0563
         BNE   @RT00563                                            0563
         C     @15,FDTPTR+8(,@14)                                  0563
         BE    @RF00563                                            0563
@RT00563 DS    0H                                                  0564
*           DO;                     /* YES                   @Z40LB25*/
*             CALL IDCAU03(GDTTBL,FDTTBL,BLKPTR,/*           @Z40LB25*/
*                 PRINTME,LABDSPTR);/*                       @Z40LB25*/
         L     @05,@PC00001                                        0565
         ST    @05,@AL00001                                        0565
         L     @05,@PC00001+4                                      0565
         ST    @05,@AL00001+4                                      0565
         LA    @05,BLKPTR                                          0565
         ST    @05,@AL00001+8                                      0565
         LA    @05,PRINTME                                         0565
         ST    @05,@AL00001+12                                     0565
         LA    @05,LABDSPTR                                        0565
         ST    @05,@AL00001+16                                     0565
         L     @15,@CV01704                                        0565
         LA    @01,@AL00001                                        0565
         BALR  @14,@15                                             0565
*             RESPECIFY                                            0566
*               RTNREG RSTD;                                       0566
*             TESTRC=RTNREG;                                       0567
         LR    TESTRC,RTNREG                                       0567
*             RESPECIFY                                            0568
*               RTNREG UNRSTD;      /*                       @Z40LB25*/
*             LASTCOND=TESTRC;      /*                       @Z40LB25*/
         L     @05,@PC00001+8                                      0569
         STH   TESTRC,LASTCOND(,@05)                               0569
*           END;                    /*                       @Z40LB25*/
*     END;                          /*                       @Z40LB25*/
@RF00563 DS    0H                                                  0571
@RC00555 DS    0H                                                  0572
*                                                                  0572
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD PARAMETER LIST FOR UPRINT MACRO. IF THE         @Z40LB25*/
*   /* CONDITION CODE IS = 12 THEN MESSAGE IDC3003I          @Z40LB25*/
*   /* IS PRINTED. OTHERWISE, MESSAGE IDC0001I IS            @Z40LB25*/
*   /* PRINTED.                                              @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0572
*   PRINTAB=''B;                    /*                       @Z40LB25*/
@RF00550 XC    PRINTAB(20),PRINTAB                                 0572
*   DARGSMOD=UNIVMSG;               /*                       @Z40LB25*/
         L     @15,DDSTRU                                          0573
         MVC   DARGSMOD(3,@15),@CC01691                            0573
*   DARGDBP=ADDR(LASTCOND);         /*                       @Z40LB25*/
         L     @14,@PC00001+8                                      0574
         ST    @14,DARGDBP(,@15)                                   0574
*   DARGILP=LENGTH(LASTCOND);       /*                       @Z40LB25*/
         MVC   DARGILP(2,@15),@CH00152                             0575
*   IF LASTCOND=LASTCC12 THEN       /*                       @Z40LB25*/
         CLC   LASTCOND(2,@14),@CH00567                            0576
         BNE   @RF00576                                            0576
*     DARGSENT=MSG3003I;            /*                       @Z40LB25*/
         MVI   DARGSENT(@15),X'03'                                 0577
*   ELSE                            /*                       @Z40LB25*/
*     DARGSENT=MSG0001I;            /*                       @Z40LB25*/
         B     @RC00576                                            0578
@RF00576 L     @01,DDSTRU                                          0578
         MVI   DARGSENT(@01),X'01'                                 0578
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Z40LB25*/
*                                                                  0579
@RC00576 L     @15,@PC00001                                        0579
         ST    @15,@AL00001                                        0579
         LA    @14,@CF00114                                        0579
         ST    @14,@AL00001+4                                      0579
         LA    @14,DDSTRU                                          0579
         ST    @14,@AL00001+8                                      0579
         MVI   @AL00001+8,X'80'                                    0579
         L     @15,GDTPRT(,@15)                                    0579
         LA    @01,@AL00001                                        0579
         BALR  @14,@15                                             0579
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PRINTME IS NOT EQUAL TO ZERO THEN THE              @Z40LB25*/
*   /* OUTPUT DATA SET WAS OPENED AND MUST BE CLOSED.        @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0580
*   IF PRINTME^=NULLPTR THEN                                       0580
         L     @15,PRINTME                                         0580
         LTR   @15,@15                                             0580
         BZ    @RF00580                                            0580
*     DO;                           /*                       @Z40LB25*/
*       CALL IDCIOCL0(GDTTBL,PRINTME);/*                     @Z40LB25*/
         L     @05,@PC00001                                        0582
         ST    @05,@AL00001                                        0582
         LA    @15,PRINTME                                         0582
         ST    @15,@AL00001+4                                      0582
         MVI   @AL00001+4,X'80'                                    0582
         L     @15,GDTCLS(,@05)                                    0582
         LA    @01,@AL00001                                        0582
         BALR  @14,@15                                             0582
*       RESPECIFY                                                  0583
*         RTNREG RSTD;                                             0583
*       TESTRC=RTNREG;                                             0584
         LR    TESTRC,RTNREG                                       0584
*       RESPECIFY                                                  0585
*         RTNREG UNRSTD;            /*                       @Z40LB25*/
*       IF TESTRC^=0 THEN                                          0586
         LTR   TESTRC,TESTRC                                       0586
         BZ    @RF00586                                            0586
*         LASTCOND=MAX(LASTCOND,LASTCC04);/*                 @Z40LB25*/
         L     @15,@PC00001+8                                      0587
         LH    @14,LASTCOND(,@15)                                  0587
         LA    @09,4                                               0587
         CR    @14,@09                                             0587
         BNL   *+6
         LR    @14,@09                                             0587
         STH   @14,LASTCOND(,@15)                                  0587
*     END;                          /*                       @Z40LB25*/
*                                                                  0588
@RF00586 DS    0H                                                  0589
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LABDSPTR IS NOT EQUAL TO ZERO, THEN THE CARTRIDGE  @Z40LB25*/
*   /* LABEL DATA SET WAS OPENED AND MUST BE CLOSED.         @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0589
*   IF LABDSPTR^=NULLPTR THEN                                      0589
@RF00580 L     @15,LABDSPTR                                        0589
         LTR   @15,@15                                             0589
         BZ    @RF00589                                            0589
*     DO;                           /*                       @Z40LB25*/
*       CALL IDCIOCL0(GDTTBL,LABDSPTR);/*                    @Z40LB25*/
         L     @05,@PC00001                                        0591
         ST    @05,@AL00001                                        0591
         LA    @15,LABDSPTR                                        0591
         ST    @15,@AL00001+4                                      0591
         MVI   @AL00001+4,X'80'                                    0591
         L     @15,GDTCLS(,@05)                                    0591
         LA    @01,@AL00001                                        0591
         BALR  @14,@15                                             0591
*       RESPECIFY                                                  0592
*         RTNREG RSTD;                                             0592
*       TESTRC=RTNREG;                                             0593
         LR    TESTRC,RTNREG                                       0593
*       RESPECIFY                                                  0594
*         RTNREG UNRSTD;            /*                       @Z40LB25*/
*       IF TESTRC^=0 THEN                                          0595
         LTR   TESTRC,TESTRC                                       0595
         BZ    @RF00595                                            0595
*         LASTCOND=MAX(LASTCOND,LASTCC04);/*                 @Z40LB25*/
         L     @15,@PC00001+8                                      0596
         LH    @14,LASTCOND(,@15)                                  0596
         LA    @09,4                                               0596
         CR    @14,@09                                             0596
         BNL   *+6
         LR    @14,@09                                             0596
         STH   @14,LASTCOND(,@15)                                  0596
*     END;                          /*                       @Z40LB25*/
*                                                                  0597
@RF00595 DS    0H                                                  0598
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FOR A FULL REGION DUMP AND RETURN TO AMS.      @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0598
*   IF GDTDBG=NULLPTR THEN                                         0598
@RF00589 L     @15,@PC00001                                        0598
         L     @15,GDTDBG(,@15)                                    0598
         LTR   @15,@15                                             0598
         BZ    @RT00598                                            0598
*     ;                                                            0599
*   ELSE                                                           0600
*     CALL IDCDB010(GDTTBL,'AUAZ'); /*                       @Z40LB25*/
         L     @15,@PC00001                                        0600
         ST    @15,@AL00001                                        0600
         LA    @14,@CC01715                                        0600
         ST    @14,@AL00001+4                                      0600
         MVI   @AL00001+4,X'80'                                    0600
         L     @15,GDTDBG(,@15)                                    0600
         LA    @01,@AL00001                                        0600
         BALR  @14,@15                                             0600
*   CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);                          0601
*                                                                  0601
@RT00598 L     @15,@PC00001                                        0601
         ST    @15,@AL00001                                        0601
         LA    @14,MODID                                           0601
         ST    @14,@AL00001+4                                      0601
         L     @14,@PC00001+8                                      0601
         ST    @14,@AL00001+8                                      0601
         MVI   @AL00001+8,X'80'                                    0601
         L     @15,GDTEPL(,@15)                                    0601
         LA    @01,@AL00001                                        0601
         BALR  @14,@15                                             0601
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Z40LB25*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0602
*                                                                  0602
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  0602
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           0602
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
@EL00001 L     @13,4(,@13)                                         0602
@EF00001 L     @00,@SIZDATD                                        0602
         LR    @01,@11                                             0602
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0602
         BR    @14                                                 0602
SSCMSG   STM   @14,@12,@SA00002                                    0602
         MVC   @PC00002(8),0(@01)                                  0602
*                                   /*                       @Y30LB39*/
*                                                                  0603
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0603
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0603
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0603
*                                   /*                       @Y30LB39*/
*   DCL                                                            0603
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            0604
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0604
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0605
*                                   /*                       @Y30LB39*/
*   DCL                                                            0605
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            0606
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0606
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0607
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0607
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0607
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0608
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0608
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0608
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0609
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0609
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0610
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0610
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0610
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0611
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0611
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  0612
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0612
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             0612
         L     @15,@PC00001                                        0612
         L     @14,GDTTR2(,@15)                                    0612
         MVC   @TS00001(95),NEWERID2(@14)                          0612
         MVC   OLDERID2(95,@14),@TS00001                           0612
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0613
         MVC   NEWID2(4,@14),@CC01736                              0613
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0614
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0614
         LA    @14,SSDRGLT                                         0614
         ST    @14,SSDLPTR                                         0614
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0615
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              0615
         L     @09,@PC00002                                        0615
         L     @09,SSRCODE(,@09)                                   0615
         LTR   @09,@09                                             0615
         BNP   @RF00615                                            0615
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0616
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0617
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0617
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @03,SSINXLST                                        0618
         ST    @03,DARGRETP(,@14)                                  0618
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@14),SSMODSS0                            0619
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@14),X'01'                                 0620
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0621
         MVC   DARGRETL(2,@14),@CH01739                            0621
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0622
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0622
         ST    @15,@AL00001                                        0622
         LA    @03,@CF00114                                        0622
         ST    @03,@AL00001+4                                      0622
         LA    @03,SSDLPTR                                         0622
         ST    @03,@AL00001+8                                      0622
         MVI   @AL00001+8,X'80'                                    0622
         L     @15,GDTPRT(,@15)                                    0622
         LA    @01,@AL00001                                        0622
         BALR  @14,@15                                             0622
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0623
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         LA    ENTRYNUM,1                                          0623
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   0624
@DL00624 DS    0H                                                  0625
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         AL    ENTRYNUM,@CF00218                                   0625
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0626
@DE00624 L     @03,@PC00002                                        0626
         LR    @15,ENTRYNUM                                        0626
         ALR   @15,@15                                             0626
         LH    @15,SSARRAY-2(@15)                                  0626
         CH    @15,SSRHALF(,@03)                                   0626
         BE    @DC00624                                            0626
         SLR   @14,@14                                             0626
         CR    @15,@14                                             0626
         BNE   @DL00624                                            0626
@DC00624 DS    0H                                                  0627
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0627
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0627
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @09,SSDLPTR                                         0628
         MVC   DARGSMOD(3,@09),SSMODSS0                            0628
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   ENTRYNUM,DARGSENT(,@09)                             0629
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         CR    @15,@14                                             0630
         BNE   @RF00630                                            0630
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         ST    @03,DARGDBP(,@09)                                   0632
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@09),@CH00041                             0633
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  0636
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0636
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC00615                                            0636
@RF00615 DS    0H                                                  0637
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0637
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @15,SSDLPTR                                         0638
         MVC   DARGSMOD(3,@15),SSMODCM0                            0638
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         MVC   DARGSENT(1,@15),SSMSGNUM                            0639
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @14,@PC00002+4                                      0640
         ST    @14,DARGDBP(,@15)                                   0640
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@15),@CH00218                             0641
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0642
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0643
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0643
@RC00615 L     @15,@PC00001                                        0643
         ST    @15,@AL00001                                        0643
         LA    @14,@CF00114                                        0643
         ST    @14,@AL00001+4                                      0643
         LA    @14,SSDLPTR                                         0643
         ST    @14,@AL00001+8                                      0643
         MVI   @AL00001+8,X'80'                                    0643
         L     @15,GDTPRT(,@15)                                    0643
         LA    @01,@AL00001                                        0643
         BALR  @14,@15                                             0643
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0644
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             0644
         L     @14,@SA00002                                        0644
         LM    @00,@12,@SA00002+8                                  0644
         BR    @14                                                 0644
*   END SSCMSG;                     /*                       @Y30LB39*/
*   END IDCAU01                     /*                       @Z40LB25*/
*                                                                  0646
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IDCCSAU )                                       */
*/*%INCLUDE SYSLIB  (IDCDF11 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*                                                                  0646
*       ;                                                          0646
@DATA    DS    0H
@CH00567 DC    H'12'
@CH01739 DC    H'120'
@CH01665 DC    H'264'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@PC00002 DS    2F
@AL00001 DS    5A
@TF00001 DS    F
@AFTEMPS DS    1F
IDCAU01  CSECT
         DS    0F
@CF00114 DC    F'0'
@CF00218 DC    F'1'
@CH00218 EQU   @CF00218+2
@CF00152 DC    F'2'
@CH00152 EQU   @CF00152+2
@CF00161 DC    F'3'
@CF00041 DC    F'4'
@CH00041 EQU   @CF00041+2
@CF00285 DC    F'5'
@CF00178 DC    F'8'
@CF00473 DC    F'16'
@CF01234 DC    F'256'
@CF01745 DC    F'-8'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
RDTBLPTR DS    A
VADPTR1  DS    A
VADPTR2  DS    A
VVITPTR1 DS    A
VVITPTR2 DS    A
PSTPTR   DS    A
LTRPTR   DS    A
VTR1PTR  DS    A
RPMPTR   DS    A
PABPTR   DS    A
DVBPTR   DS    A
LPBPTR   DS    A
VMXPTR   DS    A
VVATPTR  DS    A
CBMPTR   DS    A
MERPTR   DS    A
MVCBPTR  DS    A
MVIBPTR  DS    A
MVENTPTR DS    A
SCCFPTR  DS    A
SCENTPTR DS    A
VICFPTR  DS    A
VIENTPTR DS    A
TVCFPTR  DS    A
TVENTPTR DS    A
MICPTR   DS    A
CDBPTR   DS    A
CMCBPTR  DS    A
CMENTPTR DS    A
BLKPTR   DS    A
PRINTME  DS    A
LABDSPTR DS    A
REASONCD DS    F
SSDLPTR  DS    A
LISTPTR  DS    A
MVPATH#  DS    H
CISA#    DS    H
CDBVUA#  DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
QURYAREA DS    CL44
AU0PLIST DS    CL2888
         ORG   AU0PLIST
BLKBUF   DS    9CL264
DIAGBUF  DS    CL512
         ORG   DIAGBUF
@NM00151 DS    CL248
RECDBUF  DS    CL264
         ORG   AU0PLIST+2888
FLAGS    DS    BL1
         ORG   FLAGS
BADMSF   DS    BL1
GOODBLCK EQU   FLAGS+0
@NM00152 EQU   FLAGS+0
         ORG   FLAGS+1
         DS    CL3
PRINTAB  DS    CL20
OPENLIST DS    BL48
DMPSTG   DS    CL17
SSDRGLT  DS    CL20
         DS    CL3
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCAU01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01703 DC    V(IDCAU02)
@CV01704 DC    V(IDCAU03)
         DS    0D
SSMSGNUM DC    AL1(56)
@CC01707 DC    C'QURYAREA'
@CC01705 DC    C'AUAA'
@CC01709 DC    C'AUAB'
@CC01711 DC    C'AUAC'
@CC01713 DC    C'AUAD'
@CC01714 DC    C'AUAE'
@CC01715 DC    C'AUAZ'
@CC01736 DC    C'SSAA'
@CC01691 DC    C'UV0'
@CC01693 DC    C'AU0'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
RVOPENR  DC    CL8'OPENR   '
RVRDCNT  DC    CL8'READCNT '
RVREADKD DC    CL8'READKD  '
RVSPACCR DC    CL8'SPACCR  '
RVFWRITE DC    CL8'FWRITE  '
RVWRITER DC    CL8'WRITEREC'
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODID    DC    CL4'AU01'
FIXAREA  DS    CL250
         ORG   FIXAREA
@NM00153 DC    250X'00'
         ORG   FIXAREA+250
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTRYNUM EQU   @02
I        EQU   @02
CIENTPTR EQU   @05
BLKNUM   EQU   @05
BLKCOUNT EQU   @03
QAREALN  EQU   @03
DMPINDEX EQU   @02
OPNPTR   EQU   @03
TESTRC   EQU   @04
REG10    EQU   @10
REG12    EQU   @12
RTNREG   EQU   @15
QUERR1   EQU   @01
REG0     EQU   @00
REG1     EQU   @01
REG11    EQU   @11
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSASS0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNRFMFX EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNMODAC EQU   OPNMOD
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNDSN   EQU   OPNAGL+16
OPNDEV   EQU   OPNAGL+24
OPNREC   EQU   OPNAGL+32
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTARRAY  EQU   CTMSG+4
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKFLAGS  EQU   CKAGL+28
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXOPT    EQU   EXOARG+32
EXFLG    EQU   EXOARG+33
EXGARG   EQU   0
EXWRARG  EQU   0
EXRWCHR  EQU   EXWRARG+26
EXSPACE  EQU   EXWRARG+36
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
SV82LIST EQU   0
@NM00072 EQU   SV82LIST+4
SV82DCBP EQU   @NM00072
@NM00073 EQU   SV82LIST+12
SV82WRKP EQU   @NM00073
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
MAP      EQU   0
CHK      EQU   0
RDLBL    EQU   0
MSF      EQU   0
MSFVAL   EQU   MSF
LOWX     EQU   0
HIGHX    EQU   0
CELLX    EQU   0
CELLY    EQU   0
CELLZ    EQU   0
OFILE    EQU   0
OFILEVAL EQU   OFILE+1
ODS      EQU   0
ODSFLG   EQU   ODS+10
ODSVAL   EQU   ODS+21
LFILE    EQU   0
LFILEVAL EQU   LFILE+1
LDS      EQU   0
LDSFLG   EQU   LDS+10
LDSVAL   EQU   LDS+21
RDTBLIST EQU   0
QUCODE   EQU   RDTBLIST+6
QUSECT   EQU   RDTBLIST+7
QUXADDR  EQU   QUSECT
QUFLAG   EQU   QUXADDR
QUPARM   EQU   RDTBLIST+8
QUPTR    EQU   RDTBLIST+40
VADWORD1 EQU   0
VADRUA   EQU   VADWORD1+2
VADWORD2 EQU   0
VADRPNUM EQU   VADWORD2
VADLUA   EQU   VADWORD2+1
VADFLAGS EQU   VADWORD2+3
VVITBYT1 EQU   0
VVITBYT2 EQU   0
PST      EQU   0
LTR      EQU   0
LTRRUA   EQU   LTR
VTABLER1 EQU   0
@NM00094 EQU   VTABLER1+8
VTTBLCHR EQU   VTABLER1+16
VTSDGID  EQU   VTABLER1+80
VTUCB    EQU   VTABLER1+144
VTFLAGS  EQU   VTUCB
VTTRCCHR EQU   VTABLER1+220
VTLRUCW  EQU   VTABLER1+236
VTRVPAGE EQU   VTABLER1+240
RPM      EQU   0
RPMFLAGS EQU   RPM
PAB      EQU   0
PABSA    EQU   PAB+16
@NM00104 EQU   PAB+32
@NM00105 EQU   PAB+192
PABFLAGS EQU   @NM00105
PABRINTF EQU   @NM00105+1
PABORUA  EQU   @NM00105+2
DVB      EQU   0
DVBMVT   EQU   DVB+4
LPB      EQU   0
LPBMVT   EQU   LPB+4
VMX      EQU   0
VMXFLAGS EQU   VMX
VVAT     EQU   0
CBMAP    EQU   0
MERECORD EQU   0
@NM00111 EQU   MERECORD
MEFLAGS  EQU   @NM00111
@NM00113 EQU   MERECORD+128
MVCTLBLK EQU   0
MVIDXBLK EQU   0
MVIFLAGS EQU   MVIDXBLK
@NM00116 EQU   MVIDXBLK+8
MVENTRY  EQU   0
MVVFLAGS EQU   MVENTRY+6
MVMFLAGS EQU   MVENTRY+12
MVRESRVE EQU   MVENTRY+14
MVVAMSG  EQU   MVENTRY+17
@NM00125 EQU   MVENTRY+20
MVSA     EQU   @NM00125
MVCPUIDS EQU   @NM00125+1
MVVUAS   EQU   @NM00125+5
@NM00127 EQU   MVENTRY+52
MVLOGDEV EQU   @NM00127
MVVUA    EQU   0
SCCTLFLD EQU   0
SCCOMLEN EQU   SCCTLFLD
SCCFLAGS EQU   SCCOMLEN
SCTRKPTR EQU   SCCTLFLD+4
SCENTRY  EQU   0
VICTLFLD EQU   0
VICFLAGS EQU   VICTLFLD
VITRKPTR EQU   VICTLFLD+4
VIENTRY  EQU   0
VIVFLAGS EQU   VIENTRY+6
TVCTLFLD EQU   0
TVCOMLEN EQU   TVCTLFLD
TVCFLAGS EQU   TVCOMLEN
TVTRKPTR EQU   TVCTLFLD+4
TVENTRY  EQU   0
TVVFLAGS EQU   TVENTRY+22
CIENTRY  EQU   0
CICSCNCT EQU   CIENTRY
CIMSF    EQU   CICSCNCT
CIMSF1   EQU   CICSCNCT
CIMSF2   EQU   CICSCNCT
CIMSF3   EQU   CICSCNCT
CISACHNL EQU   CIENTRY+2
@NM00142 EQU   0
CICUCHL  EQU   @NM00142+1
MICTABLE EQU   0
@NM00144 EQU   MICTABLE
MICFLAG1 EQU   @NM00144+6
MICFLAG2 EQU   @NM00144+7
CDBLOCK  EQU   0
@NM00148 EQU   CDBLOCK
CDBSDG   EQU   @NM00148
CDBCNFIG EQU   CDBSDG
CDBPATHS EQU   @NM00148+1
CMCTLBLK EQU   0
CMENTRY  EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
CELL     EQU   0
CELLCNT  EQU   0
CELLXPTR EQU   0
CELLYPTR EQU   0
CELLZPTR EQU   0
CHALL    EQU   0
EMPTY    EQU   0
FULL     EQU   0
HIGHXPTR EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LIST     EQU   0
LISTTEST EQU   0
LOWXPTR  EQU   0
MVCPUID  EQU   0
NEWERID1 EQU   5
NLIST    EQU   0
XRNG     EQU   0
XRNGCNT  EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
QWPARM   EQU   QUPARM
QWRES1   EQU   QWPARM
QWFLAG   EQU   QWPARM+2
QTPARM   EQU   QUPARM
QTID     EQU   QTPARM
QTTABID  EQU   QTID
QTFLAG   EQU   QTPARM+1
QTDATA   EQU   QTPARM+2
QLPARM   EQU   QUPARM
QCPARM   EQU   QUPARM
QTCONFTB EQU   QTDATA
CONFIG   EQU   QTCONFTB
QTCELMAP EQU   QTDATA
RDBLOCK  EQU   QTCELMAP
RDRECORD EQU   QTCELMAP+1
*                                      START UNREFERENCED COMPONENTS
@NM00093 EQU   QTCELMAP+2
@NM00092 EQU   QTCONFTB+1
QCMAD3Z1 EQU   QCPARM+28
QCMAD3Z0 EQU   QCPARM+24
QCMAD2Z1 EQU   QCPARM+20
QCMAD2Z0 EQU   QCPARM+16
QCMAD1Z1 EQU   QCPARM+12
QCMAD1Z0 EQU   QCPARM+8
QCMAD0Z1 EQU   QCPARM+4
QCMAD0Z0 EQU   QCPARM
QLRES    EQU   QLPARM+2
QLZYX    EQU   QLPARM
QTRES    EQU   QTPARM+24
QTDASCHR EQU   QTPARM+20
QWRES2   EQU   QWPARM+3
@NM00091 EQU   QWFLAG
QWMEM    EQU   QWFLAG
QWSSID   EQU   QWRES1
@NM00154 EQU   SSRCODE
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
CMX3Z1   EQU   CMENTRY
CMX3Z0   EQU   CMENTRY
CMX2Z1   EQU   CMENTRY
CMX2Z0   EQU   CMENTRY
CMX1Z1   EQU   CMENTRY
CMX1Z0   EQU   CMENTRY
CMX0Z1   EQU   CMENTRY
CMX0Z0   EQU   CMENTRY
CMCPTRS  EQU   CMCTLBLK+22
CMCFLAGS EQU   CMCTLBLK
CDBMVTP  EQU   @NM00148+2
CDBSA2D  EQU   CDBPATHS
CDBSA2C  EQU   CDBPATHS
CDBSA2B  EQU   CDBPATHS
@NM00150 EQU   CDBPATHS
CDBSA1D  EQU   CDBPATHS
CDBSA1C  EQU   CDBPATHS
CDBSA1B  EQU   CDBPATHS
@NM00149 EQU   CDBPATHS
CDB3333  EQU   CDBCNFIG
CDBINUSE EQU   CDBCNFIG
CDBNOSHR EQU   CDBCNFIG
MICAINTF EQU   MICFLAG2
@NM00147 EQU   MICFLAG2
MICCMB   EQU   MICFLAG2
MICCURMP EQU   MICFLAG2
MICVALID EQU   MICFLAG2
MICINTF  EQU   MICFLAG1
@NM00146 EQU   MICFLAG1
MICAPATH EQU   MICFLAG1
MICPOTMP EQU   MICFLAG1
@NM00145 EQU   MICFLAG1
MICMPCPU EQU   @NM00144+5
MICMFID  EQU   @NM00144
CICHL    EQU   CICUCHL
@NM00143 EQU   CICUCHL
CICU     EQU   CICUCHL
CICPUID  EQU   @NM00142
@NM00141 EQU   CIENTRY+1
CIMSF0   EQU   CICSCNCT
@NM00140 EQU   CICSCNCT
@NM00139 EQU   TVENTRY+23
@NM00138 EQU   TVVFLAGS
TVWRTINH EQU   TVVFLAGS
TVBNDVOL EQU   TVVFLAGS
TVSCRCTG EQU   TVVFLAGS
TVEXCVOL EQU   TVVFLAGS
TVSECVOL EQU   TVVFLAGS
@NM00137 EQU   TVVFLAGS
TVCECTG  EQU   TVVFLAGS
TVVOLID  EQU   TVENTRY+16
TVCSN    EQU   TVENTRY+4
TVLZYX2  EQU   TVENTRY+2
TVLZYX1  EQU   TVENTRY
TVREC    EQU   TVTRKPTR+3
TVHEAD   EQU   TVTRKPTR+2
TVCYL    EQU   TVTRKPTR+1
@NM00136 EQU   TVTRKPTR
TVENTNUM EQU   TVCTLFLD+3
TVENTMAX EQU   TVCTLFLD+2
TVENTLEN EQU   TVCTLFLD+1
TVLSTTRK EQU   TVCFLAGS
TVENDTRK EQU   TVCFLAGS
TVLSTACT EQU   TVCFLAGS
TVLSTBLK EQU   TVCFLAGS
VILZYX2  EQU   VIENTRY+10
VILZYX1  EQU   VIENTRY+8
@NM00135 EQU   VIENTRY+7
@NM00134 EQU   VIVFLAGS
VIWRTINH EQU   VIVFLAGS
VIBNDVOL EQU   VIVFLAGS
VISCRCTG EQU   VIVFLAGS
VIEXCVOL EQU   VIVFLAGS
VISECVOL EQU   VIVFLAGS
@NM00133 EQU   VIVFLAGS
VICECTG  EQU   VIVFLAGS
VIVOLID  EQU   VIENTRY
VIREC    EQU   VITRKPTR+3
VIHEAD   EQU   VITRKPTR+2
VICYL    EQU   VITRKPTR+1
@NM00132 EQU   VITRKPTR
VIENTNUM EQU   VICTLFLD+3
VIENTMAX EQU   VICTLFLD+2
VIENTLEN EQU   VICTLFLD+1
VIOFBLK  EQU   VICFLAGS
VIAREA   EQU   VICFLAGS
VIUSEBLK EQU   VICFLAGS
VILSTTRK EQU   VICFLAGS
VIENDTRK EQU   VICFLAGS
VILSTACT EQU   VICFLAGS
VILSTBLK EQU   VICFLAGS
@NM00131 EQU   SCENTRY+18
SCLZYX   EQU   SCENTRY+16
SCCSN    EQU   SCENTRY+4
@NM00130 EQU   SCENTRY
SCREC    EQU   SCTRKPTR+3
SCHEAD   EQU   SCTRKPTR+2
SCCYL    EQU   SCTRKPTR+1
@NM00129 EQU   SCTRKPTR
SCENTNUM EQU   SCCTLFLD+3
SCENTMAX EQU   SCCTLFLD+2
SCENTLEN EQU   SCCTLFLD+1
SCLSTTRK EQU   SCCFLAGS
SCENDTRK EQU   SCCFLAGS
SCLSTACT EQU   SCCFLAGS
SCLSTBLK EQU   SCCFLAGS
MVVUAI#  EQU   MVVUA
MVCYLMAP EQU   @NM00127+3
MVRPNUM  EQU   @NM00127+2
MVBNDCNT EQU   @NM00127+1
@NM00128 EQU   MVLOGDEV
MVDSTGC2 EQU   MVLOGDEV
MVDSTGC1 EQU   MVLOGDEV
MVPINACT EQU   MVLOGDEV
@NM00126 EQU   MVENTRY+44
MVPFI    EQU   MVENTRY+36
MVVVA    EQU   @NM00125+4
MVACTD   EQU   MVSA
MVACTC   EQU   MVSA
MVACTB   EQU   MVSA
MVVLDSA  EQU   MVSA
@NM00124 EQU   MVENTRY+18
@NM00123 EQU   MVVAMSG
MVINTFD  EQU   MVVAMSG
MVINTFC  EQU   MVVAMSG
MVINTFB  EQU   MVVAMSG
MVINTFA  EQU   MVVAMSG
MV3333   EQU   MVENTRY+16
MVSDG    EQU   MVENTRY+15
@NM00122 EQU   MVRESRVE
MVSA2RSV EQU   MVRESRVE
@NM00121 EQU   MVRESRVE
MVPINCNT EQU   MVENTRY+13
@NM00120 EQU   MVMFLAGS
MVREMNT  EQU   MVMFLAGS
MVMNTBND EQU   MVMFLAGS
MVMNTEXC EQU   MVMFLAGS
MVMNTVOL EQU   MVMFLAGS
MVLZYX2  EQU   MVENTRY+10
MVLZYX1  EQU   MVENTRY+8
@NM00119 EQU   MVENTRY+7
@NM00118 EQU   MVVFLAGS
MVWRTINH EQU   MVVFLAGS
MVBNDVOL EQU   MVVFLAGS
MVSCRCTG EQU   MVVFLAGS
MVEXCVOL EQU   MVVFLAGS
MVSECVOL EQU   MVVFLAGS
@NM00117 EQU   MVVFLAGS
MVCECTG  EQU   MVVFLAGS
MVVOLID  EQU   MVENTRY
MVMVTPTR EQU   @NM00116+6
MVIVOLID EQU   @NM00116
@NM00115 EQU   MVIDXBLK+4
MVENTNUM EQU   MVIDXBLK+3
MVENTMAX EQU   MVIDXBLK+2
MVENTLEN EQU   MVIDXBLK+1
@NM00114 EQU   MVIFLAGS
MVLSTBLK EQU   MVIFLAGS
MVOFBLK  EQU   MVIFLAGS
MVOFOUT  EQU   MVIFLAGS
MVCTLBIT EQU   MVCTLBLK
MEUCBCNT EQU   @NM00113+2
MEDRVCNT EQU   @NM00113+1
MELRUCNT EQU   @NM00113
@NM00112 EQU   MERECORD+120
MEMNTCNT EQU   @NM00111+2
MEVOCNT  EQU   @NM00111+1
MEMVD2   EQU   MEFLAGS
MEMVI2   EQU   MEFLAGS
MEMVD1   EQU   MEFLAGS
MEMVI1   EQU   MEFLAGS
MEVOD2   EQU   MEFLAGS
MEVOI2   EQU   MEFLAGS
MEVOD1   EQU   MEFLAGS
MEVOI1   EQU   MEFLAGS
CBMMSF   EQU   CBMAP+39
CBMFLAGS EQU   CBMAP+38
CBMDRIVE EQU   CBMAP+8
CBMDRC   EQU   CBMAP+6
CBMSA    EQU   CBMAP+4
CBMDRD   EQU   CBMAP
VVATVVA  EQU   VVAT
VMXMVT   EQU   VMX+2
@NM00110 EQU   VMX+1
@NM00109 EQU   VMXFLAGS
VMXVALID EQU   VMXFLAGS
LPBPFI   EQU   LPBMVT
LPBMSFID EQU   LPBMVT
@NM00108 EQU   LPB+2
LPBCURR  EQU   LPB+1
LPBNEXT  EQU   LPB
DVBPFI   EQU   DVBMVT
DVBMSFID EQU   DVBMVT
@NM00107 EQU   DVB+2
DVBCURR  EQU   DVB+1
DVBNEXT  EQU   DVB
PABRUA   EQU   @NM00105+3
PABORUAV EQU   PABORUA
PABSA2D  EQU   PABRINTF
PABSA2C  EQU   PABRINTF
PABSA2B  EQU   PABRINTF
@NM00106 EQU   PABRINTF
PABSA1D  EQU   PABRINTF
PABSA1C  EQU   PABRINTF
PABSA1B  EQU   PABRINTF
PABRAI   EQU   PABRINTF
PAB2M11  EQU   PABFLAGS
PABVARN  EQU   PABFLAGS
PABVBND  EQU   PABFLAGS
PABMSCT  EQU   PABFLAGS
PABMOD11 EQU   PABFLAGS
PABVARR  EQU   PABFLAGS
PABVARV  EQU   PABFLAGS
PABDEX   EQU   PABFLAGS
PABAMAP  EQU   PAB+128
PABFMAP  EQU   PAB+64
PABBCNT  EQU   @NM00104+3
PABICNT  EQU   @NM00104+2
PABACNT  EQU   @NM00104+1
PABFCNT  EQU   @NM00104
@NM00103 EQU   PAB+24
PABSRZ   EQU   PAB+23
PABSRY   EQU   PAB+22
PABSRX   EQU   PAB+21
PABSRW   EQU   PAB+20
@NM00102 EQU   PAB+18
PAB3333  EQU   PABSA
@NM00101 EQU   PABSA
PABVLDSA EQU   PABSA
PABLOTH  EQU   PAB+14
PABLODEL EQU   PAB+13
@NM00100 EQU   PAB+12
PABUPTH  EQU   PAB+10
PABUPDEL EQU   PAB+9
PABPPD   EQU   PAB+8
PABBTOT  EQU   PAB+6
PABITOT  EQU   PAB+4
PABATOT  EQU   PAB+2
PABFTOT  EQU   PAB
RPMMVT   EQU   RPM+2
RPMVPNUM EQU   RPM+1
RPMNA    EQU   RPMFLAGS
RPMMSCT  EQU   RPMFLAGS
@NM00099 EQU   RPMFLAGS
RPMIOERR EQU   RPMFLAGS
RPMVBND  EQU   RPMFLAGS
RPMBND   EQU   RPMFLAGS
RPMINACT EQU   RPMFLAGS
RPMACT   EQU   RPMFLAGS
VTVOLPFX EQU   VTABLER1+252
@NM00098 EQU   VTRVPAGE+4
VT20TO27 EQU   VTRVPAGE+3
VT18TO1F EQU   VTRVPAGE+2
VT10TO17 EQU   VTRVPAGE+1
VT08TO0F EQU   VTRVPAGE
VTLRUIOS EQU   VTLRUCW+2
VTLRUTIM EQU   VTLRUCW+1
VTLRUCLK EQU   VTLRUCW
VTTRCR   EQU   VTTRCCHR+3
VTTRCH   EQU   VTTRCCHR+2
VTTRCC   EQU   VTTRCCHR+1
VTXY     EQU   VTTRCCHR
@NM00097 EQU   VTABLER1+160
VTSADDR  EQU   VTUCB+6
VTPADDR  EQU   VTUCB+4
VTPOST   EQU   VTUCB+3
VTACTIVE EQU   VTUCB+2
VTWORK   EQU   VTUCB+1
VTSBUSY  EQU   VTFLAGS
VTSREADY EQU   VTFLAGS
VTSONLIN EQU   VTFLAGS
VTSVALID EQU   VTFLAGS
VTPBUSY  EQU   VTFLAGS
VTPREADY EQU   VTFLAGS
VTPONLIN EQU   VTFLAGS
VTPVALID EQU   VTFLAGS
VTLRU1   EQU   VTSDGID+3
VTLRU0   EQU   VTSDGID+2
VTL33331 EQU   VTSDGID+1
VTL33330 EQU   VTSDGID
VTTBLR   EQU   VTTBLCHR+3
VTTBLH   EQU   VTTBLCHR+2
VTTBLC   EQU   VTTBLCHR+1
@NM00096 EQU   VTTBLCHR
@NM00095 EQU   @NM00094+2
VTIMPLS  EQU   @NM00094
VTPACKID EQU   VTABLER1
LTRMOD11 EQU   LTRRUA
PSTCYLW  EQU   PST+3
PSTCYLV  EQU   PST+2
PSTVPNUM EQU   PST+1
PSTVVA   EQU   PST
VVITPCDD EQU   VVITBYT2
VVITPCDC EQU   VVITBYT2
VVITPCDB EQU   VVITBYT2
VVITRSVD EQU   VVITBYT2
VVITINTF EQU   VVITBYT2
VVITVVB  EQU   VVITBYT2
VVITCC   EQU   VVITBYT2
VVITVVS  EQU   VVITBYT1
VVITVVWI EQU   VVITBYT1
VVITFR   EQU   VVITBYT1
VVITNBM  EQU   VVITBYT1
VVITDEDD EQU   VVITBYT1
VVITDEDC EQU   VVITBYT1
VVITDEDB EQU   VVITBYT1
VVITDEDA EQU   VVITBYT1
VADRM    EQU   VADFLAGS
VADVSI   EQU   VADFLAGS
VADRDED  EQU   VADFLAGS
VADRB    EQU   VADFLAGS
VADRR    EQU   VADFLAGS
VADVWI   EQU   VADFLAGS
VADVWG   EQU   VADFLAGS
VADVRW   EQU   VADFLAGS
VADPOH   EQU   VADWORD2+2
VADUDE   EQU   VADLUA
VADMOD11 EQU   VADRPNUM
VADLINK  EQU   VADWORD1+3
VADUCS   EQU   VADRUA
VADCCR   EQU   VADRUA
VADEDI   EQU   VADRUA
VADVVA   EQU   VADWORD1+1
VADVFM   EQU   VADWORD1
QURES1   EQU   QUFLAG
QULIB    EQU   QUCODE
QURES    EQU   RDTBLIST+5
QUORD    EQU   RDTBLIST+4
QULEN    EQU   RDTBLIST
LDSLEN   EQU   LDS+20
LDSMEM   EQU   LDS+12
LDSMLN   EQU   LDS+11
LDSFUQ   EQU   LDSFLG
LDSPOS   EQU   LDS+9
LDSPAS   EQU   LDS+1
LDSPLN   EQU   LDS
LFILELEN EQU   LFILE
ODSLEN   EQU   ODS+20
ODSMEM   EQU   ODS+12
ODSMLN   EQU   ODS+11
ODSFUQ   EQU   ODSFLG
ODSPOS   EQU   ODS+9
ODSPAS   EQU   ODS+1
ODSPLN   EQU   ODS
OFILELEN EQU   OFILE
CELLZVAL EQU   CELLZ
CELLYVAL EQU   CELLY
CELLXVAL EQU   CELLX
HIGHXVAL EQU   HIGHX
LOWXVAL  EQU   LOWX
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00090 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00089 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00088 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00087 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00086 EQU   VSDSCR+5
@NM00085 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00084 EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00083 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00082 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00081 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00080 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00079 EQU   VSDVTOC
@NM00078 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00077 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00076 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00075 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00074 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLVTOC  EQU   VOLLABEL+15
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
VOLKEY   EQU   VOLLABEL
STAVTTR  EQU   STAEPARM+54
@NM00071 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00070 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00069 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00068 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00067 EQU   RCTAGL+10
@NM00066 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00065 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00064 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00063 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00062 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00061 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00060 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00059 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00058 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00057 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00056 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
EXRWFUN  EQU   EXWRARG+46
@NM00055 EQU   EXSPACE+8
@NM00054 EQU   EXSPACE+6
@NM00053 EQU   EXSPACE+4
@NM00052 EQU   EXSPACE+1
@NM00051 EQU   EXSPACE
EXRWKDLN EQU   EXWRARG+32
@NM00050 EQU   EXWRARG+31
EXRECNUM EQU   EXRWCHR+4
EXHH     EQU   EXRWCHR+2
EXCC     EQU   EXRWCHR
EXCCWCNT EQU   EXWRARG+24
EXLOCPTR EQU   EXWRARG+20
EXRWDARE EQU   EXWRARG+16
EXRWIOAR EQU   EXWRARG+12
EXRWCTBL EQU   EXWRARG+8
EXRWRES  EQU   EXWRARG
EXGDATAL EQU   EXGARG+30
@NM00049 EQU   EXGARG+29
EXGKEYLN EQU   EXGARG+28
EXGDATAP EQU   EXGARG+24
EXGRECNO EQU   EXGARG+20
EXGCCHH2 EQU   EXGARG+16
EXGCCHH1 EQU   EXGARG+12
EXGCTLBK EQU   EXGARG+8
EXGHEAD  EQU   EXGARG
EXOVTH   EQU   EXFLG
EXORVT   EQU   EXFLG
EXORDS   EQU   EXFLG
EXOSPK   EQU   EXFLG
EXORVS   EQU   EXFLG
@NM00048 EQU   EXFLG
EXOREAD  EQU   EXFLG
@NM00047 EQU   EXOPT
EXOREP   EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXONEW   EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOTAB   EQU   EXOPT
EXOCTLBK EQU   EXOARG+28
EXOEXT   EQU   EXOARG+24
EXOUCB   EQU   EXOARG+20
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXODDN   EQU   EXOARG+8
EXOHEAD  EQU   EXOARG
@NM00046 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00045 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKTESTVT EQU   CKFLAGS
CKLABELP EQU   CKAGL+24
CKDATYPE EQU   CKAGL+20
CKDDNAME EQU   CKAGL+12
CKUCBPTR EQU   CKAGL+8
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00044 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLRR  EQU   CTARRAY+3
CTTBLHH  EQU   CTARRAY+2
CTTBLCC  EQU   CTARRAY+1
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
CTREALCC EQU   CTMSG+1
@NM00043 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00042 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00041 EQU   CMMSG+7
@NM00040 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00039 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00038 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
@NM00037 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00036 EQU   DMPITM+15
@NM00035 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00034 EQU   ERCNVTAB+4
@NM00033 EQU   ERCNVTAB+3
@NM00032 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGCNT  EQU   DARGLIST+14
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNPWA   EQU   OPNAGL+12
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
*                                      END UNREFERENCED COMPONENTS
@RF00630 EQU   @RC00615
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IDCAU01,(C'PLS1652',0603,76356)
