         TITLE '************ IDCDU01 - DUMPMSS FSR ************        *
                        '
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCDU01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCDU01   78.010'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  LA    @11,4095(,@12)                                      0002
         LA    @10,4095(,@11)                                      0002
         LA    @09,4095(,@10)                                      0002
         USING @PSTART,@12                                         0002
         USING @PSTART+4095,@11                                    0002
         USING @PSTART+8190,@10                                    0002
         USING @PSTART+12285,@09                                   0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @08,@01                                             0002
         USING @DATD,@08                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @08,8(,@13)                                         0002
         LR    @13,@08                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0395
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UDUMP DIAGNOSTIC REGION DUMP                    @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0395
*   OLDERID2=NEWERID2;                                             0395
         L     @15,@PC00001                                        0395
         L     @14,GDTTR2(,@15)                                    0395
         MVC   @TS00001(95),NEWERID2(@14)                          0395
         MVC   OLDERID2(95,@14),@TS00001                           0395
*   NEWID2='DUAA';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@14),@CC01451                              0396
*   IF GDTDBG=NULLPTR THEN                                         0397
         L     @15,GDTDBG(,@15)                                    0397
         LTR   @15,@15                                             0397
         BZ    @RT00397                                            0397
*     ;                                                            0398
*   ELSE                                                           0399
*     CALL IDCDB010(GDTTBL,'DUAA'); /*                       @Z40LB40*/
*                                                                  0399
         L     @15,@PC00001                                        0399
         ST    @15,@AL00001                                        0399
         LA    @14,@CC01451                                        0399
         ST    @14,@AL00001+4                                      0399
         MVI   @AL00001+4,X'80'                                    0399
         L     @15,GDTDBG(,@15)                                    0399
         LA    @01,@AL00001                                        0399
         BALR  @14,@15                                             0399
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMPMSS (LEVEL 1)                                     @Z40LB40*/
*   /* THIS IS THE MAIN PROCEDURE FOR DUMPMSS FSR. IT        @Z40LB40*/
*   /* OPENS AND CLOSES THE OUTPUT DATASET, OBTAINS AND      @Z40LB40*/
*   /* FREES DYNAMIC WORK STORAGE,CALL FUNCTIONS PROCEDURES  @Z40LB40*/
*   /* AND TERMINATES THE PROCESSING. IT CALLS DUMPMSC,      @Z40LB40*/
*   /* DUMPSA AND DUMPTAB TO PRINT THE DUMPS OF THE          @Z40LB40*/
*   /* VARIOUS BOXES. THE FOLLOWING CODE                     @Z40LB40*/
*   /* INITIALIZES PARM LISTS AND VARIABLES.                 @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0400
*   OPNPTR=ADDR(OPENLIST);          /*                       @Z40LB40*/
@RT00397 LA    OPNPTR,OPENLIST                                     0400
*   DDSTRU=ADDR(PRINTAB);           /*                       @Z40LB40*/
         LA    @03,PRINTAB                                         0401
         ST    @03,DDSTRU                                          0401
*   OPNAGL=''B;                     /*                       @Z40LB40*/
         XC    OPNAGL(48,OPNPTR),OPNAGL(OPNPTR)                    0402
*   FLAGS=''B;                      /*                       @Z40LB40*/
         MVI   FLAGS,X'00'                                         0403
*   PRPTR=''B;                      /*                       @Z40LB40*/
         SLR   @03,@03                                             0404
         ST    @03,PRPTR                                           0404
*   QUERYPTR=ADDR(PARMLST);         /*                       @Z40LB40*/
*                                                                  0405
         LA    @03,PARMLST                                         0405
         ST    @03,QUERYPTR                                        0405
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF USER SPECIFIED A DDNAME OR DSNAME TO BE       @Z40LB40*/
*   /* USED AS THE OUTPUT FILE. IF YES, ISSUE THE UOPEN      @Z40LB40*/
*   /* MACRO. IF NO, USE SYSPRINT AS THE DEFAULT.            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0406
*   IF ADDR(OFILE)^=NULLPTR×ADDR(ODS)^=NULLPTR THEN                0406
         SLR   @03,@03                                             0406
         L     @15,@PC00001+4                                      0406
         C     @03,FDTPTR+48(,@15)                                 0406
         BNE   @RT00406                                            0406
         C     @03,FDTPTR+52(,@15)                                 0406
         BE    @RF00406                                            0406
@RT00406 DS    0H                                                  0407
*     DO;                           /*                       @Z40LB40*/
*       IF ADDR(ODS)^=NULLPTR THEN  /* IS ODS SPECIFIED      @Z40LB40*/
         L     @03,@PC00001+4                                      0408
         L     @03,FDTPTR+52(,@03)                                 0408
         LTR   @03,@03                                             0408
         BZ    @RF00408                                            0408
*         OPNDSN=ADDR(ODSVAL);      /* YES,SETUP FOR DSN     @Z40LB40*/
         LA    @03,ODSVAL(,@03)                                    0409
         ST    @03,OPNDSN(,OPNPTR)                                 0409
*       ELSE                        /* OFILE SPECIFIED       @Z40LB40*/
*         OPNDDN=ADDR(OFILEVAL);    /* SETUP DDNAME          @Z40LB40*/
         B     @RC00408                                            0410
@RF00408 L     @03,@PC00001+4                                      0410
         L     @03,FDTPTR+48(,@03)                                 0410
         LA    @03,OFILEVAL(,@03)                                  0410
         ST    @03,OPNDDN(,OPNPTR)                                 0410
*       OPNOPTOT=ON;                /*                       @Z40LB40*/
@RC00408 OI    OPNOPTOT(OPNPTR),B'01000000'                        0411
*       OPNMODAC=ON;                /*                       @Z40LB40*/
         OI    OPNMODAC(OPNPTR),B'01000000'                        0412
*       OPNIOC=ADDR(IOCSPTR);       /*                       @Z40LB40*/
*                                                                  0413
         LA    @15,IOCSPTR                                         0413
         ST    @15,OPNIOC(,OPNPTR)                                 0413
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE UOPEN MACRO                                 @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0414
*       CALL IDCIOOP0(GDTTBL,OPNAGL);/*                      @Z40LB40*/
         L     @15,@PC00001                                        0414
         ST    @15,@AL00001                                        0414
         ST    OPNPTR,@AL00001+4                                   0414
         MVI   @AL00001+4,X'80'                                    0414
         L     @15,GDTOPN(,@15)                                    0414
         LA    @01,@AL00001                                        0414
         BALR  @14,@15                                             0414
*       RESPECIFY                                                  0415
*         RTNREG RSTD;                                             0415
*       TESTRC=RTNREG;                                             0416
         LR    TESTRC,RTNREG                                       0416
*       RESPECIFY                                                  0417
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC=LASTCC00 THEN     /* IS OPEN OK            @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0418
         BNZ   @RF00418                                            0418
*         PRPTR=IOCSPTR;            /* YES,SAVE ADDRESS      @Z40LB40*/
         L     @15,IOCSPTR                                         0419
         ST    @15,PRPTR                                           0419
*       ELSE                        /* NO                    @Z40LB40*/
*         LASTCOND=LASTCC12;        /* SET FINAL RET.CODE    @Z40LB40*/
         B     @RC00418                                            0420
@RF00418 L     @15,@PC00001+8                                      0420
         MVC   LASTCOND(2,@15),@CH00606                            0420
*     END;                          /*                       @Z40LB40*/
*                                                                  0421
@RC00418 DS    0H                                                  0422
*   /*****************************************************************/
*   /*                                                               */
*   /* IF EVERYTHING OK SO FAR GET 68872 BYTES               @ZD00043*/
*   /* OF STORAGE TO BE USED TO HOLD COPIES OF MSC OR SA     @Z40LB40*/
*   /* STORAGE OR MSC TABLES RECORDS                         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0422
*   IF LASTCOND=LASTCC00 THEN       /* IS EVERYTHING OK      @Z40LB40*/
@RF00406 L     @15,@PC00001+8                                      0422
         LH    @15,LASTCOND(,@15)                                  0422
         LTR   @15,@15                                             0422
         BNZ   @RF00422                                            0422
*     DO;                           /* YES                   @Z40LB40*/
*                                                                  0423
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE UGSPACE MACRO                               @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0424
*       CALL IDCSAGS0(GDTTBL,CORESIZE,MEMPTR);/*             @Z40LB40*/
         L     @02,@PC00001                                        0424
         ST    @02,@AL00001                                        0424
         LA    @15,@CF01361                                        0424
         ST    @15,@AL00001+4                                      0424
         LA    @15,MEMPTR                                          0424
         ST    @15,@AL00001+8                                      0424
         MVI   @AL00001+8,X'80'                                    0424
         L     @15,GDTGSP(,@02)                                    0424
         LA    @01,@AL00001                                        0424
         BALR  @14,@15                                             0424
*       RESPECIFY                                                  0425
*         RTNREG RSTD;                                             0425
*       TESTRC=RTNREG;                                             0426
         LR    TESTRC,RTNREG                                       0426
*       RESPECIFY                                                  0427
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC=0 THEN            /* WAS STORAGE GOTTEN    @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0428
         BNZ   @RF00428                                            0428
*         GOTCORE=ON;               /* YES,INDICATE IT       @Z40LB40*/
         OI    GOTCORE,B'10000000'                                 0429
*       ELSE                        /* NO,INDICATE IT        @Z40LB40*/
*         DO;                       /*                       @Z40LB40*/
         B     @RC00428                                            0430
@RF00428 DS    0H                                                  0431
*           LASTCOND=LASTCC12;      /* SET RET.CODE          @Z40LB40*/
         L     @15,@PC00001+8                                      0431
         MVC   LASTCOND(2,@15),@CH00606                            0431
*           GETSFAIL=ON;            /* INDICATE FAIL         @Z40LB40*/
         OI    GETSFAIL,B'01000000'                                0432
*         END;                      /*                       @Z40LB40*/
*     END;                          /*                       @Z40LB40*/
*                                                                  0434
@RC00428 DS    0H                                                  0435
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE NOT SEVERE CHECK FOR WORK TO           @Z40LB40*/
*   /* BE DONE.                                              @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0435
*   IF LASTCOND<LASTCC12 THEN       /* IS EVERYTHING OK      @Z40LB40*/
@RF00422 L     @15,@PC00001+8                                      0435
         LH    @15,LASTCOND(,@15)                                  0435
         C     @15,@CF00606                                        0435
         BNL   @RF00435                                            0435
*     DO;                           /* YES,GO AHEAD          @Z40LB40*/
*                                                                  0436
*       /*************************************************************/
*       /*                                                           */
*       /* IF MSC SPECIFIED OR DEFAULTED TO                  @Z40LB40*/
*       /* THEN DUMP MSC.                                    @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0437
*       IF ADDR(MSC)^=NULLPTR×(ADDR(MSC)=NULLPTR&STGADCNT=0&TBLCNT=0)
*         THEN                                                     0437
         SLR   @15,@15                                             0437
         L     @14,@PC00001+4                                      0437
         L     @07,FDTPTR(,@14)                                    0437
         CR    @07,@15                                             0437
         BNE   @RT00437                                            0437
         CR    @07,@15                                             0437
         BNE   @RF00437                                            0437
         LA    @07,FDTPTR+16(,@14)                                 0437
         C     @15,STGADCNT(,@07)                                  0437
         BNE   @RF00437                                            0437
         LA    @14,FDTPTR+36(,@14)                                 0437
         C     @15,TBLCNT(,@14)                                    0437
         BNE   @RF00437                                            0437
@RT00437 DS    0H                                                  0438
*         DO;                       /*                       @Z40LB40*/
*                                                                  0438
*           /*********************************************************/
*           /*                                                       */
*           /* MSC SPECIFIED OR DEFAULTED TO                 @Z40LB40*/
*           /* SO CALL DUMPMSC TO DUMP THE MSC.              @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0439
*           CALL DUMPMSC;           /*                       @Z40LB40*/
         BAL   @14,DUMPMSC                                         0439
*           RESPECIFY                                              0440
*             RTNREG RSTD;                                         0440
*           TESTRC=RTNREG;                                         0441
         LR    TESTRC,RTNREG                                       0441
*           RESPECIFY                                              0442
*             RTNREG UNRSTD;        /*                       @Z40LB40*/
*           IF TESTRC^=LASTCC00 THEN/* RET.CODE^=0           @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0443
         BZ    @RF00443                                            0443
*             LASTCOND=LASTCC08;    /* SET RET.CODE          @Z40LB40*/
         L     @15,@PC00001+8                                      0444
         MVC   LASTCOND(2,@15),@CH00183                            0444
*         END;                      /*                       @Z40LB40*/
@RF00443 DS    0H                                                  0446
*     END;                          /*                       @Z40LB40*/
*                                                                  0446
@RF00437 DS    0H                                                  0447
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE NOT SEVERE CHECK FOR NEXT WORK         @Z40LB40*/
*   /* TO BE DONE.                                           @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0447
*   IF LASTCOND<LASTCC12 THEN       /* IS EVERYTHING OK      @Z40LB40*/
@RF00435 L     @15,@PC00001+8                                      0447
         LH    @15,LASTCOND(,@15)                                  0447
         C     @15,@CF00606                                        0447
         BNL   @RF00447                                            0447
*     DO;                           /* YES,GO AHEAD          @Z40LB40*/
*                                                                  0448
*       /*************************************************************/
*       /*                                                           */
*       /* IF SA SPECIFIED THEN CALL DUMPSA FOR EACH         @Z40LB40*/
*       /* STAGING ADAPTER SSID SPECIFIED.                   @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0449
*       IF STGADCNT^=0 THEN                                        0449
         L     @15,@PC00001+4                                      0449
         LA    @15,FDTPTR+16(,@15)                                 0449
         L     @15,STGADCNT(,@15)                                  0449
         LTR   @15,@15                                             0449
         BZ    @RF00449                                            0449
*         DO I1=1 TO STGADCNT;      /* LOOP FOR EACH SSID    @Z40LB40*/
         LA    @15,1                                               0450
         B     @DE00450                                            0450
@DL00450 DS    0H                                                  0451
*           IF(SSIDPTR(I1)->SSIDVAL&SSIDMASK)^=0 THEN              0451
         SLA   @15,2                                               0451
         L     @14,@PC00001+4                                      0451
         L     @01,FDTPTR+20(,@14)                                 0451
         AL    @01,@CF01753                                        0451
         L     @15,SSIDPTR(@15,@01)                                0451
         L     @14,SSIDVAL(,@15)                                   0451
         N     @14,SSIDMASK                                        0451
         LTR   @14,@14                                             0451
         BZ    @RF00451                                            0451
*             DO;                   /*                       @Z40LB40*/
*                                                                  0452
*               /*****************************************************/
*               /*                                                   */
*               /* SSID INVALID, ISSUE ERROR MESSAGE         @Z40LB40*/
*               /* AND SET RETURN CODE.                      @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0453
*               PRINTAB=''B;        /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0453
*               DARGSMOD=DUMSGMOD;  /* SET MOD ID            @Z40LB40*/
         L     @14,DDSTRU                                          0454
         MVC   DARGSMOD(3,@14),@CC01334                            0454
*               DARGSENT=IDC21103;  /* SET TEXT ENTRY        @Z40LB40*/
         MVI   DARGSENT(@14),X'04'                                 0455
*               DARGCNT=1;          /* SET 1 INSERT          @Z40LB40*/
         LA    @07,1                                               0456
         STH   @07,DARGCNT(,@14)                                   0456
*               DARGINS(1)=1;       /* SET INSERT NO.        @Z40LB40*/
         STH   @07,DARGINS(,@14)                                   0457
*               DARGINL(1)=2;       /* SET LENGTH            @Z40LB40*/
         LA    @07,2                                               0458
         STH   @07,DARGINL(,@14)                                   0458
*               DARGDTM(1)=(SSIDPTR(I1))+2;/* SET ADDR.      @Z40LB40*/
         ALR   @15,@07                                             0459
         ST    @15,DARGDTM(,@14)                                   0459
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* PRINT MSG  0460
*                                                            @Z40LB40*/
         L     @15,@PC00001                                        0460
         ST    @15,@AL00001                                        0460
         LA    @14,@CF00118                                        0460
         ST    @14,@AL00001+4                                      0460
         LA    @14,DDSTRU                                          0460
         ST    @14,@AL00001+8                                      0460
         MVI   @AL00001+8,X'80'                                    0460
         L     @15,GDTPRT(,@15)                                    0460
         LA    @01,@AL00001                                        0460
         BALR  @14,@15                                             0460
*               LASTCOND=LASTCC08;  /* SET RET.CODE          @Z40LB40*/
         L     @15,@PC00001+8                                      0461
         MVC   LASTCOND(2,@15),@CH00183                            0461
*             END;                  /*                       @Z40LB40*/
*           ELSE                                                   0463
*             DO;                   /*                       @Z40LB40*/
*                                                                  0463
         B     @RC00451                                            0463
@RF00451 DS    0H                                                  0464
*               /*****************************************************/
*               /*                                                   */
*               /* SSID OK, GO DUMP IT                       @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0464
*               CALL DUMPSA(I1);    /* PASS INDEX AS PARM    @Z40LB40*/
         LA    @15,I1                                              0464
         ST    @15,@AL00001                                        0464
         LA    @01,@AL00001                                        0464
         BAL   @14,DUMPSA                                          0464
*               RESPECIFY                                          0465
*                 RTNREG RSTD;                                     0465
*               TESTRC=RTNREG;                                     0466
         LR    TESTRC,RTNREG                                       0466
*               RESPECIFY                                          0467
*                 RTNREG UNRSTD;    /*                       @Z40LB40*/
*               IF TESTRC^=LASTCC00 THEN/* RET.CODE^=0       @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0468
         BZ    @RF00468                                            0468
*                 LASTCOND=LASTCC08;/* SET RET.CODE          @Z40LB40*/
         L     @15,@PC00001+8                                      0469
         MVC   LASTCOND(2,@15),@CH00183                            0469
*             END;                  /*                       @Z40LB40*/
@RF00468 DS    0H                                                  0471
*         END;                      /*                       @Z40LB40*/
@RC00451 LA    @15,1                                               0471
         AL    @15,I1                                              0471
@DE00450 ST    @15,I1                                              0471
         L     @14,@PC00001+4                                      0471
         LA    @14,FDTPTR+16(,@14)                                 0471
         C     @15,STGADCNT(,@14)                                  0471
         BNH   @DL00450                                            0471
*     END;                          /*                       @Z40LB40*/
*                                                                  0472
@RF00449 DS    0H                                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE NOT SEVERE CHECK FOR NEXT WORK         @Z40LB40*/
*   /* TO BE DONE.                                           @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0473
*   IF LASTCOND<LASTCC12 THEN       /* IS EVERYTHING OK      @Z40LB40*/
@RF00447 L     @15,@PC00001+8                                      0473
         LH    @15,LASTCOND(,@15)                                  0473
         C     @15,@CF00606                                        0473
         BNL   @RF00473                                            0473
*     DO;                           /* YES,GO AHEAD          @Z40LB40*/
*                                                                  0474
*       /*************************************************************/
*       /*                                                           */
*       /* IF TABLES SPECIFIED THEN CALL DUMPTAB TO          @Z40LB40*/
*       /* DUMP MSC TABLES.                                  @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0475
*       IF TBLCNT^=0 THEN                                          0475
         L     @15,@PC00001+4                                      0475
         LA    @15,FDTPTR+36(,@15)                                 0475
         L     @15,TBLCNT(,@15)                                    0475
         LTR   @15,@15                                             0475
         BZ    @RF00475                                            0475
*         DO;                       /*                       @Z40LB40*/
*           CALL DUMPTAB;           /*                       @Z40LB40*/
         BAL   @14,DUMPTAB                                         0477
*           RESPECIFY                                              0478
*             RTNREG RSTD;                                         0478
*           TESTRC=RTNREG;                                         0479
         LR    TESTRC,RTNREG                                       0479
*           RESPECIFY                                              0480
*             RTNREG UNRSTD;        /*                       @Z40LB40*/
*           IF TESTRC^=LASTCC00 THEN/* RET.CODE^=0           @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0481
         BZ    @RF00481                                            0481
*             LASTCOND=LASTCC08;    /* SET RET.CODE          @Z40LB40*/
         L     @15,@PC00001+8                                      0482
         MVC   LASTCOND(2,@15),@CH00183                            0482
*         END;                      /*                       @Z40LB40*/
@RF00481 DS    0H                                                  0484
*     END;                          /*                       @Z40LB40*/
*                                                                  0484
@RF00475 DS    0H                                                  0485
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF STORAGE WAS GOTTON. IF SO, FREE IT.          @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*   IF GOTCORE=ON THEN                                             0485
*                                                                  0485
@RF00473 TM    GOTCORE,B'10000000'                                 0485
         BNO   @RF00485                                            0485
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UFSPACE MACRO                                 @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0486
*     CALL IDCSAFS0(GDTTBL,MEMPTR); /*                       @Z40LB40*/
*                                                                  0486
         L     @15,@PC00001                                        0486
         ST    @15,@AL00001                                        0486
         LA    @14,MEMPTR                                          0486
         ST    @14,@AL00001+4                                      0486
         L     @15,GDTFSP(,@15)                                    0486
         LA    @01,@AL00001                                        0486
         BALR  @14,@15                                             0486
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF ERROR MESSAGES MUST BE ISSUED OR JUST @Z40LB40*/
*   /* THE NORMAL END MESSAGE. IF LASTCOND ^= 00 THEN        @Z40LB40*/
*   /* IF GETSFAIL IS ON THEN ISSUE MESSAGE IDC3004I. ELSE   @Z40LB40*/
*   /* ISSUE MESSAGE IDC3003I. IF LASTCOND = 0 THEN ISSUE    @Z40LB40*/
*   /* MESSAGE IDC0001I.                                     @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
@RF00485 XC    PRINTAB(44),PRINTAB                                 0487
*   DARGSMOD=UVMSGMOD;              /* SET MOD ID            @Z40LB40*/
         L     @15,DDSTRU                                          0488
         MVC   DARGSMOD(3,@15),@CC01336                            0488
*   DARGDBP=ADDR(LASTCOND);         /* ADDRESS OF INSERT     @Z40LB40*/
         L     @14,@PC00001+8                                      0489
         ST    @14,DARGDBP(,@15)                                   0489
*   DARGILP=LENGTH(LASTCOND);       /* PTR TO INSERT         @Z40LB40*/
         MVC   DARGILP(2,@15),@CH00157                             0490
*   IF LASTCOND^=LASTCC00 THEN      /* WAS THERE AN ERROR    @Z40LB40*/
         LH    @14,LASTCOND(,@14)                                  0491
         LTR   @14,@14                                             0491
         BZ    @RF00491                                            0491
*     IF GETSFAIL=ON THEN           /* YES,WAS IT GETMAIN    @Z40LB40*/
         TM    GETSFAIL,B'01000000'                                0492
         BNO   @RF00492                                            0492
*       DARGSENT=IDC3004;           /* YES,SET MSG           @Z40LB40*/
         MVI   DARGSENT(@15),X'04'                                 0493
*     ELSE                          /* NOT,GETMAIN           @Z40LB40*/
*       DARGSENT=IDC3003;           /*                       @Z40LB40*/
         B     @RC00492                                            0494
@RF00492 L     @01,DDSTRU                                          0494
         MVI   DARGSENT(@01),X'03'                                 0494
*   ELSE                                                           0495
*     DARGSENT=IDC0001;             /* NO ERRORS,NORM MSG    @Z40LB40*/
         B     @RC00491                                            0495
@RF00491 L     @01,DDSTRU                                          0495
         MVI   DARGSENT(@01),X'01'                                 0495
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* PRINT LAST MSG   @Z40LB40*/
*                                                                  0496
@RC00491 L     @15,@PC00001                                        0496
         ST    @15,@AL00001                                        0496
         LA    @14,@CF00118                                        0496
         ST    @14,@AL00001+4                                      0496
         LA    @14,DDSTRU                                          0496
         ST    @14,@AL00001+8                                      0496
         MVI   @AL00001+8,X'80'                                    0496
         L     @15,GDTPRT(,@15)                                    0496
         LA    @01,@AL00001                                        0496
         BALR  @14,@15                                             0496
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR DATASET OPEN AND IF SO, CLOSE IT            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0497
*   IF PRPTR^=NULLPTR THEN                                         0497
*                                                                  0497
         L     @15,PRPTR                                           0497
         LTR   @15,@15                                             0497
         BZ    @RF00497                                            0497
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UCLOSE MACRO                                  @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0498
*     CALL IDCIOCL0(GDTTBL,IOCSPTR);/*                       @Z40LB40*/
*                                                                  0498
         L     @15,@PC00001                                        0498
         ST    @15,@AL00001                                        0498
         LA    @14,IOCSPTR                                         0498
         ST    @14,@AL00001+4                                      0498
         MVI   @AL00001+4,X'80'                                    0498
         L     @15,GDTCLS(,@15)                                    0498
         LA    @01,@AL00001                                        0498
         BALR  @14,@15                                             0498
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UDUMP DIAGNOSTIC REGION DUMP                    @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0499
*   IF GDTDBG=NULLPTR THEN                                         0499
@RF00497 L     @15,@PC00001                                        0499
         L     @15,GDTDBG(,@15)                                    0499
         LTR   @15,@15                                             0499
         BZ    @RT00499                                            0499
*     ;                                                            0500
*   ELSE                                                           0501
*     CALL IDCDB010(GDTTBL,'DUAZ'); /*                       @Z40LB40*/
*                                                                  0501
         L     @15,@PC00001                                        0501
         ST    @15,@AL00001                                        0501
         LA    @14,@CC01456                                        0501
         ST    @14,@AL00001+4                                      0501
         MVI   @AL00001+4,X'80'                                    0501
         L     @15,GDTDBG(,@15)                                    0501
         LA    @01,@AL00001                                        0501
         BALR  @14,@15                                             0501
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UEPIL MACRO TO TERMINATE                        @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0502
*   CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);                          0502
*                                                                  0502
@RT00499 L     @15,@PC00001                                        0502
         ST    @15,@AL00001                                        0502
         LA    @14,MODID                                           0502
         ST    @14,@AL00001+4                                      0502
         L     @14,@PC00001+8                                      0502
         ST    @14,@AL00001+8                                      0502
         MVI   @AL00001+8,X'80'                                    0502
         L     @15,GDTEPL(,@15)                                    0502
         LA    @01,@AL00001                                        0502
         BALR  @14,@15                                             0502
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*                                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - DUMPMSC (LEVEL 2)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE CALLS THE ROUTINES THAT       @Z40LB40*/
*   /* PRODUCE FORMATTED AND/OR UNFORMATTED                  @Z40LB40*/
*   /* DUMPS OF MSC MAIN AND EXTENDED STORAGE.               @Z40LB40*/
*   /* GETDATA IS CALLED TO READ ALL OF MSC                  @Z40LB40*/
*   /* MAIN OR EXT. STORAGE. ZEROBDY, JOBLISTS,              @Z40LB40*/
*   /* IOBUFFS, STGSCH, UCBS, ERP, LOWSENSE,                 @Z40LB40*/
*   /* MSCEC, BAR, TABUCB,                                   @ZD00050*/
*   /* MNTEQUAL, CHRS, RECOVERY AND                          @ZD00050*/
*   /* PRNTSECT ARE CALLED TO DO THE ACTUAL                  @Z40LB40*/
*   /* PRINTING OF THE USER REQUESTED PORTIONS               @Z40LB40*/
*   /* OF STORAGE.                                           @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - FUNCTION DESCRIPTION TABLE.                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - RETURN CODE                                  @Z40LB40*/
*   /* 0 = EVERYTHING OK                                     @Z40LB40*/
*   /* 4 = USER ENTERED DATA INCORRECTLY, BUT                @Z40LB40*/
*   /* REMAINDER OF THE FUNCTIONS WERE                       @Z40LB40*/
*   /* ATTEMPTED, OR GETDATA FAILED WHEN                     @Z40LB40*/
*   /* READING MSC STORAGE.                                  @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*DUMPMSC:                                                          0503
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
@EL00001 L     @13,4(,@13)                                         0503
@EF00001 L     @00,@SIZDATD                                        0503
         LR    @01,@08                                             0503
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0503
         BR    @14                                                 0503
DUMPMSC  DS    0H                                                  0504
*   RFY                                                            0504
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR1=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         ST    REG14,RETADDR1                                      0505
*   RFY                                                            0506
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             0507
         L     @15,@PC00001                                        0507
         L     @15,GDTTR2(,@15)                                    0507
         MVC   @TS00001(95),NEWERID2(@15)                          0507
         MVC   OLDERID2(95,@15),@TS00001                           0507
*   NEWID2='DUBA';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@15),@CC01460                              0508
*   MSCRC=LASTCC00;                 /* INIT RETURN CODE      @Z40LB40*/
*                                                                  0509
         SLR   @15,@15                                             0509
         STH   @15,MSCRC                                           0509
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UESTA MACRO FOR PRINT HEADERS                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0510
*   PCARG=''B;                      /* CLEAR ARG             @Z40LB40*/
         XC    PCARG(33),PCARG                                     0510
*   STBUFFER=' ';                   /* BLANK RETURN AREA     @Z40LB40*/
         MVI   STBUFFER+1,C' '                                     0511
         MVC   STBUFFER+2(119),STBUFFER+1                          0511
         MVI   STBUFFER,C' '                                       0511
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0512
*   DARGRETP=ADDR(STBUFFER);        /* ADDR OF RETURN AREA   @Z40LB40*/
         L     @14,DDSTRU                                          0513
         LA    @07,STBUFFER                                        0513
         ST    @07,DARGRETP(,@14)                                  0513
*   DARGRETL=LENGTH(STBUFFER);      /* SIZE OF RETURN AREA   @Z40LB40*/
         MVC   DARGRETL(2,@14),@CH01251                            0514
*   DARGSMOD=DUMSGMOD;              /* TEXT MOD ID           @Z40LB40*/
         MVC   DARGSMOD(3,@14),@CC01334                            0515
*   IF ADDR(AMSC)=NULLPTR THEN      /* IF ALT NOT SPECIFIED  @ZA27590*/
         L     @07,@PC00001+4                                      0516
         C     @15,FDTPTR+92(,@07)                                 0516
         BNE   @RF00516                                            0516
*     DARGSENT=TMSCD;               /* ENTRY ID              @ZA27590*/
         MVI   DARGSENT(@14),X'0A'                                 0517
*   ELSE                            /* ELSE USE ALTERNATE    @ZA27590*/
*     DARGSENT=TAMSCD;              /* ENTRY ID              @ZA27590*/
         B     @RC00516                                            0518
@RF00516 L     @01,DDSTRU                                          0518
         MVI   DARGSENT(@01),X'1C'                                 0518
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* READ IN SUBTITLE @Z40LB40*/
@RC00516 L     @15,@PC00001                                        0519
         ST    @15,@AL00001                                        0519
         LA    @14,@CF00118                                        0519
         ST    @14,@AL00001+4                                      0519
         LA    @14,DDSTRU                                          0519
         ST    @14,@AL00001+8                                      0519
         MVI   @AL00001+8,X'80'                                    0519
         L     @15,GDTPRT(,@15)                                    0519
         LA    @01,@AL00001                                        0519
         BALR  @14,@15                                             0519
*   PCSTLC=1;                       /* ONE SUBTITLE          @Z40LB40*/
         MVC   PCSTLC(2),@CH00223                                  0520
*   PCSTLP=ADDR(STBUFFER);          /* ADDR OF SUBTITLE      @Z40LB40*/
         LA    @15,STBUFFER                                        0521
         ST    @15,PCSTLP                                          0521
*   CALL AMSTP042(GDTTBL,PRPTR,PCARG);/* SET SUBTITLE        @Z40LB40*/
*                                                                  0522
         L     @15,@PC00001                                        0522
         ST    @15,@AL00001                                        0522
         LA    @14,PRPTR                                           0522
         ST    @14,@AL00001+4                                      0522
         LA    @14,PCARG                                           0522
         ST    @14,@AL00001+8                                      0522
         L     @15,GDTESA(,@15)                                    0522
         LA    @01,@AL00001                                        0522
         BALR  @14,@15                                             0522
*   /*****************************************************************/
*   /*                                                               */
*   /* IF FORMAT SPECIFIED OR DEFAULTED TO OR MAINSECTOR     @Z40LB40*/
*   /* SPECIFIED THEN GETDATA MUST BE CALLED TO READ ALL     @Z40LB40*/
*   /* OF MSC MAIN STORAGE.                                  @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0523
*   IF(ADDR(MFMT)=NULLPTR&MSCTMCNT=0&MSCTECNT=0)×ADDR(MFMT)^=NULLPTR×
*       MSCTMCNT^=0 THEN                                           0523
         SLR   @15,@15                                             0523
         L     @14,@PC00001+4                                      0523
         C     @15,FDTPTR+4(,@14)                                  0523
         BNE   @GL00006                                            0523
         LA    @07,FDTPTR+8(,@14)                                  0523
         C     @15,MSCTMCNT(,@07)                                  0523
         BNE   @GL00006                                            0523
         LA    @14,FDTPTR+12(,@14)                                 0523
         C     @15,MSCTECNT(,@14)                                  0523
         BE    @RT00523                                            0523
@GL00006 SLR   @15,@15                                             0523
         L     @14,@PC00001+4                                      0523
         C     @15,FDTPTR+4(,@14)                                  0523
         BNE   @RT00523                                            0523
         LA    @14,FDTPTR+8(,@14)                                  0523
         C     @15,MSCTMCNT(,@14)                                  0523
         BE    @RF00523                                            0523
@RT00523 DS    0H                                                  0524
*     DO;                           /*                       @Z40LB40*/
*       CALL GETDATA(MSCM);         /* PASS MSCM AS PARM     @Z40LB40*/
         LA    @01,@AL00525                                        0525
         BAL   @14,GETDATA                                         0525
*       RESPECIFY                                                  0526
*         RTNREG RSTD;                                             0526
*       TESTRC=RTNREG;                                             0527
         LR    TESTRC,RTNREG                                       0527
*       RESPECIFY                                                  0528
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC^=LASTCC00 THEN    /* WAS ALL DATA READ     @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0529
         BZ    @RF00529                                            0529
*         DO;                       /*                       @Z40LB40*/
*                                                                  0530
*           /*********************************************************/
*           /*                                                       */
*           /* NO ISSUE ERROR MESSAGE                        @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0531
*           PRINTAB=''B;            /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0531
*           DARGSMOD=DUMSGMOD;      /* SET TEXT MOD ID       @Z40LB40*/
         L     @15,DDSTRU                                          0532
         MVC   DARGSMOD(3,@15),@CC01334                            0532
*           DARGSENT=IDC21100;      /* SET TEXT ENTRY        @Z40LB40*/
         MVI   DARGSENT(@15),X'01'                                 0533
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* PRINT MSG      0534
*                                                            @Z40LB40*/
         L     @15,@PC00001                                        0534
         ST    @15,@AL00001                                        0534
         LA    @14,@CF00118                                        0534
         ST    @14,@AL00001+4                                      0534
         LA    @14,DDSTRU                                          0534
         ST    @14,@AL00001+8                                      0534
         MVI   @AL00001+8,X'80'                                    0534
         L     @15,GDTPRT(,@15)                                    0534
         LA    @01,@AL00001                                        0534
         BALR  @14,@15                                             0534
*           MSCRC=LASTCC04;         /* SET RET.CODE          @Z40LB40*/
         MVC   MSCRC(2),@CH00044                                   0535
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       0537
*         GOTMSCM=ON;               /* YES,INDICATE IT       @Z40LB40*/
         B     @RC00529                                            0537
@RF00529 OI    GOTMSCM,B'00100000'                                 0537
*       IF(GOTMSCM=ON&ADDR(MFMT)^=NULLPTR)×(GOTMSCM=ON&ADDR(MFMT)= 0538
*           NULLPTR&MSCTMCNT=0) THEN                               0538
@RC00529 TM    GOTMSCM,B'00100000'                                 0538
         BNO   @GL00009                                            0538
         L     @15,@PC00001+4                                      0538
         L     @15,FDTPTR+4(,@15)                                  0538
         LTR   @15,@15                                             0538
         BNZ   @RT00538                                            0538
@GL00009 TM    GOTMSCM,B'00100000'                                 0538
         BNO   @RF00538                                            0538
         SLR   @15,@15                                             0538
         L     @14,@PC00001+4                                      0538
         C     @15,FDTPTR+4(,@14)                                  0538
         BNE   @RF00538                                            0538
         LA    @14,FDTPTR+8(,@14)                                  0538
         C     @15,MSCTMCNT(,@14)                                  0538
         BNE   @RF00538                                            0538
@RT00538 DS    0H                                                  0539
*         DO;                       /*                       @Z40LB40*/
*                                                                  0539
*           /*********************************************************/
*           /*                                                       */
*           /* FORMAT SPECIFIED OR DEFAULTED TO. CALL        @Z40LB40*/
*           /* FUNCTIONS PROCEDURES TO PRODUCE THE           @Z40LB40*/
*           /* VARIOUS PARTS OF THE FORMATTED DUMP           @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0540
*           CALL MSCEC;             /* PRINT EC LEVEL        @ZD00050*/
         BAL   @14,MSCEC                                           0540
*           CALL BAR;               /* PRINT BAR REGISTER    @ZD00050*/
         BAL   @14,BAR                                             0541
*           CALL TABUCB;            /* PRINT TABLES UCBS     @ZD00050*/
         BAL   @14,TABUCB                                          0542
*           CALL RECOVERY;          /* PRINT RECOVERY        @ZD00050
*                                      SAVE AREAS            @ZD00050*/
         BAL   @14,RECOVERY                                        0543
*           CALL JOBLISTS;          /* PRINT JOBLISTS        @Z40LB40*/
         BAL   @14,JOBLISTS                                        0544
*           CALL IOBUFFS;           /* PRINT I/O BUFFERS     @Z40LB40*/
         BAL   @14,IOBUFFS                                         0545
*           CALL ZEROBDY;           /* PRINT ZERO BOUNDARY   @Z40LB40
*                                      WORDS                 @Z40LB40*/
         BAL   @14,ZEROBDY                                         0546
*           CALL UCBS;              /* PRINT UNIT CONTROL    @Z40LB40
*                                      BLOCKS                @Z40LB40*/
         BAL   @14,UCBS                                            0547
*           CALL STGSCH;            /* PRINT STAGE SCHED.    @Z40LB40
*                                      INFORMATION           @Z40LB40*/
         BAL   @14,STGSCH                                          0548
*           CALL ERP;               /* PRINT ERROR RECOV.    @Z40LB40
*                                      INFORMATION           @Z40LB40*/
         BAL   @14,ERP                                             0549
*           CALL LOWSENSE;          /* PRINT LOW INTERFACE   @Z40LB40
*                                      SENSE DATA            @Z40LB40*/
         BAL   @14,LOWSENSE                                        0550
*           CALL MNTEQUAL;          /* PRINT MOUNT           @Z40LB40
*                                      EQUALIZATION STATS    @Z40LB40*/
         BAL   @14,MNTEQUAL                                        0551
*           CALL CHRS;              /* PRINT TABLE CHRS      @Z40LB40*/
         BAL   @14,CHRS                                            0552
*         END;                      /*                       @Z40LB40*/
*       IF GOTMSCM=ON&MSCTMCNT^=0 THEN                             0554
@RF00538 TM    GOTMSCM,B'00100000'                                 0554
         BNO   @RF00554                                            0554
         L     @15,@PC00001+4                                      0554
         LA    @15,FDTPTR+8(,@15)                                  0554
         L     @15,MSCTMCNT(,@15)                                  0554
         LTR   @15,@15                                             0554
         BZ    @RF00554                                            0554
*         DO I2=1 TO MSCTMCNT;      /*                       @Z40LB40*/
*                                                                  0555
         LA    @15,1                                               0555
         B     @DE00555                                            0555
@DL00555 DS    0H                                                  0556
*           /*********************************************************/
*           /*                                                       */
*           /* MSC MAIN STORAGE READ OK AND MAINSECTOR ENTERED       */
*           /*                                               @Z40LB40*/
*           /* CALL PRNTSECT FOR EACH SECTOR SPECIFIED EITHER        */
*           /*                                               @Z40LB40*/
*           /* SINGLY OR AS PART OF A RANGE.                 @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0556
*           LOSECT=MMLOPTR(I2)->MMLOVAL;/* SAVE LOW VALUE    @Z40LB40*/
         SLA   @15,2                                               0556
         L     @14,@PC00001+4                                      0556
         L     @01,FDTPTR+60(,@14)                                 0556
         AL    @01,@CF01753                                        0556
         L     @01,MMLOPTR(@15,@01)                                0556
         L     @07,MMLOVAL(,@01)                                   0556
         ST    @07,LOSECT                                          0556
*           IF MMHIPTR(I2)=NULLPTR THEN/* IF NOT RANGE       @Z40LB40*/
         L     @01,FDTPTR+64(,@14)                                 0557
         AL    @01,@CF01753                                        0557
         L     @06,MMHIPTR(@15,@01)                                0557
         LTR   @06,@06                                             0557
         BNZ   @RF00557                                            0557
*             HISECT=LOSECT;        /* MAKE VALUES SAME      @Z40LB40*/
         ST    @07,HISECT                                          0558
*           ELSE                                                   0559
*             HISECT=MMHIPTR(I2)->MMHIVAL;/* SAVE HIGH VALUE @Z40LB40*/
         B     @RC00557                                            0559
@RF00557 L     @15,I2                                              0559
         SLA   @15,2                                               0559
         L     @14,@PC00001+4                                      0559
         L     @01,FDTPTR+64(,@14)                                 0559
         AL    @01,@CF01753                                        0559
         L     @01,MMHIPTR(@15,@01)                                0559
         L     @15,MMHIVAL(,@01)                                   0559
         ST    @15,HISECT                                          0559
*           IF LOSECT>HISECT THEN                                  0560
@RC00557 L     @15,LOSECT                                          0560
         C     @15,HISECT                                          0560
         BNH   @RF00560                                            0560
*             DO;                   /*                       @Z40LB40*/
*                                                                  0561
*               /*****************************************************/
*               /*                                                   */
*               /* INVALID RANGE SPECIFIED. ISSUE ERROR      @Z40LB40*/
*               /* MESSAGE AND SET RETURN CODE.              @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0562
*               PRINTAB=''B;        /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0562
*               DARGSMOD=DUMSGMOD;  /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0563
         MVC   DARGSMOD(3,@15),@CC01334                            0563
*               DARGSENT=IDC21101;  /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'02'                                 0564
*               DARGCNT=2;          /*                       @Z40LB40*/
         LA    @14,2                                               0565
         STH   @14,DARGCNT(,@15)                                   0565
*               DARGINS(1)=1;       /*                       @Z40LB40*/
         LA    @07,1                                               0566
         STH   @07,DARGINS(,@15)                                   0566
*               DARGINL(1)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL(,@15)                                   0567
*               DARGDTM(1)=ADDR(LOSECT)+3;/*                 @Z40LB40*/
         LA    @06,3                                               0568
         LA    @05,LOSECT                                          0568
         ALR   @05,@06                                             0568
         ST    @05,DARGDTM(,@15)                                   0568
*               DARGINS(2)=2;       /*                       @Z40LB40*/
         STH   @14,DARGINS+8(,@15)                                 0569
*               DARGINL(2)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL+8(,@15)                                 0570
*               DARGDTM(2)=ADDR(HISECT)+3;/*                 @Z40LB40*/
         LA    @14,HISECT                                          0571
         ALR   @14,@06                                             0571
         ST    @14,DARGDTM+8(,@15)                                 0571
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*      @Z40LB40*/
         L     @15,@PC00001                                        0572
         ST    @15,@AL00001                                        0572
         LA    @14,@CF00118                                        0572
         ST    @14,@AL00001+4                                      0572
         LA    @14,DDSTRU                                          0572
         ST    @14,@AL00001+8                                      0572
         MVI   @AL00001+8,X'80'                                    0572
         L     @15,GDTPRT(,@15)                                    0572
         LA    @01,@AL00001                                        0572
         BALR  @14,@15                                             0572
*               MSCRC=LASTCC04;     /* SET RET.CODE          @Z40LB40*/
         MVC   MSCRC(2),@CH00044                                   0573
*             END;                  /*                       @Z40LB40*/
*           ELSE                                                   0575
*             DO;                   /*                       @Z40LB40*/
*                                                                  0575
         B     @RC00560                                            0575
@RF00560 DS    0H                                                  0576
*               /*****************************************************/
*               /*                                                   */
*               /* RANGE OK,SET PRINT HEADER AND CALL        @Z40LB40*/
*               /* PRNTSECT TO PRINT SECTOR(S)               @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0576
*               HISECT=HISECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,HISECT                                          0576
         SLA   @15,8                                               0576
         ST    @15,HISECT                                          0576
*               LOSECT=LOSECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,LOSECT                                          0577
         SLA   @15,8                                               0577
         ST    @15,LOSECT                                          0577
*               DO J2=LOSECT TO HISECT BY SECTSIZE;/*        @Z40LB40*/
*                                                                  0578
         ST    @15,J2                                              0578
         B     @DE00578                                            0578
@DL00578 DS    0H                                                  0579
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE UPRINT FOR MAIN SECTOR HEADER     @Z40LB40*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0579
*                 PRINTAB=''B;      /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0579
*                 DARGSMOD=DUMSGMOD;/*                       @Z40LB40*/
         L     @02,DDSTRU                                          0580
         MVC   DARGSMOD(3,@02),@CC01334                            0580
*                 DARGSENT=HMAINSCT;/*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'25'                                 0581
*                 CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HDR  0582
*                                                            @Z40LB40*/
         L     @02,@PC00001                                        0582
         ST    @02,@AL00001                                        0582
         LA    @15,PRPTR                                           0582
         ST    @15,@AL00001+4                                      0582
         LA    @15,DDSTRU                                          0582
         ST    @15,@AL00001+8                                      0582
         MVI   @AL00001+8,X'80'                                    0582
         L     @15,GDTPRT(,@02)                                    0582
         LA    @01,@AL00001                                        0582
         BALR  @14,@15                                             0582
*                 SECTADDR=J2;      /* SET SECTOR ADDRESS    @Z40LB40*/
         L     SECTADDR,J2                                         0583
*                 NUMBYTES=SECTSIZE;/* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                0584
*                 CALL PRNTSECT;    /*                       @Z40LB40*/
         BAL   @14,PRNTSECT                                        0585
*               END;                /*                       @Z40LB40*/
         LA    @15,256                                             0586
         AL    @15,J2                                              0586
         ST    @15,J2                                              0586
@DE00578 C     @15,HISECT                                          0586
         BNH   @DL00578                                            0586
*             END;                  /*                       @Z40LB40*/
*         END;                      /*                       @Z40LB40*/
@RC00560 LA    @15,1                                               0588
         AL    @15,I2                                              0588
@DE00555 ST    @15,I2                                              0588
         L     @14,@PC00001+4                                      0588
         LA    @14,FDTPTR+8(,@14)                                  0588
         C     @15,MSCTMCNT(,@14)                                  0588
         BNH   @DL00555                                            0588
*     END;                          /*                       @Z40LB40*/
*                                                                  0589
@RF00554 DS    0H                                                  0590
*   /*****************************************************************/
*   /*                                                               */
*   /* IF EXTENDEDSECTOR SPECIFIED THEN GETDATA MUST BE      @Z40LB40*/
*   /* CALLED TO READ ALL OF MSC EXTENDED STORAGE            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*   IF MSCTECNT^=0 THEN                                            0590
@RF00523 L     @15,@PC00001+4                                      0590
         LA    @15,FDTPTR+12(,@15)                                 0590
         L     @15,MSCTECNT(,@15)                                  0590
         LTR   @15,@15                                             0590
         BZ    @RF00590                                            0590
*     DO;                           /*                       @Z40LB40*/
*       CALL GETDATA(MSCE);         /* PASS MSCE AS PARM     @Z40LB40*/
         LA    @01,@AL00592                                        0592
         BAL   @14,GETDATA                                         0592
*       RESPECIFY                                                  0593
*         RTNREG RSTD;                                             0593
*       TESTRC=RTNREG;                                             0594
         LR    TESTRC,RTNREG                                       0594
*       RESPECIFY                                                  0595
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC^=LASTCC00 THEN    /* WAS ALL DATA READ     @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0596
         BZ    @RF00596                                            0596
*         DO;                       /*                       @Z40LB40*/
*                                                                  0597
*           /*********************************************************/
*           /*                                                       */
*           /* NO,ISSUE ERROR MESSAGE                        @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0598
*           PRINTAB=''B;            /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0598
*           DARGSMOD=DUMSGMOD;      /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0599
         MVC   DARGSMOD(3,@15),@CC01334                            0599
*           DARGSENT=IDC21102;      /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'03'                                 0600
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Z40LB40*/
         L     @15,@PC00001                                        0601
         ST    @15,@AL00001                                        0601
         LA    @14,@CF00118                                        0601
         ST    @14,@AL00001+4                                      0601
         LA    @14,DDSTRU                                          0601
         ST    @14,@AL00001+8                                      0601
         MVI   @AL00001+8,X'80'                                    0601
         L     @15,GDTPRT(,@15)                                    0601
         LA    @01,@AL00001                                        0601
         BALR  @14,@15                                             0601
*           MSCRC=LASTCC04;         /* SET RET.CODE          @Z40LB40*/
         MVC   MSCRC(2),@CH00044                                   0602
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       0604
*         GOTMSCE=ON;               /* YES,INDICATE IT       @Z40LB40*/
         B     @RC00596                                            0604
@RF00596 OI    GOTMSCE,B'00010000'                                 0604
*       IF GOTMSCE=ON THEN                                         0605
@RC00596 TM    GOTMSCE,B'00010000'                                 0605
         BNO   @RF00605                                            0605
*         DO I2=1 TO MSCTECNT;      /*                       @Z40LB40*/
*                                                                  0606
         LA    @15,1                                               0606
         B     @DE00606                                            0606
@DL00606 DS    0H                                                  0607
*           /*********************************************************/
*           /*                                                       */
*           /* MSC EXTENDED STORAGE READ OK. CALL PRNTSECT   @Z40LB40*/
*           /* FOR EACH SECTOR SPECIFIED EITHER SINGLY       @Z40LB40*/
*           /* OR AS PART OF A RANGE.                        @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0607
*           LOSECT=MELOPTR(I2)->MELOVAL;/* SAVE LOW VALUE    @Z40LB40*/
         SLA   @15,2                                               0607
         L     @14,@PC00001+4                                      0607
         L     @01,FDTPTR+68(,@14)                                 0607
         AL    @01,@CF01753                                        0607
         L     @01,MELOPTR(@15,@01)                                0607
         L     @07,MELOVAL(,@01)                                   0607
         ST    @07,LOSECT                                          0607
*           IF MEHIPTR(I2)=NULLPTR THEN/* IF NOT RANGE       @Z40LB40*/
         L     @01,FDTPTR+72(,@14)                                 0608
         AL    @01,@CF01753                                        0608
         L     @06,MEHIPTR(@15,@01)                                0608
         LTR   @06,@06                                             0608
         BNZ   @RF00608                                            0608
*             HISECT=LOSECT;        /* MAKE VALUES SAME      @Z40LB40*/
         ST    @07,HISECT                                          0609
*           ELSE                                                   0610
*             HISECT=MEHIPTR(I2)->MEHIVAL;/* SAVE HIGH VALUE @Z40LB40*/
         B     @RC00608                                            0610
@RF00608 L     @15,I2                                              0610
         SLA   @15,2                                               0610
         L     @14,@PC00001+4                                      0610
         L     @01,FDTPTR+72(,@14)                                 0610
         AL    @01,@CF01753                                        0610
         L     @01,MEHIPTR(@15,@01)                                0610
         L     @15,MEHIVAL(,@01)                                   0610
         ST    @15,HISECT                                          0610
*           IF LOSECT>HISECT THEN                                  0611
@RC00608 L     @15,LOSECT                                          0611
         C     @15,HISECT                                          0611
         BNH   @RF00611                                            0611
*             DO;                   /*                       @Z40LB40*/
*                                                                  0612
*               /*****************************************************/
*               /*                                                   */
*               /* INVALID RANGE SPECIFIED. ISSUE ERROR      @Z40LB40*/
*               /* MESSAGE AND SET RETURN CODE.              @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0613
*               PRINTAB=''B;        /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0613
*               DARGSMOD=DUMSGMOD;  /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0614
         MVC   DARGSMOD(3,@15),@CC01334                            0614
*               DARGSENT=IDC21101;  /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'02'                                 0615
*               DARGCNT=2;          /*                       @Z40LB40*/
         LA    @14,2                                               0616
         STH   @14,DARGCNT(,@15)                                   0616
*               DARGINS(1)=1;       /*                       @Z40LB40*/
         LA    @07,1                                               0617
         STH   @07,DARGINS(,@15)                                   0617
*               DARGINL(1)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL(,@15)                                   0618
*               DARGDTM(1)=ADDR(LOSECT)+3;/*                 @Z40LB40*/
         LA    @06,3                                               0619
         LA    @05,LOSECT                                          0619
         ALR   @05,@06                                             0619
         ST    @05,DARGDTM(,@15)                                   0619
*               DARGINS(2)=2;       /*                       @Z40LB40*/
         STH   @14,DARGINS+8(,@15)                                 0620
*               DARGINL(2)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL+8(,@15)                                 0621
*               DARGDTM(2)=ADDR(HISECT)+3;/*                 @Z40LB40*/
         LA    @14,HISECT                                          0622
         ALR   @14,@06                                             0622
         ST    @14,DARGDTM+8(,@15)                                 0622
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*      @Z40LB40*/
         L     @15,@PC00001                                        0623
         ST    @15,@AL00001                                        0623
         LA    @14,@CF00118                                        0623
         ST    @14,@AL00001+4                                      0623
         LA    @14,DDSTRU                                          0623
         ST    @14,@AL00001+8                                      0623
         MVI   @AL00001+8,X'80'                                    0623
         L     @15,GDTPRT(,@15)                                    0623
         LA    @01,@AL00001                                        0623
         BALR  @14,@15                                             0623
*               MSCRC=LASTCC04;     /* SET RET.CODE          @Z40LB40*/
         MVC   MSCRC(2),@CH00044                                   0624
*             END;                  /*                       @Z40LB40*/
*           ELSE                                                   0626
*             DO;                   /*                       @Z40LB40*/
*                                                                  0626
         B     @RC00611                                            0626
@RF00611 DS    0H                                                  0627
*               /*****************************************************/
*               /*                                                   */
*               /* RANGE OK, SET PRINT HEADER AND CALL       @Z40LB40*/
*               /* PRNTSECT TO PRINT SECTOR(S)               @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0627
*               HISECT=HISECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,HISECT                                          0627
         SLA   @15,8                                               0627
         ST    @15,HISECT                                          0627
*               LOSECT=LOSECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,LOSECT                                          0628
         SLA   @15,8                                               0628
         ST    @15,LOSECT                                          0628
*               DO J2=LOSECT TO HISECT BY SECTSIZE;/*        @Z40LB40*/
*                                                                  0629
         ST    @15,J2                                              0629
         B     @DE00629                                            0629
@DL00629 DS    0H                                                  0630
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE UPRINT FOR EXTENDED SECTOR HEADER @Z40LB40*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0630
*                 PRINTAB=''B;      /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0630
*                 DARGSMOD=DUMSGMOD;/*                       @Z40LB40*/
         L     @02,DDSTRU                                          0631
         MVC   DARGSMOD(3,@02),@CC01334                            0631
*                 DARGSENT=HEXTSCT; /*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'26'                                 0632
*                 CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HDR  0633
*                                                            @Z40LB40*/
         L     @02,@PC00001                                        0633
         ST    @02,@AL00001                                        0633
         LA    @15,PRPTR                                           0633
         ST    @15,@AL00001+4                                      0633
         LA    @15,DDSTRU                                          0633
         ST    @15,@AL00001+8                                      0633
         MVI   @AL00001+8,X'80'                                    0633
         L     @15,GDTPRT(,@02)                                    0633
         LA    @01,@AL00001                                        0633
         BALR  @14,@15                                             0633
*                 SECTADDR=J2;      /* SET SECTOR ADDRESS    @Z40LB40*/
         L     SECTADDR,J2                                         0634
*                 NUMBYTES=SECTSIZE;/* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                0635
*                 CALL PRNTSECT;    /*                       @Z40LB40*/
         BAL   @14,PRNTSECT                                        0636
*               END;                /*                       @Z40LB40*/
         LA    @15,256                                             0637
         AL    @15,J2                                              0637
         ST    @15,J2                                              0637
@DE00629 C     @15,HISECT                                          0637
         BNH   @DL00629                                            0637
*             END;                  /*                       @Z40LB40*/
*         END;                      /*                       @Z40LB40*/
@RC00611 LA    @15,1                                               0639
         AL    @15,I2                                              0639
@DE00606 ST    @15,I2                                              0639
         L     @14,@PC00001+4                                      0639
         LA    @14,FDTPTR+12(,@14)                                 0639
         C     @15,MSCTECNT(,@14)                                  0639
         BNH   @DL00606                                            0639
*     END;                          /*                       @Z40LB40*/
*                                                                  0640
@RF00605 DS    0H                                                  0641
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET HEADLINES                                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0641
*   CALL AMSTP044(GDTTBL,PRPTR);    /*                       @Z40LB40*/
@RF00590 L     @15,@PC00001                                        0641
         ST    @15,@AL00001                                        0641
         LA    @14,PRPTR                                           0641
         ST    @14,@AL00001+4                                      0641
         MVI   @AL00001+4,X'80'                                    0641
         L     @15,GDTRES(,@15)                                    0641
         LA    @01,@AL00001                                        0641
         BALR  @14,@15                                             0641
*   RFY                                                            0642
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR1;                 /* SET RETURN POINT      @Z40LB40*/
         L     REG14,RETADDR1                                      0643
*   RETURN CODE(MSCRC);             /* RETURN TO CALLER      @Z40LB40*/
         LH    @15,MSCRC                                           0644
@EL00002 DS    0H                                                  0644
@EF00002 DS    0H                                                  0644
@ER00002 BR    @14                                                 0644
*   RFY                                                            0645
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END DUMPMSC;                    /*                       @Z40LB40*/
*                                                                  0647
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - DUMPSA (LEVEL 2)                     @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE CALLS THE ROUTINES THAT       @Z40LB40*/
*   /* PRODUCE FORMATTED AND/OR UNFORMATTED                  @Z40LB40*/
*   /* DUMPS OF SA MAIN AND EXTENDED STORAGE.                @Z40LB40*/
*   /* GETDATA IS CALLED TO READ ALL OF SA                   @Z40LB40*/
*   /* MAIN OR EXT. STORAGE. VAD, VVIT,ZEROBDY,              @Z40LB40*/
*   /* DCBS,SAMSGQUE,AUT,LTR,SASENSE,PST,SAEC,               @ZD00050*/
*   /* LRU, SASTATUS AND PRNTSECT ARE CALLED                 @Z40LB40*/
*   /* TO DO THE ACTUAL PRINTING OF THE USER                 @Z40LB40*/
*   /* REQUESTED PORTIONS OF STORAGE.                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - FUNCTION DESCRIPTION TABLE AND INDEX VALUE    @Z40LB40*/
*   /* OF WHICH SSID TO WORK WITH.                           @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - RETURN CODE                                  @Z40LB40*/
*   /* 0 = EVERYTHING OK                                     @Z40LB40*/
*   /* 4 = USER ENTERED DATA INCORRECTLY, BUT                @Z40LB40*/
*   /* REMAINDER OF THE FUNCTIONS WERE                       @Z40LB40*/
*   /* ATTEMPTED, OR GETDATA FAILED WHEN                     @Z40LB40*/
*   /* READING MSC STORAGE.                                  @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0647
*DUMPSA:                                                           0647
*   PROCEDURE(S1) OPTIONS(NOSAVE,NOSAVEAREA);/*              @Z40LB40*/
DUMPSA   MVC   @PC00003(4),0(@01)                                  0647
*   DCL                                                            0648
*     S1 FIXED(31);                 /* SSID INDEX VALUE      @Z40LB40*/
*   RFY                                                            0649
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR1=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         ST    REG14,RETADDR1                                      0650
*   RFY                                                            0651
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             0652
         L     @15,@PC00001                                        0652
         L     @14,GDTTR2(,@15)                                    0652
         MVC   @TS00001(95),NEWERID2(@14)                          0652
         MVC   OLDERID2(95,@14),@TS00001                           0652
*   NEWID2='DUBB';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@14),@CC01481                              0653
*   SARC=LASTCC00;                  /* INIT RETURN CODE      @Z40LB40*/
         SLR   @14,@14                                             0654
         STH   @14,SARC                                            0654
*   GOTSAM=OFF;                     /* TURN OFF GOTSAM       @Z40LB40*/
*   GOTSAE=OFF;                     /* TURN OFF GOTSAE       @Z40LB40*/
*   EXERR=OFF;                      /* TURN OFF EXT. ERROR   @ZD00050*/
*                                                                  0657
         NI    GOTSAM,B'11110010'                                  0657
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UESTA MACRO FOR PRINT HEADERS                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0658
*   PCARG=''B;                      /*                       @Z40LB40*/
         XC    PCARG(33),PCARG                                     0658
*   STBUFFER=' ';                   /* BLANK BUFFER          @Z40LB40*/
         MVI   STBUFFER+1,C' '                                     0659
         MVC   STBUFFER+2(119),STBUFFER+1                          0659
         MVI   STBUFFER,C' '                                       0659
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0660
*   DARGRETP=ADDR(STBUFFER);        /* ADDR OF RETURN        @Z40LB40*/
         L     @14,DDSTRU                                          0661
         LA    @07,STBUFFER                                        0661
         ST    @07,DARGRETP(,@14)                                  0661
*   DARGRETL=LENGTH(STBUFFER);      /* LENGTH OF RETURN      @Z40LB40*/
         MVC   DARGRETL(2,@14),@CH01251                            0662
*   DARGSMOD=DUMSGMOD;              /* SET TEXT ID           @Z40LB40*/
         MVC   DARGSMOD(3,@14),@CC01334                            0663
*   DARGSENT=TSAD;                  /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@14),X'0B'                                 0664
*   DARGCNT=1;                      /* SET 1 INSERT          @Z40LB40*/
         LA    @07,1                                               0665
         STH   @07,DARGCNT(,@14)                                   0665
*   DARGINS(1)=1;                   /* SET INSERT NO.        @Z40LB40*/
         STH   @07,DARGINS(,@14)                                   0666
*   DARGINL(1)=2;                   /* SET INSERT SIZE       @Z40LB40*/
         LA    @07,2                                               0667
         STH   @07,DARGINL(,@14)                                   0667
*   DARGDTM(1)=(SSIDPTR(S1))+2;     /* SET INSERT ADDR       @Z40LB40*/
         L     @06,@PC00003                                        0668
         L     @06,S1(,@06)                                        0668
         SLA   @06,2                                               0668
         L     @05,@PC00001+4                                      0668
         L     @01,FDTPTR+20(,@05)                                 0668
         AL    @01,@CF01753                                        0668
         AL    @07,SSIDPTR(@06,@01)                                0668
         ST    @07,DARGDTM(,@14)                                   0668
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* READ IN SUBTITLE @Z40LB40*/
         ST    @15,@AL00001                                        0669
         LA    @14,@CF00118                                        0669
         ST    @14,@AL00001+4                                      0669
         LA    @14,DDSTRU                                          0669
         ST    @14,@AL00001+8                                      0669
         MVI   @AL00001+8,X'80'                                    0669
         L     @15,GDTPRT(,@15)                                    0669
         LA    @01,@AL00001                                        0669
         BALR  @14,@15                                             0669
*   PCSTLC=1;                       /* ONE SUBTITLE          @Z40LB40*/
         MVC   PCSTLC(2),@CH00223                                  0670
*   PCSTLP=ADDR(STBUFFER);          /* ADDR OF SUBTITLE      @Z40LB40*/
         LA    @15,STBUFFER                                        0671
         ST    @15,PCSTLP                                          0671
*   CALL AMSTP042(GDTTBL,PRPTR,PCARG);/* SET SUBTITLE        @Z40LB40*/
*                                                                  0672
         L     @15,@PC00001                                        0672
         ST    @15,@AL00001                                        0672
         LA    @14,PRPTR                                           0672
         ST    @14,@AL00001+4                                      0672
         LA    @14,PCARG                                           0672
         ST    @14,@AL00001+8                                      0672
         L     @15,GDTESA(,@15)                                    0672
         LA    @01,@AL00001                                        0672
         BALR  @14,@15                                             0672
*   /*****************************************************************/
*   /*                                                               */
*   /* IF FORMAT SPECIFIED OR DEFAULTED TO OR MAINSECTOR     @Z40LB40*/
*   /* SPECIFIED THEN GETDATA MUST BE CALLED TO READ ALL     @Z40LB40*/
*   /* OF SA MAIN STORAGE PLUS PST FROM EXTENDED STORAGE.    @ZD00043*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0673
*   IF SFMTPTR(S1)^=NULLPTR×SSCTMCNT(S1)^=0 THEN                   0673
         SLR   @15,@15                                             0673
         L     @14,@PC00003                                        0673
         L     @14,S1(,@14)                                        0673
         SLA   @14,2                                               0673
         L     @07,@PC00001+4                                      0673
         L     @01,FDTPTR+24(,@07)                                 0673
         AL    @01,@CF01753                                        0673
         C     @15,SFMTPTR(@14,@01)                                0673
         BNE   @RT00673                                            0673
         L     @01,FDTPTR+28(,@07)                                 0673
         AL    @01,@CF01753                                        0673
         C     @15,SSCTMCNT(@14,@01)                               0673
         BE    @RF00673                                            0673
@RT00673 DS    0H                                                  0674
*     DO;                           /*                       @Z40LB40*/
*       CALL GETDATA(SAMA,SSIDPTR(S1)->SSIDVAL);/*           @Z40LB40*/
         LA    @15,@CC01348                                        0675
         ST    @15,@AL00001                                        0675
         L     @15,@PC00003                                        0675
         L     @15,S1(,@15)                                        0675
         SLA   @15,2                                               0675
         L     @14,@PC00001+4                                      0675
         L     @01,FDTPTR+20(,@14)                                 0675
         AL    @01,@CF01753                                        0675
         L     @01,SSIDPTR(@15,@01)                                0675
         ST    @01,@AL00001+4                                      0675
         LA    @01,@AL00001                                        0675
         BAL   @14,GETDATA                                         0675
*       RESPECIFY                                                  0676
*         RTNREG RSTD;                                             0676
*       TESTRC=RTNREG;                                             0677
         LR    TESTRC,RTNREG                                       0677
*       RESPECIFY                                                  0678
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC^=LASTCC00 THEN    /* WAS ALL DATA READ     @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0679
         BZ    @RF00679                                            0679
*         DO;                       /*                       @Z40LB40*/
*                                                                  0680
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE ERROR MESSAGE                           @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0681
*           PRINTAB=''B;            /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0681
*           DARGSMOD=DUMSGMOD;      /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0682
         MVC   DARGSMOD(3,@15),@CC01334                            0682
*           DARGSENT=IDC21104;      /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'05'                                 0683
*           DARGCNT=1;              /*                       @Z40LB40*/
         LA    @14,1                                               0684
         STH   @14,DARGCNT(,@15)                                   0684
*           DARGINS(1)=1;           /*                       @Z40LB40*/
         STH   @14,DARGINS(,@15)                                   0685
*           DARGINL(1)=2;           /*                       @Z40LB40*/
         LA    @14,2                                               0686
         STH   @14,DARGINL(,@15)                                   0686
*           DARGDTM(1)=(SSIDPTR(S1))+2;/*                    @Z40LB40*/
         L     @07,@PC00003                                        0687
         L     @07,S1(,@07)                                        0687
         SLA   @07,2                                               0687
         L     @06,@PC00001+4                                      0687
         L     @01,FDTPTR+20(,@06)                                 0687
         AL    @01,@CF01753                                        0687
         AL    @14,SSIDPTR(@07,@01)                                0687
         ST    @14,DARGDTM(,@15)                                   0687
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Z40LB40*/
         L     @15,@PC00001                                        0688
         ST    @15,@AL00001                                        0688
         LA    @14,@CF00118                                        0688
         ST    @14,@AL00001+4                                      0688
         LA    @14,DDSTRU                                          0688
         ST    @14,@AL00001+8                                      0688
         MVI   @AL00001+8,X'80'                                    0688
         L     @15,GDTPRT(,@15)                                    0688
         LA    @01,@AL00001                                        0688
         BALR  @14,@15                                             0688
*           SARC=LASTCC04;          /* SET RET.CODE          @Z40LB40*/
         MVC   SARC(2),@CH00044                                    0689
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       0691
*         GOTSAM=ON;                /* YES,INDICATE IT       @Z40LB40*/
         B     @RC00679                                            0691
@RF00679 OI    GOTSAM,B'00001000'                                  0691
*       IF GOTSAM=ON&SFMTPTR(S1)^=NULLPTR THEN                     0692
@RC00679 TM    GOTSAM,B'00001000'                                  0692
         BNO   @RF00692                                            0692
         L     @15,@PC00003                                        0692
         L     @15,S1(,@15)                                        0692
         SLA   @15,2                                               0692
         L     @14,@PC00001+4                                      0692
         L     @01,FDTPTR+24(,@14)                                 0692
         AL    @01,@CF01753                                        0692
         L     @15,SFMTPTR(@15,@01)                                0692
         LTR   @15,@15                                             0692
         BZ    @RF00692                                            0692
*         DO;                       /*                       @Z40LB40*/
*                                                                  0693
*           /*********************************************************/
*           /*                                                       */
*           /* FORMAT SPECIFIED OR DEFAULTED TO. CALL        @Z40LB40*/
*           /* FUNCTIONS PROCEDURES TO PRODUCE THE           @Z40LB40*/
*           /* VARIOUS PARTS OF THE FORMATTED DUMP           @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0694
*           CALL SAEC;              /* PRINT EC LEVEL        @ZD00050*/
         BAL   @14,SAEC                                            0694
*           CALL VAD;               /* PRINT VAD             @Z40LB40*/
         BAL   @14,VAD                                             0695
*           CALL VVIT;              /* PRINT VVIT            @Z40LB40*/
         BAL   @14,VVIT                                            0696
*           CALL PST;               /* PRINT PAGE STATUS     @Z40LB40*/
         BAL   @14,PST                                             0697
*           CALL LRU;               /* PRINT LRU VALUES      @Z40LB40*/
         BAL   @14,LRU                                             0698
*           CALL ZEROBDY;           /* PRINT ZERO BDY WDS    @Z40LB40*/
         BAL   @14,ZEROBDY                                         0699
*           CALL DCBS;              /* PRINT DCBS            @Z40LB40*/
         BAL   @14,DCBS                                            0700
*           CALL SAMSGQUE;          /* PRINT SA MSG QUE      @Z40LB40*/
         BAL   @14,SAMSGQUE                                        0701
*           CALL AUT;               /* PRINT AUT             @Z40LB40*/
         BAL   @14,AUT                                             0702
*           CALL LTR;               /* PRINT LTR             @Z40LB40*/
         BAL   @14,LTR                                             0703
*           CALL SASENSE;           /* PRINT SENSE DATA      @Z40LB40*/
         BAL   @14,SASENSE                                         0704
*           CALL SASTATUS;          /* PRINT STATUS INFO     @Z40LB40*/
         BAL   @14,SASTATUS                                        0705
*         END;                      /*                       @Z40LB40*/
*       IF GOTSAM=ON&SSCTMCNT(S1)^=0 THEN                          0707
@RF00692 TM    GOTSAM,B'00001000'                                  0707
         BNO   @RF00707                                            0707
         L     @15,@PC00003                                        0707
         L     @15,S1(,@15)                                        0707
         SLA   @15,2                                               0707
         L     @14,@PC00001+4                                      0707
         L     @01,FDTPTR+28(,@14)                                 0707
         AL    @01,@CF01753                                        0707
         L     @15,SSCTMCNT(@15,@01)                               0707
         LTR   @15,@15                                             0707
         BZ    @RF00707                                            0707
*         DO I2=1 TO SSCTMCNT(S1);  /*                       @Z40LB40*/
*                                                                  0708
         LA    @15,1                                               0708
         B     @DE00708                                            0708
@DL00708 DS    0H                                                  0709
*           /*********************************************************/
*           /*                                                       */
*           /* SA MAIN STORAGE READ OK AND MAINSECTOR ENTERED        */
*           /*                                               @Z40LB40*/
*           /* CALL PRNTSECT FOR EACH SECTOR SPECIFIED EITHER        */
*           /*                                               @Z40LB40*/
*           /* SINGLY OR AS PART OF A RANGE.                 @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0709
*           LOSECT=SMLOPTR(S1,I2)->SMLOVAL;/* SAVE LOW VALUE @Z40LB40*/
         L     @14,@PC00003                                        0709
         L     @14,S1(,@14)                                        0709
         SLA   @14,4                                               0709
         ALR   @14,@15                                             0709
         SLA   @14,2                                               0709
         L     @15,@PC00001+4                                      0709
         L     @01,FDTPTR+76(,@15)                                 0709
         AL    @01,@CF01757                                        0709
         L     @01,SMLOPTR(@14,@01)                                0709
         L     @07,SMLOVAL(,@01)                                   0709
         ST    @07,LOSECT                                          0709
*           IF SMHIPTR(S1,I2)=NULLPTR THEN/* IF NOT RANGE    @Z40LB40*/
         L     @01,FDTPTR+80(,@15)                                 0710
         AL    @01,@CF01757                                        0710
         L     @06,SMHIPTR(@14,@01)                                0710
         LTR   @06,@06                                             0710
         BNZ   @RF00710                                            0710
*             HISECT=LOSECT;        /* MAKE VALUES SAME      @Z40LB40*/
         ST    @07,HISECT                                          0711
*           ELSE                                                   0712
*             HISECT=SMHIPTR(S1,I2)->SMHIVAL;/* SAVE HI VALUE@Z40LB40*/
         B     @RC00710                                            0712
@RF00710 L     @15,@PC00003                                        0712
         L     @15,S1(,@15)                                        0712
         SLA   @15,4                                               0712
         AL    @15,I2                                              0712
         SLA   @15,2                                               0712
         L     @14,@PC00001+4                                      0712
         L     @01,FDTPTR+80(,@14)                                 0712
         AL    @01,@CF01757                                        0712
         L     @01,SMHIPTR(@15,@01)                                0712
         L     @15,SMHIVAL(,@01)                                   0712
         ST    @15,HISECT                                          0712
*           IF LOSECT>HISECT THEN                                  0713
@RC00710 L     @15,LOSECT                                          0713
         C     @15,HISECT                                          0713
         BNH   @RF00713                                            0713
*             DO;                   /*                       @Z40LB40*/
*                                                                  0714
*               /*****************************************************/
*               /*                                                   */
*               /* INVALID RANGE SPECIFIED. ISSUE ERROR      @Z40LB40*/
*               /* MESSAGE AND SET RETURN CODE.              @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0715
*               PRINTAB=''B;        /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0715
*               DARGSMOD=DUMSGMOD;  /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0716
         MVC   DARGSMOD(3,@15),@CC01334                            0716
*               DARGSENT=IDC21101;  /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'02'                                 0717
*               DARGCNT=2;          /*                       @Z40LB40*/
         LA    @14,2                                               0718
         STH   @14,DARGCNT(,@15)                                   0718
*               DARGINS(1)=1;       /*                       @Z40LB40*/
         LA    @07,1                                               0719
         STH   @07,DARGINS(,@15)                                   0719
*               DARGINL(1)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL(,@15)                                   0720
*               DARGDTM(1)=ADDR(LOSECT)+3;/*                 @Z40LB40*/
         LA    @06,3                                               0721
         LA    @05,LOSECT                                          0721
         ALR   @05,@06                                             0721
         ST    @05,DARGDTM(,@15)                                   0721
*               DARGINS(2)=2;       /*                       @Z40LB40*/
         STH   @14,DARGINS+8(,@15)                                 0722
*               DARGINL(2)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL+8(,@15)                                 0723
*               DARGDTM(2)=ADDR(HISECT)+3;/*                 @Z40LB40*/
         LA    @14,HISECT                                          0724
         ALR   @14,@06                                             0724
         ST    @14,DARGDTM+8(,@15)                                 0724
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*      @Z40LB40*/
         L     @15,@PC00001                                        0725
         ST    @15,@AL00001                                        0725
         LA    @14,@CF00118                                        0725
         ST    @14,@AL00001+4                                      0725
         LA    @14,DDSTRU                                          0725
         ST    @14,@AL00001+8                                      0725
         MVI   @AL00001+8,X'80'                                    0725
         L     @15,GDTPRT(,@15)                                    0725
         LA    @01,@AL00001                                        0725
         BALR  @14,@15                                             0725
*               SARC=LASTCC04;      /* SET RET.CODE          @Z40LB40*/
         MVC   SARC(2),@CH00044                                    0726
*             END;                  /*                       @Z40LB40*/
*           ELSE                                                   0728
*             DO;                   /*                       @Z40LB40*/
*                                                                  0728
         B     @RC00713                                            0728
@RF00713 DS    0H                                                  0729
*               /*****************************************************/
*               /*                                                   */
*               /* RANGE OK,SET PRINT HEADER AND CALL        @Z40LB40*/
*               /* PRNTSECT TO PRINT SECTOR(S)               @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0729
*               HISECT=HISECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,HISECT                                          0729
         SLA   @15,8                                               0729
         ST    @15,HISECT                                          0729
*               LOSECT=LOSECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,LOSECT                                          0730
         SLA   @15,8                                               0730
         ST    @15,LOSECT                                          0730
*               DO J2=LOSECT TO HISECT BY SECTSIZE;/*        @Z40LB40*/
*                                                                  0731
         ST    @15,J2                                              0731
         B     @DE00731                                            0731
@DL00731 DS    0H                                                  0732
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE UPRINT FOR MAIN SECTOR HEADER     @Z40LB40*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0732
*                 PRINTAB=''B;      /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0732
*                 DARGSMOD=DUMSGMOD;/*                       @Z40LB40*/
         L     @02,DDSTRU                                          0733
         MVC   DARGSMOD(3,@02),@CC01334                            0733
*                 DARGSENT=HMAINSCT;/*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'25'                                 0734
*                 CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HDR  0735
*                                                            @Z40LB40*/
         L     @02,@PC00001                                        0735
         ST    @02,@AL00001                                        0735
         LA    @15,PRPTR                                           0735
         ST    @15,@AL00001+4                                      0735
         LA    @15,DDSTRU                                          0735
         ST    @15,@AL00001+8                                      0735
         MVI   @AL00001+8,X'80'                                    0735
         L     @15,GDTPRT(,@02)                                    0735
         LA    @01,@AL00001                                        0735
         BALR  @14,@15                                             0735
*                 SECTADDR=J2;      /* SET SECTOR ADDRESS    @Z40LB40*/
         L     SECTADDR,J2                                         0736
*                 NUMBYTES=SECTSIZE;/* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                0737
*                 CALL PRNTSECT;    /*                       @Z40LB40*/
         BAL   @14,PRNTSECT                                        0738
*               END;                /*                       @Z40LB40*/
         LA    @15,256                                             0739
         AL    @15,J2                                              0739
         ST    @15,J2                                              0739
@DE00731 C     @15,HISECT                                          0739
         BNH   @DL00731                                            0739
*             END;                  /*                       @Z40LB40*/
*         END;                      /*                       @Z40LB40*/
@RC00713 LA    @15,1                                               0741
         AL    @15,I2                                              0741
@DE00708 ST    @15,I2                                              0741
         L     @14,@PC00003                                        0741
         L     @14,S1(,@14)                                        0741
         SLA   @14,2                                               0741
         L     @07,@PC00001+4                                      0741
         L     @01,FDTPTR+28(,@07)                                 0741
         AL    @01,@CF01753                                        0741
         C     @15,SSCTMCNT(@14,@01)                               0741
         BNH   @DL00708                                            0741
*     END;                          /*                       @Z40LB40*/
*                                                                  0742
@RF00707 DS    0H                                                  0743
*   /*****************************************************************/
*   /*                                                               */
*   /* IF EXTENDEDSECTOR SPECIFIED THEN GETDATA MUST BE      @Z40LB40*/
*   /* CALLED TO READ ALL OF VALID SA EXTENDED STORAGE       @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0743
*   IF SSCTECNT(S1)^=0 THEN                                        0743
@RF00673 L     @15,@PC00003                                        0743
         L     @15,S1(,@15)                                        0743
         SLA   @15,2                                               0743
         L     @14,@PC00001+4                                      0743
         L     @01,FDTPTR+32(,@14)                                 0743
         AL    @01,@CF01753                                        0743
         L     @07,SSCTECNT(@15,@01)                               0743
         LTR   @07,@07                                             0743
         BZ    @RF00743                                            0743
*     DO;                           /*                       @Z40LB40*/
*       CALL GETDATA(SAEX,SSIDPTR(S1)->SSIDVAL);/*           @Z40LB40*/
         LA    @07,@CC01350                                        0745
         ST    @07,@AL00001                                        0745
         L     @01,FDTPTR+20(,@14)                                 0745
         AL    @01,@CF01753                                        0745
         L     @01,SSIDPTR(@15,@01)                                0745
         ST    @01,@AL00001+4                                      0745
         LA    @01,@AL00001                                        0745
         BAL   @14,GETDATA                                         0745
*       RESPECIFY                                                  0746
*         RTNREG RSTD;                                             0746
*       TESTRC=RTNREG;                                             0747
         LR    TESTRC,RTNREG                                       0747
*       RESPECIFY                                                  0748
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC^=LASTCC00 THEN    /* WAS ALL DATA READ     @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0749
         BZ    @RF00749                                            0749
*         DO;                       /*                       @Z40LB40*/
*                                                                  0750
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE ERROR MESSAGE                           @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0751
*           PRINTAB=''B;            /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0751
*           DARGSMOD=DUMSGMOD;      /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0752
         MVC   DARGSMOD(3,@15),@CC01334                            0752
*           DARGSENT=IDC21105;      /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'06'                                 0753
*           DARGCNT=1;              /*                       @Z40LB40*/
         LA    @14,1                                               0754
         STH   @14,DARGCNT(,@15)                                   0754
*           DARGINS(1)=1;           /*                       @Z40LB40*/
         STH   @14,DARGINS(,@15)                                   0755
*           DARGINL(1)=2;           /*                       @Z40LB40*/
         LA    @14,2                                               0756
         STH   @14,DARGINL(,@15)                                   0756
*           DARGDTM(1)=(SSIDPTR(S1))+2;/*                    @Z40LB40*/
         L     @07,@PC00003                                        0757
         L     @07,S1(,@07)                                        0757
         SLA   @07,2                                               0757
         L     @06,@PC00001+4                                      0757
         L     @01,FDTPTR+20(,@06)                                 0757
         AL    @01,@CF01753                                        0757
         AL    @14,SSIDPTR(@07,@01)                                0757
         ST    @14,DARGDTM(,@15)                                   0757
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Z40LB40*/
         L     @15,@PC00001                                        0758
         ST    @15,@AL00001                                        0758
         LA    @14,@CF00118                                        0758
         ST    @14,@AL00001+4                                      0758
         LA    @14,DDSTRU                                          0758
         ST    @14,@AL00001+8                                      0758
         MVI   @AL00001+8,X'80'                                    0758
         L     @15,GDTPRT(,@15)                                    0758
         LA    @01,@AL00001                                        0758
         BALR  @14,@15                                             0758
*           SARC=LASTCC04;          /* SET RET.CODE          @Z40LB40*/
         MVC   SARC(2),@CH00044                                    0759
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       0761
*         GOTSAE=ON;                /* YES,INDICATE IT       @Z40LB40*/
         B     @RC00749                                            0761
@RF00749 OI    GOTSAE,B'00000100'                                  0761
*       IF GOTSAE=ON THEN                                          0762
@RC00749 TM    GOTSAE,B'00000100'                                  0762
         BNO   @RF00762                                            0762
*         DO I2=1 TO SSCTECNT(S1);  /*                       @Z40LB40*/
*                                                                  0763
         LA    @15,1                                               0763
         B     @DE00763                                            0763
@DL00763 DS    0H                                                  0764
*           /*********************************************************/
*           /*                                                       */
*           /* SA EXTENDED STORAGE READ OK. CALL PRNTSECT    @Z40LB40*/
*           /* FOR EACH VALID SECTOR SPECIFIED EITHER SINGLY @ZD00050*/
*           /* OR AS PART OF A RANGE.                        @Z40LB40*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0764
*           LOSECT=SELOPTR(S1,I2)->SELOVAL;/* SAVE LOW VALUE @Z40LB40*/
         L     @14,@PC00003                                        0764
         L     @14,S1(,@14)                                        0764
         SLA   @14,4                                               0764
         ALR   @14,@15                                             0764
         SLA   @14,2                                               0764
         L     @15,@PC00001+4                                      0764
         L     @01,FDTPTR+84(,@15)                                 0764
         AL    @01,@CF01757                                        0764
         L     @01,SELOPTR(@14,@01)                                0764
         L     @07,SELOVAL(,@01)                                   0764
         ST    @07,LOSECT                                          0764
*           IF SEHIPTR(S1,I2)=NULLPTR THEN/* IF NOT RANGE    @Z40LB40*/
         L     @01,FDTPTR+88(,@15)                                 0765
         AL    @01,@CF01757                                        0765
         L     @06,SEHIPTR(@14,@01)                                0765
         LTR   @06,@06                                             0765
         BNZ   @RF00765                                            0765
*             HISECT=LOSECT;        /* MAKE VALUES SAME      @Z40LB40*/
         ST    @07,HISECT                                          0766
*           ELSE                                                   0767
*             HISECT=SEHIPTR(S1,I2)->SEHIVAL;/* SAVE HI VALUE@Z40LB40*/
         B     @RC00765                                            0767
@RF00765 L     @15,@PC00003                                        0767
         L     @15,S1(,@15)                                        0767
         SLA   @15,4                                               0767
         AL    @15,I2                                              0767
         SLA   @15,2                                               0767
         L     @14,@PC00001+4                                      0767
         L     @01,FDTPTR+88(,@14)                                 0767
         AL    @01,@CF01757                                        0767
         L     @01,SEHIPTR(@15,@01)                                0767
         L     @15,SEHIVAL(,@01)                                   0767
         ST    @15,HISECT                                          0767
*           IF LOSECT>HISECT THEN                                  0768
@RC00765 L     @15,LOSECT                                          0768
         C     @15,HISECT                                          0768
         BNH   @RF00768                                            0768
*             DO;                   /*                       @Z40LB40*/
*                                                                  0769
*               /*****************************************************/
*               /*                                                   */
*               /* INVALID RANGE SPECIFIED. ISSUE ERROR      @Z40LB40*/
*               /* MESSAGE AND SET RETURN CODE.              @Z40LB40*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0770
*               PRINTAB=''B;        /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0770
*               DARGSMOD=DUMSGMOD;  /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0771
         MVC   DARGSMOD(3,@15),@CC01334                            0771
*               DARGSENT=IDC21101;  /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'02'                                 0772
*               DARGCNT=2;          /*                       @Z40LB40*/
         LA    @14,2                                               0773
         STH   @14,DARGCNT(,@15)                                   0773
*               DARGINS(1)=1;       /*                       @Z40LB40*/
         LA    @07,1                                               0774
         STH   @07,DARGINS(,@15)                                   0774
*               DARGINL(1)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL(,@15)                                   0775
*               DARGDTM(1)=ADDR(LOSECT)+3;/*                 @Z40LB40*/
         LA    @06,3                                               0776
         LA    @05,LOSECT                                          0776
         ALR   @05,@06                                             0776
         ST    @05,DARGDTM(,@15)                                   0776
*               DARGINS(2)=2;       /*                       @Z40LB40*/
         STH   @14,DARGINS+8(,@15)                                 0777
*               DARGINL(2)=1;       /*                       @Z40LB40*/
         STH   @07,DARGINL+8(,@15)                                 0778
*               DARGDTM(2)=ADDR(HISECT)+3;/*                 @Z40LB40*/
         LA    @14,HISECT                                          0779
         ALR   @14,@06                                             0779
         ST    @14,DARGDTM+8(,@15)                                 0779
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*      @Z40LB40*/
         L     @15,@PC00001                                        0780
         ST    @15,@AL00001                                        0780
         LA    @14,@CF00118                                        0780
         ST    @14,@AL00001+4                                      0780
         LA    @14,DDSTRU                                          0780
         ST    @14,@AL00001+8                                      0780
         MVI   @AL00001+8,X'80'                                    0780
         L     @15,GDTPRT(,@15)                                    0780
         LA    @01,@AL00001                                        0780
         BALR  @14,@15                                             0780
*               SARC=LASTCC04;      /* SET RET.CODE          @Z40LB40*/
         MVC   SARC(2),@CH00044                                    0781
*             END;                  /*                       @Z40LB40*/
*           ELSE                                                   0783
*             DO;                   /*                       @Z40LB40*/
*                                                                  0783
         B     @RC00768                                            0783
@RF00768 DS    0H                                                  0784
*               /*****************************************************/
*               /*                                                   */
*               /* RANGE OK, SET PRINT HEADER AND CALL       @Z40LB40*/
*               /* PRNTSECT TO PRINT VALID SECTOR(S).        @ZD00050*/
*               /* FOR INVALID SECTORS, SET ERROR FLAG AND   @ZD00050*/
*               /* SKIP TO NEXT SECTOR.                      @ZD00050*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0784
*               HISECT=HISECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,HISECT                                          0784
         SLA   @15,8                                               0784
         ST    @15,HISECT                                          0784
*               LOSECT=LOSECT*SECTSIZE;/* GEN.SECTOR ADDR.   @Z40LB40*/
         L     @15,LOSECT                                          0785
         SLA   @15,8                                               0785
         ST    @15,LOSECT                                          0785
*               DO J2=LOSECT TO HISECT BY SECTSIZE;/*        @Z40LB40*/
         ST    @15,J2                                              0786
         B     @DE00786                                            0786
@DL00786 DS    0H                                                  0787
*                 K2=(J2/4096)+1;   /* CHECK FOR VALID SECT  @ZD00050*/
         LR    @00,@15                                             0787
         SRDA  @00,32                                              0787
         D     @00,@CF01493                                        0787
         AL    @01,@CF00223                                        0787
         LR    K2,@01                                              0787
*                 IF EXARRAY(K2)=VALID THEN                        0788
         LA    @03,EXARRAY-1(K2)                                   0788
         CLI   0(@03),C'1'                                         0788
         BNE   @RF00788                                            0788
*                   DO;             /*                       @ZD00050*/
*                                                                  0789
*                     /***********************************************/
*                     /*                                             */
*                     /* ISSUE UPRINT FOR EXTENDED SECTOR HEAD       */
*                     /*                                     @ZD00050*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0790
*                     PRINTAB=''B;  /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 0790
*                     DARGSMOD=DUMSGMOD;/*                   @ZD00050*/
         L     @02,DDSTRU                                          0791
         MVC   DARGSMOD(3,@02),@CC01334                            0791
*                     DARGSENT=HEXTSCT;/*                    @ZD00050*/
         MVI   DARGSENT(@02),X'26'                                 0792
*                     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HD
*                                                            @ZD00050*/
         L     @02,@PC00001                                        0793
         ST    @02,@AL00001                                        0793
         LA    @15,PRPTR                                           0793
         ST    @15,@AL00001+4                                      0793
         LA    @15,DDSTRU                                          0793
         ST    @15,@AL00001+8                                      0793
         MVI   @AL00001+8,X'80'                                    0793
         L     @15,GDTPRT(,@02)                                    0793
         LA    @01,@AL00001                                        0793
         BALR  @14,@15                                             0793
*                     SECTADDR=J2;  /* SET SECTOR ADDRESS    @ZD00050*/
         L     SECTADDR,J2                                         0794
*                     NUMBYTES=SECTSIZE;/* SET NO. OF BYTES  @ZD00050*/
         MVC   NUMBYTES(4),@CF01321                                0795
*                     CALL PRNTSECT;/*                       @ZD00050*/
         BAL   @14,PRNTSECT                                        0796
*                   END;            /*                       @ZD00050*/
*                 ELSE                                             0798
*                   EXERR=ON;       /* SET INVALID SECTOR    @ZD00050*/
         B     @RC00788                                            0798
@RF00788 OI    EXERR,B'00000001'                                   0798
*               END;                /*                       @Z40LB40*/
@RC00788 LA    @15,256                                             0799
         AL    @15,J2                                              0799
         ST    @15,J2                                              0799
@DE00786 C     @15,HISECT                                          0799
         BNH   @DL00786                                            0799
*             END;                  /*                       @Z40LB40*/
*         END;                      /*                       @Z40LB40*/
@RC00768 LA    @15,1                                               0801
         AL    @15,I2                                              0801
@DE00763 ST    @15,I2                                              0801
         L     @14,@PC00003                                        0801
         L     @14,S1(,@14)                                        0801
         SLA   @14,2                                               0801
         L     @07,@PC00001+4                                      0801
         L     @01,FDTPTR+32(,@07)                                 0801
         AL    @01,@CF01753                                        0801
         C     @15,SSCTECNT(@14,@01)                               0801
         BNH   @DL00763                                            0801
*     END;                          /*                       @Z40LB40*/
*                                                                  0802
@RF00762 DS    0H                                                  0803
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR INVALID SECTOR SPECIFIED. IF SO, PRINT      @ZD00050*/
*   /* ERROR MESSAGE AND SET RETURN CODE TO 4.               @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0803
*   IF EXERR=ON THEN                                               0803
@RF00743 TM    EXERR,B'00000001'                                   0803
         BNO   @RF00803                                            0803
*     DO;                           /*                       @ZD00050*/
*       PRINTAB=''B;                /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 0805
*       DARGSMOD=DUMSGMOD;          /*                       @ZD00050*/
         L     @15,DDSTRU                                          0806
         MVC   DARGSMOD(3,@15),@CC01334                            0806
*       DARGSENT=IDC21109;          /*                       @ZD00050*/
         MVI   DARGSENT(@15),X'12'                                 0807
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @ZD00050*/
         L     @15,@PC00001                                        0808
         ST    @15,@AL00001                                        0808
         LA    @14,@CF00118                                        0808
         ST    @14,@AL00001+4                                      0808
         LA    @14,DDSTRU                                          0808
         ST    @14,@AL00001+8                                      0808
         MVI   @AL00001+8,X'80'                                    0808
         L     @15,GDTPRT(,@15)                                    0808
         LA    @01,@AL00001                                        0808
         BALR  @14,@15                                             0808
*       SARC=LASTCC04;              /*                       @ZD00050*/
         MVC   SARC(2),@CH00044                                    0809
*     END;                          /*                       @ZD00050*/
*                                                                  0810
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET HEADLINES                                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0811
*   CALL AMSTP044(GDTTBL,PRPTR);    /*                       @Z40LB40*/
@RF00803 L     @15,@PC00001                                        0811
         ST    @15,@AL00001                                        0811
         LA    @14,PRPTR                                           0811
         ST    @14,@AL00001+4                                      0811
         MVI   @AL00001+4,X'80'                                    0811
         L     @15,GDTRES(,@15)                                    0811
         LA    @01,@AL00001                                        0811
         BALR  @14,@15                                             0811
*   RFY                                                            0812
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR1;                 /* SET RETURN POINT      @Z40LB40*/
         L     REG14,RETADDR1                                      0813
*   RETURN CODE(SARC);              /* RETURN TO CALLER      @Z40LB40*/
         LH    @15,SARC                                            0814
@EL00003 DS    0H                                                  0814
@EF00003 DS    0H                                                  0814
@ER00003 BR    @14                                                 0814
*   RFY                                                            0815
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END DUMPSA;                     /*                       @Z40LB40*/
*                                                                  0817
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - DUMPTAB (LEVEL 2)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE READS AND PRODUCES AN         @Z40LB40*/
*   /* UNFORMATTED DUMP OF MSC TABLES RECORD OR A RANGE      @Z40LB40*/
*   /* OF TABLES RECORDS. THE RECORD(S) IS DEFINED BY        @Z40LB40*/
*   /* THE CALLER IN THE FORM OF A CYLINDER, HEAD, AND       @Z40LB40*/
*   /* RECORD ADDRESS. THE ADDRESS IS THE VIRTUAL CHR        @Z40LB40*/
*   /* OF THE RECORD OF THE MSC TABLES.                      @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - FUNCTION DESCRIPTION TABLE WHICH CONTAINS     @Z40LB40*/
*   /* THE RECORD ADDRESS(S).                                @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - RETURN CODE                                  @Z40LB40*/
*   /* 0 = EVERYTHING OK                                     @Z40LB40*/
*   /* 4 = USER ENTERED DATA INCORRECTLY BUT REMAINDER       @Z40LB40*/
*   /* OF THE FUNCTION WAS ATTEMPTED, OR GETDATA             @Z40LB40*/
*   /* FAILED WHEN READING MSC AN TABLES RECORD.             @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0817
*DUMPTAB:                                                          0817
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
DUMPTAB  DS    0H                                                  0818
*   RFY                                                            0818
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR1=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         ST    REG14,RETADDR1                                      0819
*   RFY                                                            0820
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             0821
         L     @15,@PC00001                                        0821
         L     @14,GDTTR2(,@15)                                    0821
         MVC   @TS00001(95),NEWERID2(@14)                          0821
         MVC   OLDERID2(95,@14),@TS00001                           0821
*   NEWID2='DUBC';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@14),@CC01497                              0822
*   TABRC=LASTCC00;                 /* INIT RETURN CODE      @Z40LB40*/
*                                                                  0823
         SLR   @14,@14                                             0823
         STH   @14,TABRC                                           0823
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UESTA MACRO FOR PRINT HEADERS                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0824
*   PCARG=''B;                      /* CLEAR ARG LIST        @Z40LB40*/
         XC    PCARG(33),PCARG                                     0824
*   STBUFFER=' ';                   /* BLANK BUFFER          @Z40LB40*/
         MVI   STBUFFER+1,C' '                                     0825
         MVC   STBUFFER+2(119),STBUFFER+1                          0825
         MVI   STBUFFER,C' '                                       0825
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0826
*   DARGRETP=ADDR(STBUFFER);        /* ADDR OF RETURN        @Z40LB40*/
         L     @14,DDSTRU                                          0827
         LA    @07,STBUFFER                                        0827
         ST    @07,DARGRETP(,@14)                                  0827
*   DARGRETL=LENGTH(STBUFFER);      /* LENGTH OF RETURN      @Z40LB40*/
         MVC   DARGRETL(2,@14),@CH01251                            0828
*   DARGSMOD=DUMSGMOD;              /* SET TEXT ID           @Z40LB40*/
         MVC   DARGSMOD(3,@14),@CC01334                            0829
*   DARGSENT=TTABD;                 /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@14),X'0C'                                 0830
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* READ IN SUBTITLE @Z40LB40*/
         ST    @15,@AL00001                                        0831
         LA    @14,@CF00118                                        0831
         ST    @14,@AL00001+4                                      0831
         LA    @14,DDSTRU                                          0831
         ST    @14,@AL00001+8                                      0831
         MVI   @AL00001+8,X'80'                                    0831
         L     @15,GDTPRT(,@15)                                    0831
         LA    @01,@AL00001                                        0831
         BALR  @14,@15                                             0831
*   PCSTLC=1;                       /* ONE SUBTITLE          @Z40LB40*/
         MVC   PCSTLC(2),@CH00223                                  0832
*   PCSTLP=ADDR(STBUFFER);          /* ADDR OF SUBTITLE      @Z40LB40*/
         LA    @15,STBUFFER                                        0833
         ST    @15,PCSTLP                                          0833
*   CALL AMSTP042(GDTTBL,PRPTR,PCARG);/* SET SUBTITLE        @Z40LB40*/
*                                                                  0834
         L     @15,@PC00001                                        0834
         ST    @15,@AL00001                                        0834
         LA    @14,PRPTR                                           0834
         ST    @14,@AL00001+4                                      0834
         LA    @14,PCARG                                           0834
         ST    @14,@AL00001+8                                      0834
         L     @15,GDTESA(,@15)                                    0834
         LA    @01,@AL00001                                        0834
         BALR  @14,@15                                             0834
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH ALL CHRS ENTERED. IF A CHR IS INVALID    @Z40LB40*/
*   /* IT WILL BE BYPASSED WITH AN ERROR MESSAGE AND         @Z40LB40*/
*   /* THE NEXT ONE TRIED.                                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0835
*   DO I2=1 TO TBLCNT;              /* LOOP THRU SUBLIST     @Z40LB40*/
         LA    @15,1                                               0835
         B     @DE00835                                            0835
@DL00835 DS    0H                                                  0836
*     CHRERR=OFF;                   /* INIT ERROR SWITCH     @Z40LB40*/
         NI    CHRERR,B'11111101'                                  0836
*     LOCHRHLD=LOCHRPTR(I2)->LOCHRVAL;/* SAVE START CHR      @Z40LB40*/
         SLA   @15,2                                               0837
         L     @14,@PC00001+4                                      0837
         L     @01,FDTPTR+40(,@14)                                 0837
         AL    @01,@CF01753                                        0837
         L     @01,LOCHRPTR(@15,@01)                               0837
         L     @15,LOCHRVAL(,@01)                                  0837
         ST    @15,LOCHRHLD                                        0837
*     IF LOCC<MINCC×LOCC>MAXCC×LOHH>MAXHH×LORR<MINRR×LORR>MAXRR THEN
         CLI   LOCC,7                                              0838
         BL    @RT00838                                            0838
         CLI   LOCC,39                                             0838
         BH    @RT00838                                            0838
         CLI   LOHH,18                                             0838
         BH    @RT00838                                            0838
         CLI   LORR,1                                              0838
         BL    @RT00838                                            0838
         CLI   LORR,32                                             0838
         BNH   @RF00838                                            0838
@RT00838 DS    0H                                                  0839
*       DO;                         /*                       @Z40LB40*/
*                                                                  0839
*         /***********************************************************/
*         /*                                                         */
*         /* INVALID LOW CHR VALUE. ISSUE ERROR MESSAGE AND  @Z40LB40*/
*         /* SET RETURN CODE. SET SWITCH TO BYPASS CHRS.     @Z40LB40*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0840
*         PRINTAB=''B;              /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0840
*         DARGSMOD=DUMSGMOD;        /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0841
         MVC   DARGSMOD(3,@15),@CC01334                            0841
*         DARGSENT=IDC21106;        /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'07'                                 0842
*         DARGCNT=1;                /*                       @Z40LB40*/
         LA    @14,1                                               0843
         STH   @14,DARGCNT(,@15)                                   0843
*         DARGINS(1)=1;             /*                       @Z40LB40*/
         STH   @14,DARGINS(,@15)                                   0844
*         DARGINL(1)=3;             /*                       @Z40LB40*/
         MVC   DARGINL(2,@15),@CH00166                             0845
*         DARGDTM(1)=ADDR(LOCHRHLD)+1;/*                     @Z40LB40*/
         LA    @07,LOCHRHLD                                        0846
         ALR   @07,@14                                             0846
         ST    @07,DARGDTM(,@15)                                   0846
*         CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*            @Z40LB40*/
         L     @15,@PC00001                                        0847
         ST    @15,@AL00001                                        0847
         LA    @14,@CF00118                                        0847
         ST    @14,@AL00001+4                                      0847
         LA    @14,DDSTRU                                          0847
         ST    @14,@AL00001+8                                      0847
         MVI   @AL00001+8,X'80'                                    0847
         L     @15,GDTPRT(,@15)                                    0847
         LA    @01,@AL00001                                        0847
         BALR  @14,@15                                             0847
*         TABRC=LASTCC04;           /* SET RETURN CODE       @Z40LB40*/
         MVC   TABRC(2),@CH00044                                   0848
*         CHRERR=ON;                /* SET ERROR SWITCH      @Z40LB40*/
         OI    CHRERR,B'00000010'                                  0849
*       END;                        /*                       @Z40LB40*/
*     IF CHRERR=OFF THEN                                           0851
@RF00838 TM    CHRERR,B'00000010'                                  0851
         BNZ   @RF00851                                            0851
*       DO;                         /* NO ERROR, CONTINUE    @Z40LB40*/
*         IF HICHRPTR(I2)=NULLPTR THEN/* IF NO END CHR       @Z40LB40*/
         L     @15,I2                                              0853
         SLA   @15,2                                               0853
         L     @14,@PC00001+4                                      0853
         L     @01,FDTPTR+44(,@14)                                 0853
         AL    @01,@CF01753                                        0853
         L     @15,HICHRPTR(@15,@01)                               0853
         LTR   @15,@15                                             0853
         BNZ   @RF00853                                            0853
*           HICHRHLD=LOCHRHLD;      /* MAKE LO AND HI SAME   @Z40LB40*/
         L     @15,LOCHRHLD                                        0854
         ST    @15,HICHRHLD                                        0854
*         ELSE                                                     0855
*           HICHRHLD=HICHRPTR(I2)->HICHRVAL;/* MAKE SAME     @Z40LB40*/
         B     @RC00853                                            0855
@RF00853 L     @15,I2                                              0855
         SLA   @15,2                                               0855
         L     @14,@PC00001+4                                      0855
         L     @01,FDTPTR+44(,@14)                                 0855
         AL    @01,@CF01753                                        0855
         L     @01,HICHRPTR(@15,@01)                               0855
         L     @15,HICHRVAL(,@01)                                  0855
         ST    @15,HICHRHLD                                        0855
*         IF HICC<MINCC×HICC>MAXCC×HIHH>MAXHH×HIRR<MINRR×HIRR>MAXRR
*           THEN                                                   0856
@RC00853 CLI   HICC,7                                              0856
         BL    @RT00856                                            0856
         CLI   HICC,39                                             0856
         BH    @RT00856                                            0856
         CLI   HIHH,18                                             0856
         BH    @RT00856                                            0856
         CLI   HIRR,1                                              0856
         BL    @RT00856                                            0856
         CLI   HIRR,32                                             0856
         BNH   @RF00856                                            0856
@RT00856 DS    0H                                                  0857
*           DO;                     /*                       @Z40LB40*/
*                                                                  0857
*             /*******************************************************/
*             /*                                                     */
*             /* INVALID HIGH CHR VALUE. ISSUE ERROR         @Z40LB40*/
*             /* MESSAGE AND SET RETURN CODE. SET SWITCH     @Z40LB40*/
*             /* TO BYPASS CHRS.                             @Z40LB40*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0858
*             PRINTAB=''B;          /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0858
*             DARGSMOD=DUMSGMOD;    /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0859
         MVC   DARGSMOD(3,@15),@CC01334                            0859
*             DARGSENT=IDC21106;    /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'07'                                 0860
*             DARGCNT=1;            /*                       @Z40LB40*/
         LA    @14,1                                               0861
         STH   @14,DARGCNT(,@15)                                   0861
*             DARGINS(1)=1;         /*                       @Z40LB40*/
         STH   @14,DARGINS(,@15)                                   0862
*             DARGINL(1)=3;         /*                       @Z40LB40*/
         MVC   DARGINL(2,@15),@CH00166                             0863
*             DARGDTM(1)=ADDR(HICHRHLD)+1;/*                 @Z40LB40*/
         LA    @07,HICHRHLD                                        0864
         ALR   @07,@14                                             0864
         ST    @07,DARGDTM(,@15)                                   0864
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @Z40LB40*/
         L     @15,@PC00001                                        0865
         ST    @15,@AL00001                                        0865
         LA    @14,@CF00118                                        0865
         ST    @14,@AL00001+4                                      0865
         LA    @14,DDSTRU                                          0865
         ST    @14,@AL00001+8                                      0865
         MVI   @AL00001+8,X'80'                                    0865
         L     @15,GDTPRT(,@15)                                    0865
         LA    @01,@AL00001                                        0865
         BALR  @14,@15                                             0865
*             TABRC=LASTCC04;       /* SET RETURN CODE       @Z40LB40*/
         MVC   TABRC(2),@CH00044                                   0866
*             CHRERR=ON;            /* SET ERROR SWITCH      @Z40LB40*/
         OI    CHRERR,B'00000010'                                  0867
*           END;                    /*                       @Z40LB40*/
*       END;                        /*                       @Z40LB40*/
@RF00856 DS    0H                                                  0870
*     IF CHRERR=OFF THEN                                           0870
@RF00851 TM    CHRERR,B'00000010'                                  0870
         BNZ   @RF00870                                            0870
*       DO;                         /* NO ERROR,CONTINUE     @Z40LB40*/
*         IF LOCHRHLD>HICHRHLD THEN                                0872
         L     @15,LOCHRHLD                                        0872
         C     @15,HICHRHLD                                        0872
         BNH   @RF00872                                            0872
*           DO;                     /*                       @Z40LB40*/
*                                                                  0873
*             /*******************************************************/
*             /*                                                     */
*             /* START OF RANGE HIGHER THAN END OF RANGE.    @Z40LB40*/
*             /* ISSUE ERROR MESSAGE,SET RETURN CODE,SET     @Z40LB40*/
*             /* SWITCH TO BYPASS CHRS.                      @Z40LB40*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0874
*             PRINTAB=''B;          /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0874
*             DARGSMOD=DUMSGMOD;    /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0875
         MVC   DARGSMOD(3,@15),@CC01334                            0875
*             DARGSENT=IDC21108;    /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'09'                                 0876
*             DARGCNT=2;            /*                       @Z40LB40*/
         LA    @14,2                                               0877
         STH   @14,DARGCNT(,@15)                                   0877
*             DARGINS(1)=1;         /*                       @Z40LB40*/
         LA    @07,1                                               0878
         STH   @07,DARGINS(,@15)                                   0878
*             DARGINL(1)=3;         /*                       @Z40LB40*/
         LA    @06,3                                               0879
         STH   @06,DARGINL(,@15)                                   0879
*             DARGDTM(1)=ADDR(LOCHRHLD)+1;/*                 @Z40LB40*/
         LA    @05,LOCHRHLD                                        0880
         ALR   @05,@07                                             0880
         ST    @05,DARGDTM(,@15)                                   0880
*             DARGINS(2)=2;         /*                       @Z40LB40*/
         STH   @14,DARGINS+8(,@15)                                 0881
*             DARGINL(2)=3;         /*                       @Z40LB40*/
         STH   @06,DARGINL+8(,@15)                                 0882
*             DARGDTM(2)=ADDR(HICHRHLD)+1;/*                 @Z40LB40*/
         LA    @14,HICHRHLD                                        0883
         ALR   @14,@07                                             0883
         ST    @14,DARGDTM+8(,@15)                                 0883
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @Z40LB40*/
         L     @15,@PC00001                                        0884
         ST    @15,@AL00001                                        0884
         LA    @14,@CF00118                                        0884
         ST    @14,@AL00001+4                                      0884
         LA    @14,DDSTRU                                          0884
         ST    @14,@AL00001+8                                      0884
         MVI   @AL00001+8,X'80'                                    0884
         L     @15,GDTPRT(,@15)                                    0884
         LA    @01,@AL00001                                        0884
         BALR  @14,@15                                             0884
*             TABRC=LASTCC04;       /* SET RETURN CODE       @Z40LB40*/
         MVC   TABRC(2),@CH00044                                   0885
*             CHRERR=ON;            /* SET ERROR SWITCH      @Z40LB40*/
         OI    CHRERR,B'00000010'                                  0886
*           END;                    /*                       @Z40LB40*/
*       END;                        /*                       @Z40LB40*/
@RF00872 DS    0H                                                  0889
*     IF CHRERR=OFF THEN                                           0889
@RF00870 TM    CHRERR,B'00000010'                                  0889
         BNZ   @RF00889                                            0889
*       DO J2=LOCHRHLD TO HICHRHLD; /* NO ERROR, CONTINUE    @Z40LB40*/
*                                                                  0890
         L     @15,LOCHRHLD                                        0890
         B     @DE00890                                            0890
@DL00890 DS    0H                                                  0891
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK FOR CHR BEING INCREMENTED PAST 32 RECORDS @Z40LB40*/
*         /* PER TRACK. IF SO, SET RECORD NUMBER TO 01.      @Z40LB40*/
*         /* THEN ADD 1 TO TRACK NUMBER AND IF THIS          @Z40LB40*/
*         /* EXCEEDS 19 TRACKS PER CYLINDER THEN RESET       @Z40LB40*/
*         /* TRACK NUMBER TO 00 AND ADD 1 TO CYLINDER        @Z40LB40*/
*         /* NUMBER.                                         @Z40LB40*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0891
*         LOCHRHLD=J2;              /* SAVE CHR              @Z40LB40*/
         ST    @15,LOCHRHLD                                        0891
*         IF LORR>MAXRR THEN        /* IS TRK EXCEEDED       @Z40LB40*/
         CLI   LORR,32                                             0892
         BNH   @RF00892                                            0892
*           DO;                     /* YES                   @Z40LB40*/
*             LORR=MINRR;           /* RESET RR              @Z40LB40*/
         MVI   LORR,X'01'                                          0894
*             LOHH=LOHH+1;          /* INCREMENT HH          @Z40LB40*/
         LA    @15,1                                               0895
         SLR   @14,@14                                             0895
         IC    @14,LOHH                                            0895
         ALR   @14,@15                                             0895
         STC   @14,LOHH                                            0895
*             IF LOHH>MAXHH THEN    /* IS HEAD EXCEEDED      @Z40LB40*/
         CLI   LOHH,18                                             0896
         BNH   @RF00896                                            0896
*               DO;                 /* YES                   @Z40LB40*/
*                 LOHH=MINHH;       /* RESET HH              @Z40LB40*/
         MVI   LOHH,X'00'                                          0898
*                 LOCC=LOCC+1;      /* INCREMENT CC          @Z40LB40*/
         SLR   @14,@14                                             0899
         IC    @14,LOCC                                            0899
         ALR   @15,@14                                             0899
         STC   @15,LOCC                                            0899
*               END;                /*                       @Z40LB40*/
*           END;                    /*                       @Z40LB40*/
@RF00896 DS    0H                                                  0902
*         J2=LOCHRHLD;              /* RESET J2              @Z40LB40*/
*                                                                  0902
@RF00892 L     @15,LOCHRHLD                                        0902
         ST    @15,J2                                              0902
*         /***********************************************************/
*         /*                                                         */
*         /* READ AND PRINT EACH RECORD IN THE RANGE         @Z40LB40*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0903
*         CALL GETDATA(TABL,J2);    /* READ RECORD           @Z40LB40*/
         LA    @15,@CC01352                                        0903
         ST    @15,@AL00001                                        0903
         LA    @15,J2                                              0903
         ST    @15,@AL00001+4                                      0903
         LA    @01,@AL00001                                        0903
         BAL   @14,GETDATA                                         0903
*         RESPECIFY                                                0904
*           RTNREG RSTD;                                           0904
*         TESTRC=RTNREG;                                           0905
         LR    TESTRC,RTNREG                                       0905
*         RESPECIFY                                                0906
*           RTNREG UNRSTD;          /*                       @Z40LB40*/
*         IF TESTRC^=LASTCC00 THEN  /* IS RET.CODE ZERO      @Z40LB40*/
         LTR   TESTRC,TESTRC                                       0907
         BZ    @RF00907                                            0907
*           DO;                     /* NO,ERROR              @Z40LB40*/
*                                                                  0908
*             /*******************************************************/
*             /*                                                     */
*             /* ERROR, ISSUE MESSAGE AND TERMINATE          @Z40LB40*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0909
*             PRINTAB=''B;          /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0909
*             DARGSMOD=DUMSGMOD;    /*                       @Z40LB40*/
         L     @15,DDSTRU                                          0910
         MVC   DARGSMOD(3,@15),@CC01334                            0910
*             DARGSENT=IDC21107;    /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'08'                                 0911
*             DARGCNT=1;            /*                       @Z40LB40*/
         LA    @14,1                                               0912
         STH   @14,DARGCNT(,@15)                                   0912
*             DARGINS(1)=1;         /*                       @Z40LB40*/
         STH   @14,DARGINS(,@15)                                   0913
*             DARGINL(1)=3;         /*                       @Z40LB40*/
         MVC   DARGINL(2,@15),@CH00166                             0914
*             DARGDTM(1)=ADDR(LOCHRHLD)+1;/*                 @Z40LB40*/
         LA    @07,LOCHRHLD                                        0915
         ALR   @07,@14                                             0915
         ST    @07,DARGDTM(,@15)                                   0915
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @Z40LB40*/
         L     @15,@PC00001                                        0916
         ST    @15,@AL00001                                        0916
         LA    @14,@CF00118                                        0916
         ST    @14,@AL00001+4                                      0916
         LA    @14,DDSTRU                                          0916
         ST    @14,@AL00001+8                                      0916
         MVI   @AL00001+8,X'80'                                    0916
         L     @15,GDTPRT(,@15)                                    0916
         LA    @01,@AL00001                                        0916
         BALR  @14,@15                                             0916
*             TABRC=LASTCC04;       /* SET RETURN CODE       @Z40LB40*/
         MVC   TABRC(2),@CH00044                                   0917
*             J2=HICHRHLD;          /* STOP DO LOOP          @Z40LB40*/
         L     @15,HICHRHLD                                        0918
         ST    @15,J2                                              0918
*             I2=TBLCNT;            /* STOP DO LOOP          @Z40LB40*/
         L     @15,@PC00001+4                                      0919
         LA    @15,FDTPTR+36(,@15)                                 0919
         L     @15,TBLCNT(,@15)                                    0919
         ST    @15,I2                                              0919
*           END;                    /*                       @Z40LB40*/
*         ELSE                                                     0921
*           DO;                     /* READ, OK              @Z40LB40*/
*                                                                  0921
         B     @RC00907                                            0921
@RF00907 DS    0H                                                  0922
*             /*******************************************************/
*             /*                                                     */
*             /* PRINT HEADER WITH PREFIX                    @Z40LB40*/
*             /* AND PRINT RECORD.                           @Z40LB40*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0922
*             PRINTAB=''B;          /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 0922
*             DARGSMOD=DUMSGMOD;    /*                       @Z40LB40*/
         L     @02,DDSTRU                                          0923
         MVC   DARGSMOD(3,@02),@CC01334                            0923
*             DARGSENT=HREC;        /* SET HEADER            @Z40LB40*/
         MVI   DARGSENT(@02),X'30'                                 0924
*             DARGCNT=3;            /*                       @Z40LB40*/
         LA    @15,3                                               0925
         STH   @15,DARGCNT(,@02)                                   0925
*             DARGINS(1)=1;         /* INSERT 1              @Z40LB40*/
         LA    @14,1                                               0926
         STH   @14,DARGINS(,@02)                                   0926
*             DARGINL(1)=3;         /* CHR LENGTH            @Z40LB40*/
         STH   @15,DARGINL(,@02)                                   0927
*             DARGDTM(1)=ADDR(LOCHRHLD)+1;/*                 @Z40LB40*/
         LA    @07,LOCHRHLD                                        0928
         ALR   @07,@14                                             0928
         ST    @07,DARGDTM(,@02)                                   0928
*             DARGINS(2)=2;         /* INSERT 2              @Z40LB40*/
         MVC   DARGINS+8(2,@02),@CH00157                           0929
*             DARGINL(2)=LENGTH(PREFIX1);/*                  @Z40LB40*/
         LA    @14,4                                               0930
         STH   @14,DARGINL+8(,@02)                                 0930
*             DARGDTM(2)=ADDR(PREFIX1);/*                    @Z40LB40*/
         LA    @07,PREFIX1                                         0931
         ST    @07,DARGDTM+8(,@02)                                 0931
*             DARGINS(3)=3;         /* INSERT 3              @Z40LB40*/
         STH   @15,DARGINS+16(,@02)                                0932
*             DARGINL(3)=LENGTH(PREFIX2);/*                  @Z40LB40*/
         STH   @14,DARGINL+16(,@02)                                0933
*             DARGDTM(3)=ADDR(PREFIX2);/*                    @Z40LB40*/
         LA    @15,PREFIX2                                         0934
         ST    @15,DARGDTM+16(,@02)                                0934
*             CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*          @Z40LB40*/
         L     @02,@PC00001                                        0935
         ST    @02,@AL00001                                        0935
         LA    @15,PRPTR                                           0935
         ST    @15,@AL00001+4                                      0935
         LA    @15,DDSTRU                                          0935
         ST    @15,@AL00001+8                                      0935
         MVI   @AL00001+8,X'80'                                    0935
         L     @15,GDTPRT(,@02)                                    0935
         LA    @01,@AL00001                                        0935
         BALR  @14,@15                                             0935
*             SECTADDR='0000'X;     /* SET RECORD ADDRESS    @Z40LB40*/
         SLR   SECTADDR,SECTADDR                                   0936
*             NUMBYTES=SECTSIZE;    /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                0937
*             CALL PRNTSECT;        /* GO PRINT RECORD       @Z40LB40*/
         BAL   @14,PRNTSECT                                        0938
*           END;                    /*                       @Z40LB40*/
*       END;                        /*                       @Z40LB40*/
@RC00907 LA    @15,1                                               0940
         AL    @15,J2                                              0940
@DE00890 ST    @15,J2                                              0940
         C     @15,HICHRHLD                                        0940
         BNH   @DL00890                                            0940
*   END;                            /*                       @Z40LB40*/
*                                                                  0941
@RF00889 LA    @15,1                                               0941
         AL    @15,I2                                              0941
@DE00835 ST    @15,I2                                              0941
         L     @14,@PC00001+4                                      0941
         LA    @14,FDTPTR+36(,@14)                                 0941
         C     @15,TBLCNT(,@14)                                    0941
         BNH   @DL00835                                            0941
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET HEADLINES                                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0942
*   CALL AMSTP044(GDTTBL,PRPTR);    /*                       @Z40LB40*/
         L     @15,@PC00001                                        0942
         ST    @15,@AL00001                                        0942
         LA    @14,PRPTR                                           0942
         ST    @14,@AL00001+4                                      0942
         MVI   @AL00001+4,X'80'                                    0942
         L     @15,GDTRES(,@15)                                    0942
         LA    @01,@AL00001                                        0942
         BALR  @14,@15                                             0942
*   RFY                                                            0943
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR1;                 /* SET RETURN POINT      @Z40LB40*/
         L     REG14,RETADDR1                                      0944
*   RETURN CODE(TABRC);             /* RETURN TO CALLER      @Z40LB40*/
         LH    @15,TABRC                                           0945
@EL00004 DS    0H                                                  0945
@EF00004 DS    0H                                                  0945
@ER00004 BR    @14                                                 0945
*   RFY                                                            0946
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END DUMPTAB;                    /*                       @Z40LB40*/
*                                                                  0948
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - GETDATA (LEVEL 3)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE READS SECTORS OF MSC OR       @Z40LB40*/
*   /* STAGING ADAPTERS OR RECORDS OF THE MSC TABLES.        @Z40LB40*/
*   /* IT INTERFACES WITH THE MSC THROUGH THE USE OF         @Z40LB40*/
*   /* THE ICBQUERY MACRO.                                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - 4 CHARACTER VALUE DEFINING THE TYPE OF        @Z40LB40*/
*   /* WORK TO BE DONE. IN SOME CASES A SECONDARY VALUE      @Z40LB40*/
*   /* IS ALSO INPUT.                                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* PRIME VALUE - MSCM SECORDARY VALUE - NONE             @Z40LB40*/
*   /* READ ALL OF MSC MAIN STORAGE.                         @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* PRIME VALUE - MSCE SECORDARY VALUE - NONE             @Z40LB40*/
*   /* READ ALL OF MSC EXTENDED STORAGE.                     @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* PRIME VALUE - SAMA SECONDARY VALUE - SSID OF SA       @Z40LB40*/
*   /* READ ALL OF SA(SSID) MAIN STORAGE PLUS PST FROM       @ZD00043*/
*   /* EXTENDED STORAGE.                                     @ZD00043*/
*   /*                                                       @Z40LB40*/
*   /* PRIME VALUE - SAEX SECONDARY VALUE - SSID OF SA       @Z40LB40*/
*   /* READ ALL OF VALID SA(SSID) EXTENDED STORAGE.          @ZD00050*/
*   /*                                                       @Z40LB40*/
*   /* PRIME VALUE - TABL SECONDARY VALUE - CHR OF RECORD    @Z40LB40*/
*   /* READ THE SPECIFIED MSC TABLES RECORD.                 @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - THE REQUESTED DATA PLUS A RETURN CODE.       @Z40LB40*/
*   /* 0 = EVERYTHING OK                                     @Z40LB40*/
*   /* 4 = ERROR OCCURRED WHILE READING DATA. VALIDITY OF    @Z40LB40*/
*   /* DATA CANNOT BE GUARANTEED.                            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0948
*GETDATA:                                                          0948
*   PROCEDURE(GETDTYPE,GETDSEC) OPTIONS(NOSAVE,NOSAVEAREA);/*      0948
*                                                            @Z40LB40*/
GETDATA  MVC   @PC00005(8),0(@01)                                  0948
*   DCL                                                            0949
*     GETDTYPE CHAR(4);             /* READ OPTION           @Z40LB40*/
*   DCL                                                            0950
*     1 GETDSEC FIXED(31),          /* SECONDARY VALUE       @Z40LB40*/
*      2 * FIXED(8),                /* NOT USED - ZERO       @Z40LB40*/
*      2 GETDCC FIXED(8),           /* CYLINDER              @Z40LB40*/
*      2 GETDHH FIXED(8),           /* HEAD                  @Z40LB40*/
*      2 GETDRR FIXED(8);           /* RECORD                @Z40LB40*/
*   RFY                                                            0951
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR2=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         ST    REG14,RETADDR2                                      0952
*   RFY                                                            0953
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             0954
         L     @07,@PC00001                                        0954
         L     @07,GDTTR2(,@07)                                    0954
         MVC   @TS00001(95),NEWERID2(@07)                          0954
         MVC   OLDERID2(95,@07),@TS00001                           0954
*   NEWID2='DUCA';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@07),@CC01510                              0955
*   GETDRC=LASTCC00;                /* INIT RETURN CODE      @Z40LB40*/
         SLR   GETDRC,GETDRC                                       0956
*   IF GETDTYPE=MSCM THEN                                          0957
*                                                                  0957
         L     @07,@PC00005                                        0957
         CLC   GETDTYPE(4,@07),@CC01344                            0957
         BNE   @RF00957                                            0957
*     /***************************************************************/
*     /*                                                             */
*     /* READ MSC MAIN STORAGE SECTORS 04-FF                 @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0958
*     DO I3='04'X TO'FF'X;          /* READ SECTORS 04-FF    @Z40LB40*/
         LA    I3,4                                                0958
@DL00958 DS    0H                                                  0959
*       PARMLST=''B;                /* CLEAR ICBQUERY LIST   @Z40LB40*/
         XC    PARMLST(44),PARMLST                                 0959
*       QUSECT=I3;                  /* SET WANTED SECTOR     @Z40LB40*/
         L     @07,QUERYPTR                                        0960
         STC   I3,QUSECT(,@07)                                     0960
*       QUPTR=ADDR(RTAREA);         /* SET RETURN ADDR       @Z40LB40*/
         LA    @05,RTAREA                                          0961
         ST    @05,QUPTR(,@07)                                     0961
*       IF ADDR(AMSC)^=NULLPTR THEN /* IF ALT THEN SET       @ZA27590*/
         L     @05,@PC00001+4                                      0962
         L     @05,FDTPTR+92(,@05)                                 0962
         LTR   @05,@05                                             0962
         BZ    @RF00962                                            0962
*         QWALTMSC=ON;              /* BIT IN QUERY ORDER    @ZA27590*/
         OI    QWALTMSC(@07),B'00000001'                           0963
*       CALL IDCSASS0(GDTTBL,RDMSC,QUERYPTR,REASON);/* READ MSC WCS
*                                                            @Z40LB40*/
@RF00962 L     @07,@PC00001                                        0964
         ST    @07,@AL00001                                        0964
         LA    @05,RDMSC                                           0964
         ST    @05,@AL00001+4                                      0964
         LA    @05,QUERYPTR                                        0964
         ST    @05,@AL00001+8                                      0964
         LA    @05,REASON                                          0964
         ST    @05,@AL00001+12                                     0964
         MVI   @AL00001+12,X'80'                                   0964
         L     @15,GDTSSC(,@07)                                    0964
         LA    @01,@AL00001                                        0964
         BALR  @14,@15                                             0964
*       RESPECIFY                                                  0965
*         RTNREG RSTD;                                             0965
*       TESTRC=RTNREG;                                             0966
         LR    TESTRC,RTNREG                                       0966
*       RESPECIFY                                                  0967
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC=0 THEN                                           0968
         LTR   TESTRC,TESTRC                                       0968
         BNZ   @RF00968                                            0968
*         DO;                       /*                       @Z40LB40*/
*           MSPTR=(I3*256)+MEMPTR;  /* CALC AREA ADDRESS     @Z40LB40*/
         LR    MSPTR,I3                                            0970
         SLA   MSPTR,8                                             0970
         AL    MSPTR,MEMPTR                                        0970
*           MEMSECT=RTRECA;         /* SAVE SECTOR           @Z40LB40*/
         MVC   MEMSECT(256,MSPTR),RTRECA                           0971
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       0973
*         DO;                       /*                       @Z40LB40*/
         B     @RC00968                                            0973
@RF00968 DS    0H                                                  0974
*           CALL SSCMSG(REASON);    /* ISSUE USSC MESSAGE    @Z40LB40*/
         LA    @15,REASON                                          0974
         ST    @15,@AL00001                                        0974
         LA    @01,@AL00001                                        0974
         BAL   @14,SSCMSG                                          0974
*           GETDRC=LASTCC04;        /* SET RETURN CODE       @Z40LB40*/
         LA    GETDRC,4                                            0975
*           I3='FF'X;               /* STOP DO LOOP          @Z40LB40*/
         LA    I3,255                                              0976
*         END;                      /*                       @Z40LB40*/
*     END;                          /*                       @Z40LB40*/
@RC00968 AL    I3,@CF00223                                         0978
         C     I3,@CF00589                                         0978
         BNH   @DL00958                                            0978
*   IF GETDTYPE=MSCM&GETDRC=LASTCC00 THEN                          0979
*                                                                  0979
@RF00957 L     @07,@PC00005                                        0979
         CLC   GETDTYPE(4,@07),@CC01344                            0979
         BNE   @RF00979                                            0979
         LTR   GETDRC,GETDRC                                       0979
         BNZ   @RF00979                                            0979
*     /***************************************************************/
*     /*                                                             */
*     /* READ MSC MAIN STORAGE SECTORS 00-03                 @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0980
*     DO I3='00'X TO'03'X;          /* READ SECTORS 00-03    @Z40LB40*/
         SLR   I3,I3                                               0980
@DL00980 DS    0H                                                  0981
*       PARMLST=''B;                /* CLEAR ICBQUERY LIST   @Z40LB40*/
         XC    PARMLST(44),PARMLST                                 0981
*       QUSECT=I3;                  /* SET WANTED SECTOR     @Z40LB40*/
         L     @07,QUERYPTR                                        0982
         STC   I3,QUSECT(,@07)                                     0982
*       QUPTR=ADDR(RTAREA);         /* SET RETURN ADDR       @Z40LB40*/
         LA    @05,RTAREA                                          0983
         ST    @05,QUPTR(,@07)                                     0983
*       IF ADDR(AMSC)^=NULLPTR THEN /* IF ALT THEN SET       @ZA27590*/
         L     @05,@PC00001+4                                      0984
         L     @05,FDTPTR+92(,@05)                                 0984
         LTR   @05,@05                                             0984
         BZ    @RF00984                                            0984
*         QWALTMSC=ON;              /* BIT IN QUERY ORDER    @ZA27590*/
         OI    QWALTMSC(@07),B'00000001'                           0985
*       CALL IDCSASS0(GDTTBL,RDMSC,QUERYPTR,REASON);/* READ MSC WCS
*                                                            @Z40LB40*/
@RF00984 L     @07,@PC00001                                        0986
         ST    @07,@AL00001                                        0986
         LA    @05,RDMSC                                           0986
         ST    @05,@AL00001+4                                      0986
         LA    @05,QUERYPTR                                        0986
         ST    @05,@AL00001+8                                      0986
         LA    @05,REASON                                          0986
         ST    @05,@AL00001+12                                     0986
         MVI   @AL00001+12,X'80'                                   0986
         L     @15,GDTSSC(,@07)                                    0986
         LA    @01,@AL00001                                        0986
         BALR  @14,@15                                             0986
*       RESPECIFY                                                  0987
*         RTNREG RSTD;                                             0987
*       TESTRC=RTNREG;                                             0988
         LR    TESTRC,RTNREG                                       0988
*       RESPECIFY                                                  0989
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC=0 THEN                                           0990
         LTR   TESTRC,TESTRC                                       0990
         BNZ   @RF00990                                            0990
*         DO;                       /*                       @Z40LB40*/
*           MSPTR=(I3*256)+MEMPTR;  /* CALC AREA ADDRESS     @Z40LB40*/
         LR    MSPTR,I3                                            0992
         SLA   MSPTR,8                                             0992
         AL    MSPTR,MEMPTR                                        0992
*           MEMSECT=RTRECA;         /* SAVE SECTOR           @Z40LB40*/
         MVC   MEMSECT(256,MSPTR),RTRECA                           0993
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       0995
*         DO;                       /*                       @Z40LB40*/
         B     @RC00990                                            0995
@RF00990 DS    0H                                                  0996
*           CALL SSCMSG(REASON);    /* ISSUE USSC MESSAGE    @Z40LB40*/
         LA    @15,REASON                                          0996
         ST    @15,@AL00001                                        0996
         LA    @01,@AL00001                                        0996
         BAL   @14,SSCMSG                                          0996
*           GETDRC=LASTCC04;        /* SET RETURN CODE       @Z40LB40*/
         LA    GETDRC,4                                            0997
*           I3='03'X;               /* STOP DO LOOP          @Z40LB40*/
         LA    I3,3                                                0998
*         END;                      /*                       @Z40LB40*/
*     END;                          /*                       @Z40LB40*/
@RC00990 AL    I3,@CF00223                                         1000
         C     I3,@CF01513                                         1000
         BNH   @DL00980                                            1000
*   IF GETDTYPE=MSCE THEN                                          1001
*                                                                  1001
@RF00979 L     @07,@PC00005                                        1001
         CLC   GETDTYPE(4,@07),@CC01346                            1001
         BNE   @RF01001                                            1001
*     /***************************************************************/
*     /*                                                             */
*     /* READ ALL OF MSC EXTENDED STORAGE                    @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1002
*     DO I3='C0'X TO'FF'X;          /* READ 64 SECTORS       @Z40LB40*/
         LA    I3,192                                              1002
@DL01002 DS    0H                                                  1003
*       PARMLST=''B;                /* CLEAR ICBQUERY LIST   @Z40LB40*/
         XC    PARMLST(44),PARMLST                                 1003
*       QUSECT=I3;                  /* SET WANTED SECTOR     @Z40LB40*/
         L     @07,QUERYPTR                                        1004
         STC   I3,QUSECT(,@07)                                     1004
*       QWMEM=ON;                   /* SET EXTENDED STORE    @Z40LB40*/
         OI    QWMEM(@07),B'10000000'                              1005
*       QUPTR=ADDR(RTAREA);         /* SET RETURN ADDR       @Z40LB40*/
         LA    @05,RTAREA                                          1006
         ST    @05,QUPTR(,@07)                                     1006
*       IF ADDR(AMSC)^=NULLPTR THEN /* IF ALT THEN SET       @ZA27590*/
         L     @05,@PC00001+4                                      1007
         L     @05,FDTPTR+92(,@05)                                 1007
         LTR   @05,@05                                             1007
         BZ    @RF01007                                            1007
*         QWALTMSC=ON;              /* BIT IN QUERY ORDER    @ZA27590*/
         OI    QWALTMSC(@07),B'00000001'                           1008
*       CALL IDCSASS0(GDTTBL,RDMSC,QUERYPTR,REASON);/* READ MSC WCS
*                                                            @Z40LB40*/
@RF01007 L     @07,@PC00001                                        1009
         ST    @07,@AL00001                                        1009
         LA    @05,RDMSC                                           1009
         ST    @05,@AL00001+4                                      1009
         LA    @05,QUERYPTR                                        1009
         ST    @05,@AL00001+8                                      1009
         LA    @05,REASON                                          1009
         ST    @05,@AL00001+12                                     1009
         MVI   @AL00001+12,X'80'                                   1009
         L     @15,GDTSSC(,@07)                                    1009
         LA    @01,@AL00001                                        1009
         BALR  @14,@15                                             1009
*       RESPECIFY                                                  1010
*         RTNREG RSTD;                                             1010
*       TESTRC=RTNREG;                                             1011
         LR    TESTRC,RTNREG                                       1011
*       RESPECIFY                                                  1012
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC=0 THEN                                           1013
         LTR   TESTRC,TESTRC                                       1013
         BNZ   @RF01013                                            1013
*         DO;                       /*                       @Z40LB40*/
*           MSPTR=(I3*256)+MEMPTR;  /* CALC AREA ADDRESS     @Z40LB40*/
         LR    MSPTR,I3                                            1015
         SLA   MSPTR,8                                             1015
         AL    MSPTR,MEMPTR                                        1015
*           MEMSECT=RTRECA;         /* SAVE SECTOR           @Z40LB40*/
         MVC   MEMSECT(256,MSPTR),RTRECA                           1016
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       1018
*         DO;                       /*                       @Z40LB40*/
         B     @RC01013                                            1018
@RF01013 DS    0H                                                  1019
*           CALL SSCMSG(REASON);    /* ISSUE USSC MESSAGE    @Z40LB40*/
         LA    @15,REASON                                          1019
         ST    @15,@AL00001                                        1019
         LA    @01,@AL00001                                        1019
         BAL   @14,SSCMSG                                          1019
*           GETDRC=LASTCC04;        /* SET RETURN CODE       @Z40LB40*/
         LA    GETDRC,4                                            1020
*           I3='FF'X;               /* STOP DO LOOP          @Z40LB40*/
         LA    I3,255                                              1021
*         END;                      /*                       @Z40LB40*/
*     END;                          /*                       @Z40LB40*/
@RC01013 AL    I3,@CF00223                                         1023
         C     I3,@CF00589                                         1023
         BNH   @DL01002                                            1023
*   IF GETDTYPE=SAMA THEN                                          1024
*                                                                  1024
@RF01001 L     @07,@PC00005                                        1024
         CLC   GETDTYPE(4,@07),@CC01348                            1024
         BNE   @RF01024                                            1024
*     /***************************************************************/
*     /*                                                             */
*     /* READ ALL OF STAGING ADAPTER MAIN STORAGE PLUS       @ZD00043*/
*     /* PST FROM EXTENDED STORAGE.                          @ZD00043*/
*     /* SSID OF STAGING ADAPTER IS AT GETDSEC.              @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1025
*     DO I3='00'X TO'FF'X;          /* READ 256 SECTORS      @Z40LB40*/
         SLR   I3,I3                                               1025
@DL01025 DS    0H                                                  1026
*       PARMLST=''B;                /* CLEAR ICBQUERY LIST   @Z40LB40*/
         XC    PARMLST(44),PARMLST                                 1026
*       QUSECT=I3;                  /* SET WANTED SECTOR     @Z40LB40*/
         L     @07,QUERYPTR                                        1027
         STC   I3,QUSECT(,@07)                                     1027
*       QUPTR=ADDR(RTAREA);         /* SET RETURN ADDR       @Z40LB40*/
         LA    @05,RTAREA                                          1028
         ST    @05,QUPTR(,@07)                                     1028
*       QWSSID=GETDSEC;             /* SET SSID VALUE        @Z40LB40*/
         L     @05,@PC00005+4                                      1029
         L     @05,GETDSEC(,@05)                                   1029
         STH   @05,QWSSID(,@07)                                    1029
*       CALL IDCSASS0(GDTTBL,RDSTGAD,QUERYPTR,REASON);/* READ SA WCS
*                                                            @Z40LB40*/
         L     @07,@PC00001                                        1030
         ST    @07,@AL00001                                        1030
         LA    @05,RDSTGAD                                         1030
         ST    @05,@AL00001+4                                      1030
         LA    @05,QUERYPTR                                        1030
         ST    @05,@AL00001+8                                      1030
         LA    @05,REASON                                          1030
         ST    @05,@AL00001+12                                     1030
         MVI   @AL00001+12,X'80'                                   1030
         L     @15,GDTSSC(,@07)                                    1030
         LA    @01,@AL00001                                        1030
         BALR  @14,@15                                             1030
*       RESPECIFY                                                  1031
*         RTNREG RSTD;                                             1031
*       TESTRC=RTNREG;                                             1032
         LR    TESTRC,RTNREG                                       1032
*       RESPECIFY                                                  1033
*         RTNREG UNRSTD;            /*                       @Z40LB40*/
*       IF TESTRC=0 THEN                                           1034
         LTR   TESTRC,TESTRC                                       1034
         BNZ   @RF01034                                            1034
*         DO;                       /*                       @Z40LB40*/
*           MSPTR=(I3*256)+MEMPTR;  /* CALC AREA ADDRESS     @Z40LB40*/
         LR    MSPTR,I3                                            1036
         SLA   MSPTR,8                                             1036
         AL    MSPTR,MEMPTR                                        1036
*           MEMSECT=RTRECB;         /* SAVE SECTOR           @Z40LB40*/
         MVC   MEMSECT(256,MSPTR),RTRECB                           1037
*         END;                      /*                       @Z40LB40*/
*       ELSE                                                       1039
*         DO;                       /*                       @Z40LB40*/
         B     @RC01034                                            1039
@RF01034 DS    0H                                                  1040
*           CALL SSCMSG(REASON);    /* ISSUE USSC MESSAGE    @Z40LB40*/
         LA    @15,REASON                                          1040
         ST    @15,@AL00001                                        1040
         LA    @01,@AL00001                                        1040
         BAL   @14,SSCMSG                                          1040
*           GETDRC=LASTCC04;        /* SET RETURN CODE       @Z40LB40*/
         LA    GETDRC,4                                            1041
*           I3='FF'X;               /* STOP DO LOOP          @Z40LB40*/
         LA    I3,255                                              1042
*         END;                      /*                       @Z40LB40*/
*     END;                          /*                       @Z40LB40*/
@RC01034 AL    I3,@CF00223                                         1044
         C     I3,@CF00589                                         1044
         BNH   @DL01025                                            1044
*   IF GETDTYPE=SAMA&GETDRC=LASTCC00 THEN                          1045
*                                                                  1045
@RF01024 L     @07,@PC00005                                        1045
         CLC   GETDTYPE(4,@07),@CC01348                            1045
         BNE   @RF01045                                            1045
         LTR   GETDRC,GETDRC                                       1045
         BNZ   @RF01045                                            1045
*     /***************************************************************/
*     /*                                                             */
*     /* READ PST FROM EXTENDED STORAGE                      @ZD00043*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1046
*     DO;                           /*                       @ZD00043*/
*       MSPTR=MEMPTR+'10000'X;      /* SET AREA ADDRESS      @ZD00043*/
         L     MSPTR,@CF01515                                      1047
         AL    MSPTR,MEMPTR                                        1047
*       DO I3='C0'X TO'CC'X;        /* READ 13 SECTORS       @ZD00043*/
         LA    I3,192                                              1048
@DL01048 DS    0H                                                  1049
*         PARMLST=''B;              /* CLEAR ICBQUERY LIST   @ZD00043*/
         XC    PARMLST(44),PARMLST                                 1049
*         QUSECT=I3;                /* SET WANTED SECTOR     @ZD00043*/
         L     @07,QUERYPTR                                        1050
         STC   I3,QUSECT(,@07)                                     1050
*         QWMEM=ON;                 /* SET EXTENDED STORE    @ZD00043*/
         OI    QWMEM(@07),B'10000000'                              1051
*         QUPTR=ADDR(RTAREA);       /* SET RETURN ADDR       @ZD00043*/
         LA    @02,RTAREA                                          1052
         ST    @02,QUPTR(,@07)                                     1052
*         QWSSID=GETDSEC;           /* SET SSID VALUE        @ZD00043*/
         L     @02,@PC00005+4                                      1053
         L     @02,GETDSEC(,@02)                                   1053
         STH   @02,QWSSID(,@07)                                    1053
*         CALL IDCSASS0(GDTTBL,RDSTGAD,QUERYPTR,REASON);/* READ EXT.
*                                                            @ZD00043*/
         L     @07,@PC00001                                        1054
         ST    @07,@AL00001                                        1054
         LA    @02,RDSTGAD                                         1054
         ST    @02,@AL00001+4                                      1054
         LA    @02,QUERYPTR                                        1054
         ST    @02,@AL00001+8                                      1054
         LA    @02,REASON                                          1054
         ST    @02,@AL00001+12                                     1054
         MVI   @AL00001+12,X'80'                                   1054
         L     @15,GDTSSC(,@07)                                    1054
         LA    @01,@AL00001                                        1054
         BALR  @14,@15                                             1054
*         RESPECIFY                                                1055
*           RTNREG RSTD;                                           1055
*         TESTRC=RTNREG;                                           1056
         LR    TESTRC,RTNREG                                       1056
*         RESPECIFY                                                1057
*           RTNREG UNRSTD;          /*                       @ZD00043*/
*         IF TESTRC=0 THEN                                         1058
         LTR   TESTRC,TESTRC                                       1058
         BNZ   @RF01058                                            1058
*           DO;                     /*                       @ZD00043*/
*             MEMSECT=RTRECB;       /* SAVE SECTOR           @ZD00043*/
         MVC   MEMSECT(256,MSPTR),RTRECB                           1060
*             MSPTR=MSPTR+256;      /* BUMP SAVE POINTER     @ZD00043*/
         AL    MSPTR,@CF01321                                      1061
*           END;                    /*                       @ZD00043*/
*         ELSE                                                     1063
*           DO;                     /*                       @ZD00043*/
         B     @RC01058                                            1063
@RF01058 DS    0H                                                  1064
*             CALL SSCMSG(REASON);  /* ISSUE USSC MESSAGE    @ZD00043*/
         LA    @04,REASON                                          1064
         ST    @04,@AL00001                                        1064
         LA    @01,@AL00001                                        1064
         BAL   @14,SSCMSG                                          1064
*             GETDRC=LASTCC04;      /* SET RETURN CODE       @ZD00043*/
         LA    GETDRC,4                                            1065
*             I3='CC'X;             /* STOP DO LOOP          @ZD00043*/
         LA    I3,204                                              1066
*           END;                    /*                       @ZD00043*/
*       END;                        /*                       @ZD00043*/
@RC01058 AL    I3,@CF00223                                         1068
         C     I3,@CF01516                                         1068
         BNH   @DL01048                                            1068
*     END;                          /*                       @ZD00043*/
*   IF GETDTYPE=SAEX THEN                                          1070
*                                                                  1070
@RF01045 L     @07,@PC00005                                        1070
         CLC   GETDTYPE(4,@07),@CC01350                            1070
         BNE   @RF01070                                            1070
*     /***************************************************************/
*     /*                                                             */
*     /* SA EXTENDED STORAGE REQUESTED. FIRST, READ SECTOR   @ZD00050*/
*     /* 00 FROM SA MAIN STORAGE TO GET THE BIT PATTERN      @ZD00050*/
*     /* THAT SHOWS WHICH 1K WORD SEGMENTS OF EXTENDED       @ZD00050*/
*     /* STORAGE ARE VALID. SECOND, READ ONLY THOSE SECTORS  @ZD00050*/
*     /* THAT FALL IN THE VALID 1K WORD AREAS. LOCATION 00E4 @ZD00050*/
*     /* OF SA MAIN INDICATES THE 1K VALID AREAS. THE FIRST  @ZD00050*/
*     /* 16 BITS ARE BIT SWITCHES WITH A 1 INDICATING VALID  @ZD00050*/
*     /* 1K WORD AREA AND 0 INDICATING INVALID 1K WORD AREA. @ZD00050*/
*     /* BIT ZERO COVERS ADDRESSES F0-FF, BIT 1 COVERS E0-EF @ZD00050*/
*     /* ETC... WITH BIT 14 COVERING 10-1F AND BIT 15        @ZD00050*/
*     /* COVERING 00-0F.                                     @ZD00050*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1071
*     DO;                           /*                       @ZD00050*/
*                                                                  1071
*       /*************************************************************/
*       /*                                                           */
*       /* READ SECTOR 00 FROM MAIN TO GET BIT SWITCHES      @ZD00050*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1072
*       PARMLST=''B;                /*                       @ZD00050*/
         XC    PARMLST(44),PARMLST                                 1072
*       QUSECT='00'X;               /*                       @ZD00050*/
         L     @07,QUERYPTR                                        1073
         MVI   QUSECT(@07),X'00'                                   1073
*       QUPTR=ADDR(RTAREA);         /*                       @ZD00050*/
         LA    @02,RTAREA                                          1074
         ST    @02,QUPTR(,@07)                                     1074
*       QWSSID=GETDSEC;             /*                       @ZD00050*/
         L     @02,@PC00005+4                                      1075
         L     @02,GETDSEC(,@02)                                   1075
         STH   @02,QWSSID(,@07)                                    1075
*       CALL IDCSASS0(GDTTBL,RDSTGAD,QUERYPTR,REASON);/*     @ZD00050*/
         L     @07,@PC00001                                        1076
         ST    @07,@AL00001                                        1076
         LA    @02,RDSTGAD                                         1076
         ST    @02,@AL00001+4                                      1076
         LA    @02,QUERYPTR                                        1076
         ST    @02,@AL00001+8                                      1076
         LA    @02,REASON                                          1076
         ST    @02,@AL00001+12                                     1076
         MVI   @AL00001+12,X'80'                                   1076
         L     @15,GDTSSC(,@07)                                    1076
         LA    @01,@AL00001                                        1076
         BALR  @14,@15                                             1076
*       RESPECIFY                                                  1077
*         RTNREG RSTD;                                             1077
*       TESTRC=RTNREG;                                             1078
         LR    TESTRC,RTNREG                                       1078
*       RESPECIFY                                                  1079
*         RTNREG UNRSTD;            /*                       @ZD00050*/
*       IF TESTRC=0 THEN                                           1080
         LTR   TESTRC,TESTRC                                       1080
         BNZ   @RF01080                                            1080
*         DO;                       /*                       @ZD00050*/
*           MSPTR=MEMPTR;           /*                       @ZD00050*/
         L     MSPTR,MEMPTR                                        1082
*           MEMSECT=RTRECB;         /*                       @ZD00050*/
         MVC   MEMSECT(256,MSPTR),RTRECB                           1083
*         END;                      /*                       @ZD00050*/
*       ELSE                                                       1085
*         DO;                       /*                       @ZD00050*/
         B     @RC01080                                            1085
@RF01080 DS    0H                                                  1086
*           CALL SSCMSG(REASON);    /*                       @ZD00050*/
         LA    @15,REASON                                          1086
         ST    @15,@AL00001                                        1086
         LA    @01,@AL00001                                        1086
         BAL   @14,SSCMSG                                          1086
*           GETDRC=LASTCC04;        /*                       @ZD00050*/
         LA    GETDRC,4                                            1087
*         END;                      /*                       @ZD00050*/
*       IF GETDRC=LASTCC00 THEN                                    1089
@RC01080 LTR   GETDRC,GETDRC                                       1089
         BNZ   @RF01089                                            1089
*         DO;                       /*                       @ZD00050*/
*                                                                  1090
*           /*********************************************************/
*           /*                                                       */
*           /* SECTOR 00 READ OK, TRANSLATE BIT PATTERN INTO @ZD00050*/
*           /* SWITCHES IN AN ARRAY FOR LATER REFERENCE.     @ZD00050*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1091
*           BYTEMASK='00000001'B;   /* SET TRANSLATE MASK    @ZD00050*/
         LA    BYTEMASK,1                                          1091
*           DO I3=1 TO 8;           /* ADDRS. 00-7F          @ZD00050*/
         LA    I3,1                                                1092
@DL01092 DS    0H                                                  1093
*             IF((MEMPTR+'00E5'X)->MEMBYTE&BYTEMASK)=BYTEMASK THEN 1093
         LA    @07,229                                             1093
         AL    @07,MEMPTR                                          1093
         SLR   @05,@05                                             1093
         IC    @05,MEMBYTE(,@07)                                   1093
         NR    @05,BYTEMASK                                        1093
         CR    @05,BYTEMASK                                        1093
         BNE   @RF01093                                            1093
*               EXARRAY(I3)=VALID;  /*                       @ZD00050*/
         LA    @07,EXARRAY-1(I3)                                   1094
         MVI   0(@07),C'1'                                         1094
*             ELSE                                                 1095
*               EXARRAY(I3)=INVALID;/*                       @ZD00050*/
         B     @RC01093                                            1095
@RF01093 LA    @07,EXARRAY-1(I3)                                   1095
         MVI   0(@07),C'0'                                         1095
*             SLL(BYTEMASK,1);      /*                       @ZD00050*/
@RC01093 SLL   BYTEMASK,1                                          1096
*           END;                    /*                       @ZD00050*/
         AL    I3,@CF00223                                         1097
         C     I3,@CF00183                                         1097
         BNH   @DL01092                                            1097
*           BYTEMASK='00000001'B;   /*                       @ZD00050*/
         LA    BYTEMASK,1                                          1098
*           DO I3=9 TO 16;          /* ADDRS. 80-FF          @ZD00050*/
         LA    I3,9                                                1099
@DL01099 DS    0H                                                  1100
*             IF((MEMPTR+'00E4'X)->MEMBYTE&BYTEMASK)=BYTEMASK THEN 1100
         LA    @07,228                                             1100
         AL    @07,MEMPTR                                          1100
         SLR   @05,@05                                             1100
         IC    @05,MEMBYTE(,@07)                                   1100
         NR    @05,BYTEMASK                                        1100
         CR    @05,BYTEMASK                                        1100
         BNE   @RF01100                                            1100
*               EXARRAY(I3)=VALID;  /*                       @ZD00050*/
         LA    @07,EXARRAY-1(I3)                                   1101
         MVI   0(@07),C'1'                                         1101
*             ELSE                                                 1102
*               EXARRAY(I3)=INVALID;/*                       @ZD00050*/
         B     @RC01100                                            1102
@RF01100 LA    @07,EXARRAY-1(I3)                                   1102
         MVI   0(@07),C'0'                                         1102
*             SLL(BYTEMASK,1);      /*                       @ZD00050*/
@RC01100 SLL   BYTEMASK,1                                          1103
*           END;                    /*                       @ZD00050*/
         AL    I3,@CF00223                                         1104
         C     I3,@CF00510                                         1104
         BNH   @DL01099                                            1104
*         END;                      /*                       @ZD00050*/
*       IF GETDRC=LASTCC00 THEN                                    1106
@RF01089 LTR   GETDRC,GETDRC                                       1106
         BNZ   @RF01106                                            1106
*         DO;                       /*                       @ZD00050*/
*                                                                  1107
*           /*********************************************************/
*           /*                                                       */
*           /* EVERYTHING OK SO FAR. READ EACH VALID SA      @ZD00050*/
*           /* EXTENDED SECTOR AS REFLECTED BY EXARRAY       @ZD00050*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1108
*           DO I3='00'X TO'FF'X;    /*                       @ZD00050*/
         SLR   I3,I3                                               1108
@DL01108 DS    0H                                                  1109
*             J3=(I3/16)+1;         /* CALC ARRAY ENTRY      @ZD00050*/
         LR    @00,I3                                              1109
         SRDA  @00,32                                              1109
         D     @00,@CF00510                                        1109
         AL    @01,@CF00223                                        1109
         LR    J3,@01                                              1109
*             IF EXARRAY(J3)=VALID THEN                            1110
         LA    @05,EXARRAY-1(J3)                                   1110
         CLI   0(@05),C'1'                                         1110
         BNE   @RF01110                                            1110
*               DO;                 /*                       @ZD00050*/
*                                                                  1111
*                 /***************************************************/
*                 /*                                                 */
*                 /* VALID ADDRESS, READ SECTOR              @ZD00050*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1112
*                 PARMLST=''B;      /*                       @ZD00050*/
         XC    PARMLST(44),PARMLST                                 1112
*                 QUSECT=I3;        /*                       @ZD00050*/
         L     @07,QUERYPTR                                        1113
         STC   I3,QUSECT(,@07)                                     1113
*                 QWMEM=ON;         /*                       @ZD00050*/
         OI    QWMEM(@07),B'10000000'                              1114
*                 QUPTR=ADDR(RTAREA);/*                      @ZD00050*/
         LA    @05,RTAREA                                          1115
         ST    @05,QUPTR(,@07)                                     1115
*                 QWSSID=GETDSEC;   /*                       @ZD00050*/
         L     @05,@PC00005+4                                      1116
         L     @05,GETDSEC(,@05)                                   1116
         STH   @05,QWSSID(,@07)                                    1116
*                 CALL IDCSASS0(GDTTBL,RDSTGAD,QUERYPTR,REASON);/* 1117
*                                                            @ZD00050*/
         L     @07,@PC00001                                        1117
         ST    @07,@AL00001                                        1117
         LA    @05,RDSTGAD                                         1117
         ST    @05,@AL00001+4                                      1117
         LA    @05,QUERYPTR                                        1117
         ST    @05,@AL00001+8                                      1117
         LA    @05,REASON                                          1117
         ST    @05,@AL00001+12                                     1117
         MVI   @AL00001+12,X'80'                                   1117
         L     @15,GDTSSC(,@07)                                    1117
         LA    @01,@AL00001                                        1117
         BALR  @14,@15                                             1117
*                 RESPECIFY                                        1118
*                   RTNREG RSTD;                                   1118
*                 TESTRC=RTNREG;                                   1119
         LR    TESTRC,RTNREG                                       1119
*                 RESPECIFY                                        1120
*                   RTNREG UNRSTD;  /*                       @ZD00050*/
*                 IF TESTRC=0 THEN                                 1121
         LTR   TESTRC,TESTRC                                       1121
         BNZ   @RF01121                                            1121
*                   DO;             /*                       @ZD00050*/
*                     MSPTR=(I3*256)+MEMPTR;/*               @ZD00050*/
         LR    MSPTR,I3                                            1123
         SLA   MSPTR,8                                             1123
         AL    MSPTR,MEMPTR                                        1123
*                     MEMSECT=RTRECB;/*                      @ZD00050*/
         MVC   MEMSECT(256,MSPTR),RTRECB                           1124
*                   END;            /*                       @ZD00050*/
*                 ELSE                                             1126
*                   DO;             /*                       @ZD00050*/
         B     @RC01121                                            1126
@RF01121 DS    0H                                                  1127
*                     CALL SSCMSG(REASON);/*                 @ZD00050*/
         LA    @15,REASON                                          1127
         ST    @15,@AL00001                                        1127
         LA    @01,@AL00001                                        1127
         BAL   @14,SSCMSG                                          1127
*                     GETDRC=LASTCC04;/*                     @ZD00050*/
         LA    GETDRC,4                                            1128
*                     I3='FF'X;     /* ERROR. KILL LOOP      @ZD00050*/
         LA    I3,255                                              1129
*                   END;            /*                       @ZD00050*/
*               END;                /*                       @ZD00050*/
@RC01121 DS    0H                                                  1132
*           END;                    /*                       @ZD00050*/
@RF01110 AL    I3,@CF00223                                         1132
         C     I3,@CF00589                                         1132
         BNH   @DL01108                                            1132
*         END;                      /*                       @ZD00050*/
*     END;                          /*                       @ZD00050*/
@RF01106 DS    0H                                                  1135
*   IF GETDTYPE=TABL THEN                                          1135
*                                                                  1135
@RF01070 L     @07,@PC00005                                        1135
         CLC   GETDTYPE(4,@07),@CC01352                            1135
         BNE   @RF01135                                            1135
*     /***************************************************************/
*     /*                                                             */
*     /* READ MSC TABLES RECORD. ADDRESS OF RECORD(CHR)      @Z40LB40*/
*     /* IS AT GETDSEC.                                      @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1136
*     DO;                           /*                       @Z40LB40*/
*                                                                  1136
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR INVALID TRACKS ON CYLINDER 7.            @Z40LB40*/
*       /* THE ONLY VALID TRACK IS TRACK 1.                  @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1137
*       IF GETDCC='07'X THEN        /* IS THIS CYL. 7        @Z40LB40*/
         L     @07,@PC00005+4                                      1137
         CLI   GETDCC(@07),7                                       1137
         BNE   @RF01137                                            1137
*         IF GETDHH^='01'X THEN     /* YES,IS THIS TRK 1     @Z40LB40*/
         CLI   GETDHH(@07),1                                       1138
         BE    @RF01138                                            1138
*           GETDRC=LASTCC04;        /* YES, SET RETURN CD    @Z40LB40*/
*                                                                  1139
         LA    GETDRC,4                                            1139
*       /*************************************************************/
*       /*                                                           */
*       /* IF RETURN CODE NOT SET THIS MEANS                 @Z40LB40*/
*       /* THAT A VALID CHR IS SPECIFIED                     @Z40LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1140
*       IF GETDRC=LASTCC00 THEN                                    1140
@RF01138 DS    0H                                                  1140
@RF01137 LTR   GETDRC,GETDRC                                       1140
         BNZ   @RF01140                                            1140
*         DO;                       /* READ TABLES REC       @Z40LB40*/
*           PARMLST=''B;            /* CLEAR ICBQUERY LIST   @Z40LB40*/
         XC    PARMLST(44),PARMLST                                 1142
*           QTID=NULLTAB;           /* SET TABLE ID          @Z40LB40*/
         L     @07,QUERYPTR                                        1143
         MVI   QTID(@07),B'11110000'                               1143
*           QTFLAG=CHRREAD;         /* SET READ BY CHR       @Z40LB40*/
         MVI   QTFLAG(@07),B'00010001'                             1144
*           QTDASCHR=GETDSEC;       /* SET CCHHRR            @Z40LB40*/
         L     @02,@PC00005+4                                      1145
         L     @02,GETDSEC(,@02)                                   1145
         ST    @02,QTDASCHR(,@07)                                  1145
*           QUPTR=ADDR(RTAREA);     /* SET RETURN ADDR       @Z40LB40*/
         LA    @02,RTAREA                                          1146
         ST    @02,QUPTR(,@07)                                     1146
*           CALL IDCSASS0(GDTTBL,RDMSCTBL,QUERYPTR,REASON);/* READ 1147
*                                      REC                   @Z40LB40*/
         L     @07,@PC00001                                        1147
         ST    @07,@AL00001                                        1147
         LA    @02,RDMSCTBL                                        1147
         ST    @02,@AL00001+4                                      1147
         LA    @02,QUERYPTR                                        1147
         ST    @02,@AL00001+8                                      1147
         LA    @02,REASON                                          1147
         ST    @02,@AL00001+12                                     1147
         MVI   @AL00001+12,X'80'                                   1147
         L     @15,GDTSSC(,@07)                                    1147
         LA    @01,@AL00001                                        1147
         BALR  @14,@15                                             1147
*           RESPECIFY                                              1148
*             RTNREG RSTD;                                         1148
*           TESTRC=RTNREG;                                         1149
         LR    TESTRC,RTNREG                                       1149
*           RESPECIFY                                              1150
*             RTNREG UNRSTD;        /*                       @Z40LB40*/
*           IF TESTRC=0 THEN                                       1151
         LTR   TESTRC,TESTRC                                       1151
         BNZ   @RF01151                                            1151
*             DO;                   /*                       @Z40LB40*/
*               MSPTR=MEMPTR;       /* SET AREA ADDRESS      @Z40LB40*/
         L     MSPTR,MEMPTR                                        1153
*               MEMSECT=RTRECB;     /* SAVE RECORD           @Z40LB40*/
         MVC   MEMSECT(256,MSPTR),RTRECB                           1154
*               PREFIX=RTPREFIX;    /* SAVE REC PREFIX       @Z40LB40*/
         MVC   PREFIX(8),RTPREFIX                                  1155
*             END;                  /*                       @Z40LB40*/
*           ELSE                                                   1157
*             DO;                   /*                       @Z40LB40*/
         B     @RC01151                                            1157
@RF01151 DS    0H                                                  1158
*               CALL SSCMSG(REASON);/* ISSUE USSC MESSAGE    @Z40LB40*/
         LA    @15,REASON                                          1158
         ST    @15,@AL00001                                        1158
         LA    @01,@AL00001                                        1158
         BAL   @14,SSCMSG                                          1158
*               GETDRC=LASTCC04;    /* SET RETURN CODE       @Z40LB40*/
         LA    GETDRC,4                                            1159
*             END;                  /*                       @Z40LB40*/
*         END;                      /*                       @Z40LB40*/
@RC01151 DS    0H                                                  1162
*     END;                          /*                       @Z40LB40*/
@RF01140 DS    0H                                                  1163
*   IF GETDRC^=LASTCC00 THEN        /* TEST FOR ERRORS       @Z40LB40*/
@RF01135 SLR   @07,@07                                             1163
         CR    GETDRC,@07                                          1163
         BE    @RF01163                                            1163
*     DO;                           /* ERRORS FOUND          @Z40LB40*/
*       IF GDTDBG=NULLPTR THEN                                     1165
         L     @15,@PC00001                                        1165
         C     @07,GDTDBG(,@15)                                    1165
         BE    @RT01165                                            1165
*         ;                                                        1166
*       ELSE                                                       1167
*         DO;                                                      1167
*           DMPINDEX=ADDR(DUMPAREA);/* INIT DUMP LIST        @Z40LB40*/
         LA    DMPINDEX,DUMPAREA                                   1168
*           DMPITMNM='PARMLST';                                    1169
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1169
         MVC   DMPITMNM(7,DMPINDEX),@CC01523                       1169
*           DMPITMPT=ADDR(PARMLST);                                1170
         LA    @07,PARMLST                                         1170
         ST    @07,DMPITMPT(,DMPINDEX)                             1170
*           DMPITMLN=LENGTH(PARMLST);                              1171
         MVC   DMPITMLN(2,DMPINDEX),@CH00847                       1171
*           DMPITMTP='H';                                          1172
         MVI   DMPITMTP(DMPINDEX),C'H'                             1172
*           DMPINDEX=DMPINDEX+DMPELEMT;/* DUMP PARM LIST     @Z40LB40*/
         AL    DMPINDEX,@CF00510                                   1173
*           DMPTRM=DMPTRMVL;                                       1174
         MVI   DMPTRM(DMPINDEX),X'FF'                              1174
*         END;                      /*                       @Z40LB40*/
*       IF GDTDBG=NULLPTR THEN                                     1176
@RT01165 L     @07,@PC00001                                        1176
         L     @07,GDTDBG(,@07)                                    1176
         LTR   @07,@07                                             1176
         BZ    @RT01176                                            1176
*         ;                                                        1177
*       ELSE                                                       1178
*         CALL IDCDB010(GDTTBL,'DUCA',ADDR(DUMPAREA));/* DUMP LIST 1178
*                                                            @Z40LB40*/
         L     @07,@PC00001                                        1178
         ST    @07,@AL00001                                        1178
         LA    @15,@CC01510                                        1178
         ST    @15,@AL00001+4                                      1178
         LA    @15,DUMPAREA                                        1178
         ST    @15,@AFTEMPS                                        1178
         LA    @15,@AFTEMPS                                        1178
         ST    @15,@AL00001+8                                      1178
         MVI   @AL00001+8,X'80'                                    1178
         L     @15,GDTDBG(,@07)                                    1178
         LA    @01,@AL00001                                        1178
         BALR  @14,@15                                             1178
*     END;                          /*                       @Z40LB40*/
@RT01176 DS    0H                                                  1180
*   RFY                                                            1180
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
@RF01163 DS    0H                                                  1181
*   REG14=RETADDR2;                 /* SET RETURN POINT      @Z40LB40*/
         L     REG14,RETADDR2                                      1181
*   RETURN CODE(GETDRC);            /* RETURN TO CALLER      @Z40LB40*/
         LR    @15,GETDRC                                          1182
@EL00005 DS    0H                                                  1182
@EF00005 DS    0H                                                  1182
@ER00005 BR    @14                                                 1182
*   RFY                                                            1183
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END GETDATA;                    /*                       @Z40LB40*/
*                                                                  1185
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - PRNTSECT (LEVEL 4)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE INDICATED AREA     @Z40LB40*/
*   /* OF THE 64K WORK AREA IN HEXADECIMAL.                  @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - SECTADDR WHICH IS THE OFFSET INTO THE 64K     @Z40LB40*/
*   /* AREA OF THE FIRST BYTE TO BE PRINTED. NUMBYTES WHICH  @Z40LB40*/
*   /* IS THE NUMBER OF BYTES TO PRINT.                      @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - ONE OR MORE PRINT LINES IN THE FOLLOWING     @Z40LB40*/
*   /* FORMAT. 4 CHARACTER ADDRESS OFFSET FOLLOWED BY UP     @Z40LB40*/
*   /* TO 8 WORDS OF DATA.                                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1185
*PRNTSECT:                                                         1185
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
PRNTSECT DS    0H                                                  1186
*   RFY                                                            1186
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR4=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         ST    REG14,RETADDR4                                      1187
*   RFY                                                            1188
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1189
         L     @07,@PC00001                                        1189
         L     @07,GDTTR2(,@07)                                    1189
         MVC   @TS00001(95),NEWERID2(@07)                          1189
         MVC   OLDERID2(95,@07),@TS00001                           1189
*   NEWID2='DUDA';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@07),@CC01528                              1190
*   PROSET1=SECTADDR;               /* SAVE OFFSET           @Z40LB40*/
         ST    SECTADDR,PROSET1                                    1191
*   PRSTART=MEMPTR+PROSET1;         /* CALC START ADDR.      @Z40LB40*/
         L     @07,PROSET1                                         1192
         AL    @07,MEMPTR                                          1192
         LR    PRSTART,@07                                         1192
*   DO I4=1 TO NUMBYTES BY 32;      /* LOOP THRU P LINES     @Z40LB40*/
         LA    @07,1                                               1193
         ST    @07,I4                                              1193
         B     @DE01193                                            1193
@DL01193 DS    0H                                                  1194
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1194
         MVC   PRINTLN+2(119),PRINTLN+1                            1194
         MVI   PRINTLN,C' '                                        1194
*     UNPK(PRWORK,PROSET);          /* UNPK OFFSET           @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1195
*     TR(PRWORK(5:8),TABLE);        /* TRANSLATE TO EBCDIC   @Z40LB40*/
         TR    PRWORK+4(4),TABLE                                   1196
*     PRINTLNB(1:4)=PRWORK(5:8);    /* OFFSET TO PRINT       @Z40LB40*/
         MVC   PRINTLNB(4),PRWORK+4                                1197
*     PRLNPTR=8;                    /* SET LINE POINTER      @Z40LB40*/
         LA    PRLNPTR,8                                           1198
*     IF(NUMBYTES-I4+1)<32 THEN                                    1199
         LCR   @07,@07                                             1199
         AL    @07,NUMBYTES                                        1199
         AL    @07,@CF00223                                        1199
         C     @07,@CF00225                                        1199
         BNL   @RF01199                                            1199
*       PRBYTES=NUMBYTES-I4+1;      /* EDIT LESS THAN 32     @Z40LB40*/
         LR    PRBYTES,@07                                         1200
*     ELSE                                                         1201
*       PRBYTES=32;                 /* EDIT 32               @Z40LB40*/
         B     @RC01199                                            1201
@RF01199 LA    PRBYTES,32                                          1201
*     K4=0;                         /* INIT GROUP COUNT      @Z40LB40*/
@RC01199 SLR   @07,@07                                             1202
         ST    @07,K4                                              1202
*     DO J4=1 TO PRBYTES BY 4;      /* LOOP THRU WORDS       @Z40LB40*/
         LA    J4,1                                                1203
         B     @DE01203                                            1203
@DL01203 DS    0H                                                  1204
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1204
*       TR(PRWORK(1:8),TABLE);      /* TRANSLATE TO EBCDIC   @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1205
*       IF(PRBYTES-J4)<3 THEN       /* TEST NOT FULLWORD     @Z40LB40*/
         LR    @15,PRBYTES                                         1206
         SLR   @15,J4                                              1206
         C     @15,@CF00166                                        1206
         BNL   @RF01206                                            1206
*         DO;                       /* NOT FULLWORD          @Z40LB40*/
*           IF(PRBYTES-J4)=2 THEN   /* TEST FOR 3 BYTES      @Z40LB40*/
         C     @15,@CF00157                                        1208
         BNE   @RF01208                                            1208
*             PRINTLNB(PRLNPTR:PRLNPTR+5)=PRWORK;/* MOVE 3   @Z40LB40*/
         LA    @01,PRINTLNB-1(PRLNPTR)                             1209
         MVC   0(6,@01),PRWORK                                     1209
*           ELSE                                                   1210
*             IF(PRBYTES-J4)=1 THEN /* TEST FOR 2 BYTES      @Z40LB40*/
         B     @RC01208                                            1210
@RF01208 LR    @15,PRBYTES                                         1210
         SLR   @15,J4                                              1210
         C     @15,@CF00223                                        1210
         BNE   @RF01210                                            1210
*               PRINTLNB(PRLNPTR:PRLNPTR+3)=PRWORK;/* MOVE 2 @Z40LB40*/
         LA    @01,PRINTLNB-1(PRLNPTR)                             1211
         MVC   0(4,@01),PRWORK                                     1211
*             ELSE                                                 1212
*               PRINTLNB(PRLNPTR:PRLNPTR+1)=PRWORK;/* MOVE 1 @Z40LB40*/
         B     @RC01210                                            1212
@RF01210 LA    @01,PRINTLNB-1(PRLNPTR)                             1212
         MVC   0(2,@01),PRWORK                                     1212
*         END;                      /*                       @Z40LB40*/
*       ELSE                        /* FULLWORD              @Z40LB40*/
*         PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE 4 BYTES @Z40LB40*/
         B     @RC01206                                            1214
@RF01206 LA    @01,PRINTLNB-1(PRLNPTR)                             1214
         MVC   0(8,@01),PRWORK                                     1214
*       PRSTART=PRSTART+4;          /* BUMP TO NEXT WORD     @Z40LB40*/
@RC01206 LA    @15,4                                               1215
         ALR   PRSTART,@15                                         1215
*       K4=K4+1;                    /* BUMP GROUP COUNT      @Z40LB40*/
         LA    @14,1                                               1216
         AL    @14,K4                                              1216
         ST    @14,K4                                              1216
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1217
*       IF K4=4 THEN                                               1218
         CR    @14,@15                                             1218
         BNE   @RF01218                                            1218
*         PRLNPTR=PRLNPTR+2;        /* ADD TWO SPACES        @Z40LB40
*                                      AFTER 4 WORDS         @Z40LB40*/
         AL    PRLNPTR,@CF00157                                    1219
*     END;                          /*                       @Z40LB40*/
@RF01218 AL    J4,@CF00044                                         1220
@DE01203 CR    J4,PRBYTES                                          1220
         BNH   @DL01203                                            1220
*     PROSET1=PROSET1+32;           /* BUMP OFFSET           @Z40LB40*/
         LA    @07,32                                              1221
         AL    @07,PROSET1                                         1221
         ST    @07,PROSET1                                         1221
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1222
*   END;                            /*                       @Z40LB40*/
         LA    @07,32                                              1223
         AL    @07,I4                                              1223
         ST    @07,I4                                              1223
@DE01193 C     @07,NUMBYTES                                        1223
         BNH   @DL01193                                            1223
*   RFY                                                            1224
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR4;                 /* RESET RETURN POINT    @Z40LB40*/
         L     REG14,RETADDR4                                      1225
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00006 DS    0H                                                  1226
@EF00006 DS    0H                                                  1226
@ER00006 BR    @14                                                 1226
*   RFY                                                            1227
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END PRNTSECT;                   /*                       @Z40LB40*/
*                                                                  1229
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - ZEROBDY (LEVEL 3)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS ALL ZERO BOUNDARY      @Z40LB40*/
*   /* WORDS. THEY ARE THE WORDS WHOSE ADDRESSES ARE XX00    @Z40LB40*/
*   /* WHERE XX = 00 THROUGH 7F.                             @Z40LB40*/
*   /* THE SAME WORDS ARE PRINTED FOR MSC AND STAGING        @Z40LB40*/
*   /* ADAPTERS.                                             @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE ABOVE DEFINED       @Z40LB40*/
*   /* WORDS. THERE IS NO RETURN CODE.                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1229
*ZEROBDY:                                                          1229
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
ZEROBDY  DS    0H                                                  1230
*   RFY                                                            1230
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1231
*   RFY                                                            1232
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1233
         L     @07,@PC00001                                        1233
         L     @05,GDTTR2(,@07)                                    1233
         MVC   @TS00001(95),NEWERID2(@05)                          1233
         MVC   OLDERID2(95,@05),@TS00001                           1233
*   NEWID2='DUCB';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@05),@CC01535                              1234
*/*  ISSUE UPRINT FOR HEADLINES                              @Z40LB40*/
*                                                                  1235
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1235
*   DARGSMOD=DUMSGMOD;              /* SET TEXT MOD          @Z40LB40*/
         L     @05,DDSTRU                                          1236
         MVC   DARGSMOD(3,@05),@CC01334                            1236
*   DARGSENT=HZBDY;                 /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@05),X'0D'                                 1237
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS      @Z40LB40*/
         ST    @07,@AL00001                                        1238
         LA    @05,PRPTR                                           1238
         ST    @05,@AL00001+4                                      1238
         LA    @05,DDSTRU                                          1238
         ST    @05,@AL00001+8                                      1238
         MVI   @AL00001+8,X'80'                                    1238
         L     @15,GDTPRT(,@07)                                    1238
         LA    @01,@AL00001                                        1238
         BALR  @14,@15                                             1238
*   I3='0000'X;                     /* SET START ADDRESS     @Z40LB40*/
         SLR   @07,@07                                             1239
         LR    I3,@07                                              1239
*   DO J3='0000'X TO'000F'X;        /* LOOP 16 TIMES         @Z40LB40*/
         SLR   @05,@05                                             1240
         LR    J3,@05                                              1240
@DL01240 DS    0H                                                  1241
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1241
         MVC   PRINTLN+2(119),PRINTLN+1                            1241
         MVI   PRINTLN,C' '                                        1241
*     PROSET1=J3;                   /* SAVE LINE VALUE       @Z40LB40*/
         ST    J3,PROSET1                                          1242
*     UNPK(PRWORK,PROSET);          /* UNPK LINE VALUE       @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1243
*     TR(PRWORK(8:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+7(1),TABLE                                   1244
*     PRINTLNB(1:1)=PRWORK(8:8);    /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB(1),PRWORK+7                                1245
*     PRINTLNB(75:75)=PRWORK(8:8);  /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+74(1),PRWORK+7                             1246
*     PRLNPTR=3;                    /* SET LINE POINTER      @Z40LB40*/
         LA    PRLNPTR,3                                           1247
*     DO K3=I3 TO(I3+'7000'X) BY'1000'X;/* LOOP 8 TIMES      @Z40LB40*/
         LR    @05,I3                                              1248
         ST    @05,K3                                              1248
         B     @DE01248                                            1248
@DL01248 DS    0H                                                  1249
*       PRSTART=K3+MEMPTR;          /* CALC WORD ADDRESS     @Z40LB40*/
         L     @02,K3                                              1249
         LR    PRSTART,@02                                         1249
         AL    PRSTART,MEMPTR                                      1249
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1250
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1251
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @05,PRINTLNB-1(PRLNPTR)                             1252
         MVC   0(8,@05),PRWORK                                     1252
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1253
*     END;                          /*                       @Z40LB40*/
         AL    @02,@CF01539                                        1254
         LR    @05,@02                                             1254
         ST    @05,K3                                              1254
@DE01248 LR    @02,I3                                              1254
         AL    @02,@CF01538                                        1254
         CR    @05,@02                                             1254
         BNH   @DL01248                                            1254
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1255
*     I3=I3+'0100'X;                /* BUMP START ADDRESS    @Z40LB40*/
         AL    I3,@CF01540                                         1256
*   END;                            /*                       @Z40LB40*/
         AL    J3,@CF00223                                         1257
         C     J3,@CF01536                                         1257
         BNH   @DL01240                                            1257
*   RFY                                                            1258
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1259
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00007 DS    0H                                                  1260
@EF00007 DS    0H                                                  1260
@ER00007 BR    @14                                                 1260
*   RFY                                                            1261
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END ZEROBDY;                    /*                       @Z40LB40*/
*                                                                  1263
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - JOBLISTS (LEVEL 3)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC JOBLIST        @Z40LB40*/
*   /* STATUS BLOCKS AND JOBLISTS.                           @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE ABOVE DEFINED       @Z40LB40*/
*   /* AREAS. SEE REFERENCES TO SECTADDR FOR                 @Z40LB40*/
*   /* ACTUAL LOCATION OF EACH AREA PRINTED.                 @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1263
*JOBLISTS:                                                         1263
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
JOBLISTS DS    0H                                                  1264
*   RFY                                                            1264
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1265
*   RFY                                                            1266
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1267
         L     @07,@PC00001                                        1267
         L     @02,GDTTR2(,@07)                                    1267
         MVC   @TS00001(95),NEWERID2(@02)                          1267
         MVC   OLDERID2(95,@02),@TS00001                           1267
*   NEWID2='DUCC';                  /*                       @Z40LB40*/
*                                                                  1268
         MVC   NEWID2(4,@02),@CC01544                              1268
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR JOBLIST STATUS BLOCKS HEADER         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1269
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1269
*   DARGSMOD=DUMSGMOD;              /* SET TEXT MOD          @Z40LB40*/
         L     @02,DDSTRU                                          1270
         MVC   DARGSMOD(3,@02),@CC01334                            1270
*   DARGSENT=HJSB;                  /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@02),X'0E'                                 1271
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS      @Z40LB40*/
         ST    @07,@AL00001                                        1272
         LA    @02,PRPTR                                           1272
         ST    @02,@AL00001+4                                      1272
         LA    @02,DDSTRU                                          1272
         ST    @02,@AL00001+8                                      1272
         MVI   @AL00001+8,X'80'                                    1272
         L     @15,GDTPRT(,@07)                                    1272
         LA    @01,@AL00001                                        1272
         BALR  @14,@15                                             1272
*   SECTADDR='0300'X;               /* SET SECT ADDR         @Z40LB40*/
         LA    SECTADDR,768                                        1273
*   NUMBYTES=4;                     /* PRINT 4 BYTES         @Z40LB40*/
         MVC   NUMBYTES(4),@CF00044                                1274
*   CALL PRNTSECT;                  /* PRINT BLOCK PTR       @Z40LB40*/
         BAL   @14,PRNTSECT                                        1275
*   SECTADDR='0310'X;               /* SET SECT ADDR         @Z40LB40*/
         LA    SECTADDR,784                                        1276
*   NUMBYTES=32;                    /* PRINT 32 BYTES        @Z40LB40*/
         MVC   NUMBYTES(4),@CF00225                                1277
*   CALL PRNTSECT;                  /* PRINT BLOCKS          @Z40LB40*/
*                                                                  1278
         BAL   @14,PRNTSECT                                        1278
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP JOBLIST SECTORS 1200 THROUGH 1000                @ZD00050*/
*   /* ISSUE UPRINT FOR JOBLIST HEADER                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1279
*   DO I3='1200'X TO'1000'X BY-'0100'X;/*                    @ZD00050*/
         L     I3,@CF01547                                         1279
@DL01279 DS    0H                                                  1280
*     PRINTAB=''B;                  /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1280
*     DARGSMOD=DUMSGMOD;            /* SET TEXT MOD          @Z40LB40*/
         L     @07,DDSTRU                                          1281
         MVC   DARGSMOD(3,@07),@CC01334                            1281
*     DARGSENT=HJL;                 /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@07),X'0F'                                 1282
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS    @Z40LB40*/
         L     @07,@PC00001                                        1283
         ST    @07,@AL00001                                        1283
         LA    @05,PRPTR                                           1283
         ST    @05,@AL00001+4                                      1283
         LA    @05,DDSTRU                                          1283
         ST    @05,@AL00001+8                                      1283
         MVI   @AL00001+8,X'80'                                    1283
         L     @15,GDTPRT(,@07)                                    1283
         LA    @01,@AL00001                                        1283
         BALR  @14,@15                                             1283
*     SECTADDR=I3;                  /* SET SECT ADDR         @Z40LB40*/
         LR    SECTADDR,I3                                         1284
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1285
*     CALL PRNTSECT;                /* PRINT JOBLIST         @Z40LB40*/
         BAL   @14,PRNTSECT                                        1286
*   END;                            /*                       @ZD00050*/
*                                                                  1287
         AL    I3,@CF01743                                         1287
         C     I3,@CF01539                                         1287
         BNL   @DL01279                                            1287
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP JOBLIST SECTORS 7B00 THROUGH 7800                @Z40LB40*/
*   /* ISSUE UPRINT FOR JOBLIST HEADER                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1288
*   DO I3='7B00'X TO'7800'X BY-'0100'X;/*                    @ZD00050*/
         L     I3,@CF01548                                         1288
@DL01288 DS    0H                                                  1289
*     PRINTAB=''B;                  /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1289
*     DARGSMOD=DUMSGMOD;            /* SET TEXT MOD          @Z40LB40*/
         L     @07,DDSTRU                                          1290
         MVC   DARGSMOD(3,@07),@CC01334                            1290
*     DARGSENT=HJL;                 /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@07),X'0F'                                 1291
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS    @Z40LB40*/
         L     @07,@PC00001                                        1292
         ST    @07,@AL00001                                        1292
         LA    @05,PRPTR                                           1292
         ST    @05,@AL00001+4                                      1292
         LA    @05,DDSTRU                                          1292
         ST    @05,@AL00001+8                                      1292
         MVI   @AL00001+8,X'80'                                    1292
         L     @15,GDTPRT(,@07)                                    1292
         LA    @01,@AL00001                                        1292
         BALR  @14,@15                                             1292
*     SECTADDR=I3;                  /* SET SECT ADDR         @Z40LB40*/
         LR    SECTADDR,I3                                         1293
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1294
*     CALL PRNTSECT;                /* PRINT JOBLIST         @Z40LB40*/
         BAL   @14,PRNTSECT                                        1295
*   END;                            /*                       @ZD00050*/
*                                                                  1296
         AL    I3,@CF01743                                         1296
         C     I3,@CF01549                                         1296
         BNL   @DL01288                                            1296
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP JOBLIST SECTOR 3B00                              @Z40LB40*/
*   /* ISSUE UPRINT FOR JOBLIST HEADER                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1297
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1297
*   DARGSMOD=DUMSGMOD;              /* SET TEXT MOD          @Z40LB40*/
         L     @07,DDSTRU                                          1298
         MVC   DARGSMOD(3,@07),@CC01334                            1298
*   DARGSENT=HJL;                   /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@07),X'0F'                                 1299
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS      @Z40LB40*/
         L     @07,@PC00001                                        1300
         ST    @07,@AL00001                                        1300
         LA    @02,PRPTR                                           1300
         ST    @02,@AL00001+4                                      1300
         LA    @02,DDSTRU                                          1300
         ST    @02,@AL00001+8                                      1300
         MVI   @AL00001+8,X'80'                                    1300
         L     @15,GDTPRT(,@07)                                    1300
         LA    @01,@AL00001                                        1300
         BALR  @14,@15                                             1300
*   SECTADDR='3B00'X;               /* SET SECT ADDR         @Z40LB40*/
         L     SECTADDR,@CF01550                                   1301
*   NUMBYTES=SECTSIZE;              /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1302
*   CALL PRNTSECT;                  /* PRINT JOBLIST         @Z40LB40*/
         BAL   @14,PRNTSECT                                        1303
*   RFY                                                            1304
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1305
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00008 DS    0H                                                  1306
@EF00008 DS    0H                                                  1306
@ER00008 BR    @14                                                 1306
*   RFY                                                            1307
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END JOBLISTS;                   /*                       @Z40LB40*/
*                                                                  1309
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - IOBUFFS (LEVEL 3)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS MSC I/O BUFFER         @Z40LB40*/
*   /* CONTROL WORDS AND THEIR ASSOCIATED I/O BUFFERS.       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE ABOVE DEFINED       @Z40LB40*/
*   /* AREAS. SEE REFERENCE TO SECTADDR FOR ACTUAL           @Z40LB40*/
*   /* LOCATION OF EACH AREA PRINTED.                        @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1309
*IOBUFFS:                                                          1309
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
IOBUFFS  DS    0H                                                  1310
*   RFY                                                            1310
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1311
*   RFY                                                            1312
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1313
         L     @07,@PC00001                                        1313
         L     @02,GDTTR2(,@07)                                    1313
         MVC   @TS00001(95),NEWERID2(@02)                          1313
         MVC   OLDERID2(95,@02),@TS00001                           1313
*   NEWID2='DUCD';                  /*                       @Z40LB40*/
*                                                                  1314
         MVC   NEWID2(4,@02),@CC01554                              1314
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR I/O BUFFER CONTROL WORD HEADLINES    @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1315
*   PRINTAB=''B;                    /* CLEAR ARG LIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1315
*   DARGSMOD=DUMSGMOD;              /* SET TEXT MOD          @Z40LB40*/
         L     @02,DDSTRU                                          1316
         MVC   DARGSMOD(3,@02),@CC01334                            1316
*   DARGSENT=HIOBCW;                /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@02),X'10'                                 1317
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS      @Z40LB40*/
         ST    @07,@AL00001                                        1318
         LA    @02,PRPTR                                           1318
         ST    @02,@AL00001+4                                      1318
         LA    @02,DDSTRU                                          1318
         ST    @02,@AL00001+8                                      1318
         MVI   @AL00001+8,X'80'                                    1318
         L     @15,GDTPRT(,@07)                                    1318
         LA    @01,@AL00001                                        1318
         BALR  @14,@15                                             1318
*   PRINTLN=' ';                    /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1319
         MVC   PRINTLN+2(119),PRINTLN+1                            1319
         MVI   PRINTLN,C' '                                        1319
*   PRLNPTR=1;                      /* SET LINE POINTER      @Z40LB40*/
*                                                                  1320
         LA    PRLNPTR,1                                           1320
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT I/O BUFFER CONTROL WORDS LOCATED AT -           @Z40LB40*/
*   /* 5800, 5900, 5A00, 5B00, 5C00 AND 5E00                 @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1321
*   DO I3='5800'X TO'5C00'X BY'0100'X;/*                     @Z40LB40*/
         L     I3,@CF01555                                         1321
@DL01321 DS    0H                                                  1322
*     PRSTART=I3+MEMPTR;            /* CALC WORD ADDRESS     @Z40LB40*/
         LR    PRSTART,I3                                          1322
         AL    PRSTART,MEMPTR                                      1322
*     UNPK(PRWORK,PRAREA);          /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1323
*     TR(PRWORK(1:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1324
*     PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE     @Z40LB40*/
         LA    @07,PRINTLNB-1(PRLNPTR)                             1325
         MVC   0(8,@07),PRWORK                                     1325
*     PRLNPTR=PRLNPTR+9;            /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1326
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01540                                         1327
         C     I3,@CF01556                                         1327
         BNH   @DL01321                                            1327
*   PRSTART='5E00'X+MEMPTR;         /* CALC WORD ADDRESS     @Z40LB40*/
         L     PRSTART,@CF01557                                    1328
         AL    PRSTART,MEMPTR                                      1328
*   UNPK(PRWORK,PRAREA);            /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1329
*   TR(PRWORK(1:8),TABLE);          /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1330
*   PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE       @Z40LB40*/
         LA    @07,PRINTLNB-1(PRLNPTR)                             1331
         MVC   0(8,@07),PRWORK                                     1331
*   CALL DOUPRINT;                  /* GO PRINT LINE         @Z40LB40*/
*                                                                  1332
         BAL   @14,DOUPRINT                                        1332
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT I/O BUFFER SECTORS AND THEIR ASSOCIATED         @Z40LB40*/
*   /* PREFIXES. THE PREFIXES ARE THE 8 BYTES IMMEDIATELY    @Z40LB40*/
*   /* PRECEEDING EACH I/O BUFFER SECTOR. THE BUFFERS ARE    @Z40LB40*/
*   /* LOCATED AT 3200, 3400, 3600, 3800, 3A00 AND 3C00.     @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1333
*   DO I3='3200'X TO'3C00'X BY'0200'X;/*                     @Z40LB40*/
*                                                                  1333
         L     I3,@CF01558                                         1333
@DL01333 DS    0H                                                  1334
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT FOR I/O BUFFER HEADLINE                @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1334
*     PRINTAB=''B;                  /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1334
*     DARGSMOD=DUMSGMOD;            /* SET TEXT MOD          @Z40LB40*/
         L     @07,DDSTRU                                          1335
         MVC   DARGSMOD(3,@07),@CC01334                            1335
*     DARGSENT=HIOB;                /* SET ENTRY NO.         @Z40LB40*/
         MVI   DARGSENT(@07),X'11'                                 1336
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/* PRINT HEADERS    @Z40LB40*/
         L     @07,@PC00001                                        1337
         ST    @07,@AL00001                                        1337
         LA    @05,PRPTR                                           1337
         ST    @05,@AL00001+4                                      1337
         LA    @05,DDSTRU                                          1337
         ST    @05,@AL00001+8                                      1337
         MVI   @AL00001+8,X'80'                                    1337
         L     @15,GDTPRT(,@07)                                    1337
         LA    @01,@AL00001                                        1337
         BALR  @14,@15                                             1337
*     SECTADDR=I3-8;                /* SET PREFIX ADDR.      @Z40LB40*/
         LA    @07,8                                               1338
         LR    SECTADDR,I3                                         1338
         SLR   SECTADDR,@07                                        1338
*     NUMBYTES=8;                   /* PRINT 8 BYTES         @Z40LB40*/
         ST    @07,NUMBYTES                                        1339
*     CALL PRNTSECT;                /* PRINT PREFIX          @Z40LB40*/
         BAL   @14,PRNTSECT                                        1340
*     SECTADDR=I3;                  /* SET BUFFER ADDR.      @Z40LB40*/
         LR    SECTADDR,I3                                         1341
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1342
*     CALL PRNTSECT;                /* PRINT BUFFER          @Z40LB40*/
         BAL   @14,PRNTSECT                                        1343
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01560                                         1344
         C     I3,@CF01559                                         1344
         BNH   @DL01333                                            1344
*   RFY                                                            1345
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1346
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00009 DS    0H                                                  1347
@EF00009 DS    0H                                                  1347
@ER00009 BR    @14                                                 1347
*   RFY                                                            1348
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END IOBUFFS;                    /*                       @Z40LB40*/
*                                                                  1350
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - STGSCH (LEVEL 3)                     @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS INFORMATION ABOUT      @Z40LB40*/
*   /* THE MSC STAGE SCHEDULER. THE AREAS PRINTED AND THE    @Z40LB40*/
*   /* LOCATIONS OF THE AREAS ARE -                          @Z40LB40*/
*   /* QCB FIFO QUEUES - 6800 - 256 BYTES                    @ZD00050*/
*   /* QUEUE CONTROL BLOCKS - 6A00 AND 6B00 - EACH 256 BYTES @Z40LB40*/
*   /* LINK POINTERS - 6E00 - 256 BYTES                      @Z40LB40*/
*   /* DEPENDENCY COUNTS - 6F00 - 256 BYTES                  @Z40LB40*/
*   /* SCHEDULE QUEUE BLOCKS - B000 THROUGH BFFF             @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE ABOVE DEFINED       @Z40LB40*/
*   /* AREAS. SEE REFERENCES TO SECTADDR FOR ACTUAL          @Z40LB40*/
*   /* LOCATION OF EACH AREA.                                @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1350
*STGSCH:                                                           1350
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
STGSCH   DS    0H                                                  1351
*   RFY                                                            1351
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1352
*   RFY                                                            1353
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1354
         L     @07,@PC00001                                        1354
         L     @02,GDTTR2(,@07)                                    1354
         MVC   @TS00001(95),NEWERID2(@02)                          1354
         MVC   OLDERID2(95,@02),@TS00001                           1354
*   NEWID2='DUCE';                  /*                       @Z40LB40*/
*                                                                  1355
         MVC   NEWID2(4,@02),@CC01564                              1355
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR FIFO QUEUES HEADER AND PRINT         @ZD00050*/
*   /* FIFO QUEUES.                                          @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1356
*   PRINTAB=''B;                    /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 1356
*   DARGSMOD=DUMSGMOD;              /*                       @ZD00050*/
         L     @02,DDSTRU                                          1357
         MVC   DARGSMOD(3,@02),@CC01334                            1357
*   DARGSENT=HFIFO;                 /*                       @ZD00050*/
         MVI   DARGSENT(@02),X'19'                                 1358
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @ZD00050*/
         ST    @07,@AL00001                                        1359
         LA    @02,PRPTR                                           1359
         ST    @02,@AL00001+4                                      1359
         LA    @02,DDSTRU                                          1359
         ST    @02,@AL00001+8                                      1359
         MVI   @AL00001+8,X'80'                                    1359
         L     @15,GDTPRT(,@07)                                    1359
         LA    @01,@AL00001                                        1359
         BALR  @14,@15                                             1359
*   SECTADDR='6800'X;               /* SET SECTOR ADDR.      @ZD00050*/
         L     SECTADDR,@CF01565                                   1360
*   NUMBYTES=SECTSIZE;              /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF01321                                1361
*   CALL PRNTSECT;                  /* PRINT FIFO QUEUES     @ZD00050*/
*                                                                  1362
         BAL   @14,PRNTSECT                                        1362
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP QUEUE CONTROL BLOCKS                             @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1363
*   DO I3='6A00'X TO'6B00'X BY'0100'X;/*                     @Z40LB40*/
*                                                                  1363
         L     I3,@CF01566                                         1363
@DL01363 DS    0H                                                  1364
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT FOR QUEUE CONTROL BLOCK HEADER         @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1364
*     PRINTAB=''B;                  /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1364
*     DARGSMOD=DUMSGMOD;            /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1365
         MVC   DARGSMOD(3,@07),@CC01334                            1365
*     DARGSENT=HQCB;                /*                       @Z40LB40*/
         MVI   DARGSENT(@07),X'14'                                 1366
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                  @Z40LB40*/
         L     @07,@PC00001                                        1367
         ST    @07,@AL00001                                        1367
         LA    @05,PRPTR                                           1367
         ST    @05,@AL00001+4                                      1367
         LA    @05,DDSTRU                                          1367
         ST    @05,@AL00001+8                                      1367
         MVI   @AL00001+8,X'80'                                    1367
         L     @15,GDTPRT(,@07)                                    1367
         LA    @01,@AL00001                                        1367
         BALR  @14,@15                                             1367
*     SECTADDR=I3;                  /* SET SECTOR ADDR.      @Z40LB40*/
         LR    SECTADDR,I3                                         1368
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1369
*     CALL PRNTSECT;                /* PRINT QCB             @Z40LB40*/
         BAL   @14,PRNTSECT                                        1370
*   END;                            /*                       @Z40LB40*/
*                                                                  1371
         AL    I3,@CF01540                                         1371
         C     I3,@CF01567                                         1371
         BNH   @DL01363                                            1371
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR DEPENDENCY COUNTS HEADER             @ZA14731*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1372
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1372
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1373
         MVC   DARGSMOD(3,@07),@CC01334                            1373
*   DARGSENT=HDC;                   /*                       @ZA14731*/
         MVI   DARGSENT(@07),X'16'                                 1374
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         L     @07,@PC00001                                        1375
         ST    @07,@AL00001                                        1375
         LA    @02,PRPTR                                           1375
         ST    @02,@AL00001+4                                      1375
         LA    @02,DDSTRU                                          1375
         ST    @02,@AL00001+8                                      1375
         MVI   @AL00001+8,X'80'                                    1375
         L     @15,GDTPRT(,@07)                                    1375
         LA    @01,@AL00001                                        1375
         BALR  @14,@15                                             1375
*   SECTADDR='6E00'X;               /* SET SECTOR ADDR.      @Z40LB40*/
         L     SECTADDR,@CF01568                                   1376
*   NUMBYTES=SECTSIZE;              /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1377
*   CALL PRNTSECT;                  /* PRINT LINK PTRS       @Z40LB40*/
*                                                                  1378
         BAL   @14,PRNTSECT                                        1378
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR LINK POINTERS HEADER                 @ZA14731*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1379
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1379
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1380
         MVC   DARGSMOD(3,@07),@CC01334                            1380
*   DARGSENT=HLP;                   /*                       @ZA14731*/
         MVI   DARGSENT(@07),X'15'                                 1381
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         L     @07,@PC00001                                        1382
         ST    @07,@AL00001                                        1382
         LA    @02,PRPTR                                           1382
         ST    @02,@AL00001+4                                      1382
         LA    @02,DDSTRU                                          1382
         ST    @02,@AL00001+8                                      1382
         MVI   @AL00001+8,X'80'                                    1382
         L     @15,GDTPRT(,@07)                                    1382
         LA    @01,@AL00001                                        1382
         BALR  @14,@15                                             1382
*   SECTADDR='6F00'X;               /* SET SECTOR ADDR.      @Z40LB40*/
         L     SECTADDR,@CF01569                                   1383
*   NUMBYTES=SECTSIZE;              /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1384
*   CALL PRNTSECT;                  /* PRINT DEPEND.CNTS.    @Z40LB40*/
*                                                                  1385
         BAL   @14,PRNTSECT                                        1385
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SCHEDULE QUEUE BLOCKS.                          @ZD00038*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1386
*   DO I3='B000'X TO'BF00'X BY'0100'X;/*                     @Z40LB40*/
*                                                                  1386
         L     I3,@CF01570                                         1386
@DL01386 DS    0H                                                  1387
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT FOR SCHEDULE QUEUE BLOCK HEADER        @ZD00038*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1387
*     PRINTAB=''B;                  /*                       @ZD00038*/
         XC    PRINTAB(44),PRINTAB                                 1387
*     DARGSMOD=DUMSGMOD;            /*                       @ZD00038*/
         L     @07,DDSTRU                                          1388
         MVC   DARGSMOD(3,@07),@CC01334                            1388
*     DARGSENT=HISQB;               /*                       @ZD00038*/
         MVI   DARGSENT(@07),X'1B'                                 1389
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                  @ZD00038*/
         L     @07,@PC00001                                        1390
         ST    @07,@AL00001                                        1390
         LA    @05,PRPTR                                           1390
         ST    @05,@AL00001+4                                      1390
         LA    @05,DDSTRU                                          1390
         ST    @05,@AL00001+8                                      1390
         MVI   @AL00001+8,X'80'                                    1390
         L     @15,GDTPRT(,@07)                                    1390
         LA    @01,@AL00001                                        1390
         BALR  @14,@15                                             1390
*     SECTADDR=I3;                  /* SET SECTOR ADDR.      @ZD00038*/
         LR    SECTADDR,I3                                         1391
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @ZD00038*/
         MVC   NUMBYTES(4),@CF01321                                1392
*     CALL PRNTSECT;                /* PRINT BLOCK           @ZD00038*/
         BAL   @14,PRNTSECT                                        1393
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01540                                         1394
         C     I3,@CF01571                                         1394
         BNH   @DL01386                                            1394
*   RFY                                                            1395
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1396
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00010 DS    0H                                                  1397
@EF00010 DS    0H                                                  1397
@ER00010 BR    @14                                                 1397
*   RFY                                                            1398
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END STGSCH;                     /*                       @Z40LB40*/
*                                                                  1400
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - UCBS (LEVEL 3)                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC UNIT CONTROL   @Z40LB40*/
*   /* BLOCKS.                                               @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE UCBS. SEE           @Z40LB40*/
*   /* REFERENCES TO SECTADDR FOR ACTUAL LOCATION OF         @Z40LB40*/
*   /* THE UCBS.                                             @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1400
*UCBS:                                                             1400
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
UCBS     DS    0H                                                  1401
*   RFY                                                            1401
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1402
*   RFY                                                            1403
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1404
         L     @07,@PC00001                                        1404
         L     @07,GDTTR2(,@07)                                    1404
         MVC   @TS00001(95),NEWERID2(@07)                          1404
         MVC   OLDERID2(95,@07),@TS00001                           1404
*   NEWID2='DUCF';                  /*                       @Z40LB40*/
*                                                                  1405
         MVC   NEWID2(4,@07),@CC01575                              1405
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SECTORS 7C00 THRU 7F00 WHICH CONTAIN THE UCBS   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1406
*   DO I3='7C00'X TO'7F00'X BY'0100'X;/*                     @Z40LB40*/
*                                                                  1406
         L     I3,@CF01576                                         1406
@DL01406 DS    0H                                                  1407
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT FOR UNIT CONTROL BLOCK HEADER          @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1407
*     PRINTAB=''B;                  /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1407
*     DARGSMOD=DUMSGMOD;            /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1408
         MVC   DARGSMOD(3,@07),@CC01334                            1408
*     DARGSENT=HUCB;                /*                       @Z40LB40*/
         MVI   DARGSENT(@07),X'1E'                                 1409
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                  @Z40LB40*/
         L     @07,@PC00001                                        1410
         ST    @07,@AL00001                                        1410
         LA    @05,PRPTR                                           1410
         ST    @05,@AL00001+4                                      1410
         LA    @05,DDSTRU                                          1410
         ST    @05,@AL00001+8                                      1410
         MVI   @AL00001+8,X'80'                                    1410
         L     @15,GDTPRT(,@07)                                    1410
         LA    @01,@AL00001                                        1410
         BALR  @14,@15                                             1410
*     SECTADDR=I3;                  /* SET SECTOR ADDR.      @Z40LB40*/
         LR    SECTADDR,I3                                         1411
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1412
*     CALL PRNTSECT;                /* PRINT UCB             @Z40LB40*/
         BAL   @14,PRNTSECT                                        1413
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01540                                         1414
         C     I3,@CF01577                                         1414
         BNH   @DL01406                                            1414
*   RFY                                                            1415
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1416
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00011 DS    0H                                                  1417
@EF00011 DS    0H                                                  1417
@ER00011 BR    @14                                                 1417
*   RFY                                                            1418
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END UCBS;                       /*                       @Z40LB40*/
*                                                                  1420
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - ERP (LEVEL 3)                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC ERROR          @Z40LB40*/
*   /* RECOVERY INFORMATION SECTORS.                         @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE ERP SECTORS.        @Z40LB40*/
*   /* SEE REFERENCES TO SECTADDR FOR ACTUAL LOCATION OF     @Z40LB40*/
*   /* THE ERP SECTORS.                                      @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1420
*ERP:                                                              1420
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
ERP      DS    0H                                                  1421
*   RFY                                                            1421
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1422
*   RFY                                                            1423
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1424
         L     @07,@PC00001                                        1424
         L     @07,GDTTR2(,@07)                                    1424
         MVC   @TS00001(95),NEWERID2(@07)                          1424
         MVC   OLDERID2(95,@07),@TS00001                           1424
*   NEWID2='DUCG';                  /*                       @Z40LB40*/
*                                                                  1425
         MVC   NEWID2(4,@07),@CC01581                              1425
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SECTORS 0100 AND 0200 WHICH CONTAIN THE ERP     @Z40LB40*/
*   /* INFORMATION                                           @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1426
*   DO I3='0100'X TO'0200'X BY'0100'X;/*                     @Z40LB40*/
*                                                                  1426
         LA    I3,256                                              1426
@DL01426 DS    0H                                                  1427
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT FOR ERP INFORMATION HEADER             @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1427
*     PRINTAB=''B;                  /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1427
*     DARGSMOD=DUMSGMOD;            /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1428
         MVC   DARGSMOD(3,@07),@CC01334                            1428
*     DARGSENT=HERI;                /*                       @Z40LB40*/
         MVI   DARGSENT(@07),X'1F'                                 1429
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                  @Z40LB40*/
         L     @07,@PC00001                                        1430
         ST    @07,@AL00001                                        1430
         LA    @05,PRPTR                                           1430
         ST    @05,@AL00001+4                                      1430
         LA    @05,DDSTRU                                          1430
         ST    @05,@AL00001+8                                      1430
         MVI   @AL00001+8,X'80'                                    1430
         L     @15,GDTPRT(,@07)                                    1430
         LA    @01,@AL00001                                        1430
         BALR  @14,@15                                             1430
*     SECTADDR=I3;                  /* SET SECTOR ADDR.      @Z40LB40*/
         LR    SECTADDR,I3                                         1431
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1432
*     CALL PRNTSECT;                /* PRINT ERP INFO        @Z40LB40*/
         BAL   @14,PRNTSECT                                        1433
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01540                                         1434
         C     I3,@CF01560                                         1434
         BNH   @DL01426                                            1434
*   RFY                                                            1435
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1436
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00012 DS    0H                                                  1437
@EF00012 DS    0H                                                  1437
@ER00012 BR    @14                                                 1437
*   RFY                                                            1438
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END ERP;                        /*                       @Z40LB40*/
*                                                                  1440
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - LOWSENSE (LEVEL 3)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC LOWER          @Z40LB40*/
*   /* INTERFACE SENSE DATA.                                 @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE LOWER INTERFACE     @Z40LB40*/
*   /* SENSE DATA. SEE REFERENCES TO SECTADDR FOR ACTUAL     @Z40LB40*/
*   /* LOCATION OF THE DATA.                                 @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1440
*LOWSENSE:                                                         1440
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
LOWSENSE DS    0H                                                  1441
*   RFY                                                            1441
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1442
*   RFY                                                            1443
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1444
         L     @07,@PC00001                                        1444
         L     @02,GDTTR2(,@07)                                    1444
         MVC   @TS00001(95),NEWERID2(@02)                          1444
         MVC   OLDERID2(95,@02),@TS00001                           1444
*   NEWID2='DUCH';                  /*                       @Z40LB40*/
*                                                                  1445
         MVC   NEWID2(4,@02),@CC01585                              1445
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT 28 BYTES OF DATA STARTING AT 1D00 WHICH         @Z40LB40*/
*   /* IS THE LOWER INTERFACE SENSE DATA.                    @Z40LB40*/
*   /* ISSUE UPRINT FOR LOWER INTERFACE HEADER               @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1446
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1446
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @02,DDSTRU                                          1447
         MVC   DARGSMOD(3,@02),@CC01334                            1447
*   DARGSENT=HLISB;                 /*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'20'                                 1448
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1449
         LA    @02,PRPTR                                           1449
         ST    @02,@AL00001+4                                      1449
         LA    @02,DDSTRU                                          1449
         ST    @02,@AL00001+8                                      1449
         MVI   @AL00001+8,X'80'                                    1449
         L     @15,GDTPRT(,@07)                                    1449
         LA    @01,@AL00001                                        1449
         BALR  @14,@15                                             1449
*   SECTADDR='1D00'X;               /* SET SECTOR ADDR.      @Z40LB40*/
         L     SECTADDR,@CF01586                                   1450
*   NUMBYTES=28;                    /* PRINT 28 BYTES        @Z40LB40*/
         MVC   NUMBYTES(4),@CF01415                                1451
*   CALL PRNTSECT;                  /* PRINT SENSE INFO      @Z40LB40*/
         BAL   @14,PRNTSECT                                        1452
*   RFY                                                            1453
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1454
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00013 DS    0H                                                  1455
@EF00013 DS    0H                                                  1455
@ER00013 BR    @14                                                 1455
*   RFY                                                            1456
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END LOWSENSE;                   /*                       @Z40LB40*/
*                                                                  1458
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - MNTEQUAL (LEVEL 3)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC MOUNT          @Z40LB40*/
*   /* EQUALIZATION STATISTICS SECTOR.                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - HEXADECIMAL PRINT OF THE ABOVE DEFINED       @Z40LB40*/
*   /* SECTOR. SEE REFERENCES TO SECTADDR FOR ACTUAL         @Z40LB40*/
*   /* LOCATION OF THE SECTOR.                               @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1458
*MNTEQUAL:                                                         1458
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
MNTEQUAL DS    0H                                                  1459
*   RFY                                                            1459
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1460
*   RFY                                                            1461
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1462
         L     @07,@PC00001                                        1462
         L     @02,GDTTR2(,@07)                                    1462
         MVC   @TS00001(95),NEWERID2(@02)                          1462
         MVC   OLDERID2(95,@02),@TS00001                           1462
*   NEWID2='DUCI';                  /*                       @Z40LB40*/
*                                                                  1463
         MVC   NEWID2(4,@02),@CC01590                              1463
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SECTOR C900 WHICH CONTAINS THE MOUNT            @Z40LB40*/
*   /* EQUALIZATION STATISTICS.                              @Z40LB40*/
*   /* ISSUE UPRINT FOR MOUNT EQUALIZATION HEADER            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1464
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1464
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @02,DDSTRU                                          1465
         MVC   DARGSMOD(3,@02),@CC01334                            1465
*   DARGSENT=HMNTEQ;                /*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'21'                                 1466
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1467
         LA    @02,PRPTR                                           1467
         ST    @02,@AL00001+4                                      1467
         LA    @02,DDSTRU                                          1467
         ST    @02,@AL00001+8                                      1467
         MVI   @AL00001+8,X'80'                                    1467
         L     @15,GDTPRT(,@07)                                    1467
         LA    @01,@AL00001                                        1467
         BALR  @14,@15                                             1467
*   SECTADDR='C900'X;               /* SET SECTOR ADDR.      @Z40LB40*/
         L     SECTADDR,@CF01591                                   1468
*   NUMBYTES=SECTSIZE;              /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1469
*   CALL PRNTSECT;                  /* PRINT SECTOR          @Z40LB40*/
         BAL   @14,PRNTSECT                                        1470
*   RFY                                                            1471
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1472
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00014 DS    0H                                                  1473
@EF00014 DS    0H                                                  1473
@ER00014 BR    @14                                                 1473
*   RFY                                                            1474
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END MNTEQUAL;                   /*                       @Z40LB40*/
*                                                                  1476
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CHRS (LEVEL 3)                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC TABLES         @Z40LB40*/
*   /* STARTING ADDRESSES IN THE FORM OF RECORD CHR.         @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF EACH TABLE'S          @Z40LB40*/
*   /* IDENTIFICATION NUMBER AND THE STARTING CHR            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1476
*CHRS:                                                             1476
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
CHRS     DS    0H                                                  1477
*   RFY                                                            1477
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1478
*   RFY                                                            1479
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1480
         L     @07,@PC00001                                        1480
         L     @15,GDTTR2(,@07)                                    1480
         MVC   @TS00001(95),NEWERID2(@15)                          1480
         MVC   OLDERID2(95,@15),@TS00001                           1480
*   NEWID2='DUCJ';                  /*                       @Z40LB40*/
*                                                                  1481
         MVC   NEWID2(4,@15),@CC01595                              1481
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR THE TWO TABLES HEADERS               @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1482
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1482
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @15,DDSTRU                                          1483
         MVC   DARGSMOD(3,@15),@CC01334                            1483
*   DARGSENT=HTABA;                 /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'22'                                 1484
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1485
         LA    @15,PRPTR                                           1485
         ST    @15,@AL00001+4                                      1485
         LA    @15,DDSTRU                                          1485
         ST    @15,@AL00001+8                                      1485
         MVI   @AL00001+8,X'80'                                    1485
         L     @15,GDTPRT(,@07)                                    1485
         LA    @01,@AL00001                                        1485
         BALR  @14,@15                                             1485
*   DO I3='5000'X TO'50E0'X BY'10'X;/*                       @Z40LB40*/
         L     I3,@CF01596                                         1486
@DL01486 DS    0H                                                  1487
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1487
         MVC   PRINTLN+2(119),PRINTLN+1                            1487
         MVI   PRINTLN,C' '                                        1487
*     PROSET1=I3;                   /* SAVE I3 FOR ID        @Z40LB40*/
         ST    I3,PROSET1                                          1488
*     UNPK(PRWORK,PROSET);          /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1489
*     TR(PRWORK(7:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1490
*     PRINTLNB(1:2)=PRWORK(7:8);    /* ID TO LINE            @Z40LB40*/
         MVC   PRINTLNB(2),PRWORK+6                                1491
*     PRSTART=I3+MEMPTR;            /* CALC WORD ADDR.       @Z40LB40*/
         LR    PRSTART,I3                                          1492
         AL    PRSTART,MEMPTR                                      1492
*     UNPK(PRWORK,PRAREA);          /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1493
*     TR(PRWORK(3:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+2(6),TABLE                                   1494
*     PRINTLNB(4:9)=PRWORK(3:8);    /* CCHHRR TO LINE        @Z40LB40*/
         MVC   PRINTLNB+3(6),PRWORK+2                              1495
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1496
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01598                                         1497
         C     I3,@CF01597                                         1497
         BNH   @DL01486                                            1497
*   RFY                                                            1498
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1499
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00015 DS    0H                                                  1500
@EF00015 DS    0H                                                  1500
@ER00015 BR    @14                                                 1500
*   RFY                                                            1501
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END CHRS;                       /*                       @Z40LB40*/
*                                                                  1503
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - RECOVERY (LEVEL 3)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC RECOVERY       @Z40LB40*/
*   /* SAVE AREA SECTORS.                                    @Z40LB40*/
*   /* THE AREAS ARE USED WHEN THE MANUAL INTERVENTION       @Z40LB40*/
*   /* PROCEDURE IS USED TO BRING THE MSC OUT OF A           @Z40LB40*/
*   /* HANG CONDITION.                                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE RECOVERY          @Z40LB40*/
*   /* SAVE AREA SECTORS. SEE REFERENCES TO SECTADDR         @Z40LB40*/
*   /* FOR ACTUAL LOCATION OF THE SECTORS.                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1503
*RECOVERY:                                                         1503
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
RECOVERY DS    0H                                                  1504
*   RFY                                                            1504
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1505
*   RFY                                                            1506
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1507
         L     @07,@PC00001                                        1507
         L     @07,GDTTR2(,@07)                                    1507
         MVC   @TS00001(95),NEWERID2(@07)                          1507
         MVC   OLDERID2(95,@07),@TS00001                           1507
*   NEWID2='DUCL';                  /*                       @Z40LB40*/
*                                                                  1508
         MVC   NEWID2(4,@07),@CC01602                              1508
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SECTORS 0400 AND 0500 WHICH CONTAIN RECOVERY    @Z40LB40*/
*   /* SAVE AREAS.                                           @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1509
*   DO I3='0400'X TO'0500'X BY'0100'X;/*                     @Z40LB40*/
*                                                                  1509
         LA    I3,1024                                             1509
@DL01509 DS    0H                                                  1510
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT FOR RECOVERY SAVE AREA HEADER          @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1510
*     PRINTAB=''B;                  /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1510
*     DARGSMOD=DUMSGMOD;            /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1511
         MVC   DARGSMOD(3,@07),@CC01334                            1511
*     DARGSENT=HRECOV;              /*                       @Z40LB40*/
         MVI   DARGSENT(@07),X'24'                                 1512
*     CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                  @Z40LB40*/
         L     @07,@PC00001                                        1513
         ST    @07,@AL00001                                        1513
         LA    @05,PRPTR                                           1513
         ST    @05,@AL00001+4                                      1513
         LA    @05,DDSTRU                                          1513
         ST    @05,@AL00001+8                                      1513
         MVI   @AL00001+8,X'80'                                    1513
         L     @15,GDTPRT(,@07)                                    1513
         LA    @01,@AL00001                                        1513
         BALR  @14,@15                                             1513
*     SECTADDR=I3;                  /* SET SECTOR ADDRESS    @Z40LB40*/
         LR    SECTADDR,I3                                         1514
*     NUMBYTES=SECTSIZE;            /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1515
*     CALL PRNTSECT;                /* PRINT SAVE AREA       @Z40LB40*/
         BAL   @14,PRNTSECT                                        1516
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF01540                                         1517
         C     I3,@CF01604                                         1517
         BNH   @DL01509                                            1517
*   RFY                                                            1518
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1519
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00016 DS    0H                                                  1520
@EF00016 DS    0H                                                  1520
@ER00016 BR    @14                                                 1520
*   RFY                                                            1521
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END RECOVERY;                   /*                       @Z40LB40*/
*                                                                  1523
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VAD (LEVEL 3)                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING ADAPTER    @Z40LB40*/
*   /* VIRTUAL ADDRESS DIRECTORY (VAD).                      @Z40LB40*/
*   /* THE FOLLOWING SHOWS HOW THE VAD IS STRUCTURED.        @Z40LB40*/
*   /* THE FOUR CHARACTER VALUES SHOWN ARE THE ACTUAL        @Z40LB40*/
*   /* SECTOR ADDRESSES OF EACH WORD IN THE STAGING          @Z40LB40*/
*   /* ADAPTER.                                              @Z40LB40*/
*   /* VUA -CHAN-A-- -CHAN-B-- -CHAN-C-- -CHAN-D--           @Z40LB40*/
*   /* .00 5D00 5E00 5F00 6000 6100 6200 6300 6400           @Z40LB40*/
*   /* .01 5D04 5E04 5F04 6004 6104 6204 6304 6404           @Z40LB40*/
*   /* ...                                                   @Z40LB40*/
*   /* .3F ---- ---- 5FFC 60FC 61FC 62FC 63FC 64FC           @Z40LB40*/
*   /* NOTE-CHANNEL A HAS VALUES FOR VUA 00-0F ONLY.         @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE VAD.              @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1523
*VAD:                                                              1523
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
VAD      DS    0H                                                  1524
*   RFY                                                            1524
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1525
*   RFY                                                            1526
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1527
         L     @07,@PC00001                                        1527
         L     @04,GDTTR2(,@07)                                    1527
         MVC   @TS00001(95),NEWERID2(@04)                          1527
         MVC   OLDERID2(95,@04),@TS00001                           1527
*   NEWID2='DUCM';                  /*                       @Z40LB40*/
*                                                                  1528
         MVC   NEWID2(4,@04),@CC01608                              1528
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT TO PRINT ALL OF THE VAD HEADERS          @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1529
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1529
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @04,DDSTRU                                          1530
         MVC   DARGSMOD(3,@04),@CC01334                            1530
*   DARGSENT=HVAD;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@04),X'27'                                 1531
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1532
         LA    @04,PRPTR                                           1532
         ST    @04,@AL00001+4                                      1532
         LA    @04,DDSTRU                                          1532
         ST    @04,@AL00001+8                                      1532
         MVI   @AL00001+8,X'80'                                    1532
         L     @15,GDTPRT(,@07)                                    1532
         LA    @01,@AL00001                                        1532
         BALR  @14,@15                                             1532
*   PRSTART=MEMPTR+'5D00'X;         /* SET START ADDRESS     @Z40LB40*/
         L     PRSTART,@CF01609                                    1533
         AL    PRSTART,MEMPTR                                      1533
*   DO I3='00'X TO'3F'X;            /* LOOP THRU VUAS        @Z40LB40*/
         SLR   I3,I3                                               1534
@DL01534 DS    0H                                                  1535
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1535
         MVC   PRINTLN+2(119),PRINTLN+1                            1535
         MVI   PRINTLN,C' '                                        1535
*     IF(I3&DSMASK)=0 THEN          /* TEST FOR 16 LINES     @Z40LB40*/
         LR    @07,I3                                              1536
         N     @07,DSMASK                                          1536
         LTR   @07,@07                                             1536
         BNZ   @RF01536                                            1536
*       PRINTLNA=DOUBLESP;          /* DOUBLE SPACE AFTER    @Z40LB40
*                                      EACH 16 LINES         @Z40LB40*/
*                                                                  1537
         MVI   PRINTLNA,C'0'                                       1537
*     /***************************************************************/
*     /*                                                             */
*     /* EDIT I3 AS THE VUA VALUE                            @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1538
*     PROSET1=I3;                   /* SAVE I3 FOR VUA       @Z40LB40*/
@RF01536 ST    I3,PROSET1                                          1538
*     UNPK(PRWORK,PROSET);          /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1539
*     TR(PRWORK(7:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1540
*     PRINTLNB(2:3)=PRWORK(7:8);    /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+1(2),PRWORK+6                              1541
*     PRLNPTR=6;                    /* SET LINE POINTER      @Z40LB40*/
*                                                                  1542
         LA    PRLNPTR,6                                           1542
*     /***************************************************************/
*     /*                                                             */
*     /* THE FOLLOWING CODE PRINTS 4                         @Z40LB40*/
*     /* CHANNELS WORTH OF INFORMATION PER PRINTLINE         @Z40LB40*/
*     /* WHICH REPRESENTS A VUA. NOTE THAT CHANNEL A         @Z40LB40*/
*     /* DOES NOT HAVE VALUES FOR VUA ABOVE X'0F'.           @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1543
*     DO J3=1 TO 4;                 /* LOOP THRU 4 CHANS.    @Z40LB40*/
         LA    J3,1                                                1543
@DL01543 DS    0H                                                  1544
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1544
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1545
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @02,PRINTLNB-1(PRLNPTR)                             1546
         MVC   0(8,@02),PRWORK                                     1546
*       PRSTART=PRSTART+'0100'X;    /* BUMP POINTER          @Z40LB40*/
         LA    @02,256                                             1547
         ALR   PRSTART,@02                                         1547
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1548
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1549
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1550
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @01,PRINTLNB-1(PRLNPTR)                             1551
         MVC   0(8,@01),PRWORK                                     1551
*       PRSTART=PRSTART+'0100'X;    /* BUMP POINTER          @Z40LB40*/
         ALR   PRSTART,@02                                         1552
*       PRLNPTR=PRLNPTR+10;         /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF00480                                    1553
*     END;                          /*                       @Z40LB40*/
         AL    J3,@CF00223                                         1554
         C     J3,@CF00044                                         1554
         BNH   @DL01543                                            1554
*     PRSTART=PRSTART-'0800'X+4;    /* RESET START ADDR.     @Z40LB40*/
         AL    PRSTART,@CF01744                                    1555
*     IF I3>'0F'X THEN              /* IS VUA MORE THAN 0F   @Z40LB40*/
         C     I3,@CF01612                                         1556
         BNH   @RF01556                                            1556
*       PRINTLNB(6:22)=' ';         /* YES,BLANK CHAN A      @Z40LB40*/
         MVI   PRINTLNB+6,C' '                                     1557
         MVC   PRINTLNB+7(15),PRINTLNB+6                           1557
         MVI   PRINTLNB+5,C' '                                     1557
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
@RF01556 BAL   @14,DOUPRINT                                        1558
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF00223                                         1559
         C     I3,@CF01610                                         1559
         BNH   @DL01534                                            1559
*   RFY                                                            1560
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1561
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00017 DS    0H                                                  1562
@EF00017 DS    0H                                                  1562
@ER00017 BR    @14                                                 1562
*   RFY                                                            1563
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END VAD;                        /*                       @Z40LB40*/
*                                                                  1565
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VVIT (LEVEL 3)                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING ADAPTER    @Z40LB40*/
*   /* VIRTUAL VOLUME INFORMATION TABLE (VVIT).              @Z40LB40*/
*   /* THE FOLLOWING SHOWS HOW THE VAD IS STRUCTURED.        @Z40LB40*/
*   /* THE FOUR CHARACTER VALUES SHOWN ARE THE ACTUAL        @Z40LB40*/
*   /* SECTOR ADDRESS OF EACH BYTE IN THE STAGING ADAPTER.   @Z40LB40*/
*   /* VVA BYTE0 BYTE1                                       @Z40LB40*/
*   /* .10 .6910 .6B10                                       @Z40LB40*/
*   /* .11 .6911 .6B11                                       @Z40LB40*/
*   /* ...                                                   @Z40LB40*/
*   /* .FF .69FF .6BFF                                       @Z40LB40*/
*   /* NOTE-THE VVAS RANGE FROM 10-1F THEN 40-FF             @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A BIT REPRESENTATION OF EACH BYTE IN THE     @Z40LB40*/
*   /* VVIT. THE OUTPUT IS ORGANIZED IN THREE COLUMNS.       @Z40LB40*/
*   /* THE FIRST COLUMN IS VVA 10-1F AND 40-7F. THE SECOND   @Z40LB40*/
*   /* COLUMN IS VVA 80-BF AND THE THIRD COLUMN IS C0-FF.    @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1565
*VVIT:                                                             1565
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
VVIT     DS    0H                                                  1566
*   RFY                                                            1566
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1567
*   RFY                                                            1568
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1569
         L     @05,@PC00001                                        1569
         L     @15,GDTTR2(,@05)                                    1569
         MVC   @TS00001(95),NEWERID2(@15)                          1569
         MVC   OLDERID2(95,@15),@TS00001                           1569
*   NEWID2='DUCN';                  /*                       @Z40LB40*/
*                                                                  1570
         MVC   NEWID2(4,@15),@CC01616                              1570
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR ALL THE VVIT HEADERS                 @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1571
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1571
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @15,DDSTRU                                          1572
         MVC   DARGSMOD(3,@15),@CC01334                            1572
*   DARGSENT=HVVIT;                 /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'28'                                 1573
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @05,@AL00001                                        1574
         LA    @15,PRPTR                                           1574
         ST    @15,@AL00001+4                                      1574
         LA    @15,DDSTRU                                          1574
         ST    @15,@AL00001+8                                      1574
         MVI   @AL00001+8,X'80'                                    1574
         L     @15,GDTPRT(,@05)                                    1574
         LA    @01,@AL00001                                        1574
         BALR  @14,@15                                             1574
*   B0BASE='6900'X+MEMPTR;          /* SET BYTE 0 ADDR.      @Z40LB40*/
         L     @05,MEMPTR                                          1575
         L     @15,@CF01617                                        1575
         ALR   @15,@05                                             1575
         ST    @15,B0BASE                                          1575
*   B1BASE='6B00'X+MEMPTR;          /* SET BYTE 1 ADDR.      @Z40LB40*/
         AL    @05,@CF01567                                        1576
         ST    @05,B1BASE                                          1576
*   I3='10'X;                       /* COLUMN 1 COUNTER      @Z40LB40*/
         LA    I3,16                                               1577
*   J3='80'X;                       /* COLUMN 2 COUNTER      @Z40LB40*/
         LA    J3,128                                              1578
*   K3='C0'X;                       /* COLUMN 3 COUNTER      @Z40LB40*/
         LA    @05,192                                             1579
         ST    @05,K3                                              1579
*   DO L3=0 TO 79;                  /* PRINT 80 LINES        @Z40LB40*/
         SLR   @05,@05                                             1580
         ST    @05,L3                                              1580
@DL01580 DS    0H                                                  1581
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1581
         MVC   PRINTLN+2(119),PRINTLN+1                            1581
         MVI   PRINTLN,C' '                                        1581
*     IF(L3&DSMASK)=0 THEN          /* TEST FOR 16 LINES     @Z40LB40*/
         N     @05,DSMASK                                          1582
         LTR   @05,@05                                             1582
         BNZ   @RF01582                                            1582
*       PRINTLNA=DOUBLESP;          /* DOUBLE SPACE AFTER    @Z40LB40
*                                      EACH 16 LINES         @Z40LB40*/
         MVI   PRINTLNA,C'0'                                       1583
*     PROSET1=I3;                   /* SAVE I3 FOR VVA       @Z40LB40*/
@RF01582 ST    I3,PROSET1                                          1584
*     UNPK(PRWORK,PROSET);          /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1585
*     TR(PRWORK(7:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1586
*     PRINTLNB(2:3)=PRWORK(7:8);    /* MOVE VVA TO LINE      @Z40LB40*/
         MVC   PRINTLNB+1(2),PRWORK+6                              1587
*     WORKBYTE=(B0BASE+I3)->MEMBYTE;/* SAVE BYTE 0           @Z40LB40*/
         LR    @15,I3                                              1588
         AL    @15,B0BASE                                          1588
         SLR   WORKBYTE,WORKBYTE                                   1588
         IC    WORKBYTE,MEMBYTE(,@15)                              1588
*     CALL EDITBIT;                 /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1589
*     PRINTLNB(5:12)=BITOUT;        /* MOVE BITS TO LINE     @Z40LB40*/
         MVC   PRINTLNB+4(8),BITOUT                                1590
*     WORKBYTE=(B1BASE+I3)->MEMBYTE;/* SAVE BYTE 1           @Z40LB40*/
         LR    @15,I3                                              1591
         AL    @15,B1BASE                                          1591
         SLR   WORKBYTE,WORKBYTE                                   1591
         IC    WORKBYTE,MEMBYTE(,@15)                              1591
*     CALL EDITBIT;                 /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1592
*     PRINTLNB(14:21)=BITOUT;       /* MOVE BITS TO LINE     @Z40LB40*/
         MVC   PRINTLNB+13(8),BITOUT                               1593
*     I3=I3+'01'X;                  /* BUMP VVA VALUE        @Z40LB40*/
         AL    I3,@CF01522                                         1594
*     IF I3='20'X THEN              /* SKIP FROM 1F TO       @Z40LB40*/
         C     I3,@CF01621                                         1595
         BNE   @RF01595                                            1595
*       I3='40'X;                   /* 40 VVA                @Z40LB40*/
         LA    I3,64                                               1596
*     IF J3<='BF'X THEN             /* LIMIT COLUMN 2        @Z40LB40*/
@RF01595 C     J3,@CF01623                                         1597
         BH    @RF01597                                            1597
*       DO;                         /*                       @Z40LB40*/
*         PROSET1=J3;               /* SAVE J3 FOR VVA       @Z40LB40*/
         ST    J3,PROSET1                                          1599
*         UNPK(PRWORK,PROSET);      /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1600
*         TR(PRWORK(7:8),TABLE);    /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1601
*         PRINTLNB(24:25)=PRWORK(7:8);/* MOVE VVA TO LINE    @Z40LB40*/
         MVC   PRINTLNB+23(2),PRWORK+6                             1602
*         WORKBYTE=(B0BASE+J3)->MEMBYTE;/* SAVE BYTE 0       @Z40LB40*/
         LR    @15,J3                                              1603
         AL    @15,B0BASE                                          1603
         SLR   WORKBYTE,WORKBYTE                                   1603
         IC    WORKBYTE,MEMBYTE(,@15)                              1603
*         CALL EDITBIT;             /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1604
*         PRINTLNB(27:34)=BITOUT;   /* MOVE BITS TO LINE     @Z40LB40*/
         MVC   PRINTLNB+26(8),BITOUT                               1605
*         WORKBYTE=(B1BASE+J3)->MEMBYTE;/* SAVE BYTE 1       @Z40LB40*/
         LR    @15,J3                                              1606
         AL    @15,B1BASE                                          1606
         SLR   WORKBYTE,WORKBYTE                                   1606
         IC    WORKBYTE,MEMBYTE(,@15)                              1606
*         CALL EDITBIT;             /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1607
*         PRINTLNB(36:43)=BITOUT;   /* MOVE BITS TO LINE     @Z40LB40*/
         MVC   PRINTLNB+35(8),BITOUT                               1608
*         J3=J3+'01'X;              /* BUMP VVA VALUE        @Z40LB40*/
         AL    J3,@CF01522                                         1609
*       END;                        /*                       @Z40LB40*/
*     IF K3<='FF'X THEN             /* LIMIT COLUMN 3        @Z40LB40*/
@RF01597 L     @05,K3                                              1611
         C     @05,@CF00589                                        1611
         BH    @RF01611                                            1611
*       DO;                         /*                       @Z40LB40*/
*         PROSET1=K3;               /* SAVE K3 FOR VVA       @Z40LB40*/
         L     @15,K3                                              1613
         ST    @15,PROSET1                                         1613
*         UNPK(PRWORK,PROSET);      /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1614
*         TR(PRWORK(7:8),TABLE);    /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1615
*         PRINTLNB(46:47)=PRWORK(7:8);/* MOVE VVA TO LINE    @Z40LB40*/
         MVC   PRINTLNB+45(2),PRWORK+6                             1616
*         WORKBYTE=(B0BASE+K3)->MEMBYTE;/* SAVE BYTE 0       @Z40LB40*/
         AL    @15,B0BASE                                          1617
         SLR   WORKBYTE,WORKBYTE                                   1617
         IC    WORKBYTE,MEMBYTE(,@15)                              1617
*         CALL EDITBIT;             /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1618
*         PRINTLNB(49:56)=BITOUT;   /* MOVE BITS TO LINE     @Z40LB40*/
         MVC   PRINTLNB+48(8),BITOUT                               1619
*         WORKBYTE=(B1BASE+K3)->MEMBYTE;/* SAVE BYTE 1       @Z40LB40*/
         L     @15,B1BASE                                          1620
         AL    @15,K3                                              1620
         SLR   WORKBYTE,WORKBYTE                                   1620
         IC    WORKBYTE,MEMBYTE(,@15)                              1620
*         CALL EDITBIT;             /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1621
*         PRINTLNB(58:65)=BITOUT;   /* MOVE BITS TO LINE     @Z40LB40*/
         MVC   PRINTLNB+57(8),BITOUT                               1622
*         K3=K3+'01'X;              /* BUMP VVA VALUE        @Z40LB40*/
         LA    @05,1                                               1623
         AL    @05,K3                                              1623
         ST    @05,K3                                              1623
*       END;                        /*                       @Z40LB40*/
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
@RF01611 BAL   @14,DOUPRINT                                        1625
*   END;                            /*                       @Z40LB40*/
         LA    @05,1                                               1626
         AL    @05,L3                                              1626
         ST    @05,L3                                              1626
         C     @05,@CF01619                                        1626
         BNH   @DL01580                                            1626
*   RFY                                                            1627
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1628
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00018 DS    0H                                                  1629
@EF00018 DS    0H                                                  1629
@ER00018 BR    @14                                                 1629
*   RFY                                                            1630
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END VVIT;                       /*                       @Z40LB40*/
*                                                                  1632
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - EDITBIT (LEVEL 4)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE CONVERTS A BYTE INTO          @Z40LB40*/
*   /* PRINTABLE BITS .                                      @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - WORKBYTE WHICH CONTAINS THE BYTE TO BE        @Z40LB40*/
*   /* CONVERTED.                                            @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - BITOUT WHICH IS AN 8 CHARACTER OUTPUT        @Z40LB40*/
*   /* AREA. EACH OUTPUT BYTE WILL BE EITHER 0 OR 1.         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1632
*EDITBIT:                                                          1632
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
EDITBIT  DS    0H                                                  1633
*   RFY                                                            1633
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR4=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         ST    REG14,RETADDR4                                      1634
*   RFY                                                            1635
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1636
         L     @02,@PC00001                                        1636
         L     @02,GDTTR2(,@02)                                    1636
         MVC   @TS00001(95),NEWERID2(@02)                          1636
         MVC   OLDERID2(95,@02),@TS00001                           1636
*   NEWID2='DUDB';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@02),@CC01631                              1637
*   BYTEMASK='10000000'B;           /* INIT MASK             @Z40LB40*/
         LA    BYTEMASK,128                                        1638
*   BITOUT='00000000';              /* INIT OUTPUT AREA      @Z40LB40*/
         MVC   BITOUT(8),@CC01633                                  1639
*   DO I4=1 TO 8;                   /* LOOP THRU 8 BITS      @Z40LB40*/
         LA    @02,1                                               1640
         ST    @02,I4                                              1640
@DL01640 DS    0H                                                  1641
*     IF(WORKBYTE&BYTEMASK)=BYTEMASK THEN/* TEST FOR 1       @Z40LB40*/
         LR    @15,WORKBYTE                                        1641
         NR    @15,BYTEMASK                                        1641
         CR    @15,BYTEMASK                                        1641
         BNE   @RF01641                                            1641
*       BITOUT(I4:I4)='1';          /* SET OUTPUT TO 1       @Z40LB40*/
         LA    @01,BITOUT-1(@02)                                   1642
         MVI   0(@01),C'1'                                         1642
*     SRL(BYTEMASK,1);              /* SHIFT TO NEXT BIT     @Z40LB40*/
@RF01641 SRL   BYTEMASK,1                                          1643
*   END;                            /*                       @Z40LB40*/
         LA    @02,1                                               1644
         AL    @02,I4                                              1644
         ST    @02,I4                                              1644
         C     @02,@CF00183                                        1644
         BNH   @DL01640                                            1644
*   RFY                                                            1645
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR4;                 /* RESET RETURN POINT    @Z40LB40*/
         L     REG14,RETADDR4                                      1646
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00019 DS    0H                                                  1647
@EF00019 DS    0H                                                  1647
@ER00019 BR    @14                                                 1647
*   RFY                                                            1648
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END EDITBIT;                    /*                       @Z40LB40*/
*                                                                  1650
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - DCBS (LEVEL 3)                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING ADAPTER    @Z40LB40*/
*   /* DEVICE CONTROL BLOCKS (DCB).                          @Z40LB40*/
*   /* THE FOLLOWING SHOWS HOW EACH DCB IS STRUCTURED.       @Z40LB40*/
*   /* THE FOUR CHARACTER VALUES SHOWN ARE THE ACTUAL        @Z40LB40*/
*   /* SECTOR ADDRESSES OF EACH WORD IN THE STAGING          @Z40LB40*/
*   /* ADAPTER.                                              @Z40LB40*/
*   /* RUA CONTROLLERS 0 AND 1...CONTROLLERS 2 AND 3         @Z40LB40*/
*   /* .00 0300 0304 0200 0204...0380 0384 0280 0284         @Z40LB40*/
*   /* .01 0308 030C 0208 020C...0380 038C 0288 028C         @Z40LB40*/
*   /* ...                                                   @Z40LB40*/
*   /* .0F 0378 037C 0278 027C...03F8 03FC 02F8 02FC         @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE DCBS. EACH LINE   @Z40LB40*/
*   /* WILL CONTAIN ALL THE CONTROLLER WORDS FOR A RUA.      @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1650
*DCBS:                                                             1650
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
DCBS     DS    0H                                                  1651
*   RFY                                                            1651
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1652
*   RFY                                                            1653
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1654
         L     @05,@PC00001                                        1654
         L     @15,GDTTR2(,@05)                                    1654
         MVC   @TS00001(95),NEWERID2(@15)                          1654
         MVC   OLDERID2(95,@15),@TS00001                           1654
*   NEWID2='DUCO';                  /*                       @Z40LB40*/
*                                                                  1655
         MVC   NEWID2(4,@15),@CC01638                              1655
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR DCB HEADERS                          @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1656
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1656
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @15,DDSTRU                                          1657
         MVC   DARGSMOD(3,@15),@CC01334                            1657
*   DARGSENT=HDCB;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'29'                                 1658
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @05,@AL00001                                        1659
         LA    @15,PRPTR                                           1659
         ST    @15,@AL00001+4                                      1659
         LA    @15,DDSTRU                                          1659
         ST    @15,@AL00001+8                                      1659
         MVI   @AL00001+8,X'80'                                    1659
         L     @15,GDTPRT(,@05)                                    1659
         LA    @01,@AL00001                                        1659
         BALR  @14,@15                                             1659
*   I3=MEMPTR+'0300'X;              /* SET ADDR START        @Z40LB40*/
         L     @15,MEMPTR                                          1660
         LA    I3,768                                              1660
         ALR   I3,@15                                              1660
*   J3=MEMPTR+'0200'X;              /* SET ADDR START        @Z40LB40*/
         AL    @15,@CF01560                                        1661
         LR    J3,@15                                              1661
*   DO K3='00'X TO'0F'X;            /* K3 IS THE RUA         @Z40LB40*/
         SLR   @05,@05                                             1662
         ST    @05,K3                                              1662
@DL01662 DS    0H                                                  1663
*     PRINTLNB=' ';                 /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLNB+1,C' '                                     1663
         MVC   PRINTLNB+2(118),PRINTLNB+1                          1663
         MVI   PRINTLNB,C' '                                       1663
*     PROSET1=K3;                   /* SAVE RUA              @Z40LB40*/
         ST    @05,PROSET1                                         1664
*     UNPK(PRWORK,PROSET);          /* UNPK RUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1665
*     TR(PRWORK(8:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+7(1),TABLE                                   1666
*     PRINTLNB(2:2)=PRWORK(8:8);    /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+1(1),PRWORK+7                              1667
*     PRLNPTR=5;                    /* INIT LINE POINTER     @Z40LB40*/
*                                                                  1668
         LA    PRLNPTR,5                                           1668
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT WORDS 0 & 1 OF CONTROLLERS 0 & 1              @ZD00050*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1669
*     DO L3=1 TO 2;                 /* EDIT 2 WORDS          @Z40LB40*/
         LA    @05,1                                               1669
         ST    @05,L3                                              1669
@DL01669 DS    0H                                                  1670
*       PRSTART=I3;                 /* SET WORD ADDR.        @Z40LB40*/
         LR    PRSTART,I3                                          1670
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1671
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1672
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @05,PRINTLNB-1(PRLNPTR)                             1673
         MVC   0(8,@05),PRWORK                                     1673
*       I3=I3+4;                    /* BUMP ADDRESS          @Z40LB40*/
         AL    I3,@CF00044                                         1674
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1675
*     END;                          /*                       @Z40LB40*/
*                                                                  1676
         L     @02,L3                                              1676
         AL    @02,@CF00223                                        1676
         LR    @05,@02                                             1676
         ST    @05,L3                                              1676
         C     @05,@CF00157                                        1676
         BNH   @DL01669                                            1676
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT WORDS 2 & 3 OF CONTROLLERS 0 & 1              @ZD00050*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1677
*     DO L3=1 TO 2;                 /* EDIT 2 WORDS          @Z40LB40*/
         LA    @05,1                                               1677
         ST    @05,L3                                              1677
@DL01677 DS    0H                                                  1678
*       PRSTART=J3;                 /* SET WORD ADDR.        @Z40LB40*/
         LR    PRSTART,J3                                          1678
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1679
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1680
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @05,PRINTLNB-1(PRLNPTR)                             1681
         MVC   0(8,@05),PRWORK                                     1681
*       J3=J3+4;                    /* BUMP ADDRESS          @Z40LB40*/
         AL    J3,@CF00044                                         1682
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1683
*     END;                          /*                       @Z40LB40*/
         L     @02,L3                                              1684
         AL    @02,@CF00223                                        1684
         LR    @05,@02                                             1684
         ST    @05,L3                                              1684
         C     @05,@CF00157                                        1684
         BNH   @DL01677                                            1684
*     PRLNPTR=PRLNPTR+1;            /* ADD ONE SPACE MORE    @Z40LB40*/
         LA    @05,1                                               1685
         ALR   PRLNPTR,@05                                         1685
*     I3=I3+'0078'X;                /* BUMP ADDR START       @ZD00050*/
         LA    @02,120                                             1686
         ALR   I3,@02                                              1686
*     J3=J3+'0078'X;                /* BUMP ADDR START       @ZD00050*/
*                                                                  1687
         ALR   J3,@02                                              1687
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT WORDS 0 & 1 OF CONTROLLERS 2 & 3              @ZD00050*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1688
*     DO L3=1 TO 2;                 /* EDIT 2 WORDS          @Z40LB40*/
         ST    @05,L3                                              1688
@DL01688 DS    0H                                                  1689
*       PRSTART=I3;                 /* SET WORD ADDR.        @Z40LB40*/
         LR    PRSTART,I3                                          1689
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1690
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1691
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @05,PRINTLNB-1(PRLNPTR)                             1692
         MVC   0(8,@05),PRWORK                                     1692
*       I3=I3+4;                    /* BUMP ADDRESS          @Z40LB40*/
         AL    I3,@CF00044                                         1693
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1694
*     END;                          /*                       @Z40LB40*/
*                                                                  1695
         L     @02,L3                                              1695
         AL    @02,@CF00223                                        1695
         LR    @05,@02                                             1695
         ST    @05,L3                                              1695
         C     @05,@CF00157                                        1695
         BNH   @DL01688                                            1695
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT WORDS 2 & 3 OF CONTROLLERS 2 & 3              @ZD00050*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1696
*     DO L3=1 TO 2;                 /* EDIT 2 WORDS          @Z40LB40*/
         LA    @05,1                                               1696
         ST    @05,L3                                              1696
@DL01696 DS    0H                                                  1697
*       PRSTART=J3;                 /* SET WORD ADDR.        @Z40LB40*/
         LR    PRSTART,J3                                          1697
*       UNPK(PRWORK,PRAREA);        /* UNPK WORD             @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1698
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1699
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* MOVE TO LINE   @Z40LB40*/
         LA    @05,PRINTLNB-1(PRLNPTR)                             1700
         MVC   0(8,@05),PRWORK                                     1700
*       J3=J3+4;                    /* BUMP ADDRESS          @Z40LB40*/
         AL    J3,@CF00044                                         1701
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1702
*     END;                          /*                       @Z40LB40*/
         L     @02,L3                                              1703
         AL    @02,@CF00223                                        1703
         LR    @05,@02                                             1703
         ST    @05,L3                                              1703
         C     @05,@CF00157                                        1703
         BNH   @DL01696                                            1703
*     I3=I3-'0080'X;                /* RESET ADDR START      @ZD00050*/
         LA    @05,128                                             1704
         SLR   I3,@05                                              1704
*     J3=J3-'0080'X;                /* RESET ADDR START      @ZD00050*/
*                                                                  1705
         SLR   J3,@05                                              1705
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UPRINT TO PRINT DATA LINE                     @Z40LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1706
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1706
*   END;                            /*                       @Z40LB40*/
         LA    @05,1                                               1707
         AL    @05,K3                                              1707
         ST    @05,K3                                              1707
         C     @05,@CF01612                                        1707
         BNH   @DL01662                                            1707
*   RFY                                                            1708
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1709
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00020 DS    0H                                                  1710
@EF00020 DS    0H                                                  1710
@ER00020 BR    @14                                                 1710
*   RFY                                                            1711
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END DCBS;                       /*                       @Z40LB40*/
*                                                                  1713
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - SAMSGQUE (LEVEL 3)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING ADAPTER    @Z40LB40*/
*   /* TO MSC MESSAGE QUEUE.                                 @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE QUEUE. SEE        @Z40LB40*/
*   /* REFERENCES TO SECTADDR FOR ACTUAL LOCATION OF THE     @Z40LB40*/
*   /* QUEUE.                                                @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1713
*SAMSGQUE:                                                         1713
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
SAMSGQUE DS    0H                                                  1714
*   RFY                                                            1714
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1715
*   RFY                                                            1716
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1717
         L     @07,@PC00001                                        1717
         L     @02,GDTTR2(,@07)                                    1717
         MVC   @TS00001(95),NEWERID2(@02)                          1717
         MVC   OLDERID2(95,@02),@TS00001                           1717
*   NEWID2='DUCP';                  /*                       @Z40LB40*/
*                                                                  1718
         MVC   NEWID2(4,@02),@CC01644                              1718
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR MESSAGE QUEUE HEADER                 @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1719
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1719
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @02,DDSTRU                                          1720
         MVC   DARGSMOD(3,@02),@CC01334                            1720
*   DARGSENT=HSAMSG;                /*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'18'                                 1721
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1722
         LA    @02,PRPTR                                           1722
         ST    @02,@AL00001+4                                      1722
         LA    @02,DDSTRU                                          1722
         ST    @02,@AL00001+8                                      1722
         MVI   @AL00001+8,X'80'                                    1722
         L     @15,GDTPRT(,@07)                                    1722
         LA    @01,@AL00001                                        1722
         BALR  @14,@15                                             1722
*   SECTADDR='4A00'X;               /* SET SECTOR ADDR.      @Z40LB40*/
         L     SECTADDR,@CF01645                                   1723
*   NUMBYTES=20;                    /* PRINT 20 BYTES        @Z40LB40*/
         MVC   NUMBYTES(4),@CF00280                                1724
*   CALL PRNTSECT;                  /* PRINT THE QUEUE       @Z40LB40*/
         BAL   @14,PRNTSECT                                        1725
*   RFY                                                            1726
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1727
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00021 DS    0H                                                  1728
@EF00021 DS    0H                                                  1728
@ER00021 BR    @14                                                 1728
*   RFY                                                            1729
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END SAMSGQUE;                   /*                       @Z40LB40*/
*                                                                  1731
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - AUT (LEVEL 3)                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING            @Z40LB40*/
*   /* ADAPTER ADDRESS USING TABLE (AUT). THE AUT IS         @Z40LB40*/
*   /* 32 BYTES LONG, EACH BYTE REPRESENTS A RUA             @Z40LB40*/
*   /* AND THE CONTENT OF THE BYTE DESCRIBES ITS             @Z40LB40*/
*   /* ASSOCIATED CHANNEL AND VUA. THE FORMAT OF             @Z40LB40*/
*   /* AN ENTRY IS CCVVVVVV WHERE CC IS THE CHANNEL          @Z40LB40*/
*   /* INDICATOR AND VVVVVV IS THE VUA. THE VALUES           @Z40LB40*/
*   /* FOR CC AND THE ASSOCIATED CHANNEL ARE:                @Z40LB40*/
*   /* CC=00=CHANNEL D                                       @Z40LB40*/
*   /* CC=01=CHANNEL C                                       @Z40LB40*/
*   /* CC=10=CHANNEL B                                       @Z40LB40*/
*   /* CC=11=CHANNEL A                                       @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A BIT AND HEXADECIMAL PRINT OF THE AUT.      @Z40LB40*/
*   /* EACH LINE REPRESENTS ONE AUT ENTRY.                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1731
*AUT:                                                              1731
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
AUT      DS    0H                                                  1732
*   RFY                                                            1732
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1733
*   RFY                                                            1734
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1735
         L     @05,@PC00001                                        1735
         L     @15,GDTTR2(,@05)                                    1735
         MVC   @TS00001(95),NEWERID2(@15)                          1735
         MVC   OLDERID2(95,@15),@TS00001                           1735
*   NEWID2='DUCQ';                  /*                       @Z40LB40*/
*                                                                  1736
         MVC   NEWID2(4,@15),@CC01649                              1736
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR AUT HEADERS                          @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1737
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1737
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @15,DDSTRU                                          1738
         MVC   DARGSMOD(3,@15),@CC01334                            1738
*   DARGSENT=HAUT;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@15),X'2A'                                 1739
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @05,@AL00001                                        1740
         LA    @15,PRPTR                                           1740
         ST    @15,@AL00001+4                                      1740
         LA    @15,DDSTRU                                          1740
         ST    @15,@AL00001+8                                      1740
         MVI   @AL00001+8,X'80'                                    1740
         L     @15,GDTPRT(,@05)                                    1740
         LA    @01,@AL00001                                        1740
         BALR  @14,@15                                             1740
*   I3='00'X;                       /* I3=RUA 00-0F          @Z40LB40*/
         SLR   I3,I3                                               1741
*   J3='10'X;                       /* J3=RUA 10-1F          @Z40LB40*/
         LA    J3,16                                               1742
*   DO K3='0690'X TO'069F'X;        /* PRINT 16 LINES        @Z40LB40*/
         LA    @05,1680                                            1743
         ST    @05,K3                                              1743
@DL01743 DS    0H                                                  1744
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1744
         MVC   PRINTLN+2(119),PRINTLN+1                            1744
         MVI   PRINTLN,C' '                                        1744
*     PROSET1=I3;                   /* SAVE RUA              @Z40LB40*/
         ST    I3,PROSET1                                          1745
*     UNPK(PRWORK,PROSET);          /* UNPK RUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1746
*     TR(PRWORK(7:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1747
*     PRINTLNB(2:3)=PRWORK(7:8);    /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+1(2),PRWORK+6                              1748
*     WORKBYTE=(K3+MEMPTR)->MEMBYTE;/* SAVE BYTE             @Z40LB40*/
         L     @15,K3                                              1749
         AL    @15,MEMPTR                                          1749
         SLR   WORKBYTE,WORKBYTE                                   1749
         IC    WORKBYTE,MEMBYTE(,@15)                              1749
*     CALL EDITBIT;                 /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1750
*     PRINTLNB(6:7)=BITOUT(1:2);    /* MOVE CHANNEL          @Z40LB40*/
         MVC   PRINTLNB+5(2),BITOUT                                1751
*     PROSET2=WORKBYTE&OFFCHAN;     /* ZERO CHANNEL BITS     @Z40LB40*/
         LA    @15,63                                              1752
         NR    @15,WORKBYTE                                        1752
         STC   @15,PROSET2                                         1752
*     UNPK(PRWORK,PROSET);          /* UNPK VUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1753
*     TR(PRWORK(1:2),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(2),TABLE                                     1754
*     PRINTLNB(11:12)=PRWORK(1:2);  /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+10(2),PRWORK                               1755
*     I3=I3+'01'X;                  /* INCREMENT RUA         @Z40LB40*/
         AL    I3,@CF01522                                         1756
*     PROSET1=J3;                   /* SAVE RUA              @Z40LB40*/
         ST    J3,PROSET1                                          1757
*     UNPK(PRWORK,PROSET);          /* UNPK RUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1758
*     TR(PRWORK(7:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+6(2),TABLE                                   1759
*     PRINTLNB(17:18)=PRWORK(7:8);  /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+16(2),PRWORK+6                             1760
*     WORKBYTE=(K3+'10'X+MEMPTR)->MEMBYTE;/* SAVE BYTE       @Z40LB40*/
         LA    @15,16                                              1761
         AL    @15,K3                                              1761
         AL    @15,MEMPTR                                          1761
         SLR   WORKBYTE,WORKBYTE                                   1761
         IC    WORKBYTE,MEMBYTE(,@15)                              1761
*     CALL EDITBIT;                 /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1762
*     PRINTLNB(21:22)=BITOUT(1:2);  /* MOVE CHANNEL          @Z40LB40*/
         MVC   PRINTLNB+20(2),BITOUT                               1763
*     PROSET2=WORKBYTE&OFFCHAN;     /* ZERO CHANNEL BITS     @Z40LB40*/
         LA    @15,63                                              1764
         NR    @15,WORKBYTE                                        1764
         STC   @15,PROSET2                                         1764
*     UNPK(PRWORK,PROSET);          /* UNPK VUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1765
*     TR(PRWORK(1:2),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(2),TABLE                                     1766
*     PRINTLNB(26:27)=PRWORK(1:2);  /* MOVE TO LINE          @Z40LB40*/
         MVC   PRINTLNB+25(2),PRWORK                               1767
*     J3=J3+'01'X;                  /* INCREMENT RUA         @Z40LB40*/
         AL    J3,@CF01522                                         1768
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1769
*   END;                            /*                       @Z40LB40*/
         LA    @05,1                                               1770
         AL    @05,K3                                              1770
         ST    @05,K3                                              1770
         C     @05,@CF01651                                        1770
         BNH   @DL01743                                            1770
*   RFY                                                            1771
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1772
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00022 DS    0H                                                  1773
@EF00022 DS    0H                                                  1773
@ER00022 BR    @14                                                 1773
*   RFY                                                            1774
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END AUT;                        /*                       @Z40LB40*/
*                                                                  1776
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - LTR (LEVEL 3)                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING            @Z40LB40*/
*   /* ADAPTER LOGICAL TO REAL TRANSLATION TABLE(LTR).       @Z40LB40*/
*   /* THE LTR IS 16 BYTES LONG, EACH BYTE REPRESENTS A      @Z40LB40*/
*   /* LUA AND THE CONTENT OF THE BYTE DESCRIBES ITS         @Z40LB40*/
*   /* ASSOCIATED CONTROLLER, FLAGS, RUA AND WHETHER THIS IS @Z40LB40*/
*   /* LOW OR HIGH ORDER HALF OF A 3330-II PACK.             @Z40LB40*/
*   /* THE FORMAT OF AN ENTRY IS IFFAADDD.                   @Z40LB40*/
*   /* I=3330-II LOW OR HIGH INDICATOR.                      @Z40LB40*/
*   /* FF=FLAGS                                              @Z40LB40*/
*   /* AA=CONTROLLER                                         @Z40LB40*/
*   /* DDD=RUA                                               @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A BIT AND HEXADECIMAL PRINT OF THE LTR.      @Z40LB40*/
*   /* EACH LINE REPRESENTS ONE LTR ENTRY.                   @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1776
*LTR:                                                              1776
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
LTR      DS    0H                                                  1777
*   RFY                                                            1777
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1778
*   RFY                                                            1779
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1780
         L     @07,@PC00001                                        1780
         L     @05,GDTTR2(,@07)                                    1780
         MVC   @TS00001(95),NEWERID2(@05)                          1780
         MVC   OLDERID2(95,@05),@TS00001                           1780
*   NEWID2='DUCR';                  /*                       @Z40LB40*/
*                                                                  1781
         MVC   NEWID2(4,@05),@CC01655                              1781
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR LTR HEADERS                          @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1782
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1782
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @05,DDSTRU                                          1783
         MVC   DARGSMOD(3,@05),@CC01334                            1783
*   DARGSENT=HLTR;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@05),X'2B'                                 1784
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1785
         LA    @05,PRPTR                                           1785
         ST    @05,@AL00001+4                                      1785
         LA    @05,DDSTRU                                          1785
         ST    @05,@AL00001+8                                      1785
         MVI   @AL00001+8,X'80'                                    1785
         L     @15,GDTPRT(,@07)                                    1785
         LA    @01,@AL00001                                        1785
         BALR  @14,@15                                             1785
*   I3='00'X;                       /* I3=LUA 0-F            @Z40LB40*/
         SLR   I3,I3                                               1786
*   DO K3='06B0'X TO'06BF'X;        /* PRINT 16 LINES        @Z40LB40*/
         LA    @07,1712                                            1787
         ST    @07,K3                                              1787
@DL01787 DS    0H                                                  1788
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1788
         MVC   PRINTLN+2(119),PRINTLN+1                            1788
         MVI   PRINTLN,C' '                                        1788
*     PROSET1=I3;                   /* SAVE LUA              @Z40LB40*/
         ST    I3,PROSET1                                          1789
*     UNPK(PRWORK,PROSET);          /* UNPK LUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1790
*     TR(PRWORK(8:8),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+7(1),TABLE                                   1791
*     PRINTLNB(2:2)=PRWORK(8:8);    /* LUA TO LINE           @Z40LB40*/
         MVC   PRINTLNB+1(1),PRWORK+7                              1792
*     WORKBYTE=(MEMPTR+K3)->MEMBYTE;/* SAVE BYTE             @Z40LB40*/
         AL    @07,MEMPTR                                          1793
         SLR   WORKBYTE,WORKBYTE                                   1793
         IC    WORKBYTE,MEMBYTE(,@07)                              1793
*     CALL EDITBIT;                 /* CONVERT TO BITS       @Z40LB40*/
         BAL   @14,EDITBIT                                         1794
*     PRINTLNB(8:8)=BITOUT(1:1);    /* 3330-II BIT TO LINE   @Z40LB40*/
         MVC   PRINTLNB+7(1),BITOUT                                1795
*     PRINTLNB(15:16)=BITOUT(2:3);  /* FLAGS TO LINE         @Z40LB40*/
         MVC   PRINTLNB+14(2),BITOUT+1                             1796
*     PRINTLNB(20:21)=BITOUT(4:5);  /* CONTR.TO LINE         @Z40LB40*/
         MVC   PRINTLNB+19(2),BITOUT+3                             1797
*     PROSET2=WORKBYTE&RUAMASK;     /* OFF ALL BUT RUA       @Z40LB40*/
         LA    @07,7                                               1798
         NR    @07,WORKBYTE                                        1798
         STC   @07,PROSET2                                         1798
*     UNPK(PRWORK,PROSET);          /* UNPK RUA              @Z40LB40*/
         UNPK  PRWORK(9),PROSET(5)                                 1799
*     TR(PRWORK(2:2),TABLE);        /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK+1(1),TABLE                                   1800
*     PRINTLNB(25:25)=PRWORK(2:2);  /* RUA TO LINE           @Z40LB40*/
         MVC   PRINTLNB+24(1),PRWORK+1                             1801
*     I3=I3+'01'X;                  /* INCREMENT LUA         @Z40LB40*/
         AL    I3,@CF01522                                         1802
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1803
*   END;                            /*                       @Z40LB40*/
         LA    @07,1                                               1804
         AL    @07,K3                                              1804
         ST    @07,K3                                              1804
         C     @07,@CF01657                                        1804
         BNH   @DL01787                                            1804
*   RFY                                                            1805
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1806
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00023 DS    0H                                                  1807
@EF00023 DS    0H                                                  1807
@ER00023 BR    @14                                                 1807
*   RFY                                                            1808
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END LTR;                        /*                       @Z40LB40*/
*                                                                  1810
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - SASENSE (LEVEL 3)                    @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING            @Z40LB40*/
*   /* ADAPTER SENSE DATA.                                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE STAGING           @Z40LB40*/
*   /* ADAPTER SENSE DATA. SEE REFERENCES TO SECTADDR        @Z40LB40*/
*   /* FOR ACTUAL LOCATION OF THE SENSE DATA.                @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1810
*SASENSE:                                                          1810
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
SASENSE  DS    0H                                                  1811
*   RFY                                                            1811
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1812
*   RFY                                                            1813
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1814
         L     @07,@PC00001                                        1814
         L     @02,GDTTR2(,@07)                                    1814
         MVC   @TS00001(95),NEWERID2(@02)                          1814
         MVC   OLDERID2(95,@02),@TS00001                           1814
*   NEWID2='DUCS';                  /*                       @Z40LB40*/
*                                                                  1815
         MVC   NEWID2(4,@02),@CC01661                              1815
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR SASENSE HEADER                       @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1816
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1816
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @02,DDSTRU                                          1817
         MVC   DARGSMOD(3,@02),@CC01334                            1817
*   DARGSENT=HSENSE;                /*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'2C'                                 1818
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1819
         LA    @02,PRPTR                                           1819
         ST    @02,@AL00001+4                                      1819
         LA    @02,DDSTRU                                          1819
         ST    @02,@AL00001+8                                      1819
         MVI   @AL00001+8,X'80'                                    1819
         L     @15,GDTPRT(,@07)                                    1819
         LA    @01,@AL00001                                        1819
         BALR  @14,@15                                             1819
*   SECTADDR='7FC4'X;               /* SET SECTOR ADDRESS    @Z40LB40*/
         L     SECTADDR,@CF01662                                   1820
*   NUMBYTES=60;                    /* PRINT 60 BYTES        @Z40LB40*/
         MVC   NUMBYTES(4),@CF01663                                1821
*   CALL PRNTSECT;                  /* PRINT SENSE DATA      @Z40LB40*/
         BAL   @14,PRNTSECT                                        1822
*   RFY                                                            1823
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1824
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00024 DS    0H                                                  1825
@EF00024 DS    0H                                                  1825
@ER00024 BR    @14                                                 1825
*   RFY                                                            1826
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END SASENSE;                    /*                       @Z40LB40*/
*                                                                  1828
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - PST (LEVEL 3)                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING            @Z40LB40*/
*   /* ADAPTER PAGE STATUS TABLES(PST) FOR STAGING           @Z40LB40*/
*   /* DRIVE GROUPS 0 AND 1.                                 @Z40LB40*/
*   /* THE PST IS LOCATED IN EXTENDED STORAGE.               @ZD00043*/
*   /* THE FOLLOWING SHOWS HOW EACH PST IS STRUCTURED.       @Z40LB40*/
*   /* THE FOUR CHARACTER VALUES SHOWN ARE THE ACTUAL        @Z40LB40*/
*   /* SECTOR ADDRESSES OF EACH WORD IN THE PSTS.            @Z40LB40*/
*   /* STAGING DRIVE GROUP 0                                 @Z40LB40*/
*   /* PAGE LUA0 LUA1 LUA2 LUA3 LUA4 LUA5 LUA6 LUA7          @Z40LB40*/
*   /* .00. C000 C0D0 C1A0 C270 C340 C410 C4E0 C5B0          @ZD00043*/
*   /* .01. C004 C0D4 C1A4 C274 C344 C414 C4E4 C5B4          @ZD00043*/
*   /* ....                                                  @Z40LB40*/
*   /* .51. C0CC C19C C26C C33C C40C C4DC C5AC C67C          @ZD00043*/
*   /* STAGING DRIVE GROUP 1                                 @Z40LB40*/
*   /* PAGE LUA0 LUA1 LUA2 LUA3 LUA4 LUA5 LUA6 LUA7          @Z40LB40*/
*   /* .00. C680 C750 C820 C8F0 C9C0 CA90 CB60 CC30          @ZD00043*/
*   /* .01. C684 C754 C824 C8F4 C9C4 CA94 CB64 CC34          @ZD00043*/
*   /* ....                                                  @Z40LB40*/
*   /* .51. C74C C81C C8EC C9BC CA8C CB5C CC2C CCFC          @ZD00043*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE PST WORDS.        @Z40LB40*/
*   /* EACH LINE WILL CONTAIN THE PST WORDS FOR EACH         @Z40LB40*/
*   /* LUA FOR A SPECIFIC PAGE.                              @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1828
*PST:                                                              1828
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
PST      DS    0H                                                  1829
*   RFY                                                            1829
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1830
*   RFY                                                            1831
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1832
         L     @07,@PC00001                                        1832
         L     @04,GDTTR2(,@07)                                    1832
         MVC   @TS00001(95),NEWERID2(@04)                          1832
         MVC   OLDERID2(95,@04),@TS00001                           1832
*   NEWID2='DUCT';                  /*                       @Z40LB40*/
*                                                                  1833
         MVC   NEWID2(4,@04),@CC01667                              1833
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR PST HEADERS FOR STAGING              @Z40LB40*/
*   /* DRIVE GROUP 0                                         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1834
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1834
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @04,DDSTRU                                          1835
         MVC   DARGSMOD(3,@04),@CC01334                            1835
*   DARGSENT=HPST;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@04),X'2E'                                 1836
*   DARGCNT=1;                      /*                       @Z40LB40*/
         LA    @15,1                                               1837
         STH   @15,DARGCNT(,@04)                                   1837
*   DARGINS(1)=1;                   /*                       @Z40LB40*/
         STH   @15,DARGINS(,@04)                                   1838
*   DARGINL(1)=LENGTH(SDG0);        /*                       @Z40LB40*/
         STH   @15,DARGINL(,@04)                                   1839
*   DARGDTM(1)=ADDR(SDG0);          /*                       @Z40LB40*/
         LA    @15,@CH00118+1                                      1840
         ST    @15,DARGDTM(,@04)                                   1840
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
*                                                                  1841
         ST    @07,@AL00001                                        1841
         LA    @04,PRPTR                                           1841
         ST    @04,@AL00001+4                                      1841
         LA    @04,DDSTRU                                          1841
         ST    @04,@AL00001+8                                      1841
         MVI   @AL00001+8,X'80'                                    1841
         L     @15,GDTPRT(,@07)                                    1841
         LA    @01,@AL00001                                        1841
         BALR  @14,@15                                             1841
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT PST VALUES FOR STAGING DRIVE GROUP 0            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1842
*   PRSTART=MEMPTR+'10000'X;        /* SET START ADDR.       @ZD00043*/
         L     PRSTART,@CF01515                                    1842
         AL    PRSTART,MEMPTR                                      1842
*   DO I3=0 TO 51;                  /* PRINT 52 LINES        @Z40LB40*/
         SLR   I3,I3                                               1843
@DL01843 DS    0H                                                  1844
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1844
         MVC   PRINTLN+2(119),PRINTLN+1                            1844
         MVI   PRINTLN,C' '                                        1844
*     IF I3//10=0 THEN              /* TEST FOR TEN LINES    @Z40LB40*/
         LR    @00,I3                                              1845
         SRDA  @00,32                                              1845
         D     @00,@CF00480                                        1845
         LTR   @00,@00                                             1845
         BNZ   @RF01845                                            1845
*       PRINTLNA=DOUBLESP;          /* DOUBLE SPACE AFTER    @Z40LB40
*                                      TEN LINES             @Z40LB40*/
         MVI   PRINTLNA,C'0'                                       1846
*     CVD(I3,DOUBLEWD);             /* CONVERT PAGE NO.      @Z40LB40*/
@RF01845 CVD   I3,DOUBLEWD                                         1847
*     DOUBLEWD(8:8)=DOUBLEWD(8:8)×'0F'X;/* FORCE F SIGN      @Z40LB40*/
         OI    DOUBLEWD+7,X'0F'                                    1848
*     UNPK(PRINTLNB(2:3),DOUBLEWD(7:8));/* UNPK PAGE NO.     @Z40LB40*/
         UNPK  PRINTLNB+1(2),DOUBLEWD+6(2)                         1849
*     PRLNPTR=6;                    /* INIT LINE POINTER     @Z40LB40*/
         LA    PRLNPTR,6                                           1850
*     DO J3=1 TO 8;                 /* PRINT 8 WORDS         @Z40LB40*/
         LA    J3,1                                                1851
@DL01851 DS    0H                                                  1852
*       UNPK(PRWORK,PRAREA);        /* UNPK LUA VALUE        @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1852
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1853
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* VALUE TO LINE  @Z40LB40*/
         LA    @02,PRINTLNB-1(PRLNPTR)                             1854
         MVC   0(8,@02),PRWORK                                     1854
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1855
*       PRSTART=PRSTART+'D0'X;      /* BUMP ADDRESS          @Z40LB40*/
         AL    PRSTART,@CF01670                                    1856
*     END;                          /*                       @Z40LB40*/
         AL    J3,@CF00223                                         1857
         C     J3,@CF00183                                         1857
         BNH   @DL01851                                            1857
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1858
*     PRSTART=PRSTART-'0680'X+4;    /* RESET START ADDRESS   @Z40LB40*/
         AL    PRSTART,@CF01747                                    1859
*   END;                            /*                       @Z40LB40*/
*                                                                  1860
         AL    I3,@CF00223                                         1860
         C     I3,@CF01668                                         1860
         BNH   @DL01843                                            1860
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR PST HEADERS FOR STAGING              @Z40LB40*/
*   /* DRIVE GROUP 1                                         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1861
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1861
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1862
         MVC   DARGSMOD(3,@07),@CC01334                            1862
*   DARGSENT=HPST;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@07),X'2E'                                 1863
*   DARGCNT=1;                      /*                       @Z40LB40*/
         LA    @04,1                                               1864
         STH   @04,DARGCNT(,@07)                                   1864
*   DARGINS(1)=1;                   /*                       @Z40LB40*/
         STH   @04,DARGINS(,@07)                                   1865
*   DARGINL(1)=LENGTH(SDG1);        /*                       @Z40LB40*/
         STH   @04,DARGINL(,@07)                                   1866
*   DARGDTM(1)=ADDR(SDG1);          /*                       @Z40LB40*/
         LA    @04,@CH00223+1                                      1867
         ST    @04,DARGDTM(,@07)                                   1867
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
*                                                                  1868
         L     @07,@PC00001                                        1868
         ST    @07,@AL00001                                        1868
         LA    @04,PRPTR                                           1868
         ST    @04,@AL00001+4                                      1868
         LA    @04,DDSTRU                                          1868
         ST    @04,@AL00001+8                                      1868
         MVI   @AL00001+8,X'80'                                    1868
         L     @15,GDTPRT(,@07)                                    1868
         LA    @01,@AL00001                                        1868
         BALR  @14,@15                                             1868
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT PST VALUES FOR STAGING DRIVE GROUP 1            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1869
*   PRSTART=MEMPTR+'10680'X;        /* SET START ADDR.       @ZD00043*/
         L     PRSTART,@CF01672                                    1869
         AL    PRSTART,MEMPTR                                      1869
*   DO I3=0 TO 51;                  /* PRINT 52 LINES        @Z40LB40*/
         SLR   I3,I3                                               1870
@DL01870 DS    0H                                                  1871
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1871
         MVC   PRINTLN+2(119),PRINTLN+1                            1871
         MVI   PRINTLN,C' '                                        1871
*     IF I3//10=0 THEN              /* TEST FOR TEN LINES    @Z40LB40*/
         LR    @00,I3                                              1872
         SRDA  @00,32                                              1872
         D     @00,@CF00480                                        1872
         LTR   @00,@00                                             1872
         BNZ   @RF01872                                            1872
*       PRINTLNA=DOUBLESP;          /* DOUBLE SPACE AFTER    @Z40LB40
*                                      TEN LINES             @Z40LB40*/
         MVI   PRINTLNA,C'0'                                       1873
*     CVD(I3,DOUBLEWD);             /* CONVERT PAGE NO.      @Z40LB40*/
@RF01872 CVD   I3,DOUBLEWD                                         1874
*     DOUBLEWD(8:8)=DOUBLEWD(8:8)×'0F'X;/* FORCE F SIGN      @Z40LB40*/
         OI    DOUBLEWD+7,X'0F'                                    1875
*     UNPK(PRINTLNB(2:3),DOUBLEWD(7:8));/* UNPK PAGE NO.     @Z40LB40*/
         UNPK  PRINTLNB+1(2),DOUBLEWD+6(2)                         1876
*     PRLNPTR=6;                    /* INIT LINE POINTER     @Z40LB40*/
         LA    PRLNPTR,6                                           1877
*     DO J3=1 TO 8;                 /* PRINT 8 WORDS         @Z40LB40*/
         LA    J3,1                                                1878
@DL01878 DS    0H                                                  1879
*       UNPK(PRWORK,PRAREA);        /* UNPK LUA VALUE        @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1879
*       TR(PRWORK(1:8),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(8),TABLE                                     1880
*       PRINTLNB(PRLNPTR:PRLNPTR+7)=PRWORK;/* VALUE TO LINE  @Z40LB40*/
         LA    @02,PRINTLNB-1(PRLNPTR)                             1881
         MVC   0(8,@02),PRWORK                                     1881
*       PRLNPTR=PRLNPTR+9;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF01152                                    1882
*       PRSTART=PRSTART+'D0'X;      /* BUMP ADDRESS          @Z40LB40*/
         AL    PRSTART,@CF01670                                    1883
*     END;                          /*                       @Z40LB40*/
         AL    J3,@CF00223                                         1884
         C     J3,@CF00183                                         1884
         BNH   @DL01878                                            1884
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1885
*     PRSTART=PRSTART-'0680'X+4;    /* RESET START ADDRESS   @Z40LB40*/
         AL    PRSTART,@CF01747                                    1886
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF00223                                         1887
         C     I3,@CF01668                                         1887
         BNH   @DL01870                                            1887
*   RFY                                                            1888
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1889
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00025 DS    0H                                                  1890
@EF00025 DS    0H                                                  1890
@ER00025 BR    @14                                                 1890
*   RFY                                                            1891
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END PST;                        /*                       @Z40LB40*/
*                                                                  1893
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - LRU (LEVEL 3)                        @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING            @Z40LB40*/
*   /* ADAPTER LEAST RECENTLY USED(LRU) CLOCK VALUES         @Z40LB40*/
*   /* FOR STAGING DRIVE GROUPS 0 AND 1.                     @Z40LB40*/
*   /* THE FOLLOWING SHOWS HOW EACH LRU AREA IS              @Z40LB40*/
*   /* STRUCTURED. THE FOUR CHARACTER VALUES SHOWN           @Z40LB40*/
*   /* ARE THE ACTUAL SECTOR ADDRESS OF EACH BYTE            @Z40LB40*/
*   /* IN THE LRU AREAS.                                     @Z40LB40*/
*   /* STAGING DRIVE GROUP 0                                 @Z40LB40*/
*   /* PAGE LUA0 LUA1 LUA2 LUA3 LUA4 LUA5 LUA6 LUA7          @Z40LB40*/
*   /* .00. 6500 6534 6568 659C 65D0 6604 6638 666C          @Z40LB40*/
*   /* .01. 6501 6535 6569 659D 65D1 6605 6639 666D          @Z40LB40*/
*   /* ....                                                  @Z40LB40*/
*   /* .51. 6533 6567 659B 65CF 6603 6637 666B 669F          @Z40LB40*/
*   /* STAGING DRIVE GROUP 1                                 @Z40LB40*/
*   /* PAGE LUA0 LUA1 LUA2 LUA3 LUA4 LUA5 LUA6 LUA7          @Z40LB40*/
*   /* .00. 66A0 66D4 6708 673C 6770 67A4 67D8 680C          @Z40LB40*/
*   /* .01. 66A1 66D5 6709 673D 6771 67A5 67D9 680D          @Z40LB40*/
*   /* ....                                                  @Z40LB40*/
*   /* .51. 66D3 6707 673B 676F 67A3 67D7 680B 683F          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE LRU BYTES.        @Z40LB40*/
*   /* EACH LINE WILL CONTAIN THE LRU BYTES FOR EACH         @Z40LB40*/
*   /* LUA FOR A SPECIFIC PAGE.                              @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1893
*LRU:                                                              1893
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
LRU      DS    0H                                                  1894
*   RFY                                                            1894
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1895
*   RFY                                                            1896
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1897
         L     @07,@PC00001                                        1897
         L     @04,GDTTR2(,@07)                                    1897
         MVC   @TS00001(95),NEWERID2(@04)                          1897
         MVC   OLDERID2(95,@04),@TS00001                           1897
*   NEWID2='DUCU';                  /*                       @Z40LB40*/
*                                                                  1898
         MVC   NEWID2(4,@04),@CC01676                              1898
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR LRU HEADERS FOR STAGING              @Z40LB40*/
*   /* DRIVE GROUP 0                                         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1899
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1899
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @04,DDSTRU                                          1900
         MVC   DARGSMOD(3,@04),@CC01334                            1900
*   DARGSENT=HLRU;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@04),X'2F'                                 1901
*   DARGCNT=1;                      /*                       @Z40LB40*/
         LA    @15,1                                               1902
         STH   @15,DARGCNT(,@04)                                   1902
*   DARGINS(1)=1;                   /*                       @Z40LB40*/
         STH   @15,DARGINS(,@04)                                   1903
*   DARGINL(1)=LENGTH(SDG0);        /*                       @Z40LB40*/
         STH   @15,DARGINL(,@04)                                   1904
*   DARGDTM(1)=ADDR(SDG0);          /*                       @Z40LB40*/
         LA    @15,@CH00118+1                                      1905
         ST    @15,DARGDTM(,@04)                                   1905
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
*                                                                  1906
         ST    @07,@AL00001                                        1906
         LA    @04,PRPTR                                           1906
         ST    @04,@AL00001+4                                      1906
         LA    @04,DDSTRU                                          1906
         ST    @04,@AL00001+8                                      1906
         MVI   @AL00001+8,X'80'                                    1906
         L     @15,GDTPRT(,@07)                                    1906
         LA    @01,@AL00001                                        1906
         BALR  @14,@15                                             1906
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT LRU VALUES FOR STAGING DRIVE GROUP 0            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1907
*   PRSTART=MEMPTR+'6500'X;         /* SET START ADDR.       @Z40LB40*/
         L     PRSTART,@CF01677                                    1907
         AL    PRSTART,MEMPTR                                      1907
*   DO I3=0 TO 51;                  /* PRINT 52 LINES        @Z40LB40*/
         SLR   I3,I3                                               1908
@DL01908 DS    0H                                                  1909
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1909
         MVC   PRINTLN+2(119),PRINTLN+1                            1909
         MVI   PRINTLN,C' '                                        1909
*     IF I3//10=0 THEN              /* TEST FOR TEN LINES    @Z40LB40*/
         LR    @00,I3                                              1910
         SRDA  @00,32                                              1910
         D     @00,@CF00480                                        1910
         LTR   @00,@00                                             1910
         BNZ   @RF01910                                            1910
*       PRINTLNA=DOUBLESP;          /* DOUBLE SPACE AFTER    @Z40LB40
*                                      TEN LINES             @Z40LB40*/
         MVI   PRINTLNA,C'0'                                       1911
*     CVD(I3,DOUBLEWD);             /* CONVERT PAGE NO.      @Z40LB40*/
@RF01910 CVD   I3,DOUBLEWD                                         1912
*     DOUBLEWD(8:8)=DOUBLEWD(8:8)×'0F'X;/* FORCE F SIGN      @Z40LB40*/
         OI    DOUBLEWD+7,X'0F'                                    1913
*     UNPK(PRINTLNB(2:3),DOUBLEWD(7:8));/* UNPK PAGE NO.     @Z40LB40*/
         UNPK  PRINTLNB+1(2),DOUBLEWD+6(2)                         1914
*     PRLNPTR=7;                    /* INIT LINE POINTER     @Z40LB40*/
         LA    PRLNPTR,7                                           1915
*     DO J3=1 TO 8;                 /* PRINT 8 BYTES         @Z40LB40*/
         LA    J3,1                                                1916
@DL01916 DS    0H                                                  1917
*       UNPK(PRWORK,PRAREA);        /* UNPK LUA VALUE        @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1917
*       TR(PRWORK(1:2),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(2),TABLE                                     1918
*       PRINTLNB(PRLNPTR:PRLNPTR+1)=PRWORK;/* VALUE TO LINE  @Z40LB40*/
         LA    @02,PRINTLNB-1(PRLNPTR)                             1919
         MVC   0(2,@02),PRWORK                                     1919
*       PRLNPTR=PRLNPTR+5;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF00299                                    1920
*       PRSTART=PRSTART+'34'X;      /* BUMP ADDRESS          @Z40LB40*/
         AL    PRSTART,@CF01678                                    1921
*     END;                          /*                       @Z40LB40*/
         AL    J3,@CF00223                                         1922
         C     J3,@CF00183                                         1922
         BNH   @DL01916                                            1922
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1923
*     PRSTART=PRSTART-'01A0'X+1;    /* RESET START ADDRESS   @Z40LB40*/
         AL    PRSTART,@CF01748                                    1924
*   END;                            /*                       @Z40LB40*/
*                                                                  1925
         AL    I3,@CF00223                                         1925
         C     I3,@CF01668                                         1925
         BNH   @DL01908                                            1925
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR LRU HEADERS FOR STAGING              @Z40LB40*/
*   /* DRIVE GROUP 1                                         @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1926
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1926
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @07,DDSTRU                                          1927
         MVC   DARGSMOD(3,@07),@CC01334                            1927
*   DARGSENT=HLRU;                  /*                       @Z40LB40*/
         MVI   DARGSENT(@07),X'2F'                                 1928
*   DARGCNT=1;                      /*                       @Z40LB40*/
         LA    @04,1                                               1929
         STH   @04,DARGCNT(,@07)                                   1929
*   DARGINS(1)=1;                   /*                       @Z40LB40*/
         STH   @04,DARGINS(,@07)                                   1930
*   DARGINL(1)=LENGTH(SDG1);        /*                       @Z40LB40*/
         STH   @04,DARGINL(,@07)                                   1931
*   DARGDTM(1)=ADDR(SDG1);          /*                       @Z40LB40*/
         LA    @04,@CH00223+1                                      1932
         ST    @04,DARGDTM(,@07)                                   1932
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
*                                                                  1933
         L     @07,@PC00001                                        1933
         ST    @07,@AL00001                                        1933
         LA    @04,PRPTR                                           1933
         ST    @04,@AL00001+4                                      1933
         LA    @04,DDSTRU                                          1933
         ST    @04,@AL00001+8                                      1933
         MVI   @AL00001+8,X'80'                                    1933
         L     @15,GDTPRT(,@07)                                    1933
         LA    @01,@AL00001                                        1933
         BALR  @14,@15                                             1933
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT LRU VALUES FOR STAGING DRIVE GROUP 1            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1934
*   PRSTART=MEMPTR+'66A0'X;         /* SET START ADDR.       @Z40LB40*/
         L     PRSTART,@CF01680                                    1934
         AL    PRSTART,MEMPTR                                      1934
*   DO I3=0 TO 51;                  /* PRINT 52 LINES        @Z40LB40*/
         SLR   I3,I3                                               1935
@DL01935 DS    0H                                                  1936
*     PRINTLN=' ';                  /* BLANK PRINT LINE      @Z40LB40*/
         MVI   PRINTLN+1,C' '                                      1936
         MVC   PRINTLN+2(119),PRINTLN+1                            1936
         MVI   PRINTLN,C' '                                        1936
*     IF I3//10=0 THEN              /* TEST FOR TEN LINES    @Z40LB40*/
         LR    @00,I3                                              1937
         SRDA  @00,32                                              1937
         D     @00,@CF00480                                        1937
         LTR   @00,@00                                             1937
         BNZ   @RF01937                                            1937
*       PRINTLNA=DOUBLESP;          /* DOUBLE SPACE AFTER    @Z40LB40
*                                      TEN LINES             @Z40LB40*/
         MVI   PRINTLNA,C'0'                                       1938
*     CVD(I3,DOUBLEWD);             /* CONVERT PAGE NO.      @Z40LB40*/
@RF01937 CVD   I3,DOUBLEWD                                         1939
*     DOUBLEWD(8:8)=DOUBLEWD(8:8)×'0F'X;/* FORCE F SIGN      @Z40LB40*/
         OI    DOUBLEWD+7,X'0F'                                    1940
*     UNPK(PRINTLNB(2:3),DOUBLEWD(7:8));/* UNPK PAGE NO.     @Z40LB40*/
         UNPK  PRINTLNB+1(2),DOUBLEWD+6(2)                         1941
*     PRLNPTR=7;                    /* INIT LINE POINTER     @Z40LB40*/
         LA    PRLNPTR,7                                           1942
*     DO J3=1 TO 8;                 /* PRINT 8 BYTES         @Z40LB40*/
         LA    J3,1                                                1943
@DL01943 DS    0H                                                  1944
*       UNPK(PRWORK,PRAREA);        /* UNPK LUA VALUE        @Z40LB40*/
         UNPK  PRWORK(9),PRAREA(5,PRSTART)                         1944
*       TR(PRWORK(1:2),TABLE);      /* TR TO EBCDIC          @Z40LB40*/
         TR    PRWORK(2),TABLE                                     1945
*       PRINTLNB(PRLNPTR:PRLNPTR+1)=PRWORK;/* VALUE TO LINE  @Z40LB40*/
         LA    @02,PRINTLNB-1(PRLNPTR)                             1946
         MVC   0(2,@02),PRWORK                                     1946
*       PRLNPTR=PRLNPTR+5;          /* BUMP LINE POINTER     @Z40LB40*/
         AL    PRLNPTR,@CF00299                                    1947
*       PRSTART=PRSTART+'34'X;      /* BUMP ADDRESS          @Z40LB40*/
         AL    PRSTART,@CF01678                                    1948
*     END;                          /*                       @Z40LB40*/
         AL    J3,@CF00223                                         1949
         C     J3,@CF00183                                         1949
         BNH   @DL01943                                            1949
*     CALL DOUPRINT;                /* GO PRINT LINE         @Z40LB40*/
         BAL   @14,DOUPRINT                                        1950
*     PRSTART=PRSTART-'01A0'X+1;    /* RESET START ADDRESS   @Z40LB40*/
         AL    PRSTART,@CF01748                                    1951
*   END;                            /*                       @Z40LB40*/
         AL    I3,@CF00223                                         1952
         C     I3,@CF01668                                         1952
         BNH   @DL01935                                            1952
*   RFY                                                            1953
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1954
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00026 DS    0H                                                  1955
@EF00026 DS    0H                                                  1955
@ER00026 BR    @14                                                 1955
*   RFY                                                            1956
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END LRU;                        /*                       @Z40LB40*/
*                                                                  1958
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - SASTATUS (LEVEL 3)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE STAGING            @Z40LB40*/
*   /* ADAPTER GENERAL STATUS INFORMATION SECTOR.            @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - NONE                                          @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE STATUS            @Z40LB40*/
*   /* INFORMATION SECTOR. SEE REFERENCES TO SECTADDR        @Z40LB40*/
*   /* FOR ACTUAL LOCATION OF THE SECTOR.                    @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1958
*SASTATUS:                                                         1958
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
SASTATUS DS    0H                                                  1959
*   RFY                                                            1959
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR3,REG14                                      1960
*   RFY                                                            1961
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1962
         L     @07,@PC00001                                        1962
         L     @02,GDTTR2(,@07)                                    1962
         MVC   @TS00001(95),NEWERID2(@02)                          1962
         MVC   OLDERID2(95,@02),@TS00001                           1962
*   NEWID2='DUCV';                  /*                       @Z40LB40*/
*                                                                  1963
         MVC   NEWID2(4,@02),@CC01684                              1963
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR STATUS INFORMATION HEADER            @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1964
*   PRINTAB=''B;                    /*                       @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1964
*   DARGSMOD=DUMSGMOD;              /*                       @Z40LB40*/
         L     @02,DDSTRU                                          1965
         MVC   DARGSMOD(3,@02),@CC01334                            1965
*   DARGSENT=HSTATUS;               /*                       @Z40LB40*/
         MVI   DARGSENT(@02),X'2D'                                 1966
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @Z40LB40*/
         ST    @07,@AL00001                                        1967
         LA    @02,PRPTR                                           1967
         ST    @02,@AL00001+4                                      1967
         LA    @02,DDSTRU                                          1967
         ST    @02,@AL00001+8                                      1967
         MVI   @AL00001+8,X'80'                                    1967
         L     @15,GDTPRT(,@07)                                    1967
         LA    @01,@AL00001                                        1967
         BALR  @14,@15                                             1967
*   SECTADDR='0600'X;               /* SET SECTOR ADDRESS    @Z40LB40*/
         LA    SECTADDR,1536                                       1968
*   NUMBYTES=SECTSIZE;              /* SET NO. OF BYTES      @Z40LB40*/
         MVC   NUMBYTES(4),@CF01321                                1969
*   CALL PRNTSECT;                  /* PRINT STATUS INFO     @Z40LB40*/
         BAL   @14,PRNTSECT                                        1970
*   RFY                                                            1971
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR3                                      1972
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00027 DS    0H                                                  1973
@EF00027 DS    0H                                                  1973
@ER00027 BR    @14                                                 1973
*   RFY                                                            1974
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END SASTATUS;                   /*                       @Z40LB40*/
*                                                                  1976
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - DOUPRINT (LEVEL 5)                   @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* FUNCTION - THIS ROUTINE BUILDS A DARGLIST             @Z40LB40*/
*   /* A FMTLIST AND ISSUES UPRINT FOR A PREVIOUSLY          @Z40LB40*/
*   /* CONSTRUCTED PRINT LINE.                               @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* INPUT - PRINT LINE LOCATED AT PRINTLN.                @Z40LB40*/
*   /*                                                       @Z40LB40*/
*   /* OUTPUT - THE PRINT LINE                               @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1976
*DOUPRINT:                                                         1976
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Z40LB40*/
DOUPRINT DS    0H                                                  1977
*   RFY                                                            1977
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   RETADDR5=REG14;                 /* SAVE RETURN ADDR.     @Z40LB40*/
         LR    RETADDR5,REG14                                      1978
*   RFY                                                            1979
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   OLDERID2=NEWERID2;                                             1980
         L     @02,@PC00001                                        1980
         L     @02,GDTTR2(,@02)                                    1980
         MVC   @TS00001(95),NEWERID2(@02)                          1980
         MVC   OLDERID2(95,@02),@TS00001                           1980
*   NEWID2='DUEA';                  /*                       @Z40LB40*/
         MVC   NEWID2(4,@02),@CC01689                              1981
*   FSADDR=ADDR(FORMLIST);          /* INIT FMTLIST PTR      @Z40LB40*/
         LA    @02,FORMLIST                                        1982
         ST    @02,FSADDR                                          1982
*   FORMLIST=''B;                   /* CLEAR FMTLIST         @Z40LB40*/
         XC    FORMLIST(20),FORMLIST                               1983
*   FMTSCF=ON;                      /* INDICATE SPACING      @Z40LB40*/
         OI    FMTSCF(@02),B'01000000'                             1984
*   IF PRINTLNA=DOUBLESP THEN       /* IS THIS 2 SPACES      @Z40LB40*/
         CLI   PRINTLNA,C'0'                                       1985
         BNE   @RF01985                                            1985
*     FMTSPF=2;                     /* YES,SET TO 2 SPACES   @Z40LB40*/
         MVC   FMTSPF(2,@02),@CH00157                              1986
*   ELSE                                                           1987
*     FMTSPF=1;                     /* NO,SET TO 1 SPACE     @Z40LB40*/
         B     @RC01985                                            1987
@RF01985 L     @02,FSADDR                                          1987
         MVC   FMTSPF(2,@02),@CH00223                              1987
*   FMTSPT='R';                     /* RELATIVE SPACING      @Z40LB40*/
@RC01985 L     @02,FSADDR                                          1988
         MVI   FMTSPT(@02),C'R'                                    1988
*   FSADDR=FSADDR+(ADDR(FMTOCOL)-ADDR(FMTFLGS));/*           @Z40LB40*/
         AL    @02,@CF00160                                        1989
         ST    @02,FSADDR                                          1989
*   FMTEOLF=ON;                     /* LAST STRUCTURE        @Z40LB40*/
*   FMTBDF=ON;                      /* BLOCK DATA            @Z40LB40*/
         OI    FMTEOLF(@02),B'10010000'                            1991
*   FMTILEN=LENGTH(PRINTLNB);       /* INPUT LENGTH          @Z40LB40*/
         LA    @15,120                                             1992
         STH   @15,FMTILEN(,@02)                                   1992
*   FMTOCOL=1;                      /* OUTPUT POSITION       @Z40LB40*/
         MVC   FMTOCOL(2,@02),@CH00223                             1993
*   FMTOLEN=LENGTH(PRINTLNB);       /* OUTPUT LENGTH         @Z40LB40*/
         STH   @15,FMTOLEN(,@02)                                   1994
*   FSADDR=ADDR(FORMLIST);          /* RESET FMLIST PTR      @Z40LB40*/
         LA    @02,FORMLIST                                        1995
         ST    @02,FSADDR                                          1995
*   PRINTAB=''B;                    /* CLEAR DARGLIST        @Z40LB40*/
         XC    PRINTAB(44),PRINTAB                                 1996
*   DARGDBP=ADDR(PRINTLNB);         /* BLOCK DATA PTR        @Z40LB40*/
         L     @02,DDSTRU                                          1997
         LA    @14,PRINTLNB                                        1997
         ST    @14,DARGDBP(,@02)                                   1997
*   DARGILP=LENGTH(PRINTLNB);       /* LENGTH OF BLOCK       @Z40LB40*/
*                                                                  1998
         STH   @15,DARGILP(,@02)                                   1998
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT WITH FMTLIST                             @Z40LB40*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1999
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU,FSADDR);/* PRINT THE LINE    1999
*                                                            @Z40LB40*/
         L     @02,@PC00001                                        1999
         ST    @02,@AL00001                                        1999
         LA    @15,PRPTR                                           1999
         ST    @15,@AL00001+4                                      1999
         LA    @15,DDSTRU                                          1999
         ST    @15,@AL00001+8                                      1999
         LA    @15,FSADDR                                          1999
         ST    @15,@AL00001+12                                     1999
         MVI   @AL00001+12,X'80'                                   1999
         L     @15,GDTPRT(,@02)                                    1999
         LA    @01,@AL00001                                        1999
         BALR  @14,@15                                             1999
*   RFY                                                            2000
*     REG14 RSTD;                   /* RESTRICT R14          @Z40LB40*/
*   REG14=RETADDR5;                 /* RESET RETURN POINT    @Z40LB40*/
         LR    REG14,RETADDR5                                      2001
*   RETURN;                         /* RETURN TO CALLER      @Z40LB40*/
@EL00028 DS    0H                                                  2002
@EF00028 DS    0H                                                  2002
@ER00028 BR    @14                                                 2002
*   RFY                                                            2003
*     REG14 UNRSTD;                 /* FREE R14              @Z40LB40*/
*   END DOUPRINT;                   /*                       @Z40LB40*/
*                                                                  2005
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - BAR (LEVEL 3)                        @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC BACKUP         @ZD00050*/
*   /* ADDRESS REGISTER.                                     @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* INPUT - NONE                                          @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE CONTENTS OF       @ZD00050*/
*   /* THE REGISTER. SEE REFERENCES TO SECTADDR FOR ACTUAL   @ZD00050*/
*   /* LOCATION OF THE DATA.                                 @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2005
*BAR:                                                              2005
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZD00050*/
BAR      DS    0H                                                  2006
*   RFY                                                            2006
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @ZD00050*/
         LR    RETADDR3,REG14                                      2007
*   RFY                                                            2008
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   OLDERID2=NEWERID2;                                             2009
         L     @07,@PC00001                                        2009
         L     @02,GDTTR2(,@07)                                    2009
         MVC   @TS00001(95),NEWERID2(@02)                          2009
         MVC   OLDERID2(95,@02),@TS00001                           2009
*   NEWID2='DUCW';                  /*                       @ZD00050*/
*                                                                  2010
         MVC   NEWID2(4,@02),@CC01694                              2010
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR BAR HEADER                           @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2011
*   PRINTAB=''B;                    /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 2011
*   DARGSMOD=DUMSGMOD;              /*                       @ZD00050*/
         L     @02,DDSTRU                                          2012
         MVC   DARGSMOD(3,@02),@CC01334                            2012
*   DARGSENT=HBAR;                  /*                       @ZD00050*/
         MVI   DARGSENT(@02),X'13'                                 2013
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @ZD00050*/
         ST    @07,@AL00001                                        2014
         LA    @02,PRPTR                                           2014
         ST    @02,@AL00001+4                                      2014
         LA    @02,DDSTRU                                          2014
         ST    @02,@AL00001+8                                      2014
         MVI   @AL00001+8,X'80'                                    2014
         L     @15,GDTPRT(,@07)                                    2014
         LA    @01,@AL00001                                        2014
         BALR  @14,@15                                             2014
*   SECTADDR='04A8'X;               /* SET SECT ADDR.        @ZD00050*/
         LA    SECTADDR,1192                                       2015
*   NUMBYTES=2;                     /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF00157                                2016
*   CALL PRNTSECT;                  /* PRINT BAR             @ZD00050*/
         BAL   @14,PRNTSECT                                        2017
*   RFY                                                            2018
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @ZD00050*/
         LR    REG14,RETADDR3                                      2019
*   RETURN;                         /* RETURN TO CALLER      @ZD00050*/
@EL00029 DS    0H                                                  2020
@EF00029 DS    0H                                                  2020
@ER00029 BR    @14                                                 2020
*   RFY                                                            2021
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   END BAR;                        /*                       @ZD00050*/
*                                                                  2023
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - MSCEC (LEVEL 3)                      @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC ENGINEERING    @ZD00050*/
*   /* CHANGE LEVEL.                                         @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* INPUT - NONE                                          @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE MSC E.C.LEVEL.    @ZD00050*/
*   /* SEE REFERENCES TO SECTADDR FOR ACTUAL LOCATION OF     @ZD00050*/
*   /* THE DATA.                                             @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2023
*MSCEC:                                                            2023
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZD00050*/
MSCEC    DS    0H                                                  2024
*   RFY                                                            2024
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @ZD00050*/
         LR    RETADDR3,REG14                                      2025
*   RFY                                                            2026
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   OLDERID2=NEWERID2;                                             2027
         L     @07,@PC00001                                        2027
         L     @02,GDTTR2(,@07)                                    2027
         MVC   @TS00001(95),NEWERID2(@02)                          2027
         MVC   OLDERID2(95,@02),@TS00001                           2027
*   NEWID2='DUCX';                  /*                       @ZD00050*/
*                                                                  2028
         MVC   NEWID2(4,@02),@CC01699                              2028
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR E.C. LEVEL HEADER                    @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2029
*   PRINTAB=''B;                    /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 2029
*   DARGSMOD=DUMSGMOD;              /*                       @ZD00050*/
         L     @02,DDSTRU                                          2030
         MVC   DARGSMOD(3,@02),@CC01334                            2030
*   DARGSENT=HEC;                   /*                       @ZD00050*/
         MVI   DARGSENT(@02),X'17'                                 2031
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @ZD00050*/
         ST    @07,@AL00001                                        2032
         LA    @02,PRPTR                                           2032
         ST    @02,@AL00001+4                                      2032
         LA    @02,DDSTRU                                          2032
         ST    @02,@AL00001+8                                      2032
         MVI   @AL00001+8,X'80'                                    2032
         L     @15,GDTPRT(,@07)                                    2032
         LA    @01,@AL00001                                        2032
         BALR  @14,@15                                             2032
*   SECTADDR='4CFC'X;               /* SET SECT ADDR.        @ZD00050*/
         L     SECTADDR,@CF01700                                   2033
*   NUMBYTES=4;                     /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF00044                                2034
*   CALL PRNTSECT;                  /* PRINT E.C.LEVEL       @ZD00050*/
         BAL   @14,PRNTSECT                                        2035
*   RFY                                                            2036
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @ZD00050*/
         LR    REG14,RETADDR3                                      2037
*   RETURN;                         /* RETURN TO CALLER      @ZD00050*/
@EL00030 DS    0H                                                  2038
@EF00030 DS    0H                                                  2038
@ER00030 BR    @14                                                 2038
*   RFY                                                            2039
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   END MSCEC;                      /*                       @ZD00050*/
*                                                                  2041
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - TABUCB (LEVEL 3)                     @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE MSC TABLES         @ZD00050*/
*   /* PRIMARY, SECONDARY AND AUXILIARY UNIT CONTROL BLOCKS. @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* INPUT - NONE                                          @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE UNIT CONTROL      @ZD00050*/
*   /* BLOCKS. SEE REFERENCES TO SECTADDR FOR ACTUAL         @ZD00050*/
*   /* LOCATION OF THE DATA.                                 @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2041
*TABUCB:                                                           2041
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZD00050*/
TABUCB   DS    0H                                                  2042
*   RFY                                                            2042
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   RETADDR3=REG14;                 /* SAVE RETURN POINT     @ZD00050*/
         LR    RETADDR3,REG14                                      2043
*   RFY                                                            2044
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   OLDERID2=NEWERID2;                                             2045
         L     @07,@PC00001                                        2045
         L     @02,GDTTR2(,@07)                                    2045
         MVC   @TS00001(95),NEWERID2(@02)                          2045
         MVC   OLDERID2(95,@02),@TS00001                           2045
*   NEWID2='DUCY';                  /*                       @ZD00050*/
*                                                                  2046
         MVC   NEWID2(4,@02),@CC01704                              2046
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR TABLES UCB HEADER                    @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2047
*   PRINTAB=''B;                    /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 2047
*   DARGSMOD=DUMSGMOD;              /*                       @ZD00050*/
         L     @02,DDSTRU                                          2048
         MVC   DARGSMOD(3,@02),@CC01334                            2048
*   DARGSENT=HTUCB;                 /*                       @ZD00050*/
         MVI   DARGSENT(@02),X'1A'                                 2049
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @ZD00050*/
*                                                                  2050
         ST    @07,@AL00001                                        2050
         LA    @02,PRPTR                                           2050
         ST    @02,@AL00001+4                                      2050
         LA    @02,DDSTRU                                          2050
         ST    @02,@AL00001+8                                      2050
         MVI   @AL00001+8,X'80'                                    2050
         L     @15,GDTPRT(,@07)                                    2050
         LA    @01,@AL00001                                        2050
         BALR  @14,@15                                             2050
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT PRIMARY TABLES UCB                              @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2051
*   SECTADDR='0340'X;               /* SET SECT ADDR         @ZD00050*/
         LA    SECTADDR,832                                        2051
*   NUMBYTES=8;                     /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF00183                                2052
*   CALL PRNTSECT;                  /* PRINT UCB             @ZD00050*/
*                                                                  2053
         BAL   @14,PRNTSECT                                        2053
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SECONDARY TABLES UCB                            @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2054
*   SECTADDR='0148'X;               /* SET SECT ADDR         @ZD00050*/
         LA    SECTADDR,328                                        2054
*   NUMBYTES=8;                     /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF00183                                2055
*   CALL PRNTSECT;                  /* PRINT UCB             @ZD00050*/
*                                                                  2056
         BAL   @14,PRNTSECT                                        2056
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT AUXILIARY TABLES UCB                            @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2057
*   SECTADDR='0348'X;               /* SET SECT ADDR         @ZD00050*/
         LA    SECTADDR,840                                        2057
*   NUMBYTES=8;                     /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF00183                                2058
*   CALL PRNTSECT;                  /* PRINT UCB             @ZD00050*/
         BAL   @14,PRNTSECT                                        2059
*   RFY                                                            2060
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @ZD00050*/
         LR    REG14,RETADDR3                                      2061
*   RETURN;                         /* RETURN TO CALLER      @ZD00050*/
@EL00031 DS    0H                                                  2062
@EF00031 DS    0H                                                  2062
@ER00031 BR    @14                                                 2062
*   RFY                                                            2063
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   END TABUCB;                     /*                       @ZD00050*/
*                                                                  2065
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - SAEC (LEVEL 3)                       @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* FUNCTION - THIS ROUTINE PRINTS THE SA ENGINEERING     @ZD00050*/
*   /* CHANGE LEVEL.                                         @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* INPUT - NONE                                          @ZD00050*/
*   /*                                                       @ZD00050*/
*   /* OUTPUT - A HEXADECIMAL PRINT OF THE SA E.C.LEVEL.     @ZD00050*/
*   /* SEE REFERENCES TO SECTADDR FOR ACTUAL LOCATION OF     @ZD00050*/
*   /* THE DATA.                                             @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2065
*SAEC:                                                             2065
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZD00050*/
SAEC     DS    0H                                                  2066
*   RFY                                                            2066
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   RETADDR3=REG14;                 /* SAVE RETURN ADDR.     @ZD00050*/
         LR    RETADDR3,REG14                                      2067
*   RFY                                                            2068
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   OLDERID2=NEWERID2;                                             2069
         L     @07,@PC00001                                        2069
         L     @02,GDTTR2(,@07)                                    2069
         MVC   @TS00001(95),NEWERID2(@02)                          2069
         MVC   OLDERID2(95,@02),@TS00001                           2069
*   NEWID2='DUCZ';                  /*                       @ZD00050*/
*                                                                  2070
         MVC   NEWID2(4,@02),@CC01711                              2070
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT FOR E.C. LEVEL HEADER                    @ZD00050*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2071
*   PRINTAB=''B;                    /*                       @ZD00050*/
         XC    PRINTAB(44),PRINTAB                                 2071
*   DARGSMOD=DUMSGMOD;              /*                       @ZD00050*/
         L     @02,DDSTRU                                          2072
         MVC   DARGSMOD(3,@02),@CC01334                            2072
*   DARGSENT=HEC;                   /*                       @ZD00050*/
         MVI   DARGSENT(@02),X'17'                                 2073
*   CALL AMSTP011(GDTTBL,PRPTR,DDSTRU);/*                    @ZD00050*/
         ST    @07,@AL00001                                        2074
         LA    @02,PRPTR                                           2074
         ST    @02,@AL00001+4                                      2074
         LA    @02,DDSTRU                                          2074
         ST    @02,@AL00001+8                                      2074
         MVI   @AL00001+8,X'80'                                    2074
         L     @15,GDTPRT(,@07)                                    2074
         LA    @01,@AL00001                                        2074
         BALR  @14,@15                                             2074
*   SECTADDR='00E0'X;               /* SET SECT ADDR.        @ZD00050*/
         LA    SECTADDR,224                                        2075
*   NUMBYTES=4;                     /* SET NO. OF BYTES      @ZD00050*/
         MVC   NUMBYTES(4),@CF00044                                2076
*   CALL PRNTSECT;                  /* PRINT E.C.LEVEL       @ZD00050*/
         BAL   @14,PRNTSECT                                        2077
*   RFY                                                            2078
*     REG14 RSTD;                   /* RESTRICT R14          @ZD00050*/
*   REG14=RETADDR3;                 /* RESET RETURN POINT    @ZD00050*/
         LR    REG14,RETADDR3                                      2079
*   RETURN;                         /* RETURN TO CALLER      @ZD00050*/
@EL00032 DS    0H                                                  2080
@EF00032 DS    0H                                                  2080
@ER00032 BR    @14                                                 2080
*   RFY                                                            2081
*     REG14 UNRSTD;                 /* FREE R14              @ZD00050*/
*   END SAEC;                       /*                       @ZD00050*/
*                                                                  2083
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  2083
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           2083
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
SSCMSG   STM   @14,@12,@SA00033                                    2083
         MVC   @PC00033(8),0(@01)                                  2083
*                                   /*                       @Y30LB39*/
*                                                                  2084
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2084
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2084
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2084
*                                   /*                       @Y30LB39*/
*   DCL                                                            2084
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            2085
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2085
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2086
*                                   /*                       @Y30LB39*/
*   DCL                                                            2086
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            2087
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2087
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2088
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        2088
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2088
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2089
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        2089
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2089
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2090
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        2090
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2090
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2091
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        2091
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2091
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2092
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        2092
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  2093
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2093
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             2093
         L     @15,@PC00001                                        2093
         L     @14,GDTTR2(,@15)                                    2093
         MVC   @TS00001(95),NEWERID2(@14)                          2093
         MVC   OLDERID2(95,@14),@TS00001                           2093
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2094
         MVC   NEWID2(4,@14),@CC01732                              2094
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2095
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2095
         LA    @14,SSDRGLT                                         2095
         ST    @14,SSDLPTR                                         2095
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2096
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              2096
         L     @07,@PC00033                                        2096
         L     @07,SSRCODE(,@07)                                   2096
         LTR   @07,@07                                             2096
         BNP   @RF02096                                            2096
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2097
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  2098
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 2098
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @03,SSINXLST                                        2099
         ST    @03,DARGRETP(,@14)                                  2099
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@14),SSMODSS0                            2100
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@14),X'01'                                 2101
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2102
         MVC   DARGRETL(2,@14),@CH01281                            2102
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  2103
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2103
         ST    @15,@AL00001                                        2103
         LA    @03,@CF00118                                        2103
         ST    @03,@AL00001+4                                      2103
         LA    @03,SSDLPTR                                         2103
         ST    @03,@AL00001+8                                      2103
         MVI   @AL00001+8,X'80'                                    2103
         L     @15,GDTPRT(,@15)                                    2103
         LA    @01,@AL00001                                        2103
         BALR  @14,@15                                             2103
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  2104
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         LA    ENTRYNUM,1                                          2104
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   2105
@DL02105 DS    0H                                                  2106
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         LA    ENTRYNUM,1(,ENTRYNUM)                               2106
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2107
@DE02105 L     @03,@PC00033                                        2107
         LR    @15,ENTRYNUM                                        2107
         ALR   @15,@15                                             2107
         LH    @15,SSARRAY-2(@15)                                  2107
         CH    @15,SSRHALF(,@03)                                   2107
         BE    @DC02105                                            2107
         LTR   @15,@15                                             2107
         BNZ   @DL02105                                            2107
@DC02105 DS    0H                                                  2108
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  2108
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 2108
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @03,SSDLPTR                                         2109
         MVC   DARGSMOD(3,@03),SSMODSS0                            2109
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   ENTRYNUM,DARGSENT(,@03)                             2110
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         LR    @15,ENTRYNUM                                        2111
         ALR   @15,@15                                             2111
         LH    @15,SSARRAY-2(@15)                                  2111
         LTR   @15,@15                                             2111
         BNZ   @RF02111                                            2111
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         L     @02,@PC00033                                        2113
         ST    @02,DARGDBP(,@03)                                   2113
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@03),@CH00044                             2114
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  2117
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2117
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC02096                                            2117
@RF02096 DS    0H                                                  2118
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 2118
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @15,SSDLPTR                                         2119
         MVC   DARGSMOD(3,@15),SSMODCM0                            2119
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         IC    @14,SSMSGNUM                                        2120
         STC   @14,DARGSENT(,@15)                                  2120
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @14,@PC00033+4                                      2121
         ST    @14,DARGDBP(,@15)                                   2121
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@15),@CH00223                             2122
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2123
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2124
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  2124
@RC02096 L     @15,@PC00001                                        2124
         ST    @15,@AL00001                                        2124
         LA    @14,@CF00118                                        2124
         ST    @14,@AL00001+4                                      2124
         LA    @14,SSDLPTR                                         2124
         ST    @14,@AL00001+8                                      2124
         MVI   @AL00001+8,X'80'                                    2124
         L     @15,GDTPRT(,@15)                                    2124
         LA    @01,@AL00001                                        2124
         BALR  @14,@15                                             2124
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2125
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             2125
         L     @14,@SA00033                                        2125
         LM    @00,@12,@SA00033+8                                  2125
         BR    @14                                                 2125
*   END SSCMSG;                     /*                       @Y30LB39*/
*   END IDCDU01                     /*                       @Z40LB40*/
*                                                                  2127
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IDCCSDU )                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*                                                                  2127
*       ;                                                          2127
@DATA    DS    0H
@CH00847 DC    H'44'
@CH01281 DC    H'120'
@CH01251 DC    H'121'
         DS    0F
@AL00525 DC    A(@CC01344)             LIST WITH   1 ARGUMENT(S)
@AL00592 DC    A(@CC01346)             LIST WITH   1 ARGUMENT(S)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@PC00003 DS    1F
@PC00005 DS    2F
@SA00033 DS    15F
@PC00033 DS    2F
@AL00001 DS    4A
@AFTEMPS DS    1F
IDCDU01  CSECT
         DS    0F
@CF00118 DC    F'0'
@CH00118 EQU   @CF00118+2
@CF00223 DC    F'1'
@CH00223 EQU   @CF00223+2
@CF00157 DC    F'2'
@CH00157 EQU   @CF00157+2
@CF00166 DC    F'3'
@CH00166 EQU   @CF00166+2
@CF00044 DC    F'4'
@CH00044 EQU   @CF00044+2
@CF00299 DC    F'5'
@CF00160 DC    F'6'
@CF00183 DC    F'8'
@CH00183 EQU   @CF00183+2
@CF01152 DC    F'9'
@CF00480 DC    F'10'
@CF00606 DC    F'12'
@CH00606 EQU   @CF00606+2
@CF00510 DC    F'16'
@CF00280 DC    F'20'
@CF01415 DC    F'28'
@CF00225 DC    F'32'
@CF01668 DC    F'51'
@CF01663 DC    F'60'
@CF01619 DC    F'79'
@CF01321 DC    F'256'
@CF01493 DC    F'4096'
@CF01361 DC    F'68872'
@CF01744 DC    F'-2044'
@CF01747 DC    F'-1660'
@CF01748 DC    F'-415'
@CF01743 DC    F'-256'
@CF01757 DC    F'-68'
@CF01753 DC    F'-4'
@CF01515 DC    XL4'10000'
@CF01672 DC    XL4'10680'
@CF01536 DC    XL4'000F'
@CF01538 DC    XL4'7000'
@CF01539 DC    XL4'1000'
@CF01540 DC    XL4'0100'
@CF01547 DC    XL4'1200'
@CF01548 DC    XL4'7B00'
@CF01549 DC    XL4'7800'
@CF01550 DC    XL4'3B00'
@CF01555 DC    XL4'5800'
@CF01556 DC    XL4'5C00'
@CF01557 DC    XL4'5E00'
@CF01558 DC    XL4'3200'
@CF01559 DC    XL4'3C00'
@CF01560 DC    XL4'0200'
@CF01565 DC    XL4'6800'
@CF01566 DC    XL4'6A00'
@CF01567 DC    XL4'6B00'
@CF01568 DC    XL4'6E00'
@CF01569 DC    XL4'6F00'
@CF01570 DC    XL4'B000'
@CF01571 DC    XL4'BF00'
@CF01576 DC    XL4'7C00'
@CF01577 DC    XL4'7F00'
@CF01586 DC    XL4'1D00'
@CF01591 DC    XL4'C900'
@CF01596 DC    XL4'5000'
@CF01597 DC    XL4'50E0'
@CF01604 DC    XL4'0500'
@CF01609 DC    XL4'5D00'
@CF01617 DC    XL4'6900'
@CF01645 DC    XL4'4A00'
@CF01651 DC    XL4'069F'
@CF01657 DC    XL4'06BF'
@CF01662 DC    XL4'7FC4'
@CF01677 DC    XL4'6500'
@CF01680 DC    XL4'66A0'
@CF01700 DC    XL4'4CFC'
@CF00589 DC    XL4'FF'
@CF01513 DC    XL4'03'
@CF01516 DC    XL4'CC'
@CF01522 DC    XL4'01'
@CF01598 DC    XL4'10'
@CF01610 DC    XL4'3F'
@CF01612 DC    XL4'0F'
@CF01621 DC    XL4'20'
@CF01623 DC    XL4'BF'
@CF01670 DC    XL4'D0'
@CF01678 DC    XL4'34'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
QUERYPTR DS    A
RETADDR1 DS    A
RETADDR2 DS    A
RETADDR4 DS    A
MEMPTR   DS    A
NUMBYTES DS    F
HISECT   DS    F
LOSECT   DS    F
I1       DS    F
I2       DS    F
J2       DS    F
K3       DS    F
L3       DS    F
I4       DS    F
K4       DS    F
PRPTR    DS    A
B0BASE   DS    A
B1BASE   DS    A
LOCHRHLD DS    FL4
         ORG   LOCHRHLD
@NM00096 DS    FL1
LOCC     DS    FL1
LOHH     DS    FL1
LORR     DS    FL1
         ORG   LOCHRHLD+4
HICHRHLD DS    FL4
         ORG   HICHRHLD
@NM00097 DS    FL1
HICC     DS    FL1
HIHH     DS    FL1
HIRR     DS    FL1
         ORG   HICHRHLD+4
REASON   DS    F
SSDLPTR  DS    A
LISTPTR  DS    A
MSCRC    DS    H
SARC     DS    H
TABRC    DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
FORMLIST DS    CL20
PCARG    DS    CL33
         ORG   PCARG
PCMTLP   DS    AL4
PCSTLP   DS    AL4
PCFLP    DS    AL4
PCPCP    DS    AL4
PCPNL    DS    FL2
PCPTL    DS    FL2
PCPDL    DS    FL2
PCMTLC   DS    FL2
PCSTLC   DS    FL2
PCFLC    DS    FL2
PCLW     DS    FL2
PCPD     DS    FL2
PCDSC    DS    AL1
         ORG   PCARG+33
         DS    CL3
OPENLIST DS    CL384
PRINTAB  DS    CL44
PARMLST  DS    CL44
PREFIX   DS    CL8
         ORG   PREFIX
PREFIX1  DS    FL4
PREFIX2  DS    FL4
         ORG   PREFIX+8
STBUFFER DS    CL121
PRINTLN  DS    CL121
         ORG   PRINTLN
PRINTLNA DS    CL1
PRINTLNB DS    CL120
         ORG   PRINTLN+121
         DS    CL2
PROSET   DS    CL5
         ORG   PROSET
PROSET1  DS    FL4
         ORG   PROSET1
PROSET2  DS    FL1
@NM00094 DS    FL3
         ORG   PROSET+4
@NM00095 DS    CL1
         ORG   PROSET+5
PRWORK   DS    CL9
         DS    CL6
DOUBLEWD DS    CL8
BITOUT   DS    CL8
FLAGS    DS    BL1
         ORG   FLAGS
GOTCORE  DS    BL1
GETSFAIL EQU   FLAGS+0
GOTMSCM  EQU   FLAGS+0
GOTMSCE  EQU   FLAGS+0
GOTSAM   EQU   FLAGS+0
GOTSAE   EQU   FLAGS+0
CHRERR   EQU   FLAGS+0
EXERR    EQU   FLAGS+0
         ORG   FLAGS+1
         DS    CL3
RTAREA   DS    CL512
         ORG   RTAREA
RTRECA   DS    CL256
         ORG   RTRECA
@NM00098 DS    CL248
RTPREFIX DS    CL8
         ORG   RTAREA+256
RTRECB   DS    CL256
         ORG   RTAREA+512
DUMPAREA DS    CL17
SSDRGLT  DS    CL20
         DS    CL3
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
EXARRAY  DS    16CL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCDU01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SSIDMASK DC    XL4'0000000F'
DSMASK   DC    XL4'0000000F'
SSMSGNUM DC    AL1(56)
@CC01633 DC    C'00000000'
@CC01523 DC    C'PARMLST'
@CC01344 DC    C'MSCM'
@CC01346 DC    C'MSCE'
@CC01348 DC    C'SAMA'
@CC01350 DC    C'SAEX'
@CC01352 DC    C'TABL'
@CC01451 DC    C'DUAA'
@CC01456 DC    C'DUAZ'
@CC01460 DC    C'DUBA'
@CC01481 DC    C'DUBB'
@CC01497 DC    C'DUBC'
@CC01510 DC    C'DUCA'
@CC01528 DC    C'DUDA'
@CC01535 DC    C'DUCB'
@CC01544 DC    C'DUCC'
@CC01554 DC    C'DUCD'
@CC01564 DC    C'DUCE'
@CC01575 DC    C'DUCF'
@CC01581 DC    C'DUCG'
@CC01585 DC    C'DUCH'
@CC01590 DC    C'DUCI'
@CC01595 DC    C'DUCJ'
@CC01602 DC    C'DUCL'
@CC01608 DC    C'DUCM'
@CC01616 DC    C'DUCN'
@CC01631 DC    C'DUDB'
@CC01638 DC    C'DUCO'
@CC01644 DC    C'DUCP'
@CC01649 DC    C'DUCQ'
@CC01655 DC    C'DUCR'
@CC01661 DC    C'DUCS'
@CC01667 DC    C'DUCT'
@CC01676 DC    C'DUCU'
@CC01684 DC    C'DUCV'
@CC01689 DC    C'DUEA'
@CC01694 DC    C'DUCW'
@CC01699 DC    C'DUCX'
@CC01704 DC    C'DUCY'
@CC01711 DC    C'DUCZ'
@CC01732 DC    C'SSAA'
@CC01334 DC    C'DU0'
@CC01336 DC    C'UV0'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
RVOPENR  DC    CL8'OPENR   '
RVRDCNT  DC    CL8'READCNT '
RVREADKD DC    CL8'READKD  '
RVSPACCR DC    CL8'SPACCR  '
RVFWRITE DC    CL8'FWRITE  '
RVWRITER DC    CL8'WRITEREC'
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODIFYC  DC    CL8'MODIFYC '
MODID    DC    CL4'DU01'
TABLE    DS    CL256
         ORG   TABLE
@NM00099 DC    CL240' '
@NM00100 DC    CL16'0123456789ABCDEF'
         ORG   TABLE+256
         DS    CL3
FIXAREA  DS    CL500
         ORG   FIXAREA
@NM00101 DC    500X'00'
         ORG   FIXAREA+500
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTRYNUM EQU   @02
MSPTR    EQU   @05
BYTEMASK EQU   @03
WORKBYTE EQU   @05
PRBYTES  EQU   @02
PRSTART  EQU   @05
PRLNPTR  EQU   @03
J4       EQU   @07
J3       EQU   @07
I3       EQU   @04
K2       EQU   @02
SECTADDR EQU   @03
RETADDR5 EQU   @03
RETADDR3 EQU   @06
GETDRC   EQU   @06
DMPINDEX EQU   @02
OPNPTR   EQU   @02
TESTRC   EQU   @03
REG12    EQU   @12
REG11    EQU   @11
REG10    EQU   @10
REG9     EQU   @09
REG8     EQU   @08
RTNREG   EQU   @15
REG14    EQU   @14
QUERR1   EQU   @01
REG0     EQU   @00
REG1     EQU   @01
REG13    EQU   @13
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
IDCSAEP0 EQU   0
IDCSAGS0 EQU   0
IDCSAFS0 EQU   0
IDCSASS0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
RACFAGL  EQU   0
RACFFLG1 EQU   RACFAGL
RACFFLG2 EQU   RACFAGL+1
RACFFLG3 EQU   RACFAGL+2
RACFFLG4 EQU   RACFAGL+3
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00017 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNMODAC EQU   OPNMOD
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNDSN   EQU   OPNAGL+16
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
AMSTP042 EQU   0
AMSTP044 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGCNT  EQU   DARGLIST+14
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
DARGDTM  EQU   DARGARY+4
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTEOLF  EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTSPT   EQU   FMTSTO
FMTOCOL  EQU   FMTLIST+6
FMTOLEN  EQU   FMTLIST+8
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTARRAY  EQU   CTMSG+4
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKFLAGS  EQU   CKAGL+28
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXOPT    EQU   EXOARG+32
EXFLG    EQU   EXOARG+33
EXGARG   EQU   0
EXWRARG  EQU   0
EXRWCHR  EQU   EXWRARG+26
EXSPACE  EQU   EXWRARG+36
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
SV82LIST EQU   0
@NM00073 EQU   SV82LIST+4
SV82DCBP EQU   @NM00073
@NM00074 EQU   SV82LIST+12
SV82WRKP EQU   @NM00074
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
MSC      EQU   0
MFMT     EQU   0
MSCTMCNT EQU   0
MMLOPTR  EQU   0
MMLO     EQU   0
MMLOVAL  EQU   MMLO
MMHIPTR  EQU   0
MMHI     EQU   0
MMHIVAL  EQU   MMHI
MSCTECNT EQU   0
MELOPTR  EQU   0
MELO     EQU   0
MELOVAL  EQU   MELO
MEHIPTR  EQU   0
MEHI     EQU   0
MEHIVAL  EQU   MEHI
STGADCNT EQU   0
SSIDPTR  EQU   0
SSID     EQU   0
SSIDVAL  EQU   SSID
SFMTPTR  EQU   0
SSCTMCNT EQU   0
SMLOPTR  EQU   0
SMLO     EQU   0
SMLOVAL  EQU   SMLO
SMHIPTR  EQU   0
SMHI     EQU   0
SMHIVAL  EQU   SMHI
SSCTECNT EQU   0
SELOPTR  EQU   0
SELO     EQU   0
SELOVAL  EQU   SELO
SEHIPTR  EQU   0
SEHI     EQU   0
SEHIVAL  EQU   SEHI
TBLCNT   EQU   0
LOCHRPTR EQU   0
LOCHR    EQU   0
LOCHRVAL EQU   LOCHR
HICHRPTR EQU   0
HICHR    EQU   0
HICHRVAL EQU   HICHR
OFILE    EQU   0
OFILEVAL EQU   OFILE+1
ODS      EQU   0
ODSFLG   EQU   ODS+10
ODSVAL   EQU   ODS+21
AMSC     EQU   0
QUERYLST EQU   0
QUCODE   EQU   QUERYLST+6
QUSECT   EQU   QUERYLST+7
QUXADDR  EQU   QUSECT
QUFLAG   EQU   QUXADDR
QUPARM   EQU   QUERYLST+8
QUPTR    EQU   QUERYLST+40
PRAREA   EQU   0
MEMBYTE  EQU   0
MEMSECT  EQU   0
AMSTP041 EQU   0
AMSTP043 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAGP0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARK0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
MSCTE    EQU   0
MSCTM    EQU   0
NEWERID1 EQU   5
SFMT     EQU   0
SSCTE    EQU   0
SSCTEPTR EQU   0
SSCTM    EQU   0
SSCTMPTR EQU   0
STGAD    EQU   0
TBL      EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
GDTRCK   EQU   GDTTBL+284
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
S1       EQU   0
GETDTYPE EQU   0
GETDSEC  EQU   0
GETDCC   EQU   GETDSEC+1
GETDHH   EQU   GETDSEC+2
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
QWPARM   EQU   QUPARM
QWRES1   EQU   QWPARM
QWSSID   EQU   QWRES1
QWFLAG   EQU   QWPARM+2
QWMEM    EQU   QWFLAG
QWALTMSC EQU   QWFLAG
QTPARM   EQU   QUPARM
QTID     EQU   QTPARM
QTFLAG   EQU   QTPARM+1
QTDASCHR EQU   QTPARM+20
QLPARM   EQU   QUPARM
QCPARM   EQU   QUPARM
*                                      START UNREFERENCED COMPONENTS
QCMAD3Z1 EQU   QCPARM+28
QCMAD3Z0 EQU   QCPARM+24
QCMAD2Z1 EQU   QCPARM+20
QCMAD2Z0 EQU   QCPARM+16
QCMAD1Z1 EQU   QCPARM+12
QCMAD1Z0 EQU   QCPARM+8
QCMAD0Z1 EQU   QCPARM+4
QCMAD0Z0 EQU   QCPARM
QLRES    EQU   QLPARM+2
QLZYX    EQU   QLPARM
QTRES    EQU   QTPARM+24
QTDATA   EQU   QTPARM+2
QTTABID  EQU   QTID
QWRES2   EQU   QWPARM+3
@NM00093 EQU   QWFLAG
@NM00103 EQU   SSRCODE
GETDRR   EQU   GETDSEC+3
@NM00102 EQU   GETDSEC
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
QURES1   EQU   QUFLAG
QULIB    EQU   QUCODE
QURES    EQU   QUERYLST+5
QUORD    EQU   QUERYLST+4
QULEN    EQU   QUERYLST
ODSLEN   EQU   ODS+20
ODSMEM   EQU   ODS+12
ODSMLN   EQU   ODS+11
ODSFUQ   EQU   ODSFLG
ODSPOS   EQU   ODS+9
ODSPAS   EQU   ODS+1
ODSPLN   EQU   ODS
OFILELEN EQU   OFILE
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00092 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00091 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00090 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00089 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00088 EQU   VSDSCR+5
@NM00087 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
@NM00086 EQU   VSDSTAT+29
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00085 EQU   VSDFLG2
VSDRACF  EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00084 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00083 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00082 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00081 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00080 EQU   VSDVTOC
@NM00079 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00078 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00077 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00076 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00075 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLVTOC  EQU   VOLLABEL+15
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
VOLKEY   EQU   VOLLABEL
STAVTTR  EQU   STAEPARM+54
@NM00072 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00071 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00070 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00069 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00068 EQU   RCTAGL+10
@NM00067 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00066 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00065 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00064 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00063 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00062 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00061 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00060 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00059 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00058 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00057 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
EXRWFUN  EQU   EXWRARG+46
@NM00056 EQU   EXSPACE+8
@NM00055 EQU   EXSPACE+6
@NM00054 EQU   EXSPACE+4
@NM00053 EQU   EXSPACE+1
@NM00052 EQU   EXSPACE
EXRWKDLN EQU   EXWRARG+32
@NM00051 EQU   EXWRARG+31
EXRECNUM EQU   EXRWCHR+4
EXHH     EQU   EXRWCHR+2
EXCC     EQU   EXRWCHR
EXCCWCNT EQU   EXWRARG+24
EXLOCPTR EQU   EXWRARG+20
EXRWDARE EQU   EXWRARG+16
EXRWIOAR EQU   EXWRARG+12
EXRWCTBL EQU   EXWRARG+8
EXRWRES  EQU   EXWRARG
EXGDATAL EQU   EXGARG+30
@NM00050 EQU   EXGARG+29
EXGKEYLN EQU   EXGARG+28
EXGDATAP EQU   EXGARG+24
EXGRECNO EQU   EXGARG+20
EXGCCHH2 EQU   EXGARG+16
EXGCCHH1 EQU   EXGARG+12
EXGCTLBK EQU   EXGARG+8
EXGHEAD  EQU   EXGARG
EXOVTH   EQU   EXFLG
EXORVT   EQU   EXFLG
EXORDS   EQU   EXFLG
EXOSPK   EQU   EXFLG
EXORVS   EQU   EXFLG
@NM00049 EQU   EXFLG
EXOREAD  EQU   EXFLG
@NM00048 EQU   EXOPT
EXOREP   EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXONEW   EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOTAB   EQU   EXOPT
EXOCTLBK EQU   EXOARG+28
EXOEXT   EQU   EXOARG+24
EXOUCB   EQU   EXOARG+20
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXODDN   EQU   EXOARG+8
EXOHEAD  EQU   EXOARG
@NM00047 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00046 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKTESTVT EQU   CKFLAGS
CKLABELP EQU   CKAGL+24
CKDATYPE EQU   CKAGL+20
CKDDNAME EQU   CKAGL+12
CKUCBPTR EQU   CKAGL+8
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00045 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLRR  EQU   CTARRAY+3
CTTBLHH  EQU   CTARRAY+2
CTTBLCC  EQU   CTARRAY+1
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
CTREALCC EQU   CTMSG+1
@NM00044 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00043 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00042 EQU   CMMSG+7
@NM00041 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00040 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00039 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
@NM00038 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00037 EQU   DMPITM+15
@NM00036 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00035 EQU   ERCNVTAB+4
@NM00034 EQU   ERCNVTAB+3
@NM00033 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00032 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00031 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00030 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00029 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTRIO   EQU   FMTOCOL
FMTSTL   EQU   FMTILEN
@NM00028 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00027 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00026 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00025 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00024 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNPWA   EQU   OPNAGL+12
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00023 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00022 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00021 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00020 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00019 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00018 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00017+1
UNITCHA  EQU   @NM00017
UNITUCB  EQU   UNITABL
RACFVOLS EQU   RACFAGL+16
RACFCLN  EQU   RACFAGL+12
RACFPROF EQU   RACFAGL+8
RACFENT  EQU   RACFAGL+4
@NM00016 EQU   RACFFLG4
@NM00015 EQU   RACFFLG3
RACFPRF  EQU   RACFFLG3
@NM00014 EQU   RACFFLG3
@NM00013 EQU   RACFFLG2
RACFTRD  EQU   RACFFLG2
RACFTUPD EQU   RACFFLG2
RACFTCTL EQU   RACFFLG2
@NM00012 EQU   RACFFLG2
RACFTALT EQU   RACFFLG2
RACFCSA  EQU   RACFFLG1
RACFLOGN EQU   RACFFLG1
RACFLOGF EQU   RACFFLG1
@NM00011 EQU   RACFFLG1
RACFDSTV EQU   RACFFLG1
@NM00010 EQU   RACFFLG1
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
*                                      END UNREFERENCED COMPONENTS
@RC00492 EQU   @RC00491
@RC01210 EQU   @RC01206
@RC01208 EQU   @RC01206
@RF02111 EQU   @RC02096
@PB00033 EQU   @EL00001
@PB00032 EQU   @PB00033
@PB00031 EQU   @PB00032
@PB00030 EQU   @PB00031
@PB00029 EQU   @PB00030
@PB00028 EQU   @PB00029
@PB00027 EQU   @PB00028
@PB00026 EQU   @PB00027
@PB00025 EQU   @PB00026
@PB00024 EQU   @PB00025
@PB00023 EQU   @PB00024
@PB00022 EQU   @PB00023
@PB00021 EQU   @PB00022
@PB00020 EQU   @PB00021
@PB00019 EQU   @PB00020
@PB00018 EQU   @PB00019
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCDU01,(C'PLS1901',0701,78010)
