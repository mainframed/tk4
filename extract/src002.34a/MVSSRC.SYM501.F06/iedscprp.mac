         TITLE 'IEDSCPRP , RESPONSE HANDLER                            *
                        '
IEDSCPRP CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         USING *,RBASE
         DC    A(0)                     START OF QCB
         DC    A(0)
         DC    X'06'                    START OF STCB
         DC    AL3(*-1)
         LR    RBASE,RQCB               SET UP ADDRESSIBILITY
IEDSCPRP IEDHJN START,HJN
*                                                                  0416
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN ROUTINE                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*                                   /* INITIALIZATION                */
*   PIUBFRP=RPARM;                  /* PIU ADDRESS                   */
         ST    RPARM,PIUBFRP                                       0416
*   PIUSTART=ADDR(PRFPIUO)+PRFPIUO; /* START OF PIU                  */
         L     @10,PIUBFRP                                         0417
         LA    @09,PRFPIUO(,@10)                                   0417
         SLR   @06,@06                                             0417
         IC    @06,PRFPIUO(,@10)                                   0417
         ALR   @09,@06                                             0417
         ST    @09,PIUSTART                                        0417
*   CMDADDR=ADDR(PIURU);            /* SET UP PTR TO COMMAND         */
         LA    @10,PIURU(,@09)                                     0418
         ST    @10,CMDADDR                                         0418
*   RPARM=TTHOAF;                   /* TNT OFFSET FOR OAF            */
         SLR   RPARM,RPARM                                         0419
         ICM   RPARM,3,TTHOAF(@09)                                 0419
*   CALL IEDQTNT;                   /* TNT LOOKUP ROUTINE            */
         L     @15,AVTRNMPT(,RAVT)                                 0420
         BALR  @14,@15                                             0420
*   RTRM=RPARM;                     /* TERMINAL ENTRY ADDRESS        */
         LR    RTRM,RPARM                                          0421
*/*                                                                  */
*                                                                  0422
*   IF TRHSDI=ON THEN               /* SENSE INCLUDED                */
         L     @10,PIUSTART                                        0422
         TM    TRHSDI+10(@10),B'00000100'                          0422
         BNO   @RF00422                                            0422
*     DO;                                                          0423
*       SNSPTR=ADDR(PIURU);         /* SET UP POINTER TO SENSE       */
         LA    @10,PIURU(,@10)                                     0424
         ST    @10,SNSPTR                                          0424
*       CMDADDR=CMDADDR+LENGTH(IEDSNSD);/* ADJUST CMD ADDRESS        */
         LA    @10,4                                               0425
         AL    @10,CMDADDR                                         0425
         ST    @10,CMDADDR                                         0425
*     END;                                                         0426
*                                                                  0426
*/*                                                                  */
*                                                                  0427
*   IF TRMTYPE=TRMLUNT×TRMTYPE=TRMPUNT THEN/* OAF A LU OR NON-NCP PU?*/
@RF00422 LR    @10,RTRM                                            0427
         SL    @10,@CF01505                                        0427
         CLI   TRMTYPE(@10),X'30'                                  0427
         BE    @RT00427                                            0427
         CLI   TRMTYPE(@10),X'18'                                  0427
         BNE   @RF00427                                            0427
@RT00427 DS    0H                                                  0428
*     DO;                                                          0428
*       TRMSCPRQ=OFF;               /* REQUEST OUTSTANDING =OFF      */
         LR    @10,RTRM                                            0429
         AL    @10,@CF01507                                        0429
         NI    TRMSCPRQ-3(@10),B'01111111'                         0429
*       CALL CHAINCHK;              /* CHECK SSCP SERIALIZER CHAIN   */
         BAL   @14,CHAINCHK                                        0430
*     END;                                                         0431
*   CALL FINDSIB;                   /* FIND APPROPRIATE SIB          */
@RF00427 BAL   @14,FINDSIB                                         0432
*/*                                                                  */
*                                                                  0433
*   IF CMDBYTE=CD1ACTPU THEN        /* RSP TO ACTPU?                 */
         L     @09,CMDADDR                                         0433
         CLI   CMDBYTE(@09),X'11'                                  0433
         BNE   @RF00433                                            0433
*     CALL ACTPURSP;                /* PROCESS ACTPU RESPONSE        */
         BAL   @14,ACTPURSP                                        0434
*   ELSE                                                           0435
*     IF CMDBYTE=CD1SDT THEN        /* START DATA TRAFFIC RSP?       */
         B     @RC00433                                            0435
@RF00433 L     @09,CMDADDR                                         0435
         CLI   CMDBYTE(@09),X'A0'                                  0435
         BNE   @RF00435                                            0435
*       CALL SDTRSP;                /* PROCESS SDT RESPONSE          */
         BAL   @14,SDTRSP                                          0436
*     ELSE                                                         0437
*       IF CMDBYTE=CD1DATPU THEN    /* DACTPU RESPONSE?              */
         B     @RC00435                                            0437
@RF00435 L     @09,CMDADDR                                         0437
         CLI   CMDBYTE(@09),X'12'                                  0437
         BNE   @RF00437                                            0437
*         CALL DACTPURP;            /* PROCESS DACTPU                */
         BAL   @14,DACTPURP                                        0438
*       ELSE                                                       0439
*         IF CMDBYTE=CD1ACTLU THEN  /* ACTLU RESPONSE?               */
         B     @RC00437                                            0439
@RF00437 L     @09,CMDADDR                                         0439
         CLI   CMDBYTE(@09),X'0D'                                  0439
         BNE   @RF00439                                            0439
*           CALL ACTLURSP;          /* PROCESS ACTLU RESPONSE        */
         BAL   @14,ACTLURSP                                        0440
*         ELSE                                                     0441
*           IF CMDBYTE=CD1DATLU THEN/* DACTLU RESPONSE               */
         B     @RC00439                                            0441
@RF00439 L     @09,CMDADDR                                         0441
         CLI   CMDBYTE(@09),X'0E'                                  0441
         BNE   @RF00441                                            0441
*             CALL DACTLURP;        /* PROCESS DACTLU RESPONSE       */
         BAL   @14,DACTLURP                                        0442
*           ELSE                                                   0443
*             IF CMD3BYTE=CD1XEXT THEN/* EXECUTE TEST RESPONSE       */
         B     @RC00441                                            0443
@RF00441 L     @10,CMDADDR                                         0443
         CLC   CMD3BYTE(3,@10),@CB00763                            0443
         BNE   @RF00443                                            0443
*               CALL TOTERSP;       /* PROCESS EX TEST RESPONSE      */
         BAL   @14,TOTERSP                                         0444
*             ELSE                                                 0445
*               CALL PIUCNVT;       /* CONVERT PIU AND SET UP FOR  0445
*                                      POST                          */
         B     @RC00443                                            0445
@RF00443 BAL   @14,PIUCNVT                                         0445
*/*                                                                  */
*                                                                  0446
*   CALL DSPPOST;                   /* EXIT TO DISPATCHER            */
@RC00443 DS    0H                                                  0446
@RC00441 DS    0H                                                  0446
@RC00439 DS    0H                                                  0446
@RC00437 DS    0H                                                  0446
@RC00435 DS    0H                                                  0446
@RC00433 LA    @15,DSPPOST(,RDISP)                                 0446
         BALR  @14,@15                                             0446
*ACTLURSP:                                                         0447
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0447
*                                                                  0447
@EL00001 DS    0H                                                  0447
@EF00001 DS    0H                                                  0447
@ER00001 BR    @14                                                 0447
ACTLURSP DS    0H                                                  0448
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROCESSES THE RESPONSE TO ACTLU. THIS ROUTINE    */
*   /* MAKES SURE THAT THE ACTLU COMMAND WAS SENT AND MAKES STATE    */
*   /* CHANGES ACCORDING TO THE RESPONSE. IF ACTLU WAS NOT SENT THE  */
*   /* RESPONSE IS THROWN AWAY.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0448
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0448
*/*                                                                  */
*                                                                  0449
*   IF SIBSSTAT=SIBSAPND THEN       /* ACTLU SENT                    */
         TM    SIBSSTAT(SIBPTR),B'00000100'                        0449
         BNO   @RF00449                                            0449
         TM    SIBSSTAT(SIBPTR),B'00011000'                        0449
         BNZ   @RF00449                                            0449
*     DO;                                                          0450
*       IF TRHSDI=OFF×SNSMAJ=SNSRQREJ&/* "GOOD RESPONSE"             */
*           SNSMIN=SNSACTV THEN                                    0451
         L     @09,PIUSTART                                        0451
         TM    TRHSDI+10(@09),B'00000100'                          0451
         BZ    @RT00451                                            0451
         L     @09,SNSPTR                                          0451
         CLI   SNSMAJ(@09),X'08'                                   0451
         BNE   @RF00451                                            0451
         CLI   SNSMIN(@09),X'15'                                   0451
         BNE   @RF00451                                            0451
@RT00451 DS    0H                                                  0452
*         DO;                                                      0452
*           SIBSSTAT=SIBSACTV;      /* SET SESSION ACTIVE            */
         OI    SIBSSTAT(SIBPTR),B'00011100'                        0453
*           SIBDSTAT=SIBDACTV;      /* SET DATA TRAFFIC ACTIVE     0454
*                                                            @YM03747*/
         OI    SIBDSTAT(SIBPTR),B'00000011'                        0454
*           TRMRSACT=ON;            /* SET RESOURCE ACTIVE           */
         LR    @05,RTRM                                            0455
         AL    @05,@CF01515                                        0455
         LA    @06,TRMRSACT-2(,@05)                                0455
         LR    @02,@06                                             0455
         LA    @10,3                                               0455
         NR    @02,@10                                             0455
         LCR   @02,@02                                             0455
         ALR   @06,@02                                             0455
         L     @10,0(,@06)                                         0455
@GL00004 LR    @09,@10                                             0455
         O     @09,@CB01511+3(@02)                                 0455
         CS    @10,@09,0(@06)                                      0455
         BNE   @GL00004                                            0455
*         END;                                                     0456
*       ELSE                                                       0457
*         SIBSSTAT=SIBSRSET;        /* SET SESSION RESET             */
         B     @RC00451                                            0457
@RF00451 NI    SIBSSTAT(SIBPTR),B'11101111'                        0457
         OI    SIBSSTAT(SIBPTR),B'00001100'                        0457
*       CALL PIUCNVT;               /* CONVERT THE PIU               */
@RC00451 BAL   @14,PIUCNVT                                         0458
*     END;                                                         0459
*                                                                  0459
*/*                                                                  */
*                                                                  0460
*   ELSE                                                           0460
*     CALL FREEBUF;                 /* FREE THE BUFFER               */
         B     @RC00449                                            0460
@RF00449 BAL   @14,FREEBUF                                         0460
*/*                                                                  */
*                                                                  0461
*   RE=SAVE1;                       /* RESTORE REG 14                */
@RC00449 L     RE,SAVE1                                            0461
*   END ACTLURSP;                   /* RETURN                        */
@EL00002 DS    0H                                                  0462
@EF00002 DS    0H                                                  0462
@ER00002 BR    @14                                                 0462
*ACTPURSP:                                                         0463
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0463
*                                                                  0463
ACTPURSP DS    0H                                                  0464
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROCESSES THE RESPONSE TO ACTPU. THIS ROUTINE    */
*   /* MAKES SURE THAT THE ACTPU COMMAND WAS SENT AND MAKES STATE    */
*   /* CHANGES ACCORDING TO THE RESPONSE. IF ACTPU WAS NOT SENT THE  */
*   /* RESPONSE IS THROWN AWAY.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0464
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0464
*/*                                                                  */
*                                                                  0465
*   IF SIBSSTAT=SIBSAPND THEN       /* ACTPU SENT                    */
         TM    SIBSSTAT(SIBPTR),B'00000100'                        0465
         BNO   @RF00465                                            0465
         TM    SIBSSTAT(SIBPTR),B'00011000'                        0465
         BNZ   @RF00465                                            0465
*     DO;                                                          0466
*                                                                  0466
*/*                                                                  */
*                                                                  0467
*       IF TRHSDI=OFF×SNSMAJ=SNSRQREJ&/* GOOD RESPONSE?              */
*           SNSMIN=SNSACTV THEN                                    0467
         L     @09,PIUSTART                                        0467
         TM    TRHSDI+10(@09),B'00000100'                          0467
         BZ    @RT00467                                            0467
         L     @09,SNSPTR                                          0467
         CLI   SNSMAJ(@09),X'08'                                   0467
         BNE   @RF00467                                            0467
         CLI   SNSMIN(@09),X'15'                                   0467
         BNE   @RF00467                                            0467
@RT00467 DS    0H                                                  0468
*         DO;                                                      0468
*           SIBSSTAT=SIBSACTV;      /* SET SESSION ACTIVE            */
         OI    SIBSSTAT(SIBPTR),B'00011100'                        0469
*           TRMRSACT=ON;            /* MARK ACTIVE                   */
         LR    @04,RTRM                                            0470
         AL    @04,@CF01515                                        0470
         LA    @02,TRMRSACT-2(,@04)                                0470
         LR    @05,@02                                             0470
         LA    @09,3                                               0470
         NR    @05,@09                                             0470
         LCR   @05,@05                                             0470
         ALR   @02,@05                                             0470
         L     @09,0(,@02)                                         0470
@GL00007 LR    @06,@09                                             0470
         O     @06,@CB01511+3(@05)                                 0470
         CS    @09,@06,0(@02)                                      0470
         BNE   @GL00007                                            0470
*/*                                                                  */
*                                                                  0471
*           IF SIBTSPRO<TSPRO3 THEN /* NON-NCP PU?                   */
         CLI   SIBTSPRO(SIBPTR),3                                  0471
         BNL   @RF00471                                            0471
*             SIBDSTAT=SIBDACTV;    /* SET DATA TRAFFIC ACTIVE       */
         OI    SIBDSTAT(SIBPTR),B'00000011'                        0472
*         END;                                                     0473
*                                                                  0473
*/*                                                                  */
*                                                                  0474
*       ELSE                        /* BAD RESPONSE                  */
*         SIBSSTAT=SIBSRSET;        /* SET SESSION RESET             */
         B     @RC00467                                            0474
@RF00467 NI    SIBSSTAT(SIBPTR),B'11101111'                        0474
         OI    SIBSSTAT(SIBPTR),B'00001100'                        0474
*       CALL PIUCNVT;               /* PREPARE TO CONVERT PIU        */
@RC00467 BAL   @14,PIUCNVT                                         0475
*     END;                                                         0476
*   ELSE                            /* ACTPU WAS NOT SENT            */
*     CALL FREEBUF;                 /* FREE THE RESPONSE PIU         */
         B     @RC00465                                            0477
@RF00465 BAL   @14,FREEBUF                                         0477
*/*                                                                  */
*                                                                  0478
*   RE=SAVE1;                       /* RESTORE REG 14                */
@RC00465 L     RE,SAVE1                                            0478
*   END ACTPURSP;                                                  0479
@EL00003 DS    0H                                                  0479
@EF00003 DS    0H                                                  0479
@ER00003 BR    @14                                                 0479
*CHAINCHK:                                                         0480
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0480
*                                                                  0480
CHAINCHK DS    0H                                                  0481
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CHECKS THE SSCP SERIALIZER CHAIN TO DETERMINE IF */
*   /* A REQUEST EXISTS FOR THE RESOURCE. IF A REQUEST IS FOUND IT   */
*   /* DELINKED FROM THE CHAIN AND TPOSTED TO THE SSCP DESTINATION   */
*   /* QUEUE.                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0481
*                                   /* INITIALIZATION                */
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0481
*   FOUNDSW=OFF;                    /* INITIALIZE LOOP SWITCH        */
         NI    FOUNDSW,B'01111111'                                 0482
*   PREVIOUS=ADDR(SAVTSSSR)-4;      /* TREAT SERIALIZER CHAIN ANCHOR
*                                      AS THE ZEROTH ELEMENT         */
         L     @09,AVTSAVTP(,RAVT)                                 0483
         LA    @06,SAVTSSSR(,@09)                                  0483
         SL    @06,@CF00255                                        0483
         ST    @06,PREVIOUS                                        0483
*   CURRENT=SAVTSSSR;               /* CURRENT POINTS TO FIRST     0484
*                                      ELEMENT                       */
         L     CURRENT,SAVTSSSR(,@09)                              0484
*/*                                                                  */
*                                                                  0485
*   DO WHILE CURRENT>0&FOUNDSW=OFF; /* NOT LAST ELEMENT AND MATCH NOT
*                                      FOUND                         */
         B     @DE00485                                            0485
@DL00485 DS    0H                                                  0486
*     IF TTHOAF=CURRENT->PRFDEST THEN/* BUFFER FOR THIS RESOURCE     */
         L     @09,PIUSTART                                        0486
         SLR   @06,@06                                             0486
         ICM   @06,3,TTHOAF(@09)                                   0486
         CH    @06,PRFDEST(,CURRENT)                               0486
         BNE   @RF00486                                            0486
*       DO;                                                        0487
*         PREVIOUS->PRFLINK=CURRENT->PRFLINK;/* MOVE LINK FIELD INTO
*                                      PREVIOUS LINK FIELD           */
         L     @09,PREVIOUS                                        0488
         MVC   PRFLINK(3,@09),PRFLINK(CURRENT)                     0488
*         FOUNDSW=ON;               /* SET LOOP SWITCH ON            */
         OI    FOUNDSW,B'10000000'                                 0489
*       END;                                                       0490
*                                                                  0490
*/*                                                                  */
*                                                                  0491
*     ELSE                          /* MATCH NOT FOUND               */
*       DO;                         /* BUMP POINTERS                 */
         B     @RC00486                                            0491
@RF00486 DS    0H                                                  0492
*         PREVIOUS=CURRENT;         /* PREV ELEMENT BECOMES THE    0492
*                                      CURRENT ELEMENT               */
         ST    CURRENT,PREVIOUS                                    0492
*         CURRENT=CURRENT->PRFLINK; /* CURRENT ELEMENT SET UP FROM 0493
*                                      LINK FIELD                    */
         L     @09,PRFLINK-1(,CURRENT)                             0493
         LA    @09,0(,@09)                                         0493
         LR    CURRENT,@09                                         0493
*       END;                                                       0494
*   END;                                                           0495
*                                                                  0495
@RC00486 DS    0H                                                  0495
@DE00485 LTR   CURRENT,CURRENT                                     0495
         BNP   @DC00485                                            0495
         TM    FOUNDSW,B'10000000'                                 0495
         BZ    @DL00485                                            0495
@DC00485 DS    0H                                                  0496
*/*                                                                  */
*                                                                  0496
*   IF FOUNDSW=ON THEN              /* BUFFER FOUND FOR THIS         */
         TM    FOUNDSW,B'10000000'                                 0496
         BNO   @RF00496                                            0496
*     DO;                           /* RESOURCE - YES TPOST THE    0497
*                                      BUFFER TO THE SSCP DESTINATION
*                                      QUEUE                         */
*       RPARM=CURRENT;              /* CURRENT ELEMANT ADDRESS       */
         LR    RPARM,CURRENT                                       0498
*       CURRENT->PRFPRI=PRIDESTQ+1; /* SET PRIORITY HIGHER THAN THE
*                                      NORMAL PRIORITY               */
         MVI   PRFPRI(CURRENT),X'E5'                               0499
*       CALL DSPPOSTR;              /* TPOST ELEMENT TO SSCP       0500
*                                      DESTINATION QUEUE             */
         LA    @15,DSPPOSTR(,RDISP)                                0500
         BALR  @14,@15                                             0500
*     END;                                                         0501
*   RE=SAVE1;                       /* RESTORE REG 14                */
@RF00496 L     RE,SAVE1                                            0502
*/*                                                                  */
*                                                                  0503
*   END CHAINCHK;                                                  0503
@EL00004 DS    0H                                                  0503
@EF00004 DS    0H                                                  0503
@ER00004 BR    @14                                                 0503
*DACTLURP:                                                         0504
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0504
*                                                                  0504
DACTLURP DS    0H                                                  0505
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROCESSES THE RESPONSE TO DACTLU. THIS ROUTINE   */
*   /* MAKES SURE THAT THE DACTLU COMMAND WAS SENT AND MAKES STATE   */
*   /* CHANGES ACCORDING TO THE RESPONSE. IF DACTLU WAS NOT SENT THE */
*   /* RESPONSE IS THROWN AWAY.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0505
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0505
*/*                                                                  */
*                                                                  0506
*   IF SIBSSTAT=SIBSRPND THEN       /* DACTLU SENT                   */
         TM    SIBSSTAT(SIBPTR),B'00001000'                        0506
         BNO   @RF00506                                            0506
         TM    SIBSSTAT(SIBPTR),B'00010100'                        0506
         BNZ   @RF00506                                            0506
*     DO;                                                          0507
*       SIBSSTAT=SIBSRSET;          /* SET SESSION RESET             */
         NI    SIBSSTAT(SIBPTR),B'11101111'                        0508
         OI    SIBSSTAT(SIBPTR),B'00001100'                        0508
*       SIBDSTAT=SIBDRSET;          /* SET DATA TRAFFIC RESET      0509
*                                                            @YM03747*/
         NI    SIBDSTAT(SIBPTR),B'11111100'                        0509
*       TRMRSACT=OFF;               /* SET RESOURCE INACTIVE         */
         LR    @05,RTRM                                            0510
         AL    @05,@CF01515                                        0510
         LA    @06,TRMRSACT-2(,@05)                                0510
         LR    @02,@06                                             0510
         LA    @10,3                                               0510
         NR    @02,@10                                             0510
         LCR   @02,@02                                             0510
         ALR   @06,@02                                             0510
         L     @10,0(,@06)                                         0510
@GL00009 LR    @09,@10                                             0510
         N     @09,@CB01520+3(@02)                                 0510
         CS    @10,@09,0(@06)                                      0510
         BNE   @GL00009                                            0510
*       CALL PIUCNVT;               /* CONVERT THE PIU               */
         BAL   @14,PIUCNVT                                         0511
*     END;                                                         0512
*                                                                  0512
*/*                                                                  */
*                                                                  0513
*   ELSE                                                           0513
*     CALL FREEBUF;                 /* FREE THE BUFFER               */
         B     @RC00506                                            0513
@RF00506 BAL   @14,FREEBUF                                         0513
*/*                                                                  */
*                                                                  0514
*   RE=SAVE1;                       /* RESTORE REG 14                */
@RC00506 L     RE,SAVE1                                            0514
*   END DACTLURP;                   /* RETURN                        */
@EL00005 DS    0H                                                  0515
@EF00005 DS    0H                                                  0515
@ER00005 BR    @14                                                 0515
*DACTPURP:                                                         0516
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0516
*                                                                  0516
DACTPURP DS    0H                                                  0517
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROCESSES THE RESPONSE TO DACTPU. THIS ROUTINE   */
*   /* MAKES SURE THAT THE DACTPU COMMAND WAS SENT AND MAKES STATE   */
*   /* CHANGES ACCORDING TO THE RESPONSE. IF DACTPU WAS NOT SENT THE */
*   /* RESPONSE IS THROWN AWAY.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0517
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0517
*/*                                                                  */
*                                                                  0518
*   IF SIBSSTAT=SIBSRPND THEN       /* DACTPU SENT                   */
         TM    SIBSSTAT(SIBPTR),B'00001000'                        0518
         BNO   @RF00518                                            0518
         TM    SIBSSTAT(SIBPTR),B'00010100'                        0518
         BNZ   @RF00518                                            0518
*     DO;                                                          0519
*       SIBSSTAT=SIBSRSET;          /* SET SESSION RESET             */
         NI    SIBSSTAT(SIBPTR),B'11101111'                        0520
         OI    SIBSSTAT(SIBPTR),B'00001100'                        0520
*       TRMRSACT=OFF;               /* SET RESOURCE INACTIVE         */
         LR    @05,RTRM                                            0521
         AL    @05,@CF01515                                        0521
         LA    @06,TRMRSACT-2(,@05)                                0521
         LR    @02,@06                                             0521
         LA    @10,3                                               0521
         NR    @02,@10                                             0521
         LCR   @02,@02                                             0521
         ALR   @06,@02                                             0521
         L     @10,0(,@06)                                         0521
@GL00010 LR    @09,@10                                             0521
         N     @09,@CB01520+3(@02)                                 0521
         CS    @10,@09,0(@06)                                      0521
         BNE   @GL00010                                            0521
*       CALL PIUCNVT;               /* CONVERT THE PIU               */
         BAL   @14,PIUCNVT                                         0522
*     END;                                                         0523
*                                                                  0523
*/*                                                                  */
*                                                                  0524
*   ELSE                                                           0524
*     CALL FREEBUF;                 /* FREE THE BUFFER               */
         B     @RC00518                                            0524
@RF00518 BAL   @14,FREEBUF                                         0524
*/*                                                                  */
*                                                                  0525
*   RE=SAVE1;                       /* RESTORE REG 14                */
@RC00518 L     RE,SAVE1                                            0525
*   END DACTPURP;                   /* RETURN                        */
@EL00006 DS    0H                                                  0526
@EF00006 DS    0H                                                  0526
@ER00006 BR    @14                                                 0526
*                                                                  0527
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CHECKS THE SIB CHAIN FOR THE SSCP SIB. A SWITCH  */
*   /* (FOUNDSW) IS SET WHEN A MATCH IS FOUND.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0527
*FINDSIB:                                                          0527
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0527
FINDSIB  DS    0H                                                  0528
*   SIBPTR=TRMSIBPT;                /* INITIALIZE PTR TO SIB         */
         LR    @09,RTRM                                            0528
         AL    @09,@CF01524                                        0528
         SLR   SIBPTR,SIBPTR                                       0528
         ICM   SIBPTR,7,TRMSIBPT-7(@09)                            0528
*   FOUNDSW=OFF;                    /* INITIALIZE LOOP SWITCH        */
         NI    FOUNDSW,B'01111111'                                 0529
*/*                                                                  */
*                                                                  0530
*   DO WHILE FOUNDSW=OFF;           /* CONTINUE UNTIL END OF SIB   0530
*                                      CHAIN OR MATCH FOUND          */
         B     @DE00530                                            0530
@DL00530 DS    0H                                                  0531
*     IF SIBINDEX=SAVTSCPT THEN     /* SIB FOR SSCP FLOW -YES        */
         L     @09,AVTSAVTP(,RAVT)                                 0531
         CLC   SIBINDEX(2,SIBPTR),SAVTSCPT(@09)                    0531
         BNE   @RF00531                                            0531
*       FOUNDSW=ON;                 /* INDICATE MATCH FOUND          */
         OI    FOUNDSW,B'10000000'                                 0532
*     ELSE                                                         0533
*       SIBPTR=SIBCHAIN;            /* GET NEXT SIB IN CHAIN         */
         B     @RC00531                                            0533
@RF00531 L     SIBPTR,SIBCHAIN(,SIBPTR)                            0533
*   END;                                                           0534
*                                                                  0534
@RC00531 DS    0H                                                  0534
@DE00530 TM    FOUNDSW,B'10000000'                                 0534
         BZ    @DL00530                                            0534
*/*                                                                  */
*                                                                  0535
*   END FINDSIB;                                                   0535
@EL00007 DS    0H                                                  0535
@EF00007 DS    0H                                                  0535
@ER00007 BR    @14                                                 0535
*                                                                  0536
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE SETS UP ALL THE FIELDS NECESSARY TO FREE A PIU   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0536
*FREEBUF:                                                          0536
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0536
*                                                                  0536
FREEBUF  DS    0H                                                  0537
*/*                                                                  */
*                                                                  0537
*   PRFNBUNT=0;                     /* CLEAR FIELD                   */
         L     @10,PIUBFRP                                         0537
         MVI   PRFNBUNT(@10),X'00'                                 0537
*   PRFPRI=PRIBFRTB;                /* SET PRIORITY                  */
         MVI   PRFPRI(@10),X'E0'                                   0538
*   PRFQCBA=ADDR(AVTBFRTB);         /* SET UP QCB ADDRESS            */
         LA    @09,AVTBFRTB(,RAVT)                                 0539
         STCM  @09,7,PRFQCBA(@10)                                  0539
*   RPARM=PIUBFRP;                  /* PIU TO BE FREED               */
         LR    RPARM,@10                                           0540
*/*                                                                  */
*                                                                  0541
*   END FREEBUF;                                                   0541
@EL00008 DS    0H                                                  0541
@EF00008 DS    0H                                                  0541
@ER00008 BR    @14                                                 0541
*PIUCNVT:                                                          0542
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0542
*                                                                  0542
PIUCNVT  DS    0H                                                  0543
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CALLS IEDXFMI TO GET THE RESPONSE PIUS CONVERTED */
*   /* INTO BUFFERS                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0543
*   SAVE2=RE;                       /* SAVE REG 14                   */
         LR    SAVE2,RE                                            0543
*/*                                                                  */
*                                                                  0544
*   RPARM=PIUBFRP;                  /* PIU TO BE CONVERTED           */
         L     RPARM,PIUBFRP                                       0544
*   CALL IEDXFMI;                   /* CALL CONVERT ROUTINE SET UP TO
*                                      POST BUFFER TO THE SSCP       */
         L     @09,AVTSAVTP(,RAVT)                                 0545
         L     @15,SAVTXFMI(,@09)                                  0545
         BALR  @14,@15                                             0545
*   PRFQCBA=ADDR(AVTOPCOB);         /* SET QCB ADDRESS TO OPCOB      */
         L     @09,PIUBFRP                                         0546
         LA    @06,AVTOPCOB(,RAVT)                                 0546
         STCM  @06,7,PRFQCBA(@09)                                  0546
*   PRFPRI=PRIRESPB;                /* SET PRIORITY                  */
         MVI   PRFPRI(@09),X'EA'                                   0547
*/*                                                                  */
*                                                                  0548
*   RE=SAVE2;                       /* RESTORE REG 14                */
         LR    RE,SAVE2                                            0548
*/*                                                                  */
*                                                                  0549
*   END PIUCNVT;                                                   0549
@EL00009 DS    0H                                                  0549
@EF00009 DS    0H                                                  0549
@ER00009 BR    @14                                                 0549
*SDTRSP:                                                           0550
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0550
*                                                                  0550
SDTRSP   DS    0H                                                  0551
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROCESSES THE START DATA TRAFFIC RESPONSE. IT    */
*   /* MAKES SURE THAT THE START DATA TRAFFIC COMMAND WAS SENT AND   */
*   /* AND MAKES CHANGES ACCORDING TO THE RESPONSE. IF START DATA    */
*   /* TRAFFIC WAS NOT SENT THE RESPONSE IS THROWN AWAY.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0551
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0551
*/*                                                                  */
*                                                                  0552
*   IF SIBDSTAT=SIBDAPND THEN       /* START DATA TRAFFIC SENT       */
         TM    SIBDSTAT(SIBPTR),B'00000001'                        0552
         BNO   @RF00552                                            0552
         TM    SIBDSTAT(SIBPTR),B'00000010'                        0552
         BNZ   @RF00552                                            0552
*     DO;                                                          0553
*                                                                  0553
*/*                                                                  */
*                                                                  0554
*       IF TRHSDI=OFF×SNSMAJ=SNSRQREJ&/* GOOD RESPONSE?              */
*           SNSMIN=SNSACTV THEN                                    0554
         L     @09,PIUSTART                                        0554
         TM    TRHSDI+10(@09),B'00000100'                          0554
         BZ    @RT00554                                            0554
         L     @09,SNSPTR                                          0554
         CLI   SNSMAJ(@09),X'08'                                   0554
         BNE   @RF00554                                            0554
         CLI   SNSMIN(@09),X'15'                                   0554
         BNE   @RF00554                                            0554
@RT00554 DS    0H                                                  0555
*         SIBDSTAT=SIBDACTV;        /* SET DATA TRAFFIC ACTIVE       */
         OI    SIBDSTAT(SIBPTR),B'00000011'                        0555
*       ELSE                        /* BAD RESPONSE                  */
*         SIBDSTAT=SIBDRSET;        /* SET DATA TRAFFIC RESET        */
         B     @RC00554                                            0556
@RF00554 NI    SIBDSTAT(SIBPTR),B'11111100'                        0556
*/*                                                                  */
*                                                                  0557
*       CALL PIUCNVT;               /* PREPARE TO CONVERT PIU        */
@RC00554 BAL   @14,PIUCNVT                                         0557
*     END;                                                         0558
*   ELSE                            /* START DATA TRAF NOT SENT      */
*     CALL FREEBUF;                 /* FREE THE RESPONSE PIU         */
         B     @RC00552                                            0559
@RF00552 BAL   @14,FREEBUF                                         0559
*/*                                                                  */
*                                                                  0560
*   RE=SAVE1;                       /* RESTORE REG 14                */
@RC00552 L     RE,SAVE1                                            0560
*   END SDTRSP;                                                    0561
@EL00010 DS    0H                                                  0561
@EF00010 DS    0H                                                  0561
@ER00010 BR    @14                                                 0561
*                                                                  0562
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE SETS UP TO SEND THE EXECUTE TEST TO TOTE         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
*TOTERSP:                                                          0562
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0562
*                                                                  0562
TOTERSP  DS    0H                                                  0563
*/*                                                                  */
*                                                                  0563
*   SAVE1=RE;                       /* SAVE REG 14                   */
         ST    RE,SAVE1                                            0563
*   RPARM=PIUBFRP;                  /* GET BUFFER ADDRESS            */
         L     RPARM,PIUBFRP                                       0564
*   CALL IEDXFMI;                   /* CONVERT PIU TO BUFFER         */
         L     @10,AVTSAVTP(,RAVT)                                 0565
         L     @15,SAVTXFMI(,@10)                                  0565
         BALR  @14,@15                                             0565
*   PRFPRI=PRIONLT;                 /* SET PRIORITY                  */
         L     @10,PIUBFRP                                         0566
         MVI   PRFPRI(@10),X'DC'                                   0566
*   PRFQCBA=ADDR(AVTOLTQB);         /* SET UP QCB ADDRESS            */
         LA    @09,AVTOLTQB(,RAVT)                                 0567
         STCM  @09,7,PRFQCBA(@10)                                  0567
*   PRFKEY='24'X;                   /* KEY FOR TOTE                  */
         MVI   PRFKEY(@10),X'24'                                   0568
*/*                                                                  */
*                                                                  0569
*   RE=SAVE1;                       /* RESTORE REG 14                */
         L     RE,SAVE1                                            0569
*   END TOTERSP;                                                   0570
@EL00011 DS    0H                                                  0570
@EF00011 DS    0H                                                  0570
@ER00011 BR    @14                                                 0570
*   END IEDSCPRP                                                   0571
*                                                                  0571
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TPIUD   )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TSNSD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0571
*       ;                                                          0571
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00255 DC    F'4'
@CF01505 DC    F'14'
@CF01515 DC    F'-12'
@CF01507 DC    F'-11'
@CF01524 DC    F'-7'
         DS    0D
SNSPTR   DS    A
PIUSTART DS    A
PIUBFRP  DS    A
SAVE1    DS    A
PREVIOUS DS    A
CMDADDR  DS    A
@CB00763 DC    X'010301'
@CB01511 DC    B'000000000000000000000000100000000000000000000000000000C
               00'
@CB01520 DC    B'111111111111111111111111011111111111111111111111111111C
               11'
FOUNDSW  DS    BL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CURRENT  EQU   @10
SAVE2    EQU   @10
SIBPTR   EQU   @10
IEDQAPTR EQU   @13
RDISP    EQU   @11
IEDQTPTR EQU   @08
RAVT     EQU   @13
RTRM     EQU   @08
RZERO    EQU   @00
RPARM    EQU   @01
RSTCB    EQU   @03
RQCB     EQU   @07
IEDQQPTR EQU   @07
RBASE    EQU   @12
RE       EQU   @14
RF       EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
AVTREADD EQU   IEDQAVTD+308
AVTBUFSW EQU   IEDQAVTD+312
@NM00004 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTBFRFG EQU   IEDQAVTD+712
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTBIT4  EQU   IEDQAVTD+1064
@NM00086 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSSSR EQU   IEDNSVTD+112
SAVTXFMI EQU   IEDNSVTD+132
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQDISP EQU   0
DSPPOST  EQU   24
DSPPOSTR EQU   28
IEDPIU   EQU   0
PIUTH    EQU   IEDPIU
PIURH    EQU   IEDPIU+10
PIURU    EQU   IEDPIU+13
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
@NM00112 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00112
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
PRFDEST  EQU   IEDQPRF+40
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHSDI   EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDSIBD  EQU   0
SIBCHAIN EQU   IEDSIBD+4
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBSSTAT EQU   SIBSESSN
SIBDSTAT EQU   SIBSESSN
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBTSPRO EQU   IEDSIBD+18
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBIND3 EQU   SIBBIND+2
SIBSTAT0 EQU   IEDSIBD+23
IEDSNSD  EQU   0
SNSSYSTM EQU   IEDSNSD
SNSMAJ   EQU   SNSSYSTM
SNSMIN   EQU   SNSSYSTM+1
SNSUSER  EQU   IEDSNSD+2
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
IEDQTNT  EQU   0
IEDXFMI  EQU   0
CMDBYTE  EQU   0
CMD3BYTE EQU   0
DSPBYPAS EQU   20
DSPCHAIN EQU   12
DSPDISP  EQU   4
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
IEDQPPTR EQU   PIUBFRP
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
IEDQSIBP EQU   SIBPTR
PRFSHDR  EQU   IEDQPRF+42
TRMOPT   EQU   IEDQTRM+20
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00136 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00135 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00134 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00133 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00132 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00131 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00130 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00129 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
SNSUSR2  EQU   SNSUSER+1
SNSUSR1  EQU   SNSUSER
SIBLUTYP EQU   SIBSTAT0
SIBCD    EQU   SIBSTAT0
@NM00128 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBFMODE EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBBRACK EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
@NM00127 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
SIBFTERM EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBLGOFF EQU   SIBSESSN
SIBRUSEG EQU   IEDSIBD
@NM00126 EQU   TRHBYTE2
@NM00125 EQU   TRHBYTE2
@NM00124 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00123 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00122 EQU   TRHBYTE1
@NM00121 EQU   TRHBYTE1
@NM00120 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00119 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00118 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
PRF2SEQP EQU   PRF2WD2
@NM00117 EQU   IEDPF2+1
@NM00116 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00115 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00114 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00113 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00112+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFTI0   EQU   PRFTIC+1
@NM00111 EQU   PRFTICC
@NM00110 EQU   PRFTICC
@NM00109 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00108 EQU   PRFTICC
@NM00107 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00106 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00091 EQU   IEDQAVTD+1170
@NM00090 EQU   IEDQAVTD+1169
@NM00089 EQU   IEDQAVTD+1168
@NM00088 EQU   IEDQAVTD+1165
@NM00087 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00085 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00084 EQU   IEDQAVTD+1068
@NM00083 EQU   IEDQAVTD+1065
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00074 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00073 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00072 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTSTEAL EQU   IEDQAVTD+988
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTKEYLE EQU   IEDQAVTD+960
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00069 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00068 EQU   IEDQAVTD+878
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00053 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00052 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00051 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00050 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00049 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00048 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+724
@NM00040 EQU   IEDQAVTD+716
AVTSELCH EQU   IEDQAVTD+713
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00039 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00038 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTTSOPT EQU   IEDQAVTD+668
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
AVTMSGS  EQU   IEDQAVTD+657
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00023 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00021 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00015 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+314
@NM00003 EQU   IEDQAVTD+313
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00471 EQU   @RC00467
@PB00011 EQU   @EL00001
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEDSCPRP,(C'PLS2307',0701,78089)
