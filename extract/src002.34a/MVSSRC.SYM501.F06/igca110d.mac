         TITLE 'IGCA110D, PROCESS INIT-SELF INTERNAL                   *
                        '
IGCA110D CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
*                                                                  0447
         USING  *,RBASE
         LR     RBASE,RF            SET UP ADDRESSIBILITY
IGCA110D IEDHJN START,HJN
*/*                                                                  */
*                                                                  0448
*                                   /* INITIALIZATION                */
*   ROPCAVT=RPARM;                  /* OP CONTROL AVT ADDRESS        */
         LR    ROPCAVT,RPARM                                       0448
*   RPRF=OPCCOPCE;                  /* CURRENT ELEMENT ADDRESS       */
         L     RPRF,OPCCOPCE(,ROPCAVT)                             0449
*   RAVT=OPCAVTPT;                  /* TCAM AVT ADDRESS              */
         L     RAVT,OPCAVTPT(,ROPCAVT)                             0450
*   RWORK=OPCWORK;                  /* OP CONTROL WORK AREA          */
         L     RWORK,OPCWORK(,ROPCAVT)                             0451
*   RSAVE=ADDR(OPCSAVE);            /* OP CONTROL SAVE AREA          */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0452
*/*                                                                  */
*                                                                  0453
*   WKINSPIU=ADDR(PRFPIUO)+PRFPIUO; /* ADDRESS OF THE PIU WITHIN THE
*                                      TCAM BUFFER                   */
         LA    @09,PRFPIUO(,IEDQPPTR)                              0453
         SLR   @07,@07                                             0453
         IC    @07,PRFPIUO(,IEDQPPTR)                              0453
         ALR   @09,@07                                             0453
         ST    @09,WKINSPIU(,RWORK)                                0453
*   RPARM=TTHTAG;                   /* REG1 HAS TNT OF SLU... SET UP
*                                      BY IEDLUS                     */
         SLR   RPARM,RPARM                                         0454
         ICM   RPARM,3,TTHTAG(@09)                                 0454
*   CALL IEDQTNT;                   /* GET TTE FOR SECONDARY LU      */
         L     @15,AVTRNMPT(,RAVT)                                 0455
         BALR  @14,@15                                             0455
*   RTRM=RPARM;                     /* SAVE SLU'S TTE                */
         LR    RTRM,RPARM                                          0456
*   RTRM=RTRM-LENGTH(IEDNTRM);      /* ADDRESS OF NEG PREFIX         */
         SL    RTRM,@CF01589                                       0457
*   CALL FINDSIB;                   /* FIND THE LU-SSCP SIB          */
         BAL   @14,FINDSIB                                         0458
*/*                                                                  */
*                                                                  0459
*   IF WKSIBSW=OFF THEN             /* CORRECT SIB FOUND ?           */
         TM    WKSIBSW(RWORK),B'10000000'                          0459
         BNZ   @RF00459                                            0459
*     DO;                                                          0460
*       IF SIBSSTAT=SIBSACTV&       /* LU-SSCP SESSION ACTIVE        */
*           SIBDACLU=OFF&           /* NO DEACTLU IN PROGRESS        */
*           SIBTERM=OFF&            /* REQ DISCONTACT NOT RCVD       */
*           TRMHELDN=OFF&           /* TERMINAL NOT HELD             */
*           TRMDESTQ->QCBTRMHO=OFF& /* TERMIANL NOT HELD             */
*           TRMLUIT=OFF THEN        /* TCMSESSN NOT EQUAL LUINIT     */
         L     @09,WKSIBPTR(,RWORK)                                0461
         TM    SIBSSTAT(@09),B'00011100'                           0461
         BNO   @RF00461                                            0461
         TM    SIBDACLU(@09),B'01010000'                           0461
         BNZ   @RF00461                                            0461
         TM    TRMHELDN(RTRM),B'00000100'                          0461
         BNZ   @RF00461                                            0461
         SLR   @09,@09                                             0461
         ICM   @09,7,TRMDESTQ(RTRM)                                0461
         TM    QCBTRMHO(@09),B'01000000'                           0461
         BNZ   @RF00461                                            0461
         TM    TRMLUIT(RTRM),B'01000000'                           0461
         BNZ   @RF00461                                            0461
*         DO;                                                      0462
*           CALL SIBRTN;            /* GET LU-LU SIB                 */
         BAL   @14,SIBRTN                                          0463
*           IF REQRCD1=0 THEN       /* GOT SIB SUCESSFULLY           */
         CLI   REQRCD1+89(RWORK),0                                 0464
         BNE   @RF00464                                            0464
*             DO;                   /* COMPUTE AMOUNT OF VARIABLE  0465
*                                      DATA IN INIT-SELF             */
*               WKINITD=WKINSPIU->TTHDCF-(LENGTH(XINSFIXD)+LENGTH(IEDRH
*                   ));                                            0466
         L     @09,WKINSPIU(,RWORK)                                0466
         SLR   @07,@07                                             0466
         ICM   @07,3,TTHDCF(@09)                                   0466
         SL    @07,@CF00096                                        0466
         STH   @07,WKINITD(,RWORK)                                 0466
*               CALL FINDMODE;      /* RESOLVE THE LOGMODE NAME      */
         BAL   @14,FINDMODE                                        0467
*               CALL CINTPROC;      /* BUILD THE CINIT               */
         BAL   @14,CINTPROC                                        0468
*             END;                                                 0469
*           ELSE                    /* CAN'T GET A SIB               */
*             CALL INITERR;         /* BUILD ERROR RSP TO INIT- SELF */
         B     @RC00464                                            0470
@RF00464 BAL   @14,INITERR                                         0470
*         END;                                                     0471
*       ELSE                        /* ERROR CONDITION EXISTS        */
*         DO;                       /*                       @YM06470*/
         B     @RC00461                                            0472
@RF00461 DS    0H                                                  0473
*           TRMSESRQ=OFF;           /* TURN SESS REQ OFF     @YM06470*/
         LA    @03,TRMSESRQ(,RTRM)                                 0473
         LR    @11,@03                                             0473
         LA    @09,3                                               0473
         NR    @11,@09                                             0473
         LCR   @11,@11                                             0473
         ALR   @03,@11                                             0473
         L     @09,0(,@03)                                         0473
@GL00005 LR    @07,@09                                             0473
         N     @07,@CB01915+3(@11)                                 0473
         CS    @09,@07,0(@03)                                      0473
         BNE   @GL00005                                            0473
*           CALL FREEBUFR;          /* FREE THE BUFFER               */
         BAL   @14,FREEBUFR                                        0474
*         END;                      /*                       @YM06470*/
*     END;                                                         0476
*   ELSE                            /* LU-SSCP SIB NOT FOUND         */
*     DO;                           /*                       @YM06470*/
         B     @RC00459                                            0477
@RF00459 DS    0H                                                  0478
*       IF WKSIBPTR=0 THEN          /* NO SIB EXISTS         @YM06470*/
         L     @09,WKSIBPTR(,RWORK)                                0478
         LTR   @09,@09                                             0478
         BNZ   @RF00478                                            0478
*         TRMSESRQ=OFF;             /* TURN SESS REQ OFF     @YM06470*/
         LA    @03,TRMSESRQ(,RTRM)                                 0479
         LR    @11,@03                                             0479
         LA    @09,3                                               0479
         NR    @11,@09                                             0479
         LCR   @11,@11                                             0479
         ALR   @03,@11                                             0479
         L     @09,0(,@03)                                         0479
@GL00006 LR    @07,@09                                             0479
         N     @07,@CB01915+3(@11)                                 0479
         CS    @09,@07,0(@03)                                      0479
         BNE   @GL00006                                            0479
*       CALL FREEBUFR;              /* FREE THE BUFFER               */
@RF00478 BAL   @14,FREEBUFR                                        0480
*     END;                          /*                       @YM06470*/
*/*                                                                  */
*                                                                  0482
*   OPCMODID=DSPOPCTL;              /* RETURN TO IGC0010D            */
@RC00459 MVC   OPCMODID(2,ROPCAVT),@CC01846                        0482
*   RZERO=0;                        /* CLEAR REG 0                   */
         SLR   RZERO,RZERO                                         0483
*   RPARM=ROPCAVT;                  /* OP CONTROL AVT ADDRESS        */
         LR    RPARM,ROPCAVT                                       0484
*   GEN REFS(ROPCAVT,OPCXCTL) EXIT NOSEQFLOW;                      0485
         XCTL  SF=(E,OPCXCTL(ROPCAVT))
*CINITBLD:                                                         0486
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0486
*                                                                  0486
@EL00001 DS    0H                                                  0486
@EF00001 DS    0H                                                  0486
@ER00001 BR    @14                                                 0486
CINITBLD DS    0H                                                  0487
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE BUILDS A CINIT REQUEST. THE DATA FOR THE CINIT   */
*   /* COMMAND CONSISTS OF THREE PARTS. THE FIRST PART IS A FIXED    */
*   /* PORTION. THE SECOND PART IS A VARIABLE LENGTH BIND IMAGE      */
*   /* OBTAINED FROM THE BIND IMAGE TABLE. THE THIRD PART IS OF      */
*   /* VARIABLE LENGTH OBTAINED FROM THE INIT-SELF REQUEST. THE DATA */
*   /* FROM THE INIT-SELF INCLUDES THE NETWORK NAME FIELD, THE       */
*   /* REQUESTOR ID FIELD, THE PASSWORD FIELD, AND THE USER FIELD.   */
*   /* IEDMVBFR IS USED TO MOVE THE VARIABLE LENGTH PORITONS TO THE  */
*   /* CINIT BUFFER.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*   WKSAVE2=RE;                     /* SAVE REG 14                   */
         ST    RE,WKSAVE2(,RWORK)                                  0487
*   CALL ALLOCBUF;                  /* REQUEST A BUFFER              */
         L     @15,OPCGETBF(,ROPCAVT)                              0488
         BALR  @14,@15                                             0488
*   WKCINBFR=RPARM;                 /* SAVE BUFFER ADDRESS           */
         ST    RPARM,WKCINBFR(,RWORK)                              0489
*   WKCINBFR->PRFPIUO=1;            /* SET UP OFFSET TO TH           */
         L     @09,WKCINBFR(,RWORK)                                0490
         LA    @07,1                                               0490
         STC   @07,PRFPIUO(,@09)                                   0490
*/*                                                                  */
*                                                                  0491
*                                   /* POINTER TO CINIT PIU          */
*   WKCINPIU=ADDR(WKCINBFR->PRFPIUO)+WKCINBFR->PRFPIUO;            0491
         LA    @09,PRFPIUO(,@09)                                   0491
         ALR   @09,@07                                             0491
         ST    @09,WKCINPIU(,RWORK)                                0491
*   WKCINRU=ADDR(WKCINPIU->PIURU);  /* POINTER TO CINIT RU           */
         LA    @03,PIURU(,@09)                                     0492
         ST    @03,WKCINRU(,RWORK)                                 0492
*   TRHDR1=OFF;                     /* TURN OFF RESPONSE BITS        */
*   TRHDR2=OFF;                     /* IN INIT-SELF BEFORE           */
*   TRHER=OFF;                      /* COPYING THE RH                */
         LA    @03,10                                              0495
         L     @11,WKINSPIU(,RWORK)                                0495
         LR    @10,@11                                             0495
         ALR   @10,@03                                             0495
         NI    TRHDR1(@10),B'01001111'                             0495
*   WKCINPIU->PIURH=WKINSPIU->PIURH;/* SET UP RH                     */
         MVC   PIURH(3,@09),PIURH(@11)                             0496
*   WKCINPIU->PIUTH=WKINSPIU->PIUTH;/* PARTIAL SET UP TH             */
         MVC   PIUTH(10,@09),PIUTH(@11)                            0497
*   WKCINPIU->TTHOAF=WKINSPIU->TTHDAF;/* MAKE INIT-SELF DAF THE CINIT
*                                      OAF                           */
         MVC   TTHOAF(2,@09),TTHDAF(@11)                           0498
*   WKCINPIU->TTHDAF=WKINSPIU->TTHOAF;/* MAKE INIT-SELF OAF THE CINIT
*                                      DAF                           */
         MVC   TTHDAF(2,@09),TTHOAF(@11)                           0499
*/*                                                                  */
*                                                                  0500
*                                   /* SET DATA COUNT FIELD IN TH OF
*                                      CINIT BUFFER                  */
*   WKCINPIU->TTHDCF=WKCINTD-(WKCINBFR->PRFPIUO+LENGTH(IEDTH));    0500
         ALR   @07,@03                                             0500
         LCR   @07,@07                                             0500
         LH    @03,WKCINTD(,RWORK)                                 0500
         N     @03,@CF01919                                        0500
         ALR   @07,@03                                             0500
         STCM  @07,3,TTHDCF(@09)                                   0500
*   RPARM=TTHTAG;                   /* RPARM HAS TNT OF SLU          */
         SLR   RPARM,RPARM                                         0501
         ICM   RPARM,3,TTHTAG(@11)                                 0501
*   CALL IEDIAP04;                  /* CONVERT TNT TO NET ADDR       */
         L     @09,AVTSAVTP(,RAVT)                                 0502
         L     @15,SAVTTNTX(,@09)                                  0502
         BALR  @14,@15                                             0502
*   XCINCODE=CD1XCIN;               /* SET UP COMMAND CODE           */
         L     @09,WKCINRU(,RWORK)                                 0503
         MVC   XCINCODE(3,@09),@CB00835                            0503
*   XCINFMT=CINITFMT;               /* SET UP FORMAT                 */
         MVI   XCINFMT(@09),X'00'                                  0504
*   XCINORG=CINITORG;               /* SET UP INITIATE ORIGIN        */
         MVI   XCINORG(@09),X'20'                                  0505
*   XCINADDR=RF;                    /* SET UP SLU NETWORK ADDR       */
         STCM  RF,3,XCINADDR(@09)                                  0506
*/*                                                                  */
*                                                                  0507
*   PLMVFLG1=0;                     /* CLEAR FLAG FIELD IN MOVE    0507
*                                      BUFFER PARM LIST              */
         LA    @07,65                                              0507
         ALR   @07,RWORK                                           0507
         MVI   PLMVFLG1(@07),X'00'                                 0507
*   PLMVTU=WKCINBFR;                /* TARG UNIT = CINIT BUFFER      */
         L     @03,WKCINBFR(,RWORK)                                0508
         ST    @03,PLMVTU(,@07)                                    0508
*   PLMVTD=ADDR(XCINBLEN);          /* TARG DATA = ADDRESS OF BIND 0509
*                                      LENGTH IN CINIT               */
         LA    @09,XCINBLEN(,@09)                                  0509
         ST    @09,PLMVTD(,@07)                                    0509
*   PLMVSU=ADDR(WKBIADDR->BINLEN);  /* SOURCE UNIT = BIND IMAGE    0510
*                                      ADDRESS                       */
         L     @09,WKBIADDR(,RWORK)                                0510
         LA    @03,BINLEN(,@09)                                    0510
         ST    @03,PLMVSU(,@07)                                    0510
*   PLMVSD=ADDR(WKBIADDR->BINLEN);  /* SOURCE DATA = BIND IMAGE    0511
*                                      ADDRESS                       */
         ST    @03,PLMVSD(,@07)                                    0511
*   PLMVLNTH=(WKBIADDR->BINLEN-WKLDADDR->BINLDATL)/* LENGTH OF DATA
*                                      TO                    @ZM46750*/
*       +LENGTH(BINLEN)-LENGTH(BINLDATL);/* BE MOVED         @ZM04895*/
         L     @03,WKLDADDR(,RWORK)                                0512
         LH    @09,BINLEN(,@09)                                    0512
         N     @09,@CF01919                                        0512
         SLR   @11,@11                                             0512
         IC    @11,BINLDATL(,@03)                                  0512
         SLR   @09,@11                                             0512
         SL    @09,@CF01908                                        0512
         STH   @09,PLMVLNTH(,@07)                                  0512
*   PLMVSCTG=ON;                    /* INDICATE SRCE CONTIGUOUS      */
         OI    PLMVSCTG(@07),B'01000000'                           0513
*   RPARM=ADDR(WKMVBFR);            /* PARAMETER LIST ADDRESS        */
         LA    RPARM,WKMVBFR(,RWORK)                               0514
*   CALL IEDMVBFR;                  /* MOVE BIND DATA FROM THE BIND
*                                      IMAGE TABLE TO CINIT          */
         L     @09,AVTSAVTP(,RAVT)                                 0515
         L     @15,SAVTMVBF(,@09)                                  0515
         BALR  @14,@15                                             0515
*/*                                                                  */
*                                                                  0516
*   PLMVFLG1=0;                     /* CLEAR FLAG FIELD IN MOVE    0516
*                                      BUFFER PARM LIST              */
         LA    @09,65                                              0516
         ALR   @09,RWORK                                           0516
         MVI   PLMVFLG1(@09),X'00'                                 0516
*   PLMVSU=WKSRCEU;                 /* SAVED SOURCE UNIT             */
         L     @07,WKSRCEU(,RWORK)                                 0517
         ST    @07,PLMVSU(,@09)                                    0517
*   PLMVSD=WKSRCED;                 /* SAVED SOURCE DATA             */
         L     @07,WKSRCED(,RWORK)                                 0518
         ST    @07,PLMVSD(,@09)                                    0518
*   PLMVLNTH=WKINITD;               /* LENGTH OF VARIABLE DATA       */
         LH    @07,WKINITD(,RWORK)                                 0519
         N     @07,@CF01919                                        0519
         STH   @07,PLMVLNTH(,@09)                                  0519
*   RPARM=ADDR(WKMVBFR);            /* PARAMETER LIST ADDRESS        */
         LA    RPARM,WKMVBFR(,RWORK)                               0520
*   CALL IEDMVBFR;                  /* MOVE VARIABLE LENGTH DATA FROM
*                                      INIT-SELF TO CINIT            */
         L     @09,AVTSAVTP(,RAVT)                                 0521
         L     @15,SAVTMVBF(,@09)                                  0521
         BALR  @14,@15                                             0521
*/*                                                                  */
*                                                                  0522
*   RE=WKSAVE2;                     /* RESTORE REG 14                */
         L     RE,WKSAVE2(,RWORK)                                  0522
*   END CINITBLD;                   /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0523
@EF00002 DS    0H                                                  0523
@ER00002 BR    @14                                                 0523
*CINTPROC:                                                         0524
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0524
*                                                                  0524
CINTPROC DS    0H                                                  0525
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROCESSES A CINIT REQUEST. THE AMOUNT OF DATA IN */
*   /* THE CINIT REQUEST IS CALCULATED AND A NEW BUFFER IS REQUESTED.*/
*   /* THE CINITBLD ROUTINE IS THEN CALLED TO BUILD THE CINIT        */
*   /* REQUEST. AFTER THE CINIT REQUEST IS BUILT THE INIT-SELF BUFFER*/
*   /* IS FREED AND THE CINIT BUFFER IS TPOSTED TO IEDLUS VIA SVC    */
*   /* 102.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0525
*   WKSAVE1=RE;                     /* SAVE REG 14                   */
         ST    RE,WKSAVE1(,RWORK)                                  0525
*/*                                                                  */
*                                                                  0526
*   TRMLUREQ=OFF;                   /* INIT-SELF INTERNAL INDICATOR  */
         LA    @03,TRMLUREQ(,RTRM)                                 0526
         LR    @11,@03                                             0526
         LA    @09,3                                               0526
         NR    @11,@09                                             0526
         LCR   @11,@11                                             0526
         ALR   @03,@11                                             0526
         L     @09,0(,@03)                                         0526
@GL00007 LR    @07,@09                                             0526
         N     @07,@CB01921+3(@11)                                 0526
         CS    @09,@07,0(@03)                                      0526
         BNE   @GL00007                                            0526
*/*                                                                  */
*                                                                  0527
*                                   /* CALCULATE AMOUNT OF DATA IN 0527
*                                      THE CINIT COMMAND             */
*   RPARM=ADDR(BINIMAGE);           /*                       @ZM04895*/
         L     @09,WKBIADDR(,RWORK)                                0527
         LA    RPARM,BINIMAGE(,@09)                                0527
*   RPARM=ADDR(RPARM->BNDUDFL);     /*                       @ZM04895*/
         LA    @07,BNDUDFL(,RPARM)                                 0528
         LR    RPARM,@07                                           0528
*   WKLDADDR=RPARM+LENGTH(BINUDATL)+RPARM->BINUDATL;/*       @ZM04895*/
         LA    @07,1                                               0529
         LR    @03,RPARM                                           0529
         ALR   @03,@07                                             0529
         SLR   @11,@11                                             0529
         IC    @11,BINUDATL(,RPARM)                                0529
         ALR   @03,@11                                             0529
         ST    @03,WKLDADDR(,RWORK)                                0529
*   WKCINTD=1+LENGTH(IEDTH)+LENGTH(IEDRH)+LENGTH(XCINFIXD)+(WKBIADDR->
*       BINLEN-WKLDADDR->BINLDATL-LENGTH(BINLDATL))+WKINITD;/*     0530
*                                                            @ZM46750
*                                      CALCULATE NO OF UNITS NEEDED
*                                      FOR CINIT REQUEST             */
         LH    @09,BINLEN(,@09)                                    0530
         N     @09,@CF01919                                        0530
         SLR   @11,@11                                             0530
         IC    @11,BINLDATL(,@03)                                  0530
         SLR   @09,@11                                             0530
         AL    @09,@CF01377                                        0530
         LH    @03,WKINITD(,RWORK)                                 0530
         N     @03,@CF01919                                        0530
         ALR   @09,@03                                             0530
         STH   @09,WKCINTD(,RWORK)                                 0530
*   RPARM=1;                        /* SET NO OF UNITS TO 1          */
         LR    RPARM,@07                                           0531
*   DO WKSIZE=WKCINTD BY(-AVTKEYLE) WHILE WKSIZE>AVTKEYLE;         0532
         STH   @09,WKSIZE(,RWORK)                                  0532
         B     @DE00532                                            0532
@DL00532 DS    0H                                                  0533
*     RPARM=RPARM+1;                /* ADD 1 TO NO OF UNITS          */
         AL    RPARM,@CF00060                                      0533
*   END;                                                           0534
         LH    @09,AVTKEYLE(,RAVT)                                 0534
         LCR   @09,@09                                             0534
         LH    @07,WKSIZE(,RWORK)                                  0534
         N     @07,@CF01919                                        0534
         ALR   @07,@09                                             0534
         LR    @09,@07                                             0534
         STH   @09,WKSIZE(,RWORK)                                  0534
@DE00532 LH    @09,WKSIZE(,RWORK)                                  0534
         N     @09,@CF01919                                        0534
         CH    @09,AVTKEYLE(,RAVT)                                 0534
         BH    @DL00532                                            0534
*   CALL CINITBLD;                  /* BUILD CINIT REQUEST           */
         BAL   @14,CINITBLD                                        0535
*   CALL FREEBUFR;                  /* FREE INIT-SELF BUFFER         */
         BAL   @14,FREEBUFR                                        0536
*/*                                                                  */
*                                                                  0537
*                                   /* SET UP ELEMENT TO TPOST       */
*   WKCINBFR->PRFPRI=PRISSPIU;      /* SET PRIORITY                  */
         L     @09,WKCINBFR(,RWORK)                                0537
         MVI   PRFPRI(@09),X'E5'                                   0537
*   WKCINBFR->PRFQCBA=ADDR(SAVTLUSQ);/* LUS QCB ADDRESS SET UP PARM
*                                      LIST FOR SVC 102              */
         L     @07,AVTSAVTP(,RAVT)                                 0538
         LA    @07,SAVTLUSQ(,@07)                                  0538
         STCM  @07,7,PRFQCBA(@09)                                  0538
*   OPCAQREQ=TPOST;                 /* SET UP FOR TPOST              */
         MVI   OPCAQREQ(ROPCAVT),X'0C'                             0539
*   OPCAQFST=WKCINBFR;              /* CINIT BUFFER ADDRESS          */
         STCM  @09,7,OPCAQFST(ROPCAVT)                             0540
*   OPCAQRQ2=ENDLIST;               /* SET END OF LIST               */
         MVI   OPCAQRQ2(ROPCAVT),X'80'                             0541
*   OPCAQSEC=WKCINBFR;              /* CINIT BUFFER ADDRESS          */
         STCM  @09,7,OPCAQSEC(ROPCAVT)                             0542
*   RPARM=ADDR(OPCAQCTL);           /* PARAMETER LIST ADDRESS        */
         LA    RPARM,OPCAQCTL(,ROPCAVT)                            0543
*   SVC(102);                       /* TPOST CINIT BUFFER            */
         SVC   102                                                 0544
*/*                                                                  */
*                                                                  0545
*   RE=WKSAVE1;                     /* RESTORE REG 14                */
         L     RE,WKSAVE1(,RWORK)                                  0545
*   END CINTPROC;                   /* RETURN                        */
@EL00003 DS    0H                                                  0546
@EF00003 DS    0H                                                  0546
@ER00003 BR    @14                                                 0546
*FINDMODE:                                                         0547
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0547
*                                                                  0547
FINDMODE DS    0H                                                  0548
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE GETS THE LOGMODE NAME OUT OF THE INIT-SELF       */
*   /* COMMAND AND THEN SEARCHES THE BIND IMAGE TABLE TO DETERMINE IF*/
*   /* BIND PARAMETERS WHERE SPECIFIED WITH THAT LOGMODE NAME. IF THE*/
*   /* LOGMODE NAME DOES NOT MATCH A NAME IN THE TABLE A NAME OF ALL */
*   /* BLANKS IS SPECIFIED AND THE SEARCH IS REPEATED. A LOGMODE NAME*/
*   /* OF ALL BLANKS CAUSES THE DEFAULT BIND PARAMETERS TO BE USED.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0548
*   WKSAVE1=RE;                     /* SAVE REG 14                   */
         ST    RE,WKSAVE1(,RWORK)                                  0548
*/*                                                                  */
*                                                                  0549
*   PLMVFLG1=PLMVFLG1&&PLMVFLG1;    /* CLEAR FLAG FIELD IN MOVE    0549
*                                      BUFFER PARM LIST              */
         LA    @09,65                                              0549
         ALR   @09,RWORK                                           0549
         XC    PLMVFLG1(1,@09),PLMVFLG1(@09)                       0549
*   PLMVTU=ADDR(WKLOGMOD);          /* TARG UNIT=WORK AREA           */
         LA    @07,WKLOGMOD(,RWORK)                                0550
         ST    @07,PLMVTU(,@09)                                    0550
*   PLMVTD=ADDR(WKLOGMOD);          /* TARG DATA=WORK AREA           */
         ST    @07,PLMVTD(,@09)                                    0551
*   PLMVSU=RPRF;                    /* SOURCE UNIT = INIT-SELF       */
         ST    RPRF,PLMVSU(,@09)                                   0552
*   PLMVSD=ADDR(XINSMODE);          /* SOURCE DATA = LOG MODE        */
         L     @07,WKINSPIU(,RWORK)                                0553
         LA    @07,XINSMODE+13(,@07)                               0553
         ST    @07,PLMVSD(,@09)                                    0553
*   PLMVLNTH=LENGTH(XINSMODE);      /* SET LENGTH FOR MOVE           */
         MVC   PLMVLNTH(2,@09),@CH00045                            0554
*   PLMVTCTG=ON;                    /* INDICATE TARG CONTIGUOUS      */
         OI    PLMVTCTG(@09),B'00100000'                           0555
*   RPARM=ADDR(WKMVBFR);            /* ADDRESS OF PARAMETER LIST     */
         LA    RPARM,WKMVBFR(,RWORK)                               0556
*   CALL IEDMVBFR;                  /* MOVE MODE NAME FROM INIT- SELF
*                                      TO WORKAREA                   */
         L     @09,AVTSAVTP(,RAVT)                                 0557
         L     @15,SAVTMVBF(,@09)                                  0557
         BALR  @14,@15                                             0557
*/*                                                                  */
*                                                                  0558
*   WKSRCEU=PLMVSU;                 /* SAVE SOURCE UNIT              */
         LA    @09,65                                              0558
         ALR   @09,RWORK                                           0558
         L     @07,PLMVSU(,@09)                                    0558
         ST    @07,WKSRCEU(,RWORK)                                 0558
*   WKSRCED=PLMVSD;                 /* SAVE SOURCE DATA              */
         L     @09,PLMVSD(,@09)                                    0559
         ST    @09,WKSRCED(,RWORK)                                 0559
*   WKBIADDR=0;                     /* INITIALIZE BIND IMAGE ADR     */
         SLR   @09,@09                                             0560
         ST    @09,WKBIADDR(,RWORK)                                0560
*/*                                                                  */
*                                                                  0561
*   DO UNTIL WKBIADDR>0;            /* MATCH NOT FOUND               */
@DL00561 DS    0H                                                  0562
*     WKTBLPTR=SAVTBITN;            /* POINTER TO BIND IMAGE TBL     */
         L     @09,AVTSAVTP(,RAVT)                                 0562
         L     @09,SAVTBITN(,@09)                                  0562
         ST    @09,WKTBLPTR(,RWORK)                                0562
*     DO WHILE WKBIADDR=0&WKTBLPTR->ENDATA^=ENDTBL;/* MATCH NOT FOUND
*                                      AND NOT END OF TABLE          */
         B     @DE00563                                            0563
@DL00563 DS    0H                                                  0564
*       IF WKLOGMOD=WKTBLPTR->BINNAME THEN/* NAMES MATCH             */
         L     @09,WKTBLPTR(,RWORK)                                0564
         CLC   WKLOGMOD(8,RWORK),BINNAME(@09)                      0564
         BNE   @RF00564                                            0564
*         WKBIADDR=WKTBLPTR;        /* SET BIND IMAGE ADDR           */
         ST    @09,WKBIADDR(,RWORK)                                0565
*       ELSE                        /* BUMP TO NEXT ENTRY            */
*         WKTBLPTR=WKTBLPTR+LENGTH(IEDBIN)+WKTBLPTR->BINLEN;       0566
         B     @RC00564                                            0566
@RF00564 L     @09,WKTBLPTR(,RWORK)                                0566
         LA    @07,10                                              0566
         ALR   @07,@09                                             0566
         LH    @09,BINLEN(,@09)                                    0566
         N     @09,@CF01919                                        0566
         ALR   @07,@09                                             0566
         ST    @07,WKTBLPTR(,RWORK)                                0566
*     END;                                                         0567
@RC00564 DS    0H                                                  0567
@DE00563 L     @09,WKBIADDR(,RWORK)                                0567
         LTR   @09,@09                                             0567
         BNZ   @DC00563                                            0567
         L     @09,WKTBLPTR(,RWORK)                                0567
         CLI   ENDATA(@09),255                                     0567
         BNE   @DL00563                                            0567
@DC00563 DS    0H                                                  0568
*     IF WKBIADDR=0 THEN            /* MATCH NOT FOUND               */
         L     @09,WKBIADDR(,RWORK)                                0568
         LTR   @09,@09                                             0568
         BNZ   @RF00568                                            0568
*       WKLOGMOD=' ';               /* LOGMODE NAME = BLANKS         */
         MVI   WKLOGMOD+1(RWORK),C' '                              0569
         MVC   WKLOGMOD+2(6,RWORK),WKLOGMOD+1(RWORK)               0569
         MVI   WKLOGMOD(RWORK),C' '                                0569
*   END;                                                           0570
*                                                                  0570
@RF00568 DS    0H                                                  0570
@DE00561 L     @09,WKBIADDR(,RWORK)                                0570
         LTR   @09,@09                                             0570
         BNP   @DL00561                                            0570
*/*                                                                  */
*                                                                  0571
*   RE=WKSAVE1;                     /* RESTORE REG 14                */
         L     RE,WKSAVE1(,RWORK)                                  0571
*   END FINDMODE;                                                  0572
@EL00004 DS    0H                                                  0572
@EF00004 DS    0H                                                  0572
@ER00004 BR    @14                                                 0572
*FINDSIB:                                                          0573
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0573
*                                                                  0573
FINDSIB  DS    0H                                                  0574
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE SEARCHES THE SIB CHAIN. IF NO SIBS ARE ON THE    */
*   /* CHAIN, AN ERROR SWITCH IS SET. IF A LU-LU SIB EXISTS THE ERROR*/
*   /* SWITCH IS ALSO SET. IF ONLY THE SSCP-LU SIB IS ON THE CHAIN,  */
*   /* NO ERROR SWITCH IS SET.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0574
*   WKSIBSW=OFF;                    /* SET SIB SWITCH OFF            */
         NI    WKSIBSW(RWORK),B'01111111'                          0574
*   WKSIBPTR=TRMSIBPT;              /* SET UP SIB POINTER            */
         SLR   @09,@09                                             0575
         ICM   @09,7,TRMSIBPT(RTRM)                                0575
         ST    @09,WKSIBPTR(,RWORK)                                0575
*/*                                                                  */
*                                                                  0576
*   IF WKSIBPTR>0 THEN              /* ANY SIBS ON CHAIN             */
         LTR   @09,@09                                             0576
         BNP   @RF00576                                            0576
*     DO;                                                          0577
*       IF SIBINDEX^=SAVTSCPT THEN  /* IS THIS A LU-LU SIB           */
         L     @07,AVTSAVTP(,RAVT)                                 0578
         CLC   SIBINDEX(2,@09),SAVTSCPT(@07)                       0578
         BE    @RF00578                                            0578
*         WKSIBSW=ON;               /* SET SIB SWITCH ON             */
         OI    WKSIBSW(RWORK),B'10000000'                          0579
*     END;                                                         0580
*   ELSE                            /* NO SIBS EXIST                 */
*     WKSIBSW=ON;                   /* SET SIB SWITCH ON             */
         B     @RC00576                                            0581
@RF00576 OI    WKSIBSW(RWORK),B'10000000'                          0581
*   END FINDSIB;                    /* RETURN                        */
@EL00005 DS    0H                                                  0582
@EF00005 DS    0H                                                  0582
@ER00005 BR    @14                                                 0582
*FREEBUFR:                                                         0583
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0583
*                                                                  0583
FREEBUFR DS    0H                                                  0584
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE FREES THE BUFFER BY CALLING A ROUTINE IN THE     */
*   /* RESIDENT OPERATOR CONTROL MODULE (FREEBUF).                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0584
*   WKSAVE2=RE;                     /* SAVE REG 14                   */
         ST    RE,WKSAVE2(,RWORK)                                  0584
*/*                                                                  */
*                                                                  0585
*   RPARM=RPRF;                     /* ADDRESS OF BUFFER TO FREE     */
         LR    RPARM,RPRF                                          0585
*   CALL FREEBUF;                   /* FREE THE BUFFER               */
         L     @15,OPCFREBF(,ROPCAVT)                              0586
         BALR  @14,@15                                             0586
*/*                                                                  */
*                                                                  0587
*   RE=WKSAVE2;                     /* RESTORE REG 14                */
         L     RE,WKSAVE2(,RWORK)                                  0587
*   END FREEBUFR;                   /* RETURN                        */
@EL00006 DS    0H                                                  0588
@EF00006 DS    0H                                                  0588
@ER00006 BR    @14                                                 0588
*INITERR:                                                          0589
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0589
*                                                                  0589
INITERR  DS    0H                                                  0590
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE BUILDS AN ERROR RESPONSE TO THE INIT-SELF        */
*   /* REQUEST. THE ERROR RESPONSE IS TPOSTED TO IEDLUS VIA SVC 102. */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*                                   /* SET UP TH AND RH              */
*   TRHTYPE=ON;                     /* SET RESPONSE                  */
*   TRHSDI=ON;                      /* SET SENSE INCLUDED            */
         LA    @09,10                                              0591
         L     @07,WKINSPIU(,RWORK)                                0591
         LR    @03,@07                                             0591
         ALR   @03,@09                                             0591
         OI    TRHTYPE(@03),B'10000100'                            0591
*   WKDAF=TTHOAF;                   /* GET THE DESTINATION           */
         MVC   WKDAF(2,RWORK),TTHOAF(@07)                          0592
*   TTHOAF=SAVTSCPT;                /* SET UP SSCP AS ORIGIN         */
         L     @03,AVTSAVTP(,RAVT)                                 0593
         MVC   TTHOAF(2,@07),SAVTSCPT(@03)                         0593
*   TTHDAF=WKDAF;                   /* SET UP DESTINATION SET UP DATA
*                                      COUNT FIELD                   */
         MVC   TTHDAF(2,@07),WKDAF(RWORK)                          0594
*   TTHDCF=LENGTH(IEDRH)+LENGTH(IEDSNSD)+LENGTH(XINSCODE);         0595
*                                                                  0595
         STCM  @09,3,TTHDCF(@07)                                   0595
*/*                                                                  */
*                                                                  0596
*   SNSMAJ=SNSRQREJ;                /* SET MAJOR CODE TO '08'X       */
         LA    @09,13                                              0596
         ALR   @09,@07                                             0596
         MVI   SNSMAJ(@09),X'08'                                   0596
*   SNSMIN=SNSNRSCE;                /* SET MINOR CODE TO '12'X       */
         MVI   SNSMIN(@09),X'12'                                   0597
*   SNSUSER=0;                      /* CLEAR USER SENSE              */
         SLR   @03,@03                                             0598
         STCM  @03,3,SNSUSER(@09)                                  0598
*   INSCMD=CD1XINS;                 /* INIT-SELF COMMAND CODE        */
         MVC   INSCMD(3,@07),@CB00829                              0599
*/*                                                                  */
*                                                                  0600
*   TRMINERR=ON;                    /* NOTIFY TCAM OF ERROR          */
         LA    @03,TRMINERR(,RTRM)                                 0600
         LR    @11,@03                                             0600
         LA    @09,3                                               0600
         NR    @11,@09                                             0600
         LCR   @11,@11                                             0600
         ALR   @03,@11                                             0600
         L     @09,0(,@03)                                         0600
@GL00009 LR    @07,@09                                             0600
         O     @07,@CB01928+3(@11)                                 0600
         CS    @09,@07,0(@03)                                      0600
         BNE   @GL00009                                            0600
*/*                                                                  */
*                                                                  0601
*                                   /* TPOST TO IEDLUS               */
*   PRFPRI=PRISSPIU;                /* PRIORITY OF INS ERROR RSP     */
         MVI   PRFPRI(IEDQPPTR),X'E5'                              0601
*   PRFQCBA=ADDR(SAVTLUSQ);         /* LUS QCB ADDRESS               */
         L     @09,AVTSAVTP(,RAVT)                                 0602
         LA    @09,SAVTLUSQ(,@09)                                  0602
         STCM  @09,7,PRFQCBA(IEDQPPTR)                             0602
*   OPCAQREQ=TPOST;                 /* SET CODE FOR TPOST            */
         MVI   OPCAQREQ(ROPCAVT),X'0C'                             0603
*   OPCAQFST=RPRF;                  /* ADDR OF ERROR RSP BUFFER      */
         STCM  RPRF,7,OPCAQFST(ROPCAVT)                            0604
*   OPCAQRQ2=ENDLIST;               /* SET END OF LIST               */
         MVI   OPCAQRQ2(ROPCAVT),X'80'                             0605
*   OPCAQSEC=RPRF;                  /* ADDR OF ERROR RSP BUFFER      */
         STCM  RPRF,7,OPCAQSEC(ROPCAVT)                            0606
*   RPARM=ADDR(OPCAQCTL);           /* PARAMETER LIST ADDRESS        */
         LA    RPARM,OPCAQCTL(,ROPCAVT)                            0607
*   SVC(102);                       /* TPOST INIT-SELF ERR RSP       */
         SVC   102                                                 0608
*/*                                                                  */
*                                                                  0609
*   END INITERR;                    /* RETURN TO CALLER              */
@EL00007 DS    0H                                                  0609
@EF00007 DS    0H                                                  0609
@ER00007 BR    @14                                                 0609
*SIBRTN:                                                           0610
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0610
*                                                                  0610
SIBRTN   DS    0H                                                  0611
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE SETS UP THE PARAMETER LIST TO GET A SIB. THE     */
*   /* ADDRESS OF THE PARAMETER LIST IS PLACED IN REG 1 THEN THE     */
*   /* POSTWAIT ROUTINE IS CALLED TO REQUEST THE SIB.                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0611
*   WKSAVE1=RE;                     /* SAVE REG 14                   */
         ST    RE,WKSAVE1(,RWORK)                                  0611
*/*                                                                  */
*                                                                  0612
*   REQTYPE=REQSGET;                /* INDICATOR TO GET SIB          */
         LA    @09,89                                              0612
         ALR   @09,RWORK                                           0612
         MVI   REQTYPE(@09),X'03'                                  0612
*   REQQCBA=SAVTXTRQ;               /* POSTWAIT QCB                  */
         L     @07,AVTSAVTP(,RAVT)                                 0613
         MVC   REQQCBA(3,@09),SAVTXTRQ+1(@07)                      0613
*   REQPRI=PRISIBRQ;                /* GET SIB PRIORITY              */
         MVI   REQPRI(@09),X'E5'                                   0614
*   REQRQCBA=ADDR(OPCPWQCB);        /* OP COB QCB            @YM08403*/
         LA    @07,OPCPWQCB(,ROPCAVT)                              0615
         STCM  @07,7,REQRQCBA(@09)                                 0615
*   REQRPRI=PRISIBRQ;               /* RETURN PRIORITY               */
         MVI   REQRPRI(@09),X'E5'                                  0616
*   REQSTTE=RTRM+LENGTH(IEDNTRM);   /* TTE FOR THE PU                */
         LA    @07,14                                              0617
         ALR   @07,RTRM                                            0617
         ST    @07,REQSTTE(,@09)                                   0617
*   REQSTNT=TTHOAF;                 /* INDEX OF ORIGINATOR           */
         L     @07,WKINSPIU(,RWORK)                                0618
         MVC   REQSTNT(2,@09),TTHOAF(@07)                          0618
*/*                                                                  */
*                                                                  0619
*   RPARM=ADDR(WKREQELE);           /* ADDRESS OF REQUEST ELE        */
         LA    RPARM,WKREQELE(,RWORK)                              0619
*   CALL POSTWAIT;                  /* GET A SIB                     */
         L     @15,OPCPSTWT(,ROPCAVT)                              0620
         BALR  @14,@15                                             0620
*/*                                                                  */
*                                                                  0621
*   RE=WKSAVE1;                     /* RESTORE REG14                 */
         L     RE,WKSAVE1(,RWORK)                                  0621
*   END SIBRTN;                     /* RETURN TO CALLER              */
@EL00008 DS    0H                                                  0622
@EF00008 DS    0H                                                  0622
@ER00008 BR    @14                                                 0622
*   END IGCA110D                                                   0623
*                                                                  0623
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBINDD  )                                       */
*/*%INCLUDE SYSLIB  (TBNDD   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TPIUD   )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TREQD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TSNSD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TXCIND  )                                       */
*/*%INCLUDE SYSLIB  (TXINSD  )                                       */
*                                                                  0623
*       ;                                                          0623
@DATA    DS    0H
@CH00045 DC    H'8'
         DS    0F
         DS    0F
@CF00060 DC    F'1'
@CF01589 DC    F'14'
@CF00096 DC    F'15'
@CF01377 DC    F'22'
@CF01908 DC    F'-1'
@CF01919 DC    XL4'0000FFFF'
         DS    0D
@CC01846 DC    C'00'
@CB00829 DC    X'010681'
@CB00835 DC    X'010601'
@CB01915 DC    B'111111111111111111111111111101111111111111111111111111C
               11'
@CB01921 DC    B'111111111111111111111111111110111111111111111111111111C
               11'
@CB01928 DC    B'000000000000000000000000000000100000000000000000000000C
               00'
PATCH    DC    100X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IEDQAPTR EQU   @04
ROPCAVT  EQU   @02
IEDQPPTR EQU   @06
RTRM     EQU   @08
RAVT     EQU   @04
RZERO    EQU   @00
RPARM    EQU   @01
RWORK    EQU   @05
RPRF     EQU   @06
IEDQTPTR EQU   @08
RBASE    EQU   @12
RSAVE    EQU   @13
RE       EQU   @14
RF       EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00085 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTMVBF EQU   IEDNSVTD+160
SAVTXTRQ EQU   IEDNSVTD+164
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTTNTX EQU   IEDNSVTD+252
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTBITN EQU   IEDNSVTD+312
IEDBIN   EQU   0
BINNAME  EQU   IEDBIN
BINLEN   EQU   IEDBIN+8
BINIMAGE EQU   IEDBIN+10
RBIN     EQU   0
BINBUD   EQU   0
BINUDATL EQU   BINBUD
BINBLD   EQU   0
BINLDATL EQU   BINBLD
IEDBNDD  EQU   0
BNDPRIM  EQU   IEDBNDD+4
BNDSECD  EQU   IEDBNDD+5
BNDCOMM1 EQU   IEDBNDD+6
BNDCOMM2 EQU   IEDBNDD+7
BNDSMSRU EQU   IEDBNDD+10
BNDPMSRU EQU   IEDBNDD+11
BNDLUPFL EQU   IEDBNDD+14
BNDPSCH  EQU   IEDBNDD+15
BNDUDFL  EQU   IEDBNDD+36
RBND     EQU   0
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCPSTWT EQU   IEDQOPCD+48
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
IEDPIU   EQU   0
PIUTH    EQU   IEDPIU
PIURH    EQU   IEDPIU+10
PIURU    EQU   IEDPIU+13
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLG1 EQU   IEDPLMV+18
PLMVSCTG EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
IEDPLMVP EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
@NM00142 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00142
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBTRMHO EQU   QCBSTAT
QCBINSRC EQU   IEDQQCB+21
@NM00150 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00150+1
QCBTSOF1 EQU   @NM00150+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQQPTR EQU   0
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDREQD  EQU   0
REQTYPE  EQU   IEDREQD
REQQCBA  EQU   IEDREQD+1
REQPRI   EQU   IEDREQD+4
REQRPRI  EQU   IEDREQD+8
REQRQCBA EQU   IEDREQD+9
REQROUTE EQU   IEDREQD+12
REQRCDS  EQU   IEDREQD+14
REQRCD1  EQU   REQRCDS
REQDATA  EQU   IEDREQD+16
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHTYPE  EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHDR1   EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHBYTE2 EQU   IEDRH+2
IEDSIBD  EQU   0
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBSSTAT EQU   SIBSESSN
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBTERM  EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBIND3 EQU   SIBBIND+2
SIBSTAT0 EQU   IEDSIBD+23
IEDSNSD  EQU   0
SNSSYSTM EQU   IEDSNSD
SNSMAJ   EQU   SNSSYSTM
SNSMIN   EQU   SNSSYSTM+1
SNSUSER  EQU   IEDSNSD+2
SNSPTR   EQU   0
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDXCIND EQU   0
XCINFIXD EQU   IEDXCIND
XCINCODE EQU   XCINFIXD
XCINFMT  EQU   XCINFIXD+3
XCINORG  EQU   XCINFIXD+4
XCINADDR EQU   XCINFIXD+5
XCINBLEN EQU   XCINFIXD+7
XCINVAR  EQU   IEDXCIND+9
XCINNTNM EQU   XCINVAR
XCINRQID EQU   XCINVAR+2
XCINPWRD EQU   XCINVAR+3
XCINUFLD EQU   XCINVAR+4
XCINPTR  EQU   0
IEDXINSD EQU   0
XINSFIXD EQU   IEDXINSD
XINSCODE EQU   XINSFIXD
XINSFMTP EQU   XINSFIXD+3
XINSMODE EQU   XINSFIXD+4
XINSVAR  EQU   IEDXINSD+12
XINSNTNM EQU   XINSVAR
XINSRQID EQU   XINSVAR+2
XINSPWRD EQU   XINSVAR+3
XINSUFLD EQU   XINSVAR+4
XINSPTR  EQU   0
ALLOCBUF EQU   0
IEDIAP04 EQU   0
IEDMVBFR EQU   0
IEDQTNT  EQU   0
FREEBUF  EQU   0
POSTWAIT EQU   0
ENDATA   EQU   0
WKAREA   EQU   0
WKSAVE1  EQU   WKAREA
WKSAVE2  EQU   WKAREA+4
WKCINBFR EQU   WKAREA+8
WKCINPIU EQU   WKAREA+12
WKCINRU  EQU   WKAREA+16
WKINSPIU EQU   WKAREA+20
WKSRCEU  EQU   WKAREA+24
WKSRCED  EQU   WKAREA+28
WKBIADDR EQU   WKAREA+32
WKSIBPTR EQU   WKAREA+36
WKTBLPTR EQU   WKAREA+40
WKLDADDR EQU   WKAREA+44
WKDAF    EQU   WKAREA+48
WKINITD  EQU   WKAREA+50
WKCINTD  EQU   WKAREA+52
WKSIZE   EQU   WKAREA+54
WKSWITCH EQU   WKAREA+56
WKSIBSW  EQU   WKSWITCH
WKLOGMOD EQU   WKAREA+57
WKMVBFR  EQU   WKAREA+65
WKREQELE EQU   WKAREA+89
QCBLDCB  EQU   0
SIBPTR   EQU   0
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQREQ EQU   OPCAQWD1
OPCAQFST EQU   OPCAQWD1+1
OPCAQWD2 EQU   OPCAQWD+4
OPCAQRQ2 EQU   OPCAQWD2
OPCAQSEC EQU   OPCAQWD2+1
OPCAQWD3 EQU   OPCAQWD+8
REQLDATA EQU   REQDATA
REQSDATA EQU   REQDATA
REQSTTE  EQU   REQSDATA
REQSTNT  EQU   REQSDATA+4
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLUIT  EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLINK  EQU   TRMBYTE3
INSERRSP EQU   PIURU
INSSENSE EQU   INSERRSP
INSCMD   EQU   INSERRSP+4
PRFSHDR  EQU   IEDQPRF+42
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00173 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00172 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00171 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
REQLTNT  EQU   REQLDATA
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
@NM00174 EQU   WKSWITCH
XINSUSFD EQU   XINSUFLD+1
XINSULEN EQU   XINSUFLD
XINSPSWD EQU   XINSPWRD+1
XINSPLEN EQU   XINSPWRD
XINSRID  EQU   XINSRQID+1
XINSRLEN EQU   XINSRQID
XINSNAME EQU   XINSNTNM+2
XINSNLEN EQU   XINSNTNM+1
XINSNTYP EQU   XINSNTNM
XINSTYPE EQU   XINSFMTP
XINSFMT  EQU   XINSFMTP
XINSREQ  EQU   XINSCODE+2
XINSSESS EQU   XINSCODE+1
XINSNETS EQU   XINSCODE
XCINUSFD EQU   XCINUFLD+1
XCINULEN EQU   XCINUFLD
XCINPSWD EQU   XCINPWRD+1
XCINPLEN EQU   XCINPWRD
XCINRID  EQU   XCINRQID+1
XCINRLEN EQU   XCINRQID
XCINNAME EQU   XCINNTNM+2
XCINNLEN EQU   XCINNTNM+1
XCINNTYP EQU   XCINNTNM
XCINBIMG EQU   XCINVAR
XCINREQ  EQU   XCINCODE+2
XCINSESS EQU   XCINCODE+1
XCINNETS EQU   XCINCODE
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00170 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00169 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00168 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TTHTAG2  EQU   TTHTAG+1
@NM00167 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00166 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
SNSUSR2  EQU   SNSUSER+1
SNSUSR1  EQU   SNSUSER
SIBLUTYP EQU   SIBSTAT0
SIBCD    EQU   SIBSTAT0
@NM00165 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBFMODE EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBBRACK EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
SIBTSPRO EQU   IEDSIBD+18
@NM00164 EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
SIBFTERM EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBDSTAT EQU   SIBSESSN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBLGOFF EQU   SIBSESSN
SIBCHAIN EQU   IEDSIBD+4
SIBRUSEG EQU   IEDSIBD
@NM00163 EQU   TRHBYTE2
@NM00162 EQU   TRHBYTE2
@NM00161 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00160 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00159 EQU   TRHBYTE1
@NM00158 EQU   TRHBYTE1
@NM00157 EQU   TRHBYTE1
@NM00156 EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00155 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
REQRCD2  EQU   REQRCDS+1
REQSWTCH EQU   REQROUTE+1
REQFLAG  EQU   REQROUTE
REQLINK  EQU   IEDREQD+5
QCBTTCIN EQU   QCBPLCBA+1
@NM00154 EQU   QCBPLCBA
@NM00153 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00152 EQU   QCBFHDTZ
@NM00151 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00150
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00149 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00148 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBELCHN EQU   IEDQQCB+1
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00147 EQU   IEDPF2+1
@NM00146 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00145 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00144 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00143 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00142+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFTI0   EQU   PRFTIC+1
@NM00141 EQU   PRFTICC
@NM00140 EQU   PRFTICC
@NM00139 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00138 EQU   PRFTICC
@NM00137 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00136 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
PLMVUNCA EQU   IEDPLMV+20
PLMVFLG2 EQU   IEDPLMV+19
@NM00135 EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
OPCBOTTM EQU   IEDQOPCD+1184
@NM00134 EQU   IEDQOPCD+1100
@NM00133 EQU   IEDQOPCD+948
@NM00132 EQU   IEDQOPCD+940
@NM00131 EQU   IEDQOPCD+380
@NM00130 EQU   OPCPWCOB+9
@NM00129 EQU   OPCPWCOB+8
@NM00128 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00127 EQU   OPCSPEC
@NM00126 EQU   OPCSPEC
@NM00125 EQU   OPCSPEC
@NM00124 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00123 EQU   OPCLDNME+5
@NM00122 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00121 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
BNDUSD   EQU   IEDBNDD+37
BNDPLUN  EQU   IEDBNDD+28
BNDPLUNL EQU   IEDBNDD+27
BNDCRYP  EQU   IEDBNDD+26
@NM00120 EQU   IEDBNDD+25
BNDSCSZE EQU   BNDPSCH+9
@NM00119 EQU   BNDPSCH
BNDLUTYP EQU   BNDLUPFL
BNDPSF   EQU   BNDLUPFL
@NM00118 EQU   IEDBNDD+13
BNDPSPC  EQU   IEDBNDD+12
@NM00117 EQU   BNDPMSRU
BNDNMAXP EQU   BNDPMSRU
@NM00116 EQU   BNDSMSRU
BNDNMAX  EQU   BNDSMSRU
BNDSRPC  EQU   IEDBNDD+9
BNDSSPC  EQU   IEDBNDD+8
BNDCRES  EQU   BNDCOMM2
@NM00115 EQU   BNDCOMM2
@NM00114 EQU   BNDCOMM2
@NM00113 EQU   BNDCOMM2
BNDSPKR  EQU   BNDCOMM2
BNDRECOV EQU   BNDCOMM2
BNDFMODE EQU   BNDCOMM2
@NM00112 EQU   BNDCOMM1
@NM00111 EQU   BNDCOMM1
@NM00110 EQU   BNDCOMM1
BNDALT   EQU   BNDCOMM1
BNDBTERM EQU   BNDCOMM1
BNDBRACK EQU   BNDCOMM1
BNDFMUSE EQU   BNDCOMM1
@NM00109 EQU   BNDCOMM1
BNDSEBI  EQU   BNDSECD
BNDSCMP  EQU   BNDSECD
@NM00108 EQU   BNDSECD
@NM00107 EQU   BNDSECD
BNDSEXC  EQU   BNDSECD
BNDSDEF  EQU   BNDSECD
BNDSRQM  EQU   BNDSECD
BNDSCHN  EQU   BNDSECD
BNDPEBI  EQU   BNDPRIM
BNDPCMP  EQU   BNDPRIM
@NM00106 EQU   BNDPRIM
@NM00105 EQU   BNDPRIM
BNDPEXC  EQU   BNDPRIM
BNDPDEF  EQU   BNDPRIM
BNDPRQM  EQU   BNDPRIM
BNDPCHN  EQU   BNDPRIM
BNDTSPRF EQU   IEDBNDD+3
BNDFMPRF EQU   IEDBNDD+2
BNDFORMT EQU   IEDBNDD+1
BNDRUCDE EQU   IEDBNDD
BINLDAT  EQU   BINBLD+1
BINUDAT  EQU   BINBUD+1
@NM00104 EQU   SAVTCKQB+8
@NM00103 EQU   SAVTCKEC+1
@NM00102 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00101 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00100 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00099 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00098 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
@NM00097 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00096 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00095 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00094 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00093 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00092 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00091 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00090 EQU   IEDQAVTD+1242
@NM00089 EQU   IEDQAVTD+1241
@NM00088 EQU   IEDQAVTD+1240
@NM00087 EQU   IEDQAVTD+1237
@NM00086 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00084 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00083 EQU   IEDQAVTD+1140
@NM00082 EQU   IEDQAVTD+1137
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00073 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00072 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00071 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00068 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00067 EQU   IEDQAVTD+950
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00052 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00051 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00050 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00049 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00048 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00047 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00039 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00038 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00037 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00022 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00020 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00014 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00461 EQU   @RC00459
@RC00576 EQU   @EL00005
@RC00464 EQU   @RC00461
@RF00578 EQU   @RC00576
@ENDDATA EQU   *
         END   IGCA110D,(C'PLS2022',0701,77165)
