         TITLE 'IEDRSPIN, FID1 RESPONSE HANDLER INBOUND                *
                        '
IEDRSPIN CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         DC    A(0)                START OF QCB
         DC    A(0)
         DC    X'06'               START OF STCB
         DC    AL3(*-1)
         USING *,RBASE
         LR    RBASE,R15           ESTABLISH ADDRESSABILTY
IEDRSPIN IEDHJN START,HJN
*                                                                  0455
*/********************************************************************/
*/*                                                                  */
*/*     M A I N     R O U T I N E                                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0455
*   RPRF=RPARM;                     /* PIU BUFFER ADDRESS            */
         LR    RPRF,RPARM                                          0455
*   PIUPTR=ADDR(PRFPIUO)+PRFPIUO;   /* ADDRESS OF PIU DATA(TH-RH-RU) */
         LA    @10,PRFPIUO(,IEDQPPTR)                              0456
         SLR   @09,@09                                             0456
         IC    @09,PRFPIUO(,IEDQPPTR)                              0456
         ALR   @10,@09                                             0456
         ST    @10,PIUPTR                                          0456
*/*                                                                  */
*                                                                  0457
*   IF TRHRUCAT=TRHFMD THEN         /* FM DATA                       */
         TM    TRHRUCAT+10(@10),B'01100000'                        0457
         BNZ   @RF00457                                            0457
*     CMDBYTE=0;                    /* YES-SET COMMAND BYTE TO 0     */
         MVI   CMDBYTE,X'00'                                       0458
*   ELSE                            /* DATA FLOW CONTROL             */
*     DO;                                                          0459
         B     @RC00457                                            0459
@RF00457 DS    0H                                                  0460
*       IF TRHSDI=ON THEN           /* SENSE INCLUDED                */
         L     @10,PIUPTR                                          0460
         TM    TRHSDI+10(@10),B'00000100'                          0460
         BNO   @RF00460                                            0460
*         CMDBYTE=RU(5);            /* YES, COMMAND IS PAST SENSE  0461
*                                      DATA                          */
         MVC   CMDBYTE(1),RU+17(@10)                               0461
*       ELSE                        /* NO SENSE INCLUDED             */
*         CMDBYTE=RU(1);            /* COMMAND BYTE IS FIRST BYTE    */
         B     @RC00460                                            0462
@RF00460 L     @10,PIUPTR                                          0462
         MVC   CMDBYTE(1),RU+13(@10)                               0462
*     END;                                                         0463
*                                                                  0463
@RC00460 DS    0H                                                  0464
*/*                                                                  */
*                                                                  0464
*   IF TTHEFI=ON THEN               /* EXPEDITED FLOW                */
@RC00457 L     @10,PIUPTR                                          0464
         TM    TTHEFI(@10),B'00000001'                             0464
         BNO   @RF00464                                            0464
*     CALL EXPRSP;                  /* YES, PROCESS EXPEDITED FLOW   */
         BAL   @14,EXPRSP                                          0465
*   ELSE                            /* NORMAL FLOW                   */
*     DO;                                                          0466
         B     @RC00464                                            0466
@RF00464 DS    0H                                                  0467
*       RPARM=TTHOAF;               /* OAF TNT OFFSET                */
         L     @10,PIUPTR                                          0467
         SLR   RPARM,RPARM                                         0467
         ICM   RPARM,3,TTHOAF(@10)                                 0467
*       CALL IEDQTNT;               /* GET OAF TERMINAL ENTRY ADDRESS*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0468
         BALR  @14,@15                                             0468
*       RTRM=RPARM-LENGTH(IEDNTRM); /* TTE ADDRESSABILITY            */
         LR    RTRM,RPARM                                          0469
         SL    RTRM,@CF01941                                       0469
*       RQCB=TRMDESTQ;              /* QCB ADDRESSABILITY            */
         SLR   RQCB,RQCB                                           0470
         ICM   RQCB,7,TRMDESTQ(RTRM)                               0470
*/*                                                                  */
*                                                                  0471
*       IF QCBPLCBN=ON THEN         /* PLCB ASSIGNED                 */
         LR    @10,IEDQQPTR                                        0471
         SL    @10,@CF00044                                        0471
         TM    QCBPLCBN(@10),B'10000000'                           0471
         BNO   @RF00471                                            0471
*         DO;                       /* YES                           */
*           RLCB=QCBPLCBA;          /* PLCB ADDRESSABILITY           */
         L     RLCB,QCBPLCBA-1(,@10)                               0473
         LA    RLCB,0(,RLCB)                                       0473
*           SIBPTR=TRMSIBPT;        /* SIB ADDRESSABILITY            */
         SLR   @10,@10                                             0474
         ICM   @10,7,TRMSIBPT(RTRM)                                0474
         ST    @10,SIBPTR                                          0474
*/*                                                                  */
*                                                                  0475
*           VALRSPSW=ON;            /* INIT 'VALID RESPONSE' SWITCH  */
*           XFORMSW=OFF;            /* NO TRANSFORMATION     @OY19613*/
         OI    VALRSPSW,B'10000000'                                0476
         NI    XFORMSW,B'10111111'                                 0476
*/*                                                                  */
*                                                                  0477
*           IF TRHRUCAT=TRHFMD THEN /* FM DATA                       */
         L     @10,PIUPTR                                          0477
         TM    TRHRUCAT+10(@10),B'01100000'                        0477
         BNZ   @RF00477                                            0477
*             CALL FMDRSP;          /* YES, PROCESS FM DATA RESPONSE */
         BAL   @14,FMDRSP                                          0478
*           ELSE                    /* DATA FLOW CONTROL             */
*             CALL DFCRSP;          /* PROCESS DATA FLOW CONTROL RSP */
         B     @RC00477                                            0479
@RF00477 BAL   @14,DFCRSP                                          0479
*/*                                                                  */
*                                                                  0480
*           IF VALRSPSW=ON THEN     /* VALID RESPONSE                */
@RC00477 TM    VALRSPSW,B'10000000'                                0480
         BNO   @RF00480                                            0480
*             DO;                   /* YES                           */
*               IF SIBFMODE=SIBHDXFF&/* HALF DUPLEX MODE &   @YM06990*/
*                   TRHSDI=ON THEN  /* EXCEPTION RESPONSE    @YM06990*/
         L     @10,SIBPTR                                          0482
         TM    SIBFMODE(@10),B'10000000'                           0482
         BNO   @RF00482                                            0482
         TM    SIBFMODE(@10),B'01000000'                           0482
         BNZ   @RF00482                                            0482
         L     @09,PIUPTR                                          0482
         TM    TRHSDI+10(@09),B'00000100'                          0482
         BNO   @RF00482                                            0482
*                 IF SIBRECOV=ON THEN/* TCAM LU NOT RESPONSIBLE    0483
*                                                            @YM06990*/
         TM    SIBRECOV(@10),B'00100000'                           0483
         BNO   @RF00483                                            0483
*                   SIBCD=OFF;      /* INDICATE RECEIVE STATE      0484
*                                                            @YM06990*/
         NI    SIBCD(@10),B'01111111'                              0484
*                 ELSE              /* TCAM LU RESPONSIBLE FOR     0485
*                                      RECOVERY              @YM06990*/
*                   SIBCD=ON;       /* INDICATE SEND STATE   @YM06990*/
         B     @RC00483                                            0485
@RF00483 L     @10,SIBPTR                                          0485
         OI    SIBCD(@10),B'10000000'                              0485
*/*                                                                  */
*                                                                  0486
*               IF SAVTBSM^=0&      /* BRACKET MANAGER LOADED AND... */
*                   SIBBRACK=ON THEN/* RUNNING BRACKETS THIS SESSION */
@RC00483 DS    0H                                                  0486
@RF00482 L     @10,AVTSAVTP(,IEDQAPTR)                             0486
         L     @10,SAVTBSM(,@10)                                   0486
         LTR   @10,@10                                             0486
         BZ    @RF00486                                            0486
         L     @10,SIBPTR                                          0486
         TM    SIBBRACK(@10),B'00000100'                           0486
         BNO   @RF00486                                            0486
*                 DO;                                              0487
*                   PLBM=''B;       /* INIT PARM LIST TO ZEROS       */
         XC    PLBM(16),PLBM                                       0488
*                   IF XFORMSW=ON THEN/* IF PIU CONVERTED TO BUFFER
*                                                            @OY19613*/
         TM    XFORMSW,B'01000000'                                 0489
         BNO   @RF00489                                            0489
*                     PLBMRH=PRF1RH;/* MOVE RH TO PARM LIST  @OX19978*/
         LA    @10,PLBM                                            0490
         LR    @09,IEDQPPTR                                        0490
         AL    @09,@CF02271                                        0490
         MVC   PLBMRH(3,@10),PRF1RH(@09)                           0490
*                   ELSE            /*                       @OY19613*/
*                     PLBMRH=IEDRH; /* MOVE RH               @OY19613*/
         B     @RC00489                                            0491
@RF00489 LA    @10,PLBM                                            0491
         L     @09,PIUPTR                                          0491
         MVC   PLBMRH(3,@10),IEDRH+10(@09)                         0491
*                   PLBMSNC=RU(1:2);/* 1ST 2 BYTES OF RU(IF SENSE IS
*                                      INCLUDED THIS WILL BE 1ST 2 0492
*                                      BYTES OF SENSE)               */
@RC00489 LA    @10,PLBM                                            0492
         L     @09,PIUPTR                                          0492
         MVC   PLBMSNC(2,@10),RU+13(@09)                           0492
*                   PLBMCMD=CMDBYTE;/* COMMAND CODE(0 FOR FM DATA)   */
         MVC   PLBMCMD(1,@10),CMDBYTE                              0493
*                   PLBMSIB=SIBPTR; /* SIB ADDRESS                   */
         L     @09,SIBPTR                                          0494
         ST    @09,PLBMSIB(,@10)                                   0494
*                   PLBMLCB=RLCB;   /* LCB ADDRESS                   */
         ST    RLCB,PLBMLCB(,@10)                                  0495
*                   RPARM=ADDR(PLBM);/* ADDRESS OF PARM LIST         */
         LR    RPARM,@10                                           0496
*                   CALL IEDBSM;    /* DO BRACKET MANAGEMENT         */
         L     @10,AVTSAVTP(,IEDQAPTR)                             0497
         L     @15,SAVTBSM(,@10)                                   0497
         BALR  @14,@15                                             0497
*                 END;                                             0498
*             END;                                                 0499
*           ELSE                    /* INVALID RESPONSE              */
*             DO;                                                  0500
         B     @RC00480                                            0500
@RF00480 DS    0H                                                  0501
*               RPARM=RPRF;         /* ADDRESS OF PIU BUFFER         */
         LR    RPARM,RPRF                                          0501
*               CALL DISCARD;       /* DISCARD INVALID RESPONSE      */
         BAL   @14,DISCARD                                         0502
*             END;                                                 0503
*         END;                                                     0504
*       ELSE                        /* NO PLCB ASSIGNED              */
*         DO;                                                      0505
         B     @RC00471                                            0505
@RF00471 DS    0H                                                  0506
*           RPARM=RPRF;             /* ADDRESS OF PIU BUFFER         */
         LR    RPARM,RPRF                                          0506
*           CALL DISCARD;           /* DISCARD RSP PIU               */
         BAL   @14,DISCARD                                         0507
*         END;                                                     0508
*     END;                                                         0509
*                                                                  0509
@RC00471 DS    0H                                                  0510
*/*                                                                  */
*                                                                  0510
*   CALL DSPDISP;                   /* EXIT TO DISPATCHER            */
@RC00464 LA    @15,DSPDISP(,RDISP)                                 0510
         BALR  @14,@15                                             0510
*/********************************************************************/
*/*  E N D   O F   M A I N   R O U T I N E                           */
*/********************************************************************/
*                                                                  0511
*                                                                  0511
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE BUILDS A '0 LENGTH E3' ERROR BUFFER.                */
*/*    INPUT: RPARM CONTAINS THE ADDRESS OF THE PIU BUFFER IN WHICH  */
*/*           THE ERROR BUFFER IS TO BE BUILT.                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0511
*   RFY                                                            0511
*     IEDQPRF BASED(BUFPTR);                                       0511
*BLDERBUF:                                                         0512
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0512
@EL00001 DS    0H                                                  0512
@EF00001 DS    0H                                                  0512
@ER00001 BR    @14                                                 0512
BLDERBUF DS    0H                                                  0513
*   R14SV01=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV01                                         0513
*/*                                                                  */
*                                                                  0514
*   BUFPTR=RPARM;                   /* SET BUFFER ADDRESSABILITY     */
         LR    BUFPTR,RPARM                                        0514
*/*                                                                  */
*                                                                  0515
*   CALL XFORM;                     /* TRANSFORM PIU BUFFER TO 'TCAM'
*                                      BUFFER FORMAT                 */
         BAL   @14,XFORM                                           0515
*   PRF1RULN=PRFSIZE-(AVTHDRSZ+PRFISIZE);/* SET UP RU LENGTH         */
         LR    @09,BUFPTR                                          0516
         SL    @09,@CF00044                                        0516
         LA    @05,30                                              0516
         SLR   @02,@02                                             0516
         IC    @02,PRFISIZE(,BUFPTR)                               0516
         ALR   @05,@02                                             0516
         LCR   @05,@05                                             0516
         AH    @05,PRFSIZE(,BUFPTR)                                0516
         STH   @05,PRF1RULN(,@09)                                  0516
*   PRF1FORM=PRF1SQLI;              /* INDICATE LENGTH AND SEQ # ARE
*                                      PRESENT                       */
         OI    PRF1FORM(@09),B'00110000'                           0517
*   PRFSIZE=0;                      /* MARK AS '0 LENGTH' BUFFER     */
         SLR   @09,@09                                             0518
         STH   @09,PRFSIZE(,BUFPTR)                                0518
*/*                                                                  */
*                                                                  0519
*   IF QCBTSSES=ON THEN                                            0519
         TM    QCBTSSES(IEDQQPTR),B'10000000'                      0519
         BNO   @RF00519                                            0519
*     PRFTSMSG=ON;                  /* IF THIS IS TIME SHARING, SET
*                                      TSO INDICATOR                 */
         OI    PRFTSMSG(BUFPTR),B'00010000'                        0520
*   PRFQCBA=LCBMHA;                 /* SET MH FROM LCB       @YM06085*/
@RF00519 MVC   PRFQCBA(3,BUFPTR),LCBMHA(IEDQLPTR)                  0521
*/*                                                                  */
*                                                                  0522
*   PRFPRI=PRIERBFR;                /* ERROR POST PRIORITY           */
         MVI   PRFPRI(BUFPTR),X'E3'                                0522
*   LCBERROR=ON;                    /* STOP THE DISK                 */
         OI    LCBERROR(IEDQLPTR),B'00000100'                      0523
*   LCBABRTN=ON;                    /* SET ABORT FLAG                */
         OI    LCBABRTN(IEDQLPTR),B'00000001'                      0524
*   LCBRCQCB=AVTMSGS->BDQCB;        /* IEDQBD'S QCB ADDRESS          */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0525
         L     @10,BDQCB(,@10)                                     0525
         ST    @10,LCBRCQCB(,IEDQLPTR)                             0525
*/*                                                                  */
*                                                                  0526
*   R14=R14SV01;                    /* RESTORE RETURN ADDRESS        */
         L     R14,R14SV01                                         0526
*   RETURN;                         /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0527
@EF00002 DS    0H                                                  0527
@ER00002 BR    @14                                                 0527
*   END BLDERBUF;                                                  0528
*   RFY                                                            0529
*     IEDQPRF BASED(IEDQPPTR);                                     0529
*                                                                  0530
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE HANDLES ALL RESPONSES TO DATA FLOW CONTROL COMMANDS */
*/*                                                                  */
*/********************************************************************/
*                                                                  0530
*DFCRSP:                                                           0530
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0530
DFCRSP   DS    0H                                                  0531
*   R14SV02=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV02                                         0531
*/*                                                                  */
*                                                                  0532
*   IF LCBCHN=LCBWCAN THEN          /* 'WAITING FOR CANCEL RESPONSE'
*                                      STATE                         */
         TM    LCBCHN(IEDQLPTR),B'01010000'                        0532
         BNO   @RF00532                                            0532
         TM    LCBCHN(IEDQLPTR),B'10100000'                        0532
         BNZ   @RF00532                                            0532
*     DO;                           /* YES                           */
*       IF CMDBYTE=CD1CANCL THEN    /* CANCEL PIU                    */
         CLI   CMDBYTE,X'83'                                       0534
         BNE   @RF00534                                            0534
*         DO;                       /* YES                           */
*           LCBCHN=LCBBETC;         /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSE' STATE        */
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0536
*           RPARM=LCBRSPSV;         /* ADDRESS OF SAVED RESPONSE PIU */
         L     RPARM,LCBRSPSV(,IEDQLPTR)                           0537
*           CALL BLDERBUF;          /* CONVERT SAVED RESPONSE TO   0538
*                                      ERROR BUFFER                  */
         BAL   @14,BLDERBUF                                        0538
*           RPARM=LCBRSPSV;         /* ADDRESS OF ERROR BUFFER JUST
*                                      BUILT                         */
         L     RPARM,LCBRSPSV(,IEDQLPTR)                           0539
*           CALL DSPPOSTR;          /* POST ERROR BUFFER TO MH       */
         LA    @15,DSPPOSTR(,RDISP)                                0540
         BALR  @14,@15                                             0540
*           LCBRSPSV=0;             /* ZERO SAVED RESPONSE ADDRESS   */
         SLR   @10,@10                                             0541
         ST    @10,LCBRSPSV(,IEDQLPTR)                             0541
*           RPARM=RPRF;             /* ADDRESS OF CANCEL PIU BUFFER  */
         LR    RPARM,RPRF                                          0542
*           CALL DISCARD;           /* DISCARD CANCEL                */
         BAL   @14,DISCARD                                         0543
*         END;                                                     0544
*       ELSE                        /* NOT CANCEL COMMAND            */
*         VALRSPSW=OFF;             /* MARK RESPONSE AS INVALID      */
         B     @RC00534                                            0545
@RF00534 NI    VALRSPSW,B'01111111'                                0545
*     END;                                                         0546
*   ELSE                            /* NOT WAITING FOR CANCEL      0547
*                                      RESPONSE                      */
*     DO;                                                          0547
         B     @RC00532                                            0547
@RF00532 DS    0H                                                  0548
*       IF LCBCHN=LCBWBID&          /* 'WAITING FOR BID RESPONSE'  0548
*                                      STATE                         */
*           CMDBYTE=CD1BID THEN     /* BID COMMAND RESPONSE          */
         TM    LCBCHN(IEDQLPTR),B'01100000'                        0548
         BNO   @RF00548                                            0548
         TM    LCBCHN(IEDQLPTR),B'10010000'                        0548
         BNZ   @RF00548                                            0548
         CLI   CMDBYTE,X'C8'                                       0548
         BNE   @RF00548                                            0548
*         DO;                                                      0549
*           LCBCHN=LCBBETC;         /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSE' STATE        */
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0550
*           IF TRHSDI=ON THEN       /* SENSE INCLUDED                */
         L     @10,PIUPTR                                          0551
         TM    TRHSDI+10(@10),B'00000100'                          0551
         BNO   @RF00551                                            0551
*             DO;                   /* YES                           */
*               CALL SETERSNS;      /* SET ERROR WORD INFORMATION    */
         BAL   @14,SETERSNS                                        0553
*               SCBSLCTN=ON;        /* SET SELECTION ERROR           */
         L     @10,IEDQSPTR-1(,IEDQLPTR)                           0554
         OI    SCBSLCTN(@10),B'10000000'                           0554
*             END;                                                 0555
*                                                                  0555
*/*                                                                  */
*                                                                  0556
*           RPARM=RPRF;             /* BID RESPONSE ADDRESS          */
@RF00551 LR    RPARM,RPRF                                          0556
*           CALL XFORM;             /* TRANSFORM TO 'TCAM BUFFER'  0557
*                                      FORMAT                        */
         BAL   @14,XFORM                                           0557
*           PRFQCBA=SAVTDNIR;       /* IEDNGD'S QCB ADDRESS          */
         L     @10,AVTSAVTP(,IEDQAPTR)                             0558
         MVC   PRFQCBA(3,IEDQPPTR),SAVTDNIR+1(@10)                 0558
*           PRFPRI=PRIRESUM;        /* POST PRIORITY                 */
         MVI   PRFPRI(IEDQPPTR),X'E5'                              0559
*           RPARM=RPRF;             /* BID RESPONSE BUFFER           */
         LR    RPARM,RPRF                                          0560
*           CALL DSPPOSTR;          /* POST BID RESPONSE TO IEDNGD 0561
*                                      (OUTPUT DATA HANDLER)         */
         LA    @15,DSPPOSTR(,RDISP)                                0561
         BALR  @14,@15                                             0561
*         END;                                                     0562
*       ELSE                                                       0563
*         VALRSPSW=OFF;             /* MARK RESPONSE AS INVALID      */
         B     @RC00548                                            0563
@RF00548 NI    VALRSPSW,B'01111111'                                0563
*     END;                                                         0564
*                                                                  0564
@RC00548 DS    0H                                                  0565
*/*                                                                  */
*                                                                  0565
*   R14=R14SV02;                    /* RESTORE RETURN ADDRESS        */
@RC00532 L     R14,R14SV02                                         0565
*   RETURN;                         /* RETURN TO CALLER              */
@EL00003 DS    0H                                                  0566
@EF00003 DS    0H                                                  0566
@ER00003 BR    @14                                                 0566
*   END DFCRSP;                                                    0567
*                                                                  0568
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE DISCARDS ALL THE UNITS IN A PIU BUFFER.  IT POSTS   */
*/* THEM TO BUF  RETURN(IEDQGB).                                     */
*/*       INPUT= REG1 POINTS TO PIU BUFFER TO BE DISCARDED           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0568
*DISCARD:                                                          0568
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0568
DISCARD  DS    0H                                                  0569
*   R14SV07=R14;                    /* SAVE RETURN REG               */
         ST    R14,R14SV07                                         0569
*/*                                                                  */
*                                                                  0570
*   RPARM->PRFNBUNT=0;              /* SET NUMBER OF UNITS = 0 (THIS
*                                      MEANS IEDQGB WILL CALCULATE 0570
*                                      THE NUMBER OF UNITS TO BE   0570
*                                      FREED)                        */
         MVI   PRFNBUNT(RPARM),X'00'                               0570
*   RPARM->PRFQCBA=ADDR(AVTBFRTB);  /* ADDR OF BUFFER RETURN QCB     */
         LA    @10,AVTBFRTB(,IEDQAPTR)                             0571
         STCM  @10,7,PRFQCBA(RPARM)                                0571
*   RPARM->PRFPRI=PRIBFRTB;         /* POST PRIORITY                 */
         MVI   PRFPRI(RPARM),X'E0'                                 0572
*   CALL DSPPOSTR;                  /* FREE UNITS                    */
         LA    @15,DSPPOSTR(,RDISP)                                0573
         BALR  @14,@15                                             0573
*/*                                                                  */
*                                                                  0574
*   R14=R14SV07;                    /* RESTORE RETURN REG            */
         L     R14,R14SV07                                         0574
*   RETURN;                         /* RETURN TO CALLER              */
@EL00004 DS    0H                                                  0575
@EF00004 DS    0H                                                  0575
@ER00004 BR    @14                                                 0575
*   END DISCARD;                                                   0576
*                                                                  0577
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE HANDLES ALL EXPEDITED FLOW RESPONSES.               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0577
*EXPRSP:                                                           0577
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0577
EXPRSP   DS    0H                                                  0578
*   R14SV03=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV03                                         0578
*/*                                                                  */
*                                                                  0579
*   RPARM=RPRF;                     /* ADDRESS OF RESPONSE PIU BUFFER*/
         LR    RPARM,RPRF                                          0579
*   CALL DISCARD;                   /* DISCARD THIS RESPONSE         */
         BAL   @14,DISCARD                                         0580
*/*                                                                  */
*                                                                  0581
*   IF QCBTSSES=ON THEN             /* TSO SESSION?          @OY19950*/
         TM    QCBTSSES(IEDQQPTR),B'10000000'                      0581
         BNO   @RF00581                                            0581
*     DO;                           /*                       @OY19950*/
*       RPARM=RLCB;                 /* PLCB ADDRESS          @OY19950*/
         LR    RPARM,RLCB                                          0583
*       LCBPRI=PRILNFRE;            /* PLCB POST PRIORITY    @OY19950*/
         MVI   LCBPRI(IEDQLPTR),X'E0'                              0584
*       LCBQCBA=RLCB;               /* POST PLCB TO ITSELF   @OY19950*/
         STCM  RLCB,7,LCBQCBA(IEDQLPTR)                            0585
*       CALL DSPPOSTR;              /*                       @OY19950*/
         LA    @15,DSPPOSTR(,RDISP)                                0586
         BALR  @14,@15                                             0586
*     END;                          /*                       @OY19950*/
*   R14=R14SV03;                    /* RESTORE RETURN ADDRESS        */
@RF00581 L     R14,R14SV03                                         0588
*   RETURN;                         /* RETURN TO CALLER              */
@EL00005 DS    0H                                                  0589
@EF00005 DS    0H                                                  0589
@ER00005 BR    @14                                                 0589
*   END EXPRSP;                                                    0590
*                                                                  0591
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE HANDLES ALL RESPONSES TO FM DATA.                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0591
*FMDRSP:                                                           0591
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0591
FMDRSP   DS    0H                                                  0592
*   R14SV04=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV04                                         0592
*/*                                                                  */
*                                                                  0593
*   IF LCBRECVN=ON THEN             /* LCB MARKED RECEIVING          */
         TM    LCBRECVN(IEDQLPTR),B'00000010'                      0593
         BNO   @RF00593                                            0593
*     DO;                           /* YES                           */
*       IF LCBCHN=LCBWMG THEN       /* 'WAITING FOR MSGGEN RESPONSE'
*                                      STATE (A MSGGEN WAS SENT OUT
*                                      OF INMSG)                     */
         TM    LCBCHN(IEDQLPTR),B'00110000'                        0595
         BNO   @RF00595                                            0595
         TM    LCBCHN(IEDQLPTR),B'11000000'                        0595
         BNZ   @RF00595                                            0595
*         CALL MSGGNRSP;            /* PROCESS MSGGEN RESPONSE       */
         BAL   @14,MSGGNRSP                                        0596
*       ELSE                        /* NOT WAITING FOR MSGGEN      0597
*                                      RESPONSE                      */
*         DO;                                                      0597
         B     @RC00595                                            0597
@RF00595 DS    0H                                                  0598
*           IF LCBCHN=LCBWSMI THEN  /* 'WAITING FOR START MI       0598
*                                      RESPONSE' STATE (TSO ONLY)    */
         TM    LCBCHN(IEDQLPTR),B'10000000'                        0598
         BNO   @RF00598                                            0598
         TM    LCBCHN(IEDQLPTR),B'01110000'                        0598
         BNZ   @RF00598                                            0598
*             DO;                   /* YES                           */
*               LCBCHN=LCBBETC;     /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSE' STATE        */
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0600
*               RPARM=RPRF;         /* ADDR OF PIU BFR       @YM07714*/
         LR    RPARM,RPRF                                          0601
*               CALL DISCARD;       /* FREE PIU BFR          @YM07714*/
         BAL   @14,DISCARD                                         0602
*               LCBRCLLN=ON;        /* INDICATE BFRS FREED   @YM07714*/
         OI    LCBRCLLN(IEDQLPTR),B'10000000'                      0603
*               RPARM=RLCB;         /* LCB ADDRESS                   */
         LR    RPARM,RLCB                                          0604
*               LCBPRI=PRILCB;      /* LCB POST PRIORITY             */
         MVI   LCBPRI(IEDQLPTR),X'E7'                              0605
*               LCBQCBA=AVTMSGS->BDQCB;/* IEDQBD'S QCB               */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0606
         MVC   LCBQCBA(3,IEDQLPTR),BDQCB+1(@10)                    0606
*               CALL DSPPOSTR;      /* POST LCB TO IEDQBD            */
         LA    @15,DSPPOSTR(,RDISP)                                0607
         BALR  @14,@15                                             0607
*             END;                                                 0608
*           ELSE                                                   0609
*             DO;                                                  0609
         B     @RC00598                                            0609
@RF00598 DS    0H                                                  0610
*               IF LCBCHN=LCBWERAS THEN/* 'WAITING FOR SCREEN ERASURE
*                                      RESPONSE' STATE (TSO ONLY)    */
         TM    LCBCHN(IEDQLPTR),B'01110000'                        0610
         BNO   @RF00610                                            0610
         TM    LCBCHN(IEDQLPTR),B'10000000'                        0610
         BNZ   @RF00610                                            0610
*                 DO;               /* YES                           */
*                   LCBCHN=LCBBETC; /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSE' STATE        */
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0612
*                   RPARM=RPRF;     /* RESPONSE PIU ADDRESS          */
         LR    RPARM,RPRF                                          0613
*                   CALL DISCARD;   /* DISCARD RESPONSE              */
         BAL   @14,DISCARD                                         0614
*                   LCBERBPY=PRILNEND;/* ERB POST PRIORITY           */
         MVI   LCBERBPY(IEDQLPTR),X'E4'                            0615
*                   LCBERBQB=AVTTSOPT->TSIMSGEN;/* IEDAYM'S QCB      */
         L     @10,AVTTSOPT(,IEDQAPTR)                             0616
         MVC   LCBERBQB(3,IEDQLPTR),TSIMSGEN+1(@10)                0616
*                   RPARM=ADDR(LCBERB);/* ERB ADDRESS                */
         LA    RPARM,LCBERB(,IEDQLPTR)                             0617
*                   CALL DSPPOSTR;  /* POST ERB TO IEDAYM            */
         LA    @15,DSPPOSTR(,RDISP)                                0618
         BALR  @14,@15                                             0618
*                 END;                                             0619
*               ELSE                                               0620
*                 VALRSPSW=OFF;     /* MARK RESPONSE AS INVALID      */
         B     @RC00610                                            0620
@RF00610 NI    VALRSPSW,B'01111111'                                0620
*             END;                                                 0621
*         END;                                                     0622
*     END;                                                         0623
*   ELSE                            /* LCB MARKED SENDING            */
*     DO;                                                          0624
         B     @RC00593                                            0624
@RF00593 DS    0H                                                  0625
*       IF LCBCHN=LCBWFMD THEN      /* 'WAITING FOR RESPONSE TO FM 0625
*                                      DATA                          */
         TM    LCBCHN(IEDQLPTR),B'01000000'                        0625
         BNO   @RF00625                                            0625
         TM    LCBCHN(IEDQLPTR),B'10110000'                        0625
         BNZ   @RF00625                                            0625
*         DO;                       /* YES                           */
*           LCBCHN=LCBBETC;         /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSE' STATE        */
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0627
*           IF TRHSDI=ON THEN       /* EXCEPTION RESPONSE            */
         L     @10,PIUPTR                                          0628
         TM    TRHSDI+10(@10),B'00000100'                          0628
         BNO   @RF00628                                            0628
*             DO;                   /* YES                           */
*               CALL SETERSNS;      /* SET UP ERROR INFORMATION      */
         BAL   @14,SETERSNS                                        0630
*               RPARM=RPRF;         /* PIU RESPONSE ADDRESS          */
         LR    RPARM,RPRF                                          0631
*               CALL BLDERBUF;      /* BUILD ERROR BUFFER            */
         BAL   @14,BLDERBUF                                        0632
*             END;                                                 0633
*           ELSE                    /* POSITIVE RESPONSE TO FM DATA  */
*             DO;                                                  0634
         B     @RC00628                                            0634
@RF00628 DS    0H                                                  0635
*               RPARM=RPRF;         /* +RSP PIU ADDRESS              */
         LR    RPARM,RPRF                                          0635
*               CALL XFORM;         /* TRANSFORM INTO 'TCAM BUFFER'
*                                      FORMAT                        */
         BAL   @14,XFORM                                           0636
*               PRFQCBA=AVTMSGS->BDQCB;/* IEDQBD'S QCB               */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0637
         MVC   PRFQCBA(3,IEDQPPTR),BDQCB+1(@10)                    0637
*               IF QCBTSSES=ON THEN /* IF TIME SHARING SESSION       */
         TM    QCBTSSES(IEDQQPTR),B'10000000'                      0638
         BNO   @RF00638                                            0638
*                 PRFTSMSG=ON;      /* SET TSO INDICATOR             */
         OI    PRFTSMSG(IEDQPPTR),B'00010000'                      0639
*               PRFPRI=PRILNEND;    /* NON-ERROR PRIORITY            */
@RF00638 MVI   PRFPRI(IEDQPPTR),X'E4'                              0640
*             END;                                                 0641
*                                                                  0641
*/*                                                                  */
*                                                                  0642
*           RPARM=RPRF;             /* RESPONSE BUFFER ADDRESS       */
@RC00628 LR    RPARM,RPRF                                          0642
*           CALL DSPPOSTR;          /* POST THE RESPONSE BUFFER      */
         LA    @15,DSPPOSTR(,RDISP)                                0643
         BALR  @14,@15                                             0643
*         END;                                                     0644
*       ELSE                        /* NOT WAITING FOR FM DATA RSP   */
*         DO;                                                      0645
         B     @RC00625                                            0645
@RF00625 DS    0H                                                  0646
*           IF LCBCHN=LCBWMG THEN   /* 'WAITING FOR MSGGEN RESPONSE'
*                                      STATE                         */
         TM    LCBCHN(IEDQLPTR),B'00110000'                        0646
         BNO   @RF00646                                            0646
         TM    LCBCHN(IEDQLPTR),B'11000000'                        0646
         BNZ   @RF00646                                            0646
*             CALL MSGGNRSP;        /* PROCESS MSGGEN RESPONSE       */
         BAL   @14,MSGGNRSP                                        0647
*           ELSE                    /* NOT WITING FOR MSGGEN RESPONSE*/
*             DO;                                                  0648
         B     @RC00646                                            0648
@RF00646 DS    0H                                                  0649
*               IF LCBCHN=LCBINC THEN/* 'IN CHAIN' STATE             */
         TM    LCBCHN(IEDQLPTR),B'00010000'                        0649
         BNO   @RF00649                                            0649
         TM    LCBCHN(IEDQLPTR),B'11100000'                        0649
         BNZ   @RF00649                                            0649
*                 DO;               /* YES                           */
*                   IF TRHSDI=ON THEN/* EXCEPTION RESPONSE           */
         L     @10,PIUPTR                                          0651
         TM    TRHSDI+10(@10),B'00000100'                          0651
         BNO   @RF00651                                            0651
*                     DO;           /* YES                           */
*                       LCBCHN=LCBPURG;/* GO TO 'PURGING CHAIN' STATE*/
         NI    LCBCHN(IEDQLPTR),B'00101111'                        0653
         OI    LCBCHN(IEDQLPTR),B'00100000'                        0653
*                       CALL SETERSNS;/* SET ERROR INFORMATION       */
         BAL   @14,SETERSNS                                        0654
*                       LCBRSPSV=RPRF;/* SAVE THIS REPONSE           */
         ST    RPRF,LCBRSPSV(,IEDQLPTR)                            0655
*                     END;                                         0656
*                   ELSE            /* POSITIVE RESPONSE             */
*                     VALRSPSW=OFF; /* MARK RESPONSE AS INVALID      */
         B     @RC00651                                            0657
@RF00651 NI    VALRSPSW,B'01111111'                                0657
*                 END;                                             0658
*               ELSE                /* NOT 'IN CHAIN' STATE          */
*                 VALRSPSW=OFF;     /* MARK RESPONSE AS INVALID      */
         B     @RC00649                                            0659
@RF00649 NI    VALRSPSW,B'01111111'                                0659
*             END;                                                 0660
@RC00649 DS    0H                                                  0661
*         END;                                                     0661
@RC00646 DS    0H                                                  0662
*     END;                                                         0662
*                                                                  0662
@RC00625 DS    0H                                                  0663
*/*                                                                  */
*                                                                  0663
*   R14=R14SV04;                    /* RESTORE RETURN ADDRESS        */
@RC00593 L     R14,R14SV04                                         0663
*   RETURN;                         /* RETURN TO CALLER              */
@EL00006 DS    0H                                                  0664
@EF00006 DS    0H                                                  0664
@ER00006 BR    @14                                                 0664
*   END FMDRSP;                                                    0665
*                                                                  0666
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE PROCESSES MSGGEN RESPONSES.                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0666
*MSGGNRSP:                                                         0666
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0666
MSGGNRSP DS    0H                                                  0667
*   R14SV05=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV05                                         0667
*/*                                                                  */
*                                                                  0668
*   LCBCHN=LCBBETC;                 /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSE' STATE        */
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0668
*   LCBERBQB=AVTMSGS->BDQCB;        /* IEDQBD'S QCB ADDRESS          */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0669
         MVC   LCBERBQB(3,IEDQLPTR),BDQCB+1(@10)                   0669
*   LCBERBPY=PRIEDISP;              /* POST PRIORITY                 */
         MVI   LCBERBPY(IEDQLPTR),X'E0'                            0670
*   RPARM=ADDR(LCBERB);             /* ERB ADDRESS                   */
         LA    RPARM,LCBERB(,IEDQLPTR)                             0671
*   CALL DSPPOSTR;                  /* POST THE ERB TO BD            */
         LA    @15,DSPPOSTR(,RDISP)                                0672
         BALR  @14,@15                                             0672
*   RPARM=RPRF;                     /* ADDRESS OF RESPONSE           */
         LR    RPARM,RPRF                                          0673
*   CALL DISCARD;                   /* DISCARD MSGGEN RESPONSE       */
         BAL   @14,DISCARD                                         0674
*/*                                                                  */
*                                                                  0675
*   R14=R14SV05;                    /* RESTORE RETURN ADDRESS        */
         L     R14,R14SV05                                         0675
*   RETURN;                         /* RETURN TO CALLER              */
@EL00007 DS    0H                                                  0676
@EF00007 DS    0H                                                  0676
@ER00007 BR    @14                                                 0676
*   END MSGGNRSP;                                                  0677
*                                                                  0678
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE SETS THE TCAM ERROR WORD AND ERROR INFORMATION IN   */
*/*  LCB FOR RESPONSES.                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0678
*SETERSNS:                                                         0678
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0678
SETERSNS DS    0H                                                  0679
*   IF LCBRSRH=OFF THEN             /* ARE ERROR BITS ALREADY SET    */
         TM    LCBRSRH(IEDQLPTR),B'01000000'                       0679
         BNZ   @RF00679                                            0679
*     DO;                           /* NO                            */
*       LCBRSRH=ON;                 /* INDICATE AN EXCEPTION RSP HAS
*                                      BEEN RECEIVED (USED BY      0681
*                                      ERRORMSG EXIT)        @YM07705*/
         OI    LCBRSRH(IEDQLPTR),B'01000000'                       0681
*       LCBRHSV=IEDRH;              /* SAVE RH (FOR ERRORMSG EXIT) 0682
*                                                            @YM07705*/
         L     @09,PIUPTR                                          0682
         MVC   LCBRHSV(3,IEDQLPTR),IEDRH+10(@09)                   0682
*       SCBTXTTN=ON;                /* SET TEXT ERROR                */
         L     @05,IEDQSPTR-1(,IEDQLPTR)                           0683
         LA    @05,0(,@05)                                         0683
         OI    SCBTXTTN(@05),B'01000000'                           0683
*       LCBLUSNS=RU(1:4);           /* SET SENSE BYTES               */
         AL    @09,@CF00576                                        0684
         MVC   LCBLUSNS(4,IEDQLPTR),RU(@09)                        0684
*       SNSPTR=ADDR(RU);            /* SET UP SENSE ADDRESSABILITY   */
         LR    SNSPTR,@09                                          0685
*/*                                                                  */
*                                                                  0686
*       IF SNSMAJ=SNSPATH THEN      /* PATH ERROR                    */
         CLI   SNSMAJ(SNSPTR),X'80'                                0686
         BNE   @RF00686                                            0686
*         SCBPERRN=ON;              /* YES-SET PATH ERROR BIT        */
         OI    SCBPERRN(@05),B'00000001'                           0687
*       ELSE                                                       0688
*         IF SNSMAJ=SNSRHUSE THEN   /* RH USAGE ERROR                */
         B     @RC00686                                            0688
@RF00686 CLI   SNSMAJ(SNSPTR),X'40'                                0688
         BNE   @RF00688                                            0688
*           SCBCPMEN=ON;            /* YES-SET RH USAGE ERROR BIT    */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0689
         OI    SCBCPMEN(@09),B'00000100'                           0689
*         ELSE                                                     0690
*           IF SNSMAJ=SNSSTERR THEN /* STATE ERROR                   */
         B     @RC00688                                            0690
@RF00688 CLI   SNSMAJ(SNSPTR),X'20'                                0690
         BNE   @RF00690                                            0690
*             SCBSTERN=ON;          /* YES-SET STATE ERROR BIT       */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0691
         OI    SCBSTERN(@09),B'00000010'                           0691
*           ELSE                                                   0692
*             IF SNSMAJ=SNSRQERR THEN/* REQUEST ERROR                */
         B     @RC00690                                            0692
@RF00690 CLI   SNSMAJ(SNSPTR),X'10'                                0692
         BNE   @RF00692                                            0692
*               SCBFIERN=ON;        /* YES-SET REQUEST ERROR BIT     */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0693
         OI    SCBFIERN(@09),B'00000100'                           0693
*             ELSE                                                 0694
*               IF SNSMAJ=SNSRQREJ THEN/* REQUEST REJECT ERROR       */
         B     @RC00692                                            0694
@RF00692 CLI   SNSMAJ(SNSPTR),X'08'                                0694
         BNE   @RF00694                                            0694
*                 SCBRRJN=ON;       /* YES-SET REQUEST REJECT BIT    */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0695
         OI    SCBRRJN(@09),B'00000100'                            0695
*/*                                                                  */
*                                                                  0696
*       IF SNSUSER^=0 THEN          /* USER SENSE PRESENT            */
@RF00694 DS    0H                                                  0696
@RC00692 DS    0H                                                  0696
@RC00690 DS    0H                                                  0696
@RC00688 DS    0H                                                  0696
@RC00686 ICM   @09,3,SNSUSER(SNSPTR)                               0696
         BZ    @RF00696                                            0696
*         SCBUNDFN=ON;              /* YES-SET USER SENSE PRESENT BIT*/
         L     @10,IEDQSPTR-1(,IEDQLPTR)                           0697
         OI    SCBUNDFN(@10),B'00000001'                           0697
*     END;                                                         0698
*                                                                  0698
*/*                                                                  */
*                                                                  0699
*   RETURN;                         /* RETURN TO CALLER              */
@EL00008 DS    0H                                                  0699
@EF00008 DS    0H                                                  0699
@ER00008 BR    @14                                                 0699
*   END SETERSNS;                                                  0700
         B     @EL00008                                            0700
*                                                                  0701
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE TRANSFORMS A PIU RESPONSE INTO 'TCAM BUFFER' FORMAT.*/
*/*       INPUT: RPARM CONTAINS THE ADDRESS OF THE RESPONSE PIU TO   */
*/*              BE TRANSFORMED                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0701
*   RFY                                                            0701
*     IEDQPRF BASED(BUFPTR);                                       0701
*   RFY                                                            0702
*     IEDPIU BASED(PIUBEG);                                        0702
*XFORM:                                                            0703
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0703
XFORM    DS    0H                                                  0704
*   R14SV06=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV06                                         0704
*/*                                                                  */
*                                                                  0705
*   BUFPTR=RPARM;                   /* BUFFER ADDRESSABILITY         */
         LR    BUFPTR,RPARM                                        0705
*   PIUBEG=ADDR(PRFPIUO)+PRFPIUO;   /* PIU ADDRESSABILITY            */
         LA    @09,PRFPIUO(,BUFPTR)                                0706
         SLR   @05,@05                                             0706
         IC    @05,PRFPIUO(,BUFPTR)                                0706
         ALR   @09,@05                                             0706
         ST    @09,PIUBEG                                          0706
*/*                                                                  */
*                                                                  0707
*   SVTHOAF=TTHOAF;                 /* SAVE OAF                      */
         MVC   SVTHOAF(2),TTHOAF(@09)                              0707
*   TTHOAF=TTHDAF;                  /* MOVE DAF TO OAF               */
         MVC   @TS00001(2),TTHDAF(@09)                             0708
         MVC   TTHOAF(2,@09),@TS00001                              0708
*   TTHDAF=SVTHOAF;                 /* MOVE OAF TO DAF               */
         MVC   TTHDAF(2,@09),SVTHOAF                               0709
*/*                                                                  */
*                                                                  0710
*   TRHBC=ON;                       /* FORCE BEGIN CHAIN (HEADER)    */
*   TRHEC=ON;                       /* FORCE END CHAIN(LAST)         */
         OI    TRHBC+10(@09),B'00000011'                           0711
*   XFORMSW=ON;                     /* INDICATE PIU TRANSFORMED TO 0712
*                                      TCAM BUFFER           @OY19613*/
         OI    XFORMSW,B'01000000'                                 0712
*/*                                                                  */
*                                                                  0713
*   CALL IEDXFMI;                   /* TRANSFORM TO 'TCAM BUFFER'  0713
*                                      FORMAT                        */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0713
         L     @15,SAVTXFMI(,@09)                                  0713
         BALR  @14,@15                                             0713
*   PRFLCB=RLCB;                    /* ADDRESS OF LCB                */
         STCM  RLCB,7,PRFLCB(BUFPTR)                               0714
*/* SET UP QUEUEING POINTERS                                         */
*                                                                  0715
*   PRFCORE=SCBSCHDR;               /* SET CORE ADDR TO HDR  @YM08017*/
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0715
         LA    @09,0(,@09)                                         0715
         MVC   PRFCORE(3,BUFPTR),SCBSCHDR(@09)                     0715
*   PRFCRCD=SCBSCHDR;               /* SET CURRENT REC TO HDR      0716
*                                                            @YM08017*/
         MVC   PRFCRCD(3,BUFPTR),SCBSCHDR(@09)                     0716
*   PRFCHDR=SCBSCHDR;               /* SET CURRENT HDR TO HDR      0717
*                                                            @YM07759*/
         MVC   PRFCHDR(3,BUFPTR),SCBSCHDR(@09)                     0717
*/*                                                                  */
*                                                                  0718
*   LCBUSUE=ON;                     /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0718
*/*                                                                  */
*                                                                  0719
*   R14=R14SV06;                    /* RESTORE RETURN ADDRESS        */
         L     R14,R14SV06                                         0719
*   RETURN;                         /* RETURN TO CALLER              */
@EL00009 DS    0H                                                  0720
@EF00009 DS    0H                                                  0720
@ER00009 BR    @14                                                 0720
*   END XFORM;                                                     0721
*   RFY                                                            0722
*     IEDQPRF BASED(IEDQPPTR);                                     0722
*   RFY                                                            0723
*     IEDPIU BASED(PIUPTR);                                        0723
*   END IEDRSPIN                                                   0724
*                                                                  0724
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TLGBD   )                                       */
*/*%INCLUDE SYSLIB  (TPIUD   )                                       */
*/*%INCLUDE SYSLIB  (TPLBMD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TSNSD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTSID   )                                       */
*                                                                  0724
*       ;                                                          0724
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00044 DC    F'8'
@CF00576 DC    F'13'
@CF01941 DC    F'14'
@CF02271 DC    F'-8'
         DS    0D
PIUPTR   DS    A
SIBPTR   DS    A
PIUBEG   DS    A
SVTHOAF  DS    H
@TS00001 DS    CL2
PLBM     DS    CL16
CMDBYTE  DS    CL1
SWITCH1  DS    BL1
         ORG   SWITCH1
VALRSPSW DS    BL1
XFORMSW  EQU   SWITCH1+0
@NM00223 EQU   SWITCH1+0
         ORG   SWITCH1+1
         DS    CL2
R14SV    DS    CL28
         ORG   R14SV
R14SV01  DS    AL4
R14SV02  DS    AL4
R14SV03  DS    AL4
R14SV04  DS    AL4
R14SV05  DS    AL4
R14SV06  DS    AL4
R14SV07  DS    AL4
         ORG   R14SV+28
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
BUFPTR   EQU   @10
SNSPTR   EQU   @10
IEDQAPTR EQU   @13
RDISP    EQU   @11
IEDQLPTR EQU   @04
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
IEDQQPTR EQU   @07
RTRM     EQU   @08
RPARM    EQU   @01
REG0     EQU   @00
R15      EQU   @15
RSTCB    EQU   @03
RLCB     EQU   @04
RPRF     EQU   @06
RQCB     EQU   @07
RBASE    EQU   @12
RAVT     EQU   @13
R14      EQU   @14
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
AVTREADD EQU   IEDQAVTD+308
AVTBUFSW EQU   IEDQAVTD+312
@NM00004 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTMSGS  EQU   IEDQAVTD+657
AVTTSOPT EQU   IEDQAVTD+668
AVTBFRFG EQU   IEDQAVTD+712
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTBIT4  EQU   IEDQAVTD+1064
@NM00086 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTDNIR EQU   IEDNSVTD+60
SAVTLUSQ EQU   IEDNSVTD+88
SAVTXFMI EQU   IEDNSVTD+132
SAVTTCPU EQU   IEDNSVTD+238
SAVTBSM  EQU   IEDNSVTD+240
SAVTRNMP EQU   IEDNSVTD+256
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQDISP EQU   0
DSPDISP  EQU   4
DSPPOSTR EQU   28
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBABRTN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBUSUE  EQU   LCBCSWUS
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRCLLN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBQB EQU   LCBERB+1
LCBERBPY EQU   IEDQLCB+80
LCBERBST EQU   IEDQLCB+84
LCBERROR EQU   LCBERBST
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBCHN   EQU   LCBSTAT6
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDNLGB  EQU   0
LGBBUFOU EQU   IEDNLGB+20
LGBPCI   EQU   IEDNLGB+25
LGBBYTE  EQU   IEDNLGB+29
LGBOFLGS EQU   IEDNLGB+48
LGBRESER EQU   IEDNLGB+56
IEDPIU   EQU   0
PIUTH    EQU   IEDPIU
PIURH    EQU   IEDPIU+10
PIURU    EQU   IEDPIU+13
IEDPLBM  EQU   0
PLBMFLG1 EQU   IEDPLBM
PLBMSNC  EQU   IEDPLBM+2
PLBMRH   EQU   IEDPLBM+4
PLBMCMD  EQU   IEDPLBM+7
PLBMSIB  EQU   IEDPLBM+8
PLBMLCB  EQU   IEDPLBM+12
PLBMPTR  EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
PRFLCB   EQU   IEDQPRF+13
@NM00173 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00173
PRFSIZE  EQU   PRFSVFFO+2
PRFSTAT1 EQU   IEDQPRF+20
PRFTSMSG EQU   PRFSTAT1
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFISIZE EQU   PRFSCAN+1
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCRCD  EQU   IEDQPRF+29
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1RH   EQU   IEDPF1
PRF1FLG1 EQU   IEDPF1+3
PRF1FORM EQU   PRF1FLG1
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
PRF1RULN EQU   PRF1SEQP+2
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00183 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00183+1
QCBTSOF1 EQU   @NM00183+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBLGBAD EQU   QCBDCBAD
QCBFLAG  EQU   IEDQQCB+36
QCBTSSES EQU   QCBFLAG
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBN EQU   QCBSTAT1
QCBPLCBA EQU   IEDNQCB+5
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHRUCAT EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBFIERN EQU   SCBFORMN
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBPERRN EQU   SCBXCEPN
SCBERR4  EQU   SCBERRST+3
SCBSLCTN EQU   SCBERR4
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCPMEN EQU   SCBCTLUN
SCBCHANN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBUNDFN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBSCHDR EQU   SCBCLSEG
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDSIBD  EQU   0
SIBSESSN EQU   IEDSIBD+10
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBRACK EQU   SIBBIND2
SIBBIND3 EQU   SIBBIND+2
SIBFMODE EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBSTAT0 EQU   IEDSIBD+23
SIBCD    EQU   SIBSTAT0
IEDSNSD  EQU   0
SNSSYSTM EQU   IEDSNSD
SNSMAJ   EQU   SNSSYSTM
SNSUSER  EQU   IEDSNSD+2
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHEFI   EQU   TTHBYTE0
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDQTSI  EQU   0
TSIFLAG  EQU   IEDQTSI
TSIMSGEN EQU   IEDQTSI+44
TSIDYQCB EQU   IEDQTSI+52
TSIDYQFG EQU   TSIDYQCB
TSITSW   EQU   IEDQTSI+124
TSIGMAIN EQU   TSITSW+16
GMFLAG   EQU   TSIGMAIN
GMCODE   EQU   TSIGMAIN+1
IEDTTPTR EQU   0
IEDQTNT  EQU   0
IEDBSM   EQU   0
IEDXFMI  EQU   0
RU       EQU   0
BDQCB    EQU   0
DSPBYPAS EQU   20
DSPCHAIN EQU   12
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPOST  EQU   24
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
IEDIAP05 EQU   0
QCBLDCB  EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBRHSV  EQU   LCBRSPIN+2
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBRSRH  EQU   LCBRSPFG
LCBCOREQ EQU   LCBTPCD
@NM00134 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
IEDNLPTR EQU   QCBLGBAD
IEDQSPTR EQU   LCBSCBA
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
PRFSHDR  EQU   IEDQPRF+42
SCBRGSAV EQU   SCBEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00210 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00209 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00208 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
@NM00142 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00141 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00140 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00139 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00138 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00137 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00136 EQU   @NM00134+4
LCBNCPPT EQU   @NM00134+1
@NM00135 EQU   @NM00134
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00133 EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00132 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00131 EQU   LCBCSWU1
@NM00130 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBSNS0  EQU   LCBRSPIN+1
@NM00129 EQU   LCBRSPIN
GMDEVCH  EQU   TSIGMAIN+40
GMTSSIZ  EQU   TSIGMAIN+38
GMTSCNT  EQU   TSIGMAIN+36
GMLNSPC  EQU   TSIGMAIN+34
GMTCSPC  EQU   TSIGMAIN+32
GMCRUNT  EQU   TSIGMAIN+28
GMCRBUF  EQU   TSIGMAIN+24
GMTCBUF  EQU   TSIGMAIN+20
GMTSBUF  EQU   TSIGMAIN+16
GMBFRS   EQU   TSIGMAIN+14
GMHBFR   EQU   TSIGMAIN+12
GMBFUNIT EQU   TSIGMAIN+10
GMBFSIZE EQU   TSIGMAIN+8
GMSATCT  EQU   TSIGMAIN+6
GMCARCT  EQU   TSIGMAIN+4
GMLNSZ   EQU   TSIGMAIN+3
GMLNNO   EQU   TSIGMAIN+2
@NM00222 EQU   GMCODE
GMTSO    EQU   GMCODE
GMLINE   EQU   GMCODE
GMTCAM   EQU   GMCODE
@NM00221 EQU   GMCODE
@NM00220 EQU   GMFLAG
GMNUNLCK EQU   GMFLAG
GMFRMAT  EQU   GMFLAG
GMINIT   EQU   GMFLAG
GMENCIN  EQU   GMFLAG
GMENCON  EQU   GMFLAG
@NM00219 EQU   TSITSW
TSIAYO02 EQU   IEDQTSI+120
TSIAYO   EQU   IEDQTSI+116
TSIRNSCH EQU   IEDQTSI+112
TSI3705  EQU   IEDQTSI+108
TSI270X  EQU   IEDQTSI+104
TSI3270  EQU   IEDQTSI+100
TSITSDST EQU   IEDQTSI+96
TSIATTEN EQU   IEDQTSI+92
TSICPBC  EQU   IEDQTSI+88
TSICPBI  EQU   IEDQTSI+84
TSIDEST  EQU   IEDQTSI+80
@NM00218 EQU   IEDQTSI+64
TSIDYDLY EQU   IEDQTSI+60
TSIDYLNK EQU   IEDQTSI+57
TSIDYPRI EQU   IEDQTSI+56
@NM00217 EQU   TSIDYQCB+1
@NM00216 EQU   TSIDYQFG
TSIDYQB  EQU   TSIDYQFG
@NM00215 EQU   TSIDYQFG
TSIDYPOS EQU   TSIDYQFG
@NM00214 EQU   TSIDYQFG
TSIHALT  EQU   IEDQTSI+48
TSITSAP  EQU   IEDQTSI+40
TSITSBQ  EQU   IEDQTSI+36
TSIBUFQ  EQU   IEDQTSI+32
TSISCHED EQU   IEDQTSI+28
TSISIMAT EQU   IEDQTSI+24
TSIHANG  EQU   IEDQTSI+20
TSIEDIT  EQU   IEDQTSI+16
TSISTAE  EQU   IEDQTSI+12
TSINPUT  EQU   IEDQTSI+8
TSILINK  EQU   IEDQTSI+5
TSIPRI   EQU   IEDQTSI+4
TSIELCHN EQU   IEDQTSI+1
@NM00213 EQU   TSIFLAG
TSIQCB   EQU   TSIFLAG
@NM00212 EQU   TSIFLAG
TSIPOST  EQU   TSIFLAG
@NM00211 EQU   TSIFLAG
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00207 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00206 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00205 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00204 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
@NM00203 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
SNSUSR2  EQU   SNSUSER+1
SNSUSR1  EQU   SNSUSER
SNSMIN   EQU   SNSSYSTM+1
SIBLUTYP EQU   SIBSTAT0
@NM00202 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
SIBTSPRO EQU   IEDSIBD+18
@NM00201 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
SIBFTERM EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBDSTAT EQU   SIBSESSN
SIBSSTAT EQU   SIBSESSN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBLGOFF EQU   SIBSESSN
SIBINDEX EQU   IEDSIBD+8
SIBCHAIN EQU   IEDSIBD+4
SIBRUSEG EQU   IEDSIBD
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00200 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
@NM00199 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBTHRSN EQU   SCBATTN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00198 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00197 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBDESTQ EQU   IEDQSCB+1
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
@NM00196 EQU   TRHBYTE2
@NM00195 EQU   TRHBYTE2
@NM00194 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00193 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00192 EQU   TRHBYTE1
@NM00191 EQU   TRHBYTE1
@NM00190 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00189 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHFI    EQU   TRHBYTE0
@NM00188 EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
QCBTTCIN EQU   QCBPLCBA+1
@NM00187 EQU   QCBPLCBA
@NM00186 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00185 EQU   QCBFHDTZ
@NM00184 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00183
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00182 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00181 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00180 EQU   QCBELCHN+2
@NM00179 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00178 EQU   IEDPF2+1
@NM00177 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1TAG2 EQU   PRF1SQID+1
@NM00176 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00175 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
@NM00174 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00173+3
PRFSRCE  EQU   PRFSVFFO
PRFTI0   EQU   PRFTIC+1
@NM00172 EQU   PRFTICC
@NM00171 EQU   PRFTICC
@NM00170 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00169 EQU   PRFTICC
@NM00168 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00167 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
@NM00166 EQU   IEDPLBM+1
@NM00165 EQU   PLBMFLG1
PLBMSTAT EQU   PLBMFLG1
PLBMSNDI EQU   PLBMFLG1
LGBIVLST EQU   IEDNLGB+60
LGBRESV4 EQU   LGBRESER+3
LGBRESV3 EQU   LGBRESER+2
LGBRESV2 EQU   LGBRESER+1
LGBRESV1 EQU   LGBRESER
LGBBUFSI EQU   IEDNLGB+54
@NM00164 EQU   IEDNLGB+53
LGBILCT  EQU   IEDNLGB+52
LGBSCTAD EQU   IEDNLGB+49
@NM00163 EQU   LGBOFLGS
LGBOPEN  EQU   LGBOFLGS
@NM00162 EQU   LGBOFLGS
LGBNAME  EQU   IEDNLGB+40
@NM00161 EQU   IEDNLGB+36
LGBTRANS EQU   IEDNLGB+33
@NM00160 EQU   IEDNLGB+32
@NM00159 EQU   IEDNLGB+31
LGBOPACE EQU   IEDNLGB+30
@NM00158 EQU   LGBBYTE
LGBPACK  EQU   LGBBYTE
LGBBUFMA EQU   IEDNLGB+28
LGBDSORG EQU   IEDNLGB+26
@NM00157 EQU   LGBPCI
@NM00156 EQU   LGBPCI
LGBPCINO EQU   LGBPCI
@NM00155 EQU   LGBPCI
LGBPCIAO EQU   LGBPCI
@NM00154 EQU   LGBPCI
@NM00153 EQU   LGBPCI
@NM00152 EQU   LGBPCI
@NM00151 EQU   IEDNLGB+24
LGBMHA   EQU   IEDNLGB+21
@NM00150 EQU   LGBBUFOU
LGBPREF  EQU   LGBBUFOU
@NM00149 EQU   LGBBUFOU
LGBSUBST EQU   IEDNLGB+18
LGBTYPE  EQU   IEDNLGB+17
@NM00148 EQU   IEDNLGB
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00147 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00146 EQU   LCBXFLAG
@NM00145 EQU   LCBXFLAG
@NM00144 EQU   LCBXFLAG
@NM00143 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00128 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00127 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00126 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
LCBTTCIN EQU   IEDQLCB+90
@NM00125 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
@NM00124 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00123 EQU   LCBTSTSW
@NM00122 EQU   LCBTSTSW
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
@NM00118 EQU   LCBTSTSW
@NM00117 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00116 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00115 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00114 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00113 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00112 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00111 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00110 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00109 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00108 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00107 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00106 EQU   LCBINSRC
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBKEY   EQU   LCBRCB
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00091 EQU   IEDQAVTD+1170
@NM00090 EQU   IEDQAVTD+1169
@NM00089 EQU   IEDQAVTD+1168
@NM00088 EQU   IEDQAVTD+1165
@NM00087 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00085 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00084 EQU   IEDQAVTD+1068
@NM00083 EQU   IEDQAVTD+1065
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00074 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00073 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00072 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTSTEAL EQU   IEDQAVTD+988
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTKEYLE EQU   IEDQAVTD+960
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00069 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00068 EQU   IEDQAVTD+878
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00053 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00052 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00051 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00050 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00049 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00048 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+724
@NM00040 EQU   IEDQAVTD+716
AVTSELCH EQU   IEDQAVTD+713
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00039 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00038 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00023 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00021 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00015 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+314
@NM00003 EQU   IEDQAVTD+313
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00480 EQU   @RC00471
@RC00534 EQU   @RC00532
@RC00595 EQU   @RC00593
@RC00598 EQU   @RC00593
@RC00610 EQU   @RC00593
@RC00651 EQU   @RC00649
@RF00679 EQU   @EL00008
@RF00696 EQU   @EL00008
@PB00009 EQU   @EL00001
@RF00486 EQU   @RC00480
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEDRSPIN,(C'PLS1606',0701,78038)
