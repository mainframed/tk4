         TITLE '- IEDQXB - TCAM TRACE FORMAT PROGRAM - PRIVATE MACROS'
         MACRO
        $PRNT  &LOC1,&LOC2,&LOC3,&LOC4
         LCLA  &LEN1,&LEN2
         AIF   ('&LOC1' EQ '').CALLSEQ  PRINT OUPUT AREA
&LEN1    SETA  L'&LOC1                  LENGTH OF &LOC1
         MVC   OUTBUF(&LEN1),&LOC1      MOVE &LOC1 TO OUTPUT
         AIF   ('&LOC2' EQ '').CALLSEQ  &LOC2 NOT SPECIFIED
         AIF   ('&LOC2' NE 'SEQMSG').NSEM  &LOC2 NE SEQMSG
&LEN1    SETA  71                       START IN LOCATION 72
.NSEM    ANOP
         AIF   ('&LOC2' NE 'CURRDT').NCDT  &LOC2 NE CURRDT
&LEN1    SETA  101                      START IN LOCATION 102
.NCDT    ANOP
&LEN2    SETA  L'&LOC2                  LENGTH OF &LOC2
.MOVE2   ANOP
         MVC   OUTBUF+&LEN1.(&LEN2),&LOC2    &LOC2 TO OUTPUT
         AIF   ('&LOC3' EQ '').CALLSEQ  &LOC3 NOT SPECIFIED
&LEN1    SETA  &LEN1+&LEN2              UPDATE DISPLACEMENT
&LEN2    SETA  L'&LOC3                  LENGTH OF &LOC3
         MVC   OUTBUF+&LEN1.(&LEN2),&LOC3    &LOC3 TO OUTPUT
         AIF   ('&LOC4' EQ '').CALLSEQ  &LOC4 NOT SPECIFIED
&LEN1    SETA  &LEN1+&LEN2              UPDATE DISPLACEMENT
&LEN2    SETA  L'&LOC4                  LENGTH OF &LOC4
         MVC   OUTBUF+&LEN1.(&LEN2),&LOC4    &LOC4 TO OUTPUT
.CALLSEQ ANOP
         BAL   14,PUT                   GO PRINT OUTPUT BUFFER
         MEND
         EJECT
         MACRO
        $CNVT  &A,&B
         LCLA  &LENA,&LENB,&LENX
         LCLA  &DSPA,&DSPB
         AIF   ('&A' NE '' AND '&B' NE '').ABOK
         MNOTE 8,'MACRO REQUIRES FIELD-A AND FIELDB'
         MEXIT
.ABOK    ANOP
&DSPA    SETA  0                       INITIAL DISP FIELD A
&DSPB    SETA  0                       INITIAL DISP FIELD B
&LENA    SETA  L'&A                    LENGTH OF FIELD A
&LENB    SETA  L'&B                    LENGTH OF FIELD B
&LENX    SETA  &LENB+&LENB             LENGTH OF FIELD B X 2
         AIF   ('&LENA' EQ '&LENX').LENOK
         MNOTE 4,'LENGTH OF &A MUST BE TWICE THE LENGTH OF &B'
.LENOK   ANOP
&LENA    SETA  &LENA+1                 LENGTH OF FIELD A + 1
&LENB    SETA  &LENB+1                 LENGTH OF FIELD B + 1
         AIF   ('&LENB' LT '8').LAST   LENGTH OF FIELD-B LT 8
.LOOP    ANOP
         UNPK  &A+&DSPA.(15),&B+&DSPB.(8)        UNPK 7
&DSPA    SETA  &DSPA+14                UPDATE &DSPA +14
&DSPB    SETA  &DSPB+7                 UPDATE &DSPB + 7
&LENA    SETA  &LENA-14                UPDATE &LENA -14
&LENB    SETA  &LENB-7                 UPDATE &LENB - 7
         AIF   ('&LENB' GT '7').LOOP   IF MORE THAN 7 LOOP
.LAST    ANOP
         UNPK  &A+&DSPA.(&LENA),&B+&DSPB.(&LENB) LAST
         TR    &A,TRNTBLE2
         MEND
         TITLE '- IEDQXB - TCAM TRACE FORMAT PROGRAM - MODULE PROSE'
***********************************************************************
*
* MODULE-NAME = IEDQXB (TCAM,SAIDS)
*
* DESCRIPTIVE-NAME = TCAM TRACE FORMAT ROUTINE
*
* COPYRIGHT = NONE
*
* STATUS = VERSION 10.0
*
* FUNCTION = IEDQXB (COMEDIT) WILL FORMAT THE OUTPUT OF COMWRITE.
* IF THE COMWRITE OUTPUT IS ON MAGNETIC TAPE AN OPTION IS AVAILABLE
* TO SEARCH THE TAPE BY TIME TO REDUCE THE AMOUNT OF OUTPUT.
* THE SEARCH OPTION IS INVOKED VIA THE PARM FIELD OF THE EXEC CARD.
* THE FORMAT OF THE PARM FIELD IS AS FOLLOWS:
* PARM=' (OPTIONS) '
         EJECT
* ************************************************************
* OPTIONS        FUNCTION
* BUFF           PROVIDES A FORMATED PRINT OF ALLBUFFER TRACE
* IOTR           PROVIDES A FORMATED PRINT OF ALL I/O TRACE ENTRIES
* LINT           PROVIDES A FORMATED PRINT OF ALL LINT TRACE
* LIN3           PROVIDES A FORMATED PRINT OF ALL LIN3 TRACE
* PIUT           PROVIDES A FORMATED PRINT OF ALL PIU TRACE
* STCB           PROVIDES A FORMATED PRINT OF ALL SUBTASK TRACE
* USER           PROVIDES A FORMATED PRINT OF ALL USER TRACE
* BLOCK=HHMMDDD  START TRACING AT SPECIFIED TIME
* BLOCK=HHMMDDD-HHMMDDD  START TRACING AT SPECIFIED TIME ,
*                TRACE THRU END TIME
* LINECNT=XX     SPECIFIES THE NUMBER OF LINES PER PAGE TO BE USED
*                ON THE PRINTED OUTPUT.  THE DEFAULT IS 60.
* XXXX=(PARM)    PROVIDIDE EDIT CAPABILITIES DURING FORMATING
*                OF COMWRITE DATASET ;
*                A MAXIMUM OF 10 PARMS PER OPTION ENCLOSED IN '( )'
*                DELIMITED BY ;
*                               ',' SINGLE ENTRY
*                               ',' RANGE OF ENTRIES
* BUFF=(PARM)    PARM IS A 4 CHARACTER TERM NAME TABLE INDEX
* IOTR=(PARM)    PARM IS A 4 CHARACTER 0CUU ADDRESS
* PIUT=(PARM)    PARM IS A 4 CHARACTER NETWORK ADDRESS
* STCB=(PARM)    PARM IS A 6 CHARACTER ELEMENT ADDRESS
*
* IF A PARAMETER IS MIS-CODED, THE ENTIRE PARAMETER LIST WILL BE
* PRINTED ON THE SYSPRINT DATA SET AND THE LOCATION OF THE PARM
* SCAN POINTER WILL BE SHOWN, INDICATING THE APPROXIMATE LOCATION
* OF THE ERRONEOUS PARAMETER.
* NOTES = SEE BELOW
*
*    DEPENDENCIES = NONE
*    RESTRICTIONS = NONE
*    REGISTER CONVENTIONS = SEE REGISTER EQUATES
*    PATCH LABEL = NONE
*
* MODULE TYPE = PROCEDURE
*
*    PROCESSOR = ASSEMBLER
*    MODULE SIZE = 6200 DECIMAL BYTES
*    ATTRIBUTES = SERIALLY REUSABLE, PROBLEM PROGRAM STATE
*
* ENTRY POINT = FIRST EXECUTABLE INSTRUCTION
*
*    PURPOSE = SEE FUNCTION
*    LINKAGE = BALR  14,15  FROM OPERATING SYSTEM
*
* INPUT = FROM EXEC CARD PARM FIELD AND COMWRITE OUTPUT
* OUTPUT = THE OUTPUT CONSISTS OF PRINTED,FORMATED RECORDS
* EXIT-NORMAL = WHEN END OF DATA IS REACHED
*
* EXIT-ERROR = ABNORMAL EXITS ARE VIA A RETURN TO CALLER
* ACCOMPANIED BY A CONSOLE MESSAGE.
*
*       MESSAGES-
*             IED118I PERMANENT I/O ERROR ON TRACE UNIT-
*              PERMANENT ERROR READING THE 'SYSUT1' DATA SET.
*             IED119I UNABLE TO OPEN ''DDNAME''.-
*              SYSTEM WAS NOT ABLE TO OPEN 'DDNAME' DATA SET.
*             IED121I REQUESTED TIME NOT FOUND.-
*              EXEC CARD SPECIFIED TIME PARM NOT FOUND ON TAPE.
*             IED123I INVALID PARAMETERS.-
*              ERROR IN EXEC CARD PARAMETERS.
*             IED623I NNN XXXX TRACE SEQUENCE ENTRIES MISSING
*                     NNN  - NUMBER OF TRACE ENTRIES MISSING
*                     XXXX - TYPE OF TRACE ENTRIES MISSING
*                     TRACE TABLE IN CORE TOO SMALL
*
* EXTERNAL REFERENCES = SEE BELOW
*
*    ROUTINES = NONE
*
*    DATA AREAS = TRACE INPUT
*
*    CONTROL BLOCKS = DCB
*
* TABLES = AVT EXPANDED FROM TAVTD DSECT
*          DSECT OF INPUT RECORD SHOWN IN THIS LISTING
*
* MACROS = CLOSE
*          DEVTYPE
*          FREEPOOL
*          GET
*          IEDHJN
*          OPEN
*          PUT
*          WTO
*
* CHANGE ACTIVITY= AS FOLLOWS:
*C000000-999999                                                @OY19995
***********************************************************************
         TITLE '- IEDQXB - TCAM TRACE FORMAT PROGRAM - INITIALIZATION'
IEDQXB   CSECT
         SPACE 3
*        REGISTER ASSIGNMENTS
R0       EQU   0                        REG 0
R1       EQU   1                        PARM REG
R2       EQU   2                        PACKED HEADER RECORD
R3       EQU   3                        PACKED DATA RECORD
R4       EQU   4                        UNPACKED RECORD
R5       EQU   5                        LENTH OF REMAINING REC
R6       EQU   6                        REG 6
R7       EQU   7                        OUTPUT AREA POINTER
R8       EQU   8                        REG 8
R9       EQU   9                        REG 9
R10      EQU   10                       WORK REG 10
R11      EQU   11                       BASE REG 1
R12      EQU   12                       BASE REG 2
R13      EQU   13                       BASE REG 3 AND SAVE
R14      EQU   14                       REG 14
R15      EQU   15                       REG 15
         SPACE 1
ALL      EQU   15                       MASK OF 15
DCBLRECL EQU   82                       DISP IN DCB OF LRECL
DCBBUFNO EQU   20                       BUFNO DISPL IN DCB
DCBBLKSZ EQU   62                       BLKSIZE DISPL IN DCB
DOUBLE   EQU   C'0'                     DOUBLE SPACE
EIGHT    EQU   8                        EQU 8
EJECT    EQU   C'1'                     EJECT
FOUR     EQU   4                        EQU 4
ONE      EQU   1                        EQU 1
THREE    EQU   3                        EQU 3
TEN      EQU   10                       EQU 10
TRIPPLE  EQU   C'-'                     TRIPPLE SPACE
         EJECT
         USING IEDQXB,R15               USING BASE REG 15
         B     INIT                     BRANCH AROUND DC'S
IEDQXB   IEDHJN ,HJN                    IEDQXB HJN
ADCONS   DC    A(IEDQXB),A(IEDQXB+4096),A(SAVEAREA)
         PRINT NOGEN
INIT     EQU   *
         SAVE  (14,12)                  SAVE REGS 14-12
         LR    R2,R13                   SAVE REG 13
         LM    R11,R13,ADCONS           LOAD BASE REGS
         USING IEDQXB,R11,R12,R13       USING BASE REGS 11-13
         DROP  R15                      DROP TEMPORARY BASE
         ST    R2,FOUR(,R13)            SAVE OLD SAVE AREA ADD
         ST    R13,EIGHT(,R2)           SAVE NEW SAVE AREA ADD
         L     R10,0(,R1)               GET PARAMETERS
         OPEN  (SYSPRINT,(OUTPUT))      OPEN SYSPRINT
         TM    SYSPRINT+48,X'10'        OPEN COMPLETE
         BO    PARMCONT                 YES , CONTINUE
         OI    EXECSW,EXECSWFP          IND PRINT OPEN FAILURE
         B     ERROPEN                  B ERROR OPEN
PARMCONT EQU   *
         LH    R5,0(,R10)               LOAD PARM LENGTH
         LTR   R5,R5                    ANY PARMS SPECIFIED
         BZ    PARMDEF                  NO , SET DEFAULT
         LA    R2,UNPKWORK              ADDRESS OF UNPKWORK
         LA    R3,2(,R10)               GET FIRST PARM
         OI    PARMSW,PARMPROC          INDICATE PARM PROCESSING
         BCTR  R5,R0                    DECREMENT FOR EXECUTE
         EX    R5,SAVEPARM              MOVE PARM TO UNPKWORK
         LA    R5,ONE(,R5)              RESTORE LENGTH
         USING PARMXXXX,R2              USING PARMCOMP R2
PARMSCAN EQU   *
         LA    R6,PARMCONS              GET COMPARE CONSTANTS
         USING XXXXSEQE,R6              USING XXXXCOMP R6
         SR    R1,R1                    CLEAR WORK REG 1
         SR    R8,R8                    CLEAR WORK REG 8
         IC    R8,XXXXFLAG              GET FLAG BYTE
PARMLOOP EQU   *
         IC    R1,XXXXLENE              GET CHAR COUNT - 1
         EX    R1,PARMCHEK              IS THIS A COMPARE EQUAL
         BE    PARMINIT                 YES , INIT PARM
         LA    R6,XXXXCONL(,R6)         BUMP TO NEXT ENTRY
         IC    R8,XXXXFLAG              GET FLAG BYTE
         CLI   XXXXFLAG,AVTEFF          END OF LIST
         BNE   PARMLOOP                 NO , CHECK NEXT PARM
         TM    PARMSW,PARMPROC          ARE WE CHECKING PARAMETERS
         BZR   R14                      NO , UNKNOWN RECORD
         B     PARMERR                  YES , NOTE ERROR EXIT
PARMINIT EQU   *
         TM    PARMSW,PARMPROC          ARE WE CHECKING PARAMETERS
         BZR   R14                      IF NO, MUST BE CHECKING BUFFERS
         EX    R8,SETPARM               ELSE, SET APPROPRIATE PARM SW
         ICM   R15,ALL,XXXXINIT         INIT ROUTINE EXIST
         BZ    DECLENTH                 NO , CONTINUE
         CLI   XXXXFLAG,AVTEZERO        XXXXFLAG EQ 0
         BE    XXXXENTX                 YES , CONTINUE
         CLC   XXXXPARM,PARMXXXX        XXXX=(
         BNE   DECLENTH                 NO , CONTINUE
         LA    R1,2(,R1)                ADJUST LENGTH
XXXXENTX EQU   *
         LR    R8,R5                    GET RESIDUAL COUNT
         SR    R8,R1                    SUBT LENGTH
         BNP   PARMERR                  ERROR
         BR    R15                      ENTER ROUTINE
DECLENTH EQU   *
         SR    R5,R1                    SUBT LENGTH OF PARM-1
         SH    R5,HALF1                 SUBT 1
         BM    PARMERR                  ERROR
         BZ    PARMEND                  END OF PARMS
         LA    R2,1(R1,R2)              BUMP TO NEXT PARAMETER
         CLI   PARMXXXX,C','            A PROPER DELIMITER
         BNE   PARMERR                  IF NO, NOTE ERROR EXIT
         LA    R2,1(,R2)                BUMP PAST COMMA
         SH    R5,HALF1                 EXCLUDE COMMA FROM LEN
         BP    PARMSCAN                 NO , GET NEXT PARM
PARMERR  EQU   *
         LR    R8,R1                    SAVE LENGTH OF PARM
         LH    R3,0(,R10)               INIT PARM LENGTH
         LA    R2,2(,R10)               INIT PARM ADDRESS
         BCTR  R3,R0                    DECREMENT FOR EXECUTE
         EX    R3,MOVEPARM              MOVE PARM  TO OUTBUF
         LA    R3,1(,R3)                RESTORE LENGTH
         LA    R7,OUTBUF+L'PARMDC(R3)   END OF PARM
         MVI   0(R7),C''''              INDICATE END OF PARM
        $PRNT  PARMDC                   PRINT ENTIRE PARM
         SR    R3,R5                    FIND PARM ERROR DISP
         LA    R7,OUTBUF+L'PARMDC(R3)   INVALID PARM ADDRESS
         MVI   0(R7),C'*'               INDICATE FAILURE
         EX    R8,MOVEINDX              PROPAGATE *'S
        $PRNT  ,                        PRINT IDENTIFIER
         LA    R2,IED123I               SET UP TO ISSUE WTO
         OI    EXECSW,EXECSWPE          INDICATE PARM ERROR
         B     WTO                      WRITE ERR MSG AND EXIT
         SPACE 3
PARMCHEK CLC   PARMXXXX,XXXXNAME        COMPARE PARM NAME
MOVEPARM MVC   OUTBUF+6(1),PARMXXXX     MOVE PARM TO OUTBUF
MOVEINDX MVC   1(1,7),0(7)              PROPAGATE *
SAVEPARM MVC   0(1,2),0(3)              MOVE PARM TO SAVEAREA
         TITLE '- BUFF - BUFFINIT ROUTINE - PROCESS BUFF=PARM'
BUFFINIT EQU   *
         OI    BUFFSW,BUFFSWSE          BUFF SELECTIVE REQ
         LA    R3,BUFFX                 BUFF TABLE
         USING BUFFCX,R3                USING BUFFCX R3
         LA    R4,5(,R2)                GET FIRST ADDRESS
         USING BUFFIC,R4                USING BUFFIC R4
         LA    R9,TEN                   SET FOR MAX ENTRIES
         B     BUFFFRST
BUFFTEST EQU   *
         CLI   BUFFIC,C','              NEW ADDRESS
         BNE   BUFFTHRU                 NO , CHECK THRU ADDR
BUFFFRST EQU   *
         OI    BUFFCX,BUFFCS            INDICATE SINGLE ENTRY
         B     BUFFCONT                 CONTINUE
BUFFTHRU EQU   *
         CLI   BUFFIC,C'-'              THRU ADDRESS
         BNE   PARMERR                  NO , ERROR
         OI    BUFFCX,BUFFCT            INDICATE THRU ADDR
BUFFCONT EQU   *
         LA    R6,L'BUFFICIN-1          INDICATE LENGTH
         BAL   R14,SCAN                 SCAN DATA
         PACK  PACK3,BUFFICIN           PACK XXCIN ADDRESS
         MVC   BUFFCCIN,PACK3           MOVE TO NEXT ENTRY
         LA    R1,BUFFICXL(,R1)         ADD LENGTH OF XXCIN
         LA    R3,BUFFXL(,R3)           GET NEXT ENTRY
         LA    R4,BUFFICXL(,R4)         GET NEXT XXCIN
         CLI   BUFFIC,C')'              END OF BUFF= PARM
         BE    DECLENTH                 YES , CONTINUE
         BCT   R9,BUFFTEST              BRANCH IF NOT LAST
         B     PARMERR                  NO , ERROR
         TITLE '-IOTR - IOTRINIT ROUTINE - PROCESS IOTR=PARM'
IOTRINIT EQU   *
         OI    IOTRSW,IOTRSWSE          IOTR SELECTIVE REQ
         LA    R3,IOTRX                 IOTR TABLE
         USING IOTRCX,R3                USING IOTRCX R3
         LA    R4,5(,R2)                GET FIRST ADDRESS
         USING IOTRIC,R4                USING IOTRIC R4
         LA    R9,TEN                   SET FOR MAXIMUM ENTRIES
         B     IOTRFRST
IOTRTEST EQU   *
         CLI   IOTRIC,C','              NEW ADDRESS
         BNE   IOTRTHRU                 NO , CHECK THRU ADDR
IOTRFRST EQU   *
         OI    IOTRCX,IOTRCS            INDICATE SINGLE ENTRY
         B     IOTRCONT                 CONTINUE
IOTRTHRU EQU   *
         CLI   IOTRIC,C'-'              THRU ADDRESS
         BNE   PARMERR                  NO , ERROR
         OI    IOTRCX,IOTRCT            INDICATE THRU ADDR
IOTRCONT EQU   *
         LA    R6,L'IOTRICUU-1          INDICATE LENGTH
         BAL   R14,SCAN                 SCAN DATA
         PACK  PACK3,IOTRICUU           PACK CUU ADDRESS
         MVC   IOTRCCUU,PACK3           MOVE TO NEXT ENTRY
         LA    R1,IOTRICUL(,R1)         ADD LENGTH OF 0CUU
         LA    R3,IOTRXL(,R3)           POINT TO NEXT ENTRY
         LA    R4,IOTRICUL(,R4)         POINT TO NEXT 0CUU
         CLI   IOTRIC,C')'              END OF OPTION
         BE    DECLENTH                 YES , PROC NEXT PARM
         BCT   R9,IOTRTEST              BRANCH IF NOT LAST
         B     PARMERR                  NO , ERROR
         TITLE '- PIUT - PIUTINIT ROUTINE - PROCESS PIUT=PARM'
PIUTINIT EQU   *
         OI    PIUTSW,PIUTSWSE          PIUT SELECTIVE REQ
         LA    R3,PIUTX                 PIUT TABLE
         USING PIUTCX,R3                USING PIUTCX R3
         LA    R4,5(,R2)                GET FIRST ADDRESS
         USING PIUTIC,R4                USING PIUTIC R4
         LA    R9,TEN                   SET FOR MAXIMUM ENTRIES
         B     PIUTFRST
PIUTTEST EQU   *
         CLI   PIUTIC,C','              NEW ADDRESS
         BNE   PIUTTHRU                 NO , CHECK THRU ADDR
PIUTFRST EQU   *
         OI    PIUTCX,PIUTCS            INDICATE SINGLE ENTRY
         B     PIUTCONT                 CONTINUE
PIUTTHRU EQU   *
         CLI   PIUTIC,C'-'              THRU ADDRESS
         BNE   PARMERR                  NO , ERROR
         OI    PIUTCX,PIUTCT            INDICATE THRU ADDR
PIUTCONT EQU   *
         LA    R6,L'PIUTIRSI-1          INDICATE LENGTH
         BAL   R14,SCAN                 SCAN DATA
         PACK  PACK3,PIUTIRSI           PACK RESOURCE ID
         MVC   PIUTCRSI,PACK3           MOVE TO NEXT ENTRY
         LA    R1,PIUTIRSL(,R1)
         LA    R3,PIUTXL(,R3)
         LA    R4,PIUTIRSL(,R4)
         CLI   PIUTIC,C')'              END OF OPTION
         BE    DECLENTH                 YES , PROC NEXT PARM
         BCT   R9,PIUTTEST              BRANCH IF NOT LAST
         B     PARMERR                  NO , ERROR
         TITLE '- STCB - STCBINIT ROUTINE - PROCESS STCB=PARM'
STCBINIT EQU   *
         OI    STCBSW,STCBSWSE          STCB SELECTIVE REQ
         LA    R3,STCBX                 STCB TABLE
         USING STCBCX,R3                USING STCBCX R3
         LA    R4,5(,R2)                GET FIRST ADDRESS
         USING STCBIC,R4                USING STCBIC R4
         LA    R9,TEN                   SET FOR MAX ENTRIES
         B     STCBFRST
STCBTEST EQU   *
         CLI   STCBIC,C','              NEW ADDRESS
         BNE   STCBTHRU                 NO , CHECK THRU ADDR
STCBFRST EQU   *
         OI    STCBCX,STCBCS            INDICATE SINGLE ENTRY
         B     STCBCONT                 CONTINUE
STCBTHRU EQU   *
         CLI   STCBIC,C'-'              THRU ADDRESS
         BNE   PARMERR                  NO , ERROR
         OI    STCBCX,STCBCT            INDICATE THRU ADDR
STCBCONT EQU   *
         LA    R6,L'STCBIELE-1          INDICATE LENGTH
         BAL   R14,SCAN                 SCAN DATA
         PACK  PACK4,STCBIELE           PACK ELEMENT ADDRESS
         MVC   STCBCELE,PACK4           MOVE TO NEXT ENTRY
         LA    R1,STCBIELL(,R1)         ADD LENGTH OF ELEMENT
         LA    R3,STCBXL(,R3)           POINT TO NEXT ENTRY
         LA    R4,STCBIELL(,R4)         POINT TO NEXT ELEMENT
         CLI   STCBIC,C')'              END OF OPTION
         BE    DECLENTH                 YES , PROC NEXT PARM
         BCT   R9,STCBTEST              BRANCH IF NOT LAST
         B     PARMERR                  NO , ERROR
         TITLE ' BLCKINIT AND LINEINIT ROUTINES'
         SPACE 3
*        LINEINIT ROUTINE - PROCESS LINECNT= PARM
         SPACE 3
BLCKINIT EQU   *
         USING TIMEPARM,R2              USING TIMEPARM R2
         LA    R6,7                     INDICATE LENGTH
         BAL   R14,SCAN                 SCAN FOR VALID INPUT
         OI    EXECSW,EXECSWSS          IND SEARCH START TIME
         PACK  PACK4,TIME1HMD           PACK START TIME
         MVC   TIMESHMD,PACK4           MOVE START HH-MM-DDD
         LTR   R8,R8                    END OF PARAMETERS
         BZ    PARMEND                  IF THIS IS LAST
         LA    R1,TIMEXSZE(,R1)         ADJUST COUNT
         CLI   TIMECONT,C'-'            ENDING TIME REQUIRED
         BNE   DECLENTH                 NO, CONTINUE PARM SCAN
         LA    R1,1(,R1)                ADJUST COUNT
         LA    R6,7                     SET LOOP COUNT
         BAL   R14,SCAN                 SCAN FOR VALID INPUT
         OI    EXECSW,EXECSWSE          IND SEARCH END TIME
         PACK  PACK4,TIME2HMD           PACK END TIME
         MVC   TIMEEHMD,PACK4           MOVE END HH-MM-DDD
         LA    R1,TIMEXSZE(,R1)         ADJUST COUNT
         B     DECLENTH                 CONTINUE
         SPACE 3
*        LINEINIT ROUTINE - PROCESS LINECNT= PARM '
         SPACE 3
LINEINIT EQU   *
         LA    R6,2                     SET UP LOOP COUNT
         BAL   R14,SCAN                 SCAN FOR VALID DATA
         PACK  PACK8,8(2,R2)            PACK FOR CONVERSION
         CVB   R6,PACK8                 CONVERT TO BINARY
         STH   R6,LINECNT               SAVE NEW COUNT
         LA    R1,2(,R1)                ADJUST COUNT
         B     DECLENTH                 CONTINUE
         TITLE 'IEDQXB FORMAT ROUTINE'
PARMEND  EQU   *
         NI    PARMSW,PARMALL           RESET PARM PROC SWITCH
         BNZ   OPEN                     IF NO, OPEN DCB'S
PARMDEF  EQU   *
         OI    PARMSW,PARMALL           SET DEFAULT PARM TO ALL
OPEN     EQU   *
         OPEN  (TRACETP,(INPUT,))       OPEN TRACE DATA SET
         TM    TRACETP+48,X'10'         OPEN COMPLETE
         BO    TESTSRCH                 YES , CHECK FOR SEARCH
         OI    EXECSW,EXECSWFL          IND LOG OPEN FAILURE
         MVC   IED119IT,SYSTRACE        IND TRACE OPEN FAILURE
ERROPEN  EQU   *
         LA    R2,IED119I               WTO MSG OPEN FAILED
         B     WTO                      ISSUE MESSAGE
TESTSRCH EQU   *
         USING XXXXPACK,R2              HEADER UNPACKED
         LA    R4,UNPKWORK              INITILIZE TO UNPKWORK
         USING XXXXUNPK,R4              HEADER   PACKED
         LA    R7,OUTBUF                INITILIZE R7 TO OUTBUF
GETREC   EQU   *
         TM    EXECSW,EXECSWLE          TEST FOR PRIOR ERROR.
         BO    ERRORTP                  YES - GO TO TERMINATE.
         GET   TRACETP                  GET NEXT TRACE RECORD.
         LH    R5,TRACETP+DCBLRECL      GET RECORD LENGTH
         LTR   R5,R5                    ZERO LENGTH RECORD
         BZ    GETREC                   IF YES, GET ANOTHER RECORD
         LR    R2,R1                    SHIFT BUFF ADDR FOR IDENT TEST
         BAL   R14,PARMSCAN             GO CHECK RECORD ID
         EX    R8,CHKPARM               CHECK IF TRACE ACTIVE
         BZ    GETREC                   NO , GET NEXT RECORD
         OC    XXXXPTME,XXXXPTME        RECORD TIME STAMPED
         BZ    SKIPTIME                 NO , SKIP TIME STAMP
         TM    EXECSW,EXECSWSS+EXECSWSE SEARCH START AND END
         BZ    NOTIME                   NO , SKIP TIME CHECK
         TM    EXECSW,EXECSWSS          SEARCH START TIME
         BZ    CHKSTOP                  NO , CHECK STOP TIME
         CLC   TIMESHM,XXXXPHM          COMPARE HH-MM
         BH    GETREC                   NO, GET NEXT
         CP    DATESD,XXXXPDDD          COMPARE DDD
         BH    GETREC                   IF NO, KEEP SEARCHING
         XI    EXECSW,EXECSWSS          RESET SEARCH START TME
         B     NOTIME                   CONTINUE
CHKSTOP  EQU   *
         CLC   TIMEEHM,XXXXPHM          COMPARE HH-MM
         BL    EXIT                     YES , END OF SEARCH
         CP    DATEED,XXXXPDDD          COMPARE DDD
         BL    EXIT                     YES , END OF SEARCH
NOTIME   EQU   *
        $CNVT  XXXXUNPK,XXXXPACK        UNPACK HEADER
         LA    R3,XXXXPHSE(,R2)         POINT TO FIRST RECORD
         SH    R5,XXXXPHSH              SUBTRACT HEADER SIZE
         MVC   CURRYY,XXXXUYY           MOVE YY
         MVC   CURRDDD,XXXXUDDD         MOVE DDD
         MVC   CURRHH,XXXXUHH           MOVE HH
         MVC   CURRMM,XXXXUMM           MOVE MM
         MVC   CURRSS,XXXXUSS           MOVE SS
SKIPTIME EQU   *
         MVI   OUTAREA,TRIPPLE          TRIPPLE SPACE FOR HDR
         ICM   R15,ALL,XXXXTRCE         ADDRESS OF TRACE RTN
         BR    R15                      BRANCH TO ROUTINE
         TITLE '- BUFF - BUFFER TRACE FORMAT ROUTINE'
BUFF     EQU   *
         USING BUFFPHDR,R2              BUFF PACK HDR RECORD
         USING BUFFUHDR,R4              BUFF UNPK HDR RECORD
         OI    BUFFSW,BUFFSWNH          INDICATE NEED HEADERS
         TM    BUFFSW,BUFFSWFT          FIRST TIME SWITCH
         BZ    BUFFSEQC                 NO , CHECK SEQUENCE
         XI    BUFFSW,BUFFSWFT          RESET FIRST TIME SW
BUFFSEQN EQU   *
         MVC   BUFFSEQO,BUFFPSEQ        INITILIZE SEQUENCE
         B     BUFFSEQF                 BYPASS FIRST COMPARE
BUFFSEQC EQU   *
         CLC   BUFFSEQO,BUFFPSEQ        SEQUENCE ERROR
         BE    BUFFSEQF                 NO , CONTINUE
         BH    BUFFSEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,BUFFSEQO           CNVT MISSING SEQUENCE
         MVC   BUFFHD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  BUFFHD1,SEQMSG           PRINT BUFF SEQ ERR MSG
         AP    BUFFSEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,BUFFSEQO              GET BUFFSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO BUFFSEQO
         STC   R8,BUFFSEQO              SAVE BUFFSEQO COUNT
         B     BUFFSEQC                 CONTINUE
BUFFSEQF EQU   *
         IC    R8,BUFFSEQO              GET BUFFSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO BUFFSEQO
         STC   R8,BUFFSEQO              SAVE BUFFSEQO COUNT
         CH    R5,BUFFPRSH              BUFFER RECORD OLD FORMAT
         BE    BUFFTSTT                 YES , CONTINUE
         OI    BUFFSW,BUFFSWNF          INDICATE NEW FORMAT
         B     BUFFHD1T                 CHECK REQUIRED HEADERS
BUFFTSTT EQU   *
         TM    BUFFSW,BUFFSWSE          SELECTIVE TRACE
         BZ    BUFFHD1T                 NO , CHECK HEADERS
         LA    R1,BUFFX                 ADDRESS OF ENTRIES
         USING BUFFCX,R1                USING BUFFCX R1
BUFFTSTL EQU   *
         USING IEDQPRF-8,R3             USING IEDQPRF-8 R3
         CLC   PRFSRCE,BUFFCCIN         TRACE THIS ADDRESS
         BL    BUFFTDST                 NO , CHECK DEST
         BE    BUFFHD1T                 YES , CONTINUE
         TM    BUFFNX,BUFFNT            NEXT ENTRY THRU
         BZ    BUFFTDST                 NO , CHECK DEST
         CLC   PRFSRCE,BUFFNCIN         TRACE THIS ADDRESS
         BNH   BUFFHD1T                 YES , CONTINUE
BUFFTDST EQU   *
         TM    PRFSTAT1,PRFNHDRN        HEADER BUFFER
         BO    BUFFTSTN                 NO , GET NEXT ENTRY
         CLC   PRFDEST,BUFFCCIN         TRACE THIS ADDRESS
         BL    BUFFTSTN                 NO , GET NEXT ENTRY
         BE    BUFFHD1T                 YES , CONTINUE
         TM    BUFFNX,BUFFNT            NEXT ENTRY THRU
         BZ    BUFFTSTN                 NO , GET NEXT ENTRY
         CLC   PRFDEST,BUFFNCIN         TRACE THIS ADDRESS
         BNH   BUFFHD1T                 YES , CONTINUE
BUFFTSTN EQU   *
         LA    R1,BUFFXL(,R1)           BUMP TO NEXT ENTRY
         TM    BUFFCX,BUFFCS            SINGLE ENTRY
         BO    BUFFTSTL                 YES , CONTINUE
         TM    BUFFCX,BUFFCT            NEXT ENTRY THRU
         BO    BUFFTSTN                 YES , GET NEXT ENTRY
         B     BUFFNEXT                 NO , GET NEXT RECORD
BUFFHD1T EQU   *
         TM    BUFFSW,BUFFSWNH          HEADER 1 NEEDED
         BZ    BUFFHD2T                 NO , SKIP HEADER 1
         XI    BUFFSW,BUFFSWNH          RESET NEED HEADER ONE
         OI    XXXXHDR2,AVTEFF-BUFFHDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   BUFFHD1S,BUFFUSEQ        MOVE BUFF SEQUENCE
         MVC   BUFFHD1I,BUFFPIDI        MOVE BUFF IDENITY
        $PRNT  BUFFHD1,CURRDT           PRINT BUFF HEADER 1
         TM    BUFFSW,BUFFSWNF          NEW FORMAT
         BO    BUFFNEWF                 YES , CONTINUE
         TM    XXXXHDR2,BUFFHDR2        HEADER 2 NEEDED
         BO    BUFFHD2P                 YES , PRINT HEADER 2
         B     BUFFHD2N                 NO , SKIP HEADER 2
BUFFHD2T EQU   *
         TM    XXXXHDR2,BUFFHDR2        HEADER 2 NEEDED
         BZ    BUFFMOVE                 NO , SKIP HEADER 2
BUFFHD2P EQU   *
         XI    XXXXHDR2,BUFFHDR2        RESET NEED HEADER 2
        $PRNT  BUFFHD2                  PRINT BUFF HEADER 2
BUFFHD2N EQU   *
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
BUFFMOVE EQU   *
         USING BUFFPPRX,R3              USING BUFFPPRX R3
         USING BUFFUPRX,R4              USING BUFFUPRX R4
        $CNVT  BUFFUPRX,BUFFPPRX        CONVERT BUFFPPRX
         USING BUFFOPRX,R7              USING BUFFOPRX R7
         MVC   BUFFOPRI,BUFFUPRI        MOVE BUFF PRIORITY
         MVC   BUFFOELE,BUFFUELE                  ADDRESS
         MVC   BUFFOSCB,BUFFUSCB                  ERROR WORD
         MVC   BUFFOCSW,BUFFUCSW                  CSW
         MVC   BUFFOSNS,BUFFUSNS                  SENSE
         MVC   BUFFOIOB,BUFFUIOB                  IOB FLAGS
         MVC   BUFFOERB,BUFFUERB                  ERB STATUS
         MVC   BUFFOLCS,BUFFULCS                  LCB STATUS
         MVC   BUFFOCUU,BUFFUCUU                  CUU ADDRESS
         MVC   BUFFOBNT,BUFFUBNT                  PRFNBUNT
         MVC   BUFFOLCB,BUFFULCB                  PRFLCB
         MVC   BUFFOSRC,BUFFUSRC                  PRFSRCE
         MVC   BUFFOSZE,BUFFUSZE                  PRFSIZE
         MVC   BUFFOST1,BUFFUST1                  PRFSTAT1
         MVC   BUFFOXTR,BUFFUXTR                  PRFXTRA
         MVC   BUFFOSCN,BUFFUSCN                  PRFSCAN
         MVC   BUFFONTX,BUFFUNTX                  PRFNTXT
         MVC   BUFFOCRC,BUFFUCRC                  PRFCRCD
         MVC   BUFFONHD,BUFFUNHD                  PRFNHDR
         USING IEDQPRF-8,R3             USING IEDQPRF-8 R3
         TM    PRFSTAT1,PRFNHDRN        HEADER BUFFER
         BZ    BUFFFHDR                 YES , CONTINUE FORMAT
         LA    R6,PRFSTXT                         PRFSTXT
         B     BUFFNHDR                 SKIP HEADER ONLY DATA
BUFFFHDR EQU   *
         MVC   BUFFOHQB,BUFFUHQB                  PRFHQBCK
         MVC   BUFFOISQ,BUFFUISQ                  PRFISEQ
         MVC   BUFFODST,BUFFUDST                  PRFDEST
         LA    R6,PRFSHDR                         PRFSHDR
BUFFNHDR EQU   *
        $PRNT  ,                        PRINT HEADER
         BP    BUFFDATA                 CONTINUE
        $PRNT  BUFFHD2                  PRINT BUFFHD2
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
BUFFDATA EQU   *
         USING BUFFUTXR,R4              USING BUFFUTXR R4
         USING BUFFPTXR,R6              USING BUFFPTXR R6
        $CNVT  BUFFUTXR,BUFFPTXR        CONVERT BUFFPTXR
         USING BUFFOTXR,R7              USING BUFFOTXR R7
         MVC   BUFFOTX1,BUFFUTX1        MOVE FIRST 16 BYTES
         MVC   BUFFOTX2,BUFFUTX2        MOVE NEXT 16 BYTES
         MVI   BUFFOTPS,C'*'            MOVE * TO START DATA
         MVC   BUFFOTPX,BUFFPTX1        MOVE FIRST 32 BYTES
         TR    BUFFOTPX,TRNTBLE3        TRANSLATE BUFFER
         MVI   BUFFOTPE,C'*'            MOVE * TO END DATA
        $PRNT  ,                        PRINT DATA
         BP    BUFFXATA                 HEADERS NOT REQUIRED
        $PRNT  BUFFHD2                  PRINT BUFFHD2
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
BUFFXATA EQU   *
         TM    PRFSTAT1,PRFNHDRN        HEADER BUFFER
         BO    BUFFTATA                 NO , TEXT BUFFER
         MVC   BUFFOTXH,BUFFUTX3        MOVE LAST 14 BYTES
         MVC   BUFFOTPH,BUFFPTX2        MOVE LAST 14 BYTES
         TR    BUFFOTPH,TRNTBLE3        TRANSLATE BUFFER
         B     BUFFTEND                 CONTINUE
BUFFTATA EQU   *
         MVC   BUFFOTX1,BUFFUTX1        MOVE NEXT 16 BYTES
         MVC   BUFFOTXT,BUFFUTX2        MOVE LAST 5  BYTES
         MVC   BUFFOTPT,BUFFPTX2        MOVE LAST 21 BYTES
         TR    BUFFOTPT,TRNTBLE3        TRANSLATE BUFFER
BUFFTEND EQU   *
         MVI   BUFFOTPS,C'*'            MOVE * TO START DATA
         MVI   BUFFOTPE,C'*'            MOVE * TO END DATA
        $PRNT  ,                        PRINT DATA
BUFFNEXT EQU   *
         LA    R3,BUFFPBSE(,R3)         POINT TO NEXT BUFFER
         SH    R5,BUFFPBSH              SUBT SIZE OF DATA
         BP    BUFFTSTT                 FORMAT NEXT ENTRY
         B     GETREC                   GET NEXT RECORD
BUFFNEWF EQU   *
         XI    BUFFSW,BUFFSWNF          RESET NEW FORMAT
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
         B     UNKNMOVE                 FORMAT NEW ENTRY
         TITLE '- IOTR - I / O TRACE  FORMAT  ROUTINE'
IOTR     EQU   *
         USING IOTRPHDR,R2              IOTR PACK HDR RECORD
         USING IOTRUHDR,R4              IOTR UNPK HDR RECORD
         OI    IOTRSW,IOTRSWNH          INDICATE NEED HEADER 1
         TM    IOTRSW,IOTRSWFT          FIRST TIME SWITCH
         BZ    IOTRSEQC                 NO , CHECK SEQUENCE
         XI    IOTRSW,IOTRSWFT          RESET FIRST TIME SW
IOTRSEQN EQU   *
         MVC   IOTRSEQO,IOTRPSEQ        INITILIZE SEQUENCE
         B     IOTRSEQF                 BYPASS FIRST COMPARE
IOTRSEQC EQU   *
         CLC   IOTRSEQO,IOTRPSEQ        SEQUENCE ERROR
         BE    IOTRSEQF                 NO , CONTINUE
         BH    IOTRSEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,IOTRSEQO           CONVERT IOTRSEQO
         MVC   IOTRHD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  IOTRHD1,SEQMSG           PRINT IOTR SEQ ERR MSG
         AP    IOTRSEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,IOTRSEQO              GET IOTRSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO IOTRSEQO
         STC   R8,IOTRSEQO              SAVE IOTRSEQO COUNT
         B     IOTRSEQC                 CONTINUE
IOTRSEQF EQU   *
         IC    R8,IOTRSEQO              GET IOTRSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO IOTRSEQO
         STC   R8,IOTRSEQO              SAVE IOTRSEQO COUNT
IOTRTSTT EQU   *
         TM    IOTRSW,IOTRSWSE+IOTRSWTR SELECTIVE + TRACING
         BM    IOTRTDVE                 NO , TEST DV ENTRY
         LA    R14,IOTRTDVE             INITILIZE RETURN
IOTRHD1T EQU   *
         TM    IOTRSW,IOTRSWNH          HEADER ONE NEEDED
         BZ    IOTRHD2T                 NO , SKIP HEADERS
         XI    IOTRSW,IOTRSWNH          RESET NEED HEADER ONE
         ST    R14,IOTRSVEE             SAVE RETURN ADDRESS
         OI    XXXXHDR2,AVTEFF-IOTRHDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   IOTRHD1S,IOTRUSEQ        MOVE IOTR SEQUENCE
        $PRNT  IOTRHD1,CURRDT           PRINT IOTR HEADER 1
         TM    XXXXHDR2,IOTRHDR2        HEADER 2 NEEDED
         BO    IOTRHD2P                 YES , PRINT HEADER 2
         B     IOTRHD2N                 NO , BYPASS HEADER 2
IOTRHD2T EQU   *
         TM    XXXXHDR2,IOTRHDR2        HEADER 2 NEEDED
         BZR   R14                      NO , SKIP HEADERS 2
         ST    R14,IOTRSVEE             SAVE RETURN ADDRESS
IOTRHD2P EQU   *
         XI    XXXXHDR2,IOTRHDR2        RESET NEED HEADER TWO
        $PRNT  IOTRHD2                  PRINT IOTR HEADER 2
        $PRNT  IOTRHD3                  PRINT IOTR HEADER 3
IOTRHD2N EQU   *
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
         USING IOTRPXXR,R3              USING IOTR PACK RECORD
         L     R14,IOTRSVEE             GET RETURN ADDRESS
         BR    R14                      RETURN
IOTRTFAE EQU   *
         CLI   IOTRPXXI,IOTRPFAI        FA ENTRY
         BNE   IOTRTF0E                 NO , NOT FA ENTRY
         TM    IOTRSW,IOTRSWSE+IOTRSWTR SELECTIVE + TRACING
         BM    IOTRNEXT                 NO , GET NEXT RECORD
         BAL   R14,IOTRHD1T             PRINT REQUIRED HEADERS
         USING IOTRUFAR,R4              USING IOTRUFAR REG 4
IOTRFFAE EQU   *
        $CNVT  IOTRUFAR,IOTRPXXR        UNPACK IOTR FA RECORD
         USING IOTROFAR,R7              USING IOTROFAR REG 7
         MVC   IOTROFAI,IOTRUFAI              FA IDENTIFIER
         MVC   IOTROFAX,IOTRIFAR              INITILIZE REC
         MVC   IOTROFAT,IOTRUFAT              TERM INDEX
         MVC   IOTROFAN,IOTRPFAN              NAME
         MVC   IOTROFAC,IOTRUFAC              ECB CC
         MVC   IOTROFAV,IOTRUFAV              LCBINVPT
         B     IOTRPRNT                 PRINT RECORD
IOTRTF0E EQU   *
         CLI   IOTRPXXI,IOTRPF0I        SINGLE ENTRY
         BE    IOTRFFXE                 YES , FORMAT ENTRY
         CLI   IOTRPXXI,IOTRPFFI        DOUBLE ENTRY
         BNE   IOTRTIDE                 NO , NOT DOUBLE ENTRY
IOTRFFXE EQU   *
         TM    IOTRSW,IOTRSWSE+IOTRSWTR SELECTIVE + TRACING
         BM    IOTRNEXT                 NO , GET NEXT RECORD
         BAL   R14,IOTRHD1T             PRINT REQUIRED HEADERS
         USING IOTRUFXR,R4              USING IOTRUFXR REG 4
        $CNVT  IOTRUFXR,IOTRPXXR        UNPACK IOTRPFXR RECORD
         USING IOTROFXR,R7              USING IOTROFXR REG 7
         MVC   IOTROFXI,IOTRUFXR        LINE IDENTIFIER
         MVC   IOTROFXA,IOTRUFXA        CCW ADDRESS
         MVC   IOTROFXC,IOTRUFXC        FIRST HALF CCW
         MVC   IOTROFXX,IOTRUFXX        SECOND HALF CCW
         LH    R9,IOTRPFXL              GET CCW LENGTH
         SH    R9,HALF1                 SUBTRACT 1 FOR EXECUTE
         BM    IOTRPRNT                 MINUS MEANS NO DATA
         CH    R9,HALF4                 COUNT LT 4
         BL    IOTRMF0D                 YES , SINGLE ENTRY
         LR    R8,R9                    SAVE LENGTH - 1
         SH    R8,HALF4                 MINUS FIRST FOUR
         LH    R9,HALF3                 NO , GET MAX COUNT
IOTRMF0D EQU   *
         LA    R9,1(R9,R9)              LENGTH X 2 + 1 FOR EXECUTE
         EX    R9,IOTRMFXD              MOVE DATA TO OUTPUT R
         CLI   IOTRPXXI,IOTRPFFI        DOUBLE ENTRY
         BNE   IOTRPRNT                 NO , PRINT ENTRY
         LA    R3,IOTRPRSE(,R3)         POINT TO NEXT ENTRY
         SH    R5,IOTRPRSH              SUBTRACT RECORD SIZE
         BP    IOTRFDVE                 FORMAT NEXT ENTRY
         ST    R8,IOTRSVE8              SAVE LENGTH
         OI    IOTRSW,IOTRSWDV          INDICATE DIVIDED ENTRY
         B     IOTRPRNT                 PRINT ENTRY
         SPACE 1
IOTRMFXD MVC   IOTROFXD(1),IOTRUFXD     DATA
         SPACE 1
IOTRTDVE EQU   *
         TM    IOTRSW,IOTRSWDV          DIVIDED ENTRY
         BZ    IOTRTFAE                 NO , NOT DIVIDED ENTRY
         XI    IOTRSW,IOTRSWDV          RESET DIVIDED ENTRY
         TM    IOTRSW,IOTRSWSE+IOTRSWTR SELECTIVE + TRACE ACT
         BM    IOTRNEXT                 NO , GET NEXT RECORD
         L     R8,IOTRSVE8              GET SAVED LENGTH
         BAL   R14,IOTRHD1T             PRINT REQUIRED HEADERS
IOTRFDVE EQU   *
         USING IOTRUFFR,R4              USING IOTRUFFR R4
        $CNVT  IOTRUFFR,IOTRPXXR        CONVERT TEXT ENTRY
         CH    R8,HALF16                COUNT LT 16
         BL    IOTRFFFE                 YES , COUNT OK
         LH    R8,HALF15                GET MAX COUNT
IOTRFFFE EQU   *
         LA    R8,1(R8,R8)              LENGTH X 2 + 1 FOR EXECUTE
         EX    R8,IOTRMFFD              MOVE DATA TO OUTPUT R
         B     IOTRPRNT                 PRINT RECORD
         SPACE 1
IOTRMFFD MVC   IOTROFFD(1),IOTRUFFD     DATA
         SPACE 1
IOTRTIDE EQU   *
         TM    IOTRSW,IOTRSWSE          SELECTIVE TRACE
         BZ    IOTRFIDE                 NO , FORMAT ID ENTRY
         NI    IOTRSW,AVTEFF-IOTRSWTR   RESET TRACE ACTIVE
         LA    R1,IOTRX                 ADDRESS OF ENTRIES
         USING IOTRCX,R1                USING IOTRCX R1
IOTRTSTL EQU   *
         CLC   IOTRPIDC,IOTRCCUU        TRACE THIS ELEMENT
         BL    IOTRNEXT                 NO , GET NEXT RECORD
         BE    IOTRFIDS                 YES , CONTINUE
IOTRTSTN EQU   *
         LA    R1,IOTRXL(,R1)           BUMP TO NEXT ENTRY
         TM    IOTRCX,IOTRCS            SINGLE ENTRY
         BO    IOTRTSTL                 YES , CONTINUE
         TM    IOTRCX,IOTRCT            THRU ENTRY
         BZ    IOTRNEXT                 NO , END OF TABLE
         CLC   IOTRPIDC,IOTRCCUU        TRACE THIS ELEMENT
         BH    IOTRTSTN                 NO , GET NEXT ENTRY
IOTRFIDS EQU   *
         OI    IOTRSW,IOTRSWTR          SET TRACE ACTIVE
         BAL   R14,IOTRHD1T             PRINT REQUIRED HEADERS
IOTRFIDE EQU   *
         USING IOTRUIDR,R4              USING IOTRUIDR R4
        $CNVT  IOTRUIDR,IOTRPXXR        CONVERT ID ENTRY
         USING IOTROIDR,R7              USING IOTROIDR R7
         MVC   IOTROIDI,ZEROS           ID
         MVC   IOTROIDC,IOTRUIDC        0CUU
         MVC   IOTROIDQ,IOTRUIDQ        SEQUENCE
         MVC   IOTROIDF,IOTRUIDF        IOB FLAG 1
         MVC   IOTROIDS,IOTRUIDS        CCW START ADDRESS
         MVC   IOTROIDN,IOTRUIDN        CSW SENSE
         MVC   IOTROIDW,IOTRUIDW        CSW WORD 1
         MVC   IOTROIDX,IOTRUIDX        CSW WORD 2
IOTRPRNT EQU   *
        $PRNT  ,                        PRINT OUTPUT RECORD
IOTRNEXT EQU   *
         LA    R3,IOTRPRSE(,R3)         POINT TO NEXT ENTRY
         SH    R5,IOTRPRSH              SUBTRACT RECORD SIZE
         BP    IOTRTFAE                 FORMAT NEXT ENTRY
         B     GETREC                   NO , GET NEXT RECORD
         TITLE '- LINT -  3705 LINE TRACE FORMAT ROUTINE'
LINT     EQU   *
         USING LINTPHDR,R2              LINT PACK HDR RECORD
         USING LINTUHDR,R4              LINT UNPK HDR RECORD
         TM    LINTSW,LINTSWFT          FIRST TIME SWITCH
         BZ    LINTSEQC                 NO , CHECK SEQUENCE
         XI    LINTSW,LINTSWFT          RESET FIRST TIME SW
LINTSEQN EQU   *
         MVC   LINTSEQO,LINTPSEQ        INITILIZE SEQUENCE
         B     LINTSEQF                 BYPASS FIRST COMPARE
LINTSEQC EQU   *
         CLC   LINTSEQO,LINTPSEQ        SEQUENCE ERROR
         BE    LINTSEQF                 NO , CONTINUE
         BH    LINTSEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,LINTSEQO           CONVERT MISSING SEQ
         MVC   LINTHD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  LINTHD1,SEQMSG           PRINT LINT SEQ ERR MSG
         AP    LINTSEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,LINTSEQO              GET LINTSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO LINTSEQO
         STC   R8,LINTSEQO              SAVE LINTSEQO COUNT
         B     LINTSEQC                 CONTINUE
LINTSEQF EQU   *
         IC    R8,LINTSEQO              GET LINTSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO LINTSEQO
         STC   R8,LINTSEQO              SAVE LINTSEQO COUNT
         OI    XXXXHDR2,AVTEFF-LINTHDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   LINTHD1N,LINTPGRL        MOVE GROUP,RLN TO MSG
         MVC   LINTHD1S,LINTUSEQ        MOVE LINT SEQUENCE
        $PRNT  LINTHD1,CURRDT           PRINT LINT HEADER 1
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
         LA    R3,LINTPGRE(,R3)         POINT TO NEXT RECORD
         SH    R5,LINTPGRH              DECREMENT REC COUNT
         USING LINTPREC,R3              USING LINTPREC R3
LINTCNVT EQU   *
         LR    R6,R4                    INIT R6 LINTUREC
         USING LINTUREC,R6              USING LINTUREC R6
        $CNVT  LINTUREC,LINTPREC        UNPACK LINT RECORD
         LR    R8,R7                    INIT R8 LINTOREC
         USING LINTOREC,R8              USING LINTOREC R8
         LA    R9,LINTPREN              NUMBER OF ENTRIES
LINTMOVE EQU   *
         MVC   LINTORER,LINTURER        MOVE RECORD TO OUTPUT
         LA    R6,LINTURSE(,R6)         POINT TO NEXT LINTUREC
         LA    R8,LINTORSE(,R8)         POINT TO NEXT LINTOREC
         LA    R3,LINTPRSE(,R3)         POINT TO NEXT RECORD
         SH    R5,LINTPRSH              DECREMENT REC COUNT
         BZ    LINTPRNT                 ZERO , END OF RECORD
         BCT   R9,LINTMOVE              FORMAT NEXT ENTRY
LINTPRNT EQU   *
        $PRNT  ,                        PRINT RECORD
         LTR   R5,R5                    RECORD COUNT ZERO
         BP    LINTCNVT                 NO , FORMAT NEXT ENT
         B     GETREC                   GET NEXT RECORD
         TITLE '- LIN3 - 3705 LINE TRACE FORMAT ROUTINE'
LIN3     EQU   *
         USING LIN3PHDR,R2              LIN3 PACK HDR RECORD
         USING LIN3UHDR,R4              LIN3 UNPK HDR RECORD
         TM    LIN3SW,LIN3SWFT          FIRST TIME SWITCH
         BZ    LIN3SEQC                 NO , CHECK SEQUENCE
         XI    LIN3SW,LIN3SWFT          RESET FIRST TIME SW
LIN3SEQN EQU   *
         MVC   LIN3SEQO,LIN3PSEQ        INITILIZE SEQUENCE
         B     LIN3SEQF                 BYPASS FIRST COMPARE
LIN3SEQC EQU   *
         CLC   LIN3SEQO,LIN3PSEQ        SEQUENCE ERROR
         BE    LIN3SEQF                 NO , CONTINUE
         BH    LIN3SEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,LIN3SEQO           CONVERT MISSING SEQ
         MVC   LIN3HD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  LIN3HD1,SEQMSG           PRINT LIN3 SEQ ERR MSG
         AP    LIN3SEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,LIN3SEQO              GET LIN3SEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO LIN3SEQO
         STC   R8,LIN3SEQO              SAVE LIN3SEQO COUNT
         B     LIN3SEQC                 CONTINUE
LIN3SEQF EQU   *
         IC    R8,LIN3SEQO              GET LIN3SEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO LIN3SEQO
         STC   R8,LIN3SEQO              SAVE LIN3SEQO COUNT
         OI    XXXXHDR2,AVTEFF-LIN3HDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   LIN3HD1N,LIN3PGRL        MOVE GROUP , RLN
         MVC   LIN3HD1S,LIN3USEQ        MOVE LIN3 SEQUENCE
        $PRNT  LIN3HD1,CURRDT           PRINT LIN3 HEADER 1
         LA    R3,LIN3PGRE(,R3)         POINT TO NEXT RECORD
         SH    R5,LIN3PGRH              DECREMENT REC COUNT
         USING LIN3PDRT,R3              USING LIN3PDRT R3
LIN3XXXS EQU   *
         SH    R5,LIN3PXCH              DECREMENT COUNT
         LR    R10,R5                   INITILIZE COUNT TO MAX
         TM    LIN3PDRC,LIN3PDRI        DATA RECORD
         BO    LIN3DATF                 YES , FORMAT DATA
         USING LIN3PSRT,R3              USING LIN3PSRT R3
         CH    R10,LIN3PSRC             ENTRY TRUNCATED OR EQUAL
         BNH   LIN3STAT                 YES , USE REG 5
         LH    R10,LIN3PSRC             SIZE OF STATUS ENTRY
LIN3STAT EQU   *
         SH    R5,LIN3PSRC              DECREMENT COUNT
         LR    R8,R7                    INIT R8 LIN3OREC
LIN3HD2T EQU   *
         TM    XXXXHDR2,LIN3HDR2        NEED HEADER 2
         BZ    LIN3STAF                 NO , SKIP HEADER 2
         XI    XXXXHDR2,LIN3HDR2        RESET NEED HEADER 2
        $PRNT  LIN3HD2,LIN3HD2          PRINT LIN3HD2
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
         B     LIN3STAC                 CONTINUE
         USING LIN3USRR,R4              USING LIN3USRR R4
LIN3STAF EQU   *
         TM    LIN3SW,LIN3SWDV          DIVIDED ENTRY
         BZ    LIN3STAC                 NO , CONTINUE
         LA    R8,LIN3ORSE(,R7)         POINT TO SECOND ENTRY
LIN3STAC EQU   *
        $CNVT  LIN3USRR,LIN3PSRR        UNPK LIN3PSRR
         USING LIN3OSRR,R8              USING LIN3OSRR R8
         MVC   LIN3OSCF,LIN3USCF        SECONDARY CONTROL FIELD
         MVC   LIN3OLCD,LIN3ULCD        LINE CONTROL DEFINER
         MVC   LIN3OPCF,LIN3UPCF        PRIMARY CONTROL FIELD
         MVC   LIN3OPCX,LIN3UPCX        EXTENDED PC FIELD
         MVC   LIN3OST1,LIN3UST1        STATUS BYTE 1
         MVC   LIN3OST2,LIN3UST2        STATUS BYTE 2
         MVC   LIN3OTMF,LIN3UTMF        TIMER FIELD
         MVC   LIN3OSAC,LIN3USAC        SDLC ADDRESS CHAR
         MVC   LIN3OSCC,LIN3USCC        SDLC CONTROL CHAR
         LA    R3,LIN3PSRE(,R3)         POINT TO NEXT RECORD
         XI    LIN3SW,LIN3SWDV          FLIP DIVIDED ENTRY
         TM    LIN3SW,LIN3SWDV          DIVIDED ENTRY
         BO    LIN3STAP                 YES , CONTINUE
        $PRNT  ,                        PRINT FORMATED ENTRY
         LR    R8,R7                    INIT R8 LIN3OSRR
LIN3STAP EQU   *
         SH    R10,LIN3PSRH             DECREMENT COUNT
         BM    LIN3ERRP                 PRINT ERROR MESSAGE
         BZ    LIN3STAE                 FORMAT NEXT ENTRY
         B     LIN3HD2T                 FORMAT NEXT ENTRY
LIN3DATF EQU   *
         TM    LIN3SW,LIN3SWDV          DIVIDED ENTRY
         BZ    LIN3DATP                 NO , CONTINUE
         XI    LIN3SW,LIN3SWDV          RESET DIVIDED ENTRY
        $PRNT  ,                        PRINT STATUS ENTRY
LIN3DATP EQU   *
         USING LIN3PDRT,R3              USING LIN3PDRT R3
         XI    LIN3PDRC,LIN3PDRI        RESET DATA RECORD IND
         CH    R10,LIN3PDRC             ENTRY TRUNCATED OR EQUAL
         BNH   LIN3DATT                 YES , USE REG 5
         LH    R10,LIN3PDRC             GET DATA COUNT
LIN3DATT EQU   *
         SH    R5,LIN3PDRC              DECREMENT COUNT
         MVC   OUTBUF(L'LIN3HD3),LIN3HD3  MOVE DATA - TO OUTBUF
LIN3DATC EQU   *
         LR    R6,R4                    INIT R6 LIN3UDRR
         USING LIN3UDRR,R6              USING LIN3UDRR R6
        $CNVT  LIN3UDRR,LIN3PDRR        CONVERT LIN3PDRR
         LR    R8,R7                    INIT R8 LIN3ODRR
         USING LIN3ODRR,R8              USING LIN3ODRR R8
         LA    R9,LIN3PDRN              NUMBER OF ENTRIES
LIN3DATL EQU   *
         CH    R10,LIN3PDRH             COUNT LT LIN3PDRH
         BL    LIN3DATN                 YES , MOVE LAST
         MVC   LIN3ODRX,LIN3UDRX        MOVE DATA TO LIN3ODRC
         LA    R3,LIN3PDRE(,R3)         POINT TO NEXT LIN3PDRR
         SH    R10,LIN3PDRH             DECREMENT REC COUNT
         BZ    LIN3DATE                 END OF DATA RECORD
         LA    R6,LIN3UDRE(,R6)         POINT TO NEXT LIN3UDRR
         LA    R8,LIN3ODRE(,R8)         POINT TO NEXT LIN3ODRR
         BCT   R9,LIN3DATL              CONTINUE IF NOT ZERO
        $PRNT  ,                        PRINT DATA RECORD
         B     LIN3DATC                 FORMAT NEXT LINE
LIN3DATN EQU   *
         LA    R3,0(R10,R3)             POINT TO END OF DATA
         SH    R10,HALF1                DECREMENT FOR EXECUTE
         LA    R10,1(R10,R10)           INITILIZE LENGTH
         EX    R10,LIN3DATX             MOVE END DATA
LIN3DATE EQU   *
        $PRNT  ,                        PRINT FORMATED ENTRY
LIN3STAE EQU   *
         LTR   R5,R5                    CHECK COUNT
         BP    LIN3XXXC                 CONTINUE IF MORE
         BZ    LIN3XXXE                 EXIT IF ZERO
LIN3ERRP EQU   *
         MVI   OUTAREA,DOUBLE           DOUBLE SPACE MESSAGE
        $PRNT  IED560I                  PRINT TRUNCATED MSG
         NI    LIN3SW,AVTEFF-LINTSWDV   RESET DIVIDED ENTRY
         B     GETREC                   GET NEXT RECORD
LIN3XXXC EQU   *
         LA    R3,LIN3PXCE(,R3)         SKIP OVER COUNT
         CLC   LIN3PDRC,HALF0           ENTRY EXIST
         BNE   LIN3XXXS                 YES , CONTINUE
LIN3XXXE EQU   *
         TM    LIN3SW,LINTSWDV          DIVIDED ENTRY
         BZ    GETREC                   NO , GET NEXT RECORD
        $PRNT  ,                        PRINT FORMATED ENTRY
         XI    LIN3SW,LINTSWDV          RESET DIVIDED ENTRY
         B     GETREC                   GET NEXT RECORD
         SPACE 1
LIN3DATX MVC   LIN3ODRX(1),LIN3UDRX     MOVE DATA TO LIN3ODRC
         TITLE '- PIUT - PIU TRACE FORMAT ROUTINE'
PIUT     EQU   *
         USING PIUTPHDR,R2              PIUT PACK HDR RECORD
         USING PIUTUHDR,R4              PIUT UNPK HDR RECORD
         OI    PIUTSW,PIUTSWNH          INDICATE NEED HEADER 1
         TM    PIUTSW,PIUTSWFT          FIRST TIME SWITCH
         BZ    PIUTSEQC                 NO , CHECK SEQUENCE
         XI    PIUTSW,PIUTSWFT          RESET FIRST TIME SW
PIUTSEQN EQU   *
         MVC   PIUTSEQO,PIUTPSEQ        INITILIZE SEQUENCE
         B     PIUTSEQF                 BYPASS FIRST COMPARE
PIUTSEQC EQU   *
         CLC   PIUTSEQO,PIUTPSEQ        SEQUENCE ERROR
         BE    PIUTSEQF                 NO , CONTINUE
         BH    PIUTSEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,PIUTPSEQ           CONVERT MISSING SEQ
         MVC   PIUTHD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  PIUTHD1,SEQMSG           PRINT PIUT SEQ ERR MSG
         AP    PIUTSEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,PIUTSEQO              GET PIUTSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO PIUTSEQO
         STC   R8,PIUTSEQO              SAVE PIUTSEQO COUNT
         B     PIUTSEQC                 CONTINUE
PIUTSEQF EQU   *
         IC    R8,PIUTSEQO              GET PIUTSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO PIUTSEQO
         STC   R8,PIUTSEQO              SAVE PIUTSEQO COUNT
PIUTTSTT EQU   *
         TM    PIUTSW,PIUTSWSE          SELECTIVE TRACING
         BZ    PIUTHD1T                 NO , CHECK HEADERS
         LA    R1,PIUTX                 ADDRESS OF ENTRIES
         USING PIUTCX,R1                USING PIUTCX R1
         USING PIUTPREC,R3              USING PIUT PACK RECORD
PIUTTSTL EQU   *
         CLC   PIUTPDAF,PIUTCRSI        TRACE THIS DESTINATION
         BL    PIUTCOAF                 NO , CHECK SOURCE
         BE    PIUTHD1T                 YES , CONTINUE
         TM    PIUTNX,PIUTNT            NEXT ENTRY THRU ENTRY
         BZ    PIUTCOAF                 NO , CHECK SOURCE
         CLC   PIUTPDAF,PIUTNRSI        TRACE THIS DESTINATION
         BNH   PIUTHD1T                 YES , CONTINUE
PIUTCOAF EQU   *
         CLC   PIUTPOAF,PIUTCRSI        TRACE THIS SOURCE
         BL    PIUTTSTN                 NO , GET NEXT ENTRY
         BE    PIUTHD1T                 YES , CONTINUE
         TM    PIUTNX,PIUTNT            NEXT ENTRY THRU ENTRY
         BZ    PIUTTSTN                 NO , GET NEXT ENTRY
         CLC   PIUTPOAF,PIUTNRSI        TRACE THIS SOURCE
         BNH   PIUTHD1T                 YES , CONTINUE
PIUTTSTN EQU   *
         LA    R1,PIUTXL(,R1)           BUMP TO NEXT ENTRY
         TM    PIUTCX,PIUTCS            SINGLE ENTRY
         BO    PIUTTSTL                 YES , CONTINUE
         TM    PIUTNX,PIUTNT            THRU ENTRY
         BO    PIUTTSTN                 YES , GET NEXT ENTRY
         B     PIUTNEXT                 NO , GET NEXT RECORD
PIUTHD1T EQU   *
         TM    PIUTSW,PIUTSWNH          HEADER ONE NEEDED
         BZ    PIUTHD2T                 NO , SKIP HEADER1
         XI    PIUTSW,PIUTSWNH          RESET NEED HEADER ONE
         OI    XXXXHDR2,AVTEFF-PIUTHDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   PIUTHD1S,PIUTUSEQ        MOVE PIUT SEQUENCE
        $PRNT  PIUTHD1,CURRDT           PRINT PIUT HEADER 1
         TM    XXXXHDR2,PIUTHDR2        HEADER 2 NEEDED
         BO    PIUTHD2P                 YES , PRINT HEADER 2
         B     PIUTHD2N                 NO , SKIP HEADER 2
PIUTHD2T EQU   *
         TM    XXXXHDR2,PIUTHDR2        HEADER 2 NEEDED
         BZ    PIUTMOVE                 NO , SKIP HEADER1
PIUTHD2P EQU   *
         XI    XXXXHDR2,PIUTHDR2        RESET NEED HEADER 2
        $PRNT  PIUTHD2                  PRINT PIUT HEADER 2
        $PRNT  PIUTHD3                  PRINT PIUT HEADER 3
PIUTHD2N EQU   *
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
PIUTMOVE EQU   *
         USING PIUTUREC,R4              USING PIUTUREC
        $CNVT  PIUTUREC,PIUTPREC        UNPACK PIUTUREC
         USING PIUTOREC,R7              USING PIUTOREC
         MVC   PIUTODTI,PIUTUDTI        DEST TNT INDEX
         MVC   PIUTOSTI,PIUTUSTI        SRCE TNT INDEX
         MVC   PIUTOTH0,PIUTUTH0        TH BYTE 0
         MVC   PIUTOTH1,PIUTUTH1        TH BYTE 1
         MVC   PIUTODAF,PIUTUDAF        DEST NETWORK ADDRESS
         MVC   PIUTOOAF,PIUTUOAF        SRCE NETWORK ADDRESS
         MVC   PIUTOTG1,PIUTUTG1        TH FIRST TAG BYTE
         MVC   PIUTOTG2,PIUTUTG2        TH SECOND TAG BYTE
         MVC   PIUTORHC,PIUTURHC        RH COUNT FIELD
         MVC   PIUTORH0,PIUTURH0        RH BYTE ZERO
         MVC   PIUTORH1,PIUTURH1        RH BYTE ONE
         MVC   PIUTORH2,PIUTURH2        RH BYTE TWO
         MVC   PIUTORUX,PIUTURUX        ENTIRE RU
        $PRNT  ,
PIUTNEXT EQU   *
         LA    R3,PIUTPRSE(,R3)         UPDATE TO NEXT ENTRY
         SH    R5,PIUTPRSH              SUBTRACT RECORD SIZE
         BP    PIUTTSTT                 CHECK NEXT ENTRY
         B     GETREC                   GET NEXT RECORD
         TITLE '- STCB - SUBTASK TRACE FORMAT ROUTINE'
STCB     EQU   *
         USING STCBPHDR,R2              STCB PACK HDR RECORD
         USING STCBUHDR,R4              STCB UNPK HDR RECORD
         L     R9,STCBPAVT-1            SAVE AVT ADDRESS
         OI    STCBSW,STCBSWNH          INDICATE NEED HEADER 1
         TM    STCBSW,STCBSWFT          FIRST TIME SWITCH
         BZ    STCBSEQC                 NO , CHECK SEQUENCE
         XI    STCBSW,STCBSWFT          RESET FIRST TIME SW
STCBSEQN EQU   *
         MVC   STCBSEQO,STCBPSEQ        INITILIZE SEQUENCE
         B     STCBSEQF                 BYPASS FIRST COMPARE
STCBSEQC EQU   *
         CLC   STCBSEQO,STCBPSEQ        SEQUENCE ERROR
         BE    STCBSEQF                 NO , CONTINUE
         BH    STCBSEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,STCBSEQO           UNPACK MISSING SEQ
         MVC   STCBHD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  STCBHD1,SEQMSG           PRINT STCB SEQ ERR MSG
         AP    STCBSEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,STCBSEQO              GET STCBSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO STCBSEQO
         STC   R8,STCBSEQO              SAVE STCBSEQO COUNT
         B     STCBSEQC                 CONTINUE
STCBSEQF EQU   *
         IC    R8,STCBSEQO              GET STCBSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO STCBSEQO
         STC   R8,STCBSEQO              SAVE STCBSEQO COUNT
STCBTSTT EQU   *
         TM    STCBSW,STCBSWSE          SELECTIVE TRACING
         BZ    STCBHD1T                 NO , PRINT HEADERS
         LA    R1,STCBX                 ADDRESS OF ENTRIES
         USING STCBCX,R1                USING STCBCX R1
         USING STCBPREC,R3              USING STCBPREC R3
STCBTSTL EQU   *
         CLC   STCBPELE,STCBCELE        TRACE THIS ELEMENT
         BL    STCBCLCB                 NO , CHECK LCB ADDRESS
         BE    STCBHD1T                 YES , CONTINUE
         TM    STCBNX,STCBNT            NEXT ENTRY THRU
         BZ    STCBCLCB                 NO , CHECK LCB ADDRESS
         CLC   STCBPELE,STCBNELE        TRACE THIS ELEMENT
         BNH   STCBHD1T                 YES , CONTINUE
STCBCLCB EQU   *
         CLC   STCBPLCB,STCBCELE        TRACE THIS ELEMENT
         BL    STCBTSTN                 NO , GET NEXT ENTRY
         BE    STCBHD1T                 YES , CONTINUE
         TM    STCBNX,STCBNT            NEXT ENTRY THRU
         BZ    STCBTSTN                 NO , GET NEXT ENTRY
         CLC   STCBPLCB,STCBNELE        TRACE THIS ELEMENT
         BNH   STCBHD1T                 YES , CONTINUE
STCBTSTN EQU   *
         LA    R1,STCBXL(,R1)           BUMP TO NEXT ENTRY
         TM    STCBCX,STCBCS            SINGLE ENTRY
         BO    STCBTSTL                 YES , CONTINUE
         TM    STCBCX,STCBCT            THRU ENTRY
         BO    STCBTSTN                 YES , GET NEXT ENTRY
         B     STCBNEXT                 NO , GET NEXT RECORD
STCBHD1T EQU   *
         TM    STCBSW,STCBSWNH          HEADER ONE NEEDED
         BZ    STCBHD2T                 NO , SKIP HEADER1
         XI    STCBSW,STCBSWNH          RESET NEED HEADER ONE
         OI    XXXXHDR2,AVTEFF-STCBHDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   STCBHD1S,STCBUSEQ        MOVE STCB SEQUENCE
         MVC   STCBHD1A,STCBUAVT        MOVE STCB AVT ADDRESS
        $PRNT  STCBHD1,CURRDT           PRINT STCB HEADER 1
         TM    XXXXHDR2,STCBHDR2        HEADER 2 NEEDED
         BO    STCBHD2P                 YES , PRINT HEADER 2
         B     STCBHD2N                 NO , SKIP HEADER 2
STCBHD2T EQU   *
         TM    XXXXHDR2,STCBHDR2        HEADER 2 NEEDED
         BZ    STCBMOVE                 NO , SKIP HEADER 2
STCBHD2P EQU   *
         XI    XXXXHDR2,STCBHDR2        RESET NEED HEADER 2
        $PRNT  STCBHD2                  PRINT STCB HEADER 2
        $PRNT  STCBHD3                  PRINT STCB HEADER 3
STCBHD2N EQU   *
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
STCBMOVE EQU   *
         SLR   R1,R1                    ZERO INDEX REGISTER
         ICM   R1,ONE,STCBPPRI          GET ELEMENT PRIORITY
         BZ    STCBWRT2                 WAIT ENTRY USE MCPL
         BP    STCBQCB                  CHECK QCB MCPL CODE
         CLI   STCBPPRI,PRIPOSTS        POST ENTRY
         BL    STCBQCB                  NO , CHECK QCB ADDRESS
         IC    R1,STCBTBLP-PRIPOSTS(R1) GET POST OFFSET TO MSG
         B     STCBWRT2                 POST ENTRY USE POST
STCBQCB  EQU   *
         IC    R1,STCBPMCP              GET QCB MCPL CODE
         CLI   STCBPMCP,DSPMCPL2        POST OR TWO BYTE STCB
         BH    STCBMCP                  NO , CHECK MCPL
         SLR   R8,R8                    CLEAR WORK REG
         L     R6,STCBPQCB-1            STCB QCB ADDRESS
         SLR   R6,R9                    STCBRACT AVT ADDRESS
         LA    R6,0(,R6)                CLEAR HI-ORDER BYTE
STCBLOOP EQU   *
         C     R6,STCBDSPX(R8)          THIS THE DISPLACEMENT
         BE    STCBWRT1                 YES , ISSUE MESSAGE
         LA    R8,STCBLAEE(,R8)         BUMP TO NEXT DISP
         BH    STCBLOOP                 NO , CHECK NEXT ENTRY
         CLI   STCBPMCP,DSPCPOST        POST MCPL
         BE    STCBWRT2                 YES , PRINT POST MSG
STCBMCP  EQU   *                        UPDATE FOR MESSAGE
         CLI   STCBPMCP,DSPCBSCH        MCPL LE X'26'
         BNH   STCBWRT2                 YES , WRITE MESSAGE
         LA    R1,DSPCBSCH+2            POINT TO NEXT MESSAGE
         CLC   STCBPELE,STCBPQCB        QCB POSTED TO ITSELF
         BE    STCBWRT2                 YES , PRINT MESSAGE
         LA    R1,STCBLTEE(,R1)         POINT TO NEXT MESSAGE
         B     STCBWRT2                 PRINT UNKNOWN MSG
STCBWRT1 EQU   *
         SRL   R8,1                     GET INDEX VALUE
         LH    R1,STCBMESS(R8)          UPDATE FOR MESSAGE
         B     STCBWRT3                 BRANCH TO STCBWRT3
STCBWRT2 EQU   *
         LH    R1,STCBTBLE(R1)          GET MESSAGE OFFSET
STCBWRT3 EQU   *
         LA    R1,STCBM(R1)             ADDRESS OF MESSAGE
         LR    R8,R7                    SET TO USE FIRST HALF
         TM    STCBSW,STCBSWDV          USE FIRST TABLE ENTRY
         BZ    STCBMREC                 YES , CONTINUE
         LA    R8,66(,R8)               USE SECOND HALF
         USING STCBUREC,R4              STCB UNPK RECORD
STCBMREC EQU   *
        $CNVT  STCBUREC,STCBPREC        UNPACK STCB RECORD
         USING STCBOREC,R8              STCB OUTPUT RECORD
         MVC   STCBOMSG,0(R1)           MOVE STCB COMMENTS
         MVC   STCBOPRI,STCBUPRI        MOVE STCB PRIORITY
         MVC   STCBOELE,STCBUELE        MOVE ELEMENT ADDRESS
         MVC   STCBOBUF,STCBUBUF        MOVE BUFFER  INDICATOR
         MVC   STCBOENT,STCBUENT        MOVE ENTRY   ADDRESS
         MVC   STCBOQCP,STCBUQCP        MOVE QCB     PRIORITY
         MVC   STCBOQCB,STCBUQCB        MOVE QCB     ADDRESS
         MVC   STCBOMCP,STCBUMCP        MOVE MCPL    INDEX
         MVC   STCBOSTC,STCBUSTC        MOVE STCB    ADDRESS
         XI    STCBSW,STCBSWDV          FLIP FIRST ENTRY SW
         TM    STCBSW,STCBSWDV          USE SECOND TABLE ENTRY
         BO    STCBNEXT                 YES , CONTINUE
        $PRNT  ,                        PRINT TWO ENTRIES
STCBNEXT EQU   *
         LA    R3,STCBPRSE(,R3)         UPDATE TO NEXT ENTRY
         SH    R5,STCBPRSH              SUBTRACT RECORD SIZE
         BP    STCBTSTT                 CHECK NEXT ENTRY
         TM    STCBSW,STCBSWDV          LAST ENTRY WRITTEN
         BZ    GETREC                   YES , GET NEXT RECORD
        $PRNT  ,                        PRINT SINGLE ENTRY
         XI    STCBSW,STCBSWDV          USE FIRST ENTRY
         B     GETREC                   GET NEXT RECORD
         TITLE '- UNKN - UNKNOWN TRACE FORMAT ROUTINE'
UNKN     EQU   *
        $PRNT  UNKNHD1,CURRDT           PRINT UNKNOWN HEADER
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
         USING UNKNPHXR,R2              USING UNKNPHXR,R4
         USING UNKNUHXR,R4              USING UNKNUHXR,R4
        $CNVT  UNKNUHXR,UNKNPHXR        CONVERT UNKNPHXR
         USING UNKNOHXR,R7              USING UNKNOHXR,R7
         MVC   UNKNOHXR,UNKNUHXR        MOVE HEADER
         MVI   UNKNOHXS,C'*'            *
         MVC   UNKNOHXP,UNKNPHXR        MOVE HEADER
         TR    UNKNOHXP,TRNTBLE3        TRANSLATE HEADER
         MVI   UNKNOHXE,C'*'            *
        $PRNT  ,                        PRINT UNKN RECORD
         USING UNKNPRXR,R3              USING UNKNPRXR,R3
         USING UNKNURXR,R4              USING UNKNURXR,R4
UNKNMOVE EQU   *
        $CNVT  UNKNURXR,UNKNPRXR        CONVERT UNKNPRXR
         USING UNKNORX1,R7              USING UNKNORX1,R7
         MVC   UNKNORX1,UNKNURX1        MOVE 16 UNPACKED
         MVC   UNKNORX2,UNKNURX2        MOVE 16 UNPACKED
         MVI   UNKNORXS,C'*'            *
         MVC   UNKNORXP,UNKNPRXR        MOVE 32 PACKED
         TR    UNKNORXP,TRNTBLE3        TRANSLATE HEADER
         MVI   UNKNORXE,C'*'            *
        $PRNT  ,                        PRINT UNKN RECORD
         LA    R3,UNKNPRSE(,R3)         GET NEXT RECORD
         SH    R5,UNKNPRSH              SUB RECORD SIZE
         BP    UNKNMOVE                 FORMAT NEXT ENTRY
         B     GETREC                   GET NEW RECORD
         TITLE '- USER - USER TRACE FORMAT ROUTINE'
USER     EQU   *
         USING USERPHDR,R2              USER PACK HDR RECORD
         USING USERUHDR,R4              USER UNPK HDR RECORD
         TM    USERSW,USERSWFT          FIRST TIME SWITCH
         BZ    USERSEQC                 NO , CHECK SEQUENCE
         XI    USERSW,USERSWFT          RESET FIRST TIME SW
USERSEQN EQU   *
         MVC   USERSEQO,USERPSEQ        INITILIZE SEQUENCE
         B     USERSEQF                 BYPASS FIRST COMPARE
USERSEQC EQU   *
         CLC   USERSEQO,USERPSEQ        SEQUENCE ERROR
         BE    USERSEQF                 NO , CONTINUE
         BH    USERSEQN                 YES , ASSUME DISK WRAP
        $CNVT  UNPK2,USERSEQO           CNVT MISSING SEQUENCE
         MVC   USERHD1S,UNPK2           PUT SEQ NUMBER IN MSG
        $PRNT  USERHD1,SEQMSG           PRINT USER SEQ ERR MSG
         AP    USERSEQE,PACK1           ADD ONE TO ERROR COUNT
         IC    R8,USERSEQO              GET USERSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO USERSEQO
         STC   R8,USERSEQO              SAVE USERSEQO COUNT
         B     USERSEQC                 CONTINUE
USERSEQF EQU   *
         IC    R8,USERSEQO              GET USERSEQO COUNT
         LA    R8,1(,R8)                ADD ONE TO USERSEQO
         STC   R8,USERSEQO              SAVE USERSEQO COUNT
         OI    XXXXHDR2,AVTEFF-USERHDR2 INDICATE NEED HEADER 2
         MVI   OUTAREA,TRIPPLE          CAUSE TRIPPLE SPACE
         MVC   USERHD1S,USERUSEQ        PUT SEQ NUMBER IN MSG
        $PRNT  USERHD1,CURRDT           PRINT USER HEADER
         MVI   OUTAREA,DOUBLE           CAUSE EXTRA SPACE
         USING USERPRXR,R3              USING USERPRXR R3
         USING USERURXR,R4              USING USERURXR R4
USERMOVE EQU   *
        $CNVT  USERURXR,USERPRXR        CONVERT USERPRXR
         USING USERORXR,R7              USING USERORXR,R7
         MVC   USERORX1,USERURX1        MOVE 16 UNPACKED
         MVC   USERORX2,USERURX2        MOVE 16 UNPACKED
         MVI   USERORXS,C'*'            *
         MVC   USERORXP,USERPRXR        MOVE 32 PACKED
         TR    USERORXP,TRNTBLE3        TRANSLATE USERORXP
         MVI   USERORXE,C'*'            *
        $PRNT  ,                        PRINT USER RECORD
         LA    R3,USERPRSE(,R3)         GET NEXT RECORD
         SH    R5,USERPRSH              SUB RECORD SIZE
         BP    USERMOVE                 FORMAT NEXT ENTRY
         B     GETREC                   GET NEW RECORD
         TITLE 'IEDQXB TERMINATION ROUTINE'
ENDTRACE EQU   *
         TM    EXECSW,EXECSWSS          SEARCH FOR START TIME
         BZ    EXIT                     NO , EXIT
         LA    R2,IED121I               GET ADDR OF ERROR MESSAGE
         B     WTO                      GO WRITE ERROR MSG AND EXIT
ERRORTP  EQU   *
         LA    R2,IED118I               GET I/O ERROR MESSAGE
         BAL   R14,WTOR                 WRITE MSG IED118I
EXIT     EQU   *
         SR    R3,R3                    INIT RETURN CODE 0
         LA    R5,XXXXCONE              INIT TO # OF PARMS
         LA    R6,PARMCONS              INIT TO PARM COMP
         USING XXXXSEQE,R6              USING XXXXSEQE R6
SEQELOOP EQU   *
         CP    XXXXSEQE,PACK0           SEQUENCE ERRORS
         BE    NOSEQERR                 NO , SKIP WTO
        $CNVT  UNPK4,XXXXSEQE           CONVERT SEQ ERROR CNT
         MVC   IED623IC,UNPK4           MOVE COUNT TO MESSAGE
         MVC   IED623IN,XXXXNAME        MOVE TRACE NAME TO MSG
         LA    R2,IED623I               ADDRESS OF IED623I MSG
         BAL   R14,WTOR                 PRINT IED623I MESSAGE
         LA    R3,FOUR(,R3)             INCREMENT RETURN CODE
NOSEQERR EQU   *
         LA    R6,XXXXCONL(,R6)         INCREMENT TO NEXT ENT
         BCT   R5,SEQELOOP              CHECK ALL SEQ COUNTERS
TESTSYSP EQU   *
         TM    SYSPRINT+48,X'10'        SYSPRINT OPEN
         BZ    TESTTRCU                 NO , TEST TRACE UNIT
         CLOSE SYSPRINT                 CLOSE SYSPRINT
TESTTRCU EQU   *
         TM    TRACETP+48,X'10'         TRACE UNIT OPEN
         BZ    TESTPOOL                 NO , TEST POOL
         CLOSE TRACETP                  CLOSE TRACE UNIT
TESTPOOL EQU   *
         TM    TRACETP+23,X'01'         DOES TRACE BUFFER POOL EXIST
         BO    FREEPRNT                 IF NO, CHECK PRINTER DCB
         LA    R1,TRACETP               GET DCB ADDRESS
         LA    R4,FREEPRNT              SET RETURN POINT
         FREEPOOL (1)                   FREE BUFFER POOL
FREEPRNT TM    SYSPRINT+23,X'01'        DOES SYSPRINT BUFFER POOL EXIST
         BO    RETURN                   IF NO, RETURN
         LA    R1,SYSPRINT              GET DCB ADDRESS
         FREEPOOL (1)                   FREE PRINTER BUFFER POOL
RETURN   EQU   *
         L     R13,FOUR(R13)            GET INITIAL SAVE AREA
         LR    R15,R3                   GET RETURN CODE
         SAVE  (15)                     SAVE RETURN CODE
         RETURN (14,12)                 RETURN
         SPACE 1
WTOMOVE  MVC   OUTBUF(1),4(R2)          MOVE WTO MSG TO PRINT BUFFER
         SPACE 3
WTOR     EQU   *
         ST    R14,WTORSAVE             SAVE RETURN ADDRESS
WTO      EQU   *
         WTO   MF=(E,(2))               WRITE ERROR MESSAGE
         TM    EXECSW,EXECSWFP          SYSPRINT FAILURE
         BO    SKIPPRNT                 YES - SKIP PRINT
         LH    R1,0(,R2)                GET WTO CHARACTER COUNT
         SH    R1,HALF5                 TAKE WTO PREFIX FROM COUNT
         EX    R1,WTOMOVE               MOVE MESSAGE TO PRINT BUFFER
         MVI   OUTAREA,TRIPPLE          SET TO TRIPLE SPACE
        $PRNT  ,
SKIPPRNT EQU   *
         TM    EXECSW,EXECSWFE          FAIL JOB ERROR
         BO    TESTSYSP                 YES - TEST SYSPRINT
         L     R14,WTORSAVE             NO , RESTORE ADDRESS
         BR    R14                      RETURN
         SPACE 3
         USING PARMCOMP,R15
SCAN     EQU   *
         LA    R15,1(R1,R2)             INITILIZE SCAN
         SH    R8,HALF1                 DECREMENT BYTE COUNT
SCANLOOP EQU   *
         CLI   PARMXXXX,C'A'            IS CHARACTER LT A
         BL    PARMERR                  YES , ERROR
         CLI   PARMXXXX,C'F'            IS CHARACTER GT F
         BH    SKIPTRAN                 YES , SKIP TRANSLATE
         TR    PARMXXXX,TRNTBLE1        TRANSLATE FOR PACK
SKIPTRAN EQU   *
         SH    R8,HALF1                 DECREMENT BYTE COUNT
         BM    PARMERR                  IF SHORT, NOTE ERROR IN PARMS
         LA    R15,1(,R15)              INCREMENT TO NEXT CHARACTER
         BCT   R6,SCANLOOP              CHECK REST OF FIELD
         BR    R14                      RETURN
 TITLE '- IEDQXB - TCAM TRACE FORMAT PROGRAM - PRINT OUTPUT ROUTINE'
***********************************************************************
*                                                                     *
*        THIS ROUTINE OUTPUTS TO THE SYSPRINT DATA SET THE
*        CONTENTS OF OUTBUF , CLEARS OUTBUF TO BLANKS AND
*        DECREMENTS THE LINE COUNTER . WHEN THE LINE COUNTER
*        REACHES ZERO A MINUS CONDITION IS RETURNED TO THE
*        CALLER TO INDICATE A PAGE EJECT WILL OCURR ON THE
*        NEXT ENTRY
*        ALL REGISTERS ARE TRANSPARENT, EXCEPT REGS 0, 1, AND 15.     *
*                                                                     *
***********************************************************************
         SPACE 1
PUT      EQU   *
         ST    R14,XXXXSAVE             SAVE USERS RETURN REG
         MVI   XXXXSAVE,AVTEZERO        CLEAR RETURN CODE
         CLI   OUTAREA,EJECT            EJECT SPECIFIED
         BE    PUTEJECT                 YES , EJECT
         LH    R14,LINECTR              GET LINE COUNT
         CH    R14,HALF0                EJECT REQUIRED
         BE    PUTXEJEC                 YES , EJECT TO NEW PAGE
         CLI   OUTAREA,TRIPPLE          TRIPLE SPACE SPECIFIED
         BNE   PUTTDBLE                 NO , CHECK DOUBLE
         BCT   R14,PUTXDBLE             BRANCH IF COUNT GT 1
         B     PUTXEJEC                 EJECT
PUTTDBLE EQU   *
         CLI   OUTAREA,DOUBLE           DOUBLE SPACE SPECIFIED
         BNE   PUTXSNGL                 NO , SINGLE OUTPUT
PUTXDBLE EQU   *
         BCT   R14,PUTXSNGL             BRANCH IF COUNT GT 1
         B     PUTXEJEC                 EJECT
PUTXSNGL EQU   *
         BCT   R14,PUTOUT               BRANCH IF COUNT GT 1
         MVI   XXXXSAVE,AVTEFF          INDICATE NEED NEW PAGE
         MVI   XXXXHDR2,AVTEFF          INDICATE NEED HEADER 2
         B     PUTOUT                   PRINT LAST LINE
PUTXEJEC EQU   *
         MVI   OUTAREA,EJECT            EJECT TO NEXT PAGE
PUTEJECT EQU   *
         LH    R14,LINECNT              GET MAX LINE COUNT
PUTOUT   EQU   *
         STH   R14,LINECTR              SAVE NEW COUNT
         PUT   SYSPRINT,OUTAREA         PRINT THE LINE
         MVC   OUTAREA,BLANK            CLEAR OUTPUT AREA
         ICM   R14,ALL,XXXXSAVE         GET USERS RETURN ADDRESS
         BR    R14                      RETURN TO USER
         TITLE '- IEDQXB - CONSTANTS'
EXECSW   DC    X'00'                    EXECUTION FLAG SWITCHES
EXECSWFL EQU   X'80'                    LOG OPEN FAILED
EXECSWFP EQU   X'40'                    PRINTER OPEN FAILED
EXECSWSS EQU   X'20'                    SEARCH FOR START TIME
EXECSWSE EQU   X'10'                    SEARCH FOR END TIME
EXECSWLE EQU   X'04'                    LOG ERROR
EXECSWPE EQU   X'02'                    PARM ERROR
EXECSWFE EQU   EXECSWFL+EXECSWFP+EXECSWSS+EXECSWLE+EXECSWPE
         SPACE 1
PARMSW   DC    X'00'                    PARAMETER OPTIONS FIELD
PARMALL  EQU   254                      ALL  FORMATING REQ
PARMBUFF EQU   128                      BUFF FORMATING REQ
PARMIOTR EQU    64                      IOTR FORMATING REQ
PARMLINT EQU    32                      LINT FORMATING REQ
PARMLIN3 EQU    16                      LIN3 FORMATING REQ
PARMPIUT EQU     8                      PIUT FORMATING REQ
PARMSTCB EQU     4                      STCB FORMATING REQ
PARMUSER EQU     2                      USER FORMATING REQ
PARMPROC EQU     1                      PARM PROCESSING
         SPACE 1
XXXXHDR2 DC    X'FF'                    XXXXHDR2 HEADER 2
BUFFHDR2 EQU   128                               BUFF
IOTRHDR2 EQU    64                               IOTR
LINTHDR2 EQU    32                               LINT
LIN3HDR2 EQU    16                               LIN3
PIUTHDR2 EQU     8                               PIUT
STCBHDR2 EQU     4                               STCB
USERHDR2 EQU     2                               USER
PRTDCBAD DC    A(SYSPRINT)              DCB ADDR COMPARAND.
DEFBLK   DC    H'16404'                 DEFAULT BLOCK SIZE 1000+HDR+4
         SPACE 1
XXXXSWFT EQU   X'80'                    FIRST TIME
XXXXSWSE EQU   X'40'                    SELECTIVE TRACE
XXXXSWNH EQU   X'20'                    NEED HEADER 1
XXXXSWTR EQU   X'08'                    TRACE ACTIVE
XXXXSWDV EQU   X'04'                    DIVIDED ENTRY
         EJECT
         ORG   IEDQXB+8192              IEDQXB + X'2000'
SAVEAREA DS    18F                      SAVEAREA - MUST BE AT X'2000' -
WTORSAVE DS    F                        WTOR SAVE AREA
XXXXSAVE DS    F                        PUT ROUTINE RETURN SAVE AREA
PARMCONS EQU   *
         SPACE 3
BUFFSEQE DC    PL2'0',AL1(PARMBUFF),AL1(3)
         DC    CL8'BUFF=('                      KEYWORD
         DC    A(BUFFINIT),A(BUFF)              ROUTINES
         SPACE 1
IOTRSEQE DC    PL2'0',AL1(PARMIOTR),AL1(3)
         DC    CL8'IOTR=('                      KEYWORD
         DC    A(IOTRINIT),A(IOTR)              ROUTINES
         SPACE 1
LINTSEQE DC    PL2'0',AL1(PARMLINT),AL1(3)
         DC    CL8'LINT'                        KEYWORD
         DC    A(0),A(LINT)                     ROUTINES
         SPACE 1
LIN3SEQE DC    PL2'0',AL1(PARMLIN3),AL1(3)
         DC    CL8'LIN3'                        KEYWORD
         DC    A(0),A(LIN3)                     ROUTINES
         SPACE 1
PIUTSEQE DC    PL2'0',AL1(PARMPIUT),AL1(3)
         DC    CL8'PIUT=('                      KEYWORD
         DC    A(PIUTINIT),A(PIUT)              ROUTINES
         SPACE 1
STCBSEQE DC    PL2'0',AL1(PARMSTCB),AL1(3)
         DC    CL8'STCB=('              STCB  KEYWORD
         DC    A(STCBINIT),A(STCB)      STCB  ROUTINES
         SPACE 1
USERSEQE DC    PL2'0',AL1(PARMUSER),AL1(3)
         DC    CL8'USER'                USER  KEYWORD
         DC    A(0),A(USER)             USER  ROUTINES
         SPACE 1
         DC    AL2(0),AL1(0),AL1(5)
         DC    CL8'BLOCK='
         DC    A(BLCKINIT),A(0)         BLOCK INIT  ROUTINE
         SPACE 1
         DC    AL2(0),AL1(0),AL1(7)
         DC    C'LINECNT='
         DC    A(LINEINIT),A(0)         LINECNT INIT ROUTINE
         SPACE 1
         DC    AL2(0),AL1(AVTEFF),AL1(7)
         DC    CL8' ',A(0),A(UNKN)      UNKNOWN ENTRY
         SPACE 2
PARMCEND EQU   *                           END OF PARMS
         EJECT
CURRDT   DS    0CL30            --- CURRENT DATE AND TIME ---
         DC    C'DATE - '       DATE -
CURRYY   DC    C'00'                   00
         DC    C'.'                      .
CURRDDD  DC    C'000'                     000
         DC    C'  TIME - '                    TIME -
CURRHH   DC    C'00'                                  00
         DC    C'.'                                     .
CURRMM   DC    C'00'                                     00
         DC    C'.'                                        .
CURRSS   DC    C'00'                                        00
         SPACE 1
TIMESHMD DS   0XL4                     TIME START HH-MM-DDD
TIMESHM  DS   0XL2                                HH-MM
TIMESHH  DS    XL1                                HH
TIMESMM  DS    XL1                                   MM
DATESD   DS    PL2                                      DDD
         SPACE 1
TIMEEHMD DS   0XL4                     TIME END   HH-MM-DDD
TIMEEHM  DS   0XL2                                HH-MM
TIMEEHH  DS    XL1                                HH
TIMEEMM  DS    XL1                                   MM
DATEED   DS    PL2                                      DDD
         SPACE 1
OUTAREA  DS   0CL133                    OUTPUT AREA
         DC    C'1'                     CARRIAGE CONTROL CHARACTER
OUTBUF   DC    CL132' '                 OUTPUT BUFFER AREA
         ORG   *-193
TRNTBLE1 EQU   *                        TRANSLATE TABLE
         ORG   ,
         DC    X'0A0B0C0D0E0F'          CONVERT TABLE 1
         SPACE 3
         ORG   *-240
TRNTBLE2 EQU   *                        TRANSLATE TABLE
         ORG   ,
         DC    C'0123456789ABCDEF'      CONVERT TABLE 2
         SPACE 1
TRNTBLE3 EQU   *                        TRANSLATE TABLE
         DC    C'................'      X'00' - X'0F'
         DC    C'................'      X'10' - X'1F'
         DC    C'................'      X'20' - X'2F'
         DC    C'................'      X'30' - X'3F'
         DC    C'................'      X'40' - X'4F'
         DC    C'................'      X'50' - X'5F'
         DC    C'................'      X'60' - X'6F'
         DC    C'................'      X'70' - X'7F'
         DC    C'.ABCDEFGHI......'      X'80' - X'8F'
         DC    C'.JKLMNOPQR......'      X'90' - X'9F'
         DC    C'..STUVWXYZ......'      X'A0' - X'AF'
         DC    C'................'      X'B0' - X'BF'
         DC    C'.ABCDEFGHI......'      X'C0' - X'CF'
         DC    C'.JKLMNOPQR......'      X'D0' - X'DF'
         DC    C'..STUVWXYZ......'      X'E0' - X'EF'
         DC    C'0123456789......'      X'F0' - X'FF'
         SPACE 1
PACK0    DC    P'0'                     PACKED ONE CONSTANT
PACK1    DC    P'1'                     PACKED ONE CONSTANT
HALF0    DC    H'0'                     HALF WORD 0
HALF1    DC    H'1'                     HALF WORD 1
HALF3    DC    H'3'                     HALF WORD 3
HALF4    DC    H'4'                     HALF WORD 4
HALF5    DC    H'5'                     HALF WORD 5
HALF15   DC    H'15'                    HALF WORD 15
HALF16   DC    H'16'                    HALF WORD 16
LINECTR  DC    H'60'                    LINE LOCATION COUNTER
LINECNT  DC    H'60'                    MAX LINES PER PAGE
XXXXPHSH DC    AL2(XXXXPHSE)            PACK HEADER SIZE H
DEVTYPE  DS   0D                        DEVTYPE AREA
PACK8    DS   0XL8                      PACK WORKAREA (8)
PACK7    DS   0XL7                      PACK WORKAREA (7)
PACK6    DS   0XL6                      PACK WORKAREA (6)
PACK5    DS   0XL5                      PACK WORKAREA (5)
PACK4    DS   0XL4                      PACK WORKAREA (4)
PACK3    DS   0XL3                      PACK WORKAREA (3)
PACK2    DS   0XL2                      PACK WORKAREA (2)
PACK     DS    XL1                      PACK WORKAREA
         DS    XL8
UNPK8    DS   0CL8                      UNPK WORKAREA (8)
UNPK7    DS   0CL7                      UNPK WORKAREA (7)
UNPK6    DS   0CL6                      UNPK WORKAREA (6)
UNPK5    DS   0CL5                      UNPK WORKAREA (5)
UNPK4    DS   0CL4                      UNPK WORKAREA (4)
UNPK3    DS   0CL3                      UNPK WORKAREA (3)
UNPK2    DS   0CL2                      UNPK WORKAREA (2)
UNPK     DS    CL1                      UNPK WORKAREA
         DS    CL8
UNPKWORK DS    CL150                    CNVT WORK AREASTANT
BLANK    DC    CL133' '                 BLANKS TO PAD OUTPUT
ZEROS    DC    CL2'00'                  ZEROES
         SPACE   1
PARMDC   DC    C'PARM='''               SHOW USER WHAT WAS SPEC
SETPARM  OI    PARMSW,0                 SET FLAG IN PARMSW
CHKPARM  TM    PARMSW,0                 CHK FLAG IN PARMSW
SYSTRACE DC    C'TRACE UNIT'            TRACE UNIT
         TITLE '- BUFF - BUFFER TRACE MESSAGES'
BUFFHD1  DC    C'***** BUFFER TRACE *****     SEQUENCE - 00   BUFFER - X
               1'
         ORG   BUFFHD1+40
BUFFHD1S DS   0CL2
         ORG   BUFFHD1+54
BUFFHD1I DS   0CL1
         ORG   ,
         SPACE 3
BUFFHD2  DC    C'PR  ELEM SCBERRST     CSW   SN IOBF ES LCBS 0CUU CT   X
               LCB  SRCE SIZE ST  XTRA  SCAN  NTXT   CRCD   CHDR   QBCKX
                 ISEQ DEST'
BUFFSW   DC    AL1(BUFFSWFT)       BUFF TRACE SWITCH
BUFFSWFT EQU   XXXXSWFT                       FIRST TIME
BUFFSWSE EQU   XXXXSWSE                       SELECTIVE
BUFFSWNH EQU   XXXXSWNH                       NEED HEADER 1
BUFFSWTR EQU   XXXXSWTR                       TRACE ACTIVE
BUFFSWNF EQU   XXXXSWDV                       NEW FORMAT
         SPACE 1
BUFFSEQO DS    XL1                      TRACE SEQUENCE
         DS   0H
BUFFPBSH DC    AL2(BUFFPBSE)                  BUFFER SIZE H
BUFFPRSH DC    AL2(BUFFPRSE)                  BUFFER RECORD SIZE H
BUFFX    DC    10XL3'00'                BUFF TRACE SELECT TABLE
         DC    X'00'                    END OF TABLE
         TITLE '- IOTR -  I / O  TRACE MESSAGES'
IOTRHD1  DC    C'***** LINE I/O TRACE *****     SEQUENCE - 00'
         ORG   IOTRHD1+42
IOTRHD1S DS   0CL2
         ORG   ,
IOTRHD2  DC    C'ID LINE SEQ#   IOB     SN      CSW           CCW      C
                      CCW                             DATA'
IOTRHD3  DC    C'   ADDR      FL  START    ***************   ADDR      C
               ***********TP****    ***********************************C
               *****'
         SPACE 1
IOTRIFAR EQU   *                        INITILIZED FA ENTRY
         DC    CL16'LCBTTCIN - '        LCBTTCIN - TTCIN
         DC    CL16'TERM - '            TERM - NAME
         DC    CL14'LCBECBCC - '        LCBECBCC - CC
         DC    CL18'LCBINVPT - '        LCBINVPT - AAAAAA
         SPACE 3
IOTRSW   DC    AL1(IOTRSWFT)       IOTR TRACE SWITCH
IOTRSWFT EQU   XXXXSWFT                       FIRST TIME
IOTRSWSE EQU   XXXXSWSE                       SELECTIVE
IOTRSWNH EQU   XXXXSWNH                       NEED HEADER 1
IOTRSWTR EQU   XXXXSWTR                       TRACE ACTIVE
IOTRSWDV EQU   XXXXSWDV                       TRACE DIVIDED
         SPACE 1
IOTRSEQO DS    XL1                      IOTR OLD SEQUENCE
IOTRSVE8 DS    F                        IOTR SAVE AREA REG 8
IOTRSVEE DS    F                        IOTR SAVE AREA REG 14
IOTRPRSH DC    AL2(IOTRPRSE)            IOTR PACK RECORD SIZE
IOTRX    DC    10XL3'00'                IOTR SELECTIVE TABLE
         DC    X'00'                    END OF TABLE
         TITLE '- LINT - LINE TRACE MESSAGES'
LINTHD1  DC    C'***** LINT TRACE FOR              SEQUENCE - 00'
         ORG   LINTHD1+21
LINTHD1N DS   0CL12
         ORG   LINTHD1+45
LINTHD1S DS   0CL2
         ORG   ,
         SPACE 3
LINTSW   DC    AL1(LINTSWFT)       LINT SWITCH
LINTSWFT EQU   XXXXSWFT                        FIRST TIME
LINTSWSE EQU   XXXXSWSE                        SELECTIVE
LINTSWNH EQU   XXXXSWNH                        NEED HEADER 1
LINTSWTR EQU   XXXXSWTR                        TRACE ACTIVE
LINTSWDV EQU   XXXXSWDV                        DIVIDED ENTRY
LINTSEQO DS    XL1                 LINT SEQUENCE OLD
         DS    0H
LINTPRSH DC    AL2(LINTPRSE)       LINT PACK RECORD SIZE H
LINTPGRH DC    AL2(LINTPGRE)       LINT PACK GROUP , RLN H
         TITLE '- LIN3 - LINE TRACE MESSAGES'
LIN3HD1  DC    C'***** LIN3 TRACE FOR              SEQUENCE - 00'
         ORG   LIN3HD1+21
LIN3HD1N DS   0CL12
         ORG   LIN3HD1+45
LIN3HD1S DS   0CL2
         ORG   ,
         SPACE 3
LIN3HD2  DC    C'STATUS - SCF LCD PCF EPCF STAT1 STAT2 TIME ADDR CNTL  X
                  '
         SPACE 3
LIN3HD3  DC    C'DATA - '
         SPACE 3
IED560I  DC    C'IED560I  LIN3 TRACE ENTRY TRUNCATED'
         SPACE 3
LIN3SW   DC    AL1(LIN3SWFT)       LIN3 SWITCH
LIN3SWFT EQU   XXXXSWFT                        FIRST TIME
LIN3SWSE EQU   XXXXSWSE                        SELECTIVE
LIN3SWNH EQU   XXXXSWNH                        NEED HEADER 1
LIN3SWTR EQU   XXXXSWTR                        TRACE ACTIVE
LIN3SWDV EQU   XXXXSWDV                        DIVIDED ENTRY
LIN3SEQO DS    XL1                 LIN3 SEQUENCE OLD
         DS    0H
LIN3PGRH DC    AL2(LIN3PGRE)       LIN3 PACK GROUP , RLN   H
LIN3PSRH DC    AL2(LIN3PSRE)       LIN3 PACK STATUS RECORD H
LIN3PXCH DC    AL2(LIN3PXCE)       LIN3 PACK DATA   COUNT  H
LIN3PDRH DC    AL2(LIN3PDRE)       LIN3 PACK DATA   RECORD H
         TITLE '- PIUT - PIU TRACE MESSAGES'
PIUTHD1  DC    C'***** PATH INFORMATION UNIT (PIU) TRACE *****     SEQUX
               ENCE - 00'
         ORG   PIUTHD1+61
PIUTHD1S DS   0CL2
         ORG   ,
         SPACE 3
PIUTHD2  DC    C'TNT INDICES    *-------TRANSMISSION HEADER--------    X
                *-REQUEST HEADER-*    *--------REQUEST UNIT-------- '
         SPACE 3
PIUTHD3  DC    C'DEST   SRCE    BYTE0 BYTE1  DAF OAF  TAG1 TAG2  DCF   X
                BYTE0 BYTE1 BYTE2'
         SPACE 3
PIUTSW   DC    AL1(PIUTSWFT)       PIUT TRACE SWITCH
PIUTSWFT EQU   XXXXSWFT                       FIRST TIME
PIUTSWSE EQU   XXXXSWSE                       SELECTIVE
PIUTSWNH EQU   XXXXSWNH                       NEED HEADER 1
PIUTSWTR EQU   XXXXSWTR                       ACTIVE
PIUTSWDV EQU   XXXXSWDV                       DIVIDED ENTRY
         SPACE 1
PIUTSEQO DS    XL1                      PIUT  TRACE SEQUENCE
         DS    0H
PIUTPRSH DC    AL2(PIUTPRSE)            PIUT RECORD SIZE H
         SPACE 1
PIUTX    DC    10XL3'00'                PIUT TRACE SELECT TABLE
         DC    X'00'                    END OF TABLE
         TITLE '- STCB - SUBTASK  TRACE  MESSAGES'
STCBHD1  DC    C'***** SUBTASK TRACE *****     SEQUENCE - 00     AVT ADX
               DRESS - 000000 '
         ORG   STCBHD1+41
STCBHD1S DS   0CL2
         ORG   STCBHD1+62
STCBHD1A DS   0CL6
         ORG   ,
         SPACE 3
STCBHD2  DC    C'                     PRI  ELE  XX  ENTRY FL   QCB  ML C
                STCB                            PRI  ELE  FE  ENTRY FL C
                 QCB  ML   LCB'
         SPACE 3
STCBHD3  DC    C'  (IF POST  SYNC)   (FE)          (-14-)    (-12-)    C
               (-15-)        (IF POST ASYNC)   (FF)          (-00-)    C
               (-00-)    (-00-)'
         SPACE 3
STCBSW   DC    AL1(STCBSWFT)       STCB TRACE SWITCH
STCBSWFT EQU   XXXXSWFT                       FIRST TIME
STCBSWSE EQU   XXXXSWSE                       SELECTIVE
STCBSWNH EQU   XXXXSWNH                       NEED HEADER 1
STCBSWTR EQU   XXXXSWTR                       ACTIVE
STCBSWDV EQU   XXXXSWDV                       FIRST HALF
         SPACE 1
STCBSEQO DS    X                        STCB  TRACE SEQ OLD
         DS    0H
STCBPRSH DC    AL2(STCBPRSE)              STCB RECORD SIZE
STCBX    DC    10XL4'00'                STCB TRACE SELECT TABLE
         DC    X'00'                    END OF TABLE
         TITLE '- STCB - SUBTASK TRACE CONSTANTS AND COUNTERS'
STCBM    EQU   *
STCBM00  DC    C'WAIT                   '
STCBM02  DC    C'POST                   '
STCBM04  DC    C'TWO BYTE STCB          '
STCBM06  DC    C'FOUR BYTE STCB         '
STCBM08  DC    C'SIX BYTE STCB          '
STCBM0A  DC    C'EIGHT BYTE STCB        '
STCBM0C  DC    C'RECEIVE SCHED          '
STCBM0E  DC    C'SEND SCHED             '
STCBM10  DC    C'GET SCHED              '
STCBM12  DC    C'PUT SCHED              '
STCBM14  DC    C'GET FIFO SCHED         '
STCBM16  DC    C'LOG SCHED              '
STCBM18  DC    C'DIAL SCHED             '
STCBM1A  DC    C'BUFFR TERM SCHED       '
STCBM1C  DC    C'RETRIEVE SCHED         '
STCBM1E  DC    C'LOCAL REC SCHED        '
STCBM20  DC    C'CONC SEND SCHED        '
STCBM22  DC    C'3705 SEND SCHED        '
STCBM24  DC    C'3705 RECV SCHED        '
STCBM26  DC    C'COMBUF                 '
STCBMPSF DC    C'QCB POSTED TO SELF     '
STCBMUNK DC    C'UNKNOWN QCB            '
STCBMDLY DC    C'TIME DELAY             '
STCBMAVB DC    C'AVAILABLE BUFFER       '
STCBMBFR DC    C'BUFFER RETURN          '
STCBMACT DC    C'ACTIVATE               '
STCBMCDC DC    C'CLOSEDOWN COMPLETE     '
STCBMRTD DC    C'REMV FROM TIME DLY     '
STCBMDIO DC    C'DISK I / O             '
STCBMCPC DC    C'CPB CLEANUP            '
STCBMPCP DC    C'POST - CHECKPOINT      '
STCBMPOC DC    C'POST - OP CONTROL      '
STCBMPOT DC    C'POST - ON LINE TEST    '
STCBMPAQ DC    C'POST ON ASYNC QUEUE    '
STCBMPSQ DC    C'POST ON SYNC QUEUE     '
         EJECT
STCBTBLE DS    0H                  TABLE OFFSET TO MESSAGES
         DC    AL2(STCBM00-STCBM)
         DC    AL2(STCBM02-STCBM)
         DC    AL2(STCBM04-STCBM)
         DC    AL2(STCBM06-STCBM)
         DC    AL2(STCBM08-STCBM)
         DC    AL2(STCBM0A-STCBM)
         DC    AL2(STCBM0C-STCBM)
         DC    AL2(STCBM0E-STCBM)
         DC    AL2(STCBM10-STCBM)
         DC    AL2(STCBM12-STCBM)
         DC    AL2(STCBM14-STCBM)
         DC    AL2(STCBM16-STCBM)
         DC    AL2(STCBM18-STCBM)
         DC    AL2(STCBM1A-STCBM)
         DC    AL2(STCBM1C-STCBM)
         DC    AL2(STCBM1E-STCBM)
         DC    AL2(STCBM20-STCBM)
         DC    AL2(STCBM22-STCBM)
         DC    AL2(STCBM24-STCBM)
         DC    AL2(STCBM26-STCBM)
         DC    AL2(STCBMPSF-STCBM)
         DC    AL2(STCBMUNK-STCBM)
STCBMESS EQU   *
         DC    AL2(STCBMDLY-STCBM)
         DC    AL2(STCBMAVB-STCBM)
         DC    AL2(STCBMBFR-STCBM)
         DC    AL2(STCBMPCP-STCBM)
         DC    AL2(STCBMPOC-STCBM)
         DC    AL2(STCBMPOT-STCBM)
         DC    AL2(STCBMACT-STCBM)
         DC    AL2(STCBMCDC-STCBM)
         DC    AL2(STCBMRTD-STCBM)
         DC    AL2(STCBMDIO-STCBM)
         DC    AL2(STCBMCPC-STCBM)
STCBPSQ  DC    AL2(STCBMPSQ-STCBM)
STCBPAQ  DC    AL2(STCBMPAQ-STCBM)
         SPACE 1
STCBLTEE EQU   2
         SPACE 3
STCBTBLP EQU   *
         DC    AL1(STCBPSQ-STCBTBLE)
         DC    AL1(STCBPAQ-STCBTBLE)
         EJECT
         DS    0F
STCBDSPX EQU   *
         DC    A(AVTDELYB-IEDQAVTD)
         DC    A(AVTBFREB-IEDQAVTD)
         DC    A(AVTBFRTB-IEDQAVTD)
         DC    A(AVTCKPTB-IEDQAVTD)
         DC    A(AVTOPCOB-IEDQAVTD)
         DC    A(AVTOLTQB-IEDQAVTD)
         DC    A(AVTACTIB-IEDQAVTD)
         DC    A(AVTCLOSB-IEDQAVTD)
         DC    A(AVTCPRMB-IEDQAVTD)
         DC    A(AVTDSIOB-IEDQAVTD)
         DC    A(AVTCPBCB-IEDQAVTD)
         DC    X'00FFFFFF'
STCBLAEE EQU   4                          LENGTH OF ENTRY
         TITLE '- UNKN - UNKNOWN TRACE MESSAGES'
UNKNHD1  DC    C'***** UNKNOWN TRACE ENTRY TYPE ***** '
         SPACE 1
         DS    0H
UNKNPRSH DC    AL2(UNKNPRSE)           UNKN PACK RECORD SIZE H
         ORG   ,
         TITLE '- USER - USER TRACE MESSAGES'
USERHD1  DC    C'***** USER TRACE *****     SEQUENCE - 00'
         ORG   USERHD1+38
USERHD1S DS   0CL2
         ORG   ,
         SPACE 3
USERSW   DC    AL1(USERSWFT)      USER TRACE SWITCH
USERSWFT EQU   XXXXSWFT                      FIRST TIME
USERSWSE EQU   XXXXSWSE                      SELECTIVE
USERSWNH EQU   XXXXSWNH                      NEED HEADER 1
USERSWTR EQU   XXXXSWTR                      TRACE ACTIVE
USERSWDV EQU   XXXXSWDV                      DIVIDED ENTRY
         SPACE 1
USERSEQO DS    XL1                     USER  TRACE SEQUENCE
         DS    0H
USERPRSH DC    AL2(USERPRSE)           USER PACH RECORD SIZE H
         TITLE '- IEDQXB - MESSAGES'
IED118I  WTO   'IED118I PERMANENT I/O ERROR ON TRACE UNIT',MF=L,       C
               ROUTCDE=11,DESC=4
         SPACE 2
IED119I  WTO   'IED119I UNABLE TO OPEN ''SYSUT1    ''.',MF=L,          C
               ROUTCDE=11,DESC=7
         ORG   IED119I+40
IED119IT DS   0CL10                     DATA SET NAME
         ORG   ,
         SPACE 2
IED121I  WTO   'IED121I REQUESTED TIME NOT FOUND. NO TIME STAMP EXIST',X
               MF=L,ROUTCDE=11,DESC=7
         SPACE 2
IED123I  WTO   'IED123I INVALID PARAMETERS.',MF=L,ROUTCDE=11,DESC=7
         SPACE 2
IED623I  WTO   'IED623I 000 NAME TRACE SEQUENCE ENTRIES MISSING',MF=L, X
               ROUTCDE=(8,11),DESC=7
         ORG   IED623I+12
IED623IC DS   0CL3                      NUMBER OF MISSING SEQ
         ORG   IED623I+16
IED623IN DS   0CL4                      TRACE NAME
         ORG   ,
         SPACE 2
SEQMSG   DC    C'*********  SEQUENCE ERROR  -  ENTRY MISSING  *********C
               ******'
         TITLE '- IEDQXB - TRACE FORMAT PROGRAM - DATA CONTROL BLOCKS'
TRACETP  DCB   DSORG=PS,DDNAME=SYSUT1,MACRF=GL,                        C
               RECFM=U,EXLST=DCBXITL,EODAD=ENDTRACE,                   C
               SYNAD=TPERROR,EROPT=ACC
         SPACE 1
SYSPRINT DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=PM,                      C
               RECFM=FBA,LRECL=133,EXLST=DCBXITL
         SPACE 3
***********************************************************************
*        INPUT DATA-SET SYNAD ERROR ROUTINE, SET SWITCHES
*        TO CAUSE ERROR MSG AFTER PROCESSING RECORD IN ERROR.
***********************************************************************
TPERROR  EQU   *
         OI    EXECSW,EXECSWLE          SET ERROR INDICATOR.
         BR    R14                      RETURN TO EOV.
         SPACE 3
***********************************************************************
*        DCB EXIT LIST ROUTINE                                        *
***********************************************************************
DCBXITL  DS    0F
         DC    AL1(133),AL3(DCBXIT)
         USING *,R15                    EXIT ROUTINE BASE REG.
DCBXIT   OC    DCBBLKSZ(2,R1),DCBBLKSZ(R1) TEST IF BLKSIZE SPEC
         BCR   7,R14                    YES - BYPASS CHANGE.
         LA    R1,0(R1)                 CLEAR HIGH ORDER BYTE.
         CL    R1,PRTDCBAD              TEST IF INPUT DCB.
         BNE   INPUT                    YES - BRANCH.
         MVC   DCBBLKSZ(2,R1),DCBLRECL(R1) SET UNBLOCKED.
         BR    R14                      RETURN TO OPEN.
INPUT    MVC   DCBBLKSZ(2,R1),DEFBLK    SET TO 1000 ENTRIES
         BR    R14                      RETURN TO OPEN.
         TITLE '- BUFF - BUFFER TRACE DSECTS'
BUFFI    DSECT
BUFFIC   DS    CL1                      CONTINUATION
BUFFICIN DS   0CL5                      BUFF=(ENTRY)
         DS    CL4                      XXCIN
BUFFICXL EQU   *-BUFFIC                 LENGTH OF BUFFI
         SPACE 1
BUFFXXD  DSECT
BUFFCX   DS    XL1                      CURRENT ENTRY
BUFFCS   EQU   X'80'                            SINGLE
BUFFCT   EQU   X'40'                            THRU
BUFFCCIN DS    XL2                              XXCIN
BUFFXL   EQU   *-BUFFXXD                LENGTH OF BUFFXXD
BUFFNX   DS    XL1                      NEXT    ENTRY
BUFFNT   EQU   X'40'                            THRU ENTRY
BUFFNCIN DS    XL2                              XXCIN
         SPACE 1
BUFFPHD  DSECT
BUFFPHDR DS   0XL16                BUFF PACK HEADER REC
BUFFPID  DS    XL4                           ID
BUFFPHMS DS    XL4                           HH-MM-SS
         DS    XL1
BUFFPYD  DS    XL3                           YY-DDD
BUFFPIDI DS    XL1                           BUFFER ID
         DS    XL2
BUFFPSEQ DS    XL1                           SEQUENCE NUMBER
BUFFPHSE EQU   *-BUFFPHDR          SIZE OF PACK HEADER
         SPACE 1
BUFFUHD  DSECT
BUFFUHDR DS   0CL32                BUFF UNPK HEADER REC
BUFFUID  DS    CL8                           ID
BUFFUHMS DS    CL8                           HH-MM-SS
         DS    CL2
BUFFUYD  DS    CL6                           YY-DDD
BUFFPUDI DS    CL2                           BUFFER ID
         DS    CL4
BUFFUSEQ DS    CL2                           SEQUENCE NUMBER
         SPACE 1
BUFFPR   DSECT
BUFFPPRX DS   0XL74                BUFF PACK XX RECORD
BUFFPPRI DS    XL1                              PRIORITY
BUFFPELE DS    XL3                              ELEMENT
BUFFPSCB DS    XL4                              SCB ERROR WORD
BUFFPCSW DS    XL4                              CSW
BUFFPSNS DS    XL1                              SENSE
BUFFPIOB DS    XL2                              IOB FLAG 1 & 2
BUFFPERB DS    XL1                              ERB STATUS
BUFFPLCS DS    XL2                              LCB STATUS
BUFFPCUU DS    XL2                              0CUU ADDRESS
BUFFPPRF DS    XL30                             BUFFER PREFIX
         DS    XL46                             BUFFER PREFIX
BUFFPBSE EQU   *-BUFFPPRX                       BUFFER SIZE E
         DS    XL864                            BUFFER RECORD
BUFFPRSE EQU   *-BUFFPPRX                       BUFFER RECORD SIZE E
         SPACE 1
BUFFUR   DSECT
BUFFUPRX DS   0CL148               BUFF PACK XX RECORD
BUFFUPRI DS    CL2                           PRIORITY
BUFFUELE DS    CL6                           ELEMENT ADD
BUFFUSCB DS    CL8                           SCB ERROR WD
BUFFUCSW DS    CL8                           CSW
BUFFUSNS DS    CL2                           SENSE
BUFFUIOB DS    CL4                           IOB FLAG 1 & 2
BUFFUERB DS    CL2                           ERB STATUS
BUFFULCS DS    CL4                           LCB STATUS
BUFFUCUU DS    CL4                           0CUU ADRESS
BUFFUBNT DS    CL2                           PRFNBUNT
BUFFULCB DS    CL6                           PRFLCB
BUFFUSRC DS    CL4                           PRFSRCE
BUFFUSZE DS    CL4                           PRFSIZE
BUFFUST1 DS    CL2                           PRFSTAT1
BUFFUXTR DS    CL6                           PRFXTRA
BUFFUSCN DS    CL4                           PRFSCAN
BUFFUNTX DS    CL6                           PRFNTXT
BUFFUCRC DS    CL6                           PRFCRCD
BUFFUNHD DS    CL6                           PRFNHDR
BUFFUHQB DS    CL6                           PRFHQBCK
BUFFUISQ DS    CL4                           PRFISEQ
BUFFUDST DS    CL4                           PRFDEST
         SPACE 1
BUFFOR   DSECT
BUFFOPRX DS   0CL132               BUFF OUTPUT HEADER 1 RECORD
BUFFOPRI DS    CL2                             PRIORITY
         DS    CL1
BUFFOELE DS    CL6                             ELEMENT ADD
         DS    CL1
BUFFOSCB DS    CL8                             SCB ERROR WORD
         DS    CL1
BUFFOCSW DS    CL8                             CSW
         DS    CL1
BUFFOSNS DS    CL2                             SENSE
         DS    CL1
BUFFOIOB DS    CL4                             IOB FLAG 1 & 2
         DS    CL1
BUFFOERB DS    CL2                             ERB STATUS
         DS    CL1
BUFFOLCS DS    CL4                             LCB STATUS
         DS    CL1
BUFFOCUU DS    CL4                             0CUU ADRESS
         DS    CL1
BUFFOBNT DS    CL2                             PRFNBUNT
         DS    CL1
BUFFOLCB DS    CL6                             PRFLCB
         DS    CL1
BUFFOSRC DS    CL4                             PRFSRCE
         DS    CL1
BUFFOSZE DS    CL4                             PRFSIZE
         DS    CL1
BUFFOST1 DS    CL2                             PRFSTAT1
         DS    CL1
BUFFOXTR DS    CL6                             PRFXTRA
         DS    CL1
BUFFOSCN DS    CL4                             PRFSCAN
         DS    CL1
BUFFONTX DS    CL6                             PRFNTXT
         DS    CL1
BUFFOCRC DS    CL6                             PRFCRCD
         DS    CL1
BUFFONHD DS    CL6                             PRFNHDR
         DS    CL1
BUFFOHQB DS    CL6                             PRFHQBCK
         DS    CL1
BUFFOISQ DS    CL4                             PRFISEQ
         DS    CL1
BUFFODST DS    CL4                             PRFDEST
         SPACE 1
BUFFPTR  DSECT
BUFFPTXR DS   0XL53                     PACK DATA
BUFFPTX1 DS    XL32                               32 BYTES
BUFFPTX2 DS    XL21                               21 BYTES
         SPACE 1
BUFFUTR  DSECT
BUFFUTXR DS   0CL106                    UNPK DATA
BUFFUTX1 DS    CL32                               16 BYTES
BUFFUTX2 DS    CL32                               16 BYTES
BUFFUTX3 DS    CL32                               16 BYTES
BUFFUTX4 DS    CL5                                 5 BYTES
         SPACE 1
BUFFOTR  DSECT
BUFFOTXR DS    CL10                            DATA
BUFFOTXH DS   0CL28                                 HEADER
BUFFOTX1 DS    CL32                                 UNPACKED
         DS    CL2
BUFFOTXT DS   0CL10                                 TEXT
BUFFOTX2 DS    CL32                                 UNPACKED
         DS    CL11
BUFFOTPS DS    C                                    *
BUFFOTPH DS   0CL14                                 HEADER
BUFFOTPT DS   0CL21                                 TEXT
BUFFOTPX DS    CL32                                 PACKED
BUFFOTPE DS    C                                    *
         TITLE '- IOTR - I / O TRACE DSECTS'
IOTRI    DSECT
IOTRIC   DS    CL1                      CONTINUATION
IOTRICUU DS   0CL5                      IOTR=ENTRY
         DS    CL4                      CUU ADDRESS
IOTRICUL EQU   *-IOTRIC                 LENGTH OF IOTRI
         SPACE 1
IOTRXXD  DSECT
IOTRCX   DS    CL1
IOTRCS   EQU   X'80'                    LINE ENTRY
IOTRCT   EQU   X'40'                    THRU ENTRY
IOTRCCUU DS    CL2                      0CUU ADDRESS
IOTRXL   EQU   *-IOTRCX                 LENGTH OF IOTRXL
         SPACE 1
IOTRPH   DSECT
IOTRPHDR DS   0XL16                     IOTR PACK HEADER
IOTRPID  DS    XL4                                ID
IOTRPHMS DS    XL4                                HH-MM-SS
         DS    XL1
IOTRPYD  DS    XL3                                YY-DDD
         DS    XL3
IOTRPSEQ DS    XL1                                SEQ NUMBER
         SPACE 1
IOTRUH   DSECT
IOTRUHDR DS   0CL32                     IOTR UNPK HEADER
IOTRUID  DS    CL8                                ID
IOTRUHMS DS    CL8                                HH-MM-SS
         DS    CL2
IOTRUYD  DS    CL6                                YY-DDD
         DS    CL6
IOTRUSEQ DS    CL2                                SEQ NUMBER
         SPACE 1
IOTRPXX  DSECT
IOTRPXXR DS   0XL16                     IOTR PACK XX RECORD
IOTRPXXI DS   0XL1                                XX ID
IOTRPF0I EQU   X'F0'                    IOTRPF0I ENTRY ID
IOTRPFAI EQU   X'FA'                    IOTRPFAI ENTRY ID
IOTRPFFI EQU   X'FF'                    IOTRPFFI ENTRY ID
IOTRPIDC DS    XL2                                ID 0CUU
         DS    XL2                                XX X
IOTRPFAN DS   0XL8                                FA NAME
         DS    XL6                                XX X
IOTRPFXL DS    XL2                                XX CCW LENGTH
         DS    XL4                                XX X
IOTRPRSE EQU   *-IOTRPXXR               IOTR PACK RECORD SIZE E
         SPACE 1
IOTRUIDD DSECT
IOTRUIDR DS   0CL32                     IOTR UNPK ID RECORD
IOTRUIDC DS    CL4                                0CUU
IOTRUIDQ DS    CL4                                SEQUENCE
IOTRUIDF DS    CL2                                IOB FLAG 1
IOTRUIDS DS    CL6                                START
IOTRUIDN DS    CL2                                SENSE
IOTRUIDW DS    CL6                                CSW WORD 1
IOTRUIDX DS    CL6                                CSW WORD 2
         SPACE 1
IOTROID  DSECT
IOTROIDR DS   0CL40                     IOTR OUTPUT ID RECORD
IOTROIDI DS    CL2                                  ID
         DS    CL1
IOTROIDC DS    CL4                                  0CUU
         DS    CL1
IOTROIDQ DS    CL4                                  SEQUENCE
         DS    CL1
IOTROIDF DS    CL2                                  IOB FLAG 1
         DS    CL1
IOTROIDS DS    CL6                                  START
         DS    CL1
IOTROIDN DS    CL2                                  SENSE
         DS    CL1
IOTROIDW DS    CL6                                  CSW WORD 1
         DS    CL1
IOTROIDX DS    CL8                                  CSW WORD 2
         DS    CL2
         SPACE 1
IOTRUFA  DSECT
IOTRUFAR DS   0CL32                     IOTR UNPK FA RECORD
IOTRUFAI DS    CL2                                ID
         DS    CL2                                XX
IOTRUFAT DS    CL4                                TERM INDEX
IOTRUFAN DS    CL16                               NAME
IOTRUFAC DS    CL2                                LCBECBCC
IOTRUFAV DS    CL6                                LCBINVPT
         SPACE 1
IOTROFA  DSECT
IOTROFAR DS   0CL132                    IOTR OUTPUT FA RECORD
IOTROFAI DS    CL2                                ID
         DS    CL41
IOTROFAX DS   0CL58
         DS    CL11                                 LCBTTCIN -
IOTROFAT DS    CL4                                  TERM INDEX
         DS    CL8                                  TERM -
IOTROFAN DS    CL8                                  NAME
         DS    CL12                                 LCBECBCC -
IOTROFAC DS    CL2                                  ECB CC
         DS    CL12                                 LCBINVPT -
IOTROFAV DS    CL6                                  LCBINVPT
         SPACE 1
IOTRUFX  DSECT
IOTRUFXR DS   0CL32                IOTR UNPK F0 RECORD
IOTRUFXI DS    CL2                           INDICATOR
IOTRUFXA DS    CL6                           CCW ADDRESS
IOTRUFXC DS    CL8                           CCW WORD 1
IOTRUFXX DS   0CL8                           CCW WORD 2
IOTRUFLG DS    CL2                           FLAGS
IOTRUFXT DS    CL2                           TP OP CODE
IOTRUFXL DS    CL4                           CCW DATA LENGTH
IOTRUFXD DS    CL8                           DATA
         SPACE 1
IOTRUFF  DSECT
IOTRUFFR DS   0CL32
IOTRUFFD DS    CL32
         SPACE 1
IOTROFX  DSECT
IOTROFXR DS   0CL132               IOTR OUTPUT F0 RECORD
IOTROFXI DS    CL2                             INDICATOR
         DS    CL41
IOTROFXA DS    CL6                             CCW ADDRESS
         DS    CL5
IOTROFXC DS    CL8                             CCW WORD 1
         DS    CL1
IOTROFXX DS    CL8                             CCW WORD 2
         DS    CL4
IOTROFXD DS    CL8                             F0 DATA
IOTROFFD DS    CL32                            FF DATA
         DS    CL2
         TITLE '- LINT - NCP LINE TRACE TYPE 2 SCANNER DSECTS'
LINTPH   DSECT
LINTPHDR DS   0XL16                LINT PACK HEADER
LINTPID  DS    XL4                           ID
LINTPHMS DS    XL4                           HH-MM-SS
         DS    XL1
LINTPYD  DS    XL3                           YY-DDD
         DS    XL3
LINTPSEQ DS    XL1                           SEQUENCE
LINTPGRL DS    XL12                          GROUP , RLN
LINTPGRE EQU   *-LINTPGRL                    GROUP , RLN E
         SPACE 1
LINTUH   DSECT
LINTUHDR DS   0CL32                LINT UNPK HEADER
LINTUID  DS    CL8                           ID
LINTUHMS DS    CL8                           HH-MM-SS
         DS    CL2
LINTUYD  DS    CL6                           YY-DDD
         DS    CL6
LINTUSEQ DS    CL2                           SEQUENCE
         SPACE 1
LINTPR   DSECT
LINTPREC DS   0XL48                LINT PACK RECORD
LINTPRER DS    XL4                           RECORD 1
LINTPRSE EQU   *-LINTPRER                    SIZE E
         DS    XL44                          RECORD 2-12
LINTPREN EQU   ((*-LINTPRER)/LINTPRSE)       NUMBER OF ENTRIES
LINTUR   DSECT
LINTUREC DS   0CL96                LINT UNPK RECORD
LINTURER DS    CL8                           RECORD 1
LINTURSE EQU   *-LINTURER                    SIZE E
LINTOR   DSECT
LINTOREC DS   0CL132               LINT OUTPUT RECORD
LINTORER DS    CL8                           RECORD 1
         DS    CL1
LINTORSE EQU   *-LINTORER                    SIZE E
         TITLE '- LIN3 - NCP LINE TRACE TYPE 3 SCANNER DSECTS'
         SPACE 1
LIN3PH   DSECT
LIN3PHDR DS   0XL16                LIN3 PACK HEADER
LIN3PID  DS    XL4                           ID
LIN3PHMS DS    XL4                           HH-MM-SS
         DS    XL1
LIN3PYD  DS    XL3                           YY-DDD
         DS    XL3
LIN3PSEQ DS    XL1                           SEQUENCE
LIN3PGRL DS    XL12                          GROUP , RLN
LIN3PGRE EQU   *-LIN3PGRL                    GROUP , RLN   E
         SPACE 1
LIN3UH   DSECT
LIN3UHDR DS   0CL32                LIN3 UNPK HEADER
LIN3UID  DS    CL8                           ID
LIN3UHMS DS    CL8                           HH-MM-SS
         DS    CL2
LIN3UYD  DS    CL6                           YY-DDD
         DS    CL6
LIN3USEQ DS    CL2                           SEQUENCE
         SPACE 1
LIN3PSR  DSECT
LIN3PSRT DS   0XL12               LIN3 PACK STATUS RECORD
LIN3PSRC DS    XL2                          COUNT
LIN3PXCE EQU   *-LIN3PSRT                   COUNT E
LIN3PSRR DS   0XL8                          STATUS
LIN3PSSF DS    XL1                          SCF
LIN3PLCD DS    XL1                          LCD/PCF
LIN3PPCX DS    XL1                          EPCF
LIN3PST1 DS    XL1                          STAT 1
LIN3PST2 DS    XL1                          STAT 2
LIN3PTME DS    XL1                          TIME
LIN3PADR DS    XL1                          ADDR
LIN3PCNT DS    XL1                          CNTL
LIN3PSRE EQU   *-LIN3PSRR                   RECORD E
         SPACE 1
LIN3USR  DSECT
LIN3USRR DS   0CL16               LIN3 UNPK STATUS RECORD
LIN3USCF DS    CL2                          SECONDARY CONTROL FLD
LIN3ULCD DS    CL1                          LINE CONTROL DEFINER
LIN3UPCF DS    CL1                          PRIMARY CONTROL FIELD
LIN3UPCX DS    CL2                          EXTENDED PC FIELD
LIN3UST1 DS    CL2                          STATUS BYTE 1
LIN3UST2 DS    CL2                          STATUS BYTE 2
LIN3UTMF DS    CL2                          TIMER FIELD
LIN3USAC DS    CL2                          SDLC ADDRESS CHAR
LIN3USCC DS    CL2                          SDLC CONTROL CHAR
         SPACE 1
LIN3OSR  DSECT
LIN3OSRR DS   0CL132         LIN3 OUTPUT STATUS RECORD
         DS    CL9
LIN3OSCF DS    CL2                       SECONDARY CONTROL FLD
         DS    CL3
LIN3OLCD DS    CL1                       LINE CONTROL DEFINER
         DS    CL3
LIN3OPCF DS    CL1                       PRIMARY CONTROL FIELD
         DS    CL3
LIN3OPCX DS    CL2                       EXTENDED PC FIELD
         DS    CL3
LIN3OST1 DS    CL2                       STATUS BYTE 1
         DS    CL4
LIN3OST2 DS    CL2                       STATUS BYTE 2
         DS    CL4
LIN3OTMF DS    CL2                       TIMER FIELD
         DS    CL3
LIN3OSAC DS    CL2                       SDLC ADDRESS CHAR
         DS    CL3
LIN3OSCC DS    CL2                       SDLC CONTROL CHAR
         DS    CL6
LIN3ORSE EQU   *-LIN3OSRR                SIZE E
         SPACE 1
LIN3PDR  DSECT
LIN3PDRT DS    0XL42          LIN3 PACK DATA RECORD
LIN3PDRC DS     XL2                          LENGTH
LIN3PDRI EQU   X'80'                         DATA IND
LIN3PDRR DS    0XL40                         RECORD
LIN3PDRX DS     XL4                          RECORD 1
LIN3PDRE EQU    *-LIN3PDRX                   LENGTH OF ENTRY
         DS     XL36                                2-10
LIN3PDRN EQU    ((*-LIN3PDRX)/LIN3PDRE)      NUMBER OF ENTRIES
         SPACE 1
LIN3UDR  DSECT
LIN3UDRR DS   0CL80          LIN3 UNPK DATA RECORD
LIN3UDRX DS    CL8                          RECORDX
LIN3UDRE EQU   *-LIN3UDRX          LIN3 UNPK DATA   RECORD E
         SPACE 1
LIN3ODR  DSECT
LIN3ODRR DS   0CL132         LIN3 PACK DATA RECORD
         DS    CL9                          DATA -
LIN3ODRX DS    CL8                          RECORDX
         DS    CL1
LIN3ODRE EQU   *-LIN3ODRX          LIN3 OUTPUT DATA RECORD E
         TITLE '- PIUT - PIU TRACE DSECTS'
PIUTI    DSECT
PIUTIC   DS    CL1                      CONTINUATION
PIUTIRSI DS   0CL5                      PIUT= ENTRY
         DS    CL4                      RESOURCE ID
PIUTIRSL EQU   *-PIUTIC                 LENGTH OF PIUTI
         SPACE 1
PIUTXXD  DSECT
PIUTCX   DS    XL1                      CURRENT ENTRY
PIUTCS   EQU   X'80'                            SINGLE
PIUTCT   EQU   X'40'                            THRU
PIUTCRSI DS    XL2                              RESOURCE ID
PIUTXL   EQU   *-PIUTXXD                LENGTH OF PIUTXXD
PIUTNX   DS    XL1                      NEXT    ENTRY
PIUTNT   EQU   X'40'                            THRU
PIUTNRSI DS    XL2                              RESOURCE ID
         SPACE 1
PIUTPH   DSECT
PIUTPHDR DS   0XL32                PIUT PACK HEADER RECORD
PIUTPID  DS    XL4                           ID
PIUTPHMS DS    XL4                           HH-MM-SS
         DS    XL1
PIUTPYD  DS    XL3                           YY-DDD
         DS    XL3
PIUTPSEQ DS    XL1                           SEQUENCE
         SPACE 1
PIUTUH   DSECT
PIUTUHDR DS   0CL64                PIUT UNPK HEADER RECORD
PIUTUID  DS    CL8                           ID
PIUTUHMS DS    CL8                           HH-MM-SS
         DS    CL2
PIUTUDY  DS    CL6                           DDD-YY
         DS    CL6
PIUTUSEQ DS    CL2                           SEQUENCE
         SPACE 1
PIUTPR   DSECT
PIUTPREC DS   0XL32                PIUT PACK RECORD
PIUTPDTI DS    XL2                      DEST TTCIN
PIUTPSTI DS    XL2                      SRCE TTCIN
PIUTPTH0 DS    XL1                      TH BYTE 0
PIUTPTH1 DS    XL1                      TH BYTE 1
PIUTPDAF DS    XL2                      DAF
PIUTPOAF DS    XL2                      OAF
PIUTPTG1 DS    XL1                      TH TAG 1
PIUTPTG2 DS    XL1                      TH TAG 2
PIUTPRHC DS    XL2                      RH/RU COUNT
PIUTPRH0 DS    XL1                      RH BYTE 0
PIUTPRH1 DS    XL1                      RH BYTE 1
PIUTPRH2 DS    XL1                      RH BYTE 2
PIUTPRUX DS    XL15                     REQUEST UNIT
PIUTPRSE EQU   *-PIUTPREC               PIUT RECORD SIZE E
         SPACE 1
PIUTUR   DSECT
PIUTUREC DS   0XL64                PIUT UNPK RECORD
PIUTUDTI DS    CL4                      DEST TNT INDEX
PIUTUSTI DS    CL4                      SRCE TNT INDEX
PIUTUTH0 DS    CL2                      TH BYTE 0
PIUTUTH1 DS    CL2                      TH BYTE 1
PIUTUDAF DS    CL4                      DEST NETWORK ADDRESS
PIUTUOAF DS    CL4                      SRCE NETWORK ADDRESS
PIUTUTG1 DS    CL2                      TH TAG 1
PIUTUTG2 DS    CL2                      TH TAG 2
PIUTURHC DS    CL4                      RH/RU COUNT
PIUTURH0 DS    CL2                      RH BYTE 0
PIUTURH1 DS    CL2                      RH BYTE 1
PIUTURH2 DS    CL2                      RH BYTE 2
PIUTURUX DS    CL30                     REQUEST UNIT
         SPACE 1
PIUTOR   DSECT
PIUTOREC DS   0XL132               PIUT OUTPUT RECORD
PIUTODTI DS    CL4                      DEST TNT INDEX
         DS    CL3
PIUTOSTI DS    CL4                      SRCE TNT INDEX
         DS    CL6
PIUTOTH0 DS    CL2                      TH BYTE 0
         DS    CL4
PIUTOTH1 DS    CL2                      TH BYTE 1
         DS    CL2
PIUTODAF DS    CL4                      DEST NETWORK ADDRESS
         DS    CL1
PIUTOOAF DS    CL4                      SRCE NETWORK ADDRESS
         DS    CL2
PIUTOTG1 DS    CL2                      TH TAG 1
         DS    CL3
PIUTOTG2 DS    CL2                      TH TAG 2
         DS    CL2
PIUTORHC DS    CL4                      RH/RU COUNT
         DS    CL6
PIUTORH0 DS    CL2                      RH BYTE 0
         DS    CL4
PIUTORH1 DS    CL2                      RH BYTE 1
         DS    CL4
PIUTORH2 DS    CL2                      RH BYTE 2
         DS    CL6
PIUTORUX DS    CL30                     REQUEST UNIT
         TITLE '- STCB - SUBTASK TRACE DSECTS'
STCBI    DSECT
STCBIC   DS    CL1                      CONTINUATION
STCBIELE DS   0CL7                      STCB=(ENTRY)
         DS    CL6                      ELEMENT ADDRESS
STCBIELL EQU   *-STCBIC                 LENGTH OF STCBI
         SPACE 1
STCBXXD  DSECT
STCBCX   DS    XL1                      CURRENT ENTRY
STCBCS   EQU   X'80'                            SINGLE
STCBCT   EQU   X'40'                            THRU
STCBCELE DS    XL3                              ADDRESS
STCBXL   EQU   *-STCBXXD                LENGTH OF STCBXXD
STCBNX   DS    XL1                      NEXT    ENTRY
STCBNT   EQU   X'40'                            THRU
STCBNELE DS    XL3                              ADDRESS
         SPACE 1
STCBPH   DSECT
STCBPHDR DS   0XL16                     STCB PACK HEADER REC
STCBPID  DS    XL4                                ID
STSBPHMS DS    XL4                                HH-MM-SS
         DS    XL1                                SEQ NUMBER
STCBPYD  DS    XL3                                YY-DDD
STCBPSEQ DS    XL1                                SEQ NUMBER
STCBPAVT DS    XL3                                AVT ADDRESS
         SPACE 1
STCBUH   DSECT
STCBUHDR DS   0CL32                     STCB UNPK HEADER REC
STCBUID  DS    CL8                                ID
STSBUHMS DS    CL8                                HH-MM-SS
STCBUYD  DS    CL8                                YY-DDD
STCBUSEQ DS    CL2                                SEQ NUMBER
STCBUAVT DS    CL6                                AVT ADDRESS
STCBPR   DSECT
STCBPREC DS   0XL16                     STCB PACK   INPUT REC
STCBPPRI DS   0XL1                      ELEMENT PRIORITY
STCBPPST DS    XL1                      POST    INDICATOR
STCBPELE DS    XL3                      ELEMENT ADDRESS
STCBPBUF DS    XL1                      BUFFER  INDICATOR
STCBPENT DS   0XL3                      ENTRY   ADDRESS
STCBPEXT DS    XL3                      EXIT    ADDRESS
STCBPRGC DS   0XL4                      REG 12  CONTENTS
STCBPQCP DS    XL1                      ELEMENT QCB PRIORITY
STCBPQCB DS    XL3                      ELEMENT QCB ADDRESS
STCBPRGF DS   0XL4                      REG 15  CONTENTS
STCBPMCP DS    XL1                      MCPL    FIELD
STCBPSTC DS   0XL3                      STCB    ADDRESS
STCBPLCB DS    XL3                      LCB     ADDRESS
STCBPRSE EQU   *-STCBPREC               STCB RECORD SIZE E
         SPACE 1
STCBUNP  DSECT
STCBUREC DS   0CL32                     STCB UN-PACKED RECORD
STCBUPRI DS    CL2                      ELEMENT PRIORITY
STCBUELE DS    CL6                      ELEMENT ADDRESS
STCBUBUF DS    CL2                      BUFFER  INDICATOR
STCBUENT DS    CL6                      ENTRY   ADDRESS
STCBUQCP DS    CL2                      QCB     PRIORITY
STCBUQCB DS    CL6                      QCB     ADDRESS
STCBUMCP DS    CL2                      MCPL    FIELD
STCBUSTC DS    CL6                      STCB    ADDRESS
         SPACE 1
STCBOR   DSECT
STCBOREC DS   0CL132                    STCB    OUTPUT RECORD
STCBOMSG DS    CL20                     ELEMENT COMMENTS
         DS    CL1                      BLANK
STCBOPRI DS    CL2                      ELEMENT PRIORITY
         DS    CL1                      BLANK
STCBOELE DS    CL6                      ELEMENT ADDRESS
         DS    CL1                      BLANK
STCBOBUF DS    CL2                      BUFFER  INDICATOR
         DS    CL1                      BLANK
STCBOENT DS    CL6                      ENTRY   ADDRESS
         DS    CL1                      BLANK
STCBOQCP DS    CL2                      QCB     PRIORITY
         DS    CL1                      BLANK
STCBOQCB DS    CL6                      QCB     ADDRESS
         DS    CL1                      BLANK
STCBOMCP DS    CL2                      MCPL    FIELD
         DS    CL1                      BLANK
STCBOSTC DS    CL6                      STCB    ADDRESS
         TITLE '- UNKN - UNKNOWN DSECTS'
UNKNPH   DSECT                     PACK   HEADER DSECT
UNKNPHXR DS    XL16                              RECORD
         SPACE
UNKNUH   DSECT                     UNPK   HEADER DSECT
UNKNUHXR DS    CL32                              RECORD
         SPACE
UNKNOH   DSECT                     OUTPUT HEADER DSECT
UNKNOHXR DS    CL32                              RECORD
         DS    CL49
UNKNOHXS DS    C                                 *
UNKNOHXP DS    CL16                              HEADER PACKED
UNKNOHXE DS    C                                 *
         SPACE
UNKNPR   DSECT                     PACK   RECORD DSECT
UNKNPRXR DS    XL32                              RECORD
UNKNPRSE EQU   *-UNKNPRXR          PACK RECORD SIZE E
         SPACE
UNKNUR   DSECT                     UNPK   RECORD DSECT
UNKNURXR DS   0CL64                              RECORD
UNKNURX1 DS    CL32                              RECORD 1
UNKNURX2 DS    CL32                              RECORD 2
         SPACE
UNKNOR   DSECT                     OUTPUT RECORD DSECT
UNKNORX1 DS    CL32                              RECORD 1
         DS    CL5
UNKNORX2 DS    CL32                              RECORD 2
         DS    CL12
UNKNORXS DS    C                                 *
UNKNORXP DS    CL32                              RECORD 1
UNKNORXE DS    C                                 *
         TITLE '- USER - USER TRACE DSECTS'
USERPH   DSECT
USERPHDR DS   0XL16           USER PACK HEADER RECORD
USERPID  DS    XL4                             ID
USERPHMS DS    XL4                             HH-MM-SS
         DS    XL1
USERPYD  DS    XL3                             YY-DDD
         DS    XL3
USERPSEQ DS    XL1                             SEQUENCE
         SPACE 1
USERUH   DSECT
USERUHDR DS   0CL32                UNPK HEADER RECORD
USERUID  DS    CL8                             ID
USERUHMS DS    CL8                             HH-MM-SS
         DS    CL2
USERUYD  DS    CL6                             YY-DDD
         DS    CL6
USERUSEQ DS    CL2                             SEQUENCE
         SPACE 1
USERPR   DSECT                     PACK   RECORD DSECT
USERPRXR DS    XL32                              RECORD
USERPRSE EQU   *-USERPRXR          PACK RECORD SIZE E
         SPACE 1
USERUR   DSECT                     UNPK   RECORD DSECT
USERURXR DS   0CL64                              RECORD
USERURX1 DS    CL32                              RECORD 1
USERURX2 DS    CL32                              RECORD 2
         SPACE 1
USEROR   DSECT                     OUTPUT RECORD DSECT
USERORXR DS   0CL132                             RECORD
USERORX1 DS    CL32                              RECORD 1
         DS    CL5
USERORX2 DS    CL32                              RECORD 2
         DS    CL12
USERORXS DS    C
USERORXP DS    CL32                              RECORD 1
USERORXE DS    C
         TITLE '- IEDQXB - DSECTS'
PARMCOMP DSECT
PARMXXXX DS    C                        PARM DSECT
         SPACE 1
TIME     DSECT
TIMEPARM DS    0CL21                    BLOCK=HHMMDDD-HHMMDDD
         DS    CL6                      BLOCK=
TIME1HMD DS    CL7                            HHMMDDD
TIMECONT DS    CL1                                   -
TIME2HMD DS    CL7                                    HHMMDDD
TIMEXSZE EQU   7                        SIZE OF TIMEXHMD
         SPACE 1
XXXXCOMP DSECT
XXXXSEQE DS    PL2                      SEQUENCE ERROR COUNTER
XXXXFLAG DS    XL1                      TRACE FLAG BYTE
XXXXLENE DS    XL1                      LENGTH OF COMPARE
XXXXPARM DS   0CL6                      XXXX=(
XXXXNAME DS    CL8                      NAME OF TRACE ENTRY
XXXXINIT DS    XL4                      ADDRESS TRACE INIT RTN
XXXXTRCE DS    XL4                      ADDRESS TRACE ROUTINE
XXXXCONL EQU   *-XXXXSEQE               LENGTH OF XXXXCOMP ENT
XXXXCONE EQU   (((PARMCEND-PARMCONS)/XXXXCONL)-3) # OF ENTRIES
         SPACE 1
XXXXP    DSECT                     PACK HEADER DSECT
XXXXPACK DS   0XL16                            RECORD
XXXXPID  DS    XL4                             ID
XXXXPTME DS   0XL8                             HH-MM-SS-YY-DDD
XXXXPHMS DS   0XL4                             HH-MM-SS
XXXXPHM  DS   0XL2                             HH-MM
XXXXPHH  DS    XL1                             HH
XXXXPMM  DS    XL1                                MM
XXXXPSS  DS    XL2                                   SS
         DS    XL1
XXXXPYD  DS   0XL3                             YY-DDD
XXXXPYY  DS    XL1                             YY
XXXXPDDD DS    PL2                                DDD
         DS    XL3
XXXXPSEQ DS    XL1                             SEQ # (1)
XXXXPHSE EQU   *-XXXXPACK               PACK HEADER SIZE E
         SPACE 1
XXXXU    DSECT                     UNPK HEADER DSECT
XXXXUNPK DS   0CL32                            RECORD
XXXXUID  DS    CL8                             ID
XXXXUTME DS   0CL16                            HH-MM-SS-YY-DDD
XXXXUHMS DS   0CL8                             HH-MM-SS
XXXXUHM  DS   0CL4                             HH-MM
XXXXUHH  DS    CL2                             HH
XXXXUMM  DS    CL2                                MM
XXXXUSS  DS    CL4                                   SS
         DS    CL2
XXXXUYD  DS   0CL6                             YY-DDD
XXXXUYY  DS    CL2                             YY
XXXXUDDD DS    CL4                                DDD
         DS    CL6
XXXXUSEQ DS    CL2                             SEQ # (1)
         EJECT
         TAVTD
         TDISPD                         DSECT DISPATCHER
         TPRFD                                  BUFFER PREFIX
         TPRIOR                         DSECT PRIORITY
         END
